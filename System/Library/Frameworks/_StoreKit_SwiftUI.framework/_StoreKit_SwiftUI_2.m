uint64_t sub_22EBE4A74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  long long *v21;
  unint64_t v22;
  long long v23;
  long long v24;
  uint64_t v25;
  unsigned __int8 v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  unint64_t v35;
  void *v36;
  void *v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v6 = *(void *)a2;
  v7 = *(void *)(a2 + 8);
  v8 = *(void *)(a2 + 16);
  v9 = *(unsigned char *)(a2 + 24);
  sub_22EBE48E4(*(void *)a2, v7, v8, v9);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 24) = v9;
  v10 = *(void *)(*(void *)(a3 + 16) - 8);
  v11 = v10 + 16;
  v12 = *(unsigned __int8 *)(v10 + 80);
  v13 = (v12 + 25 + a1) & ~v12;
  v14 = (v12 + 25 + a2) & ~v12;
  (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v13, v14);
  v15 = *(void *)(v11 + 48);
  v16 = v15 + v13;
  v17 = v15 + v14;
  *(unsigned char *)v16 = *(unsigned char *)v17;
  v18 = v16 & 0xFFFFFFFFFFFFFFF8;
  v19 = (v16 & 0xFFFFFFFFFFFFFFF8) + 8;
  v20 = v17 & 0xFFFFFFFFFFFFFFF8;
  v21 = (long long *)((v17 & 0xFFFFFFFFFFFFFFF8) + 8);
  if (*(unsigned char *)((v17 & 0xFFFFFFFFFFFFFFF8) + 48))
  {
    v22 = *(void *)((v17 & 0xFFFFFFFFFFFFFFF8) + 32);
    if (v22 >= 3)
    {
      *(void *)((v16 & 0xFFFFFFFFFFFFFFF8) + 32) = v22;
      *(void *)((v16 & 0xFFFFFFFFFFFFFFF8) + 40) = *(void *)((v17 & 0xFFFFFFFFFFFFFFF8) + 40);
      (**(void (***)(unint64_t))(v22 - 8))(v19);
    }
    else
    {
      v23 = *v21;
      v24 = *(_OWORD *)((v17 & 0xFFFFFFFFFFFFFFF8) + 24);
      *(void *)((v16 & 0xFFFFFFFFFFFFFFF8) + 40) = *(void *)((v17 & 0xFFFFFFFFFFFFFFF8) + 40);
      *(_OWORD *)v19 = v23;
      *(_OWORD *)((v16 & 0xFFFFFFFFFFFFFFF8) + 24) = v24;
    }
    *(unsigned char *)(v19 + 40) = 1;
  }
  else
  {
    *(void *)v19 = *(void *)v21;
    *(unsigned char *)((v16 & 0xFFFFFFFFFFFFFFF8) + 48) = 0;
    swift_retain();
  }
  v25 = *(void *)(v20 + 56);
  v26 = *(unsigned char *)(v20 + 64);
  j__swift_retain(v25, v26);
  *(void *)(v18 + 56) = v25;
  *(unsigned char *)(v18 + 64) = v26;
  v27 = *(void *)(v20 + 72);
  v28 = *(unsigned char *)(v20 + 80);
  sub_22EADDF00(v27, v28);
  *(void *)(v18 + 72) = v27;
  *(unsigned char *)(v18 + 80) = v28;
  v29 = *(void *)(v20 + 88);
  v30 = *(void *)(v20 + 96);
  v31 = *(void *)(v20 + 104);
  v32 = *(void *)(v20 + 112);
  v33 = *(unsigned char *)(v20 + 120);
  sub_22EBE4908(v29, v30, v31, v32, v33);
  *(void *)(v18 + 88) = v29;
  *(void *)(v18 + 96) = v30;
  *(void *)(v18 + 104) = v31;
  *(void *)(v18 + 112) = v32;
  *(unsigned char *)(v18 + 120) = v33;
  *(void *)(v18 + 128) = *(void *)(v20 + 128);
  *(void *)(v18 + 136) = *(void *)(v20 + 136);
  v34 = (v18 + 151) & 0xFFFFFFFFFFFFFFF8;
  v35 = (v20 + 151) & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)v34 = *(unsigned char *)v35;
  *(void *)(v34 + 8) = *(void *)(v35 + 8);
  v36 = (void *)((v34 + 23) & 0xFFFFFFFFFFFFFFF8);
  v37 = (void *)((v35 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v36 = *v37;
  v36[1] = v37[1];
  v38 = ((unint64_t)v36 + 23) & 0xFFFFFFFFFFFFFFF8;
  v39 = ((unint64_t)v37 + 23) & 0xFFFFFFFFFFFFFFF8;
  v40 = *(void *)v39;
  v41 = *(unsigned char *)(v39 + 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_22EADDF00(v40, v41);
  *(void *)v38 = v40;
  *(unsigned char *)(v38 + 8) = v41;
  v42 = ((unint64_t)v36 + 39) & 0xFFFFFFFFFFFFFFF8;
  v43 = ((unint64_t)v37 + 39) & 0xFFFFFFFFFFFFFFF8;
  v44 = *(void *)v43;
  LOBYTE(v30) = *(unsigned char *)(v43 + 8);
  j__swift_retain(*(void *)v43, v30);
  *(void *)v42 = v44;
  *(unsigned char *)(v42 + 8) = v30;
  v45 = *(void *)(v43 + 16);
  LOBYTE(v30) = *(unsigned char *)(v43 + 24);
  j__swift_retain(v45, v30);
  *(void *)(v42 + 16) = v45;
  *(unsigned char *)(v42 + 24) = v30;
  v46 = *(void *)(v43 + 32);
  LOBYTE(v30) = *(unsigned char *)(v43 + 40);
  j__swift_retain(v46, v30);
  *(void *)(v42 + 32) = v46;
  *(unsigned char *)(v42 + 40) = v30;
  v47 = *(void *)(v43 + 48);
  v48 = *(void *)(v43 + 56);
  LOBYTE(v43) = *(unsigned char *)(v43 + 64);
  sub_22EBAD648(v47, v48, v43);
  *(void *)(v42 + 48) = v47;
  *(void *)(v42 + 56) = v48;
  *(unsigned char *)(v42 + 64) = v43;
  return a1;
}

uint64_t sub_22EBE4D5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  char v9 = *(unsigned char *)(a2 + 24);
  sub_22EBE48E4(*(void *)a2, v7, v8, v9);
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  char v13 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v9;
  sub_22EBE3B6C(v10, v11, v12, v13);
  uint64_t v14 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v15 = v14 + 24;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = (v16 + 25 + a1) & ~v16;
  uint64_t v18 = (v16 + 25 + a2) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 24))(v17, v18);
  uint64_t v19 = *(void *)(v15 + 40);
  unint64_t v20 = v19 + v17;
  unint64_t v21 = v19 + v18;
  *(unsigned char *)unint64_t v20 = *(unsigned char *)v21;
  unint64_t v22 = v20 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFF8;
  if ((v20 & 0xFFFFFFFFFFFFFFF8) != (v21 & 0xFFFFFFFFFFFFFFF8))
  {
    v24 = (_OWORD *)(v22 + 8);
    v25 = (long long *)(v23 + 8);
    sub_22EB56E1C(v22 + 8, &qword_26861BC48);
    if (*(unsigned char *)(v23 + 48))
    {
      unint64_t v26 = *(void *)(v23 + 32);
      if (v26 >= 3)
      {
        *(void *)(v22 + 32) = v26;
        *(void *)(v22 + 40) = *(void *)(v23 + 40);
        (**(void (***)(uint64_t, uint64_t))(v26 - 8))(v22 + 8, v23 + 8);
      }
      else
      {
        long long v27 = *v25;
        long long v28 = *(_OWORD *)(v23 + 24);
        *(void *)(v22 + 40) = *(void *)(v23 + 40);
        _OWORD *v24 = v27;
        *(_OWORD *)(v22 + 24) = v28;
      }
      *(unsigned char *)(v22 + 48) = 1;
    }
    else
    {
      *(void *)v24 = *(void *)v25;
      *(unsigned char *)(v22 + 48) = 0;
      swift_retain();
    }
  }
  uint64_t v29 = *(void *)(v23 + 56);
  unsigned __int8 v30 = *(unsigned char *)(v23 + 64);
  j__swift_retain(v29, v30);
  uint64_t v31 = *(void *)(v22 + 56);
  uint64_t v32 = *(unsigned __int8 *)(v22 + 64);
  *(void *)(v22 + 56) = v29;
  *(unsigned char *)(v22 + 64) = v30;
  j_j__swift_release(v31, v32);
  uint64_t v33 = *(void *)(v23 + 72);
  char v34 = *(unsigned char *)(v23 + 80);
  sub_22EADDF00(v33, v34);
  uint64_t v35 = *(void *)(v22 + 72);
  uint64_t v36 = *(unsigned __int8 *)(v22 + 80);
  *(void *)(v22 + 72) = v33;
  *(unsigned char *)(v22 + 80) = v34;
  sub_22EB19E28(v35, v36);
  uint64_t v37 = *(void *)(v23 + 88);
  uint64_t v38 = *(void *)(v23 + 96);
  uint64_t v39 = *(void *)(v23 + 104);
  uint64_t v40 = *(void *)(v23 + 112);
  char v41 = *(unsigned char *)(v23 + 120);
  sub_22EBE4908(v37, v38, v39, v40, v41);
  uint64_t v42 = *(void *)(v22 + 88);
  uint64_t v43 = *(void *)(v22 + 96);
  uint64_t v44 = *(void *)(v22 + 104);
  uint64_t v45 = *(void *)(v22 + 112);
  char v46 = *(unsigned char *)(v22 + 120);
  *(void *)(v22 + 88) = v37;
  *(void *)(v22 + 96) = v38;
  *(void *)(v22 + 104) = v39;
  *(void *)(v22 + 112) = v40;
  *(unsigned char *)(v22 + 120) = v41;
  sub_22EBE3B90(v42, v43, v44, v45, v46);
  *(void *)(v22 + 128) = *(void *)(v23 + 128);
  *(void *)(v22 + 136) = *(void *)(v23 + 136);
  swift_retain();
  swift_release();
  unint64_t v47 = (v22 + 151) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v48 = (v23 + 151) & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)unint64_t v47 = *(unsigned char *)v48;
  *(void *)(v47 + 8) = *(void *)(v48 + 8);
  swift_retain();
  swift_release();
  v49 = (void *)((v47 + 23) & 0xFFFFFFFFFFFFFFF8);
  v50 = (void *)((v48 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v49 = *v50;
  swift_retain();
  swift_release();
  v49[1] = v50[1];
  swift_retain();
  swift_release();
  unint64_t v51 = ((unint64_t)v49 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v52 = ((unint64_t)v50 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v53 = *(void *)v52;
  LOBYTE(v47) = *(unsigned char *)(v52 + 8);
  sub_22EADDF00(*(void *)v52, v47);
  uint64_t v54 = *(void *)v51;
  uint64_t v55 = *(unsigned __int8 *)(v51 + 8);
  *(void *)unint64_t v51 = v53;
  *(unsigned char *)(v51 + 8) = v47;
  sub_22EB19E28(v54, v55);
  unint64_t v56 = ((unint64_t)v49 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v57 = ((unint64_t)v50 + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v58 = *(void *)v57;
  LOBYTE(v47) = *(unsigned char *)(v57 + 8);
  j__swift_retain(*(void *)v57, v47);
  uint64_t v59 = *(void *)v56;
  uint64_t v60 = *(unsigned __int8 *)(v56 + 8);
  *(void *)unint64_t v56 = v58;
  *(unsigned char *)(v56 + 8) = v47;
  j_j__swift_release(v59, v60);
  uint64_t v61 = *(void *)(v57 + 16);
  LOBYTE(v47) = *(unsigned char *)(v57 + 24);
  j__swift_retain(v61, v47);
  uint64_t v62 = *(void *)(v56 + 16);
  uint64_t v63 = *(unsigned __int8 *)(v56 + 24);
  *(void *)(v56 + 16) = v61;
  *(unsigned char *)(v56 + 24) = v47;
  j_j__swift_release(v62, v63);
  uint64_t v64 = *(void *)(v57 + 32);
  LOBYTE(v47) = *(unsigned char *)(v57 + 40);
  j__swift_retain(v64, v47);
  uint64_t v65 = *(void *)(v56 + 32);
  uint64_t v66 = *(unsigned __int8 *)(v56 + 40);
  *(void *)(v56 + 32) = v64;
  *(unsigned char *)(v56 + 40) = v47;
  j_j__swift_release(v65, v66);
  uint64_t v67 = *(void *)(v57 + 48);
  uint64_t v68 = *(void *)(v57 + 56);
  LOBYTE(v57) = *(unsigned char *)(v57 + 64);
  sub_22EBAD648(v67, v68, v57);
  uint64_t v69 = *(void *)(v56 + 48);
  uint64_t v70 = *(void *)(v56 + 56);
  char v71 = *(unsigned char *)(v56 + 64);
  *(void *)(v56 + 48) = v67;
  *(void *)(v56 + 56) = v68;
  *(unsigned char *)(v56 + 64) = v57;
  sub_22EBAD8D0(v69, v70, v71);
  return a1;
}

_OWORD *sub_22EBE50F0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  *(_OWORD *)((char *)a1 + 9) = *(_OWORD *)((char *)a2 + 9);
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 32;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 25) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 25) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v7, v8);
  uint64_t v9 = *(void *)(v5 + 32);
  uint64_t v10 = v9 + v7;
  uint64_t v11 = v9 + v8;
  *(unsigned char *)uint64_t v10 = *(unsigned char *)v11;
  v10 &= 0xFFFFFFFFFFFFFFF8;
  v11 &= 0xFFFFFFFFFFFFFFF8;
  long long v12 = *(_OWORD *)(v11 + 24);
  long long v13 = *(_OWORD *)(v11 + 33);
  *(_OWORD *)(v10 + 8) = *(_OWORD *)(v11 + 8);
  *(_OWORD *)(v10 + 33) = v13;
  *(_OWORD *)(v10 + 24) = v12;
  uint64_t v14 = *(void *)(v11 + 56);
  *(unsigned char *)(v10 + 64) = *(unsigned char *)(v11 + 64);
  *(void *)(v10 + 56) = v14;
  LOBYTE(v14) = *(unsigned char *)(v11 + 80);
  *(void *)(v10 + 72) = *(void *)(v11 + 72);
  *(unsigned char *)(v10 + 80) = v14;
  LOBYTE(v14) = *(unsigned char *)(v11 + 120);
  long long v15 = *(_OWORD *)(v11 + 104);
  *(_OWORD *)(v10 + 88) = *(_OWORD *)(v11 + 88);
  *(_OWORD *)(v10 + 104) = v15;
  *(unsigned char *)(v10 + 120) = v14;
  *(_OWORD *)(v10 + 128) = *(_OWORD *)(v11 + 128);
  uint64_t v16 = (_OWORD *)((v10 + 151) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = (_OWORD *)((v11 + 151) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v16 = *v17;
  uint64_t v18 = (_OWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = (_OWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v18 = *v19;
  unint64_t v20 = ((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = ((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  *(void *)unint64_t v20 = v22;
  memcpy((void *)(((unint64_t)v18 + 39) & 0xFFFFFFFFFFFFFFF8), (const void *)(((unint64_t)v19 + 39) & 0xFFFFFFFFFFFFFFF8), 0x41uLL);
  return a1;
}

uint64_t sub_22EBE524C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v6;
  char v11 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v7;
  sub_22EBE3B6C(v8, v9, v10, v11);
  uint64_t v12 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v13 = v12 + 40;
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = (v14 + 25 + a1) & ~v14;
  uint64_t v16 = (v14 + 25 + a2) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v12 + 40))(v15, v16);
  uint64_t v17 = *(void *)(v13 + 24);
  unint64_t v18 = v17 + v15;
  unint64_t v19 = v17 + v16;
  *(unsigned char *)unint64_t v18 = *(unsigned char *)v19;
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFF8;
  if ((v18 & 0xFFFFFFFFFFFFFFF8) != (v19 & 0xFFFFFFFFFFFFFFF8))
  {
    sub_22EB56E1C(v20 + 8, &qword_26861BC48);
    long long v22 = *(_OWORD *)(v21 + 33);
    long long v23 = *(_OWORD *)(v21 + 24);
    *(_OWORD *)(v20 + 8) = *(_OWORD *)(v21 + 8);
    *(_OWORD *)(v20 + 24) = v23;
    *(_OWORD *)(v20 + 33) = v22;
  }
  char v24 = *(unsigned char *)(v21 + 64);
  uint64_t v25 = *(void *)(v20 + 56);
  uint64_t v26 = *(unsigned __int8 *)(v20 + 64);
  *(void *)(v20 + 56) = *(void *)(v21 + 56);
  *(unsigned char *)(v20 + 64) = v24;
  j_j__swift_release(v25, v26);
  char v27 = *(unsigned char *)(v21 + 80);
  uint64_t v28 = *(void *)(v20 + 72);
  uint64_t v29 = *(unsigned __int8 *)(v20 + 80);
  *(void *)(v20 + 72) = *(void *)(v21 + 72);
  *(unsigned char *)(v20 + 80) = v27;
  sub_22EB19E28(v28, v29);
  char v30 = *(unsigned char *)(v21 + 120);
  uint64_t v31 = *(void *)(v20 + 88);
  uint64_t v32 = *(void *)(v20 + 96);
  uint64_t v33 = *(void *)(v20 + 104);
  uint64_t v34 = *(void *)(v20 + 112);
  char v35 = *(unsigned char *)(v20 + 120);
  long long v36 = *(_OWORD *)(v21 + 104);
  *(_OWORD *)(v20 + 88) = *(_OWORD *)(v21 + 88);
  *(_OWORD *)(v20 + 104) = v36;
  *(unsigned char *)(v20 + 120) = v30;
  sub_22EBE3B90(v31, v32, v33, v34, v35);
  *(void *)(v20 + 128) = *(void *)(v21 + 128);
  *(void *)(v20 + 136) = *(void *)(v21 + 136);
  swift_release();
  unint64_t v37 = (v20 + 151) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v38 = (v21 + 151) & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)unint64_t v37 = *(unsigned char *)v38;
  *(void *)(v37 + 8) = *(void *)(v38 + 8);
  swift_release();
  uint64_t v39 = (void *)((v37 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v40 = (void *)((v38 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v39 = *v40;
  swift_release();
  v39[1] = v40[1];
  swift_release();
  unint64_t v41 = ((unint64_t)v39 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v42 = ((unint64_t)v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v43 = *(void *)v42;
  LOBYTE(v42) = *(unsigned char *)(v42 + 8);
  uint64_t v44 = *(void *)v41;
  uint64_t v45 = *(unsigned __int8 *)(v41 + 8);
  *(void *)unint64_t v41 = v43;
  *(unsigned char *)(v41 + 8) = v42;
  sub_22EB19E28(v44, v45);
  unint64_t v46 = ((unint64_t)v39 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v47 = ((unint64_t)v40 + 39) & 0xFFFFFFFFFFFFFFF8;
  char v48 = *(unsigned char *)(v47 + 8);
  uint64_t v49 = *(void *)v46;
  uint64_t v50 = *(unsigned __int8 *)(v46 + 8);
  *(void *)unint64_t v46 = *(void *)v47;
  *(unsigned char *)(v46 + 8) = v48;
  j_j__swift_release(v49, v50);
  char v51 = *(unsigned char *)(v47 + 24);
  uint64_t v52 = *(void *)(v46 + 16);
  uint64_t v53 = *(unsigned __int8 *)(v46 + 24);
  *(void *)(v46 + 16) = *(void *)(v47 + 16);
  *(unsigned char *)(v46 + 24) = v51;
  j_j__swift_release(v52, v53);
  char v54 = *(unsigned char *)(v47 + 40);
  uint64_t v55 = *(void *)(v46 + 32);
  uint64_t v56 = *(unsigned __int8 *)(v46 + 40);
  *(void *)(v46 + 32) = *(void *)(v47 + 32);
  *(unsigned char *)(v46 + 40) = v54;
  j_j__swift_release(v55, v56);
  char v57 = *(unsigned char *)(v47 + 64);
  uint64_t v58 = *(void *)(v46 + 48);
  uint64_t v59 = *(void *)(v46 + 56);
  char v60 = *(unsigned char *)(v46 + 64);
  *(_OWORD *)(v46 + 48) = *(_OWORD *)(v47 + 48);
  *(unsigned char *)(v46 + 64) = v57;
  sub_22EBAD8D0(v58, v59, v60);
  return a1;
}

uint64_t sub_22EBE54C4(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = *(void *)(v5 + 64);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v5 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v9 < a2)
  {
    unint64_t v10 = ((((((((((v7 + 25) & ~v7) + v8) & 0xFFFFFFFFFFFFFFF8) + 151) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
          + 39) & 0xFFFFFFFFFFFFFFF8)
        + 65;
    unsigned int v11 = (a2 - v9 + 255) >> (8
                            * (((((((((((v7 + 25) & ~(_BYTE)v7) + v8) & 0xF8) - 105) & 0xF8) + 23) & 0xF8) + 39) & 0xF8)
                             + 65));
    if (v10 < 4) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      unsigned int v13 = 4;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v12 < 0x100) {
      unsigned int v13 = 1;
    }
    if (v12 >= 2) {
      uint64_t v14 = v13;
    }
    else {
      uint64_t v14 = 0;
    }
    switch(v14)
    {
      case 1:
        int v15 = a1[v10];
        if (!a1[v10]) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v15 = *(unsigned __int16 *)&a1[v10];
        if (*(_WORD *)&a1[v10]) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x22EBE565CLL);
      case 4:
        int v15 = *(_DWORD *)&a1[v10];
        if (!v15) {
          break;
        }
LABEL_22:
        int v17 = (v15 - 1) << (8
                          * (((((((((((v7 + 25) & ~(_BYTE)v7) + v8) & 0xF8) - 105) & 0xF8) + 23) & 0xF8) + 39) & 0xF8)
                           + 65));
        if (v10 >= 4) {
          int v17 = 0;
        }
        if (((((((((((v7 + 25) & ~v7) + v8) & 0xFFFFFFF8) + 151) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8)
             + 39) & 0xFFFFFFF8) == 0xFFFFFFC0)
          int v18 = *a1;
        else {
          int v18 = *(_DWORD *)a1;
        }
        return v9 + (v18 | v17) + 1;
      default:
        break;
    }
  }
  uint64_t v19 = (unint64_t)&a1[v7 + 25] & ~v7;
  if (v6 >= 0x7FFFFFFF) {
    return __swift_getEnumTagSinglePayload(v19, v6, v4);
  }
  unint64_t v20 = *(void *)((((((v19 + v8) & 0xFFFFFFFFFFFFFFF8) + 151) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);
  if (v20 >= 0xFFFFFFFF) {
    LODWORD(v20) = -1;
  }
  return (v20 + 1);
}

void sub_22EBE5670(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = *(void *)(*(void *)(v6 - 8) + 64);
  size_t v12 = ((((((((((v10 + 25) & ~v10) + v11) & 0xFFFFFFFFFFFFFFF8) + 151) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 39) & 0xFFFFFFFFFFFFFFF8)
      + 65;
  char v13 = 8 * (((((((((((v10 + 25) & ~(_BYTE)v10) + v11) & 0xF8) - 105) & 0xF8) + 23) & 0xF8) + 39) & 0xF8) + 65);
  if (v9 >= a3)
  {
    int v17 = 0;
  }
  else
  {
    unsigned int v14 = (a3 - v9 + 255) >> v13;
    if (v12 <= 3) {
      unsigned int v15 = v14 + 1;
    }
    else {
      unsigned int v15 = 2;
    }
    if (v15 >= 0x10000) {
      int v16 = 4;
    }
    else {
      int v16 = 2;
    }
    if (v15 < 0x100) {
      int v16 = 1;
    }
    if (v15 >= 2) {
      int v17 = v16;
    }
    else {
      int v17 = 0;
    }
  }
  if (v9 < a2)
  {
    if (v12 < 4) {
      unsigned int v18 = ((~v9 + a2) >> v13) + 1;
    }
    else {
      unsigned int v18 = 1;
    }
    if (v12 >= 4) {
      int v19 = ~v9 + a2;
    }
    else {
      int v19 = (~(_BYTE)v9 + a2);
    }
    bzero(a1, v12);
    if (v12 == 1) {
      *a1 = v19;
    }
    else {
      *(_DWORD *)a1 = v19;
    }
    switch(v17)
    {
      case 1:
        a1[v12] = v18;
        return;
      case 2:
        *(_WORD *)&a1[v12] = v18;
        return;
      case 3:
        goto LABEL_47;
      case 4:
        *(_DWORD *)&a1[v12] = v18;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v12] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_34;
    case 2:
      *(_WORD *)&a1[v12] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_34;
    case 3:
LABEL_47:
      __break(1u);
      JUMPOUT(0x22EBE58ACLL);
    case 4:
      *(_DWORD *)&a1[v12] = 0;
      goto LABEL_33;
    default:
LABEL_33:
      if (a2)
      {
LABEL_34:
        unint64_t v20 = (unint64_t)&a1[v10 + 25] & ~v10;
        if (v8 < 0x7FFFFFFF)
        {
          unint64_t v21 = (void *)((((((v20 + v11) & 0xFFFFFFFFFFFFFFF8) + 151) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v22 = a2 ^ 0x80000000;
            v21[1] = 0;
          }
          else
          {
            uint64_t v22 = (a2 - 1);
          }
          *unint64_t v21 = v22;
        }
        else
        {
          __swift_storeEnumTagSinglePayload(v20, a2, v8, v6);
        }
      }
      return;
  }
}

ValueMetadata *type metadata accessor for AutomaticSubscriptionStoreMarketingContent()
{
  return &type metadata for AutomaticSubscriptionStoreMarketingContent;
}

ValueMetadata *type metadata accessor for Product.SubscriptionRelationship()
{
  return &type metadata for Product.SubscriptionRelationship;
}

uint64_t sub_22EBE58F4()
{
  return swift_getWitnessTable();
}

uint64_t sub_22EBE5E14()
{
  return sub_22EBE5E5C(qword_2686200A0, (void (*)(uint64_t))type metadata accessor for SubscriptionStoreDefaultMarketingView);
}

uint64_t sub_22EBE5E5C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22EBE5EA4(uint64_t a1)
{
  return sub_22EBE3B6C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t sub_22EBE5EB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_22EBE48E4(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t sub_22EBE5F18(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_22EBE48E4(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  char v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_22EBE3B6C(v7, v8, v9, v10);
  return a1;
}

uint64_t sub_22EBE5F88(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  char v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_22EBE3B6C(v5, v7, v6, v8);
  return a1;
}

uint64_t sub_22EBE5FD8(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 25))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_22EBE6018(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_22EBE6060(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_22EBE6068(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = a2;
  return result;
}

uint64_t sub_22EBE6070(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_4_2();
  uint64_t v4 = OUTLINED_FUNCTION_16_0();
  v5(v4);
  return a2;
}

void sub_22EBE60D8(uint64_t a1@<X8>)
{
  *(double *)a1 = sub_22ECD8BBC();
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
}

uint64_t sub_22EBE6134(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_4_2();
  uint64_t v4 = OUTLINED_FUNCTION_16_0();
  v5(v4);
  return a2;
}

uint64_t sub_22EBE618C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_5_2();
  v3();
  return a1;
}

char *OUTLINED_FUNCTION_5_13@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_7_17(uint64_t a1)
{
  uint64_t v2 = v1[68];
  *(void *)(a1 + 16) = v1[69];
  *(void *)(a1 + 24) = v2;
  return a1 + v1[57];
}

uint64_t OUTLINED_FUNCTION_10_13(uint64_t result)
{
  *(void *)uint64_t v1 = result;
  *(unsigned char *)(v1 + 8) = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_11_13()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_13_13()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_17_12()
{
  return sub_22EE7CEE0();
}

void OUTLINED_FUNCTION_18_10(void *a1@<X8>)
{
  *a1 = v1;
}

uint64_t OUTLINED_FUNCTION_21_9()
{
  return v0;
}

uint64_t sub_22EBE62C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_22EE7C220();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E620);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_22EE7F6E0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  size_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  unsigned int v14 = (char *)&v25 - v13;
  sub_22EBB1000(a1, (uint64_t)&v28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861D9F0);
  if (swift_dynamicCast())
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v8);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
    sub_22ECC5800((uint64_t)v12);
    sub_22ED905C4();
    unsigned int v15 = *(void (**)(char *, uint64_t))(v9 + 8);
    v15(v12, v8);
    *(void *)&long long v25 = sub_22EE7E140();
    *((void *)&v25 + 1) = v16;
    *(void *)&long long v26 = v17 & 1;
    *((void *)&v26 + 1) = v18;
    char v27 = 0;
    sub_22EBE6D3C();
    sub_22EE7D800();
    uint64_t v19 = v28;
    uint64_t v20 = v29;
    uint64_t v21 = v30;
    uint64_t v22 = v31;
    char v23 = v32;
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v15)(v14, v8);
  }
  else
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 1, 1, v8);
    sub_22EADD81C((uint64_t)v7, &qword_26861E620);
    long long v25 = 0u;
    long long v26 = 0u;
    char v27 = 1;
    sub_22EBE6D3C();
    uint64_t result = sub_22EE7D800();
    uint64_t v19 = v28;
    uint64_t v20 = v29;
    uint64_t v21 = v30;
    uint64_t v22 = v31;
    char v23 = v32;
  }
  *(void *)a2 = v19;
  *(void *)(a2 + 8) = v20;
  *(void *)(a2 + 16) = v21;
  *(void *)(a2 + 24) = v22;
  *(unsigned char *)(a2 + 32) = v23;
  return result;
}

uint64_t sub_22EBE65B0()
{
  return sub_22EE807C0();
}

uint64_t sub_22EBE65D8()
{
  return sub_22EE807F0();
}

uint64_t sub_22EBE6624()
{
  return sub_22EE807F0();
}

double AutomaticSubscriptionOptionGroupLabel.body.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 40);
  char v4 = *(unsigned char *)(v1 + 48);
  sub_22EADDF00(v3, v4);
  sub_22EB186C4();
  int v6 = v5;
  sub_22EADDB08(v3, v4);
  if (v6 == 1)
  {
    sub_22EBE6C58(v1, (uint64_t)&v102);
    if (*((void *)&v103 + 1))
    {
      sub_22EAE6550(&v102, (uint64_t)&v106);
      uint64_t v7 = sub_22EBE62C0((uint64_t)&v106, (uint64_t)&v102);
      OUTLINED_FUNCTION_2_8(v7, v8, v9, v10, v11, v12, v13, v14, v56, v59, v62, v67, v70, v75, v78, v81, v84, v87, v90,
        v93,
        v96,
        v99,
        v102);
      __int16 v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620148);
      int v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620150);
      sub_22EBE6CC0();
      sub_22EBE6D88();
      uint64_t v17 = sub_22EE7D800();
      OUTLINED_FUNCTION_1_19(v17, v18, v19, v20, v21, v22, v23, v24, v57, v60, v63, v68, v71, v76, v79, v82, v85, v88, v91,
        v94,
        v97,
        v100,
        v102,
        *((uint64_t *)&v102 + 1),
        v103);
      sub_22EADD81C((uint64_t)&v106, &qword_268620190);
      long long v26 = v64;
      long long v25 = v72;
    }
    else
    {
      sub_22EADD81C((uint64_t)&v102, &qword_268620140);
      *(void *)&long long v102 = sub_22EBE69E8;
      *((void *)&v102 + 1) = 0;
      long long v103 = 0uLL;
      __int16 v104 = 256;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268620148);
      __swift_instantiateConcreteTypeFromMangledName(&qword_268620150);
      sub_22EBE6CC0();
      sub_22EBE6D88();
      OUTLINED_FUNCTION_0_13();
      long long v25 = v106;
      long long v26 = v107;
      __int16 v15 = v108;
      int v16 = HIBYTE(v108);
    }
    if (v16) {
      __int16 v46 = 256;
    }
    else {
      __int16 v46 = 0;
    }
    long long v102 = v25;
    long long v103 = v26;
    __int16 v104 = v46 | v15;
    char v105 = 1;
  }
  else
  {
    sub_22EBE6C58(v1, (uint64_t)&v102);
    if (*((void *)&v103 + 1))
    {
      sub_22EAE6550(&v102, (uint64_t)&v106);
      uint64_t v27 = sub_22EBE62C0((uint64_t)&v106, (uint64_t)&v102);
      OUTLINED_FUNCTION_2_8(v27, v28, v29, v30, v31, v32, v33, v34, v56, v59, v62, v67, v70, v75, v78, v81, v84, v87, v90,
        v93,
        v96,
        v99,
        v102);
      __int16 v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620148);
      sub_22EBE6CC0();
      uint64_t v36 = sub_22EE7D800();
      OUTLINED_FUNCTION_1_19(v36, v37, v38, v39, v40, v41, v42, v43, v58, v61, v65, v69, v73, v77, v80, v83, v86, v89, v92,
        v95,
        v98,
        v101,
        v102,
        *((uint64_t *)&v102 + 1),
        v103);
      sub_22EADD81C((uint64_t)&v106, &qword_268620190);
      long long v45 = v66;
      long long v44 = v74;
    }
    else
    {
      sub_22EADD81C((uint64_t)&v102, &qword_268620140);
      sub_22EE7D5A0();
      if (qword_26861B690 != -1) {
        swift_once();
      }
      id v47 = (id)qword_26864BFA0;
      *(void *)&long long v102 = sub_22EE7E120();
      *((void *)&v102 + 1) = v48;
      *(void *)&long long v103 = v49 & 1;
      *((void *)&v103 + 1) = v50;
      __int16 v104 = 256;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268620148);
      sub_22EBE6CC0();
      sub_22EE7D800();
      long long v44 = v106;
      long long v45 = v107;
      __int16 v35 = v108;
      LODWORD(v3) = HIBYTE(v108);
    }
    if (v3) {
      __int16 v51 = 256;
    }
    else {
      __int16 v51 = 0;
    }
    long long v102 = v44;
    long long v103 = v45;
    __int16 v104 = v51 | v35;
    char v105 = 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_268620170);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268620178);
  sub_22EBE6E04();
  sub_22EBE6E80();
  OUTLINED_FUNCTION_0_13();
  double result = *(double *)&v106;
  long long v53 = v107;
  __int16 v54 = v108;
  char v55 = v109;
  *(_OWORD *)a1 = v106;
  *(_OWORD *)(a1 + 16) = v53;
  *(_WORD *)(a1 + 32) = v54;
  *(unsigned char *)(a1 + 34) = v55;
  return result;
}

uint64_t sub_22EBE69E8()
{
  uint64_t v0 = type metadata accessor for SKLogger();
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26861B778 != -1) {
    swift_once();
  }
  uint64_t v3 = __swift_project_value_buffer(v0, (uint64_t)qword_26864C398);
  sub_22EB107F0(v3, (uint64_t)v2);
  os_log_type_t v4 = sub_22EE7FFD0();
  unsigned __int8 v5 = sub_22EE7C550();
  os_log_type_t v6 = v4;
  if (os_log_type_enabled(v5, v4))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v11 = v8;
    *(_DWORD *)uint64_t v7 = 136446466;
    uint64_t v10 = sub_22EC1FA24(0, 0xE000000000000000, &v11);
    sub_22EE800B0();
    *(_WORD *)(v7 + 12) = 2082;
    uint64_t v10 = sub_22EC1FA24(0xD00000000000003ALL, 0x800000022EE835B0, &v11);
    sub_22EE800B0();
    _os_log_impl(&dword_22EAC6000, v5, v6, "%{public}s%{public}s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x230FAE500](v8, -1, -1);
    MEMORY[0x230FAE500](v7, -1, -1);
  }

  return sub_22EB31B10((uint64_t)v2);
}

uint64_t sub_22EBE6BE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_22EE7E8B0();
  uint64_t v3 = sub_22EE7E7D0();
  uint64_t v4 = sub_22EE7E770();
  uint64_t result = sub_22EE7DE70();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = result;
  return result;
}

uint64_t sub_22EBE6C58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620140);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_22EBE6CC0()
{
  unint64_t result = qword_268620158;
  if (!qword_268620158)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620148);
    sub_22EBE6D3C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620158);
  }
  return result;
}

unint64_t sub_22EBE6D3C()
{
  unint64_t result = qword_268620160;
  if (!qword_268620160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620160);
  }
  return result;
}

unint64_t sub_22EBE6D88()
{
  unint64_t result = qword_268620168;
  if (!qword_268620168)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620150);
    sub_22EBE6D3C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620168);
  }
  return result;
}

unint64_t sub_22EBE6E04()
{
  unint64_t result = qword_268620180;
  if (!qword_268620180)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620170);
    sub_22EBE6CC0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620180);
  }
  return result;
}

uint64_t sub_22EBE6E80()
{
  return sub_22EBE725C(&qword_268620188, &qword_268620178, (void (*)(void))sub_22EBE6CC0, (void (*)(void))sub_22EBE6D88);
}

uint64_t sub_22EBE6EBC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for AutomaticSubscriptionOptionGroupLabel(uint64_t a1)
{
  if (*(void *)(a1 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  uint64_t v2 = *(void *)(a1 + 40);
  char v3 = *(unsigned char *)(a1 + 48);

  return sub_22EADDB08(v2, v3);
}

uint64_t initializeWithCopy for AutomaticSubscriptionOptionGroupLabel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  uint64_t v7 = *(void *)(a2 + 40);
  char v8 = *(unsigned char *)(a2 + 48);
  sub_22EADDF00(v7, v8);
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = v8;
  return a1;
}

uint64_t assignWithCopy for AutomaticSubscriptionOptionGroupLabel(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 3);
  if (*(void *)(a1 + 24))
  {
    if (v4)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
    }
    else
    {
      sub_22EADD81C(a1, &qword_268620190);
      uint64_t v5 = *((void *)a2 + 4);
      long long v6 = a2[1];
      *(_OWORD *)a1 = *a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(void *)(a1 + 32) = v5;
    }
  }
  else if (v4)
  {
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
  }
  else
  {
    long long v7 = *a2;
    long long v8 = a2[1];
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(_OWORD *)a1 = v7;
    *(_OWORD *)(a1 + 16) = v8;
  }
  uint64_t v9 = *((void *)a2 + 5);
  char v10 = *((unsigned char *)a2 + 48);
  sub_22EADDF00(v9, v10);
  uint64_t v11 = *(void *)(a1 + 40);
  char v12 = *(unsigned char *)(a1 + 48);
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = v10;
  sub_22EADDB08(v11, v12);
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AutomaticSubscriptionOptionGroupLabel(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    if (*(void *)(a2 + 24)) {
      __swift_destroy_boxed_opaque_existential_1(a1);
    }
    else {
      sub_22EADD81C(a1, &qword_268620190);
    }
  }
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  char v6 = *(unsigned char *)(a2 + 48);
  uint64_t v7 = *(void *)(a1 + 40);
  char v8 = *(unsigned char *)(a1 + 48);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = v6;
  sub_22EADDB08(v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for AutomaticSubscriptionOptionGroupLabel(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 49))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 24);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AutomaticSubscriptionOptionGroupLabel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AutomaticSubscriptionOptionGroupLabel()
{
  return &type metadata for AutomaticSubscriptionOptionGroupLabel;
}

uint64_t sub_22EBE720C()
{
  return sub_22EBE725C(&qword_268620198, &qword_2686201A0, (void (*)(void))sub_22EBE6E04, (void (*)(void))sub_22EBE6E80);
}

uint64_t sub_22EBE725C(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for AutomaticSubscriptionOptionGroupLabel.InvalidLabel()
{
  return &type metadata for AutomaticSubscriptionOptionGroupLabel.InvalidLabel;
}

uint64_t getEnumTagSinglePayload for AutomaticSubscriptionOptionGroupLabel.StandardLabel(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for AutomaticSubscriptionOptionGroupLabel.StandardLabel(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x22EBE73E4);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AutomaticSubscriptionOptionGroupLabel.StandardLabel()
{
  return &type metadata for AutomaticSubscriptionOptionGroupLabel.StandardLabel;
}

unint64_t sub_22EBE7420()
{
  unint64_t result = qword_2686201A8;
  if (!qword_2686201A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686201A8);
  }
  return result;
}

uint64_t sub_22EBE746C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_22EBE748C()
{
  unint64_t result = qword_2686201B0;
  if (!qword_2686201B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686201B8);
    sub_22EBE752C();
    sub_22EADDD7C(&qword_2686201D0, &qword_2686201D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686201B0);
  }
  return result;
}

unint64_t sub_22EBE752C()
{
  unint64_t result = qword_2686201C0;
  if (!qword_2686201C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686201C8);
    sub_22EADDD7C(&qword_26861C200, &qword_26861C1E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686201C0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_13()
{
  return sub_22EE7D800();
}

__n128 OUTLINED_FUNCTION_1_19(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,long long a25)
{
  return (__n128)a25;
}

__n128 OUTLINED_FUNCTION_2_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,long long a23)
{
  return (__n128)a23;
}

uint64_t sub_22EBE7624@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_22EE7D590();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v4 = v1 + *(int *)(type metadata accessor for SubscriptionPickerSubscribeButtonModel() + 20);
  uint64_t v5 = *(void *)(v4 + 16);
  switch(v5)
  {
    case 0:
    case 2:
      sub_22EDDEEFC();
      OUTLINED_FUNCTION_1_20(v6, v7, v8, v9);
      goto LABEL_4;
    case 1:
      uint64_t v17 = *(void *)(v1 + *(int *)(type metadata accessor for SubscriptionStoreCopyWriter(0) + 36));
      if ((v17 & 8) != 0)
      {
        sub_22EE7D580();
        sub_22EE7D570();
        sub_22EE7D560();
        sub_22EE7D570();
        uint64_t v19 = sub_22EE7D5B0();
      }
      else
      {
        uint64_t v18 = unk_26E26ACC0;
        if ((unk_26E26ACC0 & ~qword_26E26ACB8) == 0) {
          uint64_t v18 = 0;
        }
        if (((v18 | qword_26E26ACB8) & v17) != 0)
        {
          uint64_t v19 = sub_22ED92080();
        }
        else
        {
          swift_bridgeObjectRetain();
          uint64_t v19 = sub_22EE7D5A0();
        }
      }
      OUTLINED_FUNCTION_1_20(v19, v20, v21, v22);
      type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(0);
      return swift_storeEnumTagMultiPayload();
    case 3:
      sub_22EDDF34C();
      uint64_t v23 = a1 + *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
      sub_22EDDF34C();
      uint64_t v24 = _s11PriceStringOMa(0);
      __swift_storeEnumTagSinglePayload(v23, 0, 1, v24);
      type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(0);
      goto LABEL_11;
    default:
      uint64_t v10 = *(void *)(v4 + 32);
      char v11 = *(unsigned char *)(v4 + 24);
      uint64_t v12 = *(void *)(v4 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v13 = OUTLINED_FUNCTION_2_9();
      sub_22EB19C18(v13, v14);
      uint64_t v15 = OUTLINED_FUNCTION_2_9();
      sub_22EB19D6C(v15, v16);
      *(void *)a1 = v12;
      *(void *)(a1 + 8) = v5;
      *(unsigned char *)(a1 + 16) = v11 & 1;
      *(void *)(a1 + 24) = v10;
LABEL_4:
      type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(0);
LABEL_11:
      return swift_storeEnumTagMultiPayload();
  }
}

uint64_t type metadata accessor for SubscriptionPickerSubscribeButtonModel()
{
  uint64_t result = qword_2686201E0;
  if (!qword_2686201E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_22EBE791C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v19 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    uint64_t v8 = *(void *)(a2 + 8);
    char v9 = *(unsigned char *)(a2 + 16);
    sub_22EB0E200(*(void *)a2, v8, v9);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(unsigned char *)(a1 + 16) = v9;
    uint64_t v10 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v10;
    uint64_t v11 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v11;
    uint64_t v12 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = v12;
    uint64_t v13 = (int *)type metadata accessor for SubscriptionStoreCopyWriter(0);
    uint64_t v14 = v13[8];
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (const void *)(a2 + v14);
    uint64_t v17 = sub_22EE7F6E0();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E620);
      memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v17);
    }
    *(void *)(a1 + v13[9]) = *(void *)(a2 + v13[9]);
    uint64_t v20 = v13[10];
    char v21 = (void *)(a1 + v20);
    uint64_t v22 = (const void *)(a2 + v20);
    uint64_t v23 = sub_22EE7F670();
    if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v23))
    {
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
      memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
      __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v23);
    }
    uint64_t v25 = *(int *)(a3 + 20);
    uint64_t v26 = a1 + v25;
    uint64_t v27 = a2 + v25;
    char v28 = *(unsigned char *)(a2 + v25);
    uint64_t v29 = (unsigned char *)(a1 + v25);
    *uint64_t v29 = v28;
    uint64_t v30 = v29 + 8;
    unint64_t v31 = *(void *)(v27 + 16);
    if (v31 >= 4)
    {
      *(void *)(v26 + 8) = *(void *)(v27 + 8);
      *(void *)(v26 + 16) = v31;
      *(unsigned char *)(v26 + 24) = *(unsigned char *)(v27 + 24);
      *(void *)(v26 + 32) = *(void *)(v27 + 32);
      uint64_t v34 = *(void *)(v27 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v34)
      {
        *(void *)(v26 + 40) = *(void *)(v27 + 40);
        *(void *)(v26 + 48) = v34;
        *(unsigned char *)(v26 + 56) = *(unsigned char *)(v27 + 56);
        *(void *)(v26 + 64) = *(void *)(v27 + 64);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v35 = *(_OWORD *)(v27 + 56);
        *(_OWORD *)(v26 + 40) = *(_OWORD *)(v27 + 40);
        *(_OWORD *)(v26 + 56) = v35;
      }
    }
    else
    {
      long long v32 = *(_OWORD *)(v27 + 24);
      *uint64_t v30 = *(_OWORD *)(v27 + 8);
      v30[1] = v32;
      long long v33 = *(_OWORD *)(v27 + 56);
      v30[2] = *(_OWORD *)(v27 + 40);
      v30[3] = v33;
    }
    *(unsigned char *)(v26 + 72) = *(unsigned char *)(v27 + 72);
  }
  return a1;
}

unint64_t sub_22EBE7C14(uint64_t a1, uint64_t a2)
{
  sub_22EADB1A4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for SubscriptionStoreCopyWriter(0);
  uint64_t v5 = a1 + *(int *)(v4 + 32);
  uint64_t v6 = sub_22EE7F6E0();
  if (!__swift_getEnumTagSinglePayload(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  uint64_t v7 = a1 + *(int *)(v4 + 40);
  uint64_t v8 = sub_22EE7F670();
  if (!__swift_getEnumTagSinglePayload(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  uint64_t v9 = a1 + *(int *)(a2 + 20);
  unint64_t result = *(void *)(v9 + 16);
  if (result >= 4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t result = *(void *)(v9 + 48);
    if (result)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_22EBE7D80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  char v8 = *(unsigned char *)(a2 + 16);
  sub_22EB0E200(*(void *)a2, v7, v8);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  uint64_t v9 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v9;
  uint64_t v10 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v10;
  uint64_t v11 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v11;
  uint64_t v12 = (int *)type metadata accessor for SubscriptionStoreCopyWriter(0);
  uint64_t v13 = v12[8];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  uint64_t v16 = sub_22EE7F6E0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E620);
    memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
  }
  *(void *)(a1 + v12[9]) = *(void *)(a2 + v12[9]);
  uint64_t v18 = v12[10];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (const void *)(a2 + v18);
  uint64_t v21 = sub_22EE7F670();
  if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21))
  {
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
    memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v21);
  }
  uint64_t v23 = *(int *)(a3 + 20);
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  char v26 = *(unsigned char *)(a2 + v23);
  uint64_t v27 = (unsigned char *)(a1 + v23);
  *uint64_t v27 = v26;
  char v28 = v27 + 8;
  unint64_t v29 = *(void *)(v25 + 16);
  if (v29 >= 4)
  {
    *(void *)(v24 + 8) = *(void *)(v25 + 8);
    *(void *)(v24 + 16) = v29;
    *(unsigned char *)(v24 + 24) = *(unsigned char *)(v25 + 24);
    *(void *)(v24 + 32) = *(void *)(v25 + 32);
    uint64_t v32 = *(void *)(v25 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v32)
    {
      *(void *)(v24 + 40) = *(void *)(v25 + 40);
      *(void *)(v24 + 48) = v32;
      *(unsigned char *)(v24 + 56) = *(unsigned char *)(v25 + 56);
      *(void *)(v24 + 64) = *(void *)(v25 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v33 = *(_OWORD *)(v25 + 56);
      *(_OWORD *)(v24 + 40) = *(_OWORD *)(v25 + 40);
      *(_OWORD *)(v24 + 56) = v33;
    }
  }
  else
  {
    long long v30 = *(_OWORD *)(v25 + 24);
    *char v28 = *(_OWORD *)(v25 + 8);
    v28[1] = v30;
    long long v31 = *(_OWORD *)(v25 + 56);
    v28[2] = *(_OWORD *)(v25 + 40);
    v28[3] = v31;
  }
  *(unsigned char *)(v24 + 72) = *(unsigned char *)(v25 + 72);
  return a1;
}

uint64_t sub_22EBE8028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  char v8 = *(unsigned char *)(a2 + 16);
  sub_22EB0E200(*(void *)a2, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  char v11 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  sub_22EADB1A4(v9, v10, v11);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = (int *)type metadata accessor for SubscriptionStoreCopyWriter(0);
  uint64_t v13 = v12[8];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  uint64_t v16 = sub_22EE7F6E0();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v16);
  int v18 = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16);
  if (EnumTagSinglePayload)
  {
    if (!v18)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v19 = *(void *)(v16 - 8);
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v19 + 8))(v14, v16);
LABEL_6:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E620);
    memcpy(v14, v15, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v19 + 24))(v14, v15, v16);
LABEL_7:
  *(void *)(a1 + v12[9]) = *(void *)(a2 + v12[9]);
  uint64_t v21 = v12[10];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (const void *)(a2 + v21);
  uint64_t v24 = sub_22EE7F670();
  int v25 = __swift_getEnumTagSinglePayload((uint64_t)v22, 1, v24);
  int v26 = __swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
      __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v24);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v27 = *(void *)(v24 - 8);
  if (v26)
  {
    (*(void (**)(void *, uint64_t))(v27 + 8))(v22, v24);
LABEL_12:
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
    memcpy(v22, v23, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(v27 + 24))(v22, v23, v24);
LABEL_13:
  uint64_t v29 = *(int *)(a3 + 20);
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  *(unsigned char *)(a1 + v29) = *(unsigned char *)(a2 + v29);
  uint64_t v32 = (long long *)(a1 + v29 + 8);
  long long v33 = (long long *)(v31 + 8);
  unint64_t v34 = *(void *)(a1 + v29 + 16);
  unint64_t v35 = *(void *)(v31 + 16);
  if (v34 < 4)
  {
    if (v35 < 4)
    {
      long long v36 = *v33;
      long long v37 = *(_OWORD *)(v31 + 24);
      long long v38 = *(_OWORD *)(v31 + 56);
      v32[2] = *(_OWORD *)(v31 + 40);
      v32[3] = v38;
LABEL_16:
      *uint64_t v32 = v36;
      v32[1] = v37;
      goto LABEL_29;
    }
    *(void *)(v30 + 8) = *(void *)(v31 + 8);
    *(void *)(v30 + 16) = *(void *)(v31 + 16);
    *(unsigned char *)(v30 + 24) = *(unsigned char *)(v31 + 24);
    *(void *)(v30 + 32) = *(void *)(v31 + 32);
    uint64_t v42 = *(void *)(v31 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!v42)
    {
      long long v43 = *(_OWORD *)(v31 + 56);
      *(_OWORD *)(v30 + 40) = *(_OWORD *)(v31 + 40);
      *(_OWORD *)(v30 + 56) = v43;
      goto LABEL_29;
    }
    goto LABEL_27;
  }
  if (v35 < 4)
  {
    sub_22EBE84F4((uint64_t)v32);
    long long v39 = *(_OWORD *)(v31 + 56);
    long long v41 = *v33;
    long long v40 = *(_OWORD *)(v31 + 24);
    v32[2] = *(_OWORD *)(v31 + 40);
    v32[3] = v39;
    *uint64_t v32 = v41;
    v32[1] = v40;
    goto LABEL_29;
  }
  *(void *)(v30 + 8) = *(void *)(v31 + 8);
  *(void *)(v30 + 16) = *(void *)(v31 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v30 + 24) = *(unsigned char *)(v31 + 24);
  *(void *)(v30 + 32) = *(void *)(v31 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v32 = (long long *)(v30 + 40);
  long long v44 = (long long *)(v31 + 40);
  uint64_t v45 = *(void *)(v31 + 48);
  if (!*(void *)(v30 + 48))
  {
    if (!v45)
    {
      long long v36 = *v44;
      long long v37 = *(_OWORD *)(v31 + 56);
      goto LABEL_16;
    }
LABEL_27:
    *(void *)(v30 + 40) = *(void *)(v31 + 40);
    *(void *)(v30 + 48) = *(void *)(v31 + 48);
    *(unsigned char *)(v30 + 56) = *(unsigned char *)(v31 + 56);
    *(void *)(v30 + 64) = *(void *)(v31 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_29;
  }
  if (v45)
  {
    *(void *)(v30 + 40) = *(void *)(v31 + 40);
    *(void *)(v30 + 48) = *(void *)(v31 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v30 + 56) = *(unsigned char *)(v31 + 56);
    *(void *)(v30 + 64) = *(void *)(v31 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_22EB8B890(v30 + 40);
    long long v46 = *(_OWORD *)(v31 + 56);
    *uint64_t v32 = *v44;
    *(_OWORD *)(v30 + 56) = v46;
  }
LABEL_29:
  *(unsigned char *)(v30 + 72) = *(unsigned char *)(v31 + 72);
  return a1;
}

uint64_t sub_22EBE84F4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_26861E708);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22EBE8554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v6 = (int *)type metadata accessor for SubscriptionStoreCopyWriter(0);
  uint64_t v7 = v6[8];
  char v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_22EE7F6E0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E620);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  *(void *)(a1 + v6[9]) = *(void *)(a2 + v6[9]);
  uint64_t v12 = v6[10];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = sub_22EE7F670();
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
  }
  memcpy((void *)(a1 + *(int *)(a3 + 20)), (const void *)(a2 + *(int *)(a3 + 20)), 0x49uLL);
  return a1;
}

uint64_t sub_22EBE8734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  char v9 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v6;
  sub_22EADB1A4(v7, v8, v9);
  uint64_t v10 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = (int *)type metadata accessor for SubscriptionStoreCopyWriter(0);
  uint64_t v14 = v13[8];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  uint64_t v17 = sub_22EE7F6E0();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v17);
  int v19 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17);
  if (EnumTagSinglePayload)
  {
    if (!v19)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v20 = *(void *)(v17 - 8);
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v20 + 8))(v15, v17);
LABEL_6:
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E620);
    memcpy(v15, v16, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v20 + 40))(v15, v16, v17);
LABEL_7:
  *(void *)(a1 + v13[9]) = *(void *)(a2 + v13[9]);
  uint64_t v22 = v13[10];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (const void *)(a2 + v22);
  uint64_t v25 = sub_22EE7F670();
  int v26 = __swift_getEnumTagSinglePayload((uint64_t)v23, 1, v25);
  int v27 = __swift_getEnumTagSinglePayload((uint64_t)v24, 1, v25);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
      __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v25);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v28 = *(void *)(v25 - 8);
  if (v27)
  {
    (*(void (**)(void *, uint64_t))(v28 + 8))(v23, v25);
LABEL_12:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
    memcpy(v23, v24, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(v28 + 40))(v23, v24, v25);
LABEL_13:
  uint64_t v30 = *(int *)(a3 + 20);
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  *(unsigned char *)(a1 + v30) = *(unsigned char *)(a2 + v30);
  long long v33 = (_OWORD *)(a1 + v30 + 8);
  if (*(void *)(a1 + v30 + 16) >= 4uLL)
  {
    unint64_t v34 = *(void *)(v32 + 16);
    if (v34 >= 4)
    {
      *(void *)(v31 + 8) = *(void *)(v32 + 8);
      *(void *)(v31 + 16) = v34;
      swift_bridgeObjectRelease();
      *(unsigned char *)(v31 + 24) = *(unsigned char *)(v32 + 24);
      *(void *)(v31 + 32) = *(void *)(v32 + 32);
      swift_bridgeObjectRelease();
      if (*(void *)(v31 + 48))
      {
        uint64_t v38 = *(void *)(v32 + 48);
        if (v38)
        {
          *(void *)(v31 + 40) = *(void *)(v32 + 40);
          *(void *)(v31 + 48) = v38;
          swift_bridgeObjectRelease();
          *(unsigned char *)(v31 + 56) = *(unsigned char *)(v32 + 56);
          *(void *)(v31 + 64) = *(void *)(v32 + 64);
          swift_bridgeObjectRelease();
          goto LABEL_17;
        }
        sub_22EB8B890(v31 + 40);
      }
      long long v39 = *(_OWORD *)(v32 + 56);
      *(_OWORD *)(v31 + 40) = *(_OWORD *)(v32 + 40);
      *(_OWORD *)(v31 + 56) = v39;
      goto LABEL_17;
    }
    sub_22EBE84F4((uint64_t)v33);
  }
  long long v35 = *(_OWORD *)(v32 + 24);
  *long long v33 = *(_OWORD *)(v32 + 8);
  v33[1] = v35;
  long long v36 = *(_OWORD *)(v32 + 56);
  v33[2] = *(_OWORD *)(v32 + 40);
  v33[3] = v36;
LABEL_17:
  *(unsigned char *)(v31 + 72) = *(unsigned char *)(v32 + 72);
  return a1;
}

uint64_t sub_22EBE8AF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EBE8B08);
}

uint64_t sub_22EBE8B08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for SubscriptionStoreCopyWriter(0);
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20) + 16);
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    int v10 = v9 - 4;
    if (v10 < 0) {
      int v10 = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_22EBE8BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EBE8BB8);
}

void sub_22EBE8BB8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for SubscriptionStoreCopyWriter(0);
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 16) = (a2 + 3);
  }
}

uint64_t sub_22EBE8C44()
{
  uint64_t result = type metadata accessor for SubscriptionStoreCopyWriter(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_20(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  *(void *)uint64_t v4 = result;
  *(void *)(v4 + 8) = a2;
  *(unsigned char *)(v4 + 16) = a3 & 1;
  *(void *)(v4 + 24) = a4;
  return result;
}

uint64_t OUTLINED_FUNCTION_2_9()
{
  return v0;
}

uint64_t sub_22EBE8D00()
{
  return swift_release();
}

uint64_t sub_22EBE8DAC()
{
  return sub_22EBE8D00();
}

id sub_22EBE8DB8()
{
  long long v7 = *v0;
  uint64_t v8 = *((void *)v0 + 2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2686201F8);
  sub_22EE7EB60();
  uint64_t v1 = v10;
  uint64_t v2 = (objc_class *)type metadata accessor for UIKitIndexView.Coordinator();
  uint64_t v3 = (char *)objc_allocWithZone(v2);
  uint64_t v4 = &v3[OBJC_IVAR____TtCV17_StoreKit_SwiftUIP33_C3D66C71BBD115CD7E02F3EACA7B285614UIKitIndexView11Coordinator__value];
  *(_OWORD *)uint64_t v4 = v9;
  *((void *)v4 + 2) = v1;
  v6.receiver = v3;
  v6.super_class = v2;
  return objc_msgSendSuper2(&v6, sel_init);
}

id sub_22EBE8E4C()
{
  uint64_t v0 = sub_22EE7D480();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  objc_super v6 = (char *)&v16 - v5;
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F829F0]), sel_init);
  objc_msgSend(v7, sel_setAllowsContinuousInteraction_, 1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268620220);
  sub_22EE7DC30();
  uint64_t v8 = v17;
  objc_msgSend(v7, sel_addTarget_action_forControlEvents_, v17, sel_valueChanged_, 4096);

  int v9 = sub_22EE7DA10();
  sub_22EE7DC40();
  LODWORD(v17) = v9;
  sub_22EBE9C08();
  if (!sub_22EE7C730())
  {
    id v10 = objc_msgSend(self, sel_tertiaryLabelColor);
    MEMORY[0x230FABB90](v10);
  }
  uint64_t v11 = (void *)sub_22EE80000();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v1 + 8);
  v12(v6, v0);
  objc_msgSend(v7, sel_setPageIndicatorTintColor_, v11);

  int v13 = sub_22EE7DA00();
  sub_22EE7DC40();
  LODWORD(v17) = v13;
  if (!sub_22EE7C730()) {
    sub_22EE7E7F0();
  }
  uint64_t v14 = (void *)sub_22EE80000();
  v12(v4, v0);
  objc_msgSend(v7, sel_setCurrentPageIndicatorTintColor_, v14);

  return v7;
}

id sub_22EBE90C8(void *a1)
{
  long long v5 = *v1;
  uint64_t v6 = *((void *)v1 + 2);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686201F8);
  MEMORY[0x230FABE70](&v7, v3);
  objc_msgSend(a1, sel_setCurrentPage_, v7, v5, v6);
  objc_msgSend(a1, sel_setNumberOfPages_, *((void *)v1 + 3));
  return objc_msgSend(a1, sel_setBackgroundStyle_, *((void *)v1 + 4));
}

double sub_22EBE9160(int a1, int a2, int a3, int a4, id a5)
{
  objc_msgSend(a5, sel_sizeForNumberOfPages_, *(void *)(v5 + 24));
  return result;
}

uint64_t sub_22EBE9194()
{
  return sub_22EE7EB40();
}

uint64_t sub_22EBE91F4(void *a1)
{
  return swift_release();
}

uint64_t sub_22EBE927C(int a1, id a2)
{
  return sub_22EBE9194();
}

uint64_t sub_22EBE92BC()
{
  return swift_release_n();
}

void sub_22EBE93C0()
{
}

uint64_t type metadata accessor for UIKitIndexView.Coordinator()
{
  return self;
}

uint64_t sub_22EBE947C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22EE7C850();
  *a1 = result & 1;
  return result;
}

uint64_t sub_22EBE94AC()
{
  return sub_22EE7C860();
}

id sub_22EBE94D4()
{
  return sub_22EBE8E4C();
}

id sub_22EBE9510(void *a1)
{
  return sub_22EBE90C8(a1);
}

id sub_22EBE9554@<X0>(void *a1@<X8>)
{
  id result = sub_22EBE8DB8();
  *a1 = result;
  return result;
}

double sub_22EBE959C(int a1, char a2, int a3, char a4, void *a5)
{
  return sub_22EBE9160(a1, a2 & 1, a3, a4 & 1, a5);
}

uint64_t sub_22EBE95FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_22EBE9BBC();

  return MEMORY[0x270F01780](a1, a2, a3, v6);
}

uint64_t sub_22EBE9660(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_22EBE9BBC();

  return MEMORY[0x270F01718](a1, a2, a3, v6);
}

void sub_22EBE96C4()
{
}

uint64_t sub_22EBE96EC()
{
  return sub_22EBE927C(*(void *)(v0 + 16), *(id *)(v0 + 24));
}

uint64_t initializeWithCopy for IndexView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for IndexView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

_OWORD *assignWithTake for IndexView(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for IndexView(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IndexView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)id result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IndexView()
{
  return &type metadata for IndexView;
}

uint64_t sub_22EBE9890()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_22EBE98AC()
{
  unint64_t result = qword_268620208;
  if (!qword_268620208)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620200);
    sub_22EBE9920();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620208);
  }
  return result;
}

unint64_t sub_22EBE9920()
{
  unint64_t result = qword_268620210;
  if (!qword_268620210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620210);
  }
  return result;
}

uint64_t destroy for UIKitIndexView()
{
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for UIKitIndexView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for UIKitIndexView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for UIKitIndexView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for UIKitIndexView(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UIKitIndexView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UIKitIndexView()
{
  return &type metadata for UIKitIndexView;
}

uint64_t sub_22EBE9B50()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EBE9BB0()
{
  return MEMORY[0x263F1BB58];
}

unint64_t sub_22EBE9BBC()
{
  unint64_t result = qword_268620218;
  if (!qword_268620218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620218);
  }
  return result;
}

unint64_t sub_22EBE9C08()
{
  unint64_t result = qword_268620228;
  if (!qword_268620228)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268620228);
  }
  return result;
}

uint64_t View.offerCodeRedemption(isPresented:onCompletion:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  KeyPath = (void *)swift_getKeyPath();
  uint64_t v16 = KeyPath;
  char v17 = 0;
  uint64_t v18 = a1;
  uint64_t v19 = a2;
  char v20 = a3;
  uint64_t v21 = a4;
  uint64_t v22 = a5;
  uint64_t v23 = sub_22EBE9D60;
  uint64_t v24 = 0;
  char v25 = 0;
  swift_retain();
  swift_retain();
  swift_retain();
  MEMORY[0x230FAB9D0](&v16, a6, &type metadata for OfferCodeRedeemSheetModifier, a7);
  sub_22EB19B04(KeyPath, 0);
  swift_release();
  swift_release();
  swift_release();
  return sub_22EB84148();
}

uint64_t sub_22EBE9D60()
{
  return sub_22EB85D08();
}

uint64_t sub_22EBE9D98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861E660);
  sub_22EE7EB60();
  uint64_t v6 = swift_allocObject();
  memcpy((void *)(v6 + 16), v3, 0x49uLL);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620238);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  uint64_t v8 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268620240) + 36);
  *(void *)uint64_t v8 = v10;
  *(void *)(v8 + 8) = v11;
  *(unsigned char *)(v8 + 16) = v12;
  *(void *)(v8 + 24) = sub_22EBEB830;
  *(void *)(v8 + 32) = v6;
  return sub_22EBEB838((uint64_t)v3);
}

uint64_t sub_22EBE9EB0(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C390);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = &v34[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for SKLogger();
  MEMORY[0x270FA5388](v7);
  int v9 = &v34[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v10 = *a1;
  id v11 = *(id *)a2;
  char v12 = *(unsigned char *)(a2 + 8);
  sub_22EB858F0(*(id *)a2, v12);
  sub_22EB17BA8();
  uint64_t v14 = v13;
  sub_22EB19B04(v11, v12);
  if (v14)
  {
    id v15 = objc_msgSend(v14, sel_scene);

    if (v15)
    {
      self;
      uint64_t v16 = swift_dynamicCastObjCClass();
      if (v16)
      {
        if (v10)
        {
          uint64_t v17 = v16;
          uint64_t v18 = sub_22EE7FD90();
          __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v18);
          sub_22EE7FD30();
          sub_22EBEB838(a2);
          id v19 = v15;
          uint64_t v20 = sub_22EE7FD20();
          uint64_t v21 = (void *)swift_allocObject();
          uint64_t v22 = MEMORY[0x263F8F500];
          v21[2] = v20;
          v21[3] = v22;
          memcpy(v21 + 4, (const void *)a2, 0x49uLL);
          v21[14] = v17;
          sub_22EBEC0F0((uint64_t)v6, (uint64_t)&unk_268620250, (uint64_t)v21);
          swift_release();
        }
        else
        {
        }
        return sub_22EBEA2F8((const void *)a2);
      }
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861F4B0);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_22EE8A1B0;
  *(void *)(v23 + 56) = MEMORY[0x263F8D310];
  *(void *)(v23 + 32) = 0xD00000000000004DLL;
  *(void *)(v23 + 40) = 0x800000022EE83700;
  sub_22EE80790();
  swift_bridgeObjectRelease();
  if (qword_26861B778 != -1) {
    swift_once();
  }
  uint64_t v24 = __swift_project_value_buffer(v7, (uint64_t)qword_26864C398);
  sub_22EB107F0(v24, (uint64_t)v9);
  char v25 = sub_22EE7C550();
  uint64_t v26 = sub_22EE7C570();
  (*(void (**)(unsigned char *, uint64_t))(*(void *)(v26 - 8) + 8))(v9, v26);
  os_log_type_t v27 = sub_22EE7FFC0();
  if (os_log_type_enabled(v25, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v28 = 0;
    _os_log_impl(&dword_22EAC6000, v25, v27, "Attempting to present offer code redeem sheet without being in the hierarchy.", v28, 2u);
    MEMORY[0x230FAE500](v28, -1, -1);
  }

  uint64_t v29 = *(void (**)(void *, uint64_t))(a2 + 40);
  uint64_t v30 = sub_22EE7F020();
  sub_22EBEBC1C((unint64_t *)&qword_26861E0B8, MEMORY[0x263F17D58]);
  uint64_t v31 = (void *)swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v30 - 8) + 104))(v32, *MEMORY[0x263F17D50], v30);
  v29(v31, 1);

  long long v35 = *(_OWORD *)(a2 + 16);
  char v36 = *(unsigned char *)(a2 + 32);
  v34[15] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861E660);
  sub_22EE7EB40();
  return sub_22EBEA2F8((const void *)a2);
}

uint64_t sub_22EBEA2F8(const void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C390);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_22EE7FD90();
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v5);
  sub_22EE7FD30();
  sub_22EBEB838((uint64_t)a1);
  uint64_t v6 = sub_22EE7FD20();
  uint64_t v7 = (void *)swift_allocObject();
  uint64_t v8 = MEMORY[0x263F8F500];
  v7[2] = v6;
  v7[3] = v8;
  memcpy(v7 + 4, a1, 0x49uLL);
  sub_22EBEC0F0((uint64_t)v4, (uint64_t)&unk_268620280, (uint64_t)v7);
  return swift_release();
}

uint64_t sub_22EBEA3FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  sub_22EE7FD30();
  v5[4] = sub_22EE7FD20();
  uint64_t v7 = sub_22EE7FD00();
  v5[5] = v7;
  v5[6] = v6;
  return MEMORY[0x270FA2498](sub_22EBEA494, v7, v6);
}

uint64_t sub_22EBEA494()
{
  OUTLINED_FUNCTION_28_2();
  uint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v0 + 56) = *(void *)(v1 + 56);
  *(void *)(v0 + 64) = *(void *)(v1 + 64);
  *(unsigned char *)(v0 + 128) = *(unsigned char *)(v1 + 72);
  *(void *)(v0 + 72) = type metadata accessor for OfferCodeRedeemCoordinator();
  *(void *)(v0 + 80) = sub_22EBEBC1C(&qword_268620258, (void (*)(uint64_t))type metadata accessor for OfferCodeRedeemCoordinator);
  uint64_t v2 = sub_22EE7C820();
  *(void *)(v0 + 88) = v2;
  return MEMORY[0x270FA2498](sub_22EBEA578, v2, 0);
}

uint64_t sub_22EBEA578()
{
  OUTLINED_FUNCTION_9_12();
  v0[12] = MEMORY[0x230FAE5D0](v0[11] + 136);
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  return MEMORY[0x270FA2498](sub_22EBEA5E0, v1, v2);
}

uint64_t sub_22EBEA5E0()
{
  OUTLINED_FUNCTION_9_12();
  uint64_t v1 = (void *)v0[12];
  swift_release();

  if (v1)
  {
    swift_release();
    OUTLINED_FUNCTION_18_5();
    return v2();
  }
  else
  {
    uint64_t v4 = v0[2];
    uint64_t v5 = sub_22EE7C820();
    v0[13] = v5;
    v0[14] = *(void *)(v4 + 40);
    v0[15] = *(void *)(v4 + 48);
    return MEMORY[0x270FA2498](sub_22EBEA6A8, v5, 0);
  }
}

uint64_t sub_22EBEA6A8()
{
  OUTLINED_FUNCTION_9_12();
  sub_22EBEA718(*(void **)(v0 + 24), *(void *)(v0 + 112), *(void *)(v0 + 120));
  swift_release();
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  return MEMORY[0x270FA2498](sub_22EB83F18, v1, v2);
}

uint64_t sub_22EBEA718(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C390);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_22EE7FD90();
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 1, 1, v11);
  sub_22EE7FD30();
  swift_retain();
  id v12 = a1;
  swift_retain();
  uint64_t v13 = sub_22EE7FD20();
  uint64_t v14 = (void *)swift_allocObject();
  uint64_t v15 = MEMORY[0x263F8F500];
  v14[2] = v13;
  v14[3] = v15;
  v14[4] = v4;
  v14[5] = v12;
  v14[6] = a2;
  v14[7] = a3;
  sub_22EBEC0F0((uint64_t)v10, (uint64_t)&unk_268620268, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_22EBEA840@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  memcpy(v6, v2, sizeof(v6));
  return sub_22EBE9D98(a1, a2);
}

uint64_t sub_22EBEA894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[2] = sub_22EE7FD30();
  v7[3] = sub_22EE7FD20();
  uint64_t v11 = (void *)swift_task_alloc();
  v7[4] = v11;
  *uint64_t v11 = v7;
  v11[1] = sub_22EBEA968;
  return sub_22EBEAA7C(a5, a6, a7);
}

uint64_t sub_22EBEA968()
{
  OUTLINED_FUNCTION_9_12();
  OUTLINED_FUNCTION_1_5();
  swift_task_dealloc();
  uint64_t v1 = sub_22EE7FD00();
  return MEMORY[0x270FA2498](sub_22EB84390, v1, v0);
}

uint64_t sub_22EBEAA7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[14] = a3;
  v4[15] = v3;
  v4[12] = a1;
  v4[13] = a2;
  uint64_t v5 = sub_22EE7C570();
  v4[16] = v5;
  v4[17] = *(void *)(v5 - 8);
  v4[18] = swift_task_alloc();
  v4[19] = type metadata accessor for SKLogger();
  v4[20] = swift_task_alloc();
  v4[21] = swift_task_alloc();
  v4[22] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_22EBEAB8C, v3, 0);
}

uint64_t sub_22EBEAB8C()
{
  OUTLINED_FUNCTION_28_2();
  uint64_t v1 = *(void *)(v0 + 120);
  swift_unknownObjectWeakAssign();
  uint64_t v2 = *(void *)(v1 + 120);
  if (v2)
  {
    char v3 = *(unsigned char *)(v1 + 128) & 1;
    *(void *)(v0 + 16) = *(void *)(v1 + 112);
    *(void *)(v0 + 24) = v2;
    *(unsigned char *)(v0 + 32) = v3;
    *(unsigned char *)(v0 + 34) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26861E660);
    sub_22EE7EB40();
  }
  if (qword_26861B778 != -1) {
    swift_once();
  }
  uint64_t v4 = *(void *)(v0 + 176);
  uint64_t v5 = *(void *)(v0 + 128);
  uint64_t v6 = *(void *)(v0 + 136);
  uint64_t v7 = __swift_project_value_buffer(*(void *)(v0 + 152), (uint64_t)qword_26864C398);
  *(void *)(v0 + 184) = v7;
  sub_22EB107F0(v7, v4);
  uint64_t v8 = sub_22EE7C550();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  *(void *)(v0 + 192) = v9;
  *(void *)(v0 + 200) = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v9(v4, v5);
  os_log_type_t v10 = sub_22EE7FFE0();
  if (os_log_type_enabled(v8, v10))
  {
    *(_WORD *)swift_slowAlloc() = 0;
    OUTLINED_FUNCTION_18_9(&dword_22EAC6000, v11, v12, "Presenting offer code redeem sheet.");
    OUTLINED_FUNCTION_4_5();
  }

  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 208) = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_22EBEAD4C;
  uint64_t v14 = *(void *)(v0 + 96);
  return MEMORY[0x270EFE2E0](v14);
}

uint64_t sub_22EBEAD4C()
{
  OUTLINED_FUNCTION_28_2();
  uint64_t v2 = *v1;
  *(void *)(*v1 + 216) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 120);
  if (v0) {
    uint64_t v4 = sub_22EBEB07C;
  }
  else {
    uint64_t v4 = sub_22EBEAE74;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_22EBEAE74()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 128);
  sub_22EB107F0(*(void *)(v0 + 184), v2);
  uint64_t v4 = sub_22EE7C550();
  v1(v2, v3);
  os_log_type_t v5 = sub_22EE7FFE0();
  if (os_log_type_enabled(v4, v5))
  {
    *(_WORD *)swift_slowAlloc() = 0;
    OUTLINED_FUNCTION_18_9(&dword_22EAC6000, v6, v7, "Presenting overlay completed for redeem sheet.");
    OUTLINED_FUNCTION_4_5();
  }
  uint64_t v8 = *(void *)(v0 + 120);

  if (*(void *)(v8 + 120))
  {
    OUTLINED_FUNCTION_6_18();
    *(void *)(v0 + 40) = v10;
    *(void *)(v0 + 48) = v9;
    *(unsigned char *)(v0 + 56) = v11;
    *(unsigned char *)(v0 + 35) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26861E660);
    sub_22EE7EB40();
  }
  swift_unknownObjectWeakAssign();
  sub_22EE7FD30();
  *(void *)(v0 + 224) = sub_22EE7FD20();
  uint64_t v13 = sub_22EE7FD00();
  return MEMORY[0x270FA2498](sub_22EBEAFE0, v13, v12);
}

uint64_t sub_22EBEAFE0()
{
  OUTLINED_FUNCTION_28_2();
  uint64_t v1 = *(void (**)(void, void))(v0 + 104);
  swift_release();
  v1(0, 0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_18_5();
  return v2();
}

uint64_t sub_22EBEB07C()
{
  uint64_t v1 = *(void **)(v0 + 216);
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v4 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 144);
  uint64_t v5 = *(void *)(v0 + 128);
  sub_22EB107F0(*(void *)(v0 + 184), v2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v3, v2, v5);
  id v6 = v1;
  uint64_t v7 = sub_22EE7C550();
  os_log_type_t v8 = sub_22EE7FFC0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = *(void **)(v0 + 216);
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    char v11 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 138543362;
    uint64_t v12 = sub_22EE7C1C0();
    *(void *)(v0 + 88) = v12;
    sub_22EE800B0();
    *char v11 = v12;

    _os_log_impl(&dword_22EAC6000, v7, v8, "Error presenting offer code sheet %{public}@.", v10, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26861E6B0);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_4_5();
    OUTLINED_FUNCTION_4_5();
  }
  else
  {
  }
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v0 + 192);
  uint64_t v14 = *(void *)(v0 + 144);
  uint64_t v16 = *(void *)(v0 + 120);
  uint64_t v15 = *(void *)(v0 + 128);

  v13(v14, v15);
  swift_unknownObjectWeakAssign();
  if (*(void *)(v16 + 120))
  {
    OUTLINED_FUNCTION_6_18();
    *(void *)(v0 + 64) = v18;
    *(void *)(v0 + 72) = v17;
    *(unsigned char *)(v0 + 80) = v19;
    *(unsigned char *)(v0 + 33) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26861E660);
    sub_22EE7EB40();
  }
  uint64_t v20 = *(void **)(v0 + 216);
  sub_22EE7FD30();
  id v21 = v20;
  *(void *)(v0 + 232) = sub_22EE7FD20();
  uint64_t v23 = sub_22EE7FD00();
  return MEMORY[0x270FA2498](sub_22EBEB2C4, v23, v22);
}

uint64_t sub_22EBEB2C4()
{
  OUTLINED_FUNCTION_28_2();
  uint64_t v1 = (void *)v0[27];
  uint64_t v2 = v0[15];
  uint64_t v3 = (void (*)(void *, uint64_t))v0[13];
  swift_release();
  v3(v1, 1);

  return MEMORY[0x270FA2498](sub_22EBEB354, v2, 0);
}

uint64_t sub_22EBEB354()
{
  OUTLINED_FUNCTION_28_2();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_18_5();
  return v1();
}

uint64_t type metadata accessor for OfferCodeRedeemCoordinator()
{
  return self;
}

uint64_t sub_22EBEB400()
{
  return swift_getWitnessTable();
}

unint64_t sub_22EBEB464()
{
  unint64_t result = qword_268620230;
  if (!qword_268620230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620230);
  }
  return result;
}

uint64_t destroy for OfferCodeRedeemSheetModifier(uint64_t a1)
{
  sub_22EB19B04(*(id *)a1, *(unsigned char *)(a1 + 8));
  swift_release();
  swift_release();
  swift_release();

  return sub_22EB84148();
}

uint64_t initializeWithCopy for OfferCodeRedeemSheetModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  id v4 = *(id *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_22EB858F0(*(id *)a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(v2 + 24);
  *(void *)(a1 + 16) = *(void *)(v2 + 16);
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(v2 + 32);
  uint64_t v7 = *(void *)(v2 + 48);
  *(void *)(a1 + 40) = *(void *)(v2 + 40);
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = *(void *)(v2 + 56);
  uint64_t v9 = *(void *)(v2 + 64);
  LOBYTE(v2) = *(unsigned char *)(v2 + 72);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_22EB858FC();
  *(void *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = v9;
  *(unsigned char *)(a1 + 72) = v2;
  return a1;
}

uint64_t assignWithCopy for OfferCodeRedeemSheetModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  id v4 = *(id *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_22EB858F0(*(id *)a2, v5);
  uint64_t v6 = *(void **)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_22EB19B04(v6, v7);
  *(void *)(a1 + 16) = *(void *)(v2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(v2 + 24);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(v2 + 32);
  uint64_t v8 = *(void *)(v2 + 48);
  *(void *)(a1 + 40) = *(void *)(v2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_retain();
  swift_release();
  uint64_t v9 = *(void *)(v2 + 56);
  uint64_t v10 = *(void *)(v2 + 64);
  LOBYTE(v2) = *(unsigned char *)(v2 + 72);
  sub_22EB858FC();
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  *(unsigned char *)(a1 + 72) = v2;
  sub_22EB84148();
  return a1;
}

uint64_t assignWithTake for OfferCodeRedeemSheetModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  uint64_t v6 = *(void **)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_22EB19B04(v6, v7);
  swift_release();
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  swift_release();
  *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
  swift_release();
  char v8 = *((unsigned char *)a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
  *(unsigned char *)(a1 + 72) = v8;
  sub_22EB84148();
  return a1;
}

uint64_t getEnumTagSinglePayload for OfferCodeRedeemSheetModifier(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 73))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OfferCodeRedeemSheetModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 72) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 73) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OfferCodeRedeemSheetModifier()
{
  return &type metadata for OfferCodeRedeemSheetModifier;
}

uint64_t sub_22EBEB7B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EBEB7D0()
{
  sub_22EB19B04(*(id *)(v0 + 16), *(unsigned char *)(v0 + 24));
  swift_release();
  swift_release();
  swift_release();
  sub_22EB84148();

  return swift_deallocObject();
}

uint64_t sub_22EBEB830(unsigned __int8 *a1)
{
  return sub_22EBE9EB0(a1, v1 + 16);
}

uint64_t sub_22EBEB838(uint64_t a1)
{
  return a1;
}

uint64_t sub_22EBEB8B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[8] = a4;
  sub_22EE7FD30();
  v4[9] = sub_22EE7FD20();
  uint64_t v6 = sub_22EE7FD00();
  v4[10] = v6;
  v4[11] = v5;
  return MEMORY[0x270FA2498](sub_22EBEB950, v6, v5);
}

uint64_t sub_22EBEB950()
{
  uint64_t v1 = *(void *)(v0 + 64);
  type metadata accessor for OfferCodeRedeemCoordinator();
  sub_22EBEBC1C(&qword_268620258, (void (*)(uint64_t))type metadata accessor for OfferCodeRedeemCoordinator);
  uint64_t v2 = sub_22EE7C820();
  *(void *)(v0 + 96) = v2;
  char v3 = *(unsigned char *)(v1 + 32);
  *(_OWORD *)(v0 + 40) = *(_OWORD *)(v1 + 16);
  *(unsigned char *)(v0 + 56) = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861E660);
  sub_22EE7EB60();
  uint64_t v4 = *(void *)(v0 + 24);
  *(void *)(v0 + 104) = *(void *)(v0 + 16);
  *(void *)(v0 + 112) = v4;
  *(unsigned char *)(v0 + 33) = *(unsigned char *)(v0 + 32);
  return MEMORY[0x270FA2498](sub_22EBEBA70, v2, 0);
}

uint64_t sub_22EBEBA70()
{
  OUTLINED_FUNCTION_28_2();
  sub_22EB8576C(*(void *)(v0 + 104), *(void *)(v0 + 112), *(unsigned char *)(v0 + 33));
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  return MEMORY[0x270FA2498](sub_22EB860A0, v1, v2);
}

uint64_t sub_22EBEBB00()
{
  swift_unknownObjectRelease();
  sub_22EB19B04(*(id *)(v0 + 32), *(unsigned char *)(v0 + 40));
  swift_release();
  swift_release();
  swift_release();
  sub_22EB84148();

  return swift_deallocObject();
}

uint64_t sub_22EBEBB70()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = swift_task_alloc();
  char v3 = (void *)OUTLINED_FUNCTION_2_3(v2);
  *char v3 = v4;
  v3[1] = sub_22EB8675C;
  uint64_t v5 = OUTLINED_FUNCTION_13_11();
  return sub_22EBEA3FC(v5, v6, v7, v8, v1);
}

uint64_t sub_22EBEBC1C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22EBEBC64()
{
  swift_unknownObjectRelease();
  swift_release();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_22EBEBCB4()
{
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[6];
  uint64_t v2 = v0[7];
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_2_3(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_22EB8636C;
  uint64_t v7 = OUTLINED_FUNCTION_13_11();
  return sub_22EBEA894(v7, v8, v9, v10, v1, v3, v2);
}

uint64_t sub_22EBEBD70()
{
  swift_unknownObjectRelease();
  sub_22EB19B04(*(id *)(v0 + 32), *(unsigned char *)(v0 + 40));
  swift_release();
  swift_release();
  swift_release();
  sub_22EB84148();

  return swift_deallocObject();
}

uint64_t sub_22EBEBDD8()
{
  OUTLINED_FUNCTION_28_2();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = (void *)OUTLINED_FUNCTION_2_3(v5);
  *uint64_t v6 = v7;
  v6[1] = sub_22EB8675C;
  return sub_22EBEB8B8(v2, v3, v4, v0 + 32);
}

unint64_t sub_22EBEBE84()
{
  unint64_t result = qword_268620288;
  if (!qword_268620288)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620240);
    sub_22EADDD7C(&qword_268620290, &qword_268620238);
    sub_22EADDD7C(&qword_26861F4D0, &qword_26861E6D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620288);
  }
  return result;
}

uint64_t sub_22EBEBF5C(uint64_t a1, uint64_t a2)
{
  uint64_t IsDisabledModifier = type metadata accessor for DisabledWhenInAppPurchaseIsDisabledModifier(0);
  MEMORY[0x270FA5388](IsDisabledModifier);
  uint64_t v6 = (uint64_t *)((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_26861B830 != -1) {
    swift_once();
  }
  type metadata accessor for CanMakePaymentsCache(0);
  sub_22EBEE8E0(&qword_26861C348, (void (*)(uint64_t))type metadata accessor for CanMakePaymentsCache);
  swift_retain();
  *uint64_t v6 = sub_22EE7CCB0();
  v6[1] = v7;
  uint64_t v8 = (uint64_t *)((char *)v6 + *(int *)(IsDisabledModifier + 20));
  *uint64_t v8 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861C350);
  swift_storeEnumTagMultiPayload();
  MEMORY[0x230FAB9D0](v6, a1, IsDisabledModifier, a2);
  return sub_22EBEDDBC((uint64_t)v6, (void (*)(void))type metadata accessor for DisabledWhenInAppPurchaseIsDisabledModifier);
}

uint64_t sub_22EBEC0F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7FD90();
  if (__swift_getEnumTagSinglePayload(a1, 1, v6) == 1)
  {
    sub_22EBEE928(a1, &qword_26861C390);
  }
  else
  {
    sub_22EE7FD80();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_22EE7FD00();
    swift_unknownObjectRelease();
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_22EBEC260()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22EE7C620();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_22EBEC2D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v29 = a1;
  uint64_t v35 = a2;
  uint64_t IsDisabledModifier = type metadata accessor for DisabledWhenInAppPurchaseIsDisabledModifier(0);
  uint64_t v30 = *(void *)(IsDisabledModifier - 8);
  uint64_t v5 = *(void *)(v30 + 64);
  MEMORY[0x270FA5388](IsDisabledModifier);
  uint64_t v28 = (uint64_t)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_22EE7C6F0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v33 = v6;
  uint64_t v34 = v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620340);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620348);
  uint64_t v31 = *(void *)(v13 - 8);
  uint64_t v32 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v16 = sub_22EBEC260();
  BOOL v18 = (v16 & 1) == 0 && v16 != 2;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v20 = swift_allocObject();
  *(unsigned char *)(v20 + 16) = v18;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620350);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v12, v29, v21);
  uint64_t v22 = (uint64_t *)&v12[*(int *)(v10 + 36)];
  *uint64_t v22 = KeyPath;
  v22[1] = (uint64_t)sub_22EAEF9B0;
  v22[2] = v20;
  sub_22EB186F0();
  uint64_t v23 = v28;
  sub_22EBEE5D0(v3, v28);
  unint64_t v24 = (*(unsigned __int8 *)(v30 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v25 = swift_allocObject();
  sub_22EBEE738(v23, v25 + v24);
  sub_22EBEE81C();
  sub_22EBEE8E0(&qword_268620368, MEMORY[0x263F18460]);
  uint64_t v26 = v33;
  sub_22EE7E6B0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v26);
  sub_22EBEE928((uint64_t)v12, &qword_268620340);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v31 + 32))(v35, v15, v32);
}

uint64_t sub_22EBEC69C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_22EE7C6F0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  LODWORD(a2) = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  int v7 = *MEMORY[0x263F18450];
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (a2 == v7) {
    return sub_22EBEC7C0();
  }
  return result;
}

uint64_t sub_22EBEC7C0()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C390);
  uint64_t result = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_BF465AA955C6DF5DC446870E7AC4033020CanMakePaymentsCache_task;
  if (!*(void *)(v0
                  + OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_BF465AA955C6DF5DC446870E7AC4033020CanMakePaymentsCache_task))
  {
    sub_22EE7FD40();
    uint64_t v7 = sub_22EE7FD90();
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v7);
    sub_22EE7FD30();
    swift_retain();
    uint64_t v8 = sub_22EE7FD20();
    uint64_t v9 = (void *)swift_allocObject();
    uint64_t v10 = MEMORY[0x263F8F500];
    v9[2] = v8;
    v9[3] = v10;
    v9[4] = &unk_268620378;
    v9[5] = v1;
    uint64_t v11 = (void *)swift_allocObject();
    v11[2] = v8;
    v11[3] = v10;
    v11[4] = &unk_268620380;
    v11[5] = v9;
    swift_unknownObjectRetain();
    *(void *)(v1 + v6) = sub_22EBEC0F0((uint64_t)v5, (uint64_t)&unk_268620388, (uint64_t)v11);
    return swift_release();
  }
  return result;
}

uint64_t sub_22EBEC938()
{
  return sub_22EE7C630();
}

uint64_t sub_22EBEC9A8()
{
  type metadata accessor for CanMakePaymentsCache(0);
  swift_allocObject();
  uint64_t result = sub_22EBEC9E8();
  qword_268620298 = result;
  return result;
}

uint64_t sub_22EBEC9E8()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C390);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686202D0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = v1
     + OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_BF465AA955C6DF5DC446870E7AC4033020CanMakePaymentsCache__canMakePayments;
  v17[15] = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861D5C8);
  sub_22EE7C610();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v6 + 32))(v9, v8, v5);
  uint64_t v10 = OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_BF465AA955C6DF5DC446870E7AC4033020CanMakePaymentsCache_task;
  *(void *)(v1 + OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_BF465AA955C6DF5DC446870E7AC4033020CanMakePaymentsCache_task) = 0;
  sub_22EE7C560();
  uint64_t v11 = sub_22EE7FD90();
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v11);
  sub_22EE7FD30();
  swift_retain();
  uint64_t v12 = sub_22EE7FD20();
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t v14 = MEMORY[0x263F8F500];
  v13[2] = v12;
  v13[3] = v14;
  v13[4] = &unk_2686202E0;
  v13[5] = v1;
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = v12;
  v15[3] = v14;
  v15[4] = &unk_2686202F0;
  v15[5] = v13;
  swift_unknownObjectRetain();
  *(void *)(v1 + v10) = sub_22EBEC0F0((uint64_t)v4, (uint64_t)&unk_268620300, (uint64_t)v15);
  swift_release();
  return v1;
}

uint64_t sub_22EBECC64()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_22EBD65C0;
  return sub_22EBECCF4();
}

uint64_t sub_22EBECCF4()
{
  v1[11] = v0;
  sub_22EE7FD30();
  v1[12] = sub_22EE7FD20();
  uint64_t v3 = sub_22EE7FD00();
  v1[13] = v3;
  v1[14] = v2;
  return MEMORY[0x270FA2498](sub_22EBECD8C, v3, v2);
}

uint64_t sub_22EBECD8C()
{
  uint64_t v8 = v0;
  v0[15] = OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_BF465AA955C6DF5DC446870E7AC4033020CanMakePaymentsCache_log;
  os_log_type_t v1 = sub_22EE7FFB0();
  uint64_t v2 = sub_22EE7C550();
  os_log_type_t v3 = v1;
  if (os_log_type_enabled(v2, v1))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446466;
    v0[9] = sub_22EC1FA24(0, 0xE000000000000000, &v7);
    sub_22EE800B0();
    *(_WORD *)(v4 + 12) = 2082;
    v0[10] = sub_22EC1FA24(0xD000000000000023, 0x800000022EE837F0, &v7);
    sub_22EE800B0();
    _os_log_impl(&dword_22EAC6000, v2, v3, "%{public}s%{public}s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_4_5();
    OUTLINED_FUNCTION_4_5();
  }

  uint64_t v5 = (void *)swift_task_alloc();
  v0[16] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_22EBECF68;
  return MEMORY[0x270EFE2E8]();
}

uint64_t sub_22EBECF68(char a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(unsigned char *)(v4 + 144) = a1;
  *(void *)(v4 + 136) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 112);
  uint64_t v6 = *(void *)(v3 + 104);
  if (v1) {
    uint64_t v7 = sub_22EBED298;
  }
  else {
    uint64_t v7 = sub_22EBED0B0;
  }
  return MEMORY[0x270FA2498](v7, v6, v5);
}

uint64_t sub_22EBED0B0()
{
  uint64_t v10 = v0;
  swift_release();
  char v1 = sub_22EBEC260();
  int v2 = *(unsigned __int8 *)(v0 + 144);
  if (v1 == 2 || ((((v1 & 1) == 0) ^ v2) & 1) == 0)
  {
    sub_22EBEC938();
    if ((v2 & 1) == 0)
    {
      os_log_type_t v3 = sub_22EE7FFE0();
      uint64_t v4 = sub_22EE7C550();
      os_log_type_t v5 = v3;
      if (os_log_type_enabled(v4, v3))
      {
        uint64_t v6 = swift_slowAlloc();
        uint64_t v9 = swift_slowAlloc();
        *(_DWORD *)uint64_t v6 = 136446466;
        *(void *)(v0 + 56) = sub_22EC1FA24(0, 0xE000000000000000, &v9);
        sub_22EE800B0();
        *(_WORD *)(v6 + 12) = 2082;
        *(void *)(v0 + 64) = sub_22EC1FA24(0xD00000000000002ELL, 0x800000022EE83850, &v9);
        sub_22EE800B0();
        _os_log_impl(&dword_22EAC6000, v4, v5, "%{public}s%{public}s", (uint8_t *)v6, 0x16u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_4_5();
        OUTLINED_FUNCTION_4_5();
      }
    }
  }
  *(void *)(*(void *)(v0 + 88)
            + OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_BF465AA955C6DF5DC446870E7AC4033020CanMakePaymentsCache_task) = 0;
  swift_release();
  OUTLINED_FUNCTION_18_5();
  return v7();
}

uint64_t sub_22EBED298()
{
  uint64_t v13 = v0;
  uint64_t v1 = v0[17];
  swift_release();
  v12[0] = 0;
  v12[1] = 0xE000000000000000;
  sub_22EE801C0();
  v0[2] = 0;
  v0[3] = 0xE000000000000000;
  sub_22EE7FAA0();
  v0[4] = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268623C60);
  sub_22EE80350();
  uint64_t v2 = v0[2];
  unint64_t v3 = v0[3];
  LOBYTE(v1) = sub_22EE7FFC0();
  swift_bridgeObjectRetain_n();
  uint64_t v4 = sub_22EE7C550();
  os_log_type_t v5 = v1;
  if (os_log_type_enabled(v4, (os_log_type_t)v1))
  {
    uint64_t v11 = (void *)v0[17];
    uint64_t v6 = swift_slowAlloc();
    v12[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446466;
    v0[5] = sub_22EC1FA24(0, 0xE000000000000000, v12);
    sub_22EE800B0();
    *(_WORD *)(v6 + 12) = 2082;
    swift_bridgeObjectRetain();
    v0[6] = sub_22EC1FA24(v2, v3, v12);
    sub_22EE800B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_22EAC6000, v4, v5, "%{public}s%{public}s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_4_5();
    OUTLINED_FUNCTION_4_5();

    swift_bridgeObjectRelease();
    uint64_t v7 = v11;
  }
  else
  {
    uint64_t v8 = (void *)v0[17];
    swift_bridgeObjectRelease_n();

    uint64_t v7 = v8;
  }

  *(void *)(v0[11] + OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_BF465AA955C6DF5DC446870E7AC4033020CanMakePaymentsCache_task) = 0;
  swift_release();
  OUTLINED_FUNCTION_18_5();
  return v9();
}

uint64_t sub_22EBED510()
{
  OUTLINED_FUNCTION_9_12();
  os_log_type_t v5 = (uint64_t (*)(void))((char *)v0 + *v0);
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_29_3(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_22EBD65C0;
  return v5();
}

uint64_t sub_22EBED5D4()
{
  OUTLINED_FUNCTION_9_12();
  os_log_type_t v5 = (uint64_t (*)(void))((char *)v0 + *v0);
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_29_3(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_22EBD65C0;
  return v5();
}

uint64_t sub_22EBED698()
{
  uint64_t v1 = v0
     + OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_BF465AA955C6DF5DC446870E7AC4033020CanMakePaymentsCache__canMakePayments;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686202D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  sub_22EBEDDBC(v0 + OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_BF465AA955C6DF5DC446870E7AC4033020CanMakePaymentsCache_log, (void (*)(void))type metadata accessor for SKLogger);
  return v0;
}

uint64_t sub_22EBED734()
{
  uint64_t v0 = sub_22EBED698();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t sub_22EBED788()
{
  return type metadata accessor for CanMakePaymentsCache(0);
}

uint64_t type metadata accessor for CanMakePaymentsCache(uint64_t a1)
{
  return sub_22EAD01C0(a1, (uint64_t *)&unk_2686202B8);
}

void sub_22EBED7B0()
{
  sub_22EBED884();
  if (v0 <= 0x3F)
  {
    sub_22EE7C570();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_22EBED884()
{
  if (!qword_2686202C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861D5C8);
    unint64_t v0 = sub_22EE7C640();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2686202C8);
    }
  }
}

uint64_t sub_22EBED8E0()
{
  OUTLINED_FUNCTION_9_12();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_29_3(v0);
  void *v1 = v2;
  v1[1] = sub_22EBD65C0;
  return sub_22EBECC64();
}

uint64_t sub_22EBED96C()
{
  OUTLINED_FUNCTION_13_4();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_29_3(v0);
  void *v1 = v2;
  v1[1] = sub_22EBD65C0;
  uint64_t v3 = OUTLINED_FUNCTION_4_17();
  return v4(v3);
}

uint64_t sub_22EBEDA10()
{
  OUTLINED_FUNCTION_13_4();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_29_3(v0);
  void *v1 = v2;
  v1[1] = sub_22EBD65C0;
  uint64_t v3 = OUTLINED_FUNCTION_1_16();
  return v4(v3);
}

uint64_t sub_22EBEDAB8(uint64_t a1, int *a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_29_3(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_22EBEDB90;
  return v7(a1);
}

uint64_t sub_22EBEDB90()
{
  OUTLINED_FUNCTION_9_12();
  OUTLINED_FUNCTION_1_5();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_12();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_18_5();
  return v3();
}

uint64_t sub_22EBEDC54()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_22EBEDC8C(uint64_t a1)
{
  uint64_t v3 = *(int **)(v1 + 16);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_29_3(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_22EB971E0;
  uint64_t v7 = (uint64_t (*)(uint64_t, int *))((char *)&dword_268620308 + dword_268620308);
  return v7(a1, v3);
}

uint64_t sub_22EBEDD40@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22EBEC260();
  *a1 = result;
  return result;
}

uint64_t sub_22EBEDD6C()
{
  return sub_22EBEC938();
}

uint64_t type metadata accessor for DisabledWhenInAppPurchaseIsDisabledModifier(uint64_t a1)
{
  return sub_22EAD01C0(a1, (uint64_t *)&unk_268620328);
}

uint64_t sub_22EBEDDBC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_7_2();
  uint64_t v3 = OUTLINED_FUNCTION_8_16();
  v4(v3);
  return a1;
}

uint64_t *sub_22EBEDE08(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (uint64_t *)((char *)a1 + v6);
    uint64_t v8 = (uint64_t *)((char *)a2 + v6);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26861C350);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_22EE7C6F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_22EBEDF28(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861C350);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_22EE7C6F0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

void *sub_22EBEDFE0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (void *)((char *)a1 + v5);
  uint64_t v7 = (void *)((char *)a2 + v5);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861C350);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_22EE7C6F0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  else
  {
    *uint64_t v6 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_22EBEE0A8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_22EBEE928((uint64_t)a1 + v6, &qword_26861C350);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26861C350);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_22EE7C6F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_22EBEE1A4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C350);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_22EE7C6F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

void *sub_22EBEE278(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_22EBEE928((uint64_t)a1 + v7, &qword_26861C350);
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C350);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_22EE7C6F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_22EBEE374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EBEE388);
}

uint64_t sub_22EBEE388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620320);
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
}

uint64_t sub_22EBEE414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EBEE428);
}

uint64_t sub_22EBEE428(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620320);
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return __swift_storeEnumTagSinglePayload(v8, a2, a2, v7);
  }
  return result;
}

void sub_22EBEE4AC()
{
  sub_22EBEE544();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_22EBEE544()
{
  if (!qword_268620338)
  {
    sub_22EE7C6F0();
    unint64_t v0 = sub_22EE7C7E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268620338);
    }
  }
}

uint64_t sub_22EBEE59C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EBEE5C0()
{
  return swift_deallocObject();
}

uint64_t sub_22EBEE5D0(uint64_t a1, uint64_t a2)
{
  uint64_t IsDisabledModifier = type metadata accessor for DisabledWhenInAppPurchaseIsDisabledModifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(IsDisabledModifier - 8) + 16))(a2, a1, IsDisabledModifier);
  return a2;
}

uint64_t sub_22EBEE634()
{
  type metadata accessor for DisabledWhenInAppPurchaseIsDisabledModifier(0);
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861C350);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_22EE7C6F0();
    OUTLINED_FUNCTION_7_2();
    uint64_t v0 = OUTLINED_FUNCTION_8_16();
    v1(v0);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_22EBEE738(uint64_t a1, uint64_t a2)
{
  uint64_t IsDisabledModifier = type metadata accessor for DisabledWhenInAppPurchaseIsDisabledModifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(IsDisabledModifier - 8) + 32))(a2, a1, IsDisabledModifier);
  return a2;
}

uint64_t sub_22EBEE79C(uint64_t a1, uint64_t a2)
{
  type metadata accessor for DisabledWhenInAppPurchaseIsDisabledModifier(0);

  return sub_22EBEC69C(a1, a2);
}

unint64_t sub_22EBEE81C()
{
  unint64_t result = qword_268620358;
  if (!qword_268620358)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620340);
    sub_22EADDD7C(&qword_268620360, &qword_268620350);
    sub_22EADDD7C((unint64_t *)&qword_26861C378, &qword_26861C380);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620358);
  }
  return result;
}

uint64_t sub_22EBEE8E0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22EBEE928(uint64_t a1, uint64_t *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_7_2();
  uint64_t v3 = OUTLINED_FUNCTION_8_16();
  v4(v3);
  return a1;
}

uint64_t sub_22EBEE970()
{
  OUTLINED_FUNCTION_9_12();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_29_3(v0);
  void *v1 = v2;
  v1[1] = sub_22EB971E0;
  return sub_22EBECC64();
}

uint64_t sub_22EBEEA00()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t OUTLINED_FUNCTION_4_17()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_8_16()
{
  return v0;
}

ValueMetadata *type metadata accessor for SubscriptionStoreContentUnavailableView()
{
  return &type metadata for SubscriptionStoreContentUnavailableView;
}

uint64_t sub_22EBEEAEC()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_22EBEEB08(uint64_t (**a1)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  *a1 = sub_22EBEEB34;
  a1[1] = 0;
  a1[2] = sub_22EBEEB50;
  a1[3] = 0;
}

uint64_t sub_22EBEEB34@<X0>(uint64_t a1@<X8>)
{
  return sub_22EBEEB6C(a1);
}

uint64_t sub_22EBEEB50@<X0>(uint64_t a1@<X8>)
{
  return sub_22EBEEB6C(a1);
}

uint64_t sub_22EBEEB6C@<X0>(uint64_t a1@<X8>)
{
  sub_22EE7D5A0();
  if (qword_26861B690 != -1) {
    swift_once();
  }
  id v2 = (id)qword_26864BFA0;
  uint64_t result = sub_22EE7E120();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5 & 1;
  *(void *)(a1 + 24) = v6;
  return result;
}

uint64_t destroy for ClientOverrideValues()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ClientOverrideValues(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ClientOverrideValues(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for ClientOverrideValues(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscriptionOfferViewNoCodeControlStyle(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 49))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SubscriptionOfferViewNoCodeControlStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionOfferViewNoCodeControlStyle()
{
  return &type metadata for SubscriptionOfferViewNoCodeControlStyle;
}

uint64_t sub_22EBEEE2C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_22EBEEE4C()
{
  unint64_t result = qword_268620390;
  if (!qword_268620390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620390);
  }
  return result;
}

uint64_t sub_22EBEEE98()
{
  SubscriptionStoreControlStyleConfiguration.options.getter();
  uint64_t v1 = swift_allocObject();
  long long v2 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)v0;
  *(_OWORD *)(v1 + 32) = v2;
  *(_OWORD *)(v1 + 48) = *(_OWORD *)(v0 + 32);
  *(unsigned char *)(v1 + 64) = *(unsigned char *)(v0 + 48);
  sub_22EBEF11C(v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268620398);
  type metadata accessor for SubscriptionOfferViewNoCodeControl();
  sub_22EADDD7C(&qword_2686203A0, &qword_268620398);
  sub_22EBEF190(&qword_2686203A8, (void (*)(uint64_t))type metadata accessor for SubscriptionOfferViewNoCodeControl);
  sub_22EBEF190(&qword_2686203B0, (void (*)(uint64_t))type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option);
  return sub_22EE7EBF0();
}

uint64_t sub_22EBEF00C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_22EBF08D0(a1, a3, (void (*)(void))type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option);
  sub_22EADAE38(a2, (uint64_t)v7, &qword_26861E610);
  uint64_t v5 = type metadata accessor for SubscriptionOfferViewNoCodeControl();
  sub_22EADAE38((uint64_t)v7, a3 + *(int *)(v5 + 20), &qword_26861E610);
  return sub_22EBEF11C(a2);
}

uint64_t sub_22EBEF098()
{
  return sub_22EBEEE98();
}

uint64_t sub_22EBEF0DC()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_22EBEF114@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22EBEF00C(a1, v2 + 16, a2);
}

uint64_t sub_22EBEF11C(uint64_t a1)
{
  return a1;
}

uint64_t type metadata accessor for SubscriptionOfferViewNoCodeControl()
{
  uint64_t result = qword_2686203B8;
  if (!qword_2686203B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_22EBEF190(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_22EBEF1D8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_22EE7F780();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = type metadata accessor for Subscription();
    uint64_t v9 = *(int *)(v8 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    *(void *)uint64_t v10 = *(void *)v11;
    v10[8] = v11[8];
    uint64_t v12 = *(int *)(v8 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    v13[8] = v14[8];
    *(void *)uint64_t v13 = *(void *)v14;
    uint64_t v15 = type metadata accessor for SubscriptionStoreControlOption(0);
    uint64_t v16 = *(int *)(v15 + 20);
    uint64_t v17 = (char *)a1 + v16;
    BOOL v18 = (char *)a2 + v16;
    uint64_t v19 = sub_22EE7F670();
    if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19))
    {
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
      memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
      __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v19);
    }
    *(uint64_t *)((char *)a1 + *(int *)(v15 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v15 + 24));
    uint64_t v22 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
    uint64_t v23 = *(int *)(v22 + 20);
    unint64_t v24 = (uint64_t *)((char *)a1 + v23);
    uint64_t v25 = (uint64_t *)((char *)a2 + v23);
    if (*v25)
    {
      uint64_t v26 = v25[1];
      void *v24 = *v25;
      v24[1] = v26;
      swift_retain();
    }
    else
    {
      *(_OWORD *)unint64_t v24 = *(_OWORD *)v25;
    }
    uint64_t v27 = *(int *)(v22 + 24);
    uint64_t v28 = (uint64_t *)((char *)a1 + v27);
    uint64_t v29 = (uint64_t *)((char *)a2 + v27);
    uint64_t v30 = v29[1];
    *uint64_t v28 = *v29;
    v28[1] = v30;
    uint64_t v31 = *(int *)(a3 + 20);
    uint64_t v32 = (char *)a1 + v31;
    uint64_t v33 = (char *)a2 + v31;
    uint64_t v34 = *((void *)v33 + 1);
    *(void *)uint64_t v32 = *(void *)v33;
    *((void *)v32 + 1) = v34;
    long long v35 = *((_OWORD *)v33 + 2);
    *((_OWORD *)v32 + 1) = *((_OWORD *)v33 + 1);
    *((_OWORD *)v32 + 2) = v35;
    v32[48] = v33[48];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_22EBEF420(uint64_t a1)
{
  uint64_t v2 = sub_22EE7F780();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  uint64_t v3 = a1 + *(int *)(type metadata accessor for SubscriptionStoreControlOption(0) + 20);
  uint64_t v4 = sub_22EE7F670();
  if (!__swift_getEnumTagSinglePayload(v3, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  if (*(void *)(a1 + *(int *)(type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0) + 20))) {
    swift_release();
  }
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_22EBEF534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7F780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for Subscription();
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = *(int *)(v7 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  *(void *)uint64_t v12 = *(void *)v13;
  uint64_t v14 = type metadata accessor for SubscriptionStoreControlOption(0);
  uint64_t v15 = *(int *)(v14 + 20);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  uint64_t v18 = sub_22EE7F670();
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
    memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
  }
  *(void *)(a1 + *(int *)(v14 + 24)) = *(void *)(a2 + *(int *)(v14 + 24));
  uint64_t v20 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
  uint64_t v21 = *(int *)(v20 + 20);
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  if (*v23)
  {
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  }
  uint64_t v25 = *(int *)(v20 + 24);
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  uint64_t v28 = v27[1];
  *uint64_t v26 = *v27;
  v26[1] = v28;
  uint64_t v29 = *(int *)(a3 + 20);
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  uint64_t v32 = *(void *)(v31 + 8);
  *(void *)uint64_t v30 = *(void *)v31;
  *(void *)(v30 + 8) = v32;
  long long v33 = *(_OWORD *)(v31 + 32);
  *(_OWORD *)(v30 + 16) = *(_OWORD *)(v31 + 16);
  *(_OWORD *)(v30 + 32) = v33;
  *(unsigned char *)(v30 + 48) = *(unsigned char *)(v31 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_22EBEF72C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7F780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for Subscription();
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  char v11 = *(unsigned char *)(v10 + 8);
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = v11;
  uint64_t v12 = *(int *)(v7 + 24);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  char v15 = *(unsigned char *)(v14 + 8);
  *(void *)uint64_t v13 = *(void *)v14;
  *(unsigned char *)(v13 + 8) = v15;
  uint64_t v16 = type metadata accessor for SubscriptionStoreControlOption(0);
  uint64_t v17 = *(int *)(v16 + 20);
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (const void *)(a2 + v17);
  uint64_t v20 = sub_22EE7F670();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v18, 1, v20);
  int v22 = __swift_getEnumTagSinglePayload((uint64_t)v19, 1, v20);
  if (EnumTagSinglePayload)
  {
    if (!v22)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
      __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v20);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v23 = *(void *)(v20 - 8);
  if (v22)
  {
    (*(void (**)(void *, uint64_t))(v23 + 8))(v18, v20);
LABEL_6:
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
    memcpy(v18, v19, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v23 + 24))(v18, v19, v20);
LABEL_7:
  *(void *)(a1 + *(int *)(v16 + 24)) = *(void *)(a2 + *(int *)(v16 + 24));
  uint64_t v25 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
  uint64_t v26 = *(int *)(v25 + 20);
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = a2 + v26;
  uint64_t v29 = *(void *)(a1 + v26);
  uint64_t v30 = *(void *)(a2 + v26);
  if (!v29)
  {
    if (v30)
    {
      uint64_t v32 = *(void *)(v28 + 8);
      *uint64_t v27 = v30;
      v27[1] = v32;
      swift_retain();
      goto LABEL_14;
    }
LABEL_13:
    *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
    goto LABEL_14;
  }
  if (!v30)
  {
    swift_release();
    goto LABEL_13;
  }
  uint64_t v31 = *(void *)(v28 + 8);
  *uint64_t v27 = v30;
  v27[1] = v31;
  swift_retain();
  swift_release();
LABEL_14:
  uint64_t v33 = *(int *)(v25 + 24);
  uint64_t v34 = (void *)(a1 + v33);
  long long v35 = (void *)(a2 + v33);
  uint64_t v36 = v35[1];
  *uint64_t v34 = *v35;
  v34[1] = v36;
  swift_retain();
  swift_release();
  uint64_t v37 = *(int *)(a3 + 20);
  uint64_t v38 = a1 + v37;
  uint64_t v39 = a2 + v37;
  *(void *)uint64_t v38 = *(void *)(a2 + v37);
  *(void *)(v38 + 8) = *(void *)(a2 + v37 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v38 + 16) = *(_DWORD *)(v39 + 16);
  *(_DWORD *)(v38 + 20) = *(_DWORD *)(v39 + 20);
  *(_DWORD *)(v38 + 24) = *(_DWORD *)(v39 + 24);
  *(_DWORD *)(v38 + 28) = *(_DWORD *)(v39 + 28);
  *(_DWORD *)(v38 + 32) = *(_DWORD *)(v39 + 32);
  *(_DWORD *)(v38 + 36) = *(_DWORD *)(v39 + 36);
  *(_DWORD *)(v38 + 40) = *(_DWORD *)(v39 + 40);
  *(_DWORD *)(v38 + 44) = *(_DWORD *)(v39 + 44);
  *(unsigned char *)(v38 + 48) = *(unsigned char *)(v39 + 48);
  return a1;
}

uint64_t sub_22EBEFA28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7F780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for Subscription();
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = *(int *)(v7 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  *(void *)uint64_t v12 = *(void *)v13;
  uint64_t v14 = type metadata accessor for SubscriptionStoreControlOption(0);
  uint64_t v15 = *(int *)(v14 + 20);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  uint64_t v18 = sub_22EE7F670();
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
    memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
  }
  *(void *)(a1 + *(int *)(v14 + 24)) = *(void *)(a2 + *(int *)(v14 + 24));
  uint64_t v20 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
  uint64_t v21 = *(int *)(v20 + 20);
  int v22 = (void *)(a1 + v21);
  uint64_t v23 = (uint64_t *)(a2 + v21);
  uint64_t v24 = *v23;
  if (*v23)
  {
    uint64_t v25 = v23[1];
    *int v22 = v24;
    v22[1] = v25;
  }
  else
  {
    *(_OWORD *)int v22 = *(_OWORD *)v23;
  }
  *(_OWORD *)(a1 + *(int *)(v20 + 24)) = *(_OWORD *)(a2 + *(int *)(v20 + 24));
  uint64_t v26 = *(int *)(a3 + 20);
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  long long v29 = *(_OWORD *)(v28 + 16);
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  *(_OWORD *)(v27 + 16) = v29;
  *(_OWORD *)(v27 + 32) = *(_OWORD *)(v28 + 32);
  *(unsigned char *)(v27 + 48) = *(unsigned char *)(v28 + 48);
  return a1;
}

uint64_t sub_22EBEFC04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7F780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for Subscription();
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = *(int *)(v7 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  *(void *)uint64_t v12 = *(void *)v13;
  uint64_t v14 = type metadata accessor for SubscriptionStoreControlOption(0);
  uint64_t v15 = *(int *)(v14 + 20);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  uint64_t v18 = sub_22EE7F670();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v18);
  int v20 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18);
  if (EnumTagSinglePayload)
  {
    if (!v20)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v21 = *(void *)(v18 - 8);
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v21 + 8))(v16, v18);
LABEL_6:
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
    memcpy(v16, v17, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v21 + 40))(v16, v17, v18);
LABEL_7:
  *(void *)(a1 + *(int *)(v14 + 24)) = *(void *)(a2 + *(int *)(v14 + 24));
  uint64_t v23 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
  uint64_t v24 = *(int *)(v23 + 20);
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = a2 + v24;
  uint64_t v27 = *(void *)(a1 + v24);
  uint64_t v28 = *(void *)(a2 + v24);
  if (!v27)
  {
    if (v28)
    {
      uint64_t v30 = *(void *)(v26 + 8);
      void *v25 = v28;
      v25[1] = v30;
      goto LABEL_14;
    }
LABEL_13:
    *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
    goto LABEL_14;
  }
  if (!v28)
  {
    swift_release();
    goto LABEL_13;
  }
  uint64_t v29 = *(void *)(v26 + 8);
  void *v25 = v28;
  v25[1] = v29;
  swift_release();
LABEL_14:
  *(_OWORD *)(a1 + *(int *)(v23 + 24)) = *(_OWORD *)(a2 + *(int *)(v23 + 24));
  swift_release();
  uint64_t v31 = *(int *)(a3 + 20);
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = *(void *)(v33 + 8);
  *(void *)uint64_t v32 = *(void *)v33;
  *(void *)(v32 + 8) = v34;
  swift_bridgeObjectRelease();
  long long v35 = *(_OWORD *)(v33 + 32);
  *(_OWORD *)(v32 + 16) = *(_OWORD *)(v33 + 16);
  *(_OWORD *)(v32 + 32) = v35;
  *(unsigned char *)(v32 + 48) = *(unsigned char *)(v33 + 48);
  return a1;
}

uint64_t sub_22EBEFEA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EBEFEB4);
}

uint64_t sub_22EBEFEB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    int v10 = v9 - 1;
    if (v10 < 0) {
      int v10 = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_22EBEFF50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EBEFF64);
}

void sub_22EBEFF64(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  }
}

uint64_t sub_22EBEFFF0()
{
  uint64_t result = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_22EBF0088()
{
  unint64_t result = qword_2686203C8;
  if (!qword_2686203C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686203D0);
    sub_22EBEF190(&qword_2686203A8, (void (*)(uint64_t))type metadata accessor for SubscriptionOfferViewNoCodeControl);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686203C8);
  }
  return result;
}

uint64_t sub_22EBF012C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EBF0148@<X0>(uint64_t a1@<X8>)
{
  if (qword_26861B720 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_26864C360;
  *(void *)a1 = sub_22EE7D670();
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686203D8);
  return sub_22EBF01D0(v1, a1 + *(int *)(v4 + 44));
}

uint64_t sub_22EBF01D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v69 = a2;
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686203E0);
  uint64_t v3 = MEMORY[0x270FA5388](v67);
  long long v66 = &v56[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v3);
  uint64_t v65 = &v56[-v5];
  uint64_t v64 = type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton(0);
  uint64_t v6 = MEMORY[0x270FA5388](v64);
  uint64_t v8 = &v56[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v6);
  uint64_t v68 = &v56[-v9];
  uint64_t v10 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = &v56[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = type metadata accessor for SubscriptionStoreButton();
  uint64_t v14 = (int *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = &v56[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686203E8);
  uint64_t v18 = v17 - 8;
  MEMORY[0x270FA5388](v17);
  int v20 = &v56[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686203F0);
  uint64_t v21 = MEMORY[0x270FA5388](v62);
  uint64_t v23 = &v56[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v21);
  uint64_t v63 = &v56[-v24];
  sub_22EBF08D0(a1, (uint64_t)v12, (void (*)(void))type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option);
  uint64_t v25 = a1 + *(int *)(type metadata accessor for SubscriptionOfferViewNoCodeControl() + 20);
  uint64_t v26 = *(void *)(v25 + 8);
  *(void *)&long long v61 = *(void *)v25;
  long long v60 = *(_OWORD *)(v25 + 16);
  uint64_t v27 = *(void *)(v25 + 32);
  uint64_t v58 = *(void *)(v25 + 40);
  uint64_t v59 = v27;
  int v57 = *(unsigned __int8 *)(v25 + 48);
  uint64_t v28 = &v16[v14[7]];
  *(_OWORD *)uint64_t v28 = 0u;
  *((_OWORD *)v28 + 1) = 0u;
  *((_OWORD *)v28 + 2) = 0u;
  v28[48] = 0;
  uint64_t v29 = &v16[v14[8]];
  *(void *)uint64_t v29 = swift_getKeyPath();
  *((void *)v29 + 1) = 0;
  *((void *)v29 + 2) = 0;
  *((void *)v29 + 3) = 0;
  *((_WORD *)v29 + 16) = 0;
  uint64_t v30 = &v16[v14[9]];
  *(void *)uint64_t v30 = swift_getKeyPath();
  *(_OWORD *)(v30 + 8) = 0u;
  *(_OWORD *)(v30 + 24) = 0u;
  *(_OWORD *)(v30 + 40) = 0u;
  *(_OWORD *)(v30 + 56) = 0u;
  *((_WORD *)v30 + 36) = 0;
  uint64_t v31 = &v16[v14[10]];
  *(void *)uint64_t v31 = swift_getKeyPath();
  v31[8] = 0;
  uint64_t v32 = &v16[v14[11]];
  *(void *)uint64_t v32 = swift_getKeyPath();
  v32[8] = 0;
  sub_22EBF087C((uint64_t)v12, (uint64_t)v16, (void (*)(void))type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)uint64_t v28 = v61;
  *((void *)v28 + 1) = v26;
  *((_OWORD *)v28 + 1) = v60;
  uint64_t v33 = v58;
  *((void *)v28 + 4) = v59;
  *((void *)v28 + 5) = v33;
  v28[48] = v57;
  uint64_t v34 = sub_22EE7D5A0();
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39 & 1;
  sub_22EBF08D0((uint64_t)v16, (uint64_t)v20, (void (*)(void))type metadata accessor for SubscriptionStoreButton);
  long long v41 = &v20[*(int *)(v18 + 44)];
  *long long v41 = 1;
  *((void *)v41 + 1) = v34;
  *((void *)v41 + 2) = v36;
  *((void *)v41 + 3) = v40;
  *((void *)v41 + 4) = v38;
  *(_OWORD *)(v41 + 40) = 0u;
  *(_OWORD *)(v41 + 56) = 0u;
  v41[72] = 0;
  sub_22EBF0924((uint64_t)v16, (void (*)(void))type metadata accessor for SubscriptionStoreButton);
  if (qword_26861B718 != -1) {
    swift_once();
  }
  long long v61 = xmmword_26864C340;
  uint64_t v42 = qword_26864C350;
  uint64_t v43 = unk_26864C358;
  char v44 = sub_22EE7DE70();
  sub_22EADAD08((uint64_t)v20, (uint64_t)v23, &qword_2686203E8);
  uint64_t v45 = &v23[*(int *)(v62 + 36)];
  *uint64_t v45 = v44;
  *(_OWORD *)(v45 + 8) = v61;
  *((void *)v45 + 3) = v42;
  *((void *)v45 + 4) = v43;
  v45[40] = 0;
  sub_22EADAC74((uint64_t)v20, &qword_2686203E8);
  long long v46 = v63;
  sub_22EADAE38((uint64_t)v23, (uint64_t)v63, &qword_2686203F0);
  char v70 = 0;
  sub_22EE7E9D0();
  uint64_t v47 = v72;
  *uint64_t v8 = v71;
  *((void *)v8 + 1) = v47;
  uint64_t v48 = v64;
  uint64_t v49 = type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton.LicenseAgreementState(0);
  uint64_t v50 = v65;
  __swift_storeEnumTagSinglePayload((uint64_t)v65, 1, 1, v49);
  sub_22EADAD08((uint64_t)v50, (uint64_t)v66, &qword_2686203E0);
  sub_22EE7E9D0();
  sub_22EADAC74((uint64_t)v50, &qword_2686203E0);
  uint64_t v51 = *(int *)(v48 + 24);
  *(void *)&v8[v51] = sub_22EE7F9B0();
  uint64_t v52 = v68;
  sub_22EBF087C((uint64_t)v8, (uint64_t)v68, (void (*)(void))type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton);
  sub_22EADAD08((uint64_t)v46, (uint64_t)v23, &qword_2686203F0);
  sub_22EBF08D0((uint64_t)v52, (uint64_t)v8, (void (*)(void))type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton);
  uint64_t v53 = v69;
  sub_22EADAD08((uint64_t)v23, v69, &qword_2686203F0);
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686203F8);
  sub_22EBF08D0((uint64_t)v8, v53 + *(int *)(v54 + 48), (void (*)(void))type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton);
  sub_22EBF0924((uint64_t)v52, (void (*)(void))type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton);
  sub_22EADAC74((uint64_t)v46, &qword_2686203F0);
  sub_22EBF0924((uint64_t)v8, (void (*)(void))type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton);
  return sub_22EADAC74((uint64_t)v23, &qword_2686203F0);
}

uint64_t sub_22EBF087C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_2_0();
  uint64_t v4 = OUTLINED_FUNCTION_17_0();
  v5(v4);
  return a2;
}

uint64_t sub_22EBF08D0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_2_0();
  uint64_t v4 = OUTLINED_FUNCTION_16_0();
  v5(v4);
  return a2;
}

uint64_t sub_22EBF0924(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_2_0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_22EBF097C()
{
  return sub_22EADDD7C(&qword_268620400, qword_268620408);
}

uint64_t sub_22EBF09B8()
{
  uint64_t result = type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_22EBF0AB4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7F6E0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v120 = v7;
  uint64_t v121 = v6;
  int v8 = *(_DWORD *)(v7 + 80);
  unint64_t v9 = v8;
  uint64_t v10 = sub_22EE7F5D0();
  int v11 = *(_DWORD *)(*(void *)(v10 - 8) + 80);
  uint64_t v12 = v11;
  unint64_t v13 = v11 | (unint64_t)v8 | 7;
  uint64_t v117 = v8 + 16;
  uint64_t v14 = *(void *)(v7 + 64);
  uint64_t v15 = (v13 + v14 + ((v9 + 16) & ~v9)) & ~v13;
  uint64_t v16 = *(void *)(*(void *)(v10 - 8) + 64) + v8;
  uint64_t v17 = v14 + 7;
  unint64_t v18 = (v14 + 7 + ((v16 + ((v12 + 16) & ~v12)) & ~(unint64_t)v8)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = v18 + 8;
  unint64_t v20 = v18 + 9;
  if (v20 <= v19) {
    unint64_t v20 = v19;
  }
  if (v20 <= 2) {
    uint64_t v21 = 2;
  }
  else {
    uint64_t v21 = v20;
  }
  if (v21 + v15 + 1 > (v17 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v22 = v21 + v15 + 1;
  }
  else {
    unint64_t v22 = (v17 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v22 <= 0x10) {
    uint64_t v23 = 16;
  }
  else {
    uint64_t v23 = v22;
  }
  uint64_t v24 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v25 = *(_DWORD *)(v24 + 80);
  if ((v13 | v25) == 7 && ((v11 | v8 | *(_DWORD *)(v24 + 80)) & 0x100000) == 0)
  {
    uint64_t v26 = v23 + 1;
    if (((((v25
           + 19
           + ((((v23 + 1 + v13) & ~v13) + v23 + 1 + (((v11 | v9) + 32) & ~v13) + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v25)
         + *(void *)(v24 + 64)) & 0xFFFFFFFFFFFFFFF8)
       + 17 <= 0x18)
    {
      uint64_t v103 = v10;
      uint64_t v104 = v13 + v14;
      uint64_t v100 = v11 + 16;
      uint64_t v101 = v16;
      unint64_t v98 = v19;
      uint64_t v102 = *(void *)(v10 - 8);
      uint64_t v115 = v14 + 7;
      uint64_t v106 = v21;
      uint64_t v107 = *(void *)(v24 + 64);
      uint64_t v110 = ((v23 + 1 + v13) & ~v13) + v23 + 1;
      uint64_t v111 = v25 + 19;
      uint64_t v108 = *(void *)(*(void *)(a3 + 16) - 8);
      uint64_t v109 = *(void *)(a3 + 16);
      unint64_t v27 = ~v13;
      uint64_t v28 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v28;
      *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
      *(void *)(a1 + 24) = a2[3];
      uint64_t v112 = a1 + v13 + 32;
      v116 = (void *)(v112 & ~v13);
      uint64_t v113 = (uint64_t)a2 + v13 + 32;
      v119 = (unsigned __int8 *)(v113 & ~v13);
      unsigned int v29 = v119[v23];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v29 >= 3)
      {
        if (v23 <= 3) {
          uint64_t v30 = v23;
        }
        else {
          uint64_t v30 = 4;
        }
        switch(v30)
        {
          case 1:
            int v31 = *v119;
            goto LABEL_25;
          case 2:
            int v31 = *(unsigned __int16 *)v119;
            goto LABEL_25;
          case 3:
            int v31 = *(unsigned __int16 *)(v113 & ~v13) | (*(unsigned __int8 *)((v113 & ~v13) + 2) << 16);
            goto LABEL_25;
          case 4:
            int v31 = *(_DWORD *)v119;
LABEL_25:
            if (v23 < 4) {
              unsigned int v29 = (v31 | ((v29 - 3) << (8 * v23))) + 3;
            }
            else {
              unsigned int v29 = v31 + 3;
            }
            break;
          default:
            break;
        }
      }
      uint64_t v105 = ~v9;
      uint64_t v99 = ~v12;
      if (v29 == 2)
      {
        unint64_t v43 = v113 & ~v13;
        unint64_t v33 = v112 & ~v13;
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v120 + 16))(v116, v119, v121);
        uint64_t v45 = v115;
        *(_OWORD *)(((unint64_t)v116 + v115) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v119[v115] & 0xFFFFFFFFFFFFFFF8);
        char v46 = 2;
      }
      else
      {
        unint64_t v33 = v112 & ~v13;
        if (v29 != 1)
        {
          unint64_t v43 = v113 & ~v13;
          void *v116 = *(void *)v119;
          *(void *)((v112 & ~v13) + 8) = *(void *)(v43 + 8);
          *((unsigned char *)v116 + v23) = 0;
          swift_bridgeObjectRetain();
          uint64_t v45 = v115;
          goto LABEL_53;
        }
        void *v116 = *(void *)v119;
        *(void *)((v112 & ~v13) + 8) = *(void *)((v113 & ~v13) + 8);
        unint64_t v34 = ((unint64_t)v116 + v117) & v105;
        unint64_t v35 = (unint64_t)&v119[v117] & v105;
        uint64_t v36 = *(void (**)(uint64_t, unint64_t, uint64_t))(v120 + 16);
        swift_bridgeObjectRetain();
        uint64_t v97 = v36;
        v36(v34, v35, v121);
        unint64_t v37 = (v104 + v34) & v27;
        uint64_t v38 = (unsigned __int8 *)((v104 + v35) & v27);
        uint64_t v39 = v106;
        unsigned int v40 = v38[v106];
        unsigned int v41 = v40 - 4;
        if (v40 < 4)
        {
          unint64_t v43 = v113 & ~v13;
        }
        else
        {
          if (v106 <= 3) {
            uint64_t v42 = v106;
          }
          else {
            uint64_t v42 = 4;
          }
          unint64_t v43 = v113 & ~v13;
          switch(v42)
          {
            case 1:
              int v44 = *v38;
              goto LABEL_42;
            case 2:
              int v44 = *(unsigned __int16 *)v38;
              goto LABEL_42;
            case 3:
              int v44 = *(unsigned __int16 *)v38 | (*(unsigned __int8 *)(((v104 + v35) & v27) + 2) << 16);
              goto LABEL_42;
            case 4:
              int v44 = *(_DWORD *)v38;
LABEL_42:
              if (v106 < 4) {
                unsigned int v40 = (v44 | (v41 << (8 * v106))) + 4;
              }
              else {
                unsigned int v40 = v44 + 4;
              }
              break;
            default:
              break;
          }
        }
        switch(v40)
        {
          case 1u:
            *(unsigned char *)unint64_t v37 = *v38;
            char v47 = 1;
            goto LABEL_48;
          case 2u:
            *(void *)unint64_t v37 = *(void *)v38;
            *(void *)(v37 + 8) = *(void *)(((v104 + v35) & v27) + 8);
            uint64_t v48 = (v100 + v37) & v99;
            unint64_t v49 = (unint64_t)&v38[v100] & v99;
            uint64_t v94 = *(void (**)(uint64_t, unint64_t, uint64_t))(v102 + 16);
            unint64_t v95 = v37;
            swift_bridgeObjectRetain();
            v94(v48, v49, v103);
            unint64_t v43 = v113 & ~v13;
            uint64_t v50 = (v101 + v48) & v105;
            unint64_t v51 = (v101 + v49) & v105;
            v97(v50, v51, v121);
            unint64_t v37 = v95;
            uint64_t v39 = v106;
            uint64_t v45 = v115;
            *(void *)((v115 + v50) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v115 + v51) & 0xFFFFFFFFFFFFFFF8);
            *(unsigned char *)(v95 + v98) = v38[v98];
            char v47 = 2;
            break;
          case 3u:
            *(void *)unint64_t v37 = *(void *)v38;
            *(void *)(v37 + 8) = *(void *)(((v104 + v35) & v27) + 8);
            uint64_t v52 = (v100 + v37) & v99;
            unint64_t v53 = (unint64_t)&v38[v100] & v99;
            uint64_t v54 = *(void (**)(uint64_t, unint64_t, uint64_t))(v102 + 16);
            unint64_t v96 = v37;
            swift_bridgeObjectRetain();
            v54(v52, v53, v103);
            unint64_t v43 = v113 & ~v13;
            uint64_t v55 = (v101 + v52) & v105;
            v97(v55, (v101 + v53) & v105, v121);
            unint64_t v37 = v96;
            uint64_t v39 = v106;
            uint64_t v45 = v115;
            *(void *)((v115 + v55) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v115 + ((v101 + v53) & v105)) & 0xFFFFFFFFFFFFFFF8);
            char v47 = 3;
            break;
          default:
            char v47 = 0;
            *(_WORD *)unint64_t v37 = *(_WORD *)v38;
LABEL_48:
            uint64_t v45 = v115;
            break;
        }
        *(unsigned char *)(v37 + v39) = v47;
        char v46 = 1;
        unint64_t v33 = v112 & ~v13;
      }
      *(unsigned char *)(v33 + v23) = v46;
LABEL_53:
      uint64_t v56 = ~v25;
      int v57 = (void *)(((v112 | v13) + v26) & v27);
      uint64_t v58 = (void *)(((v113 | v13) + v26) & v27);
      unsigned int v59 = *((unsigned __int8 *)v58 + v23);
      if (v59 > 2)
      {
        memcpy((void *)(((v112 | v13) + v26) & v27), (const void *)(((v113 | v13) + v26) & v27), v23 + 1);
      }
      else if (v59 == 2)
      {
        uint64_t v70 = v45;
        (*(void (**)(void *, void *, uint64_t))(v120 + 16))(v57, v58, v121);
        *(_OWORD *)(((unint64_t)v57 + v70) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v58 + v70) & 0xFFFFFFFFFFFFFFF8);
        *((unsigned char *)v57 + v23) = 2;
      }
      else
      {
        if (v59 == 1)
        {
          *int v57 = *v58;
          *(void *)((((v112 | v13) + v26) & v27) + 8) = *(void *)((((v113 | v13) + v26) & v27) + 8);
          unint64_t v60 = ((unint64_t)v57 + v117) & v105;
          unint64_t v61 = ((unint64_t)v58 + v117) & v105;
          uint64_t v62 = *(void (**)(unint64_t, unint64_t, uint64_t))(v120 + 16);
          swift_bridgeObjectRetain();
          v62(v60, v61, v121);
          uint64_t v63 = v106;
          unint64_t v64 = (v104 + v60) & v27;
          uint64_t v65 = (unsigned __int8 *)((v104 + v61) & v27);
          unsigned int v66 = v65[v106];
          unsigned int v67 = v66 - 4;
          if (v66 >= 4)
          {
            if (v106 <= 3) {
              uint64_t v68 = v106;
            }
            else {
              uint64_t v68 = 4;
            }
            switch(v68)
            {
              case 1:
                int v69 = *v65;
                goto LABEL_71;
              case 2:
                int v69 = *(unsigned __int16 *)v65;
                goto LABEL_71;
              case 3:
                int v69 = *(unsigned __int16 *)v65 | (v65[2] << 16);
                goto LABEL_71;
              case 4:
                int v69 = *(_DWORD *)v65;
LABEL_71:
                int v85 = (v69 | (v67 << (8 * v106))) + 4;
                unsigned int v66 = v69 + 4;
                if (v106 < 4) {
                  unsigned int v66 = v85;
                }
                break;
              default:
                break;
            }
          }
          switch(v66)
          {
            case 1u:
              *(unsigned char *)unint64_t v64 = *v65;
              char v86 = 1;
              break;
            case 2u:
              *(void *)unint64_t v64 = *(void *)v65;
              *(void *)(v64 + 8) = *((void *)v65 + 1);
              uint64_t v87 = (v100 + v64) & v99;
              unint64_t v88 = (unint64_t)&v65[v100] & v99;
              v114 = *(void (**)(uint64_t, unint64_t, uint64_t))(v102 + 16);
              swift_bridgeObjectRetain();
              v114(v87, v88, v103);
              uint64_t v89 = (v101 + v87) & v105;
              unint64_t v90 = (v101 + v88) & v105;
              unint64_t v43 = (unint64_t)v119;
              v62(v89, v90, v121);
              uint64_t v63 = v106;
              *(void *)((v115 + v89) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v115 + v90) & 0xFFFFFFFFFFFFFFF8);
              *(unsigned char *)(v64 + v98) = v65[v98];
              char v86 = 2;
              break;
            case 3u:
              *(void *)unint64_t v64 = *(void *)v65;
              *(void *)(v64 + 8) = *((void *)v65 + 1);
              uint64_t v91 = (v100 + v64) & v99;
              unint64_t v92 = (unint64_t)&v65[v100] & v99;
              v118 = *(void (**)(uint64_t, unint64_t, uint64_t))(v102 + 16);
              swift_bridgeObjectRetain();
              v118(v91, v92, v103);
              uint64_t v93 = (v101 + v91) & v105;
              v62(v93, (v101 + v92) & v105, v121);
              uint64_t v63 = v106;
              *(void *)((v115 + v93) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v115 + ((v101 + v92) & v105)) & 0xFFFFFFFFFFFFFFF8);
              char v86 = 3;
              break;
            default:
              char v86 = 0;
              *(_WORD *)unint64_t v64 = *(_WORD *)v65;
              break;
          }
          uint64_t v74 = v110;
          uint64_t v75 = v111;
          *(unsigned char *)(v64 + v63) = v86;
          *((unsigned char *)v57 + v23) = 1;
          uint64_t v72 = v108;
          uint64_t v71 = v109;
          uint64_t v73 = v107;
          unint64_t v33 = (unint64_t)v116;
          goto LABEL_66;
        }
        *int v57 = *v58;
        *(void *)((((v112 | v13) + v26) & v27) + 8) = *(void *)((((v113 | v13) + v26) & v27) + 8);
        *((unsigned char *)v57 + v23) = 0;
        swift_bridgeObjectRetain();
      }
      uint64_t v72 = v108;
      uint64_t v71 = v109;
      uint64_t v73 = v107;
      uint64_t v74 = v110;
      uint64_t v75 = v111;
LABEL_66:
      unint64_t v76 = ((v33 | 7) + v74) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v77 = ((v43 | 7) + v74) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v76 = *(void *)v77;
      *(void *)(v76 + 8) = *(void *)(v77 + 8);
      *(unsigned char *)(v76 + 16) = *(unsigned char *)(v77 + 16);
      *(unsigned char *)(v76 + 17) = *(unsigned char *)(v77 + 17);
      *(unsigned char *)(v76 + 18) = *(unsigned char *)(v77 + 18);
      unint64_t v78 = (v75 + v76) & v56;
      unint64_t v79 = (v75 + v77) & v56;
      uint64_t v80 = *(void (**)(unint64_t, unint64_t, uint64_t))(v72 + 16);
      swift_bridgeObjectRetain();
      v80(v78, v79, v71);
      uint64_t v81 = v79 + v73;
      *(unsigned char *)(v78 + v73) = *(unsigned char *)(v79 + v73);
      unint64_t v82 = (v78 + v73) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v83 = *(void *)((v81 & 0xFFFFFFFFFFFFFFF8) + 8);
      LOBYTE(v78) = *(unsigned char *)((v81 & 0xFFFFFFFFFFFFFFF8) + 16);
      sub_22EADDF00(v83, v78);
      *(void *)(v82 + 8) = v83;
      *(unsigned char *)(v82 + 16) = v78;
      return a1;
    }
  }
  uint64_t v32 = *a2;
  *(void *)a1 = *a2;
  a1 = v32 + (((v13 | v25) + 16) & ~(v13 | v25));
  swift_retain();
  return a1;
}

uint64_t sub_22EBF15A0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v63 = sub_22EE7F6E0();
  uint64_t v3 = *(void *)(v63 - 8);
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = sub_22EE7F5D0();
  uint64_t v58 = *(void *)(v6 - 8);
  uint64_t v59 = v6;
  uint64_t v7 = *(unsigned __int8 *)(v58 + 80);
  uint64_t v8 = v5 | v7 | 7;
  uint64_t v9 = a1 + v8 + 32;
  uint64_t v10 = v9 & ~v8;
  uint64_t v11 = v5 + 16;
  uint64_t v12 = *(void *)(v3 + 64);
  uint64_t v60 = v8 + v12;
  uint64_t v13 = (v8 + v12 + ((v5 + 16) & ~v5)) & ~v8;
  uint64_t v56 = v7 + 16;
  uint64_t v57 = *(void *)(v58 + 64) + v5;
  uint64_t v14 = v12 + 7;
  unint64_t v15 = (v12 + 7 + ((v57 + ((v7 + 16) & ~v7)) & ~v5)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = v15 + 8;
  unint64_t v17 = v15 + 9;
  if (v17 <= v16) {
    unint64_t v17 = v16;
  }
  if (v17 <= 2) {
    uint64_t v18 = 2;
  }
  else {
    uint64_t v18 = v17;
  }
  unint64_t v19 = (v14 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v18 + v13 + 1 > v19) {
    unint64_t v20 = v18 + v13 + 1;
  }
  else {
    unint64_t v20 = v19;
  }
  if (v20 <= 0x10) {
    uint64_t v21 = 16;
  }
  else {
    uint64_t v21 = v20;
  }
  unsigned int v22 = *(unsigned __int8 *)(v10 + v21);
  unsigned int v23 = v22 - 3;
  if (v22 >= 3)
  {
    if (v21 <= 3) {
      uint64_t v24 = v21;
    }
    else {
      uint64_t v24 = 4;
    }
    switch(v24)
    {
      case 1:
        int v25 = *(unsigned __int8 *)v10;
        goto LABEL_21;
      case 2:
        int v25 = *(unsigned __int16 *)v10;
        goto LABEL_21;
      case 3:
        int v25 = *(unsigned __int16 *)v10 | (*(unsigned __int8 *)((v9 & ~v8) + 2) << 16);
        goto LABEL_21;
      case 4:
        int v25 = *(_DWORD *)v10;
LABEL_21:
        int v26 = (v25 | (v23 << (8 * v21))) + 3;
        unsigned int v22 = v25 + 3;
        if (v21 < 4) {
          unsigned int v22 = v26;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v27 = ~v8;
  uint64_t v61 = ~v5;
  uint64_t v55 = ~v7;
  if (v22 == 2)
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v9 & ~v8, v63);
  }
  else if (v22 == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    v54((v11 + v10) & v61, v63);
    uint64_t v28 = (unsigned __int8 *)((v60 + ((v11 + v10) & v61)) & v27);
    unsigned int v29 = v28[v18];
    unsigned int v30 = v29 - 4;
    if (v29 >= 4)
    {
      if (v18 <= 3) {
        uint64_t v31 = v18;
      }
      else {
        uint64_t v31 = 4;
      }
      switch(v31)
      {
        case 1:
          int v32 = *v28;
          goto LABEL_36;
        case 2:
          int v32 = *(unsigned __int16 *)v28;
          goto LABEL_36;
        case 3:
          int v32 = *(unsigned __int16 *)((v60 + ((v11 + v10) & v61)) & v27) | (*(unsigned __int8 *)(((v60
                                                                                                 + ((v11 + v10) & v61)) & v27)
                                                                                               + 2) << 16);
          goto LABEL_36;
        case 4:
          int v32 = *(_DWORD *)v28;
LABEL_36:
          int v33 = (v32 | (v30 << (8 * v18))) + 4;
          unsigned int v29 = v32 + 4;
          if (v18 < 4) {
            unsigned int v29 = v33;
          }
          break;
        default:
          break;
      }
    }
    if (v29 >= 2)
    {
      swift_bridgeObjectRelease();
      unint64_t v34 = (unint64_t)&v28[v56] & v55;
      (*(void (**)(unint64_t, uint64_t))(v58 + 8))(v34, v59);
      v54((v57 + v34) & v61, v63);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v35 = v21 + 1;
  uint64_t v36 = ((v9 | v8) + v21 + 1) & v27;
  unsigned int v37 = *(unsigned __int8 *)(v36 + v21);
  if (v37 <= 2)
  {
    if (v37 == 2)
    {
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(((v9 | v8) + v21 + 1) & v27, v63);
    }
    else if (v37 == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v38 = (v11 + v36) & v61;
      uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
      v39(v38, v63);
      unsigned int v40 = (unsigned __int8 *)((v60 + v38) & v27);
      unsigned int v41 = v40[v18];
      unsigned int v42 = v41 - 4;
      if (v41 >= 4)
      {
        if (v18 <= 3) {
          uint64_t v43 = v18;
        }
        else {
          uint64_t v43 = 4;
        }
        switch(v43)
        {
          case 1:
            int v44 = *v40;
            goto LABEL_54;
          case 2:
            int v44 = *(unsigned __int16 *)v40;
            goto LABEL_54;
          case 3:
            int v44 = *(unsigned __int16 *)v40 | (v40[2] << 16);
            goto LABEL_54;
          case 4:
            int v44 = *(_DWORD *)v40;
LABEL_54:
            int v45 = (v44 | (v42 << (8 * v18))) + 4;
            unsigned int v41 = v44 + 4;
            if (v18 < 4) {
              unsigned int v41 = v45;
            }
            break;
          default:
            break;
        }
      }
      if (v41 >= 2)
      {
        swift_bridgeObjectRelease();
        unint64_t v46 = (unint64_t)&v40[v56] & v55;
        (*(void (**)(unint64_t, uint64_t))(v58 + 8))(v46, v59);
        v39((v57 + v46) & v61, v63);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v47 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v48 = v47 + 8;
  unint64_t v49 = ((((v10 | 7) + v35 + ((v35 + v8) & v27)) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v47 + 80) + 19) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  (*(void (**)(unint64_t))(v47 + 8))(v49);
  unint64_t v50 = (v49 + *(void *)(v48 + 56)) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v51 = *(void *)(v50 + 8);
  char v52 = *(unsigned char *)(v50 + 16);

  return sub_22EADDB08(v51, v52);
}

uint64_t sub_22EBF1B30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v6 = sub_22EE7F6E0();
  uint64_t v107 = *(void *)(v6 - 8);
  uint64_t v108 = v6;
  uint64_t v7 = *(unsigned __int8 *)(v107 + 80);
  uint64_t v8 = sub_22EE7F5D0();
  uint64_t v90 = *(void *)(v8 - 8);
  uint64_t v91 = v8;
  uint64_t v9 = *(unsigned __int8 *)(v90 + 80);
  uint64_t v10 = v7 | v9 | 7;
  uint64_t v101 = v10 + 32 + a1;
  uint64_t v109 = (void *)(v101 & ~v10);
  uint64_t v103 = v10 + 32 + a2;
  uint64_t v11 = v103 & ~v10;
  uint64_t v92 = v7 + 16;
  uint64_t v12 = *(void *)(v107 + 64);
  uint64_t v94 = v10 + v12;
  uint64_t v13 = (v10 + v12 + ((v7 + 16) & ~v7)) & ~v10;
  uint64_t v88 = v9 + 16;
  uint64_t v89 = *(void *)(v90 + 64) + v7;
  uint64_t v14 = v12 + 7;
  unint64_t v15 = (v14 + ((v89 + ((v9 + 16) & ~v9)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = v15 + 8;
  unint64_t v17 = v15 + 9;
  unint64_t v86 = v16;
  if (v17 <= v16) {
    unint64_t v17 = v16;
  }
  if (v17 <= 2) {
    unint64_t v17 = 2;
  }
  uint64_t v98 = v14;
  unint64_t v99 = v17;
  unint64_t v18 = v17 + v13;
  if (v18 + 1 > (v14 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v19 = v18 + 1;
  }
  else {
    unint64_t v19 = (v14 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v19 <= 0x10) {
    uint64_t v20 = 16;
  }
  else {
    uint64_t v20 = v19;
  }
  unsigned int v21 = *(unsigned __int8 *)(v11 + v20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v21 >= 3)
  {
    if (v20 <= 3) {
      uint64_t v22 = v20;
    }
    else {
      uint64_t v22 = 4;
    }
    switch(v22)
    {
      case 1:
        int v23 = *(unsigned __int8 *)v11;
        goto LABEL_20;
      case 2:
        int v23 = *(unsigned __int16 *)v11;
        goto LABEL_20;
      case 3:
        int v23 = *(unsigned __int16 *)(v103 & ~v10) | (*(unsigned __int8 *)((v103 & ~v10) + 2) << 16);
        goto LABEL_20;
      case 4:
        int v23 = *(_DWORD *)v11;
LABEL_20:
        int v24 = (v23 | ((v21 - 3) << (8 * v20))) + 3;
        unsigned int v25 = v23 + 3;
        if (v20 >= 4) {
          unsigned int v21 = v25;
        }
        else {
          unsigned int v21 = v24;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v26 = ~v10;
  uint64_t v97 = ~v7;
  uint64_t v87 = ~v9;
  if (v21 == 2)
  {
    uint64_t v27 = v101 & ~v10;
    (*(void (**)(void *, uint64_t, uint64_t))(v107 + 16))(v109, v11, v108);
    *(_OWORD *)(((unint64_t)v109 + v98) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v98 + v11) & 0xFFFFFFFFFFFFFFF8);
    char v38 = 2;
  }
  else
  {
    uint64_t v27 = v101 & ~v10;
    if (v21 != 1)
    {
      *uint64_t v109 = *(void *)v11;
      *(void *)((v101 & ~v10) + 8) = *(void *)((v103 & ~v10) + 8);
      *((unsigned char *)v109 + v20) = 0;
      swift_bridgeObjectRetain();
      goto LABEL_45;
    }
    *uint64_t v109 = *(void *)v11;
    *(void *)((v101 & ~v10) + 8) = *(void *)((v103 & ~v10) + 8);
    unint64_t v28 = ((unint64_t)v109 + v92) & v97;
    unint64_t v29 = (v92 + v11) & v97;
    unsigned int v30 = *(void (**)(void))(v107 + 16);
    swift_bridgeObjectRetain();
    int v85 = v30;
    ((void (*)(unint64_t, unint64_t, uint64_t))v30)(v28, v29, v108);
    unint64_t v31 = (v94 + v28) & v26;
    int v32 = (unsigned __int8 *)((v94 + v29) & v26);
    unint64_t v33 = v99;
    unsigned int v34 = v32[v99];
    unsigned int v35 = v34 - 4;
    if (v34 >= 4)
    {
      if (v99 <= 3) {
        uint64_t v36 = v99;
      }
      else {
        uint64_t v36 = 4;
      }
      switch(v36)
      {
        case 1:
          int v37 = *v32;
          goto LABEL_36;
        case 2:
          int v37 = *(unsigned __int16 *)v32;
          goto LABEL_36;
        case 3:
          int v37 = *(unsigned __int16 *)v32 | (*(unsigned __int8 *)(((v94 + v29) & v26) + 2) << 16);
          goto LABEL_36;
        case 4:
          int v37 = *(_DWORD *)v32;
LABEL_36:
          int v39 = (v37 | (v35 << (8 * v99))) + 4;
          unsigned int v34 = v37 + 4;
          if (v99 < 4) {
            unsigned int v34 = v39;
          }
          break;
        default:
          break;
      }
    }
    switch(v34)
    {
      case 1u:
        *(unsigned char *)unint64_t v31 = *v32;
        char v40 = 1;
        break;
      case 2u:
        *(void *)unint64_t v31 = *(void *)v32;
        *(void *)(v31 + 8) = *(void *)(((v94 + v29) & v26) + 8);
        unint64_t v41 = (v88 + v31) & v87;
        unint64_t v83 = v31;
        unint64_t v42 = (unint64_t)&v32[v88] & v87;
        uint64_t v81 = *(void (**)(unint64_t, unint64_t, uint64_t))(v90 + 16);
        swift_bridgeObjectRetain();
        v81(v41, v42, v91);
        uint64_t v27 = v101 & ~v10;
        uint64_t v82 = (v89 + v41) & v97;
        unint64_t v43 = (v89 + v42) & v97;
        unint64_t v31 = v83;
        v85();
        unint64_t v33 = v99;
        *(void *)((v98 + v82) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v98 + v43) & 0xFFFFFFFFFFFFFFF8);
        *(unsigned char *)(v83 + v86) = v32[v86];
        char v40 = 2;
        break;
      case 3u:
        *(void *)unint64_t v31 = *(void *)v32;
        *(void *)(v31 + 8) = *(void *)(((v94 + v29) & v26) + 8);
        unint64_t v44 = (unint64_t)&v32[v88] & v87;
        uint64_t v84 = *(void (**)(unint64_t, unint64_t, uint64_t))(v90 + 16);
        swift_bridgeObjectRetain();
        v84((v88 + v31) & v87, v44, v91);
        uint64_t v27 = v101 & ~v10;
        unint64_t v45 = (v89 + ((v88 + v31) & v87)) & v97;
        unint64_t v46 = (v89 + v44) & v97;
        ((void (*)(unint64_t, unint64_t, uint64_t))v85)(v45, v46, v108);
        unint64_t v33 = v99;
        *(void *)((v98 + v45) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v98 + v46) & 0xFFFFFFFFFFFFFFF8);
        char v40 = 3;
        break;
      default:
        char v40 = 0;
        *(_WORD *)unint64_t v31 = *(_WORD *)v32;
        break;
    }
    *(unsigned char *)(v31 + v33) = v40;
    char v38 = 1;
  }
  *(unsigned char *)(v27 + v20) = v38;
LABEL_45:
  uint64_t v47 = (void *)(((v101 | v10) + v20 + 1) & v26);
  uint64_t v48 = (void *)(((v103 | v10) + v20 + 1) & v26);
  unsigned int v49 = *((unsigned __int8 *)v48 + v20);
  if (v49 > 2)
  {
    memcpy((void *)(((v101 | v10) + v20 + 1) & v26), (const void *)(((v103 | v10) + v20 + 1) & v26), v20 + 1);
LABEL_57:
    uint64_t v59 = a3;
    goto LABEL_58;
  }
  if (v49 == 2)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v107 + 16))(((v101 | v10) + v20 + 1) & v26, ((v103 | v10) + v20 + 1) & v26, v108);
    *(_OWORD *)(((unint64_t)v47 + v98) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v48 + v98) & 0xFFFFFFFFFFFFFFF8);
    *((unsigned char *)v47 + v20) = 2;
    goto LABEL_57;
  }
  if (v49 != 1)
  {
    *uint64_t v47 = *v48;
    *(void *)((((v101 | v10) + v20 + 1) & v26) + 8) = *(void *)((((v103 | v10) + v20 + 1) & v26) + 8);
    *((unsigned char *)v47 + v20) = 0;
    swift_bridgeObjectRetain();
    goto LABEL_57;
  }
  uint64_t v104 = (unsigned __int8 *)(v103 & ~v10);
  *uint64_t v47 = *v48;
  *(void *)((((v101 | v10) + v20 + 1) & v26) + 8) = v48[1];
  unint64_t v50 = ((unint64_t)v47 + v92) & v97;
  unint64_t v51 = ((unint64_t)v48 + v92) & v97;
  char v52 = *(void (**)(void))(v107 + 16);
  swift_bridgeObjectRetain();
  uint64_t v102 = v52;
  ((void (*)(unint64_t, unint64_t, uint64_t))v52)(v50, v51, v108);
  unint64_t v53 = (v94 + v50) & v26;
  uint64_t v54 = (unsigned __int8 *)((v94 + v51) & v26);
  unsigned int v55 = v54[v99];
  unsigned int v56 = v55 - 4;
  if (v55 < 4)
  {
    uint64_t v11 = (uint64_t)v104;
  }
  else
  {
    if (v99 <= 3) {
      uint64_t v57 = v99;
    }
    else {
      uint64_t v57 = 4;
    }
    uint64_t v11 = (uint64_t)v104;
    switch(v57)
    {
      case 1:
        int v58 = *v54;
        goto LABEL_63;
      case 2:
        int v58 = *(unsigned __int16 *)v54;
        goto LABEL_63;
      case 3:
        int v58 = *(unsigned __int16 *)v54 | (*(unsigned __int8 *)(((v94 + v51) & v26) + 2) << 16);
        goto LABEL_63;
      case 4:
        int v58 = *(_DWORD *)v54;
LABEL_63:
        int v75 = (v58 | (v56 << (8 * v99))) + 4;
        unsigned int v55 = v58 + 4;
        if (v99 < 4) {
          unsigned int v55 = v75;
        }
        break;
      default:
        break;
    }
  }
  switch(v55)
  {
    case 1u:
      *(unsigned char *)unint64_t v53 = *v54;
      char v76 = 1;
      break;
    case 2u:
      *(void *)unint64_t v53 = *(void *)v54;
      *(void *)(v53 + 8) = *(void *)(((v94 + v51) & v26) + 8);
      unint64_t v105 = (v88 + v53) & v87;
      unint64_t v95 = (unint64_t)&v54[v88] & v87;
      uint64_t v93 = *(void (**)(unint64_t, unint64_t, uint64_t))(v90 + 16);
      swift_bridgeObjectRetain();
      v93(v105, v95, v91);
      v102();
      *(void *)((v98 + ((v89 + v105) & v97)) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v98 + ((v89 + v95) & v97)) & 0xFFFFFFFFFFFFFFF8);
      *(unsigned char *)(v53 + v86) = v54[v86];
      char v76 = 2;
      break;
    case 3u:
      *(void *)unint64_t v53 = *(void *)v54;
      *(void *)(v53 + 8) = *(void *)(((v94 + v51) & v26) + 8);
      unint64_t v106 = v53;
      unint64_t v77 = (v88 + v53) & v87;
      unint64_t v78 = (unint64_t)&v54[v88] & v87;
      unint64_t v96 = *(void (**)(unint64_t, unint64_t, uint64_t))(v90 + 16);
      swift_bridgeObjectRetain();
      v96(v77, v78, v91);
      uint64_t v79 = (v89 + v77) & v97;
      unint64_t v80 = (v89 + v78) & v97;
      unint64_t v53 = v106;
      ((void (*)(uint64_t, unint64_t, uint64_t))v102)(v79, v80, v108);
      *(void *)((v98 + v79) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v98 + v80) & 0xFFFFFFFFFFFFFFF8);
      char v76 = 3;
      break;
    default:
      char v76 = 0;
      *(_WORD *)unint64_t v53 = *(_WORD *)v54;
      break;
  }
  uint64_t v59 = a3;
  *(unsigned char *)(v53 + v99) = v76;
  *((unsigned char *)v47 + v20) = 1;
  uint64_t v27 = (uint64_t)v109;
LABEL_58:
  uint64_t v60 = ((v20 + 1 + v10) & v26) + v20 + 1;
  unint64_t v61 = ((v27 | 7) + v60) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v62 = ((v11 | 7) + v60) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v61 = *(void *)v62;
  *(void *)(v61 + 8) = *(void *)(v62 + 8);
  *(unsigned char *)(v61 + 16) = *(unsigned char *)(v62 + 16);
  *(unsigned char *)(v61 + 17) = *(unsigned char *)(v62 + 17);
  *(unsigned char *)(v61 + 18) = *(unsigned char *)(v62 + 18);
  uint64_t v63 = *(void *)(v59 + 16);
  unint64_t v64 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 16);
  uint64_t v65 = *(void *)(v63 - 8) + 16;
  uint64_t v66 = *(unsigned __int8 *)(*(void *)(v63 - 8) + 80);
  uint64_t v67 = (v66 + 19 + v61) & ~v66;
  uint64_t v68 = (v66 + 19 + v62) & ~v66;
  swift_bridgeObjectRetain();
  v64(v67, v68, v63);
  uint64_t v69 = *(void *)(v65 + 48);
  unint64_t v70 = v69 + v67;
  uint64_t v71 = v69 + v68;
  *(unsigned char *)unint64_t v70 = *(unsigned char *)v71;
  unint64_t v72 = v70 & 0xFFFFFFFFFFFFFFF8;
  v71 &= 0xFFFFFFFFFFFFFFF8;
  uint64_t v73 = *(void *)(v71 + 8);
  LOBYTE(v67) = *(unsigned char *)(v71 + 16);
  sub_22EADDF00(v73, v67);
  *(void *)(v72 + 8) = v73;
  *(unsigned char *)(v72 + 16) = v67;
  return a1;
}

void *sub_22EBF2540(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  *a1 = *(void *)a2;
  a1[1] = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)v5 + 16) = *(unsigned char *)(a2 + 16);
  v5[3] = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v171 = sub_22EE7F6E0();
  uint64_t v6 = *(void *)(v171 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v163 = sub_22EE7F5D0();
  uint64_t v8 = *(void *)(v163 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v7 | v9 | 7;
  unint64_t v11 = (unint64_t)v5 + v10 + 32;
  uint64_t v12 = ~v10;
  uint64_t v13 = v11 & ~v10;
  uint64_t v14 = v10 + 32 + a2;
  uint64_t v15 = v14 & ~v10;
  uint64_t v166 = v15;
  uint64_t v167 = a3;
  uint64_t v160 = v8;
  if (v13 != v15)
  {
    uint64_t v164 = v7 + 16;
    uint64_t v16 = *(void *)(v6 + 64);
    uint64_t v17 = (v10 + ((v7 + 16) & ~v7) + v16) & v12;
    uint64_t v157 = v9 + 16;
    uint64_t v159 = *(void *)(v8 + 64) + v7;
    uint64_t v165 = v16;
    uint64_t v18 = v16 + 7;
    unint64_t v19 = (v18 + ((v159 + ((v9 + 16) & ~v9)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v20 = v19 + 8;
    unint64_t v21 = v19 + 9;
    unint64_t v149 = v20;
    if (v21 <= v20) {
      unint64_t v21 = v20;
    }
    if (v21 <= 2) {
      unint64_t v21 = 2;
    }
    unint64_t v169 = v21;
    unint64_t v22 = (v17 | 1) + v21;
    uint64_t v153 = v10 + 32 + a2;
    uint64_t v154 = v18;
    if (v22 <= (v18 & 0xFFFFFFFFFFFFFFF8) + 16) {
      unint64_t v22 = (v18 & 0xFFFFFFFFFFFFFFF8) + 16;
    }
    if (v22 <= 0x10) {
      uint64_t v23 = 16;
    }
    else {
      uint64_t v23 = v22;
    }
    unsigned int v24 = *(unsigned __int8 *)(v13 + v23);
    unsigned int v25 = v24 - 3;
    v151 = (char *)v5 + v10 + 32;
    if (v24 >= 3)
    {
      if (v23 <= 3) {
        uint64_t v26 = v23;
      }
      else {
        uint64_t v26 = 4;
      }
      switch(v26)
      {
        case 1:
          int v27 = *(unsigned __int8 *)v13;
          goto LABEL_30;
        case 2:
          int v27 = *(unsigned __int16 *)v13;
          goto LABEL_30;
        case 3:
          int v27 = *(unsigned __int16 *)v13 | (*(unsigned __int8 *)((v11 & ~v10) + 2) << 16);
          goto LABEL_30;
        case 4:
          int v27 = *(_DWORD *)v13;
LABEL_30:
          if (v23 < 4) {
            unsigned int v24 = (v27 | (v25 << (8 * v23))) + 3;
          }
          else {
            unsigned int v24 = v27 + 3;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v168 = ~v7;
    uint64_t v156 = ~v9;
    v150 = v5;
    if (v24 == 2)
    {
      uint64_t v45 = v6;
      uint64_t v39 = ~v10;
      uint64_t v38 = v45;
      uint64_t v36 = (unsigned __int8 *)(v11 & ~v10);
      (*(void (**)(void))(v45 + 8))();
    }
    else if (v24 == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v36 = (unsigned __int8 *)v13;
      unint64_t v37 = (v164 + v13) & v168;
      uint64_t v38 = v6;
      v146 = *(void (**)(unint64_t, uint64_t))(v6 + 8);
      v146(v37, v171);
      uint64_t v39 = ~v10;
      char v40 = (unsigned __int8 *)((v37 + v10 + v165) & v12);
      unsigned int v41 = v40[v169];
      unsigned int v42 = v41 - 4;
      if (v41 >= 4)
      {
        if (v169 <= 3) {
          uint64_t v43 = v169;
        }
        else {
          uint64_t v43 = 4;
        }
        switch(v43)
        {
          case 1:
            int v44 = *v40;
            goto LABEL_46;
          case 2:
            int v44 = *(unsigned __int16 *)v40;
            goto LABEL_46;
          case 3:
            int v44 = *(unsigned __int16 *)v40 | (v40[2] << 16);
            goto LABEL_46;
          case 4:
            int v44 = *(_DWORD *)v40;
LABEL_46:
            if (v169 < 4) {
              unsigned int v41 = (v44 | (v42 << (8 * v169))) + 4;
            }
            else {
              unsigned int v41 = v44 + 4;
            }
            break;
          default:
            break;
        }
      }
      if (v41 >= 2)
      {
        swift_bridgeObjectRelease();
        unint64_t v46 = (unint64_t)&v40[v157] & v156;
        (*(void (**)(unint64_t, uint64_t))(v160 + 8))(v46, v163);
        v146((v159 + v46) & v168, v171);
      }
    }
    else
    {
      uint64_t v36 = (unsigned __int8 *)(v11 & ~v10);
      uint64_t v38 = v6;
      uint64_t v39 = ~v10;
      swift_bridgeObjectRelease();
    }
    unsigned int v47 = *(unsigned __int8 *)(v15 + v23);
    unsigned int v48 = v47 - 3;
    if (v47 < 3)
    {
      uint64_t v12 = v39;
      uint64_t v6 = v38;
      uint64_t v13 = (uint64_t)v36;
      uint64_t v5 = v150;
    }
    else
    {
      if (v23 <= 3) {
        uint64_t v49 = v23;
      }
      else {
        uint64_t v49 = 4;
      }
      uint64_t v12 = v39;
      uint64_t v6 = v38;
      uint64_t v13 = (uint64_t)v36;
      uint64_t v5 = v150;
      switch(v49)
      {
        case 1:
          int v50 = *(unsigned __int8 *)v15;
          goto LABEL_61;
        case 2:
          int v50 = *(unsigned __int16 *)v15;
          goto LABEL_61;
        case 3:
          int v50 = *(unsigned __int16 *)v15 | (*(unsigned __int8 *)(v15 + 2) << 16);
          goto LABEL_61;
        case 4:
          int v50 = *(_DWORD *)v15;
LABEL_61:
          if (v23 < 4) {
            unsigned int v47 = (v50 | (v48 << (8 * v23))) + 3;
          }
          else {
            unsigned int v47 = v50 + 3;
          }
          break;
        default:
          break;
      }
    }
    if (v47 == 2)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v13, v15, v171);
      *(_OWORD *)(((v13 | 7) + v165) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((v15 | 7) + v165) & 0xFFFFFFFFFFFFFFF8);
      *(unsigned char *)(v13 + v23) = 2;
    }
    else
    {
      if (v47 == 1)
      {
        *(void *)uint64_t v13 = *(void *)v15;
        *(void *)(v13 + 8) = *(void *)(v15 + 8);
        unint64_t v51 = (v164 + v13) & v168;
        unint64_t v52 = (v164 + v15) & v168;
        unint64_t v53 = *(void (**)(uint64_t, unint64_t, uint64_t))(v6 + 16);
        swift_bridgeObjectRetain();
        v144 = v53;
        v53(v51, v52, v171);
        uint64_t v54 = v12;
        uint64_t v55 = (v51 + v10 + v165) & v12;
        uint64_t v147 = v54;
        unsigned int v56 = (unsigned __int8 *)((v52 + v10 + v165) & v54);
        unsigned int v57 = v56[v169];
        unsigned int v58 = v57 - 4;
        if (v57 >= 4)
        {
          if (v169 <= 3) {
            uint64_t v59 = v169;
          }
          else {
            uint64_t v59 = 4;
          }
          switch(v59)
          {
            case 1:
              int v60 = *v56;
              goto LABEL_78;
            case 2:
              int v60 = *(unsigned __int16 *)v56;
              goto LABEL_78;
            case 3:
              int v60 = *(unsigned __int16 *)((v52 + v10 + v165) & v54) | (*(unsigned __int8 *)(((v52 + v10 + v165) & v54)
                                                                                          + 2) << 16);
              goto LABEL_78;
            case 4:
              int v60 = *(_DWORD *)v56;
LABEL_78:
              if (v169 < 4) {
                unsigned int v57 = (v60 | (v58 << (8 * v169))) + 4;
              }
              else {
                unsigned int v57 = v60 + 4;
              }
              break;
            default:
              break;
          }
        }
        switch(v57)
        {
          case 1u:
            *(unsigned char *)uint64_t v55 = *v56;
            char v61 = 1;
            break;
          case 2u:
            *(void *)uint64_t v55 = *(void *)v56;
            *(void *)(v55 + 8) = *(void *)(((v52 + v10 + v165) & v54) + 8);
            uint64_t v62 = (v157 + v55) & v156;
            uint64_t v142 = v55;
            unint64_t v63 = (unint64_t)&v56[v157] & v156;
            v141 = *(void (**)(uint64_t, unint64_t, uint64_t))(v160 + 16);
            swift_bridgeObjectRetain();
            v141(v62, v63, v163);
            uint64_t v64 = (v159 + v62) & v168;
            unint64_t v65 = (v159 + v63) & v168;
            uint64_t v55 = v142;
            v144(v64, v65, v171);
            *(void *)((v154 + v64) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v154 + v65) & 0xFFFFFFFFFFFFFFF8);
            *(unsigned char *)(v149 + v142) = v56[v149];
            char v61 = 2;
            break;
          case 3u:
            *(void *)uint64_t v55 = *(void *)v56;
            *(void *)(v55 + 8) = *(void *)(((v52 + v10 + v165) & v54) + 8);
            uint64_t v66 = (v157 + v55) & v156;
            unint64_t v67 = (unint64_t)&v56[v157] & v156;
            v143 = *(void (**)(uint64_t, unint64_t, uint64_t))(v160 + 16);
            swift_bridgeObjectRetain();
            v143(v66, v67, v163);
            uint64_t v68 = (v159 + v66) & v168;
            unint64_t v69 = (v159 + v67) & v168;
            v144(v68, v69, v171);
            *(void *)((v154 + v68) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v154 + v69) & 0xFFFFFFFFFFFFFFF8);
            char v61 = 3;
            break;
          default:
            char v61 = 0;
            *(_WORD *)uint64_t v55 = *(_WORD *)v56;
            break;
        }
        uint64_t v34 = v169;
        unint64_t v11 = (unint64_t)v151;
        uint64_t v14 = v153;
        *(unsigned char *)(v55 + v169) = v61;
        *(unsigned char *)(v13 + v23) = 1;
        uint64_t v12 = v147;
        goto LABEL_87;
      }
      *(void *)uint64_t v13 = *(void *)v15;
      *(void *)(v13 + 8) = *(void *)(v15 + 8);
      *(unsigned char *)(v13 + v23) = 0;
      swift_bridgeObjectRetain();
    }
    uint64_t v34 = v169;
    unint64_t v11 = (unint64_t)v151;
    uint64_t v14 = v153;
    goto LABEL_87;
  }
  uint64_t v28 = *(void *)(v6 + 64);
  uint64_t v29 = *(void *)(v8 + 64);
  uint64_t v168 = ~v7;
  uint64_t v164 = v7 + 16;
  uint64_t v165 = v28;
  uint64_t v156 = ~v9;
  uint64_t v157 = v9 + 16;
  uint64_t v159 = v29 + v7;
  uint64_t v30 = v28 + 7;
  unint64_t v31 = (v28 + 7 + ((v29 + v7 + ((v9 + 16) & ~v9)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = v31 + 8;
  unint64_t v33 = v31 + 9;
  unint64_t v149 = v32;
  if (v33 <= v32) {
    unint64_t v33 = v32;
  }
  if (v33 <= 2) {
    uint64_t v34 = 2;
  }
  else {
    uint64_t v34 = v33;
  }
  unint64_t v35 = ((v10 + ((v7 + 16) & ~v7) + v28) & v12 | 1) + v34;
  uint64_t v154 = v28 + 7;
  if (v35 <= (v30 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v35 = (v30 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v35 <= 0x10) {
    uint64_t v23 = 16;
  }
  else {
    uint64_t v23 = v35;
  }
LABEL_87:
  size_t v70 = v23 + 1;
  uint64_t v71 = (void *)(((v11 | v10) + v23 + 1) & v12);
  unint64_t v72 = (void *)(((v14 | v10) + v23 + 1) & v12);
  unsigned int v73 = *((unsigned __int8 *)v71 + v23);
  unsigned int v74 = *((unsigned __int8 *)v72 + v23);
  if (v73 > 2)
  {
    if (v74 <= 2)
    {
      if (v74 == 2)
      {
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 16))(((v11 | v10) + v23 + 1) & v12, ((v14 | v10) + v23 + 1) & v12, v171);
        *(_OWORD *)(((unint64_t)v71 + v154) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v72 + v154) & 0xFFFFFFFFFFFFFFF8);
        char v102 = 2;
      }
      else
      {
        if (v74 != 1)
        {
          *uint64_t v71 = *v72;
          *(void *)((((v11 | v10) + v23 + 1) & v12) + 8) = *(void *)((((v14 | v10) + v23 + 1) & v12) + 8);
          *((unsigned char *)v71 + v23) = 0;
          swift_bridgeObjectRetain();
          goto LABEL_178;
        }
        v145 = (unsigned __int8 *)v13;
        *uint64_t v71 = *v72;
        *(void *)((((v11 | v10) + v23 + 1) & v12) + 8) = *(void *)((((v14 | v10) + v23 + 1) & v12) + 8);
        uint64_t v82 = v6;
        unint64_t v83 = ((unint64_t)v71 + v164) & v168;
        unint64_t v84 = ((unint64_t)v72 + v164) & v168;
        int v85 = *(void (**)(unint64_t, unint64_t, uint64_t))(v82 + 16);
        uint64_t v170 = v34;
        swift_bridgeObjectRetain();
        v85(v83, v84, v171);
        uint64_t v86 = (v165 + v10 + v83) & v12;
        uint64_t v148 = v12;
        uint64_t v87 = (unsigned __int8 *)((v165 + v10 + v84) & v12);
        unsigned int v88 = v87[v170];
        unsigned int v89 = v88 - 4;
        if (v88 >= 4)
        {
          if (v170 <= 3) {
            uint64_t v90 = v170;
          }
          else {
            uint64_t v90 = 4;
          }
          switch(v90)
          {
            case 1:
              int v91 = *v87;
              goto LABEL_125;
            case 2:
              int v91 = *(unsigned __int16 *)v87;
              goto LABEL_125;
            case 3:
              int v91 = *(unsigned __int16 *)v87 | (v87[2] << 16);
              goto LABEL_125;
            case 4:
              int v91 = *(_DWORD *)v87;
LABEL_125:
              int v103 = (v91 | (v89 << (8 * v170))) + 4;
              unsigned int v88 = v91 + 4;
              if (v170 < 4) {
                unsigned int v88 = v103;
              }
              break;
            default:
              break;
          }
        }
        switch(v88)
        {
          case 1u:
LABEL_173:
            *(unsigned char *)uint64_t v86 = *v87;
            char v119 = 1;
            break;
          case 2u:
LABEL_174:
            *(void *)uint64_t v86 = *(void *)v87;
            *(void *)(v86 + 8) = *((void *)v87 + 1);
            uint64_t v120 = (v157 + v86) & v156;
            unint64_t v158 = (unint64_t)&v87[v157] & v156;
            v161 = *(void (**)(uint64_t, unint64_t, uint64_t))(v160 + 16);
            swift_bridgeObjectRetain();
            v161(v120, v158, v163);
            uint64_t v121 = (v159 + v120) & v168;
            v85(v121, (v159 + v158) & v168, v171);
            *(void *)((v154 + v121) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v154 + ((v159 + v158) & v168)) & 0xFFFFFFFFFFFFFFF8);
            *(unsigned char *)(v86 + v149) = v87[v149];
            char v119 = 2;
            break;
          case 3u:
LABEL_175:
            *(void *)uint64_t v86 = *(void *)v87;
            *(void *)(v86 + 8) = *((void *)v87 + 1);
            uint64_t v122 = (v157 + v86) & v156;
            unint64_t v123 = (unint64_t)&v87[v157] & v156;
            v162 = *(void (**)(uint64_t, unint64_t, uint64_t))(v160 + 16);
            swift_bridgeObjectRetain();
            v162(v122, v123, v163);
            uint64_t v124 = (v159 + v122) & v168;
            v85(v124, (v159 + v123) & v168, v171);
            *(void *)((v154 + v124) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v154 + ((v159 + v123) & v168)) & 0xFFFFFFFFFFFFFFF8);
            char v119 = 3;
            break;
          default:
LABEL_172:
            char v119 = 0;
            *(_WORD *)uint64_t v86 = *(_WORD *)v87;
            break;
        }
        uint64_t v13 = (uint64_t)v145;
        uint64_t v12 = v148;
        *(unsigned char *)(v86 + v170) = v119;
        char v102 = 1;
      }
      *((unsigned char *)v71 + v23) = v102;
      goto LABEL_178;
    }
    memcpy((void *)(((v11 | v10) + v23 + 1) & v12), (const void *)(((v14 | v10) + v23 + 1) & v12), v23 + 1);
  }
  else if (v74 > 2)
  {
    uint64_t v92 = v5;
    uint64_t v93 = (unsigned __int8 *)v13;
    if (v73 == 2)
    {
      (*(void (**)(void *, uint64_t))(v6 + 8))(v71, v171);
    }
    else if (v73 == 1)
    {
      uint64_t v94 = v34;
      swift_bridgeObjectRelease();
      uint64_t v95 = v6;
      unint64_t v96 = ((unint64_t)v71 + v164) & v168;
      v155 = *(void (**)(unint64_t, uint64_t))(v95 + 8);
      v155(v96, v171);
      uint64_t v97 = (unsigned __int8 *)((v165 + v10 + v96) & v12);
      unsigned int v98 = v97[v94];
      unsigned int v99 = v98 - 4;
      if (v98 >= 4)
      {
        if (v94 <= 3) {
          uint64_t v100 = v94;
        }
        else {
          uint64_t v100 = 4;
        }
        switch(v100)
        {
          case 1:
            int v101 = *v97;
            goto LABEL_131;
          case 2:
            int v101 = *(unsigned __int16 *)v97;
            goto LABEL_131;
          case 3:
            int v101 = *(unsigned __int16 *)v97 | (*(unsigned __int8 *)(((v165 + v10 + v96) & v12) + 2) << 16);
            goto LABEL_131;
          case 4:
            int v101 = *(_DWORD *)v97;
LABEL_131:
            int v104 = (v101 | (v99 << (8 * v94))) + 4;
            unsigned int v98 = v101 + 4;
            if (v94 < 4) {
              unsigned int v98 = v104;
            }
            break;
          default:
            break;
        }
      }
      if (v98 >= 2)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v160 + 8))((unint64_t)&v97[v157] & v156, v163);
        v155((v159 + ((unint64_t)&v97[v157] & v156)) & v168, v171);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    memcpy(v71, v72, v70);
    uint64_t v13 = (uint64_t)v93;
    uint64_t v5 = v92;
  }
  else if (v71 != v72)
  {
    v145 = (unsigned __int8 *)v13;
    uint64_t v170 = v34;
    if (v73 == 2)
    {
      uint64_t v76 = v12;
      uint64_t v75 = v6;
      (*(void (**)(unint64_t, uint64_t))(v6 + 8))(((v11 | v10) + v23 + 1) & v12, v171);
    }
    else if (v73 == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v75 = v6;
      v152 = *(void (**)(unint64_t, uint64_t))(v6 + 8);
      v152(((unint64_t)v71 + v164) & v168, v171);
      uint64_t v76 = v12;
      unint64_t v77 = (unsigned __int8 *)((v165 + v10 + (((unint64_t)v71 + v164) & v168)) & v12);
      unsigned int v78 = v77[v170];
      unsigned int v79 = v78 - 4;
      if (v78 >= 4)
      {
        if (v170 <= 3) {
          uint64_t v80 = v170;
        }
        else {
          uint64_t v80 = 4;
        }
        switch(v80)
        {
          case 1:
            int v81 = *v77;
            goto LABEL_139;
          case 2:
            int v81 = *(unsigned __int16 *)v77;
            goto LABEL_139;
          case 3:
            int v81 = *(unsigned __int16 *)v77 | (v77[2] << 16);
            goto LABEL_139;
          case 4:
            int v81 = *(_DWORD *)v77;
LABEL_139:
            int v105 = (v81 | (v79 << (8 * v170))) + 4;
            unsigned int v78 = v81 + 4;
            if (v170 < 4) {
              unsigned int v78 = v105;
            }
            break;
          default:
            break;
        }
      }
      if (v78 >= 2)
      {
        swift_bridgeObjectRelease();
        unint64_t v106 = (unint64_t)&v77[v157] & v156;
        (*(void (**)(unint64_t, uint64_t))(v160 + 8))(v106, v163);
        v152((v159 + v106) & v168, v171);
      }
    }
    else
    {
      uint64_t v75 = v6;
      uint64_t v76 = v12;
      swift_bridgeObjectRelease();
    }
    unsigned int v107 = *((unsigned __int8 *)v72 + v23);
    unsigned int v108 = v107 - 3;
    if (v107 < 3)
    {
      uint64_t v12 = v76;
    }
    else
    {
      if (v23 <= 3) {
        uint64_t v109 = v23;
      }
      else {
        uint64_t v109 = 4;
      }
      uint64_t v12 = v76;
      switch(v109)
      {
        case 1:
          int v110 = *(unsigned __int8 *)v72;
          goto LABEL_153;
        case 2:
          int v110 = *(unsigned __int16 *)v72;
          goto LABEL_153;
        case 3:
          int v110 = *(unsigned __int16 *)v72 | (*((unsigned __int8 *)v72 + 2) << 16);
          goto LABEL_153;
        case 4:
          int v110 = *(_DWORD *)v72;
LABEL_153:
          int v111 = (v110 | (v108 << (8 * v23))) + 3;
          unsigned int v107 = v110 + 3;
          if (v23 < 4) {
            unsigned int v107 = v111;
          }
          break;
        default:
          break;
      }
    }
    if (v107 == 2)
    {
      (*(void (**)(void *, void *, uint64_t))(v75 + 16))(v71, v72, v171);
      *(_OWORD *)(((unint64_t)v71 + v154) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v72 + v154) & 0xFFFFFFFFFFFFFFF8);
      *((unsigned char *)v71 + v23) = 2;
    }
    else
    {
      if (v107 == 1)
      {
        *uint64_t v71 = *v72;
        v71[1] = v72[1];
        unint64_t v112 = ((unint64_t)v71 + v164) & v168;
        unint64_t v113 = ((unint64_t)v72 + v164) & v168;
        int v85 = *(void (**)(unint64_t, unint64_t, uint64_t))(v75 + 16);
        swift_bridgeObjectRetain();
        v85(v112, v113, v171);
        uint64_t v86 = (v165 + v10 + v112) & v12;
        uint64_t v148 = v12;
        uint64_t v87 = (unsigned __int8 *)((v165 + v10 + v113) & v12);
        unsigned int v114 = v87[v170];
        unsigned int v115 = v114 - 4;
        if (v114 >= 4)
        {
          if (v170 <= 3) {
            uint64_t v116 = v170;
          }
          else {
            uint64_t v116 = 4;
          }
          switch(v116)
          {
            case 1:
              int v117 = *v87;
              goto LABEL_169;
            case 2:
              int v117 = *(unsigned __int16 *)v87;
              goto LABEL_169;
            case 3:
              int v117 = *(unsigned __int16 *)v87 | (v87[2] << 16);
              goto LABEL_169;
            case 4:
              int v117 = *(_DWORD *)v87;
LABEL_169:
              int v118 = (v117 | (v115 << (8 * v170))) + 4;
              unsigned int v114 = v117 + 4;
              if (v170 < 4) {
                unsigned int v114 = v118;
              }
              break;
            default:
              break;
          }
        }
        switch(v114)
        {
          case 1u:
            goto LABEL_173;
          case 2u:
            goto LABEL_174;
          case 3u:
            goto LABEL_175;
          default:
            goto LABEL_172;
        }
      }
      *uint64_t v71 = *v72;
      v71[1] = v72[1];
      *((unsigned char *)v71 + v23) = 0;
      swift_bridgeObjectRetain();
    }
    uint64_t v13 = (uint64_t)v145;
  }
LABEL_178:
  size_t v125 = ((v70 + v10) & v12) + v70;
  unint64_t v126 = ((v13 | 7) + v125) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v127 = ((v166 | 7) + v125) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v126 = *(void *)v127;
  *(void *)(v126 + 8) = *(void *)(v127 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v126 + 16) = *(unsigned char *)(v127 + 16);
  *(unsigned char *)(v126 + 17) = *(unsigned char *)(v127 + 17);
  *(unsigned char *)(v126 + 18) = *(unsigned char *)(v127 + 18);
  uint64_t v128 = *(void *)(*(void *)(v167 + 16) - 8);
  uint64_t v129 = v128 + 24;
  uint64_t v130 = *(unsigned __int8 *)(v128 + 80);
  uint64_t v131 = (v130 + 19 + v126) & ~v130;
  uint64_t v132 = (v130 + 19 + v127) & ~v130;
  (*(void (**)(uint64_t, uint64_t))(v128 + 24))(v131, v132);
  uint64_t v133 = *(void *)(v129 + 40);
  unint64_t v134 = v133 + v131;
  uint64_t v135 = v133 + v132;
  *(unsigned char *)unint64_t v134 = *(unsigned char *)v135;
  unint64_t v136 = v134 & 0xFFFFFFFFFFFFFFF8;
  v135 &= 0xFFFFFFFFFFFFFFF8;
  uint64_t v137 = *(void *)(v135 + 8);
  LOBYTE(v132) = *(unsigned char *)(v135 + 16);
  sub_22EADDF00(v137, v132);
  uint64_t v138 = *(void *)(v136 + 8);
  char v139 = *(unsigned char *)(v136 + 16);
  *(void *)(v136 + 8) = v137;
  *(unsigned char *)(v136 + 16) = v132;
  sub_22EADDB08(v138, v139);
  return v5;
}

_OWORD *sub_22EBF37E8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = sub_22EE7F6E0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v103 = v7;
  uint64_t v104 = v6;
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = sub_22EE7F5D0();
  uint64_t v93 = *(void *)(v9 - 8);
  uint64_t v94 = v9;
  uint64_t v10 = *(unsigned __int8 *)(v93 + 80);
  uint64_t v11 = v8 | v10 | 7;
  char v102 = a1;
  unint64_t v12 = (unint64_t)a1 + v11 + 32;
  uint64_t v13 = (_OWORD *)(v12 & ~v11);
  unint64_t v14 = (unint64_t)a2 + v11 + 32;
  uint64_t v15 = v14 & ~v11;
  uint64_t v16 = v8 + 16;
  uint64_t v17 = *(void *)(v7 + 64);
  uint64_t v97 = v11 + v17;
  uint64_t v18 = (v11 + v17 + ((v8 + 16) & ~v8)) & ~v11;
  uint64_t v91 = v10 + 16;
  uint64_t v92 = *(void *)(v93 + 64) + v8;
  uint64_t v19 = v17 + 7;
  unint64_t v20 = (v17 + 7 + ((v92 + ((v10 + 16) & ~v10)) & ~v8)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = v20 + 8;
  unint64_t v22 = v20 + 9;
  unint64_t v87 = v21;
  if (v22 <= v21) {
    unint64_t v22 = v21;
  }
  if (v22 <= 2) {
    uint64_t v23 = 2;
  }
  else {
    uint64_t v23 = v22;
  }
  if (v23 + v18 + 1 > (v19 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v24 = v23 + v18 + 1;
  }
  else {
    unint64_t v24 = (v19 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v24 <= 0x10) {
    uint64_t v25 = 16;
  }
  else {
    uint64_t v25 = v24;
  }
  unsigned int v26 = *(unsigned __int8 *)(v15 + v25);
  unsigned int v27 = v26 - 3;
  if (v26 >= 3)
  {
    if (v25 <= 3) {
      uint64_t v28 = v25;
    }
    else {
      uint64_t v28 = 4;
    }
    switch(v28)
    {
      case 1:
        int v29 = *(unsigned __int8 *)v15;
        goto LABEL_21;
      case 2:
        int v29 = *(unsigned __int16 *)v15;
        goto LABEL_21;
      case 3:
        int v29 = *(unsigned __int16 *)v15 | (*(unsigned __int8 *)((v14 & ~v11) + 2) << 16);
        goto LABEL_21;
      case 4:
        int v29 = *(_DWORD *)v15;
LABEL_21:
        int v30 = (v29 | (v27 << (8 * v25))) + 3;
        unsigned int v26 = v29 + 3;
        if (v25 < 4) {
          unsigned int v26 = v30;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v31 = ~v11;
  uint64_t v100 = ~v8;
  uint64_t v90 = ~v10;
  uint64_t v105 = v12 & ~v11;
  uint64_t v88 = v8 + 16;
  if (v26 == 2)
  {
    uint64_t v40 = v23;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 32))(v12 & ~v11, v14 & ~v11, v104);
    uint64_t v23 = v40;
    *(_OWORD *)(((unint64_t)v13 + v19) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v19 + v15) & 0xFFFFFFFFFFFFFFF8);
    char v41 = 2;
  }
  else if (v26 == 1)
  {
    *uint64_t v13 = *(_OWORD *)v15;
    unint64_t v32 = ((unint64_t)v13 + v16) & v100;
    unint64_t v33 = (v16 + v15) & v100;
    uint64_t v95 = v23;
    uint64_t v86 = *(void (**)(void))(v103 + 32);
    ((void (*)(unint64_t, unint64_t, uint64_t))v86)(v32, v33, v104);
    uint64_t v23 = v95;
    uint64_t v34 = (unsigned char *)((v97 + v32) & v31);
    unint64_t v35 = (unsigned __int8 *)((v97 + v33) & v31);
    unsigned int v36 = v35[v95];
    unsigned int v37 = v36 - 4;
    if (v36 >= 4)
    {
      if (v95 <= 3) {
        uint64_t v38 = v95;
      }
      else {
        uint64_t v38 = 4;
      }
      switch(v38)
      {
        case 1:
          int v39 = *v35;
          goto LABEL_36;
        case 2:
          int v39 = *(unsigned __int16 *)v35;
          goto LABEL_36;
        case 3:
          int v39 = *(unsigned __int16 *)v35 | (*(unsigned __int8 *)(((v97 + v33) & v31) + 2) << 16);
          goto LABEL_36;
        case 4:
          int v39 = *(_DWORD *)v35;
LABEL_36:
          int v42 = (v39 | (v37 << (8 * v95))) + 4;
          unsigned int v36 = v39 + 4;
          if (v95 < 4) {
            unsigned int v36 = v42;
          }
          break;
        default:
          break;
      }
    }
    switch(v36)
    {
      case 1u:
        *uint64_t v34 = *v35;
        char v43 = 1;
        break;
      case 2u:
        *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
        unint64_t v83 = (unint64_t)&v34[v91] & v90;
        unint64_t v84 = v34;
        (*(void (**)(void))(v93 + 32))();
        v86();
        uint64_t v34 = v84;
        uint64_t v23 = v95;
        *(void *)((v19 + ((v92 + v83) & v100)) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v19
                                                                                      + ((v92
                                                                                        + ((unint64_t)&v35[v91] & v90)) & v100)) & 0xFFFFFFFFFFFFFFF8);
        v84[v87] = v35[v87];
        char v43 = 2;
        break;
      case 3u:
        *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
        unint64_t v44 = (unint64_t)&v35[v91] & v90;
        unint64_t v45 = (unint64_t)&v34[v91] & v90;
        int v85 = v34;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v93 + 32))(v45, v44, v94);
        unint64_t v46 = (v92 + v45) & v100;
        unint64_t v47 = (v92 + v44) & v100;
        ((void (*)(unint64_t, unint64_t, uint64_t))v86)(v46, v47, v104);
        uint64_t v34 = v85;
        uint64_t v23 = v95;
        *(void *)((v19 + v46) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v19 + v47) & 0xFFFFFFFFFFFFFFF8);
        char v43 = 3;
        break;
      default:
        char v43 = 0;
        *(_WORD *)uint64_t v34 = *(_WORD *)v35;
        break;
    }
    uint64_t v13 = (_OWORD *)(v12 & ~v11);
    v34[v23] = v43;
    char v41 = 1;
  }
  else
  {
    char v41 = 0;
    *uint64_t v13 = *(_OWORD *)v15;
  }
  *((unsigned char *)v13 + v25) = v41;
  unsigned int v48 = (_OWORD *)(((v12 | v11) + v25 + 1) & v31);
  uint64_t v49 = (_OWORD *)(((v14 | v11) + v25 + 1) & v31);
  unsigned int v50 = *((unsigned __int8 *)v49 + v25);
  if (v50 > 2)
  {
    memcpy((void *)(((v12 | v11) + v25 + 1) & v31), v49, v25 + 1);
LABEL_56:
    uint64_t v60 = a3;
    char v61 = v102;
    goto LABEL_57;
  }
  if (v50 == 2)
  {
    (*(void (**)(unint64_t, _OWORD *, uint64_t))(v103 + 32))(((v12 | v11) + v25 + 1) & v31, v49, v104);
    *(_OWORD *)(((unint64_t)v48 + v19) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v49 + v19) & 0xFFFFFFFFFFFFFFF8);
    *((unsigned char *)v48 + v25) = 2;
    goto LABEL_56;
  }
  if (v50 != 1)
  {
    *unsigned int v48 = *v49;
    *((unsigned char *)v48 + v25) = 0;
    goto LABEL_56;
  }
  *unsigned int v48 = *v49;
  unint64_t v51 = ((unint64_t)v48 + v88) & v100;
  unint64_t v52 = ((unint64_t)v49 + v88) & v100;
  uint64_t v96 = v23;
  unsigned int v89 = *(void (**)(unint64_t, unint64_t, uint64_t))(v103 + 32);
  v89(v51, v52, v104);
  uint64_t v53 = v96;
  uint64_t v54 = (unsigned char *)((v97 + v51) & v31);
  uint64_t v55 = (unsigned __int8 *)((v97 + v52) & v31);
  unsigned int v56 = v55[v96];
  unsigned int v57 = v56 - 4;
  if (v56 >= 4)
  {
    if (v96 <= 3) {
      uint64_t v58 = v96;
    }
    else {
      uint64_t v58 = 4;
    }
    switch(v58)
    {
      case 1:
        int v59 = *v55;
        goto LABEL_61;
      case 2:
        int v59 = *(unsigned __int16 *)v55;
        goto LABEL_61;
      case 3:
        int v59 = *(unsigned __int16 *)v55 | (*(unsigned __int8 *)(((v97 + v52) & v31) + 2) << 16);
        goto LABEL_61;
      case 4:
        int v59 = *(_DWORD *)v55;
LABEL_61:
        int v75 = (v59 | (v57 << (8 * v96))) + 4;
        unsigned int v56 = v59 + 4;
        if (v96 < 4) {
          unsigned int v56 = v75;
        }
        break;
      default:
        break;
    }
  }
  switch(v56)
  {
    case 1u:
      *uint64_t v54 = *v55;
      char v76 = 1;
      break;
    case 2u:
      *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
      unint64_t v77 = (unint64_t)&v54[v91] & v90;
      unsigned int v98 = (unsigned char *)((v97 + v51) & v31);
      (*(void (**)(unint64_t))(v93 + 32))(v77);
      unint64_t v78 = (v92 + v77) & v100;
      unint64_t v79 = (v92 + ((unint64_t)&v55[v91] & v90)) & v100;
      v89(v78, v79, v104);
      uint64_t v53 = v96;
      uint64_t v54 = v98;
      *(void *)((v19 + v78) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v19 + v79) & 0xFFFFFFFFFFFFFFF8);
      v98[v87] = v55[v87];
      char v76 = 2;
      break;
    case 3u:
      *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
      unint64_t v80 = (unint64_t)&v54[v91] & v90;
      unint64_t v81 = (unint64_t)&v55[v91] & v90;
      unsigned int v99 = (unsigned char *)((v97 + v51) & v31);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v93 + 32))(v80, v81, v94);
      unint64_t v82 = (v92 + v80) & v100;
      v89(v82, (v92 + v81) & v100, v104);
      uint64_t v53 = v96;
      uint64_t v54 = v99;
      *(void *)((v19 + v82) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v19 + ((v92 + v81) & v100)) & 0xFFFFFFFFFFFFFFF8);
      char v76 = 3;
      break;
    default:
      char v76 = 0;
      *(_WORD *)uint64_t v54 = *(_WORD *)v55;
      break;
  }
  uint64_t v60 = a3;
  char v61 = v102;
  v54[v53] = v76;
  *((unsigned char *)v48 + v25) = 1;
LABEL_57:
  uint64_t v62 = ((v25 + 1 + v11) & v31) + v25 + 1;
  unint64_t v63 = ((v105 | 7) + v62) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v64 = ((v15 | 7) + v62) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)unint64_t v63 = *(_OWORD *)v64;
  *(unsigned char *)(v63 + 16) = *(unsigned char *)(v64 + 16);
  *(unsigned char *)(v63 + 17) = *(unsigned char *)(v64 + 17);
  *(unsigned char *)(v63 + 18) = *(unsigned char *)(v64 + 18);
  uint64_t v65 = *(void *)(*(void *)(v60 + 16) - 8);
  uint64_t v66 = v65 + 32;
  uint64_t v67 = *(unsigned __int8 *)(v65 + 80);
  uint64_t v68 = (v67 + 19 + v63) & ~v67;
  uint64_t v69 = (v67 + 19 + v64) & ~v67;
  (*(void (**)(uint64_t, uint64_t))(v65 + 32))(v68, v69);
  uint64_t v70 = *(void *)(v66 + 32);
  uint64_t v71 = v70 + v68;
  uint64_t v72 = v70 + v69;
  *(unsigned char *)uint64_t v71 = *(unsigned char *)v72;
  v71 &= 0xFFFFFFFFFFFFFFF8;
  v72 &= 0xFFFFFFFFFFFFFFF8;
  char v73 = *(unsigned char *)(v72 + 16);
  *(void *)(v71 + 8) = *(void *)(v72 + 8);
  *(unsigned char *)(v71 + 16) = v73;
  return v61;
}

uint64_t sub_22EBF40F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v161 = sub_22EE7F6E0();
  uint64_t v7 = *(void *)(v161 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v148 = sub_22EE7F5D0();
  uint64_t v9 = *(void *)(v148 - 8);
  uint64_t v10 = v9;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = v8 | v11 | 7;
  uint64_t v13 = v12 + 32 + a1;
  uint64_t v14 = ~v12;
  uint64_t v15 = v13 & ~v12;
  uint64_t v16 = v12 + 32 + a2;
  uint64_t v17 = v16 & ~v12;
  uint64_t v159 = v17;
  uint64_t v162 = ~v12;
  uint64_t v160 = v7;
  uint64_t v156 = a3;
  if (v15 != v17)
  {
    uint64_t v149 = v8 + 16;
    uint64_t v18 = *(void *)(v7 + 64);
    uint64_t v19 = (v12 + ((v8 + 16) & ~v8) + v18) & v14;
    uint64_t v146 = v11 + 16;
    uint64_t v147 = *(void *)(v9 + 64) + v8;
    uint64_t v154 = v18;
    uint64_t v20 = v18 + 7;
    unint64_t v21 = (v20 + ((v147 + ((v11 + 16) & ~v11)) & ~v8)) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v22 = v21 + 8;
    unint64_t v23 = v21 + 9;
    unint64_t v143 = v22;
    uint64_t v144 = v20;
    if (v23 <= v22) {
      unint64_t v23 = v22;
    }
    if (v23 <= 2) {
      unint64_t v23 = 2;
    }
    unint64_t v158 = v23;
    unint64_t v24 = (v19 | 1) + v23;
    if (v24 <= (v20 & 0xFFFFFFFFFFFFFFF8) + 16) {
      unint64_t v24 = (v20 & 0xFFFFFFFFFFFFFFF8) + 16;
    }
    if (v24 <= 0x10) {
      uint64_t v25 = 16;
    }
    else {
      uint64_t v25 = v24;
    }
    unsigned int v26 = *(unsigned __int8 *)(v15 + v25);
    unsigned int v27 = v26 - 3;
    if (v26 >= 3)
    {
      if (v25 <= 3) {
        uint64_t v28 = v25;
      }
      else {
        uint64_t v28 = 4;
      }
      switch(v28)
      {
        case 1:
          int v29 = *(unsigned __int8 *)v15;
          goto LABEL_29;
        case 2:
          int v29 = *(unsigned __int16 *)v15;
          goto LABEL_29;
        case 3:
          int v29 = *(unsigned __int16 *)v15 | (*(unsigned __int8 *)((v13 & ~v12) + 2) << 16);
          goto LABEL_29;
        case 4:
          int v29 = *(_DWORD *)v15;
LABEL_29:
          if (v25 < 4) {
            unsigned int v26 = (v29 | (v27 << (8 * v25))) + 3;
          }
          else {
            unsigned int v26 = v29 + 3;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v157 = ~v8;
    uint64_t v145 = ~v11;
    uint64_t v152 = v10;
    if (v26 == 2)
    {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v13 & ~v12, v161);
    }
    else if (v26 == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
      v38((v149 + v15) & v157, v161);
      int v39 = (unsigned __int8 *)((((v149 + v15) & v157) + v12 + v154) & v162);
      unsigned int v40 = v39[v158];
      unsigned int v41 = v40 - 4;
      if (v40 < 4)
      {
        uint64_t v17 = v16 & ~v12;
      }
      else
      {
        if (v158 <= 3) {
          uint64_t v42 = v158;
        }
        else {
          uint64_t v42 = 4;
        }
        uint64_t v17 = v16 & ~v12;
        switch(v42)
        {
          case 1:
            int v43 = *v39;
            goto LABEL_46;
          case 2:
            int v43 = *(unsigned __int16 *)v39;
            goto LABEL_46;
          case 3:
            int v43 = *(unsigned __int16 *)v39 | (v39[2] << 16);
            goto LABEL_46;
          case 4:
            int v43 = *(_DWORD *)v39;
LABEL_46:
            if (v158 < 4) {
              unsigned int v40 = (v43 | (v41 << (8 * v158))) + 4;
            }
            else {
              unsigned int v40 = v43 + 4;
            }
            break;
          default:
            break;
        }
      }
      if (v40 >= 2)
      {
        if (v40 == 3)
        {
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v152 + 8))((unint64_t)&v39[v146] & v145, v148);
          uint64_t v17 = v16 & ~v12;
          v38((v147 + ((unint64_t)&v39[v146] & v145)) & v157, v161);
        }
        else
        {
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v152 + 8))((unint64_t)&v39[v146] & v145, v148);
          v38((v147 + ((unint64_t)&v39[v146] & v145)) & v157, v161);
          uint64_t v17 = v16 & ~v12;
        }
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    unsigned int v44 = *(unsigned __int8 *)(v17 + v25);
    unsigned int v45 = v44 - 3;
    if (v44 < 3)
    {
      uint64_t v47 = v160;
    }
    else
    {
      if (v25 <= 3) {
        uint64_t v46 = v25;
      }
      else {
        uint64_t v46 = 4;
      }
      uint64_t v47 = v160;
      switch(v46)
      {
        case 1:
          int v48 = *(unsigned __int8 *)v17;
          goto LABEL_63;
        case 2:
          int v48 = *(unsigned __int16 *)v17;
          goto LABEL_63;
        case 3:
          int v48 = *(unsigned __int16 *)v17 | (*(unsigned __int8 *)(v17 + 2) << 16);
          goto LABEL_63;
        case 4:
          int v48 = *(_DWORD *)v17;
LABEL_63:
          if (v25 < 4) {
            unsigned int v44 = (v48 | (v45 << (8 * v25))) + 3;
          }
          else {
            unsigned int v44 = v48 + 3;
          }
          break;
        default:
          break;
      }
    }
    if (v44 == 2)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 32))(v13 & ~v12, v17, v161);
      *(_OWORD *)(((v15 | 7) + v154) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((v17 | 7) + v154) & 0xFFFFFFFFFFFFFFF8);
      *(unsigned char *)(v15 + v25) = 2;
    }
    else
    {
      if (v44 == 1)
      {
        *(_OWORD *)uint64_t v15 = *(_OWORD *)v17;
        unint64_t v49 = (v149 + v17) & v157;
        v141 = *(void (**)(uint64_t, unint64_t, uint64_t))(v47 + 32);
        v141((v149 + v15) & v157, v49, v161);
        unsigned int v50 = (unsigned char *)((((v149 + v15) & v157) + v12 + v154) & v162);
        unint64_t v51 = (unsigned __int8 *)((v49 + v12 + v154) & v162);
        unint64_t v52 = v158;
        unsigned int v53 = v51[v158];
        unsigned int v54 = v53 - 4;
        if (v53 >= 4)
        {
          if (v158 <= 3) {
            uint64_t v55 = v158;
          }
          else {
            uint64_t v55 = 4;
          }
          switch(v55)
          {
            case 1:
              int v56 = *v51;
              goto LABEL_80;
            case 2:
              int v56 = *(unsigned __int16 *)v51;
              goto LABEL_80;
            case 3:
              int v56 = *(unsigned __int16 *)v51 | (*(unsigned __int8 *)(((v49 + v12 + v154) & v162) + 2) << 16);
              goto LABEL_80;
            case 4:
              int v56 = *(_DWORD *)v51;
LABEL_80:
              if (v158 < 4) {
                unsigned int v53 = (v56 | (v54 << (8 * v158))) + 4;
              }
              else {
                unsigned int v53 = v56 + 4;
              }
              break;
            default:
              break;
          }
        }
        switch(v53)
        {
          case 1u:
            unsigned char *v50 = *v51;
            char v57 = 1;
            break;
          case 2u:
            *(_OWORD *)unsigned int v50 = *(_OWORD *)v51;
            unint64_t v58 = (unint64_t)&v50[v146] & v145;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v152 + 32))(v58, (unint64_t)&v51[v146] & v145, v148);
            unint64_t v59 = (v147 + v58) & v157;
            unint64_t v60 = (v147 + ((unint64_t)&v51[v146] & v145)) & v157;
            v141(v59, v60, v161);
            unsigned int v50 = (unsigned char *)((((v149 + v15) & v157) + v12 + v154) & v162);
            unint64_t v52 = v158;
            *(void *)((v144 + v59) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v144 + v60) & 0xFFFFFFFFFFFFFFF8);
            v50[v143] = v51[v143];
            char v57 = 2;
            break;
          case 3u:
            *(_OWORD *)unsigned int v50 = *(_OWORD *)v51;
            unint64_t v61 = (unint64_t)&v50[v146] & v145;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v152 + 32))(v61, (unint64_t)&v51[v146] & v145, v148);
            unint64_t v62 = (v147 + v61) & v157;
            unint64_t v63 = (v147 + ((unint64_t)&v51[v146] & v145)) & v157;
            v141(v62, v63, v161);
            unsigned int v50 = (unsigned char *)((((v149 + v15) & v157) + v12 + v154) & v162);
            unint64_t v52 = v158;
            *(void *)((v144 + v62) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v144 + v63) & 0xFFFFFFFFFFFFFFF8);
            char v57 = 3;
            break;
          default:
            char v57 = 0;
            *(_WORD *)unsigned int v50 = *(_WORD *)v51;
            break;
        }
        uint64_t v14 = ~v12;
        v50[v52] = v57;
        *(unsigned char *)(v15 + v25) = 1;
        goto LABEL_89;
      }
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v17;
      *(unsigned char *)(v15 + v25) = 0;
    }
    uint64_t v14 = ~v12;
LABEL_89:
    uint64_t v10 = v152;
    goto LABEL_90;
  }
  uint64_t v30 = *(void *)(v7 + 64);
  uint64_t v31 = *(void *)(v9 + 64);
  uint64_t v157 = ~v8;
  uint64_t v149 = v8 + 16;
  uint64_t v145 = ~v11;
  uint64_t v146 = v11 + 16;
  uint64_t v147 = v31 + v8;
  uint64_t v154 = v30;
  uint64_t v32 = v30 + 7;
  unint64_t v33 = (v30 + 7 + ((v31 + v8 + ((v11 + 16) & ~v11)) & ~v8)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = v33 + 8;
  unint64_t v35 = v33 + 9;
  unint64_t v143 = v34;
  uint64_t v144 = v30 + 7;
  if (v35 <= v34) {
    unint64_t v35 = v34;
  }
  uint64_t v36 = 2;
  if (v35 > 2) {
    uint64_t v36 = v35;
  }
  unint64_t v158 = v36;
  unint64_t v37 = ((v12 + ((v8 + 16) & ~v8) + v30) & v14 | 1) + v36;
  if (v37 <= (v32 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v37 = (v32 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v37 <= 0x10) {
    uint64_t v25 = 16;
  }
  else {
    uint64_t v25 = v37;
  }
LABEL_90:
  size_t v64 = v25 + 1;
  uint64_t v65 = (_OWORD *)(((v13 | v12) + v25 + 1) & v14);
  uint64_t v66 = (unsigned __int8 *)(((v16 | v12) + v25 + 1) & v14);
  unsigned int v67 = *((unsigned __int8 *)v65 + v25);
  unsigned int v68 = v66[v25];
  if (v67 > 2)
  {
    if (v68 <= 2)
    {
      if (v68 == 2)
      {
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v160 + 32))(((v13 | v12) + v25 + 1) & v14, v66, v161);
        uint64_t v14 = ~v12;
        *(_OWORD *)(((unint64_t)v65 + v144) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v66[v144] & 0xFFFFFFFFFFFFFFF8);
        char v94 = 2;
LABEL_186:
        *((unsigned char *)v65 + v25) = v94;
        goto LABEL_187;
      }
      if (v68 == 1)
      {
        uint64_t v75 = v10;
        *uint64_t v65 = *(_OWORD *)v66;
        unint64_t v76 = ((unint64_t)v65 + v149) & v157;
        unint64_t v77 = (unint64_t)&v66[v149] & v157;
        uint64_t v78 = v14;
        v150 = *(void (**)(unint64_t, unint64_t, uint64_t))(v160 + 32);
        v150(v76, v77, v161);
        unint64_t v79 = (unsigned char *)((v154 + v12 + v76) & v78);
        unint64_t v80 = (unsigned __int8 *)((v154 + v12 + v77) & v78);
        unsigned int v81 = v80[v158];
        unsigned int v82 = v81 - 4;
        if (v81 < 4)
        {
          uint64_t v84 = v75;
        }
        else
        {
          if (v158 <= 3) {
            uint64_t v83 = v158;
          }
          else {
            uint64_t v83 = 4;
          }
          uint64_t v84 = v75;
          switch(v83)
          {
            case 1:
              int v85 = *v80;
              goto LABEL_128;
            case 2:
              int v85 = *(unsigned __int16 *)v80;
              goto LABEL_128;
            case 3:
              int v85 = *(unsigned __int16 *)v80 | (v80[2] << 16);
              goto LABEL_128;
            case 4:
              int v85 = *(_DWORD *)v80;
LABEL_128:
              int v95 = (v85 | (v82 << (8 * v158))) + 4;
              unsigned int v81 = v85 + 4;
              if (v158 < 4) {
                unsigned int v81 = v95;
              }
              break;
            default:
              break;
          }
        }
        switch(v81)
        {
          case 1u:
            *unint64_t v79 = *v80;
            char v96 = 1;
            break;
          case 2u:
            *(_OWORD *)unint64_t v79 = *(_OWORD *)v80;
            unint64_t v97 = (unint64_t)&v79[v146] & v145;
            v155 = v79;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v84 + 32))(v97, (unint64_t)&v80[v146] & v145, v148);
            unint64_t v98 = (v147 + v97) & v157;
            unint64_t v99 = (v147 + ((unint64_t)&v80[v146] & v145)) & v157;
            v150(v98, v99, v161);
            unint64_t v79 = v155;
            *(void *)((v144 + v98) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v144 + v99) & 0xFFFFFFFFFFFFFFF8);
            v155[v143] = v80[v143];
            char v96 = 2;
            break;
          case 3u:
            *(_OWORD *)unint64_t v79 = *(_OWORD *)v80;
            unint64_t v100 = (unint64_t)&v79[v146] & v145;
            unint64_t v101 = (unint64_t)&v80[v146] & v145;
            char v102 = v79;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v84 + 32))(v100, v101, v148);
            unint64_t v103 = (v147 + v100) & v157;
            v150(v103, (v147 + v101) & v157, v161);
            unint64_t v79 = v102;
            *(void *)((v144 + v103) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v144 + ((v147 + v101) & v157)) & 0xFFFFFFFFFFFFFFF8);
            char v96 = 3;
            break;
          default:
            char v96 = 0;
            *(_WORD *)unint64_t v79 = *(_WORD *)v80;
            break;
        }
        uint64_t v14 = ~v12;
        v79[v158] = v96;
        goto LABEL_185;
      }
      *uint64_t v65 = *(_OWORD *)v66;
      *((unsigned char *)v65 + v25) = 0;
      goto LABEL_187;
    }
LABEL_143:
    memcpy(v65, v66, v64);
LABEL_144:
    uint64_t v14 = ~v12;
    goto LABEL_187;
  }
  if (v68 > 2)
  {
    if (v67 == 2)
    {
      (*(void (**)(uint64_t, uint64_t))(v160 + 8))(((v13 | v12) + v25 + 1) & v14, v161);
    }
    else if (v67 == 1)
    {
      uint64_t v86 = v10;
      uint64_t v87 = v14;
      swift_bridgeObjectRelease();
      uint64_t v88 = *(void (**)(unint64_t, uint64_t))(v160 + 8);
      v88(((unint64_t)v65 + v149) & v157, v161);
      unsigned int v89 = (unsigned __int8 *)((v154 + v12 + (((unint64_t)v65 + v149) & v157)) & v87);
      unsigned int v90 = v89[v158];
      unsigned int v91 = v90 - 4;
      if (v90 >= 4)
      {
        if (v158 <= 3) {
          uint64_t v92 = v158;
        }
        else {
          uint64_t v92 = 4;
        }
        switch(v92)
        {
          case 1:
            int v93 = *v89;
            goto LABEL_139;
          case 2:
            int v93 = *(unsigned __int16 *)v89;
            goto LABEL_139;
          case 3:
            int v93 = *(unsigned __int16 *)v89 | (v89[2] << 16);
            goto LABEL_139;
          case 4:
            int v93 = *(_DWORD *)v89;
LABEL_139:
            int v104 = (v93 | (v91 << (8 * v158))) + 4;
            unsigned int v90 = v93 + 4;
            if (v158 < 4) {
              unsigned int v90 = v104;
            }
            break;
          default:
            break;
        }
      }
      if (v90 >= 2)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v86 + 8))((unint64_t)&v89[v146] & v145, v148);
        v88((v147 + ((unint64_t)&v89[v146] & v145)) & v157, v161);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    goto LABEL_143;
  }
  if (v65 != (_OWORD *)v66)
  {
    uint64_t v153 = v10;
    if (v67 == 2)
    {
      (*(void (**)(uint64_t, uint64_t))(v160 + 8))(((v13 | v12) + v25 + 1) & v14, v161);
    }
    else if (v67 == 1)
    {
      uint64_t v69 = v14;
      swift_bridgeObjectRelease();
      uint64_t v142 = *(void (**)(unint64_t, uint64_t))(v160 + 8);
      v142(((unint64_t)v65 + v149) & v157, v161);
      uint64_t v70 = (unsigned __int8 *)((v154 + v12 + (((unint64_t)v65 + v149) & v157)) & v69);
      unsigned int v71 = v70[v158];
      unsigned int v72 = v71 - 4;
      if (v71 >= 4)
      {
        if (v158 <= 3) {
          uint64_t v73 = v158;
        }
        else {
          uint64_t v73 = 4;
        }
        switch(v73)
        {
          case 1:
            int v74 = *v70;
            goto LABEL_148;
          case 2:
            int v74 = *(unsigned __int16 *)v70;
            goto LABEL_148;
          case 3:
            int v74 = *(unsigned __int16 *)v70 | (v70[2] << 16);
            goto LABEL_148;
          case 4:
            int v74 = *(_DWORD *)v70;
LABEL_148:
            int v105 = (v74 | (v72 << (8 * v158))) + 4;
            unsigned int v71 = v74 + 4;
            if (v158 < 4) {
              unsigned int v71 = v105;
            }
            break;
          default:
            break;
        }
      }
      if (v71 >= 2)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v153 + 8))((unint64_t)&v70[v146] & v145, v148);
        v142((v147 + ((unint64_t)&v70[v146] & v145)) & v157, v161);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    unsigned int v106 = v66[v25];
    unsigned int v107 = v106 - 3;
    if (v106 >= 3)
    {
      if (v25 <= 3) {
        uint64_t v108 = v25;
      }
      else {
        uint64_t v108 = 4;
      }
      switch(v108)
      {
        case 1:
          int v109 = *v66;
          goto LABEL_161;
        case 2:
          int v109 = *(unsigned __int16 *)v66;
          goto LABEL_161;
        case 3:
          int v109 = *(unsigned __int16 *)v66 | (v66[2] << 16);
          goto LABEL_161;
        case 4:
          int v109 = *(_DWORD *)v66;
LABEL_161:
          int v110 = (v109 | (v107 << (8 * v25))) + 3;
          unsigned int v106 = v109 + 3;
          if (v25 < 4) {
            unsigned int v106 = v110;
          }
          break;
        default:
          break;
      }
    }
    if (v106 == 2)
    {
      (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v160 + 32))(v65, v66, v161);
      *(_OWORD *)(((unint64_t)v65 + v144) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v66[v144] & 0xFFFFFFFFFFFFFFF8);
      *((unsigned char *)v65 + v25) = 2;
    }
    else
    {
      if (v106 == 1)
      {
        *uint64_t v65 = *(_OWORD *)v66;
        unint64_t v111 = ((unint64_t)v65 + v149) & v157;
        unint64_t v112 = (unint64_t)&v66[v149] & v157;
        v151 = *(void (**)(unint64_t, unint64_t, uint64_t))(v160 + 32);
        v151(v111, v112, v161);
        unint64_t v113 = (unsigned char *)((v154 + v12 + v111) & v162);
        unsigned int v114 = (unsigned __int8 *)((v154 + v12 + v112) & v162);
        unsigned int v115 = v114[v158];
        unsigned int v116 = v115 - 4;
        if (v115 < 4)
        {
          uint64_t v118 = v153;
        }
        else
        {
          if (v158 <= 3) {
            uint64_t v117 = v158;
          }
          else {
            uint64_t v117 = 4;
          }
          uint64_t v118 = v153;
          switch(v117)
          {
            case 1:
              int v119 = *v114;
              goto LABEL_177;
            case 2:
              int v119 = *(unsigned __int16 *)v114;
              goto LABEL_177;
            case 3:
              int v119 = *(unsigned __int16 *)v114 | (*(unsigned __int8 *)(((v154 + v12 + v112) & v162) + 2) << 16);
              goto LABEL_177;
            case 4:
              int v119 = *(_DWORD *)v114;
LABEL_177:
              int v120 = (v119 | (v116 << (8 * v158))) + 4;
              unsigned int v115 = v119 + 4;
              if (v158 < 4) {
                unsigned int v115 = v120;
              }
              break;
            default:
              break;
          }
        }
        switch(v115)
        {
          case 1u:
            *unint64_t v113 = *v114;
            char v121 = 1;
            break;
          case 2u:
            *(_OWORD *)unint64_t v113 = *(_OWORD *)v114;
            (*(void (**)(unint64_t))(v118 + 32))((unint64_t)&v113[v146] & v145);
            unint64_t v122 = (v147 + ((unint64_t)&v113[v146] & v145)) & v157;
            unint64_t v123 = (v147 + ((unint64_t)&v114[v146] & v145)) & v157;
            v151(v122, v123, v161);
            *(void *)((v144 + v122) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v144 + v123) & 0xFFFFFFFFFFFFFFF8);
            v113[v143] = v114[v143];
            char v121 = 2;
            break;
          case 3u:
            *(_OWORD *)unint64_t v113 = *(_OWORD *)v114;
            unint64_t v124 = (unint64_t)&v114[v146] & v145;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v118 + 32))((unint64_t)&v113[v146] & v145, v124, v148);
            unint64_t v125 = (v147 + ((unint64_t)&v113[v146] & v145)) & v157;
            v151(v125, (v147 + v124) & v157, v161);
            *(void *)((v144 + v125) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v144 + ((v147 + v124) & v157)) & 0xFFFFFFFFFFFFFFF8);
            char v121 = 3;
            break;
          default:
            char v121 = 0;
            *(_WORD *)unint64_t v113 = *(_WORD *)v114;
            break;
        }
        uint64_t v14 = ~v12;
        v113[v158] = v121;
LABEL_185:
        char v94 = 1;
        goto LABEL_186;
      }
      *uint64_t v65 = *(_OWORD *)v66;
      *((unsigned char *)v65 + v25) = 0;
    }
    goto LABEL_144;
  }
LABEL_187:
  size_t v126 = ((v64 + v12) & v14) + v64;
  unint64_t v127 = ((v15 | 7) + v126) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v128 = ((v159 | 7) + v126) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v127 = *(void *)v128;
  *(void *)(v127 + 8) = *(void *)(v128 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v127 + 16) = *(unsigned char *)(v128 + 16);
  *(unsigned char *)(v127 + 17) = *(unsigned char *)(v128 + 17);
  *(unsigned char *)(v127 + 18) = *(unsigned char *)(v128 + 18);
  uint64_t v129 = *(void *)(*(void *)(v156 + 16) - 8);
  uint64_t v130 = v129 + 40;
  uint64_t v131 = *(unsigned __int8 *)(v129 + 80);
  uint64_t v132 = (v131 + 19 + v127) & ~v131;
  uint64_t v133 = (v131 + 19 + v128) & ~v131;
  (*(void (**)(uint64_t, uint64_t))(v129 + 40))(v132, v133);
  uint64_t v134 = *(void *)(v130 + 24);
  uint64_t v135 = v134 + v132;
  uint64_t v136 = v134 + v133;
  *(unsigned char *)uint64_t v135 = *(unsigned char *)v136;
  v135 &= 0xFFFFFFFFFFFFFFF8;
  v136 &= 0xFFFFFFFFFFFFFFF8;
  uint64_t v137 = *(void *)(v136 + 8);
  LOBYTE(v136) = *(unsigned char *)(v136 + 16);
  uint64_t v138 = *(void *)(v135 + 8);
  char v139 = *(unsigned char *)(v135 + 16);
  *(void *)(v135 + 8) = v137;
  *(unsigned char *)(v135 + 16) = v136;
  sub_22EADDB08(v138, v139);
  return a1;
}

uint64_t sub_22EBF5438(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(sub_22EE7F6E0() - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(void *)(sub_22EE7F5D0() - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v10 | v7;
  uint64_t v12 = v10 | v7 | 7;
  unint64_t v13 = (v8 + 7 + ((*(void *)(v9 + 64) + v7 + ((v10 + 16) & ~v10)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v14 = v13 + 8;
  unint64_t v15 = v13 + 9;
  if (v15 <= v14) {
    unint64_t v15 = v14;
  }
  if (v15 <= 2) {
    unint64_t v15 = 2;
  }
  unint64_t v16 = v15 + ((((v7 + 16) & ~v7) + v8 + v12) & ~v12);
  if (v16 + 1 > ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v17 = v16 + 1;
  }
  else {
    unint64_t v17 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v17 <= 0x10) {
    uint64_t v18 = 16;
  }
  else {
    uint64_t v18 = v17;
  }
  uint64_t v19 = *(void *)(a3 + 16);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(unsigned int *)(v20 + 84);
  if (v21 <= 0x7FFFFFFF) {
    unsigned int v22 = 0x7FFFFFFF;
  }
  else {
    unsigned int v22 = *(_DWORD *)(v20 + 84);
  }
  uint64_t v23 = *(unsigned __int8 *)(v20 + 80);
  uint64_t v24 = *(void *)(v20 + 64);
  if (!a2) {
    return 0;
  }
  uint64_t v25 = ((v18 + 1 + v12) & ~v12) + v18 + 1;
  uint64_t v26 = v23 + 19;
  if (v22 < a2)
  {
    unint64_t v27 = ((((v26 + ((v25 + ((v11 + 32) & ~v12) + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v23) + v24) & 0xFFFFFFFFFFFFFFF8)
        + 17;
    if (v27 < 4) {
      unsigned int v28 = ((a2 - v22 + 255) >> (8 * v27)) + 1;
    }
    else {
      unsigned int v28 = 2;
    }
    if (v28 >= 0x10000) {
      LODWORD(v29) = 4;
    }
    else {
      LODWORD(v29) = 2;
    }
    if (v28 < 0x100) {
      LODWORD(v29) = 1;
    }
    if (v28 >= 2) {
      uint64_t v29 = v29;
    }
    else {
      uint64_t v29 = 0;
    }
    switch(v29)
    {
      case 1:
        int v30 = a1[v27];
        if (!a1[v27]) {
          break;
        }
        goto LABEL_32;
      case 2:
        int v30 = *(unsigned __int16 *)&a1[v27];
        if (*(_WORD *)&a1[v27]) {
          goto LABEL_32;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x22EBF573CLL);
      case 4:
        int v30 = *(_DWORD *)&a1[v27];
        if (!v30) {
          break;
        }
LABEL_32:
        int v32 = (v30 - 1) << (8 * v27);
        if (v27 >= 4) {
          int v32 = 0;
        }
        if (v27 == 1) {
          int v33 = *a1;
        }
        else {
          int v33 = *(_DWORD *)a1;
        }
        return v22 + (v33 | v32) + 1;
      default:
        break;
    }
  }
  if ((v21 & 0x80000000) != 0)
  {
    return __swift_getEnumTagSinglePayload((v26 + ((((unint64_t)&a1[v12 + 32] & ~v12 | 7) + v25) & 0xFFFFFFFFFFFFFFF8)) & ~v23, v21, v19);
  }
  else
  {
    unint64_t v34 = *((void *)a1 + 1);
    if (v34 >= 0xFFFFFFFF) {
      LODWORD(v34) = -1;
    }
    return (v34 + 1);
  }
}

void sub_22EBF5750(void *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(sub_22EE7F6E0() - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 64);
  uint64_t v11 = *(void *)(sub_22EE7F5D0() - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = v12 | v9;
  uint64_t v14 = v12 | v9 | 7;
  unint64_t v15 = (v10 + 7 + ((*(void *)(v11 + 64) + v9 + ((v12 + 16) & ~v12)) & ~v9)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = v15 + 8;
  unint64_t v17 = v15 + 9;
  if (v17 <= v16) {
    unint64_t v17 = v16;
  }
  if (v17 <= 2) {
    unint64_t v17 = 2;
  }
  unint64_t v18 = v17 + ((((v9 + 16) & ~v9) + v10 + v14) & ~v14);
  if (v18 + 1 > ((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v19 = v18 + 1;
  }
  else {
    unint64_t v19 = ((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  uint64_t v20 = 16;
  if (v19 > 0x10) {
    uint64_t v20 = v19;
  }
  uint64_t v21 = *(void *)(a4 + 16);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(unsigned int *)(v22 + 84);
  if (v23 <= 0x7FFFFFFF) {
    unsigned int v24 = 0x7FFFFFFF;
  }
  else {
    unsigned int v24 = *(_DWORD *)(v22 + 84);
  }
  uint64_t v25 = (v13 + 32) & ~v14;
  uint64_t v26 = ((v20 + 1 + v14) & ~v14) + v20 + 1;
  uint64_t v27 = *(unsigned __int8 *)(v22 + 80);
  size_t v28 = ((((v27 + 19 + ((v26 + v25 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v27) + *(void *)(v22 + 64)) & 0xFFFFFFFFFFFFFFF8)
      + 17;
  char v29 = 8 * v28;
  if (v24 >= a3)
  {
    int v32 = 0;
  }
  else
  {
    if (v28 <= 3) {
      unsigned int v30 = ((a3 - v24 + 255) >> v29) + 1;
    }
    else {
      unsigned int v30 = 2;
    }
    if (v30 >= 0x10000) {
      int v31 = 4;
    }
    else {
      int v31 = 2;
    }
    if (v30 < 0x100) {
      int v31 = 1;
    }
    if (v30 >= 2) {
      int v32 = v31;
    }
    else {
      int v32 = 0;
    }
  }
  if (v24 < a2)
  {
    unsigned int v33 = ~v24 + a2;
    unsigned int v34 = v33 >> v29;
    unsigned int v35 = (~(_BYTE)v24 + a2);
    if (v28 < 4) {
      int v36 = v34 + 1;
    }
    else {
      int v36 = 1;
    }
    if (v28 >= 4) {
      unsigned int v37 = v33;
    }
    else {
      unsigned int v37 = v35;
    }
    bzero(a1, v28);
    if (v28 == 1) {
      *(unsigned char *)a1 = v37;
    }
    else {
      *(_DWORD *)a1 = v37;
    }
    switch(v32)
    {
      case 1:
        *((unsigned char *)a1 + v28) = v36;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v28) = v36;
        return;
      case 3:
        goto LABEL_55;
      case 4:
        *(_DWORD *)((char *)a1 + v28) = v36;
        return;
      default:
        return;
    }
  }
  switch(v32)
  {
    case 1:
      *((unsigned char *)a1 + v28) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_43;
    case 2:
      *(_WORD *)((char *)a1 + v28) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_43;
    case 3:
LABEL_55:
      __break(1u);
      JUMPOUT(0x22EBF5AC0);
    case 4:
      *(_DWORD *)((char *)a1 + v28) = 0;
      goto LABEL_42;
    default:
LABEL_42:
      if (a2)
      {
LABEL_43:
        if ((v23 & 0x80000000) != 0)
        {
          __swift_storeEnumTagSinglePayload((v27 + 19 + (((((unint64_t)a1 + v14 + 32) & ~v14 | 7) + v26) & 0xFFFFFFFFFFFFFFF8)) & ~v27, a2, v23, v21);
        }
        else if ((a2 & 0x80000000) != 0)
        {
          a1[2] = 0;
          a1[3] = 0;
          *a1 = a2 ^ 0x80000000;
          a1[1] = 0;
        }
        else
        {
          a1[1] = (a2 - 1);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for AutomaticSubscriptionPickerOptionLabelInternal()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_22EBF5B00()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EBF5B44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v64 = a2;
  sub_22EE7DC20();
  OUTLINED_FUNCTION_0_0();
  uint64_t v62 = v4;
  uint64_t v63 = v3;
  MEMORY[0x270FA5388](v3);
  unint64_t v61 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620490);
  uint64_t v56 = a1;
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v58 = *(void *)(a1 + 16);
  uint64_t v57 = v6;
  type metadata accessor for Sublabels();
  OUTLINED_FUNCTION_7_18();
  v42[1] = OUTLINED_FUNCTION_11_9();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_22EE7EAF0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v53 = v7;
  OUTLINED_FUNCTION_9_7();
  MEMORY[0x270FA5388](v8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861D028);
  sub_22EE7CEE0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v54 = v9;
  OUTLINED_FUNCTION_9_7();
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = sub_22EE7CEE0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v55 = v12;
  OUTLINED_FUNCTION_9_7();
  MEMORY[0x270FA5388](v13);
  uint64_t v46 = (char *)v42 - v14;
  uint64_t v15 = swift_getWitnessTable();
  unint64_t v16 = sub_22EBA3A30((uint64_t)&qword_26861D020);
  uint64_t v76 = v15;
  unint64_t v77 = v16;
  uint64_t v59 = MEMORY[0x263F18E48];
  v42[0] = swift_getWitnessTable();
  uint64_t v74 = v42[0];
  uint64_t v75 = MEMORY[0x263F19100];
  uint64_t v44 = swift_getWitnessTable();
  uint64_t v72 = v11;
  uint64_t v73 = v44;
  uint64_t v48 = MEMORY[0x263F1AE68];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  OUTLINED_FUNCTION_0_0();
  uint64_t v49 = v17;
  OUTLINED_FUNCTION_9_7();
  MEMORY[0x270FA5388](v18);
  sub_22EE7DD90();
  sub_22EE7CEE0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v50 = v19;
  OUTLINED_FUNCTION_9_7();
  MEMORY[0x270FA5388](v20);
  uint64_t v21 = sub_22EE7CEE0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v51 = v22;
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  int v43 = (char *)v42 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v47 = (char *)v42 - v26;
  sub_22EE7D680();
  uint64_t v65 = v58;
  uint64_t v66 = v57;
  uint64_t v67 = v60;
  sub_22EE7EAE0();
  sub_22EE7E4A0();
  OUTLINED_FUNCTION_5_14();
  OUTLINED_FUNCTION_5_2();
  v27();
  sub_22EE7ED80();
  sub_22EE7E5C0();
  OUTLINED_FUNCTION_5_14();
  OUTLINED_FUNCTION_5_2();
  v28();
  sub_22EE7DC00();
  uint64_t v29 = v44;
  sub_22EE7E410();
  OUTLINED_FUNCTION_5_2();
  v30();
  OUTLINED_FUNCTION_5_14();
  OUTLINED_FUNCTION_5_2();
  v31();
  swift_getKeyPath();
  uint64_t v72 = v11;
  uint64_t v73 = v29;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_22EB00CB8();
  swift_release();
  OUTLINED_FUNCTION_5_14();
  OUTLINED_FUNCTION_5_2();
  v33();
  unint64_t v34 = sub_22EBFB73C((uint64_t)&qword_26861C3C0);
  uint64_t v70 = OpaqueTypeConformance2;
  unint64_t v71 = v34;
  uint64_t v35 = swift_getWitnessTable();
  int v36 = v43;
  sub_22EE7E700();
  OUTLINED_FUNCTION_5_14();
  OUTLINED_FUNCTION_5_2();
  v37();
  uint64_t v68 = v35;
  uint64_t v69 = MEMORY[0x263F190E0];
  uint64_t v38 = swift_getWitnessTable();
  int v39 = v47;
  sub_22EB69440(v36, v21, v38);
  unsigned int v40 = *(void (**)(char *, uint64_t))(v51 + 8);
  v40(v36, v21);
  sub_22EB69440(v39, v21, v38);
  return ((uint64_t (*)(char *, uint64_t))v40)(v39, v21);
}

uint64_t sub_22EBF6278@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = a1;
  uint64_t v99 = a4;
  uint64_t v89 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v88 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = type metadata accessor for Sublabels();
  uint64_t v96 = *(void *)(v94 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v94);
  uint64_t v98 = (uint64_t)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  unint64_t v97 = (char *)&v73 - v10;
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620498);
  MEMORY[0x270FA5388](v83);
  uint64_t v85 = (uint64_t)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686204A0);
  MEMORY[0x270FA5388](v79);
  uint64_t v80 = (uint64_t)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686204A8);
  uint64_t v13 = MEMORY[0x270FA5388](v82);
  uint64_t v78 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v81 = (uint64_t)&v73 - v15;
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686204B0);
  MEMORY[0x270FA5388](v86);
  uint64_t v84 = (char *)&v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686204B8);
  MEMORY[0x270FA5388](v92);
  uint64_t v18 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686204C0);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v73 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = (int *)type metadata accessor for Fall2023TopRowContent(0);
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v73 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620490);
  uint64_t v25 = MEMORY[0x270FA5388](v93);
  uint64_t v95 = (uint64_t)&v73 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  size_t v28 = (char *)&v73 - v27;
  uint64_t v90 = a2;
  uint64_t v91 = a3;
  uint64_t v29 = (int *)type metadata accessor for AutomaticSubscriptionPickerOptionLabelInternal();
  char v30 = *((unsigned char *)v6 + v29[15]);
  uint64_t v32 = *v6;
  uint64_t v31 = v6[1];
  char v33 = *((unsigned char *)v6 + 16);
  uint64_t v34 = v6[3];
  uint64_t v35 = (uint64_t)v6 + v29[9];
  uint64_t v87 = v19;
  if (v30)
  {
    uint64_t v76 = v22;
    uint64_t v75 = v21;
    unint64_t v77 = v28;
    int v36 = (int *)v92;
    uint64_t v37 = v34;
    uint64_t v38 = v31;
    sub_22EBFB8D4(v35, (uint64_t)&v18[*(int *)(v92 + 36)], (void (*)(void))type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair);
    char v39 = *((unsigned char *)v6 + v29[12]);
    char v40 = *((unsigned char *)v6 + v29[13]);
    *(void *)uint64_t v18 = v32;
    *((void *)v18 + 1) = v38;
    v18[16] = v33;
    *((void *)v18 + 3) = v37;
    v18[v36[11]] = v39;
    v18[v36[12]] = v40;
    v18[v36[13]] = 1;
    unsigned int v41 = &v18[v36[14]];
    *(void *)unsigned int v41 = swift_getKeyPath();
    v41[8] = 0;
    uint64_t v42 = v29[16];
    uint64_t v74 = v6;
    uint64_t v43 = (uint64_t)v6 + v42;
    uint64_t v44 = *(void *)v43;
    LOBYTE(v41) = *(unsigned char *)(v43 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_22EADDF00(v44, (char)v41);
    sub_22EB155AC();
    LOBYTE(v36) = v45;
    sub_22EADDB08(v44, (char)v41);
    uint64_t v46 = (uint64_t)v88;
    uint64_t v47 = v82;
    if (v36)
    {
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v49 = sub_22EE7ED20();
      uint64_t v51 = v50;
      uint64_t v52 = v80;
      sub_22EADAD08((uint64_t)v18, v80, &qword_2686204B8);
      uint64_t v53 = (uint64_t *)(v52 + *(int *)(v79 + 36));
      *uint64_t v53 = v49;
      v53[1] = v51;
      uint64_t v54 = (uint64_t)v78;
      sub_22EADAD08(v52, (uint64_t)&v78[*(int *)(v47 + 36)], &qword_2686204A0);
      *(void *)uint64_t v54 = KeyPath;
      *(unsigned char *)(v54 + 8) = 0;
      sub_22EB0584C(v52, &qword_2686204A0);
      uint64_t v55 = v81;
      sub_22EADAE38(v54, v81, &qword_2686204A8);
      sub_22EADAD08(v55, v85, &qword_2686204A8);
      swift_storeEnumTagMultiPayload();
      sub_22EBFB678();
      sub_22EBA3A30((uint64_t)&unk_2686204E8);
      uint64_t v56 = (uint64_t)v84;
      sub_22EE7D800();
      sub_22EB0584C(v55, &qword_2686204A8);
    }
    else
    {
      sub_22EADAD08((uint64_t)v18, v85, &qword_2686204B8);
      swift_storeEnumTagMultiPayload();
      sub_22EBFB678();
      sub_22EBA3A30((uint64_t)&unk_2686204E8);
      uint64_t v56 = (uint64_t)v84;
      sub_22EE7D800();
    }
    size_t v28 = v77;
    sub_22EADAD08(v56, (uint64_t)v75, &qword_2686204B0);
    swift_storeEnumTagMultiPayload();
    sub_22EBFB73C((uint64_t)&unk_2686204F0);
    sub_22EBFB780();
    sub_22EE7D800();
    sub_22EB0584C(v56, &qword_2686204B0);
    sub_22EB0584C((uint64_t)v18, &qword_2686204B8);
    uint64_t v61 = v90;
    uint64_t v62 = v89;
    uint64_t v6 = v74;
  }
  else
  {
    uint64_t v57 = v34;
    uint64_t v58 = v31;
    sub_22EBFB8D4(v35, (uint64_t)&v24[v22[5]], (void (*)(void))type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair);
    char v59 = *((unsigned char *)v6 + v29[12]);
    char v60 = *((unsigned char *)v6 + v29[13]);
    *(void *)uint64_t v24 = v32;
    *((void *)v24 + 1) = v58;
    v24[16] = v33;
    *((void *)v24 + 3) = v57;
    v24[v22[6]] = v59;
    v24[v22[7]] = v60;
    v24[v22[8]] = 1;
    sub_22EBFB8D4((uint64_t)v24, (uint64_t)v21, (void (*)(void))type metadata accessor for Fall2023TopRowContent);
    swift_storeEnumTagMultiPayload();
    sub_22EBFB73C((uint64_t)&unk_2686204F0);
    sub_22EBFB780();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_22EE7D800();
    sub_22EC0304C((uint64_t)v24, (void (*)(void))type metadata accessor for Fall2023TopRowContent);
    uint64_t v61 = v90;
    uint64_t v46 = (uint64_t)v88;
    uint64_t v62 = v89;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 16))(v46, (uint64_t)v6 + v29[14], v61);
  uint64_t v63 = v98;
  sub_22EBF6CF8(v46, *(uint64_t *)((char *)v6 + v29[10]), *(uint64_t *)((char *)v6 + v29[10] + 8), *((unsigned char *)v6 + v29[15]), v61, v98);
  uint64_t v64 = v94;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v66 = v97;
  sub_22EB69440(v63, v64, WitnessTable);
  uint64_t v67 = v96;
  uint64_t v68 = *(void (**)(uint64_t, uint64_t))(v96 + 8);
  swift_bridgeObjectRetain();
  v68(v63, v64);
  uint64_t v69 = (uint64_t)v28;
  uint64_t v70 = (uint64_t)v28;
  uint64_t v71 = v95;
  sub_22EADAD08(v69, v95, &qword_268620490);
  v103[0] = v71;
  (*(void (**)(uint64_t, char *, uint64_t))(v67 + 16))(v63, v66, v64);
  v103[1] = v63;
  v102[0] = v93;
  v102[1] = v64;
  unint64_t v100 = sub_22EBFB820();
  uint64_t v101 = WitnessTable;
  sub_22ED82348((uint64_t)v103, 2, (uint64_t)v102);
  v68((uint64_t)v66, v64);
  sub_22EB0584C(v70, &qword_268620490);
  v68(v63, v64);
  return sub_22EB0584C(v71, &qword_268620490);
}

uint64_t sub_22EBF6CF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char v9 = a4 & 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(a6, a1, a5);
  uint64_t v10 = (int *)type metadata accessor for Sublabels();
  uint64_t v11 = (void *)(a6 + v10[9]);
  *uint64_t v11 = a2;
  v11[1] = a3;
  *(unsigned char *)(a6 + v10[10]) = v9;
  uint64_t v12 = a6 + v10[11];
  uint64_t result = swift_getKeyPath();
  *(void *)uint64_t v12 = result;
  *(unsigned char *)(v12 + 8) = 0;
  return result;
}

uint64_t sub_22EBF6DB0()
{
  sub_22EBFB92C();
  sub_22EE7D4B0();
  return v1;
}

uint64_t sub_22EBF6DEC()
{
  return sub_22EE7D4C0();
}

uint64_t type metadata accessor for Sublabels()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_22EBF6E44@<X0>(uint64_t a1@<X8>)
{
  return sub_22EBF6278(*(uint64_t **)(v1 + 32), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t type metadata accessor for Fall2023TopRowContent(uint64_t a1)
{
  return sub_22EAD01C0(a1, (uint64_t *)&unk_268620690);
}

uint64_t sub_22EBF6E70(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686208F8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620900);
  uint64_t v3 = *(void *)(a1 + 16);
  swift_getTupleTypeMetadata3();
  sub_22EE7EE20();
  swift_getWitnessTable();
  uint64_t v4 = sub_22EE7EAF0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = &v15[-v9];
  sub_22EE7D680();
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v16 = v3;
  uint64_t v17 = v11;
  uint64_t v18 = v1;
  sub_22EE7EAE0();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_22EB69440(v8, v4, WitnessTable);
  uint64_t v13 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
  v13(v8, v4);
  sub_22EB69440(v10, v4, WitnessTable);
  return ((uint64_t (*)(unsigned char *, uint64_t))v13)(v10, v4);
}

uint64_t sub_22EBF707C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v52 = a3;
  uint64_t v48 = a4;
  uint64_t v54 = *(void *)(a2 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](a1);
  uint64_t v47 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v53 = (char *)&v41 - v8;
  uint64_t v9 = type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = qword_26861B690;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12 != -1) {
    swift_once();
  }
  id v13 = (id)qword_26864BFA0;
  uint64_t v50 = sub_22EE7E120();
  uint64_t v49 = v14;
  uint64_t v51 = v15;
  int v17 = v16 & 1;
  sub_22EE7DF50();
  uint64_t v19 = v18;
  uint64_t v42 = a2;
  uint64_t v20 = v52;
  uint64_t v21 = type metadata accessor for PrimaryLabels();
  sub_22EBFB8D4(a1 + *(int *)(v21 + 36), (uint64_t)v11, (void (*)(void))type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair);
  sub_22EDDF1AC();
  uint64_t v23 = v22;
  uint64_t v44 = v24;
  uint64_t v26 = v25;
  uint64_t v45 = v25;
  char v28 = v27 & 1;
  int v43 = v27 & 1;
  uint64_t v29 = sub_22EE7DF00();
  char v30 = v53;
  sub_22EB69440(a1 + *(int *)(v21 + 40), a2, v20);
  uint64_t v31 = v50;
  uint64_t v32 = v49;
  uint64_t v64 = v50;
  uint64_t v65 = v49;
  int v46 = v17;
  char v66 = v17;
  uint64_t v67 = v51;
  uint64_t v68 = v19;
  char v69 = 0;
  uint64_t v59 = v23;
  uint64_t v33 = v23;
  uint64_t v34 = v44;
  uint64_t v60 = v44;
  char v61 = v28;
  uint64_t v62 = v26;
  uint64_t v63 = v29;
  v70[0] = &v64;
  v70[1] = &v59;
  uint64_t v35 = v47;
  uint64_t v36 = v42;
  (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v47, v30, v42);
  v70[2] = v35;
  sub_22EADDF0C(v31, v32, v17);
  swift_bridgeObjectRetain();
  uint64_t v37 = v33;
  uint64_t v38 = v33;
  LOBYTE(v33) = v43;
  sub_22EADDF0C(v37, v34, v43);
  swift_bridgeObjectRetain();
  swift_retain();
  v58[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_2686208F8);
  v58[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_268620900);
  v58[2] = v36;
  unint64_t v55 = sub_22EC0DB44((uint64_t)&unk_268620908);
  unint64_t v56 = sub_22EC0DB44((uint64_t)&unk_268620918);
  uint64_t v57 = v52;
  sub_22ED82348((uint64_t)v70, 3, (uint64_t)v58);
  char v39 = *(void (**)(char *, uint64_t))(v54 + 8);
  v39(v53, v36);
  sub_22EB051EC(v38, v34, v33);
  swift_release();
  swift_bridgeObjectRelease();
  sub_22EB051EC(v50, v49, v46);
  swift_bridgeObjectRelease();
  v39(v35, v36);
  sub_22EB051EC(v59, v60, v61);
  swift_release();
  swift_bridgeObjectRelease();
  sub_22EB051EC(v64, v65, v66);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22EBF755C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(unsigned char *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  uint64_t v14 = (int *)type metadata accessor for PrimaryLabels();
  sub_22EC04D60(a5, a9 + v14[9], (void (*)(void))type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a8 - 8) + 32))(a9 + v14[10], a6, a8);
  *(unsigned char *)(a9 + v14[11]) = a7;
  return result;
}

uint64_t sub_22EBF7628(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 56);
  uint64_t v3 = *(void *)v2;
  char v4 = *(unsigned char *)(v2 + 8);
  sub_22EADDF00(*(void *)v2, v4);
  sub_22EB155AC();
  char v6 = v5;
  sub_22EADDB08(v3, v4);
  if ((v6 & 1) == 0) {
    return 0;
  }
  if (qword_26861B8C0 != -1) {
    swift_once();
  }
  if (byte_2686241F1 != 3) {
    return byte_2686241F1 == 1;
  }
  storekit_dyld_fall_2024_os_versions();
  return dyld_program_minos_at_least();
}

uint64_t sub_22EBF76E4(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686206C8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  type metadata accessor for PrimaryLabels();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686206D0);
  swift_getTupleTypeMetadata2();
  sub_22EE7EE20();
  swift_getWitnessTable();
  sub_22EE7EA60();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686206D8);
  swift_getTupleTypeMetadata3();
  sub_22EE7EE20();
  swift_getWitnessTable();
  uint64_t v5 = sub_22EE7EAF0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = &v15[-v10];
  sub_22EE7D680();
  uint64_t v16 = v3;
  uint64_t v17 = v4;
  uint64_t v18 = v1;
  sub_22EE7EAE0();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_22EB69440(v9, v5, WitnessTable);
  id v13 = *(void (**)(unsigned char *, uint64_t))(v6 + 8);
  v13(v9, v5);
  sub_22EB69440(v11, v5, WitnessTable);
  return ((uint64_t (*)(unsigned char *, uint64_t))v13)(v11, v5);
}

uint64_t sub_22EBF7958@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v45 = a4;
  type metadata accessor for PrimaryLabels();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686206D0);
  swift_getTupleTypeMetadata2();
  sub_22EE7EE20();
  swift_getWitnessTable();
  uint64_t v51 = sub_22EE7EA60();
  uint64_t v7 = *(void *)(v51 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v51);
  uint64_t v47 = &v37[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = &v37[-v11];
  MEMORY[0x270FA5388](v10);
  uint64_t v52 = &v37[-v13];
  uint64_t v14 = (int *)type metadata accessor for TopRowContent();
  if ((sub_22EBF7628((uint64_t)v14) & 1) != 0 && *(unsigned char *)(a1 + v14[13]) == 1)
  {
    uint64_t v48 = *(unsigned __int8 *)(a1 + v14[11]);
    uint64_t KeyPath = swift_getKeyPath();
    LOBYTE(v49) = sub_22EE7DE70();
    uint64_t v49 = v49;
    unint64_t v44 = 0xC010000000000000;
    uint64_t v15 = 0x4010000000000000;
    uint64_t v16 = &v73;
  }
  else
  {
    uint64_t KeyPath = 0;
    uint64_t v49 = 0;
    uint64_t v46 = 0;
    unint64_t v44 = 0;
    uint64_t v15 = 2;
    uint64_t v16 = &v74;
  }
  *(v16 - 32) = v15;
  uint64_t v17 = sub_22EE7D510();
  MEMORY[0x270FA5388](v17);
  *(void *)&v37[-32] = a2;
  *(void *)&v37[-24] = a3;
  uint64_t v36 = a1;
  sub_22EE7EA50();
  uint64_t v18 = v51;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_22EB69440(v12, v18, WitnessTable);
  uint64_t v20 = *(void (**)(unsigned char *, uint64_t))(v7 + 8);
  v20(v12, v18);
  BOOL v21 = *(unsigned char *)(a1 + v14[12]) == 1;
  int v43 = v20;
  uint64_t v42 = WitnessTable;
  uint64_t v41 = v7 + 8;
  uint64_t v22 = v7;
  if (v21)
  {
    unsigned int v23 = sub_22EE7DA20();
    uint64_t v26 = swift_getKeyPath();
    uint64_t v39 = swift_getKeyPath();
    uint64_t v25 = 1;
    int v38 = 1;
    uint64_t v24 = v23;
  }
  else
  {
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v39 = 0;
    int v38 = 0;
  }
  uint64_t v27 = v48;
  uint64_t v28 = KeyPath;
  uint64_t v63 = v48;
  uint64_t v64 = KeyPath;
  uint64_t v65 = 0;
  uint64_t v66 = v49;
  uint64_t v67 = v46;
  uint64_t v68 = 0;
  unint64_t v69 = v44;
  uint64_t v70 = 0;
  char v71 = 0;
  v72[0] = &v63;
  uint64_t v29 = *(void (**)(void))(v22 + 16);
  char v30 = v47;
  v29();
  uint64_t v57 = v24;
  uint64_t v58 = v25;
  uint64_t v40 = v24;
  uint64_t v59 = v26;
  uint64_t v60 = 0;
  uint64_t v31 = v39;
  uint64_t v61 = v39;
  char v62 = v38;
  v72[1] = v30;
  v72[2] = &v57;
  LOBYTE(v36) = 0;
  sub_22EC045BC(v27, v28, 0);
  sub_22EC045DC(v24, v25, v26, 0, v31);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686206C8);
  uint64_t v33 = v51;
  v56[0] = v32;
  v56[1] = v51;
  v56[2] = __swift_instantiateConcreteTypeFromMangledName(&qword_2686206D8);
  unint64_t v53 = sub_22EC046EC((uint64_t)&unk_2686206E0);
  uint64_t v54 = v42;
  unint64_t v55 = sub_22EC046EC((uint64_t)&unk_268620700);
  sub_22ED82348((uint64_t)v72, 3, (uint64_t)v56);
  LOBYTE(v36) = 0;
  sub_22EC04980(v48, KeyPath, 0);
  sub_22EC049A0(v40, v25, v26, 0, v31);
  uint64_t v34 = v43;
  v43(v52, v33);
  sub_22EC049A0(v57, v58, v59, v60, v61);
  v34(v47, v33);
  LOBYTE(v36) = v71;
  return sub_22EC04980(v63, v64, v65);
}

uint64_t sub_22EBF7F7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v42 = a4;
  unint64_t v44 = *(char **)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = a3;
  uint64_t v12 = type metadata accessor for PrimaryLabels();
  uint64_t v43 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v37 - v16;
  uint64_t v18 = *(void *)(a1 + 8);
  uint64_t v41 = *(void *)a1;
  LODWORD(v40) = *(unsigned __int8 *)(a1 + 16);
  uint64_t v19 = *(void *)(a1 + 24);
  uint64_t v20 = (int *)type metadata accessor for TopRowContent();
  sub_22EBFB8D4(a1 + v20[9], (uint64_t)v11, (void (*)(void))type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair);
  (*((void (**)(char *, uint64_t, uint64_t))v44 + 2))(v8, a1 + v20[10], a2);
  sub_22EBF755C(v41, v18, (char)v40, v19, (uint64_t)v11, (uint64_t)v8, *(unsigned char *)(a1 + v20[12]), a2, (uint64_t)v15);
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v44 = v17;
  uint64_t v39 = WitnessTable;
  sub_22EB69440(v15, v12, WitnessTable);
  uint64_t v22 = v43 + 8;
  unsigned int v23 = *(uint64_t (**)(char *, uint64_t))(v43 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v41 = v22;
  uint64_t v40 = v23;
  v23(v15, v12);
  if ((sub_22EBF7628((uint64_t)v20) & 1) != 0 || *(unsigned char *)(a1 + v20[13]) != 1)
  {
    uint64_t v34 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    uint64_t v27 = 0;
    uint64_t v29 = 0;
    uint64_t v38 = 0;
    uint64_t v37 = 0;
    uint64_t v24 = 2;
  }
  else
  {
    uint64_t v24 = *(unsigned __int8 *)(a1 + v20[11]);
    uint64_t KeyPath = swift_getKeyPath();
    LOBYTE(v33) = sub_22EE7DE80();
    sub_22EE7C6E0();
    uint64_t v27 = v26;
    uint64_t v29 = v28;
    uint64_t v38 = v30;
    uint64_t v37 = v31;
    j__swift_retain(KeyPath, 0);
    uint64_t v32 = KeyPath;
    j_j__swift_release(KeyPath, 0);
    uint64_t v33 = v33;
    uint64_t v34 = 0x4024000000000000;
  }
  (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v15, v44, v12);
  uint64_t v48 = v34;
  uint64_t v49 = 0;
  uint64_t v50 = v24;
  uint64_t v51 = v32;
  uint64_t v52 = 0;
  uint64_t v53 = v33;
  uint64_t v54 = v27;
  uint64_t v55 = v29;
  uint64_t v56 = v38;
  uint64_t v57 = v37;
  char v58 = 0;
  v59[0] = v15;
  v59[1] = &v48;
  sub_22EC04A44(v34, 0, v24, v32, 0);
  v47[0] = v12;
  v47[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_2686206D0);
  uint64_t v45 = v39;
  unint64_t v46 = sub_22EC04A60();
  sub_22ED82348((uint64_t)v59, 2, (uint64_t)v47);
  sub_22EC04AF8(v34, 0, v24, v32, 0);
  uint64_t v35 = v40;
  v40(v44, v12);
  sub_22EC04AF8(v48, v49, v50, v51, v52);
  return v35(v15, v12);
}

uint64_t sub_22EBF8468@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v9 = a2 & 1;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686206A0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (uint64_t *)((char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v12 = sub_22EE7ED20();
  v12[1] = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2686206A8);
  sub_22EBF854C(a1, v9, a3, a4);
  sub_22EADAD08((uint64_t)v12, a5, &qword_2686206A0);
  return sub_22EB0584C((uint64_t)v12, &qword_2686206A0);
}

uint64_t sub_22EBF854C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  char v7 = a2 & 1;
  sub_22EB41280(a1, a2 & 1);
  sub_22EB17A80();
  sub_22EB19DB0(a1, v7);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a3;
  *(void *)(v8 + 24) = a4;
  *(void *)(v8 + 32) = a1;
  *(unsigned char *)(v8 + 40) = v7;
  sub_22EB41280(a1, v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2686206B0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2686204B8);
  sub_22EBA3A30((uint64_t)&unk_2686206B8);
  sub_22EBA3A30((uint64_t)&unk_2686204E8);
  sub_22EBFB73C((uint64_t)&unk_2686206C0);
  return sub_22EE7EBF0();
}

uint64_t sub_22EBF86D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v3 = sub_22EE7D590();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v4 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2686204B8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for SubscriptionStoreCopyWriter(0) + 36));
  if ((v7 & 8) != 0)
  {
    sub_22EE7D580();
    sub_22EE7D570();
    sub_22EE7D560();
    sub_22EE7D570();
    uint64_t v9 = sub_22EE7D5B0();
  }
  else
  {
    uint64_t v8 = unk_26E26AE28;
    if ((unk_26E26AE28 & ~qword_26E26AE20) == 0) {
      uint64_t v8 = 0;
    }
    if (((v8 | qword_26E26AE20) & v7) != 0)
    {
      uint64_t v9 = sub_22ED92080();
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_22EE7D5A0();
    }
  }
  uint64_t v13 = v9;
  uint64_t v14 = v10;
  char v15 = v11;
  uint64_t v16 = v12;
  uint64_t v17 = &v6[v4[9]];
  sub_22EDDF34C();
  uint64_t v18 = (uint64_t)&v17[*(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20)];
  uint64_t v19 = _s11PriceStringOMa(0);
  __swift_storeEnumTagSinglePayload(v18, 1, 1, v19);
  *(void *)uint64_t v6 = v13;
  *((void *)v6 + 1) = v14;
  v6[16] = v15 & 1;
  *((void *)v6 + 3) = v16;
  v6[v4[11]] = 0;
  v6[v4[12]] = v7 == 1;
  v6[v4[13]] = 1;
  uint64_t v20 = &v6[v4[14]];
  *(void *)uint64_t v20 = swift_getKeyPath();
  v20[8] = 0;
  return sub_22EADAE38((uint64_t)v6, v23, &qword_2686204B8);
}

uint64_t sub_22EBF8930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22EBF8468(*(void *)v2, *(unsigned char *)(v2 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

__n128 sub_22EBF8944@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_22EE7D680();
  sub_22EBF89B8(v1, (uint64_t)v10);
  char v4 = v11;
  uint64_t v5 = v12;
  uint64_t v6 = v13;
  char v7 = v14;
  __n128 result = (__n128)v10[0];
  long long v9 = v10[1];
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = 0x4014000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  *(__n128 *)(a1 + 24) = result;
  *(_OWORD *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 56) = v4;
  *(void *)(a1 + 64) = v5;
  *(void *)(a1 + 72) = v6;
  *(unsigned char *)(a1 + 80) = v7;
  return result;
}

uint64_t sub_22EBF89B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(a1 + 32))
  {
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v4 = sub_22EE7DA20() << 32;
  }
  else
  {
    uint64_t KeyPath = 0;
    uint64_t v4 = 0;
  }
  uint64_t v5 = qword_26861B690;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5 != -1) {
    swift_once();
  }
  id v6 = (id)qword_26864BFA0;
  uint64_t v7 = sub_22EE7E120();
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  char v13 = v12 & 1;
  sub_22EE7DF50();
  *(void *)a2 = KeyPath;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v7;
  *(void *)(a2 + 24) = v9;
  *(unsigned char *)(a2 + 32) = v13;
  *(void *)(a2 + 40) = v11;
  *(void *)(a2 + 48) = v14;
  *(unsigned char *)(a2 + 56) = 0;
  swift_retain();
  sub_22EADDF0C(v7, v9, v13);
  swift_bridgeObjectRetain();
  sub_22EB051EC(v7, v9, v13);
  swift_release();

  return swift_bridgeObjectRelease();
}

double sub_22EBF8B28@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = sub_22EBF8944(a1).n128_u64[0];
  return result;
}

uint64_t sub_22EBF8B64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Fall2023TopRowContent.SecondaryLabel(0);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  id v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v20 - v7;
  uint64_t v9 = type metadata accessor for Fall2023TopRowContent(0);
  if (*((unsigned char *)v1 + *(int *)(v9 + 28)) == 1) {
    uint64_t v10 = sub_22EE7D500();
  }
  else {
    uint64_t v10 = sub_22EE7D4F0();
  }
  uint64_t v26 = v10;
  sub_22EBF8DA4(v1, (uint64_t)&v27);
  uint64_t v11 = v28;
  uint64_t v25 = v27;
  uint64_t v20 = v28;
  uint64_t v21 = v30;
  int v23 = v31;
  int v24 = v29;
  uint64_t v12 = v32;
  uint64_t v13 = v33;
  uint64_t v14 = v34;
  uint64_t v22 = v35;
  uint64_t v15 = (uint64_t)v1 + *(int *)(v9 + 20);
  char v16 = v36;
  sub_22EBFB8D4(v15, (uint64_t)v8, (void (*)(void))type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair);
  sub_22EBFB8D4((uint64_t)v8, (uint64_t)v6, (void (*)(void))type metadata accessor for Fall2023TopRowContent.SecondaryLabel);
  *(void *)a1 = v26;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(void *)(a1 + 24) = v25;
  *(void *)(a1 + 32) = v11;
  *(unsigned char *)(a1 + 40) = v24;
  uint64_t v17 = v22;
  *(void *)(a1 + 48) = v21;
  *(unsigned char *)(a1 + 56) = v23;
  *(void *)(a1 + 64) = v12;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v14;
  *(void *)(a1 + 88) = v17;
  *(unsigned char *)(a1 + 96) = v16;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620788);
  sub_22EBFB8D4((uint64_t)v6, a1 + *(int *)(v18 + 48), (void (*)(void))type metadata accessor for Fall2023TopRowContent.SecondaryLabel);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_22EC04A44(v12, v13, v14, v17, v16);
  sub_22EC0304C((uint64_t)v8, (void (*)(void))type metadata accessor for Fall2023TopRowContent.SecondaryLabel);
  sub_22EC0304C((uint64_t)v6, (void (*)(void))type metadata accessor for Fall2023TopRowContent.SecondaryLabel);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_22EC04AF8(v12, v13, v14, v17, v16);
}

uint64_t sub_22EBF8DA4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  char v6 = *((unsigned char *)a1 + 16);
  uint64_t v7 = a1[3];
  uint64_t v8 = (int *)type metadata accessor for Fall2023TopRowContent(0);
  char v9 = *((unsigned char *)a1 + v8[7]);
  if (*((unsigned char *)a1 + v8[8]) == 1)
  {
    uint64_t v10 = *((unsigned __int8 *)a1 + v8[6]);
    uint64_t KeyPath = swift_getKeyPath();
    j__swift_retain(KeyPath, 0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    j_j__swift_release(KeyPath, 0);
    uint64_t v12 = 1;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v12 = 0;
    uint64_t KeyPath = 0;
    uint64_t v10 = 2;
  }
  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 16) = v6;
  *(void *)(a2 + 24) = v7;
  *(unsigned char *)(a2 + 32) = v9;
  *(void *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = v12;
  *(void *)(a2 + 56) = v10;
  *(void *)(a2 + 64) = KeyPath;
  *(unsigned char *)(a2 + 72) = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_22EC04A44(0, v12, v10, KeyPath, 0);
  sub_22EC04AF8(0, v12, v10, KeyPath, 0);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_22EBF8EE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0);
  MEMORY[0x270FA5388](v3 - 8);
  sub_22EBFB8D4(v1, (uint64_t)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair);
  sub_22EDDF1AC();
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  char v10 = v9;
  uint64_t v12 = v11;
  uint64_t result = sub_22EE7DF00();
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v8;
  *(unsigned char *)(a1 + 16) = v10 & 1;
  *(void *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = result;
  return result;
}

uint64_t sub_22EBF8FB4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](a1);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v6 + *(int *)(v3 + 36) + 8);
  (*(void (**)(char *))(v2 + 16))(v5);
  if (v7)
  {
    uint64_t v8 = &v5[*(int *)(a1 + 44)];
    uint64_t v9 = *(void *)v8;
    char v10 = v8[8];
    sub_22EADDF00(*(void *)v8, v10);
    sub_22EB155AC();
    LOBYTE(v7) = v11;
    sub_22EADDB08(v9, v10);
  }
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, a1);
  return v7 & 1;
}

uint64_t sub_22EBF90D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v38 = *(void *)(v4 + 64);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v5 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v5);
  uint64_t v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v10 + 24);
  v32[1] = v12;
  uint64_t v33 = v13;
  type metadata accessor for Sublabels.SublabelDivider();
  type metadata accessor for TertiaryContent(255);
  swift_getTupleTypeMetadata2();
  sub_22EE7EE20();
  uint64_t v14 = sub_22EE7D810();
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v16 = sub_22EC04B6C();
  uint64_t v45 = WitnessTable;
  unint64_t v46 = v16;
  uint64_t v36 = v14;
  uint64_t v35 = swift_getWitnessTable();
  uint64_t v41 = v8;
  uint64_t v42 = v14;
  uint64_t v43 = v13;
  uint64_t v44 = v35;
  uint64_t v34 = sub_22EE7D9D0();
  uint64_t v17 = sub_22EE7E8A0();
  uint64_t v37 = *(void *)(v17 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)v32 - v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v2, v8);
  uint64_t v23 = v4;
  int v24 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  uint64_t v25 = a1;
  v24(v7, v2, a1);
  unint64_t v26 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  uint64_t v27 = swift_allocObject();
  uint64_t v28 = v33;
  *(void *)(v27 + 16) = v8;
  *(void *)(v27 + 24) = v28;
  (*(void (**)(unint64_t, char *, uint64_t))(v23 + 32))(v27 + v26, v7, v25);
  sub_22EE7E880();
  uint64_t v40 = swift_getWitnessTable();
  uint64_t v29 = swift_getWitnessTable();
  sub_22EB69440(v20, v17, v29);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v37 + 8);
  v30(v20, v17);
  sub_22EB69440(v22, v17, v29);
  return ((uint64_t (*)(char *, uint64_t))v30)(v22, v17);
}

uint64_t sub_22EBF94D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v53 = a3;
  uint64_t v5 = type metadata accessor for Sublabels.SublabelDivider();
  uint64_t v6 = type metadata accessor for TertiaryContent(255);
  uint64_t v7 = v5;
  swift_getTupleTypeMetadata2();
  uint64_t v8 = sub_22EE7EE20();
  uint64_t v52 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v51 = (char *)&v45 - v10;
  uint64_t v49 = (int *)v6;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (uint64_t *)((char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v11);
  uint64_t v50 = (uint64_t)&v45 - v14;
  uint64_t v15 = sub_22EE7D5F0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = v8;
  uint64_t v19 = sub_22EE7D810();
  uint64_t v55 = *(void *)(v19 - 8);
  uint64_t v56 = v19;
  MEMORY[0x270FA5388](v19);
  uint64_t v54 = (char *)&v45 - v20;
  uint64_t v21 = type metadata accessor for Sublabels();
  char v22 = sub_22EBF8FB4(v21);
  uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  uint64_t v48 = a1;
  v47(v18, a1, v15);
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
LABEL_5:
    uint64_t v27 = v7;
    uint64_t WitnessTable = swift_getWitnessTable();
    sub_22EB69440(WitnessTable, v7, WitnessTable);
    uint64_t v28 = (uint64_t *)(a2 + *(int *)(v21 + 36));
    uint64_t v29 = *v28;
    uint64_t v30 = v28[1];
    uint64_t v31 = a2;
    uint64_t v32 = v49;
    uint64_t v33 = (uint64_t)v13 + v49[5];
    v47((char *)v33, v48, v15);
    __swift_storeEnumTagSinglePayload(v33, 0, 1, v15);
    char v34 = *(unsigned char *)(v31 + *(int *)(v21 + 40));
    *uint64_t v13 = v29;
    v13[1] = v30;
    *((unsigned char *)v13 + v32[6]) = v34;
    uint64_t v35 = v32[7];
    swift_bridgeObjectRetain();
    *(void *)((char *)v13 + v35) = sub_22EE7DF00();
    uint64_t v36 = (char *)v13 + v32[8];
    *(void *)uint64_t v36 = swift_getKeyPath();
    v36[8] = 0;
    uint64_t v37 = v50;
    sub_22EC04D60((uint64_t)v13, v50, (void (*)(void))type metadata accessor for TertiaryContent);
    sub_22EBFB8D4(v37, (uint64_t)v13, (void (*)(void))type metadata accessor for TertiaryContent);
    uint64_t v59 = v13;
    v66[0] = v27;
    v66[1] = v32;
    uint64_t v64 = WitnessTable;
    unint64_t v65 = sub_22EBFB73C((uint64_t)&unk_268620798);
    uint64_t v38 = v51;
    sub_22ED82348((uint64_t)&v58, 2, (uint64_t)v66);
    sub_22EC0304C((uint64_t)v13, (void (*)(void))type metadata accessor for TertiaryContent);
    uint64_t v39 = v57;
    swift_getWitnessTable();
    sub_22EC04B6C();
    unint64_t v26 = v54;
    sub_22EC4F278();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v38, v39);
    sub_22EC0304C(v37, (void (*)(void))type metadata accessor for TertiaryContent);
    goto LABEL_6;
  }
  BOOL v23 = sub_22EBBEE18();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  if (!v23) {
    goto LABEL_5;
  }
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v25 = swift_getKeyPath();
  uint64_t v58 = KeyPath;
  LOBYTE(v59) = 0;
  uint64_t v60 = v25;
  char v61 = 0;
  swift_getWitnessTable();
  sub_22EC04B6C();
  unint64_t v26 = v54;
  sub_22EC4F330();
  swift_release();
  swift_release();
LABEL_6:
  uint64_t v40 = swift_getWitnessTable();
  unint64_t v41 = sub_22EC04B6C();
  uint64_t v62 = v40;
  unint64_t v63 = v41;
  uint64_t v42 = v56;
  uint64_t v43 = swift_getWitnessTable();
  sub_22EB69440(v26, v42, v43);
  return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v26, v42);
}

uint64_t sub_22EBF9ADC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v28 = sub_22EE7DC20();
  uint64_t v26 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v2 = (char *)&v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_22EE7EBC0();
  uint64_t v3 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620940);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620948);
  uint64_t v27 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620950);
  MEMORY[0x270FA5388](v25);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22EE7EBB0();
  uint64_t v13 = sub_22EE7E7B0();
  id v14 = objc_msgSend(self, sel_systemGray2Color);
  uint64_t v15 = MEMORY[0x230FABA70](v14);
  uint64_t v31 = v13;
  unint64_t v32 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861C2D0);
  sub_22EC046EC((uint64_t)&qword_26861C2D8);
  sub_22EBA3A30((uint64_t)&qword_26861C2F8);
  uint64_t v16 = sub_22EE7E860();
  char v17 = sub_22EE7DE70();
  uint64_t v18 = v24;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v8, v5, v24);
  uint64_t v19 = &v8[*(int *)(v6 + 36)];
  *(void *)uint64_t v19 = v16;
  v19[8] = v17;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v18);
  sub_22EE7DBF0();
  unint64_t v20 = sub_22EC0DC0C();
  sub_22EE7E410();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v2, v28);
  sub_22EB0584C((uint64_t)v8, &qword_268620940);
  if (qword_26861B6B8 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  uint64_t v31 = v6;
  unint64_t v32 = v20;
  swift_getOpaqueTypeConformance2();
  uint64_t v21 = v29;
  sub_22EE7E4C0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v21);
  sub_22EE7CEC0();
  return sub_22EB0584C((uint64_t)v12, &qword_268620950);
}

uint64_t sub_22EBF9F68@<X0>(uint64_t a1@<X8>)
{
  return sub_22EBF9ADC(a1);
}

uint64_t sub_22EBF9F78(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for SubscriptionStoreCopyWriter(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = a2 & 1;
  sub_22EB41280(a1, a2 & 1);
  sub_22EB17A80();
  uint64_t v10 = v9;
  sub_22EB19DB0(a1, v8);
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    uint64_t v12 = v10 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v13 = *(void *)(v5 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_22EBFB8D4(v12, (uint64_t)v7, (void (*)(void))type metadata accessor for SubscriptionStoreCopyWriter);
      uint64_t v14 = *((void *)v7 + 6);
      sub_22EC0304C((uint64_t)v7, (void (*)(void))type metadata accessor for SubscriptionStoreCopyWriter);
      if (v14) {
        break;
      }
      v12 += v13;
      if (!--v11)
      {
        swift_bridgeObjectRelease_n();
        return 0;
      }
    }
    swift_bridgeObjectRelease_n();
    return 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_22EBFA0F0@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  int v9 = a4 & 1;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620928);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = &v19[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620930);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = &v19[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_22EADDF00(a3, v9);
  sub_22EB155AC();
  char v17 = v16;
  sub_22EADDB08(a3, v9);
  if (v17 & 1) != 0 && (v19[8] = a2 & 1, v19[0] = v9 != 0, (sub_22EBF9F78(a1, a2 & 1)))
  {
    sub_22EBFA2C4(v12);
    sub_22EADAD08((uint64_t)v12, (uint64_t)v15, &qword_268620928);
    sub_22EB0584C((uint64_t)v12, &qword_268620928);
    sub_22EADAE38((uint64_t)v15, a5, &qword_268620930);
    return __swift_storeEnumTagSinglePayload(a5, 0, 1, v13);
  }
  else
  {
    return __swift_storeEnumTagSinglePayload(a5, 1, 1, v13);
  }
}

uint64_t sub_22EBFA2C4@<X0>(char *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for TertiaryContent(0);
  uint64_t v3 = (int *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (uint64_t *)((char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v4);
  char v8 = (char *)&v24 - v7;
  uint64_t v9 = sub_22EE7EBC0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v24 - v14;
  sub_22EE7EBB0();
  uint64_t v16 = (uint64_t)v6 + v3[7];
  uint64_t v17 = sub_22EE7D5F0();
  __swift_storeEnumTagSinglePayload(v16, 1, 1, v17);
  *uint64_t v6 = 0;
  v6[1] = 0;
  *((unsigned char *)v6 + v3[8]) = 1;
  uint64_t v18 = v3[9];
  *(void *)((char *)v6 + v18) = sub_22EE7DF00();
  uint64_t v19 = (char *)v6 + v3[10];
  *(void *)uint64_t v19 = swift_getKeyPath();
  v19[8] = 0;
  sub_22EC04D60((uint64_t)v6, (uint64_t)v8, (void (*)(void))type metadata accessor for TertiaryContent);
  unint64_t v20 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v20(v13, v15, v9);
  sub_22EBFB8D4((uint64_t)v8, (uint64_t)v6, (void (*)(void))type metadata accessor for TertiaryContent);
  v20(a1, v13, v9);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620938);
  sub_22EBFB8D4((uint64_t)v6, (uint64_t)&a1[*(int *)(v21 + 48)], (void (*)(void))type metadata accessor for TertiaryContent);
  sub_22EC0304C((uint64_t)v8, (void (*)(void))type metadata accessor for TertiaryContent);
  char v22 = *(void (**)(char *, uint64_t))(v10 + 8);
  v22(v15, v9);
  sub_22EC0304C((uint64_t)v6, (void (*)(void))type metadata accessor for TertiaryContent);
  return ((uint64_t (*)(char *, uint64_t))v22)(v13, v9);
}

uint64_t sub_22EBFA560@<X0>(uint64_t a1@<X8>)
{
  return sub_22EBFA0F0(*(void *)v1, *(unsigned char *)(v1 + 8), *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), a1);
}

uint64_t sub_22EBFA580@<X0>(uint64_t a1@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620978);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620980);
  uint64_t v6 = v5 - 8;
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620988);
  uint64_t v10 = v9 - 8;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_22EE7D4F0();
  uint64_t v14 = type metadata accessor for TertiaryContent(0);
  char v15 = *((unsigned char *)v1 + *(int *)(v14 + 24));
  uint64_t v16 = 0x4024000000000000;
  if (!v15) {
    uint64_t v16 = 0;
  }
  *(void *)uint64_t v4 = v13;
  *((void *)v4 + 1) = v16;
  v4[16] = v15 ^ 1;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620990);
  sub_22EBFA78C(v1, (uint64_t)&v4[*(int *)(v17 + 44)]);
  uint64_t v18 = *(uint64_t *)((char *)v1 + *(int *)(v14 + 28));
  uint64_t KeyPath = swift_getKeyPath();
  sub_22EADAD08((uint64_t)v4, (uint64_t)v8, &qword_268620978);
  unint64_t v20 = (uint64_t *)&v8[*(int *)(v6 + 44)];
  *unint64_t v20 = KeyPath;
  v20[1] = v18;
  swift_retain();
  sub_22EB0584C((uint64_t)v4, &qword_268620978);
  LODWORD(v18) = sub_22EE7DA00();
  sub_22EADAD08((uint64_t)v8, (uint64_t)v12, &qword_268620980);
  *(_DWORD *)&v12[*(int *)(v10 + 44)] = v18;
  sub_22EB0584C((uint64_t)v8, &qword_268620980);
  return sub_22EADAE38((uint64_t)v12, v23, &qword_268620988);
}

uint64_t sub_22EBFA78C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v49 = a2;
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620998);
  MEMORY[0x270FA5388](v45);
  uint64_t v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686209A0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686209A8);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v44 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686209B0);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v46 = (uint64_t)&v44 - v18;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620830);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v48 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v44 - v22;
  uint64_t v24 = type metadata accessor for TertiaryContent(0);
  uint64_t v25 = (uint64_t)a1 + *(int *)(v24 + 20);
  uint64_t v47 = v23;
  sub_22EADAD08(v25, (uint64_t)v23, &qword_268620830);
  uint64_t v26 = a1[1];
  if (v26)
  {
    sub_22EBFAC5C(*a1, v26, (uint64_t)a1, (uint64_t)v7);
    sub_22EADAD08((uint64_t)v7, (uint64_t)v11, &qword_2686209A0);
    *(void *)&v11[*(int *)(v8 + 36)] = 0x3FF0000000000000;
    sub_22EB0584C((uint64_t)v7, &qword_2686209A0);
    sub_22EADAE38((uint64_t)v11, (uint64_t)v13, &qword_2686209A8);
    sub_22EADAD08((uint64_t)v13, (uint64_t)v4, &qword_2686209A8);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2686209C8);
    sub_22EC0DCE8();
    sub_22EC0DFAC();
    sub_22EE7D800();
    sub_22EB0584C((uint64_t)v13, &qword_2686209A8);
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686209B8);
    __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v27);
    uint64_t v28 = v46;
    sub_22EADAE38((uint64_t)v17, v46, &qword_2686209B0);
    uint64_t v30 = (uint64_t)v48;
    uint64_t v29 = v49;
    uint64_t v31 = (uint64_t)v47;
  }
  else
  {
    unint64_t v32 = v4;
    uint64_t v33 = (char *)a1 + *(int *)(v24 + 32);
    uint64_t v34 = *(void *)v33;
    char v35 = v33[8];
    sub_22EADDF00(*(void *)v33, v35);
    sub_22EB155AC();
    char v37 = v36;
    sub_22EADDB08(v34, v35);
    uint64_t v30 = (uint64_t)v48;
    uint64_t v29 = v49;
    uint64_t v28 = v46;
    uint64_t v31 = (uint64_t)v47;
    if (v37)
    {
      uint64_t KeyPath = swift_getKeyPath();
      *((void *)v32 + 1) = 0;
      *((void *)v32 + 2) = 0;
      *(void *)unint64_t v32 = KeyPath;
      v32[24] = 0;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2686209C8);
      sub_22EC0DCE8();
      sub_22EC0DFAC();
      sub_22EE7D800();
      uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686209B8);
      uint64_t v40 = v28;
      uint64_t v41 = 0;
    }
    else
    {
      uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686209B8);
      uint64_t v40 = v28;
      uint64_t v41 = 1;
    }
    __swift_storeEnumTagSinglePayload(v40, v41, 1, v39);
  }
  sub_22EADAD08(v31, v30, &qword_268620830);
  sub_22EADAD08(v28, (uint64_t)v17, &qword_2686209B0);
  sub_22EADAD08(v30, v29, &qword_268620830);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686209C0);
  sub_22EADAD08((uint64_t)v17, v29 + *(int *)(v42 + 48), &qword_2686209B0);
  sub_22EB0584C(v28, &qword_2686209B0);
  sub_22EB0584C(v31, &qword_268620830);
  sub_22EB0584C((uint64_t)v17, &qword_2686209B0);
  return sub_22EB0584C(v30, &qword_268620830);
}

uint64_t sub_22EBFAC5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v33 = a3;
  uint64_t v37 = a4;
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620A38);
  MEMORY[0x270FA5388](v36);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620A18);
  MEMORY[0x270FA5388](v32);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686209F8);
  uint64_t v10 = MEMORY[0x270FA5388](v35);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v32 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686209E8);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620A28);
  MEMORY[0x270FA5388](v34);
  uint64_t v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  char v40 = 0;
  uint64_t v41 = MEMORY[0x263F8EE78];
  uint64_t v20 = qword_26861B6B8;
  swift_bridgeObjectRetain();
  if (v20 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  sub_22EE7E4C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = v33 + *(int *)(type metadata accessor for TertiaryContent(0) + 32);
  uint64_t v22 = *(void *)v21;
  char v23 = *(unsigned char *)(v21 + 8);
  sub_22EADDF00(*(void *)v21, v23);
  sub_22EB155AC();
  char v25 = v24;
  sub_22EADDB08(v22, v23);
  if (v25)
  {
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v27 = sub_22EE7ED20();
    uint64_t v29 = v28;
    sub_22EADAD08((uint64_t)v19, (uint64_t)v9, &qword_268620A28);
    uint64_t v30 = (uint64_t *)&v9[*(int *)(v32 + 36)];
    *uint64_t v30 = v27;
    v30[1] = v29;
    sub_22EADAD08((uint64_t)v9, (uint64_t)&v12[*(int *)(v35 + 36)], &qword_268620A18);
    *((void *)v12 + 1) = 0;
    *((void *)v12 + 2) = 0;
    *(void *)uint64_t v12 = KeyPath;
    v12[24] = 0;
    sub_22EB0584C((uint64_t)v9, &qword_268620A18);
    sub_22EADAE38((uint64_t)v12, (uint64_t)v14, &qword_2686209F8);
    sub_22EADAD08((uint64_t)v14, (uint64_t)v7, &qword_2686209F8);
    swift_storeEnumTagMultiPayload();
    sub_22EC0DE3C();
    sub_22EC0DF00();
    sub_22EE7D800();
    sub_22EB0584C((uint64_t)v14, &qword_2686209F8);
  }
  else
  {
    sub_22EADAD08((uint64_t)v19, (uint64_t)v7, &qword_268620A28);
    swift_storeEnumTagMultiPayload();
    sub_22EC0DE3C();
    sub_22EC0DF00();
    sub_22EE7D800();
  }
  sub_22EADAE38((uint64_t)v17, v37, &qword_2686209E8);
  return sub_22EB0584C((uint64_t)v19, &qword_268620A28);
}

double sub_22EBFB088@<D0>(uint64_t a1@<X8>)
{
  sub_22ED42764(&v4);
  uint64_t v2 = v5;
  double result = *(double *)&v4;
  *(_OWORD *)a1 = v4;
  *(void *)(a1 + 16) = v2;
  return result;
}

uint64_t sub_22EBFB0D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v22 = a4;
  v20[3] = a3 & 1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620AB0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620AB8);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620AC0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_22EE7E040();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620AC8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v7, a1, v17);
  uint64_t v18 = (uint64_t *)&v7[*(int *)(v5 + 36)];
  *uint64_t v18 = KeyPath;
  v18[1] = v15;
  sub_22EC0E5A0();
  sub_22EE7E1B0();
  sub_22EB0584C((uint64_t)v7, &qword_268620AB0);
  LODWORD(a1) = sub_22EE7DA00();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v14, v11, v8);
  *(_DWORD *)&v14[*(int *)(v12 + 36)] = a1;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (qword_26861B6B8 != -1) {
    swift_once();
  }
  sub_22EC0E664();
  swift_bridgeObjectRetain();
  sub_22EE7E4C0();
  swift_bridgeObjectRelease();
  return sub_22EB0584C((uint64_t)v14, &qword_268620AC0);
}

uint64_t sub_22EBFB39C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22EBFB0D0(a1, *(void *)v2, *(unsigned char *)(v2 + 8), a2);
}

uint64_t sub_22EBFB3A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620AE8);
  uint64_t v5 = v4 - 8;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620AF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620AF8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v7, a1, v12);
  uint64_t v13 = (uint64_t *)&v7[*(int *)(v5 + 44)];
  *uint64_t v13 = KeyPath;
  v13[1] = a2;
  swift_retain();
  LODWORD(a2) = sub_22EE7DA00();
  sub_22EADAD08((uint64_t)v7, (uint64_t)v10, &qword_268620AE8);
  *(_DWORD *)&v10[*(int *)(v8 + 36)] = a2;
  sub_22EB0584C((uint64_t)v7, &qword_268620AE8);
  if (qword_26861B6B8 != -1) {
    swift_once();
  }
  sub_22EC0E738();
  swift_bridgeObjectRetain();
  sub_22EE7E4C0();
  swift_bridgeObjectRelease();
  return sub_22EB0584C((uint64_t)v10, &qword_268620AF0);
}

uint64_t sub_22EBFB5A4(uint64_t a1)
{
  return sub_22EBFB3A8(a1, *v1);
}

uint64_t sub_22EBFB5AC()
{
  return swift_release();
}

uint64_t sub_22EBFB620@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22EC1D5E4();
  *a1 = result & 1;
  return result;
}

uint64_t sub_22EBFB650()
{
  return sub_22EC1D620();
}

unint64_t sub_22EBFB678()
{
  unint64_t result = qword_2686204C8;
  if (!qword_2686204C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686204A8);
    sub_22EBA3A30((uint64_t)&unk_2686204D0);
    sub_22EBA3A30((uint64_t)&unk_2686204E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686204C8);
  }
  return result;
}

unint64_t sub_22EBFB73C(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_9_15(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_22EBFB780()
{
  unint64_t result = qword_2686204F8;
  if (!qword_2686204F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686204B0);
    sub_22EBFB678();
    sub_22EBA3A30((uint64_t)&unk_2686204E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686204F8);
  }
  return result;
}

unint64_t sub_22EBFB820()
{
  unint64_t result = qword_268620500;
  if (!qword_268620500)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620490);
    sub_22EBFB73C((uint64_t)&unk_2686204F0);
    sub_22EBFB780();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620500);
  }
  return result;
}

uint64_t sub_22EBFB8D4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_2_0();
  uint64_t v4 = OUTLINED_FUNCTION_16_0();
  v5(v4);
  return a2;
}

unint64_t sub_22EBFB92C()
{
  unint64_t result = qword_268620508[0];
  if (!qword_268620508[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_268620508);
  }
  return result;
}

ValueMetadata *_s43SubscriptionPickerOptionUsesLayoutGuidesKeyOMa()
{
  return &_s43SubscriptionPickerOptionUsesLayoutGuidesKeyON;
}

uint64_t sub_22EBFB988()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_22EBFBA34(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 31) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v10 = *(void *)v11;
    *(void *)(v10 + 8) = *(void *)(v11 + 8);
    *(unsigned char *)(v10 + 16) = *(unsigned char *)(v11 + 16);
    unint64_t v12 = ((unint64_t)v4 + v6 + 31) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v13 = ((unint64_t)a2 + v6 + 31) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v14 = *(void *)v13;
    char v15 = *(unsigned char *)(v13 + 8);
    swift_bridgeObjectRetain();
    sub_22EADDF00(v14, v15);
    *(void *)unint64_t v12 = v14;
    *(unsigned char *)(v12 + 8) = v15;
  }
  return v4;
}

uint64_t sub_22EBFBB6C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  uint64_t v4 = *(void *)(v3 + 56) + a1;
  swift_bridgeObjectRelease();
  unint64_t v5 = (v4 + 31) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)v5;
  char v7 = *(unsigned char *)(v5 + 8);

  return sub_22EADDB08(v6, v7);
}

uint64_t sub_22EBFBBF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v9 = *(void *)v10;
  *(void *)(v9 + 8) = *(void *)(v10 + 8);
  *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
  unint64_t v11 = (v7 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = (v8 + 31) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = *(void *)v12;
  LOBYTE(v5) = *(unsigned char *)(v12 + 8);
  swift_bridgeObjectRetain();
  sub_22EADDF00(v13, v5);
  *(void *)unint64_t v11 = v13;
  *(unsigned char *)(v11 + 8) = v5;
  return a1;
}

uint64_t sub_22EBFBCB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v6 + a1 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v6 + a2 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v9 = *(void *)v10;
  *(void *)(v9 + 8) = *(void *)(v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
  unint64_t v11 = (v7 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = (v8 + 31) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = *(void *)v12;
  LOBYTE(v7) = *(unsigned char *)(v12 + 8);
  sub_22EADDF00(*(void *)v12, v7);
  uint64_t v14 = *(void *)v11;
  char v15 = *(unsigned char *)(v11 + 8);
  *(void *)unint64_t v11 = v13;
  *(unsigned char *)(v11 + 8) = v7;
  sub_22EADDB08(v14, v15);
  return a1;
}

uint64_t sub_22EBFBD90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)unint64_t v9 = *(_OWORD *)v10;
  *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
  unint64_t v11 = (v7 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = (v8 + 31) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = *(void *)v12;
  *(unsigned char *)(v11 + 8) = *(unsigned char *)(v12 + 8);
  *(void *)unint64_t v11 = v13;
  return a1;
}

uint64_t sub_22EBFBE38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v6 + a1 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v9 = *(void *)v10;
  *(void *)(v9 + 8) = *(void *)(v10 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
  unint64_t v11 = (v7 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = (v8 + 31) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = *(void *)v12;
  LOBYTE(v12) = *(unsigned char *)(v12 + 8);
  uint64_t v14 = *(void *)v11;
  char v15 = *(unsigned char *)(v11 + 8);
  *(void *)unint64_t v11 = v13;
  *(unsigned char *)(v11 + 8) = v12;
  sub_22EADDB08(v14, v15);
  return a1;
}

uint64_t sub_22EBFBF04(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= 0x7FFFFFFE) {
    unsigned int v7 = 2147483646;
  }
  else {
    unsigned int v7 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 31) & 0xFFFFFFFFFFFFFFF8) + 9;
    unsigned int v9 = (a2 - v7 + 255) >> (8 * v8);
    if (v8 < 4) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      unsigned int v11 = 4;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v10 < 0x100) {
      unsigned int v11 = 1;
    }
    if (v10 >= 2) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    switch(v12)
    {
      case 1:
        int v13 = a1[v8];
        if (!a1[v8]) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v13 = *(unsigned __int16 *)&a1[v8];
        if (*(_WORD *)&a1[v8]) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x22EBFC064);
      case 4:
        int v13 = *(_DWORD *)&a1[v8];
        if (!v13) {
          break;
        }
LABEL_22:
        int v15 = (v13 - 1) << (8 * v8);
        if (v8 >= 4) {
          int v15 = 0;
        }
        if (((v6 + 31) & 0xFFFFFFF8) == 0xFFFFFFF8) {
          int v16 = *a1;
        }
        else {
          int v16 = *(_DWORD *)a1;
        }
        return v7 + (v16 | v15) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFE) {
    return __swift_getEnumTagSinglePayload((uint64_t)a1, v5, v4);
  }
  unint64_t v17 = *(void *)(((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  if ((v17 + 1) >= 2) {
    return v17;
  }
  else {
    return 0;
  }
}

void sub_22EBFC078(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7 <= 0x7FFFFFFE) {
    unsigned int v8 = 2147483646;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  size_t v10 = ((v9 + 31) & 0xFFFFFFFFFFFFFFF8) + 9;
  char v11 = 8 * v10;
  if (v8 >= a3)
  {
    int v15 = 0;
  }
  else
  {
    unsigned int v12 = (a3 - v8 + 255) >> v11;
    if (v10 <= 3) {
      unsigned int v13 = v12 + 1;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
  }
  if (v8 < a2)
  {
    unsigned int v16 = ~v8 + a2;
    unsigned int v17 = (~(_BYTE)v8 + a2);
    if (v10 < 4) {
      int v18 = (v16 >> v11) + 1;
    }
    else {
      int v18 = 1;
    }
    if (v10 >= 4) {
      unsigned int v19 = v16;
    }
    else {
      unsigned int v19 = v17;
    }
    bzero(a1, v10);
    if (v10 == 1) {
      *a1 = v19;
    }
    else {
      *(_DWORD *)a1 = v19;
    }
    switch(v15)
    {
      case 1:
        a1[v10] = v18;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v18;
        return;
      case 3:
        goto LABEL_46;
      case 4:
        *(_DWORD *)&a1[v10] = v18;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_34;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_34;
    case 3:
LABEL_46:
      __break(1u);
      JUMPOUT(0x22EBFC284);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_33;
    default:
LABEL_33:
      if (a2)
      {
LABEL_34:
        if (v7 < 0x7FFFFFFE)
        {
          uint64_t v20 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if (a2 > 0x7FFFFFFE)
          {
            *uint64_t v20 = 0;
            v20[1] = 0;
            *(_DWORD *)uint64_t v20 = a2 - 0x7FFFFFFF;
          }
          else
          {
            v20[1] = a2;
          }
        }
        else
        {
          __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v7, v6);
        }
      }
      return;
  }
}

uint64_t sub_22EBFC2AC()
{
  uint64_t result = type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_22EBFC39C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7F6E0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v118 = v7;
  uint64_t v119 = v6;
  int v8 = *(_DWORD *)(v7 + 80);
  unint64_t v9 = v8;
  uint64_t v10 = sub_22EE7F5D0();
  int v11 = *(_DWORD *)(*(void *)(v10 - 8) + 80);
  uint64_t v12 = v11;
  unint64_t v13 = v11 | (unint64_t)v8 | 7;
  uint64_t v115 = v8 + 16;
  uint64_t v14 = *(void *)(v7 + 64);
  uint64_t v15 = v13 + v14;
  uint64_t v16 = (v13 + v14 + ((v9 + 16) & ~v9)) & ~v13;
  uint64_t v17 = *(void *)(*(void *)(v10 - 8) + 64) + v8;
  uint64_t v18 = v14 + 7;
  unint64_t v19 = (v14 + 7 + ((v17 + ((v12 + 16) & ~v12)) & ~(unint64_t)v8)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = v19 + 8;
  unint64_t v21 = v19 + 9;
  if (v21 <= v20) {
    unint64_t v21 = v20;
  }
  if (v21 <= 2) {
    uint64_t v22 = 2;
  }
  else {
    uint64_t v22 = v21;
  }
  if (v22 + v16 + 1 > (v18 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v23 = v22 + v16 + 1;
  }
  else {
    unint64_t v23 = (v18 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v23 <= 0x10) {
    uint64_t v24 = 16;
  }
  else {
    uint64_t v24 = v23;
  }
  uint64_t v25 = *(void *)(a3 + 16);
  uint64_t v26 = *(void *)(v25 - 8);
  int v27 = *(_DWORD *)(v26 + 80);
  uint64_t v28 = v27;
  if ((v13 | v27) == 7 && ((v11 | v8 | v27) & 0x100000) == 0)
  {
    uint64_t v29 = v24 + 1;
    if (((*(void *)(v26 + 64)
         + ((((v24 + 1 + v13) & ~v13) + v24 + 1 + v27 + (((v11 | v9) + 32) & ~v13)) & ~(unint64_t)v27)
         + 10) & 0xFFFFFFFFFFFFFFF8)
       + 9 <= 0x18)
    {
      uint64_t v103 = v10;
      uint64_t v104 = v15;
      uint64_t v100 = v11 + 16;
      uint64_t v101 = v17;
      unint64_t v98 = v20;
      uint64_t v102 = *(void *)(v10 - 8);
      uint64_t v114 = v18;
      uint64_t v106 = v22;
      uint64_t v107 = *(void *)(v26 + 64);
      uint64_t v108 = ((v24 + 1 + v13) & ~v13) + v24 + 1 + v27;
      uint64_t v109 = *(void *)(*(void *)(a3 + 16) - 8);
      unint64_t v30 = ~v13;
      uint64_t v31 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v31;
      *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
      *(void *)(a1 + 24) = a2[3];
      uint64_t v110 = v25;
      uint64_t v111 = a1 + v13 + 32;
      uint64_t v117 = (void *)(v111 & ~v13);
      uint64_t v112 = (uint64_t)a2 + v13 + 32;
      int v120 = (unsigned __int8 *)(v112 & ~v13);
      unsigned int v32 = v120[v24];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v32 >= 3)
      {
        if (v24 <= 3) {
          uint64_t v33 = v24;
        }
        else {
          uint64_t v33 = 4;
        }
        switch(v33)
        {
          case 1:
            int v34 = *v120;
            goto LABEL_25;
          case 2:
            int v34 = *(unsigned __int16 *)v120;
            goto LABEL_25;
          case 3:
            int v34 = *(unsigned __int16 *)(v112 & ~v13) | (*(unsigned __int8 *)((v112 & ~v13) + 2) << 16);
            goto LABEL_25;
          case 4:
            int v34 = *(_DWORD *)v120;
LABEL_25:
            if (v24 < 4) {
              unsigned int v32 = (v34 | ((v32 - 3) << (8 * v24))) + 3;
            }
            else {
              unsigned int v32 = v34 + 3;
            }
            break;
          default:
            break;
        }
      }
      uint64_t v105 = ~v9;
      uint64_t v99 = ~v12;
      if (v32 == 2)
      {
        uint64_t v45 = (void *)(v111 & ~v13);
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v118 + 16))(v117, v120, v119);
        uint64_t v47 = v114;
        *(_OWORD *)(((unint64_t)v117 + v114) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v120[v114] & 0xFFFFFFFFFFFFFFF8);
        char v48 = 2;
      }
      else
      {
        if (v32 != 1)
        {
          uint64_t v45 = (void *)(v111 & ~v13);
          *uint64_t v117 = *(void *)v120;
          v45[1] = *(void *)((v112 & ~v13) + 8);
          *((unsigned char *)v117 + v24) = 0;
          swift_bridgeObjectRetain();
          uint64_t v47 = v114;
          goto LABEL_53;
        }
        *uint64_t v117 = *(void *)v120;
        *(void *)((v111 & ~v13) + 8) = *(void *)((v112 & ~v13) + 8);
        unint64_t v36 = ((unint64_t)v117 + v115) & v105;
        unint64_t v37 = (unint64_t)&v120[v115] & v105;
        uint64_t v38 = *(void (**)(uint64_t, unint64_t, uint64_t))(v118 + 16);
        swift_bridgeObjectRetain();
        unint64_t v97 = v38;
        v38(v36, v37, v119);
        unint64_t v39 = (v104 + v36) & v30;
        char v40 = (unsigned __int8 *)((v104 + v37) & v30);
        uint64_t v41 = v106;
        unsigned int v42 = v40[v106];
        unsigned int v43 = v42 - 4;
        if (v42 < 4)
        {
          uint64_t v45 = (void *)(v111 & ~v13);
        }
        else
        {
          if (v106 <= 3) {
            uint64_t v44 = v106;
          }
          else {
            uint64_t v44 = 4;
          }
          uint64_t v45 = (void *)(v111 & ~v13);
          switch(v44)
          {
            case 1:
              int v46 = *v40;
              goto LABEL_42;
            case 2:
              int v46 = *(unsigned __int16 *)v40;
              goto LABEL_42;
            case 3:
              int v46 = *(unsigned __int16 *)v40 | (*(unsigned __int8 *)(((v104 + v37) & v30) + 2) << 16);
              goto LABEL_42;
            case 4:
              int v46 = *(_DWORD *)v40;
LABEL_42:
              if (v106 < 4) {
                unsigned int v42 = (v46 | (v43 << (8 * v106))) + 4;
              }
              else {
                unsigned int v42 = v46 + 4;
              }
              break;
            default:
              break;
          }
        }
        switch(v42)
        {
          case 1u:
            *(unsigned char *)unint64_t v39 = *v40;
            char v49 = 1;
            goto LABEL_48;
          case 2u:
            *(void *)unint64_t v39 = *(void *)v40;
            *(void *)(v39 + 8) = *(void *)(((v104 + v37) & v30) + 8);
            uint64_t v50 = (v100 + v39) & v99;
            unint64_t v51 = (unint64_t)&v40[v100] & v99;
            uint64_t v94 = *(void (**)(uint64_t, unint64_t, uint64_t))(v102 + 16);
            unint64_t v95 = v39;
            swift_bridgeObjectRetain();
            v94(v50, v51, v103);
            uint64_t v45 = (void *)(v111 & ~v13);
            uint64_t v52 = (v101 + v50) & v105;
            unint64_t v53 = (v101 + v51) & v105;
            v97(v52, v53, v119);
            unint64_t v39 = v95;
            uint64_t v41 = v106;
            uint64_t v47 = v114;
            *(void *)((v114 + v52) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v114 + v53) & 0xFFFFFFFFFFFFFFF8);
            *(unsigned char *)(v95 + v98) = v40[v98];
            char v49 = 2;
            break;
          case 3u:
            *(void *)unint64_t v39 = *(void *)v40;
            *(void *)(v39 + 8) = *(void *)(((v104 + v37) & v30) + 8);
            uint64_t v54 = (v100 + v39) & v99;
            unint64_t v55 = (unint64_t)&v40[v100] & v99;
            uint64_t v56 = *(void (**)(uint64_t, unint64_t, uint64_t))(v102 + 16);
            unint64_t v96 = v39;
            swift_bridgeObjectRetain();
            v56(v54, v55, v103);
            uint64_t v45 = (void *)(v111 & ~v13);
            uint64_t v57 = (v101 + v54) & v105;
            v97(v57, (v101 + v55) & v105, v119);
            unint64_t v39 = v96;
            uint64_t v41 = v106;
            uint64_t v47 = v114;
            *(void *)((v114 + v57) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v114 + ((v101 + v55) & v105)) & 0xFFFFFFFFFFFFFFF8);
            char v49 = 3;
            break;
          default:
            char v49 = 0;
            *(_WORD *)unint64_t v39 = *(_WORD *)v40;
LABEL_48:
            uint64_t v47 = v114;
            break;
        }
        *(unsigned char *)(v39 + v41) = v49;
        char v48 = 1;
      }
      *((unsigned char *)v45 + v24) = v48;
LABEL_53:
      uint64_t v58 = ~v28;
      uint64_t v59 = (void *)(((v111 | v13) + v29) & v30);
      uint64_t v60 = (void *)(((v112 | v13) + v29) & v30);
      unsigned int v61 = *((unsigned __int8 *)v60 + v24);
      if (v61 > 2)
      {
        memcpy((void *)(((v111 | v13) + v29) & v30), (const void *)(((v112 | v13) + v29) & v30), v24 + 1);
      }
      else
      {
        if (v61 != 2)
        {
          if (v61 == 1)
          {
            *uint64_t v59 = *v60;
            *(void *)((((v111 | v13) + v29) & v30) + 8) = *(void *)((((v112 | v13) + v29) & v30) + 8);
            unint64_t v62 = ((unint64_t)v59 + v115) & v105;
            unint64_t v63 = ((unint64_t)v60 + v115) & v105;
            uint64_t v64 = *(void (**)(unint64_t, unint64_t, uint64_t))(v118 + 16);
            swift_bridgeObjectRetain();
            v64(v62, v63, v119);
            uint64_t v65 = v106;
            unint64_t v66 = (v104 + v62) & v30;
            uint64_t v67 = (unsigned __int8 *)((v104 + v63) & v30);
            unsigned int v68 = v67[v106];
            unsigned int v69 = v68 - 4;
            if (v68 >= 4)
            {
              if (v106 <= 3) {
                uint64_t v70 = v106;
              }
              else {
                uint64_t v70 = 4;
              }
              switch(v70)
              {
                case 1:
                  int v71 = *v67;
                  goto LABEL_72;
                case 2:
                  int v71 = *(unsigned __int16 *)v67;
                  goto LABEL_72;
                case 3:
                  int v71 = *(unsigned __int16 *)v67 | (v67[2] << 16);
                  goto LABEL_72;
                case 4:
                  int v71 = *(_DWORD *)v67;
LABEL_72:
                  int v85 = (v71 | (v69 << (8 * v106))) + 4;
                  unsigned int v68 = v71 + 4;
                  if (v106 < 4) {
                    unsigned int v68 = v85;
                  }
                  break;
                default:
                  break;
              }
            }
            switch(v68)
            {
              case 1u:
                *(unsigned char *)unint64_t v66 = *v67;
                char v86 = 1;
                break;
              case 2u:
                *(void *)unint64_t v66 = *(void *)v67;
                *(void *)(v66 + 8) = *((void *)v67 + 1);
                uint64_t v87 = (v100 + v66) & v99;
                unint64_t v88 = (unint64_t)&v67[v100] & v99;
                unint64_t v113 = *(void (**)(uint64_t, unint64_t, uint64_t))(v102 + 16);
                swift_bridgeObjectRetain();
                v113(v87, v88, v103);
                uint64_t v89 = (v101 + v87) & v105;
                unint64_t v90 = (v101 + v88) & v105;
                uint64_t v45 = v117;
                v64(v89, v90, v119);
                uint64_t v65 = v106;
                *(void *)((v114 + v89) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v114 + v90) & 0xFFFFFFFFFFFFFFF8);
                *(unsigned char *)(v66 + v98) = v67[v98];
                char v86 = 2;
                break;
              case 3u:
                *(void *)unint64_t v66 = *(void *)v67;
                *(void *)(v66 + 8) = *((void *)v67 + 1);
                uint64_t v91 = (v100 + v66) & v99;
                unint64_t v92 = (unint64_t)&v67[v100] & v99;
                unsigned int v116 = *(void (**)(uint64_t, unint64_t, uint64_t))(v102 + 16);
                swift_bridgeObjectRetain();
                v116(v91, v92, v103);
                uint64_t v93 = (v101 + v91) & v105;
                v64(v93, (v101 + v92) & v105, v119);
                uint64_t v65 = v106;
                *(void *)((v114 + v93) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v114 + ((v101 + v92) & v105)) & 0xFFFFFFFFFFFFFFF8);
                char v86 = 3;
                break;
              default:
                char v86 = 0;
                *(_WORD *)unint64_t v66 = *(_WORD *)v67;
                break;
            }
            uint64_t v74 = v109;
            uint64_t v73 = v110;
            uint64_t v75 = v107;
            uint64_t v76 = v108;
            *(unsigned char *)(v66 + v65) = v86;
            *((unsigned char *)v59 + v24) = 1;
            goto LABEL_67;
          }
          uint64_t v75 = v107;
          *uint64_t v59 = *v60;
          v59[1] = v60[1];
          *((unsigned char *)v59 + v24) = 0;
          swift_bridgeObjectRetain();
          uint64_t v74 = v109;
          uint64_t v73 = v110;
LABEL_66:
          uint64_t v76 = v108;
LABEL_67:
          unint64_t v77 = ((unint64_t)v45 + v76) & v58;
          unint64_t v78 = (unint64_t)&v120[v76] & v58;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v74 + 16))(v77, v78, v73);
          uint64_t v79 = (unsigned char *)(v77 + v75);
          uint64_t v80 = v78 + v75;
          *uint64_t v79 = *(unsigned char *)(v78 + v75);
          v79[1] = *(unsigned char *)(v78 + v75 + 1);
          v79[2] = *(unsigned char *)(v78 + v75 + 2);
          unint64_t v81 = (v77 + v75 + 10) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v82 = (v80 + 10) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v83 = *(void *)v82;
          LOBYTE(v77) = *(unsigned char *)(v82 + 8);
          sub_22EADDF00(*(void *)v82, v77);
          *(void *)unint64_t v81 = v83;
          *(unsigned char *)(v81 + 8) = v77;
          return a1;
        }
        uint64_t v72 = v47;
        (*(void (**)(void *, void *, uint64_t))(v118 + 16))(v59, v60, v119);
        *(_OWORD *)(((unint64_t)v59 + v72) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v60 + v72) & 0xFFFFFFFFFFFFFFF8);
        *((unsigned char *)v59 + v24) = 2;
      }
      uint64_t v74 = v109;
      uint64_t v73 = v110;
      uint64_t v75 = v107;
      goto LABEL_66;
    }
  }
  uint64_t v35 = *a2;
  *(void *)a1 = *a2;
  a1 = v35 + (((v13 | v27) + 16) & ~(v13 | v27));
  swift_retain();
  return a1;
}

uint64_t sub_22EBFCE4C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v63 = sub_22EE7F6E0();
  uint64_t v3 = *(void *)(v63 - 8);
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = sub_22EE7F5D0();
  uint64_t v58 = *(void *)(v6 - 8);
  uint64_t v59 = v6;
  uint64_t v7 = *(unsigned __int8 *)(v58 + 80);
  uint64_t v8 = v5 | v7 | 7;
  uint64_t v9 = a1 + v8 + 32;
  uint64_t v10 = (unsigned __int8 *)(v9 & ~v8);
  uint64_t v11 = v5 + 16;
  uint64_t v12 = *(void *)(v3 + 64);
  uint64_t v60 = v8 + v12;
  uint64_t v13 = (v8 + v12 + ((v5 + 16) & ~v5)) & ~v8;
  uint64_t v56 = v7 + 16;
  uint64_t v57 = *(void *)(v58 + 64) + v5;
  uint64_t v14 = v12 + 7;
  unint64_t v15 = (v12 + 7 + ((v57 + ((v7 + 16) & ~v7)) & ~v5)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = v15 + 8;
  unint64_t v17 = v15 + 9;
  if (v17 <= v16) {
    unint64_t v17 = v16;
  }
  if (v17 <= 2) {
    uint64_t v18 = 2;
  }
  else {
    uint64_t v18 = v17;
  }
  unint64_t v19 = (v14 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v18 + v13 + 1 > v19) {
    unint64_t v20 = v18 + v13 + 1;
  }
  else {
    unint64_t v20 = v19;
  }
  if (v20 <= 0x10) {
    uint64_t v21 = 16;
  }
  else {
    uint64_t v21 = v20;
  }
  unsigned int v22 = v10[v21];
  unsigned int v23 = v22 - 3;
  if (v22 >= 3)
  {
    if (v21 <= 3) {
      uint64_t v24 = v21;
    }
    else {
      uint64_t v24 = 4;
    }
    switch(v24)
    {
      case 1:
        int v25 = *v10;
        goto LABEL_21;
      case 2:
        int v25 = *(unsigned __int16 *)v10;
        goto LABEL_21;
      case 3:
        int v25 = *(unsigned __int16 *)v10 | (*(unsigned __int8 *)((v9 & ~v8) + 2) << 16);
        goto LABEL_21;
      case 4:
        int v25 = *(_DWORD *)v10;
LABEL_21:
        int v26 = (v25 | (v23 << (8 * v21))) + 3;
        unsigned int v22 = v25 + 3;
        if (v21 < 4) {
          unsigned int v22 = v26;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v27 = ~v8;
  uint64_t v61 = ~v5;
  uint64_t v55 = ~v7;
  if (v22 == 2)
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v9 & ~v8, v63);
  }
  else if (v22 == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v54 = *(void (**)(unint64_t, uint64_t))(v3 + 8);
    v54((unint64_t)&v10[v11] & v61, v63);
    uint64_t v28 = (unsigned __int8 *)((v60 + ((unint64_t)&v10[v11] & v61)) & v27);
    unsigned int v29 = v28[v18];
    unsigned int v30 = v29 - 4;
    if (v29 >= 4)
    {
      if (v18 <= 3) {
        uint64_t v31 = v18;
      }
      else {
        uint64_t v31 = 4;
      }
      switch(v31)
      {
        case 1:
          int v32 = *v28;
          goto LABEL_36;
        case 2:
          int v32 = *(unsigned __int16 *)v28;
          goto LABEL_36;
        case 3:
          int v32 = *(unsigned __int16 *)((v60 + ((unint64_t)&v10[v11] & v61)) & v27) | (*(unsigned __int8 *)(((v60 + ((unint64_t)&v10[v11] & v61)) & v27) + 2) << 16);
          goto LABEL_36;
        case 4:
          int v32 = *(_DWORD *)v28;
LABEL_36:
          int v33 = (v32 | (v30 << (8 * v18))) + 4;
          unsigned int v29 = v32 + 4;
          if (v18 < 4) {
            unsigned int v29 = v33;
          }
          break;
        default:
          break;
      }
    }
    if (v29 >= 2)
    {
      swift_bridgeObjectRelease();
      unint64_t v34 = (unint64_t)&v28[v56] & v55;
      (*(void (**)(unint64_t, uint64_t))(v58 + 8))(v34, v59);
      v54((v57 + v34) & v61, v63);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v35 = v21 + 1;
  uint64_t v36 = ((v9 | v8) + v21 + 1) & v27;
  unsigned int v37 = *(unsigned __int8 *)(v36 + v21);
  if (v37 <= 2)
  {
    if (v37 == 2)
    {
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(((v9 | v8) + v21 + 1) & v27, v63);
    }
    else if (v37 == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v38 = (v11 + v36) & v61;
      unint64_t v39 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
      v39(v38, v63);
      char v40 = (unsigned __int8 *)((v60 + v38) & v27);
      unsigned int v41 = v40[v18];
      unsigned int v42 = v41 - 4;
      if (v41 >= 4)
      {
        if (v18 <= 3) {
          uint64_t v43 = v18;
        }
        else {
          uint64_t v43 = 4;
        }
        switch(v43)
        {
          case 1:
            int v44 = *v40;
            goto LABEL_54;
          case 2:
            int v44 = *(unsigned __int16 *)v40;
            goto LABEL_54;
          case 3:
            int v44 = *(unsigned __int16 *)v40 | (v40[2] << 16);
            goto LABEL_54;
          case 4:
            int v44 = *(_DWORD *)v40;
LABEL_54:
            int v45 = (v44 | (v42 << (8 * v18))) + 4;
            unsigned int v41 = v44 + 4;
            if (v18 < 4) {
              unsigned int v41 = v45;
            }
            break;
          default:
            break;
        }
      }
      if (v41 >= 2)
      {
        swift_bridgeObjectRelease();
        unint64_t v46 = (unint64_t)&v40[v56] & v55;
        (*(void (**)(unint64_t, uint64_t))(v58 + 8))(v46, v59);
        v39((v57 + v46) & v61, v63);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v47 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v48 = v47 + 8;
  unint64_t v49 = (unint64_t)&v10[v35 + *(unsigned __int8 *)(v47 + 80) + ((v35 + v8) & v27)] & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  (*(void (**)(unint64_t))(v47 + 8))(v49);
  unint64_t v50 = (*(void *)(v48 + 56) + v49 + 10) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v51 = *(void *)v50;
  char v52 = *(unsigned char *)(v50 + 8);

  return sub_22EADDB08(v51, v52);
}

uint64_t sub_22EBFD3CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v6 = sub_22EE7F6E0();
  uint64_t v107 = *(void *)(v6 - 8);
  uint64_t v108 = v6;
  uint64_t v7 = *(unsigned __int8 *)(v107 + 80);
  uint64_t v8 = sub_22EE7F5D0();
  uint64_t v90 = *(void *)(v8 - 8);
  uint64_t v91 = v8;
  uint64_t v9 = *(unsigned __int8 *)(v90 + 80);
  uint64_t v10 = v7 | v9 | 7;
  uint64_t v101 = v10 + 32 + a1;
  uint64_t v109 = (void *)(v101 & ~v10);
  uint64_t v103 = v10 + 32 + a2;
  uint64_t v11 = (unsigned __int8 *)(v103 & ~v10);
  uint64_t v92 = v7 + 16;
  uint64_t v12 = *(void *)(v107 + 64);
  uint64_t v94 = v10 + v12;
  uint64_t v13 = (v10 + v12 + ((v7 + 16) & ~v7)) & ~v10;
  uint64_t v88 = v9 + 16;
  uint64_t v89 = *(void *)(v90 + 64) + v7;
  uint64_t v14 = v12 + 7;
  unint64_t v15 = (v14 + ((v89 + ((v9 + 16) & ~v9)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = v15 + 8;
  unint64_t v17 = v15 + 9;
  unint64_t v86 = v16;
  if (v17 <= v16) {
    unint64_t v17 = v16;
  }
  if (v17 <= 2) {
    unint64_t v17 = 2;
  }
  uint64_t v98 = v14;
  unint64_t v99 = v17;
  unint64_t v18 = v17 + v13;
  if (v18 + 1 > (v14 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v19 = v18 + 1;
  }
  else {
    unint64_t v19 = (v14 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v19 <= 0x10) {
    uint64_t v20 = 16;
  }
  else {
    uint64_t v20 = v19;
  }
  unsigned int v21 = v11[v20];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v21 >= 3)
  {
    if (v20 <= 3) {
      uint64_t v22 = v20;
    }
    else {
      uint64_t v22 = 4;
    }
    switch(v22)
    {
      case 1:
        int v23 = *v11;
        goto LABEL_20;
      case 2:
        int v23 = *(unsigned __int16 *)v11;
        goto LABEL_20;
      case 3:
        int v23 = *(unsigned __int16 *)(v103 & ~v10) | (*(unsigned __int8 *)((v103 & ~v10) + 2) << 16);
        goto LABEL_20;
      case 4:
        int v23 = *(_DWORD *)v11;
LABEL_20:
        int v24 = (v23 | ((v21 - 3) << (8 * v20))) + 3;
        unsigned int v25 = v23 + 3;
        if (v20 >= 4) {
          unsigned int v21 = v25;
        }
        else {
          unsigned int v21 = v24;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v26 = ~v10;
  uint64_t v97 = ~v7;
  uint64_t v87 = ~v9;
  if (v21 == 2)
  {
    uint64_t v27 = (void *)(v101 & ~v10);
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v107 + 16))(v109, v11, v108);
    *(_OWORD *)(((unint64_t)v109 + v98) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v11[v98] & 0xFFFFFFFFFFFFFFF8);
    char v38 = 2;
  }
  else
  {
    uint64_t v27 = (void *)(v101 & ~v10);
    if (v21 != 1)
    {
      *uint64_t v109 = *(void *)v11;
      *(void *)((v101 & ~v10) + 8) = *(void *)((v103 & ~v10) + 8);
      *((unsigned char *)v109 + v20) = 0;
      swift_bridgeObjectRetain();
      goto LABEL_45;
    }
    *uint64_t v109 = *(void *)v11;
    *(void *)((v101 & ~v10) + 8) = *(void *)((v103 & ~v10) + 8);
    unint64_t v28 = ((unint64_t)v109 + v92) & v97;
    unint64_t v29 = (unint64_t)&v11[v92] & v97;
    unsigned int v30 = *(void (**)(void))(v107 + 16);
    swift_bridgeObjectRetain();
    int v85 = v30;
    ((void (*)(unint64_t, unint64_t, uint64_t))v30)(v28, v29, v108);
    unint64_t v31 = (v94 + v28) & v26;
    int v32 = (unsigned __int8 *)((v94 + v29) & v26);
    unint64_t v33 = v99;
    unsigned int v34 = v32[v99];
    unsigned int v35 = v34 - 4;
    if (v34 >= 4)
    {
      if (v99 <= 3) {
        uint64_t v36 = v99;
      }
      else {
        uint64_t v36 = 4;
      }
      switch(v36)
      {
        case 1:
          int v37 = *v32;
          goto LABEL_36;
        case 2:
          int v37 = *(unsigned __int16 *)v32;
          goto LABEL_36;
        case 3:
          int v37 = *(unsigned __int16 *)v32 | (*(unsigned __int8 *)(((v94 + v29) & v26) + 2) << 16);
          goto LABEL_36;
        case 4:
          int v37 = *(_DWORD *)v32;
LABEL_36:
          int v39 = (v37 | (v35 << (8 * v99))) + 4;
          unsigned int v34 = v37 + 4;
          if (v99 < 4) {
            unsigned int v34 = v39;
          }
          break;
        default:
          break;
      }
    }
    switch(v34)
    {
      case 1u:
        *(unsigned char *)unint64_t v31 = *v32;
        char v40 = 1;
        break;
      case 2u:
        *(void *)unint64_t v31 = *(void *)v32;
        *(void *)(v31 + 8) = *(void *)(((v94 + v29) & v26) + 8);
        unint64_t v41 = (v88 + v31) & v87;
        unint64_t v83 = v31;
        unint64_t v42 = (unint64_t)&v32[v88] & v87;
        unint64_t v81 = *(void (**)(unint64_t, unint64_t, uint64_t))(v90 + 16);
        swift_bridgeObjectRetain();
        v81(v41, v42, v91);
        uint64_t v27 = (void *)(v101 & ~v10);
        uint64_t v82 = (v89 + v41) & v97;
        unint64_t v43 = (v89 + v42) & v97;
        unint64_t v31 = v83;
        v85();
        unint64_t v33 = v99;
        *(void *)((v98 + v82) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v98 + v43) & 0xFFFFFFFFFFFFFFF8);
        *(unsigned char *)(v83 + v86) = v32[v86];
        char v40 = 2;
        break;
      case 3u:
        *(void *)unint64_t v31 = *(void *)v32;
        *(void *)(v31 + 8) = *(void *)(((v94 + v29) & v26) + 8);
        unint64_t v44 = (unint64_t)&v32[v88] & v87;
        uint64_t v84 = *(void (**)(unint64_t, unint64_t, uint64_t))(v90 + 16);
        swift_bridgeObjectRetain();
        v84((v88 + v31) & v87, v44, v91);
        uint64_t v27 = (void *)(v101 & ~v10);
        unint64_t v45 = (v89 + ((v88 + v31) & v87)) & v97;
        unint64_t v46 = (v89 + v44) & v97;
        ((void (*)(unint64_t, unint64_t, uint64_t))v85)(v45, v46, v108);
        unint64_t v33 = v99;
        *(void *)((v98 + v45) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v98 + v46) & 0xFFFFFFFFFFFFFFF8);
        char v40 = 3;
        break;
      default:
        char v40 = 0;
        *(_WORD *)unint64_t v31 = *(_WORD *)v32;
        break;
    }
    *(unsigned char *)(v31 + v33) = v40;
    char v38 = 1;
  }
  *((unsigned char *)v27 + v20) = v38;
LABEL_45:
  uint64_t v47 = v20 + 1;
  uint64_t v48 = (void *)(((v101 | v10) + v20 + 1) & v26);
  unint64_t v49 = (void *)(((v103 | v10) + v20 + 1) & v26);
  unsigned int v50 = *((unsigned __int8 *)v49 + v20);
  if (v50 > 2)
  {
    memcpy((void *)(((v101 | v10) + v20 + 1) & v26), (const void *)(((v103 | v10) + v20 + 1) & v26), v20 + 1);
LABEL_57:
    uint64_t v60 = a3;
    goto LABEL_58;
  }
  if (v50 == 2)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v107 + 16))(((v101 | v10) + v20 + 1) & v26, ((v103 | v10) + v20 + 1) & v26, v108);
    *(_OWORD *)(((unint64_t)v48 + v98) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v49 + v98) & 0xFFFFFFFFFFFFFFF8);
    *((unsigned char *)v48 + v20) = 2;
    goto LABEL_57;
  }
  if (v50 != 1)
  {
    *uint64_t v48 = *v49;
    *(void *)((((v101 | v10) + v20 + 1) & v26) + 8) = *(void *)((((v103 | v10) + v20 + 1) & v26) + 8);
    *((unsigned char *)v48 + v20) = 0;
    swift_bridgeObjectRetain();
    goto LABEL_57;
  }
  uint64_t v104 = (unsigned __int8 *)(v103 & ~v10);
  *uint64_t v48 = *v49;
  *(void *)((((v101 | v10) + v20 + 1) & v26) + 8) = v49[1];
  unint64_t v51 = ((unint64_t)v48 + v92) & v97;
  unint64_t v52 = ((unint64_t)v49 + v92) & v97;
  unint64_t v53 = *(void (**)(void))(v107 + 16);
  swift_bridgeObjectRetain();
  uint64_t v102 = v53;
  ((void (*)(unint64_t, unint64_t, uint64_t))v53)(v51, v52, v108);
  unint64_t v54 = (v94 + v51) & v26;
  uint64_t v55 = (unsigned __int8 *)((v94 + v52) & v26);
  unsigned int v56 = v55[v99];
  unsigned int v57 = v56 - 4;
  if (v56 < 4)
  {
    uint64_t v11 = v104;
  }
  else
  {
    if (v99 <= 3) {
      uint64_t v58 = v99;
    }
    else {
      uint64_t v58 = 4;
    }
    uint64_t v11 = v104;
    switch(v58)
    {
      case 1:
        int v59 = *v55;
        goto LABEL_63;
      case 2:
        int v59 = *(unsigned __int16 *)v55;
        goto LABEL_63;
      case 3:
        int v59 = *(unsigned __int16 *)v55 | (*(unsigned __int8 *)(((v94 + v52) & v26) + 2) << 16);
        goto LABEL_63;
      case 4:
        int v59 = *(_DWORD *)v55;
LABEL_63:
        int v75 = (v59 | (v57 << (8 * v99))) + 4;
        unsigned int v56 = v59 + 4;
        if (v99 < 4) {
          unsigned int v56 = v75;
        }
        break;
      default:
        break;
    }
  }
  switch(v56)
  {
    case 1u:
      *(unsigned char *)unint64_t v54 = *v55;
      char v76 = 1;
      break;
    case 2u:
      *(void *)unint64_t v54 = *(void *)v55;
      *(void *)(v54 + 8) = *(void *)(((v94 + v52) & v26) + 8);
      unint64_t v105 = (v88 + v54) & v87;
      unint64_t v95 = (unint64_t)&v55[v88] & v87;
      uint64_t v93 = *(void (**)(unint64_t, unint64_t, uint64_t))(v90 + 16);
      swift_bridgeObjectRetain();
      v93(v105, v95, v91);
      v102();
      *(void *)((v98 + ((v89 + v105) & v97)) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v98 + ((v89 + v95) & v97)) & 0xFFFFFFFFFFFFFFF8);
      *(unsigned char *)(v54 + v86) = v55[v86];
      char v76 = 2;
      break;
    case 3u:
      *(void *)unint64_t v54 = *(void *)v55;
      *(void *)(v54 + 8) = *(void *)(((v94 + v52) & v26) + 8);
      unint64_t v106 = v54;
      unint64_t v77 = (v88 + v54) & v87;
      unint64_t v78 = (unint64_t)&v55[v88] & v87;
      unint64_t v96 = *(void (**)(unint64_t, unint64_t, uint64_t))(v90 + 16);
      swift_bridgeObjectRetain();
      v96(v77, v78, v91);
      uint64_t v79 = (v89 + v77) & v97;
      unint64_t v80 = (v89 + v78) & v97;
      unint64_t v54 = v106;
      ((void (*)(uint64_t, unint64_t, uint64_t))v102)(v79, v80, v108);
      *(void *)((v98 + v79) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v98 + v80) & 0xFFFFFFFFFFFFFFF8);
      char v76 = 3;
      break;
    default:
      char v76 = 0;
      *(_WORD *)unint64_t v54 = *(_WORD *)v55;
      break;
  }
  uint64_t v60 = a3;
  *(unsigned char *)(v54 + v99) = v76;
  *((unsigned char *)v48 + v20) = 1;
  uint64_t v27 = v109;
LABEL_58:
  uint64_t v61 = (v47 + v10) & v26;
  uint64_t v62 = *(void *)(*(void *)(v60 + 16) - 8);
  uint64_t v63 = v62 + 16;
  uint64_t v64 = *(unsigned __int8 *)(v62 + 80);
  uint64_t v65 = v61 + v47 + v64;
  unint64_t v66 = ((unint64_t)v27 + v65) & ~v64;
  unint64_t v67 = (unint64_t)&v11[v65] & ~v64;
  (*(void (**)(unint64_t, unint64_t))(v62 + 16))(v66, v67);
  uint64_t v68 = *(void *)(v63 + 48);
  unsigned int v69 = (unsigned char *)(v68 + v66);
  uint64_t v70 = (unsigned char *)(v68 + v67);
  *unsigned int v69 = *v70;
  v69[1] = v70[1];
  v69[2] = v70[2];
  unint64_t v71 = (unint64_t)(v69 + 10) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v72 = (unint64_t)(v70 + 10) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v73 = *(void *)v72;
  LOBYTE(v67) = *(unsigned char *)(v72 + 8);
  sub_22EADDF00(*(void *)v72, v67);
  *(void *)unint64_t v71 = v73;
  *(unsigned char *)(v71 + 8) = v67;
  return a1;
}

void *sub_22EBFDDAC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  *a1 = *(void *)a2;
  a1[1] = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)v5 + 16) = *(unsigned char *)(a2 + 16);
  v5[3] = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v170 = sub_22EE7F6E0();
  uint64_t v6 = *(void *)(v170 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v162 = sub_22EE7F5D0();
  uint64_t v8 = *(void *)(v162 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v7 | v9 | 7;
  unint64_t v11 = (unint64_t)v5 + v10 + 32;
  uint64_t v12 = ~v10;
  uint64_t v13 = v11 & ~v10;
  uint64_t v14 = v10 + 32 + a2;
  uint64_t v15 = v14 & ~v10;
  uint64_t v165 = v15;
  uint64_t v166 = a3;
  uint64_t v159 = v8;
  if (v13 != v15)
  {
    uint64_t v163 = v7 + 16;
    uint64_t v16 = *(void *)(v6 + 64);
    uint64_t v17 = (v10 + ((v7 + 16) & ~v7) + v16) & v12;
    uint64_t v156 = v9 + 16;
    uint64_t v158 = *(void *)(v8 + 64) + v7;
    uint64_t v164 = v16;
    uint64_t v18 = v16 + 7;
    unint64_t v19 = (v18 + ((v158 + ((v9 + 16) & ~v9)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v20 = v19 + 8;
    unint64_t v21 = v19 + 9;
    unint64_t v148 = v20;
    if (v21 <= v20) {
      unint64_t v21 = v20;
    }
    if (v21 <= 2) {
      unint64_t v21 = 2;
    }
    unint64_t v168 = v21;
    unint64_t v22 = (v17 | 1) + v21;
    uint64_t v152 = v10 + 32 + a2;
    uint64_t v153 = v18;
    if (v22 <= (v18 & 0xFFFFFFFFFFFFFFF8) + 16) {
      unint64_t v22 = (v18 & 0xFFFFFFFFFFFFFFF8) + 16;
    }
    if (v22 <= 0x10) {
      uint64_t v23 = 16;
    }
    else {
      uint64_t v23 = v22;
    }
    unsigned int v24 = *(unsigned __int8 *)(v13 + v23);
    unsigned int v25 = v24 - 3;
    v150 = (char *)v5 + v10 + 32;
    if (v24 >= 3)
    {
      if (v23 <= 3) {
        uint64_t v26 = v23;
      }
      else {
        uint64_t v26 = 4;
      }
      switch(v26)
      {
        case 1:
          int v27 = *(unsigned __int8 *)v13;
          goto LABEL_30;
        case 2:
          int v27 = *(unsigned __int16 *)v13;
          goto LABEL_30;
        case 3:
          int v27 = *(unsigned __int16 *)v13 | (*(unsigned __int8 *)((v11 & ~v10) + 2) << 16);
          goto LABEL_30;
        case 4:
          int v27 = *(_DWORD *)v13;
LABEL_30:
          if (v23 < 4) {
            unsigned int v24 = (v27 | (v25 << (8 * v23))) + 3;
          }
          else {
            unsigned int v24 = v27 + 3;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v167 = ~v7;
    uint64_t v155 = ~v9;
    uint64_t v149 = v5;
    if (v24 == 2)
    {
      uint64_t v45 = v6;
      uint64_t v39 = ~v10;
      uint64_t v38 = v45;
      uint64_t v36 = (unsigned __int8 *)(v11 & ~v10);
      (*(void (**)(void))(v45 + 8))();
    }
    else if (v24 == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v36 = (unsigned __int8 *)v13;
      unint64_t v37 = (v163 + v13) & v167;
      uint64_t v38 = v6;
      uint64_t v145 = *(void (**)(unint64_t, uint64_t))(v6 + 8);
      v145(v37, v170);
      uint64_t v39 = ~v10;
      char v40 = (unsigned __int8 *)((v37 + v10 + v164) & v12);
      unsigned int v41 = v40[v168];
      unsigned int v42 = v41 - 4;
      if (v41 >= 4)
      {
        if (v168 <= 3) {
          uint64_t v43 = v168;
        }
        else {
          uint64_t v43 = 4;
        }
        switch(v43)
        {
          case 1:
            int v44 = *v40;
            goto LABEL_46;
          case 2:
            int v44 = *(unsigned __int16 *)v40;
            goto LABEL_46;
          case 3:
            int v44 = *(unsigned __int16 *)v40 | (v40[2] << 16);
            goto LABEL_46;
          case 4:
            int v44 = *(_DWORD *)v40;
LABEL_46:
            if (v168 < 4) {
              unsigned int v41 = (v44 | (v42 << (8 * v168))) + 4;
            }
            else {
              unsigned int v41 = v44 + 4;
            }
            break;
          default:
            break;
        }
      }
      if (v41 >= 2)
      {
        swift_bridgeObjectRelease();
        unint64_t v46 = (unint64_t)&v40[v156] & v155;
        (*(void (**)(unint64_t, uint64_t))(v159 + 8))(v46, v162);
        v145((v158 + v46) & v167, v170);
      }
    }
    else
    {
      uint64_t v36 = (unsigned __int8 *)(v11 & ~v10);
      uint64_t v38 = v6;
      uint64_t v39 = ~v10;
      swift_bridgeObjectRelease();
    }
    unsigned int v47 = *(unsigned __int8 *)(v15 + v23);
    unsigned int v48 = v47 - 3;
    if (v47 < 3)
    {
      uint64_t v12 = v39;
      uint64_t v6 = v38;
      uint64_t v13 = (uint64_t)v36;
      uint64_t v5 = v149;
    }
    else
    {
      if (v23 <= 3) {
        uint64_t v49 = v23;
      }
      else {
        uint64_t v49 = 4;
      }
      uint64_t v12 = v39;
      uint64_t v6 = v38;
      uint64_t v13 = (uint64_t)v36;
      uint64_t v5 = v149;
      switch(v49)
      {
        case 1:
          int v50 = *(unsigned __int8 *)v15;
          goto LABEL_61;
        case 2:
          int v50 = *(unsigned __int16 *)v15;
          goto LABEL_61;
        case 3:
          int v50 = *(unsigned __int16 *)v15 | (*(unsigned __int8 *)(v15 + 2) << 16);
          goto LABEL_61;
        case 4:
          int v50 = *(_DWORD *)v15;
LABEL_61:
          if (v23 < 4) {
            unsigned int v47 = (v50 | (v48 << (8 * v23))) + 3;
          }
          else {
            unsigned int v47 = v50 + 3;
          }
          break;
        default:
          break;
      }
    }
    if (v47 == 2)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v13, v15, v170);
      *(_OWORD *)(((v13 | 7) + v164) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((v15 | 7) + v164) & 0xFFFFFFFFFFFFFFF8);
      *(unsigned char *)(v13 + v23) = 2;
    }
    else
    {
      if (v47 == 1)
      {
        *(void *)uint64_t v13 = *(void *)v15;
        *(void *)(v13 + 8) = *(void *)(v15 + 8);
        unint64_t v51 = (v163 + v13) & v167;
        unint64_t v52 = (v163 + v15) & v167;
        unint64_t v53 = *(void (**)(uint64_t, unint64_t, uint64_t))(v6 + 16);
        swift_bridgeObjectRetain();
        unint64_t v143 = v53;
        v53(v51, v52, v170);
        uint64_t v54 = v12;
        uint64_t v55 = (v51 + v10 + v164) & v12;
        uint64_t v146 = v54;
        unsigned int v56 = (unsigned __int8 *)((v52 + v10 + v164) & v54);
        unsigned int v57 = v56[v168];
        unsigned int v58 = v57 - 4;
        if (v57 >= 4)
        {
          if (v168 <= 3) {
            uint64_t v59 = v168;
          }
          else {
            uint64_t v59 = 4;
          }
          switch(v59)
          {
            case 1:
              int v60 = *v56;
              goto LABEL_78;
            case 2:
              int v60 = *(unsigned __int16 *)v56;
              goto LABEL_78;
            case 3:
              int v60 = *(unsigned __int16 *)((v52 + v10 + v164) & v54) | (*(unsigned __int8 *)(((v52 + v10 + v164) & v54)
                                                                                          + 2) << 16);
              goto LABEL_78;
            case 4:
              int v60 = *(_DWORD *)v56;
LABEL_78:
              if (v168 < 4) {
                unsigned int v57 = (v60 | (v58 << (8 * v168))) + 4;
              }
              else {
                unsigned int v57 = v60 + 4;
              }
              break;
            default:
              break;
          }
        }
        switch(v57)
        {
          case 1u:
            *(unsigned char *)uint64_t v55 = *v56;
            char v61 = 1;
            break;
          case 2u:
            *(void *)uint64_t v55 = *(void *)v56;
            *(void *)(v55 + 8) = *(void *)(((v52 + v10 + v164) & v54) + 8);
            uint64_t v62 = (v156 + v55) & v155;
            uint64_t v141 = v55;
            unint64_t v63 = (unint64_t)&v56[v156] & v155;
            v140 = *(void (**)(uint64_t, unint64_t, uint64_t))(v159 + 16);
            swift_bridgeObjectRetain();
            v140(v62, v63, v162);
            uint64_t v64 = (v158 + v62) & v167;
            unint64_t v65 = (v158 + v63) & v167;
            uint64_t v55 = v141;
            v143(v64, v65, v170);
            *(void *)((v153 + v64) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v153 + v65) & 0xFFFFFFFFFFFFFFF8);
            *(unsigned char *)(v148 + v141) = v56[v148];
            char v61 = 2;
            break;
          case 3u:
            *(void *)uint64_t v55 = *(void *)v56;
            *(void *)(v55 + 8) = *(void *)(((v52 + v10 + v164) & v54) + 8);
            uint64_t v66 = (v156 + v55) & v155;
            unint64_t v67 = (unint64_t)&v56[v156] & v155;
            uint64_t v142 = *(void (**)(uint64_t, unint64_t, uint64_t))(v159 + 16);
            swift_bridgeObjectRetain();
            v142(v66, v67, v162);
            uint64_t v68 = (v158 + v66) & v167;
            unint64_t v69 = (v158 + v67) & v167;
            v143(v68, v69, v170);
            *(void *)((v153 + v68) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v153 + v69) & 0xFFFFFFFFFFFFFFF8);
            char v61 = 3;
            break;
          default:
            char v61 = 0;
            *(_WORD *)uint64_t v55 = *(_WORD *)v56;
            break;
        }
        uint64_t v34 = v168;
        unint64_t v11 = (unint64_t)v150;
        uint64_t v14 = v152;
        *(unsigned char *)(v55 + v168) = v61;
        *(unsigned char *)(v13 + v23) = 1;
        uint64_t v12 = v146;
        goto LABEL_87;
      }
      *(void *)uint64_t v13 = *(void *)v15;
      *(void *)(v13 + 8) = *(void *)(v15 + 8);
      *(unsigned char *)(v13 + v23) = 0;
      swift_bridgeObjectRetain();
    }
    uint64_t v34 = v168;
    unint64_t v11 = (unint64_t)v150;
    uint64_t v14 = v152;
    goto LABEL_87;
  }
  uint64_t v28 = *(void *)(v6 + 64);
  uint64_t v29 = *(void *)(v8 + 64);
  uint64_t v167 = ~v7;
  uint64_t v163 = v7 + 16;
  uint64_t v164 = v28;
  uint64_t v155 = ~v9;
  uint64_t v156 = v9 + 16;
  uint64_t v158 = v29 + v7;
  uint64_t v30 = v28 + 7;
  unint64_t v31 = (v28 + 7 + ((v29 + v7 + ((v9 + 16) & ~v9)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = v31 + 8;
  unint64_t v33 = v31 + 9;
  unint64_t v148 = v32;
  if (v33 <= v32) {
    unint64_t v33 = v32;
  }
  if (v33 <= 2) {
    uint64_t v34 = 2;
  }
  else {
    uint64_t v34 = v33;
  }
  unint64_t v35 = ((v10 + ((v7 + 16) & ~v7) + v28) & v12 | 1) + v34;
  uint64_t v153 = v28 + 7;
  if (v35 <= (v30 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v35 = (v30 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v35 <= 0x10) {
    uint64_t v23 = 16;
  }
  else {
    uint64_t v23 = v35;
  }
LABEL_87:
  size_t v70 = v23 + 1;
  unint64_t v71 = (void *)(((v11 | v10) + v23 + 1) & v12);
  unint64_t v72 = (void *)(((v14 | v10) + v23 + 1) & v12);
  unsigned int v73 = *((unsigned __int8 *)v71 + v23);
  unsigned int v74 = *((unsigned __int8 *)v72 + v23);
  if (v73 > 2)
  {
    if (v74 <= 2)
    {
      if (v74 == 2)
      {
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 16))(((v11 | v10) + v23 + 1) & v12, ((v14 | v10) + v23 + 1) & v12, v170);
        *(_OWORD *)(((unint64_t)v71 + v153) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v72 + v153) & 0xFFFFFFFFFFFFFFF8);
        char v102 = 2;
      }
      else
      {
        if (v74 != 1)
        {
          *unint64_t v71 = *v72;
          *(void *)((((v11 | v10) + v23 + 1) & v12) + 8) = *(void *)((((v14 | v10) + v23 + 1) & v12) + 8);
          *((unsigned char *)v71 + v23) = 0;
          swift_bridgeObjectRetain();
          goto LABEL_178;
        }
        uint64_t v144 = (unsigned __int8 *)v13;
        *unint64_t v71 = *v72;
        *(void *)((((v11 | v10) + v23 + 1) & v12) + 8) = *(void *)((((v14 | v10) + v23 + 1) & v12) + 8);
        uint64_t v82 = v6;
        unint64_t v83 = ((unint64_t)v71 + v163) & v167;
        unint64_t v84 = ((unint64_t)v72 + v163) & v167;
        int v85 = *(void (**)(unint64_t, unint64_t, uint64_t))(v82 + 16);
        uint64_t v169 = v34;
        swift_bridgeObjectRetain();
        v85(v83, v84, v170);
        uint64_t v86 = (v164 + v10 + v83) & v12;
        uint64_t v147 = v12;
        uint64_t v87 = (unsigned __int8 *)((v164 + v10 + v84) & v12);
        unsigned int v88 = v87[v169];
        unsigned int v89 = v88 - 4;
        if (v88 >= 4)
        {
          if (v169 <= 3) {
            uint64_t v90 = v169;
          }
          else {
            uint64_t v90 = 4;
          }
          switch(v90)
          {
            case 1:
              int v91 = *v87;
              goto LABEL_125;
            case 2:
              int v91 = *(unsigned __int16 *)v87;
              goto LABEL_125;
            case 3:
              int v91 = *(unsigned __int16 *)v87 | (v87[2] << 16);
              goto LABEL_125;
            case 4:
              int v91 = *(_DWORD *)v87;
LABEL_125:
              int v103 = (v91 | (v89 << (8 * v169))) + 4;
              unsigned int v88 = v91 + 4;
              if (v169 < 4) {
                unsigned int v88 = v103;
              }
              break;
            default:
              break;
          }
        }
        switch(v88)
        {
          case 1u:
LABEL_173:
            *(unsigned char *)uint64_t v86 = *v87;
            char v119 = 1;
            break;
          case 2u:
LABEL_174:
            *(void *)uint64_t v86 = *(void *)v87;
            *(void *)(v86 + 8) = *((void *)v87 + 1);
            uint64_t v120 = (v156 + v86) & v155;
            unint64_t v157 = (unint64_t)&v87[v156] & v155;
            uint64_t v160 = *(void (**)(uint64_t, unint64_t, uint64_t))(v159 + 16);
            swift_bridgeObjectRetain();
            v160(v120, v157, v162);
            uint64_t v121 = (v158 + v120) & v167;
            v85(v121, (v158 + v157) & v167, v170);
            *(void *)((v153 + v121) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v153 + ((v158 + v157) & v167)) & 0xFFFFFFFFFFFFFFF8);
            *(unsigned char *)(v86 + v148) = v87[v148];
            char v119 = 2;
            break;
          case 3u:
LABEL_175:
            *(void *)uint64_t v86 = *(void *)v87;
            *(void *)(v86 + 8) = *((void *)v87 + 1);
            uint64_t v122 = (v156 + v86) & v155;
            unint64_t v123 = (unint64_t)&v87[v156] & v155;
            uint64_t v161 = *(void (**)(uint64_t, unint64_t, uint64_t))(v159 + 16);
            swift_bridgeObjectRetain();
            v161(v122, v123, v162);
            uint64_t v124 = (v158 + v122) & v167;
            v85(v124, (v158 + v123) & v167, v170);
            *(void *)((v153 + v124) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v153 + ((v158 + v123) & v167)) & 0xFFFFFFFFFFFFFFF8);
            char v119 = 3;
            break;
          default:
LABEL_172:
            char v119 = 0;
            *(_WORD *)uint64_t v86 = *(_WORD *)v87;
            break;
        }
        uint64_t v13 = (uint64_t)v144;
        uint64_t v12 = v147;
        *(unsigned char *)(v86 + v169) = v119;
        char v102 = 1;
      }
      *((unsigned char *)v71 + v23) = v102;
      goto LABEL_178;
    }
    memcpy((void *)(((v11 | v10) + v23 + 1) & v12), (const void *)(((v14 | v10) + v23 + 1) & v12), v23 + 1);
  }
  else if (v74 > 2)
  {
    uint64_t v92 = v5;
    uint64_t v93 = (unsigned __int8 *)v13;
    if (v73 == 2)
    {
      (*(void (**)(void *, uint64_t))(v6 + 8))(v71, v170);
    }
    else if (v73 == 1)
    {
      uint64_t v94 = v34;
      swift_bridgeObjectRelease();
      uint64_t v95 = v6;
      unint64_t v96 = ((unint64_t)v71 + v163) & v167;
      uint64_t v154 = *(void (**)(unint64_t, uint64_t))(v95 + 8);
      v154(v96, v170);
      uint64_t v97 = (unsigned __int8 *)((v164 + v10 + v96) & v12);
      unsigned int v98 = v97[v94];
      unsigned int v99 = v98 - 4;
      if (v98 >= 4)
      {
        if (v94 <= 3) {
          uint64_t v100 = v94;
        }
        else {
          uint64_t v100 = 4;
        }
        switch(v100)
        {
          case 1:
            int v101 = *v97;
            goto LABEL_131;
          case 2:
            int v101 = *(unsigned __int16 *)v97;
            goto LABEL_131;
          case 3:
            int v101 = *(unsigned __int16 *)v97 | (*(unsigned __int8 *)(((v164 + v10 + v96) & v12) + 2) << 16);
            goto LABEL_131;
          case 4:
            int v101 = *(_DWORD *)v97;
LABEL_131:
            int v104 = (v101 | (v99 << (8 * v94))) + 4;
            unsigned int v98 = v101 + 4;
            if (v94 < 4) {
              unsigned int v98 = v104;
            }
            break;
          default:
            break;
        }
      }
      if (v98 >= 2)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v159 + 8))((unint64_t)&v97[v156] & v155, v162);
        v154((v158 + ((unint64_t)&v97[v156] & v155)) & v167, v170);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    memcpy(v71, v72, v70);
    uint64_t v13 = (uint64_t)v93;
    uint64_t v5 = v92;
  }
  else if (v71 != v72)
  {
    uint64_t v144 = (unsigned __int8 *)v13;
    uint64_t v169 = v34;
    if (v73 == 2)
    {
      uint64_t v76 = v12;
      uint64_t v75 = v6;
      (*(void (**)(unint64_t, uint64_t))(v6 + 8))(((v11 | v10) + v23 + 1) & v12, v170);
    }
    else if (v73 == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v75 = v6;
      v151 = *(void (**)(unint64_t, uint64_t))(v6 + 8);
      v151(((unint64_t)v71 + v163) & v167, v170);
      uint64_t v76 = v12;
      unint64_t v77 = (unsigned __int8 *)((v164 + v10 + (((unint64_t)v71 + v163) & v167)) & v12);
      unsigned int v78 = v77[v169];
      unsigned int v79 = v78 - 4;
      if (v78 >= 4)
      {
        if (v169 <= 3) {
          uint64_t v80 = v169;
        }
        else {
          uint64_t v80 = 4;
        }
        switch(v80)
        {
          case 1:
            int v81 = *v77;
            goto LABEL_139;
          case 2:
            int v81 = *(unsigned __int16 *)v77;
            goto LABEL_139;
          case 3:
            int v81 = *(unsigned __int16 *)v77 | (v77[2] << 16);
            goto LABEL_139;
          case 4:
            int v81 = *(_DWORD *)v77;
LABEL_139:
            int v105 = (v81 | (v79 << (8 * v169))) + 4;
            unsigned int v78 = v81 + 4;
            if (v169 < 4) {
              unsigned int v78 = v105;
            }
            break;
          default:
            break;
        }
      }
      if (v78 >= 2)
      {
        swift_bridgeObjectRelease();
        unint64_t v106 = (unint64_t)&v77[v156] & v155;
        (*(void (**)(unint64_t, uint64_t))(v159 + 8))(v106, v162);
        v151((v158 + v106) & v167, v170);
      }
    }
    else
    {
      uint64_t v75 = v6;
      uint64_t v76 = v12;
      swift_bridgeObjectRelease();
    }
    unsigned int v107 = *((unsigned __int8 *)v72 + v23);
    unsigned int v108 = v107 - 3;
    if (v107 < 3)
    {
      uint64_t v12 = v76;
    }
    else
    {
      if (v23 <= 3) {
        uint64_t v109 = v23;
      }
      else {
        uint64_t v109 = 4;
      }
      uint64_t v12 = v76;
      switch(v109)
      {
        case 1:
          int v110 = *(unsigned __int8 *)v72;
          goto LABEL_153;
        case 2:
          int v110 = *(unsigned __int16 *)v72;
          goto LABEL_153;
        case 3:
          int v110 = *(unsigned __int16 *)v72 | (*((unsigned __int8 *)v72 + 2) << 16);
          goto LABEL_153;
        case 4:
          int v110 = *(_DWORD *)v72;
LABEL_153:
          int v111 = (v110 | (v108 << (8 * v23))) + 3;
          unsigned int v107 = v110 + 3;
          if (v23 < 4) {
            unsigned int v107 = v111;
          }
          break;
        default:
          break;
      }
    }
    if (v107 == 2)
    {
      (*(void (**)(void *, void *, uint64_t))(v75 + 16))(v71, v72, v170);
      *(_OWORD *)(((unint64_t)v71 + v153) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v72 + v153) & 0xFFFFFFFFFFFFFFF8);
      *((unsigned char *)v71 + v23) = 2;
    }
    else
    {
      if (v107 == 1)
      {
        *unint64_t v71 = *v72;
        v71[1] = v72[1];
        unint64_t v112 = ((unint64_t)v71 + v163) & v167;
        unint64_t v113 = ((unint64_t)v72 + v163) & v167;
        int v85 = *(void (**)(unint64_t, unint64_t, uint64_t))(v75 + 16);
        swift_bridgeObjectRetain();
        v85(v112, v113, v170);
        uint64_t v86 = (v164 + v10 + v112) & v12;
        uint64_t v147 = v12;
        uint64_t v87 = (unsigned __int8 *)((v164 + v10 + v113) & v12);
        unsigned int v114 = v87[v169];
        unsigned int v115 = v114 - 4;
        if (v114 >= 4)
        {
          if (v169 <= 3) {
            uint64_t v116 = v169;
          }
          else {
            uint64_t v116 = 4;
          }
          switch(v116)
          {
            case 1:
              int v117 = *v87;
              goto LABEL_169;
            case 2:
              int v117 = *(unsigned __int16 *)v87;
              goto LABEL_169;
            case 3:
              int v117 = *(unsigned __int16 *)v87 | (v87[2] << 16);
              goto LABEL_169;
            case 4:
              int v117 = *(_DWORD *)v87;
LABEL_169:
              int v118 = (v117 | (v115 << (8 * v169))) + 4;
              unsigned int v114 = v117 + 4;
              if (v169 < 4) {
                unsigned int v114 = v118;
              }
              break;
            default:
              break;
          }
        }
        switch(v114)
        {
          case 1u:
            goto LABEL_173;
          case 2u:
            goto LABEL_174;
          case 3u:
            goto LABEL_175;
          default:
            goto LABEL_172;
        }
      }
      *unint64_t v71 = *v72;
      v71[1] = v72[1];
      *((unsigned char *)v71 + v23) = 0;
      swift_bridgeObjectRetain();
    }
    uint64_t v13 = (uint64_t)v144;
  }
LABEL_178:
  uint64_t v125 = *(void *)(*(void *)(v166 + 16) - 8);
  uint64_t v126 = v125 + 24;
  uint64_t v127 = *(unsigned __int8 *)(v125 + 80);
  size_t v128 = ((v70 + v10) & v12) + v70 + v127;
  unint64_t v129 = (v128 + v13) & ~v127;
  size_t v130 = (v128 + v165) & ~v127;
  (*(void (**)(unint64_t, size_t))(v125 + 24))(v129, v130);
  uint64_t v131 = *(void *)(v126 + 40);
  uint64_t v132 = (unsigned char *)(v131 + v129);
  uint64_t v133 = (unsigned char *)(v131 + v130);
  *uint64_t v132 = *v133;
  v132[1] = v133[1];
  v132[2] = v133[2];
  unint64_t v134 = (unint64_t)(v132 + 10) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v135 = (unint64_t)(v133 + 10) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v136 = *(void *)v135;
  LOBYTE(v130) = *(unsigned char *)(v135 + 8);
  sub_22EADDF00(*(void *)v135, v130);
  uint64_t v137 = *(void *)v134;
  char v138 = *(unsigned char *)(v134 + 8);
  *(void *)unint64_t v134 = v136;
  *(unsigned char *)(v134 + 8) = v130;
  sub_22EADDB08(v137, v138);
  return v5;
}

_OWORD *sub_22EBFF01C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = sub_22EE7F6E0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v105 = v7;
  uint64_t v106 = v6;
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = sub_22EE7F5D0();
  uint64_t v95 = *(void *)(v9 - 8);
  uint64_t v96 = v9;
  uint64_t v10 = *(unsigned __int8 *)(v95 + 80);
  uint64_t v11 = v8 | v10 | 7;
  int v104 = a1;
  unint64_t v12 = (unint64_t)a1 + v11 + 32;
  uint64_t v13 = (_OWORD *)(v12 & ~v11);
  unint64_t v14 = (unint64_t)a2 + v11 + 32;
  uint64_t v15 = (unsigned __int8 *)(v14 & ~v11);
  uint64_t v16 = v8 + 16;
  uint64_t v17 = *(void *)(v7 + 64);
  uint64_t v99 = v11 + v17;
  uint64_t v18 = (v11 + v17 + ((v8 + 16) & ~v8)) & ~v11;
  uint64_t v93 = v10 + 16;
  uint64_t v94 = *(void *)(v95 + 64) + v8;
  uint64_t v19 = v17 + 7;
  unint64_t v20 = (v17 + 7 + ((v94 + ((v10 + 16) & ~v10)) & ~v8)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = v20 + 8;
  unint64_t v22 = v20 + 9;
  unint64_t v89 = v21;
  if (v22 <= v21) {
    unint64_t v22 = v21;
  }
  if (v22 <= 2) {
    uint64_t v23 = 2;
  }
  else {
    uint64_t v23 = v22;
  }
  if (v23 + v18 + 1 > (v19 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v24 = v23 + v18 + 1;
  }
  else {
    unint64_t v24 = (v19 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v24 <= 0x10) {
    uint64_t v25 = 16;
  }
  else {
    uint64_t v25 = v24;
  }
  unsigned int v26 = v15[v25];
  unsigned int v27 = v26 - 3;
  if (v26 >= 3)
  {
    if (v25 <= 3) {
      uint64_t v28 = v25;
    }
    else {
      uint64_t v28 = 4;
    }
    switch(v28)
    {
      case 1:
        int v29 = *v15;
        goto LABEL_21;
      case 2:
        int v29 = *(unsigned __int16 *)v15;
        goto LABEL_21;
      case 3:
        int v29 = *(unsigned __int16 *)v15 | (*(unsigned __int8 *)((v14 & ~v11) + 2) << 16);
        goto LABEL_21;
      case 4:
        int v29 = *(_DWORD *)v15;
LABEL_21:
        int v30 = (v29 | (v27 << (8 * v25))) + 3;
        unsigned int v26 = v29 + 3;
        if (v25 < 4) {
          unsigned int v26 = v30;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v31 = ~v11;
  uint64_t v102 = ~v8;
  uint64_t v92 = ~v10;
  uint64_t v107 = v12 & ~v11;
  uint64_t v90 = v8 + 16;
  if (v26 == 2)
  {
    uint64_t v40 = v23;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 32))(v12 & ~v11, v14 & ~v11, v106);
    uint64_t v23 = v40;
    *(_OWORD *)(((unint64_t)v13 + v19) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v15[v19] & 0xFFFFFFFFFFFFFFF8);
    char v41 = 2;
  }
  else if (v26 == 1)
  {
    *uint64_t v13 = *(_OWORD *)v15;
    unint64_t v32 = ((unint64_t)v13 + v16) & v102;
    unint64_t v33 = (unint64_t)&v15[v16] & v102;
    uint64_t v97 = v23;
    unsigned int v88 = *(void (**)(void))(v105 + 32);
    ((void (*)(unint64_t, unint64_t, uint64_t))v88)(v32, v33, v106);
    uint64_t v23 = v97;
    uint64_t v34 = (unsigned char *)((v99 + v32) & v31);
    unint64_t v35 = (unsigned __int8 *)((v99 + v33) & v31);
    unsigned int v36 = v35[v97];
    unsigned int v37 = v36 - 4;
    if (v36 >= 4)
    {
      if (v97 <= 3) {
        uint64_t v38 = v97;
      }
      else {
        uint64_t v38 = 4;
      }
      switch(v38)
      {
        case 1:
          int v39 = *v35;
          goto LABEL_36;
        case 2:
          int v39 = *(unsigned __int16 *)v35;
          goto LABEL_36;
        case 3:
          int v39 = *(unsigned __int16 *)v35 | (*(unsigned __int8 *)(((v99 + v33) & v31) + 2) << 16);
          goto LABEL_36;
        case 4:
          int v39 = *(_DWORD *)v35;
LABEL_36:
          int v42 = (v39 | (v37 << (8 * v97))) + 4;
          unsigned int v36 = v39 + 4;
          if (v97 < 4) {
            unsigned int v36 = v42;
          }
          break;
        default:
          break;
      }
    }
    switch(v36)
    {
      case 1u:
        *uint64_t v34 = *v35;
        char v43 = 1;
        break;
      case 2u:
        *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
        unint64_t v85 = (unint64_t)&v34[v93] & v92;
        uint64_t v86 = v34;
        (*(void (**)(void))(v95 + 32))();
        v88();
        uint64_t v34 = v86;
        uint64_t v23 = v97;
        *(void *)((v19 + ((v94 + v85) & v102)) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v19
                                                                                      + ((v94
                                                                                        + ((unint64_t)&v35[v93] & v92)) & v102)) & 0xFFFFFFFFFFFFFFF8);
        v86[v89] = v35[v89];
        char v43 = 2;
        break;
      case 3u:
        *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
        unint64_t v44 = (unint64_t)&v35[v93] & v92;
        unint64_t v45 = (unint64_t)&v34[v93] & v92;
        uint64_t v87 = v34;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v95 + 32))(v45, v44, v96);
        unint64_t v46 = (v94 + v45) & v102;
        unint64_t v47 = (v94 + v44) & v102;
        ((void (*)(unint64_t, unint64_t, uint64_t))v88)(v46, v47, v106);
        uint64_t v34 = v87;
        uint64_t v23 = v97;
        *(void *)((v19 + v46) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v19 + v47) & 0xFFFFFFFFFFFFFFF8);
        char v43 = 3;
        break;
      default:
        char v43 = 0;
        *(_WORD *)uint64_t v34 = *(_WORD *)v35;
        break;
    }
    uint64_t v13 = (_OWORD *)(v12 & ~v11);
    v34[v23] = v43;
    char v41 = 1;
  }
  else
  {
    char v41 = 0;
    *uint64_t v13 = *(_OWORD *)v15;
  }
  *((unsigned char *)v13 + v25) = v41;
  uint64_t v48 = v25 + 1;
  uint64_t v49 = (_OWORD *)(((v12 | v11) + v25 + 1) & v31);
  int v50 = (_OWORD *)(((v14 | v11) + v25 + 1) & v31);
  unsigned int v51 = *((unsigned __int8 *)v50 + v25);
  if (v51 > 2)
  {
    memcpy((void *)(((v12 | v11) + v25 + 1) & v31), v50, v25 + 1);
LABEL_56:
    uint64_t v61 = a3;
    uint64_t v62 = v104;
    goto LABEL_57;
  }
  if (v51 == 2)
  {
    (*(void (**)(unint64_t, _OWORD *, uint64_t))(v105 + 32))(((v12 | v11) + v25 + 1) & v31, v50, v106);
    *(_OWORD *)(((unint64_t)v49 + v19) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v50 + v19) & 0xFFFFFFFFFFFFFFF8);
    *((unsigned char *)v49 + v25) = 2;
    goto LABEL_56;
  }
  if (v51 != 1)
  {
    _OWORD *v49 = *v50;
    *((unsigned char *)v49 + v25) = 0;
    goto LABEL_56;
  }
  _OWORD *v49 = *v50;
  unint64_t v52 = ((unint64_t)v49 + v90) & v102;
  unint64_t v53 = ((unint64_t)v50 + v90) & v102;
  uint64_t v98 = v23;
  int v91 = *(void (**)(unint64_t, unint64_t, uint64_t))(v105 + 32);
  v91(v52, v53, v106);
  uint64_t v54 = v98;
  uint64_t v55 = (unsigned char *)((v99 + v52) & v31);
  unsigned int v56 = (unsigned __int8 *)((v99 + v53) & v31);
  unsigned int v57 = v56[v98];
  unsigned int v58 = v57 - 4;
  if (v57 >= 4)
  {
    if (v98 <= 3) {
      uint64_t v59 = v98;
    }
    else {
      uint64_t v59 = 4;
    }
    switch(v59)
    {
      case 1:
        int v60 = *v56;
        goto LABEL_61;
      case 2:
        int v60 = *(unsigned __int16 *)v56;
        goto LABEL_61;
      case 3:
        int v60 = *(unsigned __int16 *)v56 | (*(unsigned __int8 *)(((v99 + v53) & v31) + 2) << 16);
        goto LABEL_61;
      case 4:
        int v60 = *(_DWORD *)v56;
LABEL_61:
        int v77 = (v60 | (v58 << (8 * v98))) + 4;
        unsigned int v57 = v60 + 4;
        if (v98 < 4) {
          unsigned int v57 = v77;
        }
        break;
      default:
        break;
    }
  }
  switch(v57)
  {
    case 1u:
      *uint64_t v55 = *v56;
      char v78 = 1;
      break;
    case 2u:
      *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
      unint64_t v79 = (unint64_t)&v55[v93] & v92;
      uint64_t v100 = (unsigned char *)((v99 + v52) & v31);
      (*(void (**)(unint64_t))(v95 + 32))(v79);
      unint64_t v80 = (v94 + v79) & v102;
      unint64_t v81 = (v94 + ((unint64_t)&v56[v93] & v92)) & v102;
      v91(v80, v81, v106);
      uint64_t v54 = v98;
      uint64_t v55 = v100;
      *(void *)((v19 + v80) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v19 + v81) & 0xFFFFFFFFFFFFFFF8);
      v100[v89] = v56[v89];
      char v78 = 2;
      break;
    case 3u:
      *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
      unint64_t v82 = (unint64_t)&v55[v93] & v92;
      unint64_t v83 = (unint64_t)&v56[v93] & v92;
      int v101 = (unsigned char *)((v99 + v52) & v31);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v95 + 32))(v82, v83, v96);
      unint64_t v84 = (v94 + v82) & v102;
      v91(v84, (v94 + v83) & v102, v106);
      uint64_t v54 = v98;
      uint64_t v55 = v101;
      *(void *)((v19 + v84) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v19 + ((v94 + v83) & v102)) & 0xFFFFFFFFFFFFFFF8);
      char v78 = 3;
      break;
    default:
      char v78 = 0;
      *(_WORD *)uint64_t v55 = *(_WORD *)v56;
      break;
  }
  uint64_t v61 = a3;
  uint64_t v62 = v104;
  v55[v54] = v78;
  *((unsigned char *)v49 + v25) = 1;
LABEL_57:
  uint64_t v63 = (v48 + v11) & v31;
  uint64_t v64 = *(void *)(*(void *)(v61 + 16) - 8);
  uint64_t v65 = v64 + 32;
  uint64_t v66 = *(unsigned __int8 *)(v64 + 80);
  uint64_t v67 = v63 + v48 + v66;
  uint64_t v68 = (v67 + v107) & ~v66;
  unint64_t v69 = (unint64_t)&v15[v67] & ~v66;
  (*(void (**)(uint64_t, unint64_t))(v64 + 32))(v68, v69);
  uint64_t v70 = *(void *)(v65 + 32);
  unint64_t v71 = (unsigned char *)(v70 + v68);
  unint64_t v72 = (unsigned char *)(v70 + v69);
  *unint64_t v71 = *v72;
  v71[1] = v72[1];
  v71[2] = v72[2];
  unint64_t v73 = (unint64_t)(v71 + 10) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v74 = (unint64_t)(v72 + 10) & 0xFFFFFFFFFFFFFFF8;
  char v75 = *(unsigned char *)(v74 + 8);
  *(void *)unint64_t v73 = *(void *)v74;
  *(unsigned char *)(v73 + 8) = v75;
  return v62;
}

uint64_t sub_22EBFF908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v161 = sub_22EE7F6E0();
  uint64_t v7 = *(void *)(v161 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v148 = sub_22EE7F5D0();
  uint64_t v9 = *(void *)(v148 - 8);
  uint64_t v10 = v9;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = v8 | v11 | 7;
  uint64_t v13 = v12 + 32 + a1;
  uint64_t v14 = ~v12;
  uint64_t v15 = v13 & ~v12;
  uint64_t v16 = v12 + 32 + a2;
  uint64_t v17 = v16 & ~v12;
  uint64_t v159 = v17;
  uint64_t v162 = ~v12;
  uint64_t v160 = v7;
  uint64_t v156 = a3;
  if (v15 != v17)
  {
    uint64_t v149 = v8 + 16;
    uint64_t v18 = *(void *)(v7 + 64);
    uint64_t v19 = (v12 + ((v8 + 16) & ~v8) + v18) & v14;
    uint64_t v146 = v11 + 16;
    uint64_t v147 = *(void *)(v9 + 64) + v8;
    uint64_t v154 = v18;
    uint64_t v20 = v18 + 7;
    unint64_t v21 = (v20 + ((v147 + ((v11 + 16) & ~v11)) & ~v8)) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v22 = v21 + 8;
    unint64_t v23 = v21 + 9;
    unint64_t v143 = v22;
    uint64_t v144 = v20;
    if (v23 <= v22) {
      unint64_t v23 = v22;
    }
    if (v23 <= 2) {
      unint64_t v23 = 2;
    }
    unint64_t v158 = v23;
    unint64_t v24 = (v19 | 1) + v23;
    if (v24 <= (v20 & 0xFFFFFFFFFFFFFFF8) + 16) {
      unint64_t v24 = (v20 & 0xFFFFFFFFFFFFFFF8) + 16;
    }
    if (v24 <= 0x10) {
      uint64_t v25 = 16;
    }
    else {
      uint64_t v25 = v24;
    }
    unsigned int v26 = *(unsigned __int8 *)(v15 + v25);
    unsigned int v27 = v26 - 3;
    if (v26 >= 3)
    {
      if (v25 <= 3) {
        uint64_t v28 = v25;
      }
      else {
        uint64_t v28 = 4;
      }
      switch(v28)
      {
        case 1:
          int v29 = *(unsigned __int8 *)v15;
          goto LABEL_29;
        case 2:
          int v29 = *(unsigned __int16 *)v15;
          goto LABEL_29;
        case 3:
          int v29 = *(unsigned __int16 *)v15 | (*(unsigned __int8 *)((v13 & ~v12) + 2) << 16);
          goto LABEL_29;
        case 4:
          int v29 = *(_DWORD *)v15;
LABEL_29:
          if (v25 < 4) {
            unsigned int v26 = (v29 | (v27 << (8 * v25))) + 3;
          }
          else {
            unsigned int v26 = v29 + 3;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v157 = ~v8;
    uint64_t v145 = ~v11;
    uint64_t v152 = v10;
    if (v26 == 2)
    {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v13 & ~v12, v161);
    }
    else if (v26 == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
      v38((v149 + v15) & v157, v161);
      int v39 = (unsigned __int8 *)((((v149 + v15) & v157) + v12 + v154) & v162);
      unsigned int v40 = v39[v158];
      unsigned int v41 = v40 - 4;
      if (v40 < 4)
      {
        uint64_t v17 = v16 & ~v12;
      }
      else
      {
        if (v158 <= 3) {
          uint64_t v42 = v158;
        }
        else {
          uint64_t v42 = 4;
        }
        uint64_t v17 = v16 & ~v12;
        switch(v42)
        {
          case 1:
            int v43 = *v39;
            goto LABEL_46;
          case 2:
            int v43 = *(unsigned __int16 *)v39;
            goto LABEL_46;
          case 3:
            int v43 = *(unsigned __int16 *)v39 | (v39[2] << 16);
            goto LABEL_46;
          case 4:
            int v43 = *(_DWORD *)v39;
LABEL_46:
            if (v158 < 4) {
              unsigned int v40 = (v43 | (v41 << (8 * v158))) + 4;
            }
            else {
              unsigned int v40 = v43 + 4;
            }
            break;
          default:
            break;
        }
      }
      if (v40 >= 2)
      {
        if (v40 == 3)
        {
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v152 + 8))((unint64_t)&v39[v146] & v145, v148);
          uint64_t v17 = v16 & ~v12;
          v38((v147 + ((unint64_t)&v39[v146] & v145)) & v157, v161);
        }
        else
        {
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v152 + 8))((unint64_t)&v39[v146] & v145, v148);
          v38((v147 + ((unint64_t)&v39[v146] & v145)) & v157, v161);
          uint64_t v17 = v16 & ~v12;
        }
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    unsigned int v44 = *(unsigned __int8 *)(v17 + v25);
    unsigned int v45 = v44 - 3;
    if (v44 < 3)
    {
      uint64_t v47 = v160;
    }
    else
    {
      if (v25 <= 3) {
        uint64_t v46 = v25;
      }
      else {
        uint64_t v46 = 4;
      }
      uint64_t v47 = v160;
      switch(v46)
      {
        case 1:
          int v48 = *(unsigned __int8 *)v17;
          goto LABEL_63;
        case 2:
          int v48 = *(unsigned __int16 *)v17;
          goto LABEL_63;
        case 3:
          int v48 = *(unsigned __int16 *)v17 | (*(unsigned __int8 *)(v17 + 2) << 16);
          goto LABEL_63;
        case 4:
          int v48 = *(_DWORD *)v17;
LABEL_63:
          if (v25 < 4) {
            unsigned int v44 = (v48 | (v45 << (8 * v25))) + 3;
          }
          else {
            unsigned int v44 = v48 + 3;
          }
          break;
        default:
          break;
      }
    }
    if (v44 == 2)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 32))(v13 & ~v12, v17, v161);
      *(_OWORD *)(((v15 | 7) + v154) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((v17 | 7) + v154) & 0xFFFFFFFFFFFFFFF8);
      *(unsigned char *)(v15 + v25) = 2;
    }
    else
    {
      if (v44 == 1)
      {
        *(_OWORD *)uint64_t v15 = *(_OWORD *)v17;
        unint64_t v49 = (v149 + v17) & v157;
        uint64_t v141 = *(void (**)(uint64_t, unint64_t, uint64_t))(v47 + 32);
        v141((v149 + v15) & v157, v49, v161);
        int v50 = (unsigned char *)((((v149 + v15) & v157) + v12 + v154) & v162);
        unsigned int v51 = (unsigned __int8 *)((v49 + v12 + v154) & v162);
        unint64_t v52 = v158;
        unsigned int v53 = v51[v158];
        unsigned int v54 = v53 - 4;
        if (v53 >= 4)
        {
          if (v158 <= 3) {
            uint64_t v55 = v158;
          }
          else {
            uint64_t v55 = 4;
          }
          switch(v55)
          {
            case 1:
              int v56 = *v51;
              goto LABEL_80;
            case 2:
              int v56 = *(unsigned __int16 *)v51;
              goto LABEL_80;
            case 3:
              int v56 = *(unsigned __int16 *)v51 | (*(unsigned __int8 *)(((v49 + v12 + v154) & v162) + 2) << 16);
              goto LABEL_80;
            case 4:
              int v56 = *(_DWORD *)v51;
LABEL_80:
              if (v158 < 4) {
                unsigned int v53 = (v56 | (v54 << (8 * v158))) + 4;
              }
              else {
                unsigned int v53 = v56 + 4;
              }
              break;
            default:
              break;
          }
        }
        switch(v53)
        {
          case 1u:
            unsigned char *v50 = *v51;
            char v57 = 1;
            break;
          case 2u:
            *(_OWORD *)int v50 = *(_OWORD *)v51;
            unint64_t v58 = (unint64_t)&v50[v146] & v145;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v152 + 32))(v58, (unint64_t)&v51[v146] & v145, v148);
            unint64_t v59 = (v147 + v58) & v157;
            unint64_t v60 = (v147 + ((unint64_t)&v51[v146] & v145)) & v157;
            v141(v59, v60, v161);
            int v50 = (unsigned char *)((((v149 + v15) & v157) + v12 + v154) & v162);
            unint64_t v52 = v158;
            *(void *)((v144 + v59) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v144 + v60) & 0xFFFFFFFFFFFFFFF8);
            v50[v143] = v51[v143];
            char v57 = 2;
            break;
          case 3u:
            *(_OWORD *)int v50 = *(_OWORD *)v51;
            unint64_t v61 = (unint64_t)&v50[v146] & v145;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v152 + 32))(v61, (unint64_t)&v51[v146] & v145, v148);
            unint64_t v62 = (v147 + v61) & v157;
            unint64_t v63 = (v147 + ((unint64_t)&v51[v146] & v145)) & v157;
            v141(v62, v63, v161);
            int v50 = (unsigned char *)((((v149 + v15) & v157) + v12 + v154) & v162);
            unint64_t v52 = v158;
            *(void *)((v144 + v62) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v144 + v63) & 0xFFFFFFFFFFFFFFF8);
            char v57 = 3;
            break;
          default:
            char v57 = 0;
            *(_WORD *)int v50 = *(_WORD *)v51;
            break;
        }
        uint64_t v14 = ~v12;
        v50[v52] = v57;
        *(unsigned char *)(v15 + v25) = 1;
        goto LABEL_89;
      }
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v17;
      *(unsigned char *)(v15 + v25) = 0;
    }
    uint64_t v14 = ~v12;
LABEL_89:
    uint64_t v10 = v152;
    goto LABEL_90;
  }
  uint64_t v30 = *(void *)(v7 + 64);
  uint64_t v31 = *(void *)(v9 + 64);
  uint64_t v157 = ~v8;
  uint64_t v149 = v8 + 16;
  uint64_t v145 = ~v11;
  uint64_t v146 = v11 + 16;
  uint64_t v147 = v31 + v8;
  uint64_t v154 = v30;
  uint64_t v32 = v30 + 7;
  unint64_t v33 = (v30 + 7 + ((v31 + v8 + ((v11 + 16) & ~v11)) & ~v8)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = v33 + 8;
  unint64_t v35 = v33 + 9;
  unint64_t v143 = v34;
  uint64_t v144 = v30 + 7;
  if (v35 <= v34) {
    unint64_t v35 = v34;
  }
  uint64_t v36 = 2;
  if (v35 > 2) {
    uint64_t v36 = v35;
  }
  unint64_t v158 = v36;
  unint64_t v37 = ((v12 + ((v8 + 16) & ~v8) + v30) & v14 | 1) + v36;
  if (v37 <= (v32 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v37 = (v32 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v37 <= 0x10) {
    uint64_t v25 = 16;
  }
  else {
    uint64_t v25 = v37;
  }
LABEL_90:
  size_t v64 = v25 + 1;
  uint64_t v65 = (_OWORD *)(((v13 | v12) + v25 + 1) & v14);
  uint64_t v66 = (unsigned __int8 *)(((v16 | v12) + v25 + 1) & v14);
  unsigned int v67 = *((unsigned __int8 *)v65 + v25);
  unsigned int v68 = v66[v25];
  if (v67 > 2)
  {
    if (v68 <= 2)
    {
      if (v68 == 2)
      {
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v160 + 32))(((v13 | v12) + v25 + 1) & v14, v66, v161);
        uint64_t v14 = ~v12;
        *(_OWORD *)(((unint64_t)v65 + v144) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v66[v144] & 0xFFFFFFFFFFFFFFF8);
        char v94 = 2;
LABEL_186:
        *((unsigned char *)v65 + v25) = v94;
        goto LABEL_187;
      }
      if (v68 == 1)
      {
        uint64_t v75 = v10;
        *uint64_t v65 = *(_OWORD *)v66;
        unint64_t v76 = ((unint64_t)v65 + v149) & v157;
        unint64_t v77 = (unint64_t)&v66[v149] & v157;
        uint64_t v78 = v14;
        v150 = *(void (**)(unint64_t, unint64_t, uint64_t))(v160 + 32);
        v150(v76, v77, v161);
        unint64_t v79 = (unsigned char *)((v154 + v12 + v76) & v78);
        unint64_t v80 = (unsigned __int8 *)((v154 + v12 + v77) & v78);
        unsigned int v81 = v80[v158];
        unsigned int v82 = v81 - 4;
        if (v81 < 4)
        {
          uint64_t v84 = v75;
        }
        else
        {
          if (v158 <= 3) {
            uint64_t v83 = v158;
          }
          else {
            uint64_t v83 = 4;
          }
          uint64_t v84 = v75;
          switch(v83)
          {
            case 1:
              int v85 = *v80;
              goto LABEL_128;
            case 2:
              int v85 = *(unsigned __int16 *)v80;
              goto LABEL_128;
            case 3:
              int v85 = *(unsigned __int16 *)v80 | (v80[2] << 16);
              goto LABEL_128;
            case 4:
              int v85 = *(_DWORD *)v80;
LABEL_128:
              int v95 = (v85 | (v82 << (8 * v158))) + 4;
              unsigned int v81 = v85 + 4;
              if (v158 < 4) {
                unsigned int v81 = v95;
              }
              break;
            default:
              break;
          }
        }
        switch(v81)
        {
          case 1u:
            *unint64_t v79 = *v80;
            char v96 = 1;
            break;
          case 2u:
            *(_OWORD *)unint64_t v79 = *(_OWORD *)v80;
            unint64_t v97 = (unint64_t)&v79[v146] & v145;
            uint64_t v155 = v79;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v84 + 32))(v97, (unint64_t)&v80[v146] & v145, v148);
            unint64_t v98 = (v147 + v97) & v157;
            unint64_t v99 = (v147 + ((unint64_t)&v80[v146] & v145)) & v157;
            v150(v98, v99, v161);
            unint64_t v79 = v155;
            *(void *)((v144 + v98) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v144 + v99) & 0xFFFFFFFFFFFFFFF8);
            v155[v143] = v80[v143];
            char v96 = 2;
            break;
          case 3u:
            *(_OWORD *)unint64_t v79 = *(_OWORD *)v80;
            unint64_t v100 = (unint64_t)&v79[v146] & v145;
            unint64_t v101 = (unint64_t)&v80[v146] & v145;
            uint64_t v102 = v79;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v84 + 32))(v100, v101, v148);
            unint64_t v103 = (v147 + v100) & v157;
            v150(v103, (v147 + v101) & v157, v161);
            unint64_t v79 = v102;
            *(void *)((v144 + v103) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v144 + ((v147 + v101) & v157)) & 0xFFFFFFFFFFFFFFF8);
            char v96 = 3;
            break;
          default:
            char v96 = 0;
            *(_WORD *)unint64_t v79 = *(_WORD *)v80;
            break;
        }
        uint64_t v14 = ~v12;
        v79[v158] = v96;
        goto LABEL_185;
      }
      *uint64_t v65 = *(_OWORD *)v66;
      *((unsigned char *)v65 + v25) = 0;
      goto LABEL_187;
    }
LABEL_143:
    memcpy(v65, v66, v64);
LABEL_144:
    uint64_t v14 = ~v12;
    goto LABEL_187;
  }
  if (v68 > 2)
  {
    if (v67 == 2)
    {
      (*(void (**)(uint64_t, uint64_t))(v160 + 8))(((v13 | v12) + v25 + 1) & v14, v161);
    }
    else if (v67 == 1)
    {
      uint64_t v86 = v10;
      uint64_t v87 = v14;
      swift_bridgeObjectRelease();
      unsigned int v88 = *(void (**)(unint64_t, uint64_t))(v160 + 8);
      v88(((unint64_t)v65 + v149) & v157, v161);
      unint64_t v89 = (unsigned __int8 *)((v154 + v12 + (((unint64_t)v65 + v149) & v157)) & v87);
      unsigned int v90 = v89[v158];
      unsigned int v91 = v90 - 4;
      if (v90 >= 4)
      {
        if (v158 <= 3) {
          uint64_t v92 = v158;
        }
        else {
          uint64_t v92 = 4;
        }
        switch(v92)
        {
          case 1:
            int v93 = *v89;
            goto LABEL_139;
          case 2:
            int v93 = *(unsigned __int16 *)v89;
            goto LABEL_139;
          case 3:
            int v93 = *(unsigned __int16 *)v89 | (v89[2] << 16);
            goto LABEL_139;
          case 4:
            int v93 = *(_DWORD *)v89;
LABEL_139:
            int v104 = (v93 | (v91 << (8 * v158))) + 4;
            unsigned int v90 = v93 + 4;
            if (v158 < 4) {
              unsigned int v90 = v104;
            }
            break;
          default:
            break;
        }
      }
      if (v90 >= 2)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v86 + 8))((unint64_t)&v89[v146] & v145, v148);
        v88((v147 + ((unint64_t)&v89[v146] & v145)) & v157, v161);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    goto LABEL_143;
  }
  if (v65 != (_OWORD *)v66)
  {
    uint64_t v153 = v10;
    if (v67 == 2)
    {
      (*(void (**)(uint64_t, uint64_t))(v160 + 8))(((v13 | v12) + v25 + 1) & v14, v161);
    }
    else if (v67 == 1)
    {
      uint64_t v69 = v14;
      swift_bridgeObjectRelease();
      uint64_t v142 = *(void (**)(unint64_t, uint64_t))(v160 + 8);
      v142(((unint64_t)v65 + v149) & v157, v161);
      uint64_t v70 = (unsigned __int8 *)((v154 + v12 + (((unint64_t)v65 + v149) & v157)) & v69);
      unsigned int v71 = v70[v158];
      unsigned int v72 = v71 - 4;
      if (v71 >= 4)
      {
        if (v158 <= 3) {
          uint64_t v73 = v158;
        }
        else {
          uint64_t v73 = 4;
        }
        switch(v73)
        {
          case 1:
            int v74 = *v70;
            goto LABEL_148;
          case 2:
            int v74 = *(unsigned __int16 *)v70;
            goto LABEL_148;
          case 3:
            int v74 = *(unsigned __int16 *)v70 | (v70[2] << 16);
            goto LABEL_148;
          case 4:
            int v74 = *(_DWORD *)v70;
LABEL_148:
            int v105 = (v74 | (v72 << (8 * v158))) + 4;
            unsigned int v71 = v74 + 4;
            if (v158 < 4) {
              unsigned int v71 = v105;
            }
            break;
          default:
            break;
        }
      }
      if (v71 >= 2)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v153 + 8))((unint64_t)&v70[v146] & v145, v148);
        v142((v147 + ((unint64_t)&v70[v146] & v145)) & v157, v161);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    unsigned int v106 = v66[v25];
    unsigned int v107 = v106 - 3;
    if (v106 >= 3)
    {
      if (v25 <= 3) {
        uint64_t v108 = v25;
      }
      else {
        uint64_t v108 = 4;
      }
      switch(v108)
      {
        case 1:
          int v109 = *v66;
          goto LABEL_161;
        case 2:
          int v109 = *(unsigned __int16 *)v66;
          goto LABEL_161;
        case 3:
          int v109 = *(unsigned __int16 *)v66 | (v66[2] << 16);
          goto LABEL_161;
        case 4:
          int v109 = *(_DWORD *)v66;
LABEL_161:
          int v110 = (v109 | (v107 << (8 * v25))) + 3;
          unsigned int v106 = v109 + 3;
          if (v25 < 4) {
            unsigned int v106 = v110;
          }
          break;
        default:
          break;
      }
    }
    if (v106 == 2)
    {
      (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v160 + 32))(v65, v66, v161);
      *(_OWORD *)(((unint64_t)v65 + v144) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v66[v144] & 0xFFFFFFFFFFFFFFF8);
      *((unsigned char *)v65 + v25) = 2;
    }
    else
    {
      if (v106 == 1)
      {
        *uint64_t v65 = *(_OWORD *)v66;
        unint64_t v111 = ((unint64_t)v65 + v149) & v157;
        unint64_t v112 = (unint64_t)&v66[v149] & v157;
        v151 = *(void (**)(unint64_t, unint64_t, uint64_t))(v160 + 32);
        v151(v111, v112, v161);
        unint64_t v113 = (unsigned char *)((v154 + v12 + v111) & v162);
        unsigned int v114 = (unsigned __int8 *)((v154 + v12 + v112) & v162);
        unsigned int v115 = v114[v158];
        unsigned int v116 = v115 - 4;
        if (v115 < 4)
        {
          uint64_t v118 = v153;
        }
        else
        {
          if (v158 <= 3) {
            uint64_t v117 = v158;
          }
          else {
            uint64_t v117 = 4;
          }
          uint64_t v118 = v153;
          switch(v117)
          {
            case 1:
              int v119 = *v114;
              goto LABEL_177;
            case 2:
              int v119 = *(unsigned __int16 *)v114;
              goto LABEL_177;
            case 3:
              int v119 = *(unsigned __int16 *)v114 | (*(unsigned __int8 *)(((v154 + v12 + v112) & v162) + 2) << 16);
              goto LABEL_177;
            case 4:
              int v119 = *(_DWORD *)v114;
LABEL_177:
              int v120 = (v119 | (v116 << (8 * v158))) + 4;
              unsigned int v115 = v119 + 4;
              if (v158 < 4) {
                unsigned int v115 = v120;
              }
              break;
            default:
              break;
          }
        }
        switch(v115)
        {
          case 1u:
            *unint64_t v113 = *v114;
            char v121 = 1;
            break;
          case 2u:
            *(_OWORD *)unint64_t v113 = *(_OWORD *)v114;
            (*(void (**)(unint64_t))(v118 + 32))((unint64_t)&v113[v146] & v145);
            unint64_t v122 = (v147 + ((unint64_t)&v113[v146] & v145)) & v157;
            unint64_t v123 = (v147 + ((unint64_t)&v114[v146] & v145)) & v157;
            v151(v122, v123, v161);
            *(void *)((v144 + v122) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v144 + v123) & 0xFFFFFFFFFFFFFFF8);
            v113[v143] = v114[v143];
            char v121 = 2;
            break;
          case 3u:
            *(_OWORD *)unint64_t v113 = *(_OWORD *)v114;
            unint64_t v124 = (unint64_t)&v114[v146] & v145;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v118 + 32))((unint64_t)&v113[v146] & v145, v124, v148);
            unint64_t v125 = (v147 + ((unint64_t)&v113[v146] & v145)) & v157;
            v151(v125, (v147 + v124) & v157, v161);
            *(void *)((v144 + v125) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v144 + ((v147 + v124) & v157)) & 0xFFFFFFFFFFFFFFF8);
            char v121 = 3;
            break;
          default:
            char v121 = 0;
            *(_WORD *)unint64_t v113 = *(_WORD *)v114;
            break;
        }
        uint64_t v14 = ~v12;
        v113[v158] = v121;
LABEL_185:
        char v94 = 1;
        goto LABEL_186;
      }
      *uint64_t v65 = *(_OWORD *)v66;
      *((unsigned char *)v65 + v25) = 0;
    }
    goto LABEL_144;
  }
LABEL_187:
  uint64_t v126 = *(void *)(*(void *)(v156 + 16) - 8);
  uint64_t v127 = v126 + 40;
  uint64_t v128 = *(unsigned __int8 *)(v126 + 80);
  size_t v129 = ((v64 + v12) & v14) + v64 + v128;
  unint64_t v130 = (v129 + v15) & ~v128;
  size_t v131 = (v129 + v159) & ~v128;
  (*(void (**)(unint64_t, size_t))(v126 + 40))(v130, v131);
  uint64_t v132 = *(void *)(v127 + 24);
  uint64_t v133 = (unsigned char *)(v132 + v130);
  unint64_t v134 = (unsigned char *)(v132 + v131);
  *uint64_t v133 = *v134;
  v133[1] = v134[1];
  v133[2] = v134[2];
  unint64_t v135 = (unint64_t)(v133 + 10) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v136 = (unint64_t)(v134 + 10) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v137 = *(void *)v136;
  LOBYTE(v136) = *(unsigned char *)(v136 + 8);
  uint64_t v138 = *(void *)v135;
  char v139 = *(unsigned char *)(v135 + 8);
  *(void *)unint64_t v135 = v137;
  *(unsigned char *)(v135 + 8) = v136;
  sub_22EADDB08(v138, v139);
  return a1;
}

uint64_t sub_22EC00C1C(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(sub_22EE7F6E0() - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(void *)(sub_22EE7F5D0() - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v10 | v7;
  uint64_t v12 = v10 | v7 | 7;
  unint64_t v13 = (v8 + 7 + ((*(void *)(v9 + 64) + v7 + ((v10 + 16) & ~v10)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v14 = v13 + 8;
  unint64_t v15 = v13 + 9;
  if (v15 <= v14) {
    unint64_t v15 = v14;
  }
  if (v15 <= 2) {
    unint64_t v15 = 2;
  }
  unint64_t v16 = v15 + ((((v7 + 16) & ~v7) + v8 + v12) & ~v12);
  if (v16 + 1 > ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v17 = v16 + 1;
  }
  else {
    unint64_t v17 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v17 <= 0x10) {
    uint64_t v18 = 16;
  }
  else {
    uint64_t v18 = v17;
  }
  uint64_t v19 = *(void *)(a3 + 16);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(unsigned int *)(v20 + 84);
  if (v21 <= 0x7FFFFFFF) {
    unsigned int v22 = 0x7FFFFFFF;
  }
  else {
    unsigned int v22 = *(_DWORD *)(v20 + 84);
  }
  uint64_t v23 = *(unsigned __int8 *)(v20 + 80);
  uint64_t v24 = *(void *)(v20 + 64);
  if (!a2) {
    return 0;
  }
  uint64_t v25 = ((v18 + 1 + v12) & ~v12) + v18 + 1 + v23;
  if (v22 < a2)
  {
    unint64_t v26 = ((v24 + ((v25 + ((v11 + 32) & ~v12)) & ~v23) + 10) & 0xFFFFFFFFFFFFFFF8) + 9;
    if (v26 < 4) {
      unsigned int v27 = ((a2 - v22 + 255) >> (8 * v26)) + 1;
    }
    else {
      unsigned int v27 = 2;
    }
    if (v27 >= 0x10000) {
      unsigned int v28 = 4;
    }
    else {
      unsigned int v28 = 2;
    }
    if (v27 < 0x100) {
      unsigned int v28 = 1;
    }
    if (v27 >= 2) {
      uint64_t v29 = v28;
    }
    else {
      uint64_t v29 = 0;
    }
    switch(v29)
    {
      case 1:
        int v30 = a1[v26];
        if (!a1[v26]) {
          break;
        }
        goto LABEL_32;
      case 2:
        int v30 = *(unsigned __int16 *)&a1[v26];
        if (*(_WORD *)&a1[v26]) {
          goto LABEL_32;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x22EC00F0CLL);
      case 4:
        int v30 = *(_DWORD *)&a1[v26];
        if (!v30) {
          break;
        }
LABEL_32:
        int v32 = (v30 - 1) << (8 * v26);
        if (v26 >= 4) {
          int v32 = 0;
        }
        if (v26 == 1) {
          int v33 = *a1;
        }
        else {
          int v33 = *(_DWORD *)a1;
        }
        return v22 + (v33 | v32) + 1;
      default:
        break;
    }
  }
  if ((v21 & 0x80000000) != 0)
  {
    return __swift_getEnumTagSinglePayload((v25 + ((unint64_t)&a1[v12 + 32] & ~v12)) & ~v23, v21, v19);
  }
  else
  {
    unint64_t v34 = *((void *)a1 + 1);
    if (v34 >= 0xFFFFFFFF) {
      LODWORD(v34) = -1;
    }
    return (v34 + 1);
  }
}

void sub_22EC00F20(void *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(sub_22EE7F6E0() - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 64);
  uint64_t v11 = *(void *)(sub_22EE7F5D0() - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = v12 | v9;
  uint64_t v14 = v12 | v9 | 7;
  unint64_t v15 = (v10 + 7 + ((*(void *)(v11 + 64) + v9 + ((v12 + 16) & ~v12)) & ~v9)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = v15 + 8;
  unint64_t v17 = v15 + 9;
  if (v17 <= v16) {
    unint64_t v17 = v16;
  }
  if (v17 <= 2) {
    unint64_t v17 = 2;
  }
  unint64_t v18 = v17 + ((((v9 + 16) & ~v9) + v10 + v14) & ~v14);
  if (v18 + 1 > ((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v19 = v18 + 1;
  }
  else {
    unint64_t v19 = ((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v19 <= 0x10) {
    uint64_t v20 = 16;
  }
  else {
    uint64_t v20 = v19;
  }
  uint64_t v21 = *(void *)(a4 + 16);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(unsigned int *)(v22 + 84);
  if (v23 <= 0x7FFFFFFF) {
    unsigned int v24 = 0x7FFFFFFF;
  }
  else {
    unsigned int v24 = *(_DWORD *)(v22 + 84);
  }
  uint64_t v25 = v20 + 1;
  uint64_t v26 = (v20 + 1 + v14) & ~v14;
  uint64_t v27 = (v13 + 32) & ~v14;
  uint64_t v28 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v29 = v26 + v25 + v28;
  size_t v30 = ((*(void *)(v22 + 64) + ((v29 + v27) & ~v28) + 10) & 0xFFFFFFFFFFFFFFF8) + 9;
  char v31 = 8 * v30;
  if (v24 >= a3)
  {
    int v34 = 0;
  }
  else
  {
    if (v30 <= 3) {
      unsigned int v32 = ((a3 - v24 + 255) >> v31) + 1;
    }
    else {
      unsigned int v32 = 2;
    }
    if (v32 >= 0x10000) {
      int v33 = 4;
    }
    else {
      int v33 = 2;
    }
    if (v32 < 0x100) {
      int v33 = 1;
    }
    if (v32 >= 2) {
      int v34 = v33;
    }
    else {
      int v34 = 0;
    }
  }
  if (v24 < a2)
  {
    unsigned int v35 = ~v24 + a2;
    unsigned int v36 = v35 >> v31;
    unsigned int v37 = (~(_BYTE)v24 + a2);
    if (v30 < 4) {
      int v38 = v36 + 1;
    }
    else {
      int v38 = 1;
    }
    if (v30 >= 4) {
      unsigned int v39 = v35;
    }
    else {
      unsigned int v39 = v37;
    }
    bzero(a1, v30);
    if (v30 == 1) {
      *(unsigned char *)a1 = v39;
    }
    else {
      *(_DWORD *)a1 = v39;
    }
    switch(v34)
    {
      case 1:
        *((unsigned char *)a1 + v30) = v38;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v30) = v38;
        return;
      case 3:
        goto LABEL_56;
      case 4:
        *(_DWORD *)((char *)a1 + v30) = v38;
        return;
      default:
        return;
    }
  }
  switch(v34)
  {
    case 1:
      *((unsigned char *)a1 + v30) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_44;
    case 2:
      *(_WORD *)((char *)a1 + v30) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_44;
    case 3:
LABEL_56:
      __break(1u);
      JUMPOUT(0x22EC0127CLL);
    case 4:
      *(_DWORD *)((char *)a1 + v30) = 0;
      goto LABEL_43;
    default:
LABEL_43:
      if (a2)
      {
LABEL_44:
        if ((v23 & 0x80000000) != 0)
        {
          __swift_storeEnumTagSinglePayload((v29 + (((unint64_t)a1 + v14 + 32) & ~v14)) & ~v28, a2, v23, v21);
        }
        else if ((a2 & 0x80000000) != 0)
        {
          a1[2] = 0;
          a1[3] = 0;
          *a1 = a2 ^ 0x80000000;
          a1[1] = 0;
        }
        else
        {
          a1[1] = (a2 - 1);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for TopRowContent()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_22EC012BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_22EB41280(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_22EC01304(uint64_t a1)
{
  return sub_22EB19DB0(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t sub_22EC01314(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_22EB41280(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_22EB19DB0(v5, v6);
  return a1;
}

uint64_t sub_22EC01368(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_22EB19DB0(v5, v6);
  return a1;
}

uint64_t type metadata accessor for TopRowLayoutGuide()
{
  return __swift_instantiateGenericMetadata();
}

void *sub_22EC013C0(uint64_t a1, uint64_t *a2, int *a3)
{
  char v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    char v6 = a3;
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(void *)(a1 + 24) = a2[3];
    uint64_t v8 = a3[5];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = _s11PriceStringOMa(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v31 = sub_22EE7F6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 16))(v9, v10, v31);
      uint64_t v32 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)v9 + *(int *)(v32 + 20)) = *(_OWORD *)((char *)v10 + *(int *)(v32 + 20));
      goto LABEL_14;
    }
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v33 = v10[1];
      *uint64_t v9 = *v10;
      v9[1] = v33;
      swift_bridgeObjectRetain();
      goto LABEL_14;
    }
    uint64_t v86 = v6;
    uint64_t v90 = v11;
    uint64_t v13 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v13;
    uint64_t v14 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v15 = *(int *)(v14 + 20);
    unint64_t v89 = (char *)v9 + v15;
    unint64_t v16 = (char *)v10 + v15;
    uint64_t v17 = sub_22EE7F6E0();
    unint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
    swift_bridgeObjectRetain();
    v18(v89, v16, v17);
    uint64_t v19 = *(int *)(v14 + 24);
    uint64_t v20 = (char *)v9 + v19;
    uint64_t v21 = (char *)v10 + v19;
    uint64_t v22 = _s22LocalizedPriceResourceV6FormatOMa(0);
    int v23 = swift_getEnumCaseMultiPayload();
    if (v23 == 3)
    {
      uint64_t v34 = *((void *)v21 + 1);
      *(void *)uint64_t v20 = *(void *)v21;
      *((void *)v20 + 1) = v34;
      uint64_t v84 = v18;
      uint64_t v35 = v17;
      unsigned int v36 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v37 = v36[5];
      int v74 = &v21[v37];
      uint64_t v78 = &v20[v37];
      uint64_t v38 = sub_22EE7F5D0();
      unsigned int v72 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16);
      swift_bridgeObjectRetain();
      v72(v78, v74, v38);
      v84(&v20[v36[6]], &v21[v36[6]], v35);
      *(void *)&v20[v36[7]] = *(void *)&v21[v36[7]];
    }
    else
    {
      if (v23 != 2)
      {
        memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
        goto LABEL_13;
      }
      uint64_t v24 = *((void *)v21 + 1);
      *(void *)uint64_t v20 = *(void *)v21;
      *((void *)v20 + 1) = v24;
      uint64_t v83 = v18;
      uint64_t v25 = v17;
      uint64_t v26 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v27 = v26[5];
      uint64_t v73 = &v21[v27];
      unint64_t v77 = &v20[v27];
      uint64_t v28 = sub_22EE7F5D0();
      unsigned int v71 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
      swift_bridgeObjectRetain();
      v71(v77, v73, v28);
      v83(&v20[v26[6]], &v21[v26[6]], v25);
      *(void *)&v20[v26[7]] = *(void *)&v21[v26[7]];
      uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
      v20[*(int *)(v29 + 48)] = v21[*(int *)(v29 + 48)];
    }
    swift_storeEnumTagMultiPayload();
LABEL_13:
    uint64_t v11 = v90;
    char v6 = v86;
LABEL_14:
    swift_storeEnumTagMultiPayload();
    uint64_t v39 = *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
    unsigned int v40 = (void *)((char *)v9 + v39);
    unsigned int v41 = (void *)((char *)v10 + v39);
    if (__swift_getEnumTagSinglePayload((uint64_t)v10 + v39, 1, v11))
    {
      uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F8);
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
LABEL_28:
      uint64_t v69 = v6[7];
      *((unsigned char *)v4 + v6[6]) = *((unsigned char *)a2 + v6[6]);
      *((unsigned char *)v4 + v69) = *((unsigned char *)a2 + v69);
      *((unsigned char *)v4 + v6[8]) = *((unsigned char *)a2 + v6[8]);
      return v4;
    }
    int v43 = swift_getEnumCaseMultiPayload();
    if (v43 == 2)
    {
      uint64_t v62 = sub_22EE7F6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v62 - 8) + 16))(v40, v41, v62);
      uint64_t v63 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)v40 + *(int *)(v63 + 20)) = *(_OWORD *)((char *)v41 + *(int *)(v63 + 20));
    }
    else
    {
      if (v43 == 1)
      {
        uint64_t v91 = v11;
        uint64_t v44 = v41[1];
        *unsigned int v40 = *v41;
        v40[1] = v44;
        uint64_t v45 = _s22LocalizedPriceResourceVMa(0);
        uint64_t v46 = *(int *)(v45 + 20);
        int v85 = (char *)v41 + v46;
        uint64_t v87 = (char *)v40 + v46;
        uint64_t v47 = sub_22EE7F6E0();
        int v48 = *(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16);
        swift_bridgeObjectRetain();
        unint64_t v49 = v87;
        uint64_t v88 = v47;
        uint64_t v50 = v47;
        unsigned int v51 = v48;
        v48(v49, v85, v50);
        uint64_t v52 = *(int *)(v45 + 24);
        unsigned int v53 = (char *)v40 + v52;
        unsigned int v54 = (char *)v41 + v52;
        uint64_t v55 = _s22LocalizedPriceResourceV6FormatOMa(0);
        int v56 = swift_getEnumCaseMultiPayload();
        if (v56 == 3)
        {
          uint64_t v65 = *((void *)v54 + 1);
          *(void *)unsigned int v53 = *(void *)v54;
          *((void *)v53 + 1) = v65;
          uint64_t v66 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v67 = v66[5];
          unint64_t v80 = &v54[v67];
          unsigned int v82 = &v53[v67];
          uint64_t v68 = sub_22EE7F5D0();
          unint64_t v76 = *(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16);
          swift_bridgeObjectRetain();
          v76(v82, v80, v68);
          v51(&v53[v66[6]], &v54[v66[6]], v88);
          *(void *)&v53[v66[7]] = *(void *)&v54[v66[7]];
        }
        else
        {
          if (v56 != 2)
          {
            memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
            goto LABEL_26;
          }
          uint64_t v57 = *((void *)v54 + 1);
          *(void *)unsigned int v53 = *(void *)v54;
          *((void *)v53 + 1) = v57;
          unint64_t v58 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v59 = v58[5];
          unint64_t v79 = &v54[v59];
          unsigned int v81 = &v53[v59];
          uint64_t v60 = sub_22EE7F5D0();
          uint64_t v75 = *(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16);
          swift_bridgeObjectRetain();
          v75(v81, v79, v60);
          v51(&v53[v58[6]], &v54[v58[6]], v88);
          *(void *)&v53[v58[7]] = *(void *)&v54[v58[7]];
          uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
          v53[*(int *)(v61 + 48)] = v54[*(int *)(v61 + 48)];
        }
        swift_storeEnumTagMultiPayload();
LABEL_26:
        uint64_t v11 = v91;
        goto LABEL_27;
      }
      uint64_t v64 = v41[1];
      *unsigned int v40 = *v41;
      v40[1] = v64;
      swift_bridgeObjectRetain();
    }
LABEL_27:
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v40, 0, 1, v11);
    goto LABEL_28;
  }
  uint64_t v30 = *a2;
  *char v4 = *a2;
  char v4 = (void *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return v4;
}

uint64_t sub_22EC01AFC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = _s11PriceStringOMa(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v16 = sub_22EE7F6E0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v4, v16);
      break;
    case 1:
      swift_bridgeObjectRelease();
      uint64_t v7 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v8 = v4 + *(int *)(v7 + 20);
      uint64_t v9 = sub_22EE7F6E0();
      uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
      v10(v8, v9);
      uint64_t v11 = v4 + *(int *)(v7 + 24);
      _s22LocalizedPriceResourceV6FormatOMa(0);
      int v12 = swift_getEnumCaseMultiPayload();
      if (v12 == 3 || v12 == 2)
      {
        swift_bridgeObjectRelease();
        uint64_t v13 = _s15PricePropertiesVMa(0);
        uint64_t v14 = v11 + *(int *)(v13 + 20);
        uint64_t v15 = sub_22EE7F5D0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
        v10(v11 + *(int *)(v13 + 24), v9);
      }
      break;
    case 0:
      swift_bridgeObjectRelease();
      break;
  }
  uint64_t v17 = v4 + *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
  uint64_t result = __swift_getEnumTagSinglePayload(v17, 1, v5);
  if (!result)
  {
    uint64_t result = swift_getEnumCaseMultiPayload();
    switch(result)
    {
      case 2:
        uint64_t v29 = sub_22EE7F6E0();
        uint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8);
        uint64_t v27 = v29;
        uint64_t v26 = v17;
        break;
      case 1:
        swift_bridgeObjectRelease();
        uint64_t v19 = _s22LocalizedPriceResourceVMa(0);
        uint64_t v20 = v17 + *(int *)(v19 + 20);
        uint64_t v21 = sub_22EE7F6E0();
        uint64_t v30 = *(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8);
        v30(v20, v21);
        uint64_t v22 = v17 + *(int *)(v19 + 24);
        _s22LocalizedPriceResourceV6FormatOMa(0);
        uint64_t result = swift_getEnumCaseMultiPayload();
        if (result != 3 && result != 2) {
          return result;
        }
        swift_bridgeObjectRelease();
        uint64_t v23 = _s15PricePropertiesVMa(0);
        uint64_t v24 = v22 + *(int *)(v23 + 20);
        uint64_t v25 = sub_22EE7F5D0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
        uint64_t v26 = v22 + *(int *)(v23 + 24);
        uint64_t v27 = v21;
        uint64_t v28 = (uint64_t (*)(uint64_t, uint64_t))v30;
        break;
      case 0:
        return swift_bridgeObjectRelease();
      default:
        return result;
    }
    return v28(v26, v27);
  }
  return result;
}

uint64_t sub_22EC01E80(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = _s11PriceStringOMa(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v30 = sub_22EE7F6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(v8, v9, v30);
    uint64_t v31 = _s20LocalizationResourceVMa();
    *(_OWORD *)((char *)v8 + *(int *)(v31 + 20)) = *(_OWORD *)((char *)v9 + *(int *)(v31 + 20));
    goto LABEL_12;
  }
  if (EnumCaseMultiPayload != 1)
  {
    uint64_t v32 = v9[1];
    *uint64_t v8 = *v9;
    v8[1] = v32;
    swift_bridgeObjectRetain();
    goto LABEL_12;
  }
  uint64_t v84 = v4;
  uint64_t v88 = v10;
  unint64_t v89 = v3;
  uint64_t v12 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v12;
  uint64_t v13 = _s22LocalizedPriceResourceVMa(0);
  uint64_t v14 = *(int *)(v13 + 20);
  uint64_t v15 = (char *)v8 + v14;
  uint64_t v16 = (char *)v9 + v14;
  uint64_t v17 = sub_22EE7F6E0();
  unint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
  swift_bridgeObjectRetain();
  v18(v15, v16, v17);
  uint64_t v19 = *(int *)(v13 + 24);
  uint64_t v20 = (char *)v8 + v19;
  uint64_t v21 = (char *)v9 + v19;
  uint64_t v22 = _s22LocalizedPriceResourceV6FormatOMa(0);
  int v23 = swift_getEnumCaseMultiPayload();
  if (v23 == 3)
  {
    uint64_t v33 = *((void *)v21 + 1);
    *(void *)uint64_t v20 = *(void *)v21;
    *((void *)v20 + 1) = v33;
    unsigned int v81 = v18;
    uint64_t v34 = v17;
    uint64_t v35 = (int *)_s15PricePropertiesVMa(0);
    uint64_t v36 = v35[5];
    uint64_t v73 = &v21[v36];
    unint64_t v77 = &v20[v36];
    uint64_t v37 = sub_22EE7F5D0();
    unsigned int v71 = *(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16);
    swift_bridgeObjectRetain();
    v71(v77, v73, v37);
    v81(&v20[v35[6]], &v21[v35[6]], v34);
    *(void *)&v20[v35[7]] = *(void *)&v21[v35[7]];
  }
  else
  {
    if (v23 != 2)
    {
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
      goto LABEL_11;
    }
    uint64_t v24 = *((void *)v21 + 1);
    *(void *)uint64_t v20 = *(void *)v21;
    *((void *)v20 + 1) = v24;
    unint64_t v80 = v18;
    uint64_t v25 = v17;
    uint64_t v26 = (int *)_s15PricePropertiesVMa(0);
    uint64_t v27 = v26[5];
    unsigned int v72 = &v21[v27];
    unint64_t v76 = &v20[v27];
    uint64_t v28 = sub_22EE7F5D0();
    uint64_t v70 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
    swift_bridgeObjectRetain();
    v70(v76, v72, v28);
    v80(&v20[v26[6]], &v21[v26[6]], v25);
    *(void *)&v20[v26[7]] = *(void *)&v21[v26[7]];
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
    v20[*(int *)(v29 + 48)] = v21[*(int *)(v29 + 48)];
  }
  swift_storeEnumTagMultiPayload();
LABEL_11:
  uint64_t v10 = v88;
  uint64_t v3 = v89;
  uint64_t v4 = v84;
LABEL_12:
  swift_storeEnumTagMultiPayload();
  uint64_t v38 = *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
  uint64_t v39 = (void *)((char *)v8 + v38);
  unsigned int v40 = (void *)((char *)v9 + v38);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v9 + v38, 1, v10))
  {
    int v42 = swift_getEnumCaseMultiPayload();
    if (v42 == 2)
    {
      uint64_t v61 = sub_22EE7F6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v61 - 8) + 16))(v39, v40, v61);
      uint64_t v62 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)v39 + *(int *)(v62 + 20)) = *(_OWORD *)((char *)v40 + *(int *)(v62 + 20));
    }
    else
    {
      if (v42 == 1)
      {
        uint64_t v90 = v3;
        uint64_t v43 = v40[1];
        *uint64_t v39 = *v40;
        v39[1] = v43;
        uint64_t v44 = _s22LocalizedPriceResourceVMa(0);
        uint64_t v45 = *(int *)(v44 + 20);
        int v85 = (char *)v40 + v45;
        uint64_t v86 = (char *)v39 + v45;
        uint64_t v46 = sub_22EE7F6E0();
        uint64_t v47 = *(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16);
        swift_bridgeObjectRetain();
        int v48 = v86;
        uint64_t v87 = v46;
        uint64_t v49 = v46;
        uint64_t v50 = v47;
        v47(v48, v85, v49);
        uint64_t v51 = *(int *)(v44 + 24);
        uint64_t v52 = (char *)v39 + v51;
        unsigned int v53 = (char *)v40 + v51;
        uint64_t v54 = _s22LocalizedPriceResourceV6FormatOMa(0);
        int v55 = swift_getEnumCaseMultiPayload();
        if (v55 == 3)
        {
          uint64_t v64 = *((void *)v53 + 1);
          *(void *)uint64_t v52 = *(void *)v53;
          *((void *)v52 + 1) = v64;
          uint64_t v65 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v66 = v65[5];
          unint64_t v79 = &v53[v66];
          uint64_t v83 = &v52[v66];
          uint64_t v67 = sub_22EE7F5D0();
          uint64_t v75 = *(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16);
          swift_bridgeObjectRetain();
          v75(v83, v79, v67);
          v50(&v52[v65[6]], &v53[v65[6]], v87);
          *(void *)&v52[v65[7]] = *(void *)&v53[v65[7]];
        }
        else
        {
          if (v55 != 2)
          {
            memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
            goto LABEL_24;
          }
          uint64_t v56 = *((void *)v53 + 1);
          *(void *)uint64_t v52 = *(void *)v53;
          *((void *)v52 + 1) = v56;
          uint64_t v57 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v58 = v57[5];
          uint64_t v78 = &v53[v58];
          unsigned int v82 = &v52[v58];
          uint64_t v59 = sub_22EE7F5D0();
          int v74 = *(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16);
          swift_bridgeObjectRetain();
          v74(v82, v78, v59);
          v50(&v52[v57[6]], &v53[v57[6]], v87);
          *(void *)&v52[v57[7]] = *(void *)&v53[v57[7]];
          uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
          v52[*(int *)(v60 + 48)] = v53[*(int *)(v60 + 48)];
        }
        swift_storeEnumTagMultiPayload();
LABEL_24:
        uint64_t v3 = v90;
        goto LABEL_25;
      }
      uint64_t v63 = v40[1];
      *uint64_t v39 = *v40;
      v39[1] = v63;
      swift_bridgeObjectRetain();
    }
LABEL_25:
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v39, 0, 1, v10);
    goto LABEL_26;
  }
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F8);
  memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
LABEL_26:
  uint64_t v68 = v3[7];
  *(unsigned char *)(a1 + v3[6]) = *(unsigned char *)(v4 + v3[6]);
  *(unsigned char *)(a1 + v68) = *(unsigned char *)(v4 + v68);
  *(unsigned char *)(a1 + v3[8]) = *(unsigned char *)(v4 + v3[8]);
  return a1;
}

uint64_t sub_22EC02560(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  if (a1 != a2)
  {
    sub_22EC0304C(a1 + v6, (void (*)(void))_s11PriceStringOMa);
    _s11PriceStringOMa(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v27 = sub_22EE7F6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v7, v8, v27);
      uint64_t v28 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)v7 + *(int *)(v28 + 20)) = *(_OWORD *)((char *)v8 + *(int *)(v28 + 20));
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        int v109 = a3;
        *uint64_t v7 = *v8;
        v7[1] = v8[1];
        uint64_t v10 = _s22LocalizedPriceResourceVMa(0);
        uint64_t v11 = *(int *)(v10 + 20);
        uint64_t v12 = (char *)v7 + v11;
        int v105 = (char *)v8 + v11;
        uint64_t v13 = sub_22EE7F6E0();
        uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v15 = v105;
        uint64_t v106 = v13;
        uint64_t v16 = v13;
        uint64_t v17 = v14;
        v14(v12, v15, v16);
        uint64_t v18 = *(int *)(v10 + 24);
        uint64_t v19 = (char *)v7 + v18;
        uint64_t v20 = (char *)v8 + v18;
        uint64_t v21 = _s22LocalizedPriceResourceV6FormatOMa(0);
        int v22 = swift_getEnumCaseMultiPayload();
        if (v22 == 3)
        {
          *(void *)uint64_t v19 = *(void *)v20;
          *((void *)v19 + 1) = *((void *)v20 + 1);
          uint64_t v29 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v30 = v29[5];
          uint64_t v86 = &v20[v30];
          uint64_t v90 = &v19[v30];
          uint64_t v31 = sub_22EE7F5D0();
          uint64_t v84 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16);
          swift_bridgeObjectRetain();
          v84(v90, v86, v31);
          v17(&v19[v29[6]], &v20[v29[6]], v106);
          *(void *)&v19[v29[7]] = *(void *)&v20[v29[7]];
        }
        else
        {
          if (v22 != 2)
          {
            memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
            goto LABEL_12;
          }
          *(void *)uint64_t v19 = *(void *)v20;
          *((void *)v19 + 1) = *((void *)v20 + 1);
          int v23 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v24 = v23[5];
          int v85 = &v20[v24];
          unint64_t v89 = &v19[v24];
          uint64_t v25 = sub_22EE7F5D0();
          uint64_t v83 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
          swift_bridgeObjectRetain();
          v83(v89, v85, v25);
          v17(&v19[v23[6]], &v20[v23[6]], v106);
          *(void *)&v19[v23[7]] = *(void *)&v20[v23[7]];
          uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
          v19[*(int *)(v26 + 48)] = v20[*(int *)(v26 + 48)];
        }
        swift_storeEnumTagMultiPayload();
LABEL_12:
        a3 = v109;
        goto LABEL_13;
      }
      *uint64_t v7 = *v8;
      v7[1] = v8[1];
      swift_bridgeObjectRetain();
    }
LABEL_13:
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v32 = *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
  uint64_t v33 = (void *)((char *)v7 + v32);
  uint64_t v34 = (void *)((char *)v8 + v32);
  uint64_t v35 = _s11PriceStringOMa(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v33, 1, v35);
  int v37 = __swift_getEnumTagSinglePayload((uint64_t)v34, 1, v35);
  if (EnumTagSinglePayload)
  {
    if (!v37)
    {
      int v38 = swift_getEnumCaseMultiPayload();
      if (v38 == 2)
      {
        uint64_t v71 = sub_22EE7F6E0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v71 - 8) + 16))(v33, v34, v71);
        uint64_t v72 = _s20LocalizationResourceVMa();
        *(_OWORD *)((char *)v33 + *(int *)(v72 + 20)) = *(_OWORD *)((char *)v34 + *(int *)(v72 + 20));
      }
      else
      {
        if (v38 == 1)
        {
          int v110 = a3;
          *uint64_t v33 = *v34;
          v33[1] = v34[1];
          uint64_t v39 = _s22LocalizedPriceResourceVMa(0);
          uint64_t v40 = *(int *)(v39 + 20);
          uint64_t v41 = (char *)v33 + v40;
          unsigned int v107 = (char *)v34 + v40;
          uint64_t v42 = sub_22EE7F6E0();
          uint64_t v43 = *(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16);
          uint64_t v44 = v42;
          swift_bridgeObjectRetain();
          v43(v41, v107, v44);
          uint64_t v45 = *(int *)(v39 + 24);
          uint64_t v46 = (char *)v33 + v45;
          uint64_t v47 = (char *)v34 + v45;
          uint64_t v48 = _s22LocalizedPriceResourceV6FormatOMa(0);
          int v49 = swift_getEnumCaseMultiPayload();
          if (v49 == 3)
          {
            *(void *)uint64_t v46 = *(void *)v47;
            *((void *)v46 + 1) = *((void *)v47 + 1);
            uint64_t v75 = v43;
            unint64_t v76 = (int *)_s15PricePropertiesVMa(0);
            uint64_t v77 = v76[5];
            int v93 = &v47[v77];
            unint64_t v97 = &v46[v77];
            uint64_t v102 = v44;
            uint64_t v78 = sub_22EE7F5D0();
            uint64_t v88 = *(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 16);
            swift_bridgeObjectRetain();
            v88(v97, v93, v78);
            v75(&v46[v76[6]], &v47[v76[6]], v102);
            *(void *)&v46[v76[7]] = *(void *)&v47[v76[7]];
          }
          else
          {
            if (v49 != 2)
            {
              memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
              goto LABEL_38;
            }
            *(void *)uint64_t v46 = *(void *)v47;
            *((void *)v46 + 1) = *((void *)v47 + 1);
            uint64_t v50 = v43;
            uint64_t v51 = (int *)_s15PricePropertiesVMa(0);
            uint64_t v52 = v51[5];
            uint64_t v91 = &v47[v52];
            int v95 = &v46[v52];
            uint64_t v101 = v44;
            uint64_t v53 = sub_22EE7F5D0();
            uint64_t v87 = *(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16);
            swift_bridgeObjectRetain();
            v87(v95, v91, v53);
            v50(&v46[v51[6]], &v47[v51[6]], v101);
            *(void *)&v46[v51[7]] = *(void *)&v47[v51[7]];
            uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
            v46[*(int *)(v54 + 48)] = v47[*(int *)(v54 + 48)];
          }
          swift_storeEnumTagMultiPayload();
LABEL_38:
          a3 = v110;
          goto LABEL_39;
        }
        *uint64_t v33 = *v34;
        v33[1] = v34[1];
        swift_bridgeObjectRetain();
      }
LABEL_39:
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v35);
      goto LABEL_40;
    }
    goto LABEL_23;
  }
  if (!v37)
  {
    if (a1 == a2) {
      goto LABEL_40;
    }
    sub_22EC0304C((uint64_t)v33, (void (*)(void))_s11PriceStringOMa);
    int v56 = swift_getEnumCaseMultiPayload();
    if (v56 == 2)
    {
      uint64_t v73 = sub_22EE7F6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v73 - 8) + 16))(v33, v34, v73);
      uint64_t v74 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)v33 + *(int *)(v74 + 20)) = *(_OWORD *)((char *)v34 + *(int *)(v74 + 20));
    }
    else
    {
      if (v56 == 1)
      {
        unint64_t v111 = a3;
        *uint64_t v33 = *v34;
        v33[1] = v34[1];
        uint64_t v57 = _s22LocalizedPriceResourceVMa(0);
        uint64_t v58 = *(int *)(v57 + 20);
        unint64_t v103 = (char *)v34 + v58;
        uint64_t v108 = (char *)v33 + v58;
        uint64_t v59 = sub_22EE7F6E0();
        uint64_t v60 = *(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v61 = v103;
        uint64_t v104 = v59;
        v60(v108, v61, v59);
        uint64_t v62 = *(int *)(v57 + 24);
        uint64_t v63 = (char *)v33 + v62;
        uint64_t v64 = (char *)v34 + v62;
        uint64_t v65 = _s22LocalizedPriceResourceV6FormatOMa(0);
        int v66 = swift_getEnumCaseMultiPayload();
        if (v66 == 3)
        {
          *(void *)uint64_t v63 = *(void *)v64;
          *((void *)v63 + 1) = *((void *)v64 + 1);
          unint64_t v80 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v81 = v80[5];
          unint64_t v98 = &v64[v81];
          unint64_t v100 = &v63[v81];
          uint64_t v82 = sub_22EE7F5D0();
          char v94 = *(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 16);
          swift_bridgeObjectRetain();
          v94(v100, v98, v82);
          v60(&v63[v80[6]], &v64[v80[6]], v104);
          *(void *)&v63[v80[7]] = *(void *)&v64[v80[7]];
        }
        else
        {
          if (v66 != 2)
          {
            memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
            goto LABEL_44;
          }
          *(void *)uint64_t v63 = *(void *)v64;
          *((void *)v63 + 1) = *((void *)v64 + 1);
          uint64_t v67 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v68 = v67[5];
          char v96 = &v64[v68];
          unint64_t v99 = &v63[v68];
          uint64_t v69 = sub_22EE7F5D0();
          uint64_t v92 = *(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16);
          swift_bridgeObjectRetain();
          v92(v99, v96, v69);
          v60(&v63[v67[6]], &v64[v67[6]], v104);
          *(void *)&v63[v67[7]] = *(void *)&v64[v67[7]];
          uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
          v63[*(int *)(v70 + 48)] = v64[*(int *)(v70 + 48)];
        }
        swift_storeEnumTagMultiPayload();
LABEL_44:
        swift_storeEnumTagMultiPayload();
        a3 = v111;
        goto LABEL_40;
      }
      *uint64_t v33 = *v34;
      v33[1] = v34[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_40;
  }
  sub_22EC0304C((uint64_t)v33, (void (*)(void))_s11PriceStringOMa);
LABEL_23:
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F8);
  memcpy(v33, v34, *(void *)(*(void *)(v55 - 8) + 64));
LABEL_40:
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_22EC0304C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_5_2();
  v3();
  return a1;
}

_OWORD *sub_22EC030A0(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v3 = a3;
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (_OWORD *)((char *)a1 + v7);
  uint64_t v9 = (_OWORD *)((char *)a2 + v7);
  uint64_t v10 = _s11PriceStringOMa(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 2)
  {
    if (EnumCaseMultiPayload != 1)
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
      goto LABEL_13;
    }
    uint64_t v68 = v10;
    uint64_t v69 = v3;
    *uint64_t v8 = *v9;
    uint64_t v12 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v13 = *(int *)(v12 + 20);
    uint64_t v14 = (char *)v8 + v13;
    uint64_t v15 = (char *)v9 + v13;
    uint64_t v16 = sub_22EE7F6E0();
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32);
    v17(v14, v15, v16);
    uint64_t v18 = *(int *)(v12 + 24);
    uint64_t v19 = (char *)v8 + v18;
    uint64_t v20 = (char *)v9 + v18;
    uint64_t v21 = _s22LocalizedPriceResourceV6FormatOMa(0);
    int v22 = swift_getEnumCaseMultiPayload();
    if (v22 == 3)
    {
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      uint64_t v29 = _s15PricePropertiesVMa(0);
      uint64_t v30 = *(int *)(v29 + 20);
      uint64_t v61 = &v19[v30];
      uint64_t v65 = v29;
      uint64_t v59 = &v20[v30];
      uint64_t v31 = sub_22EE7F5D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v61, v59, v31);
      v17(&v19[*(int *)(v65 + 24)], &v20[*(int *)(v65 + 24)], v16);
      *(void *)&v19[*(int *)(v65 + 28)] = *(void *)&v20[*(int *)(v65 + 28)];
    }
    else
    {
      uint64_t v64 = v16;
      if (v22 != 2)
      {
        memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
        goto LABEL_11;
      }
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      int v23 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v24 = v23[5];
      uint64_t v58 = &v20[v24];
      uint64_t v60 = &v19[v24];
      uint64_t v25 = sub_22EE7F5D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v60, v58, v25);
      v17(&v19[v23[6]], &v20[v23[6]], v64);
      *(void *)&v19[v23[7]] = *(void *)&v20[v23[7]];
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
      v19[*(int *)(v26 + 48)] = v20[*(int *)(v26 + 48)];
    }
    swift_storeEnumTagMultiPayload();
LABEL_11:
    uint64_t v10 = v68;
    uint64_t v3 = v69;
    goto LABEL_12;
  }
  uint64_t v27 = sub_22EE7F6E0();
  (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v27 - 8) + 32))(v8, v9, v27);
  uint64_t v28 = _s20LocalizationResourceVMa();
  *(_OWORD *)((char *)v8 + *(int *)(v28 + 20)) = *(_OWORD *)((char *)v9 + *(int *)(v28 + 20));
LABEL_12:
  swift_storeEnumTagMultiPayload();
LABEL_13:
  uint64_t v32 = *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
  uint64_t v33 = (_OWORD *)((char *)v8 + v32);
  uint64_t v34 = (_OWORD *)((char *)v9 + v32);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v9 + v32, 1, v10))
  {
    int v36 = swift_getEnumCaseMultiPayload();
    if (v36 == 2)
    {
      uint64_t v51 = sub_22EE7F6E0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v51 - 8) + 32))(v33, v34, v51);
      uint64_t v52 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)v33 + *(int *)(v52 + 20)) = *(_OWORD *)((char *)v34 + *(int *)(v52 + 20));
    }
    else
    {
      if (v36 != 1)
      {
        memcpy(v33, v34, *(void *)(*(void *)(v10 - 8) + 64));
LABEL_26:
        __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v10);
        goto LABEL_27;
      }
      *uint64_t v33 = *v34;
      uint64_t v37 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v38 = *(int *)(v37 + 20);
      uint64_t v39 = (char *)v33 + v38;
      uint64_t v40 = (char *)v34 + v38;
      uint64_t v41 = sub_22EE7F6E0();
      uint64_t v70 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32);
      v70(v39, v40, v41);
      uint64_t v42 = *(int *)(v37 + 24);
      uint64_t v43 = (char *)v33 + v42;
      uint64_t v44 = (char *)v34 + v42;
      uint64_t v45 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v46 = swift_getEnumCaseMultiPayload();
      if (v46 == 3)
      {
        *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
        uint64_t v53 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v54 = v53[5];
        uint64_t v63 = &v44[v54];
        uint64_t v67 = &v43[v54];
        uint64_t v55 = sub_22EE7F5D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v67, v63, v55);
        v70(&v43[v53[6]], &v44[v53[6]], v41);
        *(void *)&v43[v53[7]] = *(void *)&v44[v53[7]];
      }
      else
      {
        if (v46 != 2)
        {
          memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
          goto LABEL_25;
        }
        *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
        uint64_t v47 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v48 = v47[5];
        uint64_t v62 = &v44[v48];
        int v66 = &v43[v48];
        uint64_t v49 = sub_22EE7F5D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v66, v62, v49);
        v70(&v43[v47[6]], &v44[v47[6]], v41);
        *(void *)&v43[v47[7]] = *(void *)&v44[v47[7]];
        uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v43[*(int *)(v50 + 48)] = v44[*(int *)(v50 + 48)];
      }
      swift_storeEnumTagMultiPayload();
    }
LABEL_25:
    swift_storeEnumTagMultiPayload();
    goto LABEL_26;
  }
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F8);
  memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
LABEL_27:
  uint64_t v56 = v3[7];
  *((unsigned char *)a1 + v3[6]) = *((unsigned char *)a2 + v3[6]);
  *((unsigned char *)a1 + v56) = *((unsigned char *)a2 + v56);
  *((unsigned char *)a1 + v3[8]) = *((unsigned char *)a2 + v3[8]);
  return a1;
}

uint64_t sub_22EC03718(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  if (a1 != a2)
  {
    sub_22EC0304C(a1 + v7, (void (*)(void))_s11PriceStringOMa);
    uint64_t v10 = _s11PriceStringOMa(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v26 = sub_22EE7F6E0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v26 - 8) + 32))(v8, v9, v26);
      uint64_t v27 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)v8 + *(int *)(v27 + 20)) = *(_OWORD *)((char *)v9 + *(int *)(v27 + 20));
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
        goto LABEL_13;
      }
      *uint64_t v8 = *v9;
      uint64_t v12 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v13 = *(int *)(v12 + 20);
      uint64_t v14 = (char *)v8 + v13;
      uint64_t v15 = (char *)v9 + v13;
      uint64_t v16 = sub_22EE7F6E0();
      unint64_t v98 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32);
      v98(v14, v15, v16);
      uint64_t v17 = *(int *)(v12 + 24);
      uint64_t v18 = (char *)v8 + v17;
      uint64_t v19 = (char *)v9 + v17;
      uint64_t v20 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v21 = swift_getEnumCaseMultiPayload();
      if (v21 == 3)
      {
        *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
        uint64_t v28 = _s15PricePropertiesVMa(0);
        uint64_t v29 = *(int *)(v28 + 20);
        int v85 = &v18[v29];
        uint64_t v91 = v28;
        uint64_t v83 = &v19[v29];
        uint64_t v30 = sub_22EE7F5D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v85, v83, v30);
        v98(&v18[*(int *)(v91 + 24)], &v19[*(int *)(v91 + 24)], v16);
        *(void *)&v18[*(int *)(v91 + 28)] = *(void *)&v19[*(int *)(v91 + 28)];
      }
      else
      {
        if (v21 != 2)
        {
          memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
          goto LABEL_12;
        }
        *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
        uint64_t v22 = _s15PricePropertiesVMa(0);
        uint64_t v23 = *(int *)(v22 + 20);
        uint64_t v84 = v22;
        uint64_t v90 = &v18[v23];
        uint64_t v82 = &v19[v23];
        uint64_t v24 = sub_22EE7F5D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v90, v82, v24);
        v98(&v18[*(int *)(v84 + 24)], &v19[*(int *)(v84 + 24)], v16);
        *(void *)&v18[*(int *)(v84 + 28)] = *(void *)&v19[*(int *)(v84 + 28)];
        uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v18[*(int *)(v25 + 48)] = v19[*(int *)(v25 + 48)];
      }
      swift_storeEnumTagMultiPayload();
    }
LABEL_12:
    swift_storeEnumTagMultiPayload();
  }
LABEL_13:
  uint64_t v31 = *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
  uint64_t v32 = (_OWORD *)((char *)v8 + v31);
  uint64_t v33 = (_OWORD *)((char *)v9 + v31);
  uint64_t v34 = _s11PriceStringOMa(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v32, 1, v34);
  int v36 = __swift_getEnumTagSinglePayload((uint64_t)v33, 1, v34);
  if (EnumTagSinglePayload)
  {
    if (!v36)
    {
      int v37 = swift_getEnumCaseMultiPayload();
      if (v37 == 2)
      {
        uint64_t v70 = sub_22EE7F6E0();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v70 - 8) + 32))(v32, v33, v70);
        uint64_t v71 = _s20LocalizationResourceVMa();
        *(_OWORD *)((char *)v32 + *(int *)(v71 + 20)) = *(_OWORD *)((char *)v33 + *(int *)(v71 + 20));
      }
      else
      {
        if (v37 != 1)
        {
          memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
LABEL_38:
          __swift_storeEnumTagSinglePayload((uint64_t)v32, 0, 1, v34);
          goto LABEL_43;
        }
        *uint64_t v32 = *v33;
        uint64_t v38 = _s22LocalizedPriceResourceVMa(0);
        uint64_t v39 = *(int *)(v38 + 20);
        uint64_t v40 = (char *)v32 + v39;
        uint64_t v41 = (char *)v33 + v39;
        uint64_t v42 = sub_22EE7F6E0();
        uint64_t v43 = v41;
        uint64_t v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32);
        v44(v40, v43, v42);
        uint64_t v45 = *(int *)(v38 + 24);
        int v46 = (char *)v32 + v45;
        uint64_t v47 = (char *)v33 + v45;
        uint64_t v48 = _s22LocalizedPriceResourceV6FormatOMa(0);
        int v49 = swift_getEnumCaseMultiPayload();
        if (v49 == 3)
        {
          *(_OWORD *)int v46 = *(_OWORD *)v47;
          unint64_t v97 = v44;
          uint64_t v74 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v75 = v74[5];
          uint64_t v88 = &v47[v75];
          char v94 = &v46[v75];
          uint64_t v76 = sub_22EE7F5D0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 32))(v94, v88, v76);
          v97(&v46[v74[6]], &v47[v74[6]], v42);
          *(void *)&v46[v74[7]] = *(void *)&v47[v74[7]];
        }
        else
        {
          if (v49 != 2)
          {
            memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
            goto LABEL_37;
          }
          *(_OWORD *)int v46 = *(_OWORD *)v47;
          char v96 = v44;
          uint64_t v50 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v51 = v50[5];
          uint64_t v86 = &v47[v51];
          uint64_t v92 = &v46[v51];
          uint64_t v52 = sub_22EE7F5D0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v92, v86, v52);
          v96(&v46[v50[6]], &v47[v50[6]], v42);
          *(void *)&v46[v50[7]] = *(void *)&v47[v50[7]];
          uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
          v46[*(int *)(v53 + 48)] = v47[*(int *)(v53 + 48)];
        }
        swift_storeEnumTagMultiPayload();
      }
LABEL_37:
      swift_storeEnumTagMultiPayload();
      goto LABEL_38;
    }
    goto LABEL_22;
  }
  if (!v36)
  {
    if (a1 == a2) {
      goto LABEL_43;
    }
    sub_22EC0304C((uint64_t)v32, (void (*)(void))_s11PriceStringOMa);
    int v55 = swift_getEnumCaseMultiPayload();
    if (v55 == 2)
    {
      uint64_t v72 = sub_22EE7F6E0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v72 - 8) + 32))(v32, v33, v72);
      uint64_t v73 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)v32 + *(int *)(v73 + 20)) = *(_OWORD *)((char *)v33 + *(int *)(v73 + 20));
    }
    else
    {
      if (v55 != 1)
      {
        size_t v54 = *(void *)(*(void *)(v34 - 8) + 64);
        goto LABEL_23;
      }
      *uint64_t v32 = *v33;
      uint64_t v56 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v57 = *(int *)(v56 + 20);
      uint64_t v58 = (char *)v32 + v57;
      uint64_t v59 = (char *)v33 + v57;
      uint64_t v60 = sub_22EE7F6E0();
      unint64_t v99 = *(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32);
      v99(v58, v59, v60);
      uint64_t v61 = *(int *)(v56 + 24);
      uint64_t v62 = (char *)v32 + v61;
      uint64_t v63 = (char *)v33 + v61;
      uint64_t v64 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v65 = swift_getEnumCaseMultiPayload();
      if (v65 == 3)
      {
        *(_OWORD *)uint64_t v62 = *(_OWORD *)v63;
        uint64_t v77 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v78 = v77[5];
        unint64_t v89 = &v63[v78];
        int v95 = &v62[v78];
        uint64_t v79 = sub_22EE7F5D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 32))(v95, v89, v79);
        v99(&v62[v77[6]], &v63[v77[6]], v60);
        *(void *)&v62[v77[7]] = *(void *)&v63[v77[7]];
      }
      else
      {
        if (v65 != 2)
        {
          memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
          goto LABEL_42;
        }
        *(_OWORD *)uint64_t v62 = *(_OWORD *)v63;
        int v66 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v67 = v66[5];
        uint64_t v87 = &v63[v67];
        int v93 = &v62[v67];
        uint64_t v68 = sub_22EE7F5D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 32))(v93, v87, v68);
        v99(&v62[v66[6]], &v63[v66[6]], v60);
        *(void *)&v62[v66[7]] = *(void *)&v63[v66[7]];
        uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v62[*(int *)(v69 + 48)] = v63[*(int *)(v69 + 48)];
      }
      swift_storeEnumTagMultiPayload();
    }
LABEL_42:
    swift_storeEnumTagMultiPayload();
    goto LABEL_43;
  }
  sub_22EC0304C((uint64_t)v32, (void (*)(void))_s11PriceStringOMa);
LABEL_22:
  size_t v54 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F8) - 8) + 64);
LABEL_23:
  memcpy(v32, v33, v54);
LABEL_43:
  uint64_t v80 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v80) = *(unsigned char *)(a2 + v80);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_22EC04100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EC04114);
}

uint64_t sub_22EC04114(uint64_t a1, int a2)
{
  if (a2 == 0x7FFFFFFF) {
    return OUTLINED_FUNCTION_20_0(*(void *)(a1 + 8));
  }
  type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0);
  uint64_t v3 = OUTLINED_FUNCTION_12_14();

  return __swift_getEnumTagSinglePayload(v3, v4, v5);
}

uint64_t sub_22EC04184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EC04198);
}

uint64_t sub_22EC04198(uint64_t result, int a2, int a3)
{
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0);
    uint64_t v3 = OUTLINED_FUNCTION_10_14();
    return __swift_storeEnumTagSinglePayload(v3, v4, v5, v6);
  }
  return result;
}

uint64_t sub_22EC04208(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22EC0D5F8(a1, a2, a3, (uint64_t)" ", type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair);
}

uint64_t sub_22EC04234()
{
  return swift_getWitnessTable();
}

uint64_t sub_22EC04458()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EC0449C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EC044B8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EC044FC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EC04540()
{
  sub_22EB19DB0(*(void *)(v0 + 32), *(unsigned char *)(v0 + 40));

  return swift_deallocObject();
}

uint64_t sub_22EC0457C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22EBF86D8(a1, a2);
}

uint64_t type metadata accessor for PrimaryLabels()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_22EC045A4@<X0>(uint64_t a1@<X8>)
{
  return sub_22EBF7958(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_22EC045B0@<X0>(uint64_t a1@<X8>)
{
  return sub_22EBF7F7C(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_22EC045BC(uint64_t result, uint64_t a2, char a3)
{
  if (result != 2) {
    return j__swift_retain(a2, a3 & 1);
  }
  return result;
}

uint64_t sub_22EC045DC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  if (a5)
  {
    sub_22EADDF00(a3, a4 & 1);
    return swift_retain();
  }
  return result;
}

unint64_t sub_22EC04624()
{
  unint64_t result = qword_2686206E8;
  if (!qword_2686206E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686206F0);
    sub_22EC046A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686206E8);
  }
  return result;
}

unint64_t sub_22EC046A0()
{
  unint64_t result = qword_2686206F8;
  if (!qword_2686206F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686206F8);
  }
  return result;
}

unint64_t sub_22EC046EC(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_9_15(a1);
  if (!result)
  {
    uint64_t v5 = v4;
    __swift_instantiateConcreteTypeFromMangledNameAbstract(v3);
    v5();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_22EC04754()
{
  unint64_t result = qword_268620708;
  if (!qword_268620708)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620710);
    sub_22EC047F4();
    sub_22EBA3A30((uint64_t)&unk_268620760);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620708);
  }
  return result;
}

unint64_t sub_22EC047F4()
{
  unint64_t result = qword_268620718;
  if (!qword_268620718)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620720);
    sub_22EC04870();
    sub_22EC04934();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620718);
  }
  return result;
}

unint64_t sub_22EC04870()
{
  unint64_t result = qword_268620728;
  if (!qword_268620728)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620730);
    sub_22EBA3A30((uint64_t)&unk_268620738);
    sub_22EBA3A30((uint64_t)&unk_268620748);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620728);
  }
  return result;
}

unint64_t sub_22EC04934()
{
  unint64_t result = qword_268620758;
  if (!qword_268620758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620758);
  }
  return result;
}

uint64_t sub_22EC04980(uint64_t result, uint64_t a2, char a3)
{
  if (result != 2) {
    return j_j__swift_release(a2, a3 & 1);
  }
  return result;
}

uint64_t sub_22EC049A0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  if (a5)
  {
    sub_22EADDB08(a3, a4 & 1);
    return swift_release();
  }
  return result;
}

uint64_t sub_22EC049E8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22EC1D5E4();
  *a1 = result & 1;
  return result;
}

uint64_t sub_22EC04A18()
{
  return sub_22EC1D620();
}

uint64_t sub_22EC04A44(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  if (a3 != 2) {
    return j__swift_retain(a4, a5 & 1);
  }
  return result;
}

unint64_t sub_22EC04A60()
{
  unint64_t result = qword_268620770;
  if (!qword_268620770)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686206D0);
    sub_22EBA3A30((uint64_t)&unk_268620778);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620770);
  }
  return result;
}

uint64_t sub_22EC04AF8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  if (a3 != 2) {
    return j_j__swift_release(a4, a5 & 1);
  }
  return result;
}

uint64_t type metadata accessor for Fall2023TopRowContent.SecondaryLabel(uint64_t a1)
{
  return sub_22EAD01C0(a1, (uint64_t *)&unk_268620820);
}

uint64_t type metadata accessor for Sublabels.SublabelDivider()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for TertiaryContent(uint64_t a1)
{
  return sub_22EAD01C0(a1, (uint64_t *)&unk_268620838);
}

unint64_t sub_22EC04B6C()
{
  unint64_t result = qword_268620790;
  if (!qword_268620790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620790);
  }
  return result;
}

uint64_t sub_22EC04BB8()
{
  unint64_t v1 = (int *)(type metadata accessor for Sublabels() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  OUTLINED_FUNCTION_5_2();
  v3();
  swift_bridgeObjectRelease();
  sub_22EADDB08(*(void *)(v2 + v1[13]), *(unsigned char *)(v2 + v1[13] + 8));

  return swift_deallocObject();
}

uint64_t sub_22EC04CBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for Sublabels() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_22EBF94D4(a1, v6, a2);
}

uint64_t sub_22EC04D60(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_2_0();
  uint64_t v4 = OUTLINED_FUNCTION_17_0();
  v5(v4);
  return a2;
}

uint64_t sub_22EC04DB4()
{
  uint64_t result = type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_22EC04E94(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7F6E0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v113 = v7;
  uint64_t v114 = v6;
  int v8 = *(_DWORD *)(v7 + 80);
  unint64_t v9 = v8;
  uint64_t v10 = sub_22EE7F5D0();
  int v11 = *(_DWORD *)(*(void *)(v10 - 8) + 80);
  uint64_t v12 = v11;
  unint64_t v13 = v11 | (unint64_t)v8 | 7;
  uint64_t v110 = v8 + 16;
  uint64_t v14 = *(void *)(v7 + 64);
  uint64_t v15 = v13 + v14;
  uint64_t v16 = (v13 + v14 + ((v9 + 16) & ~v9)) & ~v13;
  uint64_t v17 = *(void *)(*(void *)(v10 - 8) + 64) + v8;
  uint64_t v18 = v14 + 7;
  unint64_t v19 = (v14 + 7 + ((v17 + ((v12 + 16) & ~v12)) & ~(unint64_t)v8)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = v19 + 8;
  unint64_t v21 = v19 + 9;
  if (v21 <= v20) {
    unint64_t v21 = v20;
  }
  if (v21 <= 2) {
    uint64_t v22 = 2;
  }
  else {
    uint64_t v22 = v21;
  }
  if (v22 + v16 + 1 > (v18 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v23 = v22 + v16 + 1;
  }
  else {
    unint64_t v23 = (v18 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v23 <= 0x10) {
    uint64_t v24 = 16;
  }
  else {
    uint64_t v24 = v23;
  }
  uint64_t v25 = *(void *)(a3 + 16);
  uint64_t v26 = *(void *)(v25 - 8);
  int v27 = *(_DWORD *)(v26 + 80);
  uint64_t v28 = v27;
  if ((v13 | v27) == 7 && ((v11 | v8 | v27) & 0x100000) == 0)
  {
    uint64_t v29 = v24 + 1;
    if (*(void *)(v26 + 64)
       + ((((v24 + 1 + v13) & ~v13) + v24 + 1 + v27 + (((v11 | v9) + 32) & ~v13)) & ~(unint64_t)v27)
       + 1 <= 0x18)
    {
      uint64_t v98 = v10;
      uint64_t v99 = v15;
      uint64_t v95 = v11 + 16;
      uint64_t v96 = v17;
      unint64_t v93 = v20;
      uint64_t v97 = *(void *)(v10 - 8);
      uint64_t v109 = v18;
      uint64_t v101 = v22;
      uint64_t v102 = *(void *)(v26 + 64);
      uint64_t v103 = ((v24 + 1 + v13) & ~v13) + v24 + 1 + v27;
      uint64_t v104 = *(void *)(*(void *)(a3 + 16) - 8);
      unint64_t v30 = ~v13;
      uint64_t v31 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v31;
      *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
      *(void *)(a1 + 24) = a2[3];
      uint64_t v105 = v25;
      uint64_t v106 = a1 + v13 + 32;
      unint64_t v112 = (void *)(v106 & ~v13);
      uint64_t v107 = (uint64_t)a2 + v13 + 32;
      unsigned int v115 = (unsigned __int8 *)(v107 & ~v13);
      unsigned int v32 = v115[v24];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v32 >= 3)
      {
        if (v24 <= 3) {
          uint64_t v33 = v24;
        }
        else {
          uint64_t v33 = 4;
        }
        switch(v33)
        {
          case 1:
            int v34 = *v115;
            goto LABEL_25;
          case 2:
            int v34 = *(unsigned __int16 *)v115;
            goto LABEL_25;
          case 3:
            int v34 = *(unsigned __int16 *)(v107 & ~v13) | (*(unsigned __int8 *)((v107 & ~v13) + 2) << 16);
            goto LABEL_25;
          case 4:
            int v34 = *(_DWORD *)v115;
LABEL_25:
            if (v24 < 4) {
              unsigned int v32 = (v34 | ((v32 - 3) << (8 * v24))) + 3;
            }
            else {
              unsigned int v32 = v34 + 3;
            }
            break;
          default:
            break;
        }
      }
      uint64_t v100 = ~v9;
      uint64_t v94 = ~v12;
      if (v32 == 2)
      {
        uint64_t v45 = (void *)(v106 & ~v13);
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v113 + 16))(v112, v115, v114);
        uint64_t v47 = v109;
        *(_OWORD *)(((unint64_t)v112 + v109) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v115[v109] & 0xFFFFFFFFFFFFFFF8);
        char v48 = 2;
      }
      else
      {
        if (v32 != 1)
        {
          uint64_t v45 = (void *)(v106 & ~v13);
          *unint64_t v112 = *(void *)v115;
          v45[1] = *(void *)((v107 & ~v13) + 8);
          *((unsigned char *)v112 + v24) = 0;
          swift_bridgeObjectRetain();
          uint64_t v47 = v109;
          goto LABEL_53;
        }
        *unint64_t v112 = *(void *)v115;
        *(void *)((v106 & ~v13) + 8) = *(void *)((v107 & ~v13) + 8);
        unint64_t v36 = ((unint64_t)v112 + v110) & v100;
        unint64_t v37 = (unint64_t)&v115[v110] & v100;
        uint64_t v38 = *(void (**)(uint64_t, unint64_t, uint64_t))(v113 + 16);
        swift_bridgeObjectRetain();
        uint64_t v92 = v38;
        v38(v36, v37, v114);
        unint64_t v39 = (v99 + v36) & v30;
        uint64_t v40 = (unsigned __int8 *)((v99 + v37) & v30);
        uint64_t v41 = v101;
        unsigned int v42 = v40[v101];
        unsigned int v43 = v42 - 4;
        if (v42 < 4)
        {
          uint64_t v45 = (void *)(v106 & ~v13);
        }
        else
        {
          if (v101 <= 3) {
            uint64_t v44 = v101;
          }
          else {
            uint64_t v44 = 4;
          }
          uint64_t v45 = (void *)(v106 & ~v13);
          switch(v44)
          {
            case 1:
              int v46 = *v40;
              goto LABEL_42;
            case 2:
              int v46 = *(unsigned __int16 *)v40;
              goto LABEL_42;
            case 3:
              int v46 = *(unsigned __int16 *)v40 | (*(unsigned __int8 *)(((v99 + v37) & v30) + 2) << 16);
              goto LABEL_42;
            case 4:
              int v46 = *(_DWORD *)v40;
LABEL_42:
              if (v101 < 4) {
                unsigned int v42 = (v46 | (v43 << (8 * v101))) + 4;
              }
              else {
                unsigned int v42 = v46 + 4;
              }
              break;
            default:
              break;
          }
        }
        switch(v42)
        {
          case 1u:
            *(unsigned char *)unint64_t v39 = *v40;
            char v49 = 1;
            goto LABEL_48;
          case 2u:
            *(void *)unint64_t v39 = *(void *)v40;
            *(void *)(v39 + 8) = *(void *)(((v99 + v37) & v30) + 8);
            uint64_t v50 = (v95 + v39) & v94;
            unint64_t v51 = (unint64_t)&v40[v95] & v94;
            unint64_t v89 = *(void (**)(uint64_t, unint64_t, uint64_t))(v97 + 16);
            unint64_t v90 = v39;
            swift_bridgeObjectRetain();
            v89(v50, v51, v98);
            uint64_t v45 = (void *)(v106 & ~v13);
            uint64_t v52 = (v96 + v50) & v100;
            unint64_t v53 = (v96 + v51) & v100;
            v92(v52, v53, v114);
            unint64_t v39 = v90;
            uint64_t v41 = v101;
            uint64_t v47 = v109;
            *(void *)((v109 + v52) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v109 + v53) & 0xFFFFFFFFFFFFFFF8);
            *(unsigned char *)(v90 + v93) = v40[v93];
            char v49 = 2;
            break;
          case 3u:
            *(void *)unint64_t v39 = *(void *)v40;
            *(void *)(v39 + 8) = *(void *)(((v99 + v37) & v30) + 8);
            uint64_t v54 = (v95 + v39) & v94;
            unint64_t v55 = (unint64_t)&v40[v95] & v94;
            uint64_t v56 = *(void (**)(uint64_t, unint64_t, uint64_t))(v97 + 16);
            unint64_t v91 = v39;
            swift_bridgeObjectRetain();
            v56(v54, v55, v98);
            uint64_t v45 = (void *)(v106 & ~v13);
            uint64_t v57 = (v96 + v54) & v100;
            v92(v57, (v96 + v55) & v100, v114);
            unint64_t v39 = v91;
            uint64_t v41 = v101;
            uint64_t v47 = v109;
            *(void *)((v109 + v57) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v109 + ((v96 + v55) & v100)) & 0xFFFFFFFFFFFFFFF8);
            char v49 = 3;
            break;
          default:
            char v49 = 0;
            *(_WORD *)unint64_t v39 = *(_WORD *)v40;
LABEL_48:
            uint64_t v47 = v109;
            break;
        }
        *(unsigned char *)(v39 + v41) = v49;
        char v48 = 1;
      }
      *((unsigned char *)v45 + v24) = v48;
LABEL_53:
      uint64_t v58 = ~v28;
      uint64_t v59 = (void *)(((v106 | v13) + v29) & v30);
      uint64_t v60 = (void *)(((v107 | v13) + v29) & v30);
      unsigned int v61 = *((unsigned __int8 *)v60 + v24);
      if (v61 > 2)
      {
        memcpy((void *)(((v106 | v13) + v29) & v30), (const void *)(((v107 | v13) + v29) & v30), v24 + 1);
      }
      else
      {
        if (v61 != 2)
        {
          if (v61 == 1)
          {
            *uint64_t v59 = *v60;
            *(void *)((((v106 | v13) + v29) & v30) + 8) = *(void *)((((v107 | v13) + v29) & v30) + 8);
            unint64_t v62 = ((unint64_t)v59 + v110) & v100;
            unint64_t v63 = ((unint64_t)v60 + v110) & v100;
            uint64_t v64 = *(void (**)(unint64_t, unint64_t, uint64_t))(v113 + 16);
            swift_bridgeObjectRetain();
            v64(v62, v63, v114);
            uint64_t v65 = v101;
            unint64_t v66 = (v99 + v62) & v30;
            uint64_t v67 = (unsigned __int8 *)((v99 + v63) & v30);
            unsigned int v68 = v67[v101];
            unsigned int v69 = v68 - 4;
            if (v68 >= 4)
            {
              if (v101 <= 3) {
                uint64_t v70 = v101;
              }
              else {
                uint64_t v70 = 4;
              }
              switch(v70)
              {
                case 1:
                  int v71 = *v67;
                  goto LABEL_72;
                case 2:
                  int v71 = *(unsigned __int16 *)v67;
                  goto LABEL_72;
                case 3:
                  int v71 = *(unsigned __int16 *)v67 | (v67[2] << 16);
                  goto LABEL_72;
                case 4:
                  int v71 = *(_DWORD *)v67;
LABEL_72:
                  int v80 = (v71 | (v69 << (8 * v101))) + 4;
                  unsigned int v68 = v71 + 4;
                  if (v101 < 4) {
                    unsigned int v68 = v80;
                  }
                  break;
                default:
                  break;
              }
            }
            switch(v68)
            {
              case 1u:
                *(unsigned char *)unint64_t v66 = *v67;
                char v81 = 1;
                break;
              case 2u:
                *(void *)unint64_t v66 = *(void *)v67;
                *(void *)(v66 + 8) = *((void *)v67 + 1);
                uint64_t v82 = (v95 + v66) & v94;
                unint64_t v83 = (unint64_t)&v67[v95] & v94;
                uint64_t v108 = *(void (**)(uint64_t, unint64_t, uint64_t))(v97 + 16);
                swift_bridgeObjectRetain();
                v108(v82, v83, v98);
                uint64_t v84 = (v96 + v82) & v100;
                unint64_t v85 = (v96 + v83) & v100;
                uint64_t v45 = v112;
                v64(v84, v85, v114);
                uint64_t v65 = v101;
                *(void *)((v109 + v84) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v109 + v85) & 0xFFFFFFFFFFFFFFF8);
                *(unsigned char *)(v66 + v93) = v67[v93];
                char v81 = 2;
                break;
              case 3u:
                *(void *)unint64_t v66 = *(void *)v67;
                *(void *)(v66 + 8) = *((void *)v67 + 1);
                uint64_t v86 = (v95 + v66) & v94;
                unint64_t v87 = (unint64_t)&v67[v95] & v94;
                unint64_t v111 = *(void (**)(uint64_t, unint64_t, uint64_t))(v97 + 16);
                swift_bridgeObjectRetain();
                v111(v86, v87, v98);
                uint64_t v88 = (v96 + v86) & v100;
                v64(v88, (v96 + v87) & v100, v114);
                uint64_t v65 = v101;
                *(void *)((v109 + v88) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v109 + ((v96 + v87) & v100)) & 0xFFFFFFFFFFFFFFF8);
                char v81 = 3;
                break;
              default:
                char v81 = 0;
                *(_WORD *)unint64_t v66 = *(_WORD *)v67;
                break;
            }
            uint64_t v74 = v104;
            uint64_t v73 = v105;
            uint64_t v75 = v102;
            uint64_t v76 = v103;
            *(unsigned char *)(v66 + v65) = v81;
            *((unsigned char *)v59 + v24) = 1;
            goto LABEL_67;
          }
          uint64_t v75 = v102;
          *uint64_t v59 = *v60;
          v59[1] = v60[1];
          *((unsigned char *)v59 + v24) = 0;
          swift_bridgeObjectRetain();
          uint64_t v74 = v104;
          uint64_t v73 = v105;
LABEL_66:
          uint64_t v76 = v103;
LABEL_67:
          unint64_t v77 = ((unint64_t)v45 + v76) & v58;
          unint64_t v78 = (unint64_t)&v115[v76] & v58;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v74 + 16))(v77, v78, v73);
          *(unsigned char *)(v77 + v75) = *(unsigned char *)(v78 + v75);
          return a1;
        }
        uint64_t v72 = v47;
        (*(void (**)(void *, void *, uint64_t))(v113 + 16))(v59, v60, v114);
        *(_OWORD *)(((unint64_t)v59 + v72) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v60 + v72) & 0xFFFFFFFFFFFFFFF8);
        *((unsigned char *)v59 + v24) = 2;
      }
      uint64_t v74 = v104;
      uint64_t v73 = v105;
      uint64_t v75 = v102;
      goto LABEL_66;
    }
  }
  uint64_t v35 = *a2;
  *(void *)a1 = *a2;
  a1 = v35 + (((v13 | v27) + 16) & ~(v13 | v27));
  swift_retain();
  return a1;
}

uint64_t sub_22EC058F8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v60 = sub_22EE7F6E0();
  uint64_t v3 = *(void *)(v60 - 8);
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = sub_22EE7F5D0();
  uint64_t v55 = *(void *)(v6 - 8);
  uint64_t v56 = v6;
  uint64_t v7 = *(unsigned __int8 *)(v55 + 80);
  uint64_t v8 = v5 | v7 | 7;
  uint64_t v9 = a1 + v8 + 32;
  uint64_t v10 = (unsigned __int8 *)(v9 & ~v8);
  uint64_t v11 = v5 + 16;
  uint64_t v12 = *(void *)(v3 + 64);
  uint64_t v57 = v8 + v12;
  uint64_t v13 = (v8 + v12 + ((v5 + 16) & ~v5)) & ~v8;
  uint64_t v53 = v7 + 16;
  uint64_t v54 = *(void *)(v55 + 64) + v5;
  uint64_t v14 = v12 + 7;
  unint64_t v15 = (v12 + 7 + ((v54 + ((v7 + 16) & ~v7)) & ~v5)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = v15 + 8;
  unint64_t v17 = v15 + 9;
  if (v17 <= v16) {
    unint64_t v17 = v16;
  }
  if (v17 <= 2) {
    uint64_t v18 = 2;
  }
  else {
    uint64_t v18 = v17;
  }
  unint64_t v19 = (v14 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v18 + v13 + 1 > v19) {
    unint64_t v20 = v18 + v13 + 1;
  }
  else {
    unint64_t v20 = v19;
  }
  if (v20 <= 0x10) {
    uint64_t v21 = 16;
  }
  else {
    uint64_t v21 = v20;
  }
  unsigned int v22 = v10[v21];
  unsigned int v23 = v22 - 3;
  if (v22 >= 3)
  {
    if (v21 <= 3) {
      uint64_t v24 = v21;
    }
    else {
      uint64_t v24 = 4;
    }
    switch(v24)
    {
      case 1:
        int v25 = *v10;
        goto LABEL_21;
      case 2:
        int v25 = *(unsigned __int16 *)v10;
        goto LABEL_21;
      case 3:
        int v25 = *(unsigned __int16 *)v10 | (*(unsigned __int8 *)((v9 & ~v8) + 2) << 16);
        goto LABEL_21;
      case 4:
        int v25 = *(_DWORD *)v10;
LABEL_21:
        int v26 = (v25 | (v23 << (8 * v21))) + 3;
        unsigned int v22 = v25 + 3;
        if (v21 < 4) {
          unsigned int v22 = v26;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v27 = ~v8;
  uint64_t v58 = ~v5;
  uint64_t v52 = ~v7;
  if (v22 == 2)
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v9 & ~v8, v60);
  }
  else if (v22 == 1)
  {
    swift_bridgeObjectRelease();
    unint64_t v51 = *(void (**)(unint64_t, uint64_t))(v3 + 8);
    v51((unint64_t)&v10[v11] & v58, v60);
    uint64_t v28 = (unsigned __int8 *)((v57 + ((unint64_t)&v10[v11] & v58)) & v27);
    unsigned int v29 = v28[v18];
    unsigned int v30 = v29 - 4;
    if (v29 >= 4)
    {
      if (v18 <= 3) {
        uint64_t v31 = v18;
      }
      else {
        uint64_t v31 = 4;
      }
      switch(v31)
      {
        case 1:
          int v32 = *v28;
          goto LABEL_36;
        case 2:
          int v32 = *(unsigned __int16 *)v28;
          goto LABEL_36;
        case 3:
          int v32 = *(unsigned __int16 *)((v57 + ((unint64_t)&v10[v11] & v58)) & v27) | (*(unsigned __int8 *)(((v57 + ((unint64_t)&v10[v11] & v58)) & v27) + 2) << 16);
          goto LABEL_36;
        case 4:
          int v32 = *(_DWORD *)v28;
LABEL_36:
          int v33 = (v32 | (v30 << (8 * v18))) + 4;
          unsigned int v29 = v32 + 4;
          if (v18 < 4) {
            unsigned int v29 = v33;
          }
          break;
        default:
          break;
      }
    }
    if (v29 >= 2)
    {
      swift_bridgeObjectRelease();
      unint64_t v34 = (unint64_t)&v28[v53] & v52;
      (*(void (**)(unint64_t, uint64_t))(v55 + 8))(v34, v56);
      v51((v54 + v34) & v58, v60);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v35 = v21 + 1;
  uint64_t v36 = ((v9 | v8) + v21 + 1) & v27;
  unsigned int v37 = *(unsigned __int8 *)(v36 + v21);
  if (v37 <= 2)
  {
    if (v37 == 2)
    {
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(((v9 | v8) + v21 + 1) & v27, v60);
    }
    else if (v37 == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v38 = (v11 + v36) & v58;
      unint64_t v39 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
      v39(v38, v60);
      uint64_t v40 = (unsigned __int8 *)((v57 + v38) & v27);
      unsigned int v41 = v40[v18];
      unsigned int v42 = v41 - 4;
      if (v41 >= 4)
      {
        if (v18 <= 3) {
          uint64_t v43 = v18;
        }
        else {
          uint64_t v43 = 4;
        }
        switch(v43)
        {
          case 1:
            int v44 = *v40;
            goto LABEL_54;
          case 2:
            int v44 = *(unsigned __int16 *)v40;
            goto LABEL_54;
          case 3:
            int v44 = *(unsigned __int16 *)v40 | (v40[2] << 16);
            goto LABEL_54;
          case 4:
            int v44 = *(_DWORD *)v40;
LABEL_54:
            int v45 = (v44 | (v42 << (8 * v18))) + 4;
            unsigned int v41 = v44 + 4;
            if (v18 < 4) {
              unsigned int v41 = v45;
            }
            break;
          default:
            break;
        }
      }
      if (v41 >= 2)
      {
        swift_bridgeObjectRelease();
        unint64_t v46 = (unint64_t)&v40[v53] & v52;
        (*(void (**)(unint64_t, uint64_t))(v55 + 8))(v46, v56);
        v39((v54 + v46) & v58, v60);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v47 = *(void *)(*(void *)(a2 + 16) - 8);
  char v48 = *(uint64_t (**)(unint64_t))(v47 + 8);
  unint64_t v49 = (unint64_t)&v10[v35 + *(unsigned __int8 *)(v47 + 80) + ((v35 + v8) & v27)] & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);

  return v48(v49);
}

uint64_t sub_22EC05E58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v6 = sub_22EE7F6E0();
  uint64_t v101 = *(void *)(v6 - 8);
  uint64_t v102 = v6;
  uint64_t v7 = *(unsigned __int8 *)(v101 + 80);
  uint64_t v8 = sub_22EE7F5D0();
  uint64_t v84 = *(void *)(v8 - 8);
  uint64_t v85 = v8;
  uint64_t v9 = *(unsigned __int8 *)(v84 + 80);
  uint64_t v10 = v7 | v9 | 7;
  uint64_t v95 = v10 + 32 + a1;
  uint64_t v103 = (void *)(v95 & ~v10);
  uint64_t v97 = v10 + 32 + a2;
  uint64_t v11 = (unsigned __int8 *)(v97 & ~v10);
  uint64_t v86 = v7 + 16;
  uint64_t v12 = *(void *)(v101 + 64);
  uint64_t v88 = v10 + v12;
  uint64_t v13 = (v10 + v12 + ((v7 + 16) & ~v7)) & ~v10;
  uint64_t v82 = v9 + 16;
  uint64_t v83 = *(void *)(v84 + 64) + v7;
  uint64_t v14 = v12 + 7;
  unint64_t v15 = (v14 + ((v83 + ((v9 + 16) & ~v9)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = v15 + 8;
  unint64_t v17 = v15 + 9;
  unint64_t v80 = v16;
  if (v17 <= v16) {
    unint64_t v17 = v16;
  }
  if (v17 <= 2) {
    unint64_t v17 = 2;
  }
  uint64_t v92 = v14;
  unint64_t v93 = v17;
  unint64_t v18 = v17 + v13;
  if (v18 + 1 > (v14 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v19 = v18 + 1;
  }
  else {
    unint64_t v19 = (v14 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v19 <= 0x10) {
    uint64_t v20 = 16;
  }
  else {
    uint64_t v20 = v19;
  }
  unsigned int v21 = v11[v20];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v21 >= 3)
  {
    if (v20 <= 3) {
      uint64_t v22 = v20;
    }
    else {
      uint64_t v22 = 4;
    }
    switch(v22)
    {
      case 1:
        int v23 = *v11;
        goto LABEL_20;
      case 2:
        int v23 = *(unsigned __int16 *)v11;
        goto LABEL_20;
      case 3:
        int v23 = *(unsigned __int16 *)(v97 & ~v10) | (*(unsigned __int8 *)((v97 & ~v10) + 2) << 16);
        goto LABEL_20;
      case 4:
        int v23 = *(_DWORD *)v11;
LABEL_20:
        int v24 = (v23 | ((v21 - 3) << (8 * v20))) + 3;
        unsigned int v25 = v23 + 3;
        if (v20 >= 4) {
          unsigned int v21 = v25;
        }
        else {
          unsigned int v21 = v24;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v26 = ~v10;
  uint64_t v91 = ~v7;
  uint64_t v81 = ~v9;
  if (v21 == 2)
  {
    uint64_t v27 = (void *)(v95 & ~v10);
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v101 + 16))(v103, v11, v102);
    *(_OWORD *)(((unint64_t)v103 + v92) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v11[v92] & 0xFFFFFFFFFFFFFFF8);
    char v38 = 2;
  }
  else
  {
    uint64_t v27 = (void *)(v95 & ~v10);
    if (v21 != 1)
    {
      *uint64_t v103 = *(void *)v11;
      *(void *)((v95 & ~v10) + 8) = *(void *)((v97 & ~v10) + 8);
      *((unsigned char *)v103 + v20) = 0;
      swift_bridgeObjectRetain();
      goto LABEL_45;
    }
    *uint64_t v103 = *(void *)v11;
    *(void *)((v95 & ~v10) + 8) = *(void *)((v97 & ~v10) + 8);
    unint64_t v28 = ((unint64_t)v103 + v86) & v91;
    unint64_t v29 = (unint64_t)&v11[v86] & v91;
    unsigned int v30 = *(void (**)(void))(v101 + 16);
    swift_bridgeObjectRetain();
    uint64_t v79 = v30;
    ((void (*)(unint64_t, unint64_t, uint64_t))v30)(v28, v29, v102);
    unint64_t v31 = (v88 + v28) & v26;
    int v32 = (unsigned __int8 *)((v88 + v29) & v26);
    unint64_t v33 = v93;
    unsigned int v34 = v32[v93];
    unsigned int v35 = v34 - 4;
    if (v34 >= 4)
    {
      if (v93 <= 3) {
        uint64_t v36 = v93;
      }
      else {
        uint64_t v36 = 4;
      }
      switch(v36)
      {
        case 1:
          int v37 = *v32;
          goto LABEL_36;
        case 2:
          int v37 = *(unsigned __int16 *)v32;
          goto LABEL_36;
        case 3:
          int v37 = *(unsigned __int16 *)v32 | (*(unsigned __int8 *)(((v88 + v29) & v26) + 2) << 16);
          goto LABEL_36;
        case 4:
          int v37 = *(_DWORD *)v32;
LABEL_36:
          int v39 = (v37 | (v35 << (8 * v93))) + 4;
          unsigned int v34 = v37 + 4;
          if (v93 < 4) {
            unsigned int v34 = v39;
          }
          break;
        default:
          break;
      }
    }
    switch(v34)
    {
      case 1u:
        *(unsigned char *)unint64_t v31 = *v32;
        char v40 = 1;
        break;
      case 2u:
        *(void *)unint64_t v31 = *(void *)v32;
        *(void *)(v31 + 8) = *(void *)(((v88 + v29) & v26) + 8);
        unint64_t v41 = (v82 + v31) & v81;
        unint64_t v77 = v31;
        unint64_t v42 = (unint64_t)&v32[v82] & v81;
        uint64_t v75 = *(void (**)(unint64_t, unint64_t, uint64_t))(v84 + 16);
        swift_bridgeObjectRetain();
        v75(v41, v42, v85);
        uint64_t v27 = (void *)(v95 & ~v10);
        uint64_t v76 = (v83 + v41) & v91;
        unint64_t v43 = (v83 + v42) & v91;
        unint64_t v31 = v77;
        v79();
        unint64_t v33 = v93;
        *(void *)((v92 + v76) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v92 + v43) & 0xFFFFFFFFFFFFFFF8);
        *(unsigned char *)(v77 + v80) = v32[v80];
        char v40 = 2;
        break;
      case 3u:
        *(void *)unint64_t v31 = *(void *)v32;
        *(void *)(v31 + 8) = *(void *)(((v88 + v29) & v26) + 8);
        unint64_t v44 = (unint64_t)&v32[v82] & v81;
        unint64_t v78 = *(void (**)(unint64_t, unint64_t, uint64_t))(v84 + 16);
        swift_bridgeObjectRetain();
        v78((v82 + v31) & v81, v44, v85);
        uint64_t v27 = (void *)(v95 & ~v10);
        unint64_t v45 = (v83 + ((v82 + v31) & v81)) & v91;
        unint64_t v46 = (v83 + v44) & v91;
        ((void (*)(unint64_t, unint64_t, uint64_t))v79)(v45, v46, v102);
        unint64_t v33 = v93;
        *(void *)((v92 + v45) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v92 + v46) & 0xFFFFFFFFFFFFFFF8);
        char v40 = 3;
        break;
      default:
        char v40 = 0;
        *(_WORD *)unint64_t v31 = *(_WORD *)v32;
        break;
    }
    *(unsigned char *)(v31 + v33) = v40;
    char v38 = 1;
  }
  *((unsigned char *)v27 + v20) = v38;
LABEL_45:
  uint64_t v47 = v20 + 1;
  char v48 = (void *)(((v95 | v10) + v20 + 1) & v26);
  unint64_t v49 = (void *)(((v97 | v10) + v20 + 1) & v26);
  unsigned int v50 = *((unsigned __int8 *)v49 + v20);
  if (v50 > 2)
  {
    memcpy((void *)(((v95 | v10) + v20 + 1) & v26), (const void *)(((v97 | v10) + v20 + 1) & v26), v20 + 1);
LABEL_57:
    uint64_t v60 = a3;
    goto LABEL_58;
  }
  if (v50 == 2)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v101 + 16))(((v95 | v10) + v20 + 1) & v26, ((v97 | v10) + v20 + 1) & v26, v102);
    *(_OWORD *)(((unint64_t)v48 + v92) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v49 + v92) & 0xFFFFFFFFFFFFFFF8);
    *((unsigned char *)v48 + v20) = 2;
    goto LABEL_57;
  }
  if (v50 != 1)
  {
    *char v48 = *v49;
    *(void *)((((v95 | v10) + v20 + 1) & v26) + 8) = *(void *)((((v97 | v10) + v20 + 1) & v26) + 8);
    *((unsigned char *)v48 + v20) = 0;
    swift_bridgeObjectRetain();
    goto LABEL_57;
  }
  uint64_t v98 = (unsigned __int8 *)(v97 & ~v10);
  *char v48 = *v49;
  *(void *)((((v95 | v10) + v20 + 1) & v26) + 8) = v49[1];
  unint64_t v51 = ((unint64_t)v48 + v86) & v91;
  unint64_t v52 = ((unint64_t)v49 + v86) & v91;
  uint64_t v53 = *(void (**)(void))(v101 + 16);
  swift_bridgeObjectRetain();
  uint64_t v96 = v53;
  ((void (*)(unint64_t, unint64_t, uint64_t))v53)(v51, v52, v102);
  unint64_t v54 = (v88 + v51) & v26;
  uint64_t v55 = (unsigned __int8 *)((v88 + v52) & v26);
  unsigned int v56 = v55[v93];
  unsigned int v57 = v56 - 4;
  if (v56 < 4)
  {
    uint64_t v11 = v98;
  }
  else
  {
    if (v93 <= 3) {
      uint64_t v58 = v93;
    }
    else {
      uint64_t v58 = 4;
    }
    uint64_t v11 = v98;
    switch(v58)
    {
      case 1:
        int v59 = *v55;
        goto LABEL_63;
      case 2:
        int v59 = *(unsigned __int16 *)v55;
        goto LABEL_63;
      case 3:
        int v59 = *(unsigned __int16 *)v55 | (*(unsigned __int8 *)(((v88 + v52) & v26) + 2) << 16);
        goto LABEL_63;
      case 4:
        int v59 = *(_DWORD *)v55;
LABEL_63:
        int v69 = (v59 | (v57 << (8 * v93))) + 4;
        unsigned int v56 = v59 + 4;
        if (v93 < 4) {
          unsigned int v56 = v69;
        }
        break;
      default:
        break;
    }
  }
  switch(v56)
  {
    case 1u:
      *(unsigned char *)unint64_t v54 = *v55;
      char v70 = 1;
      break;
    case 2u:
      *(void *)unint64_t v54 = *(void *)v55;
      *(void *)(v54 + 8) = *(void *)(((v88 + v52) & v26) + 8);
      unint64_t v99 = (v82 + v54) & v81;
      unint64_t v89 = (unint64_t)&v55[v82] & v81;
      unint64_t v87 = *(void (**)(unint64_t, unint64_t, uint64_t))(v84 + 16);
      swift_bridgeObjectRetain();
      v87(v99, v89, v85);
      v96();
      *(void *)((v92 + ((v83 + v99) & v91)) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v92 + ((v83 + v89) & v91)) & 0xFFFFFFFFFFFFFFF8);
      *(unsigned char *)(v54 + v80) = v55[v80];
      char v70 = 2;
      break;
    case 3u:
      *(void *)unint64_t v54 = *(void *)v55;
      *(void *)(v54 + 8) = *(void *)(((v88 + v52) & v26) + 8);
      unint64_t v100 = v54;
      unint64_t v71 = (v82 + v54) & v81;
      unint64_t v72 = (unint64_t)&v55[v82] & v81;
      unint64_t v90 = *(void (**)(unint64_t, unint64_t, uint64_t))(v84 + 16);
      swift_bridgeObjectRetain();
      v90(v71, v72, v85);
      uint64_t v73 = (v83 + v71) & v91;
      unint64_t v74 = (v83 + v72) & v91;
      unint64_t v54 = v100;
      ((void (*)(uint64_t, unint64_t, uint64_t))v96)(v73, v74, v102);
      *(void *)((v92 + v73) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v92 + v74) & 0xFFFFFFFFFFFFFFF8);
      char v70 = 3;
      break;
    default:
      char v70 = 0;
      *(_WORD *)unint64_t v54 = *(_WORD *)v55;
      break;
  }
  uint64_t v60 = a3;
  *(unsigned char *)(v54 + v93) = v70;
  *((unsigned char *)v48 + v20) = 1;
  uint64_t v27 = v103;
LABEL_58:
  uint64_t v61 = (v47 + v10) & v26;
  uint64_t v62 = *(void *)(*(void *)(v60 + 16) - 8);
  uint64_t v63 = v62 + 16;
  uint64_t v64 = *(unsigned __int8 *)(v62 + 80);
  uint64_t v65 = v61 + v47 + v64;
  unint64_t v66 = ((unint64_t)v27 + v65) & ~v64;
  unint64_t v67 = (unint64_t)&v11[v65] & ~v64;
  (*(void (**)(unint64_t, unint64_t))(v62 + 16))(v66, v67);
  *(unsigned char *)(*(void *)(v63 + 48) + v66) = *(unsigned char *)(*(void *)(v63 + 48) + v67);
  return a1;
}

void *sub_22EC067F4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  *a1 = *(void *)a2;
  a1[1] = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)v5 + 16) = *(unsigned char *)(a2 + 16);
  v5[3] = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v162 = sub_22EE7F6E0();
  uint64_t v6 = *(void *)(v162 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v154 = sub_22EE7F5D0();
  uint64_t v8 = *(void *)(v154 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v7 | v9 | 7;
  unint64_t v11 = (unint64_t)v5 + v10 + 32;
  uint64_t v12 = ~v10;
  uint64_t v13 = v11 & ~v10;
  uint64_t v14 = v10 + 32 + a2;
  uint64_t v15 = v14 & ~v10;
  uint64_t v157 = v15;
  uint64_t v158 = a3;
  uint64_t v151 = v8;
  if (v13 != v15)
  {
    uint64_t v155 = v7 + 16;
    uint64_t v16 = *(void *)(v6 + 64);
    uint64_t v17 = (v10 + ((v7 + 16) & ~v7) + v16) & v12;
    uint64_t v148 = v9 + 16;
    uint64_t v150 = *(void *)(v8 + 64) + v7;
    uint64_t v156 = v16;
    uint64_t v18 = v16 + 7;
    unint64_t v19 = (v18 + ((v150 + ((v9 + 16) & ~v9)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v20 = v19 + 8;
    unint64_t v21 = v19 + 9;
    unint64_t v140 = v20;
    if (v21 <= v20) {
      unint64_t v21 = v20;
    }
    if (v21 <= 2) {
      unint64_t v21 = 2;
    }
    unint64_t v160 = v21;
    unint64_t v22 = (v17 | 1) + v21;
    uint64_t v144 = v10 + 32 + a2;
    uint64_t v145 = v18;
    if (v22 <= (v18 & 0xFFFFFFFFFFFFFFF8) + 16) {
      unint64_t v22 = (v18 & 0xFFFFFFFFFFFFFFF8) + 16;
    }
    if (v22 <= 0x10) {
      uint64_t v23 = 16;
    }
    else {
      uint64_t v23 = v22;
    }
    unsigned int v24 = *(unsigned __int8 *)(v13 + v23);
    unsigned int v25 = v24 - 3;
    uint64_t v142 = (char *)v5 + v10 + 32;
    if (v24 >= 3)
    {
      if (v23 <= 3) {
        uint64_t v26 = v23;
      }
      else {
        uint64_t v26 = 4;
      }
      switch(v26)
      {
        case 1:
          int v27 = *(unsigned __int8 *)v13;
          goto LABEL_30;
        case 2:
          int v27 = *(unsigned __int16 *)v13;
          goto LABEL_30;
        case 3:
          int v27 = *(unsigned __int16 *)v13 | (*(unsigned __int8 *)((v11 & ~v10) + 2) << 16);
          goto LABEL_30;
        case 4:
          int v27 = *(_DWORD *)v13;
LABEL_30:
          if (v23 < 4) {
            unsigned int v24 = (v27 | (v25 << (8 * v23))) + 3;
          }
          else {
            unsigned int v24 = v27 + 3;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v159 = ~v7;
    uint64_t v147 = ~v9;
    uint64_t v141 = v5;
    if (v24 == 2)
    {
      uint64_t v45 = v6;
      uint64_t v39 = ~v10;
      uint64_t v38 = v45;
      uint64_t v36 = (unsigned __int8 *)(v11 & ~v10);
      (*(void (**)(void))(v45 + 8))();
    }
    else if (v24 == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v36 = (unsigned __int8 *)v13;
      unint64_t v37 = (v155 + v13) & v159;
      uint64_t v38 = v6;
      uint64_t v137 = *(void (**)(unint64_t, uint64_t))(v6 + 8);
      v137(v37, v162);
      uint64_t v39 = ~v10;
      char v40 = (unsigned __int8 *)((v37 + v10 + v156) & v12);
      unsigned int v41 = v40[v160];
      unsigned int v42 = v41 - 4;
      if (v41 >= 4)
      {
        if (v160 <= 3) {
          uint64_t v43 = v160;
        }
        else {
          uint64_t v43 = 4;
        }
        switch(v43)
        {
          case 1:
            int v44 = *v40;
            goto LABEL_46;
          case 2:
            int v44 = *(unsigned __int16 *)v40;
            goto LABEL_46;
          case 3:
            int v44 = *(unsigned __int16 *)v40 | (v40[2] << 16);
            goto LABEL_46;
          case 4:
            int v44 = *(_DWORD *)v40;
LABEL_46:
            if (v160 < 4) {
              unsigned int v41 = (v44 | (v42 << (8 * v160))) + 4;
            }
            else {
              unsigned int v41 = v44 + 4;
            }
            break;
          default:
            break;
        }
      }
      if (v41 >= 2)
      {
        swift_bridgeObjectRelease();
        unint64_t v46 = (unint64_t)&v40[v148] & v147;
        (*(void (**)(unint64_t, uint64_t))(v151 + 8))(v46, v154);
        v137((v150 + v46) & v159, v162);
      }
    }
    else
    {
      uint64_t v36 = (unsigned __int8 *)(v11 & ~v10);
      uint64_t v38 = v6;
      uint64_t v39 = ~v10;
      swift_bridgeObjectRelease();
    }
    unsigned int v47 = *(unsigned __int8 *)(v15 + v23);
    unsigned int v48 = v47 - 3;
    if (v47 < 3)
    {
      uint64_t v12 = v39;
      uint64_t v6 = v38;
      uint64_t v13 = (uint64_t)v36;
      uint64_t v5 = v141;
    }
    else
    {
      if (v23 <= 3) {
        uint64_t v49 = v23;
      }
      else {
        uint64_t v49 = 4;
      }
      uint64_t v12 = v39;
      uint64_t v6 = v38;
      uint64_t v13 = (uint64_t)v36;
      uint64_t v5 = v141;
      switch(v49)
      {
        case 1:
          int v50 = *(unsigned __int8 *)v15;
          goto LABEL_61;
        case 2:
          int v50 = *(unsigned __int16 *)v15;
          goto LABEL_61;
        case 3:
          int v50 = *(unsigned __int16 *)v15 | (*(unsigned __int8 *)(v15 + 2) << 16);
          goto LABEL_61;
        case 4:
          int v50 = *(_DWORD *)v15;
LABEL_61:
          if (v23 < 4) {
            unsigned int v47 = (v50 | (v48 << (8 * v23))) + 3;
          }
          else {
            unsigned int v47 = v50 + 3;
          }
          break;
        default:
          break;
      }
    }
    if (v47 == 2)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v13, v15, v162);
      *(_OWORD *)(((v13 | 7) + v156) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((v15 | 7) + v156) & 0xFFFFFFFFFFFFFFF8);
      *(unsigned char *)(v13 + v23) = 2;
    }
    else
    {
      if (v47 == 1)
      {
        *(void *)uint64_t v13 = *(void *)v15;
        *(void *)(v13 + 8) = *(void *)(v15 + 8);
        unint64_t v51 = (v155 + v13) & v159;
        unint64_t v52 = (v155 + v15) & v159;
        uint64_t v53 = *(void (**)(uint64_t, unint64_t, uint64_t))(v6 + 16);
        swift_bridgeObjectRetain();
        unint64_t v135 = v53;
        v53(v51, v52, v162);
        uint64_t v54 = v12;
        uint64_t v55 = (v51 + v10 + v156) & v12;
        uint64_t v138 = v54;
        unsigned int v56 = (unsigned __int8 *)((v52 + v10 + v156) & v54);
        unsigned int v57 = v56[v160];
        unsigned int v58 = v57 - 4;
        if (v57 >= 4)
        {
          if (v160 <= 3) {
            uint64_t v59 = v160;
          }
          else {
            uint64_t v59 = 4;
          }
          switch(v59)
          {
            case 1:
              int v60 = *v56;
              goto LABEL_78;
            case 2:
              int v60 = *(unsigned __int16 *)v56;
              goto LABEL_78;
            case 3:
              int v60 = *(unsigned __int16 *)((v52 + v10 + v156) & v54) | (*(unsigned __int8 *)(((v52 + v10 + v156) & v54)
                                                                                          + 2) << 16);
              goto LABEL_78;
            case 4:
              int v60 = *(_DWORD *)v56;
LABEL_78:
              if (v160 < 4) {
                unsigned int v57 = (v60 | (v58 << (8 * v160))) + 4;
              }
              else {
                unsigned int v57 = v60 + 4;
              }
              break;
            default:
              break;
          }
        }
        switch(v57)
        {
          case 1u:
            *(unsigned char *)uint64_t v55 = *v56;
            char v61 = 1;
            break;
          case 2u:
            *(void *)uint64_t v55 = *(void *)v56;
            *(void *)(v55 + 8) = *(void *)(((v52 + v10 + v156) & v54) + 8);
            uint64_t v62 = (v148 + v55) & v147;
            uint64_t v133 = v55;
            unint64_t v63 = (unint64_t)&v56[v148] & v147;
            uint64_t v132 = *(void (**)(uint64_t, unint64_t, uint64_t))(v151 + 16);
            swift_bridgeObjectRetain();
            v132(v62, v63, v154);
            uint64_t v64 = (v150 + v62) & v159;
            unint64_t v65 = (v150 + v63) & v159;
            uint64_t v55 = v133;
            v135(v64, v65, v162);
            *(void *)((v145 + v64) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v145 + v65) & 0xFFFFFFFFFFFFFFF8);
            *(unsigned char *)(v140 + v133) = v56[v140];
            char v61 = 2;
            break;
          case 3u:
            *(void *)uint64_t v55 = *(void *)v56;
            *(void *)(v55 + 8) = *(void *)(((v52 + v10 + v156) & v54) + 8);
            uint64_t v66 = (v148 + v55) & v147;
            unint64_t v67 = (unint64_t)&v56[v148] & v147;
            unint64_t v134 = *(void (**)(uint64_t, unint64_t, uint64_t))(v151 + 16);
            swift_bridgeObjectRetain();
            v134(v66, v67, v154);
            uint64_t v68 = (v150 + v66) & v159;
            unint64_t v69 = (v150 + v67) & v159;
            v135(v68, v69, v162);
            *(void *)((v145 + v68) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v145 + v69) & 0xFFFFFFFFFFFFFFF8);
            char v61 = 3;
            break;
          default:
            char v61 = 0;
            *(_WORD *)uint64_t v55 = *(_WORD *)v56;
            break;
        }
        uint64_t v34 = v160;
        unint64_t v11 = (unint64_t)v142;
        uint64_t v14 = v144;
        *(unsigned char *)(v55 + v160) = v61;
        *(unsigned char *)(v13 + v23) = 1;
        uint64_t v12 = v138;
        goto LABEL_87;
      }
      *(void *)uint64_t v13 = *(void *)v15;
      *(void *)(v13 + 8) = *(void *)(v15 + 8);
      *(unsigned char *)(v13 + v23) = 0;
      swift_bridgeObjectRetain();
    }
    uint64_t v34 = v160;
    unint64_t v11 = (unint64_t)v142;
    uint64_t v14 = v144;
    goto LABEL_87;
  }
  uint64_t v28 = *(void *)(v6 + 64);
  uint64_t v29 = *(void *)(v8 + 64);
  uint64_t v159 = ~v7;
  uint64_t v155 = v7 + 16;
  uint64_t v156 = v28;
  uint64_t v147 = ~v9;
  uint64_t v148 = v9 + 16;
  uint64_t v150 = v29 + v7;
  uint64_t v30 = v28 + 7;
  unint64_t v31 = (v28 + 7 + ((v29 + v7 + ((v9 + 16) & ~v9)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = v31 + 8;
  unint64_t v33 = v31 + 9;
  unint64_t v140 = v32;
  if (v33 <= v32) {
    unint64_t v33 = v32;
  }
  if (v33 <= 2) {
    uint64_t v34 = 2;
  }
  else {
    uint64_t v34 = v33;
  }
  unint64_t v35 = ((v10 + ((v7 + 16) & ~v7) + v28) & v12 | 1) + v34;
  uint64_t v145 = v28 + 7;
  if (v35 <= (v30 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v35 = (v30 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v35 <= 0x10) {
    uint64_t v23 = 16;
  }
  else {
    uint64_t v23 = v35;
  }
LABEL_87:
  size_t v70 = v23 + 1;
  unint64_t v71 = (void *)(((v11 | v10) + v23 + 1) & v12);
  unint64_t v72 = (void *)(((v14 | v10) + v23 + 1) & v12);
  unsigned int v73 = *((unsigned __int8 *)v71 + v23);
  unsigned int v74 = *((unsigned __int8 *)v72 + v23);
  if (v73 > 2)
  {
    if (v74 <= 2)
    {
      if (v74 == 2)
      {
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 16))(((v11 | v10) + v23 + 1) & v12, ((v14 | v10) + v23 + 1) & v12, v162);
        *(_OWORD *)(((unint64_t)v71 + v145) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v72 + v145) & 0xFFFFFFFFFFFFFFF8);
        char v102 = 2;
      }
      else
      {
        if (v74 != 1)
        {
          *unint64_t v71 = *v72;
          *(void *)((((v11 | v10) + v23 + 1) & v12) + 8) = *(void *)((((v14 | v10) + v23 + 1) & v12) + 8);
          *((unsigned char *)v71 + v23) = 0;
          swift_bridgeObjectRetain();
          goto LABEL_178;
        }
        unint64_t v136 = (unsigned __int8 *)v13;
        *unint64_t v71 = *v72;
        *(void *)((((v11 | v10) + v23 + 1) & v12) + 8) = *(void *)((((v14 | v10) + v23 + 1) & v12) + 8);
        uint64_t v82 = v6;
        unint64_t v83 = ((unint64_t)v71 + v155) & v159;
        unint64_t v84 = ((unint64_t)v72 + v155) & v159;
        uint64_t v85 = *(void (**)(unint64_t, unint64_t, uint64_t))(v82 + 16);
        uint64_t v161 = v34;
        swift_bridgeObjectRetain();
        v85(v83, v84, v162);
        uint64_t v86 = (v156 + v10 + v83) & v12;
        uint64_t v139 = v12;
        unint64_t v87 = (unsigned __int8 *)((v156 + v10 + v84) & v12);
        unsigned int v88 = v87[v161];
        unsigned int v89 = v88 - 4;
        if (v88 >= 4)
        {
          if (v161 <= 3) {
            uint64_t v90 = v161;
          }
          else {
            uint64_t v90 = 4;
          }
          switch(v90)
          {
            case 1:
              int v91 = *v87;
              goto LABEL_125;
            case 2:
              int v91 = *(unsigned __int16 *)v87;
              goto LABEL_125;
            case 3:
              int v91 = *(unsigned __int16 *)v87 | (v87[2] << 16);
              goto LABEL_125;
            case 4:
              int v91 = *(_DWORD *)v87;
LABEL_125:
              int v103 = (v91 | (v89 << (8 * v161))) + 4;
              unsigned int v88 = v91 + 4;
              if (v161 < 4) {
                unsigned int v88 = v103;
              }
              break;
            default:
              break;
          }
        }
        switch(v88)
        {
          case 1u:
LABEL_173:
            *(unsigned char *)uint64_t v86 = *v87;
            char v119 = 1;
            break;
          case 2u:
LABEL_174:
            *(void *)uint64_t v86 = *(void *)v87;
            *(void *)(v86 + 8) = *((void *)v87 + 1);
            uint64_t v120 = (v148 + v86) & v147;
            unint64_t v149 = (unint64_t)&v87[v148] & v147;
            uint64_t v152 = *(void (**)(uint64_t, unint64_t, uint64_t))(v151 + 16);
            swift_bridgeObjectRetain();
            v152(v120, v149, v154);
            uint64_t v121 = (v150 + v120) & v159;
            v85(v121, (v150 + v149) & v159, v162);
            *(void *)((v145 + v121) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v145 + ((v150 + v149) & v159)) & 0xFFFFFFFFFFFFFFF8);
            *(unsigned char *)(v86 + v140) = v87[v140];
            char v119 = 2;
            break;
          case 3u:
LABEL_175:
            *(void *)uint64_t v86 = *(void *)v87;
            *(void *)(v86 + 8) = *((void *)v87 + 1);
            uint64_t v122 = (v148 + v86) & v147;
            unint64_t v123 = (unint64_t)&v87[v148] & v147;
            uint64_t v153 = *(void (**)(uint64_t, unint64_t, uint64_t))(v151 + 16);
            swift_bridgeObjectRetain();
            v153(v122, v123, v154);
            uint64_t v124 = (v150 + v122) & v159;
            v85(v124, (v150 + v123) & v159, v162);
            *(void *)((v145 + v124) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v145 + ((v150 + v123) & v159)) & 0xFFFFFFFFFFFFFFF8);
            char v119 = 3;
            break;
          default:
LABEL_172:
            char v119 = 0;
            *(_WORD *)uint64_t v86 = *(_WORD *)v87;
            break;
        }
        uint64_t v13 = (uint64_t)v136;
        uint64_t v12 = v139;
        *(unsigned char *)(v86 + v161) = v119;
        char v102 = 1;
      }
      *((unsigned char *)v71 + v23) = v102;
      goto LABEL_178;
    }
    memcpy((void *)(((v11 | v10) + v23 + 1) & v12), (const void *)(((v14 | v10) + v23 + 1) & v12), v23 + 1);
  }
  else if (v74 > 2)
  {
    uint64_t v92 = v5;
    unint64_t v93 = (unsigned __int8 *)v13;
    if (v73 == 2)
    {
      (*(void (**)(void *, uint64_t))(v6 + 8))(v71, v162);
    }
    else if (v73 == 1)
    {
      uint64_t v94 = v34;
      swift_bridgeObjectRelease();
      uint64_t v95 = v6;
      unint64_t v96 = ((unint64_t)v71 + v155) & v159;
      uint64_t v146 = *(void (**)(unint64_t, uint64_t))(v95 + 8);
      v146(v96, v162);
      uint64_t v97 = (unsigned __int8 *)((v156 + v10 + v96) & v12);
      unsigned int v98 = v97[v94];
      unsigned int v99 = v98 - 4;
      if (v98 >= 4)
      {
        if (v94 <= 3) {
          uint64_t v100 = v94;
        }
        else {
          uint64_t v100 = 4;
        }
        switch(v100)
        {
          case 1:
            int v101 = *v97;
            goto LABEL_131;
          case 2:
            int v101 = *(unsigned __int16 *)v97;
            goto LABEL_131;
          case 3:
            int v101 = *(unsigned __int16 *)v97 | (*(unsigned __int8 *)(((v156 + v10 + v96) & v12) + 2) << 16);
            goto LABEL_131;
          case 4:
            int v101 = *(_DWORD *)v97;
LABEL_131:
            int v104 = (v101 | (v99 << (8 * v94))) + 4;
            unsigned int v98 = v101 + 4;
            if (v94 < 4) {
              unsigned int v98 = v104;
            }
            break;
          default:
            break;
        }
      }
      if (v98 >= 2)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v151 + 8))((unint64_t)&v97[v148] & v147, v154);
        v146((v150 + ((unint64_t)&v97[v148] & v147)) & v159, v162);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    memcpy(v71, v72, v70);
    uint64_t v13 = (uint64_t)v93;
    uint64_t v5 = v92;
  }
  else if (v71 != v72)
  {
    unint64_t v136 = (unsigned __int8 *)v13;
    uint64_t v161 = v34;
    if (v73 == 2)
    {
      uint64_t v76 = v12;
      uint64_t v75 = v6;
      (*(void (**)(unint64_t, uint64_t))(v6 + 8))(((v11 | v10) + v23 + 1) & v12, v162);
    }
    else if (v73 == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v75 = v6;
      unint64_t v143 = *(void (**)(unint64_t, uint64_t))(v6 + 8);
      v143(((unint64_t)v71 + v155) & v159, v162);
      uint64_t v76 = v12;
      unint64_t v77 = (unsigned __int8 *)((v156 + v10 + (((unint64_t)v71 + v155) & v159)) & v12);
      unsigned int v78 = v77[v161];
      unsigned int v79 = v78 - 4;
      if (v78 >= 4)
      {
        if (v161 <= 3) {
          uint64_t v80 = v161;
        }
        else {
          uint64_t v80 = 4;
        }
        switch(v80)
        {
          case 1:
            int v81 = *v77;
            goto LABEL_139;
          case 2:
            int v81 = *(unsigned __int16 *)v77;
            goto LABEL_139;
          case 3:
            int v81 = *(unsigned __int16 *)v77 | (v77[2] << 16);
            goto LABEL_139;
          case 4:
            int v81 = *(_DWORD *)v77;
LABEL_139:
            int v105 = (v81 | (v79 << (8 * v161))) + 4;
            unsigned int v78 = v81 + 4;
            if (v161 < 4) {
              unsigned int v78 = v105;
            }
            break;
          default:
            break;
        }
      }
      if (v78 >= 2)
      {
        swift_bridgeObjectRelease();
        unint64_t v106 = (unint64_t)&v77[v148] & v147;
        (*(void (**)(unint64_t, uint64_t))(v151 + 8))(v106, v154);
        v143((v150 + v106) & v159, v162);
      }
    }
    else
    {
      uint64_t v75 = v6;
      uint64_t v76 = v12;
      swift_bridgeObjectRelease();
    }
    unsigned int v107 = *((unsigned __int8 *)v72 + v23);
    unsigned int v108 = v107 - 3;
    if (v107 < 3)
    {
      uint64_t v12 = v76;
    }
    else
    {
      if (v23 <= 3) {
        uint64_t v109 = v23;
      }
      else {
        uint64_t v109 = 4;
      }
      uint64_t v12 = v76;
      switch(v109)
      {
        case 1:
          int v110 = *(unsigned __int8 *)v72;
          goto LABEL_153;
        case 2:
          int v110 = *(unsigned __int16 *)v72;
          goto LABEL_153;
        case 3:
          int v110 = *(unsigned __int16 *)v72 | (*((unsigned __int8 *)v72 + 2) << 16);
          goto LABEL_153;
        case 4:
          int v110 = *(_DWORD *)v72;
LABEL_153:
          int v111 = (v110 | (v108 << (8 * v23))) + 3;
          unsigned int v107 = v110 + 3;
          if (v23 < 4) {
            unsigned int v107 = v111;
          }
          break;
        default:
          break;
      }
    }
    if (v107 == 2)
    {
      (*(void (**)(void *, void *, uint64_t))(v75 + 16))(v71, v72, v162);
      *(_OWORD *)(((unint64_t)v71 + v145) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v72 + v145) & 0xFFFFFFFFFFFFFFF8);
      *((unsigned char *)v71 + v23) = 2;
    }
    else
    {
      if (v107 == 1)
      {
        *unint64_t v71 = *v72;
        v71[1] = v72[1];
        unint64_t v112 = ((unint64_t)v71 + v155) & v159;
        unint64_t v113 = ((unint64_t)v72 + v155) & v159;
        uint64_t v85 = *(void (**)(unint64_t, unint64_t, uint64_t))(v75 + 16);
        swift_bridgeObjectRetain();
        v85(v112, v113, v162);
        uint64_t v86 = (v156 + v10 + v112) & v12;
        uint64_t v139 = v12;
        unint64_t v87 = (unsigned __int8 *)((v156 + v10 + v113) & v12);
        unsigned int v114 = v87[v161];
        unsigned int v115 = v114 - 4;
        if (v114 >= 4)
        {
          if (v161 <= 3) {
            uint64_t v116 = v161;
          }
          else {
            uint64_t v116 = 4;
          }
          switch(v116)
          {
            case 1:
              int v117 = *v87;
              goto LABEL_169;
            case 2:
              int v117 = *(unsigned __int16 *)v87;
              goto LABEL_169;
            case 3:
              int v117 = *(unsigned __int16 *)v87 | (v87[2] << 16);
              goto LABEL_169;
            case 4:
              int v117 = *(_DWORD *)v87;
LABEL_169:
              int v118 = (v117 | (v115 << (8 * v161))) + 4;
              unsigned int v114 = v117 + 4;
              if (v161 < 4) {
                unsigned int v114 = v118;
              }
              break;
            default:
              break;
          }
        }
        switch(v114)
        {
          case 1u:
            goto LABEL_173;
          case 2u:
            goto LABEL_174;
          case 3u:
            goto LABEL_175;
          default:
            goto LABEL_172;
        }
      }
      *unint64_t v71 = *v72;
      v71[1] = v72[1];
      *((unsigned char *)v71 + v23) = 0;
      swift_bridgeObjectRetain();
    }
    uint64_t v13 = (uint64_t)v136;
  }
LABEL_178:
  uint64_t v125 = *(void *)(*(void *)(v158 + 16) - 8);
  uint64_t v126 = v125 + 24;
  uint64_t v127 = *(unsigned __int8 *)(v125 + 80);
  size_t v128 = ((v70 + v10) & v12) + v70 + v127;
  unint64_t v129 = (v128 + v13) & ~v127;
  size_t v130 = (v128 + v157) & ~v127;
  (*(void (**)(unint64_t, size_t))(v125 + 24))(v129, v130);
  *(unsigned char *)(*(void *)(v126 + 40) + v129) = *(unsigned char *)(*(void *)(v126 + 40) + v130);
  return v5;
}

_OWORD *sub_22EC07A14(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = sub_22EE7F6E0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v99 = v7;
  uint64_t v100 = v6;
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = sub_22EE7F5D0();
  uint64_t v89 = *(void *)(v9 - 8);
  uint64_t v90 = v9;
  uint64_t v10 = *(unsigned __int8 *)(v89 + 80);
  uint64_t v11 = v8 | v10 | 7;
  unsigned int v98 = a1;
  unint64_t v12 = (unint64_t)a1 + v11 + 32;
  uint64_t v13 = (_OWORD *)(v12 & ~v11);
  unint64_t v14 = (unint64_t)a2 + v11 + 32;
  uint64_t v15 = (unsigned __int8 *)(v14 & ~v11);
  uint64_t v16 = v8 + 16;
  uint64_t v17 = *(void *)(v7 + 64);
  uint64_t v93 = v11 + v17;
  uint64_t v18 = (v11 + v17 + ((v8 + 16) & ~v8)) & ~v11;
  uint64_t v87 = v10 + 16;
  uint64_t v88 = *(void *)(v89 + 64) + v8;
  uint64_t v19 = v17 + 7;
  unint64_t v20 = (v17 + 7 + ((v88 + ((v10 + 16) & ~v10)) & ~v8)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = v20 + 8;
  unint64_t v22 = v20 + 9;
  unint64_t v83 = v21;
  if (v22 <= v21) {
    unint64_t v22 = v21;
  }
  if (v22 <= 2) {
    uint64_t v23 = 2;
  }
  else {
    uint64_t v23 = v22;
  }
  if (v23 + v18 + 1 > (v19 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v24 = v23 + v18 + 1;
  }
  else {
    unint64_t v24 = (v19 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v24 <= 0x10) {
    uint64_t v25 = 16;
  }
  else {
    uint64_t v25 = v24;
  }
  unsigned int v26 = v15[v25];
  unsigned int v27 = v26 - 3;
  if (v26 >= 3)
  {
    if (v25 <= 3) {
      uint64_t v28 = v25;
    }
    else {
      uint64_t v28 = 4;
    }
    switch(v28)
    {
      case 1:
        int v29 = *v15;
        goto LABEL_21;
      case 2:
        int v29 = *(unsigned __int16 *)v15;
        goto LABEL_21;
      case 3:
        int v29 = *(unsigned __int16 *)v15 | (*(unsigned __int8 *)((v14 & ~v11) + 2) << 16);
        goto LABEL_21;
      case 4:
        int v29 = *(_DWORD *)v15;
LABEL_21:
        int v30 = (v29 | (v27 << (8 * v25))) + 3;
        unsigned int v26 = v29 + 3;
        if (v25 < 4) {
          unsigned int v26 = v30;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v31 = ~v11;
  uint64_t v96 = ~v8;
  uint64_t v86 = ~v10;
  uint64_t v101 = v12 & ~v11;
  uint64_t v84 = v8 + 16;
  if (v26 == 2)
  {
    uint64_t v40 = v23;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 32))(v12 & ~v11, v14 & ~v11, v100);
    uint64_t v23 = v40;
    *(_OWORD *)(((unint64_t)v13 + v19) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v15[v19] & 0xFFFFFFFFFFFFFFF8);
    char v41 = 2;
  }
  else if (v26 == 1)
  {
    *uint64_t v13 = *(_OWORD *)v15;
    unint64_t v32 = ((unint64_t)v13 + v16) & v96;
    unint64_t v33 = (unint64_t)&v15[v16] & v96;
    uint64_t v91 = v23;
    uint64_t v82 = *(void (**)(void))(v99 + 32);
    ((void (*)(unint64_t, unint64_t, uint64_t))v82)(v32, v33, v100);
    uint64_t v23 = v91;
    uint64_t v34 = (unsigned char *)((v93 + v32) & v31);
    unint64_t v35 = (unsigned __int8 *)((v93 + v33) & v31);
    unsigned int v36 = v35[v91];
    unsigned int v37 = v36 - 4;
    if (v36 >= 4)
    {
      if (v91 <= 3) {
        uint64_t v38 = v91;
      }
      else {
        uint64_t v38 = 4;
      }
      switch(v38)
      {
        case 1:
          int v39 = *v35;
          goto LABEL_36;
        case 2:
          int v39 = *(unsigned __int16 *)v35;
          goto LABEL_36;
        case 3:
          int v39 = *(unsigned __int16 *)v35 | (*(unsigned __int8 *)(((v93 + v33) & v31) + 2) << 16);
          goto LABEL_36;
        case 4:
          int v39 = *(_DWORD *)v35;
LABEL_36:
          int v42 = (v39 | (v37 << (8 * v91))) + 4;
          unsigned int v36 = v39 + 4;
          if (v91 < 4) {
            unsigned int v36 = v42;
          }
          break;
        default:
          break;
      }
    }
    switch(v36)
    {
      case 1u:
        *uint64_t v34 = *v35;
        char v43 = 1;
        break;
      case 2u:
        *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
        unint64_t v79 = (unint64_t)&v34[v87] & v86;
        uint64_t v80 = v34;
        (*(void (**)(void))(v89 + 32))();
        v82();
        uint64_t v34 = v80;
        uint64_t v23 = v91;
        *(void *)((v19 + ((v88 + v79) & v96)) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v19
                                                                                     + ((v88
                                                                                       + ((unint64_t)&v35[v87] & v86)) & v96)) & 0xFFFFFFFFFFFFFFF8);
        v80[v83] = v35[v83];
        char v43 = 2;
        break;
      case 3u:
        *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
        unint64_t v44 = (unint64_t)&v35[v87] & v86;
        unint64_t v45 = (unint64_t)&v34[v87] & v86;
        int v81 = v34;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v89 + 32))(v45, v44, v90);
        unint64_t v46 = (v88 + v45) & v96;
        unint64_t v47 = (v88 + v44) & v96;
        ((void (*)(unint64_t, unint64_t, uint64_t))v82)(v46, v47, v100);
        uint64_t v34 = v81;
        uint64_t v23 = v91;
        *(void *)((v19 + v46) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v19 + v47) & 0xFFFFFFFFFFFFFFF8);
        char v43 = 3;
        break;
      default:
        char v43 = 0;
        *(_WORD *)uint64_t v34 = *(_WORD *)v35;
        break;
    }
    uint64_t v13 = (_OWORD *)(v12 & ~v11);
    v34[v23] = v43;
    char v41 = 1;
  }
  else
  {
    char v41 = 0;
    *uint64_t v13 = *(_OWORD *)v15;
  }
  *((unsigned char *)v13 + v25) = v41;
  uint64_t v48 = v25 + 1;
  uint64_t v49 = (_OWORD *)(((v12 | v11) + v25 + 1) & v31);
  int v50 = (_OWORD *)(((v14 | v11) + v25 + 1) & v31);
  unsigned int v51 = *((unsigned __int8 *)v50 + v25);
  if (v51 > 2)
  {
    memcpy((void *)(((v12 | v11) + v25 + 1) & v31), v50, v25 + 1);
LABEL_56:
    uint64_t v61 = a3;
    uint64_t v62 = v98;
    goto LABEL_57;
  }
  if (v51 == 2)
  {
    (*(void (**)(unint64_t, _OWORD *, uint64_t))(v99 + 32))(((v12 | v11) + v25 + 1) & v31, v50, v100);
    *(_OWORD *)(((unint64_t)v49 + v19) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v50 + v19) & 0xFFFFFFFFFFFFFFF8);
    *((unsigned char *)v49 + v25) = 2;
    goto LABEL_56;
  }
  if (v51 != 1)
  {
    _OWORD *v49 = *v50;
    *((unsigned char *)v49 + v25) = 0;
    goto LABEL_56;
  }
  _OWORD *v49 = *v50;
  unint64_t v52 = ((unint64_t)v49 + v84) & v96;
  unint64_t v53 = ((unint64_t)v50 + v84) & v96;
  uint64_t v92 = v23;
  uint64_t v85 = *(void (**)(unint64_t, unint64_t, uint64_t))(v99 + 32);
  v85(v52, v53, v100);
  uint64_t v54 = v92;
  uint64_t v55 = (unsigned char *)((v93 + v52) & v31);
  unsigned int v56 = (unsigned __int8 *)((v93 + v53) & v31);
  unsigned int v57 = v56[v92];
  unsigned int v58 = v57 - 4;
  if (v57 >= 4)
  {
    if (v92 <= 3) {
      uint64_t v59 = v92;
    }
    else {
      uint64_t v59 = 4;
    }
    switch(v59)
    {
      case 1:
        int v60 = *v56;
        goto LABEL_61;
      case 2:
        int v60 = *(unsigned __int16 *)v56;
        goto LABEL_61;
      case 3:
        int v60 = *(unsigned __int16 *)v56 | (*(unsigned __int8 *)(((v93 + v53) & v31) + 2) << 16);
        goto LABEL_61;
      case 4:
        int v60 = *(_DWORD *)v56;
LABEL_61:
        int v71 = (v60 | (v58 << (8 * v92))) + 4;
        unsigned int v57 = v60 + 4;
        if (v92 < 4) {
          unsigned int v57 = v71;
        }
        break;
      default:
        break;
    }
  }
  switch(v57)
  {
    case 1u:
      *uint64_t v55 = *v56;
      char v72 = 1;
      break;
    case 2u:
      *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
      unint64_t v73 = (unint64_t)&v55[v87] & v86;
      uint64_t v94 = (unsigned char *)((v93 + v52) & v31);
      (*(void (**)(unint64_t))(v89 + 32))(v73);
      unint64_t v74 = (v88 + v73) & v96;
      unint64_t v75 = (v88 + ((unint64_t)&v56[v87] & v86)) & v96;
      v85(v74, v75, v100);
      uint64_t v54 = v92;
      uint64_t v55 = v94;
      *(void *)((v19 + v74) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v19 + v75) & 0xFFFFFFFFFFFFFFF8);
      v94[v83] = v56[v83];
      char v72 = 2;
      break;
    case 3u:
      *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
      unint64_t v76 = (unint64_t)&v55[v87] & v86;
      unint64_t v77 = (unint64_t)&v56[v87] & v86;
      uint64_t v95 = (unsigned char *)((v93 + v52) & v31);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v89 + 32))(v76, v77, v90);
      unint64_t v78 = (v88 + v76) & v96;
      v85(v78, (v88 + v77) & v96, v100);
      uint64_t v54 = v92;
      uint64_t v55 = v95;
      *(void *)((v19 + v78) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v19 + ((v88 + v77) & v96)) & 0xFFFFFFFFFFFFFFF8);
      char v72 = 3;
      break;
    default:
      char v72 = 0;
      *(_WORD *)uint64_t v55 = *(_WORD *)v56;
      break;
  }
  uint64_t v61 = a3;
  uint64_t v62 = v98;
  v55[v54] = v72;
  *((unsigned char *)v49 + v25) = 1;
LABEL_57:
  uint64_t v63 = (v48 + v11) & v31;
  uint64_t v64 = *(void *)(*(void *)(v61 + 16) - 8);
  uint64_t v65 = v64 + 32;
  uint64_t v66 = *(unsigned __int8 *)(v64 + 80);
  uint64_t v67 = v63 + v48 + v66;
  uint64_t v68 = (v67 + v101) & ~v66;
  unint64_t v69 = (unint64_t)&v15[v67] & ~v66;
  (*(void (**)(uint64_t, unint64_t))(v64 + 32))(v68, v69);
  *(unsigned char *)(*(void *)(v65 + 32) + v68) = *(unsigned char *)(*(void *)(v65 + 32) + v69);
  return v62;
}

uint64_t sub_22EC082C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v154 = sub_22EE7F6E0();
  uint64_t v7 = *(void *)(v154 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v141 = sub_22EE7F5D0();
  uint64_t v9 = *(void *)(v141 - 8);
  uint64_t v10 = v9;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = v8 | v11 | 7;
  uint64_t v13 = v12 + 32 + a1;
  uint64_t v14 = ~v12;
  uint64_t v15 = v13 & ~v12;
  uint64_t v16 = v12 + 32 + a2;
  uint64_t v17 = v16 & ~v12;
  uint64_t v152 = v17;
  uint64_t v155 = ~v12;
  uint64_t v153 = v7;
  uint64_t v149 = a3;
  if (v15 != v17)
  {
    uint64_t v142 = v8 + 16;
    uint64_t v18 = *(void *)(v7 + 64);
    uint64_t v19 = (v12 + ((v8 + 16) & ~v8) + v18) & v14;
    uint64_t v139 = v11 + 16;
    uint64_t v140 = *(void *)(v9 + 64) + v8;
    uint64_t v147 = v18;
    uint64_t v20 = v18 + 7;
    unint64_t v21 = (v20 + ((v140 + ((v11 + 16) & ~v11)) & ~v8)) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v22 = v21 + 8;
    unint64_t v23 = v21 + 9;
    unint64_t v136 = v22;
    uint64_t v137 = v20;
    if (v23 <= v22) {
      unint64_t v23 = v22;
    }
    if (v23 <= 2) {
      unint64_t v23 = 2;
    }
    unint64_t v151 = v23;
    unint64_t v24 = (v19 | 1) + v23;
    if (v24 <= (v20 & 0xFFFFFFFFFFFFFFF8) + 16) {
      unint64_t v24 = (v20 & 0xFFFFFFFFFFFFFFF8) + 16;
    }
    if (v24 <= 0x10) {
      uint64_t v25 = 16;
    }
    else {
      uint64_t v25 = v24;
    }
    unsigned int v26 = *(unsigned __int8 *)(v15 + v25);
    unsigned int v27 = v26 - 3;
    if (v26 >= 3)
    {
      if (v25 <= 3) {
        uint64_t v28 = v25;
      }
      else {
        uint64_t v28 = 4;
      }
      switch(v28)
      {
        case 1:
          int v29 = *(unsigned __int8 *)v15;
          goto LABEL_29;
        case 2:
          int v29 = *(unsigned __int16 *)v15;
          goto LABEL_29;
        case 3:
          int v29 = *(unsigned __int16 *)v15 | (*(unsigned __int8 *)((v13 & ~v12) + 2) << 16);
          goto LABEL_29;
        case 4:
          int v29 = *(_DWORD *)v15;
LABEL_29:
          if (v25 < 4) {
            unsigned int v26 = (v29 | (v27 << (8 * v25))) + 3;
          }
          else {
            unsigned int v26 = v29 + 3;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v150 = ~v8;
    uint64_t v138 = ~v11;
    uint64_t v145 = v10;
    if (v26 == 2)
    {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v13 & ~v12, v154);
    }
    else if (v26 == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
      v38((v142 + v15) & v150, v154);
      int v39 = (unsigned __int8 *)((((v142 + v15) & v150) + v12 + v147) & v155);
      unsigned int v40 = v39[v151];
      unsigned int v41 = v40 - 4;
      if (v40 < 4)
      {
        uint64_t v17 = v16 & ~v12;
      }
      else
      {
        if (v151 <= 3) {
          uint64_t v42 = v151;
        }
        else {
          uint64_t v42 = 4;
        }
        uint64_t v17 = v16 & ~v12;
        switch(v42)
        {
          case 1:
            int v43 = *v39;
            goto LABEL_46;
          case 2:
            int v43 = *(unsigned __int16 *)v39;
            goto LABEL_46;
          case 3:
            int v43 = *(unsigned __int16 *)v39 | (v39[2] << 16);
            goto LABEL_46;
          case 4:
            int v43 = *(_DWORD *)v39;
LABEL_46:
            int v44 = (v43 | (v41 << (8 * v151))) + 4;
            unsigned int v40 = v43 + 4;
            if (v151 < 4) {
              unsigned int v40 = v44;
            }
            break;
          default:
            break;
        }
      }
      if (v40 >= 2)
      {
        if (v40 == 3)
        {
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v145 + 8))((unint64_t)&v39[v139] & v138, v141);
          uint64_t v17 = v16 & ~v12;
          v38((v140 + ((unint64_t)&v39[v139] & v138)) & v150, v154);
        }
        else
        {
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v145 + 8))((unint64_t)&v39[v139] & v138, v141);
          v38((v140 + ((unint64_t)&v39[v139] & v138)) & v150, v154);
          uint64_t v17 = v16 & ~v12;
        }
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    unsigned int v45 = *(unsigned __int8 *)(v17 + v25);
    unsigned int v46 = v45 - 3;
    if (v45 < 3)
    {
      uint64_t v48 = v153;
    }
    else
    {
      if (v25 <= 3) {
        uint64_t v47 = v25;
      }
      else {
        uint64_t v47 = 4;
      }
      uint64_t v48 = v153;
      switch(v47)
      {
        case 1:
          int v49 = *(unsigned __int8 *)v17;
          goto LABEL_62;
        case 2:
          int v49 = *(unsigned __int16 *)v17;
          goto LABEL_62;
        case 3:
          int v49 = *(unsigned __int16 *)v17 | (*(unsigned __int8 *)(v17 + 2) << 16);
          goto LABEL_62;
        case 4:
          int v49 = *(_DWORD *)v17;
LABEL_62:
          if (v25 < 4) {
            unsigned int v45 = (v49 | (v46 << (8 * v25))) + 3;
          }
          else {
            unsigned int v45 = v49 + 3;
          }
          break;
        default:
          break;
      }
    }
    if (v45 == 2)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 32))(v13 & ~v12, v17, v154);
      *(_OWORD *)(((v15 | 7) + v147) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((v17 | 7) + v147) & 0xFFFFFFFFFFFFFFF8);
      *(unsigned char *)(v15 + v25) = 2;
    }
    else
    {
      if (v45 == 1)
      {
        *(_OWORD *)uint64_t v15 = *(_OWORD *)v17;
        unint64_t v50 = (v142 + v17) & v150;
        unint64_t v134 = *(void (**)(uint64_t, unint64_t, uint64_t))(v48 + 32);
        v134((v142 + v15) & v150, v50, v154);
        unsigned int v51 = (unsigned char *)((((v142 + v15) & v150) + v12 + v147) & v155);
        unint64_t v52 = (unsigned __int8 *)((v50 + v12 + v147) & v155);
        unint64_t v53 = v151;
        unsigned int v54 = v52[v151];
        unsigned int v55 = v54 - 4;
        if (v54 >= 4)
        {
          if (v151 <= 3) {
            uint64_t v56 = v151;
          }
          else {
            uint64_t v56 = 4;
          }
          switch(v56)
          {
            case 1:
              int v57 = *v52;
              goto LABEL_79;
            case 2:
              int v57 = *(unsigned __int16 *)v52;
              goto LABEL_79;
            case 3:
              int v57 = *(unsigned __int16 *)v52 | (*(unsigned __int8 *)(((v50 + v12 + v147) & v155) + 2) << 16);
              goto LABEL_79;
            case 4:
              int v57 = *(_DWORD *)v52;
LABEL_79:
              if (v151 < 4) {
                unsigned int v54 = (v57 | (v55 << (8 * v151))) + 4;
              }
              else {
                unsigned int v54 = v57 + 4;
              }
              break;
            default:
              break;
          }
        }
        switch(v54)
        {
          case 1u:
            *unsigned int v51 = *v52;
            char v58 = 1;
            break;
          case 2u:
            *(_OWORD *)unsigned int v51 = *(_OWORD *)v52;
            unint64_t v59 = (unint64_t)&v51[v139] & v138;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v145 + 32))(v59, (unint64_t)&v52[v139] & v138, v141);
            unint64_t v60 = (v140 + v59) & v150;
            unint64_t v61 = (v140 + ((unint64_t)&v52[v139] & v138)) & v150;
            v134(v60, v61, v154);
            unsigned int v51 = (unsigned char *)((((v142 + v15) & v150) + v12 + v147) & v155);
            unint64_t v53 = v151;
            *(void *)((v137 + v60) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v137 + v61) & 0xFFFFFFFFFFFFFFF8);
            v51[v136] = v52[v136];
            char v58 = 2;
            break;
          case 3u:
            *(_OWORD *)unsigned int v51 = *(_OWORD *)v52;
            unint64_t v62 = (unint64_t)&v51[v139] & v138;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v145 + 32))(v62, (unint64_t)&v52[v139] & v138, v141);
            unint64_t v63 = (v140 + v62) & v150;
            unint64_t v64 = (v140 + ((unint64_t)&v52[v139] & v138)) & v150;
            v134(v63, v64, v154);
            unsigned int v51 = (unsigned char *)((((v142 + v15) & v150) + v12 + v147) & v155);
            unint64_t v53 = v151;
            *(void *)((v137 + v63) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v137 + v64) & 0xFFFFFFFFFFFFFFF8);
            char v58 = 3;
            break;
          default:
            char v58 = 0;
            *(_WORD *)unsigned int v51 = *(_WORD *)v52;
            break;
        }
        uint64_t v14 = ~v12;
        v51[v53] = v58;
        *(unsigned char *)(v15 + v25) = 1;
        goto LABEL_88;
      }
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v17;
      *(unsigned char *)(v15 + v25) = 0;
    }
    uint64_t v14 = ~v12;
LABEL_88:
    uint64_t v10 = v145;
    goto LABEL_89;
  }
  uint64_t v30 = *(void *)(v7 + 64);
  uint64_t v31 = *(void *)(v9 + 64);
  uint64_t v150 = ~v8;
  uint64_t v142 = v8 + 16;
  uint64_t v138 = ~v11;
  uint64_t v139 = v11 + 16;
  uint64_t v140 = v31 + v8;
  uint64_t v147 = v30;
  uint64_t v32 = v30 + 7;
  unint64_t v33 = (v30 + 7 + ((v31 + v8 + ((v11 + 16) & ~v11)) & ~v8)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = v33 + 8;
  unint64_t v35 = v33 + 9;
  unint64_t v136 = v34;
  uint64_t v137 = v30 + 7;
  if (v35 <= v34) {
    unint64_t v35 = v34;
  }
  uint64_t v36 = 2;
  if (v35 > 2) {
    uint64_t v36 = v35;
  }
  unint64_t v151 = v36;
  unint64_t v37 = ((v12 + ((v8 + 16) & ~v8) + v30) & v14 | 1) + v36;
  if (v37 <= (v32 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v37 = (v32 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v37 <= 0x10) {
    uint64_t v25 = 16;
  }
  else {
    uint64_t v25 = v37;
  }
LABEL_89:
  size_t v65 = v25 + 1;
  uint64_t v66 = (_OWORD *)(((v13 | v12) + v25 + 1) & v14);
  uint64_t v67 = (unsigned __int8 *)(((v16 | v12) + v25 + 1) & v14);
  unsigned int v68 = *((unsigned __int8 *)v66 + v25);
  unsigned int v69 = v67[v25];
  if (v68 > 2)
  {
    if (v69 <= 2)
    {
      if (v69 == 2)
      {
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v153 + 32))(((v13 | v12) + v25 + 1) & v14, v67, v154);
        uint64_t v14 = ~v12;
        *(_OWORD *)(((unint64_t)v66 + v137) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v67[v137] & 0xFFFFFFFFFFFFFFF8);
        char v95 = 2;
LABEL_185:
        *((unsigned char *)v66 + v25) = v95;
        goto LABEL_186;
      }
      if (v69 == 1)
      {
        uint64_t v76 = v10;
        *uint64_t v66 = *(_OWORD *)v67;
        unint64_t v77 = ((unint64_t)v66 + v142) & v150;
        unint64_t v78 = (unint64_t)&v67[v142] & v150;
        uint64_t v79 = v14;
        unint64_t v143 = *(void (**)(unint64_t, unint64_t, uint64_t))(v153 + 32);
        v143(v77, v78, v154);
        uint64_t v80 = (unsigned char *)((v147 + v12 + v77) & v79);
        int v81 = (unsigned __int8 *)((v147 + v12 + v78) & v79);
        unsigned int v82 = v81[v151];
        unsigned int v83 = v82 - 4;
        if (v82 < 4)
        {
          uint64_t v85 = v76;
        }
        else
        {
          if (v151 <= 3) {
            uint64_t v84 = v151;
          }
          else {
            uint64_t v84 = 4;
          }
          uint64_t v85 = v76;
          switch(v84)
          {
            case 1:
              int v86 = *v81;
              goto LABEL_127;
            case 2:
              int v86 = *(unsigned __int16 *)v81;
              goto LABEL_127;
            case 3:
              int v86 = *(unsigned __int16 *)v81 | (v81[2] << 16);
              goto LABEL_127;
            case 4:
              int v86 = *(_DWORD *)v81;
LABEL_127:
              int v96 = (v86 | (v83 << (8 * v151))) + 4;
              unsigned int v82 = v86 + 4;
              if (v151 < 4) {
                unsigned int v82 = v96;
              }
              break;
            default:
              break;
          }
        }
        switch(v82)
        {
          case 1u:
            *uint64_t v80 = *v81;
            char v97 = 1;
            break;
          case 2u:
            *(_OWORD *)uint64_t v80 = *(_OWORD *)v81;
            unint64_t v98 = (unint64_t)&v80[v139] & v138;
            uint64_t v148 = v80;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v85 + 32))(v98, (unint64_t)&v81[v139] & v138, v141);
            unint64_t v99 = (v140 + v98) & v150;
            unint64_t v100 = (v140 + ((unint64_t)&v81[v139] & v138)) & v150;
            v143(v99, v100, v154);
            uint64_t v80 = v148;
            *(void *)((v137 + v99) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v137 + v100) & 0xFFFFFFFFFFFFFFF8);
            v148[v136] = v81[v136];
            char v97 = 2;
            break;
          case 3u:
            *(_OWORD *)uint64_t v80 = *(_OWORD *)v81;
            unint64_t v101 = (unint64_t)&v80[v139] & v138;
            unint64_t v102 = (unint64_t)&v81[v139] & v138;
            int v103 = v80;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v85 + 32))(v101, v102, v141);
            unint64_t v104 = (v140 + v101) & v150;
            v143(v104, (v140 + v102) & v150, v154);
            uint64_t v80 = v103;
            *(void *)((v137 + v104) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v137 + ((v140 + v102) & v150)) & 0xFFFFFFFFFFFFFFF8);
            char v97 = 3;
            break;
          default:
            char v97 = 0;
            *(_WORD *)uint64_t v80 = *(_WORD *)v81;
            break;
        }
        uint64_t v14 = ~v12;
        v80[v151] = v97;
        goto LABEL_184;
      }
      *uint64_t v66 = *(_OWORD *)v67;
      *((unsigned char *)v66 + v25) = 0;
      goto LABEL_186;
    }
LABEL_142:
    memcpy(v66, v67, v65);
LABEL_143:
    uint64_t v14 = ~v12;
    goto LABEL_186;
  }
  if (v69 > 2)
  {
    if (v68 == 2)
    {
      (*(void (**)(uint64_t, uint64_t))(v153 + 8))(((v13 | v12) + v25 + 1) & v14, v154);
    }
    else if (v68 == 1)
    {
      uint64_t v87 = v10;
      uint64_t v88 = v14;
      swift_bridgeObjectRelease();
      uint64_t v89 = *(void (**)(unint64_t, uint64_t))(v153 + 8);
      v89(((unint64_t)v66 + v142) & v150, v154);
      uint64_t v90 = (unsigned __int8 *)((v147 + v12 + (((unint64_t)v66 + v142) & v150)) & v88);
      unsigned int v91 = v90[v151];
      unsigned int v92 = v91 - 4;
      if (v91 >= 4)
      {
        if (v151 <= 3) {
          uint64_t v93 = v151;
        }
        else {
          uint64_t v93 = 4;
        }
        switch(v93)
        {
          case 1:
            int v94 = *v90;
            goto LABEL_138;
          case 2:
            int v94 = *(unsigned __int16 *)v90;
            goto LABEL_138;
          case 3:
            int v94 = *(unsigned __int16 *)v90 | (v90[2] << 16);
            goto LABEL_138;
          case 4:
            int v94 = *(_DWORD *)v90;
LABEL_138:
            int v105 = (v94 | (v92 << (8 * v151))) + 4;
            unsigned int v91 = v94 + 4;
            if (v151 < 4) {
              unsigned int v91 = v105;
            }
            break;
          default:
            break;
        }
      }
      if (v91 >= 2)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v87 + 8))((unint64_t)&v90[v139] & v138, v141);
        v89((v140 + ((unint64_t)&v90[v139] & v138)) & v150, v154);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    goto LABEL_142;
  }
  if (v66 != (_OWORD *)v67)
  {
    uint64_t v146 = v10;
    if (v68 == 2)
    {
      (*(void (**)(uint64_t, uint64_t))(v153 + 8))(((v13 | v12) + v25 + 1) & v14, v154);
    }
    else if (v68 == 1)
    {
      uint64_t v70 = v14;
      swift_bridgeObjectRelease();
      unint64_t v135 = *(void (**)(unint64_t, uint64_t))(v153 + 8);
      v135(((unint64_t)v66 + v142) & v150, v154);
      int v71 = (unsigned __int8 *)((v147 + v12 + (((unint64_t)v66 + v142) & v150)) & v70);
      unsigned int v72 = v71[v151];
      unsigned int v73 = v72 - 4;
      if (v72 >= 4)
      {
        if (v151 <= 3) {
          uint64_t v74 = v151;
        }
        else {
          uint64_t v74 = 4;
        }
        switch(v74)
        {
          case 1:
            int v75 = *v71;
            goto LABEL_147;
          case 2:
            int v75 = *(unsigned __int16 *)v71;
            goto LABEL_147;
          case 3:
            int v75 = *(unsigned __int16 *)v71 | (v71[2] << 16);
            goto LABEL_147;
          case 4:
            int v75 = *(_DWORD *)v71;
LABEL_147:
            int v106 = (v75 | (v73 << (8 * v151))) + 4;
            unsigned int v72 = v75 + 4;
            if (v151 < 4) {
              unsigned int v72 = v106;
            }
            break;
          default:
            break;
        }
      }
      if (v72 >= 2)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v146 + 8))((unint64_t)&v71[v139] & v138, v141);
        v135((v140 + ((unint64_t)&v71[v139] & v138)) & v150, v154);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    unsigned int v107 = v67[v25];
    unsigned int v108 = v107 - 3;
    if (v107 >= 3)
    {
      if (v25 <= 3) {
        uint64_t v109 = v25;
      }
      else {
        uint64_t v109 = 4;
      }
      switch(v109)
      {
        case 1:
          int v110 = *v67;
          goto LABEL_160;
        case 2:
          int v110 = *(unsigned __int16 *)v67;
          goto LABEL_160;
        case 3:
          int v110 = *(unsigned __int16 *)v67 | (v67[2] << 16);
          goto LABEL_160;
        case 4:
          int v110 = *(_DWORD *)v67;
LABEL_160:
          int v111 = (v110 | (v108 << (8 * v25))) + 3;
          unsigned int v107 = v110 + 3;
          if (v25 < 4) {
            unsigned int v107 = v111;
          }
          break;
        default:
          break;
      }
    }
    if (v107 == 2)
    {
      (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v153 + 32))(v66, v67, v154);
      *(_OWORD *)(((unint64_t)v66 + v137) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v67[v137] & 0xFFFFFFFFFFFFFFF8);
      *((unsigned char *)v66 + v25) = 2;
    }
    else
    {
      if (v107 == 1)
      {
        *uint64_t v66 = *(_OWORD *)v67;
        unint64_t v112 = ((unint64_t)v66 + v142) & v150;
        unint64_t v113 = (unint64_t)&v67[v142] & v150;
        uint64_t v144 = *(void (**)(unint64_t, unint64_t, uint64_t))(v153 + 32);
        v144(v112, v113, v154);
        unsigned int v114 = (unsigned char *)((v147 + v12 + v112) & v155);
        unsigned int v115 = (unsigned __int8 *)((v147 + v12 + v113) & v155);
        unsigned int v116 = v115[v151];
        unsigned int v117 = v116 - 4;
        if (v116 < 4)
        {
          uint64_t v119 = v146;
        }
        else
        {
          if (v151 <= 3) {
            uint64_t v118 = v151;
          }
          else {
            uint64_t v118 = 4;
          }
          uint64_t v119 = v146;
          switch(v118)
          {
            case 1:
              int v120 = *v115;
              goto LABEL_176;
            case 2:
              int v120 = *(unsigned __int16 *)v115;
              goto LABEL_176;
            case 3:
              int v120 = *(unsigned __int16 *)v115 | (*(unsigned __int8 *)(((v147 + v12 + v113) & v155) + 2) << 16);
              goto LABEL_176;
            case 4:
              int v120 = *(_DWORD *)v115;
LABEL_176:
              int v121 = (v120 | (v117 << (8 * v151))) + 4;
              unsigned int v116 = v120 + 4;
              if (v151 < 4) {
                unsigned int v116 = v121;
              }
              break;
            default:
              break;
          }
        }
        switch(v116)
        {
          case 1u:
            *unsigned int v114 = *v115;
            char v122 = 1;
            break;
          case 2u:
            *(_OWORD *)unsigned int v114 = *(_OWORD *)v115;
            (*(void (**)(unint64_t))(v119 + 32))((unint64_t)&v114[v139] & v138);
            unint64_t v123 = (v140 + ((unint64_t)&v114[v139] & v138)) & v150;
            unint64_t v124 = (v140 + ((unint64_t)&v115[v139] & v138)) & v150;
            v144(v123, v124, v154);
            *(void *)((v137 + v123) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v137 + v124) & 0xFFFFFFFFFFFFFFF8);
            v114[v136] = v115[v136];
            char v122 = 2;
            break;
          case 3u:
            *(_OWORD *)unsigned int v114 = *(_OWORD *)v115;
            unint64_t v125 = (unint64_t)&v115[v139] & v138;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v119 + 32))((unint64_t)&v114[v139] & v138, v125, v141);
            unint64_t v126 = (v140 + ((unint64_t)&v114[v139] & v138)) & v150;
            v144(v126, (v140 + v125) & v150, v154);
            *(void *)((v137 + v126) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v137 + ((v140 + v125) & v150)) & 0xFFFFFFFFFFFFFFF8);
            char v122 = 3;
            break;
          default:
            char v122 = 0;
            *(_WORD *)unsigned int v114 = *(_WORD *)v115;
            break;
        }
        uint64_t v14 = ~v12;
        v114[v151] = v122;
LABEL_184:
        char v95 = 1;
        goto LABEL_185;
      }
      *uint64_t v66 = *(_OWORD *)v67;
      *((unsigned char *)v66 + v25) = 0;
    }
    goto LABEL_143;
  }
LABEL_186:
  uint64_t v127 = *(void *)(*(void *)(v149 + 16) - 8);
  uint64_t v128 = v127 + 40;
  uint64_t v129 = *(unsigned __int8 *)(v127 + 80);
  size_t v130 = ((v65 + v12) & v14) + v65 + v129;
  unint64_t v131 = (v130 + v15) & ~v129;
  size_t v132 = (v130 + v152) & ~v129;
  (*(void (**)(unint64_t, size_t))(v127 + 40))(v131, v132);
  *(unsigned char *)(*(void *)(v128 + 24) + v131) = *(unsigned char *)(*(void *)(v128 + 24) + v132);
  return a1;
}

uint64_t sub_22EC09594(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(sub_22EE7F6E0() - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(void *)(sub_22EE7F5D0() - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v10 | v7;
  uint64_t v12 = v10 | v7 | 7;
  unint64_t v13 = (v8 + 7 + ((*(void *)(v9 + 64) + v7 + ((v10 + 16) & ~v10)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v14 = v13 + 8;
  unint64_t v15 = v13 + 9;
  if (v15 <= v14) {
    unint64_t v15 = v14;
  }
  if (v15 <= 2) {
    unint64_t v15 = 2;
  }
  unint64_t v16 = v15 + ((((v7 + 16) & ~v7) + v8 + v12) & ~v12);
  if (v16 + 1 > ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v17 = v16 + 1;
  }
  else {
    unint64_t v17 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v17 <= 0x10) {
    uint64_t v18 = 16;
  }
  else {
    uint64_t v18 = v17;
  }
  uint64_t v19 = *(void *)(a3 + 16);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(unsigned int *)(v20 + 84);
  if (v21 <= 0x7FFFFFFF) {
    unsigned int v22 = 0x7FFFFFFF;
  }
  else {
    unsigned int v22 = *(_DWORD *)(v20 + 84);
  }
  uint64_t v23 = *(unsigned __int8 *)(v20 + 80);
  uint64_t v24 = *(void *)(v20 + 64);
  if (!a2) {
    return 0;
  }
  uint64_t v25 = ((v18 + 1 + v12) & ~v12) + v18 + 1 + v23;
  if (a2 <= v22) {
    goto LABEL_35;
  }
  uint64_t v26 = v24 + ((v25 + ((v11 + 32) & ~v12)) & ~v23) + 1;
  char v27 = 8 * v26;
  if (v26 <= 3)
  {
    unsigned int v30 = ((a2 - v22 + ~(-1 << v27)) >> v27) + 1;
    if (HIWORD(v30))
    {
      int v28 = *(_DWORD *)((char *)a1 + v26);
      if (!v28) {
        goto LABEL_35;
      }
      goto LABEL_25;
    }
    if (v30 > 0xFF)
    {
      int v28 = *(unsigned __int16 *)((char *)a1 + v26);
      if (!*(unsigned __int16 *)((char *)a1 + v26)) {
        goto LABEL_35;
      }
      goto LABEL_25;
    }
    if (v30 < 2)
    {
LABEL_35:
      if ((v21 & 0x80000000) != 0)
      {
        return __swift_getEnumTagSinglePayload((v25 + (((unint64_t)a1 + v12 + 32) & ~v12)) & ~v23, v21, v19);
      }
      else
      {
        unint64_t v34 = *((void *)a1 + 1);
        if (v34 >= 0xFFFFFFFF) {
          LODWORD(v34) = -1;
        }
        return (v34 + 1);
      }
    }
  }
  int v28 = *((unsigned __int8 *)a1 + v26);
  if (!*((unsigned char *)a1 + v26)) {
    goto LABEL_35;
  }
LABEL_25:
  int v31 = (v28 - 1) << v27;
  if (v26 > 3) {
    int v31 = 0;
  }
  if (v26)
  {
    if (v26 <= 3) {
      int v32 = v26;
    }
    else {
      int v32 = 4;
    }
    switch(v32)
    {
      case 2:
        int v33 = *a1;
        break;
      case 3:
        int v33 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v33 = *(_DWORD *)a1;
        break;
      default:
        int v33 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v33 = 0;
  }
  return v22 + (v33 | v31) + 1;
}

void sub_22EC098BC(_WORD *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(sub_22EE7F6E0() - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 64);
  uint64_t v11 = *(void *)(sub_22EE7F5D0() - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = v12 | v9;
  uint64_t v14 = v12 | v9 | 7;
  unint64_t v15 = (v10 + 7 + ((*(void *)(v11 + 64) + v9 + ((v12 + 16) & ~v12)) & ~v9)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = v15 + 8;
  unint64_t v17 = v15 + 9;
  if (v17 <= v16) {
    unint64_t v17 = v16;
  }
  if (v17 <= 2) {
    unint64_t v17 = 2;
  }
  unint64_t v18 = v17 + ((((v9 + 16) & ~v9) + v10 + v14) & ~v14);
  if (v18 + 1 > ((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v19 = v18 + 1;
  }
  else {
    unint64_t v19 = ((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  uint64_t v20 = 16;
  uint64_t v21 = *(void *)(a4 + 16);
  uint64_t v22 = *(void *)(v21 - 8);
  if (v19 > 0x10) {
    uint64_t v20 = v19;
  }
  uint64_t v23 = *(unsigned int *)(v22 + 84);
  if (v23 <= 0x7FFFFFFF) {
    unsigned int v24 = 0x7FFFFFFF;
  }
  else {
    unsigned int v24 = *(_DWORD *)(v22 + 84);
  }
  uint64_t v25 = v20 + 1;
  uint64_t v26 = (v20 + 1 + v14) & ~v14;
  uint64_t v27 = (v13 + 32) & ~v14;
  uint64_t v28 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v29 = v26 + v25 + v28;
  size_t v30 = *(void *)(v22 + 64) + ((v29 + v27) & ~v28) + 1;
  char v31 = 8 * v30;
  if (a3 <= v24)
  {
    int v32 = 0;
  }
  else if (v30 <= 3)
  {
    unsigned int v35 = ((a3 - v24 + ~(-1 << v31)) >> v31) + 1;
    if (HIWORD(v35))
    {
      int v32 = 4;
    }
    else if (v35 >= 0x100)
    {
      int v32 = 2;
    }
    else
    {
      int v32 = v35 > 1;
    }
  }
  else
  {
    int v32 = 1;
  }
  if (v24 < a2)
  {
    unsigned int v33 = ~v24 + a2;
    if (v30 < 4)
    {
      int v34 = (v33 >> v31) + 1;
      if (v30)
      {
        int v36 = v33 & ~(-1 << v31);
        bzero(a1, v30);
        if (v30 == 3)
        {
          *a1 = v36;
          *((unsigned char *)a1 + 2) = BYTE2(v36);
        }
        else if (v30 == 2)
        {
          *a1 = v36;
        }
        else
        {
          *(unsigned char *)a1 = v36;
        }
      }
    }
    else
    {
      bzero(a1, v30);
      *(_DWORD *)a1 = v33;
      int v34 = 1;
    }
    switch(v32)
    {
      case 1:
        *((unsigned char *)a1 + v30) = v34;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v30) = v34;
        return;
      case 3:
        goto LABEL_50;
      case 4:
        *(_DWORD *)((char *)a1 + v30) = v34;
        return;
      default:
        return;
    }
  }
  switch(v32)
  {
    case 1:
      *((unsigned char *)a1 + v30) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)((char *)a1 + v30) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_50:
      __break(1u);
      JUMPOUT(0x22EC09C64);
    case 4:
      *(_DWORD *)((char *)a1 + v30) = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if ((v23 & 0x80000000) != 0)
        {
          __swift_storeEnumTagSinglePayload((v29 + (((unint64_t)a1 + v14 + 32) & ~v14)) & ~v28, a2, v23, v21);
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *((void *)a1 + 2) = 0;
          *((void *)a1 + 3) = 0;
          *(void *)a1 = a2 ^ 0x80000000;
          *((void *)a1 + 1) = 0;
        }
        else
        {
          *((void *)a1 + 1) = (a2 - 1);
        }
      }
      return;
  }
}

void *sub_22EC09C8C(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v6 = v4;
    uint64_t v7 = _s11PriceStringOMa(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v27 = sub_22EE7F6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(a1, a2, v27);
      uint64_t v28 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)a1 + *(int *)(v28 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v28 + 20));
      goto LABEL_14;
    }
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v29 = a2[1];
      *a1 = *a2;
      a1[1] = v29;
      swift_bridgeObjectRetain();
      goto LABEL_14;
    }
    uint64_t v82 = v7;
    uint64_t v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    uint64_t v10 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v11 = *(int *)(v10 + 20);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_22EE7F6E0();
    unint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    v15(v12, v13, v14);
    uint64_t v16 = *(int *)(v10 + 24);
    unint64_t v17 = (char *)a1 + v16;
    unint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = _s22LocalizedPriceResourceV6FormatOMa(0);
    int v20 = swift_getEnumCaseMultiPayload();
    if (v20 == 3)
    {
      uint64_t v30 = *((void *)v18 + 1);
      *(void *)unint64_t v17 = *(void *)v18;
      *((void *)v17 + 1) = v30;
      uint64_t v80 = v15;
      char v31 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v32 = v31[5];
      uint64_t v70 = &v18[v32];
      uint64_t v74 = &v17[v32];
      uint64_t v33 = sub_22EE7F5D0();
      unsigned int v68 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
      swift_bridgeObjectRetain();
      v68(v74, v70, v33);
      v80(&v17[v31[6]], &v18[v31[6]], v14);
      *(void *)&v17[v31[7]] = *(void *)&v18[v31[7]];
    }
    else
    {
      if (v20 != 2)
      {
        memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
        goto LABEL_13;
      }
      uint64_t v21 = *((void *)v18 + 1);
      *(void *)unint64_t v17 = *(void *)v18;
      *((void *)v17 + 1) = v21;
      uint64_t v79 = v15;
      uint64_t v22 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v23 = v22[5];
      unsigned int v69 = &v18[v23];
      unsigned int v73 = &v17[v23];
      uint64_t v24 = sub_22EE7F5D0();
      uint64_t v67 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
      swift_bridgeObjectRetain();
      v67(v73, v69, v24);
      v79(&v17[v22[6]], &v18[v22[6]], v14);
      *(void *)&v17[v22[7]] = *(void *)&v18[v22[7]];
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
      v17[*(int *)(v25 + 48)] = v18[*(int *)(v25 + 48)];
    }
    swift_storeEnumTagMultiPayload();
LABEL_13:
    uint64_t v7 = v82;
LABEL_14:
    swift_storeEnumTagMultiPayload();
    uint64_t v34 = *(int *)(v6 + 20);
    unsigned int v35 = (void *)((char *)a1 + v34);
    int v36 = (void *)((char *)a2 + v34);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v34, 1, v7))
    {
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F8);
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
      return a1;
    }
    int v38 = swift_getEnumCaseMultiPayload();
    if (v38 == 2)
    {
      uint64_t v58 = sub_22EE7F6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v58 - 8) + 16))(v35, v36, v58);
      uint64_t v59 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)v35 + *(int *)(v59 + 20)) = *(_OWORD *)((char *)v36 + *(int *)(v59 + 20));
    }
    else if (v38 == 1)
    {
      uint64_t v39 = v36[1];
      *unsigned int v35 = *v36;
      v35[1] = v39;
      uint64_t v40 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v41 = *(int *)(v40 + 20);
      unsigned int v83 = (char *)v35 + v41;
      uint64_t v42 = (char *)v36 + v41;
      uint64_t v43 = sub_22EE7F6E0();
      int v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v81 = v43;
      uint64_t v45 = v43;
      unsigned int v46 = v44;
      v44(v83, v42, v45);
      uint64_t v47 = *(int *)(v40 + 24);
      uint64_t v48 = (char *)v35 + v47;
      int v49 = (char *)v36 + v47;
      uint64_t v50 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v51 = swift_getEnumCaseMultiPayload();
      if (v51 == 3)
      {
        uint64_t v61 = *((void *)v49 + 1);
        *(void *)uint64_t v48 = *(void *)v49;
        *((void *)v48 + 1) = v61;
        unint64_t v62 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v63 = v62[5];
        uint64_t v76 = &v49[v63];
        unint64_t v78 = &v48[v63];
        unint64_t v64 = v46;
        uint64_t v65 = sub_22EE7F5D0();
        unsigned int v72 = *(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16);
        swift_bridgeObjectRetain();
        v72(v78, v76, v65);
        v64(&v48[v62[6]], &v49[v62[6]], v81);
        *(void *)&v48[v62[7]] = *(void *)&v49[v62[7]];
      }
      else
      {
        if (v51 != 2)
        {
          memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
          goto LABEL_26;
        }
        uint64_t v52 = *((void *)v49 + 1);
        *(void *)uint64_t v48 = *(void *)v49;
        *((void *)v48 + 1) = v52;
        unint64_t v53 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v54 = v53[5];
        int v75 = &v49[v54];
        unint64_t v77 = &v48[v54];
        unsigned int v55 = v46;
        uint64_t v56 = sub_22EE7F5D0();
        int v71 = *(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16);
        swift_bridgeObjectRetain();
        v71(v77, v75, v56);
        v55(&v48[v53[6]], &v49[v53[6]], v81);
        *(void *)&v48[v53[7]] = *(void *)&v49[v53[7]];
        uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v48[*(int *)(v57 + 48)] = v49[*(int *)(v57 + 48)];
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      uint64_t v60 = v36[1];
      *unsigned int v35 = *v36;
      v35[1] = v60;
      swift_bridgeObjectRetain();
    }
LABEL_26:
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v35, 0, 1, v7);
    return a1;
  }
  uint64_t v26 = *a2;
  *a1 = *a2;
  a1 = (void *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t sub_22EC0A36C(uint64_t a1)
{
  uint64_t v2 = _s11PriceStringOMa(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v13 = sub_22EE7F6E0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a1, v13);
      break;
    case 1:
      swift_bridgeObjectRelease();
      uint64_t v4 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v5 = a1 + *(int *)(v4 + 20);
      uint64_t v6 = sub_22EE7F6E0();
      uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
      v7(v5, v6);
      uint64_t v8 = a1 + *(int *)(v4 + 24);
      _s22LocalizedPriceResourceV6FormatOMa(0);
      int v9 = swift_getEnumCaseMultiPayload();
      if (v9 == 3 || v9 == 2)
      {
        swift_bridgeObjectRelease();
        uint64_t v10 = _s15PricePropertiesVMa(0);
        uint64_t v11 = v8 + *(int *)(v10 + 20);
        uint64_t v12 = sub_22EE7F5D0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
        v7(v8 + *(int *)(v10 + 24), v6);
      }
      break;
    case 0:
      swift_bridgeObjectRelease();
      break;
  }
  uint64_t v14 = a1 + *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
  uint64_t result = __swift_getEnumTagSinglePayload(v14, 1, v2);
  if (!result)
  {
    uint64_t result = swift_getEnumCaseMultiPayload();
    switch(result)
    {
      case 2:
        uint64_t v26 = sub_22EE7F6E0();
        uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8);
        uint64_t v24 = v26;
        uint64_t v23 = v14;
        break;
      case 1:
        swift_bridgeObjectRelease();
        uint64_t v16 = _s22LocalizedPriceResourceVMa(0);
        uint64_t v17 = v14 + *(int *)(v16 + 20);
        uint64_t v18 = sub_22EE7F6E0();
        uint64_t v27 = *(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8);
        v27(v17, v18);
        uint64_t v19 = v14 + *(int *)(v16 + 24);
        _s22LocalizedPriceResourceV6FormatOMa(0);
        uint64_t result = swift_getEnumCaseMultiPayload();
        if (result != 3 && result != 2) {
          return result;
        }
        swift_bridgeObjectRelease();
        uint64_t v20 = _s15PricePropertiesVMa(0);
        uint64_t v21 = v19 + *(int *)(v20 + 20);
        uint64_t v22 = sub_22EE7F5D0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
        uint64_t v23 = v19 + *(int *)(v20 + 24);
        uint64_t v24 = v18;
        uint64_t v25 = (uint64_t (*)(uint64_t, uint64_t))v27;
        break;
      case 0:
        return swift_bridgeObjectRelease();
      default:
        return result;
    }
    return v25(v23, v24);
  }
  return result;
}

void *sub_22EC0A6D4(void *a1, void *a2)
{
  uint64_t v4 = _s11PriceStringOMa(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v23 = sub_22EE7F6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
    uint64_t v24 = _s20LocalizationResourceVMa();
    *(_OWORD *)((char *)a1 + *(int *)(v24 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v24 + 20));
    goto LABEL_11;
  }
  if (EnumCaseMultiPayload != 1)
  {
    uint64_t v25 = a2[1];
    *a1 = *a2;
    a1[1] = v25;
    swift_bridgeObjectRetain();
    goto LABEL_11;
  }
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = _s22LocalizedPriceResourceVMa(0);
  uint64_t v8 = *(int *)(v7 + 20);
  int v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_22EE7F6E0();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  uint64_t v13 = *(int *)(v7 + 24);
  uint64_t v14 = (char *)a1 + v13;
  unint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = _s22LocalizedPriceResourceV6FormatOMa(0);
  int v17 = swift_getEnumCaseMultiPayload();
  if (v17 == 3)
  {
    uint64_t v26 = *((void *)v15 + 1);
    *(void *)uint64_t v14 = *(void *)v15;
    *((void *)v14 + 1) = v26;
    unint64_t v77 = v12;
    uint64_t v27 = (int *)_s15PricePropertiesVMa(0);
    uint64_t v28 = v27[5];
    unsigned int v68 = &v15[v28];
    unsigned int v72 = &v14[v28];
    uint64_t v29 = sub_22EE7F5D0();
    unint64_t v64 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16);
    swift_bridgeObjectRetain();
    v64(v72, v68, v29);
    v77(&v14[v27[6]], &v15[v27[6]], v11);
    *(void *)&v14[v27[7]] = *(void *)&v15[v27[7]];
    goto LABEL_9;
  }
  if (v17 == 2)
  {
    uint64_t v18 = *((void *)v15 + 1);
    *(void *)uint64_t v14 = *(void *)v15;
    *((void *)v14 + 1) = v18;
    uint64_t v76 = v12;
    uint64_t v19 = (int *)_s15PricePropertiesVMa(0);
    uint64_t v20 = v19[5];
    uint64_t v67 = &v15[v20];
    int v71 = &v14[v20];
    uint64_t v21 = sub_22EE7F5D0();
    uint64_t v63 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
    swift_bridgeObjectRetain();
    v63(v71, v67, v21);
    v76(&v14[v19[6]], &v15[v19[6]], v11);
    *(void *)&v14[v19[7]] = *(void *)&v15[v19[7]];
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
    v14[*(int *)(v22 + 48)] = v15[*(int *)(v22 + 48)];
LABEL_9:
    swift_storeEnumTagMultiPayload();
    goto LABEL_11;
  }
  memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
LABEL_11:
  swift_storeEnumTagMultiPayload();
  uint64_t v30 = *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
  char v31 = (void *)((char *)a1 + v30);
  uint64_t v32 = (void *)((char *)a2 + v30);
  if (!__swift_getEnumTagSinglePayload((uint64_t)a2 + v30, 1, v4))
  {
    int v34 = swift_getEnumCaseMultiPayload();
    if (v34 == 2)
    {
      uint64_t v54 = sub_22EE7F6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v54 - 8) + 16))(v31, v32, v54);
      uint64_t v55 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)v31 + *(int *)(v55 + 20)) = *(_OWORD *)((char *)v32 + *(int *)(v55 + 20));
    }
    else if (v34 == 1)
    {
      uint64_t v35 = v32[1];
      *char v31 = *v32;
      v31[1] = v35;
      uint64_t v36 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v37 = *(int *)(v36 + 20);
      unint64_t v78 = (char *)v31 + v37;
      int v38 = (char *)v32 + v37;
      uint64_t v39 = sub_22EE7F6E0();
      uint64_t v40 = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v75 = v39;
      uint64_t v41 = v39;
      uint64_t v42 = v40;
      v40(v78, v38, v41);
      uint64_t v43 = *(int *)(v36 + 24);
      int v44 = (char *)v31 + v43;
      uint64_t v45 = (char *)v32 + v43;
      uint64_t v46 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v47 = swift_getEnumCaseMultiPayload();
      if (v47 == 3)
      {
        uint64_t v57 = *((void *)v45 + 1);
        *(void *)int v44 = *(void *)v45;
        *((void *)v44 + 1) = v57;
        uint64_t v58 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v59 = v58[5];
        uint64_t v70 = &v45[v59];
        uint64_t v74 = &v44[v59];
        uint64_t v60 = v42;
        uint64_t v61 = sub_22EE7F5D0();
        uint64_t v66 = *(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16);
        swift_bridgeObjectRetain();
        v66(v74, v70, v61);
        v60(&v44[v58[6]], &v45[v58[6]], v75);
        *(void *)&v44[v58[7]] = *(void *)&v45[v58[7]];
      }
      else
      {
        if (v47 != 2)
        {
          memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
          goto LABEL_23;
        }
        uint64_t v48 = *((void *)v45 + 1);
        *(void *)int v44 = *(void *)v45;
        *((void *)v44 + 1) = v48;
        int v49 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v50 = v49[5];
        unsigned int v69 = &v45[v50];
        unsigned int v73 = &v44[v50];
        int v51 = v42;
        uint64_t v52 = sub_22EE7F5D0();
        uint64_t v65 = *(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16);
        swift_bridgeObjectRetain();
        v65(v73, v69, v52);
        v51(&v44[v49[6]], &v45[v49[6]], v75);
        *(void *)&v44[v49[7]] = *(void *)&v45[v49[7]];
        uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v44[*(int *)(v53 + 48)] = v45[*(int *)(v53 + 48)];
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      uint64_t v56 = v32[1];
      *char v31 = *v32;
      v31[1] = v56;
      swift_bridgeObjectRetain();
    }
LABEL_23:
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v4);
    return a1;
  }
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F8);
  memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
  return a1;
}

void *sub_22EC0AD58(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_22EC0304C((uint64_t)a1, (void (*)(void))_s11PriceStringOMa);
    _s11PriceStringOMa(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v20 = sub_22EE7F6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
      uint64_t v21 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)a1 + *(int *)(v21 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v21 + 20));
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t v5 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v6 = *(int *)(v5 + 20);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_22EE7F6E0();
      uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
      swift_bridgeObjectRetain();
      v10(v7, v8, v9);
      uint64_t v11 = *(int *)(v5 + 24);
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v15 = swift_getEnumCaseMultiPayload();
      if (v15 == 3)
      {
        *(void *)uint64_t v12 = *(void *)v13;
        *((void *)v12 + 1) = *((void *)v13 + 1);
        int v94 = v10;
        uint64_t v22 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v23 = v22[5];
        uint64_t v81 = &v13[v23];
        uint64_t v87 = &v12[v23];
        uint64_t v24 = sub_22EE7F5D0();
        uint64_t v75 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
        swift_bridgeObjectRetain();
        v75(v87, v81, v24);
        v94(&v12[v22[6]], &v13[v22[6]], v9);
        *(void *)&v12[v22[7]] = *(void *)&v13[v22[7]];
      }
      else
      {
        if (v15 != 2)
        {
          memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
          goto LABEL_12;
        }
        *(void *)uint64_t v12 = *(void *)v13;
        *((void *)v12 + 1) = *((void *)v13 + 1);
        uint64_t v93 = v10;
        uint64_t v16 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v17 = v16[5];
        uint64_t v80 = &v13[v17];
        int v86 = &v12[v17];
        uint64_t v18 = sub_22EE7F5D0();
        uint64_t v74 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
        swift_bridgeObjectRetain();
        v74(v86, v80, v18);
        v93(&v12[v16[6]], &v13[v16[6]], v9);
        *(void *)&v12[v16[7]] = *(void *)&v13[v16[7]];
        uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v12[*(int *)(v19 + 48)] = v13[*(int *)(v19 + 48)];
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
LABEL_12:
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v25 = *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
  uint64_t v26 = (void *)((char *)a1 + v25);
  uint64_t v27 = (void *)((char *)a2 + v25);
  uint64_t v28 = _s11PriceStringOMa(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v26, 1, v28);
  int v30 = __swift_getEnumTagSinglePayload((uint64_t)v27, 1, v28);
  if (EnumTagSinglePayload)
  {
    if (!v30)
    {
      int v31 = swift_getEnumCaseMultiPayload();
      if (v31 == 2)
      {
        uint64_t v63 = sub_22EE7F6E0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v63 - 8) + 16))(v26, v27, v63);
        uint64_t v64 = _s20LocalizationResourceVMa();
        *(_OWORD *)((char *)v26 + *(int *)(v64 + 20)) = *(_OWORD *)((char *)v27 + *(int *)(v64 + 20));
      }
      else if (v31 == 1)
      {
        *uint64_t v26 = *v27;
        v26[1] = v27[1];
        uint64_t v32 = _s22LocalizedPriceResourceVMa(0);
        uint64_t v33 = *(int *)(v32 + 20);
        char v95 = (char *)v26 + v33;
        int v34 = (char *)v27 + v33;
        uint64_t v35 = sub_22EE7F6E0();
        uint64_t v36 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v37 = v95;
        int v96 = v36;
        v36(v37, v34, v35);
        uint64_t v38 = *(int *)(v32 + 24);
        uint64_t v39 = (char *)v26 + v38;
        uint64_t v40 = (char *)v27 + v38;
        uint64_t v41 = _s22LocalizedPriceResourceV6FormatOMa(0);
        int v42 = swift_getEnumCaseMultiPayload();
        if (v42 == 3)
        {
          *(void *)uint64_t v39 = *(void *)v40;
          *((void *)v39 + 1) = *((void *)v40 + 1);
          uint64_t v67 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v68 = v67[5];
          uint64_t v84 = &v40[v68];
          uint64_t v90 = &v39[v68];
          uint64_t v69 = sub_22EE7F5D0();
          unint64_t v78 = *(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16);
          swift_bridgeObjectRetain();
          v78(v90, v84, v69);
          v96(&v39[v67[6]], &v40[v67[6]], v35);
          *(void *)&v39[v67[7]] = *(void *)&v40[v67[7]];
        }
        else
        {
          if (v42 != 2)
          {
            memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
            goto LABEL_36;
          }
          *(void *)uint64_t v39 = *(void *)v40;
          *((void *)v39 + 1) = *((void *)v40 + 1);
          uint64_t v43 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v44 = v43[5];
          uint64_t v82 = &v40[v44];
          uint64_t v88 = &v39[v44];
          uint64_t v45 = sub_22EE7F5D0();
          uint64_t v76 = *(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16);
          swift_bridgeObjectRetain();
          v76(v88, v82, v45);
          v96(&v39[v43[6]], &v40[v43[6]], v35);
          *(void *)&v39[v43[7]] = *(void *)&v40[v43[7]];
          uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
          v39[*(int *)(v46 + 48)] = v40[*(int *)(v46 + 48)];
        }
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        *uint64_t v26 = *v27;
        v26[1] = v27[1];
        swift_bridgeObjectRetain();
      }
LABEL_36:
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v28);
      return a1;
    }
    goto LABEL_22;
  }
  if (!v30)
  {
    if (a1 == a2) {
      return a1;
    }
    sub_22EC0304C((uint64_t)v26, (void (*)(void))_s11PriceStringOMa);
    int v48 = swift_getEnumCaseMultiPayload();
    if (v48 == 2)
    {
      uint64_t v65 = sub_22EE7F6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v65 - 8) + 16))(v26, v27, v65);
      uint64_t v66 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)v26 + *(int *)(v66 + 20)) = *(_OWORD *)((char *)v27 + *(int *)(v66 + 20));
    }
    else if (v48 == 1)
    {
      *uint64_t v26 = *v27;
      v26[1] = v27[1];
      uint64_t v49 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v50 = *(int *)(v49 + 20);
      char v97 = (char *)v26 + v50;
      int v51 = (char *)v27 + v50;
      uint64_t v52 = sub_22EE7F6E0();
      uint64_t v53 = *(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v92 = v52;
      v53(v97, v51, v52);
      uint64_t v54 = *(int *)(v49 + 24);
      uint64_t v55 = (char *)v26 + v54;
      uint64_t v56 = (char *)v27 + v54;
      uint64_t v57 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v58 = swift_getEnumCaseMultiPayload();
      if (v58 == 3)
      {
        *(void *)uint64_t v55 = *(void *)v56;
        *((void *)v55 + 1) = *((void *)v56 + 1);
        uint64_t v70 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v71 = v70[5];
        uint64_t v85 = &v56[v71];
        unsigned int v91 = &v55[v71];
        uint64_t v72 = sub_22EE7F5D0();
        uint64_t v79 = *(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16);
        swift_bridgeObjectRetain();
        v79(v91, v85, v72);
        v53(&v55[v70[6]], &v56[v70[6]], v92);
        *(void *)&v55[v70[7]] = *(void *)&v56[v70[7]];
      }
      else
      {
        if (v58 != 2)
        {
          memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
          goto LABEL_40;
        }
        *(void *)uint64_t v55 = *(void *)v56;
        *((void *)v55 + 1) = *((void *)v56 + 1);
        uint64_t v59 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v60 = v59[5];
        unsigned int v83 = &v56[v60];
        uint64_t v89 = &v55[v60];
        uint64_t v61 = sub_22EE7F5D0();
        unint64_t v77 = *(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16);
        swift_bridgeObjectRetain();
        v77(v89, v83, v61);
        v53(&v55[v59[6]], &v56[v59[6]], v92);
        *(void *)&v55[v59[7]] = *(void *)&v56[v59[7]];
        uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v55[*(int *)(v62 + 48)] = v56[*(int *)(v62 + 48)];
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      *uint64_t v26 = *v27;
      v26[1] = v27[1];
      swift_bridgeObjectRetain();
    }
LABEL_40:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  sub_22EC0304C((uint64_t)v26, (void (*)(void))_s11PriceStringOMa);
LABEL_22:
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F8);
  memcpy(v26, v27, *(void *)(*(void *)(v47 - 8) + 64));
  return a1;
}

_OWORD *sub_22EC0B7AC(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4 = _s11PriceStringOMa(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v21 = sub_22EE7F6E0();
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v21 - 8) + 32))(a1, a2, v21);
    uint64_t v22 = _s20LocalizationResourceVMa();
    *(_OWORD *)((char *)a1 + *(int *)(v22 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v22 + 20));
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
      goto LABEL_12;
    }
    *a1 = *a2;
    uint64_t v6 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v7 = *(int *)(v6 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_22EE7F6E0();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
    v11(v8, v9, v10);
    uint64_t v12 = *(int *)(v6 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = _s22LocalizedPriceResourceV6FormatOMa(0);
    int v16 = swift_getEnumCaseMultiPayload();
    if (v16 == 3)
    {
      *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
      uint64_t v23 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v24 = v23[5];
      uint64_t v53 = &v14[v24];
      uint64_t v57 = &v13[v24];
      uint64_t v25 = sub_22EE7F5D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v57, v53, v25);
      v11(&v13[v23[6]], &v14[v23[6]], v10);
      *(void *)&v13[v23[7]] = *(void *)&v14[v23[7]];
    }
    else
    {
      if (v16 != 2)
      {
        memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
        goto LABEL_11;
      }
      *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
      uint64_t v17 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v18 = v17[5];
      uint64_t v52 = &v14[v18];
      uint64_t v56 = &v13[v18];
      uint64_t v19 = sub_22EE7F5D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v56, v52, v19);
      v11(&v13[v17[6]], &v14[v17[6]], v10);
      *(void *)&v13[v17[7]] = *(void *)&v14[v17[7]];
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
      v13[*(int *)(v20 + 48)] = v14[*(int *)(v20 + 48)];
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_11:
  swift_storeEnumTagMultiPayload();
LABEL_12:
  uint64_t v26 = *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
  uint64_t v27 = (_OWORD *)((char *)a1 + v26);
  uint64_t v28 = (_OWORD *)((char *)a2 + v26);
  if (!__swift_getEnumTagSinglePayload((uint64_t)a2 + v26, 1, v4))
  {
    int v30 = swift_getEnumCaseMultiPayload();
    if (v30 == 2)
    {
      uint64_t v46 = sub_22EE7F6E0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v46 - 8) + 32))(v27, v28, v46);
      uint64_t v47 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)v27 + *(int *)(v47 + 20)) = *(_OWORD *)((char *)v28 + *(int *)(v47 + 20));
    }
    else
    {
      if (v30 != 1)
      {
        memcpy(v27, v28, *(void *)(*(void *)(v4 - 8) + 64));
LABEL_25:
        __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v4);
        return a1;
      }
      *uint64_t v27 = *v28;
      uint64_t v31 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v32 = *(int *)(v31 + 20);
      uint64_t v33 = (char *)v27 + v32;
      int v34 = (char *)v28 + v32;
      uint64_t v35 = sub_22EE7F6E0();
      uint64_t v36 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32);
      v36(v33, v34, v35);
      uint64_t v37 = *(int *)(v31 + 24);
      uint64_t v38 = (char *)v27 + v37;
      uint64_t v39 = (char *)v28 + v37;
      uint64_t v40 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v41 = swift_getEnumCaseMultiPayload();
      if (v41 == 3)
      {
        *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
        int v48 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v49 = v48[5];
        uint64_t v55 = &v39[v49];
        uint64_t v59 = &v38[v49];
        uint64_t v50 = sub_22EE7F5D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v59, v55, v50);
        v36(&v38[v48[6]], &v39[v48[6]], v35);
        *(void *)&v38[v48[7]] = *(void *)&v39[v48[7]];
      }
      else
      {
        if (v41 != 2)
        {
          memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
          goto LABEL_24;
        }
        *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
        int v42 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v43 = v42[5];
        uint64_t v54 = &v39[v43];
        int v58 = &v38[v43];
        uint64_t v44 = sub_22EE7F5D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v58, v54, v44);
        v36(&v38[v42[6]], &v39[v42[6]], v35);
        *(void *)&v38[v42[7]] = *(void *)&v39[v42[7]];
        uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v38[*(int *)(v45 + 48)] = v39[*(int *)(v45 + 48)];
      }
      swift_storeEnumTagMultiPayload();
    }
LABEL_24:
    swift_storeEnumTagMultiPayload();
    goto LABEL_25;
  }
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F8);
  memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  return a1;
}

_OWORD *sub_22EC0BDCC(_OWORD *a1, _OWORD *a2)
{
  if (a1 != a2)
  {
    sub_22EC0304C((uint64_t)a1, (void (*)(void))_s11PriceStringOMa);
    uint64_t v4 = _s11PriceStringOMa(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v21 = sub_22EE7F6E0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v21 - 8) + 32))(a1, a2, v21);
      uint64_t v22 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)a1 + *(int *)(v22 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v22 + 20));
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
        goto LABEL_13;
      }
      *a1 = *a2;
      uint64_t v6 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v7 = *(int *)(v6 + 20);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_22EE7F6E0();
      uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
      v11(v8, v9, v10);
      uint64_t v12 = *(int *)(v6 + 24);
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v16 = swift_getEnumCaseMultiPayload();
      if (v16 == 3)
      {
        *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
        uint64_t v23 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v24 = v23[5];
        unint64_t v77 = &v14[v24];
        unsigned int v83 = &v13[v24];
        uint64_t v25 = sub_22EE7F5D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v83, v77, v25);
        v11(&v13[v23[6]], &v14[v23[6]], v10);
        *(void *)&v13[v23[7]] = *(void *)&v14[v23[7]];
      }
      else
      {
        if (v16 != 2)
        {
          memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
          goto LABEL_12;
        }
        *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
        uint64_t v17 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v18 = v17[5];
        uint64_t v76 = &v14[v18];
        uint64_t v82 = &v13[v18];
        uint64_t v19 = sub_22EE7F5D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v82, v76, v19);
        v11(&v13[v17[6]], &v14[v17[6]], v10);
        *(void *)&v13[v17[7]] = *(void *)&v14[v17[7]];
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v13[*(int *)(v20 + 48)] = v14[*(int *)(v20 + 48)];
      }
      swift_storeEnumTagMultiPayload();
    }
LABEL_12:
    swift_storeEnumTagMultiPayload();
  }
LABEL_13:
  uint64_t v26 = *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
  uint64_t v27 = (_OWORD *)((char *)a1 + v26);
  uint64_t v28 = (_OWORD *)((char *)a2 + v26);
  uint64_t v29 = _s11PriceStringOMa(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v27, 1, v29);
  int v31 = __swift_getEnumTagSinglePayload((uint64_t)v28, 1, v29);
  if (EnumTagSinglePayload)
  {
    if (!v31)
    {
      int v32 = swift_getEnumCaseMultiPayload();
      if (v32 == 2)
      {
        uint64_t v65 = sub_22EE7F6E0();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v65 - 8) + 32))(v27, v28, v65);
        uint64_t v66 = _s20LocalizationResourceVMa();
        *(_OWORD *)((char *)v27 + *(int *)(v66 + 20)) = *(_OWORD *)((char *)v28 + *(int *)(v66 + 20));
      }
      else
      {
        if (v32 != 1)
        {
          memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
LABEL_38:
          __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v29);
          return a1;
        }
        *uint64_t v27 = *v28;
        uint64_t v33 = _s22LocalizedPriceResourceVMa(0);
        uint64_t v34 = *(int *)(v33 + 20);
        uint64_t v35 = (char *)v27 + v34;
        uint64_t v36 = (char *)v28 + v34;
        uint64_t v37 = sub_22EE7F6E0();
        uint64_t v38 = *(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32);
        v38(v35, v36, v37);
        uint64_t v39 = *(int *)(v33 + 24);
        uint64_t v40 = (char *)v27 + v39;
        int v41 = (char *)v28 + v39;
        uint64_t v42 = _s22LocalizedPriceResourceV6FormatOMa(0);
        int v43 = swift_getEnumCaseMultiPayload();
        if (v43 == 3)
        {
          *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
          uint64_t v69 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v70 = v69[5];
          uint64_t v80 = &v41[v70];
          int v86 = &v40[v70];
          uint64_t v71 = sub_22EE7F5D0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(v86, v80, v71);
          v38(&v40[v69[6]], &v41[v69[6]], v37);
          *(void *)&v40[v69[7]] = *(void *)&v41[v69[7]];
        }
        else
        {
          if (v43 != 2)
          {
            memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
            goto LABEL_37;
          }
          *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
          uint64_t v44 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v45 = v44[5];
          unint64_t v78 = &v41[v45];
          uint64_t v84 = &v40[v45];
          uint64_t v46 = sub_22EE7F5D0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v84, v78, v46);
          v38(&v40[v44[6]], &v41[v44[6]], v37);
          *(void *)&v40[v44[7]] = *(void *)&v41[v44[7]];
          uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
          v40[*(int *)(v47 + 48)] = v41[*(int *)(v47 + 48)];
        }
        swift_storeEnumTagMultiPayload();
      }
LABEL_37:
      swift_storeEnumTagMultiPayload();
      goto LABEL_38;
    }
    goto LABEL_22;
  }
  if (!v31)
  {
    if (a1 == a2) {
      return a1;
    }
    sub_22EC0304C((uint64_t)v27, (void (*)(void))_s11PriceStringOMa);
    int v49 = swift_getEnumCaseMultiPayload();
    if (v49 == 2)
    {
      uint64_t v67 = sub_22EE7F6E0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v67 - 8) + 32))(v27, v28, v67);
      uint64_t v68 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)v27 + *(int *)(v68 + 20)) = *(_OWORD *)((char *)v28 + *(int *)(v68 + 20));
    }
    else
    {
      if (v49 != 1)
      {
        size_t v48 = *(void *)(*(void *)(v29 - 8) + 64);
        goto LABEL_23;
      }
      *uint64_t v27 = *v28;
      uint64_t v50 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v51 = *(int *)(v50 + 20);
      uint64_t v52 = (char *)v27 + v51;
      uint64_t v53 = (char *)v28 + v51;
      uint64_t v54 = sub_22EE7F6E0();
      uint64_t v55 = *(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32);
      v55(v52, v53, v54);
      uint64_t v56 = *(int *)(v50 + 24);
      uint64_t v57 = (char *)v27 + v56;
      int v58 = (char *)v28 + v56;
      uint64_t v59 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v60 = swift_getEnumCaseMultiPayload();
      if (v60 == 3)
      {
        *(_OWORD *)uint64_t v57 = *(_OWORD *)v58;
        uint64_t v72 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v73 = v72[5];
        uint64_t v81 = &v58[v73];
        uint64_t v87 = &v57[v73];
        uint64_t v74 = sub_22EE7F5D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 32))(v87, v81, v74);
        v55(&v57[v72[6]], &v58[v72[6]], v54);
        *(void *)&v57[v72[7]] = *(void *)&v58[v72[7]];
      }
      else
      {
        if (v60 != 2)
        {
          memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
          goto LABEL_42;
        }
        *(_OWORD *)uint64_t v57 = *(_OWORD *)v58;
        uint64_t v61 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v62 = v61[5];
        uint64_t v79 = &v58[v62];
        uint64_t v85 = &v57[v62];
        uint64_t v63 = sub_22EE7F5D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32))(v85, v79, v63);
        v55(&v57[v61[6]], &v58[v61[6]], v54);
        *(void *)&v57[v61[7]] = *(void *)&v58[v61[7]];
        uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v57[*(int *)(v64 + 48)] = v58[*(int *)(v64 + 48)];
      }
      swift_storeEnumTagMultiPayload();
    }
LABEL_42:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  sub_22EC0304C((uint64_t)v27, (void (*)(void))_s11PriceStringOMa);
LABEL_22:
  size_t v48 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F8) - 8) + 64);
LABEL_23:
  memcpy(v27, v28, v48);
  return a1;
}

uint64_t sub_22EC0C714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EC0C728);
}

uint64_t sub_22EC0C728(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0);

  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t sub_22EC0C770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EC0C784);
}

uint64_t sub_22EC0C784(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0);

  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_22EC0C7D0()
{
  uint64_t result = type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for Fall2023PrimaryLabels()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Fall2023PrimaryLabels(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Fall2023PrimaryLabels(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for Fall2023PrimaryLabels(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for Fall2023PrimaryLabels(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 33))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Fall2023PrimaryLabels(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Fall2023PrimaryLabels()
{
  return &type metadata for Fall2023PrimaryLabels;
}

uint64_t destroy for HiddenDescriptionContent(uint64_t a1)
{
  sub_22EB19DB0(*(void *)a1, *(unsigned char *)(a1 + 8));
  uint64_t v2 = *(void *)(a1 + 16);
  char v3 = *(unsigned char *)(a1 + 24);

  return sub_22EADDB08(v2, v3);
}

uint64_t initializeWithCopy for HiddenDescriptionContent(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_22EB41280(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(v2 + 16);
  LOBYTE(v2) = *(unsigned char *)(v2 + 24);
  sub_22EADDF00(v6, v2);
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v2;
  return a1;
}

uint64_t assignWithCopy for HiddenDescriptionContent(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_22EB41280(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_22EB19DB0(v6, v7);
  uint64_t v8 = *(void *)(v2 + 16);
  LOBYTE(v2) = *(unsigned char *)(v2 + 24);
  sub_22EADDF00(v8, v2);
  uint64_t v9 = *(void *)(a1 + 16);
  char v10 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 24) = v2;
  sub_22EADDB08(v9, v10);
  return a1;
}

uint64_t assignWithTake for HiddenDescriptionContent(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_22EB19DB0(v6, v7);
  char v8 = *((unsigned char *)a2 + 24);
  uint64_t v9 = *(void *)(a1 + 16);
  char v10 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = a2[2];
  *(unsigned char *)(a1 + 24) = v8;
  sub_22EADDB08(v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for HiddenDescriptionContent(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 25))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HiddenDescriptionContent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HiddenDescriptionContent()
{
  return &type metadata for HiddenDescriptionContent;
}

void *sub_22EC0CC70(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    char v10 = (char *)a2 + v8;
    uint64_t v11 = sub_22EE7D5F0();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620830);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v14 = a3[7];
    *((unsigned char *)v4 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    *(void *)((char *)v4 + v14) = *(void *)((char *)a2 + v14);
    uint64_t v15 = a3[8];
    int v16 = (char *)v4 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = *(void *)v17;
    char v19 = v17[8];
    swift_retain();
    sub_22EADDF00(v18, v19);
    *(void *)int v16 = v18;
    v16[8] = v19;
  }
  return v4;
}

uint64_t sub_22EC0CDF8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_22EE7D5F0();
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  swift_release();
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  uint64_t v7 = *(void *)v6;
  char v8 = *(unsigned char *)(v6 + 8);

  return sub_22EADDB08(v7, v8);
}

void *sub_22EC0CEB0(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  char v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_22EE7D5F0();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620830);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  uint64_t v13 = a3[8];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = *(void *)v15;
  char v17 = v15[8];
  swift_retain();
  sub_22EADDF00(v16, v17);
  *(void *)uint64_t v14 = v16;
  v14[8] = v17;
  return a1;
}

void *sub_22EC0CFE8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  char v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22EE7D5F0();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  int v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (!EnumTagSinglePayload)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620830);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
LABEL_7:
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_retain();
  swift_release();
  uint64_t v14 = a3[8];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = *(void *)v16;
  char v18 = v16[8];
  sub_22EADDF00(*(void *)v16, v18);
  uint64_t v19 = *(void *)v15;
  char v20 = v15[8];
  *(void *)uint64_t v15 = v17;
  v15[8] = v18;
  sub_22EADDB08(v19, v20);
  return a1;
}

_OWORD *sub_22EC0D1CC(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  char v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22EE7D5F0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620830);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  uint64_t v12 = a3[8];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  *(void *)uint64_t v13 = *(void *)v14;
  v13[8] = v14[8];
  return a1;
}

void *sub_22EC0D2E4(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  char v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_22EE7D5F0();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  int v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (!EnumTagSinglePayload)
  {
    uint64_t v13 = *(void *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620830);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
LABEL_7:
  uint64_t v15 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
  swift_release();
  uint64_t v16 = a3[8];
  uint64_t v17 = (char *)a1 + v16;
  char v18 = (char *)a2 + v16;
  uint64_t v19 = *(void *)v18;
  LOBYTE(v18) = v18[8];
  uint64_t v20 = *(void *)v17;
  char v21 = v17[8];
  *(void *)uint64_t v17 = v19;
  v17[8] = (char)v18;
  sub_22EADDB08(v20, v21);
  return a1;
}

uint64_t sub_22EC0D4A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EC0D4B4);
}

uint64_t sub_22EC0D4B4(uint64_t a1, int a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_268620830);
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v6 + 84) != a2) {
    return OUTLINED_FUNCTION_20_0(*(void *)(a1 + *(int *)(a3 + 28)));
  }
  uint64_t v7 = OUTLINED_FUNCTION_12_14();

  return __swift_getEnumTagSinglePayload(v7, v8, v9);
}

uint64_t sub_22EC0D530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EC0D544);
}

void sub_22EC0D544(uint64_t a1, int a2, int a3, uint64_t a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_268620830);
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v8 + 84) == a3)
  {
    uint64_t v9 = OUTLINED_FUNCTION_10_14();
    __swift_storeEnumTagSinglePayload(v9, v10, v11, v12);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
}

uint64_t sub_22EC0D5C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22EC0D5F8(a1, a2, a3, (uint64_t)&unk_22EE8FF88, (uint64_t (*)(uint64_t))sub_22EC0D6A8);
}

uint64_t sub_22EC0D5F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t result = a5(319);
  if (v6 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_22EC0D6A8()
{
  if (!qword_268620848[0])
  {
    sub_22EE7D5F0();
    unint64_t v0 = sub_22EE80040();
    if (!v1) {
      atomic_store(v0, qword_268620848);
    }
  }
}

unint64_t sub_22EC0D704()
{
  unint64_t result = qword_2686208D0;
  if (!qword_2686208D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686208D8);
    sub_22EBA3A30((uint64_t)&unk_2686208E0);
    sub_22EADD4C0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686208D0);
  }
  return result;
}

uint64_t sub_22EC0D7A4()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686206C8);
  OUTLINED_FUNCTION_16_13();
  type metadata accessor for PrimaryLabels();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686206D0);
  OUTLINED_FUNCTION_7_18();
  OUTLINED_FUNCTION_11_9();
  swift_getWitnessTable();
  sub_22EE7EA60();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686206D8);
  swift_getTupleTypeMetadata3();
  OUTLINED_FUNCTION_11_9();
  swift_getWitnessTable();
  OUTLINED_FUNCTION_8_17();

  return swift_getWitnessTable();
}

unint64_t sub_22EC0D898()
{
  return sub_22EBA3A30((uint64_t)&unk_2686208E8);
}

uint64_t sub_22EC0D8D4()
{
  return swift_getWitnessTable();
}

uint64_t sub_22EC0D9F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EC0DA10()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EC0DA2C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EC0DA48()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EC0DA8C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EC0DAA8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EC0DAEC@<X0>(uint64_t a1@<X8>)
{
  return sub_22EBF707C(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_22EC0DAF8()
{
  unint64_t result = qword_268620910;
  if (!qword_268620910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620910);
  }
  return result;
}

unint64_t sub_22EC0DB44(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_9_15(a1);
  if (!result)
  {
    uint64_t v5 = v4;
    __swift_instantiateConcreteTypeFromMangledNameAbstract(v3);
    v5();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_22EC0DBC0()
{
  unint64_t result = qword_268620920;
  if (!qword_268620920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620920);
  }
  return result;
}

unint64_t sub_22EC0DC0C()
{
  unint64_t result = qword_268620958;
  if (!qword_268620958)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620940);
    sub_22EBFB73C((uint64_t)&unk_268620960);
    sub_22EBA3A30((uint64_t)&unk_268620968);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620958);
  }
  return result;
}

unint64_t sub_22EC0DCE8()
{
  unint64_t result = qword_2686209D0;
  if (!qword_2686209D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686209A8);
    sub_22EC046EC((uint64_t)&unk_2686209D8);
    sub_22EBA3A30((uint64_t)&qword_26861D048);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686209D0);
  }
  return result;
}

unint64_t sub_22EC0DDC0()
{
  unint64_t result = qword_2686209E0;
  if (!qword_2686209E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686209E8);
    sub_22EC0DE3C();
    sub_22EC0DF00();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686209E0);
  }
  return result;
}

unint64_t sub_22EC0DE3C()
{
  unint64_t result = qword_2686209F0;
  if (!qword_2686209F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686209F8);
    sub_22EBA3A30((uint64_t)&unk_268620A00);
    sub_22EBA3A30((uint64_t)&unk_268620A10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686209F0);
  }
  return result;
}

unint64_t sub_22EC0DF00()
{
  unint64_t result = qword_268620A20;
  if (!qword_268620A20)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620A28);
    sub_22EBFB73C((uint64_t)&qword_26861C3C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620A20);
  }
  return result;
}

unint64_t sub_22EC0DFAC()
{
  unint64_t result = qword_268620A30;
  if (!qword_268620A30)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686209C8);
    sub_22EBA3A30((uint64_t)&unk_268620A00);
    sub_22EADD4C0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620A30);
  }
  return result;
}

ValueMetadata *type metadata accessor for SecondaryLabelStyle()
{
  return &type metadata for SecondaryLabelStyle;
}

uint64_t storeEnumTagSinglePayload for PrimaryLabelStyle(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

ValueMetadata *type metadata accessor for PrimaryLabelStyle()
{
  return &type metadata for PrimaryLabelStyle;
}

uint64_t sub_22EC0E098()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686208F8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620900);
  swift_getTupleTypeMetadata3();
  OUTLINED_FUNCTION_11_9();
  swift_getWitnessTable();
  OUTLINED_FUNCTION_8_17();

  return swift_getWitnessTable();
}

unint64_t sub_22EC0E140()
{
  return sub_22EC046EC((uint64_t)&unk_268620A40);
}

unint64_t sub_22EC0E190()
{
  unint64_t result = qword_268620A50;
  if (!qword_268620A50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620930);
    sub_22EC0E20C();
    sub_22EADD4C0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620A50);
  }
  return result;
}

unint64_t sub_22EC0E20C()
{
  unint64_t result = qword_268620A58;
  if (!qword_268620A58)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620928);
    sub_22EBA3A30((uint64_t)&unk_268620A60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620A58);
  }
  return result;
}

unint64_t sub_22EC0E2A8()
{
  unint64_t result = qword_268620A70;
  if (!qword_268620A70)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620950);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620940);
    sub_22EC0DC0C();
    swift_getOpaqueTypeConformance2();
    sub_22EBFB73C((uint64_t)&qword_26861C3C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620A70);
  }
  return result;
}

unint64_t sub_22EC0E38C()
{
  unint64_t result = qword_268620A78;
  if (!qword_268620A78)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620988);
    sub_22EC0E42C();
    sub_22EBA3A30((uint64_t)&unk_268620A90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620A78);
  }
  return result;
}

unint64_t sub_22EC0E42C()
{
  unint64_t result = qword_268620A80;
  if (!qword_268620A80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620980);
    sub_22EBA3A30((uint64_t)&unk_268620A88);
    sub_22EBA3A30((uint64_t)&qword_26861C3E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620A80);
  }
  return result;
}

unint64_t sub_22EC0E4F0()
{
  return sub_22EC0DB44((uint64_t)&unk_268620918);
}

unint64_t sub_22EC0E52C()
{
  return sub_22EBA3A30((uint64_t)&unk_268620AA0);
}

uint64_t sub_22EC0E568()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EC0E584()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_22EC0E5A0()
{
  unint64_t result = qword_268620AD0;
  if (!qword_268620AD0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620AB0);
    sub_22EBA3A30((uint64_t)&unk_268620AD8);
    sub_22EBA3A30((uint64_t)&qword_26861C3E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620AD0);
  }
  return result;
}

unint64_t sub_22EC0E664()
{
  unint64_t result = qword_268620AE0;
  if (!qword_268620AE0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620AC0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620AB0);
    sub_22EC0E5A0();
    swift_getOpaqueTypeConformance2();
    sub_22EBA3A30((uint64_t)&unk_268620A90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620AE0);
  }
  return result;
}

unint64_t sub_22EC0E738()
{
  unint64_t result = qword_268620B00;
  if (!qword_268620B00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620AF0);
    sub_22EC0E7D8();
    sub_22EBA3A30((uint64_t)&unk_268620A90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620B00);
  }
  return result;
}

unint64_t sub_22EC0E7D8()
{
  unint64_t result = qword_268620B08;
  if (!qword_268620B08)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620AE8);
    sub_22EBA3A30((uint64_t)&unk_268620B10);
    sub_22EBA3A30((uint64_t)&qword_26861C3E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620B08);
  }
  return result;
}

unint64_t sub_22EC0E8A0()
{
  unint64_t result = qword_268620B18;
  if (!qword_268620B18)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620B20);
    sub_22EC0E664();
    sub_22EBFB73C((uint64_t)&qword_26861C3C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620B18);
  }
  return result;
}

unint64_t sub_22EC0E950()
{
  unint64_t result = qword_268620B28;
  if (!qword_268620B28)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620B30);
    sub_22EC0E738();
    sub_22EBFB73C((uint64_t)&qword_26861C3C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620B28);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_6_19()
{
  return swift_getTupleTypeMetadata2();
}

uint64_t OUTLINED_FUNCTION_7_18()
{
  return swift_getTupleTypeMetadata2();
}

uint64_t OUTLINED_FUNCTION_8_17()
{
  return sub_22EE7EAF0();
}

uint64_t OUTLINED_FUNCTION_10_14()
{
  return v0 + *(int *)(v1 + 20);
}

uint64_t OUTLINED_FUNCTION_12_14()
{
  return v0 + *(int *)(v1 + 20);
}

uint64_t OUTLINED_FUNCTION_16_13()
{
  return 255;
}

ValueMetadata *type metadata accessor for RegularSubscriptionOfferViewStyle()
{
  return &type metadata for RegularSubscriptionOfferViewStyle;
}

uint64_t sub_22EC0EAC0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EC0EADC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22EADE214(a1, a2);
  char v3 = (int *)type metadata accessor for RegularSubscriptionOfferView();
  uint64_t v4 = (uint64_t *)(a2 + v3[5]);
  *uint64_t v4 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDD8);
  swift_storeEnumTagMultiPayload();
  uint64_t v5 = (uint64_t *)(a2 + v3[6]);
  *uint64_t v5 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDE0);
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = a2 + v3[7];
  uint64_t result = swift_getKeyPath();
  *(void *)uint64_t v6 = result;
  *(unsigned char *)(v6 + 8) = 0;
  return result;
}

uint64_t sub_22EC0EB9C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22EB6C514();
  *a1 = result;
  return result;
}

uint64_t sub_22EC0EBC8()
{
  return sub_22EB6C550();
}

uint64_t sub_22EC0EC04@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22EB6C514();
  *a1 = result;
  return result;
}

uint64_t sub_22EC0EC30()
{
  return sub_22EB6C550();
}

uint64_t sub_22EC0EC5C(uint64_t a1, uint64_t a2, int a3)
{
  LODWORD(v84) = a3;
  uint64_t v74 = sub_22EE7F540();
  OUTLINED_FUNCTION_0_2();
  uint64_t v73 = v4;
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_3_2();
  uint64_t v86 = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BBA8);
  MEMORY[0x270FA5388](v7 - 8);
  OUTLINED_FUNCTION_18_0();
  uint64_t v77 = v8;
  OUTLINED_FUNCTION_6_5();
  MEMORY[0x270FA5388](v9);
  uint64_t v76 = (char *)v70 - v10;
  OUTLINED_FUNCTION_8_3();
  type metadata accessor for Subscription();
  OUTLINED_FUNCTION_0_2();
  uint64_t v72 = v11;
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_3_2();
  uint64_t v75 = v13;
  OUTLINED_FUNCTION_8_3();
  uint64_t v81 = type metadata accessor for SKLogger();
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_18_0();
  uint64_t v80 = v15;
  OUTLINED_FUNCTION_6_5();
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_12_15();
  uint64_t v79 = v17;
  OUTLINED_FUNCTION_6_5();
  MEMORY[0x270FA5388](v18);
  uint64_t v83 = (uint64_t)v70 - v19;
  v70[0] = sub_22EE801E0();
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v20);
  OUTLINED_FUNCTION_8_3();
  sub_22EE803D0();
  OUTLINED_FUNCTION_0_2();
  v70[1] = v21;
  MEMORY[0x270FA5388](v22);
  swift_getWitnessTable();
  uint64_t v78 = sub_22EE80340();
  OUTLINED_FUNCTION_0_2();
  uint64_t v85 = v23;
  MEMORY[0x270FA5388](v24);
  OUTLINED_FUNCTION_18_0();
  uint64_t v71 = v25;
  OUTLINED_FUNCTION_6_5();
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)v70 - v27;
  uint64_t v87 = a2;
  char v88 = v84 & 1;
  uint64_t v82 = sub_22EE7FB90();
  uint64_t v29 = *(void *)(v82 + 16);
  if (v29 != sub_22EE7FE70())
  {
    uint64_t v30 = OUTLINED_FUNCTION_15_15();
    MEMORY[0x230FACF20](v30);
    swift_getWitnessTable();
    sub_22EE804A0();
    swift_getWitnessTable();
    sub_22EE80490();
    OUTLINED_FUNCTION_5_2();
    v31();
    if (qword_26861B778 != -1) {
      swift_once();
    }
    uint64_t v32 = __swift_project_value_buffer(v81, (uint64_t)qword_26864C398);
    uint64_t v33 = v83;
    sub_22EC10D94(v32, v83, (void (*)(void))type metadata accessor for SKLogger);
    uint64_t v90 = 0;
    unint64_t v91 = 0xE000000000000000;
    sub_22EE801C0();
    OUTLINED_FUNCTION_18_11();
    sub_22EE7FAA0();
    uint64_t v34 = *(void (**)(uint64_t, char *, uint64_t))(v85 + 16);
    uint64_t v84 = v28;
    uint64_t v35 = v78;
    v34(v71, v28, v78);
    swift_getWitnessTable();
    sub_22EE7FCE0();
    MEMORY[0x230FACFB0]();
    sub_22EE7FAA0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v37 = v90;
    unint64_t v36 = v91;
    os_log_type_t v38 = sub_22EE7FFC0();
    swift_bridgeObjectRetain_n();
    uint64_t v39 = sub_22EE7C550();
    if (os_log_type_enabled(v39, v38))
    {
      uint64_t v40 = swift_slowAlloc();
      uint64_t v90 = swift_slowAlloc();
      *(_DWORD *)uint64_t v40 = 136446466;
      uint64_t v89 = OUTLINED_FUNCTION_13_14();
      sub_22EE800B0();
      *(_WORD *)(v40 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v89 = sub_22EC1FA24(v37, v36, &v90);
      uint64_t v35 = v78;
      sub_22EE800B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_22EAC6000, v39, v38, "%{public}s%{public}s", (uint8_t *)v40, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_4_5();
      uint64_t v33 = v83;
      OUTLINED_FUNCTION_4_5();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_22EC10DE8(v33, (void (*)(void))type metadata accessor for SKLogger);
    (*(void (**)(char *, uint64_t))(v85 + 8))(v84, v35);
  }
  uint64_t v41 = MEMORY[0x263F8EE88];
  uint64_t v89 = MEMORY[0x263F8EE88];
  uint64_t v42 = v82;
  uint64_t v43 = *(void *)(v82 + 16);
  if (v43)
  {
    uint64_t v44 = v82 + ((*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80));
    uint64_t v83 = v73 + 8;
    uint64_t v84 = *(char **)(v72 + 72);
    uint64_t v85 = v73 + 32;
    swift_bridgeObjectRetain();
    uint64_t v45 = v74;
    uint64_t v46 = (uint64_t)v76;
    uint64_t v47 = v77;
    uint64_t v48 = v75;
    while (1)
    {
      sub_22EC10D94(v44, v48, (void (*)(void))type metadata accessor for Subscription);
      sub_22EE7F300();
      sub_22EADAD08(v46, v47, &qword_26861BBA8);
      if (__swift_getEnumTagSinglePayload(v47, 1, v45) == 1) {
        break;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t))v85)(v86, v47, v45);
      sub_22EB0584C(v46, &qword_26861BBA8);
      uint64_t v49 = sub_22EE7F490();
      uint64_t v51 = v50;
      OUTLINED_FUNCTION_5_2();
      v52();
      sub_22EB466D4(&v90, v49, v51);
      swift_bridgeObjectRelease();
      sub_22EC10DE8(v48, (void (*)(void))type metadata accessor for Subscription);
      v44 += (uint64_t)v84;
      if (!--v43)
      {
        uint64_t v42 = v82;
        swift_bridgeObjectRelease();
        uint64_t v41 = v89;
        goto LABEL_13;
      }
    }
    uint64_t result = sub_22EB0584C(v47, &qword_26861BBA8);
    __break(1u);
  }
  else
  {
LABEL_13:
    uint64_t v53 = v80;
    uint64_t v54 = v81;
    unint64_t v55 = *(void *)(v41 + 16);
    if (v55 > 1)
    {
      if (qword_26861B778 != -1) {
        swift_once();
      }
      uint64_t v56 = __swift_project_value_buffer(v54, (uint64_t)qword_26864C398);
      sub_22EC10D94(v56, v79, (void (*)(void))type metadata accessor for SKLogger);
      uint64_t v90 = 0;
      unint64_t v91 = 0xE000000000000000;
      sub_22EE801C0();
      OUTLINED_FUNCTION_18_11();
      sub_22EE7FAA0();
      uint64_t v57 = swift_bridgeObjectRetain();
      int v58 = sub_22EC6E10C(v57);
      swift_bridgeObjectRelease();
      MEMORY[0x230FACFB0](v58, MEMORY[0x263F8D310]);
      sub_22EE7FAA0();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v60 = v90;
      unint64_t v59 = v91;
      os_log_type_t v61 = sub_22EE7FFC0();
      swift_bridgeObjectRetain_n();
      uint64_t v62 = sub_22EE7C550();
      os_log_type_t v63 = v61;
      if (os_log_type_enabled(v62, v61))
      {
        uint64_t v64 = swift_slowAlloc();
        uint64_t v90 = swift_slowAlloc();
        *(_DWORD *)uint64_t v64 = 136446466;
        uint64_t v89 = OUTLINED_FUNCTION_13_14();
        sub_22EE800B0();
        *(_WORD *)(v64 + 12) = 2082;
        swift_bridgeObjectRetain();
        uint64_t v89 = sub_22EC1FA24(v60, v59, &v90);
        uint64_t v42 = v82;
        sub_22EE800B0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_22EAC6000, v62, v63, "%{public}s%{public}s", (uint8_t *)v64, 0x16u);
        swift_arrayDestroy();
        uint64_t v53 = v80;
        OUTLINED_FUNCTION_4_5();
        OUTLINED_FUNCTION_4_5();
        swift_bridgeObjectRelease();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      sub_22EC10DE8(v79, (void (*)(void))type metadata accessor for SKLogger);
      unint64_t v55 = *(void *)(v41 + 16);
    }
    swift_bridgeObjectRelease();
    if (!v55)
    {
      if (qword_26861B778 != -1) {
        swift_once();
      }
      uint64_t v65 = __swift_project_value_buffer(v54, (uint64_t)qword_26864C398);
      sub_22EC10D94(v65, v53, (void (*)(void))type metadata accessor for SKLogger);
      os_log_type_t v66 = sub_22EE7FFC0();
      uint64_t v67 = sub_22EE7C550();
      if (os_log_type_enabled(v67, v66))
      {
        uint64_t v68 = swift_slowAlloc();
        uint64_t v90 = swift_slowAlloc();
        *(_DWORD *)uint64_t v68 = 136446466;
        uint64_t v89 = OUTLINED_FUNCTION_13_14();
        sub_22EE800B0();
        *(_WORD *)(v68 + 12) = 2082;
        uint64_t v89 = sub_22EC1FA24(0xD00000000000004BLL, 0x800000022EE839B0, &v90);
        sub_22EE800B0();
        _os_log_impl(&dword_22EAC6000, v67, v66, "%{public}s%{public}s", (uint8_t *)v68, 0x16u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_4_5();
        OUTLINED_FUNCTION_4_5();
      }

      sub_22EC10DE8(v53, (void (*)(void))type metadata accessor for SKLogger);
    }
    return v42;
  }
  return result;
}

uint64_t sub_22EC0F884@<X0>(char *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v27 = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BBA8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_22EE7F780();
  OUTLINED_FUNCTION_0_2();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_9_1();
  uint64_t v15 = v13 - v14;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v26 - v17;
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v19((char *)&v26 - v17, a1, v9);
  sub_22EE7F300();
  uint64_t v20 = sub_22EE7F540();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v20) == 1)
  {
    sub_22EB0584C((uint64_t)v8, &qword_26861BBA8);
    uint64_t v21 = 1;
    uint64_t v22 = v27;
  }
  else
  {
    sub_22EB0584C((uint64_t)v8, &qword_26861BBA8);
    v19((char *)v15, v18, v9);
    uint64_t v22 = v27;
    sub_22EE04E6C(v15, v26, a3 & 1, v27);
    uint64_t v21 = 0;
  }
  OUTLINED_FUNCTION_14_15();
  v23();
  uint64_t v24 = type metadata accessor for Subscription();
  return __swift_storeEnumTagSinglePayload(v22, v21, 1, v24);
}

BOOL sub_22EC0FA64()
{
  sub_22EE7F2B0();
  OUTLINED_FUNCTION_0_2();
  uint64_t v1 = v0;
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_9_1();
  MEMORY[0x270FA5388](v3);
  sub_22EE7F700();
  sub_22EE7F280();
  sub_22EC10D2C((unint64_t *)&qword_26861CA38, MEMORY[0x263F17DE8]);
  char v4 = sub_22EE7F900();
  uint64_t v5 = *(void (**)(void))(v1 + 8);
  OUTLINED_FUNCTION_10_15();
  v5();
  OUTLINED_FUNCTION_10_15();
  v5();
  return (v4 & 1) == 0;
}

BOOL sub_22EC0FB84()
{
  uint64_t v0 = sub_22EE7F6A0();
  OUTLINED_FUNCTION_0_2();
  uint64_t v2 = v1;
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_9_1();
  uint64_t v6 = v4 - v5;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v27 - v8;
  sub_22EE7F6B0();
  sub_22EE7F6B0();
  char v10 = sub_22EE7F690();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v11(v6, v0);
  v11((uint64_t)v9, v0);
  if (v10)
  {
    uint64_t v12 = sub_22EE7F6C0();
    uint64_t v13 = sub_22EE7F6C0();
  }
  else
  {
    uint64_t v14 = sub_22EC0FD10();
    if ((v15 & 1) == 0)
    {
      uint64_t v16 = v14;
      uint64_t v17 = sub_22EC0FD10();
      if ((v18 & 1) == 0) {
        return v16 < v17;
      }
    }
    uint64_t v19 = sub_22EC0FE4C();
    if ((v20 & 1) == 0)
    {
      uint64_t v16 = v19;
      uint64_t v17 = sub_22EC0FE4C();
      if ((v21 & 1) == 0) {
        return v16 < v17;
      }
    }
    uint64_t v22 = sub_22EC0FF88();
    if ((v23 & 1) == 0)
    {
      uint64_t v16 = v22;
      uint64_t v17 = sub_22EC0FF88();
      if ((v24 & 1) == 0) {
        return v16 < v17;
      }
    }
    uint64_t v12 = sub_22EC10114();
    uint64_t v13 = sub_22EC10114();
  }
  return v12 < v13;
}

uint64_t sub_22EC0FD10()
{
  uint64_t v0 = sub_22EE7F6A0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22EE7F6B0();
  int v4 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v3, v0);
  if (v4 == *MEMORY[0x263F17F40]) {
    return sub_22EE7F6C0();
  }
  if (v4 == *MEMORY[0x263F17F48])
  {
    uint64_t v6 = sub_22EE7F6C0();
    uint64_t v7 = (unsigned __int128)(v6 * (__int128)7) >> 64;
    uint64_t result = 7 * v6;
    if (v7 != result >> 63) {
      __break(1u);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return 0;
  }
  return result;
}

uint64_t sub_22EC0FE4C()
{
  uint64_t v0 = sub_22EE7F6A0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22EE7F6B0();
  int v4 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v3, v0);
  if (v4 == *MEMORY[0x263F17F58]) {
    return sub_22EE7F6C0();
  }
  if (v4 == *MEMORY[0x263F17F50])
  {
    uint64_t v6 = sub_22EE7F6C0();
    uint64_t v7 = (unsigned __int128)(v6 * (__int128)12) >> 64;
    uint64_t result = 12 * v6;
    if (v7 != result >> 63) {
      __break(1u);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return 0;
  }
  return result;
}

uint64_t sub_22EC0FF88()
{
  uint64_t v0 = sub_22EE7F6A0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22EE7F6B0();
  int v4 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v3, v0);
  if (v4 == *MEMORY[0x263F17F40])
  {
    if (!(sub_22EE7F6C0() % 7))
    {
      uint64_t v5 = sub_22EE7F6C0() / 7;
LABEL_10:
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      return v5;
    }
    goto LABEL_9;
  }
  if (v4 == *MEMORY[0x263F17F48])
  {
    uint64_t v5 = sub_22EE7F6C0();
    goto LABEL_10;
  }
  if (v4 != *MEMORY[0x263F17F50])
  {
LABEL_9:
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  uint64_t result = sub_22EE7F6C0();
  uint64_t v5 = 52 * result;
  if ((unsigned __int128)(result * (__int128)52) >> 64 == (52 * result) >> 63) {
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_22EC10114()
{
  uint64_t v0 = sub_22EE7F6A0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22EE7F6B0();
  LODWORD(result) = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v3, v0);
  if (result == *MEMORY[0x263F17F40]) {
    return sub_22EE7F6C0();
  }
  if (result == *MEMORY[0x263F17F48])
  {
    uint64_t v5 = sub_22EE7F6C0();
    uint64_t v6 = (unsigned __int128)(v5 * (__int128)7) >> 64;
    uint64_t result = 7 * v5;
    if (v6 == result >> 63) {
      return result;
    }
    __break(1u);
  }
  if (result == *MEMORY[0x263F17F58])
  {
    uint64_t v7 = sub_22EE7F6C0();
    uint64_t v8 = (unsigned __int128)(v7 * (__int128)28) >> 64;
    uint64_t result = 28 * v7;
    if (v8 == result >> 63) {
      return result;
    }
    __break(1u);
  }
  if (result == *MEMORY[0x263F17F50])
  {
    uint64_t v9 = sub_22EE7F6C0();
    uint64_t result = 365 * v9;
    if ((unsigned __int128)(v9 * (__int128)365) >> 64 == (365 * v9) >> 63) {
      return result;
    }
    __break(1u);
  }
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return -1;
}

uint64_t sub_22EC102AC(uint64_t a1, uint64_t a2, int a3)
{
  LODWORD(v97) = a3;
  uint64_t v100 = a2;
  uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB98);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_3_2();
  uint64_t v92 = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
  MEMORY[0x270FA5388](v6 - 8);
  OUTLINED_FUNCTION_18_0();
  uint64_t v89 = v7;
  OUTLINED_FUNCTION_6_5();
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_12_15();
  uint64_t v88 = v9;
  OUTLINED_FUNCTION_6_5();
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_12_15();
  uint64_t v95 = v11;
  OUTLINED_FUNCTION_6_5();
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_12_15();
  uint64_t v91 = v13;
  OUTLINED_FUNCTION_6_5();
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_12_15();
  uint64_t v90 = v15;
  OUTLINED_FUNCTION_6_5();
  MEMORY[0x270FA5388](v16);
  int v94 = (char *)v83 - v17;
  OUTLINED_FUNCTION_8_3();
  uint64_t v98 = sub_22EE7F670();
  OUTLINED_FUNCTION_0_2();
  uint64_t v96 = v18;
  MEMORY[0x270FA5388](v19);
  OUTLINED_FUNCTION_18_0();
  uint64_t v87 = v20;
  OUTLINED_FUNCTION_6_5();
  MEMORY[0x270FA5388](v21);
  char v23 = (char *)v83 - v22;
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)v83 - v25;
  uint64_t v27 = sub_22EE7F6E0();
  OUTLINED_FUNCTION_0_2();
  uint64_t v99 = v28;
  MEMORY[0x270FA5388](v29);
  OUTLINED_FUNCTION_9_1();
  uint64_t v32 = v30 - v31;
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = (char *)v83 - v34;
  swift_getKeyPath();
  uint64_t v101 = a1;
  uint64_t v36 = sub_22EC6ADFC();
  swift_release();
  swift_getKeyPath();
  uint64_t v37 = sub_22EC6ADFC();
  swift_release();
  if (v36 != v37)
  {
    swift_getKeyPath();
    uint64_t v50 = sub_22EC6ADFC();
    swift_release();
    swift_getKeyPath();
    uint64_t v51 = sub_22EC6ADFC();
    swift_release();
    char v52 = v50 < v51;
    return v52 & 1;
  }
  uint64_t v85 = v23;
  uint64_t v86 = v26;
  uint64_t v38 = v98;
  swift_getKeyPath();
  sub_22EC6AF28();
  swift_release();
  swift_getKeyPath();
  sub_22EC6AF28();
  swift_release();
  uint64_t v39 = sub_22EC10D2C(&qword_268620B38, MEMORY[0x263F17F60]);
  char v40 = sub_22EE7F900();
  uint64_t v41 = v99;
  uint64_t v42 = *(void (**)(void))(v99 + 8);
  OUTLINED_FUNCTION_15_15();
  OUTLINED_FUNCTION_14_15();
  v42();
  OUTLINED_FUNCTION_14_15();
  v42();
  uint64_t v43 = v41 + 8;
  uint64_t v44 = v35;
  if ((v40 & 1) == 0)
  {
    uint64_t v99 = v43;
    swift_getKeyPath();
    sub_22EC6AF28();
    swift_release();
    swift_getKeyPath();
    sub_22EC6AF28();
    swift_release();
    char v52 = sub_22EC0FB84();
    uint64_t v53 = OUTLINED_FUNCTION_15_15();
    ((void (*)(uint64_t))v42)(v53);
    OUTLINED_FUNCTION_10_15();
    v42();
    return v52 & 1;
  }
  if ((v97 & 1) == 0) {
    goto LABEL_29;
  }
  uint64_t v97 = v39;
  uint64_t v99 = v43;
  uint64_t v84 = v32;
  swift_getKeyPath();
  uint64_t v45 = (uint64_t)v94;
  sub_22EC6AF28();
  swift_release();
  OUTLINED_FUNCTION_2_10(v45);
  if (v58)
  {
    uint64_t v46 = v45;
    uint64_t v47 = v96;
    uint64_t v49 = v91;
    uint64_t v48 = v92;
  }
  else
  {
    uint64_t v54 = v45;
    v83[1] = v44;
    uint64_t v55 = v96;
    uint64_t v56 = *(void (**)(char *, uint64_t, uint64_t))(v96 + 32);
    v56(v86, v54, v38);
    swift_getKeyPath();
    uint64_t v57 = v90;
    sub_22EC6AF28();
    swift_release();
    OUTLINED_FUNCTION_2_10(v57);
    if (!v58)
    {
      v56(v85, v57, v38);
      sub_22EE7F650();
      uint64_t v66 = v84;
      sub_22EE7F650();
      char v67 = sub_22EE7F900();
      ((void (*)(uint64_t, uint64_t))v42)(v66, v27);
      OUTLINED_FUNCTION_11_14();
      v42();
      if ((v67 & 1) == 0)
      {
        sub_22EE7F650();
        sub_22EE7F650();
        char v52 = sub_22EC0FB84();
        OUTLINED_FUNCTION_11_14();
        v42();
        OUTLINED_FUNCTION_11_14();
        v42();
        uint64_t v79 = *(void (**)(void))(v96 + 8);
        OUTLINED_FUNCTION_14_15();
        v79();
        OUTLINED_FUNCTION_14_15();
        v79();
        return v52 & 1;
      }
      sub_22EE7F640();
      OUTLINED_FUNCTION_20_9();
      OUTLINED_FUNCTION_9_17();
      uint64_t v68 = v96;
      if ((v69 & 1) == 0)
      {
        uint64_t v80 = v86;
        sub_22EE7F640();
        OUTLINED_FUNCTION_20_9();
        char v52 = sub_22EE80020();
        uint64_t v81 = *(void (**)(void))(v68 + 8);
        OUTLINED_FUNCTION_5_15();
        v81();
        ((void (*)(char *, uint64_t))v81)(v80, v38);
        return v52 & 1;
      }
      uint64_t v70 = *(void (**)(void))(v96 + 8);
      OUTLINED_FUNCTION_5_15();
      v70();
      OUTLINED_FUNCTION_5_15();
      v70();
      goto LABEL_29;
    }
    (*(void (**)(char *, uint64_t))(v55 + 8))(v86, v38);
    uint64_t v49 = v91;
    uint64_t v48 = v92;
    uint64_t v46 = v57;
    uint64_t v47 = v55;
  }
  sub_22EB0584C(v46, &qword_26861BB58);
  swift_getKeyPath();
  sub_22EC6AF28();
  swift_release();
  swift_getKeyPath();
  uint64_t v59 = v95;
  sub_22EC6AF28();
  swift_release();
  uint64_t v60 = v48 + *(int *)(v93 + 48);
  sub_22EADAD08(v49, v48, &qword_26861BB58);
  sub_22EADAD08(v59, v60, &qword_26861BB58);
  OUTLINED_FUNCTION_2_10(v48);
  if (v58)
  {
    sub_22EB0584C(v59, &qword_26861BB58);
    sub_22EB0584C(v49, &qword_26861BB58);
    OUTLINED_FUNCTION_2_10(v60);
    if (v58)
    {
      sub_22EB0584C(v48, &qword_26861BB58);
      goto LABEL_29;
    }
    goto LABEL_20;
  }
  uint64_t v61 = v88;
  sub_22EADAD08(v48, v88, &qword_26861BB58);
  OUTLINED_FUNCTION_2_10(v60);
  if (v62)
  {
    sub_22EB0584C(v95, &qword_26861BB58);
    uint64_t v63 = OUTLINED_FUNCTION_15_15();
    sub_22EB0584C(v63, v64);
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v61, v38);
LABEL_20:
    sub_22EB0584C(v48, &qword_26861BB98);
    goto LABEL_21;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 32))(v87, v60, v38);
  sub_22EC10D2C((unint64_t *)&qword_26861BBA0, MEMORY[0x263F17F28]);
  char v71 = sub_22EE7F900();
  uint64_t v72 = *(void (**)(void))(v47 + 8);
  OUTLINED_FUNCTION_5_15();
  v72();
  sub_22EB0584C(v95, &qword_26861BB58);
  sub_22EB0584C(v49, &qword_26861BB58);
  OUTLINED_FUNCTION_5_15();
  v72();
  sub_22EB0584C(v48, &qword_26861BB58);
  if (v71)
  {
LABEL_29:
    sub_22EE7F740();
    sub_22EE7F740();
    OUTLINED_FUNCTION_9_17();
    if (v73)
    {
      uint64_t v74 = sub_22EE7F2D0();
      uint64_t v76 = v75;
      if (v74 == sub_22EE7F2D0() && v76 == v77)
      {
        swift_bridgeObjectRelease_n();
        char v52 = 0;
      }
      else
      {
        char v52 = sub_22EE80660();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      sub_22EE7F740();
      sub_22EE7F740();
      char v52 = sub_22EE80020();
    }
    return v52 & 1;
  }
LABEL_21:
  swift_getKeyPath();
  uint64_t v65 = v89;
  sub_22EC6AF28();
  swift_release();
  OUTLINED_FUNCTION_2_10(v65);
  if (v58) {
    char v52 = 0;
  }
  else {
    char v52 = 1;
  }
  sub_22EB0584C(v65, &qword_26861BB58);
  return v52 & 1;
}

uint64_t sub_22EC10C68@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_22EE7F410();
  *a1 = result;
  return result;
}

uint64_t sub_22EC10C94()
{
  return sub_22EE7F480();
}

uint64_t sub_22EC10CB8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_22EE7F410();
  *a1 = result;
  return result;
}

uint64_t sub_22EC10CE4()
{
  return sub_22EE7F480();
}

uint64_t sub_22EC10D08()
{
  return sub_22EE7F460();
}

uint64_t sub_22EC10D2C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22EC10D74@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22EC0F884(a1, *(void *)(v2 + 16), *(unsigned char *)(v2 + 24), a2);
}

uint64_t sub_22EC10D94(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_2_0();
  uint64_t v4 = OUTLINED_FUNCTION_16_0();
  v5(v4);
  return a2;
}

uint64_t sub_22EC10DE8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_5_2();
  v3();
  return a1;
}

uint64_t OUTLINED_FUNCTION_2_10(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

void OUTLINED_FUNCTION_9_17()
{
  JUMPOUT(0x230FAD370);
}

uint64_t OUTLINED_FUNCTION_13_14()
{
  return sub_22EC1FA24(0, 0xE000000000000000, (uint64_t *)(v0 - 112));
}

uint64_t OUTLINED_FUNCTION_15_15()
{
  return v0;
}

void OUTLINED_FUNCTION_18_11()
{
  uint64_t v1 = *(void *)(v0 - 104);
  *(void *)(v0 - 112) = *(void *)(v0 - 112);
  *(void *)(v0 - 104) = v1;
}

uint64_t OUTLINED_FUNCTION_20_9()
{
  return sub_22EE7F640();
}

uint64_t sub_22EC10F28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620B40);
  MEMORY[0x270FA5388](v18 - 8);
  OUTLINED_FUNCTION_11_0();
  uint64_t v21 = (void *)(v20 - v19);
  if (a2)
  {
    *uint64_t v21 = a1;
    v21[1] = a2;
    uint64_t v22 = type metadata accessor for ProductViewText.Storage(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v23 = (uint64_t)v21;
    uint64_t v24 = 0;
    uint64_t v25 = v22;
  }
  else
  {
    uint64_t v25 = type metadata accessor for ProductViewText.Storage(0);
    uint64_t v23 = (uint64_t)v21;
    uint64_t v24 = 1;
  }
  __swift_storeEnumTagSinglePayload(v23, v24, 1, v25);
  return sub_22EC11064((uint64_t)v21, a3, a4 & 1, a5 & 1, a6, a7, a8, a9);
}

uint64_t type metadata accessor for ProductViewText.Storage(uint64_t a1)
{
  return sub_22EAD01C0(a1, (uint64_t *)&unk_268620B48);
}

uint64_t sub_22EC11064@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  if (qword_26861B678 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for LayoutMetrics(0);
  uint64_t v16 = __swift_project_value_buffer(v15, (uint64_t)qword_26864BF58);
  sub_22EC1C880(v16, a8, (void (*)(void))type metadata accessor for LayoutMetrics);
  uint64_t v17 = type metadata accessor for PlaceholderLayouts(0);
  uint64_t v18 = a8 + *(int *)(v17 + 20);
  if (qword_26861B680 != -1) {
    swift_once();
  }
  uint64_t v19 = __swift_project_value_buffer(v15, (uint64_t)qword_26864BF70);
  sub_22EC1C880(v19, v18, (void (*)(void))type metadata accessor for LayoutMetrics);
  uint64_t v20 = a8 + *(int *)(v17 + 24);
  if (qword_26861B688 != -1) {
    swift_once();
  }
  uint64_t v21 = __swift_project_value_buffer(v15, (uint64_t)qword_26864BF88);
  sub_22EC1C880(v21, v20, (void (*)(void))type metadata accessor for LayoutMetrics);
  uint64_t v22 = (int *)type metadata accessor for ProductViewText(0);
  uint64_t v23 = (uint64_t *)(a8 + v22[11]);
  *uint64_t v23 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDD8);
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = (uint64_t *)(a8 + v22[12]);
  uint64_t *v24 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDE0);
  swift_storeEnumTagMultiPayload();
  sub_22EADAD08(a1, a8 + v22[5], &qword_268620B40);
  *(unsigned char *)(a8 + v22[6]) = a2;
  *(unsigned char *)(a8 + v22[7]) = a3 & 1;
  *(unsigned char *)(a8 + v22[8]) = a4 & 1;
  sub_22EC11644(a5, a2, (uint64_t)__src);
  memcpy((void *)(a8 + v22[9]), __src, 0x59uLL);
  if (a7)
  {
    uint64_t v25 = a6;
  }
  else
  {
    if (a2)
    {
      if (a2 == 1)
      {
        if (qword_26861B6B8 != -1) {
          swift_once();
        }
        uint64_t v26 = &qword_26864C018;
      }
      else
      {
        if (qword_26861B6B8 != -1) {
          swift_once();
        }
        uint64_t v26 = &qword_26864C038;
      }
    }
    else
    {
      if (qword_26861B6B8 != -1) {
        swift_once();
      }
      uint64_t v26 = &qword_26864C008;
    }
    uint64_t v25 = *v26;
    a7 = v26[1];
    swift_bridgeObjectRetain();
  }
  uint64_t result = sub_22EADAC74(a1, &qword_268620B40);
  uint64_t v28 = (uint64_t *)(a8 + v22[10]);
  *uint64_t v28 = v25;
  v28[1] = a7;
  return result;
}

uint64_t type metadata accessor for ProductViewText(uint64_t a1)
{
  return sub_22EAD01C0(a1, (uint64_t *)&unk_268620B58);
}

uint64_t sub_22EC113F4@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v12 = sub_22EE7C220();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_11_0();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861CA00);
  MEMORY[0x270FA5388](v17 - 8);
  OUTLINED_FUNCTION_11_0();
  uint64_t v20 = v19 - v18;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620B40);
  MEMORY[0x270FA5388](v21 - 8);
  OUTLINED_FUNCTION_11_0();
  uint64_t v24 = v23 - v22;
  sub_22EADAD08(a1, v20, &qword_26861CA00);
  if (__swift_getEnumTagSinglePayload(v20, 1, v12) == 1)
  {
    uint64_t v25 = type metadata accessor for ProductViewText.Storage(0);
    uint64_t v26 = v24;
    uint64_t v27 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v16, v20, v12);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v24, v16, v12);
    uint64_t v28 = type metadata accessor for ProductViewText.Storage(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v16, v12);
    uint64_t v26 = v24;
    uint64_t v27 = 0;
    uint64_t v25 = v28;
  }
  __swift_storeEnumTagSinglePayload(v26, v27, 1, v25);
  sub_22EC11064(v24, a2, a3 & 1, a4 & 1, a5, a6, a7, a8);
  return sub_22EADAC74(a1, &qword_26861CA00);
}

uint64_t sub_22EC11644@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  sub_22EADAE38(a1, (uint64_t)&v17, &qword_26861F4D8);
  if (v29 == 1)
  {
    if (a2)
    {
      uint64_t v5 = 0x402C000000000000;
      uint64_t v6 = 0;
      char v7 = 1;
      if (a2 == 1) {
        uint64_t v8 = 0x4054000000000000;
      }
      else {
        uint64_t v8 = 0x4059000000000000;
      }
      char v9 = 0;
      if (a2 == 1) {
        uint64_t v10 = 0x4054000000000000;
      }
      else {
        uint64_t v10 = 0x4059000000000000;
      }
      char v11 = 0;
      uint64_t v12 = 0;
      uint64_t result = 1;
      if (a2 == 1) {
        uint64_t v14 = 0x4024000000000000;
      }
      else {
        uint64_t v14 = 0x402C000000000000;
      }
      char v15 = 0;
      if (a2 == 1) {
        uint64_t v5 = 0x4024000000000000;
      }
      char v16 = 0;
    }
    else
    {
      char v9 = 0;
      char v11 = 0;
      char v15 = 0;
      char v16 = 0;
      uint64_t v6 = 0;
      uint64_t v14 = 0x4032000000000000;
      uint64_t v8 = 0x405E000000000000;
      char v7 = 1;
      uint64_t v10 = 0x405E000000000000;
      uint64_t v12 = 0;
      uint64_t result = 1;
      uint64_t v5 = 0x4032000000000000;
    }
  }
  else
  {
    uint64_t v6 = v17;
    char v7 = v18;
    uint64_t v8 = v19;
    char v9 = v20;
    uint64_t v10 = v21;
    char v11 = v22;
    uint64_t v12 = v23;
    uint64_t result = v24;
    uint64_t v14 = v25;
    char v15 = v26;
    uint64_t v5 = v27;
    char v16 = v28;
  }
  *(void *)a3 = v6;
  *(unsigned char *)(a3 + 8) = v7;
  *(void *)(a3 + 16) = v8;
  *(unsigned char *)(a3 + 24) = v9;
  *(void *)(a3 + 32) = v10;
  *(unsigned char *)(a3 + 40) = v11;
  *(void *)(a3 + 48) = v12;
  *(unsigned char *)(a3 + 56) = result;
  *(void *)(a3 + 64) = v14;
  *(unsigned char *)(a3 + 72) = v15;
  *(void *)(a3 + 80) = v5;
  *(unsigned char *)(a3 + 88) = v16;
  return result;
}

uint64_t sub_22EC11778(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *(void *)a1 = *a2;
    a1 = v7 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v8 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v8;
        *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
        *(void *)(a1 + 24) = a2[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 2u:
        uint64_t v9 = sub_22EE7C220();
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        break;
      case 3u:
        _s11PriceStringOMa(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          uint64_t v28 = sub_22EE7F6E0();
          (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v28 - 8) + 16))(a1, a2, v28);
          uint64_t v29 = _s20LocalizationResourceVMa();
          *(_OWORD *)(a1 + *(int *)(v29 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v29 + 20));
        }
        else if (EnumCaseMultiPayload == 1)
        {
          uint64_t v11 = a2[1];
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = v11;
          uint64_t v12 = _s22LocalizedPriceResourceVMa(0);
          uint64_t v13 = *(int *)(v12 + 20);
          uint64_t v14 = a1 + v13;
          uint64_t v15 = (uint64_t)a2 + v13;
          uint64_t v16 = sub_22EE7F6E0();
          uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16);
          swift_bridgeObjectRetain();
          uint64_t v42 = v16;
          v17(v14, v15, v16);
          uint64_t v18 = *(int *)(v12 + 24);
          uint64_t v19 = (void *)(a1 + v18);
          char v20 = (uint64_t *)((char *)a2 + v18);
          uint64_t v21 = _s22LocalizedPriceResourceV6FormatOMa(0);
          int v22 = swift_getEnumCaseMultiPayload();
          if (v22 == 3)
          {
            uint64_t v31 = v20[1];
            *uint64_t v19 = *v20;
            v19[1] = v31;
            uint64_t v32 = (int *)_s15PricePropertiesVMa(0);
            uint64_t v33 = v32[5];
            uint64_t v34 = (char *)v19 + v33;
            uint64_t v41 = (char *)v20 + v33;
            uint64_t v35 = sub_22EE7F5D0();
            uint64_t v39 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16);
            swift_bridgeObjectRetain();
            v39(v34, v41, v35);
            v17((uint64_t)v19 + v32[6], (uint64_t)v20 + v32[6], v42);
            *(void *)((char *)v19 + v32[7]) = *(void *)((char *)v20 + v32[7]);
            swift_storeEnumTagMultiPayload();
          }
          else if (v22 == 2)
          {
            uint64_t v23 = v20[1];
            *uint64_t v19 = *v20;
            v19[1] = v23;
            unsigned __int8 v24 = (int *)_s15PricePropertiesVMa(0);
            uint64_t v25 = v24[5];
            uint64_t v38 = (char *)v20 + v25;
            char v40 = (char *)v19 + v25;
            uint64_t v26 = sub_22EE7F5D0();
            uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
            swift_bridgeObjectRetain();
            v37(v40, v38, v26);
            v17((uint64_t)v19 + v24[6], (uint64_t)v20 + v24[6], v42);
            *(void *)((char *)v19 + v24[7]) = *(void *)((char *)v20 + v24[7]);
            uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
            *((unsigned char *)v19 + *(int *)(v27 + 48)) = *((unsigned char *)v20 + *(int *)(v27 + 48));
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
          }
        }
        else
        {
          uint64_t v30 = a2[1];
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = v30;
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        break;
      default:
        uint64_t v6 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v6;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_22EC11C00(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      goto LABEL_9;
    case 1:
      swift_bridgeObjectRelease();
      goto LABEL_9;
    case 2:
      uint64_t v3 = sub_22EE7C220();
      goto LABEL_4;
    case 3:
      _s11PriceStringOMa(0);
      uint64_t result = swift_getEnumCaseMultiPayload();
      switch(result)
      {
        case 2:
          uint64_t v3 = sub_22EE7F6E0();
LABEL_4:
          uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
          uint64_t v5 = v3;
          uint64_t v6 = a1;
LABEL_5:
          return v4(v6, v5);
        case 1:
          swift_bridgeObjectRelease();
          uint64_t v7 = _s22LocalizedPriceResourceVMa(0);
          uint64_t v8 = a1 + *(int *)(v7 + 20);
          uint64_t v9 = sub_22EE7F6E0();
          uint64_t v14 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
          v14(v8, v9);
          uint64_t v10 = a1 + *(int *)(v7 + 24);
          _s22LocalizedPriceResourceV6FormatOMa(0);
          uint64_t result = swift_getEnumCaseMultiPayload();
          if (result != 3 && result != 2) {
            return result;
          }
          swift_bridgeObjectRelease();
          uint64_t v11 = _s15PricePropertiesVMa(0);
          uint64_t v12 = v10 + *(int *)(v11 + 20);
          uint64_t v13 = sub_22EE7F5D0();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
          uint64_t v6 = v10 + *(int *)(v11 + 24);
          uint64_t v5 = v9;
          uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))v14;
          goto LABEL_5;
        case 0:
LABEL_9:
          return swift_bridgeObjectRelease();
      }
      return result;
    default:
      return result;
  }
}

uint64_t sub_22EC11E28(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v5 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v5;
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 2u:
      uint64_t v6 = sub_22EE7C220();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      break;
    case 3u:
      _s11PriceStringOMa(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v25 = sub_22EE7F6E0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
        uint64_t v26 = _s20LocalizationResourceVMa();
        *(_OWORD *)(a1 + *(int *)(v26 + 20)) = *(_OWORD *)(a2 + *(int *)(v26 + 20));
      }
      else if (EnumCaseMultiPayload == 1)
      {
        uint64_t v8 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v8;
        uint64_t v9 = _s22LocalizedPriceResourceVMa(0);
        uint64_t v10 = *(int *)(v9 + 20);
        uint64_t v11 = a1 + v10;
        uint64_t v12 = a2 + v10;
        uint64_t v13 = sub_22EE7F6E0();
        uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v39 = v13;
        v14(v11, v12, v13);
        uint64_t v15 = *(int *)(v9 + 24);
        uint64_t v16 = (void *)(a1 + v15);
        uint64_t v17 = (void *)(a2 + v15);
        uint64_t v18 = _s22LocalizedPriceResourceV6FormatOMa(0);
        int v19 = swift_getEnumCaseMultiPayload();
        if (v19 == 3)
        {
          uint64_t v28 = v17[1];
          *uint64_t v16 = *v17;
          v16[1] = v28;
          uint64_t v29 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v30 = v29[5];
          uint64_t v31 = (char *)v16 + v30;
          uint64_t v38 = (char *)v17 + v30;
          uint64_t v32 = sub_22EE7F5D0();
          uint64_t v36 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16);
          swift_bridgeObjectRetain();
          v36(v31, v38, v32);
          v14((uint64_t)v16 + v29[6], (uint64_t)v17 + v29[6], v39);
          *(void *)((char *)v16 + v29[7]) = *(void *)((char *)v17 + v29[7]);
          swift_storeEnumTagMultiPayload();
        }
        else if (v19 == 2)
        {
          uint64_t v20 = v17[1];
          *uint64_t v16 = *v17;
          v16[1] = v20;
          uint64_t v21 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v22 = v21[5];
          uint64_t v35 = (char *)v17 + v22;
          uint64_t v37 = (char *)v16 + v22;
          uint64_t v23 = sub_22EE7F5D0();
          uint64_t v34 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
          swift_bridgeObjectRetain();
          v34(v37, v35, v23);
          v14((uint64_t)v16 + v21[6], (uint64_t)v17 + v21[6], v39);
          *(void *)((char *)v16 + v21[7]) = *(void *)((char *)v17 + v21[7]);
          uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
          *((unsigned char *)v16 + *(int *)(v24 + 48)) = *((unsigned char *)v17 + *(int *)(v24 + 48));
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
        }
      }
      else
      {
        uint64_t v27 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v27;
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      break;
    default:
      uint64_t v4 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v4;
      swift_bridgeObjectRetain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_22EC12260(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_22EC1C8D4(a1, (void (*)(void))type metadata accessor for ProductViewText.Storage);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 2u:
        uint64_t v4 = sub_22EE7C220();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
        break;
      case 3u:
        _s11PriceStringOMa(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          uint64_t v21 = sub_22EE7F6E0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
          uint64_t v22 = _s20LocalizationResourceVMa();
          *(_OWORD *)(a1 + *(int *)(v22 + 20)) = *(_OWORD *)(a2 + *(int *)(v22 + 20));
        }
        else if (EnumCaseMultiPayload == 1)
        {
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          uint64_t v6 = _s22LocalizedPriceResourceVMa(0);
          uint64_t v7 = *(int *)(v6 + 20);
          uint64_t v8 = a1 + v7;
          uint64_t v9 = a2 + v7;
          uint64_t v10 = sub_22EE7F6E0();
          uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
          swift_bridgeObjectRetain();
          uint64_t v33 = v10;
          v11(v8, v9, v10);
          uint64_t v12 = *(int *)(v6 + 24);
          uint64_t v13 = (void *)(a1 + v12);
          uint64_t v14 = (void *)(a2 + v12);
          uint64_t v15 = _s22LocalizedPriceResourceV6FormatOMa(0);
          int v16 = swift_getEnumCaseMultiPayload();
          if (v16 == 3)
          {
            *uint64_t v13 = *v14;
            v13[1] = v14[1];
            uint64_t v23 = (int *)_s15PricePropertiesVMa(0);
            uint64_t v24 = v23[5];
            uint64_t v25 = (char *)v13 + v24;
            uint64_t v32 = (char *)v14 + v24;
            uint64_t v26 = sub_22EE7F5D0();
            uint64_t v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
            swift_bridgeObjectRetain();
            v30(v25, v32, v26);
            v11((uint64_t)v13 + v23[6], (uint64_t)v14 + v23[6], v33);
            *(void *)((char *)v13 + v23[7]) = *(void *)((char *)v14 + v23[7]);
            swift_storeEnumTagMultiPayload();
          }
          else if (v16 == 2)
          {
            *uint64_t v13 = *v14;
            v13[1] = v14[1];
            uint64_t v17 = (int *)_s15PricePropertiesVMa(0);
            uint64_t v18 = v17[5];
            uint64_t v29 = (char *)v14 + v18;
            uint64_t v31 = (char *)v13 + v18;
            uint64_t v19 = sub_22EE7F5D0();
            uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
            swift_bridgeObjectRetain();
            v28(v31, v29, v19);
            v11((uint64_t)v13 + v17[6], (uint64_t)v14 + v17[6], v33);
            *(void *)((char *)v13 + v17[7]) = *(void *)((char *)v14 + v17[7]);
            uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
            *((unsigned char *)v13 + *(int *)(v20 + 48)) = *((unsigned char *)v14 + *(int *)(v20 + 48));
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
          }
        }
        else
        {
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        break;
      default:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_22EC126EC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    uint64_t v8 = _s11PriceStringOMa(0);
    int v9 = swift_getEnumCaseMultiPayload();
    if (v9 == 2)
    {
      uint64_t v25 = sub_22EE7F6E0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v25 - 8) + 32))(a1, a2, v25);
      uint64_t v26 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)a1 + *(int *)(v26 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v26 + 20));
    }
    else
    {
      if (v9 != 1)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
        goto LABEL_16;
      }
      *a1 = *a2;
      uint64_t v10 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v11 = *(int *)(v10 + 20);
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = sub_22EE7F6E0();
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32);
      v15(v12, v13, v14);
      uint64_t v16 = *(int *)(v10 + 24);
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v20 = swift_getEnumCaseMultiPayload();
      if (v20 == 3)
      {
        *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
        uint64_t v27 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v28 = v27[5];
        uint64_t v32 = &v18[v28];
        uint64_t v34 = &v17[v28];
        uint64_t v29 = sub_22EE7F5D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v34, v32, v29);
        v15(&v17[v27[6]], &v18[v27[6]], v14);
        *(void *)&v17[v27[7]] = *(void *)&v18[v27[7]];
      }
      else
      {
        if (v20 != 2)
        {
          memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
          goto LABEL_15;
        }
        *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
        uint64_t v21 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v22 = v21[5];
        uint64_t v31 = &v18[v22];
        uint64_t v33 = &v17[v22];
        uint64_t v23 = sub_22EE7F5D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v33, v31, v23);
        v15(&v17[v21[6]], &v18[v21[6]], v14);
        *(void *)&v17[v21[7]] = *(void *)&v18[v21[7]];
        uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v17[*(int *)(v24 + 48)] = v18[*(int *)(v24 + 48)];
      }
      swift_storeEnumTagMultiPayload();
    }
LABEL_15:
    swift_storeEnumTagMultiPayload();
    goto LABEL_16;
  }
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v7 = sub_22EE7C220();
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
LABEL_16:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

_OWORD *sub_22EC12A90(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  sub_22EC1C8D4((uint64_t)a1, (void (*)(void))type metadata accessor for ProductViewText.Storage);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    uint64_t v8 = _s11PriceStringOMa(0);
    int v9 = swift_getEnumCaseMultiPayload();
    if (v9 == 2)
    {
      uint64_t v25 = sub_22EE7F6E0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v25 - 8) + 32))(a1, a2, v25);
      uint64_t v26 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)a1 + *(int *)(v26 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v26 + 20));
    }
    else
    {
      if (v9 != 1)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
        goto LABEL_17;
      }
      *a1 = *a2;
      uint64_t v10 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v11 = *(int *)(v10 + 20);
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = sub_22EE7F6E0();
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32);
      v15(v12, v13, v14);
      uint64_t v16 = *(int *)(v10 + 24);
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v20 = swift_getEnumCaseMultiPayload();
      if (v20 == 3)
      {
        *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
        uint64_t v27 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v28 = v27[5];
        uint64_t v32 = &v18[v28];
        uint64_t v34 = &v17[v28];
        uint64_t v29 = sub_22EE7F5D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v34, v32, v29);
        v15(&v17[v27[6]], &v18[v27[6]], v14);
        *(void *)&v17[v27[7]] = *(void *)&v18[v27[7]];
      }
      else
      {
        if (v20 != 2)
        {
          memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
          goto LABEL_16;
        }
        *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
        uint64_t v21 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v22 = v21[5];
        uint64_t v31 = &v18[v22];
        uint64_t v33 = &v17[v22];
        uint64_t v23 = sub_22EE7F5D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v33, v31, v23);
        v15(&v17[v21[6]], &v18[v21[6]], v14);
        *(void *)&v17[v21[7]] = *(void *)&v18[v21[7]];
        uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v17[*(int *)(v24 + 48)] = v18[*(int *)(v24 + 48)];
      }
      swift_storeEnumTagMultiPayload();
    }
LABEL_16:
    swift_storeEnumTagMultiPayload();
    goto LABEL_17;
  }
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v7 = sub_22EE7C220();
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
LABEL_17:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

uint64_t sub_22EC12E58()
{
  uint64_t result = sub_22EE7C220();
  if (v1 <= 0x3F)
  {
    uint64_t result = _s11PriceStringOMa(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_22EC12F30(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA28);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
    *(_OWORD *)((char *)a1 + *(int *)(v7 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v7 + 48));
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
  }
  uint64_t v11 = (int *)type metadata accessor for LayoutMetrics(0);
  uint64_t v12 = v11[5];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v12, 1, v7))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v13, v14, v16);
    *(_OWORD *)&v13[*(int *)(v7 + 48)] = *(_OWORD *)&v14[*(int *)(v7 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v7);
  }
  uint64_t v17 = v11[6];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v17, 1, v7))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v18, v19, v21);
    *(_OWORD *)&v18[*(int *)(v7 + 48)] = *(_OWORD *)&v19[*(int *)(v7 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v7);
  }
  uint64_t v22 = v11[7];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v22, 1, v7))
  {
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v23, v24, v26);
    *(_OWORD *)&v23[*(int *)(v7 + 48)] = *(_OWORD *)&v24[*(int *)(v7 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v7);
  }
  uint64_t v27 = v11[8];
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v27, 1, v7))
  {
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v28, v29, v31);
    *(_OWORD *)&v28[*(int *)(v7 + 48)] = *(_OWORD *)&v29[*(int *)(v7 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v7);
  }
  uint64_t v32 = v11[9];
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v32, 1, v7))
  {
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v33, v34, v36);
    *(_OWORD *)&v33[*(int *)(v7 + 48)] = *(_OWORD *)&v34[*(int *)(v7 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v7);
  }
  uint64_t v37 = type metadata accessor for PlaceholderLayouts(0);
  uint64_t v38 = *(int *)(v37 + 20);
  uint64_t v39 = (char *)a1 + v38;
  char v40 = (char *)a2 + v38;
  if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v38, 1, v7))
  {
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v39, v40, v42);
    *(_OWORD *)&v39[*(int *)(v7 + 48)] = *(_OWORD *)&v40[*(int *)(v7 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v39, 0, 1, v7);
  }
  uint64_t v43 = v11[5];
  uint64_t v44 = &v39[v43];
  uint64_t v45 = &v40[v43];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v40[v43], 1, v7))
  {
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
  }
  else
  {
    uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v44, v45, v47);
    *(_OWORD *)&v44[*(int *)(v7 + 48)] = *(_OWORD *)&v45[*(int *)(v7 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v44, 0, 1, v7);
  }
  uint64_t v48 = v11[6];
  uint64_t v49 = &v39[v48];
  uint64_t v50 = &v40[v48];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v40[v48], 1, v7))
  {
    uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v49, v50, v52);
    *(_OWORD *)&v49[*(int *)(v7 + 48)] = *(_OWORD *)&v50[*(int *)(v7 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v49, 0, 1, v7);
  }
  uint64_t v53 = v11[7];
  uint64_t v54 = &v39[v53];
  uint64_t v55 = &v40[v53];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v40[v53], 1, v7))
  {
    uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
  }
  else
  {
    uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16))(v54, v55, v57);
    *(_OWORD *)&v54[*(int *)(v7 + 48)] = *(_OWORD *)&v55[*(int *)(v7 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v54, 0, 1, v7);
  }
  uint64_t v58 = v11[8];
  uint64_t v59 = &v39[v58];
  uint64_t v60 = &v40[v58];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v40[v58], 1, v7))
  {
    uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
  }
  else
  {
    uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16))(v59, v60, v62);
    *(_OWORD *)&v59[*(int *)(v7 + 48)] = *(_OWORD *)&v60[*(int *)(v7 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v59, 0, 1, v7);
  }
  uint64_t v63 = v11[9];
  uint64_t v64 = &v39[v63];
  uint64_t v65 = &v40[v63];
  if (__swift_getEnumTagSinglePayload((uint64_t)v65, 1, v7))
  {
    uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
  }
  else
  {
    uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16))(v64, v65, v67);
    *(_OWORD *)&v64[*(int *)(v7 + 48)] = *(_OWORD *)&v65[*(int *)(v7 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v64, 0, 1, v7);
  }
  uint64_t v68 = *(int *)(v37 + 24);
  char v69 = (char *)a1 + v68;
  uint64_t v70 = (char *)a2 + v68;
  if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v68, 1, v7))
  {
    uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
  }
  else
  {
    uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16))(v69, v70, v72);
    *(_OWORD *)&v69[*(int *)(v7 + 48)] = *(_OWORD *)&v70[*(int *)(v7 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v69, 0, 1, v7);
  }
  uint64_t v73 = v11[5];
  uint64_t v74 = &v69[v73];
  uint64_t v75 = &v70[v73];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v70[v73], 1, v7))
  {
    uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v74, v75, *(void *)(*(void *)(v76 - 8) + 64));
  }
  else
  {
    uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16))(v74, v75, v77);
    *(_OWORD *)&v74[*(int *)(v7 + 48)] = *(_OWORD *)&v75[*(int *)(v7 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v74, 0, 1, v7);
  }
  uint64_t v78 = v11[6];
  uint64_t v79 = &v69[v78];
  uint64_t v80 = &v70[v78];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v70[v78], 1, v7))
  {
    uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
  }
  else
  {
    uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 16))(v79, v80, v82);
    *(_OWORD *)&v79[*(int *)(v7 + 48)] = *(_OWORD *)&v80[*(int *)(v7 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v79, 0, 1, v7);
  }
  uint64_t v83 = v11[7];
  uint64_t v84 = &v69[v83];
  uint64_t v85 = &v70[v83];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v70[v83], 1, v7))
  {
    uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v84, v85, *(void *)(*(void *)(v86 - 8) + 64));
  }
  else
  {
    uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16))(v84, v85, v87);
    *(_OWORD *)&v84[*(int *)(v7 + 48)] = *(_OWORD *)&v85[*(int *)(v7 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v84, 0, 1, v7);
  }
  uint64_t v88 = v11[8];
  uint64_t v89 = &v69[v88];
  uint64_t v90 = &v70[v88];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v70[v88], 1, v7))
  {
    uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v89, v90, *(void *)(*(void *)(v91 - 8) + 64));
  }
  else
  {
    uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 16))(v89, v90, v92);
    *(_OWORD *)&v89[*(int *)(v7 + 48)] = *(_OWORD *)&v90[*(int *)(v7 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v89, 0, 1, v7);
  }
  uint64_t v93 = v11[9];
  int v94 = &v69[v93];
  uint64_t v95 = &v70[v93];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v70[v93], 1, v7))
  {
    uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v94, v95, *(void *)(*(void *)(v96 - 8) + 64));
  }
  else
  {
    uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 16))(v94, v95, v97);
    *(_OWORD *)&v94[*(int *)(v7 + 48)] = *(_OWORD *)&v95[*(int *)(v7 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v94, 0, 1, v7);
  }
  uint64_t v98 = a3[5];
  uint64_t v99 = (char *)a1 + v98;
  uint64_t v100 = (char *)a2 + v98;
  uint64_t v101 = type metadata accessor for ProductViewText.Storage(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v100, 1, v101))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v104 = *((void *)v100 + 1);
        *(void *)uint64_t v99 = *(void *)v100;
        *((void *)v99 + 1) = v104;
        v99[16] = v100[16];
        *((void *)v99 + 3) = *((void *)v100 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_74;
      case 2u:
        uint64_t v105 = sub_22EE7C220();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 16))(v99, v100, v105);
        goto LABEL_74;
      case 3u:
        _s11PriceStringOMa(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          uint64_t v124 = sub_22EE7F6E0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 16))(v99, v100, v124);
          uint64_t v125 = _s20LocalizationResourceVMa();
          *(_OWORD *)&v99[*(int *)(v125 + 20)] = *(_OWORD *)&v100[*(int *)(v125 + 20)];
        }
        else if (EnumCaseMultiPayload == 1)
        {
          uint64_t v107 = *((void *)v100 + 1);
          *(void *)uint64_t v99 = *(void *)v100;
          *((void *)v99 + 1) = v107;
          uint64_t v108 = _s22LocalizedPriceResourceVMa(0);
          uint64_t v109 = *(int *)(v108 + 20);
          uint64_t v154 = &v99[v109];
          uint64_t v156 = v108;
          uint64_t v152 = &v100[v109];
          uint64_t v110 = sub_22EE7F6E0();
          int v111 = *(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 16);
          swift_bridgeObjectRetain();
          unint64_t v113 = v152;
          unint64_t v112 = v154;
          uint64_t v153 = v111;
          uint64_t v155 = v110;
          v111(v112, v113, v110);
          uint64_t v114 = *(int *)(v156 + 24);
          unsigned int v115 = &v99[v114];
          unsigned int v116 = &v100[v114];
          uint64_t v117 = _s22LocalizedPriceResourceV6FormatOMa(0);
          int v118 = swift_getEnumCaseMultiPayload();
          if (v118 == 3)
          {
            uint64_t v127 = *((void *)v116 + 1);
            *(void *)unsigned int v115 = *(void *)v116;
            *((void *)v115 + 1) = v127;
            uint64_t v128 = (int *)_s15PricePropertiesVMa(0);
            uint64_t v129 = v128[5];
            uint64_t v149 = &v116[v129];
            unint64_t v151 = &v115[v129];
            uint64_t v130 = sub_22EE7F5D0();
            uint64_t v147 = *(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 16);
            swift_bridgeObjectRetain();
            v147(v151, v149, v130);
            v153(&v115[v128[6]], &v116[v128[6]], v155);
            *(void *)&v115[v128[7]] = *(void *)&v116[v128[7]];
          }
          else
          {
            if (v118 != 2)
            {
              memcpy(v115, v116, *(void *)(*(void *)(v117 - 8) + 64));
              goto LABEL_73;
            }
            uint64_t v119 = *((void *)v116 + 1);
            *(void *)unsigned int v115 = *(void *)v116;
            *((void *)v115 + 1) = v119;
            int v120 = (int *)_s15PricePropertiesVMa(0);
            uint64_t v121 = v120[5];
            uint64_t v148 = &v116[v121];
            uint64_t v150 = &v115[v121];
            uint64_t v122 = sub_22EE7F5D0();
            uint64_t v146 = *(void (**)(char *, char *, uint64_t))(*(void *)(v122 - 8) + 16);
            swift_bridgeObjectRetain();
            v146(v150, v148, v122);
            v153(&v115[v120[6]], &v116[v120[6]], v155);
            *(void *)&v115[v120[7]] = *(void *)&v116[v120[7]];
            uint64_t v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
            v115[*(int *)(v123 + 48)] = v116[*(int *)(v123 + 48)];
          }
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          uint64_t v126 = *((void *)v100 + 1);
          *(void *)uint64_t v99 = *(void *)v100;
          *((void *)v99 + 1) = v126;
          swift_bridgeObjectRetain();
        }
LABEL_73:
        swift_storeEnumTagMultiPayload();
LABEL_74:
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)v99, 0, 1, v101);
        goto LABEL_75;
      default:
        uint64_t v103 = *((void *)v100 + 1);
        *(void *)uint64_t v99 = *(void *)v100;
        *((void *)v99 + 1) = v103;
        swift_bridgeObjectRetain();
        goto LABEL_74;
    }
  }
  uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620B40);
  memcpy(v99, v100, *(void *)(*(void *)(v102 - 8) + 64));
LABEL_75:
  uint64_t v131 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *((unsigned char *)a1 + v131) = *((unsigned char *)a2 + v131);
  uint64_t v132 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  memcpy((char *)a1 + v132, (char *)a2 + v132, 0x59uLL);
  uint64_t v133 = a3[10];
  uint64_t v134 = a3[11];
  unint64_t v135 = (uint64_t *)((char *)a1 + v133);
  unint64_t v136 = (uint64_t *)((char *)a2 + v133);
  uint64_t v137 = v136[1];
  *unint64_t v135 = *v136;
  v135[1] = v137;
  uint64_t v138 = (uint64_t *)((char *)a1 + v134);
  uint64_t v139 = (uint64_t *)((char *)a2 + v134);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v140 = sub_22EE7CFC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v140 - 8) + 16))(v138, v139, v140);
  }
  else
  {
    *uint64_t v138 = *v139;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v141 = a3[12];
  uint64_t v142 = (uint64_t *)((char *)a1 + v141);
  unint64_t v143 = (uint64_t *)((char *)a2 + v141);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v144 = sub_22EE7CE90();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v144 - 8) + 16))(v142, v143, v144);
  }
  else
  {
    *uint64_t v142 = *v143;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_22EC1420C(uint64_t a1, int *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA28);
  if (!__swift_getEnumTagSinglePayload(a1, 1, v4))
  {
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  }
  uint64_t v6 = (int *)type metadata accessor for LayoutMetrics(0);
  uint64_t v7 = a1 + v6[5];
  if (!__swift_getEnumTagSinglePayload(v7, 1, v4))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  uint64_t v9 = a1 + v6[6];
  if (!__swift_getEnumTagSinglePayload(v9, 1, v4))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  uint64_t v11 = a1 + v6[7];
  if (!__swift_getEnumTagSinglePayload(v11, 1, v4))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  uint64_t v13 = a1 + v6[8];
  if (!__swift_getEnumTagSinglePayload(v13, 1, v4))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  }
  uint64_t v15 = a1 + v6[9];
  if (!__swift_getEnumTagSinglePayload(v15, 1, v4))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  }
  uint64_t v17 = type metadata accessor for PlaceholderLayouts(0);
  uint64_t v18 = a1 + *(int *)(v17 + 20);
  if (!__swift_getEnumTagSinglePayload(v18, 1, v4))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  }
  uint64_t v20 = v18 + v6[5];
  if (!__swift_getEnumTagSinglePayload(v20, 1, v4))
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
  }
  uint64_t v22 = v18 + v6[6];
  if (!__swift_getEnumTagSinglePayload(v22, 1, v4))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
  }
  uint64_t v24 = v18 + v6[7];
  if (!__swift_getEnumTagSinglePayload(v24, 1, v4))
  {
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
  }
  uint64_t v26 = v18 + v6[8];
  if (!__swift_getEnumTagSinglePayload(v26, 1, v4))
  {
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
  }
  uint64_t v28 = v18 + v6[9];
  if (!__swift_getEnumTagSinglePayload(v28, 1, v4))
  {
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v28, v29);
  }
  uint64_t v30 = a1 + *(int *)(v17 + 24);
  if (!__swift_getEnumTagSinglePayload(v30, 1, v4))
  {
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8))(v30, v31);
  }
  uint64_t v32 = v30 + v6[5];
  if (!__swift_getEnumTagSinglePayload(v32, 1, v4))
  {
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(v32, v33);
  }
  uint64_t v34 = v30 + v6[6];
  if (!__swift_getEnumTagSinglePayload(v34, 1, v4))
  {
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(v34, v35);
  }
  uint64_t v36 = v30 + v6[7];
  if (!__swift_getEnumTagSinglePayload(v36, 1, v4))
  {
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8))(v36, v37);
  }
  uint64_t v38 = v30 + v6[8];
  if (!__swift_getEnumTagSinglePayload(v38, 1, v4))
  {
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v39 - 8) + 8))(v38, v39);
  }
  uint64_t v40 = v30 + v6[9];
  if (!__swift_getEnumTagSinglePayload(v40, 1, v4))
  {
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v41 - 8) + 8))(v40, v41);
  }
  uint64_t v42 = a1 + a2[5];
  uint64_t v43 = type metadata accessor for ProductViewText.Storage(0);
  if (!__swift_getEnumTagSinglePayload(v42, 1, v43))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        goto LABEL_42;
      case 1u:
        swift_bridgeObjectRelease();
        goto LABEL_42;
      case 2u:
        uint64_t v44 = sub_22EE7C220();
        goto LABEL_40;
      case 3u:
        _s11PriceStringOMa(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        switch(EnumCaseMultiPayload)
        {
          case 2:
            uint64_t v44 = sub_22EE7F6E0();
LABEL_40:
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v44 - 8) + 8))(v42, v44);
            break;
          case 1:
            swift_bridgeObjectRelease();
            uint64_t v52 = _s22LocalizedPriceResourceVMa(0);
            uint64_t v53 = v42 + *(int *)(v52 + 20);
            uint64_t v54 = sub_22EE7F6E0();
            uint64_t v55 = *(void (**)(uint64_t, uint64_t))(*(void *)(v54 - 8) + 8);
            v55(v53, v54);
            uint64_t v56 = v42 + *(int *)(v52 + 24);
            _s22LocalizedPriceResourceV6FormatOMa(0);
            int v57 = swift_getEnumCaseMultiPayload();
            if (v57 == 3 || v57 == 2)
            {
              swift_bridgeObjectRelease();
              uint64_t v58 = _s15PricePropertiesVMa(0);
              uint64_t v59 = v56 + *(int *)(v58 + 20);
              uint64_t v60 = sub_22EE7F5D0();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v60 - 8) + 8))(v59, v60);
              v55(v56 + *(int *)(v58 + 24), v54);
            }
            break;
          case 0:
LABEL_42:
            swift_bridgeObjectRelease();
            break;
        }
        break;
      default:
        break;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v45 = a1 + a2[11];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v46 = sub_22EE7CFC0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v46 - 8) + 8))(v45, v46);
  }
  else
  {
    swift_release();
  }
  uint64_t v47 = a1 + a2[12];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v48 = sub_22EE7CE90();
    uint64_t v49 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v48 - 8) + 8);
    return v49(v47, v48);
  }
  else
  {
    return swift_release();
  }
}

char *sub_22EC14B9C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA28);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    *(_OWORD *)&a1[*(int *)(v6 + 48)] = *(_OWORD *)&a2[*(int *)(v6 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v9 = (int *)type metadata accessor for LayoutMetrics(0);
  uint64_t v10 = v9[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v10], 1, v6))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v11, v12, v14);
    *(_OWORD *)&v11[*(int *)(v6 + 48)] = *(_OWORD *)&v12[*(int *)(v6 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v6);
  }
  uint64_t v15 = v9[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v15], 1, v6))
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v16, v17, v19);
    *(_OWORD *)&v16[*(int *)(v6 + 48)] = *(_OWORD *)&v17[*(int *)(v6 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v6);
  }
  uint64_t v20 = v9[7];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v20], 1, v6))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v21, v22, v24);
    *(_OWORD *)&v21[*(int *)(v6 + 48)] = *(_OWORD *)&v22[*(int *)(v6 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v6);
  }
  uint64_t v25 = v9[8];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v25], 1, v6))
  {
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v26, v27, v29);
    *(_OWORD *)&v26[*(int *)(v6 + 48)] = *(_OWORD *)&v27[*(int *)(v6 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v6);
  }
  uint64_t v30 = v9[9];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v30], 1, v6))
  {
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v31, v32, v34);
    *(_OWORD *)&v31[*(int *)(v6 + 48)] = *(_OWORD *)&v32[*(int *)(v6 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v6);
  }
  uint64_t v35 = type metadata accessor for PlaceholderLayouts(0);
  uint64_t v36 = *(int *)(v35 + 20);
  uint64_t v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v36], 1, v6))
  {
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v37, v38, v40);
    *(_OWORD *)&v37[*(int *)(v6 + 48)] = *(_OWORD *)&v38[*(int *)(v6 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v37, 0, 1, v6);
  }
  uint64_t v41 = v9[5];
  uint64_t v42 = &v37[v41];
  uint64_t v43 = &v38[v41];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v38[v41], 1, v6))
  {
    uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v42, v43, v45);
    *(_OWORD *)&v42[*(int *)(v6 + 48)] = *(_OWORD *)&v43[*(int *)(v6 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v42, 0, 1, v6);
  }
  uint64_t v46 = v9[6];
  uint64_t v47 = &v37[v46];
  uint64_t v48 = &v38[v46];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v38[v46], 1, v6))
  {
    uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v47, v48, v50);
    *(_OWORD *)&v47[*(int *)(v6 + 48)] = *(_OWORD *)&v48[*(int *)(v6 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v47, 0, 1, v6);
  }
  uint64_t v51 = v9[7];
  uint64_t v52 = &v37[v51];
  uint64_t v53 = &v38[v51];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v38[v51], 1, v6))
  {
    uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
  }
  else
  {
    uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v52, v53, v55);
    *(_OWORD *)&v52[*(int *)(v6 + 48)] = *(_OWORD *)&v53[*(int *)(v6 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v52, 0, 1, v6);
  }
  uint64_t v56 = v9[8];
  int v57 = &v37[v56];
  uint64_t v58 = &v38[v56];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v38[v56], 1, v6))
  {
    uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
  }
  else
  {
    uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16))(v57, v58, v60);
    *(_OWORD *)&v57[*(int *)(v6 + 48)] = *(_OWORD *)&v58[*(int *)(v6 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v57, 0, 1, v6);
  }
  uint64_t v61 = v9[9];
  uint64_t v62 = &v37[v61];
  uint64_t v63 = &v38[v61];
  if (__swift_getEnumTagSinglePayload((uint64_t)v63, 1, v6))
  {
    uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
  }
  else
  {
    uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16))(v62, v63, v65);
    *(_OWORD *)&v62[*(int *)(v6 + 48)] = *(_OWORD *)&v63[*(int *)(v6 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v62, 0, 1, v6);
  }
  uint64_t v66 = *(int *)(v35 + 24);
  uint64_t v67 = &a1[v66];
  uint64_t v68 = &a2[v66];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v66], 1, v6))
  {
    uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
  }
  else
  {
    uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16))(v67, v68, v70);
    *(_OWORD *)&v67[*(int *)(v6 + 48)] = *(_OWORD *)&v68[*(int *)(v6 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v67, 0, 1, v6);
  }
  uint64_t v71 = v9[5];
  uint64_t v72 = &v67[v71];
  uint64_t v73 = &v68[v71];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v68[v71], 1, v6))
  {
    uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
  }
  else
  {
    uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16))(v72, v73, v75);
    *(_OWORD *)&v72[*(int *)(v6 + 48)] = *(_OWORD *)&v73[*(int *)(v6 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v72, 0, 1, v6);
  }
  uint64_t v76 = v9[6];
  uint64_t v77 = &v67[v76];
  uint64_t v78 = &v68[v76];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v68[v76], 1, v6))
  {
    uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v77, v78, *(void *)(*(void *)(v79 - 8) + 64));
  }
  else
  {
    uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 16))(v77, v78, v80);
    *(_OWORD *)&v77[*(int *)(v6 + 48)] = *(_OWORD *)&v78[*(int *)(v6 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v77, 0, 1, v6);
  }
  uint64_t v81 = v9[7];
  uint64_t v82 = &v67[v81];
  uint64_t v83 = &v68[v81];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v68[v81], 1, v6))
  {
    uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v82, v83, *(void *)(*(void *)(v84 - 8) + 64));
  }
  else
  {
    uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 16))(v82, v83, v85);
    *(_OWORD *)&v82[*(int *)(v6 + 48)] = *(_OWORD *)&v83[*(int *)(v6 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v82, 0, 1, v6);
  }
  uint64_t v86 = v9[8];
  uint64_t v87 = &v67[v86];
  uint64_t v88 = &v68[v86];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v68[v86], 1, v6))
  {
    uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v87, v88, *(void *)(*(void *)(v89 - 8) + 64));
  }
  else
  {
    uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 16))(v87, v88, v90);
    *(_OWORD *)&v87[*(int *)(v6 + 48)] = *(_OWORD *)&v88[*(int *)(v6 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v87, 0, 1, v6);
  }
  uint64_t v91 = v9[9];
  uint64_t v92 = &v67[v91];
  uint64_t v93 = &v68[v91];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v68[v91], 1, v6))
  {
    uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v92, v93, *(void *)(*(void *)(v94 - 8) + 64));
  }
  else
  {
    uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 16))(v92, v93, v95);
    *(_OWORD *)&v92[*(int *)(v6 + 48)] = *(_OWORD *)&v93[*(int *)(v6 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v92, 0, 1, v6);
  }
  uint64_t v96 = a3[5];
  uint64_t v97 = &a1[v96];
  uint64_t v98 = &a2[v96];
  uint64_t v99 = type metadata accessor for ProductViewText.Storage(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v98, 1, v99))
  {
    uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620B40);
    memcpy(v97, v98, *(void *)(*(void *)(v100 - 8) + 64));
    goto LABEL_73;
  }
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v102 = *((void *)v98 + 1);
      *(void *)uint64_t v97 = *(void *)v98;
      *((void *)v97 + 1) = v102;
      v97[16] = v98[16];
      *((void *)v97 + 3) = *((void *)v98 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_72;
    case 2u:
      uint64_t v103 = sub_22EE7C220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 16))(v97, v98, v103);
      goto LABEL_72;
    case 3u:
      _s11PriceStringOMa(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v122 = sub_22EE7F6E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v122 - 8) + 16))(v97, v98, v122);
        uint64_t v123 = _s20LocalizationResourceVMa();
        *(_OWORD *)&v97[*(int *)(v123 + 20)] = *(_OWORD *)&v98[*(int *)(v123 + 20)];
      }
      else if (EnumCaseMultiPayload == 1)
      {
        uint64_t v105 = *((void *)v98 + 1);
        *(void *)uint64_t v97 = *(void *)v98;
        *((void *)v97 + 1) = v105;
        uint64_t v106 = _s22LocalizedPriceResourceVMa(0);
        uint64_t v107 = *(int *)(v106 + 20);
        uint64_t v152 = &v97[v107];
        uint64_t v154 = v106;
        uint64_t v150 = &v98[v107];
        uint64_t v108 = sub_22EE7F6E0();
        uint64_t v109 = *(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 16);
        swift_bridgeObjectRetain();
        int v111 = v150;
        uint64_t v110 = v152;
        unint64_t v151 = v109;
        uint64_t v153 = v108;
        v109(v110, v111, v108);
        uint64_t v112 = *(int *)(v154 + 24);
        unint64_t v113 = &v97[v112];
        uint64_t v114 = &v98[v112];
        uint64_t v115 = _s22LocalizedPriceResourceV6FormatOMa(0);
        int v116 = swift_getEnumCaseMultiPayload();
        if (v116 == 3)
        {
          uint64_t v125 = *((void *)v114 + 1);
          *(void *)unint64_t v113 = *(void *)v114;
          *((void *)v113 + 1) = v125;
          uint64_t v126 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v127 = v126[5];
          uint64_t v147 = &v114[v127];
          uint64_t v149 = &v113[v127];
          uint64_t v128 = sub_22EE7F5D0();
          uint64_t v145 = *(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 16);
          swift_bridgeObjectRetain();
          v145(v149, v147, v128);
          v151(&v113[v126[6]], &v114[v126[6]], v153);
          *(void *)&v113[v126[7]] = *(void *)&v114[v126[7]];
        }
        else
        {
          if (v116 != 2)
          {
            memcpy(v113, v114, *(void *)(*(void *)(v115 - 8) + 64));
            goto LABEL_71;
          }
          uint64_t v117 = *((void *)v114 + 1);
          *(void *)unint64_t v113 = *(void *)v114;
          *((void *)v113 + 1) = v117;
          int v118 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v119 = v118[5];
          uint64_t v146 = &v114[v119];
          uint64_t v148 = &v113[v119];
          uint64_t v120 = sub_22EE7F5D0();
          uint64_t v144 = *(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 16);
          swift_bridgeObjectRetain();
          v144(v148, v146, v120);
          v151(&v113[v118[6]], &v114[v118[6]], v153);
          *(void *)&v113[v118[7]] = *(void *)&v114[v118[7]];
          uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
          v113[*(int *)(v121 + 48)] = v114[*(int *)(v121 + 48)];
        }
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        uint64_t v124 = *((void *)v98 + 1);
        *(void *)uint64_t v97 = *(void *)v98;
        *((void *)v97 + 1) = v124;
        swift_bridgeObjectRetain();
      }
LABEL_71:
      swift_storeEnumTagMultiPayload();
      goto LABEL_72;
    default:
      uint64_t v101 = *((void *)v98 + 1);
      *(void *)uint64_t v97 = *(void *)v98;
      *((void *)v97 + 1) = v101;
      swift_bridgeObjectRetain();
LABEL_72:
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v97, 0, 1, v99);
LABEL_73:
      uint64_t v129 = a3[7];
      a1[a3[6]] = a2[a3[6]];
      a1[v129] = a2[v129];
      uint64_t v130 = a3[9];
      a1[a3[8]] = a2[a3[8]];
      memcpy(&a1[v130], &a2[v130], 0x59uLL);
      uint64_t v131 = a3[10];
      uint64_t v132 = a3[11];
      uint64_t v133 = &a1[v131];
      uint64_t v134 = &a2[v131];
      uint64_t v135 = *((void *)v134 + 1);
      *(void *)uint64_t v133 = *(void *)v134;
      *((void *)v133 + 1) = v135;
      unint64_t v136 = &a1[v132];
      uint64_t v137 = &a2[v132];
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDD8);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v138 = sub_22EE7CFC0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 16))(v136, v137, v138);
      }
      else
      {
        *(void *)unint64_t v136 = *(void *)v137;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v139 = a3[12];
      uint64_t v140 = &a1[v139];
      uint64_t v141 = &a2[v139];
      __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDE0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v142 = sub_22EE7CE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 16))(v140, v141, v142);
      }
      else
      {
        *(void *)uint64_t v140 = *(void *)v141;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      return a1;
  }
}

char *sub_22EC15E28(char *a1, char *a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA28);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  v298 = a3;
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      *(_OWORD *)&a1[*(int *)(v6 + 48)] = *(_OWORD *)&a2[*(int *)(v6 + 48)];
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_22EADAC74((uint64_t)a1, &qword_26861BA28);
LABEL_6:
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 24))(a1, a2, v140);
  uint64_t v141 = *(int *)(v6 + 48);
  uint64_t v142 = &a1[v141];
  unint64_t v143 = &a2[v141];
  *(void *)uint64_t v142 = *(void *)v143;
  *((void *)v142 + 1) = *((void *)v143 + 1);
LABEL_7:
  uint64_t v11 = (int *)type metadata accessor for LayoutMetrics(0);
  uint64_t v12 = v11[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v12], 1, v6);
  int v16 = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v13, v14, v17);
      *(_OWORD *)&v13[*(int *)(v6 + 48)] = *(_OWORD *)&v14[*(int *)(v6 + 48)];
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v16)
  {
    sub_22EADAC74((uint64_t)v13, &qword_26861BA28);
LABEL_12:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v144 - 8) + 24))(v13, v14, v144);
  uint64_t v145 = *(int *)(v6 + 48);
  uint64_t v146 = &v13[v145];
  uint64_t v147 = &v14[v145];
  *(void *)uint64_t v146 = *(void *)v147;
  *((void *)v146 + 1) = *((void *)v147 + 1);
LABEL_13:
  uint64_t v19 = v11[6];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  int v22 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v19], 1, v6);
  int v23 = __swift_getEnumTagSinglePayload((uint64_t)v21, 1, v6);
  if (v22)
  {
    if (!v23)
    {
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v20, v21, v24);
      *(_OWORD *)&v20[*(int *)(v6 + 48)] = *(_OWORD *)&v21[*(int *)(v6 + 48)];
      __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v23)
  {
    sub_22EADAC74((uint64_t)v20, &qword_26861BA28);
LABEL_18:
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v20, v21, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_19;
  }
  uint64_t v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 24))(v20, v21, v148);
  uint64_t v149 = *(int *)(v6 + 48);
  uint64_t v150 = &v20[v149];
  unint64_t v151 = &v21[v149];
  *(void *)uint64_t v150 = *(void *)v151;
  *((void *)v150 + 1) = *((void *)v151 + 1);
LABEL_19:
  uint64_t v26 = v11[7];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  int v29 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v26], 1, v6);
  int v30 = __swift_getEnumTagSinglePayload((uint64_t)v28, 1, v6);
  if (v29)
  {
    if (!v30)
    {
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v27, v28, v31);
      *(_OWORD *)&v27[*(int *)(v6 + 48)] = *(_OWORD *)&v28[*(int *)(v6 + 48)];
      __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v6);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v30)
  {
    sub_22EADAC74((uint64_t)v27, &qword_26861BA28);
LABEL_24:
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v27, v28, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_25;
  }
  uint64_t v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v152 - 8) + 24))(v27, v28, v152);
  uint64_t v153 = *(int *)(v6 + 48);
  uint64_t v154 = &v27[v153];
  uint64_t v155 = &v28[v153];
  *(void *)uint64_t v154 = *(void *)v155;
  *((void *)v154 + 1) = *((void *)v155 + 1);
LABEL_25:
  uint64_t v33 = v11[8];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = &a2[v33];
  int v36 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v33], 1, v6);
  int v37 = __swift_getEnumTagSinglePayload((uint64_t)v35, 1, v6);
  if (v36)
  {
    if (!v37)
    {
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v34, v35, v38);
      *(_OWORD *)&v34[*(int *)(v6 + 48)] = *(_OWORD *)&v35[*(int *)(v6 + 48)];
      __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v6);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v37)
  {
    sub_22EADAC74((uint64_t)v34, &qword_26861BA28);
LABEL_30:
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v34, v35, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_31;
  }
  uint64_t v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v156 - 8) + 24))(v34, v35, v156);
  uint64_t v157 = *(int *)(v6 + 48);
  uint64_t v158 = &v34[v157];
  uint64_t v159 = &v35[v157];
  *(void *)uint64_t v158 = *(void *)v159;
  *((void *)v158 + 1) = *((void *)v159 + 1);
LABEL_31:
  uint64_t v40 = v11[9];
  uint64_t v41 = &a1[v40];
  uint64_t v42 = &a2[v40];
  int v43 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v40], 1, v6);
  int v44 = __swift_getEnumTagSinglePayload((uint64_t)v42, 1, v6);
  if (v43)
  {
    if (!v44)
    {
      uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v41, v42, v45);
      *(_OWORD *)&v41[*(int *)(v6 + 48)] = *(_OWORD *)&v42[*(int *)(v6 + 48)];
      __swift_storeEnumTagSinglePayload((uint64_t)v41, 0, 1, v6);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v44)
  {
    sub_22EADAC74((uint64_t)v41, &qword_26861BA28);
LABEL_36:
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v41, v42, *(void *)(*(void *)(v46 - 8) + 64));
    goto LABEL_37;
  }
  uint64_t v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v160 - 8) + 24))(v41, v42, v160);
  uint64_t v161 = *(int *)(v6 + 48);
  uint64_t v162 = &v41[v161];
  uint64_t v163 = &v42[v161];
  *(void *)uint64_t v162 = *(void *)v163;
  *((void *)v162 + 1) = *((void *)v163 + 1);
LABEL_37:
  uint64_t v47 = type metadata accessor for PlaceholderLayouts(0);
  uint64_t v48 = *(int *)(v47 + 20);
  uint64_t v49 = &a1[v48];
  uint64_t v50 = &a2[v48];
  int v51 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v48], 1, v6);
  int v52 = __swift_getEnumTagSinglePayload((uint64_t)v50, 1, v6);
  if (v51)
  {
    if (!v52)
    {
      uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v49, v50, v53);
      *(_OWORD *)&v49[*(int *)(v6 + 48)] = *(_OWORD *)&v50[*(int *)(v6 + 48)];
      __swift_storeEnumTagSinglePayload((uint64_t)v49, 0, 1, v6);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v52)
  {
    sub_22EADAC74((uint64_t)v49, &qword_26861BA28);
LABEL_42:
    uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v49, v50, *(void *)(*(void *)(v54 - 8) + 64));
    goto LABEL_43;
  }
  uint64_t v164 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v164 - 8) + 24))(v49, v50, v164);
  uint64_t v165 = *(int *)(v6 + 48);
  uint64_t v166 = &v49[v165];
  uint64_t v167 = &v50[v165];
  *(void *)uint64_t v166 = *(void *)v167;
  *((void *)v166 + 1) = *((void *)v167 + 1);
LABEL_43:
  uint64_t v55 = v11[5];
  uint64_t v56 = &v49[v55];
  int v57 = &v50[v55];
  int v58 = __swift_getEnumTagSinglePayload((uint64_t)&v49[v55], 1, v6);
  int v59 = __swift_getEnumTagSinglePayload((uint64_t)v57, 1, v6);
  if (v58)
  {
    if (!v59)
    {
      uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16))(v56, v57, v60);
      *(_OWORD *)&v56[*(int *)(v6 + 48)] = *(_OWORD *)&v57[*(int *)(v6 + 48)];
      __swift_storeEnumTagSinglePayload((uint64_t)v56, 0, 1, v6);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v59)
  {
    sub_22EADAC74((uint64_t)v56, &qword_26861BA28);
LABEL_48:
    uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v56, v57, *(void *)(*(void *)(v61 - 8) + 64));
    goto LABEL_49;
  }
  uint64_t v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v168 - 8) + 24))(v56, v57, v168);
  uint64_t v169 = *(int *)(v6 + 48);
  uint64_t v170 = &v56[v169];
  uint64_t v171 = &v57[v169];
  *(void *)uint64_t v170 = *(void *)v171;
  *((void *)v170 + 1) = *((void *)v171 + 1);
LABEL_49:
  uint64_t v62 = v11[6];
  uint64_t v63 = &v49[v62];
  uint64_t v64 = &v50[v62];
  int v65 = __swift_getEnumTagSinglePayload((uint64_t)&v49[v62], 1, v6);
  int v66 = __swift_getEnumTagSinglePayload((uint64_t)v64, 1, v6);
  if (v65)
  {
    if (!v66)
    {
      uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16))(v63, v64, v67);
      *(_OWORD *)&v63[*(int *)(v6 + 48)] = *(_OWORD *)&v64[*(int *)(v6 + 48)];
      __swift_storeEnumTagSinglePayload((uint64_t)v63, 0, 1, v6);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v66)
  {
    sub_22EADAC74((uint64_t)v63, &qword_26861BA28);
LABEL_54:
    uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v63, v64, *(void *)(*(void *)(v68 - 8) + 64));
    goto LABEL_55;
  }
  uint64_t v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v172 - 8) + 24))(v63, v64, v172);
  uint64_t v173 = *(int *)(v6 + 48);
  v174 = &v63[v173];
  v175 = &v64[v173];
  *(void *)v174 = *(void *)v175;
  *((void *)v174 + 1) = *((void *)v175 + 1);
LABEL_55:
  uint64_t v69 = v11[7];
  uint64_t v70 = &v49[v69];
  uint64_t v71 = &v50[v69];
  int v72 = __swift_getEnumTagSinglePayload((uint64_t)&v49[v69], 1, v6);
  int v73 = __swift_getEnumTagSinglePayload((uint64_t)v71, 1, v6);
  if (v72)
  {
    if (!v73)
    {
      uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16))(v70, v71, v74);
      *(_OWORD *)&v70[*(int *)(v6 + 48)] = *(_OWORD *)&v71[*(int *)(v6 + 48)];
      __swift_storeEnumTagSinglePayload((uint64_t)v70, 0, 1, v6);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v73)
  {
    sub_22EADAC74((uint64_t)v70, &qword_26861BA28);
LABEL_60:
    uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v70, v71, *(void *)(*(void *)(v75 - 8) + 64));
    goto LABEL_61;
  }
  uint64_t v176 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v176 - 8) + 24))(v70, v71, v176);
  uint64_t v177 = *(int *)(v6 + 48);
  v178 = &v70[v177];
  v179 = &v71[v177];
  *(void *)v178 = *(void *)v179;
  *((void *)v178 + 1) = *((void *)v179 + 1);
LABEL_61:
  uint64_t v76 = v11[8];
  uint64_t v77 = &v49[v76];
  uint64_t v78 = &v50[v76];
  int v79 = __swift_getEnumTagSinglePayload((uint64_t)&v49[v76], 1, v6);
  int v80 = __swift_getEnumTagSinglePayload((uint64_t)v78, 1, v6);
  if (v79)
  {
    if (!v80)
    {
      uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 16))(v77, v78, v81);
      *(_OWORD *)&v77[*(int *)(v6 + 48)] = *(_OWORD *)&v78[*(int *)(v6 + 48)];
      __swift_storeEnumTagSinglePayload((uint64_t)v77, 0, 1, v6);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v80)
  {
    sub_22EADAC74((uint64_t)v77, &qword_26861BA28);
LABEL_66:
    uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v77, v78, *(void *)(*(void *)(v82 - 8) + 64));
    goto LABEL_67;
  }
  uint64_t v180 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v180 - 8) + 24))(v77, v78, v180);
  uint64_t v181 = *(int *)(v6 + 48);
  v182 = &v77[v181];
  v183 = &v78[v181];
  *(void *)v182 = *(void *)v183;
  *((void *)v182 + 1) = *((void *)v183 + 1);
LABEL_67:
  uint64_t v83 = v11[9];
  uint64_t v84 = &v49[v83];
  uint64_t v85 = &v50[v83];
  int v86 = __swift_getEnumTagSinglePayload((uint64_t)v84, 1, v6);
  int v87 = __swift_getEnumTagSinglePayload((uint64_t)v85, 1, v6);
  if (v86)
  {
    if (!v87)
    {
      uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16))(v84, v85, v88);
      *(_OWORD *)&v84[*(int *)(v6 + 48)] = *(_OWORD *)&v85[*(int *)(v6 + 48)];
      __swift_storeEnumTagSinglePayload((uint64_t)v84, 0, 1, v6);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v87)
  {
    sub_22EADAC74((uint64_t)v84, &qword_26861BA28);
LABEL_72:
    uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v84, v85, *(void *)(*(void *)(v89 - 8) + 64));
    goto LABEL_73;
  }
  uint64_t v184 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v184 - 8) + 24))(v84, v85, v184);
  uint64_t v185 = *(int *)(v6 + 48);
  v186 = &v84[v185];
  v187 = &v85[v185];
  *(void *)v186 = *(void *)v187;
  *((void *)v186 + 1) = *((void *)v187 + 1);
LABEL_73:
  uint64_t v90 = *(int *)(v47 + 24);
  uint64_t v91 = &a1[v90];
  uint64_t v92 = &a2[v90];
  int v93 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v90], 1, v6);
  int v94 = __swift_getEnumTagSinglePayload((uint64_t)v92, 1, v6);
  if (v93)
  {
    if (!v94)
    {
      uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 16))(v91, v92, v95);
      *(_OWORD *)&v91[*(int *)(v6 + 48)] = *(_OWORD *)&v92[*(int *)(v6 + 48)];
      __swift_storeEnumTagSinglePayload((uint64_t)v91, 0, 1, v6);
      goto LABEL_79;
    }
    goto LABEL_78;
  }
  if (v94)
  {
    sub_22EADAC74((uint64_t)v91, &qword_26861BA28);
LABEL_78:
    uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v91, v92, *(void *)(*(void *)(v96 - 8) + 64));
    goto LABEL_79;
  }
  uint64_t v188 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v188 - 8) + 24))(v91, v92, v188);
  uint64_t v189 = *(int *)(v6 + 48);
  v190 = &v91[v189];
  v191 = &v92[v189];
  *(void *)v190 = *(void *)v191;
  *((void *)v190 + 1) = *((void *)v191 + 1);
LABEL_79:
  uint64_t v97 = v11[5];
  uint64_t v98 = &v91[v97];
  uint64_t v99 = &v92[v97];
  int v100 = __swift_getEnumTagSinglePayload((uint64_t)&v91[v97], 1, v6);
  int v101 = __swift_getEnumTagSinglePayload((uint64_t)v99, 1, v6);
  if (v100)
  {
    if (!v101)
    {
      uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 16))(v98, v99, v102);
      *(_OWORD *)&v98[*(int *)(v6 + 48)] = *(_OWORD *)&v99[*(int *)(v6 + 48)];
      __swift_storeEnumTagSinglePayload((uint64_t)v98, 0, 1, v6);
      goto LABEL_85;
    }
    goto LABEL_84;
  }
  if (v101)
  {
    sub_22EADAC74((uint64_t)v98, &qword_26861BA28);
LABEL_84:
    uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v98, v99, *(void *)(*(void *)(v103 - 8) + 64));
    goto LABEL_85;
  }
  uint64_t v192 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v192 - 8) + 24))(v98, v99, v192);
  uint64_t v193 = *(int *)(v6 + 48);
  v194 = &v98[v193];
  v195 = &v99[v193];
  *(void *)v194 = *(void *)v195;
  *((void *)v194 + 1) = *((void *)v195 + 1);
LABEL_85:
  uint64_t v104 = v11[6];
  uint64_t v105 = &v91[v104];
  uint64_t v106 = &v92[v104];
  int v107 = __swift_getEnumTagSinglePayload((uint64_t)&v91[v104], 1, v6);
  int v108 = __swift_getEnumTagSinglePayload((uint64_t)v106, 1, v6);
  if (v107)
  {
    if (!v108)
    {
      uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v109 - 8) + 16))(v105, v106, v109);
      *(_OWORD *)&v105[*(int *)(v6 + 48)] = *(_OWORD *)&v106[*(int *)(v6 + 48)];
      __swift_storeEnumTagSinglePayload((uint64_t)v105, 0, 1, v6);
      goto LABEL_91;
    }
    goto LABEL_90;
  }
  if (v108)
  {
    sub_22EADAC74((uint64_t)v105, &qword_26861BA28);
LABEL_90:
    uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v105, v106, *(void *)(*(void *)(v110 - 8) + 64));
    goto LABEL_91;
  }
  uint64_t v196 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v196 - 8) + 24))(v105, v106, v196);
  uint64_t v197 = *(int *)(v6 + 48);
  v198 = &v105[v197];
  v199 = &v106[v197];
  *(void *)v198 = *(void *)v199;
  *((void *)v198 + 1) = *((void *)v199 + 1);
LABEL_91:
  uint64_t v111 = v11[7];
  uint64_t v112 = &v91[v111];
  unint64_t v113 = &v92[v111];
  int v114 = __swift_getEnumTagSinglePayload((uint64_t)&v91[v111], 1, v6);
  int v115 = __swift_getEnumTagSinglePayload((uint64_t)v113, 1, v6);
  if (v114)
  {
    if (!v115)
    {
      uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v116 - 8) + 16))(v112, v113, v116);
      *(_OWORD *)&v112[*(int *)(v6 + 48)] = *(_OWORD *)&v113[*(int *)(v6 + 48)];
      __swift_storeEnumTagSinglePayload((uint64_t)v112, 0, 1, v6);
      goto LABEL_97;
    }
    goto LABEL_96;
  }
  if (v115)
  {
    sub_22EADAC74((uint64_t)v112, &qword_26861BA28);
LABEL_96:
    uint64_t v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v112, v113, *(void *)(*(void *)(v117 - 8) + 64));
    goto LABEL_97;
  }
  uint64_t v200 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v200 - 8) + 24))(v112, v113, v200);
  uint64_t v201 = *(int *)(v6 + 48);
  v202 = &v112[v201];
  v203 = &v113[v201];
  *(void *)v202 = *(void *)v203;
  *((void *)v202 + 1) = *((void *)v203 + 1);
LABEL_97:
  uint64_t v118 = v11[8];
  uint64_t v119 = &v91[v118];
  uint64_t v120 = &v92[v118];
  int v121 = __swift_getEnumTagSinglePayload((uint64_t)&v91[v118], 1, v6);
  int v122 = __swift_getEnumTagSinglePayload((uint64_t)v120, 1, v6);
  if (v121)
  {
    if (!v122)
    {
      uint64_t v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v123 - 8) + 16))(v119, v120, v123);
      *(_OWORD *)&v119[*(int *)(v6 + 48)] = *(_OWORD *)&v120[*(int *)(v6 + 48)];
      __swift_storeEnumTagSinglePayload((uint64_t)v119, 0, 1, v6);
      goto LABEL_103;
    }
    goto LABEL_102;
  }
  if (v122)
  {
    sub_22EADAC74((uint64_t)v119, &qword_26861BA28);
LABEL_102:
    uint64_t v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v119, v120, *(void *)(*(void *)(v124 - 8) + 64));
    goto LABEL_103;
  }
  uint64_t v204 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v204 - 8) + 24))(v119, v120, v204);
  uint64_t v205 = *(int *)(v6 + 48);
  v206 = &v119[v205];
  v207 = &v120[v205];
  *(void *)v206 = *(void *)v207;
  *((void *)v206 + 1) = *((void *)v207 + 1);
LABEL_103:
  uint64_t v125 = v11[9];
  uint64_t v126 = &v91[v125];
  uint64_t v127 = &v92[v125];
  int v128 = __swift_getEnumTagSinglePayload((uint64_t)v126, 1, v6);
  int v129 = __swift_getEnumTagSinglePayload((uint64_t)v127, 1, v6);
  uint64_t v130 = v298;
  if (!v128)
  {
    if (!v129)
    {
      uint64_t v208 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v208 - 8) + 24))(v126, v127, v208);
      uint64_t v209 = *(int *)(v6 + 48);
      v210 = &v126[v209];
      v211 = &v127[v209];
      *(void *)v210 = *(void *)v211;
      *((void *)v210 + 1) = *((void *)v211 + 1);
      goto LABEL_109;
    }
    sub_22EADAC74((uint64_t)v126, &qword_26861BA28);
    goto LABEL_108;
  }
  if (v129)
  {
LABEL_108:
    uint64_t v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v126, v127, *(void *)(*(void *)(v132 - 8) + 64));
    goto LABEL_109;
  }
  uint64_t v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 16))(v126, v127, v131);
  *(_OWORD *)&v126[*(int *)(v6 + 48)] = *(_OWORD *)&v127[*(int *)(v6 + 48)];
  __swift_storeEnumTagSinglePayload((uint64_t)v126, 0, 1, v6);
LABEL_109:
  uint64_t v133 = v298[5];
  uint64_t v134 = (uint64_t)&a1[v133];
  uint64_t v135 = (uint64_t)&a2[v133];
  uint64_t v136 = type metadata accessor for ProductViewText.Storage(0);
  int v137 = __swift_getEnumTagSinglePayload(v134, 1, v136);
  int v138 = __swift_getEnumTagSinglePayload(v135, 1, v136);
  if (v137)
  {
    if (!v138)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *(void *)uint64_t v134 = *(void *)v135;
          *(void *)(v134 + 8) = *(void *)(v135 + 8);
          *(unsigned char *)(v134 + 16) = *(unsigned char *)(v135 + 16);
          *(void *)(v134 + 24) = *(void *)(v135 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_161;
        case 2u:
          uint64_t v212 = sub_22EE7C220();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v212 - 8) + 16))(v134, v135, v212);
          goto LABEL_161;
        case 3u:
          _s11PriceStringOMa(0);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 2)
          {
            uint64_t v248 = sub_22EE7F6E0();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v248 - 8) + 16))(v134, v135, v248);
            uint64_t v249 = _s20LocalizationResourceVMa();
            *(_OWORD *)(v134 + *(int *)(v249 + 20)) = *(_OWORD *)(v135 + *(int *)(v249 + 20));
          }
          else
          {
            if (EnumCaseMultiPayload == 1)
            {
              *(void *)uint64_t v134 = *(void *)v135;
              *(void *)(v134 + 8) = *(void *)(v135 + 8);
              uint64_t v214 = _s22LocalizedPriceResourceVMa(0);
              uint64_t v215 = *(int *)(v214 + 20);
              uint64_t v216 = v134 + v215;
              uint64_t v295 = v135 + v215;
              uint64_t v217 = sub_22EE7F6E0();
              v218 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v217 - 8) + 16);
              uint64_t v219 = v217;
              swift_bridgeObjectRetain();
              v218(v216, v295, v219);
              uint64_t v220 = *(int *)(v214 + 24);
              v221 = (char *)(v134 + v220);
              v222 = (char *)(v135 + v220);
              uint64_t v223 = _s22LocalizedPriceResourceV6FormatOMa(0);
              int v224 = swift_getEnumCaseMultiPayload();
              if (v224 == 3)
              {
                *(void *)v221 = *(void *)v222;
                *((void *)v221 + 1) = *((void *)v222 + 1);
                v252 = (void (*)(char *, char *, uint64_t))v218;
                v253 = (int *)_s15PricePropertiesVMa(0);
                uint64_t v254 = v253[5];
                v286 = &v222[v254];
                v290 = &v221[v254];
                uint64_t v293 = v219;
                uint64_t v255 = sub_22EE7F5D0();
                v282 = *(void (**)(char *, char *, uint64_t))(*(void *)(v255 - 8) + 16);
                swift_bridgeObjectRetain();
                v282(v290, v286, v255);
                v252(&v221[v253[6]], &v222[v253[6]], v293);
                *(void *)&v221[v253[7]] = *(void *)&v222[v253[7]];
              }
              else
              {
                if (v224 != 2)
                {
                  memcpy(v221, v222, *(void *)(*(void *)(v223 - 8) + 64));
                  goto LABEL_159;
                }
                *(void *)v221 = *(void *)v222;
                *((void *)v221 + 1) = *((void *)v222 + 1);
                v225 = (void (*)(char *, char *, uint64_t))v218;
                v226 = (int *)_s15PricePropertiesVMa(0);
                uint64_t v227 = v226[5];
                v284 = &v222[v227];
                v288 = &v221[v227];
                uint64_t v292 = v219;
                uint64_t v228 = sub_22EE7F5D0();
                v280 = *(void (**)(char *, char *, uint64_t))(*(void *)(v228 - 8) + 16);
                swift_bridgeObjectRetain();
                v280(v288, v284, v228);
                v225(&v221[v226[6]], &v222[v226[6]], v292);
                *(void *)&v221[v226[7]] = *(void *)&v222[v226[7]];
                uint64_t v229 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
                v221[*(int *)(v229 + 48)] = v222[*(int *)(v229 + 48)];
              }
              swift_storeEnumTagMultiPayload();
LABEL_159:
              uint64_t v130 = v298;
              goto LABEL_160;
            }
            *(void *)uint64_t v134 = *(void *)v135;
            *(void *)(v134 + 8) = *(void *)(v135 + 8);
            swift_bridgeObjectRetain();
          }
LABEL_160:
          swift_storeEnumTagMultiPayload();
LABEL_161:
          swift_storeEnumTagMultiPayload();
          __swift_storeEnumTagSinglePayload(v134, 0, 1, v136);
          goto LABEL_167;
        default:
          *(void *)uint64_t v134 = *(void *)v135;
          *(void *)(v134 + 8) = *(void *)(v135 + 8);
          swift_bridgeObjectRetain();
          goto LABEL_161;
      }
    }
LABEL_115:
    uint64_t v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620B40);
    memcpy((void *)v134, (const void *)v135, *(void *)(*(void *)(v139 - 8) + 64));
    goto LABEL_167;
  }
  if (v138)
  {
    sub_22EC1C8D4(v134, (void (*)(void))type metadata accessor for ProductViewText.Storage);
    goto LABEL_115;
  }
  if (a1 == a2) {
    goto LABEL_167;
  }
  sub_22EC1C8D4(v134, (void (*)(void))type metadata accessor for ProductViewText.Storage);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *(void *)uint64_t v134 = *(void *)v135;
      *(void *)(v134 + 8) = *(void *)(v135 + 8);
      *(unsigned char *)(v134 + 16) = *(unsigned char *)(v135 + 16);
      *(void *)(v134 + 24) = *(void *)(v135 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_166;
    case 2u:
      uint64_t v230 = sub_22EE7C220();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v230 - 8) + 16))(v134, v135, v230);
      goto LABEL_166;
    case 3u:
      _s11PriceStringOMa(0);
      int v231 = swift_getEnumCaseMultiPayload();
      if (v231 == 2)
      {
        uint64_t v250 = sub_22EE7F6E0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v250 - 8) + 16))(v134, v135, v250);
        uint64_t v251 = _s20LocalizationResourceVMa();
        *(_OWORD *)(v134 + *(int *)(v251 + 20)) = *(_OWORD *)(v135 + *(int *)(v251 + 20));
      }
      else
      {
        if (v231 == 1)
        {
          *(void *)uint64_t v134 = *(void *)v135;
          *(void *)(v134 + 8) = *(void *)(v135 + 8);
          uint64_t v232 = _s22LocalizedPriceResourceVMa(0);
          uint64_t v233 = *(int *)(v232 + 20);
          v294 = (char *)(v135 + v233);
          v296 = (char *)(v134 + v233);
          uint64_t v234 = sub_22EE7F6E0();
          v235 = *(void (**)(char *, char *, uint64_t))(*(void *)(v234 - 8) + 16);
          swift_bridgeObjectRetain();
          v236 = v296;
          uint64_t v297 = v234;
          uint64_t v237 = v234;
          v238 = v235;
          v235(v236, v294, v237);
          uint64_t v239 = *(int *)(v232 + 24);
          v240 = (char *)(v134 + v239);
          v241 = (char *)(v135 + v239);
          uint64_t v242 = _s22LocalizedPriceResourceV6FormatOMa(0);
          int v243 = swift_getEnumCaseMultiPayload();
          if (v243 == 3)
          {
            *(void *)v240 = *(void *)v241;
            *((void *)v240 + 1) = *((void *)v241 + 1);
            v256 = (int *)_s15PricePropertiesVMa(0);
            uint64_t v257 = v256[5];
            v287 = &v241[v257];
            v291 = &v240[v257];
            uint64_t v258 = sub_22EE7F5D0();
            v283 = *(void (**)(char *, char *, uint64_t))(*(void *)(v258 - 8) + 16);
            swift_bridgeObjectRetain();
            v283(v291, v287, v258);
            v238(&v240[v256[6]], &v241[v256[6]], v297);
            *(void *)&v240[v256[7]] = *(void *)&v241[v256[7]];
          }
          else
          {
            if (v243 != 2)
            {
              memcpy(v240, v241, *(void *)(*(void *)(v242 - 8) + 64));
              goto LABEL_165;
            }
            *(void *)v240 = *(void *)v241;
            *((void *)v240 + 1) = *((void *)v241 + 1);
            v244 = (int *)_s15PricePropertiesVMa(0);
            uint64_t v245 = v244[5];
            v285 = &v241[v245];
            v289 = &v240[v245];
            uint64_t v246 = sub_22EE7F5D0();
            v281 = *(void (**)(char *, char *, uint64_t))(*(void *)(v246 - 8) + 16);
            swift_bridgeObjectRetain();
            v281(v289, v285, v246);
            v238(&v240[v244[6]], &v241[v244[6]], v297);
            *(void *)&v240[v244[7]] = *(void *)&v241[v244[7]];
            uint64_t v247 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
            v240[*(int *)(v247 + 48)] = v241[*(int *)(v247 + 48)];
          }
          swift_storeEnumTagMultiPayload();
LABEL_165:
          swift_storeEnumTagMultiPayload();
          uint64_t v130 = v298;
          goto LABEL_166;
        }
        *(void *)uint64_t v134 = *(void *)v135;
        *(void *)(v134 + 8) = *(void *)(v135 + 8);
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
LABEL_166:
      swift_storeEnumTagMultiPayload();
LABEL_167:
      a1[v130[6]] = a2[v130[6]];
      a1[v130[7]] = a2[v130[7]];
      a1[v130[8]] = a2[v130[8]];
      uint64_t v259 = v130[9];
      v260 = &a1[v259];
      v261 = &a2[v259];
      uint64_t v262 = *(void *)v261;
      v260[8] = v261[8];
      *(void *)v260 = v262;
      uint64_t v263 = *((void *)v261 + 2);
      v260[24] = v261[24];
      *((void *)v260 + 2) = v263;
      uint64_t v264 = *((void *)v261 + 4);
      v260[40] = v261[40];
      *((void *)v260 + 4) = v264;
      uint64_t v265 = *((void *)v261 + 6);
      v260[56] = v261[56];
      *((void *)v260 + 6) = v265;
      uint64_t v266 = *((void *)v261 + 8);
      v260[72] = v261[72];
      *((void *)v260 + 8) = v266;
      uint64_t v267 = *((void *)v261 + 10);
      v260[88] = v261[88];
      *((void *)v260 + 10) = v267;
      uint64_t v268 = v130[10];
      v269 = &a1[v268];
      v270 = &a2[v268];
      *(void *)v269 = *(void *)v270;
      *((void *)v269 + 1) = *((void *)v270 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (a1 != a2)
      {
        uint64_t v271 = v130[11];
        v272 = &a1[v271];
        v273 = &a2[v271];
        sub_22EADAC74((uint64_t)&a1[v271], &qword_26861BDD8);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDD8);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v274 = sub_22EE7CFC0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v274 - 8) + 16))(v272, v273, v274);
        }
        else
        {
          *(void *)v272 = *(void *)v273;
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
        uint64_t v275 = v130[12];
        v276 = &a1[v275];
        v277 = &a2[v275];
        sub_22EADAC74((uint64_t)&a1[v275], &qword_26861BDE0);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDE0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v278 = sub_22EE7CE90();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v278 - 8) + 16))(v276, v277, v278);
        }
        else
        {
          *(void *)v276 = *(void *)v277;
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
      }
      return a1;
    default:
      *(void *)uint64_t v134 = *(void *)v135;
      *(void *)(v134 + 8) = *(void *)(v135 + 8);
      swift_bridgeObjectRetain();
      goto LABEL_166;
  }
}

char *sub_22EC17FE8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA28);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    *(_OWORD *)&a1[*(int *)(v6 + 48)] = *(_OWORD *)&a2[*(int *)(v6 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v9 = (int *)type metadata accessor for LayoutMetrics(0);
  uint64_t v10 = v9[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v10], 1, v6))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v11, v12, v14);
    *(_OWORD *)&v11[*(int *)(v6 + 48)] = *(_OWORD *)&v12[*(int *)(v6 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v6);
  }
  uint64_t v15 = v9[6];
  int v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v15], 1, v6))
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v16, v17, v19);
    *(_OWORD *)&v16[*(int *)(v6 + 48)] = *(_OWORD *)&v17[*(int *)(v6 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v6);
  }
  uint64_t v20 = v9[7];
  uint64_t v21 = &a1[v20];
  int v22 = &a2[v20];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v20], 1, v6))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v21, v22, v24);
    *(_OWORD *)&v21[*(int *)(v6 + 48)] = *(_OWORD *)&v22[*(int *)(v6 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v6);
  }
  uint64_t v25 = v9[8];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v25], 1, v6))
  {
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v26, v27, v29);
    *(_OWORD *)&v26[*(int *)(v6 + 48)] = *(_OWORD *)&v27[*(int *)(v6 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v6);
  }
  uint64_t v30 = v9[9];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v30], 1, v6))
  {
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v31, v32, v34);
    *(_OWORD *)&v31[*(int *)(v6 + 48)] = *(_OWORD *)&v32[*(int *)(v6 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v6);
  }
  uint64_t v35 = type metadata accessor for PlaceholderLayouts(0);
  uint64_t v36 = *(int *)(v35 + 20);
  int v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v36], 1, v6))
  {
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v37, v38, v40);
    *(_OWORD *)&v37[*(int *)(v6 + 48)] = *(_OWORD *)&v38[*(int *)(v6 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v37, 0, 1, v6);
  }
  uint64_t v41 = v9[5];
  uint64_t v42 = &v37[v41];
  int v43 = &v38[v41];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v38[v41], 1, v6))
  {
    uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v42, v43, v45);
    *(_OWORD *)&v42[*(int *)(v6 + 48)] = *(_OWORD *)&v43[*(int *)(v6 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v42, 0, 1, v6);
  }
  uint64_t v46 = v9[6];
  uint64_t v47 = &v37[v46];
  uint64_t v48 = &v38[v46];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v38[v46], 1, v6))
  {
    uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v47, v48, v50);
    *(_OWORD *)&v47[*(int *)(v6 + 48)] = *(_OWORD *)&v48[*(int *)(v6 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v47, 0, 1, v6);
  }
  uint64_t v51 = v9[7];
  int v52 = &v37[v51];
  uint64_t v53 = &v38[v51];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v38[v51], 1, v6))
  {
    uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
  }
  else
  {
    uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v52, v53, v55);
    *(_OWORD *)&v52[*(int *)(v6 + 48)] = *(_OWORD *)&v53[*(int *)(v6 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v52, 0, 1, v6);
  }
  uint64_t v56 = v9[8];
  int v57 = &v37[v56];
  int v58 = &v38[v56];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v38[v56], 1, v6))
  {
    uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
  }
  else
  {
    uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(v57, v58, v60);
    *(_OWORD *)&v57[*(int *)(v6 + 48)] = *(_OWORD *)&v58[*(int *)(v6 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v57, 0, 1, v6);
  }
  uint64_t v61 = v9[9];
  uint64_t v62 = &v37[v61];
  uint64_t v63 = &v38[v61];
  if (__swift_getEnumTagSinglePayload((uint64_t)v63, 1, v6))
  {
    uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
  }
  else
  {
    uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 32))(v62, v63, v65);
    *(_OWORD *)&v62[*(int *)(v6 + 48)] = *(_OWORD *)&v63[*(int *)(v6 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v62, 0, 1, v6);
  }
  uint64_t v66 = *(int *)(v35 + 24);
  uint64_t v67 = &a1[v66];
  uint64_t v68 = &a2[v66];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v66], 1, v6))
  {
    uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
  }
  else
  {
    uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 32))(v67, v68, v70);
    *(_OWORD *)&v67[*(int *)(v6 + 48)] = *(_OWORD *)&v68[*(int *)(v6 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v67, 0, 1, v6);
  }
  uint64_t v71 = v9[5];
  int v72 = &v67[v71];
  int v73 = &v68[v71];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v68[v71], 1, v6))
  {
    uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
  }
  else
  {
    uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 32))(v72, v73, v75);
    *(_OWORD *)&v72[*(int *)(v6 + 48)] = *(_OWORD *)&v73[*(int *)(v6 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v72, 0, 1, v6);
  }
  uint64_t v76 = v9[6];
  uint64_t v77 = &v67[v76];
  uint64_t v78 = &v68[v76];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v68[v76], 1, v6))
  {
    uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v77, v78, *(void *)(*(void *)(v79 - 8) + 64));
  }
  else
  {
    uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 32))(v77, v78, v80);
    *(_OWORD *)&v77[*(int *)(v6 + 48)] = *(_OWORD *)&v78[*(int *)(v6 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v77, 0, 1, v6);
  }
  uint64_t v81 = v9[7];
  uint64_t v82 = &v67[v81];
  uint64_t v83 = &v68[v81];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v68[v81], 1, v6))
  {
    uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v82, v83, *(void *)(*(void *)(v84 - 8) + 64));
  }
  else
  {
    uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 32))(v82, v83, v85);
    *(_OWORD *)&v82[*(int *)(v6 + 48)] = *(_OWORD *)&v83[*(int *)(v6 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v82, 0, 1, v6);
  }
  uint64_t v86 = v9[8];
  int v87 = &v67[v86];
  uint64_t v88 = &v68[v86];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v68[v86], 1, v6))
  {
    uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v87, v88, *(void *)(*(void *)(v89 - 8) + 64));
  }
  else
  {
    uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 32))(v87, v88, v90);
    *(_OWORD *)&v87[*(int *)(v6 + 48)] = *(_OWORD *)&v88[*(int *)(v6 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v87, 0, 1, v6);
  }
  uint64_t v91 = v9[9];
  uint64_t v92 = &v67[v91];
  int v93 = &v68[v91];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v68[v91], 1, v6))
  {
    uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v92, v93, *(void *)(*(void *)(v94 - 8) + 64));
  }
  else
  {
    uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 32))(v92, v93, v95);
    *(_OWORD *)&v92[*(int *)(v6 + 48)] = *(_OWORD *)&v93[*(int *)(v6 + 48)];
    __swift_storeEnumTagSinglePayload((uint64_t)v92, 0, 1, v6);
  }
  uint64_t v96 = a3[5];
  uint64_t v97 = &a1[v96];
  uint64_t v98 = &a2[v96];
  uint64_t v99 = type metadata accessor for ProductViewText.Storage(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v98, 1, v99))
  {
    uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620B40);
    memcpy(v97, v98, *(void *)(*(void *)(v100 - 8) + 64));
    goto LABEL_74;
  }
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    uint64_t v103 = _s11PriceStringOMa(0);
    int v104 = swift_getEnumCaseMultiPayload();
    if (v104 == 2)
    {
      uint64_t v119 = sub_22EE7F6E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 32))(v97, v98, v119);
      uint64_t v120 = _s20LocalizationResourceVMa();
      *(_OWORD *)&v97[*(int *)(v120 + 20)] = *(_OWORD *)&v98[*(int *)(v120 + 20)];
    }
    else
    {
      if (v104 != 1)
      {
        memcpy(v97, v98, *(void *)(*(void *)(v103 - 8) + 64));
        goto LABEL_72;
      }
      *(_OWORD *)uint64_t v97 = *(_OWORD *)v98;
      uint64_t v105 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v106 = *(int *)(v105 + 20);
      int v107 = &v97[v106];
      int v108 = &v98[v106];
      uint64_t v109 = sub_22EE7F6E0();
      uint64_t v141 = *(void (**)(char *, char *))(*(void *)(v109 - 8) + 32);
      uint64_t v142 = v109;
      v141(v107, v108);
      uint64_t v110 = *(int *)(v105 + 24);
      uint64_t v111 = &v97[v110];
      uint64_t v112 = &v98[v110];
      uint64_t v113 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v114 = swift_getEnumCaseMultiPayload();
      if (v114 == 3)
      {
        *(_OWORD *)uint64_t v111 = *(_OWORD *)v112;
        int v121 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v122 = v121[5];
        int v138 = &v112[v122];
        uint64_t v140 = &v111[v122];
        uint64_t v123 = sub_22EE7F5D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v123 - 8) + 32))(v140, v138, v123);
        ((void (*)(char *, char *, uint64_t))v141)(&v111[v121[6]], &v112[v121[6]], v142);
        *(void *)&v111[v121[7]] = *(void *)&v112[v121[7]];
      }
      else
      {
        if (v114 != 2)
        {
          memcpy(v111, v112, *(void *)(*(void *)(v113 - 8) + 64));
          goto LABEL_71;
        }
        *(_OWORD *)uint64_t v111 = *(_OWORD *)v112;
        int v115 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v116 = v115[5];
        int v137 = &v112[v116];
        uint64_t v139 = &v111[v116];
        uint64_t v117 = sub_22EE7F5D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 32))(v139, v137, v117);
        ((void (*)(char *, char *, uint64_t))v141)(&v111[v115[6]], &v112[v115[6]], v142);
        *(void *)&v111[v115[7]] = *(void *)&v112[v115[7]];
        uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v111[*(int *)(v118 + 48)] = v112[*(int *)(v118 + 48)];
      }
      swift_storeEnumTagMultiPayload();
    }
LABEL_71:
    swift_storeEnumTagMultiPayload();
    goto LABEL_72;
  }
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v102 = sub_22EE7C220();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 32))(v97, v98, v102);
LABEL_72:
    swift_storeEnumTagMultiPayload();
    goto LABEL_73;
  }
  memcpy(v97, v98, *(void *)(*(void *)(v99 - 8) + 64));
LABEL_73:
  __swift_storeEnumTagSinglePayload((uint64_t)v97, 0, 1, v99);
LABEL_74:
  uint64_t v124 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  a1[v124] = a2[v124];
  uint64_t v125 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  memcpy(&a1[v125], &a2[v125], 0x59uLL);
  uint64_t v126 = a3[11];
  *(_OWORD *)&a1[a3[10]] = *(_OWORD *)&a2[a3[10]];
  uint64_t v127 = &a1[v126];
  int v128 = &a2[v126];
  uint64_t v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v130 = sub_22EE7CFC0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 32))(v127, v128, v130);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v127, v128, *(void *)(*(void *)(v129 - 8) + 64));
  }
  uint64_t v131 = a3[12];
  uint64_t v132 = &a1[v131];
  uint64_t v133 = &a2[v131];
  uint64_t v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v135 = sub_22EE7CE90();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v135 - 8) + 32))(v132, v133, v135);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v132, v133, *(void *)(*(void *)(v134 - 8) + 64));
  }
  return a1;
}

char *sub_22EC19200(char *a1, char *a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA28);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  uint64_t v237 = a3;
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
      *(_OWORD *)&a1[*(int *)(v6 + 48)] = *(_OWORD *)&a2[*(int *)(v6 + 48)];
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_22EADAC74((uint64_t)a1, &qword_26861BA28);
LABEL_6:
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 40))(a1, a2, v142);
  *(_OWORD *)&a1[*(int *)(v6 + 48)] = *(_OWORD *)&a2[*(int *)(v6 + 48)];
LABEL_7:
  uint64_t v11 = (int *)type metadata accessor for LayoutMetrics(0);
  uint64_t v12 = v11[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v12], 1, v6);
  int v16 = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v13, v14, v17);
      *(_OWORD *)&v13[*(int *)(v6 + 48)] = *(_OWORD *)&v14[*(int *)(v6 + 48)];
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v16)
  {
    sub_22EADAC74((uint64_t)v13, &qword_26861BA28);
LABEL_12:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v143 - 8) + 40))(v13, v14, v143);
  *(_OWORD *)&v13[*(int *)(v6 + 48)] = *(_OWORD *)&v14[*(int *)(v6 + 48)];
LABEL_13:
  uint64_t v19 = v11[6];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  int v22 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v19], 1, v6);
  int v23 = __swift_getEnumTagSinglePayload((uint64_t)v21, 1, v6);
  if (v22)
  {
    if (!v23)
    {
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v20, v21, v24);
      *(_OWORD *)&v20[*(int *)(v6 + 48)] = *(_OWORD *)&v21[*(int *)(v6 + 48)];
      __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v23)
  {
    sub_22EADAC74((uint64_t)v20, &qword_26861BA28);
LABEL_18:
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v20, v21, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_19;
  }
  uint64_t v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v144 - 8) + 40))(v20, v21, v144);
  *(_OWORD *)&v20[*(int *)(v6 + 48)] = *(_OWORD *)&v21[*(int *)(v6 + 48)];
LABEL_19:
  uint64_t v26 = v11[7];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  int v29 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v26], 1, v6);
  int v30 = __swift_getEnumTagSinglePayload((uint64_t)v28, 1, v6);
  if (v29)
  {
    if (!v30)
    {
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v27, v28, v31);
      *(_OWORD *)&v27[*(int *)(v6 + 48)] = *(_OWORD *)&v28[*(int *)(v6 + 48)];
      __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v6);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v30)
  {
    sub_22EADAC74((uint64_t)v27, &qword_26861BA28);
LABEL_24:
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v27, v28, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_25;
  }
  uint64_t v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v145 - 8) + 40))(v27, v28, v145);
  *(_OWORD *)&v27[*(int *)(v6 + 48)] = *(_OWORD *)&v28[*(int *)(v6 + 48)];
LABEL_25:
  uint64_t v33 = v11[8];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = &a2[v33];
  int v36 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v33], 1, v6);
  int v37 = __swift_getEnumTagSinglePayload((uint64_t)v35, 1, v6);
  if (v36)
  {
    if (!v37)
    {
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v34, v35, v38);
      *(_OWORD *)&v34[*(int *)(v6 + 48)] = *(_OWORD *)&v35[*(int *)(v6 + 48)];
      __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v6);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v37)
  {
    sub_22EADAC74((uint64_t)v34, &qword_26861BA28);
LABEL_30:
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v34, v35, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_31;
  }
  uint64_t v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v146 - 8) + 40))(v34, v35, v146);
  *(_OWORD *)&v34[*(int *)(v6 + 48)] = *(_OWORD *)&v35[*(int *)(v6 + 48)];
LABEL_31:
  uint64_t v40 = v11[9];
  uint64_t v41 = &a1[v40];
  uint64_t v42 = &a2[v40];
  int v43 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v40], 1, v6);
  int v44 = __swift_getEnumTagSinglePayload((uint64_t)v42, 1, v6);
  if (v43)
  {
    if (!v44)
    {
      uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v41, v42, v45);
      *(_OWORD *)&v41[*(int *)(v6 + 48)] = *(_OWORD *)&v42[*(int *)(v6 + 48)];
      __swift_storeEnumTagSinglePayload((uint64_t)v41, 0, 1, v6);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v44)
  {
    sub_22EADAC74((uint64_t)v41, &qword_26861BA28);
LABEL_36:
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v41, v42, *(void *)(*(void *)(v46 - 8) + 64));
    goto LABEL_37;
  }
  uint64_t v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 40))(v41, v42, v147);
  *(_OWORD *)&v41[*(int *)(v6 + 48)] = *(_OWORD *)&v42[*(int *)(v6 + 48)];
LABEL_37:
  uint64_t v47 = type metadata accessor for PlaceholderLayouts(0);
  uint64_t v48 = *(int *)(v47 + 20);
  uint64_t v49 = &a1[v48];
  uint64_t v50 = &a2[v48];
  int v51 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v48], 1, v6);
  int v52 = __swift_getEnumTagSinglePayload((uint64_t)v50, 1, v6);
  if (v51)
  {
    if (!v52)
    {
      uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 32))(v49, v50, v53);
      *(_OWORD *)&v49[*(int *)(v6 + 48)] = *(_OWORD *)&v50[*(int *)(v6 + 48)];
      __swift_storeEnumTagSinglePayload((uint64_t)v49, 0, 1, v6);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v52)
  {
    sub_22EADAC74((uint64_t)v49, &qword_26861BA28);
LABEL_42:
    uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v49, v50, *(void *)(*(void *)(v54 - 8) + 64));
    goto LABEL_43;
  }
  uint64_t v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 40))(v49, v50, v148);
  *(_OWORD *)&v49[*(int *)(v6 + 48)] = *(_OWORD *)&v50[*(int *)(v6 + 48)];
LABEL_43:
  uint64_t v55 = v11[5];
  uint64_t v56 = &v49[v55];
  int v57 = &v50[v55];
  int v58 = __swift_getEnumTagSinglePayload((uint64_t)&v49[v55], 1, v6);
  int v59 = __swift_getEnumTagSinglePayload((uint64_t)v57, 1, v6);
  if (v58)
  {
    if (!v59)
    {
      uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(v56, v57, v60);
      *(_OWORD *)&v56[*(int *)(v6 + 48)] = *(_OWORD *)&v57[*(int *)(v6 + 48)];
      __swift_storeEnumTagSinglePayload((uint64_t)v56, 0, 1, v6);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v59)
  {
    sub_22EADAC74((uint64_t)v56, &qword_26861BA28);
LABEL_48:
    uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v56, v57, *(void *)(*(void *)(v61 - 8) + 64));
    goto LABEL_49;
  }
  uint64_t v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 40))(v56, v57, v149);
  *(_OWORD *)&v56[*(int *)(v6 + 48)] = *(_OWORD *)&v57[*(int *)(v6 + 48)];
LABEL_49:
  uint64_t v62 = v11[6];
  uint64_t v63 = &v49[v62];
  uint64_t v64 = &v50[v62];
  int v65 = __swift_getEnumTagSinglePayload((uint64_t)&v49[v62], 1, v6);
  int v66 = __swift_getEnumTagSinglePayload((uint64_t)v64, 1, v6);
  if (v65)
  {
    if (!v66)
    {
      uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 32))(v63, v64, v67);
      *(_OWORD *)&v63[*(int *)(v6 + 48)] = *(_OWORD *)&v64[*(int *)(v6 + 48)];
      __swift_storeEnumTagSinglePayload((uint64_t)v63, 0, 1, v6);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v66)
  {
    sub_22EADAC74((uint64_t)v63, &qword_26861BA28);
LABEL_54:
    uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v63, v64, *(void *)(*(void *)(v68 - 8) + 64));
    goto LABEL_55;
  }
  uint64_t v150 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v150 - 8) + 40))(v63, v64, v150);
  *(_OWORD *)&v63[*(int *)(v6 + 48)] = *(_OWORD *)&v64[*(int *)(v6 + 48)];
LABEL_55:
  uint64_t v69 = v11[7];
  uint64_t v70 = &v49[v69];
  uint64_t v71 = &v50[v69];
  int v72 = __swift_getEnumTagSinglePayload((uint64_t)&v49[v69], 1, v6);
  int v73 = __swift_getEnumTagSinglePayload((uint64_t)v71, 1, v6);
  if (v72)
  {
    if (!v73)
    {
      uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 32))(v70, v71, v74);
      *(_OWORD *)&v70[*(int *)(v6 + 48)] = *(_OWORD *)&v71[*(int *)(v6 + 48)];
      __swift_storeEnumTagSinglePayload((uint64_t)v70, 0, 1, v6);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v73)
  {
    sub_22EADAC74((uint64_t)v70, &qword_26861BA28);
LABEL_60:
    uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v70, v71, *(void *)(*(void *)(v75 - 8) + 64));
    goto LABEL_61;
  }
  uint64_t v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v151 - 8) + 40))(v70, v71, v151);
  *(_OWORD *)&v70[*(int *)(v6 + 48)] = *(_OWORD *)&v71[*(int *)(v6 + 48)];
LABEL_61:
  uint64_t v76 = v11[8];
  uint64_t v77 = &v49[v76];
  uint64_t v78 = &v50[v76];
  int v79 = __swift_getEnumTagSinglePayload((uint64_t)&v49[v76], 1, v6);
  int v80 = __swift_getEnumTagSinglePayload((uint64_t)v78, 1, v6);
  if (v79)
  {
    if (!v80)
    {
      uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 32))(v77, v78, v81);
      *(_OWORD *)&v77[*(int *)(v6 + 48)] = *(_OWORD *)&v78[*(int *)(v6 + 48)];
      __swift_storeEnumTagSinglePayload((uint64_t)v77, 0, 1, v6);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v80)
  {
    sub_22EADAC74((uint64_t)v77, &qword_26861BA28);
LABEL_66:
    uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v77, v78, *(void *)(*(void *)(v82 - 8) + 64));
    goto LABEL_67;
  }
  uint64_t v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v152 - 8) + 40))(v77, v78, v152);
  *(_OWORD *)&v77[*(int *)(v6 + 48)] = *(_OWORD *)&v78[*(int *)(v6 + 48)];
LABEL_67:
  uint64_t v83 = v11[9];
  uint64_t v84 = &v49[v83];
  uint64_t v85 = &v50[v83];
  int v86 = __swift_getEnumTagSinglePayload((uint64_t)v84, 1, v6);
  int v87 = __swift_getEnumTagSinglePayload((uint64_t)v85, 1, v6);
  if (v86)
  {
    if (!v87)
    {
      uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 32))(v84, v85, v88);
      *(_OWORD *)&v84[*(int *)(v6 + 48)] = *(_OWORD *)&v85[*(int *)(v6 + 48)];
      __swift_storeEnumTagSinglePayload((uint64_t)v84, 0, 1, v6);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v87)
  {
    sub_22EADAC74((uint64_t)v84, &qword_26861BA28);
LABEL_72:
    uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v84, v85, *(void *)(*(void *)(v89 - 8) + 64));
    goto LABEL_73;
  }
  uint64_t v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v153 - 8) + 40))(v84, v85, v153);
  *(_OWORD *)&v84[*(int *)(v6 + 48)] = *(_OWORD *)&v85[*(int *)(v6 + 48)];
LABEL_73:
  uint64_t v90 = *(int *)(v47 + 24);
  uint64_t v91 = &a1[v90];
  uint64_t v92 = &a2[v90];
  int v93 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v90], 1, v6);
  int v94 = __swift_getEnumTagSinglePayload((uint64_t)v92, 1, v6);
  if (v93)
  {
    if (!v94)
    {
      uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 32))(v91, v92, v95);
      *(_OWORD *)&v91[*(int *)(v6 + 48)] = *(_OWORD *)&v92[*(int *)(v6 + 48)];
      __swift_storeEnumTagSinglePayload((uint64_t)v91, 0, 1, v6);
      goto LABEL_79;
    }
    goto LABEL_78;
  }
  if (v94)
  {
    sub_22EADAC74((uint64_t)v91, &qword_26861BA28);
LABEL_78:
    uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v91, v92, *(void *)(*(void *)(v96 - 8) + 64));
    goto LABEL_79;
  }
  uint64_t v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v154 - 8) + 40))(v91, v92, v154);
  *(_OWORD *)&v91[*(int *)(v6 + 48)] = *(_OWORD *)&v92[*(int *)(v6 + 48)];
LABEL_79:
  uint64_t v97 = v11[5];
  uint64_t v98 = &v91[v97];
  uint64_t v99 = &v92[v97];
  int v100 = __swift_getEnumTagSinglePayload((uint64_t)&v91[v97], 1, v6);
  int v101 = __swift_getEnumTagSinglePayload((uint64_t)v99, 1, v6);
  if (v100)
  {
    if (!v101)
    {
      uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 32))(v98, v99, v102);
      *(_OWORD *)&v98[*(int *)(v6 + 48)] = *(_OWORD *)&v99[*(int *)(v6 + 48)];
      __swift_storeEnumTagSinglePayload((uint64_t)v98, 0, 1, v6);
      goto LABEL_85;
    }
    goto LABEL_84;
  }
  if (v101)
  {
    sub_22EADAC74((uint64_t)v98, &qword_26861BA28);
LABEL_84:
    uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v98, v99, *(void *)(*(void *)(v103 - 8) + 64));
    goto LABEL_85;
  }
  uint64_t v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 40))(v98, v99, v155);
  *(_OWORD *)&v98[*(int *)(v6 + 48)] = *(_OWORD *)&v99[*(int *)(v6 + 48)];
LABEL_85:
  uint64_t v104 = v11[6];
  uint64_t v105 = &v91[v104];
  uint64_t v106 = &v92[v104];
  int v107 = __swift_getEnumTagSinglePayload((uint64_t)&v91[v104], 1, v6);
  int v108 = __swift_getEnumTagSinglePayload((uint64_t)v106, 1, v6);
  if (v107)
  {
    if (!v108)
    {
      uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v109 - 8) + 32))(v105, v106, v109);
      *(_OWORD *)&v105[*(int *)(v6 + 48)] = *(_OWORD *)&v106[*(int *)(v6 + 48)];
      __swift_storeEnumTagSinglePayload((uint64_t)v105, 0, 1, v6);
      goto LABEL_91;
    }
    goto LABEL_90;
  }
  if (v108)
  {
    sub_22EADAC74((uint64_t)v105, &qword_26861BA28);
LABEL_90:
    uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v105, v106, *(void *)(*(void *)(v110 - 8) + 64));
    goto LABEL_91;
  }
  uint64_t v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v156 - 8) + 40))(v105, v106, v156);
  *(_OWORD *)&v105[*(int *)(v6 + 48)] = *(_OWORD *)&v106[*(int *)(v6 + 48)];
LABEL_91:
  uint64_t v111 = v11[7];
  uint64_t v112 = &v91[v111];
  uint64_t v113 = &v92[v111];
  int v114 = __swift_getEnumTagSinglePayload((uint64_t)&v91[v111], 1, v6);
  int v115 = __swift_getEnumTagSinglePayload((uint64_t)v113, 1, v6);
  if (v114)
  {
    if (!v115)
    {
      uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v116 - 8) + 32))(v112, v113, v116);
      *(_OWORD *)&v112[*(int *)(v6 + 48)] = *(_OWORD *)&v113[*(int *)(v6 + 48)];
      __swift_storeEnumTagSinglePayload((uint64_t)v112, 0, 1, v6);
      goto LABEL_97;
    }
    goto LABEL_96;
  }
  if (v115)
  {
    sub_22EADAC74((uint64_t)v112, &qword_26861BA28);
LABEL_96:
    uint64_t v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v112, v113, *(void *)(*(void *)(v117 - 8) + 64));
    goto LABEL_97;
  }
  uint64_t v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v157 - 8) + 40))(v112, v113, v157);
  *(_OWORD *)&v112[*(int *)(v6 + 48)] = *(_OWORD *)&v113[*(int *)(v6 + 48)];
LABEL_97:
  uint64_t v118 = v11[8];
  uint64_t v119 = &v91[v118];
  uint64_t v120 = &v92[v118];
  int v121 = __swift_getEnumTagSinglePayload((uint64_t)&v91[v118], 1, v6);
  int v122 = __swift_getEnumTagSinglePayload((uint64_t)v120, 1, v6);
  if (v121)
  {
    if (!v122)
    {
      uint64_t v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v123 - 8) + 32))(v119, v120, v123);
      *(_OWORD *)&v119[*(int *)(v6 + 48)] = *(_OWORD *)&v120[*(int *)(v6 + 48)];
      __swift_storeEnumTagSinglePayload((uint64_t)v119, 0, 1, v6);
      goto LABEL_103;
    }
    goto LABEL_102;
  }
  if (v122)
  {
    sub_22EADAC74((uint64_t)v119, &qword_26861BA28);
LABEL_102:
    uint64_t v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v119, v120, *(void *)(*(void *)(v124 - 8) + 64));
    goto LABEL_103;
  }
  uint64_t v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v158 - 8) + 40))(v119, v120, v158);
  *(_OWORD *)&v119[*(int *)(v6 + 48)] = *(_OWORD *)&v120[*(int *)(v6 + 48)];
LABEL_103:
  uint64_t v125 = v237;
  uint64_t v126 = v11[9];
  uint64_t v127 = &v91[v126];
  int v128 = &v92[v126];
  int v129 = __swift_getEnumTagSinglePayload((uint64_t)v127, 1, v6);
  int v130 = __swift_getEnumTagSinglePayload((uint64_t)v128, 1, v6);
  if (v129)
  {
    if (!v130)
    {
      uint64_t v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 32))(v127, v128, v131);
      *(_OWORD *)&v127[*(int *)(v6 + 48)] = *(_OWORD *)&v128[*(int *)(v6 + 48)];
      __swift_storeEnumTagSinglePayload((uint64_t)v127, 0, 1, v6);
      goto LABEL_109;
    }
    goto LABEL_108;
  }
  if (v130)
  {
    sub_22EADAC74((uint64_t)v127, &qword_26861BA28);
LABEL_108:
    uint64_t v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA30);
    memcpy(v127, v128, *(void *)(*(void *)(v132 - 8) + 64));
    goto LABEL_109;
  }
  uint64_t v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v159 - 8) + 40))(v127, v128, v159);
  *(_OWORD *)&v127[*(int *)(v6 + 48)] = *(_OWORD *)&v128[*(int *)(v6 + 48)];
LABEL_109:
  uint64_t v133 = v237[5];
  uint64_t v134 = &a1[v133];
  uint64_t v135 = &a2[v133];
  uint64_t v136 = type metadata accessor for ProductViewText.Storage(0);
  int v137 = __swift_getEnumTagSinglePayload((uint64_t)v134, 1, v136);
  int v138 = __swift_getEnumTagSinglePayload((uint64_t)v135, 1, v136);
  if (v137)
  {
    if (!v138)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload != 3)
      {
        if (EnumCaseMultiPayload != 2)
        {
          memcpy(v134, v135, *(void *)(*(void *)(v136 - 8) + 64));
LABEL_162:
          __swift_storeEnumTagSinglePayload((uint64_t)v134, 0, 1, v136);
          goto LABEL_168;
        }
        uint64_t v140 = sub_22EE7C220();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 32))(v134, v135, v140);
LABEL_161:
        swift_storeEnumTagMultiPayload();
        goto LABEL_162;
      }
      uint64_t v162 = _s11PriceStringOMa(0);
      int v163 = swift_getEnumCaseMultiPayload();
      if (v163 == 2)
      {
        uint64_t v194 = sub_22EE7F6E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v194 - 8) + 32))(v134, v135, v194);
        uint64_t v195 = _s20LocalizationResourceVMa();
        *(_OWORD *)&v134[*(int *)(v195 + 20)] = *(_OWORD *)&v135[*(int *)(v195 + 20)];
LABEL_160:
        swift_storeEnumTagMultiPayload();
        goto LABEL_161;
      }
      if (v163 != 1)
      {
        memcpy(v134, v135, *(void *)(*(void *)(v162 - 8) + 64));
        goto LABEL_161;
      }
      *(_OWORD *)uint64_t v134 = *(_OWORD *)v135;
      uint64_t v164 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v165 = *(int *)(v164 + 20);
      uint64_t v166 = &v134[v165];
      uint64_t v167 = &v135[v165];
      uint64_t v168 = sub_22EE7F6E0();
      v235 = *(void (**)(char *, char *, uint64_t))(*(void *)(v168 - 8) + 32);
      v235(v166, v167, v168);
      uint64_t v169 = *(int *)(v164 + 24);
      uint64_t v170 = &v134[v169];
      uint64_t v171 = &v135[v169];
      uint64_t v172 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v173 = swift_getEnumCaseMultiPayload();
      if (v173 == 3)
      {
        *(_OWORD *)uint64_t v170 = *(_OWORD *)v171;
        v198 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v199 = v198[5];
        uint64_t v229 = &v171[v199];
        uint64_t v233 = &v170[v199];
        uint64_t v200 = sub_22EE7F5D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v200 - 8) + 32))(v233, v229, v200);
        v235(&v170[v198[6]], &v171[v198[6]], v168);
        *(void *)&v170[v198[7]] = *(void *)&v171[v198[7]];
      }
      else
      {
        if (v173 != 2)
        {
          memcpy(v170, v171, *(void *)(*(void *)(v172 - 8) + 64));
          goto LABEL_159;
        }
        *(_OWORD *)uint64_t v170 = *(_OWORD *)v171;
        v174 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v175 = v174[5];
        uint64_t v227 = &v171[v175];
        int v231 = &v170[v175];
        uint64_t v176 = sub_22EE7F5D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v176 - 8) + 32))(v231, v227, v176);
        v235(&v170[v174[6]], &v171[v174[6]], v168);
        *(void *)&v170[v174[7]] = *(void *)&v171[v174[7]];
        uint64_t v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v170[*(int *)(v177 + 48)] = v171[*(int *)(v177 + 48)];
      }
      swift_storeEnumTagMultiPayload();
LABEL_159:
      uint64_t v125 = v237;
      goto LABEL_160;
    }
    goto LABEL_116;
  }
  if (v138)
  {
    sub_22EC1C8D4((uint64_t)v134, (void (*)(void))type metadata accessor for ProductViewText.Storage);
LABEL_116:
    size_t v141 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268620B40) - 8) + 64);
LABEL_117:
    memcpy(v134, v135, v141);
    goto LABEL_168;
  }
  if (a1 == a2) {
    goto LABEL_168;
  }
  sub_22EC1C8D4((uint64_t)v134, (void (*)(void))type metadata accessor for ProductViewText.Storage);
  int v160 = swift_getEnumCaseMultiPayload();
  if (v160 == 3)
  {
    uint64_t v178 = _s11PriceStringOMa(0);
    int v179 = swift_getEnumCaseMultiPayload();
    if (v179 == 2)
    {
      uint64_t v196 = sub_22EE7F6E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v196 - 8) + 32))(v134, v135, v196);
      uint64_t v197 = _s20LocalizationResourceVMa();
      *(_OWORD *)&v134[*(int *)(v197 + 20)] = *(_OWORD *)&v135[*(int *)(v197 + 20)];
      swift_storeEnumTagMultiPayload();
      goto LABEL_167;
    }
    if (v179 != 1)
    {
      memcpy(v134, v135, *(void *)(*(void *)(v178 - 8) + 64));
      goto LABEL_167;
    }
    *(_OWORD *)uint64_t v134 = *(_OWORD *)v135;
    uint64_t v180 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v181 = *(int *)(v180 + 20);
    v182 = &v134[v181];
    v183 = &v135[v181];
    uint64_t v184 = sub_22EE7F6E0();
    v236 = *(void (**)(char *, char *, uint64_t))(*(void *)(v184 - 8) + 32);
    v236(v182, v183, v184);
    uint64_t v185 = *(int *)(v180 + 24);
    v186 = &v134[v185];
    v187 = &v135[v185];
    uint64_t v188 = _s22LocalizedPriceResourceV6FormatOMa(0);
    int v189 = swift_getEnumCaseMultiPayload();
    if (v189 == 3)
    {
      *(_OWORD *)v186 = *(_OWORD *)v187;
      uint64_t v201 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v202 = v201[5];
      uint64_t v230 = &v187[v202];
      uint64_t v234 = &v186[v202];
      uint64_t v203 = sub_22EE7F5D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v203 - 8) + 32))(v234, v230, v203);
      v236(&v186[v201[6]], &v187[v201[6]], v184);
      *(void *)&v186[v201[7]] = *(void *)&v187[v201[7]];
    }
    else
    {
      if (v189 != 2)
      {
        memcpy(v186, v187, *(void *)(*(void *)(v188 - 8) + 64));
        goto LABEL_166;
      }
      *(_OWORD *)v186 = *(_OWORD *)v187;
      v190 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v191 = v190[5];
      uint64_t v228 = &v187[v191];
      uint64_t v232 = &v186[v191];
      uint64_t v192 = sub_22EE7F5D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v192 - 8) + 32))(v232, v228, v192);
      v236(&v186[v190[6]], &v187[v190[6]], v184);
      *(void *)&v186[v190[7]] = *(void *)&v187[v190[7]];
      uint64_t v193 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
      v186[*(int *)(v193 + 48)] = v187[*(int *)(v193 + 48)];
    }
    swift_storeEnumTagMultiPayload();
LABEL_166:
    swift_storeEnumTagMultiPayload();
    uint64_t v125 = v237;
    goto LABEL_167;
  }
  if (v160 != 2)
  {
    size_t v141 = *(void *)(*(void *)(v136 - 8) + 64);
    goto LABEL_117;
  }
  uint64_t v161 = sub_22EE7C220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v161 - 8) + 32))(v134, v135, v161);
LABEL_167:
  swift_storeEnumTagMultiPayload();
LABEL_168:
  uint64_t v204 = v125[7];
  a1[v125[6]] = a2[v125[6]];
  a1[v204] = a2[v204];
  uint64_t v205 = v125[9];
  a1[v125[8]] = a2[v125[8]];
  v206 = &a1[v205];
  v207 = &a2[v205];
  *(void *)v206 = *(void *)v207;
  v206[8] = v207[8];
  *((void *)v206 + 2) = *((void *)v207 + 2);
  v206[24] = v207[24];
  *((void *)v206 + 4) = *((void *)v207 + 4);
  v206[40] = v207[40];
  uint64_t v208 = *((void *)v207 + 6);
  v206[56] = v207[56];
  *((void *)v206 + 6) = v208;
  uint64_t v209 = *((void *)v207 + 8);
  v206[72] = v207[72];
  *((void *)v206 + 8) = v209;
  uint64_t v210 = *((void *)v207 + 10);
  v206[88] = v207[88];
  *((void *)v206 + 10) = v210;
  uint64_t v211 = v125[10];
  uint64_t v212 = &a1[v211];
  v213 = &a2[v211];
  uint64_t v215 = *(void *)v213;
  uint64_t v214 = *((void *)v213 + 1);
  *(void *)uint64_t v212 = v215;
  *((void *)v212 + 1) = v214;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v216 = v125[11];
    uint64_t v217 = &a1[v216];
    v218 = &a2[v216];
    sub_22EADAC74((uint64_t)&a1[v216], &qword_26861BDD8);
    uint64_t v219 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v220 = sub_22EE7CFC0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v220 - 8) + 32))(v217, v218, v220);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v217, v218, *(void *)(*(void *)(v219 - 8) + 64));
    }
    uint64_t v221 = v125[12];
    v222 = &a1[v221];
    uint64_t v223 = &a2[v221];
    sub_22EADAC74((uint64_t)&a1[v221], &qword_26861BDE0);
    uint64_t v224 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDE0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v225 = sub_22EE7CE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v225 - 8) + 32))(v222, v223, v225);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v222, v223, *(void *)(*(void *)(v224 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_22EC1B128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EC1B13C);
}

uint64_t sub_22EC1B13C(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for PlaceholderLayouts(0);
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_13:
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_268620B40);
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v12 = a3[5];
LABEL_12:
    uint64_t v9 = a1 + v12;
    goto LABEL_13;
  }
  if (a2 != 0x7FFFFFFF)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26861C7F0);
    OUTLINED_FUNCTION_10();
    if (*(_DWORD *)(v16 + 84) == a2)
    {
      uint64_t v8 = v15;
      uint64_t v12 = a3[11];
    }
    else
    {
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C7F8);
      uint64_t v12 = a3[12];
    }
    goto LABEL_12;
  }
  unint64_t v13 = *(void *)(a1 + a3[10] + 8);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t sub_22EC1B244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EC1B258);
}

void sub_22EC1B258(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  type metadata accessor for PlaceholderLayouts(0);
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268620B40);
    OUTLINED_FUNCTION_10();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[5];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(void *)(a1 + a4[10] + 8) = (a2 - 1);
        return;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26861C7F0);
      OUTLINED_FUNCTION_10();
      if (*(_DWORD *)(v16 + 84) == a3)
      {
        uint64_t v10 = v15;
        uint64_t v14 = a4[11];
      }
      else
      {
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C7F8);
        uint64_t v14 = a4[12];
      }
    }
    uint64_t v11 = a1 + v14;
  }

  __swift_storeEnumTagSinglePayload(v11, a2, a2, v10);
}

void sub_22EC1B35C()
{
  type metadata accessor for PlaceholderLayouts(319);
  if (v0 <= 0x3F)
  {
    sub_22EC1B554(319, &qword_268620B68, type metadata accessor for ProductViewText.Storage, MEMORY[0x263F8D8F0]);
    if (v1 <= 0x3F)
    {
      sub_22EC1B554(319, (unint64_t *)&qword_26861C810, MEMORY[0x263F18FF8], MEMORY[0x263F185C8]);
      if (v2 <= 0x3F)
      {
        sub_22EC1B554(319, (unint64_t *)&qword_26861C818, MEMORY[0x263F18D80], MEMORY[0x263F185C8]);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_22EC1B554(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_22EC1B5B8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EC1B5D4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_268620B70);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_11_0();
  uint64_t v4 = (uint64_t *)(v3 - v2);
  *uint64_t v4 = sub_22EE7ED70();
  v4[1] = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620B78);
  sub_22EC1B6D4(v0, (uint64_t)v4 + *(int *)(v6 + 44));
  type metadata accessor for ProductViewText(0);
  sub_22EADDD7C(&qword_268620B80, &qword_268620B70);
  sub_22EE7E4C0();
  return sub_22EADAC74((uint64_t)v4, &qword_268620B70);
}

uint64_t sub_22EC1B6D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v101 = a2;
  uint64_t v3 = sub_22EE7DC20();
  uint64_t v94 = *(void *)(v3 - 8);
  uint64_t v95 = v3;
  MEMORY[0x270FA5388](v3);
  int v93 = (char *)&v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for LayoutMetrics(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v86 = (uint64_t)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_22EE7CFF0();
  MEMORY[0x270FA5388](v81);
  uint64_t v84 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620B88);
  MEMORY[0x270FA5388](v82);
  uint64_t v83 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620B90);
  MEMORY[0x270FA5388](v90);
  uint64_t v85 = (uint64_t)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620B98);
  uint64_t v91 = *(void *)(v10 - 8);
  uint64_t v92 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v89 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620BA0);
  uint64_t v12 = MEMORY[0x270FA5388](v96);
  uint64_t v88 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v87 = (uint64_t)&v77 - v14;
  uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620BA8);
  MEMORY[0x270FA5388](v100);
  *(void *)&long long v97 = (char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620BB0);
  MEMORY[0x270FA5388](v98);
  uint64_t v99 = (_OWORD *)((char *)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v80 = sub_22EE7CE90();
  uint64_t v79 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  uint64_t v78 = (char *)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_22EE7CFC0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  int v22 = (char *)&v77 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v77 - v23;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620B40);
  MEMORY[0x270FA5388](v25 - 8);
  uint64_t v27 = (char *)&v77 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for ProductViewText.Storage(0);
  MEMORY[0x270FA5388](v28);
  int v30 = (char *)&v77 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = (int *)type metadata accessor for ProductViewText(0);
  sub_22EADAD08(a1 + v31[5], (uint64_t)v27, &qword_268620B40);
  if (__swift_getEnumTagSinglePayload((uint64_t)v27, 1, v28) == 1)
  {
    sub_22EADAC74((uint64_t)v27, &qword_268620B40);
  }
  else
  {
    sub_22EC1CEC4((uint64_t)v27, (uint64_t)v30, (void (*)(void))type metadata accessor for ProductViewText.Storage);
    sub_22EB183A4();
    sub_22EE7CFB0();
    sub_22EC1CE74((unint64_t *)&qword_26861D078, MEMORY[0x263F18FF8]);
    char v32 = sub_22EE800F0();
    uint64_t v33 = *(void (**)(char *, uint64_t))(v19 + 8);
    v33(v22, v18);
    v33(v24, v18);
    if ((v32 & 1) == 0)
    {
      sub_22EC1C244((uint64_t)v30, (uint64_t)&v102);
      long long v97 = v102;
      uint64_t v65 = v104;
      uint64_t v96 = v103;
      char v66 = v105;
      char v67 = *(unsigned char *)(a1 + v31[6]);
      char v68 = *(unsigned char *)(a1 + v31[7]);
      char v69 = v106;
      char v70 = *(unsigned char *)(a1 + v31[8]);
      uint64_t v71 = v78;
      sub_22EB15D20();
      char v72 = sub_22EE7CE80();
      (*(void (**)(char *, uint64_t))(v79 + 8))(v71, v80);
      int v73 = v72 & 1;
      if (v73) {
        uint64_t v74 = 0;
      }
      else {
        uint64_t v74 = 2;
      }
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v76 = v99;
      *uint64_t v99 = v97;
      *((void *)v76 + 2) = v96;
      *((void *)v76 + 3) = v65;
      *((unsigned char *)v76 + 32) = v66;
      *((unsigned char *)v76 + 33) = v69;
      *((unsigned char *)v76 + 34) = v67;
      *((unsigned char *)v76 + 35) = v68;
      *((unsigned char *)v76 + 36) = v70;
      *((void *)v76 + 5) = KeyPath;
      *((void *)v76 + 6) = v74;
      *((unsigned char *)v76 + 56) = v73;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_268620BC8);
      sub_22EC1CAA8();
      sub_22EC1CD28(&qword_268620C30, &qword_268620BA8, (void (*)(void))sub_22EC1CD94);
      sub_22EE7D800();
      return sub_22EC1C8D4((uint64_t)v30, (void (*)(void))type metadata accessor for ProductViewText.Storage);
    }
    sub_22EC1C8D4((uint64_t)v30, (void (*)(void))type metadata accessor for ProductViewText.Storage);
  }
  int v34 = *(unsigned __int8 *)(a1 + v31[6]);
  uint64_t v35 = 1;
  uint64_t v36 = v97;
  if (v34 != 2)
  {
    int v37 = v84;
    uint64_t v38 = &v84[*(int *)(v81 + 20)];
    uint64_t v39 = *MEMORY[0x263F19860];
    uint64_t v40 = sub_22EE7D5E0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 104))(v38, v39, v40);
    __asm { FMOV            V0.2D, #2.0 }
    *int v37 = _Q0;
    uint64_t v46 = type metadata accessor for PlaceholderLayouts(0);
    uint64_t v47 = 24;
    if (!v34) {
      uint64_t v47 = 20;
    }
    uint64_t v48 = v86;
    sub_22EC1C880(a1 + *(int *)(v46 + v47), v86, (void (*)(void))type metadata accessor for LayoutMetrics);
    uint64_t v49 = sub_22EE7ED70();
    uint64_t v51 = v50;
    uint64_t v52 = (uint64_t)v83;
    uint64_t v53 = (uint64_t)&v83[*(int *)(v82 + 36)];
    sub_22EC1C880(v48, v53, (void (*)(void))type metadata accessor for LayoutMetrics);
    uint64_t v54 = type metadata accessor for LayoutMetricsModifier(0);
    *(unsigned char *)(v53 + *(int *)(v54 + 20)) = 1;
    uint64_t v55 = (uint64_t *)(v53 + *(int *)(v54 + 24));
    *uint64_t v55 = v49;
    v55[1] = v51;
    sub_22EC1C880((uint64_t)v37, v52, MEMORY[0x263F19048]);
    sub_22EC1C8D4(v48, (void (*)(void))type metadata accessor for LayoutMetrics);
    sub_22EC1C8D4((uint64_t)v37, MEMORY[0x263F19048]);
    uint64_t v56 = v85;
    sub_22EADAD08(v52, v85, &qword_268620B88);
    sub_22EADAC74(v52, &qword_268620B88);
    int v57 = v93;
    sub_22EE7DC00();
    unint64_t v58 = sub_22EC1C92C();
    uint64_t v60 = v89;
    uint64_t v59 = v90;
    sub_22EE7E410();
    (*(void (**)(char *, uint64_t))(v94 + 8))(v57, v95);
    sub_22EADAC74(v56, &qword_268620B90);
    if (qword_26861B6B8 != -1) {
      swift_once();
    }
    swift_bridgeObjectRetain();
    *(void *)&long long v102 = v59;
    *((void *)&v102 + 1) = v58;
    swift_getOpaqueTypeConformance2();
    uint64_t v61 = (uint64_t)v88;
    uint64_t v62 = v92;
    sub_22EE7E4C0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v91 + 8))(v60, v62);
    uint64_t v63 = v87;
    sub_22EADAE38(v61, v87, &qword_268620BA0);
    sub_22EADAE38(v63, v36, &qword_268620BA0);
    uint64_t v35 = 0;
  }
  __swift_storeEnumTagSinglePayload(v36, v35, 1, v96);
  sub_22EADAD08(v36, (uint64_t)v99, &qword_268620BA8);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268620BC8);
  sub_22EC1CAA8();
  sub_22EC1CD28(&qword_268620C30, &qword_268620BA8, (void (*)(void))sub_22EC1CD94);
  sub_22EE7D800();
  return sub_22EADAC74(v36, &qword_268620BA8);
}

uint64_t sub_22EC1C244@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = _s11PriceStringOMa(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v47 - v8;
  uint64_t v10 = sub_22EE7C220();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v47 - v15;
  uint64_t v17 = type metadata accessor for ProductViewText.Storage(0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (void *)((char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_22EC1C880(a1, (uint64_t)v19, (void (*)(void))type metadata accessor for ProductViewText.Storage);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      if (qword_26861B690 != -1) {
        swift_once();
      }
      id v21 = (id)qword_26864BFA0;
      uint64_t v22 = sub_22EE7E120();
      uint64_t v24 = v23;
      char v26 = v25 & 1;
      *(void *)&long long v49 = v22;
      *((void *)&v49 + 1) = v23;
      *(void *)&long long v50 = v25 & 1;
      *((void *)&v50 + 1) = v27;
      LOBYTE(v51) = 1;
      sub_22EADDF0C(v22, v23, v25 & 1);
      swift_bridgeObjectRetain();
      sub_22EE7D800();
      long long v49 = v52;
      long long v50 = v53;
      __int16 v51 = v54;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268620C10);
      sub_22EC1CC70();
      sub_22EE7D800();
      sub_22EB051EC(v22, v24, v26);
      goto LABEL_6;
    case 2u:
      (*(void (**)(char *, void *, uint64_t))(v11 + 32))(v16, v19, v10);
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
      uint64_t v33 = sub_22EE7E140();
      uint64_t v35 = v34;
      *(void *)&long long v49 = v33;
      *((void *)&v49 + 1) = v34;
      char v37 = v36 & 1;
      *(void *)&long long v50 = v36 & 1;
      *((void *)&v50 + 1) = v38;
      LOBYTE(v51) = 0;
      sub_22EADDF0C(v33, v34, v36 & 1);
      swift_bridgeObjectRetain();
      sub_22EE7D800();
      long long v49 = v52;
      long long v50 = v53;
      LOBYTE(v51) = v54;
      HIBYTE(v51) = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268620C10);
      sub_22EC1CC70();
      sub_22EE7D800();
      sub_22EB051EC(v33, v35, v37);
      swift_bridgeObjectRelease();
      long long v47 = v53;
      long long v48 = v52;
      unsigned __int8 v31 = v54;
      char v32 = v55;
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, v10);
      goto LABEL_9;
    case 3u:
      sub_22EC1CEC4((uint64_t)v19, (uint64_t)v9, (void (*)(void))_s11PriceStringOMa);
      uint64_t v39 = sub_22EC1C880((uint64_t)v9, (uint64_t)v7, (void (*)(void))_s11PriceStringOMa);
      uint64_t v40 = sub_22ECE508C(v39);
      uint64_t v42 = v41;
      uint64_t v44 = v43;
      uint64_t v46 = v45 & 1;
      sub_22EC1C8D4((uint64_t)v7, (void (*)(void))_s11PriceStringOMa);
      *(void *)&long long v49 = v40;
      *((void *)&v49 + 1) = v42;
      *(void *)&long long v50 = v46;
      *((void *)&v50 + 1) = v44;
      LOBYTE(v51) = 1;
      sub_22EADDF0C(v40, v42, v46);
      swift_bridgeObjectRetain();
      sub_22EE7D800();
      long long v49 = v52;
      long long v50 = v53;
      LOBYTE(v51) = v54;
      HIBYTE(v51) = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268620C10);
      sub_22EC1CC70();
      sub_22EE7D800();
      sub_22EB051EC(v40, v42, v46);
      swift_bridgeObjectRelease();
      long long v47 = v53;
      long long v48 = v52;
      unsigned __int8 v31 = v54;
      char v32 = v55;
      uint64_t result = sub_22EC1C8D4((uint64_t)v9, (void (*)(void))_s11PriceStringOMa);
LABEL_9:
      long long v30 = v47;
      long long v29 = v48;
      break;
    default:
      uint64_t v20 = v19[1];
      *(void *)&long long v49 = *v19;
      *((void *)&v49 + 1) = v20;
      *(void *)&long long v50 = 0;
      *((void *)&v50 + 1) = MEMORY[0x263F8EE78];
      LOBYTE(v51) = 0;
      swift_bridgeObjectRetain();
      sub_22EE7D800();
      long long v49 = v52;
      long long v50 = v53;
      __int16 v51 = v54;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268620C10);
      sub_22EC1CC70();
      sub_22EE7D800();
LABEL_6:
      uint64_t result = swift_bridgeObjectRelease();
      long long v29 = v52;
      long long v30 = v53;
      unsigned __int8 v31 = v54;
      char v32 = v55;
      break;
  }
  *(_OWORD *)a2 = v29;
  *(_OWORD *)(a2 + 16) = v30;
  *(unsigned char *)(a2 + 32) = v31;
  *(unsigned char *)(a2 + 33) = v32;
  return result;
}

uint64_t sub_22EC1C880(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_2_0();
  uint64_t v4 = OUTLINED_FUNCTION_16_0();
  v5(v4);
  return a2;
}

uint64_t sub_22EC1C8D4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_2_0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

unint64_t sub_22EC1C92C()
{
  unint64_t result = qword_268620BB8;
  if (!qword_268620BB8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620B90);
    sub_22EC1C9CC();
    sub_22EADDD7C((unint64_t *)&qword_26861D590, &qword_26861D580);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620BB8);
  }
  return result;
}

unint64_t sub_22EC1C9CC()
{
  unint64_t result = qword_268620BC0;
  if (!qword_268620BC0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620B88);
    sub_22EC1CE74(&qword_26861D2D8, MEMORY[0x263F19048]);
    sub_22EC1CE74(&qword_26861CF98, (void (*)(uint64_t))type metadata accessor for LayoutMetricsModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620BC0);
  }
  return result;
}

unint64_t sub_22EC1CAA8()
{
  unint64_t result = qword_268620BD0;
  if (!qword_268620BD0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620BC8);
    sub_22EC1CB48();
    sub_22EADDD7C(&qword_268620C20, &qword_268620C28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620BD0);
  }
  return result;
}

unint64_t sub_22EC1CB48()
{
  unint64_t result = qword_268620BD8;
  if (!qword_268620BD8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620BE0);
    sub_22EC1CD28(&qword_268620BE8, &qword_268620BF0, (void (*)(void))sub_22EC1CBFC);
    sub_22EC1CCDC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620BD8);
  }
  return result;
}

unint64_t sub_22EC1CBFC()
{
  unint64_t result = qword_268620BF8;
  if (!qword_268620BF8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620C00);
    sub_22EC1CC70();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620BF8);
  }
  return result;
}

unint64_t sub_22EC1CC70()
{
  unint64_t result = qword_268620C08;
  if (!qword_268620C08)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620C10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620C08);
  }
  return result;
}

unint64_t sub_22EC1CCDC()
{
  unint64_t result = qword_268620C18;
  if (!qword_268620C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620C18);
  }
  return result;
}

uint64_t sub_22EC1CD28(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22EC1CD94()
{
  unint64_t result = qword_268620C38;
  if (!qword_268620C38)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620BA0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620B90);
    sub_22EC1C92C();
    swift_getOpaqueTypeConformance2();
    sub_22EC1CE74((unint64_t *)&qword_26861C3C0, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620C38);
  }
  return result;
}

uint64_t sub_22EC1CE74(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22EC1CEC4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_2_0();
  uint64_t v4 = OUTLINED_FUNCTION_17_0();
  v5(v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for ProductViewText.Style(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22EC1CFE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ProductViewText.Style()
{
  return &type metadata for ProductViewText.Style;
}

unint64_t sub_22EC1D020()
{
  unint64_t result = qword_268620C40;
  if (!qword_268620C40)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620C48);
    sub_22EADDD7C(&qword_268620B80, &qword_268620B70);
    sub_22EC1CE74((unint64_t *)&qword_26861C3C0, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620C40);
  }
  return result;
}

unint64_t sub_22EC1D0F4()
{
  unint64_t result = qword_268620C50;
  if (!qword_268620C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620C50);
  }
  return result;
}

uint64_t sub_22EC1D140@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  int v3 = *(ValueMetadata **)(a1 + 16);
  unint64_t v2 = *(void *)(a1 + 24);
  uint64_t KeyPath = MEMORY[0x263F1A830];
  long long v30 = v3;
  uint64_t v31 = MEMORY[0x263F1A820];
  unint64_t v32 = v2;
  uint64_t v4 = sub_22EE7E920();
  OUTLINED_FUNCTION_0_2();
  uint64_t v24 = v5;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v23 - v7;
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v10 = sub_22EC1EE64();
  uint64_t KeyPath = v4;
  long long v30 = &type metadata for AlreadySubscribedLabelStyle;
  uint64_t v31 = WitnessTable;
  unint64_t v32 = v10;
  v23[0] = MEMORY[0x263F1A8C0];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  OUTLINED_FUNCTION_0_2();
  uint64_t v13 = v12;
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)v23 - v18;
  char v26 = v3;
  unint64_t v27 = v2;
  uint64_t v28 = v23[1];
  sub_22EE7E910();
  uint64_t KeyPath = swift_getKeyPath();
  LOBYTE(v30) = 0;
  sub_22EE7E1C0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v4);
  uint64_t KeyPath = v4;
  long long v30 = &type metadata for AlreadySubscribedLabelStyle;
  uint64_t v31 = WitnessTable;
  unint64_t v32 = v10;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_22EB69440(v17, OpaqueTypeMetadata2, OpaqueTypeConformance2);
  id v21 = *(void (**)(char *, uint64_t))(v13 + 8);
  v21(v17, OpaqueTypeMetadata2);
  sub_22EB69440(v19, OpaqueTypeMetadata2, OpaqueTypeConformance2);
  return ((uint64_t (*)(char *, uint64_t))v21)(v19, OpaqueTypeMetadata2);
}

uint64_t sub_22EC1D3EC@<X0>(uint64_t a1@<X8>)
{
  sub_22EE7D5A0();
  if (qword_26861B690 != -1) {
    swift_once();
  }
  id v2 = (id)qword_26864BFA0;
  uint64_t result = sub_22EE7E120();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5 & 1;
  *(void *)(a1 + 24) = v6;
  return result;
}

uint64_t sub_22EC1D4CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22EB69440(v6, v9, v10);
  sub_22EB69440(v8, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, a2);
}

uint64_t sub_22EC1D5AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_22EE7E8B0();
  *a1 = result;
  return result;
}

uint64_t sub_22EC1D5E4()
{
  sub_22EC1D660();
  sub_22EE7D4B0();
  return v1;
}

uint64_t sub_22EC1D620()
{
  return sub_22EE7D4C0();
}

unint64_t sub_22EC1D660()
{
  unint64_t result = qword_268620C58[0];
  if (!qword_268620C58[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_268620C58);
  }
  return result;
}

ValueMetadata *_s32AlreadySubscribedBadgeVariantKeyOMa()
{
  return &_s32AlreadySubscribedBadgeVariantKeyON;
}

unsigned char *_s29AlreadySubscribedBadgeVariantOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22EC1D788);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s29AlreadySubscribedBadgeVariantOMa()
{
  return &_s29AlreadySubscribedBadgeVariantON;
}

uint64_t destroy for AlreadySubscribedBackgroundModifier(uint64_t a1)
{
  return sub_22EB19E28(*(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16));
}

uint64_t assignWithCopy for AlreadySubscribedBackgroundModifier(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 16);
  sub_22EADDF00(v3, v4);
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(unsigned __int8 *)(a1 + 16);
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  sub_22EB19E28(v5, v6);
  return a1;
}

uint64_t assignWithTake for AlreadySubscribedBackgroundModifier(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(unsigned __int8 *)(a1 + 16);
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  sub_22EB19E28(v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for AlreadySubscribedBackgroundModifier()
{
  return &type metadata for AlreadySubscribedBackgroundModifier;
}

ValueMetadata *type metadata accessor for AlreadySubscribedDefaultIcon()
{
  return &type metadata for AlreadySubscribedDefaultIcon;
}

uint64_t sub_22EC1D894(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (!a2) {
    return 0;
  }
  int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return __swift_getEnumTagSinglePayload((uint64_t)a1, v5, v4);
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_22EC1D9E0(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  size_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
  char v9 = 8 * v8;
  BOOL v10 = a3 >= v7;
  int v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      unsigned int v15 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v15))
      {
        int v12 = 4;
      }
      else if (v15 >= 0x100)
      {
        int v12 = 2;
      }
      else
      {
        int v12 = v15 > 1;
      }
    }
    else
    {
      int v12 = 1;
    }
  }
  else
  {
    int v12 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v13 = ~v7 + a2;
    if (v8 < 4)
    {
      int v14 = (v13 >> v9) + 1;
      if (v8)
      {
        int v16 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
      int v14 = 1;
    }
    switch(v12)
    {
      case 1:
        a1[v8] = v14;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v14;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v14;
        return;
      default:
        return;
    }
  }
  switch(v12)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x22EC1DBE4);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v7, v6);
      }
      return;
  }
}

uint64_t type metadata accessor for AlreadySubscribedBadge()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_22EC1DC24()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_22EC1DC44()
{
  unint64_t result = qword_268620CE0;
  if (!qword_268620CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620CE0);
  }
  return result;
}

uint64_t sub_22EC1DC90@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  int v89 = a4;
  uint64_t v90 = a3;
  int v96 = a2;
  uint64_t v94 = a1;
  uint64_t v101 = a5;
  uint64_t v100 = sub_22EE7CFF0() - 8;
  MEMORY[0x270FA5388](v100);
  uint64_t v99 = &v88[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_22EE7CD80();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  char v9 = &v88[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620CF0);
  uint64_t v11 = v10 - 8;
  MEMORY[0x270FA5388](v10);
  unsigned int v13 = &v88[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620CF8);
  uint64_t v15 = v14 - 8;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = &v88[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620D00) - 8;
  MEMORY[0x270FA5388](v92);
  uint64_t v19 = &v88[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620D08) - 8;
  MEMORY[0x270FA5388](v93);
  uint64_t v91 = &v88[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620D10) - 8;
  MEMORY[0x270FA5388](v95);
  uint64_t v22 = &v88[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620D18);
  MEMORY[0x270FA5388](v97);
  uint64_t v98 = &v88[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t KeyPath = swift_getKeyPath();
  sub_22EE7CD60();
  uint64_t v25 = (uint64_t *)&v13[*(int *)(v11 + 44)];
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620D20);
  (*(void (**)(char *, unsigned char *, uint64_t))(v7 + 16))((char *)v25 + *(int *)(v26 + 28), v9, v6);
  uint64_t *v25 = KeyPath;
  uint64_t v27 = (uint64_t)v22;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620D28);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16))(v13, v94, v28);
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
  char v29 = sub_22EE7DE60();
  char v30 = v96;
  if (v96) {
    double v31 = 1.0;
  }
  else {
    double v31 = 0.0;
  }
  sub_22EE7C6E0();
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  sub_22EAEFF0C((uint64_t)v13, (uint64_t)v17, &qword_268620CF0);
  uint64_t v40 = &v17[*(int *)(v15 + 44)];
  *uint64_t v40 = v29;
  *((void *)v40 + 1) = v33;
  *((void *)v40 + 2) = v35;
  *((void *)v40 + 3) = v37;
  *((void *)v40 + 4) = v39;
  v40[40] = 0;
  sub_22EADAC74((uint64_t)v13, &qword_268620CF0);
  char v41 = sub_22EE7DED0();
  sub_22EE7C6E0();
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  sub_22EAEFF0C((uint64_t)v17, (uint64_t)v19, &qword_268620CF8);
  long long v50 = &v19[*(int *)(v92 + 44)];
  unsigned char *v50 = v41;
  *((void *)v50 + 1) = v43;
  *((void *)v50 + 2) = v45;
  *((void *)v50 + 3) = v47;
  *((void *)v50 + 4) = v49;
  v50[40] = 0;
  sub_22EADAC74((uint64_t)v17, &qword_268620CF8);
  char v51 = sub_22EE7DE80();
  sub_22EE7C6E0();
  uint64_t v53 = v52;
  uint64_t v55 = v54;
  uint64_t v57 = v56;
  uint64_t v59 = v58;
  uint64_t v60 = v91;
  sub_22EAEFF0C((uint64_t)v19, (uint64_t)v91, &qword_268620D00);
  uint64_t v61 = &v60[*(int *)(v93 + 44)];
  *uint64_t v61 = v51;
  *((void *)v61 + 1) = v53;
  *((void *)v61 + 2) = v55;
  *((void *)v61 + 3) = v57;
  *((void *)v61 + 4) = v59;
  v61[40] = 0;
  sub_22EADAC74((uint64_t)v19, &qword_268620D00);
  uint64_t v63 = v99;
  uint64_t v64 = &v99[*(int *)(v100 + 28)];
  uint64_t v65 = *MEMORY[0x263F19860];
  uint64_t v66 = sub_22EE7D5E0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v66 - 8) + 104))(v64, v65, v66);
  __asm { FMOV            V0.2D, #4.0 }
  *uint64_t v63 = _Q0;
  char v72 = (float *)(v27 + *(int *)(v95 + 44));
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620D30);
  sub_22EAEDF98((uint64_t)v63, (uint64_t)v72 + *(int *)(v73 + 52));
  float v62 = v31;
  *char v72 = v62;
  *(_WORD *)((char *)v72 + *(int *)(v73 + 56)) = 256;
  sub_22EAEFF0C((uint64_t)v60, v27, &qword_268620D08);
  sub_22EAEDAA8((uint64_t)v63);
  sub_22EADAC74((uint64_t)v60, &qword_268620D08);
  char v74 = sub_22EE7DED0();
  if (v30)
  {
    uint64_t v75 = v89 & 1;
    uint64_t v76 = v90;
    sub_22EADDF00(v90, v89 & 1);
    sub_22EB155AC();
    sub_22EB19E28(v76, v75);
  }
  sub_22EE7C6E0();
  uint64_t v78 = v77;
  uint64_t v80 = v79;
  uint64_t v82 = v81;
  uint64_t v84 = v83;
  uint64_t v85 = v98;
  sub_22EAEFF0C(v27, (uint64_t)v98, &qword_268620D10);
  uint64_t v86 = &v85[*(int *)(v97 + 36)];
  *uint64_t v86 = v74;
  *((void *)v86 + 1) = v78;
  *((void *)v86 + 2) = v80;
  *((void *)v86 + 3) = v82;
  *((void *)v86 + 4) = v84;
  v86[40] = 0;
  sub_22EADAC74(v27, &qword_268620D10);
  return sub_22EAEFC48((uint64_t)v85, v101, &qword_268620D18);
}

uint64_t sub_22EC1E304(uint64_t a1)
{
  uint64_t v2 = sub_22EE7CD80();
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_22EE7D1F0();
}

void sub_22EC1E3CC()
{
  id v0 = objc_msgSend(self, sel_secondarySystemBackgroundColor);

  JUMPOUT(0x230FABA70);
}

void sub_22EC1E410(void *a1@<X8>)
{
  sub_22EC1E3CC();
  *a1 = v2;
}

uint64_t sub_22EC1E438@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22EC1DC90(a1, *v2, *((void *)v2 + 1), v2[16], a2);
}

uint64_t sub_22EC1E448@<X0>(uint64_t a1@<X1>, char a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v36 = a3;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861D138);
  MEMORY[0x270FA5388](v35);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620D80);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (uint64_t)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620D88);
  uint64_t v11 = v10 - 8;
  MEMORY[0x270FA5388](v10);
  unsigned int v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620D90);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620D98);
  uint64_t v33 = *(void *)(v17 - 8);
  uint64_t v34 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v37 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v9 = sub_22EE7D4F0();
  *(void *)(v9 + 8) = 0x4008000000000000;
  *(unsigned char *)(v9 + 16) = 0;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620DA0);
  uint64_t v20 = a2 & 1;
  sub_22EC1E8B4(a1, v20, (char *)(v9 + *(int *)(v19 + 44)));
  int v21 = sub_22EE7DA00();
  sub_22EAEFF0C(v9, (uint64_t)v13, &qword_268620D80);
  *(_DWORD *)&v13[*(int *)(v11 + 44)] = v21;
  sub_22EADAC74(v9, &qword_268620D80);
  sub_22EADDF00(a1, v20);
  sub_22EB18728();
  LOBYTE(v9) = v22;
  sub_22EB19E28(a1, v20);
  if (v9)
  {
    uint64_t v23 = sub_22EE7E020();
    goto LABEL_5;
  }
  if (qword_26861B858 != -1) {
    goto LABEL_8;
  }
  while (1)
  {
    uint64_t v23 = qword_26864C4D0;
    swift_retain();
LABEL_5:
    uint64_t v24 = v37;
    uint64_t KeyPath = swift_getKeyPath();
    sub_22EAEFF0C((uint64_t)v13, (uint64_t)v16, &qword_268620D88);
    uint64_t v26 = (uint64_t *)&v16[*(int *)(v14 + 36)];
    *uint64_t v26 = KeyPath;
    v26[1] = v23;
    sub_22EADAC74((uint64_t)v13, &qword_268620D88);
    sub_22EE7DF50();
    unint64_t v27 = sub_22EC1F324();
    sub_22EE7E1B0();
    sub_22EADAC74((uint64_t)v16, &qword_268620D90);
    uint64_t v28 = *MEMORY[0x263F18CD8];
    uint64_t v29 = sub_22EE7CE90();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 104))(v6, v28, v29);
    sub_22EC1F488();
    uint64_t v16 = (char *)v29;
    if (sub_22EE7F900()) {
      break;
    }
    __break(1u);
LABEL_8:
    swift_once();
  }
  uint64_t v38 = v14;
  unint64_t v39 = v27;
  swift_getOpaqueTypeConformance2();
  sub_22EADDD7C(&qword_26861D1A0, &qword_26861D138);
  uint64_t v30 = v34;
  sub_22EE7E350();
  sub_22EADAC74((uint64_t)v6, &qword_26861D138);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v24, v30);
}

uint64_t sub_22EC1E8B4@<X0>(uint64_t a1@<X1>, int a2@<W2>, char *a3@<X8>)
{
  int v51 = a2;
  uint64_t v50 = a1;
  uint64_t v53 = a3;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620DC0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_22EE7DAD0();
  uint64_t v6 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620DC8);
  uint64_t v10 = v9 - 8;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620DD0);
  uint64_t v13 = MEMORY[0x270FA5388](v47);
  uint64_t v52 = (uint64_t)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v44 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v49 = (uint64_t)&v44 - v18;
  uint64_t v19 = sub_22EE7DAB0();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v48 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v46 = (char *)&v44 - v23;
  sub_22EE7DAC0();
  sub_22EE7DAE0();
  uint64_t v24 = *MEMORY[0x263F1A7B8];
  uint64_t v25 = sub_22EE7E0E0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v5, v24, v25);
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v25);
  uint64_t KeyPath = swift_getKeyPath();
  unint64_t v27 = (uint64_t *)&v12[*(int *)(v10 + 44)];
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620DD8);
  sub_22EAEFF0C((uint64_t)v5, (uint64_t)v27 + *(int *)(v28 + 28), &qword_268620DC0);
  *unint64_t v27 = KeyPath;
  uint64_t v29 = v45;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v12, v8, v45);
  sub_22EADAC74((uint64_t)v5, &qword_268620DC0);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v29);
  uint64_t v30 = v51 & 1;
  uint64_t v31 = v50;
  sub_22EADDF00(v50, v51 & 1);
  sub_22EB18728();
  LOBYTE(v29) = v32;
  sub_22EB19E28(v31, v30);
  if (v29) {
    int v33 = sub_22EE7DA00();
  }
  else {
    int v33 = sub_22EE7DA20();
  }
  int v34 = v33;
  sub_22EAEFF0C((uint64_t)v12, (uint64_t)v17, &qword_268620DC8);
  *(_DWORD *)&v17[*(int *)(v47 + 36)] = v34;
  sub_22EADAC74((uint64_t)v12, &qword_268620DC8);
  uint64_t v35 = v49;
  sub_22EAEFC48((uint64_t)v17, v49, &qword_268620DD0);
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
  uint64_t v37 = v48;
  uint64_t v38 = v46;
  v36(v48, v46, v19);
  uint64_t v39 = v52;
  sub_22EAEFF0C(v35, v52, &qword_268620DD0);
  uint64_t v40 = v53;
  v36(v53, v37, v19);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620DE0);
  sub_22EAEFF0C(v39, (uint64_t)&v40[*(int *)(v41 + 48)], &qword_268620DD0);
  sub_22EADAC74(v35, &qword_268620DD0);
  uint64_t v42 = *(void (**)(char *, uint64_t))(v20 + 8);
  v42(v38, v19);
  sub_22EADAC74(v39, &qword_268620DD0);
  return ((uint64_t (*)(char *, uint64_t))v42)(v37, v19);
}

uint64_t sub_22EC1ED94@<X0>(uint64_t a1@<X8>)
{
  return sub_22EC1E448(*(void *)v1, *(unsigned char *)(v1 + 8), a1);
}

uint64_t sub_22EC1EDA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_22EC1DC44();

  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

uint64_t sub_22EC1EE04()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EC1EE20()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_22EC1EE64()
{
  unint64_t result = qword_268620CE8;
  if (!qword_268620CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620CE8);
  }
  return result;
}

uint64_t sub_22EC1EEB0()
{
  return sub_22EC1D4CC(v0[4], v0[2], v0[3]);
}

uint64_t sub_22EC1EEC4()
{
  return sub_22EE7D1E0();
}

uint64_t destroy for AlreadySubscribedLabelStyle(uint64_t a1)
{
  return sub_22EB19E28(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t *assignWithCopy for AlreadySubscribedLabelStyle(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_22EADDF00(*(void *)a2, v4);
  uint64_t v5 = *a1;
  uint64_t v6 = *((unsigned __int8 *)a1 + 8);
  *a1 = v3;
  *((unsigned char *)a1 + 8) = v4;
  sub_22EB19E28(v5, v6);
  return a1;
}

uint64_t *assignWithTake for AlreadySubscribedLabelStyle(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  uint64_t v5 = *a1;
  uint64_t v6 = *((unsigned __int8 *)a1 + 8);
  *a1 = v3;
  *((unsigned char *)a1 + 8) = v4;
  sub_22EB19E28(v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for AlreadySubscribedLabelStyle()
{
  return &type metadata for AlreadySubscribedLabelStyle;
}

ValueMetadata *type metadata accessor for AlreadySubscribedBackgroundModifier.BackgroundStyle()
{
  return &type metadata for AlreadySubscribedBackgroundModifier.BackgroundStyle;
}

uint64_t sub_22EC1EFB0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EC1F054()
{
  return sub_22EC1F1A4(&qword_268620D38, &qword_268620D18, (void (*)(void))sub_22EC1F090);
}

unint64_t sub_22EC1F090()
{
  unint64_t result = qword_268620D40;
  if (!qword_268620D40)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620D10);
    sub_22EC1F1A4(&qword_268620D48, &qword_268620D08, (void (*)(void))sub_22EC1F154);
    sub_22EADDD7C(&qword_268620D78, &qword_268620D30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620D40);
  }
  return result;
}

uint64_t sub_22EC1F154()
{
  return sub_22EC1F1A4(&qword_268620D50, &qword_268620D00, (void (*)(void))sub_22EC1F17C);
}

uint64_t sub_22EC1F17C()
{
  return sub_22EC1F1A4(&qword_268620D58, &qword_268620CF8, (void (*)(void))sub_22EC1F224);
}

uint64_t sub_22EC1F1A4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22EC1F224()
{
  unint64_t result = qword_268620D60;
  if (!qword_268620D60)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620CF0);
    sub_22EADDD7C(&qword_268620D68, &qword_268620D28);
    sub_22EADDD7C(&qword_268620D70, &qword_268620D20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620D60);
  }
  return result;
}

uint64_t sub_22EC1F2E8()
{
  return MEMORY[0x263F1B558];
}

uint64_t sub_22EC1F2F4()
{
  return MEMORY[0x263F1B420];
}

uint64_t sub_22EC1F300()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_22EC1F324()
{
  unint64_t result = qword_268620DA8;
  if (!qword_268620DA8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620D90);
    sub_22EC1F3C4();
    sub_22EADDD7C(&qword_26861C3E8, &qword_26861C3F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620DA8);
  }
  return result;
}

unint64_t sub_22EC1F3C4()
{
  unint64_t result = qword_268620DB0;
  if (!qword_268620DB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620D88);
    sub_22EADDD7C(&qword_268620DB8, &qword_268620D80);
    sub_22EADDD7C(&qword_268620A90, &qword_268620A98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620DB0);
  }
  return result;
}

unint64_t sub_22EC1F488()
{
  unint64_t result = qword_26861D180;
  if (!qword_26861D180)
  {
    sub_22EE7CE90();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26861D180);
  }
  return result;
}

uint64_t sub_22EC1F4D8()
{
  return sub_22EE7D3F0();
}

uint64_t sub_22EC1F4FC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620DC0);
  MEMORY[0x270FA5388](v2 - 8);
  sub_22EAEFF0C(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_268620DC0);
  return sub_22EE7D400();
}

uint64_t sub_22EC1F594()
{
  return swift_getOpaqueTypeConformance2();
}

Swift::Void __swiftcall RequestReviewAction.callAsFunction()()
{
  uint64_t v1 = type metadata accessor for SKLogger();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  if (*v0)
  {
    uint64_t v5 = self;
    objc_msgSend(v5, sel_requestReviewInScene_, v4);
  }
  else
  {
    if (qword_26861B778 != -1) {
      swift_once();
    }
    uint64_t v6 = __swift_project_value_buffer(v1, (uint64_t)qword_26864C398);
    sub_22EB107F0(v6, (uint64_t)v3);
    os_log_type_t v7 = sub_22EE7FFC0();
    unint64_t v8 = sub_22EE7C550();
    os_log_type_t v9 = v7;
    if (os_log_type_enabled(v8, v7))
    {
      uint64_t v10 = swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v13 = v11;
      *(_DWORD *)uint64_t v10 = 136446466;
      uint64_t v12 = sub_22EC1FA24(0, 0xE000000000000000, &v13);
      sub_22EE800B0();
      *(_WORD *)(v10 + 12) = 2082;
      uint64_t v12 = sub_22EC1FA24(0xD000000000000028, 0x800000022EE83AB0, &v13);
      sub_22EE800B0();
      _os_log_impl(&dword_22EAC6000, v8, v9, "%{public}s%{public}s", (uint8_t *)v10, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x230FAE500](v11, -1, -1);
      MEMORY[0x230FAE500](v10, -1, -1);
    }

    sub_22EB31B10((uint64_t)v3);
  }
}

void *EnvironmentValues.requestReview.getter@<X0>(void *a1@<X8>)
{
  unint64_t result = (void *)sub_22EE7D1C0();
  if (result)
  {
    uint64_t v3 = result;
    id v4 = objc_msgSend(result, sel_scene);

    if (!v4)
    {
LABEL_5:
      unint64_t result = 0;
      goto LABEL_6;
    }
    self;
    unint64_t result = (void *)swift_dynamicCastObjCClass();
    if (!result)
    {

      goto LABEL_5;
    }
  }
LABEL_6:
  *a1 = result;
  return result;
}

uint64_t sub_22EC1F938(uint64_t result, unsigned char **a2)
{
  uint64_t v2 = *a2;
  *uint64_t v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_22EC1F948(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_22EC1F984(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_22EC1F9AC(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_22EC1FA24(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_22EE800B0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_22EC1FA24(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_22EC1FAF8(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_22EC202DC((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_22EC202DC((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_22EC1FAF8(void *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_22EC1FC50((char *)__src, HIBYTE(a6) & 0xF, __dst);
      sub_22EE800C0();
      uint64_t result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    uint64_t result = sub_22EC1FD28(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    uint64_t v8 = sub_22EE80250();
    if (!v8)
    {
      uint64_t result = sub_22EE803A0();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

void *sub_22EC1FC50(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)sub_22EE80420();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

uint64_t sub_22EC1FD28(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_22EC1FDC0(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (uint64_t)sub_22EC1FF34(0, *(void *)(v2 + 16) + 1, 1, v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = (uint64_t)sub_22EC1FF34((char *)(v3 > 1), v4 + 1, 1, v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_22EC1FDC0(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    uint64_t v2 = sub_22EE7FAC0();
    if (v2) {
      goto LABEL_6;
    }
    return MEMORY[0x263F8EE78];
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
LABEL_6:
  unint64_t v3 = sub_22EC6DFAC(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    unint64_t v4 = v3;
    uint64_t v5 = sub_22EE801D0();
    if ((v6 & 1) != 0 || v5 != v2) {
      goto LABEL_14;
    }
    return (uint64_t)v4;
  }
  sub_22EE80420();
  __break(1u);
LABEL_14:
  uint64_t result = sub_22EE803A0();
  __break(1u);
  return result;
}

char *sub_22EC1FF34(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268620DE8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size_0(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_22EC200E4(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_22EC2000C(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_22EC2000C(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)sub_22EE80420();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

char *sub_22EC200E4(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)sub_22EE80420();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

unsigned char **sub_22EC20174(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v4 = *result;
  *unint64_t v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

void **initializeBufferWithCopyOfBuffer for RequestReviewAction(void **a1, void **a2)
{
  uint64_t v3 = *a2;
  *a1 = *a2;
  id v4 = v3;
  return a1;
}

void destroy for RequestReviewAction(id *a1)
{
}

void **assignWithCopy for RequestReviewAction(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  id v4 = *a2;
  *a1 = *a2;
  id v5 = v4;

  return a1;
}

void **assignWithTake for RequestReviewAction(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for RequestReviewAction(uint64_t *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      uint64_t v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RequestReviewAction(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RequestReviewAction()
{
  return &type metadata for RequestReviewAction;
}

uint64_t sub_22EC202DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t destroy for SubscriptionOfferViewNoCodeHeader()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SubscriptionOfferViewNoCodeHeader(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SubscriptionOfferViewNoCodeHeader(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  return a1;
}

void *__swift_memcpy97_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x61uLL);
}

uint64_t assignWithTake for SubscriptionOfferViewNoCodeHeader(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscriptionOfferViewNoCodeHeader(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 97))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SubscriptionOfferViewNoCodeHeader(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 96) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 97) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 97) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionOfferViewNoCodeHeader()
{
  return &type metadata for SubscriptionOfferViewNoCodeHeader;
}

uint64_t sub_22EC20638()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_22EC20654@<X0>(uint64_t a1@<X8>)
{
  if (qword_26861B6D8 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_26864C2B0;
  uint64_t v4 = sub_22EE7D670();
  sub_22EC20728(v1, (uint64_t)v7);
  __src[344] = 0;
  memcpy(&__src[7], v7, 0x14AuLL);
  uint64_t KeyPath = swift_getKeyPath();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t result = memcpy((void *)(a1 + 17), __src, 0x151uLL);
  *(void *)(a1 + 360) = KeyPath;
  *(unsigned char *)(a1 + 368) = 1;
  return result;
}

uint64_t sub_22EC20728@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22EC20CF0(a1 + 48, (uint64_t)v46);
  sub_22EC20CF0((uint64_t)v46, (uint64_t)&v47);
  unint64_t v3 = v48;
  if (v48) {
    unint64_t v4 = v47;
  }
  else {
    unint64_t v4 = 0;
  }
  sub_22EBEF11C((uint64_t)v46);
  sub_22ED8D608(v4, v3, v45, 80.0, 80.0);
  uint64_t v5 = sub_22EE7ED70();
  sub_22EADC004(__src, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0x4054000000000000, 0, v5, v6, v15, v17, SHIDWORD(v17), v19,
    v21,
    v23,
    v26,
    v28,
    v30,
    __src[0],
    __src[1],
    __src[2],
    __src[3],
    __src[4],
    __src[5],
    __src[6],
    __src[7],
    __src[8],
    __src[9],
    __src[10],
    __src[11],
    __src[12],
    __src[13],
    __src[14],
    __src[15],
    __src[16],
    __src[17],
    __src[18],
    __src[19],
    __src[20],
    __src[21],
    __src[22],
    __src[23],
    __src[24],
    __src[25],
    v33,
    __dst[0]);
  sub_22EC20D58((uint64_t)v45);
  if (qword_26861B6E0 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_26864C2B8;
  uint64_t v22 = unk_26864C2C0;
  uint64_t v8 = xmmword_26864C2C8;
  uint64_t v27 = xmmword_26864C2C8;
  uint64_t v29 = qword_26864C2B8;
  uint64_t v31 = *((void *)&xmmword_26864C2C8 + 1);
  char v25 = sub_22EE7DE70();
  LOBYTE(v33) = 0;
  sub_22EC209D0((uint64_t)v37);
  uint64_t v9 = v37[1];
  char v10 = v37[2];
  uint64_t v11 = v37[3];
  uint64_t v16 = v37[0];
  uint64_t v18 = v37[4];
  uint64_t v12 = v37[5];
  char v13 = v37[6];
  uint64_t v20 = v37[7];
  char v24 = v33;
  memcpy(__dst, __src, 0xD0uLL);
  LOWORD(__dst[26]) = 256;
  LOBYTE(__dst[27]) = v25;
  __dst[28] = v7;
  __dst[29] = v22;
  __dst[30] = v8;
  __dst[31] = v31;
  LOBYTE(__dst[32]) = v33;
  memcpy((void *)a2, __dst, 0x101uLL);
  char v36 = v10;
  char v35 = v13;
  *(void *)(a2 + 264) = v16;
  *(void *)(a2 + 272) = v9;
  *(unsigned char *)(a2 + 280) = v10;
  *(void *)(a2 + 288) = v11;
  *(void *)(a2 + 296) = v18;
  *(void *)(a2 + 304) = v12;
  *(unsigned char *)(a2 + 312) = v13;
  *(void *)(a2 + 320) = v20;
  *(_WORD *)(a2 + 328) = 256;
  sub_22EADDE64((uint64_t)__dst);
  sub_22EADDF0C(v16, v9, v10);
  swift_bridgeObjectRetain();
  sub_22EADDF0C(v18, v12, v13);
  swift_bridgeObjectRetain();
  sub_22EB051EC(v16, v9, v10);
  swift_bridgeObjectRelease();
  sub_22EB051EC(v18, v12, v13);
  swift_bridgeObjectRelease();
  memcpy(v37, __src, sizeof(v37));
  __int16 v38 = 256;
  char v39 = v25;
  uint64_t v40 = v29;
  uint64_t v41 = v22;
  uint64_t v42 = v27;
  uint64_t v43 = v31;
  char v44 = v24;
  return sub_22EC20D58((uint64_t)v37);
}

uint64_t sub_22EC209D0@<X0>(uint64_t a1@<X8>)
{
  sub_22EB051A0();
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_22EE7E150();
  uint64_t v3 = v2;
  char v5 = v4 & 1;
  sub_22EE7E040();
  sub_22EE7DF80();
  sub_22EE7DFD0();
  swift_release();
  uint64_t v6 = sub_22EE7E0F0();
  uint64_t v8 = v7;
  char v10 = v9;
  swift_release();
  sub_22EB051EC(v1, v3, v5);
  swift_bridgeObjectRelease();
  sub_22EE7DA20();
  uint64_t v11 = sub_22EE7E0B0();
  uint64_t v32 = v12;
  uint64_t v33 = v11;
  char v14 = v13;
  uint64_t v34 = v15;
  sub_22EB051EC(v6, v8, v10 & 1);
  swift_bridgeObjectRelease();
  uint64_t v16 = qword_26861B690;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v16 != -1) {
    swift_once();
  }
  char v17 = v14 & 1;
  id v18 = (id)qword_26864BFA0;
  uint64_t v19 = sub_22EE7E120();
  uint64_t v21 = v20;
  char v23 = v22 & 1;
  sub_22EE7DF30();
  sub_22EE7DF50();
  sub_22EE7DFD0();
  swift_release();
  uint64_t v24 = sub_22EE7E0F0();
  uint64_t v26 = v25;
  char v28 = v27;
  uint64_t v30 = v29;
  swift_release();
  v28 &= 1u;
  sub_22EB051EC(v19, v21, v23);
  swift_bridgeObjectRelease();
  *(void *)a1 = v33;
  *(void *)(a1 + 8) = v32;
  *(unsigned char *)(a1 + 16) = v17;
  *(void *)(a1 + 24) = v34;
  *(void *)(a1 + 32) = v24;
  *(void *)(a1 + 40) = v26;
  *(unsigned char *)(a1 + 48) = v28;
  *(void *)(a1 + 56) = v30;
  sub_22EADDF0C(v33, v32, v17);
  swift_bridgeObjectRetain();
  sub_22EADDF0C(v24, v26, v28);
  swift_bridgeObjectRetain();
  sub_22EB051EC(v24, v26, v28);
  swift_bridgeObjectRelease();
  sub_22EB051EC(v33, v32, v17);
  return swift_bridgeObjectRelease();
}

void *sub_22EC20CA4@<X0>(uint64_t a1@<X8>)
{
  memcpy(__dst, v1, sizeof(__dst));
  return sub_22EC20654(a1);
}

uint64_t sub_22EC20CF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E610);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22EC20D58(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(unsigned __int8 *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 56);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v7 = *(unsigned __int8 *)(a1 + 72);
  uint64_t v8 = *(void **)(a1 + 80);
  swift_bridgeObjectRelease();
  j_j__swift_release(v2, v3);
  sub_22EB19E28(v4, v5);
  sub_22EB19E28(v6, v7);

  swift_release();
  return a1;
}

unint64_t sub_22EC20DF4()
{
  unint64_t result = qword_268620DF0;
  if (!qword_268620DF0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620DF8);
    sub_22EADDD7C(&qword_268620E00, &qword_268620E08);
    sub_22EADDD7C(&qword_26861D020, &qword_26861D028);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620DF0);
  }
  return result;
}

uint64_t View.onInAppPurchaseStart(perform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22EC20F6C(a1, a2, a3, a4, (uint64_t)&unk_22EE90FF0, (void (*)(uint64_t, uint64_t))sub_22EADACE8, (uint64_t)&type metadata for OnInAppPurchaseStartViewModifier, (uint64_t (*)(uint64_t, uint64_t))sub_22EC2C0E8);
}

uint64_t View.inAppPurchaseOptions(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22EC20F6C(a1, a2, a3, a4, (uint64_t)&unk_22EE91018, (void (*)(uint64_t, uint64_t))sub_22EC2C0E4, (uint64_t)&type metadata for InAppPurchaseOptionsViewModifier, (uint64_t (*)(uint64_t, uint64_t))sub_22EC2C0E8);
}

uint64_t View.onInAppPurchaseCompletion(perform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22EC20F6C(a1, a2, a3, a4, (uint64_t)&unk_22EE91040, (void (*)(uint64_t, uint64_t))sub_22EC2C0E4, (uint64_t)&type metadata for OnInAppPurchaseCompletionViewModifier, (uint64_t (*)(uint64_t, uint64_t))sub_22EC2C0E8);
}

uint64_t sub_22EC20F6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t), uint64_t a7, uint64_t (*a8)(uint64_t, uint64_t))
{
  uint64_t KeyPath = swift_getKeyPath();
  char v17 = 0;
  uint64_t v18 = a1;
  uint64_t v19 = a2;
  a6(a1, a2);
  MEMORY[0x230FAB9D0](&KeyPath, a3, a7, a4);
  swift_release();
  return a8(a1, a2);
}

uint64_t sub_22EC21028@<X0>(void *a1@<X8>)
{
  uint64_t v3 = OUTLINED_FUNCTION_173();
  j__swift_retain(v3, v4);
  OUTLINED_FUNCTION_173();
  sub_22EB18110();
  uint64_t v6 = v5;
  uint64_t v7 = OUTLINED_FUNCTION_173();
  j_j__swift_release(v7, v8);
  if (v6)
  {
    uint64_t v10 = *(void *)(v6 + 16);
    uint64_t v9 = *(void *)(v6 + 24);
    uint64_t v11 = OUTLINED_FUNCTION_24();
    *(void *)(v11 + 16) = v10;
    *(void *)(v11 + 24) = v9;
    swift_retain();
    swift_release();
    char v39 = &unk_268620ED0;
  }
  else
  {
    char v39 = 0;
    uint64_t v11 = 0;
  }
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v13 = *(unsigned __int8 *)(v1 + 24);
  j__swift_retain(v12, v13);
  sub_22EB1813C();
  uint64_t v15 = v14;
  j_j__swift_release(v12, v13);
  if (v15)
  {
    uint64_t v16 = *(void *)(v15 + 16);
    uint64_t v17 = *(void *)(v15 + 24);
    uint64_t v18 = OUTLINED_FUNCTION_24();
    *(void *)(v18 + 16) = v16;
    *(void *)(v18 + 24) = v17;
    swift_retain();
    swift_release();
    __int16 v38 = &unk_268620EC0;
  }
  else
  {
    __int16 v38 = 0;
    uint64_t v18 = 0;
  }
  uint64_t v19 = *(void *)(v1 + 32);
  uint64_t v20 = *(unsigned __int8 *)(v1 + 40);
  j__swift_retain(v19, v20);
  sub_22EB18168();
  char v22 = v21;
  j_j__swift_release(v19, v20);
  if (v22)
  {
    uint64_t v23 = v22[2];
    uint64_t v24 = v22[3];
    uint64_t v25 = OUTLINED_FUNCTION_24();
    *(void *)(v25 + 16) = v23;
    *(void *)(v25 + 24) = v24;
    swift_retain();
    swift_release();
    char v22 = &unk_268620EB0;
  }
  else
  {
    uint64_t v25 = 0;
  }
  uint64_t v26 = OUTLINED_FUNCTION_148();
  sub_22EBAD648(v26, v27, v28);
  OUTLINED_FUNCTION_148();
  sub_22EB18194();
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v33 = OUTLINED_FUNCTION_148();
  sub_22EBAD8D0(v33, v34, v35);
  if (v30)
  {
    uint64_t result = OUTLINED_FUNCTION_24();
    *(void *)(result + 16) = v30;
    *(void *)(result + 24) = v32;
    uint64_t v37 = &unk_268620EA0;
  }
  else
  {
    uint64_t v37 = 0;
    uint64_t result = 0;
  }
  *a1 = v39;
  a1[1] = v11;
  a1[2] = v38;
  a1[3] = v18;
  a1[4] = v22;
  a1[5] = v25;
  a1[6] = v37;
  a1[7] = result;
  return result;
}

uint64_t sub_22EC21244(uint64_t a1, int *a2)
{
  uint64_t v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_22EBD65C0;
  return v5();
}

uint64_t sub_22EC2131C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_22EBD65C0;
  return v6();
}

uint64_t sub_22EC21400(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_22EC214E8;
  return v6(v2 + 16, a1);
}

uint64_t sub_22EC214E8()
{
  OUTLINED_FUNCTION_9_12();
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  OUTLINED_FUNCTION_4_12();
  *uint64_t v3 = v2;
  swift_task_dealloc();
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v2 + 8);
  return v5(v4);
}

uint64_t sub_22EC215E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[5] = a4;
  v6[6] = a6;
  v6[3] = a2;
  v6[4] = a3;
  v6[2] = a1;
  return MEMORY[0x270FA2498](sub_22EC21610, 0, 0);
}

uint64_t sub_22EC21610()
{
  OUTLINED_FUNCTION_28_2();
  uint64_t v1 = v0[6];
  uint64_t v2 = *(int **)(v1 + 16);
  v0[7] = *(void *)(v1 + 24);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v2 + *v2);
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[8] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_22EC216F8;
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[2];
  uint64_t v7 = v0[3];
  return v9(v6, v7, v4, v5);
}

uint64_t sub_22EC216F8()
{
  OUTLINED_FUNCTION_9_12();
  OUTLINED_FUNCTION_1_5();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_12();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_release();
  OUTLINED_FUNCTION_18_5();
  return v3();
}

void *sub_22EC217D4()
{
  return &unk_268620E10;
}

uint64_t sub_22EC217E0@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)sub_22EC217D4();

  return swift_retain();
}

void *sub_22EC2181C()
{
  return &unk_268620E18;
}

uint64_t sub_22EC21828@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)sub_22EC2181C();

  return swift_retain();
}

void *sub_22EC21864()
{
  return &unk_268620E20;
}

uint64_t sub_22EC21870@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)sub_22EC21864();

  return swift_retain();
}

uint64_t sub_22EC218AC()
{
  return sub_22EC2190C((void (*)(void))sub_22EC2BE0C);
}

uint64_t sub_22EC218CC()
{
  return sub_22EC2190C((void (*)(void))sub_22EC2BD74);
}

uint64_t sub_22EC218EC()
{
  return sub_22EC2190C((void (*)(void))sub_22EC2BDC0);
}

uint64_t sub_22EC2190C(void (*a1)(void))
{
  a1();
  sub_22EE7D4B0();
  return v2;
}

uint64_t sub_22EC21954(uint64_t a1, void (*a2)(void))
{
  return sub_22EE7D4C0();
}

uint64_t sub_22EC2199C()
{
  uint64_t v0 = type metadata accessor for SKLogger();
  __swift_allocate_value_buffer(v0, qword_268620E28);
  __swift_project_value_buffer(v0, (uint64_t)qword_268620E28);
  return sub_22EE7C560();
}

uint64_t sub_22EC21A20()
{
  OUTLINED_FUNCTION_28_2();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v4 + *v4);
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = (void *)OUTLINED_FUNCTION_29_3(v5);
  *uint64_t v6 = v7;
  v6[1] = sub_22EBD65C0;
  return v9(v3, v1);
}

uint64_t sub_22EC21AFC()
{
  uint64_t v1 = sub_22EE7F330();
  OUTLINED_FUNCTION_0_0();
  uint64_t v3 = v2;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268620E80);
  uint64_t v7 = sub_22EE7F390();
  OUTLINED_FUNCTION_6_10(v7);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_22EE881C0;
  sub_22EE7F380();
  uint64_t v9 = (unsigned int *)MEMORY[0x263F17E20];
  if (*(void *)(v0 + 16)) {
    uint64_t v9 = (unsigned int *)MEMORY[0x263F17E18];
  }
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, *v9, v1);
  sub_22EE7F340();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v1);
  if (*(void *)(v8 + 16)) {
    return sub_22EC2AC70(v8);
  }
  swift_setDeallocating();
  sub_22EC2A85C(MEMORY[0x263F17E28]);
  return MEMORY[0x263F8EE88];
}

uint64_t sub_22EC21C98()
{
  OUTLINED_FUNCTION_9_12();
  v1[69] = v0;
  v1[68] = v36;
  v1[67] = v2;
  v1[66] = v3;
  v1[65] = v4;
  v1[63] = v5;
  v1[64] = v6;
  v1[61] = v7;
  v1[62] = v8;
  v1[60] = v9;
  sub_22EC2BB54(v36, (uint64_t)(v1 + 9), &qword_26861E610);
  v1[70] = v1[10];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620E60);
  v1[71] = v10;
  OUTLINED_FUNCTION_14(v10);
  v1[72] = OUTLINED_FUNCTION_69_1();
  v1[73] = swift_task_alloc();
  uint64_t v11 = sub_22EE7C570();
  v1[74] = v11;
  OUTLINED_FUNCTION_6_10(v11);
  v1[75] = v12;
  v1[76] = OUTLINED_FUNCTION_25_6();
  uint64_t v13 = sub_22EE7F3A0();
  v1[77] = v13;
  OUTLINED_FUNCTION_6_10(v13);
  v1[78] = v14;
  v1[79] = OUTLINED_FUNCTION_69_1();
  v1[80] = swift_task_alloc();
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620E68);
  OUTLINED_FUNCTION_14(v15);
  v1[81] = OUTLINED_FUNCTION_25_6();
  uint64_t v16 = sub_22EE7F660();
  v1[82] = v16;
  OUTLINED_FUNCTION_6_10(v16);
  v1[83] = v17;
  v1[84] = OUTLINED_FUNCTION_25_6();
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BBA8);
  OUTLINED_FUNCTION_14(v18);
  v1[85] = OUTLINED_FUNCTION_25_6();
  uint64_t v19 = sub_22EE7F540();
  v1[86] = v19;
  OUTLINED_FUNCTION_6_10(v19);
  v1[87] = v20;
  v1[88] = OUTLINED_FUNCTION_25_6();
  uint64_t v21 = sub_22EE7F590();
  v1[89] = v21;
  OUTLINED_FUNCTION_6_10(v21);
  v1[90] = v22;
  v1[91] = OUTLINED_FUNCTION_69_1();
  v1[92] = swift_task_alloc();
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
  OUTLINED_FUNCTION_14(v23);
  v1[93] = OUTLINED_FUNCTION_25_6();
  uint64_t v24 = sub_22EE7F670();
  v1[94] = v24;
  OUTLINED_FUNCTION_6_10(v24);
  v1[95] = v25;
  v1[96] = OUTLINED_FUNCTION_25_6();
  uint64_t v26 = sub_22EE7F390();
  v1[97] = v26;
  OUTLINED_FUNCTION_6_10(v26);
  v1[98] = v27;
  v1[99] = OUTLINED_FUNCTION_69_1();
  v1[100] = swift_task_alloc();
  uint64_t v28 = type metadata accessor for SKLogger();
  v1[101] = v28;
  OUTLINED_FUNCTION_14(v28);
  v1[102] = OUTLINED_FUNCTION_69_1();
  v1[103] = swift_task_alloc();
  v1[104] = swift_task_alloc();
  v1[105] = swift_task_alloc();
  v1[106] = swift_task_alloc();
  v1[107] = swift_task_alloc();
  v1[108] = swift_task_alloc();
  v1[109] = swift_task_alloc();
  v1[110] = swift_task_alloc();
  v1[111] = swift_task_alloc();
  v1[112] = swift_task_alloc();
  v1[113] = swift_task_alloc();
  uint64_t v29 = sub_22EE7F2B0();
  v1[114] = v29;
  OUTLINED_FUNCTION_6_10(v29);
  v1[115] = v30;
  v1[116] = OUTLINED_FUNCTION_25_6();
  OUTLINED_FUNCTION_16_10();
  return MEMORY[0x270FA2498](v31, v32, v33);
}

#error "22EC228C8: call analysis failed (funcsize=1511)"

uint64_t sub_22EC2387C()
{
  OUTLINED_FUNCTION_9_12();
  OUTLINED_FUNCTION_1_5();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_12();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_16_10();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

#error "22EC23A04: call analysis failed (funcsize=1204)"

uint64_t sub_22EC24CC0()
{
  OUTLINED_FUNCTION_9_12();
  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_12_8();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 1016) = v3;
  swift_task_dealloc();
  OUTLINED_FUNCTION_16_10();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

#error "22EC24ED4: call analysis failed (funcsize=1106)"

uint64_t sub_22EC25F88()
{
  OUTLINED_FUNCTION_9_12();
  OUTLINED_FUNCTION_1_5();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_12_8();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_12();
  *uint64_t v6 = v5;
  *(void *)(v3 + 1064) = v0;
  swift_task_dealloc();
  if (v0) {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_16_10();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_22EC2606C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  OUTLINED_FUNCTION_81();
  a35 = v37;
  a36 = v38;
  OUTLINED_FUNCTION_168();
  a34 = v36;
  sub_22EB107F0(*(void *)(v36 + 936), *(void *)(v36 + 864));
  a24 = 0;
  a25 = 0xE000000000000000;
  sub_22EE801C0();
  OUTLINED_FUNCTION_34_5();
  sub_22EE7FAA0();
  sub_22EE7FAA0();
  _s17_StoreKit_SwiftUI012SubscriptionA25ControlStyleConfigurationV12PickerOptionV2idSSvg_0();
  sub_22EE7FAA0();
  swift_bridgeObjectRelease();
  uint64_t v40 = a24;
  unint64_t v39 = a25;
  swift_bridgeObjectRetain();
  os_log_type_t v41 = sub_22EE7FFA0();
  OUTLINED_FUNCTION_104();
  swift_bridgeObjectRetain_n();
  uint64_t v42 = sub_22EE7C550();
  if (os_log_type_enabled(v42, v41))
  {
    OUTLINED_FUNCTION_15_4();
    uint64_t v43 = OUTLINED_FUNCTION_9_18();
    *(_DWORD *)(v36 + 16) = 136446466;
    OUTLINED_FUNCTION_133(v43);
    sub_22EE7FAA0();
    OUTLINED_FUNCTION_13_15();
    *(void *)(v36 + 376) = OUTLINED_FUNCTION_139();
    sub_22EE800B0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_52_2();
    OUTLINED_FUNCTION_159();
    *(void *)(v36 + 384) = sub_22EC1FA24(v40, v39, &a23);
    sub_22EE800B0();
    OUTLINED_FUNCTION_170();
    OUTLINED_FUNCTION_14_16(&dword_22EAC6000, v42, v44, "%{public}s%{public}s");
    OUTLINED_FUNCTION_23_5();
    OUTLINED_FUNCTION_4_5();
    OUTLINED_FUNCTION_4_5();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    OUTLINED_FUNCTION_170();
  }
  uint64_t v45 = *(void *)(v36 + 1040);
  unint64_t v46 = *(void *)(v36 + 800);
  uint64_t v47 = *(void *)(v36 + 760);
  uint64_t v82 = *(void *)(v36 + 752);
  uint64_t v83 = *(void *)(v36 + 768);
  uint64_t v48 = *(void *)(v36 + 672);
  uint64_t v49 = *(void *)(v36 + 664);
  uint64_t v80 = *(void *)(v36 + 656);
  uint64_t v50 = *(void *)(v36 + 648);
  sub_22EB31B10(*(void *)(v36 + 864));
  sub_22EE7F370();
  swift_bridgeObjectRelease();
  uint64_t v51 = *(void *)(v36 + 336);
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  a24 = v51;
  sub_22EC2B004(v46, isUniquelyReferenced_nonNull_native, v50);
  *(void *)(v36 + 336) = a24;
  swift_bridgeObjectRelease();
  sub_22EADACF8(v45);
  sub_22EC2B480(v50, &qword_268620E68);
  (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v80);
  OUTLINED_FUNCTION_35_2();
  v53();
  uint64_t v55 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
  uint64_t v54 = v47 + 8;
  v55(v83, v82);
  sub_22EC2BB54(*(void *)(v36 + 544), v36 + 16, &qword_26861E610);
  unint64_t v56 = *(void *)(v36 + 24);
  if (v56)
  {
    uint64_t v57 = OUTLINED_FUNCTION_77_0();
    uint64_t v81 = v58;
    sub_22EB107F0(v57, v48);
    uint64_t v59 = OUTLINED_FUNCTION_57_3();
    v60(v59);
    swift_bridgeObjectRetain();
    sub_22EBEF11C(v54);
    swift_bridgeObjectRetain();
    sub_22EBEF11C(v54);
    uint64_t v61 = (void *)sub_22EE7C550();
    os_log_type_t v62 = sub_22EE7FFA0();
    if (OUTLINED_FUNCTION_86(v62))
    {
      uint64_t v78 = *(void *)(v36 + 544);
      uint64_t v63 = (_DWORD *)OUTLINED_FUNCTION_15_4();
      uint64_t v79 = OUTLINED_FUNCTION_25_4();
      *uint64_t v63 = 136446466;
      OUTLINED_FUNCTION_133(v79);
      sub_22EE7FAA0();
      OUTLINED_FUNCTION_154();
      *(void *)(v36 + 320) = OUTLINED_FUNCTION_139();
      sub_22EE800B0();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_52_2();
      OUTLINED_FUNCTION_64_2();
      *(void *)(v36 + 328) = sub_22EC1FA24(v81, v56, &a23);
      sub_22EE800B0();
      sub_22EC2AFD8(v78);
      sub_22EC2AFD8(v78);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_61_3(&dword_22EAC6000, v64, v65, "%{public}s Performing purchase for %{public}s");
      OUTLINED_FUNCTION_44_3();
      OUTLINED_FUNCTION_4_5();
      OUTLINED_FUNCTION_4_5();

      OUTLINED_FUNCTION_5_2();
      v66();
    }
    else
    {
      uint64_t v68 = *(void *)(v36 + 544);
      OUTLINED_FUNCTION_52_2();
      sub_22EC2AFD8(v68);
      sub_22EC2AFD8(v68);

      uint64_t v69 = OUTLINED_FUNCTION_95();
      v70(v69);
    }
    uint64_t v71 = *(void *)(v36 + 336);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268620E80);
    uint64_t v72 = OUTLINED_FUNCTION_55_1();
    *(_OWORD *)(v72 + 16) = xmmword_22EE8A1B0;
    sub_22EE7F360();
    uint64_t v67 = sub_22EC285EC(v72, v71);
    *(void *)(v36 + 336) = v67;
  }
  else
  {
    uint64_t v67 = *(void *)(v36 + 336);
  }
  *(void *)(v36 + 1072) = v67;
  swift_bridgeObjectRetain();
  uint64_t v73 = swift_task_alloc();
  char v74 = (void *)OUTLINED_FUNCTION_137(v73);
  *char v74 = v75;
  v74[1] = sub_22EC26634;
  OUTLINED_FUNCTION_93();
  OUTLINED_FUNCTION_7_19();
  return PurchaseAction.callAsFunction(_:options:)();
}

uint64_t sub_22EC26634()
{
  OUTLINED_FUNCTION_9_12();
  OUTLINED_FUNCTION_1_5();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_12_8();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_4_12();
  *uint64_t v6 = v5;
  *(void *)(v3 + 1088) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_bridgeObjectRelease_n();
  }
  OUTLINED_FUNCTION_16_10();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_22EC2671C()
{
  uint64_t v26 = v0;
  uint64_t v2 = v0[120];
  OUTLINED_FUNCTION_48_3();
  v3();
  if (!OUTLINED_FUNCTION_17_13())
  {
    uint64_t v2 = v0[80];
    uint64_t v4 = v0[78];
    uint64_t v5 = v0[77];
    uint64_t v6 = v0[67] + *(int *)(v0[120] + 32);
    sub_22EC2B480(v6, &qword_268620E78);
    uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    char v1 = v4 + 16;
    v7(v6, v2, v5);
    __swift_storeEnumTagSinglePayload(v6, 0, 1, v5);
  }
  uint64_t v8 = v0[69];
  uint64_t v9 = *(int **)(v8 + 16);
  v0[137] = v9;
  v0[138] = *(void *)(v8 + 24);
  if (v9)
  {
    if (!OUTLINED_FUNCTION_124()) {
      *(unsigned char *)(v2 + 3) = v1;
    }
    uint64_t v10 = v0[104];
    sub_22EB107F0(v0[117], (uint64_t)v10);
    swift_retain();
    sub_22EE7FFA0();
    OUTLINED_FUNCTION_28_5();
    uint64_t v11 = sub_22EE7C550();
    if (OUTLINED_FUNCTION_15_6(v11))
    {
      uint64_t v12 = (_DWORD *)OUTLINED_FUNCTION_15_4();
      v25[0] = OUTLINED_FUNCTION_25_4();
      *uint64_t v12 = 136446466;
      v25[1] = 91;
      v25[2] = 0xE100000000000000;
      sub_22EE7FAA0();
      OUTLINED_FUNCTION_13_15();
      v0[38] = OUTLINED_FUNCTION_139();
      sub_22EE800B0();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_140();
      OUTLINED_FUNCTION_89();
      v0[39] = sub_22EC1FA24(0xD00000000000002ELL, 0x800000022EE83D30, v25);
      sub_22EE800B0();
      OUTLINED_FUNCTION_112(&dword_22EAC6000, v10, v13, "%{public}s%{public}s");
      OUTLINED_FUNCTION_44_3();
      OUTLINED_FUNCTION_4_5();
      OUTLINED_FUNCTION_4_5();

      swift_bridgeObjectRelease();
    }
    else
    {
      OUTLINED_FUNCTION_73_1();
    }
    uint64_t v17 = v0[80];
    uint64_t v18 = v0[78];
    uint64_t v19 = v0[77];
    uint64_t v20 = v0[73];
    sub_22EB31B10(v0[104]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v20, v17, v19);
    swift_storeEnumTagMultiPayload();
    uint64_t v24 = (uint64_t (*)(uint64_t, uint64_t))((char *)v9 + *v9);
    uint64_t v21 = (void *)swift_task_alloc();
    v0[139] = v21;
    *uint64_t v21 = v0;
    v21[1] = sub_22EC26C1C;
    uint64_t v22 = v0[73];
    uint64_t v23 = v0[60];
    return v24(v23, v22);
  }
  else
  {
    OUTLINED_FUNCTION_37_3();
    v14();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_18_5();
    return v15();
  }
}

uint64_t sub_22EC26C1C()
{
  OUTLINED_FUNCTION_9_12();
  OUTLINED_FUNCTION_1_5();
  uint64_t v2 = *(void *)(v1 + 584);
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_4_12();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  sub_22EC2B480(v2, &qword_268620E60);
  OUTLINED_FUNCTION_16_10();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

uint64_t sub_22EC26D08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  OUTLINED_FUNCTION_56_2();
  OUTLINED_FUNCTION_151();
  uint64_t v31 = v30[80];
  uint64_t v32 = v30[78];
  uint64_t v33 = v30[77];
  sub_22EADACF8(v30[137]);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
  OUTLINED_FUNCTION_0_14();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_18_5();
  OUTLINED_FUNCTION_59_1();
  return v35(v34, v35, v36, v37, v38, v39, v40, v41, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_22EC26E6C()
{
  OUTLINED_FUNCTION_9_12();
  OUTLINED_FUNCTION_1_5();
  uint64_t v2 = *(void *)(v1 + 576);
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_4_12();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  sub_22EC2B480(v2, &qword_268620E60);
  swift_task_dealloc();
  OUTLINED_FUNCTION_16_10();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

uint64_t sub_22EC26F74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  OUTLINED_FUNCTION_56_2();
  OUTLINED_FUNCTION_151();
  sub_22EADACF8(*(void *)(v30 + 1128));
  __swift_destroy_boxed_opaque_existential_1(v30 + 128);

  OUTLINED_FUNCTION_0_14();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_18_5();
  OUTLINED_FUNCTION_59_1();
  return v32(v31, v32, v33, v34, v35, v36, v37, v38, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_22EC270C8()
{
  OUTLINED_FUNCTION_28_2();
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 520);
  swift_release();
  v1(v0 + 128);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_16_10();
  return MEMORY[0x270FA2498](v2, v3, v4);
}

uint64_t sub_22EC27150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  OUTLINED_FUNCTION_56_2();
  OUTLINED_FUNCTION_151();
  __swift_destroy_boxed_opaque_existential_1(v30 + 128);

  OUTLINED_FUNCTION_0_14();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_18_5();
  OUTLINED_FUNCTION_59_1();
  return v32(v31, v32, v33, v34, v35, v36, v37, v38, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_22EC27294()
{
  OUTLINED_FUNCTION_9_12();
  OUTLINED_FUNCTION_1_5();
  uint64_t v2 = *(void *)(v1 + 584);
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_4_12();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  sub_22EC2B480(v2, &qword_268620E60);
  OUTLINED_FUNCTION_16_10();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

uint64_t sub_22EC27380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  OUTLINED_FUNCTION_56_2();
  OUTLINED_FUNCTION_151();

  uint64_t v31 = OUTLINED_FUNCTION_162();
  sub_22EADACF8(v31);
  OUTLINED_FUNCTION_0_14();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_18_5();
  OUTLINED_FUNCTION_59_1();
  return v33(v32, v33, v34, v35, v36, v37, v38, v39, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_22EC274CC()
{
  OUTLINED_FUNCTION_28_2();
  uint64_t v1 = (void (*)(uint64_t *))v0[65];
  swift_release();
  v0[29] = sub_22EE7F020();
  v0[30] = sub_22EC2B4D8(&qword_268620E70, MEMORY[0x263F17D58]);
  __swift_allocate_boxed_opaque_existential_1(v0 + 26);
  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_107();
  v2();
  v1(v0 + 26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 26));
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_16_10();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_22EC275D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  OUTLINED_FUNCTION_56_2();
  OUTLINED_FUNCTION_151();

  OUTLINED_FUNCTION_0_14();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_18_5();
  OUTLINED_FUNCTION_59_1();
  return v32(v31, v32, v33, v34, v35, v36, v37, v38, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_22EC27710()
{
  uint64_t v1 = (id *)(v0 + 280);
  uint64_t v2 = *(void *)(v0 + 696);
  sub_22EADACF8(*(void *)(v0 + 1040));
  uint64_t v3 = v2 + 8;
  OUTLINED_FUNCTION_5_15();
  v4();
  OUTLINED_FUNCTION_60_1();
  v5();
  uint64_t v6 = *(void **)(v0 + 1064);
  *(void *)(v0 + 1120) = v6;
  *(void *)(v0 + 280) = v6;
  id v7 = v6;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268623C60);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861EC78);
  int v8 = swift_dynamicCast();
  uint64_t v9 = *(NSObject **)(v0 + 960);
  uint64_t v10 = *(void *)(v0 + 536);
  if (v8)
  {
    uint64_t v11 = (void *)(v0 + 128);

    sub_22EAE6550((long long *)(v0 + 168), v0 + 128);
    if (!OUTLINED_FUNCTION_141())
    {
      uint64_t v9 = *(NSObject **)(v0 + 160);
      uint64_t v1 = (id *)__swift_project_boxed_opaque_existential_1((void *)(v0 + 128), *(void *)(v0 + 152));
      OUTLINED_FUNCTION_0_0();
      OUTLINED_FUNCTION_25_6();
      OUTLINED_FUNCTION_24_7();
      v12();
      if (OUTLINED_FUNCTION_62_3())
      {
        uint64_t v13 = OUTLINED_FUNCTION_19_9();
      }
      else
      {
        uint64_t v34 = OUTLINED_FUNCTION_43_2();
        uint64_t v13 = OUTLINED_FUNCTION_18_12(v34, v35);
      }
      v14(v13);
      OUTLINED_FUNCTION_38_3();
      swift_task_dealloc();
    }
    OUTLINED_FUNCTION_37_5();
    if (v1)
    {
      OUTLINED_FUNCTION_66_2();
      swift_bridgeObjectRelease();
      if (!OUTLINED_FUNCTION_22_8((uint64_t)v9)) {
        OUTLINED_FUNCTION_155();
      }
      OUTLINED_FUNCTION_63_2();
      sub_22EE7FFA0();
      OUTLINED_FUNCTION_28_5();
      uint64_t v36 = sub_22EE7C550();
      if (OUTLINED_FUNCTION_57(v36))
      {
        OUTLINED_FUNCTION_15_4();
        OUTLINED_FUNCTION_9_18();
        OUTLINED_FUNCTION_72_1(4.8752e-34);
        uint64_t v37 = OUTLINED_FUNCTION_13_15();
        uint64_t v45 = OUTLINED_FUNCTION_98(v37, v38, v39, v40, v41, v42, v43, v44, v65, v68, v0 + 296, v0 + 288, v0 + 128, v3, v83, v84, v85);
        OUTLINED_FUNCTION_131(v45);
        OUTLINED_FUNCTION_52_2();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_32_3();
        uint64_t v46 = OUTLINED_FUNCTION_40_3((uint64_t)"Notifying client of failed in-app purchase", v67, v70, v72, v75, v78, v82);
        OUTLINED_FUNCTION_39_3(v46);
        OUTLINED_FUNCTION_14_16(&dword_22EAC6000, v9, v47, "%{public}s%{public}s");
        OUTLINED_FUNCTION_23_5();
        uint64_t v11 = v79;
        OUTLINED_FUNCTION_4_5();
        OUTLINED_FUNCTION_4_5();
        swift_bridgeObjectRelease();
      }
      else
      {

        OUTLINED_FUNCTION_83();
      }
      sub_22EB31B10(*(void *)(v0 + 824));
      __swift_project_boxed_opaque_existential_1(v11, *(void *)(v0 + 152));
      OUTLINED_FUNCTION_0_0();
      uint64_t v52 = OUTLINED_FUNCTION_25_6();
      uint64_t v53 = OUTLINED_FUNCTION_16_14(v52);
      v54(v53);
      if (OUTLINED_FUNCTION_41_4())
      {
        uint64_t v55 = OUTLINED_FUNCTION_20_10();
      }
      else
      {
        uint64_t v57 = OUTLINED_FUNCTION_45_2();
        uint64_t v55 = OUTLINED_FUNCTION_21_10(v57, v58);
      }
      v56(v55);
      OUTLINED_FUNCTION_67_0();
      OUTLINED_FUNCTION_4_18();
      uint64_t v59 = swift_task_alloc();
      uint64_t v60 = (void *)OUTLINED_FUNCTION_166(v59);
      *uint64_t v60 = v61;
      v60[1] = sub_22EC26E6C;
      OUTLINED_FUNCTION_50_2();
      goto LABEL_31;
    }
    swift_bridgeObjectRelease();
    sub_22EE7FD30();
    *(void *)(v0 + 1160) = OUTLINED_FUNCTION_76_1();
    OUTLINED_FUNCTION_13_12();
    OUTLINED_FUNCTION_17_9();
  }
  else
  {

    if (!OUTLINED_FUNCTION_141())
    {
      OUTLINED_FUNCTION_115();
    }
    uint64_t v15 = *(void *)(v0 + 552);
    uint64_t v16 = *(void *)(v15 + 16);
    *(void *)(v0 + 1168) = v16;
    *(void *)(v0 + 1176) = *(void *)(v15 + 24);
    if (v16)
    {
      OUTLINED_FUNCTION_177();
      swift_bridgeObjectRelease();
      if (!OUTLINED_FUNCTION_22_8(v10)) {
        *(unsigned char *)(*(void *)(v0 + 536) + 3) = 1;
      }
      OUTLINED_FUNCTION_158();
      os_log_type_t v17 = sub_22EE7FFA0();
      OUTLINED_FUNCTION_28_5();
      uint64_t v18 = sub_22EE7C550();
      if (os_log_type_enabled(v18, v17))
      {
        uint64_t v80 = *(void *)(v0 + 944);
        OUTLINED_FUNCTION_15_4();
        uint64_t v76 = OUTLINED_FUNCTION_25_4();
        OUTLINED_FUNCTION_49_3(4.8752e-34);
        uint64_t v19 = OUTLINED_FUNCTION_13_15();
        uint64_t v27 = OUTLINED_FUNCTION_98(v19, v20, v21, v22, v23, v24, v25, v26, v65, v68, v0 + 264, v73, v76, v80, v83, v84, v85);
        OUTLINED_FUNCTION_174(v27);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_128();
        *(void *)(v0 + 272) = OUTLINED_FUNCTION_40_3((uint64_t)"Notifying client of failed in-app purchase", v66, v69, v71, v74, v77, v81);
        sub_22EE800B0();
        OUTLINED_FUNCTION_147(&dword_22EAC6000, v18, v28, "%{public}s%{public}s");
        OUTLINED_FUNCTION_44_3();
        OUTLINED_FUNCTION_4_5();
        OUTLINED_FUNCTION_4_5();
        swift_bridgeObjectRelease();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      uint64_t v29 = *(void **)(v0 + 584);
      sub_22EB31B10(*(void *)(v0 + 816));
      *uint64_t v29 = v6;
      swift_storeEnumTagMultiPayload();
      id v30 = v6;
      uint64_t v31 = swift_task_alloc();
      uint64_t v32 = (void *)OUTLINED_FUNCTION_165(v31);
      *uint64_t v32 = v33;
      v32[1] = sub_22EC27294;
      OUTLINED_FUNCTION_36_5();
LABEL_31:
      OUTLINED_FUNCTION_80_0();
      __asm { BRAA            X2, X16 }
    }
    swift_bridgeObjectRelease();
    sub_22EE7FD30();
    *(void *)(v0 + 1192) = OUTLINED_FUNCTION_76_1();
    OUTLINED_FUNCTION_13_12();
    OUTLINED_FUNCTION_17_9();
  }
  OUTLINED_FUNCTION_10_11();
  OUTLINED_FUNCTION_80_0();
  return MEMORY[0x270FA2498](v48, v49, v50);
}

uint64_t sub_22EC27D10()
{
  uint64_t v2 = (v0 + 280);
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void **)(v0 + 1088);
  *(void *)(v0 + 1120) = v3;
  *(void *)(v0 + 280) = v3;
  id v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268623C60);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861EC78);
  int v5 = swift_dynamicCast();
  uint64_t v6 = *(void **)(v0 + 960);
  uint64_t v7 = *(void *)(v0 + 536);
  if (v5)
  {
    int v8 = (void *)(v0 + 128);

    sub_22EAE6550((long long *)(v0 + 168), v0 + 128);
    if (!__swift_getEnumTagSinglePayload(v7, 1, (uint64_t)v6))
    {
      uint64_t v2 = *(NSObject **)(v0 + 160);
      uint64_t v6 = __swift_project_boxed_opaque_existential_1((void *)(v0 + 128), *(void *)(v0 + 152));
      OUTLINED_FUNCTION_0_0();
      OUTLINED_FUNCTION_25_6();
      OUTLINED_FUNCTION_24_7();
      v9();
      if (OUTLINED_FUNCTION_62_3())
      {
        uint64_t v10 = OUTLINED_FUNCTION_19_9();
      }
      else
      {
        uint64_t v29 = OUTLINED_FUNCTION_43_2();
        uint64_t v10 = OUTLINED_FUNCTION_18_12(v29, v30);
      }
      v11(v10);
      OUTLINED_FUNCTION_38_3();
      swift_task_dealloc();
    }
    OUTLINED_FUNCTION_37_5();
    if (v6)
    {
      OUTLINED_FUNCTION_66_2();
      swift_bridgeObjectRelease();
      if (!OUTLINED_FUNCTION_22_8((uint64_t)v2)) {
        OUTLINED_FUNCTION_155();
      }
      OUTLINED_FUNCTION_63_2();
      sub_22EE7FFA0();
      OUTLINED_FUNCTION_28_5();
      uint64_t v31 = sub_22EE7C550();
      if (OUTLINED_FUNCTION_57(v31))
      {
        OUTLINED_FUNCTION_15_4();
        OUTLINED_FUNCTION_9_18();
        OUTLINED_FUNCTION_72_1(4.8752e-34);
        uint64_t v32 = OUTLINED_FUNCTION_13_15();
        uint64_t v40 = OUTLINED_FUNCTION_98(v32, v33, v34, v35, v36, v37, v38, v39, v60, v63, v0 + 296, v0 + 288, v0 + 128, v1, v78, v79, v80);
        OUTLINED_FUNCTION_131(v40);
        OUTLINED_FUNCTION_52_2();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_32_3();
        uint64_t v41 = OUTLINED_FUNCTION_40_3((uint64_t)"Notifying client of failed in-app purchase", v62, v65, v67, v70, v73, v77);
        OUTLINED_FUNCTION_39_3(v41);
        OUTLINED_FUNCTION_14_16(&dword_22EAC6000, v2, v42, "%{public}s%{public}s");
        OUTLINED_FUNCTION_23_5();
        int v8 = v74;
        OUTLINED_FUNCTION_4_5();
        OUTLINED_FUNCTION_4_5();
        swift_bridgeObjectRelease();
      }
      else
      {

        OUTLINED_FUNCTION_83();
      }
      sub_22EB31B10(*(void *)(v0 + 824));
      __swift_project_boxed_opaque_existential_1(v8, *(void *)(v0 + 152));
      OUTLINED_FUNCTION_0_0();
      uint64_t v47 = OUTLINED_FUNCTION_25_6();
      uint64_t v48 = OUTLINED_FUNCTION_16_14(v47);
      v49(v48);
      if (OUTLINED_FUNCTION_41_4())
      {
        uint64_t v50 = OUTLINED_FUNCTION_20_10();
      }
      else
      {
        uint64_t v52 = OUTLINED_FUNCTION_45_2();
        uint64_t v50 = OUTLINED_FUNCTION_21_10(v52, v53);
      }
      v51(v50);
      OUTLINED_FUNCTION_67_0();
      OUTLINED_FUNCTION_4_18();
      uint64_t v54 = swift_task_alloc();
      uint64_t v55 = (void *)OUTLINED_FUNCTION_166(v54);
      *uint64_t v55 = v56;
      v55[1] = sub_22EC26E6C;
      OUTLINED_FUNCTION_50_2();
      goto LABEL_31;
    }
    swift_bridgeObjectRelease();
    sub_22EE7FD30();
    *(void *)(v0 + 1160) = OUTLINED_FUNCTION_76_1();
    OUTLINED_FUNCTION_13_12();
    OUTLINED_FUNCTION_17_9();
  }
  else
  {

    if (!__swift_getEnumTagSinglePayload(v7, 1, (uint64_t)v6))
    {
      OUTLINED_FUNCTION_115();
    }
    OUTLINED_FUNCTION_68_0();
    if (v6)
    {
      OUTLINED_FUNCTION_177();
      swift_bridgeObjectRelease();
      if (!OUTLINED_FUNCTION_22_8(v7)) {
        *(unsigned char *)(*(void *)(v0 + 536) + 3) = 1;
      }
      OUTLINED_FUNCTION_158();
      os_log_type_t v12 = sub_22EE7FFA0();
      OUTLINED_FUNCTION_28_5();
      uint64_t v13 = sub_22EE7C550();
      if (os_log_type_enabled(v13, v12))
      {
        uint64_t v75 = *(void *)(v0 + 944);
        OUTLINED_FUNCTION_15_4();
        uint64_t v71 = OUTLINED_FUNCTION_25_4();
        OUTLINED_FUNCTION_49_3(4.8752e-34);
        uint64_t v14 = OUTLINED_FUNCTION_13_15();
        uint64_t v22 = OUTLINED_FUNCTION_98(v14, v15, v16, v17, v18, v19, v20, v21, v60, v63, v0 + 264, v68, v71, v75, v78, v79, v80);
        OUTLINED_FUNCTION_174(v22);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_128();
        *(void *)(v0 + 272) = OUTLINED_FUNCTION_40_3((uint64_t)"Notifying client of failed in-app purchase", v61, v64, v66, v69, v72, v76);
        sub_22EE800B0();
        OUTLINED_FUNCTION_147(&dword_22EAC6000, v13, v23, "%{public}s%{public}s");
        OUTLINED_FUNCTION_44_3();
        OUTLINED_FUNCTION_4_5();
        OUTLINED_FUNCTION_4_5();
        swift_bridgeObjectRelease();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      uint64_t v24 = *(void **)(v0 + 584);
      sub_22EB31B10(*(void *)(v0 + 816));
      void *v24 = v3;
      swift_storeEnumTagMultiPayload();
      id v25 = v3;
      OUTLINED_FUNCTION_4_18();
      uint64_t v26 = swift_task_alloc();
      uint64_t v27 = (void *)OUTLINED_FUNCTION_165(v26);
      *uint64_t v27 = v28;
      v27[1] = sub_22EC27294;
      OUTLINED_FUNCTION_36_5();
LABEL_31:
      OUTLINED_FUNCTION_80_0();
      __asm { BRAA            X2, X16 }
    }
    swift_bridgeObjectRelease();
    sub_22EE7FD30();
    *(void *)(v0 + 1192) = OUTLINED_FUNCTION_76_1();
    OUTLINED_FUNCTION_13_12();
    OUTLINED_FUNCTION_17_9();
  }
  OUTLINED_FUNCTION_10_11();
  OUTLINED_FUNCTION_80_0();
  return MEMORY[0x270FA2498](v43, v44, v45);
}

uint64_t sub_22EC282BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22EE7F390();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  int v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v27 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620E68);
  uint64_t result = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v15 = 0;
  uint64_t v31 = a1;
  uint64_t v32 = a2;
  uint64_t v18 = *(void *)(a1 + 56);
  uint64_t v17 = a1 + 56;
  uint64_t v16 = v18;
  uint64_t v19 = 1 << *(unsigned char *)(v17 - 24);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v16;
  uint64_t v28 = v17;
  int64_t v29 = (unint64_t)(v19 + 63) >> 6;
  uint64_t v30 = v5 + 16;
  if ((v20 & v16) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v22 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  for (unint64_t i = v22 | (v15 << 6); ; unint64_t i = __clz(__rbit64(v25)) + (v15 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v14, *(void *)(v31 + 48) + *(void *)(v5 + 72) * i, v4);
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v4);
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v4) == 1) {
      goto LABEL_25;
    }
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v14, v4);
    sub_22EB46824();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    if (v21) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v24 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v29) {
      goto LABEL_24;
    }
    unint64_t v25 = *(void *)(v28 + 8 * v24);
    ++v15;
    if (!v25)
    {
      int64_t v15 = v24 + 1;
      if (v24 + 1 >= v29) {
        goto LABEL_24;
      }
      unint64_t v25 = *(void *)(v28 + 8 * v15);
      if (!v25)
      {
        int64_t v15 = v24 + 2;
        if (v24 + 2 >= v29) {
          goto LABEL_24;
        }
        unint64_t v25 = *(void *)(v28 + 8 * v15);
        if (!v25)
        {
          int64_t v15 = v24 + 3;
          if (v24 + 3 >= v29) {
            goto LABEL_24;
          }
          unint64_t v25 = *(void *)(v28 + 8 * v15);
          if (!v25) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v21 = (v25 - 1) & v25;
  }
  int64_t v26 = v24 + 4;
  if (v26 >= v29)
  {
LABEL_24:
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 1, 1, v4);
LABEL_25:
    swift_release();
    return v32;
  }
  unint64_t v25 = *(void *)(v28 + 8 * v26);
  if (v25)
  {
    int64_t v15 = v26;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v15 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v15 >= v29) {
      goto LABEL_24;
    }
    unint64_t v25 = *(void *)(v28 + 8 * v15);
    ++v26;
    if (v25) {
      goto LABEL_20;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_22EC285EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22EE7F390();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  int v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v21 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620E68);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = a2;
  uint64_t v21 = a1;
  uint64_t v14 = *(void *)(a1 + 16);
  if (v14)
  {
    uint64_t v15 = v5 + 16;
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v17 = v21 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v22 = *(void *)(v15 + 56);
    uint64_t v23 = v16;
    uint64_t v18 = (void (**)(char *, char *, uint64_t))(v15 + 16);
    uint64_t v19 = (void (**)(char *, uint64_t))(v15 - 8);
    while (1)
    {
      v23(v13, v17, v4);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v4);
      if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v4) == 1) {
        break;
      }
      (*v18)(v8, v13, v4);
      sub_22EB46824();
      (*v19)(v10, v4);
      v17 += v22;
      if (!--v14) {
        goto LABEL_5;
      }
    }
  }
  else
  {
LABEL_5:
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 1, 1, v4);
  }
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_22EC28814@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620ED8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = swift_getKeyPath();
  if (a4)
  {
    sub_22EADACE8(a4);
    uint64_t v16 = a3 & 1;
    j__swift_retain(a2, v16);
    sub_22EB18110();
    uint64_t v18 = v17;
    j_j__swift_release(a2, v16);
    if (v18)
    {
      uint64_t v34 = a5;
      uint64_t v19 = v12;
      uint64_t v20 = KeyPath;
      uint64_t v21 = a1;
      uint64_t v22 = a6;
      uint64_t v23 = *(void *)(v18 + 16);
      uint64_t v24 = *(void *)(v18 + 24);
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = v23;
      *(void *)(v25 + 24) = v24;
      a6 = v22;
      a1 = v21;
      uint64_t KeyPath = v20;
      uint64_t v12 = v19;
      swift_retain();
      swift_release();
      int64_t v26 = (void *)swift_allocObject();
      uint64_t v27 = v34;
      v26[2] = a4;
      v26[3] = v27;
      v26[4] = &unk_268620EF8;
      v26[5] = v25;
      uint64_t v28 = &unk_268620F08;
    }
    else
    {
      int64_t v26 = (void *)swift_allocObject();
      v26[2] = a4;
      v26[3] = a5;
      uint64_t v28 = &unk_26861CB20;
    }
    int64_t v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268620EF0);
    a4 = swift_allocObject();
    *(void *)(a4 + 16) = v29;
    *(void *)(a4 + 24) = v26;
  }
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620EE0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v14, a1, v30);
  uint64_t v31 = (uint64_t *)&v14[*(int *)(v12 + 36)];
  *uint64_t v31 = KeyPath;
  v31[1] = a4;
  return sub_22EC2BB54((uint64_t)v14, a6, &qword_268620ED8);
}

uint64_t sub_22EC28A5C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_22EC218AC();
  *a1 = result;
  return result;
}

uint64_t sub_22EC28A88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_22EC218AC();
  *a1 = result;
  return result;
}

uint64_t sub_22EC28AB4()
{
  uint64_t v0 = swift_retain();
  return sub_22EC21954(v0, (void (*)(void))sub_22EC2BE0C);
}

uint64_t sub_22EC28B00(uint64_t a1, uint64_t a2, int *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a2;
  v6[5] = sub_22EE7FD30();
  v6[6] = sub_22EE7FD20();
  uint64_t v11 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  uint64_t v9 = (void *)swift_task_alloc();
  v6[7] = v9;
  *uint64_t v9 = v6;
  v9[1] = sub_22EC28C08;
  return v11(a2);
}

uint64_t sub_22EC28C08()
{
  OUTLINED_FUNCTION_13_4();
  OUTLINED_FUNCTION_25_7();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_4_12();
  *uint64_t v4 = v3;
  uint64_t v5 = *(int **)(v1 + 24);
  uint64_t v6 = *v0;
  *uint64_t v4 = *v0;
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(uint64_t))((char *)v5 + *v5);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 64) = v7;
  *uint64_t v7 = v6;
  v7[1] = sub_22EC28D84;
  uint64_t v8 = *(void *)(v1 + 16);
  return v10(v8);
}

uint64_t sub_22EC28D84()
{
  OUTLINED_FUNCTION_9_12();
  OUTLINED_FUNCTION_1_5();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_12();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_22EE7FD00();
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_10_11();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_22EC28E88()
{
  OUTLINED_FUNCTION_9_12();
  swift_release();
  OUTLINED_FUNCTION_18_5();
  return v0();
}

uint64_t sub_22EC28EE0()
{
  OUTLINED_FUNCTION_28_2();
  uint64_t v1 = v0;
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v2 + *v2);
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_29_3(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_22EBD65C0;
  return v7(v1);
}

uint64_t sub_22EC28FB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22EC2A7F0(a1, a2, a3, (uint64_t (*)(uint64_t, void, void, void, void))sub_22EC28814);
}

uint64_t sub_22EC28FC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620F48);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = swift_getKeyPath();
  if (a4)
  {
    sub_22EADACE8(a4);
    uint64_t v16 = a3 & 1;
    j__swift_retain(a2, v16);
    sub_22EB1813C();
    uint64_t v18 = v17;
    j_j__swift_release(a2, v16);
    if (v18)
    {
      uint64_t v34 = a5;
      uint64_t v19 = v12;
      uint64_t v20 = KeyPath;
      uint64_t v21 = a1;
      uint64_t v22 = a6;
      uint64_t v23 = *(void *)(v18 + 16);
      uint64_t v24 = *(void *)(v18 + 24);
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = v23;
      *(void *)(v25 + 24) = v24;
      a6 = v22;
      a1 = v21;
      uint64_t KeyPath = v20;
      uint64_t v12 = v19;
      swift_retain();
      swift_release();
      int64_t v26 = (void *)swift_allocObject();
      uint64_t v27 = v34;
      v26[2] = a4;
      v26[3] = v27;
      v26[4] = &unk_268620F68;
      v26[5] = v25;
      uint64_t v28 = &unk_268620F78;
    }
    else
    {
      int64_t v26 = (void *)swift_allocObject();
      v26[2] = a4;
      v26[3] = a5;
      uint64_t v28 = &unk_26861CB10;
    }
    int64_t v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268620F60);
    a4 = swift_allocObject();
    *(void *)(a4 + 16) = v29;
    *(void *)(a4 + 24) = v26;
  }
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620F50);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v14, a1, v30);
  uint64_t v31 = (uint64_t *)&v14[*(int *)(v12 + 36)];
  *uint64_t v31 = KeyPath;
  v31[1] = a4;
  return sub_22EC2BB54((uint64_t)v14, a6, &qword_268620F48);
}

uint64_t sub_22EC29210@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_22EC218CC();
  *a1 = result;
  return result;
}

uint64_t sub_22EC2923C()
{
  uint64_t v0 = swift_retain();
  return sub_22EC21954(v0, (void (*)(void))sub_22EC2BD74);
}

uint64_t sub_22EC29284(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a2;
  v7[3] = a3;
  v7[6] = sub_22EE7FD30();
  v7[7] = sub_22EE7FD20();
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))((char *)a4 + *a4);
  uint64_t v11 = (void *)swift_task_alloc();
  v7[8] = v11;
  *uint64_t v11 = v7;
  v11[1] = sub_22EC29398;
  return v13(a2, a3);
}

uint64_t sub_22EC29398()
{
  OUTLINED_FUNCTION_13_4();
  OUTLINED_FUNCTION_25_7();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_4_12();
  *uint64_t v4 = v3;
  uint64_t v5 = (int *)v1[4];
  uint64_t v6 = *v0;
  *uint64_t v4 = *v0;
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))((char *)v5 + *v5);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 72) = v7;
  *uint64_t v7 = v6;
  v7[1] = sub_22EC29528;
  uint64_t v8 = v1[3];
  uint64_t v9 = v1[2];
  return v11(v9, v8);
}

uint64_t sub_22EC29528()
{
  OUTLINED_FUNCTION_9_12();
  OUTLINED_FUNCTION_1_5();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_12();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_22EE7FD00();
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_10_11();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_22EC2962C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22EC2A7F0(a1, a2, a3, (uint64_t (*)(uint64_t, void, void, void, void))sub_22EC28FC8);
}

uint64_t sub_22EC29644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620F10);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = swift_getKeyPath();
  if (a4)
  {
    sub_22EADACE8(a4);
    uint64_t v16 = a3 & 1;
    j__swift_retain(a2, v16);
    sub_22EB18168();
    uint64_t v18 = v17;
    j_j__swift_release(a2, v16);
    if (v18)
    {
      uint64_t v34 = a5;
      uint64_t v19 = v12;
      uint64_t v20 = KeyPath;
      uint64_t v21 = a1;
      uint64_t v22 = a6;
      uint64_t v23 = *(void *)(v18 + 16);
      uint64_t v24 = *(void *)(v18 + 24);
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = v23;
      *(void *)(v25 + 24) = v24;
      a6 = v22;
      a1 = v21;
      uint64_t KeyPath = v20;
      uint64_t v12 = v19;
      swift_retain();
      swift_release();
      int64_t v26 = (void *)swift_allocObject();
      uint64_t v27 = v34;
      v26[2] = a4;
      v26[3] = v27;
      v26[4] = &unk_268620F30;
      v26[5] = v25;
      uint64_t v28 = &unk_268620F40;
    }
    else
    {
      int64_t v26 = (void *)swift_allocObject();
      v26[2] = a4;
      v26[3] = a5;
      uint64_t v28 = &unk_26861CB18;
    }
    int64_t v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268620F28);
    a4 = swift_allocObject();
    *(void *)(a4 + 16) = v29;
    *(void *)(a4 + 24) = v26;
  }
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620F18);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v14, a1, v30);
  uint64_t v31 = (uint64_t *)&v14[*(int *)(v12 + 36)];
  *uint64_t v31 = KeyPath;
  v31[1] = a4;
  return sub_22EC2BB54((uint64_t)v14, a6, &qword_268620F10);
}

uint64_t sub_22EC2988C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_22EC218EC();
  *a1 = result;
  return result;
}

uint64_t sub_22EC298B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_22EC218EC();
  *a1 = result;
  return result;
}

uint64_t sub_22EC298E4()
{
  uint64_t v0 = swift_retain();
  return sub_22EC21954(v0, (void (*)(void))sub_22EC2BDC0);
}

uint64_t sub_22EC29930@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_22EC218CC();
  *a1 = result;
  return result;
}

uint64_t sub_22EC29960(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyx010_StoreKit_aB0020OnInAppPurchaseStartC8Modifier33_A7B1F9D9E056EAFD1DCAF2E48FAF0C5CLLVGAaBHPxAaBHD1__AhA0cM0HPyHCHCTm(a1, (uint64_t)&type metadata for OnInAppPurchaseStartViewModifier, (void (*)(void))sub_22EC29980);
}

unint64_t sub_22EC29980()
{
  unint64_t result = qword_268620E40;
  if (!qword_268620E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620E40);
  }
  return result;
}

uint64_t sub_22EC299CC(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyx010_StoreKit_aB0020OnInAppPurchaseStartC8Modifier33_A7B1F9D9E056EAFD1DCAF2E48FAF0C5CLLVGAaBHPxAaBHD1__AhA0cM0HPyHCHCTm(a1, (uint64_t)&type metadata for InAppPurchaseOptionsViewModifier, (void (*)(void))sub_22EC299EC);
}

unint64_t sub_22EC299EC()
{
  unint64_t result = qword_268620E48;
  if (!qword_268620E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620E48);
  }
  return result;
}

uint64_t sub_22EC29A38(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyx010_StoreKit_aB0020OnInAppPurchaseStartC8Modifier33_A7B1F9D9E056EAFD1DCAF2E48FAF0C5CLLVGAaBHPxAaBHD1__AhA0cM0HPyHCHCTm(a1, (uint64_t)&type metadata for OnInAppPurchaseCompletionViewModifier, (void (*)(void))sub_22EC29AC8);
}

uint64_t get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyx010_StoreKit_aB0020OnInAppPurchaseStartC8Modifier33_A7B1F9D9E056EAFD1DCAF2E48FAF0C5CLLVGAaBHPxAaBHD1__AhA0cM0HPyHCHCTm(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  return swift_getWitnessTable();
}

unint64_t sub_22EC29AC8()
{
  unint64_t result = qword_268620E50;
  if (!qword_268620E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_268620E50);
  }
  return result;
}

uint64_t destroy for EnvironmentPurchaseActions(uint64_t a1)
{
  j_j__swift_release(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
  j_j__swift_release(*(void *)(a1 + 16), *(unsigned __int8 *)(a1 + 24));
  j_j__swift_release(*(void *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  char v4 = *(unsigned char *)(a1 + 64);

  return sub_22EBAD8D0(v2, v3, v4);
}

uint64_t initializeWithCopy for EnvironmentPurchaseActions(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *a2;
  unsigned __int8 v5 = *((unsigned char *)a2 + 8);
  j__swift_retain(*a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  uint64_t v6 = v2[2];
  unsigned __int8 v7 = *((unsigned char *)v2 + 24);
  j__swift_retain(v6, v7);
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  uint64_t v8 = v2[4];
  unsigned __int8 v9 = *((unsigned char *)v2 + 40);
  j__swift_retain(v8, v9);
  *(void *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 40) = v9;
  uint64_t v10 = v2[6];
  uint64_t v11 = v2[7];
  LOBYTE(v2) = *((unsigned char *)v2 + 64);
  sub_22EBAD648(v10, v11, (char)v2);
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = (_BYTE)v2;
  return a1;
}

uint64_t *assignWithCopy for EnvironmentPurchaseActions(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *a2;
  unsigned __int8 v5 = *((unsigned char *)a2 + 8);
  j__swift_retain(*a2, v5);
  uint64_t v6 = *a1;
  uint64_t v7 = *((unsigned __int8 *)a1 + 8);
  *a1 = v4;
  *((unsigned char *)a1 + 8) = v5;
  j_j__swift_release(v6, v7);
  uint64_t v8 = v2[2];
  unsigned __int8 v9 = *((unsigned char *)v2 + 24);
  j__swift_retain(v8, v9);
  uint64_t v10 = a1[2];
  uint64_t v11 = *((unsigned __int8 *)a1 + 24);
  a1[2] = v8;
  *((unsigned char *)a1 + 24) = v9;
  j_j__swift_release(v10, v11);
  uint64_t v12 = v2[4];
  unsigned __int8 v13 = *((unsigned char *)v2 + 40);
  j__swift_retain(v12, v13);
  uint64_t v14 = a1[4];
  uint64_t v15 = *((unsigned __int8 *)a1 + 40);
  a1[4] = v12;
  *((unsigned char *)a1 + 40) = v13;
  j_j__swift_release(v14, v15);
  uint64_t v16 = v2[6];
  uint64_t v17 = v2[7];
  LOBYTE(v2) = *((unsigned char *)v2 + 64);
  sub_22EBAD648(v16, v17, (char)v2);
  uint64_t v18 = a1[6];
  uint64_t v19 = a1[7];
  char v20 = *((unsigned char *)a1 + 64);
  a1[6] = v16;
  a1[7] = v17;
  *((unsigned char *)a1 + 64) = (_BYTE)v2;
  sub_22EBAD8D0(v18, v19, v20);
  return a1;
}

void *__swift_memcpy65_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x41uLL);
}

uint64_t *assignWithTake for EnvironmentPurchaseActions(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  uint64_t v6 = *a1;
  uint64_t v7 = *((unsigned __int8 *)a1 + 8);
  *a1 = v4;
  *((unsigned char *)a1 + 8) = v5;
  j_j__swift_release(v6, v7);
  char v8 = *((unsigned char *)a2 + 24);
  uint64_t v9 = a1[2];
  uint64_t v10 = *((unsigned __int8 *)a1 + 24);
  a1[2] = a2[2];
  *((unsigned char *)a1 + 24) = v8;
  j_j__swift_release(v9, v10);
  char v11 = *((unsigned char *)a2 + 40);
  uint64_t v12 = a1[4];
  uint64_t v13 = *((unsigned __int8 *)a1 + 40);
  a1[4] = a2[4];
  *((unsigned char *)a1 + 40) = v11;
  j_j__swift_release(v12, v13);
  char v14 = *((unsigned char *)a2 + 64);
  uint64_t v15 = a1[6];
  uint64_t v16 = a1[7];
  char v17 = *((unsigned char *)a1 + 64);
  *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
  *((unsigned char *)a1 + 64) = v14;
  sub_22EBAD8D0(v15, v16, v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for EnvironmentPurchaseActions(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 65))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EnvironmentPurchaseActions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 65) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EnvironmentPurchaseActions()
{
  return &type metadata for EnvironmentPurchaseActions;
}

uint64_t destroy for OnInAppPurchaseCompletionViewModifier(uint64_t a1, uint64_t a2)
{
  return sub_22EC29F10(a1, a2, j_j__swift_release);
}

uint64_t initializeWithCopy for OnInAppPurchaseCompletionViewModifier(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_22EC29F68(a1, a2, a3, (void (*)(void, void))j_j__swift_retain);
}

uint64_t *assignWithCopy for OnInAppPurchaseCompletionViewModifier(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_22EC29FE0(a1, a2, a3, (uint64_t)j_j__swift_retain, (void (*)(uint64_t, uint64_t))j_j__swift_release);
}

uint64_t *assignWithTake for OnInAppPurchaseCompletionViewModifier(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_22EC2A094(a1, a2, a3, (void (*)(uint64_t, uint64_t))j_j__swift_release);
}

ValueMetadata *type metadata accessor for OnInAppPurchaseCompletionViewModifier()
{
  return &type metadata for OnInAppPurchaseCompletionViewModifier;
}

uint64_t initializeWithCopy for InAppPurchaseOptionsViewModifier(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_22EC29F68(a1, a2, a3, (void (*)(void, void))j__swift_retain);
}

uint64_t *assignWithCopy for InAppPurchaseOptionsViewModifier(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_22EC29FE0(a1, a2, a3, (uint64_t)j__swift_retain, (void (*)(uint64_t, uint64_t))j_j__swift_release);
}

ValueMetadata *type metadata accessor for InAppPurchaseOptionsViewModifier()
{
  return &type metadata for InAppPurchaseOptionsViewModifier;
}

uint64_t sub_22EC29F10(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void))
{
  uint64_t result = a3(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
  if (*(void *)(a1 + 16))
  {
    return swift_release();
  }
  return result;
}

uint64_t sub_22EC29F68(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(void, void))
{
  uint64_t v6 = *a2;
  unsigned __int8 v7 = *((unsigned char *)a2 + 8);
  a4(*a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = a2[2];
  if (v8)
  {
    uint64_t v9 = a2[3];
    *(void *)(a1 + 16) = v8;
    *(void *)(a1 + 24) = v9;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  }
  return a1;
}

uint64_t *sub_22EC29FE0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  uint64_t v8 = *(_OWORD **)a2;
  char v9 = *(unsigned char *)(a2 + 8);
  uint64_t v10 = OUTLINED_FUNCTION_173();
  v11(v10);
  uint64_t v12 = *a1;
  uint64_t v13 = *((unsigned __int8 *)a1 + 8);
  *a1 = (uint64_t)v8;
  *((unsigned char *)a1 + 8) = v9;
  a5(v12, v13);
  OUTLINED_FUNCTION_153();
  if (!v15)
  {
    if (v14)
    {
      uint64_t v17 = *(void *)(a2 + 24);
      a1[2] = v14;
      a1[3] = v17;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a5 = *v8;
    return a1;
  }
  if (!v14)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v16 = *(void *)(a2 + 24);
  a1[2] = v14;
  a1[3] = v16;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t *sub_22EC2A094(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v8 = *a2;
  char v9 = *((unsigned char *)a2 + 8);
  uint64_t v10 = *a1;
  uint64_t v11 = *((unsigned __int8 *)a1 + 8);
  *a1 = v8;
  *((unsigned char *)a1 + 8) = v9;
  a4(v10, v11);
  OUTLINED_FUNCTION_153();
  if (!v13)
  {
    if (v12)
    {
      uint64_t v15 = a2[3];
      a1[2] = v12;
      a1[3] = v15;
      return a1;
    }
LABEL_7:
    *uint64_t v4 = *v5;
    return a1;
  }
  if (!v12)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v14 = a2[3];
  a1[2] = v12;
  a1[3] = v14;
  swift_release();
  return a1;
}

uint64_t _s17_StoreKit_SwiftUI37OnInAppPurchaseCompletionViewModifierVwet_0(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s17_StoreKit_SwiftUI37OnInAppPurchaseCompletionViewModifierVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OnInAppPurchaseStartViewModifier()
{
  return &type metadata for OnInAppPurchaseStartViewModifier;
}

uint64_t sub_22EC2A1DC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EC2A1F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EC2A214(uint64_t a1, uint64_t a2, int *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a5;
  v6[5] = a6;
  v6[2] = a1;
  v6[3] = a2;
  v6[6] = sub_22EE7FD30();
  v6[7] = sub_22EE7FD20();
  uint64_t v11 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  char v9 = (void *)swift_task_alloc();
  v6[8] = v9;
  *char v9 = v6;
  v9[1] = sub_22EC2A31C;
  return v11(a2);
}

uint64_t sub_22EC2A31C()
{
  OUTLINED_FUNCTION_13_4();
  OUTLINED_FUNCTION_25_7();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_4_12();
  *uint64_t v4 = v3;
  char v5 = *(int **)(v1 + 32);
  uint64_t v6 = *v0;
  OUTLINED_FUNCTION_12_8();
  *unsigned __int8 v7 = v6;
  *(void *)(v3 + 72) = v8;
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(uint64_t))((char *)v5 + *v5);
  char v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 80) = v9;
  *char v9 = v6;
  v9[1] = sub_22EC2A4A0;
  uint64_t v10 = *(void *)(v1 + 24);
  return v12(v10);
}

uint64_t sub_22EC2A4A0()
{
  OUTLINED_FUNCTION_9_12();
  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_12_8();
  *uint64_t v2 = v1;
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_4_12();
  *uint64_t v4 = v3;
  *(void *)(v6 + 88) = v5;
  swift_task_dealloc();
  sub_22EE7FD00();
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_10_11();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_22EC2A5A8()
{
  OUTLINED_FUNCTION_28_2();
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[9];
  uint64_t v3 = (uint64_t *)v0[2];
  swift_release();
  *uint64_t v3 = sub_22EC282BC(v1, v2);
  OUTLINED_FUNCTION_18_5();
  return v4();
}

uint64_t sub_22EC2A624()
{
  OUTLINED_FUNCTION_28_2();
  uint64_t v2 = v1;
  *(void *)(v0 + 16) = v3;
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_22EC2A6FC;
  return v7(v2);
}

uint64_t sub_22EC2A6FC()
{
  OUTLINED_FUNCTION_9_12();
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_1_5();
  uint64_t v4 = *(void **)(v3 + 16);
  uint64_t v5 = *v0;
  OUTLINED_FUNCTION_4_12();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  *uint64_t v4 = v2;
  OUTLINED_FUNCTION_18_5();
  return v7();
}

uint64_t sub_22EC2A7D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22EC2A7F0(a1, a2, a3, (uint64_t (*)(uint64_t, void, void, void, void))sub_22EC29644);
}

uint64_t sub_22EC2A7F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, void, void, void, void))
{
  return a4(a1, *(void *)v4, *(unsigned __int8 *)(v4 + 8), *(void *)(v4 + 16), *(void *)(v4 + 24));
}

uint64_t sub_22EC2A810()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EC2A82C()
{
  return sub_22EC2A85C(MEMORY[0x263F17E28]);
}

uint64_t sub_22EC2A844()
{
  return sub_22EC2A85C(MEMORY[0x263F17F80]);
}

uint64_t sub_22EC2A85C(void (*a1)(void))
{
  a1(0);
  swift_arrayDestroy();
  uint64_t v1 = OUTLINED_FUNCTION_138();

  return MEMORY[0x270FA0228](v1, v2, v3);
}

uint64_t sub_22EC2A8D8(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26861DAB8);
    uint64_t v2 = sub_22EE801B0();
    uint64_t v3 = v2;
    uint64_t v25 = *(void *)(v1 + 16);
    if (v25)
    {
      unint64_t v4 = 0;
      uint64_t v5 = v2 + 56;
      uint64_t v23 = v1;
      uint64_t v24 = v1 + 32;
      do
      {
        if (v4 >= *(void *)(v1 + 16))
        {
          __break(1u);
LABEL_30:
          __break(1u);
          JUMPOUT(0x22EC2AC34);
        }
        int v6 = *(unsigned __int8 *)(v24 + v4++);
        sub_22EE807B0();
        sub_22EE7FA60();
        swift_bridgeObjectRelease();
        uint64_t v7 = sub_22EE807F0();
        uint64_t v8 = ~(-1 << *(unsigned char *)(v3 + 32));
        unint64_t v9 = v7 & v8;
        unint64_t v10 = (v7 & (unint64_t)v8) >> 6;
        uint64_t v11 = *(void *)(v5 + 8 * v10);
        uint64_t v12 = 1 << (v7 & v8);
        if ((v12 & v11) != 0)
        {
          while (1)
          {
            unint64_t v13 = 0xE700000000000000;
            uint64_t v14 = 0x746E6572727563;
            switch(*(unsigned char *)(*(void *)(v3 + 48) + v9))
            {
              case 1:
                uint64_t v14 = 0x646172676E776F64;
                unint64_t v13 = 0xE900000000000065;
                break;
              case 2:
                uint64_t v14 = 0x61726773736F7263;
                unint64_t v13 = 0xEA00000000006564;
                break;
              case 3:
                uint64_t v14 = 0x65646172677075;
                break;
              case 4:
                unint64_t v13 = 0xE300000000000000;
                uint64_t v14 = 7105633;
                break;
              default:
                break;
            }
            unint64_t v15 = 0xE700000000000000;
            uint64_t v16 = 0x746E6572727563;
            switch(v6)
            {
              case 1:
                uint64_t v16 = 0x646172676E776F64;
                unint64_t v15 = 0xE900000000000065;
                break;
              case 2:
                uint64_t v16 = 0x61726773736F7263;
                unint64_t v15 = 0xEA00000000006564;
                break;
              case 3:
                uint64_t v16 = 0x65646172677075;
                break;
              case 4:
                unint64_t v15 = 0xE300000000000000;
                uint64_t v16 = 7105633;
                break;
              default:
                break;
            }
            if (v14 == v16 && v13 == v15) {
              break;
            }
            char v18 = sub_22EE80660();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v18) {
              goto LABEL_25;
            }
            unint64_t v9 = (v9 + 1) & v8;
            unint64_t v10 = v9 >> 6;
            uint64_t v11 = *(void *)(v5 + 8 * (v9 >> 6));
            uint64_t v12 = 1 << v9;
            if ((v11 & (1 << v9)) == 0) {
              goto LABEL_22;
            }
          }
          swift_bridgeObjectRelease_n();
        }
        else
        {
LABEL_22:
          *(void *)(v5 + 8 * v10) = v12 | v11;
          *(unsigned char *)(*(void *)(v3 + 48) + v9) = v6;
          uint64_t v19 = *(void *)(v3 + 16);
          BOOL v20 = __OFADD__(v19, 1);
          uint64_t v21 = v19 + 1;
          if (v20) {
            goto LABEL_30;
          }
          *(void *)(v3 + 16) = v21;
        }
LABEL_25:
        uint64_t v1 = v23;
      }
      while (v4 != v25);
    }
  }
  else
  {
    uint64_t v3 = MEMORY[0x263F8EE88];
  }
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_22EC2AC70(uint64_t a1)
{
  uint64_t v2 = sub_22EE7F390();
  OUTLINED_FUNCTION_0_0();
  uint64_t v32 = v3;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v36 = (char *)&v27 - v8;
  if (!*(void *)(a1 + 16))
  {
    uint64_t v10 = MEMORY[0x263F8EE88];
    goto LABEL_16;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861DA30);
  uint64_t result = sub_22EE801B0();
  uint64_t v10 = result;
  uint64_t v31 = *(void *)(a1 + 16);
  if (!v31)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return v10;
  }
  unint64_t v11 = 0;
  uint64_t v30 = a1 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
  uint64_t v34 = v32 + 16;
  uint64_t v35 = result + 56;
  uint64_t v12 = (void (**)(char *, uint64_t))(v32 + 8);
  uint64_t v28 = a1;
  int64_t v29 = (uint64_t (**)(uint64_t, char *, uint64_t))(v32 + 32);
  while (v11 < *(void *)(a1 + 16))
  {
    uint64_t v13 = *(void *)(v32 + 72);
    uint64_t v14 = *(void (**)(void))(v32 + 16);
    OUTLINED_FUNCTION_10_4();
    v14();
    sub_22EC2B4D8(&qword_26861DA38, MEMORY[0x263F17E28]);
    uint64_t v15 = sub_22EE7F820() & ~(-1 << *(unsigned char *)(v10 + 32));
    OUTLINED_FUNCTION_125();
    if ((v18 & v17) != 0)
    {
      unint64_t v33 = v11;
      uint64_t v20 = ~v19;
      while (1)
      {
        OUTLINED_FUNCTION_10_4();
        v14();
        sub_22EC2B4D8(&qword_26861DA40, MEMORY[0x263F17E28]);
        char v21 = sub_22EE7F900();
        uint64_t v22 = *v12;
        (*v12)(v7, v2);
        if (v21) {
          break;
        }
        uint64_t v15 = (v15 + 1) & v20;
        OUTLINED_FUNCTION_125();
        if ((v17 & v18) == 0)
        {
          a1 = v28;
          unint64_t v11 = v33;
          goto LABEL_10;
        }
      }
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v22)(v36, v2);
      a1 = v28;
      unint64_t v11 = v33;
    }
    else
    {
LABEL_10:
      uint64_t v23 = v36;
      *(void *)(v35 + 8 * v16) = v18 | v17;
      uint64_t result = (*v29)(*(void *)(v10 + 48) + v15 * v13, v23, v2);
      uint64_t v24 = *(void *)(v10 + 16);
      BOOL v25 = __OFADD__(v24, 1);
      uint64_t v26 = v24 + 1;
      if (v25) {
        goto LABEL_18;
      }
      *(void *)(v10 + 16) = v26;
    }
    if (++v11 == v31) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_22EC2AF70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22EC2AFD8(uint64_t a1)
{
  return a1;
}

uint64_t sub_22EC2B004@<X0>(unint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  LODWORD(v50) = a2;
  uint64_t v47 = a3;
  uint64_t v5 = sub_22EE7F390();
  uint64_t v6 = *(void **)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = v3;
  uint64_t v9 = *v3;
  uint64_t v10 = sub_22EC2B4D8(&qword_26861DA38, MEMORY[0x263F17E28]);
  unint64_t v53 = a1;
  uint64_t v46 = v10;
  uint64_t v11 = sub_22EE7F820();
  uint64_t v12 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v52 = v9;
  uint64_t v14 = v9 + 56;
  uint64_t v15 = *(void *)(v14 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13;
  uint64_t v48 = v6;
  if (v15)
  {
    uint64_t v51 = ~v12;
    uint64_t v18 = (void (*)(char *, unint64_t, uint64_t))v6[2];
    uint64_t v16 = v6 + 2;
    uint64_t v17 = v18;
    uint64_t v19 = v16[7];
    do
    {
      v17(v8, *(void *)(v52 + 48) + v19 * v13, v5);
      sub_22EC2B4D8(&qword_26861DA40, MEMORY[0x263F17E28]);
      char v20 = sub_22EE7F900();
      ((void (*)(char *, uint64_t))*(v16 - 1))(v8, v5);
      if (v20) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v51;
    }
    while (((*(void *)(v14 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  else
  {
    char v20 = 0;
  }
  char v21 = v49;
  uint64_t v22 = *(void *)(*v49 + 16);
  BOOL v23 = (v20 & 1) == 0;
  uint64_t v24 = v22 + v23;
  if (__OFADD__(v22, v23))
  {
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v25 = *(void *)(*v49 + 24);
  uint64_t v26 = v48;
  if (v25 >= v24 && (v50 & 1) != 0)
  {
    if (v20)
    {
LABEL_11:
      unint64_t v27 = v26[9] * v13;
LABEL_27:
      uint64_t v43 = *v21;
      uint64_t v44 = (void (*)(uint64_t, unint64_t, uint64_t))v26[4];
      uint64_t v42 = v47;
      v44(v47, *(void *)(v43 + 48) + v27, v5);
      v44(*(void *)(v43 + 48) + v27, v53, v5);
      uint64_t v41 = 0;
      return __swift_storeEnumTagSinglePayload(v42, v41, 1, v5);
    }
    goto LABEL_16;
  }
  if (v50)
  {
    sub_22EB474E4();
  }
  else
  {
    if (v25 >= v24)
    {
      sub_22EB48BD4();
      if (v20) {
        goto LABEL_11;
      }
LABEL_16:
      unint64_t v28 = v13 >> 6;
      uint64_t v29 = 1 << v13;
      goto LABEL_24;
    }
    sub_22EB49730();
  }
  uint64_t v30 = *v21;
  uint64_t v31 = sub_22EE7F820();
  uint64_t v32 = -1 << *(unsigned char *)(v30 + 32);
  unint64_t v13 = v31 & ~v32;
  unint64_t v28 = v13 >> 6;
  uint64_t v51 = v30 + 56;
  uint64_t v52 = v30;
  uint64_t v29 = 1 << v13;
  if (((1 << v13) & *(void *)(v30 + 56 + 8 * (v13 >> 6))) != 0)
  {
    unint64_t v33 = v26 + 2;
    uint64_t v34 = (void (*)(char *, unint64_t, uint64_t))v26[2];
    uint64_t v50 = ~v32;
    uint64_t v35 = v26[9];
    while (1)
    {
      unint64_t v27 = v35 * v13;
      v34(v8, *(void *)(v52 + 48) + v35 * v13, v5);
      sub_22EC2B4D8(&qword_26861DA40, MEMORY[0x263F17E28]);
      char v36 = sub_22EE7F900();
      ((void (*)(char *, uint64_t))*(v33 - 1))(v8, v5);
      if (v36) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v50;
      unint64_t v28 = v13 >> 6;
      uint64_t v29 = 1 << v13;
      if ((*(void *)(v51 + 8 * (v13 >> 6)) & (1 << v13)) == 0)
      {
        uint64_t v26 = v48;
        char v21 = v49;
        goto LABEL_23;
      }
    }
    uint64_t v26 = v48;
    char v21 = v49;
    if (v20) {
      goto LABEL_27;
    }
  }
  else
  {
LABEL_23:
    if ((v20 & 1) == 0)
    {
LABEL_24:
      uint64_t v37 = *v21;
      *(void *)(v37 + 8 * v28 + 56) |= v29;
      ((void (*)(unint64_t, unint64_t, uint64_t))v26[4])(*(void *)(v37 + 48) + v26[9] * v13, v53, v5);
      uint64_t v38 = *(void *)(v37 + 16);
      BOOL v39 = __OFADD__(v38, 1);
      uint64_t v40 = v38 + 1;
      if (!v39)
      {
        *(void *)(v37 + 16) = v40;
        uint64_t v41 = 1;
        uint64_t v42 = v47;
        return __swift_storeEnumTagSinglePayload(v42, v41, 1, v5);
      }
      goto LABEL_30;
    }
  }
LABEL_31:
  uint64_t result = sub_22EE806D0();
  __break(1u);
  return result;
}

uint64_t sub_22EC2B480(uint64_t a1, uint64_t *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_5_2();
  v3();
  return a1;
}

uint64_t sub_22EC2B4D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22EC2B520()
{
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_138();

  return swift_deallocObject();
}

uint64_t sub_22EC2B558()
{
  OUTLINED_FUNCTION_13_4();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = *(void *)(v0 + 16);
  uint64_t v9 = *(void *)(v0 + 24);
  uint64_t v11 = swift_task_alloc();
  uint64_t v12 = (void *)OUTLINED_FUNCTION_29_3(v11);
  *uint64_t v12 = v13;
  v12[1] = sub_22EB971E0;
  return sub_22EC215E8(v8, v6, v4, v2, v10, v9);
}

uint64_t sub_22EC2B61C()
{
  swift_release();
  OUTLINED_FUNCTION_138();

  return swift_deallocObject();
}

uint64_t sub_22EC2B64C()
{
  OUTLINED_FUNCTION_28_2();
  OUTLINED_FUNCTION_156();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_29_3(v0);
  void *v1 = v2;
  v1[1] = sub_22EC2C0EC;
  uint64_t v3 = OUTLINED_FUNCTION_31_5();
  return v4(v3);
}

uint64_t sub_22EC2B6E0()
{
  OUTLINED_FUNCTION_13_4();
  OUTLINED_FUNCTION_8_4();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_29_3(v0);
  void *v1 = v2;
  v1[1] = sub_22EBD65C0;
  OUTLINED_FUNCTION_96();
  return v3();
}

uint64_t sub_22EC2B78C()
{
  OUTLINED_FUNCTION_28_2();
  OUTLINED_FUNCTION_156();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_29_3(v0);
  void *v1 = v2;
  v1[1] = sub_22EBD65C0;
  uint64_t v3 = OUTLINED_FUNCTION_31_5();
  return v4(v3);
}

uint64_t sub_22EC2B820()
{
  OUTLINED_FUNCTION_13_4();
  OUTLINED_FUNCTION_8_4();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_29_3(v0);
  void *v1 = v2;
  v1[1] = sub_22EBD65C0;
  OUTLINED_FUNCTION_96();
  return v3();
}

uint64_t sub_22EC2B8D4()
{
  OUTLINED_FUNCTION_13_4();
  OUTLINED_FUNCTION_161();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_29_3(v0);
  void *v1 = v2;
  v1[1] = sub_22EBD65C0;
  uint64_t v3 = OUTLINED_FUNCTION_103();
  return sub_22EC28B00(v3, v4, v5, v6, v7, v8);
}

uint64_t sub_22EC2B970()
{
  OUTLINED_FUNCTION_13_4();
  OUTLINED_FUNCTION_8_4();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_29_3(v0);
  void *v1 = v2;
  v1[1] = sub_22EBD65C0;
  OUTLINED_FUNCTION_96();
  return v3();
}

uint64_t sub_22EC2BA20()
{
  OUTLINED_FUNCTION_28_2();
  OUTLINED_FUNCTION_156();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_29_3(v0);
  void *v1 = v2;
  v1[1] = sub_22EB9742C;
  uint64_t v3 = OUTLINED_FUNCTION_31_5();
  return v4(v3);
}

uint64_t sub_22EC2BAB8()
{
  OUTLINED_FUNCTION_13_4();
  OUTLINED_FUNCTION_161();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_29_3(v0);
  void *v1 = v2;
  v1[1] = sub_22EB971E0;
  uint64_t v3 = OUTLINED_FUNCTION_103();
  return sub_22EC2A214(v3, v4, v5, v6, v7, v8);
}

uint64_t sub_22EC2BB54(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v4 = OUTLINED_FUNCTION_162();
  v5(v4);
  return a2;
}

uint64_t sub_22EC2BBB4()
{
  OUTLINED_FUNCTION_13_4();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_29_3(v0);
  void *v1 = v2;
  v1[1] = sub_22EBD65C0;
  uint64_t v3 = OUTLINED_FUNCTION_144();
  return v4(v3);
}

uint64_t objectdestroy_49Tm()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_22EC2BCB0()
{
  uint64_t v1 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_29_3(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_22EBD65C0;
  uint64_t v7 = OUTLINED_FUNCTION_144();
  return sub_22EC29284(v7, v8, v9, v10, v1, v3, v2);
}

unint64_t sub_22EC2BD74()
{
  unint64_t result = qword_268620F80;
  if (!qword_268620F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620F80);
  }
  return result;
}

unint64_t sub_22EC2BDC0()
{
  unint64_t result = qword_268620F88;
  if (!qword_268620F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620F88);
  }
  return result;
}

unint64_t sub_22EC2BE0C()
{
  unint64_t result = qword_268620F90;
  if (!qword_268620F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620F90);
  }
  return result;
}

ValueMetadata *_s26WillPurchaseEnvironmentKeyOMa()
{
  return &_s26WillPurchaseEnvironmentKeyON;
}

ValueMetadata *_s36PurchaseOptionProviderEnvironmentKeyOMa()
{
  return &_s36PurchaseOptionProviderEnvironmentKeyON;
}

ValueMetadata *_s25DidPurchaseEnvironmentKeyOMa()
{
  return &_s25DidPurchaseEnvironmentKeyON;
}

unint64_t sub_22EC2BE8C()
{
  unint64_t result = qword_268620F98;
  if (!qword_268620F98)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620ED8);
    sub_22EADDD7C(&qword_268620FA0, &qword_268620EE0);
    sub_22EADDD7C(&qword_268620FA8, &qword_268620FB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620F98);
  }
  return result;
}

unint64_t sub_22EC2BF54()
{
  unint64_t result = qword_268620FB8;
  if (!qword_268620FB8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620F10);
    sub_22EADDD7C(&qword_268620FC0, &qword_268620F18);
    sub_22EADDD7C(&qword_268620FC8, &qword_268620FD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620FB8);
  }
  return result;
}

unint64_t sub_22EC2C01C()
{
  unint64_t result = qword_268620FD8;
  if (!qword_268620FD8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268620F48);
    sub_22EADDD7C(&qword_268620FE0, &qword_268620F50);
    sub_22EADDD7C(&qword_268620FE8, &qword_268620FF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620FD8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_14()
{
  uint64_t v3 = v0[76];
  *(void *)(v1 - 104) = v0[79];
  *(void *)(v1 - 96) = v3;
  uint64_t v4 = v0[72];
  *(void *)(v1 - 88) = v0[73];
  *(void *)(v1 - 80) = v4;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_6_20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  uint64_t v15 = *(void *)(v13 - 96);
  unint64_t v16 = *(void *)(v13 - 88);
  return sub_22EC1FA24(v15, v16, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_9_18()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_12_16@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  return sub_22EC1FA24(0xD00000000000002ALL, (a1 - 32) | 0x8000000000000000, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_13_15()
{
  return sub_22EE7FAA0();
}

void OUTLINED_FUNCTION_14_16(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, a2, v4, a4, v5, 0x16u);
}

uint64_t OUTLINED_FUNCTION_16_14(uint64_t result)
{
  *(void *)(v1 + 1144) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_17_13()
{
  return __swift_getEnumTagSinglePayload(v0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_18_12(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t OUTLINED_FUNCTION_19_9()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_20_10()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_21_10(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t OUTLINED_FUNCTION_22_8(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_23_5()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_28_5()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t OUTLINED_FUNCTION_29_6()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_30_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_31_5()
{
  return v0;
}

void OUTLINED_FUNCTION_32_3()
{
  *(_WORD *)(v0 + 12) = 2082;
}

uint64_t OUTLINED_FUNCTION_34_5()
{
  return sub_22EE7FAA0();
}

uint64_t OUTLINED_FUNCTION_36_5()
{
  return *(void *)(v0 + 480);
}

void OUTLINED_FUNCTION_37_5()
{
  uint64_t v1 = v0[69];
  v0[141] = *(void *)(v1 + 16);
  v0[142] = *(void *)(v1 + 24);
}

void OUTLINED_FUNCTION_38_3()
{
  uint64_t v3 = *(void *)(v0 + 536);
  uint64_t v4 = *(int *)(*(void *)(v0 + 960) + 36);
  uint64_t v5 = *(void **)(v3 + v4);
  *(void *)(v3 + v4) = v1;
}

uint64_t OUTLINED_FUNCTION_39_3(uint64_t a1)
{
  *(void *)(v1 + 296) = a1;
  return sub_22EE800B0();
}

uint64_t OUTLINED_FUNCTION_40_3@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  return sub_22EC1FA24(0xD00000000000002ALL, (a1 - 32) | 0x8000000000000000, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_41_4()
{
  return sub_22EE80620();
}

uint64_t OUTLINED_FUNCTION_43_2()
{
  return swift_allocError();
}

uint64_t OUTLINED_FUNCTION_44_3()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_45_2()
{
  return swift_allocError();
}

uint64_t OUTLINED_FUNCTION_49_3(float a1)
{
  float *v1 = a1;
  return sub_22EE7FAA0();
}

uint64_t OUTLINED_FUNCTION_50_2()
{
  return *(void *)(v0 + 480);
}

uint64_t OUTLINED_FUNCTION_52_2()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_55_1()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_57_3()
{
  return v0;
}

void OUTLINED_FUNCTION_61_3(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v6, v4, a4, v5, 0x16u);
}

uint64_t OUTLINED_FUNCTION_62_3()
{
  return sub_22EE80620();
}

uint64_t OUTLINED_FUNCTION_63_2()
{
  uint64_t v2 = *(void *)(v0 + 936);
  uint64_t v3 = *(void *)(v0 + 824);
  return sub_22EB107F0(v2, v3);
}

uint64_t OUTLINED_FUNCTION_64_2()
{
  *(_WORD *)(v0 + 12) = 2082;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_66_2()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_67_0()
{
  **(void **)(v0 + 576) = v1;
  return swift_storeEnumTagMultiPayload();
}

void OUTLINED_FUNCTION_68_0()
{
  uint64_t v1 = v0[69];
  v0[146] = *(void *)(v1 + 16);
  v0[147] = *(void *)(v1 + 24);
}

uint64_t OUTLINED_FUNCTION_69_1()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_70_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  return sub_22EC1FA24(a1, (a2 - 32) | 0x8000000000000000, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_71_1(float a1)
{
  float *v1 = a1;
  *(void *)(v2 - 96) = 91;
  *(void *)(v2 - 88) = 0xE100000000000000;
  return sub_22EE7FAA0();
}

uint64_t OUTLINED_FUNCTION_72_1(float a1)
{
  float *v1 = a1;
  return sub_22EE7FAA0();
}

uint64_t OUTLINED_FUNCTION_73_1()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_75_1(float a1)
{
  float *v1 = a1;
  *(void *)(v2 - 96) = 91;
  *(void *)(v2 - 88) = 0xE100000000000000;
  return sub_22EE7FAA0();
}

uint64_t OUTLINED_FUNCTION_76_1()
{
  return sub_22EE7FD20();
}

uint64_t OUTLINED_FUNCTION_77_0()
{
  return *(void *)(v0 + 936);
}

uint64_t OUTLINED_FUNCTION_79_0(float a1)
{
  float *v1 = a1;
  *(void *)(v2 - 96) = 91;
  *(void *)(v2 - 88) = 0xE100000000000000;
  return sub_22EE7FAA0();
}

uint64_t OUTLINED_FUNCTION_83()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_84()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_85(float a1)
{
  float *v1 = a1;
  *(void *)(v2 - 96) = 91;
  *(void *)(v2 - 88) = 0xE100000000000000;
  return sub_22EE7FAA0();
}

BOOL OUTLINED_FUNCTION_86(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_87()
{
  *(_WORD *)(v0 + 12) = 2082;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_88()
{
  *(_WORD *)(v0 + 12) = 2082;
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_89()
{
  *(_WORD *)(v0 + 12) = 2082;
}

uint64_t OUTLINED_FUNCTION_90()
{
  uint64_t v2 = *(void *)(v0 + 856);
  return sub_22EB31B10(v2);
}

uint64_t OUTLINED_FUNCTION_92(float a1)
{
  *uint64_t v2 = a1;
  *(void *)(v3 - 96) = 91;
  *(void *)(v3 - 88) = 0xE100000000000000;
  return v1;
}

uint64_t OUTLINED_FUNCTION_93()
{
  return *(void *)(v0 + 632);
}

uint64_t OUTLINED_FUNCTION_94()
{
  *(void *)(v0 - 96) = 91;
  *(void *)(v0 - 88) = 0xE100000000000000;
  return sub_22EE7FAA0();
}

uint64_t OUTLINED_FUNCTION_95()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_97()
{
  return sub_22EE7F900();
}

uint64_t OUTLINED_FUNCTION_98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t a17)
{
  uint64_t v18 = a16;
  unint64_t v19 = a17;
  return sub_22EC1FA24(v18, v19, &a15);
}

uint64_t OUTLINED_FUNCTION_99()
{
  return swift_allocError();
}

id OUTLINED_FUNCTION_100@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + *(int *)(a1 + 36)) = v2;
  return v2;
}

uint64_t OUTLINED_FUNCTION_101()
{
  *(void *)(v0 - 96) = 0;
  *(void *)(v0 - 88) = 0xE000000000000000;
  return sub_22EE801C0();
}

uint64_t OUTLINED_FUNCTION_102()
{
  *(void *)(v0 - 96) = 0;
  *(void *)(v0 - 88) = 0xE000000000000000;
  return sub_22EE801C0();
}

uint64_t OUTLINED_FUNCTION_103()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_104()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t OUTLINED_FUNCTION_106()
{
  uint64_t v2 = *(void *)(v0 + 936);
  uint64_t v3 = *(void *)(v0 + 848);
  return sub_22EB107F0(v2, v3);
}

void OUTLINED_FUNCTION_108(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v5, v4, a4, v6, 0x16u);
}

uint64_t OUTLINED_FUNCTION_109()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_110()
{
  return swift_bridgeObjectRelease_n();
}

void OUTLINED_FUNCTION_112(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, a2, v4, a4, v5, 0x16u);
}

void OUTLINED_FUNCTION_113(float a1)
{
  float *v1 = a1;
  *(void *)(v2 - 96) = 91;
  *(void *)(v2 - 88) = 0xE100000000000000;
}

uint64_t OUTLINED_FUNCTION_114(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return sub_22EE7F360();
}

id OUTLINED_FUNCTION_115()
{
  *(void *)(*(void *)(v1 + 536) + *(int *)(*(void *)(v1 + 960) + 36)) = v0;
  return v0;
}

unint64_t OUTLINED_FUNCTION_116()
{
  *(_WORD *)(v0 + 12) = 2082;
  return 0xD00000000000001ALL;
}

uint64_t OUTLINED_FUNCTION_117()
{
  *(void *)(v0 - 96) = 91;
  *(void *)(v0 - 88) = 0xE100000000000000;
  return sub_22EE7FAA0();
}

uint64_t OUTLINED_FUNCTION_118()
{
  return *(void *)(v0 + 672);
}

uint64_t OUTLINED_FUNCTION_119()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_120()
{
  return sub_22EE7F300();
}

uint64_t OUTLINED_FUNCTION_121()
{
  uint64_t v2 = *(void *)(v0 + 848);
  return sub_22EB31B10(v2);
}

uint64_t OUTLINED_FUNCTION_122()
{
  return sub_22EE7F630();
}

uint64_t OUTLINED_FUNCTION_124()
{
  uint64_t v2 = *(void *)(v0 + 960);
  uint64_t v3 = *(void *)(v0 + 536);
  return __swift_getEnumTagSinglePayload(v3, 1, v2);
}

uint64_t OUTLINED_FUNCTION_126(uint64_t a1)
{
  *(void *)(v1 + 320) = a1;
  return sub_22EE800B0();
}

void OUTLINED_FUNCTION_128()
{
  *(_WORD *)(v0 + 12) = 2082;
}

uint64_t OUTLINED_FUNCTION_129(uint64_t a1)
{
  *(void *)(v1 + 264) = a1;
  return sub_22EE800B0();
}

uint64_t OUTLINED_FUNCTION_130(uint64_t a1)
{
  *(void *)(v1 + 288) = a1;
  return sub_22EE800B0();
}

uint64_t OUTLINED_FUNCTION_131(uint64_t a1)
{
  *(void *)(v1 + 288) = a1;
  return sub_22EE800B0();
}

uint64_t OUTLINED_FUNCTION_132(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  return sub_22EC1FA24(a10, v13, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_133(uint64_t result)
{
  *(void *)(v1 - 96) = result;
  *(void *)(v1 - 88) = 91;
  *(void *)(v1 - 80) = 0xE100000000000000;
  return result;
}

uint64_t OUTLINED_FUNCTION_134()
{
  *(void *)(v1 - 96) = 91;
  *(void *)(v1 - 88) = 0xE100000000000000;
  return v0;
}

uint64_t OUTLINED_FUNCTION_135()
{
  *(void *)(v1 - 96) = 91;
  *(void *)(v1 - 88) = 0xE100000000000000;
  return v0;
}

uint64_t OUTLINED_FUNCTION_136(int a1)
{
  *(void *)(v4 - 96) = v2;
  return sub_22EC2B004(v1, a1, v3);
}

uint64_t OUTLINED_FUNCTION_137(uint64_t result)
{
  *(void *)(v1 + 1080) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_138()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_139()
{
  uint64_t v2 = *(void *)(v0 - 88);
  unint64_t v3 = *(void *)(v0 - 80);
  return sub_22EC1FA24(v2, v3, (uint64_t *)(v0 - 96));
}

uint64_t OUTLINED_FUNCTION_140()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_141()
{
  return __swift_getEnumTagSinglePayload(v1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_144()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_145(uint64_t a1)
{
  *(void *)(v1 + 368) = a1;
  return sub_22EE800B0();
}

uint64_t OUTLINED_FUNCTION_146()
{
  return sub_22EE800B0();
}

void OUTLINED_FUNCTION_147(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, a2, v4, a4, v5, 0x16u);
}

uint64_t OUTLINED_FUNCTION_148()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_152()
{
  return *(void *)(v0 + 936);
}

uint64_t OUTLINED_FUNCTION_154()
{
  return sub_22EE7FAA0();
}

void OUTLINED_FUNCTION_155()
{
  *(unsigned char *)(*(void *)(v1 + 536) + 3) = v0;
}

uint64_t OUTLINED_FUNCTION_157()
{
  uint64_t v2 = *(void *)(v0 + 936);
  uint64_t v3 = *(void *)(v0 + 816);
  return sub_22EB107F0(v2, v3);
}

uint64_t OUTLINED_FUNCTION_158()
{
  uint64_t v2 = *(void *)(v0 + 936);
  uint64_t v3 = *(void *)(v0 + 816);
  return sub_22EB107F0(v2, v3);
}

uint64_t OUTLINED_FUNCTION_159()
{
  *(_WORD *)(v0 + 12) = 2082;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_160()
{
  return sub_22EE7FAA0();
}

uint64_t OUTLINED_FUNCTION_162()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_163()
{
  *uint64_t v0 = v1;
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_164()
{
  return *(void *)(v0 + 536);
}

uint64_t OUTLINED_FUNCTION_165(uint64_t result)
{
  *(void *)(v1 + 1184) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_166(uint64_t result)
{
  *(void *)(v1 + 1152) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_167@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 - 96) = a1;
  *(void *)(v2 - 88) = (v1 - 32) | 0x8000000000000000;
  return sub_22EE7F620();
}

uint64_t OUTLINED_FUNCTION_169()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_170()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_171@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_173()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_174(uint64_t a1)
{
  *(void *)(v1 + 264) = a1;
  return sub_22EE800B0();
}

void OUTLINED_FUNCTION_175(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v5, v6, a4, v4, 0x16u);
}

uint64_t OUTLINED_FUNCTION_176()
{
  return sub_22EE7F630();
}

uint64_t OUTLINED_FUNCTION_177()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_178()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_179()
{
  return sub_22EE800B0();
}

uint64_t OUTLINED_FUNCTION_180()
{
  return *(void *)(v0 + 480);
}

double sub_22EC2D240()
{
  return 1.0;
}

uint64_t sub_22EC2D248()
{
  return sub_22EE7C710();
}

uint64_t sub_22EC2D260()
{
  unsigned __int8 v0 = sub_22EE7DE40();
  unsigned __int8 v1 = sub_22EE7DE20();
  uint64_t v2 = sub_22EE7DE30();
  sub_22EE7DE30();
  if (sub_22EE7DE30() != v0) {
    uint64_t v2 = sub_22EE7DE30();
  }
  sub_22EE7DE30();
  if (sub_22EE7DE30() == v1) {
    return v2;
  }

  return sub_22EE7DE30();
}

void static SubscriptionStorePickerLayout.pages.getter(unsigned char *a1@<X8>)
{
}

double sub_22EC2D310()
{
  return 0.0;
}

uint64_t sub_22EC2D318@<X0>(uint64_t a1@<X1>, void (*a2)(uint64_t)@<X2>, uint64_t a3@<X3>, int a4@<W4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v56 = a4;
  uint64_t v53 = a3;
  uint64_t v54 = a2;
  uint64_t v55 = a1;
  uint64_t v57 = a7;
  v48[1] = a10;
  OUTLINED_FUNCTION_0_0();
  uint64_t v51 = v12;
  uint64_t v52 = v13;
  v48[0] = v14;
  uint64_t v50 = a8;
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_11_0();
  uint64_t v17 = v16 - v15;
  uint64_t v49 = v18;
  MEMORY[0x270FA5388](v19);
  OUTLINED_FUNCTION_11_0();
  uint64_t v22 = v21 - v20;
  OUTLINED_FUNCTION_0_0();
  uint64_t v24 = v23;
  MEMORY[0x270FA5388](v25);
  OUTLINED_FUNCTION_11_0();
  uint64_t v28 = v27 - v26;
  uint64_t v58 = v29;
  uint64_t v59 = v30;
  uint64_t v60 = v31;
  uint64_t v61 = v32;
  uint64_t v62 = v33;
  uint64_t v63 = v34;
  uint64_t v35 = type metadata accessor for SubscriptionStorePickerLayoutInternal.SectionView();
  OUTLINED_FUNCTION_0_0();
  uint64_t v37 = v36;
  uint64_t v39 = MEMORY[0x270FA5388](v38);
  uint64_t v41 = (char *)v48 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v39);
  uint64_t v43 = (char *)v48 - v42;
  uint64_t v44 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v28, v51, a5);
  v54(v44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16))(v17, v55, a6);
  sub_22EC2DA1C(v28, v22, v17, v56, a5, v49, a6, (uint64_t)v41);
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_22EB69440(v41, v35, WitnessTable);
  uint64_t v46 = *(void (**)(char *, uint64_t))(v37 + 8);
  v46(v41, v35);
  sub_22EB69440(v43, v35, WitnessTable);
  return ((uint64_t (*)(char *, uint64_t))v46)(v43, v35);
}

uint64_t sub_22EC2D5C4@<X0>(uint64_t (*a1)(uint64_t)@<X0>, void (*a2)(_OWORD *__return_ptr)@<X2>, uint64_t (*a3)(void)@<X4>, char a4@<W6>, uint64_t a5@<X8>)
{
  if (a4 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26861F078);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    uint64_t v10 = *(int *)(TupleTypeMetadata3 + 48);
    uint64_t v11 = a5 + *(int *)(TupleTypeMetadata3 + 64);
    uint64_t v12 = a3();
    *(unsigned char *)(a5 + v10) = a1(v12) & 1;
    a2(v17);
    long long v13 = v17[1];
    *(_OWORD *)uint64_t v11 = v17[0];
    *(_OWORD *)(v11 + 16) = v13;
    *(unsigned char *)(v11 + 32) = v18;
  }
  else
  {
    char v14 = a4 & 1;
    uint64_t v15 = *(int *)(swift_getTupleTypeMetadata2() + 48);
    a3();
    *(unsigned char *)(a5 + v15) = v14;
  }
  type metadata accessor for SubscriptionStorePickerLayoutInternal.LayoutView();

  return swift_storeEnumTagMultiPayload();
}

void static SubscriptionStorePickerLayout.stack(_:)(unsigned char *a1@<X8>)
{
}

void static SubscriptionStorePickerLayout.automatic.getter(unsigned char *a1@<X8>)
{
}

uint64_t SubscriptionStorePickerLayout.hash(into:)()
{
  if (*v0 == 2) {
    return sub_22EE807C0();
  }
  sub_22EE807C0();
  sub_22EE7DE50();
  return sub_22EE807D0();
}

BOOL static SubscriptionStorePickerLayout.== infix(_:_:)(unsigned char *a1, unsigned __int8 *a2)
{
  int v2 = *a2;
  if (*a1 != 2)
  {
    if (v2 == 2) {
      return 0;
    }
    int v3 = sub_22EE7DE50();
    return v3 == sub_22EE7DE50();
  }
  return v2 == 2;
}

BOOL sub_22EC2D7FC(unsigned __int8 a1, char a2)
{
  int v2 = a1;
  BOOL result = a2 == 2 && a1 == 2;
  if (v2 != 2 && a2 != 2)
  {
    int v5 = sub_22EE7DE50();
    return v5 == sub_22EE7DE50();
  }
  return result;
}

uint64_t SubscriptionStorePickerLayout.hashValue.getter()
{
  int v1 = *v0;
  sub_22EE807B0();
  sub_22EE807C0();
  if (v1 != 2)
  {
    sub_22EE7DE50();
    sub_22EE807D0();
  }
  return sub_22EE807F0();
}

uint64_t sub_22EC2D8E0()
{
  int v1 = *v0;
  sub_22EE807B0();
  sub_22EE807C0();
  if (v1 != 2)
  {
    sub_22EE7DE50();
    sub_22EE807D0();
  }
  return sub_22EE807F0();
}

uint64_t sub_22EC2D954(uint64_t a1, char a2)
{
  if (a2 == 2) {
    return sub_22EE807C0();
  }
  sub_22EE807C0();
  sub_22EE7DE50();
  return sub_22EE807D0();
}

uint64_t sub_22EC2D9A4(unsigned __int8 a1)
{
  int v1 = a1;
  sub_22EE807B0();
  sub_22EE807C0();
  if (v1 != 2)
  {
    sub_22EE7DE50();
    sub_22EE807D0();
  }
  return sub_22EE807F0();
}

uint64_t sub_22EC2DA1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(a8, a1, a5);
  char v14 = (int *)type metadata accessor for SubscriptionStorePickerLayoutInternal.SectionView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(a8 + v14[17], a2, a6);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32))(a8 + v14[18], a3, a7);
  *(unsigned char *)(a8 + v14[19]) = a4;
  return result;
}

uint64_t sub_22EC2DB4C()
{
  return sub_22EC2D9A4(*v0);
}

uint64_t sub_22EC2DB54(uint64_t a1)
{
  return sub_22EC2D954(a1, *v1);
}

unint64_t sub_22EC2DB60()
{
  unint64_t result = qword_268620FF8;
  if (!qword_268620FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268620FF8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SubscriptionStorePickerLayout(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 2) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (v4) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v3 == 2)
      {
        int v4 = *(unsigned __int16 *)(a1 + 1);
        if (!*(_WORD *)(a1 + 1)) {
          goto LABEL_17;
        }
LABEL_15:
        int v5 = (*a1 | (v4 << 8)) - 3;
        return (v5 + 1);
      }
      int v4 = a1[1];
      if (a1[1]) {
        goto LABEL_15;
      }
    }
  }
LABEL_17:
  if (*a1 <= 2u) {
    int v6 = 2;
  }
  else {
    int v6 = *a1;
  }
  int v7 = v6 - 3;
  if (*a1 < 2u) {
    int v5 = -1;
  }
  else {
    int v5 = v7;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for SubscriptionStorePickerLayout(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22EC2DD10);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionStorePickerLayout()
{
  return &type metadata for SubscriptionStorePickerLayout;
}

uint64_t getEnumTagSinglePayload for SubscriptionStorePickerLayoutInternal(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE)
  {
    unsigned int v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 2;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 2;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x22EC2DDF4);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 2;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v8 = v7 >= 2;
  unsigned int v9 = v7 - 2;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for SubscriptionStorePickerLayoutInternal(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFE) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v7 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x22EC2DEDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_22EC2DF04(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 2) {
    return v1 - 1;
  }
  else {
    return 0;
  }
}

unsigned char *sub_22EC2DF18(unsigned char *result, int a2)
{
  if (a2) {
    *unint64_t result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionStorePickerLayoutInternal()
{
  return &type metadata for SubscriptionStorePickerLayoutInternal;
}

BOOL sub_22EC2DF38(unsigned __int8 *a1, char *a2)
{
  return sub_22EC2D7FC(*a1, *a2);
}

unint64_t sub_22EC2DF48()
{
  unint64_t result = qword_268621000;
  if (!qword_268621000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268621000);
  }
  return result;
}

uint64_t sub_22EC2DF94()
{
  return sub_22EB44010();
}

uint64_t sub_22EC2DFAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v91 = a2;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = type metadata accessor for PickerOptionPages();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v81 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  unint64_t v85 = (char *)&v75 - v9;
  uint64_t v10 = type metadata accessor for HorizontalPickerOptionStack();
  uint64_t v77 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v76 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  unint64_t v80 = (char *)&v75 - v13;
  uint64_t v82 = v4;
  uint64_t v14 = type metadata accessor for VerticalPickerOptionStack();
  uint64_t v90 = v10;
  uint64_t v15 = sub_22EE7D810();
  uint64_t v78 = *(void (***)(char *, uint64_t))(v15 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  char v18 = (char *)&v75 - v17;
  uint64_t v89 = v14;
  uint64_t v75 = *(void *)(v14 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v75 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v79 = (char *)&v75 - v23;
  uint64_t v92 = v3;
  uint64_t v24 = *(void *)(v3 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  uint64_t v27 = (char *)&v75 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v25);
  uint64_t v30 = (char *)&v75 - v29;
  uint64_t v31 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v33 = (char *)&v75 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = v34;
  uint64_t v88 = sub_22EE7D810();
  uint64_t v87 = *(void *)(v88 - 8);
  MEMORY[0x270FA5388](v88);
  uint64_t v86 = (char *)&v75 - v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v33, v83, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26861F078);
    uint64_t v36 = v6;
    uint64_t v37 = v92;
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    char v39 = v33[*(int *)(TupleTypeMetadata3 + 48)];
    uint64_t v40 = &v33[*(int *)(TupleTypeMetadata3 + 64)];
    long long v41 = *((_OWORD *)v40 + 1);
    long long v103 = *(_OWORD *)v40;
    long long v104 = v41;
    char v105 = v40[32];
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v30, v33, v37);
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v27, v30, v37);
    uint64_t v42 = (uint64_t)v81;
    sub_22EC2EC30((uint64_t)v27, v39, (uint64_t)&v103, v37, (uint64_t)v81);
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v44 = v85;
    sub_22EB69440(v42, v5, WitnessTable);
    uint64_t v83 = *((void *)&v103 + 1);
    uint64_t v106 = v103;
    sub_22EC30874((uint64_t)&v104, (uint64_t)v107);
    sub_22EC308DC((uint64_t)&v106);
    swift_retain();
    sub_22EC30908((uint64_t)v107);
    uint64_t v45 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
    uint64_t v82 = v36 + 8;
    v45(v42, v5);
    sub_22EB69440(v44, v5, WitnessTable);
    uint64_t v46 = swift_getWitnessTable();
    uint64_t v47 = swift_getWitnessTable();
    uint64_t v101 = v46;
    uint64_t v102 = v47;
    swift_getWitnessTable();
    uint64_t v48 = v86;
    sub_22EC4F330();
    sub_22EB051FC((uint64_t)&v106);
    swift_release();
    sub_22EBAB5A4((uint64_t)v107);
    v45(v42, v5);
    v45((uint64_t)v85, v5);
  }
  else
  {
    unint64_t v85 = (char *)v5;
    uint64_t v49 = v92;
    int v50 = v33[*(int *)(swift_getTupleTypeMetadata2() + 48)];
    uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
    v51(v30, v33, v49);
    uint64_t v83 = v24;
    uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
    uint64_t v81 = v30;
    v52(v27, v30, v49);
    ++v78;
    if (v50 == 1)
    {
      sub_22EC2EBA0((uint64_t)v27, v92, (uint64_t)v21);
      uint64_t v53 = v89;
      uint64_t v54 = swift_getWitnessTable();
      uint64_t v55 = v79;
      sub_22EB69440(v21, v53, v54);
      int v56 = *(void (**)(char *, uint64_t))(v75 + 8);
      v56(v21, v53);
      sub_22EB69440(v55, v53, v54);
      uint64_t v57 = swift_getWitnessTable();
      uint64_t v58 = v18;
      sub_22EC4F278();
      v56(v21, v53);
      uint64_t v93 = v54;
      uint64_t v94 = v57;
      uint64_t v59 = v84;
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v48 = v86;
      sub_22EC4F278();
      (*v78)(v58, v59);
      v56(v79, v53);
    }
    else
    {
      uint64_t v60 = v76;
      v51(v76, v27, v92);
      uint64_t v61 = v90;
      uint64_t v62 = swift_getWitnessTable();
      uint64_t v63 = v80;
      sub_22EB69440(v60, v61, v62);
      uint64_t v64 = *(void (**)(char *, uint64_t))(v77 + 8);
      v64(v60, v61);
      sub_22EB69440(v63, v61, v62);
      uint64_t v65 = swift_getWitnessTable();
      uint64_t v66 = v18;
      sub_22EC4F330();
      v64(v60, v61);
      uint64_t v95 = v65;
      uint64_t v96 = v62;
      uint64_t v67 = v84;
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v48 = v86;
      sub_22EC4F278();
      (*v78)(v66, v67);
      v64(v80, v61);
    }
    uint64_t v24 = v83;
    uint64_t v30 = v81;
  }
  (*(void (**)(char *, uint64_t))(v24 + 8))(v30, v92);
  uint64_t v68 = swift_getWitnessTable();
  uint64_t v69 = swift_getWitnessTable();
  uint64_t v99 = v68;
  uint64_t v100 = v69;
  uint64_t v70 = swift_getWitnessTable();
  uint64_t v71 = swift_getWitnessTable();
  uint64_t v97 = v70;
  uint64_t v98 = v71;
  uint64_t v72 = v88;
  uint64_t v73 = swift_getWitnessTable();
  sub_22EB69440(v48, v72, v73);
  return (*(uint64_t (**)(char *, uint64_t))(v87 + 8))(v48, v72);
}

uint64_t sub_22EC2EBA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
  uint64_t v4 = a3 + *(int *)(type metadata accessor for VerticalPickerOptionStack() + 36);
  uint64_t result = swift_getKeyPath();
  *(void *)uint64_t v4 = result;
  *(_WORD *)(v4 + 8) = 0;
  return result;
}

__n128 sub_22EC2EC30@<Q0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5, a1, a4);
  uint64_t v8 = type metadata accessor for PickerOptionPages();
  *(unsigned char *)(a5 + *(int *)(v8 + 36)) = a2;
  uint64_t v9 = a5 + *(int *)(v8 + 40);
  __n128 result = *(__n128 *)a3;
  long long v11 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)a3;
  *(_OWORD *)(v9 + 16) = v11;
  *(unsigned char *)(v9 + 32) = *(unsigned char *)(a3 + 32);
  return result;
}

uint64_t sub_22EC2ECD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v78 = a2;
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v75 = *(char **)(v3 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](a1);
  uint64_t v74 = (void (**)(char *, uint64_t))((char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v73 = (char *)&v61 - v7;
  uint64_t v8 = *(void *)(v6 + 16);
  sub_22EE7CEE0();
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v12 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  uint64_t v91 = v8;
  uint64_t v92 = v3;
  uint64_t v93 = v10;
  uint64_t v94 = v9;
  uint64_t v70 = v9;
  uint64_t v95 = v12;
  uint64_t v96 = v11;
  uint64_t v69 = v11;
  type metadata accessor for SubscriptionStorePickerLayoutInternal.SectionView.HorizontalContent();
  sub_22EE7CEE0();
  swift_getTupleTypeMetadata3();
  uint64_t v13 = sub_22EE7EE20();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v64 = v13;
  uint64_t v63 = WitnessTable;
  uint64_t v15 = sub_22EE7EA60();
  uint64_t v66 = *(void *)(v15 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v65 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v71 = (char *)&v61 - v18;
  sub_22EE7CEE0();
  uint64_t v80 = v12;
  sub_22EE7EAF0();
  sub_22EE7CEE0();
  swift_getTupleTypeMetadata3();
  sub_22EE7EE20();
  swift_getWitnessTable();
  uint64_t v19 = sub_22EE7EAF0();
  uint64_t v20 = sub_22EE7D810();
  uint64_t v67 = *(void *)(v20 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  uint64_t v72 = (char *)&v61 - v22;
  uint64_t v62 = *(void *)(v19 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v61 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v68 = (char *)&v61 - v26;
  uint64_t v79 = v3;
  uint64_t v27 = sub_22EE7D810();
  uint64_t v76 = *(void *)(v27 - 8);
  uint64_t v77 = v27;
  uint64_t v28 = MEMORY[0x270FA5388](v27);
  uint64_t v31 = (char *)&v61 - v29;
  if (*(unsigned char *)(v30 + *(int *)(a1 + 76)) == 2)
  {
    uint64_t v32 = v30 + *(int *)(a1 + 68);
    uint64_t v33 = v73;
    uint64_t v35 = v79;
    uint64_t v34 = v80;
    sub_22EB69440(v32, v79, v80);
    uint64_t v36 = v74;
    sub_22EB69440(v33, v35, v34);
    uint64_t v37 = swift_getWitnessTable();
    uint64_t v38 = swift_getWitnessTable();
    uint64_t v89 = v37;
    uint64_t v90 = v38;
    swift_getWitnessTable();
    sub_22EC4F330();
    char v39 = (void (*)(char *, uint64_t))*((void *)v75 + 1);
    v39((char *)v36, v35);
    v39(v33, v35);
  }
  else
  {
    uint64_t v75 = (char *)&v61 - v29;
    MEMORY[0x270FA5388](v28);
    uint64_t v40 = v79;
    *(&v61 - 8) = v8;
    *(&v61 - 7) = v40;
    uint64_t v41 = v70;
    *(&v61 - 6) = v10;
    *(&v61 - 5) = v41;
    uint64_t v42 = v69;
    *(&v61 - 4) = v80;
    *(&v61 - 3) = v42;
    uint64_t v74 = (void (**)(char *, uint64_t))(v67 + 8);
    *(&v61 - 2) = v43;
    if (v44)
    {
      sub_22EB51934();
      sub_22EE7EAE0();
      uint64_t v51 = swift_getWitnessTable();
      uint64_t v52 = v68;
      sub_22EB69440(v25, v19, v51);
      uint64_t v53 = *(void (**)(char *, uint64_t))(v62 + 8);
      v53(v25, v19);
      sub_22EB69440(v52, v19, v51);
      uint64_t v54 = swift_getWitnessTable();
      uint64_t v55 = v72;
      sub_22EC4F278();
      v53(v25, v19);
      uint64_t v81 = v51;
      uint64_t v82 = v54;
      swift_getWitnessTable();
      uint64_t v31 = v75;
      uint64_t v34 = v80;
      sub_22EC4F278();
      (*v74)(v55, v20);
      v53(v68, v19);
    }
    else
    {
      sub_22EE7D530();
      uint64_t v45 = v65;
      sub_22EE7EA50();
      uint64_t v46 = swift_getWitnessTable();
      uint64_t v47 = v71;
      sub_22EB69440(v45, v15, v46);
      uint64_t v48 = *(void (**)(char *, uint64_t))(v66 + 8);
      v48(v45, v15);
      sub_22EB69440(v47, v15, v46);
      uint64_t v49 = swift_getWitnessTable();
      int v50 = v72;
      sub_22EC4F330();
      v48(v45, v15);
      uint64_t v83 = v49;
      uint64_t v84 = v46;
      swift_getWitnessTable();
      uint64_t v31 = v75;
      uint64_t v34 = v80;
      sub_22EC4F278();
      (*v74)(v50, v20);
      v48(v71, v15);
    }
  }
  uint64_t v56 = swift_getWitnessTable();
  uint64_t v57 = swift_getWitnessTable();
  uint64_t v87 = v56;
  uint64_t v88 = v57;
  uint64_t v85 = swift_getWitnessTable();
  uint64_t v86 = v34;
  uint64_t v58 = v77;
  uint64_t v59 = swift_getWitnessTable();
  sub_22EB69440(v31, v58, v59);
  return (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v31, v58);
}

uint64_t sub_22EC2F6B8@<X0>(uint64_t a1@<X0>, char *a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v56 = a7;
  uint64_t v49 = a5;
  uint64_t v54 = a4;
  uint64_t v63 = a8;
  uint64_t v61 = sub_22EE7CEE0();
  uint64_t v62 = *(void *)(v61 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v61);
  uint64_t v59 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v60 = (char *)&v46 - v14;
  uint64_t v66 = sub_22EE7EAF0();
  uint64_t v68 = *(void *)(v66 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v66);
  uint64_t v69 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v64 = (char *)&v46 - v17;
  uint64_t v18 = sub_22EE7CEE0();
  uint64_t v52 = *(void *)(v18 - 8);
  uint64_t v19 = v52;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  uint64_t v67 = (char *)&v46 - v24;
  uint64_t v25 = v49;
  MEMORY[0x230FAB9D0](v23, a2, &type metadata for VStackHeaderStyle, v49);
  unint64_t v26 = sub_22EC30EB8();
  uint64_t v87 = v25;
  unint64_t v88 = v26;
  uint64_t v48 = MEMORY[0x263F18E48];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v65 = v22;
  uint64_t v53 = v18;
  sub_22EB69440(v22, v18, WitnessTable);
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t))(v19 + 8);
  uint64_t v57 = v19 + 8;
  uint64_t v58 = v27;
  v27(v22, v18);
  uint64_t v70 = a2;
  uint64_t v71 = a3;
  uint64_t v28 = v54;
  uint64_t v72 = v54;
  uint64_t v73 = v25;
  uint64_t v29 = v56;
  uint64_t v74 = a6;
  uint64_t v75 = v56;
  uint64_t v76 = a1;
  sub_22EB51934();
  uint64_t v30 = v69;
  sub_22EE7EAE0();
  uint64_t v31 = v66;
  uint64_t v47 = swift_getWitnessTable();
  sub_22EB69440(v30, v31, v47);
  int v50 = *(void (**)(char *, uint64_t))(v68 + 8);
  uint64_t v51 = v68 + 8;
  v50(v30, v31);
  uint64_t v81 = a2;
  uint64_t v82 = a3;
  uint64_t v83 = v28;
  uint64_t v84 = v25;
  uint64_t v85 = a6;
  uint64_t v86 = v29;
  type metadata accessor for SubscriptionStorePickerLayoutInternal.SectionView();
  uint64_t v32 = v59;
  MEMORY[0x230FAB9D0]();
  unint64_t v33 = sub_22EC30F50();
  v80[3] = v29;
  v80[4] = v33;
  uint64_t v34 = v61;
  uint64_t v56 = swift_getWitnessTable();
  uint64_t v35 = v60;
  sub_22EB69440(v32, v34, v56);
  uint64_t v36 = v62;
  uint64_t v37 = *(void (**)(char *, uint64_t))(v62 + 8);
  v37(v32, v34);
  uint64_t v38 = v65;
  uint64_t v39 = v53;
  (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v65, v67, v53);
  uint64_t v81 = v38;
  uint64_t v40 = v69;
  uint64_t v41 = v64;
  uint64_t v42 = v66;
  (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v69, v64, v66);
  uint64_t v82 = v40;
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v32, v35, v34);
  uint64_t v83 = v32;
  v80[0] = v39;
  v80[1] = v42;
  v80[2] = v34;
  uint64_t v77 = WitnessTable;
  uint64_t v78 = v47;
  uint64_t v79 = v56;
  sub_22ED82348((uint64_t)&v81, 3, (uint64_t)v80);
  v37(v35, v34);
  uint64_t v43 = v50;
  v50(v41, v42);
  char v44 = v58;
  v58(v67, v39);
  v37(v32, v34);
  v43(v69, v42);
  return v44(v65, v39);
}

uint64_t sub_22EC2FD14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[0] = v12;
  v20[1] = v13;
  v20[2] = v14;
  v20[3] = v15;
  _DWORD v20[4] = v16;
  v20[5] = v17;
  uint64_t v18 = type metadata accessor for SubscriptionStorePickerLayoutInternal.SectionView();
  sub_22EB69440(a1 + *(int *)(v18 + 68), a3, a6);
  sub_22EB69440(v11, a3, a6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, a3);
}

uint64_t sub_22EC2FE20@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, void (*a4)(void, void)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v58 = a7;
  uint64_t v59 = a6;
  uint64_t v70 = a8;
  uint64_t v60 = a4;
  uint64_t v68 = sub_22EE7CEE0();
  uint64_t v69 = *(void *)(v68 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v68);
  uint64_t v66 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v67 = (char *)&v54 - v18;
  uint64_t v63 = *(void (**)(uint64_t, uint64_t))(a3 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v61 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = a2;
  uint64_t v82 = a3;
  uint64_t v83 = (char *)a4;
  uint64_t v84 = a5;
  uint64_t v85 = a6;
  uint64_t v86 = a7;
  uint64_t v74 = type metadata accessor for SubscriptionStorePickerLayoutInternal.SectionView.HorizontalContent();
  uint64_t v76 = *(void *)(v74 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v74);
  uint64_t v72 = (uint64_t)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v73 = (char *)&v54 - v22;
  uint64_t v23 = sub_22EE7CEE0();
  uint64_t v57 = *(void *)(v23 - 8);
  uint64_t v24 = v57;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v54 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v25);
  uint64_t v75 = (char *)&v54 - v29;
  MEMORY[0x230FAB9D0](v28, a2, &type metadata for HStackSectionAccessoryStyle, a5);
  unint64_t v55 = sub_22EC30F9C();
  void v80[5] = a5;
  v80[6] = v55;
  uint64_t v54 = MEMORY[0x263F18E48];
  uint64_t v56 = v23;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v71 = v27;
  sub_22EB69440(v27, v23, WitnessTable);
  uint64_t v30 = *(uint64_t (**)(char *, uint64_t))(v24 + 8);
  uint64_t v64 = v24 + 8;
  uint64_t v65 = v30;
  v30(v27, v23);
  uint64_t v81 = a2;
  uint64_t v82 = a3;
  uint64_t v31 = v60;
  uint64_t v83 = (char *)v60;
  uint64_t v84 = a5;
  uint64_t v32 = v58;
  uint64_t v85 = v59;
  uint64_t v86 = v58;
  uint64_t v33 = type metadata accessor for SubscriptionStorePickerLayoutInternal.SectionView();
  uint64_t v34 = (uint64_t)v61;
  (*((void (**)(char *, uint64_t, uint64_t))v63 + 2))(v61, a1 + *(int *)(v33 + 68), a3);
  uint64_t v35 = v72;
  sub_22EC304D0(v34, a3, v72);
  uint64_t v36 = v74;
  uint64_t v61 = (char *)swift_getWitnessTable();
  sub_22EB69440(v35, v36, v61);
  uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v76 + 8);
  uint64_t v59 = v76 + 8;
  uint64_t v63 = v37;
  uint64_t v38 = v35;
  uint64_t v39 = ((uint64_t (*)(uint64_t, uint64_t))v37)(v35, v36);
  uint64_t v40 = v66;
  MEMORY[0x230FAB9D0](v39, v31, &type metadata for HStackSectionAccessoryStyle, v32);
  v80[3] = v32;
  v80[4] = v55;
  uint64_t v41 = v68;
  uint64_t v42 = swift_getWitnessTable();
  uint64_t v43 = v67;
  sub_22EB69440(v40, v41, v42);
  uint64_t v44 = v69;
  uint64_t v60 = *(void (**)(void, void))(v69 + 8);
  v60(v40, v41);
  uint64_t v45 = v71;
  uint64_t v46 = v56;
  (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v71, v75, v56);
  uint64_t v81 = v45;
  uint64_t v48 = v73;
  uint64_t v47 = v74;
  (*(void (**)(uint64_t, char *, uint64_t))(v76 + 16))(v38, v73, v74);
  uint64_t v82 = v38;
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v40, v43, v41);
  uint64_t v83 = v40;
  v80[0] = v46;
  v80[1] = v47;
  uint64_t v49 = v47;
  v80[2] = v41;
  uint64_t v77 = WitnessTable;
  uint64_t v78 = v61;
  uint64_t v79 = v42;
  sub_22ED82348((uint64_t)&v81, 3, (uint64_t)v80);
  int v50 = (void (*)(char *, uint64_t))v60;
  v60(v43, v41);
  uint64_t v51 = v63;
  v63((uint64_t)v48, v47);
  uint64_t v52 = v65;
  v65(v75, v46);
  v50(v40, v41);
  v51(v72, v49);
  return v52(v71, v46);
}

uint64_t sub_22EC304D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1);
  uint64_t v4 = a3
     + *(int *)(type metadata accessor for SubscriptionStorePickerLayoutInternal.SectionView.HorizontalContent() + 68);
  uint64_t result = swift_getKeyPath();
  *(void *)uint64_t v4 = result;
  *(unsigned char *)(v4 + 8) = 0;
  return result;
}

uint64_t sub_22EC3058C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v23[1] = a2;
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = sub_22EE7CEE0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v23 - v10;
  uint64_t v12 = v2 + *(int *)(a1 + 68);
  uint64_t v13 = *(void *)v12;
  char v14 = *(unsigned char *)(v12 + 8);
  sub_22EADDF00(*(void *)v12, v14);
  sub_22EB155AC();
  char v16 = v15;
  sub_22EADDB08(v13, v14);
  uint64_t v17 = *(void *)(a1 + 48);
  uint64_t v18 = sub_22EE7D670();
  sub_22EB82B34(3, 1, v18, v16 & 1, v4, v17, 0.0, 1.0);
  unint64_t v19 = sub_22EAFD1CC();
  void v23[2] = v17;
  v23[3] = v19;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_22EB69440(v9, v5, WitnessTable);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  v21(v9, v5);
  sub_22EB69440(v11, v5, WitnessTable);
  return ((uint64_t (*)(char *, uint64_t))v21)(v11, v5);
}

uint64_t sub_22EC30768()
{
  sub_22EC31040();
  sub_22EE7D4B0();
  return v1;
}

uint64_t sub_22EC307A4()
{
  return sub_22EE7D4C0();
}

uint64_t sub_22EC307E8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for PickerOptionPages()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for HorizontalPickerOptionStack()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for VerticalPickerOptionStack()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_22EC30874(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861F120);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22EC308DC(uint64_t a1)
{
  return a1;
}

uint64_t sub_22EC30908(uint64_t a1)
{
  return a1;
}

uint64_t sub_22EC3093C(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 16);
  sub_22EE7DB30();
  sub_22EE7CEE0();
  uint64_t v19 = *(void *)(a1 + 24);
  uint64_t v4 = v19;
  unint64_t v20 = sub_22EC37B10();
  swift_getWitnessTable();
  uint64_t v5 = sub_22EE7EAF0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = &v15[-v10];
  uint64_t v16 = v3;
  uint64_t v17 = v4;
  uint64_t v18 = v1;
  sub_22EB51934();
  sub_22EE7EAE0();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_22EB69440(v9, v5, WitnessTable);
  uint64_t v13 = *(void (**)(unsigned char *, uint64_t))(v6 + 8);
  v13(v9, v5);
  sub_22EB69440(v11, v5, WitnessTable);
  return ((uint64_t (*)(unsigned char *, uint64_t))v13)(v11, v5);
}

uint64_t sub_22EC30B30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v26[1] = a1;
  uint64_t v27 = a3;
  uint64_t v29 = a4;
  sub_22EE7DB30();
  uint64_t v6 = sub_22EE7CEE0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v26 - v11;
  unsigned int v28 = sub_22EE7DE60();
  uint64_t v13 = a1 + *(int *)(type metadata accessor for VerticalPickerOptionStack() + 36);
  uint64_t v14 = *(void *)v13;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 8);
  char v16 = *(unsigned char *)(v13 + 9);
  sub_22EADEC74(*(void *)v13, v15, v16);
  sub_22EB15B9C();
  uint64_t v18 = v17;
  char v20 = v19 & 1;
  sub_22EADED40(v14, v15, v16);
  uint64_t v21 = v27;
  sub_22ED423D8(v28, v18, v20, a2, v27);
  unint64_t v22 = sub_22EC37B10();
  uint64_t v30 = v21;
  unint64_t v31 = v22;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_22EB69440(v10, v6, WitnessTable);
  uint64_t v24 = *(void (**)(char *, uint64_t))(v7 + 8);
  v24(v10, v6);
  sub_22EB69440(v12, v6, WitnessTable);
  return ((uint64_t (*)(char *, uint64_t))v24)(v12, v6);
}

uint64_t sub_22EC30D38()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_22EE7DA60();
  OUTLINED_FUNCTION_0_0();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_11_0();
  uint64_t v8 = v7 - v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v7 - v6, v1, v2);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v8, v2) == *MEMORY[0x263F19F08]) {
    return 0x4056000000000000;
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
  return 0;
}

uint64_t sub_22EC30E38@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_22EC30D38();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t type metadata accessor for SubscriptionStorePickerLayoutInternal.SectionView.HorizontalContent()
{
  return swift_getGenericMetadata();
}

uint64_t sub_22EC30E88()
{
  return sub_22EC30F1C((uint64_t (*)(void, void, void, void, void, void, void))sub_22EC2FE20);
}

uint64_t sub_22EC30EA0()
{
  return sub_22EC30F1C((uint64_t (*)(void, void, void, void, void, void, void))sub_22EC2F6B8);
}

unint64_t sub_22EC30EB8()
{
  unint64_t result = qword_268621008;
  if (!qword_268621008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268621008);
  }
  return result;
}

uint64_t sub_22EC30F04()
{
  return sub_22EC30F1C((uint64_t (*)(void, void, void, void, void, void, void))sub_22EC2FD14);
}

uint64_t sub_22EC30F1C(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  return a1(v1[8], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t type metadata accessor for SubscriptionStorePickerLayoutInternal.SectionView()
{
  return swift_getGenericMetadata();
}

unint64_t sub_22EC30F50()
{
  unint64_t result = qword_268621010;
  if (!qword_268621010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268621010);
  }
  return result;
}

unint64_t sub_22EC30F9C()
{
  unint64_t result = qword_268621018;
  if (!qword_268621018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268621018);
  }
  return result;
}

uint64_t sub_22EC30FE8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22EC30768();
  *a1 = result & 1;
  return result;
}

uint64_t sub_22EC31018()
{
  return sub_22EC307A4();
}

unint64_t sub_22EC31040()
{
  unint64_t result = qword_268621020[0];
  if (!qword_268621020[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_268621020);
  }
  return result;
}

ValueMetadata *_s32HorizontalPickerLayoutScrollsKeyOMa()
{
  return &_s32HorizontalPickerLayoutScrollsKeyON;
}

uint64_t sub_22EC3109C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v4 = &v3;
    swift_getTupleTypeLayout3();
    uint64_t v5 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_22EC3116C(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  if ((v6 & 0xFFFFFFFFFFFFFFF8) + 41 <= v6 + 1) {
    unint64_t v7 = v6 + 1;
  }
  else {
    unint64_t v7 = (v6 & 0xFFFFFFFFFFFFFFF8) + 41;
  }
  int v8 = *(_DWORD *)(v5 + 80);
  if ((v8 & 0x1000F8) != 0 || v7 + 1 > 0x18)
  {
    uint64_t v10 = *(void *)a2;
    *uint64_t v4 = *(void *)a2;
    uint64_t v4 = (void *)(v10 + ((unsigned __int16)((v8 & 0xF8) + 23) & (unsigned __int16)~(v8 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    unsigned int v11 = a2[v7];
    if (v11 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v12 = v7;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a2;
          goto LABEL_19;
        case 2:
          int v13 = *(unsigned __int16 *)a2;
          goto LABEL_19;
        case 3:
          int v13 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_19;
        case 4:
          int v13 = *(_DWORD *)a2;
LABEL_19:
          int v14 = (v13 | ((v11 - 2) << (8 * v7))) + 2;
          unsigned int v15 = v13 + 2;
          if (v7 >= 4) {
            unsigned int v11 = v15;
          }
          else {
            unsigned int v11 = v14;
          }
          break;
        default:
          break;
      }
    }
    (*(void (**)(void *, unsigned __int8 *))(v5 + 16))(a1, a2);
    unint64_t v16 = (unint64_t)v4 + v6;
    unint64_t v17 = (unint64_t)&a2[v6];
    if (v11 == 1)
    {
      *(unsigned char *)unint64_t v16 = *(unsigned char *)v17;
      unint64_t v18 = (v17 & 0xFFFFFFFFFFFFFFF8) + 8;
      *(void *)((v16 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)v18;
      unint64_t v19 = (v16 & 0xFFFFFFFFFFFFFFF8) + 8;
      *(void *)((v16 & 0xFFFFFFFFFFFFFFF8) + 16) = *(void *)((v17 & 0xFFFFFFFFFFFFFFF8) + 16);
      int v20 = *(unsigned __int8 *)((v17 & 0xFFFFFFFFFFFFFFF8) + 40);
      swift_retain();
      swift_retain();
      if (v20 == 255)
      {
        long long v21 = *(_OWORD *)(v18 + 16);
        *(unsigned char *)(v19 + 32) = *(unsigned char *)(v18 + 32);
        *(_OWORD *)(v19 + 16) = v21;
      }
      else
      {
        char v22 = v20 & 1;
        uint64_t v23 = *(void *)(v18 + 16);
        uint64_t v24 = *(void *)(v18 + 24);
        sub_22EB0E200(v23, v24, v22);
        *(void *)(v19 + 16) = v23;
        *(void *)(v19 + 24) = v24;
        *(unsigned char *)(v19 + 32) = v22;
      }
      *((unsigned char *)v4 + v7) = 1;
    }
    else
    {
      *(unsigned char *)unint64_t v16 = *(unsigned char *)v17;
      *((unsigned char *)v4 + v7) = 0;
    }
  }
  return v4;
}

uint64_t sub_22EC31380(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if ((v3 & 0xFFFFFFFFFFFFFFF8) + 41 <= v3 + 1) {
    unint64_t v4 = v3 + 1;
  }
  else {
    unint64_t v4 = (v3 & 0xFFFFFFFFFFFFFFF8) + 41;
  }
  unsigned int v5 = a1[v4];
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v6 = v4;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_13;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_13;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_13;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_13:
        int v8 = (v7 | ((v5 - 2) << (8 * v4))) + 2;
        unsigned int v9 = v7 + 2;
        if (v4 >= 4) {
          unsigned int v5 = v9;
        }
        else {
          unsigned int v5 = v8;
        }
        break;
      default:
        break;
    }
  }
  uint64_t result = (*(uint64_t (**)(unsigned __int8 *))(*(void *)(*(void *)(a2 + 16) - 8) + 8))(a1);
  if (v5 == 1)
  {
    unint64_t v11 = (unint64_t)&a1[v3] & 0xFFFFFFFFFFFFFFF8;
    swift_release();
    uint64_t result = swift_release();
    int v12 = *(unsigned __int8 *)(v11 + 40);
    if (v12 != 255)
    {
      uint64_t v13 = *(void *)(v11 + 24);
      uint64_t v14 = *(void *)(v11 + 32);
      return sub_22EADB1A4(v13, v14, v12 & 1);
    }
  }
  return result;
}

uint64_t sub_22EC314F8(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if ((v5 & 0xFFFFFFFFFFFFFFF8) + 41 <= v5 + 1) {
    unint64_t v6 = v5 + 1;
  }
  else {
    unint64_t v6 = (v5 & 0xFFFFFFFFFFFFFFF8) + 41;
  }
  unsigned int v7 = a2[v6];
  if (v7 >= 2)
  {
    if (v6 <= 3) {
      uint64_t v8 = v6;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a2;
        goto LABEL_13;
      case 2:
        int v9 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v9 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v9 = *(_DWORD *)a2;
LABEL_13:
        int v10 = (v9 | ((v7 - 2) << (8 * v6))) + 2;
        unsigned int v11 = v9 + 2;
        if (v6 >= 4) {
          unsigned int v7 = v11;
        }
        else {
          unsigned int v7 = v10;
        }
        break;
      default:
        break;
    }
  }
  (*(void (**)(uint64_t, unsigned __int8 *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1, a2);
  unint64_t v12 = v5 + a1;
  unint64_t v13 = (unint64_t)&a2[v5];
  if (v7 == 1)
  {
    *(unsigned char *)unint64_t v12 = *(unsigned char *)v13;
    unint64_t v14 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
    *(void *)((v12 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)v14;
    unint64_t v15 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
    *(void *)((v12 & 0xFFFFFFFFFFFFFFF8) + 16) = *(void *)((v13 & 0xFFFFFFFFFFFFFFF8) + 16);
    int v16 = *(unsigned __int8 *)((v13 & 0xFFFFFFFFFFFFFFF8) + 40);
    swift_retain();
    swift_retain();
    if (v16 == 255)
    {
      long long v17 = *(_OWORD *)(v14 + 16);
      *(unsigned char *)(v15 + 32) = *(unsigned char *)(v14 + 32);
      *(_OWORD *)(v15 + 16) = v17;
      char v18 = 1;
    }
    else
    {
      char v19 = v16 & 1;
      uint64_t v20 = *(void *)(v14 + 16);
      uint64_t v21 = *(void *)(v14 + 24);
      sub_22EB0E200(v20, v21, v19);
      *(void *)(v15 + 16) = v20;
      *(void *)(v15 + 24) = v21;
      char v18 = 1;
      *(unsigned char *)(v15 + 32) = v19;
    }
  }
  else
  {
    char v18 = 0;
    *(unsigned char *)unint64_t v12 = *(unsigned char *)v13;
  }
  *(unsigned char *)(a1 + v6) = v18;
  return a1;
}

unsigned __int8 *sub_22EC316D0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(void *)(v6 + 64);
    if ((v7 & 0xFFFFFFFFFFFFFFF8) + 41 <= v7 + 1) {
      unint64_t v8 = v7 + 1;
    }
    else {
      unint64_t v8 = (v7 & 0xFFFFFFFFFFFFFFF8) + 41;
    }
    unsigned int v9 = a1[v8];
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v10 = v8;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | ((v9 - 2) << (8 * v8))) + 2;
          unsigned int v13 = v11 + 2;
          if (v8 >= 4) {
            unsigned int v9 = v13;
          }
          else {
            unsigned int v9 = v12;
          }
          break;
        default:
          break;
      }
    }
    (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    if (v9 == 1)
    {
      unint64_t v14 = (unint64_t)&a1[v7] & 0xFFFFFFFFFFFFFFF8;
      swift_release();
      swift_release();
      int v15 = *(unsigned __int8 *)(v14 + 40);
      if (v15 != 255) {
        sub_22EADB1A4(*(void *)(v14 + 24), *(void *)(v14 + 32), v15 & 1);
      }
    }
    unsigned int v16 = a2[v8];
    if (v16 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v17 = v8;
      }
      else {
        uint64_t v17 = 4;
      }
      switch(v17)
      {
        case 1:
          int v18 = *a2;
          goto LABEL_29;
        case 2:
          int v18 = *(unsigned __int16 *)a2;
          goto LABEL_29;
        case 3:
          int v18 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_29;
        case 4:
          int v18 = *(_DWORD *)a2;
LABEL_29:
          int v19 = (v18 | ((v16 - 2) << (8 * v8))) + 2;
          unsigned int v20 = v18 + 2;
          if (v8 >= 4) {
            unsigned int v16 = v20;
          }
          else {
            unsigned int v16 = v19;
          }
          break;
        default:
          break;
      }
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
    unint64_t v21 = (unint64_t)&a1[v7];
    unint64_t v22 = (unint64_t)&a2[v7];
    if (v16 == 1)
    {
      *(unsigned char *)unint64_t v21 = *(unsigned char *)v22;
      unint64_t v23 = (v22 & 0xFFFFFFFFFFFFFFF8) + 8;
      *(void *)((v21 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)v23;
      unint64_t v24 = (v21 & 0xFFFFFFFFFFFFFFF8) + 8;
      *(void *)((v21 & 0xFFFFFFFFFFFFFFF8) + 16) = *(void *)((v22 & 0xFFFFFFFFFFFFFFF8) + 16);
      int v25 = *(unsigned __int8 *)((v22 & 0xFFFFFFFFFFFFFFF8) + 40);
      swift_retain();
      swift_retain();
      if (v25 == 255)
      {
        long long v26 = *(_OWORD *)(v23 + 16);
        *(unsigned char *)(v24 + 32) = *(unsigned char *)(v23 + 32);
        *(_OWORD *)(v24 + 16) = v26;
        char v27 = 1;
      }
      else
      {
        char v28 = v25 & 1;
        uint64_t v29 = *(void *)(v23 + 16);
        uint64_t v30 = *(void *)(v23 + 24);
        sub_22EB0E200(v29, v30, v28);
        *(void *)(v24 + 16) = v29;
        *(void *)(v24 + 24) = v30;
        char v27 = 1;
        *(unsigned char *)(v24 + 32) = v28;
      }
    }
    else
    {
      char v27 = 0;
      *(unsigned char *)unint64_t v21 = *(unsigned char *)v22;
    }
    a1[v8] = v27;
  }
  return a1;
}

uint64_t sub_22EC3199C(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if ((v5 & 0xFFFFFFFFFFFFFFF8) + 41 <= v5 + 1) {
    unint64_t v6 = v5 + 1;
  }
  else {
    unint64_t v6 = (v5 & 0xFFFFFFFFFFFFFFF8) + 41;
  }
  unsigned int v7 = a2[v6];
  if (v7 >= 2)
  {
    if (v6 <= 3) {
      uint64_t v8 = v6;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a2;
        goto LABEL_13;
      case 2:
        int v9 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v9 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v9 = *(_DWORD *)a2;
LABEL_13:
        int v10 = (v9 | ((v7 - 2) << (8 * v6))) + 2;
        unsigned int v11 = v9 + 2;
        if (v6 >= 4) {
          unsigned int v7 = v11;
        }
        else {
          unsigned int v7 = v10;
        }
        break;
      default:
        break;
    }
  }
  (*(void (**)(uint64_t, unsigned __int8 *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1, a2);
  unint64_t v12 = v5 + a1;
  unint64_t v13 = (unint64_t)&a2[v5];
  if (v7 == 1)
  {
    *(unsigned char *)unint64_t v12 = *(unsigned char *)v13;
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFF8;
    long long v15 = *(_OWORD *)((v13 & 0xFFFFFFFFFFFFFFF8) + 8);
    long long v16 = *(_OWORD *)((v13 & 0xFFFFFFFFFFFFFFF8) + 24);
    *(unsigned char *)(v14 + 40) = *(unsigned char *)((v13 & 0xFFFFFFFFFFFFFFF8) + 40);
    *(_OWORD *)(v14 + 24) = v16;
    *(_OWORD *)(v14 + 8) = v15;
    char v17 = 1;
  }
  else
  {
    char v17 = 0;
    *(unsigned char *)unint64_t v12 = *(unsigned char *)v13;
  }
  *(unsigned char *)(a1 + v6) = v17;
  return a1;
}

unsigned __int8 *sub_22EC31B24(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(void *)(v6 + 64);
    if ((v7 & 0xFFFFFFFFFFFFFFF8) + 41 <= v7 + 1) {
      unint64_t v8 = v7 + 1;
    }
    else {
      unint64_t v8 = (v7 & 0xFFFFFFFFFFFFFFF8) + 41;
    }
    unsigned int v9 = a1[v8];
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v10 = v8;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | ((v9 - 2) << (8 * v8))) + 2;
          unsigned int v13 = v11 + 2;
          if (v8 >= 4) {
            unsigned int v9 = v13;
          }
          else {
            unsigned int v9 = v12;
          }
          break;
        default:
          break;
      }
    }
    (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    if (v9 == 1)
    {
      unint64_t v14 = (unint64_t)&a1[v7] & 0xFFFFFFFFFFFFFFF8;
      swift_release();
      swift_release();
      int v15 = *(unsigned __int8 *)(v14 + 40);
      if (v15 != 255) {
        sub_22EADB1A4(*(void *)(v14 + 24), *(void *)(v14 + 32), v15 & 1);
      }
    }
    unsigned int v16 = a2[v8];
    if (v16 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v17 = v8;
      }
      else {
        uint64_t v17 = 4;
      }
      switch(v17)
      {
        case 1:
          int v18 = *a2;
          goto LABEL_29;
        case 2:
          int v18 = *(unsigned __int16 *)a2;
          goto LABEL_29;
        case 3:
          int v18 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_29;
        case 4:
          int v18 = *(_DWORD *)a2;
LABEL_29:
          int v19 = (v18 | ((v16 - 2) << (8 * v8))) + 2;
          unsigned int v20 = v18 + 2;
          if (v8 >= 4) {
            unsigned int v16 = v20;
          }
          else {
            unsigned int v16 = v19;
          }
          break;
        default:
          break;
      }
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
    unint64_t v21 = (unint64_t)&a1[v7];
    unint64_t v22 = (unint64_t)&a2[v7];
    if (v16 == 1)
    {
      *(unsigned char *)unint64_t v21 = *(unsigned char *)v22;
      unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFF8;
      long long v24 = *(_OWORD *)((v22 & 0xFFFFFFFFFFFFFFF8) + 8);
      long long v25 = *(_OWORD *)((v22 & 0xFFFFFFFFFFFFFFF8) + 24);
      *(unsigned char *)(v23 + 40) = *(unsigned char *)((v22 & 0xFFFFFFFFFFFFFFF8) + 40);
      *(_OWORD *)(v23 + 24) = v25;
      *(_OWORD *)(v23 + 8) = v24;
      char v26 = 1;
    }
    else
    {
      char v26 = 0;
      *(unsigned char *)unint64_t v21 = *(unsigned char *)v22;
    }
    a1[v8] = v26;
  }
  return a1;
}

uint64_t sub_22EC31DA0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if ((v3 & 0xFFFFFFFFFFFFFFF8) + 41 <= v3 + 1) {
    unint64_t v4 = v3 + 1;
  }
  else {
    unint64_t v4 = (v3 & 0xFFFFFFFFFFFFFFF8) + 41;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_23;
  }
  unint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 254) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v9 < 2)
    {
LABEL_23:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 2) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_23;
  }
LABEL_15:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 255;
}

void sub_22EC31EDC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if ((v5 & 0xFFFFFFFFFFFFFFF8) + 41 <= v5 + 1) {
    unint64_t v6 = v5 + 1;
  }
  else {
    unint64_t v6 = (v5 & 0xFFFFFFFFFFFFFFF8) + 41;
  }
  size_t v7 = v6 + 1;
  char v8 = 8 * (v6 + 1);
  if (a3 < 0xFF)
  {
    int v9 = 0;
  }
  else if (v7 <= 3)
  {
    unsigned int v12 = ((a3 + ~(-1 << v8) - 254) >> v8) + 1;
    if (HIWORD(v12))
    {
      int v9 = 4;
    }
    else if (v12 >= 0x100)
    {
      int v9 = 2;
    }
    else
    {
      int v9 = v12 > 1;
    }
  }
  else
  {
    int v9 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v10 = a2 - 255;
    if (v7 < 4)
    {
      int v11 = (v10 >> v8) + 1;
      if (v6 != -1)
      {
        int v13 = v10 & ~(-1 << v8);
        bzero(a1, v7);
        if (v7 == 3)
        {
          *(_WORD *)a1 = v13;
          a1[2] = BYTE2(v13);
        }
        else if (v7 == 2)
        {
          *(_WORD *)a1 = v13;
        }
        else
        {
          *a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v6 + 1);
      *(_DWORD *)a1 = v10;
      int v11 = 1;
    }
    switch(v9)
    {
      case 1:
        a1[v7] = v11;
        break;
      case 2:
        *(_WORD *)&a1[v7] = v11;
        break;
      case 3:
LABEL_35:
        __break(1u);
        JUMPOUT(0x22EC320A8);
      case 4:
        *(_DWORD *)&a1[v7] = v11;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v9)
    {
      case 1:
        a1[v7] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_24;
      case 2:
        *(_WORD *)&a1[v7] = 0;
        goto LABEL_23;
      case 3:
        goto LABEL_35;
      case 4:
        *(_DWORD *)&a1[v7] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_24;
      default:
LABEL_23:
        if (a2) {
LABEL_24:
        }
          a1[v6] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_22EC320D0(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if ((v2 & 0xFFFFFFFFFFFFFFF8) + 41 <= v2 + 1) {
    unint64_t v3 = v2 + 1;
  }
  else {
    unint64_t v3 = (v2 & 0xFFFFFFFFFFFFFFF8) + 41;
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_13;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_13;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_13;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_13:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_22EC32190(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (a2 > 1)
  {
    if ((v4 & 0xFFFFFFFFFFFFFFF8) + 41 <= v4 + 1) {
      size_t v6 = v4 + 1;
    }
    else {
      size_t v6 = (v4 & 0xFFFFFFFFFFFFFFF8) + 41;
    }
    unsigned int v7 = a2 - 2;
    if (v6 < 4)
    {
      unsigned int v8 = v7 >> (8 * v6);
      int v9 = v7 & ~(-1 << (8 * v6));
      a1[v6] = v8 + 2;
      bzero(a1, v6);
      if (v6 == 3)
      {
        *(_WORD *)a1 = v9;
        a1[2] = BYTE2(v9);
      }
      else if (v6 == 2)
      {
        *(_WORD *)a1 = v9;
      }
      else
      {
        *a1 = v9;
      }
    }
    else
    {
      a1[v6] = 2;
      bzero(a1, v6);
      *(_DWORD *)a1 = v7;
    }
  }
  else
  {
    if ((v4 & 0xFFFFFFFFFFFFFFF8) + 41 <= v4 + 1) {
      unint64_t v5 = v4 + 1;
    }
    else {
      unint64_t v5 = (v4 & 0xFFFFFFFFFFFFFFF8) + 41;
    }
    a1[v5] = a2;
  }
}

uint64_t type metadata accessor for SubscriptionStorePickerLayoutInternal.LayoutView()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_22EC3229C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_22EC32340(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || (v6 & 0xFFFFFFFFFFFFFFF8) + 41 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(void *, void *))(v5 + 16))(a1, a2);
    *((unsigned char *)v4 + v6) = *((unsigned char *)a2 + v6);
    unint64_t v10 = ((unint64_t)a2 + v6) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v12 = *(void *)(v10 + 8);
    unint64_t v11 = v10 + 8;
    unint64_t v13 = ((unint64_t)v4 + v6) & 0xFFFFFFFFFFFFFFF8;
    *(void *)(v13 + 8) = v12;
    unint64_t v14 = v13 + 8;
    *(void *)(v14 + 8) = *(void *)(v11 + 8);
    int v15 = *(unsigned __int8 *)(v11 + 32);
    swift_retain();
    swift_retain();
    if (v15 == 255)
    {
      long long v16 = *(_OWORD *)(v11 + 16);
      *(unsigned char *)(v14 + 32) = *(unsigned char *)(v11 + 32);
      *(_OWORD *)(v14 + 16) = v16;
    }
    else
    {
      char v17 = v15 & 1;
      uint64_t v18 = *(void *)(v11 + 16);
      uint64_t v19 = *(void *)(v11 + 24);
      sub_22EB0E200(v18, v19, v17);
      *(void *)(v14 + 16) = v18;
      *(void *)(v14 + 24) = v19;
      *(unsigned char *)(v14 + 32) = v17;
    }
  }
  return v4;
}

uint64_t sub_22EC32498(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  unint64_t v4 = (*(void *)(v3 + 56) + a1) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  uint64_t result = swift_release();
  int v6 = *(unsigned __int8 *)(v4 + 40);
  if (v6 != 255)
  {
    uint64_t v7 = *(void *)(v4 + 24);
    uint64_t v8 = *(void *)(v4 + 32);
    return sub_22EADB1A4(v7, v8, v6 & 1);
  }
  return result;
}

uint64_t sub_22EC32530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48);
  unint64_t v7 = v6 + a1;
  unint64_t v8 = v6 + a2;
  *(unsigned char *)unint64_t v7 = *(unsigned char *)v8;
  unint64_t v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
  *(void *)((v7 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)v9;
  unint64_t v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
  *(void *)((v7 & 0xFFFFFFFFFFFFFFF8) + 16) = *(void *)((v8 & 0xFFFFFFFFFFFFFFF8) + 16);
  int v11 = *(unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFF8) + 40);
  swift_retain();
  swift_retain();
  if (v11 == 255)
  {
    long long v12 = *(_OWORD *)(v9 + 16);
    *(unsigned char *)(v10 + 32) = *(unsigned char *)(v9 + 32);
    *(_OWORD *)(v10 + 16) = v12;
  }
  else
  {
    char v13 = v11 & 1;
    uint64_t v14 = *(void *)(v9 + 16);
    uint64_t v15 = *(void *)(v9 + 24);
    sub_22EB0E200(v14, v15, v13);
    *(void *)(v10 + 16) = v14;
    *(void *)(v10 + 24) = v15;
    *(unsigned char *)(v10 + 32) = v13;
  }
  return a1;
}

uint64_t sub_22EC32614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40);
  unint64_t v7 = v6 + a1;
  unint64_t v8 = v6 + a2;
  *(unsigned char *)unint64_t v7 = *(unsigned char *)v8;
  unint64_t v9 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v10 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
  *(void *)unint64_t v9 = *(void *)v10;
  swift_retain();
  swift_release();
  *(void *)(v9 + 8) = *(void *)(v10 + 8);
  swift_retain();
  swift_release();
  int v11 = (long long *)(v9 + 16);
  long long v12 = (long long *)(v10 + 16);
  int v13 = *(unsigned __int8 *)(v10 + 32);
  if (*(unsigned __int8 *)(v9 + 32) == 255)
  {
    if (v13 == 255)
    {
      long long v15 = *v12;
      *(unsigned char *)(v9 + 32) = *(unsigned char *)(v10 + 32);
      *int v11 = v15;
    }
    else
    {
      char v22 = v13 & 1;
      uint64_t v23 = *(void *)(v10 + 16);
      uint64_t v24 = *(void *)(v10 + 24);
      sub_22EB0E200(v23, v24, v13 & 1);
      *(void *)(v9 + 16) = v23;
      *(void *)(v9 + 24) = v24;
      *(unsigned char *)(v9 + 32) = v22;
    }
  }
  else if (v13 == 255)
  {
    sub_22EBA9484(v9 + 16);
    char v14 = *(unsigned char *)(v10 + 32);
    *int v11 = *v12;
    *(unsigned char *)(v9 + 32) = v14;
  }
  else
  {
    char v16 = v13 & 1;
    uint64_t v17 = *(void *)(v10 + 16);
    uint64_t v18 = *(void *)(v10 + 24);
    sub_22EB0E200(v17, v18, v13 & 1);
    uint64_t v19 = *(void *)(v9 + 16);
    uint64_t v20 = *(void *)(v9 + 24);
    char v21 = *(unsigned char *)(v9 + 32);
    *(void *)(v9 + 16) = v17;
    *(void *)(v9 + 24) = v18;
    *(unsigned char *)(v9 + 32) = v16;
    sub_22EADB1A4(v19, v20, v21);
  }
  return a1;
}

uint64_t sub_22EC3276C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
  v7 &= 0xFFFFFFFFFFFFFFF8;
  v8 &= 0xFFFFFFFFFFFFFFF8;
  long long v9 = *(_OWORD *)(v8 + 24);
  char v10 = *(unsigned char *)(v8 + 40);
  *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
  *(unsigned char *)(v7 + 40) = v10;
  *(_OWORD *)(v7 + 24) = v9;
  return a1;
}

uint64_t sub_22EC327FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  unint64_t v7 = v6 + a1;
  unint64_t v8 = v6 + a2;
  *(unsigned char *)unint64_t v7 = *(unsigned char *)v8;
  unint64_t v9 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_release();
  *(void *)(v9 + 8) = *(void *)(v10 + 16);
  swift_release();
  int v11 = (long long *)(v9 + 16);
  long long v12 = (long long *)(v10 + 24);
  int v13 = *(unsigned __int8 *)(v9 + 32);
  if (v13 == 255)
  {
    long long v14 = *v12;
    *(unsigned char *)(v9 + 32) = *(unsigned char *)(v10 + 40);
    *int v11 = v14;
  }
  else
  {
    int v15 = *(unsigned __int8 *)(v10 + 40);
    if (v15 == 255)
    {
      sub_22EBA9484(v9 + 16);
      char v16 = *(unsigned char *)(v10 + 40);
      *int v11 = *v12;
      *(unsigned char *)(v9 + 32) = v16;
    }
    else
    {
      uint64_t v17 = *(void *)(v9 + 16);
      uint64_t v18 = *(void *)(v9 + 24);
      *(_OWORD *)(v9 + 16) = *v12;
      *(unsigned char *)(v9 + 32) = v15 & 1;
      sub_22EADB1A4(v17, v18, v13 & 1);
    }
  }
  return a1;
}

uint64_t sub_22EC32908(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = (v6 & 0xFFFFFFFFFFFFFFF8) + 41;
    unsigned int v9 = (a2 - v7 + 255) >> (8 * v8);
    if (v8 < 4) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      unsigned int v11 = 4;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v10 < 0x100) {
      unsigned int v11 = 1;
    }
    if (v10 >= 2) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    switch(v12)
    {
      case 1:
        int v13 = a1[v8];
        if (!a1[v8]) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v13 = *(unsigned __int16 *)&a1[v8];
        if (*(_WORD *)&a1[v8]) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x22EC32A58);
      case 4:
        int v13 = *(_DWORD *)&a1[v8];
        if (!v13) {
          break;
        }
LABEL_22:
        int v15 = (v13 - 1) << (8 * v8);
        if (v8 >= 4) {
          int v15 = 0;
        }
        if ((v6 & 0xFFFFFFF8) == 0xFFFFFFD8) {
          int v16 = *a1;
        }
        else {
          int v16 = *(_DWORD *)a1;
        }
        return v7 + (v16 | v15) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return __swift_getEnumTagSinglePayload((uint64_t)a1, v5, v4);
  }
  unint64_t v17 = *(void *)(((unint64_t)&a1[v6] & 0xFFFFFFFFFFFFFFF8) + 16);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_22EC32A6C(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  size_t v10 = (v9 & 0xFFFFFFFFFFFFFFF8) + 41;
  char v11 = 8 * v10;
  if (v8 >= a3)
  {
    int v15 = 0;
  }
  else
  {
    unsigned int v12 = (a3 - v8 + 255) >> v11;
    if (v10 <= 3) {
      unsigned int v13 = v12 + 1;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
  }
  if (v8 < a2)
  {
    unsigned int v16 = ~v8 + a2;
    unsigned int v17 = (~(_BYTE)v8 + a2);
    if (v10 < 4) {
      int v18 = (v16 >> v11) + 1;
    }
    else {
      int v18 = 1;
    }
    if (v10 >= 4) {
      unsigned int v19 = v16;
    }
    else {
      unsigned int v19 = v17;
    }
    bzero(a1, v10);
    if (v10 == 1) {
      *a1 = v19;
    }
    else {
      *(_DWORD *)a1 = v19;
    }
    switch(v15)
    {
      case 1:
        a1[v10] = v18;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v18;
        return;
      case 3:
        goto LABEL_46;
      case 4:
        *(_DWORD *)&a1[v10] = v18;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_34;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_34;
    case 3:
LABEL_46:
      __break(1u);
      JUMPOUT(0x22EC32C6CLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_33;
    default:
LABEL_33:
      if (a2)
      {
LABEL_34:
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v20 = (unint64_t)&a1[v9] & 0xFFFFFFFFFFFFFFF8;
          if ((a2 & 0x80000000) != 0)
          {
            *(void *)(v20 + 24) = 0;
            *(void *)(v20 + 32) = 0;
            *(unsigned char *)(v20 + 40) = 0;
            *(void *)(v20 + 8) = a2 ^ 0x80000000;
            *(void *)(v20 + 16) = 0;
          }
          else
          {
            *(void *)(v20 + 16) = (a2 - 1);
          }
        }
        else
        {
          __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v7, v6);
        }
      }
      return;
  }
}

uint64_t sub_22EC32C9C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_22EC32D34(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 10 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v12 = *(void *)v11;
    char v13 = *(unsigned char *)(v11 + 9);
    unsigned __int8 v14 = *(unsigned char *)(v11 + 8);
    sub_22EADEC74(*(void *)v11, v14, v13);
    *(void *)unint64_t v10 = v12;
    *(unsigned char *)(v10 + 8) = v14;
    *(unsigned char *)(v10 + 9) = v13;
  }
  return v4;
}

uint64_t sub_22EC32E54(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  unint64_t v4 = (a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)v4;
  char v6 = *(unsigned char *)(v4 + 9);
  uint64_t v7 = *(unsigned __int8 *)(v4 + 8);

  return sub_22EADED40(v5, v7, v6);
}

uint64_t sub_22EC32ECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)v8;
  LOBYTE(v5) = *(unsigned char *)(v8 + 9);
  unsigned __int8 v10 = *(unsigned char *)(v8 + 8);
  sub_22EADEC74(*(void *)v8, v10, v5);
  *(void *)unint64_t v7 = v9;
  *(unsigned char *)(v7 + 8) = v10;
  *(unsigned char *)(v7 + 9) = v5;
  return a1;
}

uint64_t sub_22EC32F70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)v8;
  LOBYTE(v5) = *(unsigned char *)(v8 + 9);
  unsigned __int8 v10 = *(unsigned char *)(v8 + 8);
  sub_22EADEC74(*(void *)v8, v10, v5);
  uint64_t v11 = *(void *)v7;
  char v12 = *(unsigned char *)(v7 + 9);
  *(void *)unint64_t v7 = v9;
  uint64_t v13 = *(unsigned __int8 *)(v7 + 8);
  *(unsigned char *)(v7 + 8) = v10;
  *(unsigned char *)(v7 + 9) = v5;
  sub_22EADED40(v11, v13, v12);
  return a1;
}

uint64_t sub_22EC33024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  __int16 v9 = *(_WORD *)(v8 + 8);
  *(void *)unint64_t v7 = *(void *)v8;
  *(_WORD *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_22EC330A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)v8;
  char v10 = *(unsigned char *)(v8 + 8);
  LOBYTE(v8) = *(unsigned char *)(v8 + 9);
  uint64_t v11 = *(void *)v7;
  char v12 = *(unsigned char *)(v7 + 9);
  *(void *)unint64_t v7 = v9;
  uint64_t v13 = *(unsigned __int8 *)(v7 + 8);
  *(unsigned char *)(v7 + 8) = v10;
  *(unsigned char *)(v7 + 9) = v8;
  sub_22EADED40(v11, v13, v12);
  return a1;
}

uint64_t sub_22EC33144(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= 0xFE) {
    unsigned int v7 = 254;
  }
  else {
    unsigned int v7 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 10;
    unsigned int v9 = (a2 - v7 + 0xFFFF) >> (8 * v8);
    if (v8 <= 3) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      unsigned int v11 = 4;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v10 < 0x100) {
      unsigned int v11 = 1;
    }
    if (v10 >= 2) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    switch(v12)
    {
      case 1:
        int v13 = *((unsigned __int8 *)a1 + v8);
        if (!*((unsigned char *)a1 + v8)) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v13 = *(unsigned __int16 *)((char *)a1 + v8);
        if (*(unsigned __int16 *)((char *)a1 + v8)) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x22EC33294);
      case 4:
        int v13 = *(_DWORD *)((char *)a1 + v8);
        if (!v13) {
          break;
        }
LABEL_22:
        int v15 = (v13 - 1) << (8 * v8);
        if (v8 <= 3)
        {
          int v16 = *a1;
        }
        else
        {
          int v15 = 0;
          int v16 = *(_DWORD *)a1;
        }
        return v7 + (v16 | v15) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0xFE) {
    return __swift_getEnumTagSinglePayload((uint64_t)a1, v5, v4);
  }
  unsigned int v17 = *(unsigned __int8 *)((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 9);
  if (v17 > 1) {
    return (v17 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

void sub_22EC332A8(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7 <= 0xFE) {
    unsigned int v8 = 254;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 10;
  char v11 = 8 * v10;
  if (v8 >= a3)
  {
    int v15 = 0;
  }
  else
  {
    unsigned int v12 = (a3 - v8 + 0xFFFF) >> v11;
    if (v10 <= 3) {
      unsigned int v13 = v12 + 1;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
  }
  if (v8 < a2)
  {
    unsigned int v16 = ~v8 + a2;
    unsigned int v17 = v16 >> v11;
    bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 10);
    if (v10 <= 3) {
      int v18 = v17 + 1;
    }
    else {
      int v18 = 1;
    }
    if (v10 > 3) {
      *(_DWORD *)a1 = v16;
    }
    else {
      *(_WORD *)a1 = v16;
    }
    switch(v15)
    {
      case 1:
        a1[v10] = v18;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v18;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v18;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_31;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_31;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x22EC334A4);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_30;
    default:
LABEL_30:
      if (a2)
      {
LABEL_31:
        if (v7 < 0xFE)
        {
          unint64_t v19 = (unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8;
          if (a2 > 0xFE)
          {
            *(_WORD *)(v19 + 8) = 0;
            *(void *)unint64_t v19 = (a2 - 255);
          }
          else
          {
            *(unsigned char *)(v19 + 9) = -(char)a2;
          }
        }
        else
        {
          __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v7, v6);
        }
      }
      return;
  }
}

uint64_t sub_22EC334CC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_22EC335E4(uint64_t *a1, uint64_t *a2, void *a3)
{
  unint64_t v3 = a1;
  uint64_t v4 = *(void *)(a3[2] - 8);
  uint64_t v5 = *(void *)(a3[3] - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = *(void *)(v4 + 64) + v6;
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t v9 = a3[4] - 8;
  uint64_t v10 = *(void *)v9;
  int v11 = *(_DWORD *)(*(void *)v9 + 80);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(*(void *)v9 + 64);
  uint64_t v14 = (v6 | *(unsigned char *)(v4 + 80) | v11);
  if (v14 <= 7
    && v13
     + ((v8 + v11 + (v7 & ~(unint64_t)v6)) & ~(unint64_t)v11)
     + 1 <= 0x18
    && ((v6 | *(_DWORD *)(v4 + 80) | v11) & 0x100000) == 0)
  {
    unint64_t v18 = ~(unint64_t)v6;
    uint64_t v26 = a3[3];
    unint64_t v27 = ~(unint64_t)v11;
    uint64_t v28 = a3[4];
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
    unint64_t v20 = ((unint64_t)v3 + v7) & v18;
    unint64_t v21 = ((unint64_t)a2 + v7) & v18;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(v20, v21, v26);
    uint64_t v22 = v8 + v12;
    unint64_t v23 = (v20 + v8 + v12) & ~v12;
    unint64_t v24 = (v21 + v22) & v27;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))(v23, v24, v28);
    *(unsigned char *)(v23 + v13) = *(unsigned char *)(v24 + v13);
  }
  else
  {
    uint64_t v17 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (uint64_t *)(v17 + ((v14 + 16) & ~v14));
    swift_retain();
  }
  return v3;
}

uint64_t sub_22EC33800(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void *)(a2[2] - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(v4 + 56) + a1;
  uint64_t v6 = *(void *)(a2[3] - 8);
  uint64_t v7 = v6 + 8;
  unint64_t v8 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v8);
  uint64_t v9 = *(void *)(a2[4] - 8);
  uint64_t v10 = *(uint64_t (**)(unint64_t))(v9 + 8);
  unint64_t v11 = (v8 + *(void *)(v7 + 56) + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);

  return v10(v11);
}

uint64_t sub_22EC338E8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 16;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 48) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 48);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 16;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v18, v19);
  *(unsigned char *)(*(void *)(v15 + 48) + v18) = *(unsigned char *)(*(void *)(v15 + 48) + v19);
  return a1;
}

uint64_t sub_22EC339FC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 24;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 40) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 40);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 24;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 24))(v18, v19);
  *(unsigned char *)(*(void *)(v15 + 40) + v18) = *(unsigned char *)(*(void *)(v15 + 40) + v19);
  return a1;
}

uint64_t sub_22EC33B10(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 32;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 32) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 32);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 32;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 32))(v18, v19);
  *(unsigned char *)(*(void *)(v15 + 32) + v18) = *(unsigned char *)(*(void *)(v15 + 32) + v19);
  return a1;
}

uint64_t sub_22EC33C24(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(a3[2] - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3[3] - 8);
  uint64_t v8 = v7 + 40;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v6 + 24) + v9;
  uint64_t v11 = (v10 + a1) & ~v9;
  uint64_t v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v11, v12);
  uint64_t v13 = *(void *)(v8 + 24);
  uint64_t v14 = *(void *)(a3[4] - 8);
  uint64_t v15 = v14 + 40;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v13 + v16;
  uint64_t v18 = (v17 + v11) & ~v16;
  uint64_t v19 = (v17 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 40))(v18, v19);
  *(unsigned char *)(*(void *)(v15 + 24) + v18) = *(unsigned char *)(*(void *)(v15 + 24) + v19);
  return a1;
}

uint64_t sub_22EC33D38(unsigned __int16 *a1, unsigned int a2, void *a3)
{
  uint64_t v7 = a3[2];
  uint64_t v6 = a3[3];
  unsigned int v8 = *(_DWORD *)(*(void *)(v7 - 8) + 84);
  uint64_t v9 = *(void *)(v6 - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  uint64_t v11 = a3[4];
  uint64_t v12 = *(void *)(v11 - 8);
  if (v10 <= v8) {
    unsigned int v13 = *(_DWORD *)(*(void *)(v7 - 8) + 84);
  }
  else {
    unsigned int v13 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v14 = *(unsigned int *)(v12 + 84);
  if (v14 <= v13) {
    unsigned int v15 = v13;
  }
  else {
    unsigned int v15 = *(_DWORD *)(v12 + 84);
  }
  uint64_t v16 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v17 = *(void *)(*(void *)(v6 - 8) + 64);
  uint64_t v18 = *(unsigned __int8 *)(*(void *)(v11 - 8) + 80);
  uint64_t v19 = *(void *)(v12 + 64);
  if (v15 <= 0xFD) {
    unsigned int v20 = 253;
  }
  else {
    unsigned int v20 = v15;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v21 = *(void *)(*(void *)(v7 - 8) + 64) + v16;
  int v22 = a2 - v20;
  if (a2 <= v20) {
    goto LABEL_31;
  }
  uint64_t v23 = v19 + ((v17 + v18 + (v21 & ~v16)) & ~v18) + 1;
  char v24 = 8 * v23;
  if (v23 > 3) {
    goto LABEL_13;
  }
  unsigned int v27 = ((v22 + ~(-1 << v24)) >> v24) + 1;
  if (HIWORD(v27))
  {
    int v25 = *(_DWORD *)((char *)a1 + v23);
    if (v25) {
      goto LABEL_21;
    }
  }
  else
  {
    if (v27 <= 0xFF)
    {
      if (v27 < 2) {
        goto LABEL_31;
      }
LABEL_13:
      int v25 = *((unsigned __int8 *)a1 + v23);
      if (!*((unsigned char *)a1 + v23)) {
        goto LABEL_31;
      }
LABEL_21:
      int v28 = (v25 - 1) << v24;
      if (v23 > 3) {
        int v28 = 0;
      }
      if (v19 + ((v17 + v18 + (v21 & ~v16)) & ~v18) == -1)
      {
        int v30 = 0;
      }
      else
      {
        if (v23 <= 3) {
          int v29 = v19 + ((v17 + v18 + (v21 & ~v16)) & ~v18) + 1;
        }
        else {
          int v29 = 4;
        }
        switch(v29)
        {
          case 2:
            int v30 = *a1;
            break;
          case 3:
            int v30 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            int v30 = *(_DWORD *)a1;
            break;
          default:
            int v30 = *(unsigned __int8 *)a1;
            break;
        }
      }
      return v20 + (v30 | v28) + 1;
    }
    int v25 = *(unsigned __int16 *)((char *)a1 + v23);
    if (*(unsigned __int16 *)((char *)a1 + v23)) {
      goto LABEL_21;
    }
  }
LABEL_31:
  if (v8 == v20)
  {
    uint64_t v10 = *(unsigned int *)(*(void *)(v7 - 8) + 84);
    uint64_t v6 = v7;
LABEL_36:
    return __swift_getEnumTagSinglePayload((uint64_t)a1, v10, v6);
  }
  a1 = (unsigned __int16 *)(((unint64_t)a1 + v21) & ~v16);
  if (v10 == v20) {
    goto LABEL_36;
  }
  a1 = (unsigned __int16 *)(((unint64_t)a1 + v17 + v18) & ~v18);
  if (v14 == v20)
  {
    uint64_t v10 = v14;
    uint64_t v6 = v11;
    goto LABEL_36;
  }
  unsigned int v31 = *((unsigned __int8 *)a1 + v19);
  BOOL v32 = v31 >= 2;
  unsigned int v33 = v31 - 2;
  if (!v32) {
    unsigned int v33 = -1;
  }
  if (v33 + 1 >= 2) {
    return v33;
  }
  else {
    return 0;
  }
}

void sub_22EC33FE8(char *a1, uint64_t a2, unsigned int a3, void *a4)
{
  uint64_t v6 = a1;
  uint64_t v7 = a4[2];
  uint64_t v8 = *(unsigned int *)(*(void *)(v7 - 8) + 84);
  uint64_t v9 = a4[3];
  uint64_t v10 = a4[4];
  uint64_t v11 = *(void *)(v9 - 8);
  uint64_t v12 = *(unsigned int *)(v11 + 84);
  if (v12 <= v8) {
    unsigned int v13 = *(_DWORD *)(*(void *)(v7 - 8) + 84);
  }
  else {
    unsigned int v13 = *(_DWORD *)(v11 + 84);
  }
  uint64_t v14 = *(void *)(v10 - 8);
  uint64_t v15 = *(unsigned int *)(v14 + 84);
  if (v15 <= v13) {
    unsigned int v16 = v13;
  }
  else {
    unsigned int v16 = *(_DWORD *)(v14 + 84);
  }
  if (v16 <= 0xFD) {
    unsigned int v17 = 253;
  }
  else {
    unsigned int v17 = v16;
  }
  uint64_t v18 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v19 = *(void *)(*(void *)(v7 - 8) + 64) + v18;
  uint64_t v20 = *(void *)(*(void *)(v9 - 8) + 64);
  uint64_t v21 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v22 = (v20 + v21 + (v19 & ~v18)) & ~v21;
  uint64_t v23 = *(void *)(*(void *)(v10 - 8) + 64);
  uint64_t v24 = v23 + v22 + 1;
  char v25 = 8 * v24;
  BOOL v26 = a3 >= v17;
  unsigned int v27 = a3 - v17;
  if (v27 != 0 && v26)
  {
    if (v24 <= 3)
    {
      unsigned int v31 = ((v27 + ~(-1 << v25)) >> v25) + 1;
      if (HIWORD(v31))
      {
        int v28 = 4;
      }
      else if (v31 >= 0x100)
      {
        int v28 = 2;
      }
      else
      {
        int v28 = v31 > 1;
      }
    }
    else
    {
      int v28 = 1;
    }
  }
  else
  {
    int v28 = 0;
  }
  if (v17 < a2)
  {
    unsigned int v29 = ~v17 + a2;
    if (v24 < 4)
    {
      int v30 = (v29 >> v25) + 1;
      if (v23 + v22 != -1)
      {
        int v32 = v29 & ~(-1 << v25);
        bzero(a1, v23 + v22 + 1);
        if (v24 == 3)
        {
          *(_WORD *)uint64_t v6 = v32;
          v6[2] = BYTE2(v32);
        }
        else if (v24 == 2)
        {
          *(_WORD *)uint64_t v6 = v32;
        }
        else
        {
          *uint64_t v6 = v32;
        }
      }
    }
    else
    {
      bzero(a1, v23 + v22 + 1);
      *(_DWORD *)uint64_t v6 = v29;
      int v30 = 1;
    }
    switch(v28)
    {
      case 1:
        v6[v24] = v30;
        return;
      case 2:
        *(_WORD *)&v6[v24] = v30;
        return;
      case 3:
        goto LABEL_49;
      case 4:
        *(_DWORD *)&v6[v24] = v30;
        return;
      default:
        return;
    }
  }
  switch(v28)
  {
    case 1:
      a1[v24] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 2:
      *(_WORD *)&a1[v24] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 3:
LABEL_49:
      __break(1u);
      JUMPOUT(0x22EC3431CLL);
    case 4:
      *(_DWORD *)&a1[v24] = 0;
      goto LABEL_29;
    default:
LABEL_29:
      if (!a2) {
        return;
      }
LABEL_30:
      if (v8 == v17) {
        goto LABEL_38;
      }
      a1 = (char *)((unint64_t)&a1[v19] & ~v18);
      if (v12 == v17)
      {
        uint64_t v8 = v12;
        uint64_t v7 = v9;
      }
      else
      {
        a1 = (char *)((unint64_t)&a1[v20 + v21] & ~v21);
        if (v15 != v17)
        {
          a1[v23] = a2 + 2;
          return;
        }
        uint64_t v8 = v15;
        uint64_t v7 = v10;
      }
LABEL_38:
      __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v8, v7);
      return;
  }
}

uint64_t sub_22EC34344()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_22EC343DC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v12 = *(void *)v11;
    char v13 = *(unsigned char *)(v11 + 8);
    sub_22EADDF00(*(void *)v11, v13);
    *(void *)unint64_t v10 = v12;
    *(unsigned char *)(v10 + 8) = v13;
  }
  return v4;
}

uint64_t sub_22EC344E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 24) - 8) + 8;
  (*(void (**)(void))v3)();
  unint64_t v4 = (a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)v4;
  char v6 = *(unsigned char *)(v4 + 8);

  return sub_22EADDB08(v5, v6);
}

uint64_t sub_22EC3455C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)v8;
  LOBYTE(v5) = *(unsigned char *)(v8 + 8);
  sub_22EADDF00(*(void *)v8, v5);
  *(void *)unint64_t v7 = v9;
  *(unsigned char *)(v7 + 8) = v5;
  return a1;
}

uint64_t sub_22EC345EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)v8;
  LOBYTE(v5) = *(unsigned char *)(v8 + 8);
  sub_22EADDF00(*(void *)v8, v5);
  uint64_t v10 = *(void *)v7;
  char v11 = *(unsigned char *)(v7 + 8);
  *(void *)unint64_t v7 = v9;
  *(unsigned char *)(v7 + 8) = v5;
  sub_22EADDB08(v10, v11);
  return a1;
}

uint64_t sub_22EC34688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  char v9 = *(unsigned char *)(v8 + 8);
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_22EC3470C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)v8;
  LOBYTE(v8) = *(unsigned char *)(v8 + 8);
  uint64_t v10 = *(void *)v7;
  char v11 = *(unsigned char *)(v7 + 8);
  *(void *)unint64_t v7 = v9;
  *(unsigned char *)(v7 + 8) = v8;
  sub_22EADDB08(v10, v11);
  return a1;
}

uint64_t sub_22EC3479C(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= 0xFE) {
    unsigned int v7 = 254;
  }
  else {
    unsigned int v7 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
    unsigned int v9 = (a2 - v7 + 255) >> (8 * v8);
    if (v8 < 4) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      unsigned int v11 = 4;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v10 < 0x100) {
      unsigned int v11 = 1;
    }
    if (v10 >= 2) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    switch(v12)
    {
      case 1:
        int v13 = a1[v8];
        if (!a1[v8]) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v13 = *(unsigned __int16 *)&a1[v8];
        if (*(_WORD *)&a1[v8]) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x22EC348ECLL);
      case 4:
        int v13 = *(_DWORD *)&a1[v8];
        if (!v13) {
          break;
        }
LABEL_22:
        int v15 = (v13 - 1) << (8 * v8);
        if (v8 >= 4) {
          int v15 = 0;
        }
        if (((v6 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
          int v16 = *a1;
        }
        else {
          int v16 = *(_DWORD *)a1;
        }
        return v7 + (v16 | v15) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0xFE) {
    return __swift_getEnumTagSinglePayload((uint64_t)a1, v5, v4);
  }
  unsigned int v17 = *(unsigned __int8 *)(((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v17 > 1) {
    return (v17 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

void sub_22EC34900(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 24);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7 <= 0xFE) {
    unsigned int v8 = 254;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  size_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  char v11 = 8 * v10;
  if (v8 >= a3)
  {
    int v15 = 0;
  }
  else
  {
    unsigned int v12 = (a3 - v8 + 255) >> v11;
    if (v10 <= 3) {
      unsigned int v13 = v12 + 1;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
  }
  if (v8 < a2)
  {
    unsigned int v16 = ~v8 + a2;
    unsigned int v17 = (~(_BYTE)v8 + a2);
    if (v10 < 4) {
      int v18 = (v16 >> v11) + 1;
    }
    else {
      int v18 = 1;
    }
    if (v10 >= 4) {
      unsigned int v19 = v16;
    }
    else {
      unsigned int v19 = v17;
    }
    bzero(a1, v10);
    if (v10 == 1) {
      *a1 = v19;
    }
    else {
      *(_DWORD *)a1 = v19;
    }
    switch(v15)
    {
      case 1:
        a1[v10] = v18;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v18;
        return;
      case 3:
        goto LABEL_46;
      case 4:
        *(_DWORD *)&a1[v10] = v18;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_34;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_34;
    case 3:
LABEL_46:
      __break(1u);
      JUMPOUT(0x22EC34B04);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_33;
    default:
LABEL_33:
      if (a2)
      {
LABEL_34:
        if (v7 < 0xFE)
        {
          unint64_t v20 = (unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8;
          if (a2 > 0xFE)
          {
            *(unsigned char *)(v20 + 8) = 0;
            *(void *)unint64_t v20 = (a2 - 255);
          }
          else
          {
            *(unsigned char *)(v20 + 8) = -(char)a2;
          }
        }
        else
        {
          __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v7, v6);
        }
      }
      return;
  }
}

ValueMetadata *type metadata accessor for HStackSectionAccessoryStyle()
{
  return &type metadata for HStackSectionAccessoryStyle;
}

ValueMetadata *type metadata accessor for VStackFooterStyle()
{
  return &type metadata for VStackFooterStyle;
}

ValueMetadata *type metadata accessor for VStackHeaderStyle()
{
  return &type metadata for VStackHeaderStyle;
}

uint64_t sub_22EC34B5C()
{
  return swift_getWitnessTable();
}

uint64_t sub_22EC34C78()
{
  return swift_getWitnessTable();
}

uint64_t sub_22EC34E94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(a1 + 24);
  type metadata accessor for HorizontalPickerOptionStack.FlexibleContent();
  type metadata accessor for HorizontalPickerOptionStack.ScrollingContent();
  swift_getTupleTypeMetadata2();
  sub_22EE7EE20();
  swift_getWitnessTable();
  uint64_t v4 = sub_22EE7C990();
  uint64_t v21 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v20 - v5;
  sub_22EE7DB30();
  uint64_t v7 = sub_22EE7CEE0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  char v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  unsigned int v13 = (char *)&v20 - v12;
  sub_22EE7DE20();
  uint64_t v24 = v3;
  uint64_t v25 = v2;
  uint64_t v26 = v22;
  sub_22EE7C980();
  uint64_t v14 = sub_22EE7DE60();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_22ED423D8(v14, 0, 1, v4, WitnessTable);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v4);
  unint64_t v16 = sub_22EC37B10();
  uint64_t v27 = WitnessTable;
  unint64_t v28 = v16;
  uint64_t v17 = swift_getWitnessTable();
  sub_22EB69440(v11, v7, v17);
  int v18 = *(void (**)(char *, uint64_t))(v8 + 8);
  v18(v11, v7);
  sub_22EB69440(v13, v7, v17);
  return ((uint64_t (*)(char *, uint64_t))v18)(v13, v7);
}

uint64_t sub_22EC3518C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v34 = a3;
  uint64_t v30 = type metadata accessor for HorizontalPickerOptionStack.ScrollingContent();
  uint64_t v33 = *(void *)(v30 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v30);
  unsigned int v31 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  int v32 = (char *)&v27 - v8;
  uint64_t v9 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v7);
  char v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for HorizontalPickerOptionStack.FlexibleContent();
  uint64_t v36 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  int v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v35 = (char *)&v27 - v16;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v17(v11, a1, a2);
  int v18 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v18(v15, v11, a2);
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_22EB69440(v15, v12, WitnessTable);
  unsigned int v29 = *(void (**)(char *, uint64_t))(v36 + 8);
  v29(v15, v12);
  v17(v11, a1, a2);
  unsigned int v19 = v31;
  v18(v31, v11, a2);
  uint64_t v20 = v30;
  uint64_t v21 = swift_getWitnessTable();
  uint64_t v22 = v32;
  sub_22EB69440(v19, v20, v21);
  uint64_t v23 = v33;
  uint64_t v24 = *(void (**)(char *, uint64_t))(v33 + 8);
  v24(v19, v20);
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v15, v35, v12);
  v40[0] = v15;
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v19, v22, v20);
  v40[1] = v19;
  v39[0] = v12;
  v39[1] = v20;
  uint64_t v37 = WitnessTable;
  uint64_t v38 = v21;
  sub_22ED82348((uint64_t)v40, 2, (uint64_t)v39);
  v24(v22, v20);
  uint64_t v25 = (uint64_t (*)(char *, uint64_t))v29;
  v29(v35, v12);
  v24(v19, v20);
  return v25(v15, v12);
}

uint64_t sub_22EC35568()
{
  return sub_22EE7D530();
}

uint64_t sub_22EC35588@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v33 = a2;
  uint64_t v3 = sub_22EE7DC20();
  uint64_t v31 = *(void *)(v3 - 8);
  uint64_t v32 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v30 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621500);
  uint64_t v27 = *(void *)(a1 + 16);
  sub_22EADDD7C(&qword_268621508, &qword_268621500);
  sub_22EE7CBE0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621510);
  sub_22EE7CEE0();
  swift_getTupleTypeMetadata2();
  v24[1] = sub_22EE7EE20();
  uint64_t v5 = sub_22EE7E8A0();
  uint64_t v25 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v24 - v6;
  uint64_t v8 = sub_22EE7CEE0();
  uint64_t v26 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v24 - v9;
  v24[0] = swift_getWitnessTable();
  uint64_t v41 = v24[0];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v40 = MEMORY[0x263F190E0];
  uint64_t v11 = swift_getWitnessTable();
  uint64_t v37 = v8;
  uint64_t v38 = v11;
  v24[2] = MEMORY[0x263F1AE68];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v13 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  int v18 = (char *)v24 - v17;
  uint64_t v19 = *(void *)(v28 + 24);
  uint64_t v34 = v27;
  uint64_t v35 = v19;
  uint64_t v36 = v29;
  sub_22EE7E890();
  sub_22EE7E700();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v5);
  uint64_t v20 = v30;
  sub_22EE7DC10();
  sub_22EE7E410();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v20, v32);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v8);
  uint64_t v37 = v8;
  uint64_t v38 = v11;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_22EB69440(v16, OpaqueTypeMetadata2, OpaqueTypeConformance2);
  uint64_t v22 = *(void (**)(char *, uint64_t))(v13 + 8);
  v22(v16, OpaqueTypeMetadata2);
  sub_22EB69440(v18, OpaqueTypeMetadata2, OpaqueTypeConformance2);
  return ((uint64_t (*)(char *, uint64_t))v22)(v18, OpaqueTypeMetadata2);
}

uint64_t sub_22EC35A60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v48 = a4;
  uint64_t v7 = sub_22EE7DA60();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621500);
  sub_22EADDD7C(&qword_268621508, &qword_268621500);
  uint64_t v11 = sub_22EE7CBE0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621510);
  uint64_t v12 = sub_22EE7CEE0();
  uint64_t v47 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v43 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v44 = (char *)&v40 - v16;
  uint64_t v46 = *(void *)(v11 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v45 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v49 = (char *)&v40 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v40 - v21;
  uint64_t v57 = sub_22EC35568();
  uint64_t v58 = v23;
  char v59 = v24 & 1;
  uint64_t v51 = a2;
  uint64_t v52 = a3;
  uint64_t v53 = a1;
  unint64_t v25 = sub_22EB27FDC();
  sub_22EB25A10((uint64_t)sub_22EC387A8, (uint64_t)v50, MEMORY[0x263F18750], a2, v25, a3, (uint64_t)v22);
  v56[4] = sub_22EADDD7C(&qword_268621518, &qword_268621500);
  v56[5] = a3;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v27 = v22;
  uint64_t v42 = v22;
  uint64_t v28 = WitnessTable;
  sub_22EB69440(v27, v11, WitnessTable);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F19F00], v7);
  uint64_t v29 = v43;
  uint64_t v41 = v28;
  sub_22EDC77E4();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v30 = sub_22EADDD7C(&qword_268621520, &qword_268621510);
  v56[2] = v28;
  void v56[3] = v30;
  uint64_t v31 = v12;
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v33 = v44;
  sub_22EB69440(v29, v12, v32);
  uint64_t v34 = v47;
  uint64_t v35 = *(void (**)(char *, uint64_t))(v47 + 8);
  v35(v29, v12);
  uint64_t v36 = v46;
  uint64_t v37 = v45;
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v45, v49, v11);
  uint64_t v57 = (uint64_t)v37;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v29, v33, v31);
  uint64_t v58 = v29;
  v56[0] = v11;
  v56[1] = v31;
  uint64_t v54 = v41;
  uint64_t v55 = v32;
  sub_22ED82348((uint64_t)&v57, 2, (uint64_t)v56);
  v35(v33, v31);
  uint64_t v38 = *(void (**)(char *, uint64_t))(v36 + 8);
  v38(v49, v11);
  v38(v42, v11);
  v35(v29, v31);
  return ((uint64_t (*)(char *, uint64_t))v38)(v37, v11);
}

uint64_t sub_22EC35F98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22EB69440(v6, v9, v10);
  sub_22EB69440(v8, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, a2);
}

uint64_t sub_22EC36078@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v3 = sub_22EE7DBD0();
  uint64_t v38 = *(void *)(v3 - 8);
  uint64_t v39 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v37 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621500);
  uint64_t v35 = *(void *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861F1C8);
  sub_22EE7CEE0();
  sub_22EADDD7C(&qword_268621508, &qword_268621500);
  sub_22EE7CBE0();
  sub_22EE7CEE0();
  uint64_t v5 = sub_22EE7CEE0();
  uint64_t v6 = sub_22EADDD7C(&qword_268621518, &qword_268621500);
  uint64_t v34 = *(void *)(a1 + 24);
  uint64_t v7 = v34;
  uint64_t v8 = sub_22EADDD7C((unint64_t *)&qword_26861F1D0, &qword_26861F1C8);
  uint64_t v52 = v7;
  uint64_t v53 = v8;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v50 = v6;
  uint64_t v51 = WitnessTable;
  uint64_t v48 = swift_getWitnessTable();
  uint64_t v49 = MEMORY[0x263F190E0];
  uint64_t v46 = swift_getWitnessTable();
  uint64_t v47 = v8;
  uint64_t v32 = v5;
  uint64_t v31 = swift_getWitnessTable();
  uint64_t v10 = sub_22EE7C700();
  uint64_t v33 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v29 - v11;
  uint64_t v13 = swift_getWitnessTable();
  uint64_t v44 = v10;
  uint64_t v45 = v13;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v30 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v16 = (char *)&v29 - v15;
  uint64_t v44 = v10;
  uint64_t v45 = v13;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v44 = OpaqueTypeMetadata2;
  uint64_t v45 = OpaqueTypeConformance2;
  uint64_t v29 = MEMORY[0x263F1AC20];
  uint64_t v18 = swift_getOpaqueTypeMetadata2();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v29 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  char v24 = (char *)&v29 - v23;
  sub_22EE7DE20();
  uint64_t v41 = v35;
  uint64_t v42 = v34;
  uint64_t v43 = v36;
  sub_22EC2D248();
  sub_22EE7E3E0();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v10);
  unint64_t v25 = v37;
  sub_22EE7D860();
  sub_22EC2D260();
  sub_22EE7E3A0();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v25, v39);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v16, OpaqueTypeMetadata2);
  uint64_t v44 = OpaqueTypeMetadata2;
  uint64_t v45 = OpaqueTypeConformance2;
  uint64_t v26 = swift_getOpaqueTypeConformance2();
  sub_22EB69440(v22, v18, v26);
  uint64_t v27 = *(void (**)(char *, uint64_t))(v19 + 8);
  v27(v22, v18);
  sub_22EB69440(v24, v18, v26);
  return ((uint64_t (*)(char *, uint64_t))v27)(v24, v18);
}

uint64_t sub_22EC36644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v35 = a4;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621500);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861F1C8);
  uint64_t v6 = sub_22EE7CEE0();
  sub_22EADDD7C(&qword_268621508, &qword_268621500);
  uint64_t v7 = sub_22EE7CBE0();
  uint64_t v32 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v28 - v8;
  uint64_t v10 = sub_22EE7CEE0();
  uint64_t v33 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v28 - v11;
  uint64_t v13 = sub_22EE7CEE0();
  uint64_t v34 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v29 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v31 = (char *)&v28 - v16;
  uint64_t v48 = sub_22EC35568();
  uint64_t v49 = v17;
  char v50 = v18 & 1;
  uint64_t v37 = a2;
  uint64_t v38 = a3;
  uint64_t v39 = v30;
  unint64_t v19 = sub_22EB27FDC();
  uint64_t v30 = sub_22EADDD7C((unint64_t *)&qword_26861F1D0, &qword_26861F1C8);
  uint64_t v46 = a3;
  uint64_t v47 = v30;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_22EB25A10((uint64_t)sub_22EC387C0, (uint64_t)v36, MEMORY[0x263F18750], v6, v19, WitnessTable, (uint64_t)v9);
  uint64_t v44 = sub_22EADDD7C(&qword_268621518, &qword_268621500);
  uint64_t v45 = WitnessTable;
  uint64_t v21 = swift_getWitnessTable();
  sub_22EE7E700();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v7);
  uint64_t v42 = v21;
  uint64_t v43 = MEMORY[0x263F190E0];
  uint64_t v22 = swift_getWitnessTable();
  uint64_t v23 = v29;
  sub_22EDC7858();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v10);
  uint64_t v40 = v22;
  uint64_t v41 = v30;
  uint64_t v24 = swift_getWitnessTable();
  unint64_t v25 = v31;
  sub_22EB69440(v23, v13, v24);
  uint64_t v26 = *(void (**)(char *, uint64_t))(v34 + 8);
  v26(v23, v13);
  sub_22EB69440(v25, v13, v24);
  return ((uint64_t (*)(char *, uint64_t))v26)(v25, v13);
}

uint64_t sub_22EC36AD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v21[0] = a4;
  uint64_t v7 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861F1C8);
  uint64_t v10 = sub_22EE7CEE0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v21 - v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, a2);
  swift_getKeyPath();
  char v22 = 1;
  sub_22EE7E220();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, a2);
  uint64_t v17 = sub_22EADDD7C((unint64_t *)&qword_26861F1D0, &qword_26861F1C8);
  v21[1] = a3;
  v21[2] = v17;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_22EB69440(v14, v10, WitnessTable);
  unint64_t v19 = *(void (**)(char *, uint64_t))(v11 + 8);
  v19(v14, v10);
  sub_22EB69440(v16, v10, WitnessTable);
  return ((uint64_t (*)(char *, uint64_t))v19)(v16, v10);
}

__n128 sub_22EC36D4C@<Q0>(__n128 *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(qword_26861F078);
  sub_22EE7EB60();
  __n128 result = v5;
  a1->n128_u64[0] = v3;
  a1->n128_u64[1] = v4;
  a1[1] = v5;
  a1[2].n128_u8[0] = v6;
  return result;
}

uint64_t sub_22EC36DCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v47 = a2;
  unint64_t v5 = *(void *)(a1 + 16);
  unint64_t v39 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861F120);
  uint64_t v41 = *(void *)(a1 + 24);
  uint64_t v10 = v41;
  unint64_t v40 = sub_22EC37A90();
  v54.n128_u64[0] = v5;
  v54.n128_u64[1] = v9;
  uint64_t v55 = v10;
  unint64_t v56 = v40;
  uint64_t v11 = type metadata accessor for PageView();
  uint64_t v43 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v36 - v12;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861C6F8);
  uint64_t v14 = sub_22EE7CEE0();
  uint64_t v44 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v36 = (char *)&v36 - v15;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861CA88);
  uint64_t v16 = sub_22EE7CEE0();
  uint64_t v45 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v37 = (char *)&v36 - v17;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861F1C8);
  uint64_t v18 = sub_22EE7CEE0();
  uint64_t v46 = *(void *)(v18 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v38 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v42 = (char *)&v36 - v21;
  (*(void (**)(char *, uint64_t, unint64_t))(v6 + 16))(v8, v3, v39);
  uint64_t KeyPath = swift_getKeyPath();
  LOBYTE(v3) = *(unsigned char *)(v3 + *(int *)(a1 + 36));
  sub_22EC36D4C(&v54);
  sub_22EAF0D84(KeyPath, v3, (uint64_t)&v54, (uint64_t)v13);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v24 = v36;
  sub_22EAFE0AC(1);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v13, v11);
  uint64_t v25 = sub_22EADDD7C(&qword_26861C710, &qword_26861C6F8);
  uint64_t v52 = WitnessTable;
  uint64_t v53 = v25;
  uint64_t v26 = swift_getWitnessTable();
  uint64_t v27 = v37;
  sub_22ECC1B48(8);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v24, v14);
  uint64_t v28 = sub_22EADDD7C(&qword_26861CA80, &qword_26861CA88);
  uint64_t v50 = v26;
  uint64_t v51 = v28;
  uint64_t v29 = swift_getWitnessTable();
  uint64_t v30 = v38;
  sub_22EBFB5AC();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v27, v16);
  uint64_t v31 = sub_22EADDD7C((unint64_t *)&qword_26861F1D0, &qword_26861F1C8);
  uint64_t v48 = v29;
  uint64_t v49 = v31;
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v33 = v42;
  sub_22EB69440(v30, v18, v32);
  uint64_t v34 = *(void (**)(char *, uint64_t))(v46 + 8);
  v34(v30, v18);
  sub_22EB69440(v33, v18, v32);
  return ((uint64_t (*)(char *, uint64_t))v34)(v33, v18);
}

uint64_t sub_22EC37364@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_22EE04BF0();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  return result;
}

uint64_t sub_22EC3739C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621330);
  uint64_t v5 = v4 - 8;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621338);
  uint64_t v9 = v8 - 8;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_22EE7E040();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621340);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v7, a1, v14);
  uint64_t v15 = (uint64_t *)&v7[*(int *)(v5 + 44)];
  *uint64_t v15 = KeyPath;
  v15[1] = v12;
  LODWORD(a1) = sub_22EE7DA00();
  sub_22EB31AAC((uint64_t)v7, (uint64_t)v11, &qword_268621330);
  *(_DWORD *)&v11[*(int *)(v9 + 44)] = a1;
  sub_22EADD81C((uint64_t)v7, &qword_268621330);
  sub_22EB31AAC((uint64_t)v11, a2, &qword_268621338);
  return sub_22EADD81C((uint64_t)v11, &qword_268621338);
}

uint64_t sub_22EC37534@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621348);
  uint64_t v5 = v4 - 8;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621350);
  uint64_t v9 = v8 - 8;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_22EE7DF00();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621358);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v7, a1, v14);
  uint64_t v15 = (uint64_t *)&v7[*(int *)(v5 + 44)];
  *uint64_t v15 = KeyPath;
  v15[1] = v12;
  LODWORD(a1) = sub_22EE7DA20();
  sub_22EB31AAC((uint64_t)v7, (uint64_t)v11, &qword_268621348);
  *(_DWORD *)&v11[*(int *)(v9 + 44)] = a1;
  sub_22EADD81C((uint64_t)v7, &qword_268621348);
  sub_22EB31AAC((uint64_t)v11, a2, &qword_268621350);
  return sub_22EADD81C((uint64_t)v11, &qword_268621350);
}

uint64_t sub_22EC376CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a1;
  uint64_t v19 = a2;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621360);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621368);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621370);
  uint64_t v10 = v9 - 8;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_22EE7DF10();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621378);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v4, v18, v15);
  uint64_t v16 = (uint64_t *)&v4[*(int *)(v2 + 36)];
  *uint64_t v16 = KeyPath;
  v16[1] = v13;
  sub_22EE7DF50();
  sub_22EC382EC(&qword_268621380, &qword_268621360, qword_268621388, &qword_268621378);
  sub_22EE7E1B0();
  sub_22EADD81C((uint64_t)v4, &qword_268621360);
  LODWORD(v13) = sub_22EE7DA00();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v12, v8, v5);
  *(_DWORD *)&v12[*(int *)(v10 + 44)] = v13;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_22EB31AAC((uint64_t)v12, v19, &qword_268621370);
  return sub_22EADD81C((uint64_t)v12, &qword_268621370);
}

uint64_t sub_22EC37958()
{
  return sub_22EB44010();
}

uint64_t sub_22EC37970()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EC3798C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EC379A8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EC379C4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EC37A08()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EC37A4C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_22EC37A90()
{
  unint64_t result = qword_268621328;
  if (!qword_268621328)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861F120);
    sub_22EADAA9C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268621328);
  }
  return result;
}

unint64_t sub_22EC37B10()
{
  unint64_t result = qword_26861C5E0;
  if (!qword_26861C5E0)
  {
    sub_22EE7DB30();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26861C5E0);
  }
  return result;
}

uint64_t sub_22EC37B60@<X0>(uint64_t a1@<X8>)
{
  return sub_22EC30B30(v1[4], v1[2], v1[3], a1);
}

uint64_t type metadata accessor for HorizontalPickerOptionStack.FlexibleContent()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for HorizontalPickerOptionStack.ScrollingContent()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_22EC37B9C@<X0>(uint64_t a1@<X8>)
{
  return sub_22EC3518C(*(void *)(v1 + 32), *(void *)(v1 + 16), a1);
}

uint64_t sub_22EC37BB0()
{
  OUTLINED_FUNCTION_1_14();
  uint64_t v4 = *(unsigned int *)(v3 + 84);
  uint64_t v6 = *(void *)(v5 + 64);
  if (!v2) {
    return 0;
  }
  int v7 = v2 - v4;
  if (v2 <= v4) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)v0 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)v0 + v6);
      if (!*(unsigned __int16 *)((char *)v0 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v4) {
        return __swift_getEnumTagSinglePayload((uint64_t)v0, v4, v1);
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)v0 + v6);
  if (!*((unsigned char *)v0 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *v0;
        break;
      case 3:
        LODWORD(v6) = *v0 | (*((unsigned __int8 *)v0 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)v0;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)v0;
        break;
    }
  }
  return v4 + (v6 | v11) + 1;
}

void sub_22EC37CE0(unsigned char *a1)
{
  OUTLINED_FUNCTION_1_14();
  uint64_t v5 = *(unsigned int *)(v4 + 84);
  size_t v7 = *(void *)(v6 + 64);
  char v8 = 8 * v7;
  BOOL v10 = v9 >= v5;
  int v11 = v9 - v5;
  if (v11 != 0 && v10)
  {
    if (v7 <= 3)
    {
      unsigned int v15 = ((v11 + ~(-1 << v8)) >> v8) + 1;
      if (HIWORD(v15))
      {
        int v12 = 4;
      }
      else if (v15 >= 0x100)
      {
        int v12 = 2;
      }
      else
      {
        int v12 = v15 > 1;
      }
    }
    else
    {
      int v12 = 1;
    }
  }
  else
  {
    int v12 = 0;
  }
  if (v5 < v2)
  {
    unsigned int v13 = ~v5 + v2;
    if (v7 < 4)
    {
      int v14 = (v13 >> v8) + 1;
      if (v7)
      {
        int v16 = v13 & ~(-1 << v8);
        bzero(a1, v7);
        if (v7 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v7 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v13;
      int v14 = 1;
    }
    switch(v12)
    {
      case 1:
        a1[v7] = v14;
        return;
      case 2:
        *(_WORD *)&a1[v7] = v14;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v7] = v14;
        return;
      default:
        return;
    }
  }
  switch(v12)
  {
    case 1:
      a1[v7] = 0;
      if (!v2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v7] = 0;
      if (!v2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x22EC37EC0);
    case 4:
      *(_DWORD *)&a1[v7] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (v2)
      {
LABEL_21:
        __swift_storeEnumTagSinglePayload((uint64_t)a1, v2, v5, v3);
      }
      return;
  }
}

uint64_t sub_22EC37EE8()
{
  return swift_getWitnessTable();
}

uint64_t sub_22EC38090()
{
  return swift_getWitnessTable();
}

uint64_t sub_22EC38114()
{
  return swift_getWitnessTable();
}

uint64_t sub_22EC381F0()
{
  return sub_22EC38434(&qword_268621490, &qword_268621498, (void (*)(void))sub_22EC3822C);
}

unint64_t sub_22EC3822C()
{
  unint64_t result = qword_2686214A0;
  if (!qword_2686214A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621338);
    sub_22EC382EC(&qword_2686214A8, &qword_268621330, &qword_2686214B0, &qword_268621340);
    sub_22EADDD7C(&qword_268620A90, &qword_268620A98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686214A0);
  }
  return result;
}

uint64_t sub_22EC382EC(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    sub_22EADDD7C(a3, a4);
    sub_22EADDD7C(&qword_26861C3E8, &qword_26861C3F0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22EC383AC()
{
  unint64_t result = qword_2686214B8;
  if (!qword_2686214B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686214B8);
  }
  return result;
}

uint64_t sub_22EC383F8()
{
  return sub_22EC38434(&qword_2686214C0, &qword_2686214C8, (void (*)(void))sub_22EC384B4);
}

uint64_t sub_22EC38434(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    sub_22EC383AC();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22EC384B4()
{
  unint64_t result = qword_2686214D0;
  if (!qword_2686214D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621350);
    sub_22EC382EC(&qword_2686214D8, &qword_268621348, &qword_2686214E0, &qword_268621358);
    sub_22EADDD7C(&qword_268620A90, &qword_268620A98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686214D0);
  }
  return result;
}

uint64_t sub_22EC38574()
{
  return sub_22EC38434(&qword_2686214E8, &qword_2686214F0, (void (*)(void))sub_22EC385B0);
}

unint64_t sub_22EC385B0()
{
  unint64_t result = qword_2686214F8;
  if (!qword_2686214F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621370);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621360);
    sub_22EC382EC(&qword_268621380, &qword_268621360, qword_268621388, &qword_268621378);
    swift_getOpaqueTypeConformance2();
    sub_22EADDD7C(&qword_268620A90, &qword_268620A98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686214F8);
  }
  return result;
}

uint64_t sub_22EC386AC()
{
  return swift_getWitnessTable();
}

uint64_t sub_22EC38714()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EC38758()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EC3879C@<X0>(uint64_t a1@<X8>)
{
  return sub_22EC35A60(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_22EC387A8()
{
  return sub_22EC35F98(v0[4], v0[2], v0[3]);
}

uint64_t sub_22EC387B4@<X0>(uint64_t a1@<X8>)
{
  return sub_22EC36644(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_22EC387C0@<X0>(uint64_t a1@<X8>)
{
  return sub_22EC36AD0(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_22EC387CC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EC38928()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t OUTLINED_FUNCTION_2_11()
{
  return 255;
}

uint64_t OUTLINED_FUNCTION_4_19()
{
  return 255;
}

uint64_t OUTLINED_FUNCTION_6_21()
{
  return sub_22EE7CEE0();
}

void OUTLINED_FUNCTION_8_18(unsigned char *a1@<X8>)
{
  *a1 = v1;
}

uint64_t OUTLINED_FUNCTION_11_15()
{
  return 255;
}

uint64_t View.preferredSubscriptionOffer(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[0] = a1;
  v4[1] = a2;
  return MEMORY[0x230FAB9D0](v4, a3, &type metadata for PreferredSubscriptionOfferModifier);
}

uint64_t sub_22EC38BF0()
{
  return swift_getWitnessTable();
}

unint64_t sub_22EC38C54()
{
  unint64_t result = qword_268621528;
  if (!qword_268621528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268621528);
  }
  return result;
}

ValueMetadata *type metadata accessor for StoreProductsUnavailableView()
{
  return &type metadata for StoreProductsUnavailableView;
}

uint64_t sub_22EC38CB0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EC38CCC@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_22EE7ED70();
  uint64_t v8 = v7;
  uint64_t v9 = a2 & 1;
  j__swift_retain(a1, v9);
  sub_22EB171A0();
  uint64_t v11 = v10;
  uint64_t result = j_j__swift_release(a1, v9);
  if (v11)
  {
    swift_retain();
    uint64_t v13 = sub_22EE7CF10();
    char v14 = sub_22EE7DE70();
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t v13 = 0;
    char v14 = 0;
  }
  *(void *)a3 = sub_22EC38DA0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = sub_22EC38DBC;
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = v11;
  *(void *)(a3 + 40) = v13;
  *(unsigned char *)(a3 + 48) = v14;
  *(void *)(a3 + 56) = v6;
  *(void *)(a3 + 64) = v8;
  return result;
}

uint64_t sub_22EC38DA0@<X0>(uint64_t a1@<X8>)
{
  return sub_22EBEEB6C(a1);
}

uint64_t sub_22EC38DBC@<X0>(uint64_t a1@<X8>)
{
  return sub_22EBEEB6C(a1);
}

uint64_t sub_22EC38DD8@<X0>(uint64_t a1@<X8>)
{
  return sub_22EC38CCC(*(void *)v1, *(unsigned char *)(v1 + 8), a1);
}

unint64_t sub_22EC38DE8()
{
  unint64_t result = qword_268621530;
  if (!qword_268621530)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621538);
    sub_22EADDD7C((unint64_t *)&qword_26861EC88, &qword_26861EC90);
    sub_22EADDD7C(&qword_268621540, &qword_268621548);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268621530);
  }
  return result;
}

uint64_t sub_22EC38EAC(uint64_t a1)
{
  return sub_22EC38ECC(a1, &qword_26864C4B8);
}

uint64_t sub_22EC38EBC(uint64_t a1)
{
  return sub_22EC38ECC(a1, &qword_26864C4C0);
}

uint64_t sub_22EC38ECC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621550);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_22EE7DF40();
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 1, 1, v6);
  uint64_t v7 = sub_22EE7DF90();
  uint64_t result = sub_22EADD81C((uint64_t)v5, &qword_268621550);
  *a2 = v7;
  return result;
}

uint64_t sub_22EC38F94(uint64_t a1)
{
  return sub_22EC38ECC(a1, &qword_26864C4C8);
}

uint64_t sub_22EC38FA4(uint64_t a1)
{
  return sub_22EC38ECC(a1, &qword_26864C4D0);
}

double sub_22EC38FB4(uint64_t a1)
{
  uint64_t v2 = sub_22EE7E050();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v6, a1, v2, v4);
  int v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if (v7 == *MEMORY[0x263F1A6B8]
    || v7 == *MEMORY[0x263F1A6D8]
    || v7 == *MEMORY[0x263F1A6F0]
    || v7 == *MEMORY[0x263F1A6F8]
    || v7 == *MEMORY[0x263F1A730])
  {
    sub_22EE7DF50();
    return v12;
  }
  if (v7 == *MEMORY[0x263F1A6C0]
    || v7 == *MEMORY[0x263F1A6C8]
    || v7 == *MEMORY[0x263F1A708]
    || v7 == *MEMORY[0x263F1A728]
    || v7 == *MEMORY[0x263F1A710]
    || v7 == *MEMORY[0x263F1A718])
  {
    sub_22EE7DF80();
    return v12;
  }
  sub_22EE7DF50();
  double v19 = v18;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return v19;
}

uint64_t __swift_memcpy3_1(uint64_t result, __int16 *a2)
{
  __int16 v2 = *a2;
  *(unsigned char *)(result + 2) = *((unsigned char *)a2 + 2);
  *(_WORD *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for StoreKitFontViewModifier(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v3 = -1;
    return (v3 + 1);
  }
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      int v2 = a1[3];
      if (a1[3]) {
        goto LABEL_5;
      }
    }
    else
    {
      int v2 = *(unsigned __int16 *)(a1 + 3);
      if (*(_WORD *)(a1 + 3))
      {
LABEL_5:
        int v3 = (*(unsigned __int16 *)a1 | (a1[2] << 16) | (v2 << 24)) - 16776962;
        return (v3 + 1);
      }
    }
  }
  unsigned int v4 = a1[1];
  BOOL v5 = v4 >= 2;
  int v3 = (v4 + 2147483646) & 0x7FFFFFFF;
  if (!v5) {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for StoreKitFontViewModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if ((a3 + 33554177) >> 24) {
    int v3 = 1;
  }
  else {
    int v3 = 2;
  }
  if (a3 <= 0xFE) {
    int v3 = 0;
  }
  if (a2 > 0xFE)
  {
    *(_WORD *)uint64_t result = a2 - 255;
    *(unsigned char *)(result + 2) = (a2 - 255) >> 16;
    if (v3)
    {
      unsigned int v4 = ((a2 - 255) >> 24) + 1;
      if (v3 == 2) {
        *(_WORD *)(result + 3) = v4;
      }
      else {
        *(unsigned char *)(result + 3) = v4;
      }
    }
  }
  else
  {
    if (!v3) {
      goto LABEL_10;
    }
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2) {
        return result;
      }
LABEL_16:
      *(unsigned char *)(result + 1) = a2 + 1;
      return result;
    }
    *(unsigned char *)(result + 3) = 0;
    if (a2) {
      goto LABEL_16;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StoreKitFontViewModifier()
{
  return &type metadata for StoreKitFontViewModifier;
}

uint64_t sub_22EC392B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EC392D0(__int16 a1)
{
  uint64_t v2 = sub_22EE7DFE0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  BOOL v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!(_BYTE)a1)
  {
    if ((a1 & 0x100) == 0)
    {
      sub_22EE7DF10();
      sub_22EE7DF70();
      sub_22EE7DFD0();
      swift_release();
      (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1A680], v2);
      uint64_t v6 = sub_22EE7E010();
      swift_release();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return v6;
    }
    sub_22EE7DFC0();
    sub_22EE7DF80();
    goto LABEL_15;
  }
  if (a1 == 1)
  {
    if ((a1 & 0x100) != 0) {
      sub_22EE7DF10();
    }
    else {
      sub_22EE7E030();
    }
    sub_22EE7DF70();
LABEL_15:
    uint64_t v8 = sub_22EE7DFD0();
    swift_release();
    return v8;
  }
  if (qword_26861B850 != -1) {
    swift_once();
  }
  sub_22EE7DF70();

  return sub_22EE7DFD0();
}

uint64_t sub_22EC394B8@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621558);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621560);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((_BYTE)a2) {
    int v12 = sub_22EE7DA20();
  }
  else {
    int v12 = sub_22EE7DA00();
  }
  int v13 = v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621568);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v8, a1, v14);
  *(_DWORD *)&v8[*(int *)(v6 + 36)] = v13;
  uint64_t v15 = sub_22EC392D0(a2 & 0x1FF);
  uint64_t KeyPath = swift_getKeyPath();
  sub_22EC3968C((uint64_t)v8, (uint64_t)v11);
  uint64_t v17 = (uint64_t *)&v11[*(int *)(v9 + 36)];
  *uint64_t v17 = KeyPath;
  v17[1] = v15;
  sub_22EADD81C((uint64_t)v8, &qword_268621558);
  return sub_22EC396F4((uint64_t)v11, a3);
}

uint64_t sub_22EC39654@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (v2[1]) {
    __int16 v3 = 256;
  }
  else {
    __int16 v3 = 0;
  }
  return sub_22EC394B8(a1, v3 | *v2, a2);
}

uint64_t sub_22EC3968C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621558);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22EC396F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621560);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_22EC39760()
{
  unint64_t result = qword_268621570;
  if (!qword_268621570)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621560);
    sub_22EC39800();
    sub_22EADDD7C(&qword_26861C3E8, &qword_26861C3F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268621570);
  }
  return result;
}

unint64_t sub_22EC39800()
{
  unint64_t result = qword_268621578;
  if (!qword_268621578)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621558);
    sub_22EADDD7C(&qword_268621580, &qword_268621568);
    sub_22EADDD7C(&qword_268620A90, &qword_268620A98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268621578);
  }
  return result;
}

void *sub_22EC398C4()
{
  return &unk_268621588;
}

unsigned char *sub_22EC398D0@<X0>(unsigned char *a1@<X8>)
{
  unint64_t result = sub_22EC398C4();
  *a1 = *result;
  return result;
}

uint64_t sub_22EC398FC()
{
  sub_22EC39974();
  sub_22EE7D4B0();
  return v1;
}

uint64_t sub_22EC39938()
{
  return sub_22EE7D4C0();
}

unint64_t sub_22EC39974()
{
  unint64_t result = qword_268621590;
  if (!qword_268621590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268621590);
  }
  return result;
}

ValueMetadata *_s20HasMultiColumnLayoutVMa()
{
  return &_s20HasMultiColumnLayoutVN;
}

uint64_t sub_22EC399D0()
{
  return swift_release();
}

uint64_t SubscriptionStoreView.init<A>(groupID:visibleRelationships:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, void (*a4)(uint64_t)@<X3>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  v23[1] = a6;
  OUTLINED_FUNCTION_4_2();
  MEMORY[0x270FA5388](v11);
  int v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (ValueMetadata *)type metadata accessor for SubscriptionStoreContentView();
  OUTLINED_FUNCTION_4_2();
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  double v18 = (void *)((char *)v23 - v17);
  uint64_t v19 = *a3;
  void v23[2] = a1;
  v23[3] = a2;
  void v23[4] = v19;
  char v24 = 1;
  a4(v16);
  sub_22EC4F704((uint64_t)v13, a5, v18);
  swift_getWitnessTable();
  uint64_t v20 = (long long *)OUTLINED_FUNCTION_2_12();
  return sub_22EBE11E0(v20, (uint64_t)v18, 1, v14, v21);
}

uint64_t SubscriptionStoreView.init<A, B>(subscriptions:content:)@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  v20[1] = a5;
  OUTLINED_FUNCTION_4_2();
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = (ValueMetadata *)OUTLINED_FUNCTION_0_15();
  OUTLINED_FUNCTION_4_2();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (void *)((char *)v20 - v13);
  uint64_t v15 = sub_22EC0EC5C(a1, 0, 1);
  v20[3] = 0;
  _DWORD v20[4] = 0;
  v20[2] = v15;
  char v21 = 2;
  a2();
  sub_22EC4F704(v5, a3, v14);
  swift_getWitnessTable();
  uint64_t v16 = (long long *)OUTLINED_FUNCTION_2_12();
  sub_22EBE11E0(v16, (uint64_t)v14, 1, v11, v17);
  OUTLINED_FUNCTION_4_2();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(a1, a4);
}

uint64_t SubscriptionStoreView.init<A, B>(productIDs:content:)@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  v22[1] = a3;
  uint64_t v23 = a2;
  uint64_t v24 = a6;
  OUTLINED_FUNCTION_4_2();
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = (ValueMetadata *)OUTLINED_FUNCTION_0_15();
  OUTLINED_FUNCTION_4_2();
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (void *)((char *)v22 - v14);
  uint64_t v16 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a5);
  uint64_t v18 = sub_22EE7FCE0();
  uint64_t v26 = 0;
  uint64_t v27 = 0;
  uint64_t v25 = v18;
  char v28 = 0;
  v23();
  sub_22EC4F704(v6, a4, v15);
  swift_getWitnessTable();
  uint64_t v19 = (long long *)OUTLINED_FUNCTION_2_12();
  sub_22EBE11E0(v19, (uint64_t)v15, 1, v11, v20);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(a1, a5);
}

uint64_t OUTLINED_FUNCTION_0_15()
{
  return type metadata accessor for SubscriptionStoreContentView();
}

uint64_t OUTLINED_FUNCTION_2_12()
{
  return v0 - 112;
}

uint64_t sub_22EC39F34@<X0>(char a1@<W0>, char a2@<W1>, uint64_t (*a3)(void)@<X2>, unsigned char *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  type metadata accessor for AutoEnablingScrollView();
  return a3();
}

uint64_t sub_22EC39F8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v43 = a2;
  sub_22EE7D870();
  OUTLINED_FUNCTION_0_2();
  uint64_t v41 = v6;
  uint64_t v42 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v36 = *(void *)(a1 + 16);
  uint64_t v10 = sub_22EE7C700();
  OUTLINED_FUNCTION_0_2();
  uint64_t v38 = v11;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v34 - v13;
  uint64_t WitnessTable = swift_getWitnessTable();
  v51[0] = v10;
  v51[1] = WitnessTable;
  uint64_t v37 = MEMORY[0x263F1AEC8];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  OUTLINED_FUNCTION_0_2();
  uint64_t v39 = v16;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v34 - v18;
  uint64_t v20 = sub_22EE7CEE0();
  OUTLINED_FUNCTION_0_2();
  uint64_t v40 = v21;
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v34 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v34 - v26;
  uint64_t v44 = v36;
  uint64_t v45 = v9;
  uint64_t v46 = v3;
  sub_22EE7C710();
  sub_22EE7D860();
  uint64_t v28 = WitnessTable;
  sub_22EE7E440();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v14, v10);
  uint64_t v49 = 1;
  sub_22EE7E9D0();
  uint64_t v49 = v10;
  uint64_t v50 = v28;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  MEMORY[0x230FAB9D0](v51, OpaqueTypeMetadata2, &type metadata for StoreViewColumnsTrackingModifier, OpaqueTypeConformance2);
  swift_release();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v19, OpaqueTypeMetadata2);
  unint64_t v30 = sub_22EC3B3D4();
  uint64_t v47 = OpaqueTypeConformance2;
  unint64_t v48 = v30;
  uint64_t v31 = swift_getWitnessTable();
  sub_22EB69440(v25, v20, v31);
  uint64_t v32 = *(void (**)(char *, uint64_t))(v40 + 8);
  v32(v25, v20);
  sub_22EB69440(v27, v20, v31);
  return ((uint64_t (*)(char *, uint64_t))v32)(v27, v20);
}

uint64_t sub_22EC3A320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AutoEnablingScrollView();
  sub_22EB69440(a1 + *(int *)(v9 + 40), a2, a3);
  sub_22EB69440(v8, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a2);
}

uint64_t sub_22EC3A41C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  sub_22EC3A574();
  swift_retain();
  sub_22EE7E3D0();

  return swift_release();
}

uint64_t sub_22EC3A4E4(void *a1, uint64_t (*a2)(void))
{
  return a2(*a1);
}

uint64_t sub_22EC3A510()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_22EC3A548(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

unint64_t sub_22EC3A574()
{
  unint64_t result = qword_268621598;
  if (!qword_268621598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268621598);
  }
  return result;
}

void *assignWithCopy for StoreViewColumnsTrackingModifier(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for StoreViewColumnsTrackingModifier(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for StoreViewColumnsTrackingModifier()
{
  return &type metadata for StoreViewColumnsTrackingModifier;
}

ValueMetadata *type metadata accessor for StoreViewColumnsTrackingModifier.Key()
{
  return &type metadata for StoreViewColumnsTrackingModifier.Key;
}

uint64_t sub_22EC3A658()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EC3A674@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686215A0);
  uint64_t v9 = v8 - 8;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a3;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686215A8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, a1, v13);
  uint64_t v14 = &v11[*(int *)(v9 + 44)];
  *(void *)uint64_t v14 = sub_22EC3A7E8;
  *((void *)v14 + 1) = 0;
  *((void *)v14 + 2) = sub_22EC3A998;
  *((void *)v14 + 3) = v12;
  v17[1] = a2;
  _OWORD v17[2] = a3;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2686215B0);
  sub_22EE7E9E0();
  uint64_t v15 = v17[3];
  sub_22EC3A9A0((uint64_t)v11, a4);
  *(void *)(a4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_2686215B8) + 36)) = v15;
  return sub_22EC3AA08((uint64_t)v11);
}

uint64_t sub_22EC3A7E8@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_22EE7CA30();
  *a1 = v3;
  return result;
}

uint64_t sub_22EC3A814(double *a1)
{
  return sub_22EE7E9F0();
}

uint64_t sub_22EC3A874(double a1)
{
  if (qword_26861B7B0 != -1) {
LABEL_12:
  }
    swift_once();
  if (a1 > 400.0 && a1 > 0.0)
  {
    uint64_t result = 0;
    double v3 = 0.0;
    double v4 = 0.0;
    do
    {
      double v4 = v4 + v3 + 400.0;
      if (v4 <= a1 && __OFADD__(result++, 1))
      {
        __break(1u);
        goto LABEL_12;
      }
      double v3 = *(double *)&qword_26864C3C8;
    }
    while (v4 < a1);
    if (result > 0) {
      return result;
    }
  }
  return 1;
}

void *sub_22EC3A92C(void *a1, void *(*a2)(uint64_t *__return_ptr))
{
  uint64_t result = a2(&v4);
  *a1 = v4;
  return result;
}

uint64_t sub_22EC3A978@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22EC3A674(a1, *v2, v2[1], a2);
}

uint64_t type metadata accessor for AutoEnablingScrollView()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_22EC3A998(double *a1)
{
  return sub_22EC3A814(a1);
}

uint64_t sub_22EC3A9A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686215A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22EC3AA08(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686215A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22EC3AA68()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_22EC3AB10(unsigned char *a1, uint64_t *a2, uint64_t a3)
{
  double v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  uint64_t v6 = ~v5;
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v5 + 2) & (unint64_t)~v5) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) > 0x18)
  {
    uint64_t v9 = *a2;
    *double v3 = *a2;
    double v3 = (void *)(v9 + ((v5 + 16) & v6));
    swift_retain();
  }
  else
  {
    *a1 = *(unsigned char *)a2;
    a1[1] = *((unsigned char *)a2 + 1);
    (*(void (**)(unint64_t, unint64_t))(v4 + 16))((unint64_t)&a1[v5 + 2] & v6, ((unint64_t)a2 + v5 + 2) & v6);
  }
  return v3;
}

uint64_t sub_22EC3ABFC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80) + 2) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80));
}

unsigned char *sub_22EC3AC38(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 16))((unint64_t)&a1[*(unsigned __int8 *)(v4 + 80) + 2] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (unint64_t)&a2[*(unsigned __int8 *)(v4 + 80) + 2] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

unsigned char *sub_22EC3ACB0(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 24))((unint64_t)&a1[*(unsigned __int8 *)(v4 + 80) + 2] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (unint64_t)&a2[*(unsigned __int8 *)(v4 + 80) + 2] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

unsigned char *sub_22EC3AD28(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))((unint64_t)&a1[*(unsigned __int8 *)(v4 + 80) + 2] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (unint64_t)&a2[*(unsigned __int8 *)(v4 + 80) + 2] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

unsigned char *sub_22EC3ADA0(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 40))((unint64_t)&a1[*(unsigned __int8 *)(v4 + 80) + 2] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (unint64_t)&a2[*(unsigned __int8 *)(v4 + 80) + 2] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_22EC3AE18(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  if (v6 <= 0xFE) {
    unsigned int v8 = 254;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v5 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v9 = a2 - v8;
  if (a2 <= v8) {
    goto LABEL_23;
  }
  uint64_t v10 = ((v7 + 2) & ~v7) + *(void *)(*(void *)(v4 - 8) + 64);
  char v11 = 8 * v10;
  if (v10 <= 3)
  {
    unsigned int v14 = ((v9 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v14))
    {
      int v12 = *(_DWORD *)((char *)a1 + v10);
      if (!v12) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 > 0xFF)
    {
      int v12 = *(unsigned __int16 *)((char *)a1 + v10);
      if (!*(unsigned __int16 *)((char *)a1 + v10)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 < 2)
    {
LABEL_23:
      if (v6 > 0xFE) {
        return __swift_getEnumTagSinglePayload(((unint64_t)a1 + v7 + 2) & ~v7, v6, v4);
      }
      unsigned int v16 = *((unsigned __int8 *)a1 + 1);
      BOOL v17 = v16 >= 2;
      int v18 = (v16 + 2147483646) & 0x7FFFFFFF;
      if (v17) {
        return (v18 + 1);
      }
      else {
        return 0;
      }
    }
  }
  int v12 = *((unsigned __int8 *)a1 + v10);
  if (!*((unsigned char *)a1 + v10)) {
    goto LABEL_23;
  }
LABEL_15:
  int v15 = (v12 - 1) << v11;
  if (v10 > 3) {
    int v15 = 0;
  }
  if (v10)
  {
    if (v10 > 3) {
      LODWORD(v10) = 4;
    }
    switch((int)v10)
    {
      case 2:
        LODWORD(v10) = *a1;
        break;
      case 3:
        LODWORD(v10) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v10) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v10) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v8 + (v10 | v15) + 1;
}

void sub_22EC3AFB0(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= 0xFE) {
    unsigned int v9 = 254;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  size_t v11 = ((v10 + 2) & ~v10) + *(void *)(*(void *)(v6 - 8) + 64);
  char v12 = 8 * v11;
  BOOL v13 = a3 >= v9;
  unsigned int v14 = a3 - v9;
  if (v14 != 0 && v13)
  {
    if (v11 <= 3)
    {
      unsigned int v18 = ((v14 + ~(-1 << v12)) >> v12) + 1;
      if (HIWORD(v18))
      {
        int v15 = 4;
      }
      else if (v18 >= 0x100)
      {
        int v15 = 2;
      }
      else
      {
        int v15 = v18 > 1;
      }
    }
    else
    {
      int v15 = 1;
    }
  }
  else
  {
    int v15 = 0;
  }
  if (v9 < a2)
  {
    unsigned int v16 = ~v9 + a2;
    if (v11 < 4)
    {
      int v17 = (v16 >> v12) + 1;
      if (v11)
      {
        int v19 = v16 & ~(-1 << v12);
        bzero(a1, v11);
        if (v11 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if (v11 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v16;
      int v17 = 1;
    }
    switch(v15)
    {
      case 1:
        a1[v11] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v11] = v17;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&a1[v11] = v17;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x22EC3B1F4);
    case 4:
      *(_DWORD *)&a1[v11] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v8 > 0xFE)
        {
          unint64_t v20 = (unint64_t)&a1[v10 + 2] & ~v10;
          __swift_storeEnumTagSinglePayload(v20, a2, v8, v6);
        }
        else
        {
          a1[1] = a2 + 1;
        }
      }
      return;
  }
}

unint64_t sub_22EC3B220()
{
  unint64_t result = qword_268621640;
  if (!qword_268621640)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_2686215B8);
    sub_22EC3B2C0();
    sub_22EADDD7C(&qword_268621668, &qword_268621670);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268621640);
  }
  return result;
}

unint64_t sub_22EC3B2C0()
{
  unint64_t result = qword_268621648;
  if (!qword_268621648)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686215A0);
    sub_22EADDD7C(&qword_268621650, &qword_2686215A8);
    sub_22EADDD7C(&qword_268621658, &qword_268621660);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268621648);
  }
  return result;
}

uint64_t sub_22EC3B384()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EC3B3C8()
{
  return sub_22EC3A320(v0[4], v0[2], v0[3]);
}

unint64_t sub_22EC3B3D4()
{
  unint64_t result = qword_268621678;
  if (!qword_268621678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268621678);
  }
  return result;
}

uint64_t sub_22EC3B420()
{
  return swift_getWitnessTable();
}

uint64_t getEnumTagSinglePayload for InAppPurchaseIconFrameViewModifier(unsigned __int8 *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && a1[24])
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *a1;
      BOOL v4 = v3 >= 2;
      int v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InAppPurchaseIconFrameViewModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InAppPurchaseIconFrameViewModifier()
{
  return &type metadata for InAppPurchaseIconFrameViewModifier;
}

uint64_t sub_22EC3B5A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EC3B5C0@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_268621680);
  OUTLINED_FUNCTION_2_0();
  (*(void (**)(uint64_t, uint64_t))(v10 + 16))(a5, a1);
  size_t v11 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_268621688);
  uint64_t v12 = a5 + v11[11];
  uint64_t v13 = *MEMORY[0x263F19860];
  sub_22EE7D5E0();
  OUTLINED_FUNCTION_2_0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 104))(v12, v13);
  *(unsigned char *)(a5 + v11[9]) = a2;
  unsigned int v16 = (void *)(a5 + v11[10]);
  *unsigned int v16 = a3;
  v16[1] = a4;
  return result;
}

uint64_t sub_22EC3B6AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22EC3B5C0(a1, *(unsigned char *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16), a2);
}

uint64_t sub_22EC3B6B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v23[1] = a2;
  uint64_t v3 = *(void *)(a1 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](a1);
  (*(void (**)(char *))(v3 + 16))((char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = *(void *)(a1 + 24);
  *(void *)(v6 + 16) = *(void *)(a1 + 16);
  *(void *)(v6 + 24) = v7;
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v6 + v5, (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  sub_22EE7CEE0();
  sub_22EE7CEE0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861C880);
  sub_22EE7CEE0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621750);
  sub_22EE7CEE0();
  sub_22EE7CEE0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621758);
  sub_22EE7CEE0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621760);
  sub_22EE7CEE0();
  unint64_t v8 = sub_22EC3F274();
  uint64_t v38 = v7;
  unint64_t v39 = v8;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v37 = MEMORY[0x263F18860];
  uint64_t v9 = swift_getWitnessTable();
  uint64_t v10 = sub_22EADDD7C(&qword_26861C9C8, &qword_26861C880);
  uint64_t v34 = v9;
  uint64_t v35 = v10;
  uint64_t v11 = swift_getWitnessTable();
  uint64_t v12 = sub_22EADDD7C(&qword_268621770, &qword_268621750);
  uint64_t v32 = v11;
  uint64_t v33 = v12;
  uint64_t v30 = swift_getWitnessTable();
  uint64_t v31 = MEMORY[0x263F18C10];
  uint64_t v13 = swift_getWitnessTable();
  uint64_t v14 = sub_22EADDD7C(&qword_268621778, &qword_268621758);
  uint64_t v28 = v13;
  uint64_t v29 = v14;
  uint64_t v15 = swift_getWitnessTable();
  uint64_t v16 = sub_22EADDD7C(&qword_268621780, &qword_268621760);
  uint64_t v26 = v15;
  uint64_t v27 = v16;
  swift_getWitnessTable();
  uint64_t v43 = sub_22EE7CC30();
  uint64_t v44 = v17;
  LOBYTE(v24[0]) = 1;
  sub_22EE7CC40();
  uint64_t v18 = swift_getWitnessTable();
  sub_22EC3F2C0();
  sub_22EE7E1D0();
  swift_release();
  v24[0] = v40;
  v24[1] = v41;
  char v25 = v42;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621790);
  uint64_t v19 = sub_22EE7CEE0();
  uint64_t v20 = sub_22EADDD7C(&qword_268621798, &qword_268621790);
  void v23[2] = v18;
  v23[3] = v20;
  uint64_t v21 = swift_getWitnessTable();
  sub_22EB69440(v24, v19, v21);
  swift_release();
  uint64_t v40 = v43;
  uint64_t v41 = v44;
  char v42 = v45;
  sub_22EB69440(&v40, v19, v21);
  return swift_release();
}

uint64_t sub_22EC3BB74@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v88 = a4;
  uint64_t v72 = sub_22EE7CFF0();
  MEMORY[0x270FA5388](v72);
  uint64_t v68 = (double *)((char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_22EE7CEE0();
  uint64_t v70 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v62 = (char *)&v61 - v9;
  uint64_t v11 = v10;
  uint64_t v69 = sub_22EE7CEE0();
  uint64_t v74 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  uint64_t v66 = (char *)&v61 - v12;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861C880);
  uint64_t v71 = sub_22EE7CEE0();
  uint64_t v79 = *(void *)(v71 - 8);
  MEMORY[0x270FA5388](v71);
  uint64_t v67 = (char *)&v61 - v13;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621750);
  uint64_t v76 = sub_22EE7CEE0();
  uint64_t v80 = *(uint64_t **)(v76 - 8);
  MEMORY[0x270FA5388](v76);
  uint64_t v73 = (char *)&v61 - v14;
  uint64_t v77 = sub_22EE7CEE0();
  uint64_t v83 = *(void *)(v77 - 8);
  MEMORY[0x270FA5388](v77);
  uint64_t v75 = (char *)&v61 - v15;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621758);
  uint64_t v82 = sub_22EE7CEE0();
  uint64_t v86 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  uint64_t v78 = (char *)&v61 - v16;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621760);
  uint64_t v85 = sub_22EE7CEE0();
  uint64_t v87 = *(void *)(v85 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v85);
  uint64_t v81 = (char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v84 = (char *)&v61 - v19;
  sub_22EE7CA30();
  double v21 = v20;
  uint64_t v64 = a2;
  uint64_t v22 = type metadata accessor for InAppPurchaseIconFrame();
  double v23 = 38.0;
  if (*(unsigned char *)(a1 + *(int *)(v22 + 36))) {
    double v23 = 42.0;
  }
  double v24 = v21 / v23;
  v117[0] = v21 / v23 * 4.0;
  v117[1] = v117[0];
  v117[2] = v117[0];
  v117[3] = v117[0];
  char v118 = 0;
  uint64_t v89 = a3;
  sub_22ED8B024((uint64_t)v117, a2, a3);
  sub_22EE7CA30();
  sub_22EE7CA30();
  uint64_t v65 = v22;
  uint64_t v63 = a1;
  unint64_t v25 = sub_22EC3F274();
  uint64_t v115 = a3;
  unint64_t v116 = v25;
  uint64_t v90 = MEMORY[0x263F18E48];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v27 = v66;
  uint64_t v28 = v62;
  sub_22EE7E5B0();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v28, v11);
  uint64_t v29 = a1 + *(int *)(v22 + 44);
  uint64_t v30 = v68;
  uint64_t v31 = (char *)v68 + *(int *)(v72 + 20);
  uint64_t v32 = sub_22EE7D5E0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16))(v31, v29, v32);
  *uint64_t v30 = v24 * 3.0;
  v30[1] = v24 * 3.0;
  uint64_t v113 = WitnessTable;
  uint64_t v114 = MEMORY[0x263F18860];
  uint64_t v33 = v69;
  uint64_t v34 = swift_getWitnessTable();
  sub_22EC3F07C(&qword_26861C1C8, MEMORY[0x263F19048]);
  uint64_t v35 = v67;
  sub_22EE7E6F0();
  sub_22EC40090((uint64_t)v30, MEMORY[0x263F19048]);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v27, v33);
  uint64_t v36 = v63;
  uint64_t v37 = v64;
  uint64_t v99 = v64;
  uint64_t v100 = v89;
  uint64_t v101 = v63;
  double v102 = v24;
  type metadata accessor for InAppPurchaseIconFrameOverlay(0);
  uint64_t v38 = sub_22EADDD7C(&qword_26861C9C8, &qword_26861C880);
  uint64_t v111 = v34;
  uint64_t v112 = v38;
  uint64_t v39 = v71;
  uint64_t v40 = swift_getWitnessTable();
  sub_22EC3F07C(&qword_2686217A0, (void (*)(uint64_t))type metadata accessor for InAppPurchaseIconFrameOverlay);
  sub_22EB24CF8();
  uint64_t v41 = v73;
  sub_22EE7E630();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v35, v39);
  uint64_t v42 = v36;
  uint64_t v79 = MEMORY[0x263F19128];
  uint64_t v43 = sub_22EADDD7C(&qword_268621770, &qword_268621750);
  uint64_t v109 = v40;
  uint64_t v110 = v43;
  uint64_t v44 = v76;
  uint64_t v45 = swift_getWitnessTable();
  uint64_t v46 = v75;
  sub_22EE7E650();
  ((void (*)(char *, uint64_t))v80[1])(v41, v44);
  uint64_t v80 = &v61;
  uint64_t v47 = v89;
  uint64_t v95 = v37;
  uint64_t v96 = v89;
  uint64_t v97 = v36;
  double v98 = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2686217A8);
  uint64_t v107 = v45;
  uint64_t v108 = MEMORY[0x263F18C10];
  uint64_t v48 = v77;
  uint64_t v49 = swift_getWitnessTable();
  sub_22EC3F34C();
  sub_22EE7ED70();
  uint64_t v50 = v78;
  sub_22EE7E570();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v46, v48);
  sub_22EE7ED40();
  uint64_t v91 = v37;
  uint64_t v92 = v47;
  uint64_t v93 = v42;
  double v94 = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2686217E8);
  uint64_t v51 = sub_22EADDD7C(&qword_268621778, &qword_268621758);
  uint64_t v105 = v49;
  uint64_t v106 = v51;
  uint64_t v52 = v82;
  uint64_t v53 = swift_getWitnessTable();
  sub_22EC3F4A4();
  __n128 v54 = v81;
  sub_22EE7E630();
  (*(void (**)(char *, uint64_t))(v86 + 8))(v50, v52);
  uint64_t v55 = sub_22EADDD7C(&qword_268621780, &qword_268621760);
  uint64_t v103 = v53;
  uint64_t v104 = v55;
  uint64_t v56 = v85;
  uint64_t v57 = swift_getWitnessTable();
  uint64_t v58 = v84;
  sub_22EB69440(v54, v56, v57);
  char v59 = *(void (**)(char *, uint64_t))(v87 + 8);
  v59(v54, v56);
  sub_22EB69440(v58, v56, v57);
  return ((uint64_t (*)(char *, uint64_t))v59)(v58, v56);
}

uint64_t sub_22EC3C640@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6 = type metadata accessor for InAppPurchaseIconFrame();
  char v7 = *(unsigned char *)(a1 + *(int *)(v6 + 36));
  uint64_t v8 = a1 + *(int *)(v6 + 44);
  uint64_t v9 = type metadata accessor for InAppPurchaseIconFrameOverlay(0);
  uint64_t v10 = a2 + *(int *)(v9 + 24);
  uint64_t v11 = sub_22EE7D5E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v10, v8, v11);
  *(unsigned char *)a2 = v7;
  *(double *)(a2 + 8) = a3;
  uint64_t v12 = a2 + *(int *)(v9 + 28);
  uint64_t result = swift_getKeyPath();
  *(void *)uint64_t v12 = result;
  *(unsigned char *)(v12 + 8) = 0;
  return result;
}

double sub_22EC3C70C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(a1 + *(int *)(type metadata accessor for InAppPurchaseIconFrame() + 36)) == 1)
  {
    sub_22EE7ED40();
    sub_22EC3C8AC((uint64_t)v11);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2686217C0);
  sub_22EC40618(&qword_2686217B8, &qword_2686217C0, (void (*)(void))sub_22EC3F3F4);
  sub_22EADD474();
  sub_22EE7D800();
  double result = *(double *)v11;
  long long v4 = v11[1];
  long long v5 = v11[2];
  long long v6 = v11[3];
  long long v7 = v11[4];
  long long v8 = v11[5];
  long long v9 = v11[6];
  char v10 = v12;
  *(_OWORD *)a2 = v11[0];
  *(_OWORD *)(a2 + 16) = v4;
  *(_OWORD *)(a2 + 32) = v5;
  *(_OWORD *)(a2 + 48) = v6;
  *(_OWORD *)(a2 + 64) = v7;
  *(_OWORD *)(a2 + 80) = v8;
  *(_OWORD *)(a2 + 96) = v9;
  *(unsigned char *)(a2 + 112) = v10;
  return result;
}

uint64_t sub_22EC3C8AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_22EE7E7C0();
  if (qword_26861B6A0 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_26864BFC0;
  type metadata accessor for InAppPurchaseIconFrame();
  sub_22EE7ED70();
  sub_22EE7C9B0();
  uint64_t result = sub_22EE7E7A0();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = v3;
  *(_WORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  *(unsigned char *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = v9;
  *(void *)(a1 + 72) = v10;
  *(void *)(a1 + 80) = result;
  *(void *)(a1 + 88) = 0x3FF0000000000000;
  return result;
}

uint64_t sub_22EC3C9C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  if (*(unsigned char *)(a1 + *(int *)(type metadata accessor for InAppPurchaseIconFrame() + 36)) == 1)
  {
    sub_22ED8D608(0, 0, &v36, a3 * 12.0, a3 * 12.0);
    __n128 v5 = v36;
    uint64_t v6 = v38;
    uint64_t v7 = v39;
    char v8 = v40;
    uint64_t v9 = v41;
    char v10 = v42;
    uint64_t v11 = v43;
    char v12 = v44;
    uint64_t v16 = v45;
    uint64_t v17 = v37;
    uint64_t v15 = v46;
    if (qword_26861B6A0 != -1) {
      swift_once();
    }
    uint64_t v13 = qword_26864BFC0;
    sub_22EE7ED70();
    sub_22EE7C9B0();
    __n128 v18 = v5;
    uint64_t v19 = v17;
    uint64_t v20 = v6;
    uint64_t v21 = v7;
    char v22 = v8;
    uint64_t v23 = v9;
    char v24 = v10;
    uint64_t v25 = v11;
    char v26 = v12;
    uint64_t v27 = v16;
    uint64_t v28 = v15;
    uint64_t v29 = v13;
    __int16 v30 = 0;
    uint64_t v31 = v47;
    char v32 = v48;
    uint64_t v33 = v49;
    char v34 = v50;
    long long v35 = v51;
    nullsub_1(&v18);
  }
  else
  {
    sub_22EC3F5C0((uint64_t)&v18);
  }
  sub_22EAEFC48((uint64_t)&v18, (uint64_t)v52, &qword_2686217E8);
  return sub_22EAEFC48((uint64_t)v52, a2, &qword_2686217E8);
}

uint64_t sub_22EC3CBB4()
{
  uint64_t result = sub_22EE7D200();
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26861D348);
    sub_22EADDD7C(&qword_26861D350, &qword_26861D348);
    return sub_22EE7C9C0();
  }
  return result;
}

uint64_t sub_22EC3CC34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_22EC3CBB4();
  *a1 = result;
  return result;
}

uint64_t sub_22EC3CC5C()
{
  sub_22EE7D9F0();
  uint64_t result = sub_22EE7C9C0();
  qword_26864C4D8 = result;
  return result;
}

uint64_t *sub_22EC3CCA0()
{
  if (qword_26861B860 != -1) {
    swift_once();
  }
  return &qword_26864C4D8;
}

uint64_t sub_22EC3CCEC@<X0>(void *a1@<X8>)
{
  sub_22EC3CCA0();
  *a1 = qword_26864C4D8;

  return swift_retain();
}

uint64_t sub_22EC3CD2C()
{
  sub_22EC3F614();
  sub_22EE7D4B0();
  return v1;
}

uint64_t sub_22EC3CD68()
{
  return sub_22EE7D4C0();
}

uint64_t sub_22EC3CDA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v85 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621838);
  uint64_t v4 = v3 - 8;
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621840);
  MEMORY[0x270FA5388](v7 - 8);
  OUTLINED_FUNCTION_1_1();
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621848);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_3_2();
  uint64_t v86 = v9;
  uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621850);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_3_2();
  uint64_t v80 = v11;
  uint64_t v12 = *(void *)(v1 + 8);
  uint64_t v78 = type metadata accessor for InAppPurchaseIconFrameOverlay(0);
  uint64_t v13 = v1 + *(int *)(v78 + 24);
  uint64_t v14 = &v6[*(int *)(type metadata accessor for InAppPurchaseIconFrameRoundedSquare(0) + 20)];
  sub_22EE7D5E0();
  OUTLINED_FUNCTION_2_0();
  (*(void (**)(char *, uint64_t))(v15 + 16))(v14, v13);
  *(void *)uint64_t v6 = v12;
  v6[8] = 0;
  uint64_t v16 = sub_22EE7ED70();
  uint64_t v18 = v17;
  uint64_t v19 = (uint64_t *)&v6[*(int *)(v4 + 44)];
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621858);
  sub_22EC3D2C0(v1, (uint64_t)v19 + *(int *)(v20 + 36));
  *uint64_t v19 = v16;
  v19[1] = v18;
  uint64_t v79 = v2;
  sub_22EAEFF0C((uint64_t)v6, v2, &qword_268621838);
  sub_22EC400E0((uint64_t)v6, &qword_268621838);
  uint64_t v21 = sub_22EE7ED30();
  uint64_t v22 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  uint64_t v27 = 0;
  uint64_t v28 = 0;
  uint64_t v29 = 0;
  uint64_t v30 = 0;
  double v31 = *(double *)(v1 + 8);
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  uint64_t v81 = v36;
  uint64_t v82 = v21;
  if (v31 > 1.0)
  {
    if (qword_26861B6A0 != -1) {
      swift_once();
    }
    uint64_t v77 = qword_26864BFC0;
    sub_22EE7ED70();
    sub_22EE7C9B0();
    uint64_t v37 = v87;
    uint64_t v38 = v88;
    uint64_t v39 = v89;
    uint64_t v40 = v90;
    uint64_t v41 = v91;
    uint64_t v74 = v92;
    swift_retain();
    sub_22EB18754();
    uint64_t v43 = v42;
    swift_release();
    unsigned __int8 v44 = sub_22EE7DE80();
    char v45 = sub_22EE7DEC0();
    unsigned __int8 v46 = sub_22EE7DEB0();
    sub_22EE7DEB0();
    if (sub_22EE7DEB0() != v44) {
      unsigned __int8 v46 = sub_22EE7DEB0();
    }
    uint64_t v75 = v41;
    uint64_t v78 = v38;
    sub_22EE7DEB0();
    char v47 = sub_22EE7DEB0();
    uint64_t v76 = v40;
    uint64_t v73 = v43;
    uint64_t v25 = v39;
    uint64_t v23 = v37;
    if (v47 != v45) {
      unsigned __int8 v46 = sub_22EE7DEB0();
    }
    sub_22EE7C6E0();
    uint64_t v32 = v48;
    uint64_t v33 = v49;
    uint64_t v34 = v50;
    uint64_t v35 = v51;
    uint64_t v30 = v46;
    uint64_t v22 = v77;
    uint64_t v24 = v78;
    uint64_t v26 = v76;
    uint64_t v27 = v75;
    uint64_t v28 = v74;
    uint64_t v29 = v73;
  }
  uint64_t v77 = v30;
  uint64_t v78 = v25;
  uint64_t v52 = v79;
  uint64_t v53 = v86;
  uint64_t v54 = v28;
  uint64_t v55 = v24;
  sub_22EAEFF0C(v79, v86, &qword_268621840);
  uint64_t v56 = v53 + *(int *)(v83 + 36);
  *(void *)uint64_t v56 = v22;
  *(void *)(v56 + 8) = 0;
  *(void *)(v56 + 16) = v23;
  *(void *)(v56 + 24) = v55;
  *(void *)(v56 + 32) = v78;
  *(void *)(v56 + 40) = v26;
  *(void *)(v56 + 48) = v27;
  *(void *)(v56 + 56) = v54;
  uint64_t v57 = v77;
  *(void *)(v56 + 64) = v29;
  *(void *)(v56 + 72) = v57;
  *(void *)(v56 + 80) = v32;
  *(void *)(v56 + 88) = v33;
  *(void *)(v56 + 96) = v34;
  *(void *)(v56 + 104) = v35;
  *(unsigned char *)(v56 + 112) = 0;
  uint64_t v58 = v81;
  *(void *)(v56 + 120) = v82;
  *(void *)(v56 + 128) = v58;
  sub_22EC400E0(v52, &qword_268621840);
  char v59 = sub_22EE7DE70();
  sub_22EE7C6E0();
  uint64_t v61 = v60;
  uint64_t v63 = v62;
  uint64_t v65 = v64;
  uint64_t v67 = v66;
  uint64_t v68 = v86;
  uint64_t v69 = v80;
  sub_22EAEFF0C(v86, v80, &qword_268621848);
  uint64_t v70 = v69 + *(int *)(v84 + 36);
  *(unsigned char *)uint64_t v70 = v59;
  *(void *)(v70 + 8) = v61;
  *(void *)(v70 + 16) = v63;
  *(void *)(v70 + 24) = v65;
  *(void *)(v70 + 32) = v67;
  *(unsigned char *)(v70 + 40) = 0;
  sub_22EC400E0(v68, &qword_268621848);
  return sub_22EAEFC48(v69, v85, &qword_268621850);
}

uint64_t sub_22EC3D2C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v3 = type metadata accessor for InAppPurchaseIconFrameCenter(0);
  uint64_t v4 = v3 - 8;
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (uint64_t *)((char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621860);
  uint64_t v8 = v7 - 8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621868);
  uint64_t v12 = v11 - 8;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621870);
  uint64_t v16 = v15 - 8;
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621878);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *(void *)(a1 + 8);
  uint64_t v23 = a1 + *(int *)(type metadata accessor for InAppPurchaseIconFrameOverlay(0) + 24);
  uint64_t v24 = (char *)v6 + *(int *)(v4 + 28);
  uint64_t v25 = sub_22EE7D5E0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v24, v23, v25);
  *uint64_t v6 = v22;
  LOBYTE(v23) = sub_22EE7DE70();
  sub_22EE7C6E0();
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  sub_22EC4002C((uint64_t)v6, (uint64_t)v10);
  uint64_t v34 = &v10[*(int *)(v8 + 44)];
  *uint64_t v34 = v23;
  *((void *)v34 + 1) = v27;
  *((void *)v34 + 2) = v29;
  *((void *)v34 + 3) = v31;
  *((void *)v34 + 4) = v33;
  v34[40] = 0;
  sub_22EC40090((uint64_t)v6, (void (*)(void))type metadata accessor for InAppPurchaseIconFrameCenter);
  uint64_t v35 = sub_22EE7E7A0();
  sub_22EAEFF0C((uint64_t)v10, (uint64_t)v14, &qword_268621860);
  *(void *)&v14[*(int *)(v12 + 44)] = v35;
  sub_22EC400E0((uint64_t)v10, &qword_268621860);
  uint64_t v36 = sub_22EE7E7C0();
  LOBYTE(v35) = sub_22EE7DE70();
  sub_22EAEFF0C((uint64_t)v14, (uint64_t)v18, &qword_268621868);
  uint64_t v37 = &v18[*(int *)(v16 + 44)];
  *(void *)uint64_t v37 = v36;
  v37[8] = v35;
  sub_22EC400E0((uint64_t)v14, &qword_268621868);
  sub_22EAEFF0C((uint64_t)v18, (uint64_t)v21, &qword_268621870);
  sub_22EC400E0((uint64_t)v18, &qword_268621870);
  sub_22EAEFF0C((uint64_t)v21, v40, &qword_268621878);
  return sub_22EC400E0((uint64_t)v21, &qword_268621878);
}

uint64_t sub_22EC3D614@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_22EC3CD2C();
  *a1 = result;
  return result;
}

uint64_t sub_22EC3D640()
{
  return sub_22EC3CD68();
}

double sub_22EC3D670@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  sub_22EE7E090();
  v14.origin.x = a2;
  v14.origin.y = a3;
  v14.size.width = a4;
  v14.size.height = a5;
  CGRectGetMidY(v14);
  v15.origin.x = a2;
  v15.origin.y = a3;
  v15.size.width = a4;
  v15.size.height = a5;
  CGRectGetWidth(v15);
  v16.origin.x = a2;
  v16.origin.y = a3;
  v16.size.width = a4;
  v16.size.height = a5;
  CGRectGetWidth(v16);
  v17.origin.x = a2;
  v17.origin.y = a3;
  v17.size.width = a4;
  v17.size.height = a5;
  CGRectGetWidth(v17);
  sub_22EE7E080();
  v18.origin.x = a2;
  v18.origin.y = a3;
  v18.size.width = a4;
  v18.size.height = a5;
  CGRectGetMidX(v18);
  v19.origin.x = a2;
  v19.origin.y = a3;
  v19.size.width = a4;
  v19.size.height = a5;
  CGRectGetWidth(v19);
  v20.origin.x = a2;
  v20.origin.y = a3;
  v20.size.width = a4;
  v20.size.height = a5;
  CGRectGetWidth(v20);
  v21.origin.x = a2;
  v21.origin.y = a3;
  v21.size.width = a4;
  v21.size.height = a5;
  CGRectGetWidth(v21);
  sub_22EE7E080();
  double result = *(double *)&v11;
  *(_OWORD *)a1 = v11;
  *(_OWORD *)(a1 + 16) = v12;
  *(unsigned char *)(a1 + 32) = v13;
  return result;
}

double sub_22EC3D7F0@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  sub_22EC3D670((uint64_t)v8, a2, a3, a4, a5);
  double result = *(double *)v8;
  long long v7 = v8[1];
  *(_OWORD *)a1 = v8[0];
  *(_OWORD *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 32) = v9;
  return result;
}

uint64_t sub_22EC3D834()
{
  return sub_22EE7E950();
}

uint64_t sub_22EC3D84C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_22EC40A4C();

  return MEMORY[0x270F04808](a1, a2, a3, v6);
}

uint64_t sub_22EC3D8B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_22EC40A4C();

  return MEMORY[0x270F047D0](a1, a2, a3, v6);
}

uint64_t sub_22EC3D914(uint64_t a1)
{
  unint64_t v2 = sub_22EC40A4C();

  return MEMORY[0x270F047E0](a1, v2);
}

double sub_22EC3D960@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_22EE7D5E0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22EE7D850();
  uint64_t v7 = type metadata accessor for InAppPurchaseIconFrameCenter(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v1 + *(int *)(v7 + 20), v3);
  sub_22EE7E060();
  double result = *(double *)&v11;
  long long v9 = v12;
  *(_OWORD *)a1 = v11;
  *(_OWORD *)(a1 + 16) = v9;
  *(unsigned char *)(a1 + 32) = v13;
  return result;
}

double sub_22EC3DAD0@<D0>(uint64_t a1@<X8>)
{
  sub_22EC3D960((uint64_t)v4);
  double result = *(double *)v4;
  long long v3 = v4[1];
  *(_OWORD *)a1 = v4[0];
  *(_OWORD *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_22EC3DB18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22EC3F07C(&qword_268621920, (void (*)(uint64_t))type metadata accessor for InAppPurchaseIconFrameCenter);

  return MEMORY[0x270F04808](a1, a2, a3, v6);
}

uint64_t sub_22EC3DBAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22EC3F07C(&qword_268621920, (void (*)(uint64_t))type metadata accessor for InAppPurchaseIconFrameCenter);

  return MEMORY[0x270F047D0](a1, a2, a3, v6);
}

uint64_t sub_22EC3DC40(uint64_t a1)
{
  uint64_t v2 = sub_22EC3F07C(&qword_268621920, (void (*)(uint64_t))type metadata accessor for InAppPurchaseIconFrameCenter);

  return MEMORY[0x270F047E0](a1, v2);
}

double sub_22EC3DCBC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v4 = sub_22EE7D5E0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_1_1();
  uint64_t v6 = type metadata accessor for InAppPurchaseIconFrameRoundedSquare(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v2, v1 + *(int *)(v6 + 20), v4);
  sub_22EE7E070();
  double result = *(double *)&v8;
  *(_OWORD *)a1 = v8;
  *(_OWORD *)(a1 + 16) = v9;
  *(unsigned char *)(a1 + 32) = v10;
  return result;
}

uint64_t type metadata accessor for InAppPurchaseIconFrameRoundedSquare(uint64_t a1)
{
  return sub_22EAD01C0(a1, qword_268621690);
}

void *sub_22EC3DE28(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  long long v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *long long v3 = *a2;
    long long v3 = (void *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = a1 + v5;
    uint64_t v7 = (uint64_t)a2 + v5;
    uint64_t v8 = sub_22EE7D5E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_22EC3DF00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_22EE7D5E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t sub_22EC3DF84(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = (uint64_t)a2 + v5;
  uint64_t v8 = sub_22EE7D5E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 24))(v6, v7, v8);
  return a1;
}

uint64_t sub_22EC3E008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_22EE7D5E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_22EC3E08C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_22EE7D5E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_22EC3E110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_indexTm_0);
}

uint64_t sub_22EC3E128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_indexTm_0);
}

uint64_t sub_22EC3E140()
{
  return sub_22EC40544();
}

uint64_t sub_22EC3E14C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_22EE7D5E0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void *sub_22EC3E22C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = sub_22EE7D5E0();
  uint64_t v9 = *(void *)(v8 - 8);
  int v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v10;
  unsigned int v12 = v10 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (((*(_DWORD *)(v6 + 80) | v10) & 0x100000) != 0
    || ((((v7 & 0xFFFFFFFFFFFFFFF8) + v10 + 24) & ~(unint64_t)v10)
      + *(void *)(*(void *)(v8 - 8) + 64) <= 0x18
      ? (BOOL v13 = v12 > 7)
      : (BOOL v13 = 1),
        v13))
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (void *)(v17 + (((v12 | 7) + 16) & ~(unint64_t)(v12 | 7)));
    swift_retain();
  }
  else
  {
    uint64_t v14 = v8;
    (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
    *((unsigned char *)a1 + v7) = *((unsigned char *)a2 + v7);
    unint64_t v15 = ((unint64_t)a1 + v7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v16 = ((unint64_t)a2 + v7) & 0xFFFFFFFFFFFFFFF8;
    *(_OWORD *)(v15 + 8) = *(_OWORD *)(v16 + 8);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))((v15 + v11 + 24) & ~v11, (v16 + v11 + 24) & ~v11, v14);
  }
  return a1;
}

uint64_t sub_22EC3E3D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  unint64_t v4 = (*(void *)(v3 + 56) + a1) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = sub_22EE7D5E0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(uint64_t (**)(unint64_t, uint64_t))(v6 + 8);
  uint64_t v8 = v5;
  unint64_t v9 = (v4 + *(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);

  return v7(v9, v8);
}

uint64_t sub_22EC3E480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48);
  unint64_t v7 = v6 + a1;
  unint64_t v8 = v6 + a2;
  *(unsigned char *)unint64_t v7 = *(unsigned char *)v8;
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)((v7 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_OWORD *)((v8 & 0xFFFFFFFFFFFFFFF8) + 8);
  uint64_t v11 = sub_22EE7D5E0();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v12 + 16))((*(unsigned __int8 *)(v12 + 80) + 24 + v9) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80), (*(unsigned __int8 *)(v12 + 80) + 24 + v10) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80), v11);
  return a1;
}

uint64_t sub_22EC3E54C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40);
  unint64_t v7 = v6 + a1;
  unint64_t v8 = v6 + a2;
  *(unsigned char *)unint64_t v7 = *(unsigned char *)v8;
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFF8;
  *(void *)(v9 + 8) = *(void *)((v8 & 0xFFFFFFFFFFFFFFF8) + 8);
  *(void *)(v9 + 16) = *(void *)((v8 & 0xFFFFFFFFFFFFFFF8) + 16);
  uint64_t v11 = sub_22EE7D5E0();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v12 + 24))((*(unsigned __int8 *)(v12 + 80) + 24 + v9) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80), (*(unsigned __int8 *)(v12 + 80) + 24 + v10) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80), v11);
  return a1;
}

uint64_t sub_22EC3E620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  unint64_t v7 = v6 + a1;
  unint64_t v8 = v6 + a2;
  *(unsigned char *)unint64_t v7 = *(unsigned char *)v8;
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)((v7 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_OWORD *)((v8 & 0xFFFFFFFFFFFFFFF8) + 8);
  uint64_t v11 = sub_22EE7D5E0();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v12 + 32))((*(unsigned __int8 *)(v12 + 80) + 24 + v9) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80), (*(unsigned __int8 *)(v12 + 80) + 24 + v10) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80), v11);
  return a1;
}

uint64_t sub_22EC3E6EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  unint64_t v7 = v6 + a1;
  unint64_t v8 = v6 + a2;
  *(unsigned char *)unint64_t v7 = *(unsigned char *)v8;
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFF8;
  *(void *)(v9 + 8) = *(void *)((v8 & 0xFFFFFFFFFFFFFFF8) + 8);
  *(void *)(v9 + 16) = *(void *)((v8 & 0xFFFFFFFFFFFFFFF8) + 16);
  uint64_t v11 = sub_22EE7D5E0();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v12 + 40))((*(unsigned __int8 *)(v12 + 80) + 24 + v9) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80), (*(unsigned __int8 *)(v12 + 80) + 24 + v10) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80), v11);
  return a1;
}

uint64_t sub_22EC3E7C0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = sub_22EE7D5E0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  if (v7 <= v10) {
    unsigned int v11 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v11 = v7;
  }
  if (v11 <= 0xFE) {
    unsigned int v12 = 254;
  }
  else {
    unsigned int v12 = v11;
  }
  uint64_t v13 = *(void *)(v6 + 64);
  uint64_t v14 = *(unsigned __int8 *)(v9 + 80);
  if (!a2) {
    return 0;
  }
  uint64_t v15 = v8;
  if (a2 > v12)
  {
    unint64_t v16 = ((v14 + (v13 & 0xFFFFFFFFFFFFFFF8) + 24) & ~v14) + *(void *)(*(void *)(v8 - 8) + 64);
    char v17 = 8 * v16;
    if (v16 > 3) {
      goto LABEL_10;
    }
    unsigned int v19 = ((a2 - v12 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      int v18 = *(_DWORD *)((char *)a1 + v16);
      if (!v18) {
        goto LABEL_25;
      }
      goto LABEL_17;
    }
    if (v19 > 0xFF)
    {
      int v18 = *(unsigned __int16 *)((char *)a1 + v16);
      if (!*(unsigned __int16 *)((char *)a1 + v16)) {
        goto LABEL_25;
      }
      goto LABEL_17;
    }
    if (v19 >= 2)
    {
LABEL_10:
      int v18 = *((unsigned __int8 *)a1 + v16);
      if (!*((unsigned char *)a1 + v16)) {
        goto LABEL_25;
      }
LABEL_17:
      int v20 = (v18 - 1) << v17;
      if (v16 > 3) {
        int v20 = 0;
      }
      if (v16)
      {
        if (v16 > 3) {
          LODWORD(v16) = 4;
        }
        switch((int)v16)
        {
          case 2:
            LODWORD(v16) = *a1;
            break;
          case 3:
            LODWORD(v16) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            LODWORD(v16) = *(_DWORD *)a1;
            break;
          default:
            LODWORD(v16) = *(unsigned __int8 *)a1;
            break;
        }
      }
      int v25 = v12 + (v16 | v20);
      return (v25 + 1);
    }
  }
LABEL_25:
  if (v7 != v12)
  {
    unint64_t v22 = (unint64_t)a1 + v13;
    if (v11 > 0xFE)
    {
      unint64_t v21 = ((v22 & 0xFFFFFFFFFFFFFFF8) + v14 + 24) & ~v14;
      goto LABEL_31;
    }
    unsigned int v23 = *(unsigned __int8 *)v22;
    if (v23 < 2) {
      return 0;
    }
    int v25 = (v23 + 2147483646) & 0x7FFFFFFF;
    return (v25 + 1);
  }
  unint64_t v21 = (unint64_t)a1;
  uint64_t v10 = v7;
  uint64_t v15 = v5;
LABEL_31:

  return __swift_getEnumTagSinglePayload(v21, v10, v15);
}

void sub_22EC3EA28(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = sub_22EE7D5E0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int *)(v11 + 84);
  if (v9 <= v12) {
    unsigned int v13 = *(_DWORD *)(v11 + 84);
  }
  else {
    unsigned int v13 = v9;
  }
  if (v13 <= 0xFE) {
    unsigned int v14 = 254;
  }
  else {
    unsigned int v14 = v13;
  }
  uint64_t v15 = *(void *)(v8 + 64);
  uint64_t v16 = *(unsigned __int8 *)(v11 + 80);
  size_t v17 = ((v16 + (v15 & 0xFFFFFFFFFFFFFFF8) + 24) & ~v16) + *(void *)(*(void *)(v10 - 8) + 64);
  char v18 = 8 * v17;
  if (a3 <= v14)
  {
    int v19 = 0;
  }
  else if (v17 <= 3)
  {
    unsigned int v22 = ((a3 - v14 + ~(-1 << v18)) >> v18) + 1;
    if (HIWORD(v22))
    {
      int v19 = 4;
    }
    else if (v22 >= 0x100)
    {
      int v19 = 2;
    }
    else
    {
      int v19 = v22 > 1;
    }
  }
  else
  {
    int v19 = 1;
  }
  if (v14 < a2)
  {
    unsigned int v20 = ~v14 + a2;
    if (v17 < 4)
    {
      int v21 = (v20 >> v18) + 1;
      if (v17)
      {
        int v23 = v20 & ~(-1 << v18);
        bzero(a1, v17);
        if (v17 == 3)
        {
          *(_WORD *)a1 = v23;
          a1[2] = BYTE2(v23);
        }
        else if (v17 == 2)
        {
          *(_WORD *)a1 = v23;
        }
        else
        {
          *a1 = v23;
        }
      }
    }
    else
    {
      bzero(a1, v17);
      *(_DWORD *)a1 = v20;
      int v21 = 1;
    }
    switch(v19)
    {
      case 1:
        a1[v17] = v21;
        return;
      case 2:
        *(_WORD *)&a1[v17] = v21;
        return;
      case 3:
        goto LABEL_45;
      case 4:
        *(_DWORD *)&a1[v17] = v21;
        return;
      default:
        return;
    }
  }
  switch(v19)
  {
    case 1:
      a1[v17] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 2:
      *(_WORD *)&a1[v17] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 3:
LABEL_45:
      __break(1u);
      JUMPOUT(0x22EC3ED08);
    case 4:
      *(_DWORD *)&a1[v17] = 0;
      goto LABEL_26;
    default:
LABEL_26:
      if (!a2) {
        return;
      }
LABEL_27:
      if (v9 == v14)
      {
        unint64_t v24 = (unint64_t)a1;
        uint64_t v25 = a2;
        uint64_t v12 = v9;
        uint64_t v10 = v7;
      }
      else
      {
        unint64_t v26 = (unint64_t)&a1[v15];
        if (v13 <= 0xFE)
        {
          *(unsigned char *)unint64_t v26 = a2 + 1;
          return;
        }
        unint64_t v24 = ((v26 & 0xFFFFFFFFFFFFFFF8) + v16 + 24) & ~v16;
        uint64_t v25 = a2;
      }
      __swift_storeEnumTagSinglePayload(v24, v25, v12, v10);
      return;
  }
}

uint64_t type metadata accessor for InAppPurchaseIconFrame()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_22EC3ED48()
{
  return sub_22EADDD7C(&qword_268621720, &qword_268621688);
}

uint64_t sub_22EC3ED84()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EC3EDC8()
{
  return sub_22EADDD7C(&qword_268621728, &qword_268621730);
}

double sub_22EC3EE04@<D0>(uint64_t a1@<X8>)
{
  sub_22EC3DCBC((uint64_t)v4);
  double result = *(double *)v4;
  long long v3 = v4[1];
  *(_OWORD *)a1 = v4[0];
  *(_OWORD *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_22EC3EE48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22EC3F07C(&qword_268621748, (void (*)(uint64_t))type metadata accessor for InAppPurchaseIconFrameRoundedSquare);

  return MEMORY[0x270F04808](a1, a2, a3, v6);
}

uint64_t sub_22EC3EEDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22EC3F07C(&qword_268621748, (void (*)(uint64_t))type metadata accessor for InAppPurchaseIconFrameRoundedSquare);

  return MEMORY[0x270F047D0](a1, a2, a3, v6);
}

uint64_t sub_22EC3EF70(uint64_t a1)
{
  uint64_t v2 = sub_22EC3F07C(&qword_268621748, (void (*)(uint64_t))type metadata accessor for InAppPurchaseIconFrameRoundedSquare);

  return MEMORY[0x270F047E0](a1, v2);
}

uint64_t sub_22EC3EFEC()
{
  return sub_22EC3F07C(&qword_268621738, (void (*)(uint64_t))type metadata accessor for InAppPurchaseIconFrameRoundedSquare);
}

uint64_t sub_22EC3F034()
{
  return sub_22EC3F07C(&qword_268621740, (void (*)(uint64_t))type metadata accessor for InAppPurchaseIconFrameRoundedSquare);
}

uint64_t sub_22EC3F07C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22EC3F0C4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(type metadata accessor for InAppPurchaseIconFrame() - 8) + 80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + ((v2 + 32) & ~v2), v1);
  sub_22EE7D5E0();
  OUTLINED_FUNCTION_2_0();
  uint64_t v3 = OUTLINED_FUNCTION_8_16();
  v4(v3);

  return swift_deallocObject();
}

uint64_t sub_22EC3F1D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(type metadata accessor for InAppPurchaseIconFrame() - 8);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_22EC3BB74(v6, v3, v4, a1);
}

unint64_t sub_22EC3F274()
{
  unint64_t result = qword_268621768;
  if (!qword_268621768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268621768);
  }
  return result;
}

unint64_t sub_22EC3F2C0()
{
  unint64_t result = qword_268621788;
  if (!qword_268621788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268621788);
  }
  return result;
}

uint64_t sub_22EC3F30C@<X0>(uint64_t a1@<X8>)
{
  return sub_22EC3C640(*(void *)(v1 + 32), a1, *(double *)(v1 + 40));
}

uint64_t type metadata accessor for InAppPurchaseIconFrameOverlay(uint64_t a1)
{
  return sub_22EAD01C0(a1, (uint64_t *)&unk_268621828);
}

double sub_22EC3F33C@<D0>(uint64_t a1@<X8>)
{
  return sub_22EC3C70C(*(void *)(v1 + 32), a1);
}

unint64_t sub_22EC3F34C()
{
  unint64_t result = qword_2686217B0;
  if (!qword_2686217B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686217A8);
    sub_22EC40618(&qword_2686217B8, &qword_2686217C0, (void (*)(void))sub_22EC3F3F4);
    sub_22EADD474();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686217B0);
  }
  return result;
}

unint64_t sub_22EC3F3F4()
{
  unint64_t result = qword_2686217C8;
  if (!qword_2686217C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686217D0);
    sub_22EADDD7C(&qword_2686217D8, &qword_2686217E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686217C8);
  }
  return result;
}

uint64_t sub_22EC3F494@<X0>(uint64_t a1@<X8>)
{
  return sub_22EC3C9C8(*(void *)(v1 + 32), a1, *(double *)(v1 + 40));
}

unint64_t sub_22EC3F4A4()
{
  unint64_t result = qword_2686217F0;
  if (!qword_2686217F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686217E8);
    sub_22EC40618(&qword_2686217F8, &qword_268621800, (void (*)(void))sub_22EC3F544);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686217F0);
  }
  return result;
}

uint64_t sub_22EC3F544()
{
  return sub_22EC40618(&qword_268621808, &qword_268621810, (void (*)(void))sub_22EC3F574);
}

unint64_t sub_22EC3F574()
{
  unint64_t result = qword_268621818;
  if (!qword_268621818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268621818);
  }
  return result;
}

double sub_22EC3F5C0(uint64_t a1)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 1;
  double result = 0.0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  return result;
}

uint64_t sub_22EC3F5E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_22EC3CD2C();
  *a1 = result;
  return result;
}

unint64_t sub_22EC3F614()
{
  unint64_t result = qword_268621820;
  if (!qword_268621820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268621820);
  }
  return result;
}

ValueMetadata *_s49InAppPurchaseIconFramePlusShapeForegroundStyleKeyOMa()
{
  return &_s49InAppPurchaseIconFramePlusShapeForegroundStyleKeyON;
}

ValueMetadata *type metadata accessor for UsesInAppPurchaseIconFrameKey()
{
  return &type metadata for UsesInAppPurchaseIconFrameKey;
}

uint64_t *sub_22EC3F680(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    a1[1] = a2[1];
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_22EE7D5E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = *(int *)(a3 + 28);
    uint64_t v12 = (char *)v4 + v11;
    unsigned int v13 = (char *)a2 + v11;
    uint64_t v14 = *(void *)v13;
    LOBYTE(v13) = v13[8];
    *(void *)uint64_t v12 = v14;
    v12[8] = (char)v13;
  }
  swift_retain();
  return v4;
}

uint64_t sub_22EC3F780(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  uint64_t v3 = sub_22EE7D5E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);

  return swift_release();
}

uint64_t sub_22EC3F804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_22EE7D5E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = (uint64_t *)(a2 + v10);
  uint64_t v13 = *v12;
  LOBYTE(v12) = *((unsigned char *)v12 + 8);
  *(void *)uint64_t v11 = v13;
  *(unsigned char *)(v11 + 8) = (_BYTE)v12;
  swift_retain();
  return a1;
}

uint64_t sub_22EC3F8B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_22EE7D5E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = (uint64_t *)(a2 + v10);
  uint64_t v13 = *v12;
  LOBYTE(v12) = *((unsigned char *)v12 + 8);
  *(void *)uint64_t v11 = v13;
  *(unsigned char *)(v11 + 8) = (_BYTE)v12;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_22EC3F978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_22EE7D5E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(void *)uint64_t v11 = *(void *)v12;
  *(unsigned char *)(v11 + 8) = *(unsigned char *)(v12 + 8);
  return a1;
}

uint64_t sub_22EC3FA28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_22EE7D5E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = (uint64_t *)(a2 + v10);
  uint64_t v13 = *v12;
  LOBYTE(v12) = *((unsigned char *)v12 + 8);
  *(void *)uint64_t v11 = v13;
  *(unsigned char *)(v11 + 8) = (_BYTE)v12;
  swift_release();
  return a1;
}

uint64_t sub_22EC3FAE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EC3FAF4);
}

uint64_t sub_22EC3FAF4(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = sub_22EE7D5E0();
    uint64_t v11 = (uint64_t)&a1[*(int *)(a3 + 24)];
    return __swift_getEnumTagSinglePayload(v11, a2, v10);
  }
}

uint64_t sub_22EC3FB7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EC3FB90);
}

unsigned char *sub_22EC3FB90(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  BOOL v5 = result;
  if (a3 == 254)
  {
    *unint64_t result = a2 + 1;
  }
  else
  {
    uint64_t v7 = sub_22EE7D5E0();
    uint64_t v8 = (uint64_t)&v5[*(int *)(a4 + 24)];
    return (unsigned char *)__swift_storeEnumTagSinglePayload(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_22EC3FC0C()
{
  uint64_t result = sub_22EE7D5E0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_22EC3FCB8()
{
  return swift_getWitnessTable();
}

uint64_t sub_22EC3FF9C()
{
  return swift_getOpaqueTypeConformance2();
}

char *sub_22EC3FFB8(char *result, void *(*a2)(uint64_t *__return_ptr))
{
  uint64_t v2 = result;
  if (*result)
  {
    char v3 = 1;
  }
  else
  {
    uint64_t result = (char *)a2(&v4);
    char v3 = v4;
  }
  *uint64_t v2 = v3;
  return result;
}

uint64_t type metadata accessor for InAppPurchaseIconFrameCenter(uint64_t a1)
{
  return sub_22EAD01C0(a1, (uint64_t *)&unk_268621880);
}

uint64_t sub_22EC4002C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for InAppPurchaseIconFrameCenter(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22EC40090(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_2_0();
  uint64_t v3 = OUTLINED_FUNCTION_8_16();
  v4(v3);
  return a1;
}

uint64_t sub_22EC400E0(uint64_t a1, uint64_t *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_2_0();
  uint64_t v3 = OUTLINED_FUNCTION_8_16();
  v4(v3);
  return a1;
}

ValueMetadata *type metadata accessor for Plus()
{
  return &type metadata for Plus;
}

ValueMetadata *type metadata accessor for InAppPurchaseIconFrameShapeStyle()
{
  return &type metadata for InAppPurchaseIconFrameShapeStyle;
}

uint64_t *sub_22EC4014C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v5 = *(int *)(a3 + 20);
    int v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_22EE7D5E0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_22EC40218(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  sub_22EE7D5E0();
  OUTLINED_FUNCTION_2_0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);

  return v5(v2, v3);
}

void *sub_22EC40278(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  int v6 = (char *)a2 + v4;
  uint64_t v7 = sub_22EE7D5E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

void *sub_22EC402F4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  int v6 = (char *)a2 + v4;
  uint64_t v7 = sub_22EE7D5E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

void *sub_22EC40370(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  int v6 = (char *)a2 + v4;
  uint64_t v7 = sub_22EE7D5E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_22EC403EC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  int v6 = (char *)a2 + v4;
  uint64_t v7 = sub_22EE7D5E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_22EC40468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EC4047C);
}

uint64_t __swift_get_extra_inhabitant_indexTm_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = sub_22EE7D5E0();

  return __swift_getEnumTagSinglePayload(v4, a2, v5);
}

uint64_t sub_22EC404CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EC404E0);
}

uint64_t __swift_store_extra_inhabitant_indexTm_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = sub_22EE7D5E0();

  return __swift_storeEnumTagSinglePayload(v5, a2, a2, v6);
}

uint64_t sub_22EC40534()
{
  return sub_22EC40544();
}

uint64_t sub_22EC40544()
{
  uint64_t result = sub_22EE7D5E0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_22EC405D4()
{
  return sub_22EC40618(&qword_268621890, &qword_268621850, (void (*)(void))sub_22EC40694);
}

uint64_t sub_22EC40618(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22EC40694()
{
  unint64_t result = qword_268621898;
  if (!qword_268621898)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621848);
    sub_22EC40734();
    sub_22EADDD7C(&qword_2686218C8, &qword_2686218D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268621898);
  }
  return result;
}

unint64_t sub_22EC40734()
{
  unint64_t result = qword_2686218A0;
  if (!qword_2686218A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621840);
    sub_22EC407D4();
    sub_22EADDD7C(&qword_2686218B8, &qword_2686218C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686218A0);
  }
  return result;
}

unint64_t sub_22EC407D4()
{
  unint64_t result = qword_2686218A8;
  if (!qword_2686218A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621838);
    sub_22EC3F07C(&qword_268621740, (void (*)(uint64_t))type metadata accessor for InAppPurchaseIconFrameRoundedSquare);
    sub_22EADDD7C(&qword_2686218B0, &qword_268621858);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686218A8);
  }
  return result;
}

uint64_t sub_22EC408A4()
{
  return sub_22EADDD7C(&qword_2686218D8, &qword_2686218E0);
}

uint64_t sub_22EC408E0()
{
  return sub_22EC3F07C(&qword_2686218E8, (void (*)(uint64_t))type metadata accessor for InAppPurchaseIconFrameCenter);
}

uint64_t sub_22EC40928()
{
  return sub_22EC3F07C(&qword_2686218F0, (void (*)(uint64_t))type metadata accessor for InAppPurchaseIconFrameCenter);
}

uint64_t sub_22EC40970()
{
  return sub_22EADDD7C(&qword_2686218F8, &qword_268621900);
}

unint64_t sub_22EC409B0()
{
  unint64_t result = qword_268621908;
  if (!qword_268621908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268621908);
  }
  return result;
}

unint64_t sub_22EC40A00()
{
  unint64_t result = qword_268621910;
  if (!qword_268621910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268621910);
  }
  return result;
}

unint64_t sub_22EC40A4C()
{
  unint64_t result = qword_268621918;
  if (!qword_268621918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268621918);
  }
  return result;
}

uint64_t sub_22EC40A98()
{
  OUTLINED_FUNCTION_10_16();
  OUTLINED_FUNCTION_4_20();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_12();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C968);
  uint64_t v4 = OUTLINED_FUNCTION_14(v3);
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_0_16();
  OUTLINED_FUNCTION_13_16();
  OUTLINED_FUNCTION_12_17();
  OUTLINED_FUNCTION_11_16();
  if (v5)
  {
    OUTLINED_FUNCTION_4_2();
    uint64_t v6 = OUTLINED_FUNCTION_2_13();
    v7(v6);
    OUTLINED_FUNCTION_5_16();
  }
  else
  {
    OUTLINED_FUNCTION_1_21();
  }
  __swift_getEnumTagSinglePayload(v0, 1, v1);
  sub_22EB36F9C(v0);
  return OUTLINED_FUNCTION_8_19();
}

uint64_t sub_22EC40BAC()
{
  OUTLINED_FUNCTION_10_16();
  OUTLINED_FUNCTION_4_20();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_12();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C968);
  uint64_t v4 = OUTLINED_FUNCTION_14(v3);
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_0_16();
  OUTLINED_FUNCTION_13_16();
  OUTLINED_FUNCTION_12_17();
  OUTLINED_FUNCTION_11_16();
  if (v5)
  {
    OUTLINED_FUNCTION_4_2();
    uint64_t v6 = OUTLINED_FUNCTION_2_13();
    v7(v6);
    OUTLINED_FUNCTION_5_16();
  }
  else
  {
    OUTLINED_FUNCTION_1_21();
  }
  __swift_getEnumTagSinglePayload(v0, 1, v1);
  sub_22EB36F9C(v0);
  return OUTLINED_FUNCTION_8_19();
}

uint64_t sub_22EC40CC0()
{
  OUTLINED_FUNCTION_10_16();
  OUTLINED_FUNCTION_4_20();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_12();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C968);
  uint64_t v4 = OUTLINED_FUNCTION_14(v3);
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_0_16();
  OUTLINED_FUNCTION_13_16();
  OUTLINED_FUNCTION_12_17();
  OUTLINED_FUNCTION_11_16();
  if (v5)
  {
    OUTLINED_FUNCTION_4_2();
    uint64_t v6 = OUTLINED_FUNCTION_2_13();
    v7(v6);
    OUTLINED_FUNCTION_5_16();
  }
  else
  {
    OUTLINED_FUNCTION_1_21();
  }
  __swift_getEnumTagSinglePayload(v0, 1, v1);
  sub_22EB36F9C(v0);
  return OUTLINED_FUNCTION_8_19();
}

uint64_t sub_22EC40DD8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Product.TaskState(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22EC40E34()
{
  OUTLINED_FUNCTION_10_16();
  OUTLINED_FUNCTION_4_20();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_12();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C968);
  uint64_t v4 = OUTLINED_FUNCTION_14(v3);
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_0_16();
  OUTLINED_FUNCTION_13_16();
  OUTLINED_FUNCTION_12_17();
  OUTLINED_FUNCTION_11_16();
  if (v5)
  {
    OUTLINED_FUNCTION_4_2();
    uint64_t v6 = OUTLINED_FUNCTION_2_13();
    v7(v6);
    OUTLINED_FUNCTION_5_16();
  }
  else
  {
    OUTLINED_FUNCTION_1_21();
  }
  __swift_getEnumTagSinglePayload(v0, 1, v1);
  sub_22EB36F9C(v0);
  return OUTLINED_FUNCTION_8_19();
}

id *sub_22EC40F48(id *a1, id *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v7 = type metadata accessor for Product.TaskState(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v12 = sub_22EE7F780();
      (*(void (**)(id *, id *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        goto LABEL_9;
      }
      id v9 = *a2;
      id v10 = *a2;
      *a1 = v9;
    }
    swift_storeEnumTagMultiPayload();
LABEL_9:
    uint64_t v13 = a3[5];
    uint64_t v14 = a3[6];
    uint64_t v15 = (id *)((char *)a1 + v13);
    uint64_t v16 = (id *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    char v18 = (id *)((char *)a1 + v14);
    int v19 = (id *)((char *)a2 + v14);
    uint64_t v20 = v19[1];
    *char v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = a3[7];
    uint64_t v22 = a3[8];
    int v23 = (id *)((char *)a1 + v21);
    unint64_t v24 = (id *)((char *)a2 + v21);
    uint64_t v25 = v24[1];
    *int v23 = *v24;
    v23[1] = v25;
    unint64_t v26 = (id *)((char *)a1 + v22);
    uint64_t v27 = (id *)((char *)a2 + v22);
    uint64_t v28 = v27[1];
    *unint64_t v26 = *v27;
    v26[1] = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return a1;
  }
  uint64_t v11 = (char *)*a2;
  *a1 = *a2;
  a1 = (id *)&v11[(v5 + 16) & ~(unint64_t)v5];
  swift_retain();
  return a1;
}

uint64_t sub_22EC410EC(id *a1)
{
  type metadata accessor for Product.TaskState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v3 = sub_22EE7F780();
    (*(void (**)(id *, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  }
  else if (!EnumCaseMultiPayload)
  {
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_22EC411C0(void *a1, id *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Product.TaskState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v10 = sub_22EE7F780();
    (*(void (**)(void *, id *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_7;
    }
    id v8 = *a2;
    id v9 = *a2;
    *a1 = v8;
  }
  swift_storeEnumTagMultiPayload();
LABEL_7:
  uint64_t v11 = a3[5];
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)((char *)a1 + v11);
  uint64_t v14 = (id *)((char *)a2 + v11);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = (void *)((char *)a1 + v12);
  uint64_t v17 = (id *)((char *)a2 + v12);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = a3[7];
  uint64_t v20 = a3[8];
  uint64_t v21 = (void *)((char *)a1 + v19);
  uint64_t v22 = (id *)((char *)a2 + v19);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  unint64_t v24 = (void *)((char *)a1 + v20);
  uint64_t v25 = (id *)((char *)a2 + v20);
  uint64_t v26 = v25[1];
  void *v24 = *v25;
  v24[1] = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

id *sub_22EC41314(id *a1, id *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_22EC40DD8((uint64_t)a1);
    uint64_t v6 = type metadata accessor for Product.TaskState(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = sub_22EE7F780();
      (*(void (**)(id *, id *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        goto LABEL_8;
      }
      id v8 = *a2;
      id v9 = *a2;
      *a1 = v8;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_8:
  uint64_t v11 = a3[5];
  uint64_t v12 = (id *)((char *)a1 + v11);
  uint64_t v13 = (id *)((char *)a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[6];
  uint64_t v15 = (id *)((char *)a1 + v14);
  uint64_t v16 = (id *)((char *)a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  uint64_t v18 = (id *)((char *)a1 + v17);
  uint64_t v19 = (id *)((char *)a2 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[8];
  uint64_t v21 = (id *)((char *)a1 + v20);
  uint64_t v22 = (id *)((char *)a2 + v20);
  *uint64_t v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_22EC414C4(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Product.TaskState(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_22EE7F780();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v8] = *(_OWORD *)&a2[v8];
  uint64_t v9 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  return a1;
}

char *sub_22EC415B0(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_22EC40DD8((uint64_t)a1);
    uint64_t v6 = type metadata accessor for Product.TaskState(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_22EE7F780();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v12 = *(void *)v10;
  uint64_t v11 = *((void *)v10 + 1);
  *(void *)uint64_t v9 = v12;
  *((void *)v9 + 1) = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v17 = *(void *)v15;
  uint64_t v16 = *((void *)v15 + 1);
  *(void *)uint64_t v14 = v17;
  *((void *)v14 + 1) = v16;
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[7];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v22 = *(void *)v20;
  uint64_t v21 = *((void *)v20 + 1);
  *(void *)uint64_t v19 = v22;
  *((void *)v19 + 1) = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[8];
  unint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  uint64_t v27 = *(void *)v25;
  uint64_t v26 = *((void *)v25 + 1);
  *(void *)unint64_t v24 = v27;
  *((void *)v24 + 1) = v26;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22EC416F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EC41708);
}

uint64_t sub_22EC41708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Product.TaskState(0);
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t sub_22EC41798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EC417AC);
}

void sub_22EC417AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for Product.TaskState(0);
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
}

uint64_t type metadata accessor for SubscriptionOfferCopyWriter()
{
  uint64_t result = qword_268621928;
  if (!qword_268621928) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_22EC41880()
{
  uint64_t result = type metadata accessor for Product.TaskState(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_16()
{
  return sub_22EB36F38(v1, v0);
}

uint64_t OUTLINED_FUNCTION_1_21()
{
  __swift_storeEnumTagSinglePayload(v0, 1, 1, v2);
  return sub_22EC40DD8(v1);
}

uint64_t OUTLINED_FUNCTION_2_13()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_5_16()
{
  return __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_8_19()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_10_16()
{
  return type metadata accessor for Product.TaskState(0);
}

uint64_t OUTLINED_FUNCTION_12_17()
{
  return sub_22EE7F780();
}

uint64_t OUTLINED_FUNCTION_13_16()
{
  return swift_getEnumCaseMultiPayload();
}

ValueMetadata *_s9HeaderKeyVMa()
{
  return &_s9HeaderKeyVN;
}

ValueMetadata *_s13FullHeightKeyVMa()
{
  return &_s13FullHeightKeyVN;
}

uint64_t type metadata accessor for SubscriptionOfferViewBackgroundReaderModifier()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_22EC41A68()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EC41AAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v20 = a1;
  uint64_t v21 = a3;
  type metadata accessor for SubscriptionOfferViewBackgroundReaderModifier();
  swift_getWitnessTable();
  uint64_t v4 = sub_22EE7D9A0();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686219B8);
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v7 = sub_22EC41EC0();
  uint64_t v22 = v4;
  uint64_t v23 = a2;
  uint64_t v24 = v5;
  uint64_t v25 = WitnessTable;
  unint64_t v26 = v7;
  v18[1] = MEMORY[0x263F1AFB0];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v19 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v18 - v12;
  *(void *)(swift_allocObject() + 16) = a2;
  uint64_t v14 = swift_checkMetadataState();
  sub_22EE7E4D0();
  swift_release();
  uint64_t v22 = v14;
  uint64_t v23 = a2;
  uint64_t v24 = v5;
  uint64_t v25 = WitnessTable;
  unint64_t v26 = v7;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_22EB69440(v10, OpaqueTypeMetadata2, OpaqueTypeConformance2);
  uint64_t v16 = *(void (**)(char *, uint64_t))(v19 + 8);
  v16(v10, OpaqueTypeMetadata2);
  sub_22EB69440(v13, OpaqueTypeMetadata2, OpaqueTypeConformance2);
  return ((uint64_t (*)(char *, uint64_t))v16)(v13, OpaqueTypeMetadata2);
}

uint64_t sub_22EC41D18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686219D0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v13 - v8;
  if (a1)
  {
    swift_retain();
    uint64_t v10 = sub_22EE7CF20();
    char v11 = sub_22EE7DE70();
    v13[1] = a1;
    v13[2] = v10;
    char v14 = v11;
    swift_dynamicCastMetatype();
    __swift_instantiateConcreteTypeFromMangledName(qword_2686219E0);
    sub_22EC41FB0();
    sub_22EE7E500();
    swift_release();
    sub_22EC4203C((uint64_t)v6, (uint64_t)v9);
    sub_22EC4203C((uint64_t)v9, a2);
    return __swift_storeEnumTagSinglePayload(a2, 0, 1, v4);
  }
  else
  {
    return __swift_storeEnumTagSinglePayload(a2, 1, 1, v4);
  }
}

uint64_t sub_22EC41EB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_22EC41AAC(a1, *(void *)(a2 + 16), a3);
}

unint64_t sub_22EC41EC0()
{
  unint64_t result = qword_2686219C0;
  if (!qword_2686219C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686219B8);
    sub_22EC41F34();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686219C0);
  }
  return result;
}

unint64_t sub_22EC41F34()
{
  unint64_t result = qword_2686219C8;
  if (!qword_2686219C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686219D0);
    sub_22EC41FB0();
    sub_22EBDE744();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686219C8);
  }
  return result;
}

unint64_t sub_22EC41FB0()
{
  unint64_t result = qword_2686219D8;
  if (!qword_2686219D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_2686219E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686219D8);
  }
  return result;
}

uint64_t sub_22EC42024()
{
  return swift_deallocObject();
}

uint64_t sub_22EC42034@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22EC41D18(a1, a2);
}

uint64_t sub_22EC4203C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686219D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22EC420A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EC42174@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F8);
  MEMORY[0x270FA5388](v4 - 8);
  OUTLINED_FUNCTION_11_0();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = _s11PriceStringOMa(0);
  OUTLINED_FUNCTION_2_0();
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v62 = (char *)&v53 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861D090);
  MEMORY[0x270FA5388](v14 - 8);
  OUTLINED_FUNCTION_11_0();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = type metadata accessor for ProductViewButtonConfiguration(0);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v19);
  OUTLINED_FUNCTION_11_0();
  uint64_t v22 = v21 - v20;
  *a2 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDD8);
  swift_storeEnumTagMultiPayload();
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861D098);
  uint64_t v64 = a1;
  uint64_t v23 = (char *)a2 + *(int *)(v63 + 40);
  *(_OWORD *)uint64_t v23 = 0u;
  *((_OWORD *)v23 + 1) = 0u;
  sub_22EADAD08(a1, v17, &qword_26861D090);
  if (__swift_getEnumTagSinglePayload(v17, 1, v18) == 1)
  {
    sub_22EB0584C(v17, &qword_26861D090);
    sub_22EC425D4(*(void *)v23, *((void *)v23 + 1), *((void *)v23 + 2), *((void *)v23 + 3));
    uint64_t v24 = 0;
    *(_OWORD *)uint64_t v23 = 0u;
    *((_OWORD *)v23 + 1) = 0u;
  }
  else
  {
    sub_22EC45A68(v17, v22, (void (*)(void))type metadata accessor for ProductViewButtonConfiguration);
    sub_22EADAD08(v22 + *(int *)(v18 + 20), v7, &qword_26861C9F8);
    if (__swift_getEnumTagSinglePayload(v7, 1, v8) == 1)
    {
      sub_22EB0584C(v7, &qword_26861C9F8);
      uint64_t v25 = sub_22EC4E990(v22, (uint64_t)v12, (void (*)(void))_s11PriceStringOMa);
      uint64_t v61 = sub_22ECE508C(v25);
      uint64_t v27 = v26;
      char v29 = v28;
      uint64_t v31 = v30;
    }
    else
    {
      uint64_t v32 = (uint64_t)v62;
      sub_22EC45A68(v7, (uint64_t)v62, (void (*)(void))_s11PriceStringOMa);
      uint64_t v33 = sub_22EC4E990(v22, (uint64_t)v12, (void (*)(void))_s11PriceStringOMa);
      uint64_t v57 = sub_22ECE508C(v33);
      uint64_t v59 = v34;
      uint64_t v60 = v35;
      int v58 = v36 & 1;
      sub_22EC45A14((uint64_t)v12, (void (*)(void))_s11PriceStringOMa);
      uint64_t v37 = sub_22EC4E990(v32, (uint64_t)v12, (void (*)(void))_s11PriceStringOMa);
      uint64_t v54 = sub_22ECE508C(v37);
      uint64_t v55 = v38;
      uint64_t v40 = v39;
      LOBYTE(v32) = v41 & 1;
      sub_22EC45A14((uint64_t)v12, (void (*)(void))_s11PriceStringOMa);
      uint64_t v42 = v57;
      uint64_t v43 = v59;
      char v44 = v58;
      uint64_t v61 = sub_22EE7E0C0();
      uint64_t v46 = v45;
      int v56 = v47;
      uint64_t v53 = v48;
      uint64_t v49 = v40;
      uint64_t v27 = v46;
      sub_22EB051EC(v54, v49, v32);
      uint64_t v31 = v53;
      swift_bridgeObjectRelease();
      sub_22EB051EC(v42, v43, v44);
      char v29 = v56;
      swift_bridgeObjectRelease();
      uint64_t v12 = v62;
    }
    sub_22EC45A14((uint64_t)v12, (void (*)(void))_s11PriceStringOMa);
    sub_22EC425D4(*(void *)v23, *((void *)v23 + 1), *((void *)v23 + 2), *((void *)v23 + 3));
    *(void *)uint64_t v23 = v61;
    *((void *)v23 + 1) = v27;
    *((void *)v23 + 2) = v29 & 1;
    *((void *)v23 + 3) = v31;
    uint64_t v24 = *(void *)(v22 + *(int *)(v18 + 32));
    sub_22EC45A14(v22, (void (*)(void))type metadata accessor for ProductViewButtonConfiguration);
  }
  uint64_t v51 = v63;
  uint64_t v50 = v64;
  *(uint64_t *)((char *)a2 + *(int *)(v63 + 44)) = v24;
  return sub_22EADAE38(v50, (uint64_t)a2 + *(int *)(v51 + 36), &qword_26861D090);
}

uint64_t sub_22EC425D4(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_22EB051EC(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_22EC42618@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v68 = a1;
  uint64_t v69 = a2;
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v64 = *(void *)(a1 + 24);
  sub_22EE7EA40();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621A70);
  OUTLINED_FUNCTION_2_4();
  OUTLINED_FUNCTION_11_9();
  swift_getWitnessTable();
  sub_22EE7EB10();
  OUTLINED_FUNCTION_13_17();
  uint64_t v3 = sub_22EE7E8A0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v66 = v4;
  OUTLINED_FUNCTION_9_7();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_9_11();
  uint64_t v61 = v6;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621A78);
  uint64_t v55 = v3;
  uint64_t v7 = sub_22EE7CEE0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v67 = v8;
  OUTLINED_FUNCTION_9_7();
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_9_11();
  uint64_t v63 = v10;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621A80);
  OUTLINED_FUNCTION_2_4();
  OUTLINED_FUNCTION_11_9();
  swift_getWitnessTable();
  sub_22EE7EAF0();
  swift_getWitnessTable();
  sub_22EE7EA40();
  uint64_t v11 = sub_22EE80040();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v92 = sub_22EC4DF14(&qword_268621A88, (void (*)(uint64_t))type metadata accessor for ProductViewButtonPlaceholder);
  uint64_t v90 = swift_getWitnessTable();
  uint64_t v53 = swift_getWitnessTable();
  uint64_t v88 = v53;
  uint64_t v89 = sub_22EADDD7C(&qword_268621A90, &qword_268621A78);
  uint64_t v62 = MEMORY[0x263F18E48];
  uint64_t v51 = v7;
  uint64_t v50 = swift_getWitnessTable();
  uint64_t v87 = swift_getWitnessTable();
  uint64_t v47 = v11;
  uint64_t v49 = swift_getWitnessTable();
  uint64_t v83 = v7;
  uint64_t v84 = v11;
  uint64_t v85 = v50;
  uint64_t v86 = v49;
  uint64_t v54 = MEMORY[0x263F1B028];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  OUTLINED_FUNCTION_0_0();
  uint64_t v57 = v12;
  OUTLINED_FUNCTION_9_7();
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_9_11();
  v45[0] = v14;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621A98);
  uint64_t v52 = sub_22EE7CEE0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v58 = v15;
  OUTLINED_FUNCTION_9_7();
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_9_11();
  v45[1] = v17;
  sub_22EE7DD90();
  sub_22EE7CEE0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v59 = v18;
  uint64_t v60 = v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v46 = (char *)v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  int v56 = (char *)v45 - v22;
  uint64_t v23 = v2;
  uint64_t v76 = v2;
  uint64_t v25 = v64;
  uint64_t v24 = v65;
  uint64_t v77 = v64;
  uint64_t v78 = v65;
  sub_22EE7E890();
  sub_22EE7ED60();
  uint64_t v73 = v23;
  uint64_t v74 = v25;
  uint64_t v75 = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268621AA0);
  sub_22EC4E154(&qword_268621AA8, &qword_268621AA0);
  sub_22EE7E630();
  OUTLINED_FUNCTION_5_2();
  v26();
  uint64_t v70 = v23;
  uint64_t v71 = v25;
  uint64_t v72 = v24;
  uint64_t v27 = swift_checkMetadataState();
  uint64_t v29 = v50;
  uint64_t v28 = v51;
  uint64_t v30 = v49;
  sub_22EE7E510();
  OUTLINED_FUNCTION_5_2();
  v31();
  uint64_t v32 = *(void *)(v24 + *(int *)(v68 + 44));
  uint64_t v83 = v28;
  uint64_t v84 = v27;
  uint64_t v85 = v29;
  uint64_t v86 = v30;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_22ED6AAB8(v32);
  OUTLINED_FUNCTION_5_2();
  v34();
  swift_getKeyPath();
  uint64_t v35 = sub_22EADDD7C(&qword_268621AB8, &qword_268621A98);
  uint64_t v81 = OpaqueTypeConformance2;
  uint64_t v82 = v35;
  uint64_t v36 = swift_getWitnessTable();
  uint64_t v37 = v46;
  sub_22EB00CB8();
  swift_release();
  OUTLINED_FUNCTION_5_2();
  v38();
  uint64_t v39 = sub_22EC4DF14((unint64_t *)&qword_26861C3C0, MEMORY[0x263F1A470]);
  uint64_t v79 = v36;
  uint64_t v80 = v39;
  uint64_t v40 = v59;
  uint64_t v41 = swift_getWitnessTable();
  uint64_t v42 = v56;
  sub_22EB69440(v37, v40, v41);
  uint64_t v43 = *(void (**)(char *, uint64_t))(v60 + 8);
  v43(v37, v40);
  sub_22EB69440(v42, v40, v41);
  return ((uint64_t (*)(char *, uint64_t))v43)(v42, v40);
}

uint64_t sub_22EC42DA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v77 = a4;
  uint64_t v78 = a3;
  uint64_t v71 = a1;
  uint64_t v5 = type metadata accessor for ProductViewButtonPlaceholder(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v69 = (void *)((char *)v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v7);
  uint64_t v70 = (uint64_t)v60 - v8;
  sub_22EE7EA40();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621A70);
  swift_getTupleTypeMetadata2();
  uint64_t v9 = sub_22EE7EE20();
  uint64_t WitnessTable = swift_getWitnessTable();
  v60[2] = v9;
  v60[1] = WitnessTable;
  uint64_t v11 = sub_22EE7EB10();
  uint64_t v63 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v62 = (char *)v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v61 = (char *)v60 - v14;
  uint64_t v15 = sub_22EE7CFC0();
  uint64_t v66 = *(void *)(v15 - 8);
  uint64_t v67 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v65 = (char *)v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v64 = (char *)v60 - v18;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861D090);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (char *)v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for ProductViewButtonConfiguration(0);
  MEMORY[0x270FA5388](v22);
  uint64_t v68 = (uint64_t)v60 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_22EE80040();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)v60 - v26;
  uint64_t v28 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v31 = (char *)v60 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = v11;
  uint64_t v76 = v5;
  uint64_t v32 = sub_22EE7D810();
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v74 = v32;
  uint64_t v75 = v33;
  MEMORY[0x270FA5388](v32);
  uint64_t v73 = (char *)v60 - v34;
  uint64_t v35 = v71;
  uint64_t v36 = type metadata accessor for ProductViewButton();
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v27, v35 + *(int *)(v36 + 40), v24);
  if (__swift_getEnumTagSinglePayload((uint64_t)v27, 1, a2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
LABEL_5:
    uint64_t v37 = v73;
    goto LABEL_6;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v31, v27, a2);
  sub_22EADAD08(v35 + *(int *)(v36 + 36), (uint64_t)v21, &qword_26861D090);
  if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22) == 1)
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v31, a2);
    sub_22EB0584C((uint64_t)v21, &qword_26861D090);
    goto LABEL_5;
  }
  uint64_t v46 = (uint64_t)v21;
  uint64_t v47 = v68;
  sub_22EC45A68(v46, v68, (void (*)(void))type metadata accessor for ProductViewButtonConfiguration);
  uint64_t v48 = v64;
  sub_22EB183A4();
  uint64_t v49 = v65;
  sub_22EE7CFB0();
  sub_22EC4DF14((unint64_t *)&qword_26861D078, MEMORY[0x263F18FF8]);
  uint64_t v50 = v67;
  char v51 = sub_22EE800F0();
  uint64_t v52 = *(void (**)(char *, uint64_t))(v66 + 8);
  v52(v49, v50);
  uint64_t v53 = ((uint64_t (*)(char *, uint64_t))v52)(v48, v50);
  uint64_t v54 = v72;
  uint64_t v37 = v73;
  if ((v51 & 1) == 0)
  {
    MEMORY[0x270FA5388](v53);
    uint64_t v55 = v78;
    v60[-4] = a2;
    v60[-3] = v55;
    v60[-2] = v47;
    v60[-1] = v31;
    uint64_t v78 = a2;
    sub_22EB24CF8();
    int v56 = v62;
    sub_22EE7EB00();
    uint64_t v57 = swift_getWitnessTable();
    uint64_t v58 = v61;
    sub_22EB69440(v56, v54, v57);
    uint64_t v59 = *(void (**)(char *, uint64_t))(v63 + 8);
    v59(v56, v54);
    sub_22EB69440(v58, v54, v57);
    sub_22EC4DF14(&qword_268621A88, (void (*)(uint64_t))type metadata accessor for ProductViewButtonPlaceholder);
    sub_22EC4F278();
    v59(v56, v54);
    v59(v58, v54);
    sub_22EC45A14(v47, (void (*)(void))type metadata accessor for ProductViewButtonConfiguration);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v31, v78);
    goto LABEL_7;
  }
  sub_22EC45A14(v47, (void (*)(void))type metadata accessor for ProductViewButtonConfiguration);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v31, a2);
LABEL_6:
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v39 = (uint64_t)v69;
  *uint64_t v69 = KeyPath;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861C920);
  swift_storeEnumTagMultiPayload();
  uint64_t v40 = v70;
  sub_22EC45A68(v39, v70, (void (*)(void))type metadata accessor for ProductViewButtonPlaceholder);
  swift_getWitnessTable();
  sub_22EC4DF14(&qword_268621A88, (void (*)(uint64_t))type metadata accessor for ProductViewButtonPlaceholder);
  sub_22EC4F330();
  sub_22EC45A14(v40, (void (*)(void))type metadata accessor for ProductViewButtonPlaceholder);
LABEL_7:
  uint64_t v41 = swift_getWitnessTable();
  uint64_t v42 = sub_22EC4DF14(&qword_268621A88, (void (*)(uint64_t))type metadata accessor for ProductViewButtonPlaceholder);
  uint64_t v79 = v41;
  uint64_t v80 = v42;
  uint64_t v43 = v74;
  uint64_t v44 = swift_getWitnessTable();
  sub_22EB69440(v37, v43, v44);
  return (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v37, v43);
}

uint64_t sub_22EC43730@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v67 = a5;
  uint64_t v8 = type metadata accessor for ProductViewText(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v57 = (uint64_t)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621AC8);
  MEMORY[0x270FA5388](v55);
  uint64_t v56 = (uint64_t)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621AD0);
  MEMORY[0x270FA5388](v66);
  uint64_t v54 = (uint64_t)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861CA00);
  MEMORY[0x270FA5388](v12 - 8);
  char v51 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v58 = (char *)&v50 - v15;
  uint64_t v59 = sub_22EE7C220();
  uint64_t v53 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59);
  uint64_t v52 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621A70);
  MEMORY[0x270FA5388](v64);
  uint64_t v65 = (uint64_t)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v61 = (uint64_t)&v50 - v19;
  uint64_t v20 = sub_22EE7EA40();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v63 = (char *)&v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v50 - v24;
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)&v50 - v27;
  uint64_t v29 = type metadata accessor for ProductViewButtonConfiguration(0);
  uint64_t v68 = a3;
  uint64_t v69 = a4;
  uint64_t v70 = v62;
  swift_retain();
  uint64_t v30 = (uint64_t)v58;
  sub_22EE7EA20();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v62 = v28;
  sub_22EB69440(v25, v20, WitnessTable);
  uint64_t v60 = v21;
  uint64_t v32 = *(void (**)(char *, uint64_t))(v21 + 8);
  v32(v25, v20);
  sub_22EADAD08(a1 + *(int *)(v29 + 28), v30, &qword_26861CA00);
  uint64_t v33 = v59;
  if (__swift_getEnumTagSinglePayload(v30, 1, v59) == 1)
  {
    sub_22EB0584C(v30, &qword_26861CA00);
    uint64_t v34 = 1;
    uint64_t v35 = v61;
  }
  else
  {
    uint64_t v50 = WitnessTable;
    uint64_t v36 = v53;
    uint64_t v37 = v52;
    uint64_t v38 = v32;
    uint64_t v39 = v33;
    (*(void (**)(char *, uint64_t, uint64_t))(v53 + 32))(v52, v30, v33);
    uint64_t v40 = (uint64_t)v51;
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v51, v37, v33);
    __swift_storeEnumTagSinglePayload(v40, 0, 1, v33);
    memset(v75, 0, sizeof(v75));
    char v76 = 1;
    uint64_t v41 = v57;
    sub_22EC113F4(v40, 2, 0, 0, (uint64_t)v75, 0, 0, v57);
    uint64_t v42 = v56;
    sub_22EC4E990(v41, v56, (void (*)(void))type metadata accessor for ProductViewText);
    *(_WORD *)(v42 + *(int *)(v55 + 36)) = 257;
    sub_22EC45A14(v41, (void (*)(void))type metadata accessor for ProductViewText);
    uint64_t v43 = v54;
    sub_22EADAD08(v42, v54, &qword_268621AC8);
    sub_22EB0584C(v42, &qword_268621AC8);
    uint64_t v44 = v39;
    uint64_t v32 = v38;
    (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v44);
    uint64_t WitnessTable = v50;
    uint64_t v45 = v43;
    uint64_t v35 = v61;
    sub_22EADAE38(v45, v61, &qword_268621AD0);
    uint64_t v34 = 0;
  }
  __swift_storeEnumTagSinglePayload(v35, v34, 1, v66);
  uint64_t v46 = v63;
  uint64_t v47 = v62;
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v63, v62, v20);
  v74[0] = v46;
  uint64_t v48 = v65;
  sub_22EADAD08(v35, v65, &qword_268621A70);
  v74[1] = v48;
  v73[0] = v20;
  v73[1] = v64;
  uint64_t v71 = WitnessTable;
  unint64_t v72 = sub_22EC4E04C();
  sub_22ED82348((uint64_t)v74, 2, (uint64_t)v73);
  sub_22EB0584C(v35, &qword_268621A70);
  v32(v47, v20);
  sub_22EB0584C(v48, &qword_268621A70);
  return ((uint64_t (*)(char *, uint64_t))v32)(v46, v20);
}

uint64_t sub_22EC43E7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22EB69440(v6, v9, v10);
  sub_22EB69440(v8, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, a2);
}

uint64_t sub_22EC43F58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861D090);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861CA00);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for ProductViewText(0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = &v20[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621AA0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = &v20[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = type metadata accessor for ProductViewButton();
  sub_22EADAD08(a1 + *(int *)(v16 + 36), (uint64_t)v6, &qword_26861D090);
  uint64_t v17 = type metadata accessor for ProductViewButtonConfiguration(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v17) == 1)
  {
    sub_22EB0584C((uint64_t)v6, &qword_26861D090);
    uint64_t v18 = sub_22EE7C220();
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, v18);
  }
  else
  {
    sub_22EADAD08((uint64_t)&v6[*(int *)(v17 + 28)], (uint64_t)v9, &qword_26861CA00);
    sub_22EC45A14((uint64_t)v6, (void (*)(void))type metadata accessor for ProductViewButtonConfiguration);
  }
  memset(v20, 0, sizeof(v20));
  char v21 = 1;
  sub_22EC113F4((uint64_t)v9, 2, 0, 0, (uint64_t)v20, 0, 0, (uint64_t)v12);
  sub_22EC4E990((uint64_t)v12, (uint64_t)v15, (void (*)(void))type metadata accessor for ProductViewText);
  *(_OWORD *)&v15[*(int *)(v13 + 36)] = xmmword_22EE926D0;
  sub_22EC45A14((uint64_t)v12, (void (*)(void))type metadata accessor for ProductViewText);
  return sub_22EADAE38((uint64_t)v15, a2, &qword_268621AA0);
}

uint64_t sub_22EC44220@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v68 = a1;
  uint64_t v73 = a4;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621A80);
  swift_getTupleTypeMetadata2();
  sub_22EE7EE20();
  swift_getWitnessTable();
  uint64_t v59 = sub_22EE7EAF0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v6 = sub_22EE7EA40();
  uint64_t v60 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v56 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v58 = (char *)&v54 - v9;
  uint64_t v10 = sub_22EE7CFC0();
  uint64_t v64 = *(void *)(v10 - 8);
  uint64_t v65 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v63 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v62 = (char *)&v54 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861D090);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for ProductViewButtonConfiguration(0);
  MEMORY[0x270FA5388](v17);
  uint64_t v66 = (uint64_t)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_22EE80040();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v54 - v21;
  uint64_t v23 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v54 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = v6;
  uint64_t v69 = sub_22EE80040();
  uint64_t v71 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  uint64_t v67 = (uint64_t)&v54 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v72 = (uint64_t)&v54 - v29;
  uint64_t v61 = a3;
  uint64_t v30 = type metadata accessor for ProductViewButton();
  uint64_t v31 = v68;
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v22, v68 + *(int *)(v30 + 40), v19);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, a2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v26, v22, a2);
    sub_22EADAD08(v31 + *(int *)(v30 + 36), (uint64_t)v16, &qword_26861D090);
    if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17) == 1)
    {
      (*(void (**)(char *, uint64_t))(v23 + 8))(v26, a2);
      sub_22EB0584C((uint64_t)v16, &qword_26861D090);
    }
    else
    {
      uint64_t v55 = a2;
      uint64_t v32 = v66;
      sub_22EC45A68((uint64_t)v16, v66, (void (*)(void))type metadata accessor for ProductViewButtonConfiguration);
      uint64_t v33 = v62;
      sub_22EB183A4();
      uint64_t v34 = v63;
      sub_22EE7CFB0();
      sub_22EC4DF14((unint64_t *)&qword_26861D078, MEMORY[0x263F18FF8]);
      uint64_t v35 = v65;
      char v36 = sub_22EE800F0();
      uint64_t v37 = *(void (**)(char *, uint64_t))(v64 + 8);
      v37(v34, v35);
      uint64_t v38 = ((uint64_t (*)(char *, uint64_t))v37)(v33, v35);
      if ((v36 & 1) == 0)
      {
        uint64_t v45 = v32;
        MEMORY[0x270FA5388](v38);
        uint64_t v46 = v55;
        uint64_t v47 = v61;
        *(&v54 - 4) = v55;
        *(&v54 - 3) = v47;
        *(&v54 - 2) = (uint64_t)v26;
        *(&v54 - 1) = v32;
        swift_retain();
        uint64_t v48 = v56;
        sub_22EE7EA20();
        uint64_t v49 = v70;
        uint64_t v50 = swift_getWitnessTable();
        char v51 = v58;
        sub_22EB69440(v48, v49, v50);
        uint64_t v52 = *(void (**)(char *, uint64_t))(v60 + 8);
        v52(v48, v49);
        uint64_t v53 = v67;
        sub_22EB69440(v51, v49, v50);
        v52(v51, v49);
        __swift_storeEnumTagSinglePayload(v53, 0, 1, v49);
        uint64_t v39 = v72;
        sub_22ED42374(v53, v72);
        uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v71 + 8);
        uint64_t v42 = v69;
        v41(v53, v69);
        sub_22EC45A14(v45, (void (*)(void))type metadata accessor for ProductViewButtonConfiguration);
        (*(void (**)(char *, uint64_t))(v23 + 8))(v26, v46);
        goto LABEL_8;
      }
      sub_22EC45A14(v32, (void (*)(void))type metadata accessor for ProductViewButtonConfiguration);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v26, v55);
    }
  }
  uint64_t v39 = v72;
  uint64_t v40 = v67;
  __swift_storeEnumTagSinglePayload(v67, 1, 1, v70);
  swift_getWitnessTable();
  sub_22ED42374(v40, v39);
  uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v71 + 8);
  uint64_t v42 = v69;
  v41(v40, v69);
LABEL_8:
  uint64_t v74 = swift_getWitnessTable();
  uint64_t v43 = swift_getWitnessTable();
  sub_22EB69440(v39, v42, v43);
  return ((uint64_t (*)(uint64_t, uint64_t))v41)(v39, v42);
}

uint64_t sub_22EC44AC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  v19[1] = a5;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621A80);
  swift_getTupleTypeMetadata2();
  sub_22EE7EE20();
  swift_getWitnessTable();
  uint64_t v9 = sub_22EE7EAF0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v19 - v14;
  v19[4] = a3;
  v19[5] = a4;
  v19[6] = a1;
  v19[7] = a2;
  sub_22EB51934();
  sub_22EE7EAE0();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_22EB69440(v12, v9, WitnessTable);
  uint64_t v17 = *(void (**)(char *, uint64_t))(v10 + 8);
  v17(v12, v9);
  sub_22EB69440(v15, v9, WitnessTable);
  return ((uint64_t (*)(char *, uint64_t))v17)(v15, v9);
}

uint64_t sub_22EC44CC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v38 = a5;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861CA00);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_22EE7C220();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v35 - v16;
  uint64_t v18 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](v19);
  char v36 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v35 - v22;
  uint64_t v37 = a4;
  sub_22EB69440(a1, a3, a4);
  uint64_t v24 = type metadata accessor for ProductViewButtonConfiguration(0);
  sub_22EADAD08(v35 + *(int *)(v24 + 28), (uint64_t)v10, &qword_26861CA00);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11) == 1)
  {
    sub_22EB0584C((uint64_t)v10, &qword_26861CA00);
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    uint64_t v28 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v17, v11);
    uint64_t v25 = sub_22EE7E140();
    uint64_t v26 = v29;
    uint64_t v28 = v30;
    uint64_t v27 = v31 & 1;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  }
  uint64_t v32 = v36;
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v36, v23, a3);
  uint64_t v42 = v25;
  uint64_t v43 = v26;
  uint64_t v44 = v27;
  uint64_t v45 = v28;
  v46[0] = v32;
  v46[1] = &v42;
  sub_22EC4DF80(v25, v26, v27, v28);
  v41[0] = a3;
  v41[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_268621A80);
  uint64_t v39 = v37;
  unint64_t v40 = sub_22EC4DFC4();
  sub_22ED82348((uint64_t)v46, 2, (uint64_t)v41);
  sub_22EC425D4(v25, v26, v27, v28);
  uint64_t v33 = *(void (**)(char *, uint64_t))(v18 + 8);
  v33(v23, a3);
  sub_22EC425D4(v42, v43, v44, v45);
  return ((uint64_t (*)(char *, uint64_t))v33)(v32, a3);
}

uint64_t sub_22EC45048@<X0>(uint64_t a1@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621B60);
  MEMORY[0x270FA5388](v20);
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_22EE7EBA0();
  MEMORY[0x270FA5388](v21);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_22EE7D080();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v19 - v11;
  uint64_t v19 = v1;
  sub_22EB18878();
  sub_22EE7D070();
  sub_22EC4DF14(&qword_268621B68, MEMORY[0x263F19168]);
  char v13 = sub_22EE7F900();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v7 + 8);
  v14(v9, v6);
  if (v13)
  {
    v14(v12, v6);
LABEL_4:
    uint64_t v16 = *MEMORY[0x263F19860];
    uint64_t v17 = sub_22EE7D5E0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v5, v16, v17);
    sub_22EC4E990((uint64_t)v5, (uint64_t)v3, MEMORY[0x263F1B7A0]);
    swift_storeEnumTagMultiPayload();
    sub_22EC4DF14(&qword_268621B48, MEMORY[0x263F1B7A0]);
    sub_22EC4DF14(&qword_268621B50, MEMORY[0x263F19168]);
    sub_22EE7D800();
    return sub_22EC45A14((uint64_t)v5, MEMORY[0x263F1B7A0]);
  }
  sub_22EE7D060();
  char v15 = sub_22EE7F900();
  v14(v9, v6);
  v14(v12, v6);
  if (v15) {
    goto LABEL_4;
  }
  sub_22EB18878();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v3, v9, v6);
  swift_storeEnumTagMultiPayload();
  sub_22EC4DF14(&qword_268621B48, MEMORY[0x263F1B7A0]);
  sub_22EC4DF14(&qword_268621B50, MEMORY[0x263F19168]);
  sub_22EE7D800();
  return ((uint64_t (*)(char *, uint64_t))v14)(v9, v6);
}

uint64_t sub_22EC454A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v1 = sub_22EE7DC20();
  uint64_t v24 = *(void *)(v1 - 8);
  uint64_t v25 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ProductViewButtonFrameModifier(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621B10);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621B18);
  uint64_t v11 = v10 - 8;
  MEMORY[0x270FA5388](v10);
  char v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621B20);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621B28);
  uint64_t v17 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22EC45048((uint64_t)v9);
  *uint64_t v6 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDE0);
  swift_storeEnumTagMultiPayload();
  sub_22EC45A68((uint64_t)v6, (uint64_t)&v13[*(int *)(v11 + 44)], (void (*)(void))type metadata accessor for ProductViewButtonFrameModifier);
  sub_22EADAE38((uint64_t)v9, (uint64_t)v13, &qword_268621B10);
  sub_22EADAD08((uint64_t)v13, (uint64_t)v16, &qword_268621B18);
  sub_22EB0584C((uint64_t)v13, &qword_268621B18);
  sub_22EE7DBF0();
  unint64_t v20 = sub_22EC4E768();
  sub_22EE7E410();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v3, v25);
  sub_22EB0584C((uint64_t)v16, &qword_268621B20);
  if (qword_26861B6B8 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  uint64_t v27 = v14;
  unint64_t v28 = v20;
  swift_getOpaqueTypeConformance2();
  uint64_t v21 = v23;
  sub_22EE7E4C0();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v21);
}

uint64_t sub_22EC4588C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_22EE7CE90();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22EB15D20();
  char v8 = sub_22EE7CE80();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v8) {
    uint64_t v9 = 0x404A800000000000;
  }
  else {
    uint64_t v9 = 0x403C000000000000;
  }
  if (v8) {
    uint64_t v10 = 0x4056800000000000;
  }
  else {
    uint64_t v10 = 0x4051000000000000;
  }
  uint64_t v11 = sub_22EE7ED70();
  uint64_t v13 = v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621B90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(a2, a1, v14);
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_268621B98);
  uint64_t v16 = a2 + *(int *)(result + 36);
  *(void *)uint64_t v16 = v10;
  *(void *)(v16 + 8) = 0;
  *(void *)(v16 + 16) = v10;
  *(void *)(v16 + 24) = 0;
  *(void *)(v16 + 32) = v10;
  *(void *)(v16 + 40) = 0;
  *(void *)(v16 + 48) = v9;
  *(void *)(v16 + 56) = 0;
  *(void *)(v16 + 64) = 0;
  *(void *)(v16 + 72) = 1;
  *(void *)(v16 + 80) = v9;
  *(_WORD *)(v16 + 88) = 0;
  *(void *)(v16 + 96) = v11;
  *(void *)(v16 + 104) = v13;
  return result;
}

uint64_t sub_22EC45A14(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_5_2();
  v3();
  return a1;
}

uint64_t sub_22EC45A68(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_2_0();
  uint64_t v4 = OUTLINED_FUNCTION_17_0();
  v5(v4);
  return a2;
}

void sub_22EC45ABC()
{
  sub_22EC4F01C(319, (unint64_t *)&qword_26861C810, MEMORY[0x263F18FF8], MEMORY[0x263F185C8]);
  if (v0 <= 0x3F)
  {
    sub_22EC4F01C(319, &qword_268621A68, type metadata accessor for ProductViewButtonConfiguration, MEMORY[0x263F8D8F0]);
    if (v1 <= 0x3F)
    {
      sub_22EE80040();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void *sub_22EC45C30(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v144 = sub_22EE7CFC0();
  uint64_t v3 = *(void *)(v144 - 8);
  unint64_t v4 = *(void *)(v3 + 64);
  if (v4 <= 8) {
    unint64_t v4 = 8;
  }
  unint64_t v155 = v4;
  uint64_t v5 = sub_22EE7F6E0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v148 = v6;
  uint64_t v149 = v5;
  int v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = sub_22EE7F5D0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v134 = v9;
  uint64_t v135 = v8;
  int v10 = *(_DWORD *)(v9 + 80);
  unint64_t v11 = v7 | (unint64_t)v10 | 7;
  uint64_t v12 = sub_22EE7C220();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(_DWORD *)(v13 + 80);
  unint64_t v15 = v11 | v14;
  uint64_t v138 = v7 + 16;
  uint64_t v16 = *(void *)(v6 + 64);
  uint64_t v139 = v16 + v11;
  unint64_t v157 = v11;
  unint64_t v17 = (v16 + v11 + (v138 & ~(unint64_t)v7)) & ~v11;
  uint64_t v18 = v10 + 16;
  uint64_t v146 = v10;
  uint64_t v19 = *(void *)(v9 + 64) + v7;
  uint64_t v141 = v7;
  uint64_t v20 = v16 + 7;
  unint64_t v21 = (v16 + 7 + ((v19 + ((v146 + 16) & ~v146)) & ~(unint64_t)v7)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = v21 + 8;
  unint64_t v23 = v21 + 9;
  if (v23 <= v22) {
    unint64_t v23 = v22;
  }
  if (v23 <= 2) {
    uint64_t v24 = 2;
  }
  else {
    uint64_t v24 = v23;
  }
  unint64_t v25 = v24 + v17;
  if (v25 + 1 > (v20 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v26 = v25 + 1;
  }
  else {
    unint64_t v26 = (v20 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v26 <= 0x10) {
    uint64_t v27 = 16;
  }
  else {
    uint64_t v27 = v26;
  }
  uint64_t v28 = *(unsigned int *)(v13 + 84);
  if (v28) {
    uint64_t v29 = *(void *)(*(void *)(v12 - 8) + 64);
  }
  else {
    uint64_t v29 = *(void *)(*(void *)(v12 - 8) + 64) + 1;
  }
  uint64_t v30 = *(void *)(a3 + 16);
  uint64_t v31 = *(void *)(v30 - 8);
  int v32 = *(_DWORD *)(v31 + 80);
  uint64_t v33 = v32;
  if (*(_DWORD *)(v31 + 84)) {
    uint64_t v34 = *(void *)(*(void *)(v30 - 8) + 64);
  }
  else {
    uint64_t v34 = *(void *)(*(void *)(v30 - 8) + 64) + 1;
  }
  unint64_t v35 = v15 | *(_DWORD *)(v3 + 80) & 0xF8 | v32 | 7u;
  if (v35 != 7
    || ((v10 | v7 | *(_DWORD *)(v13 + 80) | *(_DWORD *)(v3 + 80) | v32) & 0x100000) != 0
    || (uint64_t v36 = v3,
        uint64_t v37 = *(_DWORD *)(v13 + 80),
        uint64_t v38 = v155 + v15 + 1,
        uint64_t v137 = v14 + 16,
        size_t v39 = ((v29 + 7 + ((v37 + 16 + ((v27 + 8 + ((v27 + 1 + v11) & ~v11)) & 0xFFFFFFFFFFFFFFF8)) & ~v37)) & 0xFFFFFFFFFFFFFFF8)
            + 8,
        ((v34 + 7 + ((v39 + v32 + (v38 & ~v15)) & ~(unint64_t)v32)) & 0xFFFFFFFFFFFFFFF8)
      + 8 > 0x18))
  {
    uint64_t v44 = *(void *)a2;
    *a1 = *(void *)a2;
    uint64_t v45 = (void *)(v44 + ((v35 + 16) & ~v35));
    swift_retain();
    return v45;
  }
  unsigned int v40 = a2[v155];
  unsigned int v41 = v40 - 2;
  size_t __n = v27 + 1;
  uint64_t v128 = v29 + 7;
  if (v40 >= 2)
  {
    if (v155 <= 3) {
      uint64_t v42 = v155;
    }
    else {
      uint64_t v42 = 4;
    }
    switch(v42)
    {
      case 1:
        int v43 = *a2;
        goto LABEL_33;
      case 2:
        int v43 = *(unsigned __int16 *)a2;
        goto LABEL_33;
      case 3:
        int v43 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_33;
      case 4:
        int v43 = *(_DWORD *)a2;
LABEL_33:
        if (v155 < 4) {
          unsigned int v40 = (v43 | (v41 << (8 * v155))) + 2;
        }
        else {
          unsigned int v40 = v43 + 2;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v136 = v27 + 8;
  unint64_t v46 = ~v15;
  unint64_t v153 = ~v11;
  uint64_t v132 = v12;
  uint64_t v133 = v27;
  uint64_t v126 = v24;
  uint64_t v127 = v20;
  uint64_t v122 = v19;
  uint64_t v123 = *(void *)(v12 - 8);
  size_t v124 = v29;
  uint64_t v125 = *(void *)(v30 - 8);
  size_t v129 = v34;
  size_t v130 = v39 + v32;
  uint64_t v131 = v34 + 7;
  unint64_t v121 = v22;
  if (v40 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v36 + 16))(a1, a2, v144);
    char v47 = 1;
  }
  else
  {
    *a1 = *(void *)a2;
    swift_retain();
    char v47 = 0;
  }
  uint64_t v48 = v30;
  uint64_t v49 = ~v37;
  *((unsigned char *)a1 + v155) = v47;
  uint64_t v50 = ~v33;
  char v51 = (void *)(((unint64_t)a1 + v38) & v46);
  uint64_t v52 = (unsigned __int8 *)((unint64_t)&a2[v38] & v46);
  uint64_t v53 = (void *)((unint64_t)&v52[v157 + __n] & v153);
  uint64_t v54 = v136;
  uint64_t v55 = (void *)(((unint64_t)v53 + v136) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v156 = v55;
  if (v28 >= 0x80000001)
  {
    if (__swift_getEnumTagSinglePayload(((unint64_t)v55 + v137) & v49, v28, v132) >= 2) {
      goto LABEL_41;
    }
LABEL_43:
    unsigned int v57 = v52[v133];
    unsigned int v58 = v57 - 3;
    if (v57 >= 3)
    {
      if (v133 <= 3) {
        uint64_t v59 = v133;
      }
      else {
        uint64_t v59 = 4;
      }
      switch(v59)
      {
        case 1:
          int v60 = *v52;
          goto LABEL_52;
        case 2:
          int v60 = *(unsigned __int16 *)v52;
          goto LABEL_52;
        case 3:
          int v60 = *(unsigned __int16 *)v52 | (v52[2] << 16);
          goto LABEL_52;
        case 4:
          int v60 = *(_DWORD *)v52;
LABEL_52:
          if (v133 < 4) {
            unsigned int v57 = (v60 | (v58 << (8 * v133))) + 3;
          }
          else {
            unsigned int v57 = v60 + 3;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v61 = ~v141;
    uint64_t v145 = v49;
    uint64_t v147 = ~v146;
    uint64_t v151 = v50;
    if (v57 == 2)
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v148 + 16))(v51, v52, v149);
      uint64_t v73 = v133;
      *(_OWORD *)(((unint64_t)v51 + v127) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v52[v127] & 0xFFFFFFFFFFFFFFF8);
      *((unsigned char *)v51 + v133) = 2;
      size_t v74 = __n;
      unint64_t v62 = ~v157;
    }
    else
    {
      unint64_t v62 = ~v157;
      if (v57 == 1)
      {
        uint64_t v142 = v48;
        *char v51 = *(void *)v52;
        v51[1] = *((void *)v52 + 1);
        uint64_t v117 = v52;
        uint64_t v119 = v51;
        unint64_t v63 = ((unint64_t)v51 + v138) & v61;
        unint64_t v64 = (unint64_t)&v52[v138] & v61;
        uint64_t v65 = *(void (**)(unint64_t, unint64_t, uint64_t))(v148 + 16);
        swift_bridgeObjectRetain();
        v65(v63, v64, v149);
        uint64_t v66 = (unsigned char *)((v139 + v63) & v153);
        uint64_t v67 = (unsigned __int8 *)((v139 + v64) & v153);
        uint64_t v68 = v126;
        unsigned int v69 = v67[v126];
        unsigned int v70 = v69 - 4;
        if (v69 >= 4)
        {
          if (v126 <= 3) {
            uint64_t v71 = v126;
          }
          else {
            uint64_t v71 = 4;
          }
          switch(v71)
          {
            case 1:
              int v72 = *v67;
              goto LABEL_69;
            case 2:
              int v72 = *(unsigned __int16 *)v67;
              goto LABEL_69;
            case 3:
              int v72 = *(unsigned __int16 *)v67 | (*(unsigned __int8 *)(((v139 + v64) & v153) + 2) << 16);
              goto LABEL_69;
            case 4:
              int v72 = *(_DWORD *)v67;
LABEL_69:
              if (v126 < 4) {
                unsigned int v69 = (v72 | (v70 << (8 * v126))) + 4;
              }
              else {
                unsigned int v69 = v72 + 4;
              }
              break;
            default:
              break;
          }
        }
        switch(v69)
        {
          case 1u:
            *uint64_t v66 = *v67;
            char v75 = 1;
            break;
          case 2u:
            *(void *)uint64_t v66 = *(void *)v67;
            *(void *)(((v139 + v63) & v153) + 8) = *(void *)(((v139 + v64) & v153) + 8);
            unint64_t v76 = (unint64_t)&v66[v18] & v147;
            unint64_t v77 = (unint64_t)&v67[v18] & v147;
            uint64_t v78 = *(void (**)(unint64_t, unint64_t, uint64_t))(v134 + 16);
            swift_bridgeObjectRetain();
            v78(v76, v77, v135);
            unint64_t v62 = ~v157;
            unint64_t v79 = (v122 + v76) & v61;
            unint64_t v80 = (v122 + v77) & v61;
            v65(v79, v80, v149);
            uint64_t v68 = v126;
            *(void *)((v127 + v79) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v127 + v80) & 0xFFFFFFFFFFFFFFF8);
            v66[v121] = v67[v121];
            char v75 = 2;
            break;
          case 3u:
            *(void *)uint64_t v66 = *(void *)v67;
            *(void *)(((v139 + v63) & v153) + 8) = *(void *)(((v139 + v64) & v153) + 8);
            unint64_t v81 = (unint64_t)&v66[v18] & v147;
            unint64_t v82 = (unint64_t)&v67[v18] & v147;
            uint64_t v83 = *(void (**)(unint64_t, unint64_t, uint64_t))(v134 + 16);
            swift_bridgeObjectRetain();
            v83(v81, v82, v135);
            unint64_t v62 = ~v157;
            unint64_t v84 = (v122 + v81) & v61;
            unint64_t v85 = (v122 + v82) & v61;
            v65(v84, v85, v149);
            uint64_t v68 = v126;
            *(void *)((v127 + v84) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v127 + v85) & 0xFFFFFFFFFFFFFFF8);
            char v75 = 3;
            break;
          default:
            char v75 = 0;
            *(_WORD *)uint64_t v66 = *(_WORD *)v67;
            break;
        }
        uint64_t v73 = v133;
        uint64_t v52 = v117;
        char v51 = v119;
        size_t v74 = __n;
        v66[v68] = v75;
        *((unsigned char *)v119 + v133) = 1;
        uint64_t v48 = v142;
        uint64_t v54 = v136;
      }
      else
      {
        *char v51 = *(void *)v52;
        v51[1] = *((void *)v52 + 1);
        *((unsigned char *)v51 + v133) = 0;
        swift_bridgeObjectRetain();
        uint64_t v73 = v133;
        size_t v74 = __n;
      }
    }
    uint64_t v86 = (void *)(((unint64_t)v51 + v157 + v74) & v62);
    unsigned int v87 = *((unsigned __int8 *)v53 + v73);
    if (v87 > 2)
    {
      memcpy((void *)(((unint64_t)v51 + v157 + v74) & v62), v53, v74);
    }
    else if (v87 == 2)
    {
      uint64_t v98 = v73;
      (*(void (**)(void *, void *, uint64_t))(v148 + 16))(v86, v53, v149);
      *(_OWORD *)(((unint64_t)v86 + v127) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v53 + v127) & 0xFFFFFFFFFFFFFFF8);
      *((unsigned char *)v86 + v98) = 2;
    }
    else if (v87 == 1)
    {
      char v118 = v52;
      uint64_t v120 = v51;
      uint64_t v143 = v48;
      *uint64_t v86 = *v53;
      *(void *)((((unint64_t)v51 + v157 + v74) & v62) + 8) = v53[1];
      unint64_t v88 = ((unint64_t)v86 + v138) & v61;
      unint64_t v89 = ((unint64_t)v53 + v138) & v61;
      uint64_t v90 = *(void (**)(unint64_t, unint64_t, uint64_t))(v148 + 16);
      swift_bridgeObjectRetain();
      v90(v88, v89, v149);
      uint64_t v91 = v126;
      uint64_t v92 = (unsigned char *)((v139 + v88) & v62);
      uint64_t v93 = (unsigned __int8 *)((v139 + v89) & v62);
      unsigned int v94 = v93[v126];
      unsigned int v95 = v94 - 4;
      if (v94 >= 4)
      {
        if (v126 <= 3) {
          uint64_t v96 = v126;
        }
        else {
          uint64_t v96 = 4;
        }
        switch(v96)
        {
          case 1:
            int v97 = *v93;
            goto LABEL_94;
          case 2:
            int v97 = *(unsigned __int16 *)v93;
            goto LABEL_94;
          case 3:
            int v97 = *(unsigned __int16 *)v93 | (*(unsigned __int8 *)(((v139 + v89) & v62) + 2) << 16);
            goto LABEL_94;
          case 4:
            int v97 = *(_DWORD *)v93;
LABEL_94:
            if (v126 < 4) {
              unsigned int v94 = (v97 | (v95 << (8 * v126))) + 4;
            }
            else {
              unsigned int v94 = v97 + 4;
            }
            break;
          default:
            break;
        }
      }
      switch(v94)
      {
        case 1u:
          *uint64_t v92 = *v93;
          char v99 = 1;
          break;
        case 2u:
          *(void *)uint64_t v92 = *(void *)v93;
          *(void *)(((v139 + v88) & v62) + 8) = *(void *)(((v139 + v89) & v62) + 8);
          unint64_t v100 = (unint64_t)&v92[v18] & v147;
          unint64_t v101 = (unint64_t)&v93[v18] & v147;
          double v102 = *(void (**)(unint64_t, unint64_t, uint64_t))(v134 + 16);
          swift_bridgeObjectRetain();
          v102(v100, v101, v135);
          uint64_t v54 = v136;
          unint64_t v103 = (v122 + v100) & v61;
          unint64_t v104 = (v122 + v101) & v61;
          v90(v103, v104, v149);
          uint64_t v91 = v126;
          *(void *)((v127 + v103) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v127 + v104) & 0xFFFFFFFFFFFFFFF8);
          v92[v121] = v93[v121];
          char v99 = 2;
          break;
        case 3u:
          *(void *)uint64_t v92 = *(void *)v93;
          *(void *)(((v139 + v88) & v62) + 8) = *(void *)(((v139 + v89) & v62) + 8);
          unint64_t v105 = (unint64_t)&v92[v18] & v147;
          unint64_t v106 = (unint64_t)&v93[v18] & v147;
          uint64_t v107 = *(void (**)(unint64_t, unint64_t, uint64_t))(v134 + 16);
          swift_bridgeObjectRetain();
          v107(v105, v106, v135);
          unint64_t v108 = (v122 + v105) & v61;
          unint64_t v109 = (v122 + v106) & v61;
          v90(v108, v109, v149);
          uint64_t v91 = v126;
          *(void *)((v127 + v108) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v127 + v109) & 0xFFFFFFFFFFFFFFF8);
          char v99 = 3;
          break;
        default:
          char v99 = 0;
          *(_WORD *)uint64_t v92 = *(_WORD *)v93;
          break;
      }
      uint64_t v52 = v118;
      char v51 = v120;
      v92[v91] = v99;
      *((unsigned char *)v86 + v133) = 1;
      uint64_t v48 = v143;
    }
    else
    {
      *uint64_t v86 = *v53;
      *(void *)((((unint64_t)v51 + v157 + v74) & v62) + 8) = v53[1];
      *((unsigned char *)v86 + v73) = 0;
      swift_bridgeObjectRetain();
    }
    uint64_t v110 = (void *)(((unint64_t)v86 + v54) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v111 = v156[1];
    *uint64_t v110 = *v156;
    v110[1] = v111;
    uint64_t v112 = (void *)(((unint64_t)v110 + v137) & v145);
    uint64_t v113 = (const void *)(((unint64_t)v156 + v137) & v145);
    swift_retain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v113, 1, v132))
    {
      memcpy(v112, v113, v124);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v123 + 16))(v112, v113, v132);
      __swift_storeEnumTagSinglePayload((uint64_t)v112, 0, 1, v132);
    }
    size_t v56 = v130;
    *(void *)(((unint64_t)v112 + v128) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v113 + v128) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v50 = v151;
    goto LABEL_107;
  }
  if (*v55 >= 0xFFFFFFFFuLL) {
    goto LABEL_43;
  }
LABEL_41:
  memcpy(v51, v52, v39);
  size_t v56 = v130;
LABEL_107:
  uint64_t v45 = a1;
  uint64_t v114 = (void *)(((unint64_t)v51 + v56) & v50);
  uint64_t v115 = (const void *)((unint64_t)&v52[v56] & v50);
  if (__swift_getEnumTagSinglePayload((uint64_t)v115, 1, v48))
  {
    memcpy(v114, v115, v129);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v125 + 16))(v114, v115, v48);
    __swift_storeEnumTagSinglePayload((uint64_t)v114, 0, 1, v48);
  }
  *(void *)(((unint64_t)v114 + v131) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v115 + v131) & 0xFFFFFFFFFFFFFFF8);
  return v45;
}

uint64_t sub_22EC469D4(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v4 = sub_22EE7CFC0();
  if (*(void *)(*(void *)(v4 - 8) + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  unsigned int v6 = a1[v5];
  unsigned int v7 = v6 - 2;
  if (v6 >= 2)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a1;
        goto LABEL_13;
      case 2:
        int v9 = *(unsigned __int16 *)a1;
        goto LABEL_13;
      case 3:
        int v9 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_13;
      case 4:
        int v9 = *(_DWORD *)a1;
LABEL_13:
        if (v5 < 4) {
          unsigned int v6 = (v9 | (v7 << (8 * v5))) + 2;
        }
        else {
          unsigned int v6 = v9 + 2;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v91 = a2;
  if (v6 == 1) {
    (*(void (**)(unsigned __int8 *, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else {
    swift_release();
  }
  uint64_t v10 = sub_22EE7F6E0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v83 = v11;
  uint64_t v85 = v10;
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = sub_22EE7F5D0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v75 = v14;
  uint64_t v76 = v13;
  uint64_t v15 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = v12 | v15 | 7;
  uint64_t v17 = sub_22EE7C220();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v80 = v12 + 16;
  uint64_t v20 = v11;
  unint64_t v21 = (unsigned __int8 *)((unint64_t)&a1[v5 + 1 + (v16 | v19)] & ~(v16 | v19));
  uint64_t v22 = *(void *)(v20 + 64);
  uint64_t v81 = v22 + v16;
  uint64_t v23 = (v22 + v16 + ((v12 + 16) & ~v12)) & ~v16;
  uint64_t v73 = v15 + 16;
  uint64_t v74 = *(void *)(v14 + 64) + v12;
  uint64_t v24 = v22 + 7;
  unint64_t v25 = (v24 + ((v74 + ((v15 + 16) & ~v15)) & ~v12)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = v25 + 8;
  unint64_t v27 = v25 + 9;
  if (v27 <= v26) {
    unint64_t v27 = v26;
  }
  if (v27 <= 2) {
    unint64_t v27 = 2;
  }
  unint64_t v82 = v27;
  unint64_t v28 = v27 + v23;
  unint64_t v29 = (v24 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v28 + 1 > v29) {
    unint64_t v30 = v28 + 1;
  }
  else {
    unint64_t v30 = v29;
  }
  if (v30 <= 0x10) {
    uint64_t v31 = 16;
  }
  else {
    uint64_t v31 = v30;
  }
  uint64_t v32 = *(unsigned int *)(v18 + 84);
  uint64_t v33 = v31 + v16 + 1;
  uint64_t v34 = v33 & ~v16;
  uint64_t v35 = ~v19;
  uint64_t v36 = *(void *)(*(void *)(v17 - 8) + 64);
  unint64_t v37 = (unint64_t)&v21[v33] & ~v16;
  uint64_t v38 = v31 + 8;
  unint64_t v87 = v37;
  size_t v39 = (void *)((v31 + 8 + v37) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v89 = v17;
  uint64_t v77 = *(void *)(v17 - 8);
  uint64_t v90 = v34;
  unint64_t v88 = v39;
  if (v32 >= 0x80000001)
  {
    uint64_t v40 = v19 + 16;
    uint64_t v78 = *(void *)(*(void *)(v17 - 8) + 64);
    unsigned int v41 = v21;
    uint64_t v42 = *(unsigned __int8 *)(v18 + 80);
    unsigned int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(((unint64_t)v39 + v19 + 16) & v35, v32, v17);
    uint64_t v38 = v31 + 8;
    BOOL v44 = EnumTagSinglePayload >= 2;
    uint64_t v19 = v42;
    unint64_t v21 = v41;
    uint64_t v36 = v78;
    uint64_t v34 = v90;
    if (v44) {
      goto LABEL_86;
    }
  }
  else if (*v39 <= 0xFFFFFFFEuLL)
  {
    uint64_t v40 = v19 + 16;
    goto LABEL_86;
  }
  unsigned int v45 = v21[v31];
  unsigned int v46 = v45 - 3;
  uint64_t v72 = v38;
  if (v45 < 3)
  {
    uint64_t v48 = v83;
    uint64_t v49 = v85;
  }
  else
  {
    if (v31 <= 3) {
      uint64_t v47 = v31;
    }
    else {
      uint64_t v47 = 4;
    }
    uint64_t v48 = v83;
    uint64_t v49 = v85;
    switch(v47)
    {
      case 1:
        int v50 = *v21;
        goto LABEL_43;
      case 2:
        int v50 = *(unsigned __int16 *)v21;
        goto LABEL_43;
      case 3:
        int v50 = *(unsigned __int16 *)v21 | (v21[2] << 16);
        goto LABEL_43;
      case 4:
        int v50 = *(_DWORD *)v21;
LABEL_43:
        if (v31 < 4) {
          unsigned int v45 = (v50 | (v46 << (8 * v31))) + 3;
        }
        else {
          unsigned int v45 = v50 + 3;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v86 = ~v12;
  uint64_t v84 = ~v16;
  uint64_t v71 = ~v15;
  uint64_t v51 = v19;
  if (v45 == 2)
  {
    (*(void (**)(unsigned __int8 *, uint64_t))(v48 + 8))(v21, v49);
  }
  else if (v45 == 1)
  {
    swift_bridgeObjectRelease();
    unint64_t v79 = *(void (**)(unint64_t, uint64_t))(v48 + 8);
    v79((unint64_t)&v21[v80] & v86, v49);
    uint64_t v52 = (unsigned __int8 *)((v81 + ((unint64_t)&v21[v80] & v86)) & v84);
    unsigned int v53 = v52[v82];
    unsigned int v54 = v53 - 4;
    if (v53 >= 4)
    {
      if (v82 <= 3) {
        uint64_t v55 = v82;
      }
      else {
        uint64_t v55 = 4;
      }
      switch(v55)
      {
        case 1:
          int v56 = *v52;
          goto LABEL_59;
        case 2:
          int v56 = *(unsigned __int16 *)v52;
          goto LABEL_59;
        case 3:
          int v56 = *(unsigned __int16 *)((v81 + ((unint64_t)&v21[v80] & v86)) & v84) | (*(unsigned __int8 *)(((v81 + ((unint64_t)&v21[v80] & v86)) & v84) + 2) << 16);
          goto LABEL_59;
        case 4:
          int v56 = *(_DWORD *)v52;
LABEL_59:
          if (v82 < 4) {
            unsigned int v53 = (v56 | (v54 << (8 * v82))) + 4;
          }
          else {
            unsigned int v53 = v56 + 4;
          }
          break;
        default:
          break;
      }
    }
    if (v53 >= 2)
    {
      swift_bridgeObjectRelease();
      unint64_t v57 = (unint64_t)&v52[v73] & v71;
      (*(void (**)(unint64_t, uint64_t))(v75 + 8))(v57, v76);
      v79((v74 + v57) & v86, v49);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  unsigned int v58 = *(unsigned __int8 *)(v87 + v31);
  if (v58 <= 2)
  {
    if (v58 == 2)
    {
      (*(void (**)(unint64_t, uint64_t))(v48 + 8))(v87, v49);
    }
    else if (v58 == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v59 = *(void (**)(unint64_t, uint64_t))(v48 + 8);
      v59((v80 + v87) & v86, v49);
      int v60 = (unsigned __int8 *)((v81 + ((v80 + v87) & v86)) & v84);
      unsigned int v61 = v60[v82];
      unsigned int v62 = v61 - 4;
      if (v61 >= 4)
      {
        if (v82 <= 3) {
          uint64_t v63 = v82;
        }
        else {
          uint64_t v63 = 4;
        }
        switch(v63)
        {
          case 1:
            int v64 = *v60;
            goto LABEL_79;
          case 2:
            int v64 = *(unsigned __int16 *)v60;
            goto LABEL_79;
          case 3:
            int v64 = *(unsigned __int16 *)((v81 + ((v80 + v87) & v86)) & v84) | (*(unsigned __int8 *)(((v81 + ((v80 + v87) & v86)) & v84)
                                                                                                 + 2) << 16);
            goto LABEL_79;
          case 4:
            int v64 = *(_DWORD *)v60;
LABEL_79:
            int v65 = (v64 | (v62 << (8 * v82))) + 4;
            unsigned int v61 = v64 + 4;
            if (v82 < 4) {
              unsigned int v61 = v65;
            }
            break;
          default:
            break;
        }
      }
      if (v61 >= 2)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v75 + 8))((unint64_t)&v60[v73] & v71, v76);
        v59((v74 + ((unint64_t)&v60[v73] & v71)) & v86, v49);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  swift_release();
  uint64_t v40 = v51 + 16;
  if (!__swift_getEnumTagSinglePayload(((unint64_t)v88 + v51 + 16) & v35, 1, v89)) {
    (*(void (**)(unint64_t, uint64_t))(v77 + 8))(((unint64_t)v88 + v51 + 16) & v35, v89);
  }
  uint64_t v34 = v90;
  uint64_t v38 = v72;
LABEL_86:
  if (v32) {
    uint64_t v66 = v36;
  }
  else {
    uint64_t v66 = v36 + 1;
  }
  uint64_t v67 = *(void *)(v91 + 16);
  uint64_t v92 = *(void *)(v67 - 8);
  unint64_t v68 = (unint64_t)&v21[*(unsigned __int8 *)(v92 + 80)
                             + 8
                             + ((v66 + ((v40 + ((v38 + v34) & 0xFFFFFFFFFFFFFFF8)) & v35) + 7) & 0xFFFFFFFFFFFFFFF8)] & ~(unint64_t)*(unsigned __int8 *)(v92 + 80);
  uint64_t result = __swift_getEnumTagSinglePayload(v68, 1, v67);
  if (!result)
  {
    unsigned int v70 = *(uint64_t (**)(unint64_t, uint64_t))(v92 + 8);
    return v70(v68, v67);
  }
  return result;
}

void *sub_22EC472B0(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7CFC0();
  if (*(void *)(*(void *)(v6 - 8) + 64) <= 8uLL) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  unsigned int v8 = a2[v7];
  unsigned int v9 = v8 - 2;
  if (v8 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *a2;
        goto LABEL_13;
      case 2:
        int v11 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v11 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v11 = *(_DWORD *)a2;
LABEL_13:
        if (v7 < 4) {
          unsigned int v8 = (v11 | (v9 << (8 * v7))) + 2;
        }
        else {
          unsigned int v8 = v11 + 2;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v164 = a3;
  if (v8 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    char v12 = 1;
  }
  else
  {
    *a1 = *(void *)a2;
    swift_retain();
    char v12 = 0;
  }
  *((unsigned char *)a1 + v7) = v12;
  uint64_t v13 = sub_22EE7F6E0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v162 = v14;
  uint64_t v163 = v13;
  uint64_t v15 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = sub_22EE7F5D0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v147 = v17;
  uint64_t v148 = v16;
  uint64_t v18 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = v15 | v18 | 7;
  uint64_t v20 = sub_22EE7C220();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v23 = v7 + (v19 | v22) + 1;
  uint64_t v165 = a1;
  uint64_t v167 = (void *)(((unint64_t)a1 + v23) & ~(v19 | v22));
  uint64_t v24 = (unsigned __int8 *)((unint64_t)&a2[v23] & ~(v19 | v22));
  uint64_t v151 = v15 + 16;
  uint64_t v25 = *(void *)(v14 + 64);
  uint64_t v152 = v25 + v19;
  uint64_t v26 = (v25 + v19 + ((v15 + 16) & ~v15)) & ~v19;
  uint64_t v145 = v18 + 16;
  uint64_t v155 = v18;
  uint64_t v146 = *(void *)(v17 + 64) + v15;
  uint64_t v27 = v25 + 7;
  unint64_t v28 = (v25 + 7 + ((v146 + ((v18 + 16) & ~v18)) & ~v15)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v29 = v28 + 8;
  unint64_t v30 = v28 + 9;
  unint64_t v144 = v29;
  if (v30 <= v29) {
    unint64_t v30 = v29;
  }
  if (v30 <= 2) {
    unint64_t v30 = 2;
  }
  uint64_t v153 = v27;
  unint64_t v154 = v30;
  unint64_t v31 = v30 + v26;
  if (v31 + 1 > (v27 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v32 = v31 + 1;
  }
  else {
    unint64_t v32 = (v27 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v32 <= 0x10) {
    uint64_t v33 = 16;
  }
  else {
    uint64_t v33 = v32;
  }
  uint64_t v34 = *(unsigned int *)(v21 + 84);
  uint64_t v35 = v33 + 1 + v19;
  uint64_t v36 = v35 & ~v19;
  uint64_t v37 = ~v22;
  size_t v166 = *(void *)(*(void *)(v20 - 8) + 64);
  unint64_t v38 = (unint64_t)&v24[v35] & ~v19;
  uint64_t v168 = v33 + 8;
  int v160 = (void *)v38;
  size_t v39 = (void *)((v33 + 8 + v38) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v157 = v20;
  uint64_t v158 = v35;
  uint64_t v149 = *(void *)(v20 - 8);
  size_t __n = v33 + 1;
  if (v34 >= 0x80000001)
  {
    uint64_t v41 = v20;
    uint64_t v40 = v22 + 16;
    uint64_t v42 = ((unint64_t)v39 + v22 + 16) & v37;
    unint64_t v43 = (v33 + 8 + v38) & 0xFFFFFFFFFFFFFFF8;
    BOOL v44 = v24;
    uint64_t v45 = *(unsigned __int8 *)(v21 + 80);
    uint64_t v46 = ~v22;
    uint64_t v47 = v33;
    uint64_t v48 = v35 & ~v19;
    unsigned int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v42, v34, v41);
    uint64_t v22 = v45;
    uint64_t v24 = v44;
    size_t v39 = (void *)v43;
    uint64_t v36 = v48;
    uint64_t v33 = v47;
    uint64_t v37 = v46;
    if (EnumTagSinglePayload >= 2) {
      goto LABEL_39;
    }
LABEL_33:
    unsigned int v50 = v24[v33];
    unsigned int v51 = v50 - 3;
    if (v50 < 3)
    {
      uint64_t v53 = v163;
      uint64_t v54 = v155;
    }
    else
    {
      if (v33 <= 3) {
        uint64_t v52 = v33;
      }
      else {
        uint64_t v52 = 4;
      }
      uint64_t v53 = v163;
      uint64_t v54 = v155;
      switch(v52)
      {
        case 1:
          int v55 = *v24;
          goto LABEL_46;
        case 2:
          int v55 = *(unsigned __int16 *)v24;
          goto LABEL_46;
        case 3:
          int v55 = *(unsigned __int16 *)v24 | (v24[2] << 16);
          goto LABEL_46;
        case 4:
          int v55 = *(_DWORD *)v24;
LABEL_46:
          if (v33 < 4) {
            unsigned int v50 = (v55 | (v51 << (8 * v33))) + 3;
          }
          else {
            unsigned int v50 = v55 + 3;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v156 = ~v15;
    uint64_t v60 = ~v19;
    uint64_t v140 = ~v54;
    uint64_t v141 = v22;
    uint64_t v143 = v36;
    int v142 = v34;
    if (v50 == 2)
    {
      int v56 = v167;
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v162 + 16))(v167, v24, v53);
      *(_OWORD *)(((unint64_t)v167 + v153) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v24[v153] & 0xFFFFFFFFFFFFFFF8);
      *((unsigned char *)v167 + v33) = 2;
    }
    else
    {
      int v56 = v167;
      if (v50 == 1)
      {
        *uint64_t v167 = *(void *)v24;
        v167[1] = *((void *)v24 + 1);
        unint64_t v61 = ((unint64_t)v167 + v151) & v156;
        unint64_t v62 = (unint64_t)&v24[v151] & v156;
        uint64_t v63 = *(void (**)(unint64_t, unint64_t, uint64_t))(v162 + 16);
        swift_bridgeObjectRetain();
        v63(v61, v62, v53);
        uint64_t v64 = v152 + v61;
        uint64_t v60 = ~v19;
        uint64_t v65 = v64 & ~v19;
        uint64_t v66 = (unsigned __int8 *)((v152 + v62) & ~v19);
        unint64_t v67 = v154;
        unsigned int v68 = v66[v154];
        unsigned int v69 = v68 - 4;
        if (v68 >= 4)
        {
          if (v154 <= 3) {
            uint64_t v70 = v154;
          }
          else {
            uint64_t v70 = 4;
          }
          switch(v70)
          {
            case 1:
              int v71 = *v66;
              goto LABEL_63;
            case 2:
              int v71 = *(unsigned __int16 *)v66;
              goto LABEL_63;
            case 3:
              int v71 = *(unsigned __int16 *)v66 | (*(unsigned __int8 *)(((v152 + v62) & ~v19) + 2) << 16);
              goto LABEL_63;
            case 4:
              int v71 = *(_DWORD *)v66;
LABEL_63:
              if (v154 < 4) {
                unsigned int v68 = (v71 | (v69 << (8 * v154))) + 4;
              }
              else {
                unsigned int v68 = v71 + 4;
              }
              break;
            default:
              break;
          }
        }
        switch(v68)
        {
          case 1u:
            *(unsigned char *)uint64_t v65 = *v66;
            char v75 = 1;
            break;
          case 2u:
            *(void *)uint64_t v65 = *(void *)v66;
            *(void *)(v65 + 8) = *(void *)(((v152 + v62) & ~v19) + 8);
            uint64_t v76 = (v145 + v65) & v140;
            unint64_t v77 = (unint64_t)&v66[v145] & v140;
            uint64_t v137 = v65;
            uint64_t v139 = v37;
            uint64_t v78 = *(void (**)(uint64_t, unint64_t, uint64_t))(v147 + 16);
            swift_bridgeObjectRetain();
            v78(v76, v77, v148);
            uint64_t v37 = v139;
            uint64_t v79 = (v146 + v76) & v156;
            unint64_t v80 = (v146 + v77) & v156;
            v63(v79, v80, v163);
            uint64_t v65 = v137;
            unint64_t v67 = v154;
            uint64_t v81 = v153 + v79;
            uint64_t v60 = ~v19;
            *(void *)(v81 & 0xFFFFFFFFFFFFFFF8) = *(void *)((v153 + v80) & 0xFFFFFFFFFFFFFFF8);
            *(unsigned char *)(v137 + v144) = v66[v144];
            char v75 = 2;
            break;
          case 3u:
            *(void *)uint64_t v65 = *(void *)v66;
            *(void *)(v65 + 8) = *(void *)(((v152 + v62) & ~v19) + 8);
            uint64_t v82 = (v145 + v65) & v140;
            unint64_t v83 = (unint64_t)&v66[v145] & v140;
            uint64_t v138 = v65;
            uint64_t v84 = *(void (**)(uint64_t, unint64_t, uint64_t))(v147 + 16);
            swift_bridgeObjectRetain();
            v84(v82, v83, v148);
            uint64_t v85 = (v146 + v82) & v156;
            unint64_t v86 = (v146 + v83) & v156;
            v63(v85, v86, v163);
            uint64_t v65 = v138;
            unint64_t v67 = v154;
            uint64_t v87 = v153 + v85;
            uint64_t v60 = ~v19;
            *(void *)(v87 & 0xFFFFFFFFFFFFFFF8) = *(void *)((v153 + v86) & 0xFFFFFFFFFFFFFFF8);
            char v75 = 3;
            break;
          default:
            char v75 = 0;
            *(_WORD *)uint64_t v65 = *(_WORD *)v66;
            break;
        }
        size_t v72 = v166;
        int v56 = v167;
        uint64_t v73 = v160;
        uint64_t v74 = v158;
        *(unsigned char *)(v65 + v67) = v75;
        *((unsigned char *)v167 + v33) = 1;
LABEL_72:
        uint64_t v88 = v60;
        uint64_t v89 = (void *)(((unint64_t)v56 + v74) & v60);
        unsigned int v90 = *((unsigned __int8 *)v73 + v33);
        uint64_t v91 = v37;
        if (v90 > 2)
        {
          memcpy(v89, v73, __n);
        }
        else if (v90 == 2)
        {
          (*(void (**)(void *, void *, uint64_t))(v162 + 16))(v89, v73, v163);
          *(_OWORD *)(((unint64_t)v89 + v153) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v73 + v153) & 0xFFFFFFFFFFFFFFF8);
          *((unsigned char *)v89 + v33) = 2;
        }
        else
        {
          if (v90 == 1)
          {
            uint64_t v161 = v39;
            *uint64_t v89 = *v73;
            v89[1] = v73[1];
            unint64_t v92 = ((unint64_t)v89 + v151) & v156;
            unint64_t v93 = ((unint64_t)v73 + v151) & v156;
            unsigned int v94 = *(void (**)(unint64_t, unint64_t, uint64_t))(v162 + 16);
            swift_bridgeObjectRetain();
            uint64_t v159 = v94;
            v94(v92, v93, v163);
            unint64_t v95 = v154;
            uint64_t v96 = (unsigned char *)((v152 + v92) & v88);
            int v97 = (unsigned __int8 *)((v152 + v93) & v88);
            unsigned int v98 = v97[v154];
            unsigned int v99 = v98 - 4;
            if (v98 >= 4)
            {
              if (v154 <= 3) {
                uint64_t v100 = v154;
              }
              else {
                uint64_t v100 = 4;
              }
              switch(v100)
              {
                case 1:
                  int v101 = *v97;
                  goto LABEL_107;
                case 2:
                  int v101 = *(unsigned __int16 *)v97;
                  goto LABEL_107;
                case 3:
                  int v101 = *(unsigned __int16 *)v97 | (*(unsigned __int8 *)(((v152 + v93) & v88) + 2) << 16);
                  goto LABEL_107;
                case 4:
                  int v101 = *(_DWORD *)v97;
LABEL_107:
                  if (v154 < 4) {
                    unsigned int v98 = (v101 | (v99 << (8 * v154))) + 4;
                  }
                  else {
                    unsigned int v98 = v101 + 4;
                  }
                  break;
                default:
                  break;
              }
            }
            uint64_t v125 = v33;
            switch(v98)
            {
              case 1u:
                *uint64_t v96 = *v97;
                char v126 = 1;
                break;
              case 2u:
                *(void *)uint64_t v96 = *(void *)v97;
                *(void *)(((v152 + v92) & v88) + 8) = *(void *)(((v152 + v93) & v88) + 8);
                unint64_t v127 = (unint64_t)&v96[v145] & v140;
                unint64_t v128 = (unint64_t)&v97[v145] & v140;
                size_t v129 = *(void (**)(unint64_t, unint64_t, uint64_t))(v147 + 16);
                swift_bridgeObjectRetain();
                v129(v127, v128, v148);
                unint64_t v130 = (v146 + v127) & v156;
                unint64_t v131 = (v146 + v128) & v156;
                v159(v130, v131, v163);
                unint64_t v95 = v154;
                *(void *)((v153 + v130) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v153 + v131) & 0xFFFFFFFFFFFFFFF8);
                v96[v144] = v97[v144];
                char v126 = 2;
                break;
              case 3u:
                *(void *)uint64_t v96 = *(void *)v97;
                *(void *)(((v152 + v92) & v88) + 8) = *(void *)(((v152 + v93) & v88) + 8);
                unint64_t v132 = (unint64_t)&v96[v145] & v140;
                unint64_t v133 = (unint64_t)&v97[v145] & v140;
                uint64_t v134 = *(void (**)(unint64_t, unint64_t, uint64_t))(v147 + 16);
                swift_bridgeObjectRetain();
                v134(v132, v133, v148);
                unint64_t v135 = (v146 + v132) & v156;
                unint64_t v136 = (v146 + v133) & v156;
                v159(v135, v136, v163);
                unint64_t v95 = v154;
                *(void *)((v153 + v135) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v153 + v136) & 0xFFFFFFFFFFFFFFF8);
                char v126 = 3;
                break;
              default:
                char v126 = 0;
                *(_WORD *)uint64_t v96 = *(_WORD *)v97;
                break;
            }
            uint64_t v59 = v164;
            size_t v72 = v166;
            int v56 = v167;
            uint64_t v102 = v141;
            size_t v39 = v161;
            v96[v95] = v126;
            *((unsigned char *)v89 + v125) = 1;
            goto LABEL_85;
          }
          *uint64_t v89 = *v73;
          v89[1] = v73[1];
          *((unsigned char *)v89 + v33) = 0;
          swift_bridgeObjectRetain();
        }
        uint64_t v59 = v164;
        uint64_t v102 = v141;
LABEL_85:
        unint64_t v103 = (void *)(((unint64_t)v89 + v168) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v104 = v39[1];
        *unint64_t v103 = *v39;
        v103[1] = v104;
        uint64_t v105 = v102 + 16;
        unint64_t v106 = (void *)(((unint64_t)v103 + v102 + 16) & v91);
        unint64_t v107 = (unint64_t)v39 + v102 + 16;
        uint64_t v108 = v91;
        unint64_t v109 = (const void *)(v107 & v91);
        swift_retain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v109, 1, v157))
        {
          BOOL v110 = v142 == 0;
          if (v142) {
            size_t v111 = v72;
          }
          else {
            size_t v111 = v72 + 1;
          }
          memcpy(v106, v109, v111);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v149 + 16))(v106, v109, v157);
          __swift_storeEnumTagSinglePayload((uint64_t)v106, 0, 1, v157);
          BOOL v110 = v142 == 0;
          if (v142) {
            size_t v111 = v72;
          }
          else {
            size_t v111 = v72 + 1;
          }
        }
        *(void *)(((unint64_t)v106 + v111 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v109
                                                                                             + v111
                                                                                             + 7) & 0xFFFFFFFFFFFFFFF8);
        size_t v58 = ((v72 + v110 + ((v105 + ((v168 + v143) & 0xFFFFFFFFFFFFFFF8)) & v108) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
        goto LABEL_94;
      }
      *uint64_t v167 = *(void *)v24;
      v167[1] = *((void *)v24 + 1);
      *((unsigned char *)v167 + v33) = 0;
      swift_bridgeObjectRetain();
    }
    size_t v72 = v166;
    uint64_t v73 = v160;
    uint64_t v74 = v158;
    goto LABEL_72;
  }
  if (*v39 > 0xFFFFFFFEuLL) {
    goto LABEL_33;
  }
  uint64_t v40 = v22 + 16;
LABEL_39:
  int v56 = v167;
  size_t v57 = v166;
  if (!v34) {
    size_t v57 = v166 + 1;
  }
  size_t v58 = ((v57 + ((v40 + ((v168 + v36) & 0xFFFFFFFFFFFFFFF8)) & v37) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  memcpy(v167, v24, v58);
  uint64_t v59 = v164;
LABEL_94:
  uint64_t v112 = *(void *)(v59 + 16);
  uint64_t v113 = *(void *)(v112 - 8);
  uint64_t v114 = *(unsigned __int8 *)(v113 + 80);
  size_t v115 = v58 + v114;
  unint64_t v116 = (void *)(((unint64_t)v56 + v58 + v114) & ~v114);
  uint64_t v117 = (const void *)((unint64_t)&v24[v115] & ~v114);
  if (__swift_getEnumTagSinglePayload((uint64_t)v117, 1, v112))
  {
    int v118 = *(_DWORD *)(v113 + 84);
    size_t v119 = *(void *)(v113 + 64);
    if (v118) {
      size_t v120 = v119;
    }
    else {
      size_t v120 = v119 + 1;
    }
    memcpy(v116, v117, v120);
  }
  else
  {
    uint64_t v122 = *(void (**)(void *, const void *, uint64_t))(v113 + 16);
    uint64_t v121 = v113 + 16;
    v122(v116, v117, v112);
    __swift_storeEnumTagSinglePayload((uint64_t)v116, 0, 1, v112);
    int v118 = *(_DWORD *)(v121 + 68);
    size_t v119 = *(void *)(v121 + 48);
  }
  if (v118) {
    size_t v123 = v119;
  }
  else {
    size_t v123 = v119 + 1;
  }
  *(void *)(((unint64_t)v116 + v123 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v117
                                                                                       + v123
                                                                                       + 7) & 0xFFFFFFFFFFFFFFF8);
  return v165;
}

unsigned __int8 *sub_22EC4805C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  if (a1 != a2)
  {
    uint64_t v5 = sub_22EE7CFC0();
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(*(void *)(v5 - 8) + 64);
    }
    unsigned int v8 = v4[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *v4;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)v4;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)v4 | (v4[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)v4;
LABEL_14:
          if (v7 < 4) {
            unsigned int v8 = (v11 | (v9 << (8 * v7))) + 2;
          }
          else {
            unsigned int v8 = v11 + 2;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(v4, v5);
    }
    else {
      swift_release();
    }
    unsigned int v12 = a2[v7];
    unsigned int v13 = v12 - 2;
    if (v12 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v14 = v7;
      }
      else {
        uint64_t v14 = 4;
      }
      switch(v14)
      {
        case 1:
          int v15 = *a2;
          goto LABEL_29;
        case 2:
          int v15 = *(unsigned __int16 *)a2;
          goto LABEL_29;
        case 3:
          int v15 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_29;
        case 4:
          int v15 = *(_DWORD *)a2;
LABEL_29:
          if (v7 < 4) {
            unsigned int v12 = (v15 | (v13 << (8 * v7))) + 2;
          }
          else {
            unsigned int v12 = v15 + 2;
          }
          break;
        default:
          break;
      }
    }
    if (v12 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(v4, a2, v5);
      v4[v7] = 1;
    }
    else
    {
      *(void *)uint64_t v4 = *(void *)a2;
      v4[v7] = 0;
      swift_retain();
    }
  }
  unint64_t v16 = *(void *)(*(void *)(sub_22EE7CFC0() - 8) + 64);
  if (v16 <= 8) {
    uint64_t v17 = 8;
  }
  else {
    uint64_t v17 = v16;
  }
  uint64_t v274 = sub_22EE7F6E0();
  uint64_t v18 = *(void *)(v274 - 8);
  uint64_t v270 = v18;
  uint64_t v19 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v20 = sub_22EE7F5D0();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v258 = v20;
  uint64_t v259 = v21;
  uint64_t v22 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v23 = v19 | v22 | 7;
  uint64_t v24 = sub_22EE7C220();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(unsigned __int8 *)(v25 + 80);
  uint64_t v27 = v17 + (v23 | v26) + 1;
  unint64_t v28 = (void *)((unint64_t)&v4[v27] & ~(v23 | v26));
  uint64_t v278 = (unsigned __int8 *)((unint64_t)&a2[v27] & ~(v23 | v26));
  uint64_t v266 = ~v19;
  uint64_t v261 = v19 + 16;
  uint64_t v29 = *(void *)(v18 + 64);
  uint64_t v279 = ~v23;
  uint64_t v262 = v29 + v23;
  uint64_t v30 = (v29 + v23 + ((v19 + 16) & ~v19)) & ~v23;
  uint64_t v256 = ~v22;
  uint64_t v255 = v22 + 16;
  uint64_t v257 = *(void *)(v21 + 64) + v19;
  uint64_t v31 = (v257 + ((v22 + 16) & ~v22)) & ~v19;
  uint64_t v32 = v29 + 7;
  unint64_t v33 = (v29 + 7 + v31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = v33 + 8;
  unint64_t v35 = v33 + 9;
  unint64_t v254 = v34;
  if (v35 <= v34) {
    unint64_t v35 = v34;
  }
  if (v35 <= 2) {
    unint64_t v35 = 2;
  }
  unint64_t v268 = v35;
  unint64_t v36 = v35 + v30;
  if (v36 + 1 > (v32 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v37 = v36 + 1;
  }
  else {
    unint64_t v37 = (v32 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v37 <= 0x10) {
    uint64_t v38 = 16;
  }
  else {
    uint64_t v38 = v37;
  }
  uint64_t v39 = *(unsigned int *)(v25 + 84);
  size_t v40 = v38 + 1;
  uint64_t v41 = v38 + 1 + v23;
  uint64_t v273 = v41 & ~v23;
  uint64_t v42 = ~v26;
  size_t v271 = *(void *)(*(void *)(v24 - 8) + 64);
  unint64_t v43 = (void *)(((unint64_t)v28 + v41) & ~v23);
  uint64_t v44 = v38 + 8;
  uint64_t v275 = v43;
  uint64_t v276 = v24;
  uint64_t v45 = (void *)(((unint64_t)v43 + v38 + 8) & 0xFFFFFFFFFFFFFFF8);
  int v269 = v39;
  uint64_t v260 = *(void *)(v24 - 8);
  uint64_t v277 = *(unsigned __int8 *)(v25 + 80);
  uint64_t v267 = v45;
  if (v39 < 0x80000001)
  {
    if (*v45 < 0xFFFFFFFFuLL) {
      goto LABEL_50;
    }
LABEL_54:
    uint64_t v46 = v278;
    unsigned int v50 = (unsigned __int8 *)((unint64_t)&v278[v41] & v279);
    unsigned int v51 = (void *)((unint64_t)&v50[v44] & 0xFFFFFFFFFFFFFFF8);
    uint64_t v251 = v51;
    if (v39 >= 0x80000001)
    {
      if (__swift_getEnumTagSinglePayload(((unint64_t)v51 + v277 + 16) & v42, v39, v276) >= 2) {
        goto LABEL_56;
      }
    }
    else if (*v51 < 0xFFFFFFFFuLL)
    {
LABEL_56:
      unsigned int v52 = *((unsigned __int8 *)v28 + v38);
      unsigned int v53 = v52 - 3;
      if (v52 < 3)
      {
        int v55 = v275;
      }
      else
      {
        if (v38 <= 3) {
          uint64_t v54 = v38;
        }
        else {
          uint64_t v54 = 4;
        }
        int v55 = v275;
        switch(v54)
        {
          case 1:
            int v56 = *(unsigned __int8 *)v28;
            goto LABEL_82;
          case 2:
            int v56 = *(unsigned __int16 *)v28;
            goto LABEL_82;
          case 3:
            int v56 = *(unsigned __int16 *)v28 | (*((unsigned __int8 *)v28 + 2) << 16);
            goto LABEL_82;
          case 4:
            int v56 = *(_DWORD *)v28;
LABEL_82:
            if (v38 < 4) {
              unsigned int v52 = (v56 | (v53 << (8 * v38))) + 3;
            }
            else {
              unsigned int v52 = v56 + 3;
            }
            break;
          default:
            break;
        }
      }
      uint64_t v70 = v38 + 8;
      if (v52 == 2)
      {
        (*(void (**)(void *, uint64_t))(v270 + 8))(v28, v274);
      }
      else if (v52 == 1)
      {
        swift_bridgeObjectRelease();
        int v71 = *(void (**)(unint64_t, uint64_t))(v270 + 8);
        v71(((unint64_t)v28 + v261) & v266, v274);
        size_t v72 = (unsigned __int8 *)((v262 + (((unint64_t)v28 + v261) & v266)) & v279);
        unsigned int v73 = v72[v268];
        unsigned int v74 = v73 - 4;
        if (v73 >= 4)
        {
          if (v268 <= 3) {
            uint64_t v75 = v268;
          }
          else {
            uint64_t v75 = 4;
          }
          switch(v75)
          {
            case 1:
              int v76 = *v72;
              goto LABEL_132;
            case 2:
              int v76 = *(unsigned __int16 *)v72;
              goto LABEL_132;
            case 3:
              int v76 = *(unsigned __int16 *)((v262 + (((unint64_t)v28 + v261) & v266)) & v279) | (*(unsigned __int8 *)(((v262 + (((unint64_t)v28 + v261) & v266)) & v279) + 2) << 16);
              goto LABEL_132;
            case 4:
              int v76 = *(_DWORD *)v72;
LABEL_132:
              if (v268 < 4) {
                unsigned int v73 = (v76 | (v74 << (8 * v268))) + 4;
              }
              else {
                unsigned int v73 = v76 + 4;
              }
              break;
            default:
              break;
          }
        }
        if (v73 >= 2)
        {
          swift_bridgeObjectRelease();
          unint64_t v92 = (unint64_t)&v72[v255] & v256;
          (*(void (**)(unint64_t, uint64_t))(v259 + 8))(v92, v258);
          v71((v257 + v92) & v266, v274);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      unsigned int v93 = *((unsigned __int8 *)v55 + v38);
      uint64_t v68 = v273;
      uint64_t v69 = v70;
      if (v93 <= 2)
      {
        if (v93 == 2)
        {
          (*(void (**)(void *, uint64_t))(v270 + 8))(v55, v274);
        }
        else if (v93 == 1)
        {
          swift_bridgeObjectRelease();
          unsigned int v94 = *(void (**)(unint64_t, uint64_t))(v270 + 8);
          v94(((unint64_t)v55 + v261) & v266, v274);
          unint64_t v95 = (unsigned __int8 *)((v262 + (((unint64_t)v55 + v261) & v266)) & v279);
          unsigned int v96 = v95[v268];
          unsigned int v97 = v96 - 4;
          if (v96 >= 4)
          {
            if (v268 <= 3) {
              uint64_t v98 = v268;
            }
            else {
              uint64_t v98 = 4;
            }
            switch(v98)
            {
              case 1:
                int v99 = *v95;
                goto LABEL_263;
              case 2:
                int v99 = *(unsigned __int16 *)v95;
                goto LABEL_263;
              case 3:
                int v99 = *(unsigned __int16 *)((v262 + (((unint64_t)v55 + v261) & v266)) & v279) | (*(unsigned __int8 *)(((v262 + (((unint64_t)v55 + v261) & v266)) & v279) + 2) << 16);
                goto LABEL_263;
              case 4:
                int v99 = *(_DWORD *)v95;
LABEL_263:
                if (v268 < 4) {
                  unsigned int v96 = (v99 | (v97 << (8 * v268))) + 4;
                }
                else {
                  unsigned int v96 = v99 + 4;
                }
                break;
              default:
                break;
            }
          }
          if (v96 >= 2)
          {
            swift_bridgeObjectRelease();
            unint64_t v174 = (unint64_t)&v95[v255] & v256;
            (*(void (**)(unint64_t, uint64_t))(v259 + 8))(v174, v258);
            v94((v257 + v174) & v266, v274);
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      swift_release();
      uint64_t v49 = v277 + 16;
      uint64_t v175 = ((unint64_t)v267 + v277 + 16) & v42;
      if (!__swift_getEnumTagSinglePayload(v175, 1, v276)) {
        (*(void (**)(uint64_t, uint64_t))(v260 + 8))(v175, v276);
      }
      BOOL v66 = v269 == 0;
      BOOL v67 = v269 == 0;
      goto LABEL_271;
    }
    uint64_t v265 = v38 + 8;
    if (v28 != (void *)v278)
    {
      unsigned int v62 = *((unsigned __int8 *)v28 + v38);
      unsigned int v63 = v62 - 3;
      if (v62 >= 3)
      {
        if (v38 <= 3) {
          uint64_t v64 = v38;
        }
        else {
          uint64_t v64 = 4;
        }
        switch(v64)
        {
          case 1:
            int v65 = *(unsigned __int8 *)v28;
            goto LABEL_115;
          case 2:
            int v65 = *(unsigned __int16 *)v28;
            goto LABEL_115;
          case 3:
            int v65 = *(unsigned __int16 *)v28 | (*((unsigned __int8 *)v28 + 2) << 16);
            goto LABEL_115;
          case 4:
            int v65 = *(_DWORD *)v28;
LABEL_115:
            if (v38 < 4) {
              unsigned int v62 = (v65 | (v63 << (8 * v38))) + 3;
            }
            else {
              unsigned int v62 = v65 + 3;
            }
            break;
          default:
            break;
        }
      }
      uint64_t v86 = v42;
      if (v62 == 2)
      {
        (*(void (**)(void *, uint64_t))(v270 + 8))(v28, v274);
      }
      else if (v62 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v246 = *(void (**)(unint64_t, uint64_t))(v270 + 8);
        v246(((unint64_t)v28 + v261) & v266, v274);
        uint64_t v87 = (unsigned __int8 *)((v262 + (((unint64_t)v28 + v261) & v266)) & v279);
        unsigned int v88 = v87[v268];
        unsigned int v89 = v88 - 4;
        if (v88 >= 4)
        {
          if (v268 <= 3) {
            uint64_t v90 = v268;
          }
          else {
            uint64_t v90 = 4;
          }
          switch(v90)
          {
            case 1:
              int v91 = *v87;
              goto LABEL_185;
            case 2:
              int v91 = *(unsigned __int16 *)v87;
              goto LABEL_185;
            case 3:
              int v91 = *(unsigned __int16 *)((v262 + (((unint64_t)v28 + v261) & v266)) & v279) | (*(unsigned __int8 *)(((v262 + (((unint64_t)v28 + v261) & v266)) & v279) + 2) << 16);
              goto LABEL_185;
            case 4:
              int v91 = *(_DWORD *)v87;
LABEL_185:
              if (v268 < 4) {
                unsigned int v88 = (v91 | (v89 << (8 * v268))) + 4;
              }
              else {
                unsigned int v88 = v91 + 4;
              }
              break;
            default:
              break;
          }
        }
        if (v88 >= 2)
        {
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v259 + 8))((unint64_t)&v87[v255] & v256, v258);
          v246((v257 + ((unint64_t)&v87[v255] & v256)) & v266, v274);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      uint64_t v46 = v278;
      unsigned int v124 = v278[v38];
      unsigned int v125 = v124 - 3;
      if (v124 < 3)
      {
        uint64_t v42 = v86;
      }
      else
      {
        if (v38 <= 3) {
          uint64_t v126 = v38;
        }
        else {
          uint64_t v126 = 4;
        }
        uint64_t v42 = v86;
        switch(v126)
        {
          case 1:
            int v127 = *v278;
            goto LABEL_200;
          case 2:
            int v127 = *(unsigned __int16 *)v278;
            goto LABEL_200;
          case 3:
            int v127 = *(unsigned __int16 *)v278 | (v278[2] << 16);
            goto LABEL_200;
          case 4:
            int v127 = *(_DWORD *)v278;
LABEL_200:
            if (v38 < 4) {
              unsigned int v124 = (v127 | (v125 << (8 * v38))) + 3;
            }
            else {
              unsigned int v124 = v127 + 3;
            }
            break;
          default:
            break;
        }
      }
      if (v124 == 2)
      {
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v270 + 16))(v28, v278, v274);
        *(_OWORD *)(((unint64_t)v28 + v32) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v278[v32] & 0xFFFFFFFFFFFFFFF8);
        *((unsigned char *)v28 + v38) = 2;
      }
      else if (v124 == 1)
      {
        uint64_t v248 = v42;
        *unint64_t v28 = *(void *)v278;
        v28[1] = *((void *)v278 + 1);
        unint64_t v128 = ((unint64_t)v28 + v261) & v266;
        unint64_t v129 = (unint64_t)&v278[v261] & v266;
        unint64_t v130 = *(void (**)(unint64_t, unint64_t, uint64_t))(v270 + 16);
        swift_bridgeObjectRetain();
        v244 = v130;
        v130(v128, v129, v274);
        unint64_t v131 = (unsigned char *)((v262 + v128) & v279);
        unint64_t v132 = (unsigned __int8 *)((v262 + v129) & v279);
        unsigned int v133 = v132[v268];
        unsigned int v134 = v133 - 4;
        if (v133 >= 4)
        {
          if (v268 <= 3) {
            uint64_t v135 = v268;
          }
          else {
            uint64_t v135 = 4;
          }
          switch(v135)
          {
            case 1:
              int v136 = *v132;
              goto LABEL_216;
            case 2:
              int v136 = *(unsigned __int16 *)v132;
              goto LABEL_216;
            case 3:
              int v136 = *(unsigned __int16 *)((v262 + v129) & v279) | (*(unsigned __int8 *)(((v262 + v129) & v279) + 2) << 16);
              goto LABEL_216;
            case 4:
              int v136 = *(_DWORD *)v132;
LABEL_216:
              if (v268 < 4) {
                unsigned int v133 = (v136 | (v134 << (8 * v268))) + 4;
              }
              else {
                unsigned int v133 = v136 + 4;
              }
              break;
            default:
              break;
          }
        }
        switch(v133)
        {
          case 1u:
            *unint64_t v131 = *v132;
            char v137 = 1;
            break;
          case 2u:
            *(void *)unint64_t v131 = *(void *)v132;
            *(void *)(((v262 + v128) & v279) + 8) = *(void *)(((v262 + v129) & v279) + 8);
            unint64_t v138 = (unint64_t)&v131[v255] & v256;
            unint64_t v233 = v138;
            uint64_t v237 = *(void (**)(unint64_t, unint64_t, uint64_t))(v259 + 16);
            v241 = v131;
            swift_bridgeObjectRetain();
            unint64_t v139 = v138;
            unint64_t v140 = (unint64_t)&v132[v255] & v256;
            v237(v139, v140, v258);
            unint64_t v141 = (v257 + v140) & v266;
            v244((v257 + v233) & v266, v141, v274);
            unint64_t v131 = v241;
            *(void *)((v32 + ((v257 + v233) & v266)) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v32 + v141) & 0xFFFFFFFFFFFFFFF8);
            v241[v254] = v132[v254];
            char v137 = 2;
            break;
          case 3u:
            *(void *)unint64_t v131 = *(void *)v132;
            *(void *)(((v262 + v128) & v279) + 8) = *(void *)(((v262 + v129) & v279) + 8);
            unint64_t v142 = (unint64_t)&v131[v255] & v256;
            unint64_t v143 = (unint64_t)&v132[v255] & v256;
            v238 = *(void (**)(unint64_t, unint64_t, uint64_t))(v259 + 16);
            uint64_t v242 = v131;
            swift_bridgeObjectRetain();
            v238(v142, v143, v258);
            unint64_t v144 = (v257 + v142) & v266;
            unint64_t v145 = (v257 + v143) & v266;
            v244(v144, v145, v274);
            unint64_t v131 = v242;
            *(void *)((v32 + v144) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v32 + v145) & 0xFFFFFFFFFFFFFFF8);
            char v137 = 3;
            break;
          default:
            char v137 = 0;
            *(_WORD *)unint64_t v131 = *(_WORD *)v132;
            break;
        }
        uint64_t v42 = v248;
        LODWORD(v39) = v269;
        v131[v268] = v137;
        *((unsigned char *)v28 + v38) = 1;
        uint64_t v46 = v278;
      }
      else
      {
        *unint64_t v28 = *(void *)v278;
        v28[1] = *((void *)v278 + 1);
        *((unsigned char *)v28 + v38) = 0;
        swift_bridgeObjectRetain();
      }
    }
    unsigned int v146 = *((unsigned __int8 *)v275 + v38);
    unsigned int v147 = v50[v38];
    if (v146 > 2)
    {
      if (v147 <= 2)
      {
        if (v147 != 2)
        {
          uint64_t v148 = v275;
          if (v147 == 1)
          {
            uint64_t v249 = v42;
            *uint64_t v275 = *(void *)v50;
            v275[1] = *((void *)v50 + 1);
            unint64_t v156 = ((unint64_t)v275 + v261) & v266;
            unint64_t v157 = (unint64_t)&v50[v261] & v266;
            uint64_t v158 = *(void (**)(unint64_t, unint64_t, uint64_t))(v270 + 16);
            swift_bridgeObjectRetain();
            v158(v156, v157, v274);
            unint64_t v159 = (v262 + v156) & v279;
            int v160 = (unsigned __int8 *)((v262 + v157) & v279);
            unsigned int v161 = v160[v268];
            unsigned int v162 = v161 - 4;
            if (v161 >= 4)
            {
              if (v268 <= 3) {
                uint64_t v163 = v268;
              }
              else {
                uint64_t v163 = 4;
              }
              switch(v163)
              {
                case 1:
                  int v164 = *v160;
                  goto LABEL_290;
                case 2:
                  int v164 = *(unsigned __int16 *)v160;
                  goto LABEL_290;
                case 3:
                  int v164 = *(unsigned __int16 *)((v262 + v157) & v279) | (*(unsigned __int8 *)(((v262 + v157) & v279) + 2) << 16);
                  goto LABEL_290;
                case 4:
                  int v164 = *(_DWORD *)v160;
LABEL_290:
                  if (v268 < 4) {
                    unsigned int v161 = (v164 | (v162 << (8 * v268))) + 4;
                  }
                  else {
                    unsigned int v161 = v164 + 4;
                  }
                  break;
                default:
                  break;
              }
            }
            switch(v161)
            {
              case 1u:
LABEL_346:
                *(unsigned char *)unint64_t v159 = *v160;
                char v198 = 1;
                break;
              case 2u:
LABEL_347:
                *(void *)unint64_t v159 = *(void *)v160;
                *(void *)(v159 + 8) = *((void *)v160 + 1);
                unint64_t v199 = (v255 + v159) & v256;
                unint64_t v200 = (unint64_t)&v160[v255] & v256;
                v280 = *(void (**)(unint64_t, unint64_t, uint64_t))(v259 + 16);
                swift_bridgeObjectRetain();
                v280(v199, v200, v258);
                uint64_t v148 = v275;
                uint64_t v201 = (v257 + v199) & v266;
                unint64_t v202 = (v257 + v200) & v266;
                v158(v201, v202, v274);
                *(void *)((v32 + v201) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v32 + v202) & 0xFFFFFFFFFFFFFFF8);
                *(unsigned char *)(v159 + v254) = v160[v254];
                char v198 = 2;
                break;
              case 3u:
LABEL_348:
                *(void *)unint64_t v159 = *(void *)v160;
                *(void *)(v159 + 8) = *((void *)v160 + 1);
                unint64_t v203 = (v255 + v159) & v256;
                unint64_t v204 = (unint64_t)&v160[v255] & v256;
                v281 = *(void (**)(unint64_t, unint64_t, uint64_t))(v259 + 16);
                swift_bridgeObjectRetain();
                v281(v203, v204, v258);
                uint64_t v205 = (v257 + v203) & v266;
                unint64_t v206 = (v257 + v204) & v266;
                v158(v205, v206, v274);
                *(void *)((v32 + v205) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v32 + v206) & 0xFFFFFFFFFFFFFFF8);
                char v198 = 3;
                break;
              default:
LABEL_345:
                char v198 = 0;
                *(_WORD *)unint64_t v159 = *(_WORD *)v160;
                break;
            }
            uint64_t v46 = v278;
            uint64_t v42 = v249;
            *(unsigned char *)(v159 + v268) = v198;
            *((unsigned char *)v148 + v38) = 1;
            LODWORD(v39) = v269;
            goto LABEL_350;
          }
          goto LABEL_336;
        }
        goto LABEL_254;
      }
      uint64_t v172 = v275;
    }
    else
    {
      if (v147 <= 2)
      {
        uint64_t v148 = v275;
        uint64_t v149 = v251;
        if (v275 == (void *)v50) {
          goto LABEL_351;
        }
        uint64_t v39 = v42;
        if (v146 == 2)
        {
          (*(void (**)(void *, uint64_t))(v270 + 8))(v275, v274);
        }
        else if (v146 == 1)
        {
          swift_bridgeObjectRelease();
          uint64_t v150 = *(void (**)(unint64_t, uint64_t))(v270 + 8);
          v150(((unint64_t)v275 + v261) & v266, v274);
          uint64_t v151 = (unsigned __int8 *)((v262 + (((unint64_t)v275 + v261) & v266)) & v279);
          unsigned int v152 = v151[v268];
          unsigned int v153 = v152 - 4;
          if (v152 >= 4)
          {
            if (v268 <= 3) {
              uint64_t v154 = v268;
            }
            else {
              uint64_t v154 = 4;
            }
            switch(v154)
            {
              case 1:
                int v155 = *v151;
                goto LABEL_310;
              case 2:
                int v155 = *(unsigned __int16 *)v151;
                goto LABEL_310;
              case 3:
                int v155 = *(unsigned __int16 *)((v262 + (((unint64_t)v275 + v261) & v266)) & v279) | (*(unsigned __int8 *)(((v262 + (((unint64_t)v275 + v261) & v266)) & v279) + 2) << 16);
                goto LABEL_310;
              case 4:
                int v155 = *(_DWORD *)v151;
LABEL_310:
                if (v268 < 4) {
                  unsigned int v152 = (v155 | (v153 << (8 * v268))) + 4;
                }
                else {
                  unsigned int v152 = v155 + 4;
                }
                break;
              default:
                break;
            }
          }
          if (v152 >= 2)
          {
            swift_bridgeObjectRelease();
            unint64_t v187 = (unint64_t)&v151[v255] & v256;
            (*(void (**)(unint64_t, uint64_t))(v259 + 8))(v187, v258);
            v150((v257 + v187) & v266, v274);
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        unsigned int v188 = v50[v38];
        unsigned int v189 = v188 - 3;
        if (v188 < 3)
        {
          uint64_t v46 = v278;
          uint64_t v42 = v39;
          LODWORD(v39) = v269;
        }
        else
        {
          if (v38 <= 3) {
            uint64_t v190 = v38;
          }
          else {
            uint64_t v190 = 4;
          }
          uint64_t v46 = v278;
          uint64_t v42 = v39;
          LODWORD(v39) = v269;
          switch(v190)
          {
            case 1:
              int v191 = *v50;
              goto LABEL_325;
            case 2:
              int v191 = *(unsigned __int16 *)v50;
              goto LABEL_325;
            case 3:
              int v191 = *(unsigned __int16 *)v50 | (v50[2] << 16);
              goto LABEL_325;
            case 4:
              int v191 = *(_DWORD *)v50;
LABEL_325:
              if (v38 < 4) {
                unsigned int v188 = (v191 | (v189 << (8 * v38))) + 3;
              }
              else {
                unsigned int v188 = v191 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v188 != 2)
        {
          if (v188 == 1)
          {
            uint64_t v249 = v42;
            *uint64_t v275 = *(void *)v50;
            v275[1] = *((void *)v50 + 1);
            unint64_t v192 = ((unint64_t)v275 + v261) & v266;
            unint64_t v193 = (unint64_t)&v50[v261] & v266;
            uint64_t v158 = *(void (**)(unint64_t, unint64_t, uint64_t))(v270 + 16);
            swift_bridgeObjectRetain();
            v158(v192, v193, v274);
            unint64_t v159 = (v262 + v192) & v279;
            int v160 = (unsigned __int8 *)((v262 + v193) & v279);
            unsigned int v194 = v160[v268];
            unsigned int v195 = v194 - 4;
            if (v194 >= 4)
            {
              if (v268 <= 3) {
                uint64_t v196 = v268;
              }
              else {
                uint64_t v196 = 4;
              }
              switch(v196)
              {
                case 1:
                  int v197 = *v160;
                  goto LABEL_341;
                case 2:
                  int v197 = *(unsigned __int16 *)v160;
                  goto LABEL_341;
                case 3:
                  int v197 = *(unsigned __int16 *)((v262 + v193) & v279) | (*(unsigned __int8 *)(((v262 + v193) & v279) + 2) << 16);
                  goto LABEL_341;
                case 4:
                  int v197 = *(_DWORD *)v160;
LABEL_341:
                  if (v268 < 4) {
                    unsigned int v194 = (v197 | (v195 << (8 * v268))) + 4;
                  }
                  else {
                    unsigned int v194 = v197 + 4;
                  }
                  break;
                default:
                  break;
              }
            }
            switch(v194)
            {
              case 1u:
                goto LABEL_346;
              case 2u:
                goto LABEL_347;
              case 3u:
                goto LABEL_348;
              default:
                goto LABEL_345;
            }
          }
LABEL_336:
          *uint64_t v148 = *(void *)v50;
          v148[1] = *((void *)v50 + 1);
          *((unsigned char *)v148 + v38) = 0;
          swift_bridgeObjectRetain();
          goto LABEL_350;
        }
LABEL_254:
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v270 + 16))(v275, v50, v274);
        *(_OWORD *)(((unint64_t)v275 + v32) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v50[v32] & 0xFFFFFFFFFFFFFFF8);
        *((unsigned char *)v275 + v38) = 2;
LABEL_350:
        uint64_t v149 = v251;
LABEL_351:
        v282 = v28;
        v207 = v4;
        int v208 = v39;
        uint64_t v209 = v149[1];
        *uint64_t v267 = *v149;
        v267[1] = v209;
        uint64_t v210 = v149;
        swift_retain();
        swift_release();
        uint64_t v49 = v277 + 16;
        uint64_t v211 = (void *)(((unint64_t)v267 + v277 + 16) & v42);
        unint64_t v212 = (unint64_t)v210 + v277 + 16;
        uint64_t v213 = v42;
        uint64_t v214 = (const void *)(v212 & v42);
        int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v211, 1, v276);
        int v216 = __swift_getEnumTagSinglePayload((uint64_t)v214, 1, v276);
        if (EnumTagSinglePayload)
        {
          if (!v216)
          {
            (*(void (**)(void *, const void *, uint64_t))(v260 + 16))(v211, v214, v276);
            __swift_storeEnumTagSinglePayload((uint64_t)v211, 0, 1, v276);
LABEL_361:
            uint64_t v123 = a3;
            uint64_t v68 = v273;
            size_t v115 = v271;
LABEL_362:
            BOOL v67 = v208 == 0;
            if (v208) {
              size_t v218 = v115;
            }
            else {
              size_t v218 = v115 + 1;
            }
            *(void *)(((unint64_t)v211 + v218 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v214
                                                                                                 + v218
                                                                                                 + 7) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v42 = v213;
            uint64_t v69 = v265;
            uint64_t v4 = v207;
            unint64_t v28 = v282;
            goto LABEL_366;
          }
        }
        else
        {
          if (!v216)
          {
            (*(void (**)(void *, const void *, uint64_t))(v260 + 24))(v211, v214, v276);
            goto LABEL_361;
          }
          (*(void (**)(void *, uint64_t))(v260 + 8))(v211, v276);
        }
        size_t v115 = v271;
        if (v208) {
          size_t v217 = v271;
        }
        else {
          size_t v217 = v271 + 1;
        }
        memcpy(v211, v214, v217);
        uint64_t v123 = a3;
        uint64_t v68 = v273;
        goto LABEL_362;
      }
      if (v146 == 2)
      {
        int v173 = v275;
        (*(void (**)(void *, uint64_t))(v270 + 8))(v275, v274);
      }
      else if (v146 == 1)
      {
        uint64_t v250 = v42;
        swift_bridgeObjectRelease();
        unint64_t v165 = ((unint64_t)v275 + v261) & v266;
        size_t v166 = *(void (**)(unint64_t, uint64_t))(v270 + 8);
        v166(v165, v274);
        uint64_t v167 = (unsigned __int8 *)((v262 + v165) & v279);
        unsigned int v168 = v167[v268];
        unsigned int v169 = v168 - 4;
        if (v168 < 4)
        {
          uint64_t v42 = v250;
        }
        else
        {
          if (v268 <= 3) {
            uint64_t v170 = v268;
          }
          else {
            uint64_t v170 = 4;
          }
          uint64_t v42 = v250;
          switch(v170)
          {
            case 1:
              int v171 = *v167;
              goto LABEL_297;
            case 2:
              int v171 = *(unsigned __int16 *)v167;
              goto LABEL_297;
            case 3:
              int v171 = *(unsigned __int16 *)v167 | (v167[2] << 16);
              goto LABEL_297;
            case 4:
              int v171 = *(_DWORD *)v167;
LABEL_297:
              if (v268 < 4) {
                unsigned int v168 = (v171 | (v169 << (8 * v268))) + 4;
              }
              else {
                unsigned int v168 = v171 + 4;
              }
              break;
            default:
              break;
          }
        }
        int v173 = v275;
        if (v168 >= 2)
        {
          if (v168 == 3)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v259 + 8))((unint64_t)&v167[v255] & v256, v258);
            uint64_t v42 = v250;
            v166((v257 + ((unint64_t)&v167[v255] & v256)) & v266, v274);
          }
          else
          {
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v259 + 8))((unint64_t)&v167[v255] & v256, v258);
            v166((v257 + ((unint64_t)&v167[v255] & v256)) & v266, v274);
            uint64_t v42 = v250;
          }
          int v173 = v275;
        }
      }
      else
      {
        int v173 = v275;
        swift_bridgeObjectRelease();
      }
      uint64_t v172 = v173;
    }
    memcpy(v172, v50, v40);
    goto LABEL_350;
  }
  if (__swift_getEnumTagSinglePayload(((unint64_t)v45 + v26 + 16) & v42, v39, v24) < 2) {
    goto LABEL_54;
  }
LABEL_50:
  uint64_t v46 = v278;
  uint64_t v47 = (void *)((unint64_t)&v278[v41] & v279);
  uint64_t v264 = v38 + 8;
  uint64_t v48 = (void *)(((unint64_t)v47 + v44) & 0xFFFFFFFFFFFFFFF8);
  if (v39 >= 0x80000001)
  {
    uint64_t v57 = v39;
    uint64_t v49 = v277 + 16;
    if (__swift_getEnumTagSinglePayload(((unint64_t)v48 + v277 + 16) & v42, v57, v276) >= 2) {
      goto LABEL_77;
    }
  }
  else if (*v48 <= 0xFFFFFFFEuLL)
  {
    uint64_t v49 = v277 + 16;
LABEL_77:
    BOOL v66 = v269 == 0;
    BOOL v67 = v269 == 0;
    uint64_t v68 = v273;
    uint64_t v69 = v264;
LABEL_271:
    size_t v115 = v271;
    if (v66) {
      size_t v176 = v271 + 1;
    }
    else {
      size_t v176 = v271;
    }
    memcpy(v28, v46, ((v176 + ((v49 + ((v69 + v68) & 0xFFFFFFFFFFFFFFF8)) & v42) + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    uint64_t v123 = a3;
    goto LABEL_366;
  }
  unsigned int v58 = v278[v38];
  unsigned int v59 = v58 - 3;
  if (v58 >= 3)
  {
    if (v38 <= 3) {
      uint64_t v60 = v38;
    }
    else {
      uint64_t v60 = 4;
    }
    switch(v60)
    {
      case 1:
        int v61 = *v278;
        goto LABEL_98;
      case 2:
        int v61 = *(unsigned __int16 *)v278;
        goto LABEL_98;
      case 3:
        int v61 = *(unsigned __int16 *)v278 | (v278[2] << 16);
        goto LABEL_98;
      case 4:
        int v61 = *(_DWORD *)v278;
LABEL_98:
        if (v38 < 4) {
          unsigned int v58 = (v61 | (v59 << (8 * v38))) + 3;
        }
        else {
          unsigned int v58 = v61 + 3;
        }
        break;
      default:
        break;
    }
  }
  if (v58 == 2)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v270 + 16))(v28, v278, v274);
    *(_OWORD *)(((unint64_t)v28 + v32) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v278[v32] & 0xFFFFFFFFFFFFFFF8);
    *((unsigned char *)v28 + v38) = 2;
  }
  else if (v58 == 1)
  {
    uint64_t v245 = v42;
    *unint64_t v28 = *(void *)v278;
    v28[1] = *((void *)v278 + 1);
    unint64_t v77 = ((unint64_t)v28 + v261) & v266;
    unint64_t v78 = (unint64_t)&v278[v261] & v266;
    uint64_t v79 = *(void (**)(void))(v270 + 16);
    swift_bridgeObjectRetain();
    int v243 = v79;
    ((void (*)(unint64_t, unint64_t, uint64_t))v79)(v77, v78, v274);
    unint64_t v80 = (v262 + v77) & v279;
    uint64_t v81 = (unsigned __int8 *)((v262 + v78) & v279);
    unsigned int v82 = v81[v268];
    unsigned int v83 = v82 - 4;
    if (v82 < 4)
    {
      size_t v40 = v38 + 1;
    }
    else
    {
      if (v268 <= 3) {
        uint64_t v84 = v268;
      }
      else {
        uint64_t v84 = 4;
      }
      size_t v40 = v38 + 1;
      switch(v84)
      {
        case 1:
          int v85 = *v81;
          goto LABEL_151;
        case 2:
          int v85 = *(unsigned __int16 *)v81;
          goto LABEL_151;
        case 3:
          int v85 = *(unsigned __int16 *)((v262 + v78) & v279) | (*(unsigned __int8 *)(((v262 + v78) & v279) + 2) << 16);
          goto LABEL_151;
        case 4:
          int v85 = *(_DWORD *)v81;
LABEL_151:
          if (v268 < 4) {
            unsigned int v82 = (v85 | (v83 << (8 * v268))) + 4;
          }
          else {
            unsigned int v82 = v85 + 4;
          }
          break;
        default:
          break;
      }
    }
    switch(v82)
    {
      case 1u:
        *(unsigned char *)unint64_t v80 = *v81;
        char v100 = 1;
        break;
      case 2u:
        *(void *)unint64_t v80 = *(void *)v81;
        *(void *)(v80 + 8) = *(void *)(((v262 + v78) & v279) + 8);
        unint64_t v239 = (v255 + v80) & v256;
        unint64_t v236 = (unint64_t)&v81[v255] & v256;
        uint64_t v234 = *(void (**)(unint64_t, unint64_t, uint64_t))(v259 + 16);
        unint64_t v252 = v80;
        swift_bridgeObjectRetain();
        v234(v239, v236, v258);
        v243();
        *(void *)((v32 + ((v257 + v239) & v266)) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v32 + ((v257 + v236) & v266)) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v80 = v252;
        *(unsigned char *)(v252 + v254) = v81[v254];
        char v100 = 2;
        break;
      case 3u:
        *(void *)unint64_t v80 = *(void *)v81;
        *(void *)(v80 + 8) = *(void *)(((v262 + v78) & v279) + 8);
        unint64_t v101 = (v255 + v80) & v256;
        unint64_t v235 = v101;
        v240 = *(void (**)(unint64_t, unint64_t, uint64_t))(v259 + 16);
        unint64_t v253 = v80;
        swift_bridgeObjectRetain();
        unint64_t v102 = v101;
        unint64_t v103 = (unint64_t)&v81[v255] & v256;
        v240(v102, v103, v258);
        unint64_t v104 = (v257 + v103) & v266;
        ((void (*)(unint64_t, unint64_t, uint64_t))v243)((v257 + v235) & v266, v104, v274);
        unint64_t v80 = v253;
        *(void *)((v32 + ((v257 + v235) & v266)) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v32 + v104) & 0xFFFFFFFFFFFFFFF8);
        char v100 = 3;
        break;
      default:
        char v100 = 0;
        *(_WORD *)unint64_t v80 = *(_WORD *)v81;
        break;
    }
    uint64_t v46 = v278;
    *(unsigned char *)(v80 + v268) = v100;
    *((unsigned char *)v28 + v38) = 1;
    uint64_t v42 = v245;
  }
  else
  {
    *unint64_t v28 = *(void *)v278;
    v28[1] = *((void *)v278 + 1);
    *((unsigned char *)v28 + v38) = 0;
    swift_bridgeObjectRetain();
  }
  unsigned int v105 = *((unsigned __int8 *)v47 + v38);
  if (v105 > 2)
  {
    memcpy(v275, v47, v40);
  }
  else if (v105 == 2)
  {
    (*(void (**)(void *, void *, uint64_t))(v270 + 16))(v275, v47, v274);
    *(_OWORD *)(((unint64_t)v275 + v32) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v47 + v32) & 0xFFFFFFFFFFFFFFF8);
    *((unsigned char *)v275 + v38) = 2;
  }
  else
  {
    if (v105 == 1)
    {
      uint64_t v247 = v42;
      *uint64_t v275 = *v47;
      v275[1] = v47[1];
      unint64_t v106 = ((unint64_t)v275 + v261) & v266;
      unint64_t v107 = ((unint64_t)v47 + v261) & v266;
      uint64_t v108 = *(void (**)(unint64_t, unint64_t, uint64_t))(v270 + 16);
      swift_bridgeObjectRetain();
      v108(v106, v107, v274);
      unint64_t v109 = (unsigned char *)((v262 + v106) & v279);
      BOOL v110 = (unsigned __int8 *)((v262 + v107) & v279);
      unsigned int v111 = v110[v268];
      unsigned int v112 = v111 - 4;
      if (v111 >= 4)
      {
        if (v268 <= 3) {
          uint64_t v113 = v268;
        }
        else {
          uint64_t v113 = 4;
        }
        switch(v113)
        {
          case 1:
            int v114 = *v110;
            goto LABEL_278;
          case 2:
            int v114 = *(unsigned __int16 *)v110;
            goto LABEL_278;
          case 3:
            int v114 = *(unsigned __int16 *)((v262 + v107) & v279) | (*(unsigned __int8 *)(((v262 + v107) & v279) + 2) << 16);
            goto LABEL_278;
          case 4:
            int v114 = *(_DWORD *)v110;
LABEL_278:
            if (v268 < 4) {
              unsigned int v111 = (v114 | (v112 << (8 * v268))) + 4;
            }
            else {
              unsigned int v111 = v114 + 4;
            }
            break;
          default:
            break;
        }
      }
      switch(v111)
      {
        case 1u:
          *unint64_t v109 = *v110;
          char v177 = 1;
          break;
        case 2u:
          *(void *)unint64_t v109 = *(void *)v110;
          *(void *)(((v262 + v106) & v279) + 8) = *(void *)(((v262 + v107) & v279) + 8);
          unint64_t v178 = (unint64_t)&v109[v255] & v256;
          unint64_t v179 = (unint64_t)&v110[v255] & v256;
          uint64_t v263 = *(void (**)(unint64_t, unint64_t, uint64_t))(v259 + 16);
          swift_bridgeObjectRetain();
          v263(v178, v179, v258);
          unint64_t v180 = (v257 + v178) & v266;
          unint64_t v181 = (v257 + v179) & v266;
          v108(v180, v181, v274);
          *(void *)((v32 + v180) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v32 + v181) & 0xFFFFFFFFFFFFFFF8);
          v109[v254] = v110[v254];
          char v177 = 2;
          break;
        case 3u:
          *(void *)unint64_t v109 = *(void *)v110;
          *(void *)(((v262 + v106) & v279) + 8) = *(void *)(((v262 + v107) & v279) + 8);
          unint64_t v182 = (unint64_t)&v109[v255] & v256;
          unint64_t v183 = (unint64_t)&v110[v255] & v256;
          uint64_t v184 = *(void (**)(unint64_t, unint64_t, uint64_t))(v259 + 16);
          swift_bridgeObjectRetain();
          v184(v182, v183, v258);
          unint64_t v185 = (v257 + v182) & v266;
          unint64_t v186 = (v257 + v183) & v266;
          v108(v185, v186, v274);
          *(void *)((v32 + v185) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v32 + v186) & 0xFFFFFFFFFFFFFFF8);
          char v177 = 3;
          break;
        default:
          char v177 = 0;
          *(_WORD *)unint64_t v109 = *(_WORD *)v110;
          break;
      }
      uint64_t v116 = v277;
      uint64_t v46 = v278;
      uint64_t v42 = v247;
      v109[v268] = v177;
      uint64_t v117 = v276;
      *((unsigned char *)v275 + v38) = 1;
      size_t v115 = v271;
      goto LABEL_173;
    }
    *uint64_t v275 = *v47;
    v275[1] = v47[1];
    *((unsigned char *)v275 + v38) = 0;
    swift_bridgeObjectRetain();
  }
  size_t v115 = v271;
  uint64_t v117 = v276;
  uint64_t v116 = v277;
LABEL_173:
  uint64_t v118 = v48[1];
  *uint64_t v267 = *v48;
  v267[1] = v118;
  uint64_t v49 = v116 + 16;
  size_t v119 = (void *)(((unint64_t)v267 + v116 + 16) & v42);
  uint64_t v120 = v42;
  uint64_t v121 = (const void *)(((unint64_t)v48 + v116 + 16) & v42);
  swift_retain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v121, 1, v117))
  {
    BOOL v67 = v269 == 0;
    if (v269) {
      size_t v122 = v115;
    }
    else {
      size_t v122 = v115 + 1;
    }
    memcpy(v119, v121, v122);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v260 + 16))(v119, v121, v117);
    __swift_storeEnumTagSinglePayload((uint64_t)v119, 0, 1, v117);
    BOOL v67 = v269 == 0;
    if (v269) {
      size_t v122 = v115;
    }
    else {
      size_t v122 = v115 + 1;
    }
  }
  *(void *)(((unint64_t)v119 + v122 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v121
                                                                                       + v122
                                                                                       + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v42 = v120;
  uint64_t v123 = a3;
  uint64_t v68 = v273;
  uint64_t v69 = v264;
LABEL_366:
  unint64_t v219 = (v115 + v67 + ((v49 + ((v69 + v68) & 0xFFFFFFFFFFFFFFF8)) & v42) + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v220 = *(void *)(v123 + 16);
  uint64_t v221 = *(void *)(v220 - 8);
  uint64_t v222 = *(unsigned __int8 *)(v221 + 80);
  uint64_t v223 = v219 + v222 + 8;
  uint64_t v224 = (void *)(((unint64_t)v28 + v223) & ~v222);
  uint64_t v225 = (const void *)((unint64_t)&v46[v223] & ~v222);
  int v226 = __swift_getEnumTagSinglePayload((uint64_t)v224, 1, v220);
  int v227 = __swift_getEnumTagSinglePayload((uint64_t)v225, 1, v220);
  if (v226)
  {
    if (!v227)
    {
      (*(void (**)(void *, const void *, uint64_t))(v221 + 16))(v224, v225, v220);
      __swift_storeEnumTagSinglePayload((uint64_t)v224, 0, 1, v220);
      goto LABEL_377;
    }
    int v228 = *(_DWORD *)(v221 + 84);
    size_t v229 = *(void *)(v221 + 64);
  }
  else
  {
    if (!v227)
    {
      (*(void (**)(void *, const void *, uint64_t))(v221 + 24))(v224, v225, v220);
      goto LABEL_377;
    }
    (*(void (**)(void *, uint64_t))(v221 + 8))(v224, v220);
    int v228 = *(_DWORD *)(v221 + 84);
    size_t v229 = *(void *)(v221 + 64);
  }
  if (v228) {
    size_t v230 = v229;
  }
  else {
    size_t v230 = v229 + 1;
  }
  memcpy(v224, v225, v230);
LABEL_377:
  if (*(_DWORD *)(v221 + 84)) {
    uint64_t v231 = *(void *)(v221 + 64);
  }
  else {
    uint64_t v231 = *(void *)(v221 + 64) + 1;
  }
  *(void *)(((unint64_t)v224 + v231 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v225
                                                                                       + v231
                                                                                       + 7) & 0xFFFFFFFFFFFFFFF8);
  return v4;
}

void *sub_22EC4A480(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7CFC0();
  if (*(void *)(*(void *)(v6 - 8) + 64) <= 8uLL) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  unsigned int v8 = a2[v7];
  unsigned int v9 = v8 - 2;
  if (v8 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *a2;
        goto LABEL_13;
      case 2:
        int v11 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v11 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v11 = *(_DWORD *)a2;
LABEL_13:
        if (v7 < 4) {
          unsigned int v8 = (v11 | (v9 << (8 * v7))) + 2;
        }
        else {
          unsigned int v8 = v11 + 2;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v151 = a3;
  if (v8 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    char v12 = 1;
  }
  else
  {
    char v12 = 0;
    *a1 = *(void *)a2;
  }
  *((unsigned char *)a1 + v7) = v12;
  uint64_t v144 = sub_22EE7F6E0();
  uint64_t v13 = *(void *)(v144 - 8);
  uint64_t v149 = v13;
  uint64_t v14 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = sub_22EE7F5D0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v136 = v16;
  uint64_t v137 = v15;
  uint64_t v17 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = v14 | v17 | 7;
  uint64_t v19 = sub_22EE7C220();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(unsigned __int8 *)(v20 + 80);
  uint64_t v22 = v7 + (v18 | v21) + 1;
  unsigned int v152 = a1;
  unsigned int v153 = (_OWORD *)(((unint64_t)a1 + v22) & ~(v18 | v21));
  uint64_t v23 = (unsigned __int8 *)((unint64_t)&a2[v22] & ~(v18 | v21));
  uint64_t v140 = v14 + 16;
  uint64_t v24 = *(void *)(v13 + 64);
  uint64_t v141 = v24 + v18;
  uint64_t v25 = (v24 + v18 + ((v14 + 16) & ~v14)) & ~v18;
  uint64_t v134 = v17 + 16;
  uint64_t v135 = *(void *)(v16 + 64) + v14;
  uint64_t v26 = v24 + 7;
  unint64_t v27 = (v24 + 7 + ((v135 + ((v17 + 16) & ~v17)) & ~v14)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v28 = v27 + 8;
  unint64_t v29 = v27 + 9;
  unint64_t v133 = v28;
  if (v29 <= v28) {
    unint64_t v29 = v28;
  }
  if (v29 <= 2) {
    uint64_t v30 = 2;
  }
  else {
    uint64_t v30 = v29;
  }
  uint64_t v31 = v30 + v25;
  uint64_t v142 = v26;
  if (v31 + 1 > (v26 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v32 = v31 + 1;
  }
  else {
    unint64_t v32 = (v26 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v32 <= 0x10) {
    uint64_t v33 = 16;
  }
  else {
    uint64_t v33 = v32;
  }
  unsigned int v34 = *(_DWORD *)(v20 + 84);
  uint64_t v35 = v33 + 1 + v18;
  uint64_t v36 = v35 & ~v18;
  uint64_t v37 = ~v21;
  size_t v150 = *(void *)(*(void *)(v19 - 8) + 64);
  int v155 = v23;
  uint64_t v38 = v33 + 8;
  uint64_t v148 = (_OWORD *)((unint64_t)&v23[v35] & ~v18);
  uint64_t v39 = (void *)(((unint64_t)v148 + v33 + 8) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v146 = v19;
  uint64_t v138 = *(void *)(v19 - 8);
  size_t __n = v33 + 1;
  unint64_t v143 = v39;
  uint64_t v147 = v35;
  if (v34 >= 0x80000001)
  {
    uint64_t v40 = v21 + 16;
    uint64_t v130 = v17;
    uint64_t v41 = v30;
    uint64_t v42 = v33;
    uint64_t v43 = *(unsigned __int8 *)(v20 + 80);
    unsigned int v44 = *(_DWORD *)(v20 + 84);
    uint64_t v45 = ~v21;
    unsigned int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(((unint64_t)v39 + v21 + 16) & v37, v44, v19);
    uint64_t v21 = v43;
    uint64_t v33 = v42;
    uint64_t v30 = v41;
    uint64_t v17 = v130;
    uint64_t v37 = v45;
    unsigned int v34 = v44;
    if (EnumTagSinglePayload >= 2) {
      goto LABEL_40;
    }
LABEL_34:
    unsigned int v47 = v155[v33];
    unsigned int v48 = v47 - 3;
    if (v47 < 3)
    {
      uint64_t v50 = v144;
    }
    else
    {
      if (v33 <= 3) {
        uint64_t v49 = v33;
      }
      else {
        uint64_t v49 = 4;
      }
      uint64_t v50 = v144;
      switch(v49)
      {
        case 1:
          int v51 = *v155;
          goto LABEL_47;
        case 2:
          int v51 = *(unsigned __int16 *)v155;
          goto LABEL_47;
        case 3:
          int v51 = *(unsigned __int16 *)v155 | (v155[2] << 16);
          goto LABEL_47;
        case 4:
          int v51 = *(_DWORD *)v155;
LABEL_47:
          if (v33 < 4) {
            unsigned int v47 = (v51 | (v48 << (8 * v33))) + 3;
          }
          else {
            unsigned int v47 = v51 + 3;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v56 = ~v14;
    uint64_t v57 = ~v18;
    uint64_t v145 = ~v17;
    uint64_t v128 = v36;
    uint64_t v129 = v37;
    uint64_t v126 = v21;
    if (v47 == 2)
    {
      uint64_t v54 = v153;
      (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v149 + 32))(v153, v155, v50);
      uint64_t v57 = ~v18;
      *(_OWORD *)(((unint64_t)v153 + v142) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v155[v142] & 0xFFFFFFFFFFFFFFF8);
      char v67 = 2;
    }
    else
    {
      uint64_t v54 = v153;
      if (v47 == 1)
      {
        *unsigned int v153 = *(_OWORD *)v155;
        unint64_t v58 = ((unint64_t)v153 + v140) & v56;
        uint64_t v131 = v56;
        unint64_t v59 = (unint64_t)&v155[v140] & v56;
        uint64_t v60 = ~v18;
        unsigned int v125 = *(void (**)(unint64_t, unint64_t, uint64_t))(v149 + 32);
        v125(v58, v59, v50);
        uint64_t v57 = ~v18;
        int v61 = (unsigned char *)((v141 + v58) & ~v18);
        unsigned int v62 = (unsigned __int8 *)((v141 + v59) & ~v18);
        unsigned int v63 = v62[v30];
        unsigned int v64 = v63 - 4;
        if (v63 >= 4)
        {
          if (v30 <= 3) {
            uint64_t v65 = v30;
          }
          else {
            uint64_t v65 = 4;
          }
          switch(v65)
          {
            case 1:
              int v66 = *v62;
              goto LABEL_63;
            case 2:
              int v66 = *(unsigned __int16 *)v62;
              goto LABEL_63;
            case 3:
              int v66 = *(unsigned __int16 *)v62 | (*(unsigned __int8 *)(((v141 + v59) & v60) + 2) << 16);
              goto LABEL_63;
            case 4:
              int v66 = *(_DWORD *)v62;
LABEL_63:
              if (v30 < 4) {
                unsigned int v63 = (v66 | (v64 << (8 * v30))) + 4;
              }
              else {
                unsigned int v63 = v66 + 4;
              }
              break;
            default:
              break;
          }
        }
        switch(v63)
        {
          case 1u:
            *int v61 = *v62;
            char v68 = 1;
            break;
          case 2u:
            *(_OWORD *)int v61 = *(_OWORD *)v62;
            unint64_t v69 = (unint64_t)&v61[v134] & v145;
            uint64_t v123 = v61;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v136 + 32))(v69, (unint64_t)&v62[v134] & v145, v137);
            unint64_t v70 = (v135 + v69) & v131;
            unint64_t v71 = (v135 + ((unint64_t)&v62[v134] & v145)) & v131;
            v125(v70, v71, v50);
            int v61 = v123;
            uint64_t v57 = v60;
            *(void *)((v142 + v70) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v142 + v71) & 0xFFFFFFFFFFFFFFF8);
            v123[v133] = v62[v133];
            char v68 = 2;
            break;
          case 3u:
            *(_OWORD *)int v61 = *(_OWORD *)v62;
            unint64_t v72 = (unint64_t)&v61[v134] & v145;
            unint64_t v73 = (unint64_t)&v62[v134] & v145;
            unsigned int v74 = v61;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v136 + 32))(v72, v73, v137);
            unint64_t v75 = (v135 + v72) & v131;
            unint64_t v76 = (v135 + v73) & v131;
            v125(v75, v76, v50);
            int v61 = v74;
            uint64_t v57 = v60;
            *(void *)((v142 + v75) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v142 + v76) & 0xFFFFFFFFFFFFFFF8);
            char v68 = 3;
            break;
          default:
            char v68 = 0;
            *(_WORD *)int v61 = *(_WORD *)v62;
            break;
        }
        uint64_t v54 = v153;
        v61[v30] = v68;
        char v67 = 1;
        uint64_t v56 = v131;
      }
      else
      {
        char v67 = 0;
        *unsigned int v153 = *(_OWORD *)v155;
      }
    }
    *((unsigned char *)v54 + v33) = v67;
    unint64_t v77 = (_OWORD *)(((unint64_t)v54 + v147) & v57);
    unsigned int v78 = *((unsigned __int8 *)v148 + v33);
    unsigned int v127 = v34;
    if (v78 > 2)
    {
      memcpy(v77, v148, __n);
    }
    else if (v78 == 2)
    {
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v149 + 32))(v77, v148, v50);
      *(_OWORD *)(((unint64_t)v77 + v142) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v148 + v142) & 0xFFFFFFFFFFFFFFF8);
      *((unsigned char *)v77 + v33) = 2;
    }
    else
    {
      if (v78 == 1)
      {
        uint64_t v154 = v33;
        *unint64_t v77 = *v148;
        uint64_t v79 = v56;
        unint64_t v80 = ((unint64_t)v77 + v140) & v56;
        uint64_t v132 = v79;
        unint64_t v81 = ((unint64_t)v148 + v140) & v79;
        unsigned int v82 = *(void (**)(unint64_t, unint64_t, uint64_t))(v149 + 32);
        uint64_t v83 = v57;
        v82(v80, v81, v50);
        uint64_t v84 = v30;
        int v85 = (unsigned char *)((v141 + v80) & v83);
        uint64_t v86 = (unsigned __int8 *)((v141 + v81) & v83);
        unsigned int v87 = v86[v84];
        unsigned int v88 = v87 - 4;
        uint64_t v124 = v84;
        if (v87 >= 4)
        {
          if (v84 <= 3) {
            uint64_t v89 = v84;
          }
          else {
            uint64_t v89 = 4;
          }
          switch(v89)
          {
            case 1:
              int v90 = *v86;
              goto LABEL_107;
            case 2:
              int v90 = *(unsigned __int16 *)v86;
              goto LABEL_107;
            case 3:
              int v90 = *(unsigned __int16 *)v86 | (*(unsigned __int8 *)(((v141 + v81) & v83) + 2) << 16);
              goto LABEL_107;
            case 4:
              int v90 = *(_DWORD *)v86;
LABEL_107:
              if (v84 < 4) {
                unsigned int v87 = (v90 | (v88 << (8 * v84))) + 4;
              }
              else {
                unsigned int v87 = v90 + 4;
              }
              break;
            default:
              break;
          }
        }
        switch(v87)
        {
          case 1u:
            *int v85 = *v86;
            char v118 = 1;
            break;
          case 2u:
            *(_OWORD *)int v85 = *(_OWORD *)v86;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v136 + 32))((unint64_t)&v85[v134] & v145, (unint64_t)&v86[v134] & v145, v137);
            unint64_t v119 = (v135 + ((unint64_t)&v85[v134] & v145)) & v132;
            unint64_t v120 = (v135 + ((unint64_t)&v86[v134] & v145)) & v132;
            v82(v119, v120, v50);
            *(void *)((v142 + v119) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v142 + v120) & 0xFFFFFFFFFFFFFFF8);
            v85[v133] = v86[v133];
            char v118 = 2;
            break;
          case 3u:
            *(_OWORD *)int v85 = *(_OWORD *)v86;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v136 + 32))((unint64_t)&v85[v134] & v145, (unint64_t)&v86[v134] & v145, v137);
            unint64_t v121 = (v135 + ((unint64_t)&v85[v134] & v145)) & v132;
            unint64_t v122 = (v135 + ((unint64_t)&v86[v134] & v145)) & v132;
            v82(v121, v122, v50);
            *(void *)((v142 + v121) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v142 + v122) & 0xFFFFFFFFFFFFFFF8);
            char v118 = 3;
            break;
          default:
            char v118 = 0;
            *(_WORD *)int v85 = *(_WORD *)v86;
            break;
        }
        size_t v91 = v150;
        uint64_t v55 = v151;
        uint64_t v92 = v146;
        uint64_t v93 = v129;
        uint64_t v94 = v126;
        unint64_t v95 = v143;
        v85[v124] = v118;
        *((unsigned char *)v77 + v154) = 1;
        goto LABEL_85;
      }
      *unint64_t v77 = *v148;
      *((unsigned char *)v77 + v33) = 0;
    }
    size_t v91 = v150;
    uint64_t v55 = v151;
    uint64_t v92 = v146;
    uint64_t v93 = v129;
    uint64_t v94 = v126;
    unint64_t v95 = v143;
LABEL_85:
    unsigned int v96 = (_OWORD *)(((unint64_t)v77 + v38) & 0xFFFFFFFFFFFFFFF8);
    *unsigned int v96 = *v95;
    uint64_t v97 = v94 + 16;
    uint64_t v98 = (void *)(((unint64_t)v96 + v94 + 16) & v93);
    uint64_t v99 = v93;
    char v100 = (const void *)(((unint64_t)v95 + v94 + 16) & v93);
    uint64_t v101 = v92;
    uint64_t v102 = v38;
    if (__swift_getEnumTagSinglePayload((uint64_t)v100, 1, v92))
    {
      BOOL v103 = v127 == 0;
      if (v127) {
        size_t v104 = v91;
      }
      else {
        size_t v104 = v91 + 1;
      }
      memcpy(v98, v100, v104);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v138 + 32))(v98, v100, v101);
      __swift_storeEnumTagSinglePayload((uint64_t)v98, 0, 1, v101);
      BOOL v103 = v127 == 0;
      if (v127) {
        size_t v104 = v91;
      }
      else {
        size_t v104 = v91 + 1;
      }
    }
    *(void *)(((unint64_t)v98 + v104 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v100
                                                                                        + v104
                                                                                        + 7) & 0xFFFFFFFFFFFFFFF8);
    size_t v53 = ((v91 + v103 + ((v97 + ((v102 + v128) & 0xFFFFFFFFFFFFFFF8)) & v99) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    goto LABEL_94;
  }
  if (*v39 > 0xFFFFFFFEuLL) {
    goto LABEL_34;
  }
  uint64_t v40 = v21 + 16;
LABEL_40:
  size_t v52 = v150;
  if (!v34) {
    size_t v52 = v150 + 1;
  }
  size_t v53 = ((v52 + ((v40 + ((v38 + v36) & 0xFFFFFFFFFFFFFFF8)) & v37) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v54 = v153;
  memcpy(v153, v155, v53);
  uint64_t v55 = v151;
LABEL_94:
  uint64_t v105 = *(void *)(v55 + 16);
  uint64_t v106 = *(void *)(v105 - 8);
  uint64_t v107 = *(unsigned __int8 *)(v106 + 80);
  size_t v108 = v53 + v107;
  unint64_t v109 = (void *)(((unint64_t)v54 + v53 + v107) & ~v107);
  BOOL v110 = (const void *)((unint64_t)&v155[v108] & ~v107);
  if (__swift_getEnumTagSinglePayload((uint64_t)v110, 1, v105))
  {
    int v111 = *(_DWORD *)(v106 + 84);
    size_t v112 = *(void *)(v106 + 64);
    if (v111) {
      size_t v113 = v112;
    }
    else {
      size_t v113 = v112 + 1;
    }
    memcpy(v109, v110, v113);
  }
  else
  {
    size_t v115 = *(void (**)(void *, const void *, uint64_t))(v106 + 32);
    uint64_t v114 = v106 + 32;
    v115(v109, v110, v105);
    __swift_storeEnumTagSinglePayload((uint64_t)v109, 0, 1, v105);
    int v111 = *(_DWORD *)(v114 + 52);
    size_t v112 = *(void *)(v114 + 32);
  }
  if (v111) {
    size_t v116 = v112;
  }
  else {
    size_t v116 = v112 + 1;
  }
  *(void *)(((unint64_t)v109 + v116 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v110
                                                                                       + v116
                                                                                       + 7) & 0xFFFFFFFFFFFFFFF8);
  return v152;
}

unsigned __int8 *sub_22EC4B1AC(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = sub_22EE7CFC0();
    uint64_t v7 = *(void *)(v6 - 8);
    if (*(void *)(v7 + 64) <= 8uLL) {
      uint64_t v8 = 8;
    }
    else {
      uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v9 = a1[v8];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v11 = v8;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a1;
          goto LABEL_14;
        case 2:
          int v12 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v12 = *(_DWORD *)a1;
LABEL_14:
          if (v8 < 4) {
            unsigned int v9 = (v12 | (v10 << (8 * v8))) + 2;
          }
          else {
            unsigned int v9 = v12 + 2;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
    }
    else {
      swift_release();
    }
    unsigned int v13 = a2[v8];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v15 = v8;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_29;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_29;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_29;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_29:
          if (v8 < 4) {
            unsigned int v13 = (v16 | (v14 << (8 * v8))) + 2;
          }
          else {
            unsigned int v13 = v16 + 2;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v6);
      char v17 = 1;
    }
    else
    {
      char v17 = 0;
      *(void *)a1 = *(void *)a2;
    }
    a1[v8] = v17;
  }
  uint64_t v239 = a3;
  unint64_t v18 = *(void *)(*(void *)(sub_22EE7CFC0() - 8) + 64);
  if (v18 <= 8) {
    uint64_t v19 = 8;
  }
  else {
    uint64_t v19 = v18;
  }
  uint64_t v241 = sub_22EE7F6E0();
  uint64_t v20 = *(void *)(v241 - 8);
  uint64_t v237 = v20;
  uint64_t v21 = *(unsigned __int8 *)(v20 + 80);
  uint64_t v22 = sub_22EE7F5D0();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v227 = v22;
  uint64_t v228 = v23;
  uint64_t v24 = *(unsigned __int8 *)(v23 + 80);
  uint64_t v25 = v21 | v24 | 7;
  uint64_t v26 = sub_22EE7C220();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(unsigned __int8 *)(v27 + 80);
  uint64_t v29 = v19 + (v25 | v28) + 1;
  uint64_t v30 = (unsigned __int8 *)((unint64_t)&a1[v29] & ~(v25 | v28));
  uint64_t v246 = (unsigned __int8 *)((unint64_t)&a2[v29] & ~(v25 | v28));
  uint64_t v234 = ~v21;
  uint64_t v230 = v21 + 16;
  uint64_t v31 = *(void *)(v20 + 64);
  uint64_t v247 = ~v25;
  uint64_t v231 = v31 + v25;
  uint64_t v32 = (v31 + v25 + ((v21 + 16) & ~v21)) & ~v25;
  uint64_t v225 = ~v24;
  uint64_t v224 = v24 + 16;
  uint64_t v226 = *(void *)(v23 + 64) + v21;
  uint64_t v33 = (v226 + ((v24 + 16) & ~v24)) & ~v21;
  uint64_t v34 = v31 + 7;
  unint64_t v35 = (v31 + 7 + v33) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v36 = v35 + 8;
  unint64_t v37 = v35 + 9;
  unint64_t v223 = v36;
  if (v37 <= v36) {
    unint64_t v37 = v36;
  }
  if (v37 <= 2) {
    unint64_t v37 = 2;
  }
  unint64_t v236 = v37;
  unint64_t v38 = v37 + v32;
  if (v38 + 1 > (v34 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v39 = v38 + 1;
  }
  else {
    unint64_t v39 = (v34 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v39 <= 0x10) {
    uint64_t v40 = 16;
  }
  else {
    uint64_t v40 = v39;
  }
  uint64_t v41 = *(unsigned int *)(v27 + 84);
  size_t v42 = v40 + 1;
  uint64_t v43 = v40 + 1 + v25;
  uint64_t v240 = v43 & ~v25;
  uint64_t v44 = ~v28;
  size_t v243 = *(void *)(*(void *)(v26 - 8) + 64);
  uint64_t v244 = v26;
  uint64_t v45 = (_OWORD *)((unint64_t)&v30[v43] & ~v25);
  uint64_t v46 = v40 + 8;
  uint64_t v242 = v45;
  unsigned int v47 = (void *)(((unint64_t)v45 + v40 + 8) & 0xFFFFFFFFFFFFFFF8);
  int v238 = v41;
  uint64_t v229 = *(void *)(v26 - 8);
  uint64_t v245 = *(unsigned __int8 *)(v27 + 80);
  unint64_t v235 = v47;
  if (v41 < 0x80000001)
  {
    if (*v47 < 0xFFFFFFFFuLL) {
      goto LABEL_51;
    }
LABEL_55:
    unsigned int v48 = v246;
    size_t v52 = (unsigned __int8 *)((unint64_t)&v246[v43] & v247);
    size_t v53 = (void *)((unint64_t)&v52[v46] & 0xFFFFFFFFFFFFFFF8);
    uint64_t v221 = v53;
    if (v41 >= 0x80000001)
    {
      if (__swift_getEnumTagSinglePayload(((unint64_t)v53 + v245 + 16) & v44, v41, v244) >= 2) {
        goto LABEL_57;
      }
    }
    else if (*v53 < 0xFFFFFFFFuLL)
    {
LABEL_57:
      unsigned int v54 = v30[v40];
      unsigned int v55 = v54 - 3;
      if (v54 < 3)
      {
        uint64_t v57 = v242;
      }
      else
      {
        if (v40 <= 3) {
          uint64_t v56 = v40;
        }
        else {
          uint64_t v56 = 4;
        }
        uint64_t v57 = v242;
        switch(v56)
        {
          case 1:
            int v58 = *v30;
            goto LABEL_83;
          case 2:
            int v58 = *(unsigned __int16 *)v30;
            goto LABEL_83;
          case 3:
            int v58 = *(unsigned __int16 *)v30 | (v30[2] << 16);
            goto LABEL_83;
          case 4:
            int v58 = *(_DWORD *)v30;
LABEL_83:
            if (v40 < 4) {
              unsigned int v54 = (v58 | (v55 << (8 * v40))) + 3;
            }
            else {
              unsigned int v54 = v58 + 3;
            }
            break;
          default:
            break;
        }
      }
      uint64_t v74 = v40 + 8;
      if (v54 == 2)
      {
        (*(void (**)(unsigned __int8 *, uint64_t))(v237 + 8))(v30, v241);
      }
      else if (v54 == 1)
      {
        swift_bridgeObjectRelease();
        unint64_t v75 = *(void (**)(unint64_t, uint64_t))(v237 + 8);
        v75((unint64_t)&v30[v230] & v234, v241);
        unint64_t v76 = (unsigned __int8 *)((v231 + ((unint64_t)&v30[v230] & v234)) & v247);
        unsigned int v77 = v76[v236];
        unsigned int v78 = v77 - 4;
        if (v77 >= 4)
        {
          if (v236 <= 3) {
            uint64_t v79 = v236;
          }
          else {
            uint64_t v79 = 4;
          }
          switch(v79)
          {
            case 1:
              int v80 = *v76;
              goto LABEL_132;
            case 2:
              int v80 = *(unsigned __int16 *)v76;
              goto LABEL_132;
            case 3:
              int v80 = *(unsigned __int16 *)((v231 + ((unint64_t)&v30[v230] & v234)) & v247) | (*(unsigned __int8 *)(((v231 + ((unint64_t)&v30[v230] & v234)) & v247) + 2) << 16);
              goto LABEL_132;
            case 4:
              int v80 = *(_DWORD *)v76;
LABEL_132:
              if (v236 < 4) {
                unsigned int v77 = (v80 | (v78 << (8 * v236))) + 4;
              }
              else {
                unsigned int v77 = v80 + 4;
              }
              break;
            default:
              break;
          }
        }
        if (v77 >= 2)
        {
          swift_bridgeObjectRelease();
          unint64_t v95 = (unint64_t)&v76[v224] & v225;
          (*(void (**)(unint64_t, uint64_t))(v228 + 8))(v95, v227);
          v75((v226 + v95) & v234, v241);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      unsigned int v96 = *((unsigned __int8 *)v57 + v40);
      size_t v73 = v243;
      uint64_t v71 = v74;
      if (v96 <= 2)
      {
        if (v96 == 2)
        {
          (*(void (**)(_OWORD *, uint64_t))(v237 + 8))(v57, v241);
        }
        else if (v96 == 1)
        {
          swift_bridgeObjectRelease();
          uint64_t v97 = *(void (**)(unint64_t, uint64_t))(v237 + 8);
          v97(((unint64_t)v57 + v230) & v234, v241);
          uint64_t v98 = (unsigned __int8 *)((v231 + (((unint64_t)v57 + v230) & v234)) & v247);
          unsigned int v99 = v98[v236];
          unsigned int v100 = v99 - 4;
          if (v99 >= 4)
          {
            if (v236 <= 3) {
              uint64_t v101 = v236;
            }
            else {
              uint64_t v101 = 4;
            }
            switch(v101)
            {
              case 1:
                int v102 = *v98;
                goto LABEL_265;
              case 2:
                int v102 = *(unsigned __int16 *)v98;
                goto LABEL_265;
              case 3:
                int v102 = *(unsigned __int16 *)((v231 + (((unint64_t)v57 + v230) & v234)) & v247) | (*(unsigned __int8 *)(((v231 + (((unint64_t)v57 + v230) & v234)) & v247) + 2) << 16);
                goto LABEL_265;
              case 4:
                int v102 = *(_DWORD *)v98;
LABEL_265:
                if (v236 < 4) {
                  unsigned int v99 = (v102 | (v100 << (8 * v236))) + 4;
                }
                else {
                  unsigned int v99 = v102 + 4;
                }
                break;
              default:
                break;
            }
          }
          if (v99 >= 2)
          {
            swift_bridgeObjectRelease();
            unint64_t v168 = (unint64_t)&v98[v224] & v225;
            (*(void (**)(unint64_t, uint64_t))(v228 + 8))(v168, v227);
            v97((v226 + v168) & v234, v241);
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      swift_release();
      uint64_t v51 = v245 + 16;
      uint64_t v169 = ((unint64_t)v235 + v245 + 16) & v44;
      if (!__swift_getEnumTagSinglePayload(v169, 1, v244)) {
        (*(void (**)(uint64_t, uint64_t))(v229 + 8))(v169, v244);
      }
      BOOL v68 = v238 == 0;
      BOOL v69 = v238 == 0;
      uint64_t v70 = v240;
      unint64_t v72 = (v51 + ((v71 + v240) & 0xFFFFFFFFFFFFFFF8)) & v44;
      goto LABEL_273;
    }
    uint64_t v233 = v40 + 8;
    if (v30 != v246)
    {
      unsigned int v64 = v30[v40];
      unsigned int v65 = v64 - 3;
      if (v64 >= 3)
      {
        if (v40 <= 3) {
          uint64_t v66 = v40;
        }
        else {
          uint64_t v66 = 4;
        }
        switch(v66)
        {
          case 1:
            int v67 = *v30;
            goto LABEL_115;
          case 2:
            int v67 = *(unsigned __int16 *)v30;
            goto LABEL_115;
          case 3:
            int v67 = *(unsigned __int16 *)v30 | (v30[2] << 16);
            goto LABEL_115;
          case 4:
            int v67 = *(_DWORD *)v30;
LABEL_115:
            if (v40 < 4) {
              unsigned int v64 = (v67 | (v65 << (8 * v40))) + 3;
            }
            else {
              unsigned int v64 = v67 + 3;
            }
            break;
          default:
            break;
        }
      }
      uint64_t v89 = v44;
      if (v64 == 2)
      {
        (*(void (**)(unsigned __int8 *, uint64_t))(v237 + 8))(v30, v241);
      }
      else if (v64 == 1)
      {
        swift_bridgeObjectRelease();
        int v216 = *(void (**)(unint64_t, uint64_t))(v237 + 8);
        v216((unint64_t)&v30[v230] & v234, v241);
        int v90 = (unsigned __int8 *)((v231 + ((unint64_t)&v30[v230] & v234)) & v247);
        unsigned int v91 = v90[v236];
        unsigned int v92 = v91 - 4;
        if (v91 >= 4)
        {
          if (v236 <= 3) {
            uint64_t v93 = v236;
          }
          else {
            uint64_t v93 = 4;
          }
          switch(v93)
          {
            case 1:
              int v94 = *v90;
              goto LABEL_185;
            case 2:
              int v94 = *(unsigned __int16 *)v90;
              goto LABEL_185;
            case 3:
              int v94 = *(unsigned __int16 *)((v231 + ((unint64_t)&v30[v230] & v234)) & v247) | (*(unsigned __int8 *)(((v231 + ((unint64_t)&v30[v230] & v234)) & v247) + 2) << 16);
              goto LABEL_185;
            case 4:
              int v94 = *(_DWORD *)v90;
LABEL_185:
              if (v236 < 4) {
                unsigned int v91 = (v94 | (v92 << (8 * v236))) + 4;
              }
              else {
                unsigned int v91 = v94 + 4;
              }
              break;
            default:
              break;
          }
        }
        if (v91 >= 2)
        {
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v228 + 8))((unint64_t)&v90[v224] & v225, v227);
          v216((v226 + ((unint64_t)&v90[v224] & v225)) & v234, v241);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      unsigned int v48 = v246;
      unsigned int v125 = v246[v40];
      unsigned int v126 = v125 - 3;
      if (v125 < 3)
      {
        uint64_t v44 = v89;
      }
      else
      {
        if (v40 <= 3) {
          uint64_t v127 = v40;
        }
        else {
          uint64_t v127 = 4;
        }
        uint64_t v44 = v89;
        switch(v127)
        {
          case 1:
            int v128 = *v246;
            goto LABEL_200;
          case 2:
            int v128 = *(unsigned __int16 *)v246;
            goto LABEL_200;
          case 3:
            int v128 = *(unsigned __int16 *)v246 | (v246[2] << 16);
            goto LABEL_200;
          case 4:
            int v128 = *(_DWORD *)v246;
LABEL_200:
            if (v40 < 4) {
              unsigned int v125 = (v128 | (v126 << (8 * v40))) + 3;
            }
            else {
              unsigned int v125 = v128 + 3;
            }
            break;
          default:
            break;
        }
      }
      if (v125 == 2)
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v237 + 32))(v30, v246, v241);
        *(_OWORD *)((unint64_t)&v30[v34] & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v246[v34] & 0xFFFFFFFFFFFFFFF8);
        char v135 = 2;
      }
      else if (v125 == 1)
      {
        uint64_t v218 = v44;
        *(_OWORD *)uint64_t v30 = *(_OWORD *)v246;
        uint64_t v214 = *(void (**)(unint64_t, unint64_t, uint64_t))(v237 + 32);
        v214((unint64_t)&v30[v230] & v234, (unint64_t)&v246[v230] & v234, v241);
        uint64_t v129 = (unsigned char *)((v231 + ((unint64_t)&v30[v230] & v234)) & v247);
        uint64_t v130 = (unsigned __int8 *)((v231 + ((unint64_t)&v246[v230] & v234)) & v247);
        unsigned int v131 = v130[v236];
        unsigned int v132 = v131 - 4;
        if (v131 >= 4)
        {
          if (v236 <= 3) {
            uint64_t v133 = v236;
          }
          else {
            uint64_t v133 = 4;
          }
          switch(v133)
          {
            case 1:
              int v134 = *v130;
              goto LABEL_216;
            case 2:
              int v134 = *(unsigned __int16 *)v130;
              goto LABEL_216;
            case 3:
              int v134 = *(unsigned __int16 *)((v231 + ((unint64_t)&v246[v230] & v234)) & v247) | (*(unsigned __int8 *)(((v231 + ((unint64_t)&v246[v230] & v234)) & v247) + 2) << 16);
              goto LABEL_216;
            case 4:
              int v134 = *(_DWORD *)v130;
LABEL_216:
              if (v236 < 4) {
                unsigned int v131 = (v134 | (v132 << (8 * v236))) + 4;
              }
              else {
                unsigned int v131 = v134 + 4;
              }
              break;
            default:
              break;
          }
        }
        switch(v131)
        {
          case 1u:
            *uint64_t v129 = *v130;
            char v136 = 1;
            break;
          case 2u:
            *(_OWORD *)uint64_t v129 = *(_OWORD *)v130;
            unint64_t v137 = (unint64_t)&v129[v224] & v225;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v228 + 32))(v137, (unint64_t)&v130[v224] & v225, v227);
            unint64_t v138 = (v226 + v137) & v234;
            unint64_t v139 = (v226 + ((unint64_t)&v130[v224] & v225)) & v234;
            v214(v138, v139, v241);
            uint64_t v129 = (unsigned char *)((v231 + ((unint64_t)&v30[v230] & v234)) & v247);
            *(void *)((v34 + v138) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v34 + v139) & 0xFFFFFFFFFFFFFFF8);
            v129[v223] = v130[v223];
            char v136 = 2;
            break;
          case 3u:
            *(_OWORD *)uint64_t v129 = *(_OWORD *)v130;
            unint64_t v140 = (unint64_t)&v129[v224] & v225;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v228 + 32))(v140, (unint64_t)&v130[v224] & v225, v227);
            unint64_t v141 = (v226 + v140) & v234;
            unint64_t v142 = (v226 + ((unint64_t)&v130[v224] & v225)) & v234;
            v214(v141, v142, v241);
            uint64_t v129 = (unsigned char *)((v231 + ((unint64_t)&v30[v230] & v234)) & v247);
            *(void *)((v34 + v141) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v34 + v142) & 0xFFFFFFFFFFFFFFF8);
            char v136 = 3;
            break;
          default:
            char v136 = 0;
            *(_WORD *)uint64_t v129 = *(_WORD *)v130;
            break;
        }
        uint64_t v44 = v218;
        LODWORD(v41) = v238;
        v129[v236] = v136;
        char v135 = 1;
        unsigned int v48 = v246;
      }
      else
      {
        char v135 = 0;
        *(_OWORD *)uint64_t v30 = *(_OWORD *)v246;
      }
      v30[v40] = v135;
    }
    unsigned int v143 = *((unsigned __int8 *)v242 + v40);
    unsigned int v144 = v52[v40];
    if (v143 > 2)
    {
      if (v144 <= 2)
      {
        if (v144 != 2)
        {
          if (v144 == 1)
          {
            uint64_t v219 = v44;
            *uint64_t v242 = *(_OWORD *)v52;
            unint64_t v151 = (unint64_t)&v52[v230] & v234;
            unsigned int v152 = *(void (**)(unint64_t, unint64_t, uint64_t))(v237 + 32);
            v152(((unint64_t)v242 + v230) & v234, v151, v241);
            unsigned int v153 = (unsigned char *)((v231 + (((unint64_t)v242 + v230) & v234)) & v247);
            uint64_t v154 = (unsigned __int8 *)((v231 + v151) & v247);
            unsigned int v155 = v154[v236];
            unsigned int v156 = v155 - 4;
            if (v155 >= 4)
            {
              if (v236 <= 3) {
                uint64_t v157 = v236;
              }
              else {
                uint64_t v157 = 4;
              }
              switch(v157)
              {
                case 1:
                  int v158 = *v154;
                  goto LABEL_292;
                case 2:
                  int v158 = *(unsigned __int16 *)v154;
                  goto LABEL_292;
                case 3:
                  int v158 = *(unsigned __int16 *)((v231 + v151) & v247) | (*(unsigned __int8 *)(((v231 + v151) & v247) + 2) << 16);
                  goto LABEL_292;
                case 4:
                  int v158 = *(_DWORD *)v154;
LABEL_292:
                  if (v236 < 4) {
                    unsigned int v155 = (v158 | (v156 << (8 * v236))) + 4;
                  }
                  else {
                    unsigned int v155 = v158 + 4;
                  }
                  break;
                default:
                  break;
              }
            }
            switch(v155)
            {
              case 1u:
LABEL_348:
                *unsigned int v153 = *v154;
                char v186 = 1;
                break;
              case 2u:
LABEL_349:
                *(_OWORD *)unsigned int v153 = *(_OWORD *)v154;
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v228 + 32))((unint64_t)&v153[v224] & v225, (unint64_t)&v154[v224] & v225, v227);
                unint64_t v187 = (v226 + ((unint64_t)&v153[v224] & v225)) & v234;
                unint64_t v188 = (v226 + ((unint64_t)&v154[v224] & v225)) & v234;
                v152(v187, v188, v241);
                *(void *)((v34 + v187) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v34 + v188) & 0xFFFFFFFFFFFFFFF8);
                v153[v223] = v154[v223];
                char v186 = 2;
                break;
              case 3u:
LABEL_350:
                *(_OWORD *)unsigned int v153 = *(_OWORD *)v154;
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v228 + 32))((unint64_t)&v153[v224] & v225, (unint64_t)&v154[v224] & v225, v227);
                unint64_t v189 = (v226 + ((unint64_t)&v153[v224] & v225)) & v234;
                unint64_t v190 = (v226 + ((unint64_t)&v154[v224] & v225)) & v234;
                v152(v189, v190, v241);
                *(void *)((v34 + v189) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v34 + v190) & 0xFFFFFFFFFFFFFFF8);
                char v186 = 3;
                break;
              default:
LABEL_347:
                char v186 = 0;
                *(_WORD *)unsigned int v153 = *(_WORD *)v154;
                break;
            }
            unsigned int v48 = v246;
            uint64_t v44 = v219;
            v153[v236] = v186;
            *((unsigned char *)v242 + v40) = 1;
            LODWORD(v41) = v238;
          }
          else
          {
            *uint64_t v242 = *(_OWORD *)v52;
            *((unsigned char *)v242 + v40) = 0;
          }
LABEL_352:
          int v191 = v41;
          *unint64_t v235 = *v221;
          swift_release();
          uint64_t v51 = v245 + 16;
          unint64_t v192 = (void *)(((unint64_t)v235 + v245 + 16) & v44);
          uint64_t v193 = v44;
          unsigned int v194 = (const void *)(((unint64_t)v221 + v245 + 16) & v44);
          int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v192, 1, v244);
          int v196 = __swift_getEnumTagSinglePayload((uint64_t)v194, 1, v244);
          if (EnumTagSinglePayload)
          {
            if (!v196)
            {
              (*(void (**)(void *, const void *, uint64_t))(v229 + 32))(v192, v194, v244);
              __swift_storeEnumTagSinglePayload((uint64_t)v192, 0, 1, v244);
LABEL_362:
              size_t v73 = v243;
LABEL_363:
              BOOL v69 = v191 == 0;
              if (v191) {
                size_t v198 = v73;
              }
              else {
                size_t v198 = v73 + 1;
              }
              *(void *)(((unint64_t)v192 + v198 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v194 + v198 + 7) & 0xFFFFFFFFFFFFFFF8);
              uint64_t v44 = v193;
              uint64_t v70 = v240;
              uint64_t v71 = v233;
              goto LABEL_367;
            }
          }
          else
          {
            if (!v196)
            {
              (*(void (**)(void *, const void *, uint64_t))(v229 + 40))(v192, v194, v244);
              goto LABEL_362;
            }
            (*(void (**)(void *, uint64_t))(v229 + 8))(v192, v244);
          }
          size_t v73 = v243;
          if (v191) {
            size_t v197 = v243;
          }
          else {
            size_t v197 = v243 + 1;
          }
          memcpy(v192, v194, v197);
          goto LABEL_363;
        }
LABEL_255:
        (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v237 + 32))(v242, v52, v241);
        *(_OWORD *)(((unint64_t)v242 + v34) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v52[v34] & 0xFFFFFFFFFFFFFFF8);
        *((unsigned char *)v242 + v40) = 2;
        goto LABEL_352;
      }
      size_t v166 = v242;
    }
    else
    {
      if (v144 <= 2)
      {
        if (v242 == (_OWORD *)v52) {
          goto LABEL_352;
        }
        uint64_t v41 = v44;
        if (v143 == 2)
        {
          (*(void (**)(_OWORD *, uint64_t))(v237 + 8))(v242, v241);
        }
        else if (v143 == 1)
        {
          swift_bridgeObjectRelease();
          uint64_t v145 = *(void (**)(unint64_t, uint64_t))(v237 + 8);
          v145(((unint64_t)v242 + v230) & v234, v241);
          uint64_t v146 = (unsigned __int8 *)((v231 + (((unint64_t)v242 + v230) & v234)) & v247);
          unsigned int v147 = v146[v236];
          unsigned int v148 = v147 - 4;
          if (v147 >= 4)
          {
            if (v236 <= 3) {
              uint64_t v149 = v236;
            }
            else {
              uint64_t v149 = 4;
            }
            switch(v149)
            {
              case 1:
                int v150 = *v146;
                goto LABEL_312;
              case 2:
                int v150 = *(unsigned __int16 *)v146;
                goto LABEL_312;
              case 3:
                int v150 = *(unsigned __int16 *)((v231 + (((unint64_t)v242 + v230) & v234)) & v247) | (*(unsigned __int8 *)(((v231 + (((unint64_t)v242 + v230) & v234)) & v247) + 2) << 16);
                goto LABEL_312;
              case 4:
                int v150 = *(_DWORD *)v146;
LABEL_312:
                if (v236 < 4) {
                  unsigned int v147 = (v150 | (v148 << (8 * v236))) + 4;
                }
                else {
                  unsigned int v147 = v150 + 4;
                }
                break;
              default:
                break;
            }
          }
          if (v147 >= 2)
          {
            swift_bridgeObjectRelease();
            unint64_t v176 = (unint64_t)&v146[v224] & v225;
            (*(void (**)(unint64_t, uint64_t))(v228 + 8))(v176, v227);
            v145((v226 + v176) & v234, v241);
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        unsigned int v177 = v52[v40];
        unsigned int v178 = v177 - 3;
        if (v177 < 3)
        {
          unsigned int v48 = v246;
          uint64_t v44 = v41;
          LODWORD(v41) = v238;
        }
        else
        {
          if (v40 <= 3) {
            uint64_t v179 = v40;
          }
          else {
            uint64_t v179 = 4;
          }
          unsigned int v48 = v246;
          uint64_t v44 = v41;
          LODWORD(v41) = v238;
          switch(v179)
          {
            case 1:
              int v180 = *v52;
              goto LABEL_327;
            case 2:
              int v180 = *(unsigned __int16 *)v52;
              goto LABEL_327;
            case 3:
              int v180 = *(unsigned __int16 *)v52 | (v52[2] << 16);
              goto LABEL_327;
            case 4:
              int v180 = *(_DWORD *)v52;
LABEL_327:
              if (v40 < 4) {
                unsigned int v177 = (v180 | (v178 << (8 * v40))) + 3;
              }
              else {
                unsigned int v177 = v180 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v177 != 2)
        {
          if (v177 == 1)
          {
            uint64_t v219 = v44;
            *uint64_t v242 = *(_OWORD *)v52;
            unint64_t v181 = (unint64_t)&v52[v230] & v234;
            unsigned int v152 = *(void (**)(unint64_t, unint64_t, uint64_t))(v237 + 32);
            v152(((unint64_t)v242 + v230) & v234, v181, v241);
            unsigned int v153 = (unsigned char *)((v231 + (((unint64_t)v242 + v230) & v234)) & v247);
            uint64_t v154 = (unsigned __int8 *)((v231 + v181) & v247);
            unsigned int v182 = v154[v236];
            unsigned int v183 = v182 - 4;
            if (v182 >= 4)
            {
              if (v236 <= 3) {
                uint64_t v184 = v236;
              }
              else {
                uint64_t v184 = 4;
              }
              switch(v184)
              {
                case 1:
                  int v185 = *v154;
                  goto LABEL_343;
                case 2:
                  int v185 = *(unsigned __int16 *)v154;
                  goto LABEL_343;
                case 3:
                  int v185 = *(unsigned __int16 *)((v231 + v181) & v247) | (*(unsigned __int8 *)(((v231 + v181) & v247) + 2) << 16);
                  goto LABEL_343;
                case 4:
                  int v185 = *(_DWORD *)v154;
LABEL_343:
                  if (v236 < 4) {
                    unsigned int v182 = (v185 | (v183 << (8 * v236))) + 4;
                  }
                  else {
                    unsigned int v182 = v185 + 4;
                  }
                  break;
                default:
                  break;
              }
            }
            switch(v182)
            {
              case 1u:
                goto LABEL_348;
              case 2u:
                goto LABEL_349;
              case 3u:
                goto LABEL_350;
              default:
                goto LABEL_347;
            }
          }
          *uint64_t v242 = *(_OWORD *)v52;
          *((unsigned char *)v242 + v40) = 0;
          goto LABEL_352;
        }
        goto LABEL_255;
      }
      if (v143 == 2)
      {
        uint64_t v167 = v242;
        (*(void (**)(_OWORD *, uint64_t))(v237 + 8))(v242, v241);
      }
      else if (v143 == 1)
      {
        uint64_t v220 = v44;
        swift_bridgeObjectRelease();
        unint64_t v159 = ((unint64_t)v242 + v230) & v234;
        int v160 = *(void (**)(unint64_t, uint64_t))(v237 + 8);
        v160(v159, v241);
        unsigned int v161 = (unsigned __int8 *)((v231 + v159) & v247);
        unsigned int v162 = v161[v236];
        unsigned int v163 = v162 - 4;
        if (v162 < 4)
        {
          uint64_t v44 = v220;
        }
        else
        {
          if (v236 <= 3) {
            uint64_t v164 = v236;
          }
          else {
            uint64_t v164 = 4;
          }
          uint64_t v44 = v220;
          switch(v164)
          {
            case 1:
              int v165 = *v161;
              goto LABEL_299;
            case 2:
              int v165 = *(unsigned __int16 *)v161;
              goto LABEL_299;
            case 3:
              int v165 = *(unsigned __int16 *)v161 | (v161[2] << 16);
              goto LABEL_299;
            case 4:
              int v165 = *(_DWORD *)v161;
LABEL_299:
              if (v236 < 4) {
                unsigned int v162 = (v165 | (v163 << (8 * v236))) + 4;
              }
              else {
                unsigned int v162 = v165 + 4;
              }
              break;
            default:
              break;
          }
        }
        uint64_t v167 = v242;
        if (v162 >= 2)
        {
          if (v162 == 3)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v228 + 8))((unint64_t)&v161[v224] & v225, v227);
            uint64_t v44 = v220;
            v160((v226 + ((unint64_t)&v161[v224] & v225)) & v234, v241);
          }
          else
          {
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v228 + 8))((unint64_t)&v161[v224] & v225, v227);
            v160((v226 + ((unint64_t)&v161[v224] & v225)) & v234, v241);
            uint64_t v44 = v220;
          }
          uint64_t v167 = v242;
        }
      }
      else
      {
        uint64_t v167 = v242;
        swift_bridgeObjectRelease();
      }
      size_t v166 = v167;
    }
    memcpy(v166, v52, v42);
    goto LABEL_352;
  }
  if (__swift_getEnumTagSinglePayload(((unint64_t)v47 + v28 + 16) & v44, v41, v26) < 2) {
    goto LABEL_55;
  }
LABEL_51:
  unsigned int v48 = v246;
  uint64_t v49 = (_OWORD *)((unint64_t)&v246[v43] & v247);
  uint64_t v232 = v40 + 8;
  uint64_t v50 = (void *)(((unint64_t)v49 + v46) & 0xFFFFFFFFFFFFFFF8);
  if (v41 >= 0x80000001)
  {
    uint64_t v59 = v41;
    uint64_t v51 = v245 + 16;
    if (__swift_getEnumTagSinglePayload(((unint64_t)v50 + v245 + 16) & v44, v59, v244) >= 2) {
      goto LABEL_78;
    }
  }
  else if (*v50 <= 0xFFFFFFFEuLL)
  {
    uint64_t v51 = v245 + 16;
LABEL_78:
    BOOL v68 = v238 == 0;
    BOOL v69 = v238 == 0;
    uint64_t v70 = v240;
    uint64_t v71 = v40 + 8;
    unint64_t v72 = (v51 + ((v232 + v240) & 0xFFFFFFFFFFFFFFF8)) & v44;
    size_t v73 = v243;
LABEL_273:
    if (v68) {
      size_t v170 = v73 + 1;
    }
    else {
      size_t v170 = v73;
    }
    memcpy(v30, v48, ((v170 + v72 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_367:
    uint64_t v118 = v239;
    goto LABEL_368;
  }
  unsigned int v60 = v246[v40];
  unsigned int v61 = v60 - 3;
  if (v60 >= 3)
  {
    if (v40 <= 3) {
      uint64_t v62 = v40;
    }
    else {
      uint64_t v62 = 4;
    }
    switch(v62)
    {
      case 1:
        int v63 = *v246;
        goto LABEL_99;
      case 2:
        int v63 = *(unsigned __int16 *)v246;
        goto LABEL_99;
      case 3:
        int v63 = *(unsigned __int16 *)v246 | (v246[2] << 16);
        goto LABEL_99;
      case 4:
        int v63 = *(_DWORD *)v246;
LABEL_99:
        if (v40 < 4) {
          unsigned int v60 = (v63 | (v61 << (8 * v40))) + 3;
        }
        else {
          unsigned int v60 = v63 + 3;
        }
        break;
      default:
        break;
    }
  }
  if (v60 == 2)
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v237 + 32))(v30, v246, v241);
    *(_OWORD *)((unint64_t)&v30[v34] & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v246[v34] & 0xFFFFFFFFFFFFFFF8);
    char v88 = 2;
  }
  else if (v60 == 1)
  {
    uint64_t v215 = v44;
    *(_OWORD *)uint64_t v30 = *(_OWORD *)v246;
    unint64_t v81 = (unint64_t)&v246[v230] & v234;
    uint64_t v222 = *(void (**)(void))(v237 + 32);
    ((void (*)(unint64_t, unint64_t, uint64_t))v222)((unint64_t)&v30[v230] & v234, v81, v241);
    unsigned int v82 = (unsigned char *)((v231 + ((unint64_t)&v30[v230] & v234)) & v247);
    uint64_t v83 = (unsigned __int8 *)((v231 + v81) & v247);
    unsigned int v84 = v83[v236];
    unsigned int v85 = v84 - 4;
    if (v84 >= 4)
    {
      if (v236 <= 3) {
        uint64_t v86 = v236;
      }
      else {
        uint64_t v86 = 4;
      }
      switch(v86)
      {
        case 1:
          int v87 = *v83;
          goto LABEL_151;
        case 2:
          int v87 = *(unsigned __int16 *)v83;
          goto LABEL_151;
        case 3:
          int v87 = *(unsigned __int16 *)((v231 + v81) & v247) | (*(unsigned __int8 *)(((v231 + v81) & v247) + 2) << 16);
          goto LABEL_151;
        case 4:
          int v87 = *(_DWORD *)v83;
LABEL_151:
          if (v236 < 4) {
            unsigned int v84 = (v87 | (v85 << (8 * v236))) + 4;
          }
          else {
            unsigned int v84 = v87 + 4;
          }
          break;
        default:
          break;
      }
    }
    switch(v84)
    {
      case 1u:
        *unsigned int v82 = *v83;
        char v103 = 1;
        break;
      case 2u:
        *(_OWORD *)unsigned int v82 = *(_OWORD *)v83;
        unint64_t v213 = (unint64_t)&v82[v224] & v225;
        (*(void (**)(void))(v228 + 32))();
        v222();
        unsigned int v82 = (unsigned char *)((v231 + ((unint64_t)&v30[v230] & v234)) & v247);
        *(void *)((v34 + ((v226 + v213) & v234)) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v34
                                                                                        + ((v226
                                                                                          + ((unint64_t)&v83[v224] & v225)) & v234)) & 0xFFFFFFFFFFFFFFF8);
        v82[v223] = v83[v223];
        char v103 = 2;
        break;
      case 3u:
        *(_OWORD *)unsigned int v82 = *(_OWORD *)v83;
        unint64_t v104 = (unint64_t)&v83[v224] & v225;
        unint64_t v105 = (unint64_t)&v82[v224] & v225;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v228 + 32))(v105, v104, v227);
        unint64_t v106 = (v226 + v105) & v234;
        unint64_t v107 = (v226 + v104) & v234;
        ((void (*)(unint64_t, unint64_t, uint64_t))v222)(v106, v107, v241);
        unsigned int v82 = (unsigned char *)((v231 + ((unint64_t)&v30[v230] & v234)) & v247);
        *(void *)((v34 + v106) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v34 + v107) & 0xFFFFFFFFFFFFFFF8);
        char v103 = 3;
        break;
      default:
        char v103 = 0;
        *(_WORD *)unsigned int v82 = *(_WORD *)v83;
        break;
    }
    unsigned int v48 = v246;
    v82[v236] = v103;
    char v88 = 1;
    uint64_t v44 = v215;
  }
  else
  {
    char v88 = 0;
    *(_OWORD *)uint64_t v30 = *(_OWORD *)v246;
  }
  v30[v40] = v88;
  unsigned int v108 = *((unsigned __int8 *)v49 + v40);
  if (v108 > 2)
  {
    memcpy(v242, v49, v40 + 1);
  }
  else if (v108 == 2)
  {
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v237 + 32))(v242, v49, v241);
    *(_OWORD *)(((unint64_t)v242 + v34) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v49 + v34) & 0xFFFFFFFFFFFFFFF8);
    *((unsigned char *)v242 + v40) = 2;
  }
  else
  {
    if (v108 == 1)
    {
      uint64_t v217 = v44;
      *uint64_t v242 = *v49;
      unint64_t v109 = ((unint64_t)v242 + v230) & v234;
      unint64_t v110 = ((unint64_t)v49 + v230) & v234;
      int v111 = *(void (**)(unint64_t, unint64_t, uint64_t))(v237 + 32);
      v111(v109, v110, v241);
      size_t v112 = (unsigned char *)((v231 + v109) & v247);
      size_t v113 = (unsigned __int8 *)((v231 + v110) & v247);
      unsigned int v114 = v113[v236];
      unsigned int v115 = v114 - 4;
      if (v114 >= 4)
      {
        if (v236 <= 3) {
          uint64_t v116 = v236;
        }
        else {
          uint64_t v116 = 4;
        }
        switch(v116)
        {
          case 1:
            int v117 = *v113;
            goto LABEL_280;
          case 2:
            int v117 = *(unsigned __int16 *)v113;
            goto LABEL_280;
          case 3:
            int v117 = *(unsigned __int16 *)((v231 + v110) & v247) | (*(unsigned __int8 *)(((v231 + v110) & v247) + 2) << 16);
            goto LABEL_280;
          case 4:
            int v117 = *(_DWORD *)v113;
LABEL_280:
            if (v236 < 4) {
              unsigned int v114 = (v117 | (v115 << (8 * v236))) + 4;
            }
            else {
              unsigned int v114 = v117 + 4;
            }
            break;
          default:
            break;
        }
      }
      switch(v114)
      {
        case 1u:
          *size_t v112 = *v113;
          char v171 = 1;
          break;
        case 2u:
          *(_OWORD *)size_t v112 = *(_OWORD *)v113;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v228 + 32))((unint64_t)&v112[v224] & v225, (unint64_t)&v113[v224] & v225, v227);
          unint64_t v172 = (v226 + ((unint64_t)&v112[v224] & v225)) & v234;
          unint64_t v173 = (v226 + ((unint64_t)&v113[v224] & v225)) & v234;
          v111(v172, v173, v241);
          *(void *)((v34 + v172) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v34 + v173) & 0xFFFFFFFFFFFFFFF8);
          v112[v223] = v113[v223];
          char v171 = 2;
          break;
        case 3u:
          *(_OWORD *)size_t v112 = *(_OWORD *)v113;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v228 + 32))((unint64_t)&v112[v224] & v225, (unint64_t)&v113[v224] & v225, v227);
          unint64_t v174 = (v226 + ((unint64_t)&v112[v224] & v225)) & v234;
          unint64_t v175 = (v226 + ((unint64_t)&v113[v224] & v225)) & v234;
          v111(v174, v175, v241);
          *(void *)((v34 + v174) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v34 + v175) & 0xFFFFFFFFFFFFFFF8);
          char v171 = 3;
          break;
        default:
          char v171 = 0;
          *(_WORD *)size_t v112 = *(_WORD *)v113;
          break;
      }
      uint64_t v119 = v245;
      unsigned int v48 = v246;
      uint64_t v44 = v217;
      uint64_t v120 = v244;
      v112[v236] = v171;
      *((unsigned char *)v242 + v40) = 1;
      uint64_t v118 = v239;
      goto LABEL_173;
    }
    *uint64_t v242 = *v49;
    *((unsigned char *)v242 + v40) = 0;
  }
  uint64_t v118 = v239;
  uint64_t v120 = v244;
  uint64_t v119 = v245;
LABEL_173:
  *unint64_t v235 = *(_OWORD *)v50;
  uint64_t v51 = v119 + 16;
  unint64_t v121 = (void *)(((unint64_t)v235 + v119 + 16) & v44);
  uint64_t v122 = v44;
  uint64_t v123 = (const void *)(((unint64_t)v50 + v119 + 16) & v44);
  if (__swift_getEnumTagSinglePayload((uint64_t)v123, 1, v120))
  {
    BOOL v69 = v238 == 0;
    if (v238) {
      size_t v124 = v243;
    }
    else {
      size_t v124 = v243 + 1;
    }
    memcpy(v121, v123, v124);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v229 + 32))(v121, v123, v120);
    __swift_storeEnumTagSinglePayload((uint64_t)v121, 0, 1, v120);
    BOOL v69 = v238 == 0;
    if (v238) {
      size_t v124 = v243;
    }
    else {
      size_t v124 = v243 + 1;
    }
  }
  *(void *)(((unint64_t)v121 + v124 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v123
                                                                                       + v124
                                                                                       + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v44 = v122;
  size_t v73 = v243;
  uint64_t v70 = v240;
  uint64_t v71 = v232;
LABEL_368:
  unint64_t v199 = (v73 + v69 + ((v51 + ((v71 + v70) & 0xFFFFFFFFFFFFFFF8)) & v44) + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v200 = *(void *)(v118 + 16);
  uint64_t v201 = *(void *)(v200 - 8);
  uint64_t v202 = *(unsigned __int8 *)(v201 + 80);
  uint64_t v203 = v199 + v202 + 8;
  unint64_t v204 = (void *)((unint64_t)&v30[v203] & ~v202);
  uint64_t v205 = (const void *)((unint64_t)&v48[v203] & ~v202);
  int v206 = __swift_getEnumTagSinglePayload((uint64_t)v204, 1, v200);
  int v207 = __swift_getEnumTagSinglePayload((uint64_t)v205, 1, v200);
  if (v206)
  {
    if (!v207)
    {
      (*(void (**)(void *, const void *, uint64_t))(v201 + 32))(v204, v205, v200);
      __swift_storeEnumTagSinglePayload((uint64_t)v204, 0, 1, v200);
      goto LABEL_379;
    }
    int v208 = *(_DWORD *)(v201 + 84);
    size_t v209 = *(void *)(v201 + 64);
  }
  else
  {
    if (!v207)
    {
      (*(void (**)(void *, const void *, uint64_t))(v201 + 40))(v204, v205, v200);
      goto LABEL_379;
    }
    (*(void (**)(void *, uint64_t))(v201 + 8))(v204, v200);
    int v208 = *(_DWORD *)(v201 + 84);
    size_t v209 = *(void *)(v201 + 64);
  }
  if (v208) {
    size_t v210 = v209;
  }
  else {
    size_t v210 = v209 + 1;
  }
  memcpy(v204, v205, v210);
LABEL_379:
  if (*(_DWORD *)(v201 + 84)) {
    uint64_t v211 = *(void *)(v201 + 64);
  }
  else {
    uint64_t v211 = *(void *)(v201 + 64) + 1;
  }
  *(void *)(((unint64_t)v204 + v211 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v205
                                                                                       + v211
                                                                                       + 7) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_22EC4D468(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v6 = *(void *)(*(void *)(sub_22EE7CFC0() - 8) + 64);
  if (v6 <= 8) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = v6;
  }
  uint64_t v8 = *(void *)(sub_22EE7F6E0() - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 64);
  uint64_t v11 = *(void *)(sub_22EE7F5D0() - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = v9 | v12 | 7;
  unint64_t v14 = (v10 + 7 + ((*(void *)(v11 + 64) + v9 + ((v12 + 16) & ~v12)) & ~v9)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = v14 + 8;
  unint64_t v16 = v14 + 9;
  if (v16 <= v15) {
    unint64_t v16 = v15;
  }
  if (v16 <= 2) {
    unint64_t v16 = 2;
  }
  unint64_t v17 = v16 + ((((v9 + 16) & ~v9) + v10 + v13) & ~v13);
  if (v17 + 1 > ((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v18 = v17 + 1;
  }
  else {
    unint64_t v18 = ((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v18 <= 0x10) {
    uint64_t v19 = 16;
  }
  else {
    uint64_t v19 = v18;
  }
  uint64_t v20 = sub_22EE7C220();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(unsigned int *)(v21 + 84);
  if (v22) {
    unsigned int v23 = v22 - 1;
  }
  else {
    unsigned int v23 = 0;
  }
  if (v23 <= 0x7FFFFFFF) {
    int v24 = 0x7FFFFFFF;
  }
  else {
    int v24 = v23;
  }
  unsigned int v25 = v24 - 1;
  uint64_t v26 = *(void *)(a3 + 16);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(unsigned int *)(v27 + 84);
  if (v28) {
    unsigned int v29 = v28 - 1;
  }
  else {
    unsigned int v29 = 0;
  }
  if (v25 <= v29) {
    unsigned int v30 = v29;
  }
  else {
    unsigned int v30 = v25;
  }
  uint64_t v31 = *(unsigned __int8 *)(v21 + 80);
  if (v22) {
    uint64_t v32 = 7;
  }
  else {
    uint64_t v32 = 8;
  }
  uint64_t v33 = *(unsigned __int8 *)(v27 + 80);
  if (v28) {
    uint64_t v34 = 7;
  }
  else {
    uint64_t v34 = 8;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v35 = v13 | v31;
  uint64_t v36 = v7 + (v13 | v31) + 1;
  unint64_t v37 = ((v32
        + *(void *)(*(void *)(v20 - 8) + 64)
        + ((v31 + 16 + ((v19 + 8 + ((v19 + 1 + v13) & ~v13)) & 0xFFFFFFFFFFFFFFF8)) & ~v31)) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v30 < a2)
  {
    unint64_t v38 = ((v34 + *(void *)(v27 + 64) + ((v37 + v33 + (v36 & ~v35)) & ~v33)) & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v38 & 0xFFFFFFF8) != 0) {
      unsigned int v39 = 2;
    }
    else {
      unsigned int v39 = a2 - v30 + 1;
    }
    if (v39 >= 0x10000) {
      unsigned int v40 = 4;
    }
    else {
      unsigned int v40 = 2;
    }
    if (v39 < 0x100) {
      unsigned int v40 = 1;
    }
    if (v39 >= 2) {
      uint64_t v41 = v40;
    }
    else {
      uint64_t v41 = 0;
    }
    switch(v41)
    {
      case 1:
        int v42 = *((unsigned __int8 *)a1 + v38);
        if (!*((unsigned char *)a1 + v38)) {
          break;
        }
        goto LABEL_49;
      case 2:
        int v42 = *(unsigned __int16 *)((char *)a1 + v38);
        if (*(_WORD *)((char *)a1 + v38)) {
          goto LABEL_49;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x22EC4D878);
      case 4:
        int v42 = *(_DWORD *)((char *)a1 + v38);
        if (!v42) {
          break;
        }
LABEL_49:
        int v43 = v42 - 1;
        if ((v38 & 0xFFFFFFF8) != 0)
        {
          int v43 = 0;
          int v44 = *a1;
        }
        else
        {
          int v44 = 0;
        }
        return v30 + (v44 | v43) + 1;
      default:
        break;
    }
  }
  unint64_t v45 = ((unint64_t)a1 + v36) & ~v35;
  if (v25 >= v29)
  {
    unsigned int v47 = (uint64_t *)((v19 + 8 + ((v45 + v13 + v19 + 1) & ~v13)) & 0xFFFFFFFFFFFFFFF8);
    if ((v23 & 0x80000000) != 0)
    {
      unsigned int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(((unint64_t)v47 + v31 + 16) & ~v31, v22, v20);
      unsigned int v49 = EnumTagSinglePayload - 1;
      if (EnumTagSinglePayload < 2) {
        unsigned int v49 = 0;
      }
    }
    else
    {
      uint64_t v48 = *v47;
      if ((unint64_t)*v47 >= 0xFFFFFFFF) {
        LODWORD(v48) = -1;
      }
      unsigned int v49 = v48 + 1;
    }
    if (v49 >= 2) {
      return v49 - 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    if (v28 < 2) {
      return 0;
    }
    unsigned int v50 = __swift_getEnumTagSinglePayload((v45 + v33 + v37) & ~v33, v28, v26);
    if (v50 >= 2) {
      return v50 - 1;
    }
    else {
      return 0;
    }
  }
}

void sub_22EC4D88C(_DWORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v7 = *(void *)(*(void *)(sub_22EE7CFC0() - 8) + 64);
  if (v7 <= 8) {
    uint64_t v8 = 8;
  }
  else {
    uint64_t v8 = v7;
  }
  uint64_t v9 = *(void *)(sub_22EE7F6E0() - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(v9 + 64);
  uint64_t v12 = *(void *)(sub_22EE7F5D0() - 8);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = v10 | v13 | 7;
  unint64_t v15 = (v11 + 7 + ((*(void *)(v12 + 64) + v10 + ((v13 + 16) & ~v13)) & ~v10)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = v15 + 8;
  unint64_t v17 = v15 + 9;
  if (v17 <= v16) {
    unint64_t v17 = v16;
  }
  if (v17 <= 2) {
    unint64_t v17 = 2;
  }
  unint64_t v18 = v17 + ((((v10 + 16) & ~v10) + v11 + v14) & ~v14);
  if (v18 + 1 > ((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v19 = v18 + 1;
  }
  else {
    unint64_t v19 = ((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v19 <= 0x10) {
    uint64_t v20 = 16;
  }
  else {
    uint64_t v20 = v19;
  }
  int v21 = 0;
  uint64_t v58 = sub_22EE7C220();
  uint64_t v22 = *(void *)(v58 - 8);
  uint64_t v23 = *(unsigned int *)(v22 + 84);
  if (v23) {
    unsigned int v24 = v23 - 1;
  }
  else {
    unsigned int v24 = 0;
  }
  if (v24 <= 0x7FFFFFFF) {
    unsigned int v25 = 0x7FFFFFFF;
  }
  else {
    unsigned int v25 = v24;
  }
  unsigned int v26 = v25 - 1;
  uint64_t v27 = *(void *)(a4 + 16);
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(unsigned int *)(v28 + 84);
  if (v29) {
    unsigned int v30 = v29 - 1;
  }
  else {
    unsigned int v30 = 0;
  }
  if (v26 <= v30) {
    unsigned int v31 = v30;
  }
  else {
    unsigned int v31 = v25 - 1;
  }
  if (v23) {
    size_t v32 = *(void *)(v22 + 64);
  }
  else {
    size_t v32 = *(void *)(v22 + 64) + 1;
  }
  uint64_t v33 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v34 = v8 + (v14 | v33) + 1;
  uint64_t v35 = v20 + 1;
  uint64_t v36 = v20 + 8;
  uint64_t v37 = v20 + 8 + ((v20 + 1 + v14) & ~v14);
  uint64_t v38 = v33 + 16;
  unint64_t v39 = ((v32 + ((v33 + 16 + (v37 & 0xFFFFFFFFFFFFFFF8)) & ~v33) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v40 = *(unsigned __int8 *)(v28 + 80);
  size_t v41 = *(void *)(v28 + 64);
  if (!v29) {
    ++v41;
  }
  size_t v42 = ((v41 + ((v39 + v40 + (v34 & ~(v14 | v33))) & ~v40) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v31 < a3)
  {
    if (((v41
         + ((v39 + v40 + (v34 & ~(v14 | v33))) & ~v40)
         + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      unsigned int v43 = a3 - v31 + 1;
    else {
      unsigned int v43 = 2;
    }
    if (v43 >= 0x10000) {
      int v44 = 4;
    }
    else {
      int v44 = 2;
    }
    if (v43 < 0x100) {
      int v44 = 1;
    }
    if (v43 >= 2) {
      int v21 = v44;
    }
    else {
      int v21 = 0;
    }
  }
  if (a2 > v31)
  {
    if (((v41
         + ((v39 + v40 + (v34 & ~(v14 | v33))) & ~v40)
         + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      int v45 = a2 - v31;
    else {
      int v45 = 1;
    }
    if (((v41
         + ((v39 + v40 + (v34 & ~(v14 | v33))) & ~v40)
         + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      bzero(a1, v42);
      *a1 = ~v31 + a2;
    }
    switch(v21)
    {
      case 1:
        *((unsigned char *)a1 + v42) = v45;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v42) = v45;
        return;
      case 3:
        goto LABEL_100;
      case 4:
        *(_DWORD *)((char *)a1 + v42) = v45;
        return;
      default:
        return;
    }
  }
  uint64_t v46 = ~v33;
  switch(v21)
  {
    case 1:
      *((unsigned char *)a1 + v42) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_58;
    case 2:
      *(_WORD *)((char *)a1 + v42) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_58;
    case 3:
LABEL_100:
      __break(1u);
      JUMPOUT(0x22EC4DE38);
    case 4:
      *(_DWORD *)((char *)a1 + v42) = 0;
      goto LABEL_57;
    default:
LABEL_57:
      if (!a2) {
        return;
      }
LABEL_58:
      unsigned int v47 = (unsigned char *)(((unint64_t)a1 + v34) & ~(v14 | v33));
      if (v26 < v30)
      {
        unsigned int v47 = (unsigned char *)((unint64_t)&v47[v40 + v39] & ~v40);
        if (v30 < a2)
        {
          if (v41 <= 3) {
            int v48 = ~(-1 << (8 * v41));
          }
          else {
            int v48 = -1;
          }
          if (v41)
          {
            int v49 = v48 & (~v30 + a2);
            if (v41 <= 3) {
              int v50 = v41;
            }
            else {
              int v50 = 4;
            }
            bzero(v47, v41);
            switch(v50)
            {
              case 2:
                goto LABEL_94;
              case 3:
                goto LABEL_95;
              case 4:
                goto LABEL_73;
              default:
                goto LABEL_68;
            }
          }
          return;
        }
        if (v29 < 2) {
          return;
        }
        uint64_t v52 = a2 + 1;
        uint64_t v53 = (uint64_t)v47;
        uint64_t v23 = v29;
        goto LABEL_78;
      }
      if (v26 >= a2 && (unsigned int v51 = a2 + 1, a2 + 1 <= v25))
      {
        if (a2 == -1) {
          return;
        }
        unsigned int v54 = (void *)((v36 + ((unint64_t)&v47[v14 + v35] & ~v14)) & 0xFFFFFFFFFFFFFFF8);
        if ((v24 & 0x80000000) == 0)
        {
          if ((v51 & 0x80000000) != 0)
          {
            uint64_t v55 = a2 - 0x7FFFFFFF;
            v54[1] = 0;
          }
          else
          {
            uint64_t v55 = a2;
          }
          *unsigned int v54 = v55;
          return;
        }
        unsigned int v47 = (unsigned char *)(((unint64_t)v54 + v38) & v46);
        if (v51 <= v24)
        {
          uint64_t v52 = a2 + 2;
          uint64_t v53 = ((unint64_t)v54 + v38) & v46;
          uint64_t v27 = v58;
LABEL_78:
          __swift_storeEnumTagSinglePayload(v53, v52, v23, v27);
          return;
        }
        if (v32 <= 3) {
          int v56 = ~(-1 << (8 * v32));
        }
        else {
          int v56 = -1;
        }
        if (v32)
        {
          int v49 = v56 & (a2 - v24);
          if (v32 <= 3) {
            int v57 = v32;
          }
          else {
            int v57 = 4;
          }
          bzero(v47, v32);
          switch(v57)
          {
            case 2:
LABEL_94:
              *(_WORD *)unsigned int v47 = v49;
              break;
            case 3:
LABEL_95:
              *(_WORD *)unsigned int v47 = v49;
              void v47[2] = BYTE2(v49);
              break;
            case 4:
              goto LABEL_73;
            default:
LABEL_68:
              *unsigned int v47 = v49;
              break;
          }
        }
      }
      else if (((((v38 + (v37 & 0xFFFFFFF8)) & v46) + v32 + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
      {
        int v49 = a2 - v25;
        bzero(v47, ((((v38 + (v37 & 0xFFFFFFF8)) & v46) + v32 + 7) & 0xFFFFFFF8) + 8);
LABEL_73:
        *(_DWORD *)unsigned int v47 = v49;
      }
      return;
  }
}

uint64_t type metadata accessor for ProductViewButton()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_22EC4DE98()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for ProductViewButtonPlaceholder(uint64_t a1)
{
  return sub_22EAD01C0(a1, (uint64_t *)&unk_268621AF8);
}

uint64_t sub_22EC4DEFC@<X0>(uint64_t a1@<X8>)
{
  return sub_22EC42DA4(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_22EC4DF08@<X0>(uint64_t a1@<X8>)
{
  return sub_22EC43F58(*(void *)(v1 + 32), a1);
}

uint64_t sub_22EC4DF14(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22EC4DF5C@<X0>(uint64_t a1@<X8>)
{
  return sub_22EC44220(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_22EC4DF68@<X0>(uint64_t a1@<X8>)
{
  return sub_22EC44AC0(v1[4], v1[5], v1[2], v1[3], a1);
}

uint64_t sub_22EC4DF74@<X0>(uint64_t a1@<X8>)
{
  return sub_22EC44CC4(v1[4], v1[5], v1[2], v1[3], a1);
}

uint64_t sub_22EC4DF80(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_22EADDF0C(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_22EC4DFC4()
{
  unint64_t result = qword_268621AC0;
  if (!qword_268621AC0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621A80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268621AC0);
  }
  return result;
}

uint64_t sub_22EC4E034@<X0>(uint64_t a1@<X8>)
{
  return sub_22EC43730(*(void *)(v1 + 32), *(char **)(v1 + 40), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_22EC4E040()
{
  return sub_22EC43E7C(v0[4], v0[2], v0[3]);
}

unint64_t sub_22EC4E04C()
{
  unint64_t result = qword_268621AD8;
  if (!qword_268621AD8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621A70);
    sub_22EC4E0C0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268621AD8);
  }
  return result;
}

unint64_t sub_22EC4E0C0()
{
  unint64_t result = qword_268621AE0;
  if (!qword_268621AE0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621AD0);
    sub_22EC4E154(&qword_268621AE8, &qword_268621AC8);
    sub_22EADD4C0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268621AE0);
  }
  return result;
}

uint64_t sub_22EC4E154(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    sub_22EC4DF14(&qword_268621AB0, (void (*)(uint64_t))type metadata accessor for ProductViewText);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_22EC4E1F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22EC4EA04(a1, a2, a3, &qword_26861C920);
}

uint64_t sub_22EC4E218(uint64_t a1, uint64_t a2)
{
  return sub_22EC4EAF0(a1, a2, &qword_26861C920, MEMORY[0x263F19168]);
}

void *sub_22EC4E238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22EC4EBAC(a1, a2, a3, &qword_26861C920);
}

void *sub_22EC4E258(void *a1, void *a2, uint64_t a3)
{
  return sub_22EC4EC48(a1, a2, a3, &qword_26861C920, MEMORY[0x263F19168]);
}

void *sub_22EC4E278(void *a1, const void *a2, uint64_t a3)
{
  return sub_22EC4ED0C(a1, a2, a3, &qword_26861C920, MEMORY[0x263F19168]);
}

void *sub_22EC4E298(void *a1, const void *a2, uint64_t a3)
{
  return sub_22EC4EDDC(a1, a2, a3, &qword_26861C920, MEMORY[0x263F19168]);
}

uint64_t sub_22EC4E2B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EC4E2CC);
}

uint64_t sub_22EC4E2CC()
{
  OUTLINED_FUNCTION_10_12();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621AF0);

  return __swift_getEnumTagSinglePayload(v1, v0, v2);
}

uint64_t sub_22EC4E314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EC4E328);
}

uint64_t sub_22EC4E328()
{
  OUTLINED_FUNCTION_10_12();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268621AF0);
  uint64_t v0 = OUTLINED_FUNCTION_16();

  return __swift_storeEnumTagSinglePayload(v0, v1, v2, v3);
}

void sub_22EC4E368(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_22EC4E388()
{
  return swift_getWitnessTable();
}

uint64_t sub_22EC4E724()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for ProductViewButtonFrameModifier(uint64_t a1)
{
  return sub_22EAD01C0(a1, (uint64_t *)&unk_268621B70);
}

unint64_t sub_22EC4E768()
{
  unint64_t result = qword_268621B30;
  if (!qword_268621B30)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621B20);
    sub_22EC4E808();
    sub_22EADDD7C((unint64_t *)&qword_26861D590, &qword_26861D580);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268621B30);
  }
  return result;
}

unint64_t sub_22EC4E808()
{
  unint64_t result = qword_268621B38;
  if (!qword_268621B38)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621B18);
    sub_22EC4E8B4();
    sub_22EC4DF14(&qword_268621B58, (void (*)(uint64_t))type metadata accessor for ProductViewButtonFrameModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268621B38);
  }
  return result;
}

unint64_t sub_22EC4E8B4()
{
  unint64_t result = qword_268621B40;
  if (!qword_268621B40)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621B10);
    sub_22EC4DF14(&qword_268621B48, MEMORY[0x263F1B7A0]);
    sub_22EC4DF14(&qword_268621B50, MEMORY[0x263F19168]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268621B40);
  }
  return result;
}

uint64_t sub_22EC4E990(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_2_0();
  uint64_t v4 = OUTLINED_FUNCTION_16_0();
  v5(v4);
  return a2;
}

uint64_t *sub_22EC4E9E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22EC4EA04(a1, a2, a3, &qword_26861BDE0);
}

uint64_t *sub_22EC4EA04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  int v7 = *(_DWORD *)(*(void *)(OUTLINED_FUNCTION_7_13(a1, a2, a3, a4) - 8) + 80);
  if ((v7 & 0x20000) != 0)
  {
    uint64_t v11 = *v5;
    *uint64_t v4 = *v5;
    uint64_t v4 = (uint64_t *)(v11 + ((v7 + 16) & ~(unint64_t)v7));
    swift_retain();
  }
  else
  {
    if (OUTLINED_FUNCTION_4_13() == 1)
    {
      uint64_t v8 = OUTLINED_FUNCTION_4_21();
      v6(v8);
      OUTLINED_FUNCTION_2_0();
      uint64_t v9 = OUTLINED_FUNCTION_2_7();
      v10(v9);
      OUTLINED_FUNCTION_5_11();
    }
    else
    {
      *uint64_t v4 = *v5;
      swift_retain();
      OUTLINED_FUNCTION_6_15();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_22EC4EAD0(uint64_t a1, uint64_t a2)
{
  return sub_22EC4EAF0(a1, a2, &qword_26861BDE0, MEMORY[0x263F18D80]);
}

uint64_t sub_22EC4EAF0(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(uint64_t))
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = OUTLINED_FUNCTION_4_21();
    a4(v6);
    OUTLINED_FUNCTION_2_0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v9(a1, v7);
  }
  else
  {
    return swift_release();
  }
}

void *sub_22EC4EB8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22EC4EBAC(a1, a2, a3, &qword_26861BDE0);
}

void *sub_22EC4EBAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  OUTLINED_FUNCTION_7_13(a1, a2, a3, a4);
  if (OUTLINED_FUNCTION_4_13() == 1)
  {
    uint64_t v7 = OUTLINED_FUNCTION_4_21();
    v6(v7);
    OUTLINED_FUNCTION_2_0();
    uint64_t v8 = OUTLINED_FUNCTION_2_7();
    v9(v8);
    OUTLINED_FUNCTION_5_11();
  }
  else
  {
    *uint64_t v4 = *v5;
    swift_retain();
    OUTLINED_FUNCTION_6_15();
  }
  swift_storeEnumTagMultiPayload();
  return v4;
}

void *sub_22EC4EC28(void *a1, void *a2, uint64_t a3)
{
  return sub_22EC4EC48(a1, a2, a3, &qword_26861BDE0, MEMORY[0x263F18D80]);
}

void *sub_22EC4EC48(void *a1, void *a2, uint64_t a3, uint64_t *a4, void (*a5)(uint64_t))
{
  if (a1 != a2)
  {
    sub_22EB0584C((uint64_t)a1, a4);
    __swift_instantiateConcreteTypeFromMangledName(a4);
    if (OUTLINED_FUNCTION_4_13() == 1)
    {
      uint64_t v9 = OUTLINED_FUNCTION_4_21();
      a5(v9);
      OUTLINED_FUNCTION_2_0();
      uint64_t v10 = OUTLINED_FUNCTION_2_7();
      v11(v10);
      OUTLINED_FUNCTION_5_11();
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      OUTLINED_FUNCTION_6_15();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_22EC4ECEC(void *a1, const void *a2, uint64_t a3)
{
  return sub_22EC4ED0C(a1, a2, a3, &qword_26861BDE0, MEMORY[0x263F18D80]);
}

void *sub_22EC4ED0C(void *a1, const void *a2, uint64_t a3, uint64_t *a4, void (*a5)(uint64_t))
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(a4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = OUTLINED_FUNCTION_4_21();
    a5(v9);
    OUTLINED_FUNCTION_2_0();
    uint64_t v10 = OUTLINED_FUNCTION_17_0();
    v11(v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  return a1;
}

void *sub_22EC4EDBC(void *a1, const void *a2, uint64_t a3)
{
  return sub_22EC4EDDC(a1, a2, a3, &qword_26861BDE0, MEMORY[0x263F18D80]);
}

void *sub_22EC4EDDC(void *a1, const void *a2, uint64_t a3, uint64_t *a4, void (*a5)(uint64_t))
{
  if (a1 != a2)
  {
    sub_22EB0584C((uint64_t)a1, a4);
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(a4);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = OUTLINED_FUNCTION_4_21();
      a5(v10);
      OUTLINED_FUNCTION_2_0();
      uint64_t v11 = OUTLINED_FUNCTION_17_0();
      v12(v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_22EC4EEA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EC4EEB8);
}

uint64_t sub_22EC4EEB8()
{
  OUTLINED_FUNCTION_10_12();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C7F8);

  return __swift_getEnumTagSinglePayload(v1, v0, v2);
}

uint64_t sub_22EC4EF00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EC4EF14);
}

uint64_t sub_22EC4EF14()
{
  OUTLINED_FUNCTION_10_12();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861C7F8);
  uint64_t v0 = OUTLINED_FUNCTION_16();

  return __swift_storeEnumTagSinglePayload(v0, v1, v2, v3);
}

void sub_22EC4EF54(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_22EC4EF74(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(uint64_t))
{
  sub_22EC4F01C(319, a4, a5, MEMORY[0x263F185C8]);
  if (v5 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_22EC4F01C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_22EC4F084()
{
  unint64_t result = qword_268621B80;
  if (!qword_268621B80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621B88);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621B20);
    sub_22EC4E768();
    swift_getOpaqueTypeConformance2();
    sub_22EC4DF14((unint64_t *)&qword_26861C3C0, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268621B80);
  }
  return result;
}

uint64_t sub_22EC4F164()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_22EC4F184()
{
  unint64_t result = qword_268621BA0;
  if (!qword_268621BA0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621B98);
    sub_22EADDD7C(&qword_268621BA8, &qword_268621B90);
    sub_22EB277E4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268621BA0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_4_21()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_8_20()
{
  return 255;
}

uint64_t OUTLINED_FUNCTION_13_17()
{
  type metadata accessor for ProductViewButtonPlaceholder(255);
  return sub_22EE7D810();
}

uint64_t sub_22EC4F278()
{
  OUTLINED_FUNCTION_2_14();
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v0);
  OUTLINED_FUNCTION_12_12();
  v1();
  swift_storeEnumTagMultiPayload();
  return OUTLINED_FUNCTION_3_13();
}

uint64_t sub_22EC4F330()
{
  OUTLINED_FUNCTION_2_14();
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v0);
  OUTLINED_FUNCTION_12_12();
  v1();
  swift_storeEnumTagMultiPayload();
  return OUTLINED_FUNCTION_3_13();
}

uint64_t sub_22EC4F3E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  *(void *)a7 = a1;
  *(void *)(a7 + 8) = a2;
  *(unsigned char *)(a7 + 16) = a3;
  *(void *)(a7 + 24) = a4;
  *(unsigned char *)(a7 + 32) = a5;
  uint64_t v9 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_268621BB0);
  sub_22EC52590();
  *(void *)(a7 + v9[12]) = a6;
  uint64_t v10 = a7 + v9[13];
  *(void *)uint64_t v10 = swift_getKeyPath();
  *(unsigned char *)(v10 + 8) = 0;
  uint64_t v11 = a7 + v9[14];
  *(void *)uint64_t v11 = swift_getKeyPath();
  *(unsigned char *)(v11 + 8) = 0;
  uint64_t v12 = a7 + v9[15];
  *(void *)uint64_t v12 = swift_getKeyPath();
  *(unsigned char *)(v12 + 8) = 0;
  uint64_t v13 = a7 + v9[16];
  *(void *)uint64_t v13 = swift_getKeyPath();
  *(void *)(v13 + 8) = 0;
  *(unsigned char *)(v13 + 16) = 0;
  uint64_t v14 = (uint64_t *)(a7 + v9[17]);
  *uint64_t v14 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861CD78);
  swift_storeEnumTagMultiPayload();
  unint64_t v15 = (uint64_t *)(a7 + v9[18]);
  *unint64_t v15 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861CD60);
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = a7 + v9[19];
  *(void *)uint64_t v16 = swift_getKeyPath();
  *(unsigned char *)(v16 + 8) = 0;
  uint64_t v17 = a7 + v9[20];
  *(void *)uint64_t v17 = swift_getKeyPath();
  *(_OWORD *)(v17 + 8) = 0u;
  *(_OWORD *)(v17 + 24) = 0u;
  *(_OWORD *)(v17 + 40) = 0u;
  *(_OWORD *)(v17 + 56) = 0u;
  *(_WORD *)(v17 + 72) = 0;
  uint64_t v18 = a7 + v9[21];
  *(void *)uint64_t v18 = swift_getKeyPath();
  *(unsigned char *)(v18 + 8) = 0;
  uint64_t v19 = a7 + v9[22];
  *(void *)uint64_t v19 = swift_getKeyPath();
  *(unsigned char *)(v19 + 8) = 0;
  uint64_t v20 = a7 + v9[23];
  *(void *)uint64_t v20 = swift_getKeyPath();
  *(void *)(v20 + 8) = 0;
  *(unsigned char *)(v20 + 16) = 0;
  uint64_t v21 = a7 + v9[24];
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v23 = swift_getKeyPath();
  uint64_t v24 = swift_getKeyPath();
  uint64_t v25 = swift_getKeyPath();
  *(void *)uint64_t v21 = KeyPath;
  *(unsigned char *)(v21 + 8) = 0;
  *(void *)(v21 + 16) = v23;
  *(unsigned char *)(v21 + 24) = 0;
  *(void *)(v21 + 32) = v24;
  *(unsigned char *)(v21 + 40) = 0;
  *(void *)(v21 + 48) = v25;
  *(void *)(v21 + 56) = 0;
  *(unsigned char *)(v21 + 64) = 0;
  uint64_t v26 = v9[25];
  v30[0] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861F2F0);
  sub_22EE7E9D0();
  *(_OWORD *)(a7 + v26) = v31[0];
  uint64_t v32 = 0;
  memset(v31, 0, sizeof(v31));
  sub_22EC52800((uint64_t)v31, (uint64_t)v30, &qword_26861EC80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861EC80);
  sub_22EE7E9D0();
  sub_22EADAC74((uint64_t)v31, &qword_26861EC80);
  uint64_t v27 = a7 + v9[27];
  LOBYTE(v30[0]) = 0;
  uint64_t result = sub_22EE7E9D0();
  uint64_t v29 = *((void *)&v31[0] + 1);
  *(unsigned char *)uint64_t v27 = v31[0];
  *(void *)(v27 + 8) = v29;
  return result;
}

uint64_t sub_22EC4F704@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861CD98);
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = type metadata accessor for SubscriptionStoreContentView();
  uint64_t v7 = (char *)a3 + *(int *)(v6 + 36);
  *(void *)uint64_t v7 = swift_getKeyPath();
  v7[8] = 0;
  unint64_t v8 = (char *)a3 + *(int *)(v6 + 40);
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32);

  return v9(v8, a1, a2);
}

uint64_t SubscriptionStoreContentView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v58 = a1;
  OUTLINED_FUNCTION_0_0();
  uint64_t v3 = v2;
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_11_0();
  uint64_t v47 = v5;
  uint64_t v48 = v7 - v6;
  uint64_t v9 = v8;
  uint64_t v51 = *(void *)(v8 + 24);
  uint64_t v10 = type metadata accessor for StoreContentAdapter();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621BB0);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v64 = v10;
  uint64_t v65 = v11;
  unint64_t v49 = sub_22EC4FD74();
  uint64_t v50 = v11;
  uint64_t v66 = WitnessTable;
  unint64_t v67 = v49;
  uint64_t v57 = sub_22EE7D9D0();
  uint64_t v13 = sub_22EE7E8A0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v53 = v14;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v52 = (char *)v46 - v19;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861CDA0);
  MEMORY[0x270FA5388](v20 - 8);
  OUTLINED_FUNCTION_11_0();
  uint64_t v23 = v22 - v21;
  uint64_t v24 = type metadata accessor for SubscriptionStaticViewConfiguration();
  OUTLINED_FUNCTION_0_0();
  v46[1] = v25;
  MEMORY[0x270FA5388](v26);
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (char *)v46 - v28;
  sub_22EE7D810();
  OUTLINED_FUNCTION_0_0();
  uint64_t v55 = v30;
  uint64_t v56 = v31;
  MEMORY[0x270FA5388](v30);
  unsigned int v54 = (char *)v46 - v32;
  sub_22EB188AC();
  if (__swift_getEnumTagSinglePayload(v23, 1, v24) == 1)
  {
    sub_22EADAC74(v23, &qword_26861CDA0);
    uint64_t v63 = swift_getWitnessTable();
    swift_getWitnessTable();
    sub_22EB656C4();
    uint64_t v33 = v54;
    sub_22EC4F330();
  }
  else
  {
    v46[0] = (uint64_t)v29;
    sub_22EC52590();
    uint64_t v34 = v1 + *(int *)(v9 + 40);
    uint64_t v35 = v47;
    uint64_t v36 = v48;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v48, v34, v47);
    sub_22EC52540();
    uint64_t v37 = swift_allocObject();
    sub_22EC52590();
    sub_22EBC41D4((uint64_t)sub_22EC4FFF0, v37, v35, v50, v51, v49);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v36, v35);
    uint64_t v59 = swift_getWitnessTable();
    uint64_t v38 = swift_getWitnessTable();
    unint64_t v39 = v52;
    sub_22EB69440(v17, v13, v38);
    uint64_t v40 = *(void (**)(void))(v53 + 8);
    OUTLINED_FUNCTION_4_22();
    v40();
    sub_22EB69440(v39, v13, v38);
    sub_22EB656C4();
    uint64_t v33 = v54;
    sub_22EC4F278();
    OUTLINED_FUNCTION_4_22();
    v40();
    OUTLINED_FUNCTION_4_22();
    v40();
    sub_22EC50070(v46[0]);
  }
  uint64_t v62 = swift_getWitnessTable();
  uint64_t v41 = swift_getWitnessTable();
  unint64_t v42 = sub_22EB656C4();
  uint64_t v60 = v41;
  unint64_t v61 = v42;
  uint64_t v43 = v55;
  uint64_t v44 = swift_getWitnessTable();
  sub_22EB69440(v33, v43, v44);
  return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v33, v43);
}

unint64_t sub_22EC4FD74()
{
  unint64_t result = qword_268621BB8[0];
  if (!qword_268621BB8[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621BB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_268621BB8);
  }
  return result;
}

uint64_t sub_22EC4FDC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for SubscriptionStoreEntitlementConfiguration();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v7 = *(void *)a2;
  uint64_t v8 = *(void *)(a2 + 8);
  char v9 = *(unsigned char *)(a2 + 16);
  uint64_t v10 = *(void *)(a2 + 24);
  char v11 = *(unsigned char *)(a2 + 32);
  type metadata accessor for SubscriptionStaticViewConfiguration();
  sub_22EC52540();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_22EC4F3E8(v7, v8, v9, v10, v11, a1, a3);
}

uint64_t sub_22EC4FEC8()
{
  uint64_t v1 = (int *)(type metadata accessor for SubscriptionStaticViewConfiguration() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + v2 + v1[8];
  uint64_t v4 = type metadata accessor for Subscription();
  if (!__swift_getEnumTagSinglePayload(v3, 1, v4))
  {
    sub_22EE7F780();
    OUTLINED_FUNCTION_2_0();
    (*(void (**)(uint64_t))(v5 + 8))(v3);
  }
  type metadata accessor for SubscriptionStoreEntitlementConfiguration();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_22EC4FFF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for SubscriptionStaticViewConfiguration() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_22EC4FDC8(a1, v6, a2);
}

uint64_t sub_22EC50070(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SubscriptionStaticViewConfiguration();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22EC500CC()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_22EC50114()
{
  sub_22EC523C8();
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *sub_22EC501E8(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7F780();
  uint64_t v7 = *(void *)(v6 - 8);
  int v8 = *(_DWORD *)(v7 + 80);
  uint64_t v9 = *(unsigned int *)(v7 + 84);
  if (v9 <= 0xFD) {
    int v10 = 253;
  }
  else {
    int v10 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v11 = v8 & 0xF8 | 7;
  uint64_t v12 = *(void *)(*(void *)(v6 - 8) + 64);
  unint64_t v13 = (v12 + 23) & 0xFFFFFFFFFFFFFFF8;
  size_t v14 = ((v13 + 17) & 0xFFFFFFFFFFFFFFF8) + (((v8 & 0xF8) + 40) & ~v11) + 24;
  uint64_t v15 = *(void *)(a3 + 16);
  uint64_t v16 = *(void *)(v15 - 8);
  if (v14 <= 8) {
    unint64_t v17 = 8;
  }
  else {
    unint64_t v17 = ((v13 + 17) & 0xFFFFFFFFFFFFFFF8) + (((v8 & 0xF8) + 40) & ~v11) + 24;
  }
  uint64_t v18 = *(void *)(*(void *)(a3 + 16) - 8);
  int v19 = *(_DWORD *)(v16 + 80);
  uint64_t v20 = v19;
  unint64_t v21 = ((v17 + v19 + 17) & ~(unint64_t)v19) + *(void *)(v16 + 64);
  int v22 = (v19 | v8) & 0x100000;
  if ((v20 | v11) == 7 && v22 == 0 && v21 <= 0x18)
  {
    uint64_t v26 = v6;
    unsigned int v27 = a2[v17];
    unsigned int v28 = v27 - 2;
    if (v27 >= 2)
    {
      if (v17 <= 3) {
        uint64_t v29 = v17;
      }
      else {
        uint64_t v29 = 4;
      }
      switch(v29)
      {
        case 1:
          int v30 = *a2;
          goto LABEL_25;
        case 2:
          int v30 = *(unsigned __int16 *)a2;
          goto LABEL_25;
        case 3:
          int v30 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_25;
        case 4:
          int v30 = *(_DWORD *)a2;
LABEL_25:
          if (v17 < 4) {
            unsigned int v27 = (v30 | (v28 << (8 * v17))) + 2;
          }
          else {
            unsigned int v27 = v30 + 2;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v67 = v15;
    if (v27 != 1)
    {
      *a1 = *(void *)a2;
      *((unsigned char *)a1 + v17) = 0;
      swift_retain();
LABEL_52:
      unint64_t v56 = ((unint64_t)a1 + v17 + 8) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v57 = (unint64_t)&a2[v17 + 8] & 0xFFFFFFFFFFFFFFF8;
      uint64_t v58 = *(void *)v57;
      char v59 = *(unsigned char *)(v57 + 8);
      sub_22EADDF00(*(void *)v57, v59);
      *(void *)unint64_t v56 = v58;
      *(unsigned char *)(v56 + 8) = v59;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v18 + 16))((v20 + 9 + v56) & ~v20, (v20 + 9 + v57) & ~v20, v67);
      return a1;
    }
    uint64_t v31 = ~v11;
    uint64_t v66 = *(void *)(*(void *)(v6 - 8) + 64);
    if (((v10 - 1) & 0x80000000) == 0)
    {
      if (*(void *)a2 >= 0xFFFFFFFFuLL)
      {
        uint64_t v32 = (_OWORD *)((unint64_t)(a2 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v65 = ((unint64_t)v32 + v11 + 25) & v31;
        goto LABEL_40;
      }
LABEL_43:
      uint64_t v38 = a2;
      memcpy(a1, a2, v14);
LABEL_51:
      *((unsigned char *)a1 + v17) = 1;
      a2 = v38;
      goto LABEL_52;
    }
    uint64_t v32 = (_OWORD *)((unint64_t)(a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v33 = ((unint64_t)v32 + v11 + 25) & v31;
    uint64_t v65 = v33;
    if (v9 < 0xFD)
    {
      unsigned int v36 = *(unsigned __int8 *)(((v12 + v33 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
      unsigned int EnumTagSinglePayload = (v36 + 2147483646) & 0x7FFFFFFF;
      if (v36 < 2 || EnumTagSinglePayload == 0) {
        goto LABEL_40;
      }
    }
    else
    {
      size_t __na = (size_t)a2;
      uint64_t v34 = v26;
      unint64_t v61 = v32;
      unsigned int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v33, v9, v26);
      uint64_t v32 = v61;
      uint64_t v31 = ~v11;
      uint64_t v26 = v34;
      a2 = (unsigned __int8 *)__na;
    }
    if (EnumTagSinglePayload >= 2) {
      goto LABEL_43;
    }
LABEL_40:
    size_t __n = v13 + 9;
    uint64_t v64 = v26;
    uint64_t v38 = a2;
    *a1 = *(void *)a2;
    unint64_t v39 = (_OWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    long long v40 = *v32;
    *(_OWORD *)((char *)v39 + 9) = *(_OWORD *)((char *)v32 + 9);
    *unint64_t v39 = v40;
    uint64_t v41 = (void *)(((unint64_t)v39 + v11 + 25) & v31);
    swift_bridgeObjectRetain();
    if (v9 <= 0xFC)
    {
      uint64_t v43 = (const void *)v65;
      uint64_t v45 = v66;
      unsigned int v47 = *(unsigned __int8 *)(((v66 + v65 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
      BOOL v48 = v47 < 2 || v47 == 2;
      uint64_t v42 = v64;
      if (!v48) {
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v42 = v64;
      uint64_t v43 = (const void *)v65;
      int v44 = __swift_getEnumTagSinglePayload(v65, v9, v64);
      uint64_t v45 = v66;
      if (v44)
      {
LABEL_42:
        size_t v46 = __n;
        memcpy(v41, v43, __n);
LABEL_50:
        *((unsigned char *)v41 + v46) = *((unsigned char *)v43 + v46);
        unsigned int v54 = (void *)(((unint64_t)v41 + v46) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v55 = (void *)(((unint64_t)v43 + v46) & 0xFFFFFFFFFFFFFFF8);
        v54[1] = v55[1];
        v54[2] = v55[2];
        v54[3] = v55[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_51;
      }
    }
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v41, v43, v42);
    unint64_t v49 = ((unint64_t)v41 + v45 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v50 = ((unint64_t)v43 + v45 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v51 = *(void *)v50;
    *(unsigned char *)(v49 + 8) = *(unsigned char *)(v50 + 8);
    *(void *)unint64_t v49 = v51;
    unint64_t v52 = ((unint64_t)v41 + v45 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v53 = ((unint64_t)v43 + v45 + 23) & 0xFFFFFFFFFFFFFFF8;
    LOBYTE(v49) = *(unsigned char *)(v53 + 8);
    *(void *)unint64_t v52 = *(void *)v53;
    *(unsigned char *)(v52 + 8) = v49;
    size_t v46 = __n;
    goto LABEL_50;
  }
  uint64_t v25 = *(void *)a2;
  *a1 = *(void *)a2;
  a1 = (void *)(v25 + (((v20 | v11) + 16) & ~(v20 | v11)));
  swift_retain();
  return a1;
}

uint64_t sub_22EC5068C(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v4 = sub_22EE7F780();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0xFD) {
    int v7 = 253;
  }
  else {
    int v7 = *(_DWORD *)(v5 + 84);
  }
  uint64_t v8 = *(_DWORD *)(v5 + 80) & 0xF8;
  uint64_t v9 = v8 | 7;
  uint64_t v10 = (v8 + 40) & ~(v8 | 7);
  uint64_t v11 = *(void *)(*(void *)(v4 - 8) + 64);
  unint64_t v12 = (v11 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (((v12 + 17) & 0xFFFFFFFFFFFFFFF8) + v10 + 24 <= 8) {
    unint64_t v13 = 8;
  }
  else {
    unint64_t v13 = ((v12 + 17) & 0xFFFFFFFFFFFFFFF8) + v10 + 24;
  }
  unsigned int v14 = a1[v13];
  unsigned int v15 = v14 - 2;
  if (v14 >= 2)
  {
    if (v13 <= 3) {
      uint64_t v16 = v13;
    }
    else {
      uint64_t v16 = 4;
    }
    switch(v16)
    {
      case 1:
        int v17 = *a1;
        goto LABEL_16;
      case 2:
        int v17 = *(unsigned __int16 *)a1;
        goto LABEL_16;
      case 3:
        int v17 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_16;
      case 4:
        int v17 = *(_DWORD *)a1;
LABEL_16:
        int v18 = (v17 | (v15 << (8 * v13))) + 2;
        unsigned int v14 = v17 + 2;
        if (v13 < 4) {
          unsigned int v14 = v18;
        }
        break;
      default:
        break;
    }
  }
  if (v14 != 1)
  {
    swift_release();
    goto LABEL_40;
  }
  uint64_t v19 = ~v9;
  if (v7 - 1 < 0)
  {
    unint64_t v20 = (((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v9 + 25) & v19;
    if (v6 < 0xFD)
    {
      unsigned int v22 = *(unsigned __int8 *)(((v11 + v20 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
      unsigned int EnumTagSinglePayload = (v22 + 2147483646) & 0x7FFFFFFF;
      if (v22 < 2 || EnumTagSinglePayload == 0) {
        goto LABEL_30;
      }
    }
    else
    {
      unsigned int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v9 + 25) & v19, v6, v4);
    }
    if (EnumTagSinglePayload >= 2) {
      goto LABEL_40;
    }
  }
  else
  {
    if (*(void *)a1 < 0xFFFFFFFFuLL) {
      goto LABEL_40;
    }
    unint64_t v20 = (((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v9 + 25) & v19;
  }
LABEL_30:
  swift_bridgeObjectRelease();
  if (v6 <= 0xFC)
  {
    unsigned int v24 = *(unsigned __int8 *)(((v11 + v20 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    if (v24 >= 2 && v24 != 2) {
      goto LABEL_39;
    }
    goto LABEL_38;
  }
  if (!__swift_getEnumTagSinglePayload(v20, v6, v4)) {
LABEL_38:
  }
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v20, v4);
LABEL_39:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_40:
  unint64_t v26 = (unint64_t)&a1[v13 + 8] & 0xFFFFFFFFFFFFFFF8;
  sub_22EADDB08(*(void *)v26, *(unsigned char *)(v26 + 8));
  uint64_t v27 = *(void *)(*(void *)(a2 + 16) - 8);
  unsigned int v28 = *(uint64_t (**)(unint64_t))(v27 + 8);
  unint64_t v29 = (v26 + *(unsigned __int8 *)(v27 + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);

  return v28(v29);
}

void *sub_22EC50970(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = sub_22EE7F780();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  if (v7 <= 0xFD) {
    int v8 = 253;
  }
  else {
    int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(_DWORD *)(v6 + 80) & 0xF8;
  uint64_t v10 = v9 | 7;
  uint64_t v11 = (v9 + 40) & ~(v9 | 7);
  uint64_t v12 = *(void *)(*(void *)(v5 - 8) + 64);
  unint64_t v13 = (v12 + 23) & 0xFFFFFFFFFFFFFFF8;
  size_t v14 = ((v13 + 17) & 0xFFFFFFFFFFFFFFF8) + v11 + 24;
  if (v14 <= 8) {
    unint64_t v15 = 8;
  }
  else {
    unint64_t v15 = ((v13 + 17) & 0xFFFFFFFFFFFFFFF8) + v11 + 24;
  }
  unsigned int v16 = a2[v15];
  unsigned int v17 = v16 - 2;
  if (v16 >= 2)
  {
    if (v15 <= 3) {
      uint64_t v18 = v15;
    }
    else {
      uint64_t v18 = 4;
    }
    switch(v18)
    {
      case 1:
        int v19 = *a2;
        goto LABEL_16;
      case 2:
        int v19 = *(unsigned __int16 *)a2;
        goto LABEL_16;
      case 3:
        int v19 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_16;
      case 4:
        int v19 = *(_DWORD *)a2;
LABEL_16:
        if (v15 < 4) {
          unsigned int v16 = (v19 | (v17 << (8 * v15))) + 2;
        }
        else {
          unsigned int v16 = v19 + 2;
        }
        break;
      default:
        break;
    }
  }
  if (v16 == 1)
  {
    uint64_t v50 = v5;
    uint64_t v20 = ~v10;
    if (((v8 - 1) & 0x80000000) == 0)
    {
      if (*(void *)a2 >= 0xFFFFFFFFuLL)
      {
        unint64_t v21 = (long long *)((unint64_t)(a2 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v49 = ((unint64_t)v21 + v10 + 25) & v20;
        goto LABEL_31;
      }
LABEL_34:
      memcpy(a1, a2, v14);
      uint64_t v22 = a3;
LABEL_42:
      *((unsigned char *)a1 + v15) = 1;
      goto LABEL_43;
    }
    unint64_t v21 = (long long *)((unint64_t)(a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v23 = ((unint64_t)v21 + v10 + 25) & v20;
    uint64_t v49 = v23;
    if (v7 < 0xFD)
    {
      unsigned int v25 = *(unsigned __int8 *)(((v12 + v23 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
      unsigned int EnumTagSinglePayload = (v25 + 2147483646) & 0x7FFFFFFF;
      if (v25 < 2 || EnumTagSinglePayload == 0) {
        goto LABEL_31;
      }
    }
    else
    {
      unsigned int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v23, v7, v50);
      uint64_t v20 = ~v10;
    }
    if (EnumTagSinglePayload >= 2) {
      goto LABEL_34;
    }
LABEL_31:
    unint64_t v27 = v13 + 9;
    *a1 = *(void *)a2;
    unsigned int v28 = (_OWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    long long v29 = *v21;
    *(_OWORD *)((char *)v28 + 9) = *(long long *)((char *)v21 + 9);
    *unsigned int v28 = v29;
    int v30 = (void *)(((unint64_t)v28 + v10 + 25) & v20);
    swift_bridgeObjectRetain();
    if (v7 <= 0xFC)
    {
      uint64_t v33 = (const void *)v49;
      uint64_t v31 = v50;
      unsigned int v34 = *(unsigned __int8 *)(((v12 + v49 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
      if (v34 >= 2 && v34 != 2) {
        goto LABEL_33;
      }
    }
    else
    {
      uint64_t v31 = v50;
      uint64_t v32 = v7;
      uint64_t v33 = (const void *)v49;
      if (__swift_getEnumTagSinglePayload(v49, v32, v50))
      {
LABEL_33:
        memcpy(v30, v33, v13 + 9);
LABEL_41:
        uint64_t v22 = a3;
        *((unsigned char *)v30 + v27) = *((unsigned char *)v33 + v27);
        uint64_t v41 = (void *)(((unint64_t)v30 + v27) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v42 = (void *)(((unint64_t)v33 + v27) & 0xFFFFFFFFFFFFFFF8);
        v41[1] = v42[1];
        void v41[2] = v42[2];
        v41[3] = v42[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_42;
      }
    }
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v30, v33, v31);
    unint64_t v36 = ((unint64_t)v30 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v37 = ((unint64_t)v33 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v38 = *(void *)v37;
    *(unsigned char *)(v36 + 8) = *(unsigned char *)(v37 + 8);
    *(void *)unint64_t v36 = v38;
    unint64_t v39 = ((unint64_t)v30 + v12 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v40 = ((unint64_t)v33 + v12 + 23) & 0xFFFFFFFFFFFFFFF8;
    LOBYTE(v36) = *(unsigned char *)(v40 + 8);
    *(void *)unint64_t v39 = *(void *)v40;
    *(unsigned char *)(v39 + 8) = v36;
    goto LABEL_41;
  }
  *a1 = *(void *)a2;
  *((unsigned char *)a1 + v15) = 0;
  swift_retain();
  uint64_t v22 = a3;
LABEL_43:
  unint64_t v43 = ((unint64_t)a1 + v15 + 8) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v44 = (unint64_t)&a2[v15 + 8] & 0xFFFFFFFFFFFFFFF8;
  uint64_t v45 = *(void *)v44;
  char v46 = *(unsigned char *)(v44 + 8);
  sub_22EADDF00(*(void *)v44, v46);
  *(void *)unint64_t v43 = v45;
  *(unsigned char *)(v43 + 8) = v46;
  uint64_t v47 = *(void *)(*(void *)(v22 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v47 + 16))((*(unsigned __int8 *)(v47 + 80) + 9 + v43) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80), (*(unsigned __int8 *)(v47 + 80) + 9 + v44) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80));
  return a1;
}

unsigned __int8 *sub_22EC50D68(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  if (a1 != a2)
  {
    uint64_t v68 = sub_22EE7F780();
    uint64_t v6 = *(void *)(v68 - 8);
    uint64_t v7 = *(unsigned int *)(v6 + 84);
    if (v7 <= 0xFD) {
      int v8 = 253;
    }
    else {
      int v8 = *(_DWORD *)(v6 + 84);
    }
    uint64_t v9 = *(_DWORD *)(v6 + 80) & 0xF8;
    uint64_t v10 = v9 | 7;
    uint64_t v11 = (v9 + 40) & ~(v9 | 7);
    uint64_t v12 = *(void *)(*(void *)(v68 - 8) + 64);
    unint64_t v13 = (v12 + 23) & 0xFFFFFFFFFFFFFFF8;
    size_t v14 = ((v13 + 17) & 0xFFFFFFFFFFFFFFF8) + v11 + 24;
    if (v14 <= 8) {
      unint64_t v15 = 8;
    }
    else {
      unint64_t v15 = ((v13 + 17) & 0xFFFFFFFFFFFFFFF8) + v11 + 24;
    }
    unsigned int v16 = a1[v15];
    unsigned int v17 = v16 - 2;
    if (v16 >= 2)
    {
      if (v15 <= 3) {
        uint64_t v18 = v15;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *a1;
          goto LABEL_17;
        case 2:
          int v19 = *(unsigned __int16 *)a1;
          goto LABEL_17;
        case 3:
          int v19 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_17;
        case 4:
          int v19 = *(_DWORD *)a1;
LABEL_17:
          if (v15 < 4) {
            unsigned int v16 = (v19 | (v17 << (8 * v15))) + 2;
          }
          else {
            unsigned int v16 = v19 + 2;
          }
          break;
        default:
          break;
      }
    }
    size_t __n = v13 + 9;
    uint64_t v67 = *(void *)(*(void *)(v68 - 8) + 64);
    int v20 = v8 - 1;
    uint64_t v21 = ~v10;
    if (v16 != 1)
    {
      swift_release();
      goto LABEL_42;
    }
    if (v20 < 0)
    {
      unint64_t v23 = ((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v10 + 25;
      unint64_t v22 = v23 & v21;
      if (v7 < 0xFD)
      {
        unsigned int v25 = *(unsigned __int8 *)(((v12 + v22 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
        unsigned int EnumTagSinglePayload = (v25 + 2147483646) & 0x7FFFFFFF;
        if (v25 < 2 || EnumTagSinglePayload == 0) {
          goto LABEL_32;
        }
      }
      else
      {
        unsigned int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v23 & v21, v7, v68);
      }
      if (EnumTagSinglePayload >= 2) {
        goto LABEL_42;
      }
    }
    else
    {
      if (*(void *)a1 < 0xFFFFFFFFuLL) {
        goto LABEL_42;
      }
      unint64_t v22 = (((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v10 + 25) & v21;
    }
LABEL_32:
    swift_bridgeObjectRelease();
    if (v7 <= 0xFC)
    {
      unsigned int v27 = *(unsigned __int8 *)(((v67 + v22 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
      if (v27 >= 2 && v27 != 2) {
        goto LABEL_41;
      }
    }
    else if (__swift_getEnumTagSinglePayload(v22, v7, v68))
    {
LABEL_41:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_42:
      unsigned int v29 = a2[v15];
      unsigned int v30 = v29 - 2;
      if (v29 >= 2)
      {
        if (v15 <= 3) {
          uint64_t v31 = v15;
        }
        else {
          uint64_t v31 = 4;
        }
        switch(v31)
        {
          case 1:
            int v32 = *a2;
            goto LABEL_51;
          case 2:
            int v32 = *(unsigned __int16 *)a2;
            goto LABEL_51;
          case 3:
            int v32 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_51;
          case 4:
            int v32 = *(_DWORD *)a2;
LABEL_51:
            if (v15 < 4) {
              unsigned int v29 = (v32 | (v30 << (8 * v15))) + 2;
            }
            else {
              unsigned int v29 = v32 + 2;
            }
            break;
          default:
            break;
        }
      }
      if (v29 != 1)
      {
        *(void *)a1 = *(void *)a2;
        a1[v15] = 0;
        swift_retain();
        uint64_t v3 = a3;
        goto LABEL_78;
      }
      if ((v20 & 0x80000000) == 0)
      {
        if (*(void *)a2 >= 0xFFFFFFFFuLL)
        {
          uint64_t v33 = (long long *)((unint64_t)(a2 + 15) & 0xFFFFFFFFFFFFFFF8);
          unsigned int v34 = (const void *)(((unint64_t)v33 + v10 + 25) & v21);
          goto LABEL_66;
        }
LABEL_69:
        memcpy(a1, a2, v14);
        uint64_t v3 = a3;
LABEL_77:
        a1[v15] = 1;
        goto LABEL_78;
      }
      uint64_t v33 = (long long *)((unint64_t)(a2 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v35 = (uint64_t)v33 + v10 + 25;
      unsigned int v34 = (const void *)(v35 & v21);
      if (v7 < 0xFD)
      {
        unsigned int v37 = *(unsigned __int8 *)((((unint64_t)v34 + v67 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
        unsigned int v36 = (v37 + 2147483646) & 0x7FFFFFFF;
        if (v37 < 2 || v36 == 0) {
          goto LABEL_66;
        }
      }
      else
      {
        unsigned int v36 = __swift_getEnumTagSinglePayload(v35 & v21, v7, v68);
      }
      if (v36 >= 2) {
        goto LABEL_69;
      }
LABEL_66:
      *(void *)a1 = *(void *)a2;
      unint64_t v39 = (_OWORD *)((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8);
      long long v40 = *v33;
      *(_OWORD *)((char *)v39 + 9) = *(long long *)((char *)v33 + 9);
      *unint64_t v39 = v40;
      uint64_t v41 = (void *)(((unint64_t)v39 + v10 + 25) & v21);
      swift_bridgeObjectRetain();
      if (v7 <= 0xFC)
      {
        uint64_t v43 = v67;
        uint64_t v42 = v68;
        unsigned int v45 = *(unsigned __int8 *)((((unint64_t)v34 + v67 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
        if (v45 >= 2 && v45 != 2) {
          goto LABEL_68;
        }
      }
      else
      {
        uint64_t v42 = v68;
        uint64_t v43 = v67;
        if (__swift_getEnumTagSinglePayload((uint64_t)v34, v7, v68))
        {
LABEL_68:
          size_t v44 = __n;
          memcpy(v41, v34, __n);
          uint64_t v3 = a3;
LABEL_76:
          *((unsigned char *)v41 + v44) = *((unsigned char *)v34 + v44);
          unint64_t v52 = (void *)(((unint64_t)v41 + v44) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v53 = (void *)(((unint64_t)v34 + v44) & 0xFFFFFFFFFFFFFFF8);
          v52[1] = v53[1];
          v52[2] = v53[2];
          v52[3] = v53[3];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_77;
        }
      }
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v41, v34, v42);
      unint64_t v47 = ((unint64_t)v41 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v48 = ((unint64_t)v34 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v49 = *(void *)v48;
      *(unsigned char *)(v47 + 8) = *(unsigned char *)(v48 + 8);
      *(void *)unint64_t v47 = v49;
      unint64_t v50 = ((unint64_t)v41 + v43 + 23) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v51 = ((unint64_t)v34 + v43 + 23) & 0xFFFFFFFFFFFFFFF8;
      LOBYTE(v47) = *(unsigned char *)(v51 + 8);
      *(void *)unint64_t v50 = *(void *)v51;
      *(unsigned char *)(v50 + 8) = v47;
      uint64_t v3 = a3;
      size_t v44 = __n;
      goto LABEL_76;
    }
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v22, v68);
    goto LABEL_41;
  }
LABEL_78:
  uint64_t v54 = *(void *)(sub_22EE7F780() - 8);
  uint64_t v55 = *(_DWORD *)(v54 + 80) & 0xF8;
  unint64_t v56 = ((((*(void *)(v54 + 64) + 23) & 0xFFFFFFFFFFFFFFF8) + 17) & 0xFFFFFFFFFFFFFFF8)
      + (~v55 & (unint64_t)(v55 + 40))
      + 24;
  if (v56 <= 8) {
    unint64_t v56 = 8;
  }
  unint64_t v57 = v56 + 8;
  unint64_t v58 = (unint64_t)&a1[v57] & 0xFFFFFFFFFFFFFFF8;
  unint64_t v59 = (unint64_t)&a2[v57] & 0xFFFFFFFFFFFFFFF8;
  uint64_t v60 = *(void *)v59;
  char v61 = *(unsigned char *)(v59 + 8);
  sub_22EADDF00(*(void *)v59, v61);
  uint64_t v62 = *(void *)v58;
  char v63 = *(unsigned char *)(v58 + 8);
  *(void *)unint64_t v58 = v60;
  *(unsigned char *)(v58 + 8) = v61;
  sub_22EADDB08(v62, v63);
  uint64_t v64 = *(void *)(*(void *)(v3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v64 + 24))((*(unsigned __int8 *)(v64 + 80) + 9 + v58) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80), (*(unsigned __int8 *)(v64 + 80) + 9 + v59) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80));
  return a1;
}

void *sub_22EC513B8(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7F780();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= 0xFD) {
    int v9 = 253;
  }
  else {
    int v9 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v10 = *(_DWORD *)(v7 + 80) & 0xF8;
  uint64_t v11 = v10 | 7;
  uint64_t v12 = (v10 + 40) & ~(v10 | 7);
  uint64_t v13 = *(void *)(*(void *)(v6 - 8) + 64);
  unint64_t v14 = (v13 + 23) & 0xFFFFFFFFFFFFFFF8;
  size_t v15 = ((v14 + 17) & 0xFFFFFFFFFFFFFFF8) + v12 + 24;
  if (v15 <= 8) {
    unint64_t v16 = 8;
  }
  else {
    unint64_t v16 = ((v14 + 17) & 0xFFFFFFFFFFFFFFF8) + v12 + 24;
  }
  unsigned int v17 = a2[v16];
  unsigned int v18 = v17 - 2;
  if (v17 >= 2)
  {
    if (v16 <= 3) {
      uint64_t v19 = v16;
    }
    else {
      uint64_t v19 = 4;
    }
    switch(v19)
    {
      case 1:
        int v20 = *a2;
        goto LABEL_16;
      case 2:
        int v20 = *(unsigned __int16 *)a2;
        goto LABEL_16;
      case 3:
        int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_16;
      case 4:
        int v20 = *(_DWORD *)a2;
LABEL_16:
        if (v16 < 4) {
          unsigned int v17 = (v20 | (v18 << (8 * v16))) + 2;
        }
        else {
          unsigned int v17 = v20 + 2;
        }
        break;
      default:
        break;
    }
  }
  if (v17 == 1)
  {
    uint64_t v52 = a3;
    uint64_t v21 = ~v11;
    if (((v9 - 1) & 0x80000000) == 0)
    {
      if (*(void *)a2 >= 0xFFFFFFFFuLL)
      {
        unint64_t v22 = (long long *)((unint64_t)(a2 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v51 = ((unint64_t)v22 + v11 + 25) & v21;
        goto LABEL_31;
      }
      goto LABEL_34;
    }
    unint64_t v22 = (long long *)((unint64_t)(a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v24 = ((unint64_t)v22 + v11 + 25) & v21;
    uint64_t v51 = v24;
    if (v8 < 0xFD)
    {
      unsigned int v26 = *(unsigned __int8 *)(((v13 + v24 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
      unsigned int EnumTagSinglePayload = (v26 + 2147483646) & 0x7FFFFFFF;
      if (v26 < 2 || EnumTagSinglePayload == 0) {
        goto LABEL_31;
      }
    }
    else
    {
      uint64_t v50 = v6;
      unsigned int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v24, v8, v6);
      uint64_t v21 = ~v11;
      uint64_t v6 = v50;
    }
    if (EnumTagSinglePayload >= 2)
    {
LABEL_34:
      memcpy(a1, a2, v15);
      char v23 = 1;
      a3 = v52;
      goto LABEL_42;
    }
LABEL_31:
    size_t v28 = v14 + 9;
    *a1 = *(void *)a2;
    unsigned int v29 = (_OWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    long long v30 = *v22;
    *(_OWORD *)((char *)v29 + 9) = *(long long *)((char *)v22 + 9);
    *unsigned int v29 = v30;
    uint64_t v31 = (void *)(((unint64_t)v29 + v11 + 25) & v21);
    if (v8 <= 0xFC)
    {
      int v32 = (const void *)v51;
      unsigned int v35 = *(unsigned __int8 *)(((v13 + v51 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
      if (v35 >= 2 && v35 != 2) {
        goto LABEL_33;
      }
    }
    else
    {
      int v32 = (const void *)v51;
      uint64_t v33 = v6;
      int v34 = __swift_getEnumTagSinglePayload(v51, v8, v6);
      uint64_t v6 = v33;
      if (v34)
      {
LABEL_33:
        memcpy(v31, v32, v28);
LABEL_41:
        a3 = v52;
        *((unsigned char *)v31 + v28) = *((unsigned char *)v32 + v28);
        unint64_t v42 = ((unint64_t)v31 + v28) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v43 = ((unint64_t)v32 + v28) & 0xFFFFFFFFFFFFFFF8;
        long long v44 = *(_OWORD *)(v43 + 8);
        *(void *)(v42 + 24) = *(void *)(v43 + 24);
        *(_OWORD *)(v42 + 8) = v44;
        char v23 = 1;
        goto LABEL_42;
      }
    }
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v31, v32, v6);
    unint64_t v37 = ((unint64_t)v31 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v38 = ((unint64_t)v32 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v39 = *(void *)v38;
    *(unsigned char *)(v37 + 8) = *(unsigned char *)(v38 + 8);
    *(void *)unint64_t v37 = v39;
    unint64_t v40 = ((unint64_t)v31 + v13 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v41 = ((unint64_t)v32 + v13 + 23) & 0xFFFFFFFFFFFFFFF8;
    LOBYTE(v37) = *(unsigned char *)(v41 + 8);
    *(void *)unint64_t v40 = *(void *)v41;
    *(unsigned char *)(v40 + 8) = v37;
    goto LABEL_41;
  }
  char v23 = 0;
  *a1 = *(void *)a2;
LABEL_42:
  *((unsigned char *)a1 + v16) = v23;
  unint64_t v45 = ((unint64_t)a1 + v16 + 8) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v46 = (unint64_t)&a2[v16 + 8] & 0xFFFFFFFFFFFFFFF8;
  uint64_t v47 = *(void *)v46;
  *(unsigned char *)(v45 + 8) = *(unsigned char *)(v46 + 8);
  *(void *)unint64_t v45 = v47;
  uint64_t v48 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v48 + 32))((*(unsigned __int8 *)(v48 + 80) + 9 + v45) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80), (*(unsigned __int8 *)(v48 + 80) + 9 + v46) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80));
  return a1;
}

unsigned __int8 *sub_22EC51788(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v68 = sub_22EE7F780();
    uint64_t v6 = *(void *)(v68 - 8);
    uint64_t v7 = *(unsigned int *)(v6 + 84);
    if (v7 <= 0xFD) {
      int v8 = 253;
    }
    else {
      int v8 = *(_DWORD *)(v6 + 84);
    }
    uint64_t v9 = *(_DWORD *)(v6 + 80) & 0xF8;
    uint64_t v10 = v9 | 7;
    uint64_t v11 = (v9 + 40) & ~(v9 | 7);
    uint64_t v67 = *(void *)(*(void *)(v68 - 8) + 64);
    unint64_t v12 = (v67 + 23) & 0xFFFFFFFFFFFFFFF8;
    size_t v13 = ((v12 + 17) & 0xFFFFFFFFFFFFFFF8) + v11 + 24;
    if (v13 <= 8) {
      unint64_t v14 = 8;
    }
    else {
      unint64_t v14 = ((v12 + 17) & 0xFFFFFFFFFFFFFFF8) + v11 + 24;
    }
    unsigned int v15 = a1[v14];
    unsigned int v16 = v15 - 2;
    if (v15 >= 2)
    {
      if (v14 <= 3) {
        uint64_t v17 = v14;
      }
      else {
        uint64_t v17 = 4;
      }
      switch(v17)
      {
        case 1:
          int v18 = *a1;
          goto LABEL_17;
        case 2:
          int v18 = *(unsigned __int16 *)a1;
          goto LABEL_17;
        case 3:
          int v18 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_17;
        case 4:
          int v18 = *(_DWORD *)a1;
LABEL_17:
          if (v14 < 4) {
            unsigned int v15 = (v18 | (v16 << (8 * v14))) + 2;
          }
          else {
            unsigned int v15 = v18 + 2;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v69 = a3;
    size_t __n = v12 + 9;
    int v19 = v8 - 1;
    uint64_t v20 = ~v10;
    if (v15 != 1)
    {
      swift_release();
      goto LABEL_42;
    }
    if (v19 < 0)
    {
      unint64_t v22 = ((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v10 + 25;
      unint64_t v21 = v22 & v20;
      if (v7 < 0xFD)
      {
        unsigned int v24 = *(unsigned __int8 *)(((v67 + v21 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
        unsigned int EnumTagSinglePayload = (v24 + 2147483646) & 0x7FFFFFFF;
        if (v24 < 2 || EnumTagSinglePayload == 0) {
          goto LABEL_32;
        }
      }
      else
      {
        unsigned int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v22 & v20, v7, v68);
      }
      if (EnumTagSinglePayload >= 2) {
        goto LABEL_42;
      }
    }
    else
    {
      if (*(void *)a1 < 0xFFFFFFFFuLL) {
        goto LABEL_42;
      }
      unint64_t v21 = (((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v10 + 25) & v20;
    }
LABEL_32:
    swift_bridgeObjectRelease();
    if (v7 <= 0xFC)
    {
      unsigned int v26 = *(unsigned __int8 *)(((v67 + v21 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
      if (v26 >= 2 && v26 != 2) {
        goto LABEL_41;
      }
    }
    else if (__swift_getEnumTagSinglePayload(v21, v7, v68))
    {
LABEL_41:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_42:
      unsigned int v28 = a2[v14];
      unsigned int v29 = v28 - 2;
      if (v28 >= 2)
      {
        if (v14 <= 3) {
          uint64_t v30 = v14;
        }
        else {
          uint64_t v30 = 4;
        }
        switch(v30)
        {
          case 1:
            int v31 = *a2;
            goto LABEL_51;
          case 2:
            int v31 = *(unsigned __int16 *)a2;
            goto LABEL_51;
          case 3:
            int v31 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_51;
          case 4:
            int v31 = *(_DWORD *)a2;
LABEL_51:
            if (v14 < 4) {
              unsigned int v28 = (v31 | (v29 << (8 * v14))) + 2;
            }
            else {
              unsigned int v28 = v31 + 2;
            }
            break;
          default:
            break;
        }
      }
      if (v28 != 1)
      {
        char v34 = 0;
        *(void *)a1 = *(void *)a2;
LABEL_70:
        a3 = v69;
LABEL_78:
        a1[v14] = v34;
        goto LABEL_79;
      }
      if ((v19 & 0x80000000) == 0)
      {
        if (*(void *)a2 >= 0xFFFFFFFFuLL)
        {
          int v32 = (long long *)((unint64_t)(a2 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v33 = (const void *)(((unint64_t)v32 + v10 + 25) & v20);
          goto LABEL_66;
        }
        goto LABEL_69;
      }
      int v32 = (long long *)((unint64_t)(a2 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v35 = (uint64_t)v32 + v10 + 25;
      uint64_t v33 = (const void *)(v35 & v20);
      if (v7 < 0xFD)
      {
        unsigned int v37 = *(unsigned __int8 *)((((unint64_t)v33 + v67 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
        unsigned int v36 = (v37 + 2147483646) & 0x7FFFFFFF;
        if (v37 < 2 || v36 == 0) {
          goto LABEL_66;
        }
      }
      else
      {
        unsigned int v36 = __swift_getEnumTagSinglePayload(v35 & v20, v7, v68);
      }
      if (v36 >= 2)
      {
LABEL_69:
        memcpy(a1, a2, v13);
        char v34 = 1;
        goto LABEL_70;
      }
LABEL_66:
      *(void *)a1 = *(void *)a2;
      uint64_t v39 = (_OWORD *)((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8);
      long long v40 = *v32;
      *(_OWORD *)((char *)v39 + 9) = *(long long *)((char *)v32 + 9);
      *uint64_t v39 = v40;
      unint64_t v41 = (void *)(((unint64_t)v39 + v10 + 25) & v20);
      if (v7 <= 0xFC)
      {
        uint64_t v43 = v67;
        uint64_t v42 = v68;
        unsigned int v45 = *(unsigned __int8 *)((((unint64_t)v33 + v67 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
        if (v45 >= 2 && v45 != 2) {
          goto LABEL_68;
        }
      }
      else
      {
        uint64_t v42 = v68;
        uint64_t v43 = v67;
        if (__swift_getEnumTagSinglePayload((uint64_t)v33, v7, v68))
        {
LABEL_68:
          size_t v44 = __n;
          memcpy(v41, v33, __n);
          a3 = v69;
LABEL_77:
          *((unsigned char *)v41 + v44) = *((unsigned char *)v33 + v44);
          unint64_t v52 = ((unint64_t)v41 + v44) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v53 = ((unint64_t)v33 + v44) & 0xFFFFFFFFFFFFFFF8;
          long long v54 = *(_OWORD *)(v53 + 8);
          *(void *)(v52 + 24) = *(void *)(v53 + 24);
          *(_OWORD *)(v52 + 8) = v54;
          char v34 = 1;
          goto LABEL_78;
        }
      }
      (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v41, v33, v42);
      unint64_t v47 = ((unint64_t)v41 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v48 = ((unint64_t)v33 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v49 = *(void *)v48;
      *(unsigned char *)(v47 + 8) = *(unsigned char *)(v48 + 8);
      *(void *)unint64_t v47 = v49;
      unint64_t v50 = ((unint64_t)v41 + v43 + 23) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v51 = ((unint64_t)v33 + v43 + 23) & 0xFFFFFFFFFFFFFFF8;
      LOBYTE(v47) = *(unsigned char *)(v51 + 8);
      *(void *)unint64_t v50 = *(void *)v51;
      *(unsigned char *)(v50 + 8) = v47;
      a3 = v69;
      size_t v44 = __n;
      goto LABEL_77;
    }
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v21, v68);
    goto LABEL_41;
  }
LABEL_79:
  uint64_t v55 = *(void *)(sub_22EE7F780() - 8);
  uint64_t v56 = *(_DWORD *)(v55 + 80) & 0xF8;
  unint64_t v57 = ((((*(void *)(v55 + 64) + 23) & 0xFFFFFFFFFFFFFFF8) + 17) & 0xFFFFFFFFFFFFFFF8)
      + (~v56 & (unint64_t)(v56 + 40))
      + 24;
  if (v57 <= 8) {
    unint64_t v57 = 8;
  }
  unint64_t v58 = v57 + 8;
  unint64_t v59 = (unint64_t)&a1[v58] & 0xFFFFFFFFFFFFFFF8;
  unint64_t v60 = (unint64_t)&a2[v58] & 0xFFFFFFFFFFFFFFF8;
  char v61 = *(unsigned char *)(v60 + 8);
  uint64_t v62 = *(void *)v59;
  char v63 = *(unsigned char *)(v59 + 8);
  *(void *)unint64_t v59 = *(void *)v60;
  *(unsigned char *)(v59 + 8) = v61;
  sub_22EADDB08(v62, v63);
  uint64_t v64 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v64 + 40))((*(unsigned __int8 *)(v64 + 80) + 9 + v59) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80), (*(unsigned __int8 *)(v64 + 80) + 9 + v60) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80));
  return a1;
}

uint64_t sub_22EC51DB4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(sub_22EE7F780() - 8);
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v9 <= 0xFE) {
    unsigned int v10 = 254;
  }
  else {
    unsigned int v10 = *(_DWORD *)(v8 + 84);
  }
  unint64_t v11 = ((((*(void *)(v6 + 64) + 23) & 0xFFFFFFFFFFFFFFF8) + 17) & 0xFFFFFFFFFFFFFFF8)
      + (~(*(_DWORD *)(v6 + 80) & 0xF8u) & ((*(_DWORD *)(v6 + 80) & 0xF8) + 40))
      + 24;
  if (v11 <= 8) {
    unint64_t v11 = 8;
  }
  uint64_t v12 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = *(void *)(v8 + 64);
  if (!a2) {
    return 0;
  }
  if (a2 <= v10) {
    goto LABEL_25;
  }
  uint64_t v14 = ((v11 + v12 + 17) & ~v12) + v13;
  char v15 = 8 * v14;
  if (v14 <= 3)
  {
    unsigned int v18 = ((a2 - v10 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v18))
    {
      int v16 = *(_DWORD *)((char *)a1 + v14);
      if (!v16) {
        goto LABEL_25;
      }
      goto LABEL_17;
    }
    if (v18 > 0xFF)
    {
      int v16 = *(unsigned __int16 *)((char *)a1 + v14);
      if (!*(unsigned __int16 *)((char *)a1 + v14)) {
        goto LABEL_25;
      }
      goto LABEL_17;
    }
    if (v18 < 2)
    {
LABEL_25:
      if (v9 > 0xFE)
      {
        return __swift_getEnumTagSinglePayload((v12 + (((unint64_t)a1 + v11 + 8) & 0xFFFFFFFFFFFFFFF8) + 9) & ~v12, v9, v7);
      }
      else
      {
        unsigned int v20 = *((unsigned __int8 *)a1 + v11);
        if (v20 >= 2) {
          return (v20 ^ 0xFF) + 1;
        }
        else {
          return 0;
        }
      }
    }
  }
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_25;
  }
LABEL_17:
  int v19 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v19 = 0;
  }
  if (v14)
  {
    if (v14 > 3) {
      LODWORD(v14) = 4;
    }
    switch((int)v14)
    {
      case 2:
        LODWORD(v14) = *a1;
        break;
      case 3:
        LODWORD(v14) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v14) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v14) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v10 + (v14 | v19) + 1;
}

void sub_22EC52018(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(sub_22EE7F780() - 8);
  uint64_t v9 = ~(*(_DWORD *)(v8 + 80) & 0xF8u) & ((*(_DWORD *)(v8 + 80) & 0xF8) + 40);
  uint64_t v10 = *(void *)(a4 + 16);
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = (*(void *)(v8 + 64) + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = *(unsigned int *)(v11 + 84);
  if (v13 <= 0xFE) {
    unsigned int v14 = 254;
  }
  else {
    unsigned int v14 = *(_DWORD *)(v11 + 84);
  }
  unint64_t v15 = ((v12 + 17) & 0xFFFFFFFFFFFFFFF8) + v9 + 24;
  if (v15 <= 8) {
    unint64_t v15 = 8;
  }
  uint64_t v16 = *(unsigned __int8 *)(v11 + 80);
  size_t v17 = ((v15 + v16 + 17) & ~v16) + *(void *)(v11 + 64);
  char v18 = 8 * v17;
  if (a3 <= v14)
  {
    int v19 = 0;
  }
  else if (v17 <= 3)
  {
    unsigned int v22 = ((a3 - v14 + ~(-1 << v18)) >> v18) + 1;
    if (HIWORD(v22))
    {
      int v19 = 4;
    }
    else if (v22 >= 0x100)
    {
      int v19 = 2;
    }
    else
    {
      int v19 = v22 > 1;
    }
  }
  else
  {
    int v19 = 1;
  }
  if (v14 < a2)
  {
    unsigned int v20 = ~v14 + a2;
    if (v17 < 4)
    {
      int v21 = (v20 >> v18) + 1;
      if (v17)
      {
        int v23 = v20 & ~(-1 << v18);
        bzero(a1, v17);
        if (v17 == 3)
        {
          *(_WORD *)a1 = v23;
          a1[2] = BYTE2(v23);
        }
        else if (v17 == 2)
        {
          *(_WORD *)a1 = v23;
        }
        else
        {
          *a1 = v23;
        }
      }
    }
    else
    {
      bzero(a1, v17);
      *(_DWORD *)a1 = v20;
      int v21 = 1;
    }
    switch(v19)
    {
      case 1:
        a1[v17] = v21;
        return;
      case 2:
        *(_WORD *)&a1[v17] = v21;
        return;
      case 3:
        goto LABEL_53;
      case 4:
        *(_DWORD *)&a1[v17] = v21;
        return;
      default:
        return;
    }
  }
  switch(v19)
  {
    case 1:
      a1[v17] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)&a1[v17] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_53:
      __break(1u);
      JUMPOUT(0x22EC52378);
    case 4:
      *(_DWORD *)&a1[v17] = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        if (v13 > 0xFE)
        {
          __swift_storeEnumTagSinglePayload((v16 + ((unint64_t)&a1[v15 + 8] & 0xFFFFFFFFFFFFFFF8) + 9) & ~v16, a2, v13, v10);
        }
        else if (a2 > 0xFE)
        {
          size_t v24 = v15 | 1;
          int v25 = -1 << (8 * (v15 | 1));
          if (v24 <= 3) {
            int v26 = ~v25;
          }
          else {
            int v26 = -1;
          }
          int v27 = v26 & (a2 - 255);
          if (v24 <= 3) {
            int v28 = v24;
          }
          else {
            int v28 = 4;
          }
          bzero(a1, v24);
          switch(v28)
          {
            case 2:
              *(_WORD *)a1 = v27;
              break;
            case 3:
              *(_WORD *)a1 = v27;
              a1[2] = BYTE2(v27);
              break;
            case 4:
              *(_DWORD *)a1 = v27;
              break;
            default:
              *a1 = v27;
              break;
          }
        }
        else
        {
          a1[v15] = -(char)a2;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for SubscriptionStoreContentView()
{
  return __swift_instantiateGenericMetadata();
}

void sub_22EC523C8()
{
  if (!qword_268621C40)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861CDA0);
    unint64_t v0 = sub_22EE7C7E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268621C40);
    }
  }
}

uint64_t sub_22EC52424()
{
  return swift_getWitnessTable();
}

uint64_t sub_22EC52540()
{
  uint64_t v1 = OUTLINED_FUNCTION_6_22();
  v2(v1);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_12_12();
  v3();
  return v0;
}

uint64_t sub_22EC52590()
{
  uint64_t v2 = OUTLINED_FUNCTION_6_22();
  v3(v2);
  OUTLINED_FUNCTION_2_0();
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v0, v1);
  return v0;
}

uint64_t sub_22EC525E4()
{
  return sub_22EC7972C();
}

uint64_t sub_22EC52608(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861CDA0);
  MEMORY[0x270FA5388](v2 - 8);
  OUTLINED_FUNCTION_11_0();
  uint64_t v5 = v4 - v3;
  sub_22EC52800(a1, v4 - v3, &qword_26861CDA0);
  return sub_22EC79774(v5);
}

uint64_t sub_22EC52694@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_22ED22FB4();
  *a1 = result;
  return result;
}

uint64_t sub_22EC526C0()
{
  return sub_22ED22FF0();
}

uint64_t sub_22EC526EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_22EC5FF14();
  *a1 = result;
  return result;
}

uint64_t sub_22EC52718@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_22EC5FF14();
  *a1 = result;
  return result;
}

uint64_t sub_22EC52768@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_22ED22FB4();
  *a1 = result;
  return result;
}

uint64_t sub_22EC527D0()
{
  return sub_22EC7972C();
}

uint64_t sub_22EC52800(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_12_12();
  v4();
  return a2;
}

uint64_t OUTLINED_FUNCTION_2_14()
{
  return sub_22EE7D7F0();
}

uint64_t OUTLINED_FUNCTION_3_13()
{
  return sub_22EE7D800();
}

uint64_t OUTLINED_FUNCTION_6_22()
{
  return 0;
}

uint64_t sub_22EC528D0()
{
  return swift_getWitnessTable();
}

uint64_t sub_22EC52918()
{
  OUTLINED_FUNCTION_20_11();
  OUTLINED_FUNCTION_4_2();
  (*(void (**)(uint64_t, uint64_t))(v3 + 16))(v0, v1);

  return sub_22EC52988(v1, v2);
}

uint64_t sub_22EC52988(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22EE80040();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);

  return __swift_storeEnumTagSinglePayload(a1, 1, 1, a2);
}

uint64_t sub_22EC52A04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_22EE80040();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);

  return v5(a2, a1, v4);
}

uint64_t sub_22EC52A74()
{
  OUTLINED_FUNCTION_20_11();
  OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_9_7();
  __n128 v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - v4;
  (*(void (**)(char *, uint64_t, __n128))(v6 + 16))((char *)&v8 - v4, v1, v3);
  return sub_22EC52A04((uint64_t)v5, v0);
}

uint64_t sub_22EC52B0C(uint64_t a1)
{
  sub_22EC52A74();
  __n128 v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8);

  return v3(v1, a1);
}

uint64_t sub_22EC52B6C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F9E108](a1, WitnessTable);
}

uint64_t sub_22EC52BC0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270F9E128](a1, WitnessTable);
}

BOOL sub_22EC52C18(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  sub_22EE80040();
  OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_9_7();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v9 - v3;
  OUTLINED_FUNCTION_14_17();
  v5();
  BOOL v6 = __swift_getEnumTagSinglePayload((uint64_t)v4, 1, v1) != 1;
  OUTLINED_FUNCTION_9_19();
  v7();
  return v6;
}

void (*sub_22EC52CE0(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  a1[1] = *(void *)(a3 + 16);
  sub_22EE80040();
  OUTLINED_FUNCTION_0_0();
  uint64_t v6 = v5;
  uint64_t v8 = malloc(*(void *)(v7 + 64));
  a1[2] = v8;
  if (!a2)
  {
    uint64_t v9 = (uint64_t)v8;
    (*(void (**)(void))(v6 + 16))();
    OUTLINED_FUNCTION_11_17(v9);
    if (!v10) {
      return sub_22EC52E38;
    }
    __break(1u);
  }
  sub_22EE801C0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_13_18();
  *a1 = a2;
  sub_22EE80610();
  sub_22EE7FAA0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_6_23();
  uint64_t result = (void (*)(uint64_t))OUTLINED_FUNCTION_18_13();
  __break(1u);
  return result;
}

void sub_22EC52E38(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 16);
  OUTLINED_FUNCTION_4_2();
  (*(void (**)(void *))(v2 + 8))(v1);

  free(v1);
}

uint64_t sub_22EC52E94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = sub_22EE80040();
  swift_getTupleTypeMetadata2();
  OUTLINED_FUNCTION_9_7();
  MEMORY[0x270FA5388](v8);
  char v10 = (void *)((char *)v22 - v9);
  uint64_t v12 = (uint64_t)v10 + *(int *)(v11 + 56);
  *char v10 = a2;
  OUTLINED_FUNCTION_0_5();
  uint64_t v14 = v13;
  OUTLINED_FUNCTION_14_17();
  v15();
  if (__swift_getEnumTagSinglePayload(v12, 1, v6) != 1 && a2 == 0)
  {
    size_t v17 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v17(v3, v7);
    OUTLINED_FUNCTION_4_2();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v3, a1, v6);
    __swift_storeEnumTagSinglePayload(v3, 0, 1, v6);
    return ((uint64_t (*)(uint64_t, uint64_t))v17)(v12, v7);
  }
  else
  {
    uint64_t v23 = 0;
    unint64_t v24 = 0xE000000000000000;
    sub_22EE801C0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_13_18();
    uint64_t v23 = v19;
    unint64_t v24 = v20;
    v22[1] = a2;
    sub_22EE80610();
    sub_22EE7FAA0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_6_23();
    uint64_t result = OUTLINED_FUNCTION_18_13();
    __break(1u);
  }
  return result;
}

uint64_t sub_22EC5307C(uint64_t a1)
{
  BOOL v1 = __OFADD__(a1, 1);
  uint64_t result = a1 + 1;
  if (v1) {
    __break(1u);
  }
  return result;
}

uint64_t sub_22EC5308C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_22EC52E94(a1, *a2, a3);
}

void (*sub_22EC53094(void *a1, uint64_t *a2, uint64_t a3))(uint64_t *a1, char a2)
{
  uint64_t v7 = malloc(0x68uLL);
  *a1 = v7;
  v7[4] = v3;
  v7[5] = a3;
  uint64_t v8 = *(void *)(a3 + 16);
  v7[6] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = v9;
  v7[7] = v9;
  size_t v11 = *(void *)(v9 + 64);
  v7[8] = malloc(v11);
  uint64_t v12 = malloc(v11);
  uint64_t v13 = *a2;
  v7[9] = v12;
  v7[10] = v13;
  uint64_t v14 = sub_22EC52CE0(v7, v13, a3);
  unint64_t v15 = *(void (**)(void *))(v10 + 16);
  v7[11] = v15;
  v7[12] = (v10 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v15(v12);
  ((void (*)(void *, void))v14)(v7, 0);
  return sub_22EC531BC;
}

void sub_22EC531BC(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  if (a2)
  {
    uint64_t v3 = *(void **)(v2 + 72);
    uint64_t v4 = *(void *)(v2 + 80);
    uint64_t v5 = *(void **)(v2 + 64);
    uint64_t v6 = *(void *)(v2 + 40);
    (*(void (**)(void *, void *, void))(v2 + 88))(v5, v3, *(void *)(v2 + 48));
    sub_22EC52E94((uint64_t)v5, v4, v6);
    uint64_t v7 = OUTLINED_FUNCTION_12_18();
    v8(v7);
  }
  else
  {
    uint64_t v3 = *(void **)(v2 + 72);
    uint64_t v5 = *(void **)(v2 + 64);
    sub_22EC52E94((uint64_t)v3, *(void *)(v2 + 80), *(void *)(v2 + 40));
  }
  free(v3);
  free(v5);

  free((void *)v2);
}

uint64_t sub_22EC53274(uint64_t a1, long long *a2)
{
  long long v3 = *a2;
  return sub_22EC532A0(a1, (uint64_t)&v3);
}

uint64_t sub_22EC532A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22EE80780();
  swift_getWitnessTable();
  sub_22EE80600();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = sub_22EE7FF80();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a2, v5);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);

  return v6(a1, v4);
}

void (*sub_22EC533FC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t a1)
{
  uint64_t v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[4] = sub_22EC534B0(v8, a2, a3, a4);
  return sub_22EC53474;
}

void sub_22EC53474(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_19_10(a1);
  v3(v2);

  free(v1);
}

void (*sub_22EC534B0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t a1, char a2)
{
  uint64_t v9 = malloc(0x50uLL);
  *a1 = v9;
  v9[1] = a4;
  v9[2] = v4;
  *uint64_t v9 = a3;
  uint64_t v10 = sub_22EE80780();
  v9[3] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v9[4] = v11;
  size_t v12 = *(void *)(v11 + 64);
  v9[5] = malloc(v12);
  uint64_t v13 = malloc(v12);
  v9[6] = v13;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v14 = sub_22EE7FF80();
  v9[7] = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = v15;
  v9[8] = v15;
  v9[9] = malloc(*(void *)(v15 + 64));
  (*(void (**)(void))(v16 + 16))();
  sub_22EC53A00(a2, a3, a4, (uint64_t)v13);
  return sub_22EC5367C;
}

void sub_22EC5367C(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v4 = *(void *)(*(void *)a1 + 32);
  long long v3 = *(void **)(*(void *)a1 + 40);
  uint64_t v5 = *(void **)(*(void *)a1 + 72);
  uint64_t v6 = *(void **)(*(void *)a1 + 48);
  uint64_t v7 = *(void *)(*(void *)a1 + 24);
  if (a2)
  {
    (*(void (**)(void *, void *, void))(v4 + 16))(v3, v6, v2[3]);
    swift_getWitnessTable();
    sub_22EE80600();
    uint64_t v8 = *(void (**)(void *, uint64_t))(v4 + 8);
    v8(v3, v7);
    uint64_t v9 = OUTLINED_FUNCTION_10_17();
    v10(v9);
    uint64_t v11 = OUTLINED_FUNCTION_12_18();
    ((void (*)(uint64_t))v8)(v11);
  }
  else
  {
    swift_getWitnessTable();
    sub_22EE80600();
    uint64_t v12 = OUTLINED_FUNCTION_10_17();
    v13(v12);
    (*(void (**)(void *, uint64_t))(v4 + 8))(v6, v7);
  }
  free(v5);
  free(v6);
  free(v3);

  free(v2);
}

uint64_t sub_22EC537F8()
{
  return sub_22EE7F8E0();
}

uint64_t sub_22EC5387C()
{
  return sub_22EE7F8C0();
}

uint64_t sub_22EC538A0()
{
  return sub_22EE7F8B0();
}

uint64_t sub_22EC538C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_22EC52CDC();
  *a1 = result;
  return result;
}

void (*sub_22EC538EC(void *a1, uint64_t *a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = sub_22EC52CE0(v6, *a2, a3);
  return sub_22EC5395C;
}

void sub_22EC5395C(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_19_10(a1);
  v3(v2);

  free(v1);
}

uint64_t sub_22EC53998@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_22EC53A00(a1, a2, WitnessTable, a3);
}

uint64_t sub_22EC53A00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v55 = a1;
  uint64_t v52 = a4;
  uint64_t v6 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  unint64_t v47 = (char *)&v44 - v11;
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v44 - v17;
  swift_getAssociatedConformanceWitness();
  uint64_t v19 = sub_22EE7FF80();
  uint64_t v48 = *(void *)(v19 - 8);
  uint64_t v49 = v19;
  MEMORY[0x270FA5388](v19);
  unint64_t v46 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v44 - v22;
  sub_22EE7FE50();
  uint64_t v53 = v4;
  uint64_t v50 = v6;
  uint64_t v51 = a2;
  sub_22EE7FEC0();
  uint64_t result = sub_22EE7F8A0();
  if (result)
  {
    uint64_t v25 = v12;
    int v26 = v15;
    uint64_t v27 = TupleTypeMetadata2;
    int v28 = v47;
    unsigned int v29 = &v47[*(int *)(TupleTypeMetadata2 + 48)];
    unsigned int v45 = v23;
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v30(v47, v18, AssociatedTypeWitness);
    int v31 = v29;
    v30(v29, v26, AssociatedTypeWitness);
    int v32 = &v9[*(int *)(v27 + 48)];
    uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
    v33(v9, v28, AssociatedTypeWitness);
    v33(v32, v31, AssociatedTypeWitness);
    char v34 = v46;
    v30(v46, v9, AssociatedTypeWitness);
    size_t v44 = *(void (**)(char *, uint64_t))(v25 + 8);
    v44(v32, AssociatedTypeWitness);
    uint64_t v35 = &v9[*(int *)(TupleTypeMetadata2 + 48)];
    v30(v9, v28, AssociatedTypeWitness);
    v30(v35, v31, AssociatedTypeWitness);
    unsigned int v36 = (void (*)(uint64_t, char *, uint64_t))v30;
    uint64_t v37 = v49;
    v30(&v34[*(int *)(v49 + 36)], v35, AssociatedTypeWitness);
    v44(v9, AssociatedTypeWitness);
    uint64_t v38 = v48;
    uint64_t v39 = v45;
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v45, v34, v37);
    uint64_t v40 = v53;
    uint64_t v41 = v51;
    sub_22EE7FE60();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v37);
    uint64_t v42 = sub_22EE80780();
    uint64_t v43 = v52;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 16))(v52 + *(int *)(v42 + 40), v40, v41);
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v39, v55, v37);
    v36(v43, v39, AssociatedTypeWitness);
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v36)(v43 + *(int *)(v42 + 36), &v39[*(int *)(v37 + 36)], AssociatedTypeWitness);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_22EC53EE8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v3 = MEMORY[0x263F8D708];

  return MEMORY[0x270F9E070](a1, WitnessTable, v3);
}

void sub_22EC53F58(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

uint64_t sub_22EC53F74@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_22EC5307C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_22EC53FA0(uint64_t *a1)
{
  uint64_t result = sub_22EC5307C(*a1);
  *a1 = result;
  return result;
}

uint64_t sub_22EC53FCC(uint64_t a1)
{
  BOOL v1 = __OFSUB__(a1, 1);
  uint64_t result = a1 - 1;
  if (v1) {
    __break(1u);
  }
  return result;
}

uint64_t sub_22EC53FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270F9E068](a1, a2, a3, a4, MEMORY[0x263F8D708]);
}

uint64_t sub_22EC53FEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270F9E078](a1, a2, a3, a4, MEMORY[0x263F8D708]);
}

uint64_t sub_22EC53FF8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_22EC53FCC(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_22EC54024(uint64_t *a1)
{
  uint64_t result = sub_22EC53FCC(*a1);
  *a1 = result;
  return result;
}

BOOL sub_22EC54050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v33[1] = a4;
  uint64_t v36 = a1;
  uint64_t v37 = a2;
  OUTLINED_FUNCTION_0_0();
  uint64_t v35 = v5;
  MEMORY[0x270FA5388](v6);
  v33[0] = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22EE80040();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  OUTLINED_FUNCTION_0_0();
  uint64_t v34 = v9;
  OUTLINED_FUNCTION_9_7();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v33 - v11;
  OUTLINED_FUNCTION_0_0();
  uint64_t v14 = v13;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  MEMORY[0x270FA5388](v19);
  uint64_t v20 = *(void (**)(void))(v14 + 16);
  OUTLINED_FUNCTION_5_17();
  v20();
  OUTLINED_FUNCTION_5_17();
  v20();
  uint64_t v37 = TupleTypeMetadata2;
  uint64_t v21 = (uint64_t)&v12[*(int *)(TupleTypeMetadata2 + 48)];
  OUTLINED_FUNCTION_5_17();
  v20();
  OUTLINED_FUNCTION_5_17();
  v20();
  OUTLINED_FUNCTION_11_17((uint64_t)v12);
  if (v22)
  {
    uint64_t v23 = *(void (**)(void))(v14 + 8);
    OUTLINED_FUNCTION_11_14();
    v23();
    OUTLINED_FUNCTION_11_14();
    v23();
    OUTLINED_FUNCTION_11_17(v21);
    if (!v22) {
      goto LABEL_8;
    }
    OUTLINED_FUNCTION_11_14();
    v23();
    return 1;
  }
  OUTLINED_FUNCTION_5_17();
  v20();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v21, 1, a3);
  uint64_t v25 = v35;
  int v26 = (void (**)(char *, uint64_t))(v35 + 8);
  if (EnumTagSinglePayload != 1)
  {
    int v28 = *(void (**)(void, uint64_t, uint64_t))(v35 + 32);
    uint64_t v36 = v35 + 8;
    uint64_t v29 = v33[0];
    v28(v33[0], v21, a3);
    LODWORD(v37) = sub_22EE7F900();
    uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    v30(v29, a3);
    int v31 = *(void (**)(void))(v14 + 8);
    OUTLINED_FUNCTION_11_14();
    v31();
    OUTLINED_FUNCTION_11_14();
    v31();
    v30((uint64_t)v17, a3);
    OUTLINED_FUNCTION_11_14();
    v31();
    return (v37 & 1) != 0;
  }
  uint64_t v27 = *(void (**)(void))(v14 + 8);
  OUTLINED_FUNCTION_11_14();
  v27();
  OUTLINED_FUNCTION_11_14();
  v27();
  (*v26)(v17, a3);
LABEL_8:
  (*(void (**)(char *, uint64_t))(v34 + 8))(v12, v37);
  return 0;
}

uint64_t sub_22EC543A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_22EE80040();

  return MEMORY[0x270F9E3D0](a1, v5, a3);
}

uint64_t sub_22EC543F8(uint64_t a1, uint64_t a2)
{
  sub_22EE807B0();
  sub_22EC543A4((uint64_t)v5, a1, a2);
  return sub_22EE807F0();
}

uint64_t sub_22EC54450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D708];

  return MEMORY[0x270F9E068](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_22EC544D4()
{
  swift_getWitnessTable();

  return sub_22EE7FE10();
}

uint64_t sub_22EC54558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D708];

  return MEMORY[0x270F9E078](a1, a2, a3, WitnessTable, v7);
}

BOOL sub_22EC545CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22EC54050(a1, a2, *(void *)(a3 + 16), *(void *)(a4 - 8));
}

uint64_t sub_22EC545D8(uint64_t a1, uint64_t a2)
{
  return sub_22EC543F8(a1, *(void *)(a2 - 8));
}

uint64_t sub_22EC545E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22EC543A4(a1, a2, *(void *)(a3 - 8));
}

uint64_t sub_22EC545E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 - 8);
  sub_22EE807B0();
  sub_22EC543A4((uint64_t)v6, a2, v4);
  return sub_22EE807F0();
}

uint64_t sub_22EC5463C()
{
  return swift_getWitnessTable();
}

uint64_t sub_22EC54658()
{
  return sub_22EC547F8();
}

unint64_t sub_22EC54670()
{
  unint64_t result = qword_268621C48[0];
  if (!qword_268621C48[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_268621C48);
  }
  return result;
}

uint64_t sub_22EC546BC()
{
  return swift_getWitnessTable();
}

uint64_t sub_22EC54720()
{
  return swift_getWitnessTable();
}

uint64_t sub_22EC5473C()
{
  return sub_22EC547F8();
}

uint64_t sub_22EC54754()
{
  return swift_getWitnessTable();
}

uint64_t sub_22EC547B8()
{
  return swift_getWitnessTable();
}

uint64_t sub_22EC547D4()
{
  return MEMORY[0x263F8D6E0];
}

uint64_t sub_22EC547E0()
{
  return sub_22EC547F8();
}

uint64_t sub_22EC547F8()
{
  return swift_getWitnessTable();
}

uint64_t sub_22EC54844()
{
  return swift_getWitnessTable();
}

uint64_t sub_22EC54860()
{
  return swift_getWitnessTable();
}

uint64_t sub_22EC548C4()
{
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for CollectionOfZeroOrOne.Iterator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_22EC5491C()
{
  uint64_t result = sub_22EE80040();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_22EC549AC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  OUTLINED_FUNCTION_0_0();
  uint64_t v8 = v7;
  if (*(_DWORD *)(v7 + 84)) {
    size_t v9 = *(void *)(v6 + 64);
  }
  else {
    size_t v9 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v10 = *(_DWORD *)(v7 + 80);
  if (v10 > 7 || (*(_DWORD *)(v7 + 80) & 0x100000) != 0 || v9 > 0x18)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v10 + 16) & ~v10));
    swift_retain();
  }
  else if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5))
  {
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v5);
    OUTLINED_FUNCTION_53_0();
  }
  return a1;
}

uint64_t sub_22EC54A94(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = __swift_getEnumTagSinglePayload(a1, 1, v3);
  if (!result)
  {
    OUTLINED_FUNCTION_4_2();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v6(a1, v3);
  }
  return result;
}

uint64_t sub_22EC54B0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_getEnumTagSinglePayload(a2, 1, *(void *)(a3 + 16));
  OUTLINED_FUNCTION_0_5();
  if (v5)
  {
    OUTLINED_FUNCTION_8_21(v4);
  }
  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_16_15();
    v7(v6);
    OUTLINED_FUNCTION_53_0();
  }
  return a1;
}

void *sub_22EC54B7C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v5);
  __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5);
  OUTLINED_FUNCTION_0_5();
  if (EnumTagSinglePayload)
  {
    if (!v7)
    {
      uint64_t v14 = OUTLINED_FUNCTION_3_14();
      v15(v14);
      OUTLINED_FUNCTION_5_16();
      return a1;
    }
    int v9 = *(_DWORD *)(v8 + 84);
    size_t v10 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v7)
    {
      uint64_t v16 = OUTLINED_FUNCTION_3_14();
      v17(v16);
      return a1;
    }
    uint64_t v11 = v8 + 8;
    OUTLINED_FUNCTION_9_19();
    v12();
    int v9 = *(_DWORD *)(v11 + 76);
    size_t v10 = *(void *)(v11 + 56);
  }
  if (v9) {
    size_t v13 = v10;
  }
  else {
    size_t v13 = v10 + 1;
  }
  memcpy(a1, a2, v13);
  return a1;
}

uint64_t sub_22EC54C54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_getEnumTagSinglePayload(a2, 1, *(void *)(a3 + 16));
  OUTLINED_FUNCTION_0_5();
  if (v5)
  {
    OUTLINED_FUNCTION_8_21(v4);
  }
  else
  {
    uint64_t v6 = OUTLINED_FUNCTION_16_15();
    v7(v6);
    OUTLINED_FUNCTION_53_0();
  }
  return a1;
}

void *sub_22EC54CC4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v5);
  __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5);
  OUTLINED_FUNCTION_0_5();
  if (EnumTagSinglePayload)
  {
    if (!v7)
    {
      uint64_t v14 = OUTLINED_FUNCTION_3_14();
      v15(v14);
      OUTLINED_FUNCTION_5_16();
      return a1;
    }
    int v9 = *(_DWORD *)(v8 + 84);
    size_t v10 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v7)
    {
      uint64_t v16 = OUTLINED_FUNCTION_3_14();
      v17(v16);
      return a1;
    }
    uint64_t v11 = v8 + 8;
    OUTLINED_FUNCTION_9_19();
    v12();
    int v9 = *(_DWORD *)(v11 + 76);
    size_t v10 = *(void *)(v11 + 56);
  }
  if (v9) {
    size_t v13 = v10;
  }
  else {
    size_t v13 = v10 + 1;
  }
  memcpy(a1, a2, v13);
  return a1;
}

uint64_t sub_22EC54D9C()
{
  OUTLINED_FUNCTION_4_23();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = *(unsigned int *)(v4 + 84);
  unsigned int v8 = v7 - 1;
  if (!v7) {
    unsigned int v8 = 0;
  }
  uint64_t v9 = *(void *)(v6 + 64);
  if (!v7) {
    ++v9;
  }
  if (!v2) {
    return 0;
  }
  unsigned int v10 = v2 - v8;
  if (v2 > v8)
  {
    char v11 = 8 * v9;
    if (v9 > 3) {
      goto LABEL_8;
    }
    unsigned int v13 = ((v10 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v13))
    {
      int v12 = *(_DWORD *)((char *)v0 + v9);
      if (v12) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v13 <= 0xFF)
      {
        if (v13 < 2) {
          goto LABEL_23;
        }
LABEL_8:
        int v12 = *((unsigned __int8 *)v0 + v9);
        if (!*((unsigned char *)v0 + v9)) {
          goto LABEL_23;
        }
LABEL_15:
        int v14 = (v12 - 1) << v11;
        if (v9 > 3) {
          int v14 = 0;
        }
        if (v9)
        {
          if (v9 > 3) {
            LODWORD(v9) = 4;
          }
          switch((int)v9)
          {
            case 2:
              LODWORD(v9) = *v0;
              break;
            case 3:
              LODWORD(v9) = *v0 | (*((unsigned __int8 *)v0 + 2) << 16);
              break;
            case 4:
              LODWORD(v9) = *(_DWORD *)v0;
              break;
            default:
              LODWORD(v9) = *(unsigned __int8 *)v0;
              break;
          }
        }
        return v8 + (v9 | v14) + 1;
      }
      int v12 = *(unsigned __int16 *)((char *)v0 + v9);
      if (*(unsigned __int16 *)((char *)v0 + v9)) {
        goto LABEL_15;
      }
    }
  }
LABEL_23:
  if (v7 < 2) {
    return 0;
  }
  unsigned int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v0, v7, v1);
  if (EnumTagSinglePayload >= 2) {
    return EnumTagSinglePayload - 1;
  }
  else {
    return 0;
  }
}

void sub_22EC54EFC(unsigned char *a1)
{
  int v2 = 0;
  OUTLINED_FUNCTION_4_23();
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8) {
    unsigned int v9 = v8 - 1;
  }
  else {
    unsigned int v9 = 0;
  }
  if (v8) {
    size_t v10 = *(void *)(v6 + 64);
  }
  else {
    size_t v10 = *(void *)(v6 + 64) + 1;
  }
  char v11 = 8 * v10;
  BOOL v12 = v5 >= v9;
  unsigned int v13 = v5 - v9;
  if (v13 != 0 && v12)
  {
    if (v10 <= 3)
    {
      unsigned int v14 = ((v13 + ~(-1 << v11)) >> v11) + 1;
      if (HIWORD(v14))
      {
        int v2 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v2 = 2;
      }
      else
      {
        int v2 = v14 > 1;
      }
    }
    else
    {
      int v2 = 1;
    }
  }
  if (v9 < v3)
  {
    unsigned int v15 = ~v9 + v3;
    if (v10 < 4)
    {
      int v16 = (v15 >> v11) + 1;
      if (v10)
      {
        int v17 = v15 & ~(-1 << v11);
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v15;
      int v16 = 1;
    }
    switch(v2)
    {
      case 1:
        a1[v10] = v16;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v16;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v10] = v16;
        return;
      default:
        return;
    }
  }
  switch(v2)
  {
    case 1:
      a1[v10] = 0;
      if (!v3) {
        return;
      }
      goto LABEL_28;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!v3) {
        return;
      }
      goto LABEL_28;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x22EC550F8);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_27;
    default:
LABEL_27:
      if (v3)
      {
LABEL_28:
        if (v8 >= 2)
        {
          uint64_t v18 = v3 + 1;
          __swift_storeEnumTagSinglePayload((uint64_t)a1, v18, v8, v4);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for CollectionOfZeroOrOne()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t OUTLINED_FUNCTION_3_14()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_6_23()
{
  return sub_22EE7FAA0();
}

void *OUTLINED_FUNCTION_8_21@<X0>(uint64_t a1@<X8>)
{
  int v4 = *(_DWORD *)(a1 + 84);
  size_t v5 = *(void *)(a1 + 64);
  if (v4) {
    size_t v6 = v5;
  }
  else {
    size_t v6 = v5 + 1;
  }
  return memcpy(v1, v2, v6);
}

uint64_t OUTLINED_FUNCTION_10_17()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_11_17(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_12_18()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_16_15()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_18_13()
{
  return sub_22EE803B0();
}

uint64_t OUTLINED_FUNCTION_19_10(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t OUTLINED_FUNCTION_20_11()
{
  return sub_22EE80040();
}

uint64_t getEnumTagSinglePayload for TotalLineLimitLayout(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TotalLineLimitLayout(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 49) = v3;
  return result;
}

ValueMetadata *type metadata accessor for TotalLineLimitLayout()
{
  return &type metadata for TotalLineLimitLayout;
}

uint64_t sub_22EC55358(uint64_t a1, char a2, double *a3, char a4)
{
  sub_22EE7CB20();
  OUTLINED_FUNCTION_0_2();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_9_1();
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_9_5();
  type metadata accessor for TotalLineLimitLayout.TextSubview();
  OUTLINED_FUNCTION_0_2();
  uint64_t v46 = v8;
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_18_0();
  uint64_t v45 = v9;
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_9_5();
  uint64_t v43 = v11;
  sub_22EE7CC60();
  sub_22EC577C0((unint64_t *)&qword_26861E230);
  uint64_t v12 = sub_22EE7FE70();
  uint64_t v13 = MEMORY[0x263F8EE78];
  if (v12)
  {
    uint64_t v14 = v12;
    uint64_t v52 = MEMORY[0x263F8EE78];
    sub_22EC622D0();
    uint64_t result = sub_22EE7FE50();
    if (v14 < 0)
    {
      __break(1u);
      return result;
    }
    int v16 = (void (**)(void))(v5 + 16);
    size_t v44 = (void (**)(void))(v5 + 8);
    uint64_t v17 = v43;
    do
    {
      uint64_t v18 = (void (*)(char *, void))sub_22EE7FF70();
      uint64_t v19 = *v16;
      OUTLINED_FUNCTION_4_24();
      v19();
      v18(v51, 0);
      OUTLINED_FUNCTION_4_24();
      v19();
      OUTLINED_FUNCTION_4_24();
      v19();
      sub_22EE7CFA0();
      v51[0] = v20 & 1;
      sub_22EE7CAE0();
      uint64_t v21 = (void *)(v45 + *(int *)(v46 + 20));
      *uint64_t v21 = v22;
      v21[1] = v23;
      v51[0] = a2 & 1;
      sub_22EE7CAE0();
      uint64_t v25 = v24;
      uint64_t v27 = v26;
      int v28 = *v44;
      OUTLINED_FUNCTION_7_20();
      v28();
      uint64_t v29 = (void *)(v45 + *(int *)(v46 + 24));
      *uint64_t v29 = v25;
      v29[1] = v27;
      sub_22EC5775C(v45, v17);
      OUTLINED_FUNCTION_7_20();
      v28();
      uint64_t v13 = v52;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22EC622D0();
        uint64_t v17 = v43;
        uint64_t v13 = v52;
      }
      unint64_t v30 = *(void *)(v13 + 16);
      if (v30 >= *(void *)(v13 + 24) >> 1)
      {
        sub_22EC622D0();
        uint64_t v17 = v43;
        uint64_t v13 = v52;
      }
      *(void *)(v13 + 16) = v30 + 1;
      OUTLINED_FUNCTION_5_18();
      sub_22EC5775C(v17, v31 + v32 * v30);
      sub_22EE7FED0();
      --v14;
    }
    while (v14);
  }
  v51[0] = a2 & 1;
  LOBYTE(v52) = a4 & 1;
  sub_22EC5578C(v13, a1, a2 & 1, a3, a4 & 1);
  uint64_t v34 = v33;
  swift_bridgeObjectRelease();
  uint64_t v35 = *(void *)(v34 + 16);
  if (v35)
  {
    uint64_t v36 = (double *)(v34 + 56);
    double v37 = 0.0;
    double v38 = 0.0;
    do
    {
      double v39 = *(v36 - 2);
      double v40 = *(v36 - 1);
      double v41 = *v36;
      v36 += 4;
      double v42 = v41;
      if (v38 <= v39) {
        double v38 = v39;
      }
      double v37 = v37 + v40 + v42;
      --v35;
    }
    while (v35);
  }
  return swift_bridgeObjectRelease();
}

void sub_22EC5578C(uint64_t a1, uint64_t a2, int a3, double *a4, char a5)
{
  uint64_t v133 = a4;
  int v127 = a3;
  uint64_t v126 = a2;
  uint64_t v117 = sub_22EE7CB20();
  unsigned int v114 = *(void (***)(char *, uint64_t))(v117 - 8);
  MEMORY[0x270FA5388](v117);
  uint64_t v116 = (char *)&v113 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = type metadata accessor for TotalLineLimitLayout.TextSubview();
  uint64_t v123 = *(void *)(v129 - 8);
  MEMORY[0x270FA5388](v129);
  uint64_t v118 = (char *)&v113 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v113 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621D80);
  MEMORY[0x270FA5388](v13);
  uint64_t v122 = (char *)&v113 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621D88);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v120 = (unint64_t *)((char *)&v113 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (unint64_t *)((char *)&v113 - v18);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (unint64_t *)((char *)&v113 - v21);
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (unint64_t *)((char *)&v113 - v24);
  uint64_t v26 = swift_allocObject();
  unint64_t v130 = *(void *)(a1 + 16);
  uint64_t v27 = sub_22EC56F60(0, v130, 0.0, 0.0, 0.0);
  uint64_t v128 = v26;
  *(void *)(v26 + 16) = v27;
  int v28 = (uint64_t *)(v26 + 16);
  double v135 = 0.0;
  uint64_t v29 = swift_allocObject();
  uint64_t v30 = 0x7FF0000000000000;
  if ((a5 & 1) == 0) {
    uint64_t v30 = (uint64_t)v133;
  }
  uint64_t v119 = v29;
  *(void *)(v29 + 16) = v30;
  uint64_t v31 = (double *)(v29 + 16);
  uint64_t v32 = swift_allocObject();
  size_t v124 = v5;
  uint64_t v33 = *(void *)v5;
  uint64_t v125 = v32;
  *(void *)(v32 + 16) = v33;
  uint64_t v34 = (uint64_t *)(v32 + 16);
  uint64_t v131 = a1;
  swift_bridgeObjectRetain();
  unsigned int v132 = v34;
  swift_beginAccess();
  uint64_t v133 = v31;
  swift_beginAccess();
  swift_beginAccess();
  swift_beginAccess();
  unint64_t v35 = 0;
  unint64_t v121 = v12 + 8;
  while (1)
  {
    if (v35 == v130)
    {
      uint64_t v36 = 1;
      unint64_t v35 = v130;
    }
    else
    {
      if (v35 >= v130) {
        goto LABEL_99;
      }
      uint64_t v37 = (uint64_t)&v122[*(int *)(v13 + 48)];
      sub_22EC578AC(v131+ ((*(unsigned __int8 *)(v123 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80))+ *(void *)(v123 + 72) * v35, v37);
      uint64_t v38 = (uint64_t)v22 + *(int *)(v13 + 48);
      *uint64_t v22 = v35;
      sub_22EC5775C(v37, v38);
      uint64_t v36 = 0;
      ++v35;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v22, v36, 1, v13);
    sub_22EAD43D0((uint64_t)v22, (uint64_t)v25, &qword_268621D88);
    int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v25, 1, v13);
    uint64_t v40 = v128;
    if (EnumTagSinglePayload == 1) {
      break;
    }
    unint64_t v41 = *v25;
    sub_22EC5775C((uint64_t)v25 + *(int *)(v13 + 48), (uint64_t)v12);
    if (*v132 < 1 || (double v42 = *v133, *v133 <= 0.0))
    {
LABEL_23:
      sub_22EC57924((uint64_t)v12);
      break;
    }
    uint64_t v43 = (uint64_t)v124;
    sub_22EC57038(v41, v131, (uint64_t)v124);
    double v45 = v44;
    double v46 = v44 + *(double *)&v121[*(int *)(v129 + 20)];
    if (v42 < v46)
    {
      double v47 = v46 - v42;
      if (v47 >= *(double *)(v43 + 16) - v135) {
        goto LABEL_23;
      }
      double v135 = v47 + v135;
      double v42 = v42 + v47;
      *uint64_t v133 = v42;
    }
    sub_22EC5731C(v41, 1, v40, v125);
    char v134 = v127 & 1;
    LOBYTE(v140) = 0;
    sub_22EE7CAE0();
    if ((v41 & 0x8000000000000000) != 0) {
      goto LABEL_94;
    }
    uint64_t v50 = *(void *)(v40 + 16);
    if (v41 >= *(void *)(v50 + 16)) {
      goto LABEL_95;
    }
    uint64_t v51 = v48;
    double v52 = v49;
    double v53 = *(double *)(v50 + 32 * v41 + 48);
    swift_beginAccess();
    uint64_t v54 = *v28;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_22EC57910(v54);
      uint64_t v54 = v58;
    }
    if (v41 >= *(void *)(v54 + 16)) {
      goto LABEL_96;
    }
    unint64_t v55 = v54 + 32 * v41;
    *(void *)(v55 + 40) = v51;
    *(double *)(v55 + 48) = v52;
    *int v28 = v54;
    double v56 = v42 - (v52 - v53);
    *uint64_t v133 = v56;
    double v57 = *(double *)(v55 + 56);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_22EC57910(v54);
      uint64_t v54 = v59;
    }
    if (v41 >= *(void *)(v54 + 16)) {
      goto LABEL_97;
    }
    *(double *)(v54 + 32 * v41 + 56) = v45;
    *int v28 = v54;
    swift_endAccess();
    *uint64_t v133 = v56 - (v45 - v57);
    sub_22EC57924((uint64_t)v12);
  }
  swift_bridgeObjectRelease();
  uint64_t v60 = (uint64_t)v118;
  unint64_t v121 = v118 + 8;
  unsigned int v115 = (void (**)(char *, char *, uint64_t))(v114 + 2);
  ++v114;
  swift_bridgeObjectRetain();
  unint64_t v61 = 0;
  uint64_t v62 = v120;
  while (1)
  {
    if (v61 == v130)
    {
      uint64_t v63 = 1;
      unint64_t v61 = v130;
    }
    else
    {
      if (v61 >= v130) {
        goto LABEL_98;
      }
      uint64_t v64 = (uint64_t)&v122[*(int *)(v13 + 48)];
      sub_22EC578AC(v131+ ((*(unsigned __int8 *)(v123 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80))+ *(void *)(v123 + 72) * v61, v64);
      uint64_t v65 = (uint64_t)v62 + *(int *)(v13 + 48);
      *uint64_t v62 = v61;
      sub_22EC5775C(v64, v65);
      uint64_t v63 = 0;
      ++v61;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v62, v63, 1, v13);
    sub_22EAD43D0((uint64_t)v62, (uint64_t)v19, &qword_268621D88);
    if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v13) == 1) {
      break;
    }
    unint64_t v66 = *v19;
    sub_22EC5775C((uint64_t)v19 + *(int *)(v13 + 48), v60);
    unint64_t v67 = *v132;
    if (*v132 < 1 || (double v68 = *v133, *v133 <= 0.0))
    {
      sub_22EC57924(v60);
      break;
    }
    uint64_t v69 = (double *)(v60 + *(int *)(v129 + 24));
    double v70 = v69[1];
    double v71 = *(double *)&v121[*(int *)(v129 + 20)];
    double v72 = round(v70 / v71);
    if ((~*(void *)&v72 & 0x7FF0000000000000) == 0)
    {
      __break(1u);
LABEL_88:
      __break(1u);
LABEL_89:
      __break(1u);
LABEL_90:
      __break(1u);
LABEL_91:
      __break(1u);
LABEL_92:
      __break(1u);
      goto LABEL_93;
    }
    if (v72 <= -9.22337204e18) {
      goto LABEL_88;
    }
    if (v72 >= 9.22337204e18) {
      goto LABEL_89;
    }
    if ((v66 & 0x8000000000000000) != 0) {
      goto LABEL_90;
    }
    uint64_t v73 = *v28;
    if (v66 >= *(void *)(*v28 + 16)) {
      goto LABEL_91;
    }
    uint64_t v74 = *(void *)(v73 + 32 + 32 * v66);
    uint64_t v75 = (uint64_t)v72 - v74;
    if (__OFSUB__((uint64_t)v72, v74)) {
      goto LABEL_92;
    }
    if (v75 >= 1)
    {
      uint64_t v76 = v73 + 32 + 32 * v66;
      double v78 = *(double *)(v76 + 16);
      unsigned int v77 = (double *)(v76 + 16);
      if (v70 <= v68 + v78)
      {
        if (v67 >= v75)
        {
          uint64_t v96 = v128;
          sub_22EC5731C(v66, (uint64_t)v72, v128, v125);
          sub_22EC57444(v66, v96, v119, *v69, v70);
        }
        else
        {
          swift_beginAccess();
          uint64_t v88 = *v28;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_22EC57910(v88);
            uint64_t v88 = v97;
          }
          if (v66 >= *(void *)(v88 + 16)) {
            goto LABEL_104;
          }
          uint64_t v89 = (void *)(v88 + 32 + 32 * v66);
          if (__OFADD__(*v89, v67)) {
            goto LABEL_105;
          }
          *v89 += v67;
          *int v28 = v88;
          swift_endAccess();
          *unsigned int v132 = 0;
          int v90 = v116;
          uint64_t v91 = v117;
          (*v115)(v116, v118, v117);
          if (v66 >= *(void *)(v88 + 16)) {
            goto LABEL_106;
          }
          char v134 = v127 & 1;
          LOBYTE(v140) = 0;
          sub_22EE7CAE0();
          double v93 = v92;
          double v95 = v94;
          (*v114)(v90, v91);
          sub_22EC57444(v66, v128, v119, v93, v95);
          uint64_t v60 = (uint64_t)v118;
        }
        uint64_t v62 = v120;
      }
      else
      {
        double v79 = v135;
        if (v124[2] - v135 > 0.0) {
          double v80 = v124[2] - v135;
        }
        else {
          double v80 = 0.0;
        }
        char v134 = v127 & 1;
        LOBYTE(v140) = 0;
        sub_22EE7CAE0();
        if (v66 >= *(void *)(v73 + 16)) {
          goto LABEL_100;
        }
        double v83 = v82;
        double v84 = v68 + *v77;
        uint64_t v62 = v120;
        if (v83 <= v80 + v84 + 0.5)
        {
          if (v84 < v83)
          {
            double v85 = v83 - v84;
            double v135 = v79 + v85;
            *uint64_t v133 = v68 + v85;
          }
          uint64_t v86 = v128;
          sub_22EC57444(v66, v128, v119, v81, v83);
          double v87 = round(v83 / v71);
          if ((~*(void *)&v87 & 0x7FF0000000000000) == 0) {
            goto LABEL_101;
          }
          if (v87 <= -9.22337204e18) {
            goto LABEL_102;
          }
          if (v87 >= 9.22337204e18) {
            goto LABEL_103;
          }
          sub_22EC5731C(v66, (uint64_t)v87, v86, v125);
        }
      }
    }
    sub_22EC57924(v60);
  }
  swift_bridgeObjectRelease();
  double v98 = *v133;
  uint64_t v99 = *v28;
  if (*v133 <= 0.0 || v135 != 0.0 || (uint64_t v100 = *(void *)(v99 + 16), v101 = (uint64_t)v124, !v100))
  {
LABEL_78:
    swift_bridgeObjectRetain();
    swift_release();
    swift_release();
    swift_release();
    return;
  }
  uint64_t v102 = 0;
  uint64_t v103 = 32;
  uint64_t v104 = *(void *)(v99 + 16);
  while (1)
  {
    uint64_t v105 = *(void *)(v99 + v103);
    if (v105 >= 1) {
      uint64_t v105 = 1;
    }
    BOOL v106 = __OFADD__(v102, v105);
    v102 += v105;
    if (v106) {
      break;
    }
    v103 += 32;
    if (!--v104)
    {
      uint64_t v107 = v102 - 1;
      if (v102 <= 1) {
        goto LABEL_78;
      }
      sub_22EAD43D0((uint64_t)(v124 + 3), (uint64_t)v137, qword_26861DCC0);
      sub_22EAD43D0((uint64_t)v137, (uint64_t)&v138, qword_26861DCC0);
      if (v139) {
        goto LABEL_78;
      }
      double v108 = v138;
      sub_22EAD43D0(v101 + 40, (uint64_t)v136, qword_26861DCC0);
      sub_22EAD43D0((uint64_t)v136, (uint64_t)&v140, qword_26861DCC0);
      if ((v141 & 1) != 0 || v108 >= v140) {
        goto LABEL_78;
      }
      double v109 = v140 - v108 >= v98 / (double)v107 ? v98 / (double)v107 : v140 - v108;
      if (v100 == 1) {
        goto LABEL_78;
      }
      uint64_t v110 = 0;
      unint64_t v111 = 1;
      while (v111 < *(void *)(v99 + 16))
      {
        if (!*(void *)(v99 + v110 + 64)) {
          goto LABEL_78;
        }
        swift_beginAccess();
        uint64_t v99 = *v28;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_22EC57910(v99);
          uint64_t v99 = v112;
        }
        if (v111 >= *(void *)(v99 + 16)) {
          goto LABEL_108;
        }
        ++v111;
        *(double *)(v99 + v110 + 88) = v109 + *(double *)(v99 + v110 + 88);
        *int v28 = v99;
        swift_endAccess();
        double v98 = v98 - v109;
        *uint64_t v133 = v98;
        v110 += 32;
        if (v100 == v111) {
          goto LABEL_78;
        }
      }
      goto LABEL_107;
    }
  }
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
LABEL_96:
  __break(1u);
LABEL_97:
  __break(1u);
LABEL_98:
  __break(1u);
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
LABEL_105:
  __break(1u);
LABEL_106:
  __break(1u);
LABEL_107:
  __break(1u);
LABEL_108:
  __break(1u);
}

uint64_t sub_22EC56514(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(void, void, void))
{
  uint64_t v14 = sub_22EE7CDE0();
  OUTLINED_FUNCTION_0_2();
  uint64_t v102 = v15;
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_9_1();
  uint64_t v19 = v17 - v18;
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v101 - v21;
  uint64_t v23 = sub_22EE7CB20();
  OUTLINED_FUNCTION_0_2();
  uint64_t v25 = v24;
  MEMORY[0x270FA5388](v26);
  OUTLINED_FUNCTION_9_1();
  uint64_t v29 = v27 - v28;
  MEMORY[0x270FA5388](v30);
  uint64_t v119 = (char *)&v101 - v31;
  MEMORY[0x270FA5388](v32);
  OUTLINED_FUNCTION_9_5();
  uint64_t v123 = v33;
  uint64_t v122 = type metadata accessor for TotalLineLimitLayout.TextSubview();
  OUTLINED_FUNCTION_0_2();
  uint64_t v121 = v34;
  MEMORY[0x270FA5388](v35);
  OUTLINED_FUNCTION_18_0();
  uint64_t v120 = v36;
  MEMORY[0x270FA5388](v37);
  OUTLINED_FUNCTION_9_5();
  OUTLINED_FUNCTION_6_4(v38);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621D58);
  MEMORY[0x270FA5388](v39 - 8);
  OUTLINED_FUNCTION_3_2();
  uint64_t v113 = v40;
  *(double *)&uint64_t v41 = COERCE_DOUBLE(sub_22EE7CC60());
  OUTLINED_FUNCTION_0_2();
  uint64_t v105 = v42;
  MEMORY[0x270FA5388](v43);
  OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_6_4(v44);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621D60);
  MEMORY[0x270FA5388](v45 - 8);
  OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_6_4(v46);
  uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621D68);
  MEMORY[0x270FA5388](v104);
  OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_6_4(v47);
  uint64_t v48 = sub_22EC577C0((unint64_t *)&qword_26861E230);
  uint64_t v49 = sub_22EE7FE70();
  double v128 = *(double *)&v41;
  uint64_t v110 = v14;
  uint64_t v109 = v19;
  double v108 = v22;
  uint64_t v116 = v25;
  uint64_t v107 = v29;
  if (v49)
  {
    uint64_t v50 = v49;
    uint64_t v131 = MEMORY[0x263F8EE78];
    sub_22EC622D0();
    int v127 = a9;
    uint64_t result = sub_22EE7FE50();
    if (v50 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v126 = (void (**)(uint64_t, char *, uint64_t))v23;
    CGFloat v124 = a4;
    CGFloat v125 = a3;
    double v52 = (void (**)(void))(v116 + 16);
    uint64_t v117 = (void (**)(void))(v116 + 8);
    uint64_t v53 = v111;
    uint64_t v118 = v48;
    uint64_t v54 = v120;
    do
    {
      unint64_t v55 = (void (*)(char *, void))sub_22EE7FF70();
      double v56 = *v52;
      OUTLINED_FUNCTION_2_15();
      v56();
      v55(v130, 0);
      OUTLINED_FUNCTION_2_15();
      v56();
      OUTLINED_FUNCTION_2_15();
      v56();
      sub_22EE7CFA0();
      v130[0] = v57 & 1;
      char v129 = v58 & 1;
      sub_22EE7CAE0();
      uint64_t v59 = v122;
      uint64_t v60 = (void *)(v54 + *(int *)(v122 + 20));
      *uint64_t v60 = v61;
      v60[1] = v62;
      v130[0] = 0;
      char v129 = 0;
      sub_22EE7CAE0();
      uint64_t v64 = v63;
      uint64_t v66 = v65;
      unint64_t v67 = *v117;
      OUTLINED_FUNCTION_7_20();
      v67();
      double v68 = (void *)(v54 + *(int *)(v59 + 24));
      *double v68 = v64;
      v68[1] = v66;
      sub_22EC5775C(v54, v53);
      OUTLINED_FUNCTION_7_20();
      v67();
      uint64_t v69 = v131;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22EC622D0();
        uint64_t v53 = v111;
        uint64_t v69 = v131;
      }
      unint64_t v70 = *(void *)(v69 + 16);
      if (v70 >= *(void *)(v69 + 24) >> 1)
      {
        sub_22EC622D0();
        uint64_t v53 = v111;
        uint64_t v69 = v131;
      }
      *(void *)(v69 + 16) = v70 + 1;
      OUTLINED_FUNCTION_5_18();
      sub_22EC5775C(v53, v71 + v72 * v70);
      uint64_t v73 = v127;
      sub_22EE7FED0();
      --v50;
    }
    while (v50);
    uint64_t v74 = v115;
    uint64_t v75 = *(void *)&v125;
    uint64_t v23 = (uint64_t)v126;
    CGFloat v76 = v124;
  }
  else
  {
    uint64_t v75 = *(void *)&a3;
    CGFloat v76 = a4;
    uint64_t v69 = MEMORY[0x263F8EE78];
    uint64_t v74 = v115;
    uint64_t v73 = a9;
  }
  v130[0] = 0;
  LOBYTE(v131) = 0;
  uint64_t v77 = v114;
  sub_22EC5578C(v69, v75, 0, *(double **)&v76, 0);
  uint64_t v79 = v78;
  double v81 = v80;
  swift_bridgeObjectRelease();
  uint64_t v82 = v105;
  uint64_t v83 = v103;
  double v84 = v128;
  (*(void (**)(uint64_t, void (*)(void, void, void), double))(v105 + 16))(v103, v73, COERCE_DOUBLE(*(void *)&v128));
  (*(void (**)(uint64_t, uint64_t, double))(v82 + 32))(v106, v83, COERCE_DOUBLE(*(void *)&v84));
  sub_22EC577C0(&qword_268621D70);
  sub_22EE7FB80();
  uint64_t v85 = v104;
  uint64_t v86 = (void *)(v74 + *(int *)(v104 + 52));
  *uint64_t v86 = v79;
  v86[1] = 0;
  *(unsigned char *)(v74 + *(int *)(v85 + 56)) = 0;
  uint64_t v87 = v113;
  sub_22ED126B8(v113);
  uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621D78);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v87, 1, v88);
  uint64_t v90 = v110;
  uint64_t v91 = v109;
  double v92 = v108;
  uint64_t v93 = v116;
  uint64_t v94 = v107;
  if (EnumTagSinglePayload != 1)
  {
    double v95 = a2 - v81;
    int v127 = *(void (**)(void, void, void))(v116 + 32);
    uint64_t v126 = (void (**)(uint64_t, char *, uint64_t))(v102 + 16);
    uint64_t v96 = (void (**)(uint64_t, uint64_t))(v102 + 8);
    v116 += 32;
    uint64_t v97 = (void (**)(uint64_t, uint64_t))(v93 + 8);
    double v112 = a1;
    do
    {
      double v128 = *(double *)(v87 + *(int *)(v88 + 48) + 24);
      v127(v94, v87, v23);
      OUTLINED_FUNCTION_10_18();
      v130[0] = 0;
      LOBYTE(v131) = 0;
      sub_22EE7CAD0();
      MEMORY[0x230FAA140](*(void *)(v77 + 8));
      sub_22EE7CDC0();
      v132.origin.x = a1;
      v132.origin.y = a2;
      v132.size.width = a3;
      v132.size.height = a4;
      CGRectGetMinX(v132);
      OUTLINED_FUNCTION_10_18();
      (*v126)(v91, v92, v90);
      sub_22EE7CDC0();
      sub_22EE7CDD0();
      double v98 = *v96;
      (*v96)(v91, v90);
      v130[0] = 0;
      LOBYTE(v131) = 0;
      a1 = v112;
      uint64_t v87 = v113;
      sub_22EE7CAF0();
      sub_22EE7CDD0();
      double v100 = v99;
      v98((uint64_t)v92, v90);
      uint64_t v77 = v114;
      (*v97)(v94, v23);
      double v95 = v95 + v128 + v100;
      sub_22ED126B8(v87);
      uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621D78);
    }
    while (__swift_getEnumTagSinglePayload(v87, 1, v88) != 1);
  }
  return sub_22EC57804(v115);
}

uint64_t sub_22EC56E60()
{
  uint64_t v0 = sub_22EE7CF70();
  __swift_allocate_value_buffer(v0, qword_26864C4E0);
  __swift_project_value_buffer(v0, (uint64_t)qword_26864C4E0);
  sub_22EE7CF60();
  return sub_22EE7CF50();
}

uint64_t sub_22EC56EB8()
{
  if (qword_26861B868 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_22EE7CF70();

  return __swift_project_value_buffer(v0, (uint64_t)qword_26864C4E0);
}

BOOL sub_22EC56F1C(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  BOOL v9 = a3 == a6 && a1 == a2;
  if (a4 != a7) {
    BOOL v9 = 0;
  }
  return a5 == a8 && v9;
}

BOOL sub_22EC56F3C(uint64_t a1, uint64_t a2)
{
  return sub_22EC56F1C(*(void *)a1, *(void *)a2, *(double *)(a1 + 8), *(double *)(a1 + 16), *(double *)(a1 + 24), *(double *)(a2 + 8), *(double *)(a2 + 16), *(double *)(a2 + 24));
}

uint64_t sub_22EC56F60(uint64_t a1, uint64_t a2, double a3, double a4, double a5)
{
  if (a2 < 0)
  {
    uint64_t result = sub_22EE803A0();
    __break(1u);
  }
  else
  {
    uint64_t v5 = a2;
    if (a2)
    {
      uint64_t result = sub_22EE7FCB0();
      *(void *)(result + 16) = v5;
      uint64_t v11 = 32;
      do
      {
        uint64_t v12 = result + v11;
        *(void *)uint64_t v12 = a1;
        *(double *)(v12 + 8) = a3;
        *(double *)(v12 + 16) = a4;
        *(double *)(v12 + 24) = a5;
        v11 += 32;
        --v5;
      }
      while (v5);
    }
    else
    {
      return MEMORY[0x263F8EE78];
    }
  }
  return result;
}

void sub_22EC57038(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7C8B0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  BOOL v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v27 - v11;
  uint64_t v13 = type metadata accessor for TotalLineLimitLayout.TextSubview();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v27 - v18;
  if (a1)
  {
    sub_22EAD43D0(a3 + 24, (uint64_t)v31, qword_26861DCC0);
    sub_22EAD43D0((uint64_t)v31, (uint64_t)&v32, qword_26861DCC0);
    if (v33)
    {
      unint64_t v20 = a1 - 1;
      if (__OFSUB__(a1, 1))
      {
        __break(1u);
      }
      else if ((v20 & 0x8000000000000000) == 0)
      {
        unint64_t v21 = *(void *)(a2 + 16);
        if (v20 < v21)
        {
          uint64_t v28 = v7;
          uint64_t v29 = v6;
          unint64_t v30 = v21;
          uint64_t v22 = *(void *)(v14 + 72);
          uint64_t v27 = a2 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
          sub_22EC578AC(v27 + v22 * v20, (uint64_t)v19);
          sub_22EE7CB00();
          uint64_t v23 = sub_22EE7CB20();
          uint64_t v24 = *(void (**)(char *, uint64_t))(*(void *)(v23 - 8) + 8);
          v24(v19, v23);
          if (v30 > a1)
          {
            sub_22EC578AC(v27 + v22 * a1, (uint64_t)v16);
            sub_22EE7CB00();
            v24(v16, v23);
            sub_22EE7C8A0();
            uint64_t v25 = v29;
            uint64_t v26 = *(void (**)(char *, uint64_t))(v28 + 8);
            v26(v9, v29);
            v26(v12, v25);
            return;
          }
          goto LABEL_13;
        }
LABEL_12:
        __break(1u);
LABEL_13:
        __break(1u);
        return;
      }
      __break(1u);
      goto LABEL_12;
    }
  }
}

void sub_22EC5731C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = a3;
  BOOL v9 = (uint64_t *)(a3 + 16);
  swift_beginAccess();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v10 = *(void *)(v6 + 16);
  if (*(void *)(v10 + 16) <= a1)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v11 = *(void *)(v10 + 32 * a1 + 32);
  uint64_t v4 = a2 - v11;
  if (!__OFSUB__(a2, v11))
  {
    swift_beginAccess();
    uint64_t v6 = *v9;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *BOOL v9 = v6;
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  __break(1u);
LABEL_11:
  sub_22EC57910(v6);
  uint64_t v6 = v15;
  *BOOL v9 = v15;
LABEL_5:
  if (*(void *)(v6 + 16) <= a1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v13 = (void *)(a4 + 16);
    *(void *)(v6 + 32 * a1 + 32) = a2;
    swift_endAccess();
    swift_beginAccess();
    uint64_t v14 = *v13 - v4;
    if (!__OFSUB__(*v13, v4))
    {
      swift_beginAccess();
      *uint64_t v13 = v14;
      return;
    }
  }
  __break(1u);
}

void sub_22EC57444(unint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  uint64_t v7 = a2;
  uint64_t v11 = (uint64_t *)(a2 + 16);
  swift_beginAccess();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v12 = *(void *)(v7 + 16);
    if (*(void *)(v12 + 16) > a1)
    {
      double v5 = *(double *)(v12 + 32 * a1 + 48);
      swift_beginAccess();
      uint64_t v7 = *v11;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v11 = v7;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  __break(1u);
LABEL_8:
  sub_22EC57910(v7);
  uint64_t v7 = v16;
  *uint64_t v11 = v16;
LABEL_4:
  if (*(void *)(v7 + 16) <= a1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v14 = v7 + 32 * a1;
    *(double *)(v14 + 40) = a4;
    *(double *)(v14 + 48) = a5;
    swift_endAccess();
    swift_beginAccess();
    double v15 = *(double *)(a3 + 16) - (a5 - v5);
    swift_beginAccess();
    *(double *)(a3 + 16) = v15;
  }
}

uint64_t sub_22EC57568@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_22EC56EB8();
  uint64_t v3 = sub_22EE7CF70();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v2, v3);
}

uint64_t sub_22EC575E4(uint64_t a1, char a2, double *a3, char a4)
{
  return sub_22EC55358(a1, a2 & 1, a3, a4 & 1);
}

uint64_t sub_22EC57638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void, void, void), CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  return sub_22EC56514(a6, a7, a8, a9, a1, a2, a3, a4, a5);
}

uint64_t sub_22EC57680(uint64_t a1)
{
  return nullsub_1(a1);
}

unint64_t sub_22EC576C8()
{
  unint64_t result = qword_268621D50;
  if (!qword_268621D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268621D50);
  }
  return result;
}

uint64_t type metadata accessor for TotalLineLimitLayout.TextSubview()
{
  uint64_t result = qword_268621D90;
  if (!qword_268621D90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_22EC5775C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TotalLineLimitLayout.TextSubview();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22EC577C0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22EE7CC60();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22EC57804(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621D68);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22EC57864()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_22EC5789C()
{
  return swift_deallocObject();
}

uint64_t sub_22EC578AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TotalLineLimitLayout.TextSubview();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_22EC57910(uint64_t a1)
{
}

uint64_t sub_22EC57924(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TotalLineLimitLayout.TextSubview();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for TotalLineLimitLayout.SubviewAllocation()
{
  return &type metadata for TotalLineLimitLayout.SubviewAllocation;
}

uint64_t *sub_22EC57990(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_22EE7CB20();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
    *(_OWORD *)((char *)a1 + v8) = *(_OWORD *)((char *)a2 + v8);
  }
  return a1;
}

uint64_t sub_22EC57A64(uint64_t a1)
{
  uint64_t v2 = sub_22EE7CB20();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_22EC57AC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7CB20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_22EC57B4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7CB20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  return a1;
}

uint64_t sub_22EC57BF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7CB20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_22EC57C78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7CB20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_22EC57CFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EC57D10);
}

uint64_t sub_22EC57D10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22EE7CB20();

  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t sub_22EC57D58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EC57D6C);
}

uint64_t sub_22EC57D6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22EE7CB20();

  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_22EC57DB8()
{
  uint64_t result = sub_22EE7CB20();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

double OUTLINED_FUNCTION_10_18()
{
  uint64_t v5 = v3;
  uint64_t v6 = v4;
  uint64_t v7 = v2;
  uint64_t v8 = v1;
  return CGRectGetWidth(*(CGRect *)&v5);
}

void static SubscriptionStoreControlPlacementKey.bottomBar.getter(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  OUTLINED_FUNCTION_1_10((uint64_t)a1, (__n128)xmmword_22EE86A20);
}

double static SubscriptionStoreControlPlacementKey.scrollView.getter@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

void static SubscriptionStoreControlPlacementKey.buttonsInBottomBar.getter(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  OUTLINED_FUNCTION_1_10((uint64_t)a1, (__n128)xmmword_22EE89EC0);
}

double sub_22EC57EF0@<D0>(uint64_t a1@<X0>, void (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  sub_22EB57DC8(a1, (uint64_t)&v11);
  if (v12 >= 6)
  {
    sub_22EADD8B0(a1);
    sub_22EAE6550(&v11, (uint64_t)v10);
    __swift_project_boxed_opaque_existential_1(v10, v10[3]);
    a2();
    OUTLINED_FUNCTION_1_22();
    v7();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  else
  {
    long long v6 = *(_OWORD *)(a1 + 16);
    long long v13 = *(_OWORD *)a1;
    long long v14 = v6;
    uint64_t v15 = *(void *)(a1 + 32);
    sub_22EB57E24((uint64_t)&v11);
  }
  double result = *(double *)&v13;
  long long v9 = v14;
  *(_OWORD *)a3 = v13;
  *(_OWORD *)(a3 + 16) = v9;
  *(void *)(a3 + 32) = v15;
  return result;
}

uint64_t sub_22EC57FC4@<X0>(void (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  sub_22EB57DC8(v2, (uint64_t)&v9);
  if (v10 >= 6)
  {
    sub_22EADD8B0(v2);
    sub_22EAE6550(&v9, (uint64_t)v8);
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    a1();
    OUTLINED_FUNCTION_1_22();
    v7();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  else
  {
    long long v5 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)a2 = *(_OWORD *)v2;
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = *(void *)(v2 + 32);
    return sub_22EB57E24((uint64_t)&v9);
  }
}

void static SubscriptionStoreControlPlacementKey.leading.getter(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  OUTLINED_FUNCTION_1_10((uint64_t)a1, (__n128)xmmword_22EE8E2D0);
}

void static SubscriptionStoreControlPlacementKey.trailing.getter(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  OUTLINED_FUNCTION_1_10((uint64_t)a1, (__n128)xmmword_22EE93150);
}

void static SubscriptionStoreControlPlacementKey.bottom.getter(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  OUTLINED_FUNCTION_1_10((uint64_t)a1, (__n128)xmmword_22EE93160);
}

uint64_t _s17_StoreKit_SwiftUI012SubscriptionA19ControlPlacementKeyV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  sub_22EB57DC8(a1, (uint64_t)v16);
  sub_22EB57DC8(a2, (uint64_t)&v18);
  switch(v17)
  {
    case 0:
      if (v19) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 1:
      if (v19 != 1) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 2:
      if (v19 != 2) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      if (v19 != 3) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 4:
      if (v19 != 4) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 5:
      if (v19 != 5) {
        goto LABEL_16;
      }
LABEL_13:
      sub_22EB57E24((uint64_t)v16);
      char v3 = 1;
      break;
    default:
      sub_22EB57DC8((uint64_t)v16, (uint64_t)v15);
      if (v19 >= 6)
      {
        sub_22EAE6550(v15, (uint64_t)v12);
        sub_22EAE6550(&v18, (uint64_t)v10);
        uint64_t v5 = v13;
        uint64_t v6 = v14;
        uint64_t v7 = __swift_project_boxed_opaque_existential_1(v12, v13);
        uint64_t v8 = v11;
        long long v9 = __swift_project_boxed_opaque_existential_1(v10, v11);
        char v3 = sub_22EC584A0((uint64_t)v7, (uint64_t)v9, v5, v8, v6);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
        sub_22EB57E24((uint64_t)v16);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
LABEL_16:
        sub_22EC58BA4((uint64_t)v16);
        char v3 = 0;
      }
      break;
  }
  return v3 & 1;
}

uint64_t SubscriptionStoreControlPlacementKey.hash(into:)()
{
  sub_22EB57DC8(v0, (uint64_t)&v3);
  if (v4 >= 6)
  {
    sub_22EAE6550(&v3, (uint64_t)v2);
    __swift_project_boxed_opaque_existential_1(v2, v2[3]);
    sub_22EE7F840();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  }
  return sub_22EE807C0();
}

uint64_t SubscriptionStoreControlPlacementKey.hashValue.getter()
{
  sub_22EE807B0();
  sub_22EB57DC8(v0, (uint64_t)&v3);
  if (v4 >= 6)
  {
    sub_22EAE6550(&v3, (uint64_t)v2);
    __swift_project_boxed_opaque_existential_1(v2, v2[3]);
    sub_22EE7F840();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  }
  sub_22EE807C0();
  return sub_22EE807F0();
}

uint64_t sub_22EC58394()
{
  sub_22EE807B0();
  sub_22EB57DC8(v0, (uint64_t)&v3);
  if (v4 >= 6)
  {
    sub_22EAE6550(&v3, (uint64_t)v2);
    __swift_project_boxed_opaque_existential_1(v2, v2[3]);
    sub_22EE7F840();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  }
  sub_22EE807C0();
  return sub_22EE807F0();
}

uint64_t sub_22EC58428()
{
  sub_22EB57DC8(v0, (uint64_t)&v4);
  uint64_t v1 = v5;
  if (v5 >= 6)
  {
    sub_22EAE6550(&v4, (uint64_t)v3);
    __swift_project_boxed_opaque_existential_1(v3, v3[3]);
    uint64_t v1 = sub_22EE7F840();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  }
  return v1;
}

uint64_t sub_22EC584A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v22[1] = a5;
  uint64_t v8 = sub_22EE80040();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  unint64_t v12 = (char *)v22 - v11;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](v13);
  long long v18 = (char *)v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v15, a2, a4);
  if (swift_dynamicCast())
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, a3);
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v12, a3);
    char v20 = sub_22EE7F900();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, a3);
  }
  else
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 1, 1, a3);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    char v20 = 0;
  }
  return v20 & 1;
}

uint64_t sub_22EC58724()
{
  sub_22EB57DC8(v0, (uint64_t)&v3);
  if (v4 >= 6)
  {
    sub_22EAE6550(&v3, (uint64_t)v2);
    __swift_project_boxed_opaque_existential_1(v2, v2[3]);
    sub_22EE7F840();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  }
  return sub_22EE807C0();
}

uint64_t sub_22EC587B0()
{
  return sub_22EE807F0();
}

unint64_t sub_22EC58800()
{
  unint64_t result = qword_268621DA0;
  if (!qword_268621DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268621DA0);
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionStoreControlPlacementKey()
{
  return &type metadata for SubscriptionStoreControlPlacementKey;
}

uint64_t sub_22EC5885C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t destroy for SubscriptionStoreControlPlacementKey.InternalPlacementKey(uint64_t a1)
{
  if (*(void *)(a1 + 24) >= 0xFFFFFFFFuLL) {
    return __swift_destroy_boxed_opaque_existential_1(a1);
  }
  return a1;
}

uint64_t initializeWithCopy for SubscriptionStoreControlPlacementKey.InternalPlacementKey(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 24);
  if (v3 < 0xFFFFFFFF)
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  else
  {
    uint64_t v4 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v3;
    *(void *)(a1 + 32) = v4;
    (**(void (***)(uint64_t))(v3 - 8))(a1);
  }
  return a1;
}

uint64_t assignWithCopy for SubscriptionStoreControlPlacementKey.InternalPlacementKey(uint64_t a1, long long *a2)
{
  unint64_t v4 = *((void *)a2 + 3);
  if (*(void *)(a1 + 24) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(void *)(a1 + 24) = v4;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
      return a1;
    }
LABEL_7:
    long long v5 = *a2;
    long long v6 = a2[1];
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  return a1;
}

uint64_t assignWithTake for SubscriptionStoreControlPlacementKey.InternalPlacementKey(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24) >= 0xFFFFFFFFuLL) {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscriptionStoreControlPlacementKey.InternalPlacementKey(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFF9 && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 2147483642);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 5;
  if (v4 >= 7) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SubscriptionStoreControlPlacementKey.InternalPlacementKey(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFA)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 2147483642;
    if (a3 >= 0x7FFFFFFA) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFA) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2 + 5;
    }
  }
  return result;
}

uint64_t sub_22EC58ABC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

double sub_22EC58AD4(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(void *)(a1 + 24) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionStoreControlPlacementKey.InternalPlacementKey()
{
  return &type metadata for SubscriptionStoreControlPlacementKey.InternalPlacementKey;
}

uint64_t sub_22EC58B10()
{
  return sub_22EE807F0();
}

unint64_t sub_22EC58B58()
{
  unint64_t result = qword_268621DA8;
  if (!qword_268621DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268621DA8);
  }
  return result;
}

uint64_t sub_22EC58BA4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_268621DB0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22EC58C1C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_22EC58CDC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  int v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  uint64_t v9 = *a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || ((((v6 + 24) & ~v6) + v7) & 0xFFFFFFFFFFFFFFF8) + 40 > 0x18)
  {
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
  }
  else
  {
    unint64_t v12 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v13 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v14 = v13[1];
    *unint64_t v12 = *v13;
    v12[1] = v14;
    uint64_t v15 = ((unint64_t)v12 + v6 + 16) & ~v6;
    uint64_t v16 = ((unint64_t)v13 + v6 + 16) & ~v6;
    uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    swift_retain();
    v17(v15, v16, v4);
    uint64_t v18 = v16 + v7;
    *(unsigned char *)(v15 + v7) = *(unsigned char *)(v16 + v7);
    unint64_t v19 = (v15 + v7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFF8;
    unint64_t v21 = *(void **)((v18 & 0xFFFFFFFFFFFFFFF8) + 8);
    uint64_t v22 = *(void *)((v18 & 0xFFFFFFFFFFFFFFF8) + 16);
    LOBYTE(v15) = *(unsigned char *)((v18 & 0xFFFFFFFFFFFFFFF8) + 24);
    sub_22EBCBE8C(v21, v22, v15);
    *(void *)(v19 + 8) = v21;
    *(void *)(v19 + 16) = v22;
    *(unsigned char *)(v19 + 24) = v15;
    *(void *)(v19 + 32) = *(void *)(v20 + 32);
  }
  swift_retain();
  return a1;
}

uint64_t sub_22EC58E50(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 15;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v5 = v4 + 8;
  unint64_t v6 = ((v3 & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v6);
  sub_22EBCBEF8(*(void **)(((v6 + *(void *)(v5 + 56)) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)(((v6 + *(void *)(v5 + 56)) & 0xFFFFFFFFFFFFFFF8) + 16), *(unsigned char *)(((v6 + *(void *)(v5 + 56)) & 0xFFFFFFFFFFFFFFF8) + 24));

  return swift_release();
}

void *sub_22EC58EFC(void *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *a2;
  unint64_t v4 = (unint64_t)a2 + 15;
  *a1 = v5;
  unint64_t v6 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = *(void *)((v4 & 0xFFFFFFFFFFFFFFF8) + 8);
  *unint64_t v6 = *(void *)(v4 & 0xFFFFFFFFFFFFFFF8);
  v6[1] = v7;
  uint64_t v8 = *(void *)(a3 + 24);
  uint64_t v9 = *(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  uint64_t v10 = *(void *)(v8 - 8) + 16;
  uint64_t v11 = *(unsigned __int8 *)(*(void *)(v8 - 8) + 80);
  uint64_t v12 = ((unint64_t)v6 + v11 + 16) & ~v11;
  unint64_t v13 = (v11 + 16 + (v4 & 0xFFFFFFFFFFFFFFF8)) & ~v11;
  swift_bridgeObjectRetain();
  swift_retain();
  v9(v12, v13, v8);
  uint64_t v14 = *(void *)(v10 + 48);
  unint64_t v15 = v14 + v12;
  unint64_t v16 = v14 + v13;
  *(unsigned char *)unint64_t v15 = *(unsigned char *)v16;
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = *(void **)((v16 & 0xFFFFFFFFFFFFFFF8) + 8);
  uint64_t v20 = *(void *)((v16 & 0xFFFFFFFFFFFFFFF8) + 16);
  LOBYTE(v12) = *(unsigned char *)((v16 & 0xFFFFFFFFFFFFFFF8) + 24);
  sub_22EBCBE8C(v19, v20, v12);
  *(void *)(v17 + 8) = v19;
  *(void *)(v17 + 16) = v20;
  *(unsigned char *)(v17 + 24) = v12;
  *(void *)(v17 + 32) = *(void *)(v18 + 32);
  swift_retain();
  return a1;
}

void *sub_22EC58FF8(void *a1, void *a2, uint64_t a3)
{
  unint64_t v5 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v6 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFFF8) + 8);
  *unint64_t v6 = *(void *)(v5 & 0xFFFFFFFFFFFFFFF8);
  v6[1] = v8;
  swift_retain();
  swift_release();
  uint64_t v9 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v10 = v9 + 24;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = ((unint64_t)v6 + v11 + 16) & ~v11;
  unint64_t v13 = (v11 + 16 + (v5 & 0xFFFFFFFFFFFFFFF8)) & ~v11;
  (*(void (**)(uint64_t, unint64_t))(v9 + 24))(v12, (v11 + 16 + v7) & ~v11);
  uint64_t v14 = *(void *)(v10 + 40);
  unint64_t v15 = v14 + v12;
  unint64_t v16 = v14 + v13;
  *(unsigned char *)unint64_t v15 = *(unsigned char *)v16;
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = *(void **)((v16 & 0xFFFFFFFFFFFFFFF8) + 8);
  uint64_t v20 = *(void *)((v16 & 0xFFFFFFFFFFFFFFF8) + 16);
  LOBYTE(v6) = *(unsigned char *)((v16 & 0xFFFFFFFFFFFFFFF8) + 24);
  sub_22EBCBE8C(v19, v20, (char)v6);
  unint64_t v21 = *(void **)(v17 + 8);
  uint64_t v22 = *(void *)(v17 + 16);
  *(void *)(v17 + 8) = v19;
  *(void *)(v17 + 16) = v20;
  char v23 = *(unsigned char *)(v17 + 24);
  *(unsigned char *)(v17 + 24) = (_BYTE)v6;
  sub_22EBCBEF8(v21, v22, v23);
  *(void *)(v17 + 32) = *(void *)(v18 + 32);
  swift_retain();
  swift_release();
  return a1;
}

void *sub_22EC5911C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  unint64_t v4 = (_OWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v5 = (_OWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v4 = *v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v7 = v6 + 32;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)v4 + v8 + 16) & ~v8;
  uint64_t v10 = ((unint64_t)v5 + v8 + 16) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(v9, v10);
  uint64_t v11 = *(void *)(v7 + 32);
  uint64_t v12 = v11 + v9;
  uint64_t v13 = v11 + v10;
  *(unsigned char *)uint64_t v12 = *(unsigned char *)v13;
  v12 &= 0xFFFFFFFFFFFFFFF8;
  v13 &= 0xFFFFFFFFFFFFFFF8;
  long long v14 = *(_OWORD *)(v13 + 24);
  *(_OWORD *)(v12 + 8) = *(_OWORD *)(v13 + 8);
  *(_OWORD *)(v12 + 24) = v14;
  return a1;
}

void *sub_22EC591DC(void *a1, void *a2, uint64_t a3)
{
  unint64_t v5 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = (_OWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v5 &= 0xFFFFFFFFFFFFFFF8;
  *uint64_t v6 = *(_OWORD *)v5;
  swift_release();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v8 = v7 + 40;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = ((unint64_t)v6 + v9 + 16) & ~v9;
  uint64_t v11 = (v9 + 16 + v5) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v10, v11);
  uint64_t v12 = *(void *)(v8 + 24);
  unint64_t v13 = v12 + v10;
  unint64_t v14 = v12 + v11;
  *(unsigned char *)unint64_t v13 = *(unsigned char *)v14;
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v14) = *(unsigned char *)((v14 & 0xFFFFFFFFFFFFFFF8) + 24);
  unint64_t v17 = *(void **)((v13 & 0xFFFFFFFFFFFFFFF8) + 8);
  uint64_t v18 = *(void *)((v13 & 0xFFFFFFFFFFFFFFF8) + 16);
  *(_OWORD *)(v15 + 8) = *(_OWORD *)(v16 + 8);
  char v19 = *(unsigned char *)((v13 & 0xFFFFFFFFFFFFFFF8) + 24);
  *(unsigned char *)(v15 + 24) = v14;
  sub_22EBCBEF8(v17, v18, v19);
  *(void *)(v15 + 32) = *(void *)(v16 + 32);
  swift_release();
  return a1;
}

uint64_t sub_22EC592D8(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v5 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v8 < a2)
  {
    unint64_t v9 = ((((v7 + 24) & ~v7) + *(void *)(*(void *)(v4 - 8) + 64)) & 0xFFFFFFFFFFFFFFF8) + 40;
    unsigned int v10 = a2 - v8;
    uint64_t v11 = v9 & 0xFFFFFFF8;
    if ((v9 & 0xFFFFFFF8) != 0) {
      unsigned int v12 = 2;
    }
    else {
      unsigned int v12 = v10 + 1;
    }
    if (v12 >= 0x10000) {
      unsigned int v13 = 4;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v12 < 0x100) {
      unsigned int v13 = 1;
    }
    if (v12 >= 2) {
      uint64_t v14 = v13;
    }
    else {
      uint64_t v14 = 0;
    }
    switch(v14)
    {
      case 1:
        int v15 = *((unsigned __int8 *)a1 + v9);
        if (!v15) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v15 = *(unsigned __int16 *)((char *)a1 + v9);
        if (v15) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x22EC59424);
      case 4:
        int v15 = *(_DWORD *)((char *)a1 + v9);
        if (!v15) {
          break;
        }
LABEL_22:
        int v17 = v15 - 1;
        if (v11)
        {
          int v17 = 0;
          LODWORD(v11) = *a1;
        }
        return v8 + (v11 | v17) + 1;
      default:
        break;
    }
  }
  if ((v6 & 0x80000000) != 0) {
    return __swift_getEnumTagSinglePayload(((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v7 + 16) & ~v7, v6, v4);
  }
  uint64_t v18 = *(void *)a1;
  if (*(void *)a1 >= 0xFFFFFFFFuLL) {
    LODWORD(v18) = -1;
  }
  return (v18 + 1);
}

void sub_22EC59438(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  size_t v11 = ((((v10 + 24) & ~v10) + *(void *)(*(void *)(v6 - 8) + 64)) & 0xFFFFFFFFFFFFFFF8) + 40;
  if (v9 >= a3)
  {
    int v15 = 0;
  }
  else
  {
    unsigned int v12 = a3 - v9;
    if (((((v10 + 24) & ~v10) + *(_DWORD *)(*(void *)(v6 - 8) + 64)) & 0xFFFFFFF8) == 0xFFFFFFD8) {
      unsigned int v13 = v12 + 1;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
  }
  if (a2 > v9)
  {
    if (((((v10 + 24) & ~v10) + *(_DWORD *)(*(void *)(v6 - 8) + 64)) & 0xFFFFFFF8) == 0xFFFFFFD8) {
      int v16 = a2 - v9;
    }
    else {
      int v16 = 1;
    }
    if (((((v10 + 24) & ~v10) + *(_DWORD *)(*(void *)(v6 - 8) + 64)) & 0xFFFFFFF8) != 0xFFFFFFD8)
    {
      int v17 = ~v9 + a2;
      bzero(a1, v11);
      *(_DWORD *)a1 = v17;
    }
    switch(v15)
    {
      case 1:
        a1[v11] = v16;
        return;
      case 2:
        *(_WORD *)&a1[v11] = v16;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v11] = v16;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 2:
      *(_WORD *)&a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x22EC59618);
    case 4:
      *(_DWORD *)&a1[v11] = 0;
      goto LABEL_31;
    default:
LABEL_31:
      if (a2)
      {
LABEL_32:
        if ((v8 & 0x80000000) != 0)
        {
          unint64_t v19 = (((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v10 + 16) & ~v10;
          __swift_storeEnumTagSinglePayload(v19, a2, v8, v6);
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v18 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v18 = (a2 - 1);
          }
          *(void *)a1 = v18;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for StoreDynamicView()
{
  return swift_getGenericMetadata();
}

uint64_t sub_22EC59658()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EC5969C()
{
  return sub_22EE7E9D0();
}

uint64_t sub_22EC596D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v79 = a2;
  uint64_t v78 = sub_22EE7FD90();
  OUTLINED_FUNCTION_0_0();
  uint64_t v77 = v3;
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_6_4(v5);
  OUTLINED_FUNCTION_0_0();
  uint64_t v71 = v6;
  uint64_t v72 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_6_4((uint64_t)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_22EE7F010();
  OUTLINED_FUNCTION_0_0();
  uint64_t v80 = v10;
  uint64_t v81 = v11;
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_6_4(v12);
  uint64_t v14 = a1[5];
  uint64_t v61 = a1[3];
  uint64_t v13 = v61;
  uint64_t v62 = v14;
  type metadata accessor for StorePlaceholderView();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621E38);
  uint64_t v58 = sub_22EE7D810();
  uint64_t v16 = a1[4];
  uint64_t v59 = a1[2];
  uint64_t v15 = v59;
  uint64_t v60 = v16;
  uint64_t v63 = type metadata accessor for StoreStaticView();
  uint64_t v65 = sub_22EE7D810();
  sub_22EE7D810();
  uint64_t v66 = sub_22EE7E8A0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v74 = v17;
  MEMORY[0x270FA5388](v18);
  uint64_t v64 = (uint64_t)&v58 - v19;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861FC68);
  uint64_t v20 = sub_22EE7CEE0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v75 = v21;
  MEMORY[0x270FA5388](v22);
  uint64_t v68 = (uint64_t)&v58 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  OUTLINED_FUNCTION_6_4((uint64_t)&v58 - v25);
  uint64_t v82 = v15;
  uint64_t v83 = v13;
  uint64_t v84 = v16;
  uint64_t v85 = v14;
  uint64_t v26 = v67;
  uint64_t v86 = (uint64_t)v67;
  unint64_t v27 = sub_22EC5AB38();
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v29 = sub_22EC5AB84();
  v90[5] = WitnessTable;
  v90[6] = v29;
  uint64_t v30 = swift_getWitnessTable();
  uint64_t v31 = swift_getWitnessTable();
  v90[3] = v30;
  v90[4] = v31;
  uint64_t v32 = swift_getWitnessTable();
  v90[1] = v27;
  v90[2] = v32;
  uint64_t v33 = swift_getWitnessTable();
  sub_22EE7E890();
  uint64_t v34 = v26;
  v90[0] = *v26;
  uint64_t v35 = v69;
  (*(void (**)(uint64_t, void, uint64_t))(v81 + 104))(v69, *MEMORY[0x263F17D20], v80);
  uint64_t v36 = v71;
  uint64_t v37 = v70;
  (*(void (**)(uint64_t, void *, void *))(v71 + 16))(v70, v34, a1);
  uint64_t v38 = v36;
  unint64_t v39 = (*(unsigned __int8 *)(v36 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  uint64_t v40 = (char *)swift_allocObject();
  uint64_t v41 = v61;
  *((void *)v40 + 2) = v59;
  *((void *)v40 + 3) = v41;
  uint64_t v42 = v62;
  *((void *)v40 + 4) = v60;
  *((void *)v40 + 5) = v42;
  (*(void (**)(char *, uint64_t, void *))(v38 + 32))(&v40[v39], v37, a1);
  swift_bridgeObjectRetain();
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621E70);
  uint64_t v89 = v33;
  uint64_t v44 = v66;
  uint64_t v45 = swift_getWitnessTable();
  uint64_t v46 = sub_22EADDD7C(&qword_268621E78, &qword_268621E70);
  unint64_t v47 = sub_22EC5AEFC();
  uint64_t v48 = v76;
  sub_22EE7FD70();
  uint64_t v56 = v46;
  uint64_t v57 = v47;
  uint64_t v49 = v68;
  uint64_t v50 = v64;
  sub_22EBCB534((uint64_t)v90, v35, v48, (uint64_t)&unk_268621E68, (uint64_t)v40, v44, v43, v45, v56, v57, v58, v59, v60, v61, v62, v63, v64, v65, v66,
    (uint64_t)v67,
    v68,
    v69);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v48, v78);
  (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v35, v80);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v50, v44);
  uint64_t v51 = sub_22EADDD7C((unint64_t *)&qword_268621E88, &qword_26861FC68);
  uint64_t v87 = v45;
  uint64_t v88 = v51;
  uint64_t v52 = swift_getWitnessTable();
  uint64_t v53 = v73;
  sub_22EB69440(v49, v20, v52);
  uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
  v54(v49, v20);
  sub_22EB69440(v53, v20, v52);
  return ((uint64_t (*)(uint64_t, uint64_t))v54)(v53, v20);
}

uint64_t sub_22EC59D90@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v108 = a5;
  uint64_t v103 = a1;
  uint64_t v104 = a3;
  uint64_t v7 = type metadata accessor for StoreStaticView();
  uint64_t v88 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v87 = (uint64_t)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  double v98 = (char *)&v83 - v10;
  uint64_t v105 = a4;
  uint64_t v11 = type metadata accessor for StorePlaceholderView();
  uint64_t v99 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621E38);
  uint64_t v12 = sub_22EE7D810();
  uint64_t v101 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  double v100 = (char *)&v83 - v13;
  uint64_t v84 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v96 = (uint64_t)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v85 = (uint64_t)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v97 = (char *)&v83 - v19;
  uint64_t v20 = sub_22EE7D810();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v83 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v102 = (char *)&v83 - v25;
  uint64_t v26 = sub_22EE7D810();
  uint64_t v106 = *(void *)(v26 - 8);
  uint64_t v107 = v26;
  MEMORY[0x270FA5388](v26);
  unint64_t v29 = (char *)&v83 - v27;
  uint64_t v30 = *v28;
  if (*(void *)(*v28 + 16))
  {
    uint64_t v89 = v23;
    uint64_t v90 = v21;
    uint64_t v91 = (char *)&v83 - v27;
    uint64_t v92 = v20;
    uint64_t v93 = v11;
    uint64_t v94 = v12;
    uint64_t v95 = v7;
    *(void *)&long long v131 = v103;
    *((void *)&v131 + 1) = a2;
    uint64_t v83 = a2;
    uint64_t v132 = v104;
    uint64_t v133 = v105;
    uint64_t v31 = v28;
    uint64_t v32 = (int *)type metadata accessor for StoreDynamicView();
    uint64_t v33 = v31;
    uint64_t v34 = (uint64_t *)((char *)v31 + v32[16]);
    uint64_t v35 = *v34;
    uint64_t v36 = v34[1];
    char v37 = *((unsigned char *)v34 + 16);
    uint64_t v38 = v34[3];
    *(void *)&long long v131 = *v34;
    *((void *)&v131 + 1) = v36;
    LOBYTE(v132) = v37;
    uint64_t v133 = v38;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268621E90);
    sub_22EE7E9E0();
    id v39 = v134;
    if (v136)
    {
      if (v136 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v40 = v87;
        sub_22ED18074((uint64_t)v39, v33[1], v33[2], *((unsigned char *)v33 + v32[15]), v87);
        uint64_t v41 = v95;
        uint64_t WitnessTable = swift_getWitnessTable();
        uint64_t v43 = v98;
        sub_22EB69440(v40, v41, WitnessTable);
        uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v88 + 8);
        swift_retain();
        v44(v40, v41);
        sub_22EB69440(v43, v41, WitnessTable);
        uint64_t v45 = swift_getWitnessTable();
        unint64_t v46 = sub_22EC5AB84();
        uint64_t v129 = v45;
        unint64_t v130 = v46;
        swift_getWitnessTable();
        unint64_t v47 = v102;
        sub_22EC4F330();
        v44(v40, v41);
        v44((uint64_t)v98, v41);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 16))(v96, (uint64_t)v33 + v32[14], v83);
        *(void *)&long long v131 = v35;
        *((void *)&v131 + 1) = v36;
        LOBYTE(v132) = v37;
        uint64_t v133 = v38;
        swift_bridgeObjectRetain();
        sub_22EE7E9E0();
        long long v131 = v115;
        LOBYTE(v132) = v116;
        uint64_t v58 = v85;
        sub_22EDE2A2C(v96, v30, (uint64_t *)&v131, *((unsigned char *)v33 + v32[15]), v83, v85);
        uint64_t v59 = v93;
        uint64_t v60 = swift_getWitnessTable();
        uint64_t v61 = v97;
        sub_22EB69440(v58, v59, v60);
        uint64_t v62 = *(void (**)(uint64_t, uint64_t))(v86 + 8);
        v62(v58, v59);
        sub_22EB69440(v61, v59, v60);
        unint64_t v63 = sub_22EC5AB84();
        uint64_t v64 = v100;
        sub_22EC4F278();
        v62(v58, v59);
        uint64_t v113 = v60;
        unint64_t v114 = v63;
        uint64_t v65 = v94;
        swift_getWitnessTable();
        swift_getWitnessTable();
        unint64_t v47 = v102;
        sub_22EC4F278();
        (*(void (**)(char *, uint64_t))(v101 + 8))(v64, v65);
        v62((uint64_t)v97, v59);
      }
    }
    else
    {
      *(void *)&long long v131 = v134;
      BYTE8(v131) = 0;
      uint64_t v52 = v135;
      id v53 = v134;
      uint64_t v54 = swift_getWitnessTable();
      unint64_t v55 = sub_22EC5AB84();
      uint64_t v56 = v100;
      sub_22EC4F330();
      uint64_t v117 = v54;
      unint64_t v118 = v55;
      uint64_t v57 = v94;
      swift_getWitnessTable();
      swift_getWitnessTable();
      unint64_t v47 = v102;
      sub_22EC4F278();
      sub_22EBCBEF8(v39, v52, 0);
      (*(void (**)(char *, uint64_t))(v101 + 8))(v56, v57);
      sub_22EBCBEF8(v39, v52, 0);
    }
    uint64_t v66 = swift_getWitnessTable();
    unint64_t v67 = sub_22EC5AB84();
    uint64_t v127 = v66;
    unint64_t v128 = v67;
    uint64_t v68 = swift_getWitnessTable();
    uint64_t v69 = swift_getWitnessTable();
    uint64_t v125 = v68;
    uint64_t v126 = v69;
    uint64_t v70 = v92;
    uint64_t v71 = swift_getWitnessTable();
    uint64_t v72 = v89;
    sub_22EB69440(v47, v70, v71);
    sub_22EC5AB38();
    unint64_t v29 = v91;
    sub_22EC4F330();
    uint64_t v73 = *(void (**)(char *, uint64_t))(v90 + 8);
    v73(v72, v70);
    v73(v47, v70);
  }
  else
  {
    *(void *)&long long v131 = swift_getKeyPath();
    BYTE8(v131) = 0;
    sub_22EC5AB38();
    uint64_t v48 = swift_getWitnessTable();
    unint64_t v49 = sub_22EC5AB84();
    uint64_t v111 = v48;
    unint64_t v112 = v49;
    uint64_t v50 = swift_getWitnessTable();
    uint64_t v51 = swift_getWitnessTable();
    uint64_t v109 = v50;
    uint64_t v110 = v51;
    swift_getWitnessTable();
    sub_22EC4F278();
    swift_release();
  }
  unint64_t v74 = sub_22EC5AB38();
  uint64_t v75 = swift_getWitnessTable();
  unint64_t v76 = sub_22EC5AB84();
  uint64_t v123 = v75;
  unint64_t v124 = v76;
  uint64_t v77 = swift_getWitnessTable();
  uint64_t v78 = swift_getWitnessTable();
  uint64_t v121 = v77;
  uint64_t v122 = v78;
  uint64_t v79 = swift_getWitnessTable();
  unint64_t v119 = v74;
  uint64_t v120 = v79;
  uint64_t v80 = v107;
  uint64_t v81 = swift_getWitnessTable();
  sub_22EB69440(v29, v80, v81);
  return (*(uint64_t (**)(char *, uint64_t))(v106 + 8))(v29, v80);
}

uint64_t sub_22EC5A890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 96) = a5;
  *(void *)(v6 + 104) = a6;
  *(void *)(v6 + 80) = a3;
  *(void *)(v6 + 88) = a4;
  *(void *)(v6 + 72) = a2;
  *(_OWORD *)(v6 + 112) = *(_OWORD *)a1;
  *(unsigned char *)(v6 + 65) = *(unsigned char *)(a1 + 16);
  sub_22EE7FD30();
  *(void *)(v6 + 128) = sub_22EE7FD20();
  uint64_t v8 = sub_22EE7FD00();
  return MEMORY[0x270FA2498](sub_22EC5A940, v8, v7);
}

uint64_t sub_22EC5A940()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void **)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 72);
  long long v10 = *(_OWORD *)(v0 + 96);
  long long v11 = *(_OWORD *)(v0 + 80);
  char v4 = *(unsigned char *)(v0 + 65);
  swift_release();
  *(_OWORD *)(v0 + 16) = v11;
  *(_OWORD *)(v0 + 32) = v10;
  uint64_t v5 = v3 + *(int *)(type metadata accessor for StoreDynamicView() + 64);
  char v6 = *(unsigned char *)(v5 + 16);
  uint64_t v7 = *(void *)(v5 + 24);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)v5;
  *(unsigned char *)(v0 + 32) = v6;
  *(void *)(v0 + 40) = v7;
  *(void *)(v0 + 48) = v2;
  *(void *)(v0 + 56) = v1;
  *(unsigned char *)(v0 + 64) = v4;
  sub_22EBCBE8C(v2, v1, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268621E90);
  sub_22EE7E9F0();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

double sub_22EC5AA44@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, char *a9@<X8>, uint64_t a10)
{
  *(void *)a9 = a1;
  *((void *)a9 + 1) = a2;
  *((void *)a9 + 2) = a3;
  *(void *)&long long v17 = a6;
  *((void *)&v17 + 1) = a7;
  uint64_t v14 = (int *)type metadata accessor for StoreDynamicView();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32))(&a9[v14[14]], a4, a7);
  a9[v14[15]] = a5;
  uint64_t v15 = &a9[v14[16]];
  sub_22EC5969C();
  double result = *(double *)&v17;
  *(_OWORD *)uint64_t v15 = v17;
  unsigned char v15[16] = a8;
  *((void *)v15 + 3) = a10;
  return result;
}

uint64_t sub_22EC5AB28@<X0>(uint64_t a1@<X8>)
{
  return sub_22EC59D90(v1[2], v1[3], v1[4], v1[5], a1);
}

unint64_t sub_22EC5AB38()
{
  unint64_t result = qword_268621E40;
  if (!qword_268621E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268621E40);
  }
  return result;
}

unint64_t sub_22EC5AB84()
{
  unint64_t result = qword_268621E48;
  if (!qword_268621E48)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621E38);
    sub_22EC5AC24();
    sub_22EADDD7C(&qword_26861DC98, &qword_26861DBE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268621E48);
  }
  return result;
}

unint64_t sub_22EC5AC24()
{
  unint64_t result = qword_268621E50;
  if (!qword_268621E50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621E58);
    sub_22EADDD7C(&qword_26861DF78, &qword_26861DF58);
    sub_22EB1B3D0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268621E50);
  }
  return result;
}

uint64_t sub_22EC5ACC4()
{
  long long v4 = *(_OWORD *)(v0 + 24);
  uint64_t v1 = (int *)(type metadata accessor for StoreDynamicView() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t))(*(void *)(v4 - 8) + 8))(v2 + v1[16]);
  sub_22EBCBEF8(*(void **)(v2 + v1[18]), *(void *)(v2 + v1[18] + 8), *(unsigned char *)(v2 + v1[18] + 16));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22EC5ADF0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  v2[2] = v4;
  v2[3] = v5;
  void v2[4] = v6;
  v2[5] = v7;
  uint64_t v8 = *(void *)(type metadata accessor for StoreDynamicView() - 8);
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  long long v10 = (void *)swift_task_alloc();
  v2[6] = v10;
  *long long v10 = v2;
  v10[1] = sub_22EB36DF4;
  return sub_22EC5A890(a1, v9, v4, v5, v6, v7);
}

unint64_t sub_22EC5AEFC()
{
  unint64_t result = qword_268621E80;
  if (!qword_268621E80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621E70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268621E80);
  }
  return result;
}

uint64_t sub_22EC5AF70()
{
  return swift_getWitnessTable();
}

uint64_t _s17_StoreKit_SwiftUI012SubscriptionA25ControlStyleConfigurationV10allOptionsSay0aB07ProductVGvg_0()
{
  uint64_t v1 = type metadata accessor for SubscriptionStoreControlOption(0);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v4 = (char *)v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v52 - v6;
  uint64_t v8 = sub_22EE7F780();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  long long v11 = (char *)v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for SubscriptionStoreControlConfigurationSection(0) - 8;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v0 + 8))
  {
    uint64_t v16 = *(void *)(v0 + 8);
LABEL_46:
    swift_bridgeObjectRetain();
    return v16;
  }
  v52[1] = 0;
  uint64_t v17 = *(void *)(v0 + 16);
  unint64_t v18 = *(void *)(v17 + 16);
  uint64_t v61 = v17;
  unint64_t v62 = v18;
  if (!v18)
  {
    swift_bridgeObjectRetain();
    goto LABEL_45;
  }
  uint64_t v59 = v11;
  uint64_t v60 = v8;
  uint64_t v57 = v9;
  uint64_t v19 = v17 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  uint64_t v20 = *(void *)(v13 + 72);
  swift_bridgeObjectRetain();
  unint64_t v21 = 0;
  uint64_t v58 = v19;
  while (1)
  {
    sub_22EC638B0(v19, (uint64_t)v15, (void (*)(void))type metadata accessor for SubscriptionStoreControlConfigurationSection);
    uint64_t v22 = *((void *)v15 + 5);
    swift_bridgeObjectRetain();
    sub_22EC6390C();
    uint64_t v23 = *(void *)(v22 + 16);
    uint64_t result = swift_bridgeObjectRelease();
    if (v23) {
      break;
    }
    ++v21;
    v19 += v20;
    if (v62 == v21) {
      goto LABEL_45;
    }
  }
  if (v62 == v21) {
    goto LABEL_54;
  }
  if (v21 < *(void *)(v61 + 16))
  {
    sub_22EC638B0(v19, (uint64_t)v15, (void (*)(void))type metadata accessor for SubscriptionStoreControlConfigurationSection);
    uint64_t v25 = *((void *)v15 + 5);
    swift_bridgeObjectRetain();
    sub_22EC6390C();
    uint64_t v26 = *(void *)(v25 + 16);
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v27 = v21 + 1;
    if (v27 < v62)
    {
      uint64_t v28 = v19 + v20;
      while (v27 < *(void *)(v61 + 16))
      {
        sub_22EC638B0(v28, (uint64_t)v15, (void (*)(void))type metadata accessor for SubscriptionStoreControlConfigurationSection);
        uint64_t v29 = *((void *)v15 + 5);
        swift_bridgeObjectRetain();
        sub_22EC6390C();
        uint64_t v30 = *(void *)(v29 + 16);
        uint64_t result = swift_bridgeObjectRelease();
        BOOL v31 = __OFADD__(v26, v30);
        v26 += v30;
        if (v31) {
          goto LABEL_52;
        }
        ++v27;
        v28 += v20;
        if (v27 >= v62) {
          goto LABEL_16;
        }
      }
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
      goto LABEL_55;
    }
LABEL_16:
    if (v26)
    {
      unint64_t v55 = v7;
      uint64_t v56 = v4;
      uint64_t v64 = MEMORY[0x263F8EE78];
      sub_22EC621F0();
      unint64_t v32 = 0;
      uint64_t v33 = v58;
      while (1)
      {
        sub_22EC638B0(v33, (uint64_t)v15, (void (*)(void))type metadata accessor for SubscriptionStoreControlConfigurationSection);
        uint64_t v34 = *((void *)v15 + 5);
        swift_bridgeObjectRetain();
        sub_22EC6390C();
        uint64_t v35 = *(void *)(v34 + 16);
        uint64_t result = swift_bridgeObjectRelease();
        BOOL v36 = v35 == 0;
        if (v35) {
          break;
        }
        unint64_t v37 = v32 + 1;
        if (__OFADD__(v32, 1)) {
          goto LABEL_53;
        }
        ++v32;
        v33 += v20;
        if (v37 == v62)
        {
          unint64_t v32 = v62;
          break;
        }
      }
      uint64_t v54 = v2;
      if (v26 < 0) {
        goto LABEL_56;
      }
      uint64_t v38 = 0;
      unint64_t v39 = 0;
      v52[2] = v57 + 32;
      id v53 = (void (**)(char *, uint64_t, uint64_t))(v57 + 16);
      while (v38 != v26)
      {
        if ((v32 & 0x8000000000000000) != 0) {
          goto LABEL_48;
        }
        if (v32 >= *(void *)(v61 + 16)) {
          goto LABEL_49;
        }
        uint64_t v40 = v58 + v20 * v32;
        sub_22EC638B0(v40, (uint64_t)v15, (void (*)(void))type metadata accessor for SubscriptionStoreControlConfigurationSection);
        uint64_t v41 = *((void *)v15 + 5);
        swift_bridgeObjectRetain();
        uint64_t result = sub_22EC6390C();
        if (v36) {
          goto LABEL_58;
        }
        if (v39 >= *(void *)(v41 + 16)) {
          goto LABEL_50;
        }
        uint64_t v42 = (uint64_t)v55;
        sub_22EC638B0(v41+ ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))+ *(void *)(v54 + 72) * v39, (uint64_t)v55, (void (*)(void))type metadata accessor for SubscriptionStoreControlOption);
        swift_bridgeObjectRelease();
        uint64_t v43 = (uint64_t)v56;
        sub_22EC6395C(v42, (uint64_t)v56, (void (*)(void))type metadata accessor for SubscriptionStoreControlOption);
        (*v53)(v59, v43, v60);
        sub_22EC6390C();
        uint64_t v16 = v64;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_22EC621F0();
          uint64_t v16 = v64;
        }
        unint64_t v44 = *(void *)(v16 + 16);
        if (v44 >= *(void *)(v16 + 24) >> 1)
        {
          sub_22EC621F0();
          uint64_t v16 = v64;
        }
        *(void *)(v16 + 16) = v44 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v57 + 32))(v16+ ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80))+ *(void *)(v57 + 72) * v44, v59, v60);
        uint64_t v64 = v16;
        sub_22EC638B0(v40, (uint64_t)v15, (void (*)(void))type metadata accessor for SubscriptionStoreControlConfigurationSection);
        uint64_t v45 = *((void *)v15 + 5);
        swift_bridgeObjectRetain();
        sub_22EC6390C();
        ++v39;
        uint64_t v46 = *(void *)(v45 + 16);
        uint64_t result = swift_bridgeObjectRelease();
        if (v39 == v46)
        {
          if (++v32 == v62)
          {
            unint64_t v39 = 0;
            BOOL v36 = 1;
LABEL_43:
            unint64_t v32 = v62;
          }
          else
          {
            while (1)
            {
              swift_bridgeObjectRetain();
              __swift_instantiateConcreteTypeFromMangledName(&qword_26861BC00);
              sub_22EC68F7C((unint64_t *)&qword_26861BBF8, &qword_26861BC00, &qword_26861BC08, &qword_26861BC10);
              unint64_t v47 = sub_22EC6368C();
              uint64_t v49 = *v48;
              swift_bridgeObjectRetain();
              ((void (*)(char *, void))v47)(v63, 0);
              swift_bridgeObjectRelease();
              uint64_t v50 = *(void *)(v49 + 16);
              uint64_t result = swift_bridgeObjectRelease();
              BOOL v36 = v50 == 0;
              if (v50) {
                break;
              }
              unint64_t v51 = v32 + 1;
              if (__OFADD__(v32, 1)) {
                goto LABEL_57;
              }
              ++v32;
              if (v51 == v62)
              {
                unint64_t v39 = 0;
                goto LABEL_43;
              }
            }
            unint64_t v39 = 0;
          }
        }
        else
        {
          BOOL v36 = 0;
        }
        if (++v38 == v26)
        {
          swift_bridgeObjectRelease();
          goto LABEL_46;
        }
      }
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
LABEL_45:
    swift_bridgeObjectRelease();
    uint64_t v16 = MEMORY[0x263F8EE78];
    goto LABEL_46;
  }
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
  return result;
}

void sub_22EC5B938()
{
  OUTLINED_FUNCTION_60_2();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  unint64_t v18 = v5;
  uint64_t v6 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Section(0);
  uint64_t v7 = OUTLINED_FUNCTION_6_10(v6);
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_5();
  uint64_t v10 = *(void *)(v4 + 16);
  if (v10)
  {
    uint64_t v19 = MEMORY[0x263F8EE78];
    OUTLINED_FUNCTION_68_1();
    sub_22EC622F0();
    uint64_t v11 = type metadata accessor for SubscriptionStoreControlConfigurationSection(0);
    OUTLINED_FUNCTION_6_10(v11);
    uint64_t v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    uint64_t v17 = *(void *)(v14 + 72);
    while (1)
    {
      v18(v13);
      if (v2) {
        break;
      }
      uint64_t v2 = 0;
      unint64_t v15 = *(void *)(v19 + 16);
      if (v15 >= *(void *)(v19 + 24) >> 1) {
        sub_22EC622F0();
      }
      *(void *)(v19 + 16) = v15 + 1;
      OUTLINED_FUNCTION_30_5();
      sub_22EC6395C(v1, v19 + v16 + *(void *)(v9 + 72) * v15, (void (*)(void))type metadata accessor for SubscriptionStoreControlStyleConfiguration.Section);
      v13 += v17;
      if (!--v10) {
        goto LABEL_9;
      }
    }
    swift_release();
  }
LABEL_9:
  OUTLINED_FUNCTION_49_4();
}

void sub_22EC5BAC4()
{
  void (*v3)(long long *__return_ptr, _OWORD *);
  void (*v4)(long long *__return_ptr, _OWORD *);
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(long long *__return_ptr, _OWORD *);
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t);
  uint64_t v37;
  uint64_t v38;

  OUTLINED_FUNCTION_60_2();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  BOOL v36 = v7;
  uint64_t v8 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
  uint64_t v9 = OUTLINED_FUNCTION_14(v8);
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_18_0();
  uint64_t v35 = v10;
  OUTLINED_FUNCTION_6_5();
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_9_5();
  uint64_t v34 = v12;
  uint64_t v13 = OUTLINED_FUNCTION_8_3();
  uint64_t v14 = type metadata accessor for SubscriptionStoreCopyWriter(v13);
  unint64_t v15 = OUTLINED_FUNCTION_6_10(v14);
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_3_2();
  unint64_t v37 = v16;
  sub_22ED7F258();
  sub_22EC62488(v18, v19, v17 & 1, *(void *)(v6 + 16), 0, 1, v6, v4, v2);
  if (!v20)
  {
LABEL_12:
    OUTLINED_FUNCTION_49_4();
    return;
  }
  unint64_t v21 = v20;
  uint64_t v38 = MEMORY[0x263F8EE78];
  OUTLINED_FUNCTION_68_1();
  sub_22EC62390();
  sub_22ED7F258();
  if ((v21 & 0x8000000000000000) == 0)
  {
    uint64_t v25 = v22;
    uint64_t v26 = v23;
    uint64_t v33 = v4;
    while (1)
    {
      unint64_t v27 = v24 & 1;
      sub_22EC63450();
      sub_22EC6395C(v34, v35, (void (*)(void))type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option);
      v36(v35);
      sub_22EC6390C();
      uint64_t v28 = v38;
      if (v0) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_68_1();
        sub_22EC62390();
        uint64_t v28 = v38;
      }
      uint64_t v29 = *(void *)(v28 + 16);
      if (v29 >= *(void *)(v28 + 24) >> 1)
      {
        sub_22EC62390();
        uint64_t v28 = v38;
      }
      *(void *)(v28 + 16) = v29 + 1;
      OUTLINED_FUNCTION_6_24();
      sub_22EC6395C(v37, v30 + v31 * v29, (void (*)(void))type metadata accessor for SubscriptionStoreCopyWriter);
      uint64_t v25 = sub_22EC62F38(v25, v26, v27, v6, v33);
      uint64_t v26 = v32;
      if (!--v21) {
        goto LABEL_12;
      }
    }
    swift_release();
    goto LABEL_12;
  }
  __break(1u);
}

uint64_t sub_22EC5BD78(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_22EC5BD80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_26861BAB0);
  uint64_t v6 = OUTLINED_FUNCTION_14(v5);
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_1_1();
  uint64_t v7 = type metadata accessor for Subscription();
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_13_0();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BBC8);
  sub_22EC69988(v1 + *(int *)(v9 + 60), v2, qword_26861BAB0);
  OUTLINED_FUNCTION_7_0(v2, 1, v7);
  if (v10)
  {
    sub_22EB0584C(v2, qword_26861BAB0);
    uint64_t v11 = *(void *)(v1 + 72);
    if (v11) {
      return sub_22EC5BEDC(*(void *)(v1 + 64), v11, v1, a1);
    }
    uint64_t v13 = OUTLINED_FUNCTION_63_3();
  }
  else
  {
    sub_22EC6395C(v2, v3, (void (*)(void))type metadata accessor for Subscription);
    sub_22EC6395C(v3, a1, (void (*)(void))type metadata accessor for Subscription);
    uint64_t v13 = a1;
    uint64_t v14 = 0;
  }
  return __swift_storeEnumTagSinglePayload(v13, v14, 1, v7);
}

uint64_t sub_22EC5BEDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v58 = a4;
  uint64_t v67 = type metadata accessor for Subscription();
  MEMORY[0x270FA5388](v67);
  uint64_t v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SubscriptionStoreControlOption(0);
  uint64_t v59 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v61 = (uint64_t)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = type metadata accessor for SubscriptionStoreControlConfigurationSection(0);
  uint64_t v60 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  uint64_t v57 = (uint64_t)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB88);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v64 = (uint64_t)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v57 - v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BBB8);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v20 = (char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v62 = (uint64_t)&v57 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v66 = (uint64_t)&v57 - v23;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(qword_26861BAB0);
  MEMORY[0x270FA5388](v24 - 8);
  uint64_t v26 = (char *)&v57 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = *(void *)(a3 + 16);
  uint64_t result = swift_bridgeObjectRetain_n();
  uint64_t v28 = 0;
  unint64_t v70 = 0;
  uint64_t v65 = v16;
LABEL_2:
  unint64_t v69 = 0;
  if (v28)
  {
LABEL_3:
    unint64_t v29 = *(void *)(v28 + 16);
    if (v69 == v29)
    {
      uint64_t v30 = v62;
      __swift_storeEnumTagSinglePayload(v62, 1, 1, v9);
      uint64_t result = sub_22EB0584C(v30, &qword_26861BBB8);
      goto LABEL_5;
    }
    if (v69 < v29)
    {
      unint64_t v40 = v69;
      uint64_t v41 = v62;
      sub_22EC638B0(v28+ ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80))+ *(void *)(v59 + 72) * v69, v62, (void (*)(void))type metadata accessor for SubscriptionStoreControlOption);
      unint64_t v69 = v40 + 1;
      __swift_storeEnumTagSinglePayload(v41, 0, 1, v9);
      uint64_t v42 = v41;
      uint64_t v39 = v66;
      sub_22EC6903C(v42, v66, &qword_26861BBB8);
      goto LABEL_13;
    }
    goto LABEL_29;
  }
  while (1)
  {
LABEL_5:
    unint64_t v31 = *(void *)(v68 + 16);
    if (v70 == v31)
    {
      uint64_t v32 = 1;
      goto LABEL_9;
    }
    if (v70 >= v31) {
      break;
    }
    unint64_t v33 = v70;
    sub_22EC638B0(v68+ ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80))+ *(void *)(v60 + 72) * v70, (uint64_t)v16, (void (*)(void))type metadata accessor for SubscriptionStoreControlConfigurationSection);
    uint64_t v32 = 0;
    unint64_t v70 = v33 + 1;
LABEL_9:
    uint64_t v34 = (uint64_t)v16;
    uint64_t v35 = v16;
    uint64_t v36 = v63;
    __swift_storeEnumTagSinglePayload(v34, v32, 1, v63);
    uint64_t v37 = (uint64_t)v35;
    uint64_t v38 = v64;
    sub_22EC6903C(v37, v64, &qword_26861BB88);
    if (__swift_getEnumTagSinglePayload(v38, 1, v36) != 1)
    {
      uint64_t v53 = v57;
      sub_22EC6395C(v64, v57, (void (*)(void))type metadata accessor for SubscriptionStoreControlConfigurationSection);
      uint64_t v54 = *(void *)(v53 + 40);
      swift_bridgeObjectRetain();
      sub_22EC6390C();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v28 = v54;
      uint64_t v16 = v65;
      goto LABEL_2;
    }
    uint64_t v39 = v66;
    __swift_storeEnumTagSinglePayload(v66, 1, 1, v9);
LABEL_13:
    sub_22EC6903C(v39, (uint64_t)v20, &qword_26861BBB8);
    uint64_t v43 = 1;
    if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v9) != 1)
    {
      uint64_t v44 = v61;
      sub_22EC6395C((uint64_t)v20, v61, (void (*)(void))type metadata accessor for SubscriptionStoreControlOption);
      sub_22EC638B0(v44, (uint64_t)v26, (void (*)(void))type metadata accessor for Subscription);
      sub_22EC6390C();
      uint64_t v43 = 0;
    }
    uint64_t v45 = v43;
    uint64_t v46 = v67;
    __swift_storeEnumTagSinglePayload((uint64_t)v26, v45, 1, v67);
    if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, v46) == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v55 = 1;
      uint64_t v56 = v58;
      goto LABEL_27;
    }
    sub_22EC6395C((uint64_t)v26, (uint64_t)v8, (void (*)(void))type metadata accessor for Subscription);
    if (_s17_StoreKit_SwiftUI012SubscriptionA25ControlStyleConfigurationV12PickerOptionV2idSSvg_0() == a1 && v47 == a2)
    {
      swift_bridgeObjectRelease();
LABEL_26:
      uint64_t v56 = v58;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22EC6395C((uint64_t)v8, v56, (void (*)(void))type metadata accessor for Subscription);
      uint64_t v55 = 0;
LABEL_27:
      __swift_storeEnumTagSinglePayload(v56, v55, 1, v67);
      return swift_bridgeObjectRelease();
    }
    uint64_t v49 = v9;
    uint64_t v50 = a1;
    uint64_t v51 = a2;
    char v52 = sub_22EE80660();
    swift_bridgeObjectRelease();
    if (v52) {
      goto LABEL_26;
    }
    uint64_t result = sub_22EC6390C();
    a2 = v51;
    a1 = v50;
    uint64_t v9 = v49;
    uint64_t v16 = v65;
    if (v28) {
      goto LABEL_3;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

void sub_22EC5C5A8()
{
  OUTLINED_FUNCTION_60_2();
  v25[1] = v4;
  uint64_t v26 = v3;
  uint64_t v27 = v5;
  uint64_t v28 = v6;
  uint64_t v8 = v7;
  OUTLINED_FUNCTION_0_0();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(v14 + 16);
  OUTLINED_FUNCTION_0_0();
  uint64_t v17 = v16;
  MEMORY[0x270FA5388](v18);
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v19);
  OUTLINED_FUNCTION_5();
  (*(void (**)(uint64_t, uint64_t))(v20 + 16))(v2, v21);
  uint64_t v22 = OUTLINED_FUNCTION_67_1();
  if (__swift_getEnumTagSinglePayload(v22, v23, v15) == 1)
  {
    __swift_storeEnumTagSinglePayload(v8, 1, 1, v26);
  }
  else
  {
    uint64_t v26 = v10;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v1, v2, v15);
    v28(v1, v13);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v1, v15);
    if (v0)
    {
      OUTLINED_FUNCTION_12_11();
      v24();
    }
  }
  OUTLINED_FUNCTION_49_4();
}

uint64_t sub_22EC5C77C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v34 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_26861BAB0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Subscription();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v33 - v9;
  uint64_t v11 = type metadata accessor for SubscriptionStoreControlOption(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v33 - v16;
  uint64_t v18 = *(void *)(v1 + 16);
  unint64_t v19 = *(void *)(v18 + 16);
  if (v19)
  {
    uint64_t v20 = type metadata accessor for SubscriptionStoreControlConfigurationSection(0);
    unint64_t v21 = 0;
    uint64_t v23 = *(void *)(v20 - 8);
    uint64_t result = v20 - 8;
    uint64_t v24 = *(void *)(v23 + 72);
    unint64_t v25 = v18 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80)) + 40;
    while (!*(void *)(*(void *)v25 + 16))
    {
      ++v21;
      v25 += v24;
      if (v19 == v21) {
        goto LABEL_5;
      }
    }
    if (v21 >= v19)
    {
      __break(1u);
      return result;
    }
    sub_22EC638B0(*(void *)v25 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), (uint64_t)v14, (void (*)(void))type metadata accessor for SubscriptionStoreControlOption);
    sub_22EC6395C((uint64_t)v14, (uint64_t)v17, (void (*)(void))type metadata accessor for SubscriptionStoreControlOption);
    sub_22EC638B0((uint64_t)v17, (uint64_t)v10, (void (*)(void))type metadata accessor for Subscription);
    sub_22EC6390C();
    uint64_t v28 = sub_22EE7F780();
    uint64_t v29 = v34;
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v34, v10, v28);
  }
  else
  {
LABEL_5:
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BBC8);
    sub_22EC69988(v1 + *(int *)(v26 + 60), (uint64_t)v4, qword_26861BAB0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
    {
      sub_22EB0584C((uint64_t)v4, qword_26861BAB0);
      uint64_t v27 = *(void *)(v1 + 8);
      if (v27) {
        return sub_22ED75D88(v27, v34);
      }
      uint64_t v32 = sub_22EE7F780();
      uint64_t v30 = v34;
      uint64_t v31 = 1;
      return __swift_storeEnumTagSinglePayload(v30, v31, 1, v32);
    }
    sub_22EC6395C((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for Subscription);
    uint64_t v28 = sub_22EE7F780();
    uint64_t v29 = v34;
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v34, v7, v28);
  }
  uint64_t v30 = v29;
  uint64_t v31 = 0;
  uint64_t v32 = v28;
  return __swift_storeEnumTagSinglePayload(v30, v31, 1, v32);
}

void SubscriptionStoreControlStyleConfiguration.PickerOption.icon.getter()
{
  OUTLINED_FUNCTION_22_5();
  uint64_t v2 = v1;
  uint64_t v3 = *(void (**)(void))(v0
                        + *(int *)(type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0) + 20));
  if (v3)
  {
    sub_22EADA90C();
    OUTLINED_FUNCTION_36_6();
    v3();
    OUTLINED_FUNCTION_74_2();
  }
  else
  {
    uint64_t v0 = 0;
  }
  *uint64_t v2 = v0;
  OUTLINED_FUNCTION_26_4();
}

uint64_t sub_22EC5CBB8()
{
  sub_22EBC50B8();

  return sub_22EE7D4B0();
}

uint64_t sub_22EC5CC00()
{
  return sub_22EC5CBB8();
}

uint64_t sub_22EC5CC24(uint64_t a1)
{
  sub_22EB8E31C(a1, (uint64_t)v2);
  return sub_22EC5CC5C((uint64_t)v2);
}

uint64_t sub_22EC5CC5C(uint64_t a1)
{
  sub_22EB8E31C(a1, (uint64_t)&v3);
  sub_22EBC50B8();
  sub_22EE7D4C0();
  return sub_22EB8E378(a1);
}

void SubscriptionStoreControlStyleConfiguration.options.getter()
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v3 = type metadata accessor for SubscriptionStoreControlConfigurationSection(0);
  uint64_t v4 = OUTLINED_FUNCTION_6_10(v3);
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_13_0();
  uint64_t v7 = type metadata accessor for SubscriptionStoreControlOption(0);
  uint64_t v8 = OUTLINED_FUNCTION_6_10(v7);
  uint64_t v110 = v9;
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_18_0();
  uint64_t v112 = v10;
  OUTLINED_FUNCTION_6_5();
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_29_7();
  MEMORY[0x270FA5388](v12);
  uint64_t v109 = (char *)&v101 - v13;
  OUTLINED_FUNCTION_6_5();
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_9_5();
  unint64_t v116 = v15;
  uint64_t v16 = OUTLINED_FUNCTION_8_3();
  type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(v16);
  OUTLINED_FUNCTION_0_0();
  uint64_t v114 = v18;
  uint64_t v115 = v17;
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_13_19(v19, v101);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v101 - v21;
  uint64_t v23 = type metadata accessor for SubscriptionStoreControlStyleConfiguration(0);
  uint64_t v24 = OUTLINED_FUNCTION_14(v23);
  MEMORY[0x270FA5388](v24);
  OUTLINED_FUNCTION_9_1();
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = (uint64_t *)((char *)&v101 - v27);
  uint64_t v29 = *(void *)(v0 + 16);
  uint64_t v30 = *(void **)(v29 + 16);
  if (v30 == (void *)1)
  {
    uint64_t v31 = *(void *)(v29
                    + ((*((unsigned __int8 *)v6 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v6 + 80))
                    + 40);
    sub_22EC638B0(v0, (uint64_t)&v101 - v27, (void (*)(void))type metadata accessor for SubscriptionStoreControlStyleConfiguration);
    uint64_t v32 = *(void *)(v31 + 16);
    if (!v32) {
      goto LABEL_32;
    }
    uint64_t v117 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_22EC62230();
    uint64_t v33 = v117;
    OUTLINED_FUNCTION_30_5();
    uint64_t v35 = v31 + v34;
    uint64_t v37 = *(void *)(v36 + 72);
    uint64_t v111 = v31;
    uint64_t v112 = v37;
    uint64_t v113 = v28;
    do
    {
      sub_22EC638B0(v35, v116, (void (*)(void))type metadata accessor for SubscriptionStoreControlOption);
      uint64_t v38 = v28[6];
      uint64_t v39 = v28[7];
      if (v38)
      {
        uint64_t v40 = swift_allocObject();
        *(void *)(v40 + 16) = v38;
        *(void *)(v40 + 24) = v39;
        uint64_t v41 = sub_22EC639F0;
      }
      else
      {
        uint64_t v41 = 0;
        uint64_t v40 = 0;
      }
      uint64_t v43 = v28[3];
      uint64_t v42 = v28[4];
      sub_22EC6395C(v116, (uint64_t)v22, (void (*)(void))type metadata accessor for SubscriptionStoreControlOption);
      uint64_t v44 = v115;
      uint64_t v45 = (uint64_t (**)(uint64_t, uint64_t, char))&v22[*(int *)(v115 + 20)];
      *uint64_t v45 = v41;
      v45[1] = (uint64_t (*)(uint64_t, uint64_t, char))v40;
      uint64_t v46 = &v22[*(int *)(v44 + 24)];
      *(void *)uint64_t v46 = v43;
      *((void *)v46 + 1) = v42;
      sub_22EADACE8(v38);
      uint64_t v117 = v33;
      unint64_t v47 = *(void *)(v33 + 16);
      unint64_t v48 = *(void *)(v33 + 24);
      swift_retain();
      if (v47 >= v48 >> 1)
      {
        sub_22EC62230();
        uint64_t v33 = v117;
      }
      *(void *)(v33 + 16) = v47 + 1;
      OUTLINED_FUNCTION_6_24();
      sub_22EC6395C((uint64_t)v22, v49 + v50 * v47, (void (*)(void))type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option);
      uint64_t v28 = v113;
      v35 += v112;
      --v32;
    }
    while (v32);
LABEL_31:
    swift_bridgeObjectRelease();
LABEL_32:
    sub_22EC6390C();
    OUTLINED_FUNCTION_5_0();
    return;
  }
  uint64_t v108 = v26;
  sub_22EC638B0(v0, v26, (void (*)(void))type metadata accessor for SubscriptionStoreControlStyleConfiguration);
  if (!v30)
  {
    swift_bridgeObjectRetain();
    goto LABEL_31;
  }
  OUTLINED_FUNCTION_30_5();
  uint64_t v52 = v29 + v51;
  uint64_t v53 = *((void *)v6 + 9);
  uint64_t v54 = swift_bridgeObjectRetain();
  unint64_t v56 = 0;
  uint64_t v107 = v52;
  while (1)
  {
    OUTLINED_FUNCTION_58_3(v54, v55, (void (*)(void))type metadata accessor for SubscriptionStoreControlConfigurationSection);
    OUTLINED_FUNCTION_57_4();
    sub_22EC6390C();
    uint64_t v57 = *((void *)v6 + 2);
    uint64_t v54 = swift_bridgeObjectRelease();
    if (v57) {
      break;
    }
    ++v56;
    v52 += v53;
    if (v30 == (void *)v56) {
      goto LABEL_31;
    }
  }
  if (v30 == (void *)v56) {
    goto LABEL_68;
  }
  if (v56 >= *(void *)(v29 + 16))
  {
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  OUTLINED_FUNCTION_58_3(v54, v55, (void (*)(void))type metadata accessor for SubscriptionStoreControlConfigurationSection);
  OUTLINED_FUNCTION_57_4();
  sub_22EC6390C();
  uint64_t v58 = *((void *)v6 + 2);
  uint64_t v59 = swift_bridgeObjectRelease();
  unint64_t v61 = v56 + 1;
  if (v61 < (unint64_t)v30)
  {
    uint64_t v62 = v52 + v53;
    while (1)
    {
      if (v61 >= *(void *)(v29 + 16)) {
        goto LABEL_65;
      }
      OUTLINED_FUNCTION_58_3(v59, v60, (void (*)(void))type metadata accessor for SubscriptionStoreControlConfigurationSection);
      OUTLINED_FUNCTION_57_4();
      sub_22EC6390C();
      uint64_t v63 = *((void *)v6 + 2);
      uint64_t v59 = swift_bridgeObjectRelease();
      BOOL v64 = __OFADD__(v58, v63);
      v58 += v63;
      if (v64) {
        break;
      }
      ++v61;
      v62 += v53;
      if (v61 >= (unint64_t)v30) {
        goto LABEL_25;
      }
    }
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
LABEL_25:
  if (!v58) {
    goto LABEL_31;
  }
  uint64_t v118 = MEMORY[0x263F8EE78];
  sub_22EC62230();
  uint64_t v67 = 0;
  uint64_t v68 = v107;
  while (1)
  {
    OUTLINED_FUNCTION_58_3(v65, v66, (void (*)(void))type metadata accessor for SubscriptionStoreControlConfigurationSection);
    OUTLINED_FUNCTION_57_4();
    sub_22EC6390C();
    uint64_t v69 = *((void *)v6 + 2);
    uint64_t v65 = swift_bridgeObjectRelease();
    uint64_t v6 = (uint64_t (*)())(v69 == 0);
    if (v69) {
      break;
    }
    unint64_t v70 = (void *)((char *)v67 + 1);
    if (__OFADD__(v67, 1)) {
      goto LABEL_67;
    }
    uint64_t v67 = (void *)((char *)v67 + 1);
    v68 += v53;
    if (v70 == v30)
    {
      unint64_t v71 = (unint64_t)v30;
      goto LABEL_34;
    }
  }
  unint64_t v71 = (unint64_t)v67;
LABEL_34:
  if ((v58 & 0x8000000000000000) == 0)
  {
    uint64_t v72 = 0;
    unint64_t v116 = 0;
    uint64_t v104 = v29;
    uint64_t v105 = v2;
    uint64_t v106 = v58;
    uint64_t v102 = v30;
    uint64_t v103 = v53;
    while (1)
    {
      if (v72 == v58)
      {
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        __break(1u);
        goto LABEL_66;
      }
      if ((v71 & 0x8000000000000000) != 0) {
        goto LABEL_62;
      }
      if (v71 >= *(void *)(v29 + 16)) {
        goto LABEL_63;
      }
      uint64_t v73 = v107 + v53 * v71;
      sub_22EC638B0(v73, v1, (void (*)(void))type metadata accessor for SubscriptionStoreControlConfigurationSection);
      uint64_t v74 = *(void *)(v1 + 40);
      swift_bridgeObjectRetain();
      sub_22EC6390C();
      if (v6) {
        goto LABEL_72;
      }
      if (v116 >= *(void *)(v74 + 16)) {
        goto LABEL_64;
      }
      uint64_t v113 = (void *)v71;
      uint64_t v75 = (uint64_t)v109;
      OUTLINED_FUNCTION_6_24();
      sub_22EC638B0(v76 + v77 * v78, v75, (void (*)(void))type metadata accessor for SubscriptionStoreControlOption);
      swift_bridgeObjectRelease();
      sub_22EC6395C(v75, v2, (void (*)(void))type metadata accessor for SubscriptionStoreControlOption);
      sub_22EC638B0(v2, v112, (void (*)(void))type metadata accessor for SubscriptionStoreControlOption);
      uint64_t v79 = v108;
      uint64_t v80 = *(void *)(v108 + 48);
      uint64_t v81 = *(void *)(v108 + 56);
      if (v80)
      {
        uint64_t v82 = swift_allocObject();
        *(void *)(v82 + 16) = v80;
        *(void *)(v82 + 24) = v81;
        uint64_t v83 = sub_22EC639F0;
      }
      else
      {
        uint64_t v83 = 0;
        uint64_t v82 = 0;
      }
      uint64_t v84 = *(void *)(v79 + 24);
      uint64_t v85 = *(void *)(v79 + 32);
      uint64_t v86 = v111;
      sub_22EC6395C(v112, v111, (void (*)(void))type metadata accessor for SubscriptionStoreControlOption);
      uint64_t v87 = v115;
      uint64_t v88 = (uint64_t (**)(uint64_t, uint64_t, char))(v86 + *(int *)(v115 + 20));
      *uint64_t v88 = v83;
      v88[1] = (uint64_t (*)(uint64_t, uint64_t, char))v82;
      uint64_t v89 = (void *)(v86 + *(int *)(v87 + 24));
      *uint64_t v89 = v84;
      v89[1] = v85;
      sub_22EADACE8(v80);
      swift_retain();
      uint64_t v2 = v105;
      sub_22EC6390C();
      uint64_t v90 = v118;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22EC62230();
        uint64_t v90 = v118;
      }
      uint64_t v53 = v103;
      uint64_t v29 = v104;
      uint64_t v58 = v106;
      unint64_t v91 = *(void *)(v90 + 16);
      if (v91 >= *(void *)(v90 + 24) >> 1)
      {
        sub_22EC62230();
        uint64_t v90 = v118;
      }
      *(void *)(v90 + 16) = v91 + 1;
      OUTLINED_FUNCTION_6_24();
      sub_22EC6395C(v111, v92 + v93 * v91, (void (*)(void))type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option);
      sub_22EC638B0(v73, v1, (void (*)(void))type metadata accessor for SubscriptionStoreControlConfigurationSection);
      OUTLINED_FUNCTION_57_4();
      sub_22EC6390C();
      unint64_t v94 = v116 + 1;
      uint64_t v95 = *(void *)(v91 + 17);
      swift_bridgeObjectRelease();
      unint64_t v116 = v94;
      if (v94 == v95)
      {
        uint64_t v96 = (void *)((char *)v113 + 1);
        uint64_t v97 = v102;
        if ((void *)((char *)v113 + 1) == v102)
        {
          unint64_t v116 = 0;
          LOBYTE(v6) = 1;
LABEL_59:
          unint64_t v71 = (unint64_t)v97;
          uint64_t v58 = v106;
          goto LABEL_51;
        }
        while (1)
        {
          uint64_t v113 = v96;
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_26861BC00);
          sub_22EC68F7C((unint64_t *)&qword_26861BBF8, &qword_26861BC00, &qword_26861BC08, &qword_26861BC10);
          uint64_t v6 = sub_22EC6368C();
          uint64_t v99 = *v98;
          swift_bridgeObjectRetain();
          ((void (*)(uint64_t *, void))v6)(&v117, 0);
          swift_bridgeObjectRelease();
          uint64_t v100 = *(void *)(v99 + 16);
          swift_bridgeObjectRelease();
          LOBYTE(v6) = v100 == 0;
          if (v100) {
            break;
          }
          if (__OFADD__(v113, 1)) {
            goto LABEL_71;
          }
          uint64_t v96 = (void *)((char *)v113 + 1);
          if ((void *)((char *)v113 + 1) == v97)
          {
            unint64_t v116 = 0;
            goto LABEL_59;
          }
        }
        unint64_t v116 = 0;
        uint64_t v58 = v106;
      }
      else
      {
        LOBYTE(v6) = 0;
      }
      unint64_t v71 = (unint64_t)v113;
LABEL_51:
      if (++v72 == v58) {
        goto LABEL_31;
      }
    }
  }
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  sub_22EC6390C();
  __break(1u);
}

void (*SubscriptionStoreControlStyleConfiguration.Option.activeOffer.read(void *a1))(void **a1)
{
  uint64_t v3 = type metadata accessor for SubscriptionStoreControlOption(0);
  uint64_t v4 = malloc(*(void *)(*(void *)(v3 - 8) + 64));
  *a1 = v4;
  sub_22EC638B0(v1, (uint64_t)v4, (void (*)(void))type metadata accessor for SubscriptionStoreControlOption);
  return sub_22EC5D740;
}

void sub_22EC5D740(void **a1)
{
  uint64_t v1 = *a1;
  sub_22EC6390C();

  free(v1);
}

void SubscriptionStoreControlStyleConfiguration.Option.icon.getter()
{
  OUTLINED_FUNCTION_22_5();
  uint64_t v2 = v1;
  uint64_t v3 = *(void (**)(void))(v0
                        + *(int *)(type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0) + 20));
  if (v3)
  {
    sub_22EADA90C();
    OUTLINED_FUNCTION_36_6();
    v3();
    OUTLINED_FUNCTION_74_2();
  }
  else
  {
    uint64_t v0 = 0;
  }
  *uint64_t v2 = v0;
  OUTLINED_FUNCTION_26_4();
}

unint64_t sub_22EC5D7F8@<X0>(uint64_t *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_268622038);
  *a1 = swift_initStaticObject();
  unint64_t result = sub_22EB57EAC();
  a1[4] = (uint64_t)&unk_26E26DD68;
  a1[5] = result;
  return result;
}

void View.subscriptionStoreControlStyle<A>(_:)()
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v24 = v1;
  uint64_t v3 = v2;
  uint64_t v23 = v4;
  uint64_t v6 = v5;
  swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_22EE80040();
  OUTLINED_FUNCTION_14(v7);
  OUTLINED_FUNCTION_9_7();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v22 - v9;
  OUTLINED_FUNCTION_0_0();
  uint64_t v12 = v11;
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_17_14();
  uint64_t v14 = type metadata accessor for SubscriptionStoreControlPropertiesModifier();
  OUTLINED_FUNCTION_0_0();
  uint64_t v16 = v15;
  OUTLINED_FUNCTION_9_7();
  __n128 v18 = MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v22 - v19;
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v12 + 16))(v0, v6, v3, v18);
  OUTLINED_FUNCTION_21_9();
  sub_22EC6004C(v21);
  sub_22EC600A8(v0, (uint64_t)v10, v3, (uint64_t)v20);
  MEMORY[0x230FAB9D0](v20, v23, v14, v24);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v14);
  OUTLINED_FUNCTION_5_0();
}

uint64_t (*SubscriptionStoreControlStyleConfiguration.Icon.icon.modify())(void)
{
  return nullsub_1;
}

uint64_t SubscriptionStoreControlStyleConfiguration.Section.ID.hashValue.getter()
{
  return sub_22EE807F0();
}

uint64_t sub_22EC5DA50()
{
  return sub_22EE807F0();
}

uint64_t SubscriptionStoreControlStyleConfiguration.Section.Footer.body.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22EC638B0(v1, a1, (void (*)(void))type metadata accessor for SubscriptionOptionSectionAccessorySubview);
}

uint64_t SubscriptionStoreControlStyleConfiguration.Section.id.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22EC63A0C(v1, a1);
}

uint64_t SubscriptionStoreControlStyleConfiguration.Section.id.setter(long long *a1)
{
  return sub_22EC63A44(a1, v1);
}

uint64_t (*SubscriptionStoreControlStyleConfiguration.Section.id.modify())(void)
{
  return nullsub_1;
}

uint64_t SubscriptionStoreControlStyleConfiguration.Section.header.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Section(0);
  return sub_22EC69988(v1 + *(int *)(v3 + 20), a1, &qword_268621EC8);
}

uint64_t SubscriptionStoreControlStyleConfiguration.Section.header.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Section(0);
  return sub_22EC63AA4(a1, v1 + *(int *)(v3 + 20), &qword_268621EC8);
}

uint64_t (*SubscriptionStoreControlStyleConfiguration.Section.header.modify())(void)
{
  return nullsub_1;
}

uint64_t SubscriptionStoreControlStyleConfiguration.Section.options.getter()
{
  type metadata accessor for SubscriptionStoreControlStyleConfiguration.Section(0);

  return swift_bridgeObjectRetain();
}

uint64_t SubscriptionStoreControlStyleConfiguration.Section.options.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for SubscriptionStoreControlStyleConfiguration.Section(0) + 24);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*SubscriptionStoreControlStyleConfiguration.Section.options.modify())(void)
{
  return nullsub_1;
}

uint64_t SubscriptionStoreControlStyleConfiguration.Section.footer.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Section(0);
  return sub_22EC69988(v1 + *(int *)(v3 + 28), a1, &qword_268621ED0);
}

uint64_t SubscriptionStoreControlStyleConfiguration.Section.footer.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Section(0);
  return sub_22EC63AA4(a1, v1 + *(int *)(v3 + 28), &qword_268621ED0);
}

uint64_t (*SubscriptionStoreControlStyleConfiguration.Section.footer.modify())(void)
{
  return nullsub_1;
}

void (*SubscriptionStoreControlStyleConfiguration.Option.subscription.read())(void **a1)
{
  OUTLINED_FUNCTION_51_3();
  uint64_t v2 = type metadata accessor for Subscription();
  OUTLINED_FUNCTION_14(v2);
  uint64_t v4 = malloc(*(void *)(v3 + 64));
  *uint64_t v0 = v4;
  sub_22EC638B0(v1, (uint64_t)v4, (void (*)(void))type metadata accessor for Subscription);
  return sub_22EC5DDD0;
}

void sub_22EC5DDD0(void **a1)
{
  uint64_t v1 = *a1;
  sub_22EC6390C();

  free(v1);
}

uint64_t type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(uint64_t a1)
{
  return sub_22EAD01C0(a1, (uint64_t *)&unk_268621F50);
}

uint64_t SubscriptionStoreControlStyleConfiguration.Option.subscription.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22EE7F780();
  OUTLINED_FUNCTION_2_0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);

  return v5(a1, v1, v3);
}

uint64_t SubscriptionStoreControlStyleConfiguration.Option.activeOffer.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SubscriptionStoreControlOption(0);
  return sub_22EC69988(v1 + *(int *)(v3 + 20), a1, &qword_26861BB58);
}

Swift::Void __swiftcall SubscriptionStoreControlStyleConfiguration.Option.subscribe()()
{
  uint64_t v1 = *(void (**)(uint64_t, _OWORD *))(v0
                                                + *(int *)(type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0)
                                                         + 24));
  char v3 = 0;
  memset(v2, 0, sizeof(v2));
  v1(v0, v2);
}

uint64_t SubscriptionStoreControlStyleConfiguration.Option.subscript.getter()
{
  OUTLINED_FUNCTION_9_20();
  uint64_t v0 = type metadata accessor for Subscription();
  uint64_t v1 = OUTLINED_FUNCTION_14(v0);
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_58_3(v2, v3, (void (*)(void))type metadata accessor for Subscription);
  swift_getAtKeyPath();
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_5_2();
  return v4();
}

void SubscriptionStoreControlStyleConfiguration.Option.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_6_0();
  a19 = v21;
  a20 = v22;
  OUTLINED_FUNCTION_9_20();
  uint64_t v24 = *(void *)(v23 + *MEMORY[0x263F8EA20]);
  OUTLINED_FUNCTION_0_0();
  uint64_t v26 = v25;
  OUTLINED_FUNCTION_9_7();
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (char *)&a9 - v28;
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BBA8);
  uint64_t v31 = OUTLINED_FUNCTION_14(v30);
  MEMORY[0x270FA5388](v31);
  OUTLINED_FUNCTION_29_7();
  MEMORY[0x270FA5388](v32);
  uint64_t v34 = (char *)&a9 - v33;
  sub_22EE7F300();
  sub_22EC69988((uint64_t)v34, v20, &qword_26861BBA8);
  uint64_t v35 = OUTLINED_FUNCTION_67_1();
  OUTLINED_FUNCTION_7_0(v35, v36, v24);
  if (v37)
  {
    sub_22EB0584C(v20, &qword_26861BBA8);
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v26 + 32))(v29, v20, v24);
    sub_22EB0584C((uint64_t)v34, &qword_26861BBA8);
    OUTLINED_FUNCTION_21_9();
    swift_getAtKeyPath();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v29, v24);
    OUTLINED_FUNCTION_61_4();
    __swift_storeEnumTagSinglePayload(v38, v39, v40, v41);
    OUTLINED_FUNCTION_5_0();
  }
}

void SubscriptionStoreControlStyleConfiguration.Option.subscript.getter()
{
  OUTLINED_FUNCTION_6_0();
  v30[0] = v1;
  v30[1] = v2;
  OUTLINED_FUNCTION_0_0();
  v30[2] = v3;
  OUTLINED_FUNCTION_9_7();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = *v5;
  OUTLINED_FUNCTION_0_0();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_22_0();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v30 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BBA8);
  uint64_t v14 = OUTLINED_FUNCTION_14(v13);
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_9_1();
  uint64_t v17 = v15 - v16;
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)v30 - v19;
  sub_22EE7F300();
  sub_22EC69988((uint64_t)v20, v17, &qword_26861BBA8);
  OUTLINED_FUNCTION_7_0(v17, 1, v6);
  if (v21)
  {
    sub_22EB0584C(v17, &qword_26861BBA8);
    __break(1u);
  }
  else
  {
    uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 32);
    v22(v12, v17, v6);
    sub_22EB0584C((uint64_t)v20, &qword_26861BBA8);
    v22(v0, (uint64_t)v12, v6);
    uint64_t v23 = swift_getAtKeyPath();
    MEMORY[0x270FA5388](v23);
    OUTLINED_FUNCTION_45_3();
    sub_22EC5C5A8();
    OUTLINED_FUNCTION_5_2();
    v27(v24, v25, v26);
    uint64_t v28 = OUTLINED_FUNCTION_21_9();
    v29(v28);
    OUTLINED_FUNCTION_5_0();
  }
}

uint64_t (*SubscriptionStoreControlStyleConfiguration.PickerOption.subscription.read(void *a1))()
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
  OUTLINED_FUNCTION_14(v4);
  uint64_t v6 = malloc(*(void *)(v5 + 64));
  void v3[4] = v6;
  sub_22EC638B0(v1, (uint64_t)v6, (void (*)(void))type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option);
  v3[5] = SubscriptionStoreControlStyleConfiguration.Option.subscription.read();
  return sub_22EC5E4D0;
}

uint64_t SubscriptionStoreControlStyleConfiguration.PickerOption.subscription.getter()
{
  uint64_t v2 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
  uint64_t v3 = OUTLINED_FUNCTION_14(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_14_0();
  sub_22EC638B0(v0, v1, (void (*)(void))type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option);
  sub_22EE7F780();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_12_12();
  v4();
  return sub_22EC6390C();
}

uint64_t SubscriptionStoreControlStyleConfiguration.PickerOption.isSelected.getter()
{
  OUTLINED_FUNCTION_75_2();
  return *(unsigned __int8 *)(v0 + v1);
}

uint64_t (*SubscriptionStoreControlStyleConfiguration.PickerOption.activeOffer.read(void *a1))()
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
  OUTLINED_FUNCTION_14(v4);
  uint64_t v6 = malloc(*(void *)(v5 + 64));
  void v3[4] = v6;
  sub_22EC638B0(v1, (uint64_t)v6, (void (*)(void))type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option);
  v3[5] = SubscriptionStoreControlStyleConfiguration.Option.activeOffer.read(v3);
  return sub_22EC5E4D0;
}

void sub_22EC5E65C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  uint64_t v2 = *(void **)(*a1 + 32);
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  sub_22EC6390C();
  free(v2);

  free(v1);
}

uint64_t SubscriptionStoreControlStyleConfiguration.PickerOption.activeOffer.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
  uint64_t v5 = OUTLINED_FUNCTION_14(v4);
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_14_0();
  sub_22EC638B0(v1, v2, (void (*)(void))type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option);
  uint64_t v6 = type metadata accessor for SubscriptionStoreControlOption(0);
  sub_22EC69988(v2 + *(int *)(v6 + 20), a1, &qword_26861BB58);
  return sub_22EC6390C();
}

void SubscriptionStoreControlStyleConfiguration.PickerOption.subscript.getter()
{
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_9_20();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_9_7();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_22EE7F780();
  OUTLINED_FUNCTION_0_0();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = OUTLINED_FUNCTION_17_14();
  uint64_t v12 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(v11);
  uint64_t v13 = OUTLINED_FUNCTION_14(v12);
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_64_1();
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BBA8);
  uint64_t v15 = OUTLINED_FUNCTION_14(v14);
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_5();
  sub_22EC638B0(v0, v3, (void (*)(void))type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v2, v3, v7);
  sub_22EC6390C();
  sub_22EE7F300();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v2, v7);
  uint64_t v16 = *(void *)(v5 + *MEMORY[0x263F8EA20]);
  uint64_t v17 = OUTLINED_FUNCTION_67_1();
  OUTLINED_FUNCTION_7_0(v17, v18, v16);
  if (v19)
  {
    sub_22EB0584C(v1, &qword_26861BBA8);
    OUTLINED_FUNCTION_51_1();
    __swift_storeEnumTagSinglePayload(v20, v21, v22, v23);
  }
  else
  {
    uint64_t v24 = swift_getAtKeyPath();
    MEMORY[0x270FA5388](v24);
    OUTLINED_FUNCTION_45_3();
    sub_22EC5C5A8();
    OUTLINED_FUNCTION_5_2();
    v25();
    OUTLINED_FUNCTION_4_2();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v1, v16);
  }
  OUTLINED_FUNCTION_5_0();
}

uint64_t sub_22EC5EA38()
{
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_12_12();
  v0();
  OUTLINED_FUNCTION_47_2();
  return __swift_storeEnumTagSinglePayload(v1, v2, v3, v4);
}

uint64_t SubscriptionStoreControlStyleConfiguration.descriptionVisibility.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26861BBC8) + 64));
}

uint64_t SubscriptionStoreControlStyleConfiguration.groupDisplayName.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C968);
  uint64_t v2 = OUTLINED_FUNCTION_14(v1);
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_14_0();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BBA8);
  uint64_t v4 = OUTLINED_FUNCTION_14(v3);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22EC5C77C(v0);
  uint64_t v7 = sub_22EE7F780();
  OUTLINED_FUNCTION_7_0(v0, 1, v7);
  if (v14)
  {
    uint64_t v8 = &qword_26861C968;
    uint64_t v9 = v0;
LABEL_7:
    sub_22EB0584C(v9, v8);
    return 0;
  }
  sub_22EE7F300();
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_5_2();
  v10();
  uint64_t v11 = sub_22EE7F540();
  uint64_t v12 = OUTLINED_FUNCTION_63_3();
  OUTLINED_FUNCTION_7_0(v12, v13, v11);
  if (v14)
  {
    uint64_t v8 = &qword_26861BBA8;
    uint64_t v9 = (uint64_t)v6;
    goto LABEL_7;
  }
  uint64_t v15 = sub_22EE7F450();
  OUTLINED_FUNCTION_4_2();
  uint64_t v16 = OUTLINED_FUNCTION_62_4();
  v17(v16);
  return v15;
}

void SubscriptionStoreControlStyleConfiguration.autoRenewPreference.getter()
{
  OUTLINED_FUNCTION_22_5();
  uint64_t v3 = type metadata accessor for Subscription();
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_14_0();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_26861BAB0);
  uint64_t v6 = OUTLINED_FUNCTION_14(v5);
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_22_0();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v24 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BBC8);
  sub_22EC69988(v0 + *(int *)(v10 + 60), v2, qword_26861BAB0);
  OUTLINED_FUNCTION_7_0(v2, 1, v3);
  if (v11)
  {
    sub_22EB0584C(v2, qword_26861BAB0);
    uint64_t v12 = *(void *)(v0 + 72);
    if (!v12)
    {
      OUTLINED_FUNCTION_51_1();
      __swift_storeEnumTagSinglePayload(v21, v22, v23, v3);
      goto LABEL_8;
    }
    sub_22EC5BEDC(*(void *)(v0 + 64), v12, v0, (uint64_t)v9);
  }
  else
  {
    sub_22EC6395C(v2, v1, (void (*)(void))type metadata accessor for Subscription);
    sub_22EC6395C(v1, (uint64_t)v9, (void (*)(void))type metadata accessor for Subscription);
    OUTLINED_FUNCTION_61_4();
    __swift_storeEnumTagSinglePayload(v13, v14, v15, v3);
  }
  OUTLINED_FUNCTION_7_0((uint64_t)v9, 1, v3);
  if (v11)
  {
LABEL_8:
    sub_22EB0584C((uint64_t)v9, qword_26861BAB0);
    sub_22EE7F780();
    OUTLINED_FUNCTION_51_1();
    goto LABEL_9;
  }
  sub_22EE7F780();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_62_4();
  OUTLINED_FUNCTION_12_12();
  v16();
  sub_22EC6390C();
  OUTLINED_FUNCTION_47_2();
LABEL_9:
  __swift_storeEnumTagSinglePayload(v17, v18, v19, v20);
  OUTLINED_FUNCTION_26_4();
}

uint64_t SubscriptionStoreControlStyleConfiguration.sections.getter()
{
  swift_bridgeObjectRetain();
  sub_22EC5B938();
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();
  return v1;
}

void sub_22EC5EED4()
{
  OUTLINED_FUNCTION_60_2();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = type metadata accessor for SubscriptionStoreControlOption(0);
  uint64_t v10 = OUTLINED_FUNCTION_6_10(v9);
  uint64_t v72 = v11;
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_3_2();
  uint64_t v73 = v12;
  uint64_t v13 = OUTLINED_FUNCTION_8_3();
  type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(v13);
  OUTLINED_FUNCTION_0_0();
  uint64_t v70 = v15;
  uint64_t v71 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621ED0);
  uint64_t v19 = OUTLINED_FUNCTION_14(v18);
  MEMORY[0x270FA5388](v19);
  OUTLINED_FUNCTION_5();
  uint64_t v20 = type metadata accessor for SubscriptionStoreControlStyleConfiguration(0);
  uint64_t v21 = OUTLINED_FUNCTION_14(v20);
  MEMORY[0x270FA5388](v21);
  uint64_t v74 = (uint64_t *)((char *)v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB40);
  uint64_t v24 = OUTLINED_FUNCTION_14(v23);
  MEMORY[0x270FA5388](v24);
  OUTLINED_FUNCTION_13_19(v25, v61[0]);
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)v61 - v27;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621EC8);
  uint64_t v30 = OUTLINED_FUNCTION_14(v29);
  MEMORY[0x270FA5388](v30);
  OUTLINED_FUNCTION_56_3();
  sub_22EADAAEC(v6, (uint64_t)v75);
  uint64_t v66 = v6 + *(int *)(type metadata accessor for SubscriptionStoreControlConfigurationSection(0) + 24);
  sub_22EC69988(v66, (uint64_t)v28, &qword_26861BB40);
  type metadata accessor for SubscriptionOptionSectionAccessorySubview();
  uint64_t v31 = 1;
  uint64_t v32 = OUTLINED_FUNCTION_63_3();
  uint64_t v67 = v33;
  if (__swift_getEnumTagSinglePayload(v32, v34, v33) != 1)
  {
    sub_22EC6395C((uint64_t)v28, v2, (void (*)(void))type metadata accessor for SubscriptionOptionSectionAccessorySubview);
    uint64_t v31 = 0;
  }
  uint64_t v35 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Section.Header(0);
  __swift_storeEnumTagSinglePayload(v2, v31, 1, v35);
  uint64_t v36 = *(void *)(v6 + 40);
  sub_22EC638B0(v4, (uint64_t)v74, (void (*)(void))type metadata accessor for SubscriptionStoreControlStyleConfiguration);
  uint64_t v37 = *(void *)(v36 + 16);
  uint64_t v38 = MEMORY[0x263F8EE78];
  if (v37)
  {
    uint64_t v62 = v2;
    uint64_t v63 = v1;
    uint64_t v64 = v8;
    uint64_t v65 = v0;
    uint64_t v77 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_68_1();
    sub_22EC62230();
    uint64_t v38 = v77;
    OUTLINED_FUNCTION_30_5();
    v61[1] = v36;
    uint64_t v40 = v36 + v39;
    uint64_t v69 = *(void *)(v41 + 72);
    do
    {
      uint64_t v72 = v38;
      sub_22EC638B0(v40, v73, (void (*)(void))type metadata accessor for SubscriptionStoreControlOption);
      uint64_t v42 = v74[6];
      uint64_t v43 = v74[7];
      if (v42)
      {
        uint64_t v44 = swift_allocObject();
        *(void *)(v44 + 16) = v42;
        *(void *)(v44 + 24) = v43;
        uint64_t v45 = sub_22EC639F0;
      }
      else
      {
        uint64_t v45 = 0;
        uint64_t v44 = 0;
      }
      uint64_t v46 = v74[3];
      uint64_t v47 = v74[4];
      sub_22EC6395C(v73, (uint64_t)v17, (void (*)(void))type metadata accessor for SubscriptionStoreControlOption);
      uint64_t v48 = v71;
      uint64_t v49 = (uint64_t (**)(uint64_t, uint64_t, char))&v17[*(int *)(v71 + 20)];
      _OWORD *v49 = v45;
      v49[1] = (uint64_t (*)(uint64_t, uint64_t, char))v44;
      uint64_t v50 = &v17[*(int *)(v48 + 24)];
      *(void *)uint64_t v50 = v46;
      *((void *)v50 + 1) = v47;
      sub_22EADACE8(v42);
      uint64_t v38 = v72;
      uint64_t v78 = v72;
      unint64_t v52 = *(void *)(v72 + 16);
      unint64_t v51 = *(void *)(v72 + 24);
      swift_retain();
      if (v52 >= v51 >> 1)
      {
        sub_22EC62230();
        uint64_t v38 = v78;
      }
      *(void *)(v38 + 16) = v52 + 1;
      OUTLINED_FUNCTION_54_1();
      sub_22EC6395C((uint64_t)v17, v53 + v54 * v52, (void (*)(void))type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option);
      v40 += v69;
      --v37;
    }
    while (v37);
    swift_bridgeObjectRelease();
    uint64_t v8 = v64;
    uint64_t v2 = v62;
    uint64_t v1 = v63;
  }
  uint64_t v55 = v68;
  sub_22EC6390C();
  uint64_t v56 = type metadata accessor for SubscriptionStoreContentConfiguration.Section.AccessorySubviews(0);
  sub_22EC69988(v66 + *(int *)(v56 + 20), v55, &qword_26861BB40);
  uint64_t v57 = 1;
  if (__swift_getEnumTagSinglePayload(v55, 1, v67) != 1)
  {
    sub_22EC6395C(v55, v1, (void (*)(void))type metadata accessor for SubscriptionOptionSectionAccessorySubview);
    uint64_t v57 = 0;
  }
  uint64_t v58 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Section.Footer(0);
  __swift_storeEnumTagSinglePayload(v1, v57, 1, v58);
  long long v59 = v75[1];
  *(_OWORD *)uint64_t v8 = v75[0];
  *(_OWORD *)(v8 + 16) = v59;
  *(void *)(v8 + 32) = v76;
  uint64_t v60 = (int *)type metadata accessor for SubscriptionStoreControlStyleConfiguration.Section(0);
  sub_22EC6903C(v2, v8 + v60[5], &qword_268621EC8);
  *(void *)(v8 + v60[6]) = v38;
  sub_22EC6903C(v1, v8 + v60[7], &qword_268621ED0);
  OUTLINED_FUNCTION_49_4();
}

uint64_t sub_22EC5F3F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SubscriptionStoreControlStyleConfiguration.Option.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void SubscriptionStoreControlStyleConfiguration.Option.hash(into:)()
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v1 = sub_22EE7F670();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_13_0();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
  uint64_t v4 = OUTLINED_FUNCTION_14(v3);
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_42_3();
  uint64_t v5 = type metadata accessor for SubscriptionStoreControlOption(0);
  OUTLINED_FUNCTION_46_2(v5);
  OUTLINED_FUNCTION_7_0(v0, 1, v1);
  if (v6)
  {
    sub_22EE807D0();
  }
  else
  {
    uint64_t v7 = OUTLINED_FUNCTION_34_6();
    v8(v7);
    sub_22EE807D0();
    sub_22EC63C9C(&qword_26861BB90, MEMORY[0x263F17F28]);
    OUTLINED_FUNCTION_70_1();
    uint64_t v9 = OUTLINED_FUNCTION_73_2();
    v10(v9);
  }
  sub_22EE807C0();
  OUTLINED_FUNCTION_5_0();
}

void SubscriptionStoreControlStyleConfiguration.Option.hashValue.getter()
{
  OUTLINED_FUNCTION_22_5();
  uint64_t v1 = sub_22EE7F670();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_1_1();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
  uint64_t v4 = OUTLINED_FUNCTION_14(v3);
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_33_2();
  sub_22EE05510();
  uint64_t v5 = type metadata accessor for SubscriptionStoreControlOption(0);
  OUTLINED_FUNCTION_43_3(v5);
  OUTLINED_FUNCTION_7_0(v0, 1, v1);
  if (v6)
  {
    sub_22EE807D0();
  }
  else
  {
    uint64_t v7 = OUTLINED_FUNCTION_27_6();
    v8(v7);
    sub_22EE807D0();
    sub_22EC63C9C(&qword_26861BB90, MEMORY[0x263F17F28]);
    OUTLINED_FUNCTION_69_2();
    uint64_t v9 = OUTLINED_FUNCTION_71_2();
    v10(v9);
  }
  sub_22EE807C0();
  sub_22EE807F0();
  OUTLINED_FUNCTION_26_4();
}

uint64_t sub_22EC5F6D4()
{
  uint64_t v1 = sub_22EE7F670();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22EE807B0();
  sub_22EE05510();
  uint64_t v8 = type metadata accessor for SubscriptionStoreControlOption(0);
  sub_22EC69988(v0 + *(int *)(v8 + 20), (uint64_t)v7, &qword_26861BB58);
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v1) == 1)
  {
    sub_22EE807D0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_22EE807D0();
    sub_22EC63C9C(&qword_26861BB90, MEMORY[0x263F17F28]);
    sub_22EE7F830();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  sub_22EE807C0();
  return sub_22EE807F0();
}

uint64_t sub_22EC5F8DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SubscriptionStoreControlStyleConfiguration.PickerOption.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t static SubscriptionStoreControlStyleConfiguration.PickerOption.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  _s17_StoreKit_SwiftUI012SubscriptionA25ControlStyleConfigurationV6OptionV2eeoiySbAE_AEtFZ_0();
  if (v4)
  {
    OUTLINED_FUNCTION_75_2();
    char v6 = *(unsigned char *)(a1 + v5) ^ *(unsigned char *)(a2 + v5) ^ 1;
  }
  else
  {
    char v6 = 0;
  }
  return v6 & 1;
}

void SubscriptionStoreControlStyleConfiguration.PickerOption.hash(into:)()
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v1 = sub_22EE7F670();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_13_0();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
  uint64_t v4 = OUTLINED_FUNCTION_14(v3);
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_42_3();
  uint64_t v5 = type metadata accessor for SubscriptionStoreControlOption(0);
  OUTLINED_FUNCTION_46_2(v5);
  OUTLINED_FUNCTION_7_0(v0, 1, v1);
  if (v6)
  {
    sub_22EE807D0();
  }
  else
  {
    uint64_t v7 = OUTLINED_FUNCTION_34_6();
    v8(v7);
    sub_22EE807D0();
    sub_22EC63C9C(&qword_26861BB90, MEMORY[0x263F17F28]);
    OUTLINED_FUNCTION_70_1();
    uint64_t v9 = OUTLINED_FUNCTION_73_2();
    v10(v9);
  }
  sub_22EE807C0();
  OUTLINED_FUNCTION_75_2();
  sub_22EE807D0();
  OUTLINED_FUNCTION_5_0();
}

void SubscriptionStoreControlStyleConfiguration.PickerOption.hashValue.getter()
{
  OUTLINED_FUNCTION_22_5();
  uint64_t v1 = sub_22EE7F670();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_1_1();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
  uint64_t v4 = OUTLINED_FUNCTION_14(v3);
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_33_2();
  sub_22EE05510();
  uint64_t v5 = type metadata accessor for SubscriptionStoreControlOption(0);
  OUTLINED_FUNCTION_43_3(v5);
  OUTLINED_FUNCTION_7_0(v0, 1, v1);
  if (v6)
  {
    sub_22EE807D0();
  }
  else
  {
    uint64_t v7 = OUTLINED_FUNCTION_27_6();
    v8(v7);
    sub_22EE807D0();
    sub_22EC63C9C(&qword_26861BB90, MEMORY[0x263F17F28]);
    OUTLINED_FUNCTION_69_2();
    uint64_t v9 = OUTLINED_FUNCTION_71_2();
    v10(v9);
  }
  sub_22EE807C0();
  OUTLINED_FUNCTION_75_2();
  sub_22EE807D0();
  sub_22EE807F0();
  OUTLINED_FUNCTION_26_4();
}

uint64_t sub_22EC5FC20()
{
  uint64_t v1 = sub_22EE7F670();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22EE807B0();
  sub_22EE05510();
  uint64_t v8 = type metadata accessor for SubscriptionStoreControlOption(0);
  sub_22EC69988(v0 + *(int *)(v8 + 20), (uint64_t)v7, &qword_26861BB58);
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v1) == 1)
  {
    sub_22EE807D0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_22EE807D0();
    sub_22EC63C9C(&qword_26861BB90, MEMORY[0x263F17F28]);
    sub_22EE7F830();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  sub_22EE807C0();
  sub_22EE807D0();
  return sub_22EE807F0();
}

unint64_t sub_22EC5FE40()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_268622038);
  qword_268621E98 = swift_initStaticObject();
  unint64_t result = sub_22EB57EAC();
  qword_268621EB8 = (uint64_t)&unk_26E26DD68;
  unk_268621EC0 = result;
  return result;
}

uint64_t *sub_22EC5FE90()
{
  if (qword_26861B870 != -1) {
    swift_once();
  }
  return &qword_268621E98;
}

uint64_t sub_22EC5FEDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_22EC5FE90();

  return sub_22EB8E31C((uint64_t)v2, a1);
}

uint64_t sub_22EC5FF14()
{
  sub_22EBC50B8();
  sub_22EE7D4B0();
  uint64_t v0 = v2[0];
  swift_retain();
  sub_22EB8E378((uint64_t)v2);
  return v0;
}

uint64_t sub_22EC5FF6C@<X0>(uint64_t a1@<X8>)
{
  sub_22EBC50B8();
  sub_22EE7D4B0();
  sub_22EB38D0C((uint64_t)&v4, a1);
  return sub_22EB8E378((uint64_t)&v3);
}

uint64_t sub_22EC5FFD0(uint64_t a1)
{
  sub_22EBC50B8();
  uint64_t v2 = (void (*)(uint64_t *, void))sub_22EE7D4A0();
  sub_22EC690C4(a1, v3 + 8);
  v2(&v5, 0);
  return sub_22EADD8B0(a1);
}

uint64_t sub_22EC6004C@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();

  return __swift_storeEnumTagSinglePayload(a1, 1, 1, AssociatedTypeWitness);
}

uint64_t sub_22EC600A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4, a1);
  uint64_t v6 = a4 + *(int *)(type metadata accessor for SubscriptionStoreControlPropertiesModifier() + 36);
  swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_22EE80040();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32);

  return v8(v6, a2, v7);
}

uint64_t sub_22EC60190()
{
  OUTLINED_FUNCTION_22_5();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  swift_getKeyPath();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = v1;
  swift_retain();
  sub_22EE7E460();
  swift_release();
  OUTLINED_FUNCTION_26_4();
  return swift_release();
}

double sub_22EC6024C(long long *a1, uint64_t (*a2)(void))
{
  long long v4 = a1[1];
  long long v18 = *a1;
  long long v19 = v4;
  uint64_t v20 = *((void *)a1 + 4);
  sub_22EB57DC8((uint64_t)&v18, (uint64_t)&v13);
  if (v14 >= 6)
  {
    sub_22EADD8B0((uint64_t)&v18);
    sub_22EAE6550(&v13, (uint64_t)v10);
    uint64_t v5 = v11;
    uint64_t v6 = v12;
    __swift_project_boxed_opaque_existential_1(v10, v11);
    char v7 = a2();
    (*(void (**)(long long *__return_ptr, void, uint64_t, uint64_t))(v6 + 16))(&v15, v7 & 1, v5, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  else
  {
    long long v15 = v18;
    long long v16 = v19;
    uint64_t v17 = v20;
    sub_22EB57E24((uint64_t)&v13);
  }
  double result = *(double *)&v15;
  long long v9 = v16;
  *a1 = v15;
  a1[1] = v9;
  *((void *)a1 + 4) = v17;
  return result;
}

uint64_t sub_22EC60340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v42 = a1;
  uint64_t v43 = a3;
  uint64_t v37 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v40 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v34 = (char *)&v34 - v8;
  uint64_t v36 = sub_22EE80040();
  uint64_t v35 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v10 = (char *)&v34 - v9;
  uint64_t v11 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v12);
  unint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getWitnessTable();
  uint64_t v15 = sub_22EE7D9A0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268621FF8);
  uint64_t v39 = v15;
  uint64_t v16 = sub_22EE7CEE0();
  uint64_t v41 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  long long v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v34 - v20;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v4, v6);
  uint64_t v22 = sub_22EE2A848((uint64_t)v14, v6);
  uint64_t v23 = *(int *)(a2 + 36);
  uint64_t v24 = v36;
  uint64_t v25 = v4 + v23;
  uint64_t v26 = v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v10, v25, v36);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v24);
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v28 = v34;
    (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 16))(AssociatedTypeWitness, AssociatedConformanceWitness);
    sub_22EE7FC10();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v28, AssociatedTypeWitness);
  }
  else
  {
    swift_getAssociatedConformanceWitness();
    sub_22EE7FC10();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v10, AssociatedTypeWitness);
    long long v46 = *(_OWORD *)v49;
    long long v47 = *(_OWORD *)&v49[16];
    uint64_t v48 = *(void *)&v49[32];
  }
  *(void *)uint64_t v49 = v22;
  *(_OWORD *)&v49[8] = v46;
  *(_OWORD *)&v49[24] = v47;
  uint64_t v50 = v48;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_22EE7E220();
  swift_release();
  sub_22EB8E378((uint64_t)v49);
  uint64_t v30 = sub_22EADDD7C(&qword_268622000, &qword_268621FF8);
  uint64_t v44 = WitnessTable;
  uint64_t v45 = v30;
  uint64_t v31 = swift_getWitnessTable();
  sub_22EB69440(v18, v16, v31);
  uint64_t v32 = *(void (**)(char *, uint64_t))(v41 + 8);
  v32(v18, v16);
  sub_22EB69440(v21, v16, v31);
  return ((uint64_t (*)(char *, uint64_t))v32)(v21, v16);
}

uint64_t sub_22EC60890@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  sub_22EC698F8(v2, (uint64_t)v11);
  uint64_t v6 = (_OWORD *)swift_allocObject();
  long long v7 = v11[1];
  v6[1] = v11[0];
  v6[2] = v7;
  v6[3] = v11[2];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268622040);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, a1, v8);
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_268622048);
  uint64_t v10 = (uint64_t *)(a2 + *(int *)(result + 36));
  *uint64_t v10 = KeyPath;
  v10[1] = (uint64_t)sub_22EC69980;
  _OWORD v10[2] = (uint64_t)v6;
  return result;
}

uint64_t sub_22EC60974(_OWORD *a1, uint64_t a2)
{
  sub_22EC69988(a2, (uint64_t)v5, &qword_26861FAA0);
  if (!*(void *)&v5[0]) {
    return sub_22EB0584C((uint64_t)v5, &qword_26861FAA0);
  }
  uint64_t result = sub_22EB8E378((uint64_t)a1);
  long long v4 = v5[1];
  *a1 = v5[0];
  a1[1] = v4;
  a1[2] = v5[2];
  return result;
}

void View.subscriptionStoreControlStyle<A>(_:placement:)()
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v21 = v3;
  uint64_t v22 = v0;
  OUTLINED_FUNCTION_64_3(v4, v5, v6);
  uint64_t v7 = OUTLINED_FUNCTION_77_1();
  uint64_t v8 = sub_22EE80040();
  OUTLINED_FUNCTION_14(v8);
  OUTLINED_FUNCTION_9_7();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v20 - v10;
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_32_4();
  uint64_t v13 = type metadata accessor for SubscriptionStoreControlPropertiesModifier();
  OUTLINED_FUNCTION_0_0();
  uint64_t v15 = v14;
  OUTLINED_FUNCTION_9_7();
  MEMORY[0x270FA5388](v16);
  uint64_t v17 = OUTLINED_FUNCTION_23_6();
  v18(v17);
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_12_12();
  v19();
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v7);
  sub_22EC600A8(v0, (uint64_t)v11, v2, v1);
  MEMORY[0x230FAB9D0](v1, v20[3], v13, v21);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v1, v13);
  OUTLINED_FUNCTION_5_0();
}

void StoreContent.subscriptionStoreControlStyle<A>(_:placement:)()
{
  OUTLINED_FUNCTION_6_0();
  void v20[4] = v3;
  uint64_t v21 = v0;
  OUTLINED_FUNCTION_64_3(v4, v5, v6);
  uint64_t v7 = OUTLINED_FUNCTION_77_1();
  uint64_t v8 = sub_22EE80040();
  OUTLINED_FUNCTION_14(v8);
  OUTLINED_FUNCTION_9_7();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v20 - v10;
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_32_4();
  uint64_t v13 = type metadata accessor for SubscriptionStoreControlPropertiesModifier();
  OUTLINED_FUNCTION_0_0();
  uint64_t v15 = v14;
  OUTLINED_FUNCTION_9_7();
  MEMORY[0x270FA5388](v16);
  uint64_t v17 = OUTLINED_FUNCTION_23_6();
  v18(v17);
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_12_12();
  v19();
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v7);
  sub_22EC600A8(v0, (uint64_t)v11, v2, v1);
  swift_getWitnessTable();
  sub_22ED872C4(v1, v20[3], v13, v20[2]);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v1, v13);
  OUTLINED_FUNCTION_5_0();
}

void SubscriptionStoreControlStyleConfiguration.visibleSubscriptionPlansInternal.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v11 = type metadata accessor for SubscriptionStoreControlOption(0);
  uint64_t v12 = OUTLINED_FUNCTION_6_10(v11);
  uint64_t v70 = v13;
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_18_0();
  uint64_t v69 = v14;
  OUTLINED_FUNCTION_6_5();
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_9_5();
  uint64_t v68 = v16;
  OUTLINED_FUNCTION_8_3();
  uint64_t v17 = sub_22EE7F780();
  OUTLINED_FUNCTION_0_0();
  uint64_t v71 = v18;
  MEMORY[0x270FA5388](v19);
  uint64_t v72 = (char *)v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = OUTLINED_FUNCTION_8_3();
  uint64_t v22 = type metadata accessor for SubscriptionStoreControlConfigurationSection(v21) - 8;
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = *(void *)(v10 + 16);
  unint64_t v27 = *(void *)(v26 + 16);
  if (!v27)
  {
    swift_bridgeObjectRetain();
    goto LABEL_43;
  }
  uint64_t v28 = v26 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
  uint64_t v29 = *(void *)(v23 + 72);
  uint64_t v30 = swift_bridgeObjectRetain();
  unint64_t v32 = 0;
  uint64_t v67 = v28;
  while (1)
  {
    OUTLINED_FUNCTION_39_4(v30, v31, (void (*)(void))type metadata accessor for SubscriptionStoreControlConfigurationSection);
    OUTLINED_FUNCTION_44_4();
    sub_22EC6390C();
    uint64_t v33 = *(void *)(v10 + 16);
    uint64_t v30 = swift_bridgeObjectRelease();
    if (v33) {
      break;
    }
    ++v32;
    v28 += v29;
    if (v27 == v32) {
      goto LABEL_43;
    }
  }
  if (v27 == v32) {
    goto LABEL_51;
  }
  if (v32 < *(void *)(v26 + 16))
  {
    OUTLINED_FUNCTION_39_4(v30, v31, (void (*)(void))type metadata accessor for SubscriptionStoreControlConfigurationSection);
    OUTLINED_FUNCTION_44_4();
    sub_22EC6390C();
    uint64_t v34 = *(void *)(v10 + 16);
    uint64_t v35 = swift_bridgeObjectRelease();
    unint64_t v37 = v32 + 1;
    if (v37 < v27)
    {
      uint64_t v38 = v28 + v29;
      while (v37 < *(void *)(v26 + 16))
      {
        OUTLINED_FUNCTION_39_4(v35, v36, (void (*)(void))type metadata accessor for SubscriptionStoreControlConfigurationSection);
        OUTLINED_FUNCTION_44_4();
        sub_22EC6390C();
        uint64_t v39 = *(void *)(v10 + 16);
        uint64_t v35 = swift_bridgeObjectRelease();
        BOOL v40 = __OFADD__(v34, v39);
        v34 += v39;
        if (v40) {
          goto LABEL_49;
        }
        ++v37;
        v38 += v29;
        if (v37 >= v27) {
          goto LABEL_14;
        }
      }
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
LABEL_14:
    if (v34)
    {
      v65[0] = v27;
      uint64_t v74 = (void *)MEMORY[0x263F8EE78];
      uint64_t v41 = &v74;
      sub_22EC621F0();
      unint64_t v44 = 0;
      uint64_t v45 = v67;
      while (1)
      {
        OUTLINED_FUNCTION_39_4(v42, v43, (void (*)(void))type metadata accessor for SubscriptionStoreControlConfigurationSection);
        OUTLINED_FUNCTION_44_4();
        sub_22EC6390C();
        uint64_t v42 = swift_bridgeObjectRelease();
        BOOL v46 = a10 == 0;
        if (a10) {
          break;
        }
        unint64_t v47 = v44 + 1;
        if (__OFADD__(v44, 1)) {
          goto LABEL_50;
        }
        ++v44;
        v45 += v29;
        if (v47 == v65[0])
        {
          unint64_t v44 = v65[0];
          break;
        }
      }
      uint64_t v66 = v26;
      if (v34 < 0) {
        goto LABEL_53;
      }
      uint64_t v48 = 0;
      unint64_t v49 = 0;
      v65[1] = v71 + 32;
      v65[2] = v71 + 16;
      v65[3] = v17;
      while (v48 != v34)
      {
        if ((v44 & 0x8000000000000000) != 0) {
          goto LABEL_45;
        }
        if (v44 >= *(void *)(v66 + 16)) {
          goto LABEL_46;
        }
        OUTLINED_FUNCTION_39_4(v42, v43, (void (*)(void))type metadata accessor for SubscriptionStoreControlConfigurationSection);
        OUTLINED_FUNCTION_44_4();
        sub_22EC6390C();
        if (v46) {
          goto LABEL_55;
        }
        if (v49 >= v41[2]) {
          goto LABEL_47;
        }
        OUTLINED_FUNCTION_6_24();
        uint64_t v52 = v68;
        sub_22EC638B0(v50 + v51 * v49, v68, (void (*)(void))type metadata accessor for SubscriptionStoreControlOption);
        swift_bridgeObjectRelease();
        sub_22EC6395C(v52, v69, (void (*)(void))type metadata accessor for SubscriptionStoreControlOption);
        OUTLINED_FUNCTION_12_12();
        v53();
        sub_22EC6390C();
        uint64_t v41 = v74;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_22EC621F0();
          uint64_t v41 = v74;
        }
        unint64_t v54 = v41[2];
        if (v54 >= v41[3] >> 1)
        {
          sub_22EC621F0();
          uint64_t v41 = v74;
        }
        void v41[2] = v54 + 1;
        OUTLINED_FUNCTION_6_24();
        OUTLINED_FUNCTION_12_11();
        uint64_t v56 = v55();
        uint64_t v74 = v41;
        OUTLINED_FUNCTION_39_4(v56, v57, (void (*)(void))type metadata accessor for SubscriptionStoreControlConfigurationSection);
        uint64_t v58 = *((void *)v25 + 5);
        swift_bridgeObjectRetain();
        sub_22EC6390C();
        ++v49;
        uint64_t v59 = *(void *)(v58 + 16);
        uint64_t v42 = swift_bridgeObjectRelease();
        if (v49 == v59)
        {
          if (++v44 == v65[0])
          {
            unint64_t v49 = 0;
            BOOL v46 = 1;
LABEL_41:
            unint64_t v44 = v65[0];
          }
          else
          {
            while (1)
            {
              swift_bridgeObjectRetain();
              __swift_instantiateConcreteTypeFromMangledName(&qword_26861BC00);
              sub_22EC68F7C((unint64_t *)&qword_26861BBF8, &qword_26861BC00, &qword_26861BC08, &qword_26861BC10);
              uint64_t v60 = sub_22EC6368C();
              uint64_t v62 = *v61;
              swift_bridgeObjectRetain();
              ((void (*)(uint64_t *, void))v60)(&v73, 0);
              swift_bridgeObjectRelease();
              uint64_t v63 = *(void *)(v62 + 16);
              uint64_t v42 = swift_bridgeObjectRelease();
              BOOL v46 = v63 == 0;
              if (v63) {
                break;
              }
              unint64_t v64 = v44 + 1;
              if (__OFADD__(v44, 1)) {
                goto LABEL_54;
              }
              ++v44;
              if (v64 == v65[0])
              {
                unint64_t v49 = 0;
                goto LABEL_41;
              }
            }
            unint64_t v49 = 0;
          }
        }
        else
        {
          BOOL v46 = 0;
        }
        if (++v48 == v34) {
          goto LABEL_43;
        }
      }
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
LABEL_43:
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_5_0();
    return;
  }
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
}

uint64_t SubscriptionStoreControlStyleConfiguration.isEligibleForIntroOfferInternal.getter()
{
  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t SubscriptionStoreControlStyleConfiguration.currentPlanIDInternal.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SubscriptionStoreControlStyleConfiguration.hiddenCurrentPlanInternal.getter()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_26861BAB0);
  uint64_t v3 = OUTLINED_FUNCTION_14(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_14_0();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BBC8);
  sub_22EC69988(v0 + *(int *)(v4 + 60), v1, qword_26861BAB0);
  uint64_t v5 = type metadata accessor for Subscription();
  OUTLINED_FUNCTION_7_0(v1, 1, v5);
  if (v6)
  {
    sub_22EB0584C(v1, qword_26861BAB0);
    sub_22EE7F780();
    OUTLINED_FUNCTION_51_1();
  }
  else
  {
    sub_22EE7F780();
    OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_12_12();
    v7();
    sub_22EC6390C();
    OUTLINED_FUNCTION_47_2();
  }
  return __swift_storeEnumTagSinglePayload(v8, v9, v10, v11);
}

Swift::Void __swiftcall SubscriptionStoreControlStyleConfiguration.actionInternal(productID:)(Swift::String productID)
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v78 = v6;
  uint64_t v79 = v7;
  uint64_t v8 = type metadata accessor for Subscription();
  uint64_t v9 = OUTLINED_FUNCTION_14(v8);
  MEMORY[0x270FA5388](v9);
  uint64_t v10 = OUTLINED_FUNCTION_17_14();
  uint64_t v11 = type metadata accessor for SubscriptionStoreControlConfigurationSection(v10);
  OUTLINED_FUNCTION_0_0();
  uint64_t v74 = v12;
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_3_2();
  uint64_t v76 = v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB88);
  uint64_t v16 = OUTLINED_FUNCTION_14(v15);
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_9_1();
  uint64_t v19 = v17 - v18;
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v69 - v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BBB8);
  uint64_t v24 = OUTLINED_FUNCTION_14(v23);
  MEMORY[0x270FA5388](v24);
  OUTLINED_FUNCTION_29_7();
  MEMORY[0x270FA5388](v25);
  OUTLINED_FUNCTION_50_3();
  MEMORY[0x270FA5388](v26);
  OUTLINED_FUNCTION_9_5();
  uint64_t v72 = v27;
  uint64_t v28 = OUTLINED_FUNCTION_8_3();
  uint64_t v82 = type metadata accessor for SubscriptionStoreControlOption(v28);
  OUTLINED_FUNCTION_0_0();
  uint64_t v80 = v29;
  MEMORY[0x270FA5388](v30);
  OUTLINED_FUNCTION_41_5();
  MEMORY[0x270FA5388](v31);
  OUTLINED_FUNCTION_9_5();
  uint64_t v70 = v32;
  uint64_t v71 = v1;
  uint64_t v33 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain_n();
  unint64_t v77 = 0;
  uint64_t v81 = v22;
  uint64_t v73 = v11;
  uint64_t v75 = v33;
  while (1)
  {
    unint64_t v51 = *(void *)(v33 + 16);
    if (v77 == v51)
    {
      uint64_t v52 = 1;
    }
    else
    {
      if (v77 >= v51) {
        goto LABEL_29;
      }
      OUTLINED_FUNCTION_54_1();
      unint64_t v53 = v77;
      sub_22EC638B0(v54 + v55 * v77, (uint64_t)v22, (void (*)(void))type metadata accessor for SubscriptionStoreControlConfigurationSection);
      uint64_t v52 = 0;
      unint64_t v77 = v53 + 1;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v22, v52, 1, v11);
    uint64_t v56 = OUTLINED_FUNCTION_62_4();
    sub_22EC6903C(v56, v57, &qword_26861BB88);
    OUTLINED_FUNCTION_7_0(v19, 1, v11);
    if (v47) {
      break;
    }
    uint64_t v58 = v76;
    sub_22EC6395C(v19, v76, (void (*)(void))type metadata accessor for SubscriptionStoreControlConfigurationSection);
    uint64_t v59 = *(void *)(v58 + 40);
    swift_bridgeObjectRetain();
    sub_22EC6390C();
    swift_bridgeObjectRelease();
    uint64_t v60 = v59;
    uint64_t v22 = v81;
    if (v60)
    {
      unint64_t v34 = *(void *)(v60 + 16);
      if (v34)
      {
        unint64_t v35 = 0;
        while (v35 < v34)
        {
          OUTLINED_FUNCTION_30_5();
          sub_22EC638B0(v60 + v36 + *(void *)(v37 + 72) * v35, v3, (void (*)(void))type metadata accessor for SubscriptionStoreControlOption);
          OUTLINED_FUNCTION_61_4();
          uint64_t v38 = v82;
          __swift_storeEnumTagSinglePayload(v39, v40, v41, v82);
          sub_22EC6903C(v3, v2, &qword_26861BBB8);
          OUTLINED_FUNCTION_7_0(v2, 1, v38);
          if (v47) {
            goto LABEL_20;
          }
          uint64_t v42 = v19;
          sub_22EC6395C(v2, v4, (void (*)(void))type metadata accessor for SubscriptionStoreControlOption);
          sub_22EC638B0(v4, v5, (void (*)(void))type metadata accessor for Subscription);
          uint64_t v43 = _s17_StoreKit_SwiftUI012SubscriptionA25ControlStyleConfigurationV12PickerOptionV2idSSvg_0();
          uint64_t v45 = v44;
          sub_22EE7F780();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_5_2();
          v46();
          BOOL v47 = v43 == v78 && v45 == v79;
          if (v47)
          {
            swift_bridgeObjectRelease();
LABEL_22:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v61 = v72;
            sub_22EC6395C(v4, v72, (void (*)(void))type metadata accessor for SubscriptionStoreControlOption);
            uint64_t v62 = 0;
            goto LABEL_23;
          }
          char v48 = sub_22EE80660();
          swift_bridgeObjectRelease();
          if (v48) {
            goto LABEL_22;
          }
          ++v35;
          sub_22EC6390C();
          unint64_t v34 = *(void *)(v60 + 16);
          uint64_t v19 = v42;
          uint64_t v22 = v81;
          if (v35 == v34) {
            goto LABEL_12;
          }
        }
        __break(1u);
LABEL_29:
        __break(1u);
        return;
      }
LABEL_12:
      uint64_t v49 = OUTLINED_FUNCTION_67_1();
      __swift_storeEnumTagSinglePayload(v49, v50, 1, v82);
      sub_22EB0584C(v3, &qword_26861BBB8);
      uint64_t v11 = v73;
      uint64_t v33 = v75;
    }
  }
  __swift_storeEnumTagSinglePayload(v2, 1, 1, v82);
LABEL_20:
  swift_bridgeObjectRelease();
  uint64_t v61 = v72;
  swift_bridgeObjectRelease();
  uint64_t v62 = 1;
LABEL_23:
  uint64_t v63 = v82;
  __swift_storeEnumTagSinglePayload(v61, v62, 1, v82);
  swift_bridgeObjectRelease();
  uint64_t v64 = OUTLINED_FUNCTION_63_3();
  OUTLINED_FUNCTION_7_0(v64, v65, v63);
  if (v47)
  {
    sub_22EB0584C(v61, &qword_26861BBB8);
  }
  else
  {
    uint64_t v66 = v61;
    uint64_t v67 = v70;
    sub_22EC6395C(v66, v70, (void (*)(void))type metadata accessor for SubscriptionStoreControlOption);
    uint64_t v68 = *(void (**)(uint64_t, unsigned char *))(v71 + 24);
    memset(v83, 0, 49);
    v68(v67, v83);
    sub_22EC6390C();
  }
  OUTLINED_FUNCTION_5_0();
}

void SubscriptionStoreControlStyleConfiguration.iconInternal(productID:)()
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v79 = v4;
  uint64_t v80 = v5;
  uint64_t v71 = v6;
  uint64_t v69 = type metadata accessor for Subscription();
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_13_19(v8, v69);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v69 - v10;
  uint64_t v83 = type metadata accessor for SubscriptionStoreControlOption(0);
  OUTLINED_FUNCTION_0_0();
  uint64_t v13 = v12;
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_64_1();
  uint64_t v15 = type metadata accessor for SubscriptionStoreControlConfigurationSection(0);
  OUTLINED_FUNCTION_0_0();
  uint64_t v74 = v16;
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_3_2();
  uint64_t v77 = v18;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB88);
  uint64_t v20 = OUTLINED_FUNCTION_14(v19);
  MEMORY[0x270FA5388](v20);
  OUTLINED_FUNCTION_41_5();
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v69 - v22;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BBB8);
  uint64_t v25 = OUTLINED_FUNCTION_14(v24);
  MEMORY[0x270FA5388](v25);
  OUTLINED_FUNCTION_9_1();
  uint64_t v28 = v26 - v27;
  MEMORY[0x270FA5388](v29);
  OUTLINED_FUNCTION_50_3();
  MEMORY[0x270FA5388](v30);
  OUTLINED_FUNCTION_9_5();
  uint64_t v72 = v31;
  uint64_t v70 = v0;
  uint64_t v32 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain_n();
  unint64_t v78 = 0;
  uint64_t v81 = v23;
  uint64_t v82 = v2;
  uint64_t v75 = v32;
  uint64_t v76 = v15;
  while (1)
  {
    unint64_t v46 = *(void *)(v32 + 16);
    if (v78 == v46)
    {
      uint64_t v47 = 1;
    }
    else
    {
      if (v78 >= v46) {
        goto LABEL_35;
      }
      OUTLINED_FUNCTION_6_24();
      unint64_t v48 = v78;
      sub_22EC638B0(v49 + v50 * v78, (uint64_t)v23, (void (*)(void))type metadata accessor for SubscriptionStoreControlConfigurationSection);
      uint64_t v47 = 0;
      unint64_t v78 = v48 + 1;
      uint64_t v15 = v76;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v23, v47, 1, v15);
    sub_22EC6903C((uint64_t)v23, v2, &qword_26861BB88);
    OUTLINED_FUNCTION_7_0(v2, 1, v15);
    if (v44) {
      break;
    }
    uint64_t v51 = v77;
    sub_22EC6395C(v2, v77, (void (*)(void))type metadata accessor for SubscriptionStoreControlConfigurationSection);
    uint64_t v52 = *(void *)(v51 + 40);
    swift_bridgeObjectRetain();
    uint64_t v23 = v81;
    sub_22EC6390C();
    swift_bridgeObjectRelease();
    uint64_t v53 = v52;
    uint64_t v2 = v82;
    if (v53)
    {
      unint64_t v33 = *(void *)(v53 + 16);
      if (v33)
      {
        unint64_t v34 = 0;
        while (v34 < v33)
        {
          OUTLINED_FUNCTION_30_5();
          sub_22EC638B0(v53 + v35 + *(void *)(v13 + 72) * v34, v28, (void (*)(void))type metadata accessor for SubscriptionStoreControlOption);
          OUTLINED_FUNCTION_61_4();
          uint64_t v36 = v83;
          __swift_storeEnumTagSinglePayload(v37, v38, v39, v83);
          sub_22EC6903C(v28, v1, &qword_26861BBB8);
          OUTLINED_FUNCTION_7_0(v1, 1, v36);
          if (v44) {
            goto LABEL_20;
          }
          sub_22EC6395C(v1, v3, (void (*)(void))type metadata accessor for SubscriptionStoreControlOption);
          sub_22EC638B0(v3, (uint64_t)v11, (void (*)(void))type metadata accessor for Subscription);
          uint64_t v40 = _s17_StoreKit_SwiftUI012SubscriptionA25ControlStyleConfigurationV12PickerOptionV2idSSvg_0();
          uint64_t v42 = v41;
          sub_22EE7F780();
          OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_5_2();
          v43();
          BOOL v44 = v40 == v79 && v42 == v80;
          if (v44)
          {
            swift_bridgeObjectRelease();
LABEL_22:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v56 = v72;
            sub_22EC6395C(v3, v72, (void (*)(void))type metadata accessor for SubscriptionStoreControlOption);
            uint64_t v54 = 0;
            uint64_t v55 = v73;
            goto LABEL_23;
          }
          char v45 = sub_22EE80660();
          swift_bridgeObjectRelease();
          if (v45) {
            goto LABEL_22;
          }
          ++v34;
          sub_22EC6390C();
          unint64_t v33 = *(void *)(v53 + 16);
          uint64_t v23 = v81;
          uint64_t v2 = v82;
          if (v34 == v33) {
            goto LABEL_12;
          }
        }
        __break(1u);
LABEL_35:
        __break(1u);
        return;
      }
LABEL_12:
      __swift_storeEnumTagSinglePayload(v28, 1, 1, v83);
      sub_22EB0584C(v28, &qword_26861BBB8);
      uint64_t v32 = v75;
      uint64_t v15 = v76;
    }
  }
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v83);
LABEL_20:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v54 = 1;
  uint64_t v56 = v72;
  uint64_t v55 = v73;
LABEL_23:
  uint64_t v57 = v83;
  __swift_storeEnumTagSinglePayload(v56, v54, 1, v83);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_7_0(v56, 1, v57);
  if (v44)
  {
    sub_22EB0584C(v56, &qword_26861BBB8);
    uint64_t v58 = 0;
    uint64_t v59 = v71;
  }
  else
  {
    uint64_t v60 = v56 + *(int *)(v69 + 20);
    uint64_t v61 = *(void *)v60;
    int v62 = *(unsigned __int8 *)(v60 + 8);
    sub_22EC638B0(v56, v55, (void (*)(void))type metadata accessor for Subscription);
    uint64_t v59 = v71;
    if (v62 == 2)
    {
      uint64_t v61 = _s17_StoreKit_SwiftUI012SubscriptionA25ControlStyleConfigurationV12PickerOptionV2idSSvg_0();
      uint64_t v64 = v63;
      unsigned __int8 v65 = 1;
    }
    else
    {
      unsigned __int8 v65 = 0;
      uint64_t v64 = v62 & 1;
    }
    uint64_t v66 = v70;
    sub_22EC6390C();
    sub_22EC6390C();
    if (*(void *)(v66 + 48))
    {
      uint64_t v67 = OUTLINED_FUNCTION_62_4();
      v68(v67);
      uint64_t v58 = v84;
      sub_22EB19AEC(v61, v64, v65);
    }
    else
    {
      sub_22EB19AEC(v61, v64, v65);
      uint64_t v58 = 0;
    }
  }
  *uint64_t v59 = v58;
  OUTLINED_FUNCTION_5_0();
}

uint64_t SubscriptionStoreControlStyleConfiguration.MarketingContent.content.getter()
{
  return swift_retain();
}

uint64_t SubscriptionStoreControlStyleConfiguration.MarketingContent.content.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  void *v1 = a1;
  return result;
}

uint64_t (*SubscriptionStoreControlStyleConfiguration.MarketingContent.content.modify())(void)
{
  return nullsub_1;
}

uint64_t SubscriptionStoreControlStyleConfiguration.MarketingContent.body.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_retain();
}

uint64_t SubscriptionStoreControlStyleConfiguration.marketingContentInternal.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_22EE7EB20();
  *a1 = result;
  return result;
}

void sub_22EC621F0()
{
  sub_22EB45CB8();
  *uint64_t v0 = v1;
}

void sub_22EC62210()
{
  sub_22EB45D00();
  *uint64_t v0 = v1;
}

void sub_22EC62230()
{
  sub_22EB45EBC();
  *uint64_t v0 = v1;
}

void sub_22EC62250()
{
  sub_22EB45F04();
  *uint64_t v0 = v1;
}

void sub_22EC62270(char a1, uint64_t a2, char a3)
{
  sub_22EB45FB4(a1, a2, a3, *v3);
  *uint64_t v3 = v4;
}

void sub_22EC62290(char a1, uint64_t a2, char a3)
{
  sub_22EB46078(a1, a2, a3, *v3);
  *uint64_t v3 = v4;
}

void sub_22EC622B0()
{
  sub_22EB45FC8();
  *uint64_t v0 = v1;
}

void sub_22EC622D0()
{
  sub_22EB46198();
  *uint64_t v0 = v1;
}

void sub_22EC622F0()
{
  sub_22EB461E0();
  *uint64_t v0 = v1;
}

void sub_22EC62310()
{
  sub_22EB46228();
  *uint64_t v0 = v1;
}

void sub_22EC62330()
{
  sub_22EB46270();
  *uint64_t v0 = v1;
}

void sub_22EC62350()
{
  sub_22EB462B8();
  *uint64_t v0 = v1;
}

void sub_22EC62370(char a1, uint64_t a2, char a3)
{
  sub_22EB46374(a1, a2, a3, *v3);
  *uint64_t v3 = v4;
}

void sub_22EC62390()
{
  sub_22EB464D0();
  *uint64_t v0 = v1;
}

uint64_t sub_22EC623B0(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v5 = type metadata accessor for SubscriptionStoreControlConfigurationSection(0);
  uint64_t v6 = 0;
  OUTLINED_FUNCTION_6_10(v5);
  uint64_t v8 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  uint64_t v10 = *(void *)(v9 + 72);
  while (1)
  {
    a2(&v13, v8);
    uint64_t v11 = *(void *)(v13 + 16);
    swift_bridgeObjectRelease();
    if (v11) {
      break;
    }
    ++v6;
    v8 += v10;
    if (v2 == v6) {
      return v2;
    }
  }
  return v6;
}

void sub_22EC62488(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t a5, char a6, uint64_t a7, void (*a8)(long long *__return_ptr, _OWORD *), uint64_t a9)
{
  void (*v58)(long long *__return_ptr, _OWORD *);
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unsigned char *v65;
  unsigned char *v66;
  uint64_t (*v67)(uint64_t);
  void (*v68)(unsigned char *);
  uint64_t v69;
  long long v70;
  long long v71;
  _OWORD v72[2];
  uint64_t v73;
  long long v74;
  long long v75;
  long long v76;
  uint64_t v77;
  _OWORD v78[2];
  uint64_t v79;

  uint64_t v58 = a8;
  unint64_t v49 = a5;
  uint64_t v57 = a9;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861DA88);
  uint64_t v51 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v66 = &v46[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v17);
  unsigned __int8 v65 = &v46[-v18];
  unint64_t v50 = a4;
  uint64_t v48 = a1;
  if (a4 == a1)
  {
    if ((a6 & 1) == 0)
    {
      if (a3)
      {
LABEL_72:
        __break(1u);
        return;
      }
      if ((v50 & 0x8000000000000000) == 0)
      {
        if (*(void *)(a7 + 16) > v50)
        {
          *(void *)&v78[0] = *(void *)(a7 + 8 * v50 + 32);
          swift_bridgeObjectRetain();
          v58(&v74, v78);
          swift_bridgeObjectRelease();
          uint64_t v71 = v74;
          uint64_t v70 = v75;
          sub_22EC68BDC(a2, v49);
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          return;
        }
        goto LABEL_68;
      }
      goto LABEL_66;
    }
    if (a3) {
      return;
    }
    goto LABEL_64;
  }
  if (a4 >= a1)
  {
    int v47 = a6 & 1;
    uint64_t v19 = v50;
    unint64_t v20 = v48;
    uint64_t v21 = a2;
    if ((a3 & 1) == 0) {
      goto LABEL_7;
    }
LABEL_15:
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    goto LABEL_16;
  }
  int v47 = a3 & 1;
  uint64_t v19 = v48;
  unint64_t v20 = v50;
  uint64_t v21 = v49;
  unint64_t v49 = a2;
  if (a6) {
    goto LABEL_15;
  }
LABEL_7:
  if ((v20 & 0x8000000000000000) != 0)
  {
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  if (v20 >= *(void *)(a7 + 16))
  {
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  *(void *)&v78[0] = *(void *)(a7 + 8 * v20 + 32);
  uint64_t v56 = v19;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  v58(&v74, v78);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v71 = v75;
  unint64_t v22 = *(void *)(v74 + 16);
  v78[0] = v74;
  v78[1] = v75;
  uint64_t v79 = v76;
  uint64_t v23 = sub_22EC68BDC(v21, v22);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v19 = v56;
  ++v20;
  uint64_t v24 = v23;
LABEL_16:
  if ((uint64_t)v20 < v19)
  {
    uint64_t v53 = a7 + 32;
    unint64_t v54 = *(void *)(a7 + 16);
    uint64_t v24 = v23;
    uint64_t v52 = a7;
    uint64_t v56 = v19;
    while (v20 < v54)
    {
      uint64_t v60 = v20;
      *(void *)&v72[0] = *(void *)(v53 + 8 * v20);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      v58(&v74, v72);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v25 = v74;
      *(void *)&uint64_t v70 = v76;
      uint64_t v59 = v77;
      unint64_t v26 = *(void *)(v74 + 16);
      if (v26)
      {
        *(void *)&uint64_t v71 = v75;
        uint64_t v55 = v24;
        uint64_t v27 = 0;
        uint64_t v68 = (void (*)(unsigned char *))*((void *)&v74 + 1);
        uint64_t v67 = (uint64_t (*)(uint64_t))*((void *)&v75 + 1);
        unint64_t v28 = (*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
        uint64_t v29 = v74 + v28;
        uint64_t v69 = *(void *)(v51 + 72);
        while (1)
        {
          uint64_t v30 = v66;
          sub_22EC69988(v29, (uint64_t)v66, &qword_26861DA88);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          uint64_t v31 = (uint64_t)v65;
          v68(v30);
          sub_22EB0584C((uint64_t)v30, &qword_26861DA88);
          swift_release();
          swift_bridgeObjectRelease();
          char v32 = v67(v31);
          swift_release();
          sub_22EB0584C(v31, &qword_26861DA88);
          if (v32) {
            break;
          }
          ++v27;
          v29 += v69;
          if (v26 == v27) {
            goto LABEL_29;
          }
        }
        if (v26 >= v27)
        {
          if (v26 == v27)
          {
LABEL_29:
            swift_release();
            swift_bridgeObjectRelease();
            uint64_t v33 = 0;
LABEL_43:
            uint64_t v24 = v55;
            goto LABEL_44;
          }
          uint64_t v34 = 1;
          uint64_t v35 = v26;
        }
        else
        {
          uint64_t v34 = -1;
          uint64_t v35 = v27;
          uint64_t v27 = v26;
        }
        uint64_t v33 = 0;
        uint64_t v63 = v25 + v28;
        int v62 = v34;
        uint64_t v61 = v35;
        while (1)
        {
          BOOL v36 = __OFADD__(v33, v34);
          v33 += v34;
          if (v36) {
            break;
          }
          if (v27 == v26) {
            goto LABEL_60;
          }
          unint64_t v37 = v26;
          if (v27 + 1 != v26)
          {
            uint64_t v64 = v33;
            uint64_t v38 = v63 + v69 * (v27 + 1);
            unint64_t v37 = v27 + 1;
            while (v27 >= -1)
            {
              if (v37 >= *(void *)(v25 + 16)) {
                goto LABEL_58;
              }
              uint64_t v39 = v66;
              sub_22EC69988(v38, (uint64_t)v66, &qword_26861DA88);
              swift_bridgeObjectRetain();
              swift_retain();
              swift_retain();
              uint64_t v40 = (uint64_t)v65;
              v68(v39);
              sub_22EB0584C((uint64_t)v39, &qword_26861DA88);
              swift_release();
              swift_bridgeObjectRelease();
              char v41 = v67(v40);
              swift_release();
              sub_22EB0584C(v40, &qword_26861DA88);
              if (v41) {
                goto LABEL_40;
              }
              ++v37;
              v38 += v69;
              if (v26 == v37)
              {
                unint64_t v37 = v26;
LABEL_40:
                uint64_t v33 = v64;
                uint64_t v34 = v62;
                uint64_t v35 = v61;
                goto LABEL_41;
              }
            }
            __break(1u);
LABEL_58:
            __break(1u);
            break;
          }
LABEL_41:
          uint64_t v27 = v37;
          if (v37 == v35)
          {
            swift_release();
            swift_bridgeObjectRelease();
            goto LABEL_43;
          }
        }
        __break(1u);
LABEL_60:
        __break(1u);
        break;
      }
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v33 = 0;
LABEL_44:
      swift_release();
      swift_release();
      BOOL v36 = __OFADD__(v24, v33);
      v24 += v33;
      a7 = v52;
      if (v36) {
        goto LABEL_62;
      }
      unint64_t v20 = v60 + 1;
      if (__OFADD__(v60, 1)) {
        goto LABEL_63;
      }
      if ((uint64_t)v20 >= v56) {
        goto LABEL_47;
      }
    }
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
LABEL_47:
  uint64_t v42 = v24;
  if (v47)
  {
    uint64_t v43 = v50;
  }
  else
  {
    uint64_t v43 = v50;
    if ((v20 & 0x8000000000000000) != 0)
    {
LABEL_69:
      __break(1u);
      goto LABEL_70;
    }
    if (v20 >= *(void *)(a7 + 16))
    {
LABEL_70:
      __break(1u);
      goto LABEL_71;
    }
    *(void *)&v72[0] = *(void *)(a7 + 8 * v20 + 32);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    v58(&v74, v72);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v72[0] = v74;
    v72[1] = v75;
    uint64_t v73 = v76;
    sub_22ED7F59C();
    uint64_t v45 = sub_22EC68BDC(v44, v49);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    BOOL v36 = __OFADD__(v42, v45);
    v42 += v45;
    if (v36)
    {
LABEL_71:
      __break(1u);
      goto LABEL_72;
    }
  }
  if (v43 < v48 && __OFSUB__(0, v42)) {
    __break(1u);
  }
}

uint64_t sub_22EC62D68(unint64_t a1, uint64_t a2, char a3, uint64_t a4, void (*a5)(void *__return_ptr, uint64_t *))
{
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  unint64_t v5 = a1;
  unint64_t v6 = *(void *)(a4 + 16);
  if (v6 <= a1)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v20 = *(void *)(a4 + 8 * a1 + 32);
  swift_bridgeObjectRetain();
  a5(v19, &v20);
  uint64_t result = swift_bridgeObjectRelease();
  if ((a3 & 1) == 0)
  {
    BOOL v11 = __OFADD__(a2, 1);
    uint64_t v12 = a2 + 1;
    if (!v11)
    {
      uint64_t v13 = *(void *)(v19[0] + 16);
      swift_bridgeObjectRelease();
      if (v12 != v13) {
        return v5;
      }
LABEL_10:
      if (++v5 == v6) {
        return v6;
      }
      while (1)
      {
        swift_retain();
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_268622028);
        sub_22EC68F7C(&qword_268622030, &qword_268622028, &qword_268622018, &qword_268622020);
        uint64_t v14 = sub_22EC636E4();
        uint64_t v16 = *v15;
        swift_bridgeObjectRetain();
        ((void (*)(void *, void))v14)(v19, 0);
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v17 = *(void *)(v16 + 16);
        uint64_t result = swift_bridgeObjectRelease();
        if (v17) {
          return v5;
        }
        unint64_t v18 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
          __break(1u);
          goto LABEL_17;
        }
        ++v5;
        if (v18 == v6) {
          return v6;
        }
      }
    }
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_22EC62F38(unint64_t a1, uint64_t a2, char a3, uint64_t a4, void (*a5)(long long *__return_ptr, _OWORD *))
{
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  unint64_t v5 = a1;
  unint64_t v6 = *(void *)(a4 + 16);
  if (v6 <= a1)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  *(void *)&v33[0] = *(void *)(a4 + 8 * a1 + 32);
  swift_bridgeObjectRetain();
  a5(&v24, v33);
  uint64_t result = swift_bridgeObjectRelease();
  if (a3) {
    goto LABEL_15;
  }
  uint64_t v21 = v24;
  v33[0] = v24;
  v33[1] = v25;
  uint64_t v34 = v26;
  *(void *)&long long v24 = a2;
  sub_22EC68DD8((unint64_t *)&v24);
  uint64_t v11 = v24;
  uint64_t v12 = *(void *)(v21 + 16);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (v11 != v12) {
    return v5;
  }
LABEL_8:
  if (++v5 == v6) {
    return v6;
  }
  while (1)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_268622008);
    sub_22EC68F7C(&qword_268622010, &qword_268622008, &qword_268622018, &qword_268622020);
    unint64_t v22 = sub_22EC63738();
    uint64_t v14 = *v13;
    uint64_t v15 = v13[1];
    uint64_t v16 = v13[2];
    uint64_t v17 = v13[3];
    long long v23 = *((_OWORD *)v13 + 2);
    uint64_t v18 = v13[6];
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    ((void (*)(long long *, void))v22)(&v24, 0);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v28 = v14;
    uint64_t v29 = v15;
    uint64_t v30 = v16;
    uint64_t v31 = v17;
    uint64_t v32 = v23;
    sub_22ED7F970();
    if (v19 != *(void *)(v14 + 16))
    {
      *(void *)&long long v24 = v14;
      *((void *)&v24 + 1) = v15;
      *(void *)&long long v25 = v16;
      *((void *)&v25 + 1) = v17;
      long long v26 = v23;
      uint64_t v27 = v18;
      sub_22ED7F59C();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      return v5;
    }
    swift_release();
    swift_release();
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v20 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      break;
    }
    ++v5;
    if (v20 == v6) {
      return v6;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
  return result;
}

unint64_t sub_22EC63200@<X0>(unint64_t result@<X0>, unint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, void *(*a5)(uint64_t *__return_ptr, unint64_t)@<X4>, uint64_t a6@<X8>)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v7 = result;
  if (*(void *)(a4 + 16) <= result)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v12 = type metadata accessor for SubscriptionStoreControlConfigurationSection(0);
  OUTLINED_FUNCTION_6_10(v12);
  uint64_t result = (unint64_t)a5(&v19, a4+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(void *)(v14 + 72) * v7);
  if (a3)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  if ((a2 & 0x8000000000000000) != 0) {
    goto LABEL_11;
  }
  uint64_t v15 = v19;
  if (*(void *)(v19 + 16) <= a2)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v16 = type metadata accessor for SubscriptionStoreControlOption(0);
  OUTLINED_FUNCTION_6_10(v16);
  sub_22EC638B0(v15+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(void *)(v18 + 72) * a2, a6, (void (*)(void))type metadata accessor for SubscriptionStoreControlOption);

  return swift_bridgeObjectRelease();
}

unint64_t sub_22EC63340@<X0>(unint64_t result@<X0>, unint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, void (*a5)(uint64_t *__return_ptr, uint64_t *)@<X4>, uint64_t a6@<X8>)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (*(void *)(a4 + 16) <= result)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v14 = *(void *)(a4 + 8 * result + 32);
  swift_bridgeObjectRetain();
  a5(&v15, &v14);
  uint64_t result = swift_bridgeObjectRelease();
  if (a3)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  if ((a2 & 0x8000000000000000) != 0) {
    goto LABEL_11;
  }
  uint64_t v10 = v15;
  if (*(void *)(v15 + 16) <= a2)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861DA88);
  OUTLINED_FUNCTION_6_10(v11);
  sub_22EC69988(v10+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v13 + 72) * a2, a6, &qword_26861DA88);

  return swift_bridgeObjectRelease();
}

void sub_22EC63450()
{
  void (*v2)(void *__return_ptr, uint64_t *);
  void (*v3)(void *__return_ptr, uint64_t *);
  uint64_t v4;
  uint64_t v5;
  int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void v33[7];

  OUTLINED_FUNCTION_6_0();
  uint64_t v3 = v2;
  unint64_t v5 = v4;
  LODWORD(v31) = v6;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861DA88);
  uint64_t v14 = OUTLINED_FUNCTION_6_10(v13);
  uint64_t v30 = v15;
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_50_3();
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_29_7();
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v28 - v18;
  unint64_t v20 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
  uint64_t v21 = OUTLINED_FUNCTION_14(v20);
  MEMORY[0x270FA5388](v21);
  OUTLINED_FUNCTION_56_3();
  if ((v10 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (*(void *)(v5 + 16) <= v10)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v32 = *(void *)(v5 + 8 * v10 + 32);
  swift_bridgeObjectRetain();
  v3(v33, &v32);
  swift_bridgeObjectRelease();
  if ((v31 & 1) == 0)
  {
    if ((v8 & 0x8000000000000000) == 0)
    {
      unint64_t v22 = v33[0];
      if (*(void *)(v33[0] + 16) > v8)
      {
        long long v23 = (void (*)(uint64_t))v33[1];
        uint64_t v31 = v33[4];
        uint64_t v28 = (void (*)(char *))v33[5];
        uint64_t v29 = v12;
        OUTLINED_FUNCTION_30_5();
        sub_22EC69988(v22 + v24 + *(void *)(v25 + 72) * v8, v0, &qword_26861DA88);
        v23(v0);
        sub_22EB0584C(v0, &qword_26861DA88);
        long long v26 = OUTLINED_FUNCTION_21_9();
        sub_22EC6903C(v26, v27, &qword_26861DA88);
        v28(v19);
        sub_22EB0584C((uint64_t)v19, &qword_26861DA88);
        sub_22EC6395C(v1, v29, (void (*)(void))type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option);
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_5_0();
        return;
      }
      goto LABEL_10;
    }
LABEL_9:
    __break(1u);
LABEL_10:
    __break(1u);
  }
  __break(1u);
}

uint64_t (*sub_22EC6368C())()
{
  uint64_t v1 = OUTLINED_FUNCTION_18_14();
  uint64_t v2 = OUTLINED_FUNCTION_16_16((uint64_t)v1);
  sub_22EC637D4(v2, v3, v4, v5);
  *(void *)(v0 + 32) = v6;
  return sub_22EC636E0;
}

uint64_t (*sub_22EC636E4())()
{
  uint64_t v1 = OUTLINED_FUNCTION_18_14();
  uint64_t v2 = OUTLINED_FUNCTION_16_16((uint64_t)v1);
  *(void *)(v0 + 32) = sub_22EC68A24(v2, v3, v4, v5);
  return sub_22EC636E0;
}

uint64_t (*sub_22EC63738())()
{
  uint64_t v1 = OUTLINED_FUNCTION_18_14();
  uint64_t v2 = (void (**)(void **))OUTLINED_FUNCTION_16_16((uint64_t)v1);
  *(void *)(v0 + 32) = sub_22EC68ABC(v2, v3, v4, v5);
  return sub_22EC636E0;
}

void sub_22EC6378C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void sub_22EC637D4(uint64_t a1, unint64_t a2, uint64_t a3, void (*a4)(unint64_t))
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(a3 + 16) > a2)
  {
    uint64_t v7 = OUTLINED_FUNCTION_51_3();
    uint64_t v8 = type metadata accessor for SubscriptionStoreControlConfigurationSection(v7);
    OUTLINED_FUNCTION_6_10(v8);
    a4(a3+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v10 + 72) * a2);
    return;
  }
  __break(1u);
}

uint64_t sub_22EC63888()
{
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for SubscriptionStoreControlStyleConfiguration(uint64_t a1)
{
  return sub_22EAD01C0(a1, (uint64_t *)&unk_268621EF8);
}

uint64_t sub_22EC638B0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_12_12();
  v4();
  return a2;
}

uint64_t sub_22EC6390C()
{
  uint64_t v1 = OUTLINED_FUNCTION_51_3();
  v2(v1);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_5_2();
  v3();
  return v0;
}

uint64_t sub_22EC6395C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_12_11();
  v4();
  return a2;
}

uint64_t sub_22EC639B8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t type metadata accessor for SubscriptionStoreControlPropertiesModifier()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_22EC63A0C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_22EC63A44(long long *a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a2);
  long long v4 = *a1;
  long long v5 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v4;
  *(_OWORD *)(a2 + 16) = v5;
  return a2;
}

uint64_t type metadata accessor for SubscriptionStoreControlStyleConfiguration.Section(uint64_t a1)
{
  return sub_22EAD01C0(a1, (uint64_t *)&unk_268621F10);
}

uint64_t sub_22EC63AA4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  OUTLINED_FUNCTION_53_1(a1, a2, a3);
  OUTLINED_FUNCTION_2_0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 40))(v3, v4);
  return v3;
}

uint64_t type metadata accessor for SubscriptionStoreControlStyleConfiguration.PickerOption(uint64_t a1)
{
  return sub_22EAD01C0(a1, (uint64_t *)&unk_268621F60);
}

uint64_t sub_22EC63B14()
{
  return sub_22EC5EA38();
}

void sub_22EC63B34()
{
}

uint64_t sub_22EC63B54()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_22EC63B74()
{
  unint64_t result = qword_268621ED8;
  if (!qword_268621ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268621ED8);
  }
  return result;
}

uint64_t sub_22EC63BC0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EC63BDC()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_22EC63BFC()
{
  unint64_t result = qword_268621EE0;
  if (!qword_268621EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268621EE0);
  }
  return result;
}

uint64_t sub_22EC63C48()
{
  return MEMORY[0x263F8D320];
}

uint64_t sub_22EC63C54()
{
  return sub_22EC63C9C(&qword_268621EE8, (void (*)(uint64_t))type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option);
}

uint64_t sub_22EC63C9C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22EC63CE4()
{
  return sub_22EC63C9C(&qword_268621EF0, (void (*)(uint64_t))type metadata accessor for SubscriptionStoreControlStyleConfiguration.PickerOption);
}

uint64_t sub_22EC63D2C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t dispatch thunk of SubscriptionStoreControlStyle.makeBody(configuration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t initializeBufferWithCopyOfBuffer for SubscriptionStoreControlStyleConfiguration(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BBC8);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(void *)(a1 + 8) = a2[1];
    uint64_t v7 = a2[4];
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(void *)(a1 + 32) = v7;
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    uint64_t v8 = a2[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v8)
    {
      uint64_t v9 = a2[7];
      *(void *)(a1 + 48) = v8;
      *(void *)(a1 + 56) = v9;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    }
    uint64_t v11 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v11;
    uint64_t v12 = *(int *)(v6 + 60);
    uint64_t v13 = (char *)(a1 + v12);
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = type metadata accessor for Subscription();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(qword_26861BAB0);
      memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      uint64_t v17 = sub_22EE7F780();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v13, v14, v17);
      uint64_t v18 = *(int *)(v15 + 20);
      uint64_t v19 = &v13[v18];
      unint64_t v20 = &v14[v18];
      *(void *)uint64_t v19 = *(void *)v20;
      void v19[8] = v20[8];
      uint64_t v21 = *(int *)(v15 + 24);
      unint64_t v22 = &v13[v21];
      long long v23 = &v14[v21];
      *(void *)unint64_t v22 = *(void *)v23;
      v22[8] = v23[8];
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
    }
    *(unsigned char *)(a1 + *(int *)(v6 + 64)) = *((unsigned char *)a2 + *(int *)(v6 + 64));
  }
  return a1;
}

uint64_t destroy for SubscriptionStoreControlStyleConfiguration(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (*(void *)(a1 + 48)) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26861BBC8) + 60);
  uint64_t v3 = type metadata accessor for Subscription();
  uint64_t result = __swift_getEnumTagSinglePayload(v2, 1, v3);
  if (!result)
  {
    uint64_t v5 = sub_22EE7F780();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v2, v5);
  }
  return result;
}

uint64_t initializeWithCopy for SubscriptionStoreControlStyleConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = (_OWORD *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v5)
  {
    uint64_t v7 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = v5;
    *(void *)(a1 + 56) = v7;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *v6;
  }
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRetain();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BBC8);
  uint64_t v10 = *(int *)(v9 + 60);
  uint64_t v11 = (char *)(a1 + v10);
  uint64_t v12 = (char *)(a2 + v10);
  uint64_t v13 = type metadata accessor for Subscription();
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(qword_26861BAB0);
    memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    uint64_t v15 = sub_22EE7F780();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v11, v12, v15);
    uint64_t v16 = *(int *)(v13 + 20);
    uint64_t v17 = &v11[v16];
    uint64_t v18 = &v12[v16];
    *(void *)uint64_t v17 = *(void *)v18;
    v17[8] = v18[8];
    uint64_t v19 = *(int *)(v13 + 24);
    unint64_t v20 = &v11[v19];
    uint64_t v21 = &v12[v19];
    *(void *)unint64_t v20 = *(void *)v21;
    v20[8] = v21[8];
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
  }
  *(unsigned char *)(a1 + *(int *)(v9 + 64)) = *(unsigned char *)(a2 + *(int *)(v9 + 64));
  return a1;
}

uint64_t assignWithCopy for SubscriptionStoreControlStyleConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(a1 + 48);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 48);
  if (v5)
  {
    if (v6)
    {
      uint64_t v7 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = v6;
      *(void *)(a1 + 56) = v7;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v6)
  {
    uint64_t v8 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = v6;
    *(void *)(a1 + 56) = v8;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
LABEL_8:
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BBC8);
  uint64_t v10 = *(int *)(v9 + 60);
  uint64_t v11 = (char *)(a1 + v10);
  uint64_t v12 = (char *)(a2 + v10);
  uint64_t v13 = type metadata accessor for Subscription();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v13);
  int v15 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (!EnumTagSinglePayload)
  {
    if (!v15)
    {
      uint64_t v27 = sub_22EE7F780();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 24))(v11, v12, v27);
      uint64_t v28 = *(int *)(v13 + 20);
      uint64_t v29 = &v11[v28];
      uint64_t v30 = &v12[v28];
      char v31 = v30[8];
      *(void *)uint64_t v29 = *(void *)v30;
      v29[8] = v31;
      uint64_t v32 = *(int *)(v13 + 24);
      uint64_t v33 = &v11[v32];
      uint64_t v34 = &v12[v32];
      char v35 = v34[8];
      *(void *)uint64_t v33 = *(void *)v34;
      v33[8] = v35;
      goto LABEL_14;
    }
    sub_22EC6390C();
    goto LABEL_13;
  }
  if (v15)
  {
LABEL_13:
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(qword_26861BAB0);
    memcpy(v11, v12, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_14;
  }
  uint64_t v16 = sub_22EE7F780();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v11, v12, v16);
  uint64_t v17 = *(int *)(v13 + 20);
  uint64_t v18 = &v11[v17];
  uint64_t v19 = &v12[v17];
  char v20 = v19[8];
  *(void *)uint64_t v18 = *(void *)v19;
  v18[8] = v20;
  uint64_t v21 = *(int *)(v13 + 24);
  unint64_t v22 = &v11[v21];
  long long v23 = &v12[v21];
  char v24 = v23[8];
  *(void *)unint64_t v22 = *(void *)v23;
  v22[8] = v24;
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
LABEL_14:
  *(unsigned char *)(a1 + *(int *)(v9 + 64)) = *(unsigned char *)(a2 + *(int *)(v9 + 64));
  return a1;
}

uint64_t initializeWithTake for SubscriptionStoreControlStyleConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 48);
  if (v5)
  {
    uint64_t v6 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = v5;
    *(void *)(a1 + 56) = v6;
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BBC8);
  uint64_t v8 = *(int *)(v7 + 60);
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = type metadata accessor for Subscription();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(qword_26861BAB0);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v13 = sub_22EE7F780();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v9, v10, v13);
    uint64_t v14 = *(int *)(v11 + 20);
    int v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(void *)int v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = *(int *)(v11 + 24);
    uint64_t v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
  }
  *(unsigned char *)(a1 + *(int *)(v7 + 64)) = *(unsigned char *)(a2 + *(int *)(v7 + 64));
  return a1;
}

uint64_t assignWithTake for SubscriptionStoreControlStyleConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  uint64_t v4 = *(void *)(a2 + 48);
  uint64_t v5 = *(void *)(a1 + 48);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  if (v5)
  {
    if (v4)
    {
      uint64_t v6 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = v4;
      *(void *)(a1 + 56) = v6;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v7 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = v4;
    *(void *)(a1 + 56) = v7;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
LABEL_8:
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BBC8);
  uint64_t v10 = *(int *)(v9 + 60);
  uint64_t v11 = (char *)(a1 + v10);
  uint64_t v12 = (char *)(a2 + v10);
  uint64_t v13 = type metadata accessor for Subscription();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v13);
  int v15 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (!EnumTagSinglePayload)
  {
    if (!v15)
    {
      uint64_t v25 = sub_22EE7F780();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 40))(v11, v12, v25);
      uint64_t v26 = *(int *)(v13 + 20);
      uint64_t v27 = &v11[v26];
      uint64_t v28 = &v12[v26];
      *(void *)uint64_t v27 = *(void *)v28;
      v27[8] = v28[8];
      uint64_t v29 = *(int *)(v13 + 24);
      uint64_t v30 = &v11[v29];
      char v31 = &v12[v29];
      *(void *)uint64_t v30 = *(void *)v31;
      v30[8] = v31[8];
      goto LABEL_14;
    }
    sub_22EC6390C();
    goto LABEL_13;
  }
  if (v15)
  {
LABEL_13:
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(qword_26861BAB0);
    memcpy(v11, v12, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_14;
  }
  uint64_t v16 = sub_22EE7F780();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v11, v12, v16);
  uint64_t v17 = *(int *)(v13 + 20);
  uint64_t v18 = &v11[v17];
  uint64_t v19 = &v12[v17];
  *(void *)uint64_t v18 = *(void *)v19;
  v18[8] = v19[8];
  uint64_t v20 = *(int *)(v13 + 24);
  uint64_t v21 = &v11[v20];
  unint64_t v22 = &v12[v20];
  *(void *)uint64_t v21 = *(void *)v22;
  v21[8] = v22[8];
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
LABEL_14:
  *(unsigned char *)(a1 + *(int *)(v9 + 64)) = *(unsigned char *)(a2 + *(int *)(v9 + 64));
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscriptionStoreControlStyleConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EC648DC);
}

uint64_t sub_22EC648DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BBC8);

  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for SubscriptionStoreControlStyleConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EC6493C);
}

uint64_t sub_22EC6493C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861BBC8);
  uint64_t v0 = OUTLINED_FUNCTION_16();

  return __swift_storeEnumTagSinglePayload(v0, v1, v2, v3);
}

uint64_t sub_22EC64980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22EC65D78(a1, a2, a3, (uint64_t (*)(uint64_t))sub_22EC64998);
}

void sub_22EC64998()
{
  if (!qword_268621F08)
  {
    unint64_t v0 = type metadata accessor for SubscriptionStoreControlConfiguration();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268621F08);
    }
  }
}

void type metadata accessor for SubscriptionStoreControlStyleConfiguration.Icon()
{
}

void *initializeBufferWithCopyOfBuffer for SubscriptionStoreControlStyleConfiguration.Section(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Section.Header(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621EC8);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v14 = sub_22EE7EC60();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v9, v10, v14);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v15 = a3[7];
    *(void *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    uint64_t v16 = (char *)v4 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Section.Footer(0);
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18))
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621ED0);
      memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      uint64_t v20 = sub_22EE7EC60();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v16, v17, v20);
      __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
    }
  }
  return v4;
}

uint64_t type metadata accessor for SubscriptionStoreControlStyleConfiguration.Section.Header(uint64_t a1)
{
  return sub_22EAD01C0(a1, (uint64_t *)&unk_268621F30);
}

uint64_t type metadata accessor for SubscriptionStoreControlStyleConfiguration.Section.Footer(uint64_t a1)
{
  return sub_22EAD01C0(a1, (uint64_t *)&unk_268621F40);
}

uint64_t destroy for SubscriptionStoreControlStyleConfiguration.Section(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Section.Header(0);
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
  {
    uint64_t v6 = sub_22EE7EC60();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + *(int *)(a2 + 28);
  uint64_t v8 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Section.Footer(0);
  uint64_t result = __swift_getEnumTagSinglePayload(v7, 1, v8);
  if (!result)
  {
    uint64_t v10 = sub_22EE7EC60();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
    return v11(v7, v10);
  }
  return result;
}

uint64_t initializeWithCopy for SubscriptionStoreControlStyleConfiguration.Section(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Section.Header(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621EC8);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = sub_22EE7EC60();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 16))(v8, v9, v12);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v13 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  uint64_t v16 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Section.Footer(0);
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621ED0);
    memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v18 = sub_22EE7EC60();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 16))(v14, v15, v18);
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
  }
  return a1;
}

uint64_t *assignWithCopy for SubscriptionStoreControlStyleConfiguration.Section(uint64_t *a1, uint64_t *a2, int *a3)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Section.Header(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  int v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (EnumTagSinglePayload)
  {
    if (!v11)
    {
      uint64_t v12 = sub_22EE7EC60();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v7, v8, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v11)
  {
    sub_22EC6390C();
LABEL_6:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621EC8);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v23 = sub_22EE7EC60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 24))(v7, v8, v23);
LABEL_7:
  *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Section.Footer(0);
  int v18 = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v17);
  int v19 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17);
  if (!v18)
  {
    if (!v19)
    {
      uint64_t v24 = sub_22EE7EC60();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 24))(v15, v16, v24);
      return a1;
    }
    sub_22EC6390C();
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621ED0);
    memcpy(v15, v16, *(void *)(*(void *)(v21 - 8) + 64));
    return a1;
  }
  uint64_t v20 = sub_22EE7EC60();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v15, v16, v20);
  __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v17);
  return a1;
}

uint64_t initializeWithTake for SubscriptionStoreControlStyleConfiguration.Section(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Section.Header(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621EC8);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = sub_22EE7EC60();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v8, v9, v12);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v13 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  uint64_t v16 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Section.Footer(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621ED0);
    memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v18 = sub_22EE7EC60();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 32))(v14, v15, v18);
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
  }
  return a1;
}

uint64_t assignWithTake for SubscriptionStoreControlStyleConfiguration.Section(uint64_t a1, uint64_t a2, int *a3)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Section.Header(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  int v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      uint64_t v13 = sub_22EE7EC60();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v8, v9, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v12)
  {
    sub_22EC6390C();
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621EC8);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v24 = sub_22EE7EC60();
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 40))(v8, v9, v24);
LABEL_7:
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  uint64_t v18 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Section.Footer(0);
  int v19 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v18);
  int v20 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18);
  if (!v19)
  {
    if (!v20)
    {
      uint64_t v25 = sub_22EE7EC60();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v25 - 8) + 40))(v16, v17, v25);
      return a1;
    }
    sub_22EC6390C();
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621ED0);
    memcpy(v16, v17, *(void *)(*(void *)(v22 - 8) + 64));
    return a1;
  }
  uint64_t v21 = sub_22EE7EC60();
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v21 - 8) + 32))(v16, v17, v21);
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscriptionStoreControlStyleConfiguration.Section(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EC65670);
}

uint64_t sub_22EC65670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return OUTLINED_FUNCTION_20_0(*(void *)(a1 + 24));
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_268621EC8);
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v8 + 84) == a2)
  {
    uint64_t v9 = v7;
    uint64_t v10 = *(int *)(a3 + 20);
  }
  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621ED0);
    uint64_t v10 = *(int *)(a3 + 28);
  }

  return __swift_getEnumTagSinglePayload(a1 + v10, a2, v9);
}

uint64_t storeEnumTagSinglePayload for SubscriptionStoreControlStyleConfiguration.Section(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EC6572C);
}

uint64_t sub_22EC6572C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268621EC8);
    OUTLINED_FUNCTION_10();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a4 + 20);
    }
    else
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621ED0);
      uint64_t v11 = *(int *)(a4 + 28);
    }
    return __swift_storeEnumTagSinglePayload(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_22EC657DC()
{
  sub_22EC658F4(319, &qword_268621F20, (void (*)(uint64_t))type metadata accessor for SubscriptionStoreControlStyleConfiguration.Section.Header);
  if (v0 <= 0x3F)
  {
    sub_22EC658F4(319, &qword_268621F28, (void (*)(uint64_t))type metadata accessor for SubscriptionStoreControlStyleConfiguration.Section.Footer);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_22EC658F4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_22EE80040();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t initializeWithCopy for SubscriptionStoreControlStyleConfiguration.Section.ID(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for SubscriptionStoreControlStyleConfiguration.Section.ID(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

uint64_t assignWithTake for SubscriptionStoreControlStyleConfiguration.Section.ID(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscriptionStoreControlStyleConfiguration.Section.ID(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SubscriptionStoreControlStyleConfiguration.Section.ID(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for SubscriptionStoreControlStyleConfiguration.Section.ID()
{
}

uint64_t getEnumTagSinglePayload for SubscriptionStoreControlStyleConfiguration.Section.Header(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EC69ABC);
}

uint64_t storeEnumTagSinglePayload for SubscriptionStoreControlStyleConfiguration.Section.Header(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EC65ADC);
}

uint64_t sub_22EC65ADC()
{
  type metadata accessor for SubscriptionOptionSectionAccessorySubview();
  uint64_t v0 = OUTLINED_FUNCTION_16();

  return __swift_storeEnumTagSinglePayload(v0, v1, v2, v3);
}

uint64_t sub_22EC65B1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22EC65D78(a1, a2, a3, MEMORY[0x263F1B838]);
}

uint64_t _s17_StoreKit_SwiftUI42SubscriptionStoreControlStyleConfigurationV7SectionV6HeaderVwCP_0()
{
  OUTLINED_FUNCTION_22_9();
  OUTLINED_FUNCTION_2_0();
  long long v4 = *v3;

  return v4(v1, v0, v2);
}

uint64_t _s17_StoreKit_SwiftUI42SubscriptionStoreControlStyleConfigurationV7SectionV6HeaderVwxx_0()
{
  OUTLINED_FUNCTION_51_3();
  sub_22EE7EC60();
  OUTLINED_FUNCTION_2_0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8);

  return v3(v0, v1);
}

uint64_t _s17_StoreKit_SwiftUI42SubscriptionStoreControlStyleConfigurationV7SectionV6HeaderVwcp_0()
{
  OUTLINED_FUNCTION_22_9();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_12_12();
  v1();
  return v0;
}

uint64_t _s17_StoreKit_SwiftUI42SubscriptionStoreControlStyleConfigurationV7SectionV6HeaderVwca_0()
{
  OUTLINED_FUNCTION_22_9();
  OUTLINED_FUNCTION_2_0();
  uint64_t v1 = OUTLINED_FUNCTION_35_3();
  v2(v1);
  return v0;
}

uint64_t _s17_StoreKit_SwiftUI42SubscriptionStoreControlStyleConfigurationV7SectionV6HeaderVwtk_0()
{
  OUTLINED_FUNCTION_22_9();
  OUTLINED_FUNCTION_2_0();
  uint64_t v1 = OUTLINED_FUNCTION_35_3();
  v2(v1);
  return v0;
}

uint64_t _s17_StoreKit_SwiftUI42SubscriptionStoreControlStyleConfigurationV7SectionV6HeaderVwta_0()
{
  OUTLINED_FUNCTION_22_9();
  OUTLINED_FUNCTION_2_0();
  uint64_t v1 = OUTLINED_FUNCTION_35_3();
  v2(v1);
  return v0;
}

uint64_t getEnumTagSinglePayload for SubscriptionStoreControlStyleConfiguration.Section.Footer(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EC65D1C);
}

uint64_t sub_22EC65D1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SubscriptionOptionSectionAccessorySubview();

  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for SubscriptionStoreControlStyleConfiguration.Section.Footer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EC69AA0);
}

uint64_t sub_22EC65D78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SubscriptionStoreControlStyleConfiguration.Option(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_22EE7F780();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = type metadata accessor for Subscription();
    uint64_t v9 = *(int *)(v8 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    *(void *)uint64_t v10 = *(void *)v11;
    v10[8] = v11[8];
    uint64_t v12 = *(int *)(v8 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    v13[8] = v14[8];
    *(void *)uint64_t v13 = *(void *)v14;
    uint64_t v15 = type metadata accessor for SubscriptionStoreControlOption(0);
    uint64_t v16 = *(int *)(v15 + 20);
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_22EE7F670();
    if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19))
    {
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
      memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
      __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v19);
    }
    *(uint64_t *)((char *)a1 + *(int *)(v15 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v15 + 24));
    uint64_t v22 = *(int *)(a3 + 20);
    uint64_t v23 = (uint64_t *)((char *)a1 + v22);
    uint64_t v24 = (uint64_t *)((char *)a2 + v22);
    if (*v24)
    {
      uint64_t v25 = v24[1];
      *uint64_t v23 = *v24;
      v23[1] = v25;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    }
    uint64_t v26 = *(int *)(a3 + 24);
    uint64_t v27 = (uint64_t *)((char *)a1 + v26);
    uint64_t v28 = (uint64_t *)((char *)a2 + v26);
    uint64_t v29 = v28[1];
    *uint64_t v27 = *v28;
    v27[1] = v29;
  }
  swift_retain();
  return a1;
}

uint64_t destroy for SubscriptionStoreControlStyleConfiguration.Option(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22EE7F780();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(type metadata accessor for SubscriptionStoreControlOption(0) + 20);
  uint64_t v6 = sub_22EE7F670();
  if (!__swift_getEnumTagSinglePayload(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  if (*(void *)(a1 + *(int *)(a2 + 20))) {
    swift_release();
  }

  return swift_release();
}

uint64_t initializeWithCopy for SubscriptionStoreControlStyleConfiguration.Option(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7F780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for Subscription();
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = *(int *)(v7 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  *(void *)uint64_t v12 = *(void *)v13;
  uint64_t v14 = type metadata accessor for SubscriptionStoreControlOption(0);
  uint64_t v15 = *(int *)(v14 + 20);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  uint64_t v18 = sub_22EE7F670();
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
    memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
  }
  *(void *)(a1 + *(int *)(v14 + 24)) = *(void *)(a2 + *(int *)(v14 + 24));
  uint64_t v20 = *(int *)(a3 + 20);
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  if (*v22)
  {
    uint64_t v23 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v23;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  }
  uint64_t v24 = *(int *)(a3 + 24);
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (void *)(a2 + v24);
  uint64_t v27 = v26[1];
  void *v25 = *v26;
  v25[1] = v27;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SubscriptionStoreControlStyleConfiguration.Option(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7F780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for Subscription();
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  char v11 = *(unsigned char *)(v10 + 8);
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = v11;
  uint64_t v12 = *(int *)(v7 + 24);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  char v15 = *(unsigned char *)(v14 + 8);
  *(void *)uint64_t v13 = *(void *)v14;
  *(unsigned char *)(v13 + 8) = v15;
  uint64_t v16 = type metadata accessor for SubscriptionStoreControlOption(0);
  uint64_t v17 = *(int *)(v16 + 20);
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (const void *)(a2 + v17);
  uint64_t v20 = sub_22EE7F670();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v18, 1, v20);
  int v22 = __swift_getEnumTagSinglePayload((uint64_t)v19, 1, v20);
  if (EnumTagSinglePayload)
  {
    if (!v22)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
      __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v20);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v23 = *(void *)(v20 - 8);
  if (v22)
  {
    (*(void (**)(void *, uint64_t))(v23 + 8))(v18, v20);
LABEL_6:
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
    memcpy(v18, v19, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v23 + 24))(v18, v19, v20);
LABEL_7:
  *(void *)(a1 + *(int *)(v16 + 24)) = *(void *)(a2 + *(int *)(v16 + 24));
  uint64_t v25 = *(int *)(a3 + 20);
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = a2 + v25;
  uint64_t v28 = *(void *)(a1 + v25);
  uint64_t v29 = *(void *)(a2 + v25);
  if (!v28)
  {
    if (v29)
    {
      uint64_t v31 = *(void *)(v27 + 8);
      *uint64_t v26 = v29;
      v26[1] = v31;
      swift_retain();
      goto LABEL_14;
    }
LABEL_13:
    *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
    goto LABEL_14;
  }
  if (!v29)
  {
    swift_release();
    goto LABEL_13;
  }
  uint64_t v30 = *(void *)(v27 + 8);
  *uint64_t v26 = v29;
  v26[1] = v30;
  swift_retain();
  swift_release();
LABEL_14:
  uint64_t v32 = *(int *)(a3 + 24);
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (void *)(a2 + v32);
  uint64_t v35 = v34[1];
  *uint64_t v33 = *v34;
  v33[1] = v35;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for SubscriptionStoreControlStyleConfiguration.Option(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7F780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for Subscription();
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = *(int *)(v7 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  *(void *)uint64_t v12 = *(void *)v13;
  uint64_t v14 = type metadata accessor for SubscriptionStoreControlOption(0);
  uint64_t v15 = *(int *)(v14 + 20);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  uint64_t v18 = sub_22EE7F670();
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
    memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
  }
  *(void *)(a1 + *(int *)(v14 + 24)) = *(void *)(a2 + *(int *)(v14 + 24));
  uint64_t v20 = *(int *)(a3 + 20);
  uint64_t v21 = (void *)(a1 + v20);
  int v22 = (uint64_t *)(a2 + v20);
  uint64_t v23 = *v22;
  if (*v22)
  {
    uint64_t v24 = v22[1];
    *uint64_t v21 = v23;
    v21[1] = v24;
  }
  else
  {
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  }
  *(_OWORD *)(a1 + *(int *)(a3 + 24)) = *(_OWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for SubscriptionStoreControlStyleConfiguration.Option(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7F780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for Subscription();
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = *(int *)(v7 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  *(void *)uint64_t v12 = *(void *)v13;
  uint64_t v14 = type metadata accessor for SubscriptionStoreControlOption(0);
  uint64_t v15 = *(int *)(v14 + 20);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  uint64_t v18 = sub_22EE7F670();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v18);
  int v20 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18);
  if (EnumTagSinglePayload)
  {
    if (!v20)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v21 = *(void *)(v18 - 8);
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v21 + 8))(v16, v18);
LABEL_6:
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
    memcpy(v16, v17, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v21 + 40))(v16, v17, v18);
LABEL_7:
  *(void *)(a1 + *(int *)(v14 + 24)) = *(void *)(a2 + *(int *)(v14 + 24));
  uint64_t v23 = *(int *)(a3 + 20);
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = a2 + v23;
  uint64_t v26 = *(void *)(a1 + v23);
  uint64_t v27 = *(void *)(a2 + v23);
  if (!v26)
  {
    if (v27)
    {
      uint64_t v29 = *(void *)(v25 + 8);
      void *v24 = v27;
      v24[1] = v29;
      goto LABEL_14;
    }
LABEL_13:
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    goto LABEL_14;
  }
  if (!v27)
  {
    swift_release();
    goto LABEL_13;
  }
  uint64_t v28 = *(void *)(v25 + 8);
  void *v24 = v27;
  v24[1] = v28;
  swift_release();
LABEL_14:
  *(_OWORD *)(a1 + *(int *)(a3 + 24)) = *(_OWORD *)(a2 + *(int *)(a3 + 24));
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscriptionStoreControlStyleConfiguration.Option(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EC66970);
}

uint64_t sub_22EC66970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for SubscriptionStoreControlOption(0);
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v7 + 84) != a2) {
    return OUTLINED_FUNCTION_20_0(*(void *)(a1 + *(int *)(a3 + 24)));
  }

  return __swift_getEnumTagSinglePayload(a1, a2, v6);
}

uint64_t storeEnumTagSinglePayload for SubscriptionStoreControlStyleConfiguration.Option(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EC66A04);
}

void sub_22EC66A04()
{
  uint64_t v4 = OUTLINED_FUNCTION_20_7();
  type metadata accessor for SubscriptionStoreControlOption(v4);
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v5 + 84) == v3)
  {
    uint64_t v6 = OUTLINED_FUNCTION_16();
    __swift_storeEnumTagSinglePayload(v6, v7, v8, v9);
  }
  else
  {
    *(void *)(v1 + *(int *)(v2 + 24)) = (v0 - 1);
  }
}

uint64_t sub_22EC66A70()
{
  uint64_t result = type metadata accessor for SubscriptionStoreControlOption(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for SubscriptionStoreControlStyleConfiguration.PickerOption(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    a1 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_22EE7F780();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = type metadata accessor for Subscription();
    uint64_t v9 = *(int *)(v8 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    *(void *)uint64_t v10 = *(void *)v11;
    v10[8] = v11[8];
    uint64_t v12 = *(int *)(v8 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    v13[8] = v14[8];
    *(void *)uint64_t v13 = *(void *)v14;
    uint64_t v15 = type metadata accessor for SubscriptionStoreControlOption(0);
    uint64_t v16 = *(int *)(v15 + 20);
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_22EE7F670();
    if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19))
    {
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
      memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
      __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v19);
    }
    *(void *)((char *)a1 + *(int *)(v15 + 24)) = *(void *)((char *)a2 + *(int *)(v15 + 24));
    uint64_t v22 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
    uint64_t v23 = *(int *)(v22 + 20);
    uint64_t v24 = (void *)((char *)a1 + v23);
    uint64_t v25 = (void *)((char *)a2 + v23);
    if (*v25)
    {
      uint64_t v26 = v25[1];
      void *v24 = *v25;
      v24[1] = v26;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    }
    uint64_t v27 = *(int *)(v22 + 24);
    uint64_t v28 = (void *)((char *)a1 + v27);
    uint64_t v29 = (void *)((char *)a2 + v27);
    uint64_t v30 = v29[1];
    *uint64_t v28 = *v29;
    v28[1] = v30;
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t destroy for SubscriptionStoreControlStyleConfiguration.PickerOption(uint64_t a1)
{
  uint64_t v2 = sub_22EE7F780();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  uint64_t v3 = a1 + *(int *)(type metadata accessor for SubscriptionStoreControlOption(0) + 20);
  uint64_t v4 = sub_22EE7F670();
  if (!__swift_getEnumTagSinglePayload(v3, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  if (*(void *)(a1 + *(int *)(type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0) + 20))) {
    swift_release();
  }

  return swift_release();
}

uint64_t initializeWithCopy for SubscriptionStoreControlStyleConfiguration.PickerOption(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7F780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for Subscription();
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = *(int *)(v7 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  *(void *)uint64_t v12 = *(void *)v13;
  uint64_t v14 = type metadata accessor for SubscriptionStoreControlOption(0);
  uint64_t v15 = *(int *)(v14 + 20);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  uint64_t v18 = sub_22EE7F670();
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
    memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
  }
  *(void *)(a1 + *(int *)(v14 + 24)) = *(void *)(a2 + *(int *)(v14 + 24));
  uint64_t v20 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
  uint64_t v21 = *(int *)(v20 + 20);
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  if (*v23)
  {
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  }
  uint64_t v25 = *(int *)(v20 + 24);
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  uint64_t v28 = v27[1];
  *uint64_t v26 = *v27;
  v26[1] = v28;
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SubscriptionStoreControlStyleConfiguration.PickerOption(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7F780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for Subscription();
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  char v11 = *(unsigned char *)(v10 + 8);
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = v11;
  uint64_t v12 = *(int *)(v7 + 24);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  char v15 = *(unsigned char *)(v14 + 8);
  *(void *)uint64_t v13 = *(void *)v14;
  *(unsigned char *)(v13 + 8) = v15;
  uint64_t v16 = type metadata accessor for SubscriptionStoreControlOption(0);
  uint64_t v17 = *(int *)(v16 + 20);
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (const void *)(a2 + v17);
  uint64_t v20 = sub_22EE7F670();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v18, 1, v20);
  int v22 = __swift_getEnumTagSinglePayload((uint64_t)v19, 1, v20);
  if (EnumTagSinglePayload)
  {
    if (!v22)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
      __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v20);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v23 = *(void *)(v20 - 8);
  if (v22)
  {
    (*(void (**)(void *, uint64_t))(v23 + 8))(v18, v20);
LABEL_6:
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
    memcpy(v18, v19, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v23 + 24))(v18, v19, v20);
LABEL_7:
  *(void *)(a1 + *(int *)(v16 + 24)) = *(void *)(a2 + *(int *)(v16 + 24));
  uint64_t v25 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
  uint64_t v26 = *(int *)(v25 + 20);
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = a2 + v26;
  uint64_t v29 = *(void *)(a1 + v26);
  uint64_t v30 = *(void *)(a2 + v26);
  if (!v29)
  {
    if (v30)
    {
      uint64_t v32 = *(void *)(v28 + 8);
      *uint64_t v27 = v30;
      v27[1] = v32;
      swift_retain();
      goto LABEL_14;
    }
LABEL_13:
    *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
    goto LABEL_14;
  }
  if (!v30)
  {
    swift_release();
    goto LABEL_13;
  }
  uint64_t v31 = *(void *)(v28 + 8);
  *uint64_t v27 = v30;
  v27[1] = v31;
  swift_retain();
  swift_release();
LABEL_14:
  uint64_t v33 = *(int *)(v25 + 24);
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (void *)(a2 + v33);
  uint64_t v36 = v35[1];
  *uint64_t v34 = *v35;
  v34[1] = v36;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for SubscriptionStoreControlStyleConfiguration.PickerOption(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7F780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for Subscription();
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = *(int *)(v7 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  *(void *)uint64_t v12 = *(void *)v13;
  uint64_t v14 = type metadata accessor for SubscriptionStoreControlOption(0);
  uint64_t v15 = *(int *)(v14 + 20);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  uint64_t v18 = sub_22EE7F670();
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
    memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
  }
  *(void *)(a1 + *(int *)(v14 + 24)) = *(void *)(a2 + *(int *)(v14 + 24));
  uint64_t v20 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
  uint64_t v21 = *(int *)(v20 + 20);
  int v22 = (void *)(a1 + v21);
  uint64_t v23 = (uint64_t *)(a2 + v21);
  uint64_t v24 = *v23;
  if (*v23)
  {
    uint64_t v25 = v23[1];
    *int v22 = v24;
    v22[1] = v25;
  }
  else
  {
    *(_OWORD *)int v22 = *(_OWORD *)v23;
  }
  *(_OWORD *)(a1 + *(int *)(v20 + 24)) = *(_OWORD *)(a2 + *(int *)(v20 + 24));
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for SubscriptionStoreControlStyleConfiguration.PickerOption(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7F780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for Subscription();
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = *(int *)(v7 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  *(void *)uint64_t v12 = *(void *)v13;
  uint64_t v14 = type metadata accessor for SubscriptionStoreControlOption(0);
  uint64_t v15 = *(int *)(v14 + 20);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  uint64_t v18 = sub_22EE7F670();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v18);
  int v20 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18);
  if (EnumTagSinglePayload)
  {
    if (!v20)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v21 = *(void *)(v18 - 8);
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v21 + 8))(v16, v18);
LABEL_6:
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
    memcpy(v16, v17, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v21 + 40))(v16, v17, v18);
LABEL_7:
  *(void *)(a1 + *(int *)(v14 + 24)) = *(void *)(a2 + *(int *)(v14 + 24));
  uint64_t v23 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
  uint64_t v24 = *(int *)(v23 + 20);
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = a2 + v24;
  uint64_t v27 = *(void *)(a1 + v24);
  uint64_t v28 = *(void *)(a2 + v24);
  if (!v27)
  {
    if (v28)
    {
      uint64_t v30 = *(void *)(v26 + 8);
      void *v25 = v28;
      v25[1] = v30;
      goto LABEL_14;
    }
LABEL_13:
    *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
    goto LABEL_14;
  }
  if (!v28)
  {
    swift_release();
    goto LABEL_13;
  }
  uint64_t v29 = *(void *)(v26 + 8);
  void *v25 = v28;
  v25[1] = v29;
  swift_release();
LABEL_14:
  *(_OWORD *)(a1 + *(int *)(v23 + 24)) = *(_OWORD *)(a2 + *(int *)(v23 + 24));
  swift_release();
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscriptionStoreControlStyleConfiguration.PickerOption(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EC676F8);
}

uint64_t sub_22EC676F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = OUTLINED_FUNCTION_51_3();
  type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(v6);
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v8 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(v3, a2, v7);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(v3 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for SubscriptionStoreControlStyleConfiguration.PickerOption(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EC677A4);
}

void sub_22EC677A4()
{
  uint64_t v4 = OUTLINED_FUNCTION_20_7();
  type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(v4);
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v5 + 84) == v3)
  {
    uint64_t v6 = OUTLINED_FUNCTION_16();
    __swift_storeEnumTagSinglePayload(v6, v7, v8, v9);
  }
  else
  {
    *(unsigned char *)(v1 + *(int *)(v2 + 20)) = v0 + 1;
  }
}

uint64_t sub_22EC67810()
{
  uint64_t result = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for SubscriptionStoreControlStyleConfiguration.MarketingContent()
{
}

uint64_t sub_22EC678B0()
{
  return MEMORY[0x263F1B718];
}

uint64_t sub_22EC678BC()
{
  return sub_22EC63C9C(qword_268621F70, (void (*)(uint64_t))type metadata accessor for SubscriptionOptionSectionAccessorySubview);
}

uint64_t sub_22EC67904()
{
  return swift_getWitnessTable();
}

uint64_t sub_22EC67998()
{
  return swift_getWitnessTable();
}

uint64_t sub_22EC67A24()
{
  uint64_t v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    uint64_t v0 = sub_22EE80040();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return v0;
}

uint64_t *sub_22EC67B20(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  int v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v10;
  uint64_t v12 = v7 + v10;
  if (*(_DWORD *)(v9 + 84)) {
    size_t v13 = *(void *)(v9 + 64);
  }
  else {
    size_t v13 = *(void *)(v9 + 64) + 1;
  }
  int v14 = *(_DWORD *)(v6 + 80) | v10;
  uint64_t v15 = v14;
  int v16 = v14 & 0x100000;
  if (v15 > 7 || v16 != 0 || (v12 & ~v11) + v13 > 0x18)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v15 + 16) & ~v15));
    swift_retain();
  }
  else
  {
    uint64_t v20 = AssociatedTypeWitness;
    uint64_t v21 = ~v11;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    uint64_t v22 = (const void *)(((unint64_t)a2 + v12) & v21);
    if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v20))
    {
      memcpy((void *)(((unint64_t)a1 + v12) & v21), v22, v13);
    }
    else
    {
      (*(void (**)(unint64_t, const void *, uint64_t))(v9 + 16))(((unint64_t)a1 + v12) & v21, v22, v20);
      __swift_storeEnumTagSinglePayload(((unint64_t)a1 + v12) & v21, 0, 1, v20);
    }
  }
  return a1;
}

uint64_t sub_22EC67CF4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(uint64_t, void))v3)(a1, *(void *)(a2 + 16));
  uint64_t v4 = *(void *)(v3 + 56);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v6 = (v4 + a1 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t result = __swift_getEnumTagSinglePayload(v6, 1, AssociatedTypeWitness);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(unint64_t, uint64_t))(v9 + 8);
    return v8(v6, AssociatedTypeWitness);
  }
  return result;
}

uint64_t sub_22EC67E0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  int v10 = (void *)((v6 + v9 + a1) & ~v9);
  uint64_t v11 = (const void *)((v6 + v9 + a2) & ~v9);
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v8 + 84)) {
      size_t v12 = *(void *)(v8 + 64);
    }
    else {
      size_t v12 = *(void *)(v8 + 64) + 1;
    }
    memcpy(v10, v11, v12);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v10, v11, AssociatedTypeWitness);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, AssociatedTypeWitness);
  }
  return a1;
}

uint64_t sub_22EC67F48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  int v10 = (void *)((v6 + v9 + a1) & ~v9);
  uint64_t v11 = (const void *)((v6 + v9 + a2) & ~v9);
  LODWORD(v6) = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, AssociatedTypeWitness);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, AssociatedTypeWitness);
  if (v6)
  {
    if (!EnumTagSinglePayload)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v10, v11, AssociatedTypeWitness);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, AssociatedTypeWitness);
      return a1;
    }
    int v13 = *(_DWORD *)(v8 + 84);
    size_t v14 = *(void *)(v8 + 64);
  }
  else
  {
    if (!EnumTagSinglePayload)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 24))(v10, v11, AssociatedTypeWitness);
      return a1;
    }
    int v16 = *(void (**)(void *, uint64_t))(v8 + 8);
    uint64_t v15 = v8 + 8;
    v16(v10, AssociatedTypeWitness);
    int v13 = *(_DWORD *)(v15 + 76);
    size_t v14 = *(void *)(v15 + 56);
  }
  if (v13) {
    size_t v17 = v14;
  }
  else {
    size_t v17 = v14 + 1;
  }
  memcpy(v10, v11, v17);
  return a1;
}

uint64_t sub_22EC680E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  int v10 = (void *)((v6 + v9 + a1) & ~v9);
  uint64_t v11 = (const void *)((v6 + v9 + a2) & ~v9);
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, AssociatedTypeWitness))
  {
    if (*(_DWORD *)(v8 + 84)) {
      size_t v12 = *(void *)(v8 + 64);
    }
    else {
      size_t v12 = *(void *)(v8 + 64) + 1;
    }
    memcpy(v10, v11, v12);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v10, v11, AssociatedTypeWitness);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, AssociatedTypeWitness);
  }
  return a1;
}

uint64_t sub_22EC68220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  int v10 = (void *)((v6 + v9 + a1) & ~v9);
  uint64_t v11 = (const void *)((v6 + v9 + a2) & ~v9);
  LODWORD(v6) = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, AssociatedTypeWitness);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, AssociatedTypeWitness);
  if (v6)
  {
    if (!EnumTagSinglePayload)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v10, v11, AssociatedTypeWitness);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, AssociatedTypeWitness);
      return a1;
    }
    int v13 = *(_DWORD *)(v8 + 84);
    size_t v14 = *(void *)(v8 + 64);
  }
  else
  {
    if (!EnumTagSinglePayload)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 40))(v10, v11, AssociatedTypeWitness);
      return a1;
    }
    int v16 = *(void (**)(void *, uint64_t))(v8 + 8);
    uint64_t v15 = v8 + 8;
    v16(v10, AssociatedTypeWitness);
    int v13 = *(_DWORD *)(v15 + 76);
    size_t v14 = *(void *)(v15 + 56);
  }
  if (v13) {
    size_t v17 = v14;
  }
  else {
    size_t v17 = v14 + 1;
  }
  memcpy(v10, v11, v17);
  return a1;
}

uint64_t sub_22EC683BC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  if (v10) {
    unsigned int v11 = v10 - 1;
  }
  else {
    unsigned int v11 = 0;
  }
  if (v11 <= v7) {
    unsigned int v12 = v7;
  }
  else {
    unsigned int v12 = v11;
  }
  uint64_t v13 = *(unsigned __int8 *)(v9 + 80);
  if (v10) {
    uint64_t v14 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  else {
    uint64_t v14 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) + 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v15 = *(void *)(v6 + 64) + v13;
  if (a2 <= v12) {
    goto LABEL_30;
  }
  uint64_t v16 = v14 + (v15 & ~v13);
  char v17 = 8 * v16;
  if (v16 <= 3)
  {
    unsigned int v19 = ((a2 - v12 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      int v18 = *(_DWORD *)((char *)a1 + v16);
      if (!v18) {
        goto LABEL_30;
      }
      goto LABEL_20;
    }
    if (v19 > 0xFF)
    {
      int v18 = *(unsigned __int16 *)((char *)a1 + v16);
      if (!*(unsigned __int16 *)((char *)a1 + v16)) {
        goto LABEL_30;
      }
      goto LABEL_20;
    }
    if (v19 < 2)
    {
LABEL_30:
      if (v12)
      {
        if (v7 >= v11)
        {
          return __swift_getEnumTagSinglePayload((uint64_t)a1, v7, v5);
        }
        else
        {
          unsigned int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(((unint64_t)a1 + v15) & ~v13, v10, AssociatedTypeWitness);
          if (EnumTagSinglePayload >= 2) {
            return EnumTagSinglePayload - 1;
          }
          else {
            return 0;
          }
        }
      }
      return 0;
    }
  }
  int v18 = *((unsigned __int8 *)a1 + v16);
  if (!*((unsigned char *)a1 + v16)) {
    goto LABEL_30;
  }
LABEL_20:
  int v20 = (v18 - 1) << v17;
  if (v16 > 3) {
    int v20 = 0;
  }
  if (v16)
  {
    if (v16 <= 3) {
      int v21 = v16;
    }
    else {
      int v21 = 4;
    }
    switch(v21)
    {
      case 2:
        int v22 = *a1;
        break;
      case 3:
        int v22 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v22 = *(_DWORD *)a1;
        break;
      default:
        int v22 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v22 = 0;
  }
  return v12 + (v22 | v20) + 1;
}

void sub_22EC68620(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  int v11 = 0;
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v13 = *(unsigned int *)(v12 + 84);
  unsigned int v14 = v13 - 1;
  if (!v13) {
    unsigned int v14 = 0;
  }
  if (v14 <= v9) {
    unsigned int v15 = v9;
  }
  else {
    unsigned int v15 = v14;
  }
  uint64_t v16 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v17 = *(void *)(v8 + 64) + v16;
  uint64_t v18 = v17 & ~v16;
  if (v13) {
    size_t v19 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  else {
    size_t v19 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) + 1;
  }
  size_t v20 = v18 + v19;
  char v21 = 8 * (v18 + v19);
  if (a3 > v15)
  {
    if (v20 <= 3)
    {
      unsigned int v22 = ((a3 - v15 + ~(-1 << v21)) >> v21) + 1;
      if (HIWORD(v22))
      {
        int v11 = 4;
      }
      else if (v22 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v22 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  if (v15 < a2)
  {
    unsigned int v23 = ~v15 + a2;
    if (v20 < 4)
    {
      int v24 = (v23 >> v21) + 1;
      if (v20)
      {
        int v25 = v23 & ~(-1 << v21);
        bzero(a1, v20);
        if (v20 == 3)
        {
          *(_WORD *)a1 = v25;
          a1[2] = BYTE2(v25);
        }
        else if (v20 == 2)
        {
          *(_WORD *)a1 = v25;
        }
        else
        {
          *a1 = v25;
        }
      }
    }
    else
    {
      bzero(a1, v20);
      *(_DWORD *)a1 = v23;
      int v24 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v20] = v24;
        return;
      case 2:
        *(_WORD *)&a1[v20] = v24;
        return;
      case 3:
        goto LABEL_57;
      case 4:
        *(_DWORD *)&a1[v20] = v24;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v20] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 2:
      *(_WORD *)&a1[v20] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 3:
LABEL_57:
      __break(1u);
      JUMPOUT(0x22EC68978);
    case 4:
      *(_DWORD *)&a1[v20] = 0;
      goto LABEL_28;
    default:
LABEL_28:
      if (!a2) {
        return;
      }
LABEL_29:
      if (v9 >= v14)
      {
        uint64_t v30 = (uint64_t)a1;
        uint64_t v31 = a2;
        uint64_t v13 = v9;
        uint64_t AssociatedTypeWitness = v7;
      }
      else
      {
        uint64_t v26 = (unsigned char *)((unint64_t)&a1[v17] & ~v16);
        if (v14 < a2)
        {
          if (v19 <= 3) {
            int v27 = ~(-1 << (8 * v19));
          }
          else {
            int v27 = -1;
          }
          if (v19)
          {
            int v28 = v27 & (~v14 + a2);
            if (v19 <= 3) {
              int v29 = v19;
            }
            else {
              int v29 = 4;
            }
            bzero(v26, v19);
            switch(v29)
            {
              case 2:
                *(_WORD *)uint64_t v26 = v28;
                break;
              case 3:
                *(_WORD *)uint64_t v26 = v28;
                void v26[2] = BYTE2(v28);
                break;
              case 4:
                *(_DWORD *)uint64_t v26 = v28;
                break;
              default:
                *uint64_t v26 = v28;
                break;
            }
          }
          return;
        }
        uint64_t v31 = (a2 + 1);
        uint64_t v30 = (uint64_t)v26;
      }
      __swift_storeEnumTagSinglePayload(v30, v31, v13, AssociatedTypeWitness);
      return;
  }
}

uint64_t sub_22EC689B0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EC689F4()
{
  return sub_22EC5CBB8();
}

double sub_22EC68A1C(long long *a1)
{
  return sub_22EC6024C(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t (*sub_22EC68A24(uint64_t a1, unint64_t a2, uint64_t a3, void (*a4)(uint64_t *)))()
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(a3 + 16) > a2)
  {
    uint64_t v6 = *(void *)(a3 + 8 * a2 + 32);
    swift_bridgeObjectRetain();
    a4(&v6);
    swift_bridgeObjectRelease();
    return sub_22EC69AD8;
  }
  __break(1u);
  return result;
}

void (*sub_22EC68ABC(void (**a1)(void **a1), unint64_t a2, uint64_t a3, void (*a4)(uint64_t *)))(void **a1)
{
  uint64_t result = (void (*)(void **))malloc(0x38uLL);
  *a1 = result;
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(a3 + 16) > a2)
  {
    uint64_t v9 = *(void *)(a3 + 8 * a2 + 32);
    swift_bridgeObjectRetain();
    a4(&v9);
    swift_bridgeObjectRelease();
    return sub_22EC68B74;
  }
  __break(1u);
  return result;
}

void sub_22EC68B74(void **a1)
{
  uint64_t v1 = *a1;
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  free(v1);
}

uint64_t sub_22EC68BDC(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861DA88);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((uint64_t)a2 >= a1)
  {
    if (a1 == a2) {
      return 0;
    }
    uint64_t v9 = 1;
    unint64_t v10 = a2;
    a2 = a1;
  }
  else
  {
    uint64_t v9 = -1;
    unint64_t v10 = a1;
  }
  uint64_t result = 0;
  uint64_t v12 = (void (*)(uint64_t))v2[1];
  uint64_t v13 = (uint64_t (*)(char *))v2[3];
  uint64_t v24 = *v2;
  uint64_t v21 = v9;
  uint64_t v22 = v24;
  unint64_t v14 = *(void *)(v24 + 16);
  unint64_t v20 = v10;
  while (1)
  {
    BOOL v15 = __OFADD__(result, v9);
    result += v9;
    if (v15) {
      break;
    }
    if (a2 == v14) {
      goto LABEL_21;
    }
    unint64_t v16 = a2 + 1;
    if (__OFADD__(a2, 1)) {
      goto LABEL_22;
    }
    a2 = v14;
    if (v16 != v14)
    {
      uint64_t v23 = result;
      uint64_t v17 = v22 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      a2 = v16;
      while (a2 < v14)
      {
        uint64_t v18 = v17 + *(void *)(v6 + 72) * a2;
        sub_22EC69010((uint64_t)&v24);
        swift_retain();
        swift_retain();
        v12(v18);
        sub_22EADB0B0((uint64_t)&v24);
        swift_release();
        LOBYTE(v18) = v13(v8);
        swift_release();
        uint64_t result = sub_22EB0584C((uint64_t)v8, &qword_26861DA88);
        if (v18) {
          goto LABEL_16;
        }
        if (v14 == ++a2)
        {
          a2 = v14;
LABEL_16:
          unint64_t v10 = v20;
          uint64_t v9 = v21;
          uint64_t result = v23;
          goto LABEL_17;
        }
      }
      __break(1u);
      break;
    }
LABEL_17:
    if (a2 == v10) {
      return result;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

void sub_22EC68DD8(unint64_t *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861DA88);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (void (*)(uint64_t))v1[1];
  unint64_t v8 = *a1;
  uint64_t v15 = *v1;
  unint64_t v9 = *(void *)(v15 + 16);
  if (v8 == v9)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  unint64_t v10 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v10 == v9)
    {
LABEL_11:
      *a1 = v9;
      return;
    }
    unint64_t v14 = a1;
    int v11 = (uint64_t (*)(char *))v1[3];
    uint64_t v12 = v15 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    while (v10 < v9)
    {
      uint64_t v13 = v12 + *(void *)(v4 + 72) * v10;
      sub_22EC69010((uint64_t)&v15);
      swift_retain();
      swift_retain();
      v7(v13);
      sub_22EADB0B0((uint64_t)&v15);
      swift_release();
      LOBYTE(v13) = v11(v6);
      swift_release();
      sub_22EB0584C((uint64_t)v6, &qword_26861DA88);
      if (v13)
      {
        unint64_t v9 = v10;
LABEL_10:
        a1 = v14;
        goto LABEL_11;
      }
      if (v9 == ++v10) {
        goto LABEL_10;
      }
    }
    __break(1u);
    goto LABEL_13;
  }
LABEL_14:
  __break(1u);
}

uint64_t sub_22EC68F7C(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    sub_22EADDD7C(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22EC69010(uint64_t a1)
{
  return a1;
}

uint64_t sub_22EC6903C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  OUTLINED_FUNCTION_53_1(a1, a2, a3);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_12_11();
  v4();
  return v3;
}

uint64_t sub_22EC69088(uint64_t a1, uint64_t a2, char a3)
{
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, void))(v3 + 16))(&v5, a1, a2, a3 & 1);
  return v5;
}

uint64_t sub_22EC690C4(uint64_t a1, uint64_t a2)
{
  return a2;
}

ValueMetadata *_s48SubscriptionStoreControlPropertiesEnvironmentKeyOMa()
{
  return &_s48SubscriptionStoreControlPropertiesEnvironmentKeyON;
}

uint64_t sub_22EC69130(uint64_t a1)
{
  uint64_t result = swift_release();
  if (*(void *)(a1 + 32) >= 6uLL)
  {
    return __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  }
  return result;
}

uint64_t sub_22EC69184(uint64_t a1, void *a2)
{
  *(void *)a1 = *a2;
  uint64_t v4 = (_OWORD *)(a1 + 8);
  uint64_t v5 = a2 + 1;
  unint64_t v6 = a2[4];
  swift_retain();
  if (v6 >= 6)
  {
    uint64_t v8 = a2[5];
    *(void *)(a1 + 32) = v6;
    *(void *)(a1 + 40) = v8;
    (**(void (***)(uint64_t, void *, unint64_t))(v6 - 8))(a1 + 8, v5, v6);
  }
  else
  {
    long long v7 = *((_OWORD *)v5 + 1);
    *uint64_t v4 = *(_OWORD *)v5;
    *(_OWORD *)(a1 + 24) = v7;
    *(void *)(a1 + 40) = v5[4];
  }
  return a1;
}

uint64_t sub_22EC6922C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  unint64_t v4 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32) >= 6uLL)
  {
    if (v4 >= 6)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
      return a1;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 8);
    goto LABEL_6;
  }
  if (v4 < 6)
  {
LABEL_6:
    long long v5 = *(_OWORD *)(a2 + 8);
    long long v6 = *(_OWORD *)(a2 + 24);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(_OWORD *)(a1 + 8) = v5;
    *(_OWORD *)(a1 + 24) = v6;
    return a1;
  }
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 8, a2 + 8);
  return a1;
}

uint64_t sub_22EC69304(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  if (*(void *)(a1 + 32) >= 6uLL) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  }
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t sub_22EC69370(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_22EC693B0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void _s34SubscriptionStoreControlPropertiesVMa()
{
}

uint64_t sub_22EC69408()
{
  return swift_getWitnessTable();
}

uint64_t destroy for SubscriptionStoreControlPropertiesModifierInternal(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result)
  {
    uint64_t result = swift_release();
    if ((unint64_t)a1[4] >= 6)
    {
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 1));
    }
  }
  return result;
}

uint64_t initializeWithCopy for SubscriptionStoreControlPropertiesModifierInternal(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2)
  {
    *(void *)a1 = *(void *)a2;
    long long v4 = (_OWORD *)(a2 + 8);
    unint64_t v5 = *(void *)(a2 + 32);
    swift_retain();
    if (v5 >= 6)
    {
      uint64_t v8 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = v5;
      *(void *)(a1 + 40) = v8;
      (**(void (***)(uint64_t, uint64_t, unint64_t))(v5 - 8))(a1 + 8, a2 + 8, v5);
    }
    else
    {
      long long v6 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 8) = *v4;
      *(_OWORD *)(a1 + 24) = v6;
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
    }
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  return a1;
}

uint64_t assignWithCopy for SubscriptionStoreControlPropertiesModifierInternal(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *a2;
  if (!v4)
  {
    if (!v5)
    {
      long long v14 = *(_OWORD *)a2;
      long long v15 = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
      *(_OWORD *)(a1 + 32) = v15;
      *(_OWORD *)a1 = v14;
      return a1;
    }
    *(void *)a1 = v5;
    uint64_t v6 = a1 + 8;
    long long v7 = (long long *)(a2 + 1);
    unint64_t v9 = a2[4];
    swift_retain();
    if (v9 >= 6)
    {
      *(void *)(a1 + 32) = v9;
      *(void *)(a1 + 40) = a2[5];
      (**(void (***)(uint64_t, uint64_t, unint64_t))(v9 - 8))(a1 + 8, (uint64_t)(a2 + 1), v9);
      return a1;
    }
    goto LABEL_13;
  }
  if (!v5)
  {
    sub_22EB8E378(a1);
    long long v11 = *((_OWORD *)a2 + 1);
    long long v10 = *((_OWORD *)a2 + 2);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v11;
    *(_OWORD *)(a1 + 32) = v10;
    return a1;
  }
  *(void *)a1 = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = a1 + 8;
  long long v7 = (long long *)(a2 + 1);
  unint64_t v8 = a2[4];
  if (*(void *)(a1 + 32) >= 6uLL)
  {
    if (v8 >= 6)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 8), a2 + 1);
      return a1;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 8);
    goto LABEL_13;
  }
  if (v8 < 6)
  {
LABEL_13:
    long long v12 = *v7;
    long long v13 = v7[1];
    *(void *)(v6 + 32) = *((void *)v7 + 4);
    *(_OWORD *)uint64_t v6 = v12;
    *(_OWORD *)(v6 + 16) = v13;
    return a1;
  }
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = a2[5];
  (**(void (***)(uint64_t, uint64_t, unint64_t))(v8 - 8))(a1 + 8, (uint64_t)(a2 + 1), v8);
  return a1;
}

uint64_t assignWithTake for SubscriptionStoreControlPropertiesModifierInternal(uint64_t a1, _OWORD *a2)
{
  if (!*(void *)a1) {
    goto LABEL_7;
  }
  if (!*(void *)a2)
  {
    sub_22EB8E378(a1);
LABEL_7:
    long long v6 = a2[1];
    *(_OWORD *)a1 = *a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 32) = a2[2];
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = (char *)a2 + 8;
  if (*(void *)(a1 + 32) >= 6uLL) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  }
  long long v5 = *((_OWORD *)v4 + 1);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v4;
  *(_OWORD *)(a1 + 24) = v5;
  *(void *)(a1 + 40) = *((void *)v4 + 4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscriptionStoreControlPropertiesModifierInternal(uint64_t *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 48))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      uint64_t v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SubscriptionStoreControlPropertiesModifierInternal(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionStoreControlPropertiesModifierInternal()
{
  return &type metadata for SubscriptionStoreControlPropertiesModifierInternal;
}

uint64_t sub_22EC698DC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EC698F8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_22EC69930()
{
  if (*(void *)(v0 + 16))
  {
    swift_release();
    if (*(void *)(v0 + 48) >= 6uLL) {
      __swift_destroy_boxed_opaque_existential_1(v0 + 24);
    }
  }

  return swift_deallocObject();
}

uint64_t sub_22EC69980(_OWORD *a1)
{
  return sub_22EC60974(a1, v1 + 16);
}

uint64_t sub_22EC69988(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  OUTLINED_FUNCTION_53_1(a1, a2, a3);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_12_12();
  v4();
  return v3;
}

unint64_t sub_22EC699D8()
{
  unint64_t result = qword_268622050;
  if (!qword_268622050)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268622048);
    sub_22EADDD7C(qword_268622058, &qword_268622040);
    sub_22EADDD7C(&qword_26861DC40, &qword_26861DC08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268622050);
  }
  return result;
}

uint64_t sub_22EC69AA4()
{
  return sub_22EC63B14();
}

void OUTLINED_FUNCTION_13_19(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 176) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_16_16(uint64_t result)
{
  void *v1 = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_17_14()
{
  return 0;
}

void *OUTLINED_FUNCTION_18_14()
{
  return malloc(0x28uLL);
}

uint64_t OUTLINED_FUNCTION_22_9()
{
  return sub_22EE7EC60();
}

uint64_t OUTLINED_FUNCTION_23_6()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_27_6()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_32_4()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_33_2()
{
  return sub_22EE807B0();
}

uint64_t OUTLINED_FUNCTION_34_6()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_35_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_39_4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  return sub_22EC638B0(v3, v4, a3);
}

uint64_t OUTLINED_FUNCTION_42_3()
{
  return sub_22EE05510();
}

uint64_t OUTLINED_FUNCTION_43_3(uint64_t a1)
{
  uint64_t v5 = v1 + *(int *)(a1 + 20);
  return sub_22EC69988(v5, v2, v3);
}

uint64_t OUTLINED_FUNCTION_44_4()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_46_2(uint64_t a1)
{
  uint64_t v5 = v1 + *(int *)(a1 + 20);
  return sub_22EC69988(v5, v2, v3);
}

uint64_t OUTLINED_FUNCTION_51_3()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_53_1(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return __swift_instantiateConcreteTypeFromMangledName(a3);
}

uint64_t OUTLINED_FUNCTION_57_4()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_58_3(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  return sub_22EC638B0(v3, v4, a3);
}

uint64_t OUTLINED_FUNCTION_62_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_63_3()
{
  return v0;
}

void OUTLINED_FUNCTION_64_3(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  *(void *)(v3 - 112) = a3;
  *(void *)(v3 - 104) = a2;
  *(void *)(v3 - 120) = a1;
}

uint64_t OUTLINED_FUNCTION_67_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_68_1()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_69_2()
{
  return sub_22EE7F830();
}

uint64_t OUTLINED_FUNCTION_70_1()
{
  return sub_22EE7F830();
}

uint64_t OUTLINED_FUNCTION_71_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_73_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_74_2()
{
  return sub_22EADB1A4(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_75_2()
{
  return type metadata accessor for SubscriptionStoreControlStyleConfiguration.PickerOption(0);
}

uint64_t OUTLINED_FUNCTION_77_1()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_22EC69F6C()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for DefaultSubscriptionStoreControlStyle()
{
  return &type metadata for DefaultSubscriptionStoreControlStyle;
}

uint64_t sub_22EC69F98()
{
  return MEMORY[0x263F1BA00];
}

uint64_t sub_22EC69FA4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_22EC6A05C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (uint64_t)a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64) + 7;
  if (v7 > 7
    || (*(_DWORD *)(v6 + 80) & 0x100000) != 0
    || ((((v8 + ((v7 + 49) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v11 = *(void *)a2;
    *a1 = *(void *)a2;
    uint64_t v4 = v11 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16));
  }
  else
  {
    unsigned int v12 = *(unsigned __int8 *)(a2 + 16);
    if (v12 >= 2) {
      unsigned int v12 = *(_DWORD *)a2 + 2;
    }
    uint64_t v13 = ~v7;
    if (v12 == 1)
    {
      uint64_t v14 = *(void *)a2;
      a1[1] = *(void *)(a2 + 8);
      char v15 = 1;
    }
    else
    {
      char v15 = 0;
      uint64_t v14 = *(void *)a2;
    }
    swift_bridgeObjectRetain();
    *(void *)uint64_t v4 = v14;
    *(unsigned char *)(v4 + 16) = v15;
    unint64_t v16 = v4 & 0xFFFFFFFFFFFFFFF8;
    long long v17 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 24);
    *(_OWORD *)(v16 + 33) = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 33);
    *(_OWORD *)(v16 + 24) = v17;
    uint64_t v18 = (a2 & 0xFFFFFFFFFFFFFFF8) + v7;
    unint64_t v19 = ((v4 & 0xFFFFFFFFFFFFFFF8) + v7 + 49) & v13;
    uint64_t v20 = (v18 + 49) & v13;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 16))(v19, v20, v5);
    unint64_t v21 = (v8 + v19) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v22 = (v8 + v20) & 0xFFFFFFFFFFFFFFF8;
    id v23 = *(id *)v22;
    LOBYTE(v19) = *(unsigned char *)(v22 + 8);
    sub_22EC6A23C(*(id *)v22, v19);
    *(void *)unint64_t v21 = v23;
    *(unsigned char *)(v21 + 8) = v19;
    *(void *)(v21 + 16) = *(void *)(v22 + 16);
    uint64_t v24 = (void *)((v21 + 31) & 0xFFFFFFFFFFFFFFF8);
    int v25 = (void *)((v22 + 31) & 0xFFFFFFFFFFFFFFF8);
    void *v24 = *v25;
    v24[1] = v25[1];
    swift_retain();
  }
  swift_retain();
  return v4;
}

id sub_22EC6A23C(id result, char a2)
{
  if (a2 == 1) {
    return (id)swift_bridgeObjectRetain();
  }
  if (!a2) {
    return result;
  }
  return result;
}

uint64_t sub_22EC6A258(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  unint64_t v4 = a1 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v6 = v5 + 8;
  unint64_t v7 = (v4 + *(unsigned __int8 *)(v5 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  (*(void (**)(unint64_t))(v5 + 8))(v7);
  unint64_t v8 = (*(void *)(v6 + 56) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_22EB66200(*(id *)v8, *(unsigned char *)(v8 + 8));
  swift_release();

  return swift_release();
}

uint64_t sub_22EC6A324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v6 = *(unsigned __int8 *)(a2 + 16);
  if (v6 >= 2) {
    unsigned int v6 = *(_DWORD *)a2 + 2;
  }
  if (v6 == 1)
  {
    uint64_t v7 = *(void *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    char v8 = 1;
  }
  else
  {
    char v8 = 0;
    uint64_t v7 = *(void *)a2;
  }
  swift_bridgeObjectRetain();
  *(void *)a1 = v7;
  *(unsigned char *)(a1 + 16) = v8;
  unint64_t v9 = a1 & 0xFFFFFFFFFFFFFFF8;
  long long v10 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 24);
  *(_OWORD *)(v9 + 33) = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 33);
  *(_OWORD *)(v9 + 24) = v10;
  uint64_t v11 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v12 = v11 + 16;
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  unint64_t v14 = (v13 + 49 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v13;
  unint64_t v15 = (v13 + 49 + (a2 & 0xFFFFFFFFFFFFFFF8)) & ~v13;
  (*(void (**)(unint64_t, unint64_t))(v11 + 16))(v14, v15);
  uint64_t v16 = *(void *)(v12 + 48) + 7;
  unint64_t v17 = (v16 + v14) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (v16 + v15) & 0xFFFFFFFFFFFFFFF8;
  id v19 = *(id *)v18;
  LOBYTE(v15) = *(unsigned char *)(v18 + 8);
  sub_22EC6A23C(*(id *)v18, v15);
  *(void *)unint64_t v17 = v19;
  *(unsigned char *)(v17 + 8) = v15;
  *(void *)(v17 + 16) = *(void *)(v18 + 16);
  uint64_t v20 = (void *)((v17 + 31) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v21 = (void *)((v18 + 31) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_22EC6A470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    swift_bridgeObjectRelease();
    unsigned int v6 = *(unsigned __int8 *)(a2 + 16);
    if (v6 >= 2) {
      unsigned int v6 = *(_DWORD *)a2 + 2;
    }
    if (v6 == 1)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      char v7 = 1;
    }
    else
    {
      char v7 = 0;
      *(void *)a1 = *(void *)a2;
    }
    *(unsigned char *)(a1 + 16) = v7;
    swift_bridgeObjectRetain();
  }
  unint64_t v8 = a1 & 0xFFFFFFFFFFFFFFF8;
  *(void *)(v8 + 24) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 24);
  *(unsigned char *)(v8 + 32) = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFF8) + 32);
  *(void *)(v8 + 40) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 40);
  *(unsigned char *)(v8 + 48) = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFF8) + 48);
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v10 = v9 + 24;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  unint64_t v12 = (v11 + 49 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v11;
  unint64_t v13 = (v11 + 49 + (a2 & 0xFFFFFFFFFFFFFFF8)) & ~v11;
  (*(void (**)(unint64_t, unint64_t))(v9 + 24))(v12, v13);
  uint64_t v14 = *(void *)(v10 + 40) + 7;
  unint64_t v15 = (v14 + v12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v14 + v13) & 0xFFFFFFFFFFFFFFF8;
  id v17 = *(id *)v16;
  LOBYTE(v13) = *(unsigned char *)(v16 + 8);
  sub_22EC6A23C(*(id *)v16, v13);
  unint64_t v18 = *(void **)v15;
  *(void *)unint64_t v15 = v17;
  char v19 = *(unsigned char *)(v15 + 8);
  *(unsigned char *)(v15 + 8) = v13;
  sub_22EB66200(v18, v19);
  *(void *)(v15 + 16) = *(void *)(v16 + 16);
  swift_retain();
  swift_release();
  uint64_t v20 = (void *)((v15 + 31) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v21 = (void *)((v16 + 31) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_22EC6A61C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4 = *(unsigned __int8 *)(a2 + 16);
  if (v4 >= 2) {
    unsigned int v4 = *(_DWORD *)a2 + 2;
  }
  if (v4 == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    LOBYTE(v4) = 0;
    *(void *)a1 = *(void *)a2;
  }
  *(unsigned char *)(a1 + 16) = v4;
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  long long v6 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 24);
  *(_OWORD *)(v5 + 33) = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 33);
  *(_OWORD *)(v5 + 24) = v6;
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v8 = v7 + 32;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  unint64_t v10 = (v9 + 49 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v9;
  unint64_t v11 = (v9 + 49 + (a2 & 0xFFFFFFFFFFFFFFF8)) & ~v9;
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))(v10, v11);
  uint64_t v12 = *(void *)(v8 + 32) + 7;
  unint64_t v13 = (v12 + v10) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v14 = (v12 + v11) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = *(void *)(v14 + 16);
  *(_OWORD *)unint64_t v13 = *(_OWORD *)v14;
  *(void *)(v13 + 16) = v15;
  *(_OWORD *)((v13 + 31) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v14 + 31) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_22EC6A720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    swift_bridgeObjectRelease();
    unsigned int v6 = *(unsigned __int8 *)(a2 + 16);
    if (v6 >= 2) {
      unsigned int v6 = *(_DWORD *)a2 + 2;
    }
    if (v6 == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    else
    {
      LOBYTE(v6) = 0;
      *(void *)a1 = *(void *)a2;
    }
    *(unsigned char *)(a1 + 16) = v6;
  }
  unint64_t v7 = a1 & 0xFFFFFFFFFFFFFFF8;
  *(void *)(v7 + 24) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 24);
  *(unsigned char *)(v7 + 32) = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFF8) + 32);
  *(void *)(v7 + 40) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 40);
  *(unsigned char *)(v7 + 48) = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFF8) + 48);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  unint64_t v11 = (v10 + 49 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v10;
  unint64_t v12 = (v10 + 49 + (a2 & 0xFFFFFFFFFFFFFFF8)) & ~v10;
  (*(void (**)(unint64_t, unint64_t))(v8 + 40))(v11, v12);
  uint64_t v13 = *(void *)(v9 + 24) + 7;
  unint64_t v14 = (v13 + v11) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (v13 + v12) & 0xFFFFFFFFFFFFFFF8;
  char v16 = *(unsigned char *)(v15 + 8);
  id v17 = *(void **)v14;
  *(void *)unint64_t v14 = *(void *)v15;
  char v18 = *(unsigned char *)(v14 + 8);
  *(unsigned char *)(v14 + 8) = v16;
  sub_22EB66200(v17, v18);
  *(void *)(v14 + 16) = *(void *)(v15 + 16);
  swift_release();
  char v19 = (void *)((v14 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v20 = (void *)((v15 + 31) & 0xFFFFFFFFFFFFFFF8);
  *char v19 = *v20;
  v19[1] = v20[1];
  swift_release();
  return a1;
}

uint64_t sub_22EC6A898(unint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  if (v6 <= 0x7FFFFFFE) {
    unsigned int v8 = 2147483646;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v5 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v9 = *(void *)(*(void *)(v4 - 8) + 64) + 7;
  if (v8 < a2)
  {
    unint64_t v10 = ((((v9 + ((v7 + 49) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v11 = a2 - v8;
    uint64_t v12 = v10 & 0xFFFFFFF8;
    if ((v10 & 0xFFFFFFF8) != 0) {
      unsigned int v13 = 2;
    }
    else {
      unsigned int v13 = v11 + 1;
    }
    if (v13 >= 0x10000) {
      unsigned int v14 = 4;
    }
    else {
      unsigned int v14 = 2;
    }
    if (v13 < 0x100) {
      unsigned int v14 = 1;
    }
    if (v13 >= 2) {
      uint64_t v15 = v14;
    }
    else {
      uint64_t v15 = 0;
    }
    switch(v15)
    {
      case 1:
        int v16 = *(unsigned __int8 *)(a1 + v10);
        if (!v16) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v16 = *(unsigned __int16 *)(a1 + v10);
        if (v16) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x22EC6AA04);
      case 4:
        int v16 = *(_DWORD *)(a1 + v10);
        if (!v16) {
          break;
        }
LABEL_22:
        int v18 = v16 - 1;
        if (v12)
        {
          int v18 = 0;
          LODWORD(v12) = *(_DWORD *)a1;
        }
        int v19 = v8 + (v12 | v18);
        return (v19 + 1);
      default:
        break;
    }
  }
  unint64_t v20 = ((a1 & 0xFFFFFFFFFFFFFFF8) + v7 + 49) & ~v7;
  if (v6 >= 0x7FFFFFFE) {
    return __swift_getEnumTagSinglePayload(v20, v6, v4);
  }
  unint64_t v21 = *(void *)(((v9 + v20) & 0xFFFFFFFFFFFFFFF8) + 16);
  if (v21 >= 0xFFFFFFFF) {
    LODWORD(v21) = -1;
  }
  int v19 = v21 - 1;
  if (v19 < 0) {
    int v19 = -1;
  }
  return (v19 + 1);
}

void sub_22EC6AA18(unint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= 0x7FFFFFFE) {
    unsigned int v9 = 2147483646;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = *(void *)(*(void *)(v6 - 8) + 64) + 7;
  unint64_t v12 = ((((v11 + ((v10 + 49) & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v9 >= a3)
  {
    int v16 = 0;
  }
  else
  {
    unsigned int v13 = a3 - v9;
    if (((((v11 + ((v10 + 49) & ~v10)) & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v14 = v13 + 1;
    }
    else {
      unsigned int v14 = 2;
    }
    if (v14 >= 0x10000) {
      int v15 = 4;
    }
    else {
      int v15 = 2;
    }
    if (v14 < 0x100) {
      int v15 = 1;
    }
    if (v14 >= 2) {
      int v16 = v15;
    }
    else {
      int v16 = 0;
    }
  }
  if (a2 > v9)
  {
    if (((((v11 + ((v10 + 49) & ~v10)) & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v17 = a2 - v9;
    }
    else {
      int v17 = 1;
    }
    if (((((v11 + ((v10 + 49) & ~v10)) & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v18 = ~v9 + a2;
      bzero((void *)a1, ((((v11 + ((v10 + 49) & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v18;
    }
    switch(v16)
    {
      case 1:
        *(unsigned char *)(a1 + v12) = v17;
        return;
      case 2:
        *(_WORD *)(a1 + v12) = v17;
        return;
      case 3:
        goto LABEL_42;
      case 4:
        *(_DWORD *)(a1 + v12) = v17;
        return;
      default:
        return;
    }
  }
  switch(v16)
  {
    case 1:
      *(unsigned char *)(a1 + v12) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 2:
      *(_WORD *)(a1 + v12) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x22EC6AC20);
    case 4:
      *(_DWORD *)(a1 + v12) = 0;
      goto LABEL_31;
    default:
LABEL_31:
      if (a2)
      {
LABEL_32:
        unint64_t v19 = ((a1 & 0xFFFFFFFFFFFFFFF8) + v10 + 49) & ~v10;
        if (v8 < 0x7FFFFFFE)
        {
          unint64_t v20 = (void *)((v11 + v19) & 0xFFFFFFFFFFFFFFF8);
          if (a2 > 0x7FFFFFFE)
          {
            v20[1] = 0;
            v20[2] = 0;
            *unint64_t v20 = (a2 - 0x7FFFFFFF);
          }
          else
          {
            v20[2] = a2;
          }
        }
        else
        {
          __swift_storeEnumTagSinglePayload(v19, a2, v8, v6);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for SubscriptionStoreDynamicView()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_22EC6AC60()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EC6ACA4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_22EE7F490();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_22EC6ACD0()
{
  sub_22EE7F540();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_1_1();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BBA8);
  uint64_t v4 = OUTLINED_FUNCTION_14(v3);
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_16_17();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_35_4();
  sub_22EC6D3A0(v1, v0);
  OUTLINED_FUNCTION_32_5(v0);
  if (v6)
  {
    uint64_t result = sub_22EB0584C(v0, &qword_26861BBA8);
    __break(1u);
  }
  else
  {
    uint64_t v7 = OUTLINED_FUNCTION_8_22();
    v8(v7);
    sub_22EB0584C(v1, &qword_26861BBA8);
    swift_getAtKeyPath();
    uint64_t v9 = OUTLINED_FUNCTION_21_11();
    v10(v9);
    return v12;
  }
  return result;
}

uint64_t sub_22EC6ADFC()
{
  sub_22EE7F540();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_1_1();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BBA8);
  uint64_t v4 = OUTLINED_FUNCTION_14(v3);
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_16_17();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_35_4();
  sub_22EC6D3A0(v1, v0);
  OUTLINED_FUNCTION_32_5(v0);
  if (v6)
  {
    uint64_t result = sub_22EB0584C(v0, &qword_26861BBA8);
    __break(1u);
  }
  else
  {
    uint64_t v7 = OUTLINED_FUNCTION_8_22();
    v8(v7);
    sub_22EB0584C(v1, &qword_26861BBA8);
    swift_getAtKeyPath();
    uint64_t v9 = OUTLINED_FUNCTION_21_11();
    v10(v9);
    return v12;
  }
  return result;
}

uint64_t sub_22EC6AF2C()
{
  uint64_t v0 = sub_22EE7F540();
  OUTLINED_FUNCTION_0_0();
  uint64_t v2 = v1;
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_11_0();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BBA8);
  uint64_t v8 = OUTLINED_FUNCTION_14(v7);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  unsigned int v13 = (char *)&v16 - v12;
  sub_22EE7F300();
  sub_22EC6D3A0((uint64_t)v13, (uint64_t)v10);
  OUTLINED_FUNCTION_32_5((uint64_t)v10);
  if (v14)
  {
    uint64_t result = sub_22EB0584C((uint64_t)v10, &qword_26861BBA8);
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v6, v10, v0);
    sub_22EB0584C((uint64_t)v13, &qword_26861BBA8);
    swift_getAtKeyPath();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v6, v0);
  }
  return result;
}

uint64_t sub_22EC6B0A8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v171 = a2;
  uint64_t v6 = sub_22EE7F540();
  OUTLINED_FUNCTION_0_0();
  uint64_t v160 = v7;
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_18_15(v9);
  uint64_t v195 = sub_22EE7F2B0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v159 = v10;
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_18_0();
  uint64_t v197 = v12;
  OUTLINED_FUNCTION_6_5();
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_9_5();
  uint64_t v196 = v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C968);
  uint64_t v16 = OUTLINED_FUNCTION_14(v15);
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_18_0();
  uint64_t v185 = v17;
  OUTLINED_FUNCTION_6_5();
  MEMORY[0x270FA5388](v18);
  OUTLINED_FUNCTION_9_5();
  OUTLINED_FUNCTION_18_15(v19);
  uint64_t v163 = type metadata accessor for SKLogger();
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v20);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_1_18();
  MEMORY[0x270FA5388](v21);
  OUTLINED_FUNCTION_12_15();
  OUTLINED_FUNCTION_1_18();
  MEMORY[0x270FA5388](v22);
  OUTLINED_FUNCTION_9_5();
  uint64_t v164 = v23;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BBA8);
  uint64_t v25 = OUTLINED_FUNCTION_14(v24);
  MEMORY[0x270FA5388](v25);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_1_18();
  MEMORY[0x270FA5388](v26);
  OUTLINED_FUNCTION_12_15();
  OUTLINED_FUNCTION_1_18();
  MEMORY[0x270FA5388](v27);
  OUTLINED_FUNCTION_12_15();
  OUTLINED_FUNCTION_1_18();
  MEMORY[0x270FA5388](v28);
  uint64_t v30 = (char *)&v159 - v29;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(qword_26861BAB0);
  uint64_t v32 = OUTLINED_FUNCTION_14(v31);
  MEMORY[0x270FA5388](v32);
  OUTLINED_FUNCTION_11_0();
  uint64_t v35 = v34 - v33;
  uint64_t v193 = (void *)type metadata accessor for Subscription();
  OUTLINED_FUNCTION_0_0();
  uint64_t v187 = v36;
  MEMORY[0x270FA5388](v37);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_1_18();
  MEMORY[0x270FA5388](v38);
  OUTLINED_FUNCTION_12_15();
  uint64_t v184 = v39;
  OUTLINED_FUNCTION_6_5();
  MEMORY[0x270FA5388](v40);
  uint64_t v42 = (char *)&v159 - v41;
  MEMORY[0x270FA5388](v43);
  OUTLINED_FUNCTION_9_5();
  OUTLINED_FUNCTION_18_15(v44);
  uint64_t v45 = (void (**)(uint64_t, uint64_t))sub_22EE7F780();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x270FA5388](v46);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_1_18();
  MEMORY[0x270FA5388](v47);
  OUTLINED_FUNCTION_12_15();
  OUTLINED_FUNCTION_1_18();
  MEMORY[0x270FA5388](v48);
  MEMORY[0x270FA5388](v49);
  OUTLINED_FUNCTION_12_15();
  uint64_t v200 = v50;
  OUTLINED_FUNCTION_6_5();
  MEMORY[0x270FA5388](v51);
  OUTLINED_FUNCTION_9_5();
  uint64_t v194 = v54;
  uint64_t v55 = *(char **)(a1 + 16);
  uint64_t v186 = v6;
  uint64_t v198 = v52;
  uint64_t v199 = a1;
  unint64_t v175 = (void *)MEMORY[0x263F8EE78];
  if (v55)
  {
    uint64_t v170 = v53;
    uint64_t v56 = v52 + 16;
    uint64_t v3 = *(void *)(v52 + 16);
    OUTLINED_FUNCTION_30_5();
    uint64_t v58 = a1 + v57;
    uint64_t v181 = *(void *)(v56 + 56);
    unint64_t v188 = (void (**)(void))(v56 - 8);
    swift_bridgeObjectRetain();
    uint64_t v59 = v58;
    uint64_t v189 = MEMORY[0x263F8EE78];
    int v167 = a3 & 1;
    uint64_t v60 = v55;
    unsigned int v183 = v42;
    uint64_t v192 = v56;
    uint64_t v182 = v3;
    uint64_t v169 = v30;
    uint64_t v168 = v35;
    do
    {
      unint64_t v190 = v60;
      uint64_t v191 = v59;
      uint64_t v61 = v194;
      ((void (*)(uint64_t))v3)(v194);
      ((void (*)(uint64_t, uint64_t, void (**)(uint64_t, uint64_t)))v3)(v200, v61, v45);
      sub_22EE7F300();
      int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v30, 1, v6);
      sub_22EB0584C((uint64_t)v30, &qword_26861BBA8);
      if (EnumTagSinglePayload == 1)
      {
        uint64_t v63 = *v188;
        ((void (*)(uint64_t, void))*v188)(v200, v45);
        __swift_storeEnumTagSinglePayload(v35, 1, 1, (uint64_t)v193);
      }
      else
      {
        uint64_t v64 = v170;
        unsigned __int8 v65 = v193;
        ((void (*)(uint64_t, uint64_t, void (**)(uint64_t, uint64_t)))v3)(v170, v200, v45);
        uint64_t v66 = &v42[*((int *)v65 + 6)];
        *(void *)uint64_t v66 = 0;
        v66[8] = 1;
        uint64_t v67 = v42;
        uint64_t v68 = v173;
        sub_22EE7F300();
        int v69 = __swift_getEnumTagSinglePayload(v68, 1, v6);
        sub_22EB0584C(v68, &qword_26861BBA8);
        if (v69 == 1) {
          goto LABEL_79;
        }
        ((void (*)(char *, uint64_t, void (**)(uint64_t, uint64_t)))v3)(v67, v64, v45);
        uint64_t v70 = sub_22EE7F750();
        unint64_t v178 = sub_22EC6D004(v70, v71);
        char v73 = v72;
        uint64_t v63 = *v188;
        OUTLINED_FUNCTION_38_4();
        v63();
        uint64_t v74 = &v67[*((int *)v65 + 5)];
        *(void *)uint64_t v74 = v178;
        v74[8] = v73;
        uint64_t v6 = v186;
        *(void *)uint64_t v66 = v171;
        v66[8] = v167;
        uint64_t v75 = (uint64_t)v67;
        uint64_t v35 = v168;
        sub_22EC6E1A4(v75, v168);
        OUTLINED_FUNCTION_38_4();
        v63();
        __swift_storeEnumTagSinglePayload(v35, 0, 1, (uint64_t)v65);
        uint64_t v30 = v169;
      }
      ((void (*)(uint64_t, void))v63)(v194, v45);
      if (__swift_getEnumTagSinglePayload(v35, 1, (uint64_t)v193) == 1)
      {
        sub_22EB0584C(v35, qword_26861BAB0);
        uint64_t v42 = v183;
      }
      else
      {
        uint64_t v76 = v172;
        sub_22EC6E1A4(v35, v172);
        sub_22EC6E1A4(v76, v184);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v42 = v183;
        if (isUniquelyReferenced_nonNull_native) {
          uint64_t v78 = v189;
        }
        else {
          uint64_t v78 = sub_22EC6D558(0, *(void *)(v189 + 16) + 1, 1, v189, &qword_26861DA50, (uint64_t (*)(void))type metadata accessor for Subscription, (uint64_t (*)(void))type metadata accessor for Subscription, (void (*)(uint64_t, uint64_t, unint64_t))sub_22EB45360);
        }
        unint64_t v80 = *(void *)(v78 + 16);
        unint64_t v79 = *(void *)(v78 + 24);
        if (v80 >= v79 >> 1) {
          uint64_t v78 = sub_22EC6D558(v79 > 1, v80 + 1, 1, v78, &qword_26861DA50, (uint64_t (*)(void))type metadata accessor for Subscription, (uint64_t (*)(void))type metadata accessor for Subscription, (void (*)(uint64_t, uint64_t, unint64_t))sub_22EB45360);
        }
        *(void *)(v78 + 16) = v80 + 1;
        OUTLINED_FUNCTION_30_5();
        uint64_t v189 = v81;
        sub_22EC6E1A4(v184, v81 + v82 + *(void *)(v83 + 72) * v80);
      }
      uint64_t v3 = v182;
      uint64_t v59 = v191 + v181;
      uint64_t v60 = v190 - 1;
    }
    while (v190 != (char *)1);
    a1 = v199;
    swift_bridgeObjectRelease();
    uint64_t v84 = v189;
  }
  else
  {
    uint64_t v84 = MEMORY[0x263F8EE78];
  }
  BOOL v85 = *(void *)(v84 + 16) == (void)v55;
  uint64_t v189 = v84;
  uint64_t v86 = v165;
  if (v85)
  {
    OUTLINED_FUNCTION_30_6();
    goto LABEL_56;
  }
  uint64_t v87 = qword_26861B778;
  swift_bridgeObjectRetain();
  if (v87 != -1) {
    goto LABEL_81;
  }
  while (1)
  {
    uint64_t v88 = __swift_project_value_buffer(v163, (uint64_t)qword_26864C398);
    sub_22EC6D340(v88, v164, (void (*)(void))type metadata accessor for SKLogger);
    uint64_t v202 = 0;
    unint64_t v203 = 0xE000000000000000;
    sub_22EE801C0();
    OUTLINED_FUNCTION_28_6();
    sub_22EE7FAA0();
    uint64_t v194 = v198 + 16;
    uint64_t v89 = (void (**)(uint64_t, uint64_t))(v159 + 8);
    uint64_t v200 = v198 + 8;
    uint64_t v90 = (char *)(v198 + 32);
    swift_bridgeObjectRetain_n();
    uint64_t v91 = 0;
    uint64_t v92 = 0;
    uint64_t v193 = (void *)(MEMORY[0x263F8EE78] + 32);
    uint64_t v93 = v185;
    unint64_t v190 = v90;
    while (1)
    {
      if (v92 != v55)
      {
        uint64_t v192 = v91;
        uint64_t v95 = v166;
        while (v92 < v55)
        {
          uint64_t v96 = v55;
          uint64_t v97 = v92 + 1;
          OUTLINED_FUNCTION_30_5();
          (*(void (**)(uint64_t, uint64_t, void (**)(uint64_t, uint64_t)))(v99 + 16))(v95, v199 + v98 + *(void *)(v99 + 72) * (void)v92, v45);
          uint64_t v100 = v196;
          sub_22EE7F700();
          uint64_t v101 = v197;
          sub_22EE7F280();
          sub_22EB0D27C();
          uint64_t v102 = v195;
          char v103 = sub_22EE7F900();
          uint64_t v104 = *v89;
          (*v89)(v101, v102);
          v104(v100, v102);
          if ((v103 & 1) == 0)
          {
            uint64_t v90 = v190;
            (*(void (**)(uint64_t, uint64_t, void (**)(uint64_t, uint64_t)))v190)(v176, v95, v45);
            uint64_t v94 = 0;
            uint64_t v92 = v97;
            uint64_t v93 = v185;
            uint64_t v55 = v96;
            goto LABEL_31;
          }
          OUTLINED_FUNCTION_5_2();
          v105();
          uint64_t v92 = v97;
          uint64_t v55 = v96;
          if (v96 == v97)
          {
            uint64_t v94 = 1;
            uint64_t v92 = v96;
            uint64_t v93 = v185;
            uint64_t v90 = v190;
LABEL_31:
            uint64_t v91 = v192;
            goto LABEL_32;
          }
        }
        __break(1u);
        goto LABEL_77;
      }
      uint64_t v94 = 1;
      uint64_t v92 = v55;
LABEL_32:
      uint64_t v106 = v176;
      __swift_storeEnumTagSinglePayload(v176, v94, 1, (uint64_t)v45);
      sub_22EC6D2D8(v106, v93);
      if (__swift_getEnumTagSinglePayload(v93, 1, (uint64_t)v45) == 1) {
        break;
      }
      (*(void (**)(uint64_t, uint64_t, void (**)(uint64_t, uint64_t)))v90)(v174, v93, v45);
      uint64_t v107 = _s17_StoreKit_SwiftUI012SubscriptionA25ControlStyleConfigurationV12PickerOptionV2idSSvg_0();
      uint64_t v109 = v108;
      OUTLINED_FUNCTION_5_2();
      v110();
      if (!v91)
      {
        uint64_t v111 = v175;
        unint64_t v112 = v175[3];
        if ((uint64_t)((v112 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_80;
        }
        uint64_t v191 = v109;
        uint64_t v192 = v107;
        int64_t v113 = v112 & 0xFFFFFFFFFFFFFFFELL;
        if (v113 <= 1) {
          uint64_t v114 = 1;
        }
        else {
          uint64_t v114 = v113;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_26861DA48);
        uint64_t v115 = (void *)OUTLINED_FUNCTION_36_7();
        uint64_t v116 = (uint64_t)(_swift_stdlib_malloc_size_1(v115) - 32) / 16;
        v115[2] = v114;
        v115[3] = 2 * v116;
        unint64_t v117 = (unint64_t)(v115 + 4);
        unint64_t v118 = v111[3];
        unint64_t v119 = v118 >> 1;
        if (v111[2])
        {
          uint64_t v120 = v111 + 4;
          if (v115 != v111 || v117 >= (unint64_t)&v111[2 * v119 + 4])
          {
            unint64_t v122 = v111[3];
            memmove(v115 + 4, v120, 16 * v119);
            unint64_t v118 = v122;
          }
          v175[2] = 0;
        }
        uint64_t v193 = (void *)(v117 + 16 * v119);
        uint64_t v91 = (v116 & 0x7FFFFFFFFFFFFFFFLL) - (v118 >> 1);
        swift_release();
        unint64_t v175 = v115;
        uint64_t v109 = v191;
        uint64_t v107 = v192;
      }
      BOOL v123 = __OFSUB__(v91--, 1);
      uint64_t v93 = v185;
      if (v123) {
        goto LABEL_78;
      }
      unint64_t v124 = v193;
      *uint64_t v193 = v107;
      v124[1] = v109;
      uint64_t v193 = v124 + 2;
    }
    swift_bridgeObjectRelease();
    uint64_t v3 = (uint64_t)v175;
    unint64_t v125 = v175[3];
    if (v125 < 2) {
      goto LABEL_52;
    }
    unint64_t v126 = v125 >> 1;
    BOOL v123 = __OFSUB__(v126, v91);
    unint64_t v127 = v126 - v91;
    if (v123) {
      break;
    }
    v175[2] = v127;
LABEL_52:
    swift_bridgeObjectRelease();
    MEMORY[0x230FACFB0](v3, MEMORY[0x263F8D310]);
    sub_22EE7FAA0();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v129 = v202;
    unint64_t v128 = v203;
    uint64_t v3 = sub_22EE7FFC0();
    swift_bridgeObjectRetain_n();
    unint64_t v130 = sub_22EE7C550();
    a1 = v3;
    if (os_log_type_enabled(v130, (os_log_type_t)v3))
    {
      uint64_t v3 = swift_slowAlloc();
      uint64_t v202 = swift_slowAlloc();
      *(_DWORD *)uint64_t v3 = 136446466;
      uint64_t v201 = OUTLINED_FUNCTION_20_12();
      sub_22EE800B0();
      *(_WORD *)(v3 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v201 = sub_22EC1FA24(v129, v128, &v202);
      sub_22EE800B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_22EAC6000, v130, (os_log_type_t)a1, "%{public}s%{public}s", (uint8_t *)v3, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_4_5();
      OUTLINED_FUNCTION_4_5();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v84 = v189;
    OUTLINED_FUNCTION_30_6();
    sub_22EC10DE8(v164, (void (*)(void))type metadata accessor for SKLogger);
    swift_bridgeObjectRelease();
    uint64_t v55 = *(char **)(v84 + 16);
    uint64_t v86 = v165;
LABEL_56:
    uint64_t v131 = MEMORY[0x263F8EE88];
    uint64_t v201 = MEMORY[0x263F8EE88];
    if (!v55)
    {
LABEL_62:
      unint64_t v144 = *(void *)(v131 + 16);
      if (v144 >= 2)
      {
        if (qword_26861B778 != -1) {
          swift_once();
        }
        uint64_t v145 = __swift_project_value_buffer(v163, (uint64_t)qword_26864C398);
        sub_22EC6D340(v145, v162, (void (*)(void))type metadata accessor for SKLogger);
        uint64_t v202 = 0;
        unint64_t v203 = 0xE000000000000000;
        sub_22EE801C0();
        OUTLINED_FUNCTION_28_6();
        sub_22EE7FAA0();
        uint64_t v146 = swift_bridgeObjectRetain();
        unsigned int v147 = sub_22EC6E10C(v146);
        swift_bridgeObjectRelease();
        MEMORY[0x230FACFB0](v147, MEMORY[0x263F8D310]);
        sub_22EE7FAA0();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v149 = v202;
        unint64_t v148 = v203;
        os_log_type_t v150 = sub_22EE7FFC0();
        swift_bridgeObjectRetain_n();
        unint64_t v151 = sub_22EE7C550();
        os_log_type_t v152 = v150;
        if (os_log_type_enabled(v151, v150))
        {
          uint64_t v153 = swift_slowAlloc();
          uint64_t v202 = swift_slowAlloc();
          *(_DWORD *)uint64_t v153 = 136446466;
          uint64_t v201 = OUTLINED_FUNCTION_20_12();
          sub_22EE800B0();
          *(_WORD *)(v153 + 12) = 2082;
          swift_bridgeObjectRetain();
          uint64_t v201 = sub_22EC1FA24(v149, v148, &v202);
          sub_22EE800B0();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_22EAC6000, v151, v152, "%{public}s%{public}s", (uint8_t *)v153, 0x16u);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_4_5();
          OUTLINED_FUNCTION_4_5();
          swift_bridgeObjectRelease();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        uint64_t v84 = v189;
        sub_22EC10DE8(v162, (void (*)(void))type metadata accessor for SKLogger);
        unint64_t v144 = *(void *)(v131 + 16);
      }
      swift_bridgeObjectRelease();
      if (!v144)
      {
        if (qword_26861B778 != -1) {
          swift_once();
        }
        uint64_t v154 = __swift_project_value_buffer(v163, (uint64_t)qword_26864C398);
        sub_22EC6D340(v154, v161, (void (*)(void))type metadata accessor for SKLogger);
        os_log_type_t v155 = sub_22EE7FFC0();
        unsigned int v156 = sub_22EE7C550();
        if (os_log_type_enabled(v156, v155))
        {
          uint64_t v157 = swift_slowAlloc();
          uint64_t v202 = swift_slowAlloc();
          *(_DWORD *)uint64_t v157 = 136446466;
          uint64_t v201 = OUTLINED_FUNCTION_20_12();
          sub_22EE800B0();
          *(_WORD *)(v157 + 12) = 2082;
          uint64_t v201 = sub_22EC1FA24(0xD00000000000004BLL, 0x800000022EE839B0, &v202);
          uint64_t v84 = v189;
          sub_22EE800B0();
          _os_log_impl(&dword_22EAC6000, v156, v155, "%{public}s%{public}s", (uint8_t *)v157, 0x16u);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_4_5();
          OUTLINED_FUNCTION_4_5();
        }

        sub_22EC10DE8(v161, (void (*)(void))type metadata accessor for SKLogger);
      }
      return v84;
    }
    OUTLINED_FUNCTION_30_5();
    uint64_t v200 = v84 + v132;
    uint64_t v133 = (void (**)(uint64_t, uint64_t, uint64_t))(v160 + 32);
    uint64_t v45 = (void (**)(uint64_t, uint64_t))(v160 + 8);
    swift_bridgeObjectRetain();
    uint64_t v134 = 0;
    uint64_t v135 = v186;
    while (1)
    {
      char v136 = (char *)(v134 + 1);
      if (__OFADD__(v134, 1)) {
        break;
      }
      sub_22EC6D340(v200 + *(void *)(v187 + 72) * v134, v86, (void (*)(void))type metadata accessor for Subscription);
      uint64_t v137 = v86;
      sub_22EE7F300();
      sub_22EC6D3A0(a1, v3);
      if (__swift_getEnumTagSinglePayload(v3, 1, v135) == 1) {
        goto LABEL_83;
      }
      uint64_t v138 = v177;
      (*v133)(v177, v3, v135);
      sub_22EB0584C(a1, &qword_26861BBA8);
      uint64_t v139 = sub_22EE7F490();
      uint64_t v141 = v140;
      (*v45)(v138, v135);
      uint64_t v142 = v139;
      uint64_t v3 = v180;
      uint64_t v143 = v141;
      a1 = v179;
      sub_22EB466D4(&v202, v142, v143);
      swift_bridgeObjectRelease();
      sub_22EC10DE8(v137, (void (*)(void))type metadata accessor for Subscription);
      ++v134;
      uint64_t v86 = v137;
      if (v136 == v55)
      {
        uint64_t v84 = v189;
        swift_bridgeObjectRelease();
        uint64_t v131 = v201;
        goto LABEL_62;
      }
    }
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    swift_once();
  }
  __break(1u);
LABEL_83:
  uint64_t result = sub_22EB0584C(v3, &qword_26861BBA8);
  __break(1u);
  return result;
}

uint64_t sub_22EC6C404@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v10 = *a4;
  char v11 = *((unsigned char *)a4 + 8);
  uint64_t v12 = a4[2];
  char v13 = *((unsigned char *)a4 + 24);
  *(void *)a7 = a1;
  *(void *)(a7 + 8) = a2;
  *(unsigned char *)(a7 + 16) = a3 & 1;
  *(void *)(a7 + 24) = v10;
  *(unsigned char *)(a7 + 32) = v11;
  *(void *)(a7 + 40) = v12;
  *(unsigned char *)(a7 + 48) = v13;
  uint64_t v14 = (int *)type metadata accessor for SubscriptionStoreDynamicView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(a7 + v14[10], a5, a6);
  uint64_t v15 = a7 + v14[11];
  sub_22EC6C500();
  *(void *)uint64_t v15 = v19;
  *(unsigned char *)(v15 + 8) = v20;
  *(void *)(v15 + 16) = v21;
  uint64_t v16 = (uint64_t *)(a7 + v14[12]);
  uint64_t result = sub_22EC6C554();
  *uint64_t v16 = result;
  v16[1] = v18;
  return result;
}

uint64_t sub_22EC6C500()
{
  return sub_22EE7E9D0();
}

uint64_t sub_22EC6C554()
{
  sub_22EE7E9D0();
  return v1;
}

uint64_t sub_22EC6C58C()
{
  if (*((unsigned char *)v0 + 16) != 1) {
    return 0;
  }
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_22EC6C5D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v73 = a2;
  sub_22EE7FD90();
  OUTLINED_FUNCTION_0_0();
  uint64_t v71 = v5;
  uint64_t v72 = v4;
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_3_2();
  uint64_t v70 = v6;
  OUTLINED_FUNCTION_0_0();
  uint64_t v63 = v7;
  uint64_t v67 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v65 = (uint64_t)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_22EE7F010();
  OUTLINED_FUNCTION_0_0();
  uint64_t v74 = v11;
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_3_2();
  uint64_t v62 = v13;
  uint64_t v14 = *(void *)(a1 + 16);
  OUTLINED_FUNCTION_0_0();
  uint64_t v16 = v15;
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_11_0();
  uint64_t v20 = v19 - v18;
  uint64_t v21 = *(void *)(a1 + 24);
  uint64_t v61 = type metadata accessor for SubscriptionStoreEntitlementLoadingView();
  OUTLINED_FUNCTION_0_0();
  uint64_t v68 = v22;
  MEMORY[0x270FA5388](v23);
  uint64_t v59 = (uint64_t)&v56 - v24;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861FC68);
  uint64_t v25 = sub_22EE7CEE0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v69 = v26;
  MEMORY[0x270FA5388](v27);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_1_18();
  MEMORY[0x270FA5388](v28);
  OUTLINED_FUNCTION_9_5();
  uint64_t v66 = v29;
  uint64_t v30 = (uint64_t *)(v2 + *(int *)(a1 + 44));
  uint64_t v31 = *v30;
  char v32 = *((unsigned char *)v30 + 8);
  uint64_t v33 = v30[2];
  uint64_t v77 = v31;
  char v78 = v32;
  uint64_t v79 = v33;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2686220E0);
  sub_22EE7E9E0();
  uint64_t v81 = v83;
  char v82 = v84;
  sub_22EC6C58C();
  char v34 = *(unsigned char *)(v2 + 32);
  uint64_t v35 = *(void *)(v2 + 40);
  char v36 = *(unsigned char *)(v2 + 48);
  uint64_t v77 = *(void *)(v2 + 24);
  char v78 = v34;
  uint64_t v79 = v35;
  char v80 = v36;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v20, v2 + *(int *)(a1 + 40), v14);
  uint64_t v37 = v21;
  sub_22EB59CBC();
  uint64_t v58 = *(void *)v2;
  uint64_t v57 = *(void *)(v2 + 8);
  HIDWORD(v56) = *(unsigned __int8 *)(v2 + 16);
  uint64_t v38 = v62;
  (*(void (**)(uint64_t, void, uint64_t))(v74 + 104))(v62, *MEMORY[0x263F17D18], v64);
  uint64_t v39 = v63;
  uint64_t v40 = v65;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 16))(v65, v2, a1);
  unint64_t v41 = (*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  uint64_t v42 = swift_allocObject();
  *(void *)(v42 + 16) = v14;
  *(void *)(v42 + 24) = v37;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v39 + 32))(v42 + v41, v40, a1);
  uint64_t v43 = v61;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v45 = v70;
  sub_22EE7FD70();
  uint64_t v46 = v60;
  sub_22EBCF1C0(v58, v57, HIDWORD(v56), v38, v45, (uint64_t)&unk_2686220F0, v42, v43, WitnessTable, v55, v56, v57, v58, v59, v60, v61, v62, v63, v64,
    v65,
    v66);
  swift_release();
  OUTLINED_FUNCTION_5_2();
  v47();
  OUTLINED_FUNCTION_5_2();
  v48();
  OUTLINED_FUNCTION_5_2();
  v49();
  unint64_t v50 = sub_22EC6CFB0();
  uint64_t v75 = WitnessTable;
  unint64_t v76 = v50;
  uint64_t v51 = swift_getWitnessTable();
  uint64_t v52 = v66;
  sub_22EB69440(v46, v25, v51);
  uint64_t v53 = *(void (**)(void))(v69 + 8);
  OUTLINED_FUNCTION_38_4();
  v53();
  sub_22EB69440(v52, v25, v51);
  OUTLINED_FUNCTION_38_4();
  return ((uint64_t (*)(void))v53)();
}

uint64_t sub_22EC6CB2C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 64) = a2;
  *(void *)(v4 + 72) = a3;
  uint64_t v5 = *a1;
  *(void *)(v4 + 80) = a4;
  *(void *)(v4 + 88) = v5;
  *(unsigned char *)(v4 + 49) = *((unsigned char *)a1 + 16);
  sub_22EE7FD30();
  *(void *)(v4 + 96) = sub_22EE7FD20();
  uint64_t v7 = sub_22EE7FD00();
  return MEMORY[0x270FA2498](sub_22EC6CBD4, v7, v6);
}

uint64_t sub_22EC6CBD4()
{
  int v1 = *(unsigned __int8 *)(v0 + 49);
  swift_release();
  if (v1)
  {
    if (v1 == 1)
    {
      uint64_t v2 = *(void *)(v0 + 88);
      uint64_t v3 = *(void *)(v0 + 64);
      uint64_t v4 = type metadata accessor for SubscriptionStoreDynamicView();
      *(_OWORD *)(v0 + 16) = *(_OWORD *)(v3 + *(int *)(v4 + 48));
      __swift_instantiateConcreteTypeFromMangledName(&qword_2686215B0);
      sub_22EE7E9E0();
      sub_22EC6B0A8(v2, *(void *)(v0 + 40), 0);
      OUTLINED_FUNCTION_5_19(v3 + *(int *)(v4 + 44));
      *(void *)(v0 + 32) = v6;
      *(void *)(v0 + 40) = v5;
      char v7 = 1;
    }
    else
    {
      uint64_t v13 = *(void *)(v0 + 64);
      uint64_t v14 = type metadata accessor for SubscriptionStoreDynamicView();
      OUTLINED_FUNCTION_5_19(v13 + *(int *)(v14 + 44));
      *(void *)(v0 + 32) = v15;
      *(void *)(v0 + 40) = 0;
      char v7 = 2;
    }
    *(unsigned char *)(v0 + 48) = v7;
  }
  else
  {
    uint64_t v8 = *(void **)(v0 + 88);
    uint64_t v9 = *(void *)(v0 + 64);
    uint64_t v10 = type metadata accessor for SubscriptionStoreDynamicView();
    OUTLINED_FUNCTION_5_19(v9 + *(int *)(v10 + 44));
    *(void *)(v0 + 32) = v11;
    *(void *)(v0 + 40) = v8;
    *(unsigned char *)(v0 + 48) = 0;
    id v12 = v8;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2686220E0);
  sub_22EE7E9F0();
  uint64_t v16 = *(void *)(v0 + 64);
  uint64_t v17 = (uint64_t *)(v16 + *(int *)(type metadata accessor for SubscriptionStoreDynamicView() + 48));
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  *(void *)(v0 + 16) = *v17;
  *(void *)(v0 + 24) = v18;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2686215B0);
  uint64_t result = sub_22EE7E9E0();
  uint64_t v21 = *(void *)(v0 + 56);
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v0 + 16) = v19;
    *(void *)(v0 + 24) = v18;
    *(void *)(v0 + 40) = v23;
    sub_22EE7E9F0();
    swift_release();
    uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
    return v24();
  }
  return result;
}

uint64_t sub_22EC6CD9C()
{
  int v1 = (int *)(type metadata accessor for SubscriptionStoreDynamicView() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  sub_22EC6CEB8();
  OUTLINED_FUNCTION_5_2();
  v3();
  sub_22EB66200(*(id *)(v2 + v1[13]), *(unsigned char *)(v2 + v1[13] + 8));
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_22EC6CEB8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_22EC6CEC4(uint64_t *a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  type metadata accessor for SubscriptionStoreDynamicView();
  OUTLINED_FUNCTION_30_5();
  uint64_t v7 = v1 + v6;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_22EB10CC0;
  return sub_22EC6CB2C(a1, v7, v4, v5);
}

unint64_t sub_22EC6CFB0()
{
  unint64_t result = qword_268621E88;
  if (!qword_268621E88)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861FC68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268621E88);
  }
  return result;
}

unint64_t sub_22EC6D004(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        uint64_t v7 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
        uint64_t v8 = v4;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)sub_22EE80250();
      }
      uint64_t v9 = sub_22EC6EB80(v7, v8, 10);
      if ((v10 & 1) == 0) {
        goto LABEL_10;
      }
      if ((a1 & 0x1000000000000000) != 0)
      {
        uint64_t v19 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else
      {
        uint64_t v19 = (unsigned __int8 *)sub_22EE80250();
        uint64_t v4 = v31;
      }
      uint64_t v3 = v4;
      goto LABEL_44;
    }
    uint64_t v12 = a2 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v32 = a1;
    uint64_t v33 = a2 & 0xFFFFFFFFFFFFFFLL;
    if (a1 == 43)
    {
      if (!v3) {
        goto LABEL_63;
      }
      if (v3 == 1) {
        goto LABEL_43;
      }
      OUTLINED_FUNCTION_37_6();
      if (!v15 && v14) {
        goto LABEL_43;
      }
      unint64_t v11 = v20;
      if (v3 == 2) {
        goto LABEL_54;
      }
      while (1)
      {
        OUTLINED_FUNCTION_27_7();
        if (!v15 && v14) {
          break;
        }
        if (!is_mul_ok(v11, v22)) {
          break;
        }
        BOOL v14 = __CFADD__(10 * v11, v21);
        unint64_t v11 = 10 * v11 + v21;
        if (v14) {
          break;
        }
        OUTLINED_FUNCTION_26_5();
        if (v15) {
          goto LABEL_53;
        }
      }
    }
    else
    {
      if (a1 == 45)
      {
        if (v3)
        {
          if (v3 != 1)
          {
            OUTLINED_FUNCTION_37_6();
            if (v15 || !v14)
            {
              unint64_t v11 = -(uint64_t)v13;
              if (!v13)
              {
                if (v3 == 2) {
                  goto LABEL_54;
                }
                while (1)
                {
                  OUTLINED_FUNCTION_27_7();
                  if (!v15 && v14) {
                    goto LABEL_52;
                  }
                  if (!is_mul_ok(v11, v17)) {
                    goto LABEL_52;
                  }
                  BOOL v14 = 10 * v11 >= v16;
                  unint64_t v11 = 10 * v11 - v16;
                  if (!v14) {
                    goto LABEL_52;
                  }
                  OUTLINED_FUNCTION_26_5();
                  if (v15) {
                    goto LABEL_53;
                  }
                }
              }
            }
          }
LABEL_43:
          uint64_t v32 = a1;
          uint64_t v33 = v12;
          uint64_t v19 = (unsigned __int8 *)&v32;
LABEL_44:
          unint64_t v11 = (unint64_t)sub_22EC6EB80(v19, v3, 16);
          char v34 = v23 & 1;
          char v24 = v23 & 1;
          swift_bridgeObjectRelease();
          if ((v24 & 1) == 0) {
            return v11;
          }
          return 0;
        }
        __break(1u);
LABEL_63:
        __break(1u);
        goto LABEL_43;
      }
      if (!v3 || (a1 - 48) > 9u) {
        goto LABEL_43;
      }
      unint64_t v11 = (a1 - 48);
      if (v3 == 1) {
        goto LABEL_54;
      }
      while (1)
      {
        OUTLINED_FUNCTION_27_7();
        if (!v15 && v14) {
          break;
        }
        if (!is_mul_ok(v11, v26)) {
          break;
        }
        BOOL v14 = __CFADD__(10 * v11, v25);
        unint64_t v11 = 10 * v11 + v25;
        if (v14) {
          break;
        }
        OUTLINED_FUNCTION_26_5();
        if (v15) {
          goto LABEL_53;
        }
      }
    }
LABEL_52:
    unint64_t v11 = 0;
    char v18 = 1;
LABEL_53:
    if ((v18 & 1) == 0) {
      goto LABEL_54;
    }
    goto LABEL_43;
  }
  uint64_t v9 = sub_22EC6EA98(a1, a2, 10);
  if (v27)
  {
    swift_bridgeObjectRetain();
    unint64_t v11 = (unint64_t)sub_22EC6EA98(a1, a2, 16);
    char v29 = v28;
    swift_bridgeObjectRelease_n();
    if ((v29 & 1) == 0) {
      return v11;
    }
    return 0;
  }
LABEL_10:
  unint64_t v11 = (unint64_t)v9;
LABEL_54:
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_22EC6D2D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C968);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22EC6D340(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_2_0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_22EC6D3A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BBA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_22EC6D408(char a1, uint64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    OUTLINED_FUNCTION_10_7();
    if (v7 != v8)
    {
      OUTLINED_FUNCTION_19_4();
      if (v7)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_9_10();
    }
  }
  else
  {
    uint64_t v6 = a2;
  }
  uint64_t v9 = *(void *)(a4 + 16);
  if (v6 <= v9) {
    uint64_t v10 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v10 = v6;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26861DA48);
    unint64_t v11 = (char *)OUTLINED_FUNCTION_36_7();
    _swift_stdlib_malloc_size_1(v11);
    OUTLINED_FUNCTION_34_1();
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = v12;
  }
  else
  {
    unint64_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  unsigned __int8 v13 = v11 + 32;
  if (a1)
  {
    sub_22EB451B0((char *)(a4 + 32), v9, v13);
    OUTLINED_FUNCTION_29_8();
  }
  else
  {
    sub_22EC6DA94(0, v9, (unint64_t)v13, a4);
  }
}

uint64_t sub_22EC6D4C8(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_22EC6D558(a1, a2, a3, a4, &qword_26861DAA0, MEMORY[0x263F17F80], MEMORY[0x263F17F80], (void (*)(uint64_t, uint64_t, unint64_t))sub_22EB4520C);
}

uint64_t sub_22EC6D510(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_22EC6D558(a1, a2, a3, a4, &qword_26861D9C8, type metadata accessor for SubscriptionStoreContentConfiguration.Section, type metadata accessor for SubscriptionStoreContentConfiguration.Section, (void (*)(uint64_t, uint64_t, unint64_t))sub_22EB45330);
}

uint64_t sub_22EC6D558(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void), void (*a8)(uint64_t, uint64_t, unint64_t))
{
  if (a3)
  {
    OUTLINED_FUNCTION_10_7();
    if (v14 != v15)
    {
      OUTLINED_FUNCTION_19_4();
      if (v14)
      {
        __break(1u);
        goto LABEL_23;
      }
      OUTLINED_FUNCTION_9_10();
    }
  }
  else
  {
    uint64_t v13 = a2;
  }
  uint64_t v16 = *(void *)(a4 + 16);
  if (v13 <= v16) {
    uint64_t v17 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v17 = v13;
  }
  if (!v17)
  {
    unsigned __int8 v21 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_18;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v18 = *(void *)(a6(0) - 8);
  uint64_t v19 = *(void *)(v18 + 72);
  unint64_t v20 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  unsigned __int8 v21 = (void *)swift_allocObject();
  size_t v22 = _swift_stdlib_malloc_size_1(v21);
  if (!v19 || (v22 - v20 == 0x8000000000000000 ? (BOOL v23 = v19 == -1) : (BOOL v23 = 0), v23))
  {
LABEL_23:
    OUTLINED_FUNCTION_1_11();
    OUTLINED_FUNCTION_39_5();
    uint64_t result = sub_22EE803A0();
    __break(1u);
    return result;
  }
  v21[2] = v16;
  void v21[3] = 2 * ((uint64_t)(v22 - v20) / v19);
LABEL_18:
  a6(0);
  OUTLINED_FUNCTION_30_5();
  unint64_t v25 = (unint64_t)v21 + v24;
  if (a1)
  {
    a8(a4 + v24, v16, v25);
    OUTLINED_FUNCTION_29_8();
  }
  else
  {
    sub_22EC6DE68(0, v16, v25, a4, a7);
  }
  return (uint64_t)v21;
}

uint64_t sub_22EC6D764(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_22EC6D558(a1, a2, a3, a4, &qword_2686220F8, type metadata accessor for SubscriptionStoreContentConfiguration, type metadata accessor for SubscriptionStoreContentConfiguration, (void (*)(uint64_t, uint64_t, unint64_t))sub_22EB45348);
}

void sub_22EC6D7AC(char a1, int64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    OUTLINED_FUNCTION_10_7();
    if (v7 != v8)
    {
      OUTLINED_FUNCTION_19_4();
      if (v7)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_9_10();
    }
  }
  else
  {
    int64_t v6 = a2;
  }
  int64_t v9 = *(void *)(a4 + 16);
  if (v6 <= v9) {
    int64_t v10 = *(void *)(a4 + 16);
  }
  else {
    int64_t v10 = v6;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26861DA58);
    unint64_t v11 = (char *)swift_allocObject();
    size_t v12 = _swift_stdlib_malloc_size_1(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    unint64_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v11 + 32;
  if (a1)
  {
    sub_22EB452C0((char *)(a4 + 32), v9, v13);
    OUTLINED_FUNCTION_29_8();
  }
  else
  {
    sub_22EC6DB8C(0, v9, v13, a4);
  }
}

void sub_22EC6D874(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

uint64_t sub_22EC6D8A8(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_22EC6D558(a1, a2, a3, a4, &qword_268622110, MEMORY[0x263F1B838], MEMORY[0x263F1B838], (void (*)(uint64_t, uint64_t, unint64_t))sub_22EB453D4);
}

uint64_t sub_22EC6D8F0(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_22EC6D558(a1, a2, a3, a4, &qword_26861DA68, MEMORY[0x263F17F28], MEMORY[0x263F17F28], (void (*)(uint64_t, uint64_t, unint64_t))sub_22EB453EC);
}

void sub_22EC6D938(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_22EC6D96C(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, void (*a6)(void, uint64_t, void *, uint64_t), void (*a7)(uint64_t, uint64_t, void *))
{
  if (a3)
  {
    OUTLINED_FUNCTION_10_7();
    if (v12 != v13)
    {
      OUTLINED_FUNCTION_19_4();
      if (v12)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_9_10();
    }
  }
  else
  {
    uint64_t v11 = a2;
  }
  uint64_t v14 = *(void *)(a4 + 16);
  if (v11 <= v14) {
    uint64_t v15 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v15 = v11;
  }
  if (v15)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v16 = (void *)OUTLINED_FUNCTION_36_7();
    size_t v17 = _swift_stdlib_malloc_size_1(v16);
    v16[2] = v14;
    v16[3] = 2 * ((uint64_t)(v17 - 32) / 32);
  }
  else
  {
    uint64_t v16 = (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v18 = v16 + 4;
  if (a1)
  {
    a7(a4 + 32, v14, v18);
    OUTLINED_FUNCTION_29_8();
  }
  else
  {
    a6(0, v14, v18, a4);
  }
}

uint64_t sub_22EC6DA4C(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_22EC6D558(a1, a2, a3, a4, &qword_268622100, type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair, type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair, (void (*)(uint64_t, uint64_t, unint64_t))sub_22EB4557C);
}

uint64_t sub_22EC6DA94(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_22EE80420();
  __break(1u);
  return result;
}

char *sub_22EC6DB8C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)sub_22EE80420();
  __break(1u);
  return result;
}

char *sub_22EC6DC7C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 32 * a1 + 32);
    unint64_t v6 = &__dst[32 * v4];
    if (v5 >= v6 || &v5[32 * v4] <= __dst)
    {
      memcpy(__dst, v5, 32 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)sub_22EE80420();
  __break(1u);
  return result;
}

uint64_t sub_22EC6DD70(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_22EE80420();
  __break(1u);
  return result;
}

uint64_t sub_22EC6DE68(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v13;
    }
  }
  OUTLINED_FUNCTION_1_11();
  OUTLINED_FUNCTION_39_5();
  uint64_t result = sub_22EE80420();
  __break(1u);
  return result;
}

void *sub_22EC6DFAC(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_268620DE8);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size_1(v4);
  _OWORD v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_22EC6E014(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v6 = sub_22EE7FB10();
    OUTLINED_FUNCTION_22_10(v6);
    return v7 | 4;
  }
  else
  {
    uint64_t v3 = MEMORY[0x230FACE20](15, a1 >> 16);
    OUTLINED_FUNCTION_22_10(v3);
    return v4 | 8;
  }
}

const void *sub_22EC6E070(uint64_t a1)
{
  if (!*(void *)(a1 + 16)) {
    return (const void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861DA58);
  uint64_t v1 = (const void *)swift_allocObject();
  size_t v2 = _swift_stdlib_malloc_size_1(v1);
  OUTLINED_FUNCTION_23_7(2 * v2 - 64);
  sub_22EC6E208(v3, v4, v5, v6);
  OUTLINED_FUNCTION_19_11();
  OUTLINED_FUNCTION_33_3();
  if (!v7)
  {
    __break(1u);
    return (const void *)MEMORY[0x263F8EE78];
  }
  return v1;
}

const void *sub_22EC6E10C(uint64_t a1)
{
  if (!*(void *)(a1 + 16)) {
    return (const void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861DA48);
  uint64_t v1 = (const void *)OUTLINED_FUNCTION_36_7();
  _swift_stdlib_malloc_size_1(v1);
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_23_7(v2);
  sub_22EC6E39C(v3, v4, v5, v6);
  OUTLINED_FUNCTION_19_11();
  OUTLINED_FUNCTION_33_3();
  if (!v7)
  {
    __break(1u);
    return (const void *)MEMORY[0x263F8EE78];
  }
  return v1;
}

uint64_t sub_22EC6E1A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Subscription();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_22EC6E208(void *result, unsigned char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 56;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_36:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_36;
  }
  if (a3 < 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_19:
    ++v9;
    *a2++ = *(unsigned char *)(*(void *)(a4 + 48) + v12);
    if (v9 == a3) {
      goto LABEL_36;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v13 >= v10) {
    goto LABEL_31;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_18;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_14:
    int64_t v13 = v8;
LABEL_18:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_19;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_31;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_17:
    int64_t v13 = v15;
    goto LABEL_18;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_14;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_31:
    unint64_t v7 = 0;
LABEL_35:
    a3 = v9;
    goto LABEL_36;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_35;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_22EC6E39C(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    _OWORD v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  unint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    unint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *unint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_22EC6E59C()
{
  unint64_t v0 = sub_22EC6E608();
  uint64_t v4 = sub_22EC6E63C(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_22EC6E608()
{
  return sub_22EE7FB70();
}

uint64_t sub_22EC6E63C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_22EC6E794(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      unint64_t v11 = sub_22EC6DFAC(v9, 0);
      unint64_t v12 = sub_22EC6E894((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_22EE80250();
LABEL_4:
        JUMPOUT(0x230FACD90);
      }
    }
    else
    {
      unint64_t v11 = (void *)MEMORY[0x263F8EE78];
    }
    uint64_t v13 = MEMORY[0x230FACD90](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x230FACD90]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

uint64_t sub_22EC6E794(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_22EC6E014(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_22EC6E014(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return MEMORY[0x270F9D808](a1, a2, a3, a4);
  }
  __break(1u);
  return MEMORY[0x270F9D808](a1, a2, a3, a4);
}

unint64_t sub_22EC6E894(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_35;
  }
  if (a3 < 0) {
    goto LABEL_38;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_35:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    uint64_t result = v12;
    if ((v12 & 0xC) == v15) {
      uint64_t result = sub_22EC6E014(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_22EE7FB00();
      char v19 = result;
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_22EE80250();
        }
        char v19 = *(unsigned char *)(result + v18);
      }
    }
    if ((v12 & 0xC) == v15)
    {
      uint64_t result = sub_22EC6E014(v12, a6, a7);
      unint64_t v12 = result;
      if ((a7 & 0x1000000000000000) == 0)
      {
LABEL_27:
        unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_31;
      }
    }
    else if ((a7 & 0x1000000000000000) == 0)
    {
      goto LABEL_27;
    }
    if (v23 <= v12 >> 16) {
      goto LABEL_37;
    }
    unint64_t v12 = sub_22EE7FAD0();
LABEL_31:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_35;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_35;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

unsigned __int8 *sub_22EC6EA98(uint64_t a1, uint64_t a2, int64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_22EE7FB60();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_22EC6E59C();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    unint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v7 = (unsigned __int8 *)sub_22EE80250();
  }
LABEL_7:
  uint64_t v11 = sub_22EC6EB80(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_22EC6EB80(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v17 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v18 = a3 + 48;
        unsigned __int8 v19 = a3 + 55;
        unsigned __int8 v20 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v18 = 58;
        }
        else
        {
          unsigned __int8 v20 = 97;
          unsigned __int8 v19 = 65;
        }
        if (result)
        {
          unint64_t v9 = 0;
          uint64_t v21 = result + 1;
          do
          {
            unsigned int v22 = *v21;
            if (v22 < 0x30 || v22 >= v18)
            {
              if (v22 < 0x41 || v22 >= v19)
              {
                uint64_t v13 = 0;
                if (v22 < 0x61 || v22 >= v20) {
                  return (unsigned __int8 *)v13;
                }
                char v23 = -87;
              }
              else
              {
                char v23 = -55;
              }
            }
            else
            {
              char v23 = -48;
            }
            if (!is_mul_ok(v9, a3)) {
              return 0;
            }
            unint64_t v24 = v9 * a3;
            unsigned __int8 v25 = v22 + v23;
            BOOL v16 = __CFADD__(v24, v25);
            unint64_t v9 = v24 + v25;
            if (v16) {
              return 0;
            }
            ++v21;
            --v17;
          }
          while (v17);
          return (unsigned __int8 *)v9;
        }
        return 0;
      }
      return 0;
    }
  }
  else
  {
    if (v4 != 45)
    {
      if (a2)
      {
        unsigned __int8 v26 = a3 + 48;
        unsigned __int8 v27 = a3 + 55;
        unsigned __int8 v28 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v26 = 58;
        }
        else
        {
          unsigned __int8 v28 = 97;
          unsigned __int8 v27 = 65;
        }
        if (result)
        {
          unint64_t v29 = 0;
          do
          {
            unsigned int v30 = *result;
            if (v30 < 0x30 || v30 >= v26)
            {
              if (v30 < 0x41 || v30 >= v27)
              {
                uint64_t v13 = 0;
                if (v30 < 0x61 || v30 >= v28) {
                  return (unsigned __int8 *)v13;
                }
                char v31 = -87;
              }
              else
              {
                char v31 = -55;
              }
            }
            else
            {
              char v31 = -48;
            }
            if (!is_mul_ok(v29, a3)) {
              return 0;
            }
            unint64_t v32 = v29 * a3;
            unsigned __int8 v33 = v30 + v31;
            BOOL v16 = __CFADD__(v32, v33);
            unint64_t v29 = v32 + v33;
            if (v16) {
              return 0;
            }
            ++result;
            --v3;
          }
          while (v3);
          return (unsigned __int8 *)v29;
        }
        return 0;
      }
      return 0;
    }
    if (a2 >= 1)
    {
      uint64_t v5 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v6 = a3 + 48;
        unsigned __int8 v7 = a3 + 55;
        unsigned __int8 v8 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = 58;
        }
        else
        {
          unsigned __int8 v8 = 97;
          unsigned __int8 v7 = 65;
        }
        if (result)
        {
          unint64_t v9 = 0;
          for (unint64_t i = result + 1; ; ++i)
          {
            unsigned int v11 = *i;
            if (v11 < 0x30 || v11 >= v6)
            {
              if (v11 < 0x41 || v11 >= v7)
              {
                uint64_t v13 = 0;
                if (v11 < 0x61 || v11 >= v8) {
                  return (unsigned __int8 *)v13;
                }
                char v12 = -87;
              }
              else
              {
                char v12 = -55;
              }
            }
            else
            {
              char v12 = -48;
            }
            if (!is_mul_ok(v9, a3)) {
              return 0;
            }
            unint64_t v14 = v9 * a3;
            unsigned __int8 v15 = v11 + v12;
            BOOL v16 = v14 >= v15;
            unint64_t v9 = v14 - v15;
            if (!v16) {
              return 0;
            }
            if (!--v5) {
              return (unsigned __int8 *)v9;
            }
          }
        }
        return 0;
      }
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_22EC6EDFC()
{
  return swift_release();
}

uint64_t sub_22EC6EE04()
{
  return swift_getWitnessTable();
}

void OUTLINED_FUNCTION_5_19(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(a1 + 8);
  *(void *)(v1 + 16) = *(void *)a1;
  *(unsigned char *)(v1 + 24) = v2;
}

uint64_t OUTLINED_FUNCTION_8_22()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_18_15@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
  return 0;
}

uint64_t OUTLINED_FUNCTION_19_11()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_20_12()
{
  return sub_22EC1FA24(0, 0xE000000000000000, (uint64_t *)(v0 - 104));
}

uint64_t OUTLINED_FUNCTION_21_11()
{
  return v0;
}

unint64_t OUTLINED_FUNCTION_22_10(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFFFFCLL | v1 & 3;
}

void OUTLINED_FUNCTION_23_7(uint64_t a1@<X8>)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = a1;
}

void OUTLINED_FUNCTION_28_6()
{
  uint64_t v1 = *(void *)(v0 - 96);
  *(void *)(v0 - 104) = *(void *)(v0 - 104);
  *(void *)(v0 - 96) = v1;
}

uint64_t OUTLINED_FUNCTION_29_8()
{
  *(void *)(v0 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_32_5(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_33_3()
{
  return sub_22EC6EDFC();
}

uint64_t OUTLINED_FUNCTION_35_4()
{
  return sub_22EE7F300();
}

uint64_t OUTLINED_FUNCTION_36_7()
{
  return swift_allocObject();
}

uint64_t sub_22EC6F09C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_22EC6F0B0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_22EC6F0C4()
{
  uint64_t v0 = type metadata accessor for SKLogger();
  __swift_allocate_value_buffer(v0, qword_26864C4F8);
  __swift_project_value_buffer(v0, (uint64_t)qword_26864C4F8);
  return sub_22EE7C560();
}

uint64_t sub_22EC6F14C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for StorefrontLocaleViewModifier(0);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v7);
  unint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *unint64_t v9 = a1;
  if (qword_26861B880 != -1) {
    swift_once();
  }
  type metadata accessor for StorefrontObserver(0);
  sub_22EC719A4(&qword_2686221A8, (void (*)(uint64_t))type metadata accessor for StorefrontObserver);
  swift_retain();
  *((void *)v9 + 1) = sub_22EE7CCB0();
  *((void *)v9 + 2) = v10;
  unsigned int v11 = (uint64_t *)&v9[*(int *)(v6 + 24)];
  *unsigned int v11 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861CD68);
  swift_storeEnumTagMultiPayload();
  MEMORY[0x230FAB9D0](v9, a2, v6, a3);
  return sub_22EC719EC((uint64_t)v9, (void (*)(void))type metadata accessor for StorefrontLocaleViewModifier);
}

void sub_22EC6F2E0(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268622170);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861DFE0);
  MEMORY[0x270FA5388](v7 - 8);
  unint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*v2 != 1) {
    goto LABEL_6;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22EE7C620();
  swift_release();
  swift_release();
  uint64_t v10 = sub_22EE7F090();
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v10) == 1)
  {
    sub_22EADAC74((uint64_t)v6, &qword_268622170);
    uint64_t v11 = sub_22EE7C400();
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, v11);
LABEL_5:
    sub_22EADAC74((uint64_t)v9, &qword_26861DFE0);
LABEL_6:
    type metadata accessor for StorefrontLocaleViewModifier(0);
    sub_22EB17740();
    return;
  }
  sub_22EE7F060();
  (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v6, v10);
  uint64_t v12 = sub_22EE7C400();
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v12);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v12) == 1) {
    goto LABEL_5;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, v9, v12);
}

uint64_t sub_22EC6F528()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22EE7C620();
  swift_release();

  return swift_release();
}

uint64_t sub_22EC6F5A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_22EE7C400();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = swift_getKeyPath();
  sub_22EC6F2E0((uint64_t)v7);
  unint64_t v9 = (uint64_t *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268622190) + 36));
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861DF88);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))((char *)v9 + *(int *)(v10 + 28), v7, v4);
  *unint64_t v9 = KeyPath;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268622198);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(a2, a1, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_22EC6F714(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268622170);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22EC7155C(a1, (uint64_t)v4);
  return sub_22EC6F7A4((uint64_t)v4);
}

uint64_t sub_22EC6F7A4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268622170);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_22EC7155C(a1, (uint64_t)v4);
  swift_retain();
  sub_22EE7C630();
  return sub_22EADAC74(a1, &qword_268622170);
}

uint64_t sub_22EC6F878()
{
  type metadata accessor for StorefrontObserver(0);
  swift_allocObject();
  uint64_t result = sub_22EC6F934();
  qword_268622128 = result;
  return result;
}

uint64_t sub_22EC6F8B8()
{
  uint64_t v0 = type metadata accessor for SKLogger();
  __swift_allocate_value_buffer(v0, qword_268622130);
  __swift_project_value_buffer(v0, (uint64_t)qword_268622130);
  return sub_22EE7C560();
}

uint64_t sub_22EC6F934()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C390);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686221A0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268622170);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  unint64_t v14 = (char *)&v24 - v13;
  uint64_t v15 = v1
      + OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_1BFA2179251C0AFA10AFA4B4C120CBE318StorefrontObserver__currentStorefront;
  uint64_t v16 = sub_22EE7F090();
  __swift_storeEnumTagSinglePayload((uint64_t)v14, 1, 1, v16);
  sub_22EC7155C((uint64_t)v14, (uint64_t)v12);
  sub_22EE7C610();
  sub_22EADAC74((uint64_t)v14, &qword_268622170);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v15, v8, v5);
  uint64_t v17 = OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_1BFA2179251C0AFA10AFA4B4C120CBE318StorefrontObserver_observerTask;
  *(void *)(v1
            + OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_1BFA2179251C0AFA10AFA4B4C120CBE318StorefrontObserver_observerTask) = 0;
  uint64_t v18 = sub_22EE7FD90();
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v18);
  sub_22EE7FD30();
  swift_retain();
  uint64_t v19 = sub_22EE7FD20();
  unsigned __int8 v20 = (void *)swift_allocObject();
  uint64_t v21 = MEMORY[0x263F8F500];
  v20[2] = v19;
  v20[3] = v21;
  void v20[4] = &unk_2686221B8;
  uint64_t v20[5] = v1;
  unsigned int v22 = (void *)swift_allocObject();
  void v22[2] = v19;
  v22[3] = v21;
  v22[4] = &unk_2686202F0;
  v22[5] = v20;
  swift_unknownObjectRetain();
  sub_22EBEC0F0((uint64_t)v4, (uint64_t)&unk_268620300, (uint64_t)v22);
  swift_release();
  *(void *)(v1 + v17) = sub_22EC7003C();
  swift_release();
  return v1;
}

uint64_t sub_22EC6FC10()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_22EC71B0C;
  return sub_22EC6FCA0();
}

uint64_t sub_22EC6FCA0()
{
  v1[2] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268622170);
  v1[3] = swift_task_alloc();
  uint64_t v2 = swift_task_alloc();
  v1[4] = v2;
  uint64_t v3 = sub_22EE7F090();
  v1[5] = v3;
  v1[6] = *(void *)(v3 - 8);
  v1[7] = swift_task_alloc();
  v1[8] = sub_22EE7FD30();
  v1[9] = sub_22EE7FD20();
  uint64_t v4 = (void *)swift_task_alloc();
  v1[10] = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_22EC6FDF4;
  return MEMORY[0x270EFE3A8](v2);
}

uint64_t sub_22EC6FDF4()
{
  OUTLINED_FUNCTION_9_12();
  OUTLINED_FUNCTION_1_5();
  swift_task_dealloc();
  uint64_t v1 = sub_22EE7FD00();
  return MEMORY[0x270FA2498](sub_22EC6FF08, v1, v0);
}

uint64_t sub_22EC6FF08()
{
  OUTLINED_FUNCTION_13_4();
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  swift_release();
  if (__swift_getEnumTagSinglePayload(v1, 1, v2) == 1)
  {
    sub_22EADAC74(v0[4], &qword_268622170);
  }
  else
  {
    uint64_t v4 = v0[6];
    uint64_t v3 = v0[7];
    uint64_t v5 = v0[5];
    uint64_t v6 = v0[3];
    (*(void (**)(uint64_t, void, uint64_t))(v4 + 32))(v3, v0[4], v5);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v6, v3, v5);
    __swift_storeEnumTagSinglePayload(v6, 0, 1, v5);
    sub_22EC6F7A4(v6);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_22EC7003C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C390);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_22EE7FD90();
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v5);
  uint64_t v6 = swift_allocObject();
  swift_weakInit();
  sub_22EE7FD30();
  swift_retain();
  uint64_t v7 = sub_22EE7FD20();
  uint64_t v8 = (void *)swift_allocObject();
  uint64_t v9 = MEMORY[0x263F8F500];
  _OWORD v8[2] = v7;
  v8[3] = v9;
  void v8[4] = v6;
  v8[5] = v1;
  swift_release();
  return sub_22EBEC0F0((uint64_t)v4, (uint64_t)&unk_2686221C8, (uint64_t)v8);
}

uint64_t sub_22EC70188()
{
  if (*(void *)(v0
                 + OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_1BFA2179251C0AFA10AFA4B4C120CBE318StorefrontObserver_observerTask))
  {
    swift_retain();
    sub_22EE7FDA0();
    swift_release();
  }
  uint64_t v1 = v0
     + OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_1BFA2179251C0AFA10AFA4B4C120CBE318StorefrontObserver__currentStorefront;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686221A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return v0;
}

uint64_t sub_22EC70240()
{
  uint64_t v0 = sub_22EC70188();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t sub_22EC70294()
{
  return type metadata accessor for StorefrontObserver(0);
}

uint64_t type metadata accessor for StorefrontObserver(uint64_t a1)
{
  return sub_22EAD01C0(a1, (uint64_t *)&unk_268622158);
}

void sub_22EC702BC()
{
  sub_22EC70354();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_22EC70354()
{
  if (!qword_268622168)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268622170);
    unint64_t v0 = sub_22EE7C640();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268622168);
    }
  }
}

uint64_t *sub_22EC703B0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v5 = a2[2];
    v3[1] = a2[1];
    v3[2] = v5;
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (uint64_t *)((char *)v3 + v6);
    uint64_t v8 = (uint64_t *)((char *)a2 + v6);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26861CD68);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_22EE7C400();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_22EC704D8(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861CD68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_22EE7C400();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_22EC70590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (void *)(a2 + v5);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861CD68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_22EE7C400();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  else
  {
    *uint64_t v6 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_22EC70660(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (void *)(a2 + v6);
    sub_22EADAC74(a1 + v6, &qword_26861CD68);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26861CD68);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_22EE7C400();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_22EC70764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861CD68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_22EE7C400();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t sub_22EC70840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (const void *)(a2 + v7);
    sub_22EADAC74(a1 + v7, &qword_26861CD68);
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861CD68);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_22EE7C400();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_22EC70944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EC70958);
}

uint64_t sub_22EC70958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268622178);
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
}

uint64_t sub_22EC709E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EC709F8);
}

uint64_t sub_22EC709F8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268622178);
    uint64_t v8 = v5 + *(int *)(a4 + 24);
    return __swift_storeEnumTagSinglePayload(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for StorefrontLocaleViewModifier(uint64_t a1)
{
  return sub_22EAD01C0(a1, (uint64_t *)&unk_268622180);
}

void sub_22EC70A9C()
{
  sub_22EB6433C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_22EC70B3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[8] = a4;
  v4[9] = type metadata accessor for SKLogger();
  v4[10] = swift_task_alloc();
  uint64_t v5 = sub_22EE7F090();
  v4[11] = v5;
  v4[12] = *(void *)(v5 - 8);
  v4[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268622170);
  v4[14] = swift_task_alloc();
  v4[15] = swift_task_alloc();
  uint64_t v6 = sub_22EE7F050();
  v4[16] = v6;
  v4[17] = *(void *)(v6 - 8);
  v4[18] = swift_task_alloc();
  uint64_t v7 = sub_22EE7F030();
  v4[19] = v7;
  v4[20] = *(void *)(v7 - 8);
  v4[21] = swift_task_alloc();
  v4[22] = sub_22EE7FD30();
  v4[23] = sub_22EE7FD20();
  uint64_t v9 = sub_22EE7FD00();
  v4[24] = v9;
  v4[25] = v8;
  return MEMORY[0x270FA2498](sub_22EC70D5C, v9, v8);
}

uint64_t sub_22EC70D5C()
{
  OUTLINED_FUNCTION_13_4();
  sub_22EE7F080();
  sub_22EE7F040();
  uint64_t v1 = OUTLINED_FUNCTION_6_25();
  v2(v1);
  swift_beginAccess();
  *(void *)(v0 + 208) = sub_22EE7FD20();
  sub_22EC719A4(&qword_2686221D0, MEMORY[0x263F17D68]);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 216) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_22EC70E88;
  uint64_t v4 = OUTLINED_FUNCTION_3_15();
  return MEMORY[0x270FA1E80](v4);
}

uint64_t sub_22EC70E88()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 224) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 208);
  if (v0)
  {
    if (v3)
    {
      swift_getObjectType();
      uint64_t v4 = sub_22EE7FD00();
      uint64_t v6 = v5;
    }
    else
    {
      uint64_t v4 = 0;
      uint64_t v6 = 0;
    }
    uint64_t v8 = sub_22EC71490;
  }
  else
  {
    if (v3)
    {
      swift_getObjectType();
      uint64_t v4 = sub_22EE7FD00();
      uint64_t v6 = v7;
    }
    else
    {
      uint64_t v4 = 0;
      uint64_t v6 = 0;
    }
    uint64_t v8 = sub_22EC71014;
  }
  return MEMORY[0x270FA2498](v8, v4, v6);
}

uint64_t sub_22EC71014()
{
  OUTLINED_FUNCTION_9_12();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 200);
  return MEMORY[0x270FA2498](sub_22EC71074, v1, v2);
}

uint64_t sub_22EC71074()
{
  uint64_t v24 = v0;
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[11];
  if (__swift_getEnumTagSinglePayload(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(v0[20] + 8))(v0[21], v0[19]);
    swift_release();
LABEL_12:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v21 = (uint64_t (*)(void))v0[1];
    return v21();
  }
  (*(void (**)(void, uint64_t, uint64_t))(v0[12] + 32))(v0[13], v1, v2);
  if (!swift_weakLoadStrong())
  {
    swift_release();
    if (qword_26861B888 != -1) {
      swift_once();
    }
    uint64_t v9 = v0[10];
    uint64_t v10 = __swift_project_value_buffer(v0[9], (uint64_t)qword_268622130);
    sub_22EB107F0(v10, v9);
    os_log_type_t v11 = sub_22EE7FFC0();
    uint64_t v12 = sub_22EE7C550();
    os_log_type_t v13 = v11;
    if (os_log_type_enabled(v12, v11))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v23 = v15;
      *(_DWORD *)uint64_t v14 = 136446466;
      v0[6] = sub_22EC1FA24(0, 0xE000000000000000, &v23);
      sub_22EE800B0();
      *(_WORD *)(v14 + 12) = 2082;
      v0[7] = sub_22EC1FA24(0xD000000000000049, 0x800000022EE84220, &v23);
      sub_22EE800B0();
      _os_log_impl(&dword_22EAC6000, v12, v13, "%{public}s%{public}s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x230FAE500](v15, -1, -1);
      MEMORY[0x230FAE500](v14, -1, -1);
    }

    uint64_t v17 = v0[20];
    uint64_t v16 = v0[21];
    uint64_t v18 = v0[19];
    sub_22EC719EC(v0[10], (void (*)(void))type metadata accessor for SKLogger);
    uint64_t v19 = OUTLINED_FUNCTION_6_25();
    v20(v19);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    goto LABEL_12;
  }
  uint64_t v4 = v0[13];
  uint64_t v3 = v0[14];
  uint64_t v5 = v0[11];
  uint64_t v6 = v0[12];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v3, v4, v5);
  __swift_storeEnumTagSinglePayload(v3, 0, 1, v5);
  sub_22EC6F7A4(v3);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v0[26] = sub_22EE7FD20();
  sub_22EC719A4(&qword_2686221D0, MEMORY[0x263F17D68]);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[27] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_22EC70E88;
  uint64_t v8 = OUTLINED_FUNCTION_3_15();
  return MEMORY[0x270FA1E80](v8);
}

uint64_t sub_22EC71490()
{
  OUTLINED_FUNCTION_9_12();
  *(void *)(v0 + 40) = *(void *)(v0 + 224);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268623C60);
  uint64_t v1 = MEMORY[0x263F8E628];
  uint64_t v2 = swift_dynamicCast();
  uint64_t v3 = MEMORY[0x263F8E658];
  return MEMORY[0x270FA0678](v2, v1, v3);
}

uint64_t sub_22EC71510()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EC71534()
{
  return sub_22EC6F528();
}

uint64_t sub_22EC7155C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268622170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22EC715C4()
{
  OUTLINED_FUNCTION_9_12();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_29_3(v0);
  void *v1 = v2;
  v1[1] = sub_22EC71B0C;
  return sub_22EC6FC10();
}

uint64_t sub_22EC71650()
{
  OUTLINED_FUNCTION_13_4();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_29_3(v0);
  void *v1 = v2;
  v1[1] = sub_22EC71B0C;
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_2686202E8 + dword_2686202E8);
  return v3();
}

uint64_t sub_22EC7170C()
{
  OUTLINED_FUNCTION_13_4();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_29_3(v0);
  void *v1 = v2;
  v1[1] = sub_22EC71B0C;
  uint64_t v3 = OUTLINED_FUNCTION_1_23();
  return v4(v3);
}

uint64_t sub_22EC717BC()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_22EC717F4()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_22EC71834()
{
  OUTLINED_FUNCTION_13_4();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_29_3(v0);
  void *v1 = v2;
  v1[1] = sub_22EC718D8;
  uint64_t v3 = OUTLINED_FUNCTION_1_23();
  return sub_22EC70B3C(v3, v4, v5, v6);
}

uint64_t sub_22EC718D8()
{
  OUTLINED_FUNCTION_9_12();
  OUTLINED_FUNCTION_1_5();
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_22EC719A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22EC719EC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_2_0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

unint64_t sub_22EC71A48()
{
  unint64_t result = qword_2686221E0;
  if (!qword_2686221E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268622190);
    sub_22EADDD7C(&qword_2686221E8, &qword_268622198);
    sub_22EADDD7C(&qword_26861DFD8, &qword_26861DF88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686221E0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_23()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_3_15()
{
  return *(void *)(v0 + 120);
}

uint64_t OUTLINED_FUNCTION_6_25()
{
  return v0;
}

void *sub_22EC71B5C(_OWORD *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    goto LABEL_22;
  }
  if (*a2)
  {
    uint64_t v7 = a2[1];
    *uint64_t v4 = *a2;
    v4[1] = v7;
    swift_retain();
  }
  else
  {
    *a1 = *(_OWORD *)a2;
  }
  uint64_t v9 = (int *)type metadata accessor for SubscriptionOfferViewStyleProtocolConfiguration();
  uint64_t v10 = v9[5];
  os_log_type_t v11 = (void *)((char *)v4 + v10);
  uint64_t v12 = (void **)((char *)a2 + v10);
  uint64_t v13 = type metadata accessor for Product.TaskState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v17 = sub_22EE7F780();
    (*(void (**)(void *, void **, uint64_t))(*(void *)(v17 - 8) + 16))(v11, v12, v17);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
      goto LABEL_12;
    }
    uint64_t v15 = *v12;
    id v16 = v15;
    *os_log_type_t v11 = v15;
  }
  swift_storeEnumTagMultiPayload();
LABEL_12:
  *(void *)((char *)v4 + v9[6]) = *(void *)((char *)a2 + v9[6]);
  *(void *)((char *)v4 + v9[7]) = *(void *)((char *)a2 + v9[7]);
  *((unsigned char *)v4 + v9[8]) = *((unsigned char *)a2 + v9[8]);
  uint64_t v18 = a3[6];
  *(void *)((char *)v4 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  uint64_t v19 = (void *)((char *)v4 + v18);
  unsigned __int8 v20 = (void *)((char *)a2 + v18);
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = sub_22EE7CFC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  }
  else
  {
    *uint64_t v19 = *v20;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = a3[7];
  uint64_t v23 = (void *)((char *)v4 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v25 = sub_22EE7CE90();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
  }
  else
  {
    *uint64_t v23 = *v24;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = a3[8];
  unsigned __int8 v27 = (void *)((char *)v4 + v26);
  unsigned __int8 v28 = (void *)((char *)a2 + v26);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861CDC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v29 = sub_22EE7CA10();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
  }
  else
  {
    *unsigned __int8 v27 = *v28;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v30 = a3[9];
  char v31 = (char *)v4 + v30;
  unint64_t v32 = (char *)a2 + v30;
  *char v31 = *v32;
  *((void *)v31 + 1) = *((void *)v32 + 1);
LABEL_22:
  swift_retain();
  return v4;
}

uint64_t sub_22EC71EF8(void *a1, int *a2)
{
  if (*a1) {
    swift_release();
  }
  uint64_t v4 = (id *)((char *)a1 + *(int *)(type metadata accessor for SubscriptionOfferViewStyleProtocolConfiguration() + 20));
  type metadata accessor for Product.TaskState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v6 = sub_22EE7F780();
    (*(void (**)(id *, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
  }
  else if (!EnumCaseMultiPayload)
  {
  }
  swift_release();
  swift_release();
  swift_release();
  uint64_t v7 = (char *)a1 + a2[6];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_22EE7CFC0();
    (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = (char *)a1 + a2[7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_22EE7CE90();
    (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  os_log_type_t v11 = (char *)a1 + a2[8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861CDC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_22EE7CA10();
    (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }

  return swift_release();
}

void *sub_22EC72130(void *a1, void *a2, int *a3)
{
  if (*a2)
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  uint64_t v7 = (int *)type metadata accessor for SubscriptionOfferViewStyleProtocolConfiguration();
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (void **)((char *)a2 + v8);
  uint64_t v11 = type metadata accessor for Product.TaskState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v15 = sub_22EE7F780();
    (*(void (**)(void *, void **, uint64_t))(*(void *)(v15 - 8) + 16))(v9, v10, v15);
    goto LABEL_8;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v13 = *v10;
    id v14 = v13;
    *uint64_t v9 = v13;
LABEL_8:
    swift_storeEnumTagMultiPayload();
    goto LABEL_10;
  }
  memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
LABEL_10:
  *(void *)((char *)a1 + v7[6]) = *(void *)((char *)a2 + v7[6]);
  *(void *)((char *)a1 + v7[7]) = *(void *)((char *)a2 + v7[7]);
  *((unsigned char *)a1 + v7[8]) = *((unsigned char *)a2 + v7[8]);
  uint64_t v16 = a3[6];
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = sub_22EE7CFC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  else
  {
    *uint64_t v17 = *v18;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = a3[7];
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v23 = sub_22EE7CE90();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  else
  {
    *uint64_t v21 = *v22;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = a3[8];
  uint64_t v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (void *)((char *)a2 + v24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861CDC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v27 = sub_22EE7CA10();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  }
  else
  {
    void *v25 = *v26;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v28 = a3[9];
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  *uint64_t v29 = *v30;
  *((void *)v29 + 1) = *((void *)v30 + 1);
  swift_retain();
  return a1;
}

void *sub_22EC72480(void *a1, void *a2, int *a3)
{
  uint64_t v6 = *a2;
  if (*a1)
  {
    if (v6)
    {
      uint64_t v7 = a2[1];
      *a1 = v6;
      a1[1] = v7;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v6)
  {
    uint64_t v8 = a2[1];
    *a1 = v6;
    a1[1] = v8;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v9 = type metadata accessor for SubscriptionOfferViewStyleProtocolConfiguration();
  uint64_t v10 = (int *)v9;
  if (a1 == a2) {
    goto LABEL_15;
  }
  uint64_t v11 = *(int *)(v9 + 20);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void **)((char *)a2 + v11);
  sub_22EC78388((uint64_t)a1 + v11, (void (*)(void))type metadata accessor for Product.TaskState);
  uint64_t v14 = type metadata accessor for Product.TaskState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v18 = sub_22EE7F780();
    (*(void (**)(void *, void **, uint64_t))(*(void *)(v18 - 8) + 16))(v12, v13, v18);
    goto LABEL_13;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v16 = *v13;
    id v17 = v16;
    *uint64_t v12 = v16;
LABEL_13:
    swift_storeEnumTagMultiPayload();
    goto LABEL_15;
  }
  memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
LABEL_15:
  *(void *)((char *)a1 + v10[6]) = *(void *)((char *)a2 + v10[6]);
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + v10[7]) = *(void *)((char *)a2 + v10[7]);
  swift_retain();
  swift_release();
  *((unsigned char *)a1 + v10[8]) = *((unsigned char *)a2 + v10[8]);
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v19 = a3[6];
    uint64_t v20 = (void *)((char *)a1 + v19);
    uint64_t v21 = (void *)((char *)a2 + v19);
    sub_22EADAC74((uint64_t)a1 + v19, &qword_26861BDD8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = sub_22EE7CFC0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    }
    else
    {
      *uint64_t v20 = *v21;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v23 = a3[7];
    uint64_t v24 = (void *)((char *)a1 + v23);
    uint64_t v25 = (void *)((char *)a2 + v23);
    sub_22EADAC74((uint64_t)a1 + v23, &qword_26861BDE0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDE0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = sub_22EE7CE90();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    }
    else
    {
      void *v24 = *v25;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v27 = a3[8];
    uint64_t v28 = (void *)((char *)a1 + v27);
    uint64_t v29 = (void *)((char *)a2 + v27);
    sub_22EADAC74((uint64_t)a1 + v27, &qword_26861CDC8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26861CDC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v30 = sub_22EE7CA10();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
    }
    else
    {
      *uint64_t v28 = *v29;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v31 = a3[9];
  unint64_t v32 = (char *)a1 + v31;
  unsigned __int8 v33 = (char *)a2 + v31;
  *unint64_t v32 = *v33;
  *((void *)v32 + 1) = *((void *)v33 + 1);
  swift_retain();
  swift_release();
  return a1;
}

void *sub_22EC72878(void *a1, void *a2, int *a3)
{
  if (*a2)
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  uint64_t v7 = (int *)type metadata accessor for SubscriptionOfferViewStyleProtocolConfiguration();
  uint64_t v8 = v7[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for Product.TaskState(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_22EE7F780();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  *(void *)((char *)a1 + v7[6]) = *(void *)((char *)a2 + v7[6]);
  *(void *)((char *)a1 + v7[7]) = *(void *)((char *)a2 + v7[7]);
  *((unsigned char *)a1 + v7[8]) = *((unsigned char *)a2 + v7[8]);
  uint64_t v13 = a3[6];
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = sub_22EE7CFC0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v22 = sub_22EE7CE90();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v19, v20, v22);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  uint64_t v23 = a3[8];
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861CDC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v27 = sub_22EE7CA10();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v24, v25, v27);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
  }
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
  return a1;
}

void *sub_22EC72B98(void *a1, void *a2, int *a3)
{
  uint64_t v6 = *a2;
  if (*a1)
  {
    if (v6)
    {
      uint64_t v7 = a2[1];
      *a1 = v6;
      a1[1] = v7;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v6)
  {
    uint64_t v8 = a2[1];
    *a1 = v6;
    a1[1] = v8;
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v9 = type metadata accessor for SubscriptionOfferViewStyleProtocolConfiguration();
  uint64_t v10 = (int *)v9;
  if (a1 != a2)
  {
    uint64_t v11 = *(int *)(v9 + 20);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    sub_22EC78388((uint64_t)a1 + v11, (void (*)(void))type metadata accessor for Product.TaskState);
    uint64_t v14 = type metadata accessor for Product.TaskState(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = sub_22EE7F780();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
    }
  }
  *(void *)((char *)a1 + v10[6]) = *(void *)((char *)a2 + v10[6]);
  swift_release();
  *(void *)((char *)a1 + v10[7]) = *(void *)((char *)a2 + v10[7]);
  swift_release();
  *((unsigned char *)a1 + v10[8]) = *((unsigned char *)a2 + v10[8]);
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v16 = a3[6];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_22EADAC74((uint64_t)a1 + v16, &qword_26861BDD8);
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = sub_22EE7CFC0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v17, v18, v20);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    uint64_t v21 = a3[7];
    uint64_t v22 = (char *)a1 + v21;
    uint64_t v23 = (char *)a2 + v21;
    sub_22EADAC74((uint64_t)a1 + v21, &qword_26861BDE0);
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDE0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v25 = sub_22EE7CE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v22, v23, v25);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    uint64_t v26 = a3[8];
    uint64_t v27 = (char *)a1 + v26;
    uint64_t v28 = (char *)a2 + v26;
    sub_22EADAC74((uint64_t)a1 + v26, &qword_26861CDC8);
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861CDC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v30 = sub_22EE7CA10();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v27, v28, v30);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
  }
  uint64_t v31 = a3[9];
  unint64_t v32 = (char *)a1 + v31;
  unsigned __int8 v33 = (char *)a2 + v31;
  *unint64_t v32 = *v33;
  *((void *)v32 + 1) = *((void *)v33 + 1);
  swift_release();
  return a1;
}

uint64_t sub_22EC72F70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EC72F84);
}

uint64_t sub_22EC72F84(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for SubscriptionOfferViewStyleProtocolConfiguration();
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_13:
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
  if (a2 != 0x7FFFFFFF)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26861C7F0);
    OUTLINED_FUNCTION_10();
    if (*(_DWORD *)(v13 + 84) == a2)
    {
      uint64_t v8 = v12;
      uint64_t v14 = a3[6];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26861C7F8);
      OUTLINED_FUNCTION_10();
      if (*(_DWORD *)(v16 + 84) == a2)
      {
        uint64_t v8 = v15;
        uint64_t v14 = a3[7];
      }
      else
      {
        uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861EDD8);
        uint64_t v14 = a3[8];
      }
    }
    uint64_t v9 = a1 + v14;
    goto LABEL_13;
  }
  unint64_t v10 = *(void *)(a1 + a3[5]);
  if (v10 >= 0xFFFFFFFF) {
    LODWORD(v10) = -1;
  }
  return (v10 + 1);
}

uint64_t sub_22EC73088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EC7309C);
}

void sub_22EC7309C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  type metadata accessor for SubscriptionOfferViewStyleProtocolConfiguration();
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(void *)(a1 + a4[5]) = (a2 - 1);
      return;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_26861C7F0);
    OUTLINED_FUNCTION_10();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[6];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26861C7F8);
      OUTLINED_FUNCTION_10();
      if (*(_DWORD *)(v16 + 84) == a3)
      {
        uint64_t v10 = v15;
        uint64_t v14 = a4[7];
      }
      else
      {
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861EDD8);
        uint64_t v14 = a4[8];
      }
    }
    uint64_t v11 = a1 + v14;
  }

  __swift_storeEnumTagSinglePayload(v11, a2, a2, v10);
}

uint64_t type metadata accessor for FullSheetSubscriptionOfferView()
{
  uint64_t result = qword_2686221F0;
  if (!qword_2686221F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_22EC731E4()
{
  type metadata accessor for SubscriptionOfferViewStyleProtocolConfiguration();
  if (v0 <= 0x3F)
  {
    sub_22EC7338C(319, (unint64_t *)&qword_26861C810, MEMORY[0x263F18FF8]);
    if (v1 <= 0x3F)
    {
      sub_22EC7338C(319, (unint64_t *)&qword_26861C818, MEMORY[0x263F18D80]);
      if (v2 <= 0x3F)
      {
        sub_22EC7338C(319, (unint64_t *)&qword_26861EDF0, MEMORY[0x263F188C0]);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_22EC7338C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_22EE7C7E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_22EC733E0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EC733FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a2 + 416;
  uint64_t v5 = *(const void **)(a1 + 8);
  uint64_t v7 = **(void **)a1;
  uint64_t v6 = *(void *)(*(void *)a1 + 8);
  char v8 = *(unsigned char *)(*(void *)a1 + 16);
  uint64_t v9 = *(void *)(*(void *)a1 + 24);
  *(void *)a2 = v7;
  *(void *)(a2 + 8) = v6;
  *(unsigned char *)(a2 + 16) = v8;
  *(void *)(a2 + 24) = v9;
  memcpy(__dst, v5, 0x89uLL);
  memmove((void *)(a2 + 32), v5, 0x89uLL);
  uint64_t v10 = *(const void **)(a1 + 24);
  OUTLINED_FUNCTION_4_25();
  long long v12 = *(_OWORD *)(v11 + 48);
  LOBYTE(v11) = *(unsigned char *)(v11 + 40);
  *(void *)(a2 + 176) = v13;
  *(unsigned char *)(a2 + 184) = v14;
  *(void *)(a2 + 192) = v15;
  *(unsigned char *)(a2 + 200) = v16;
  *(void *)(a2 + 208) = v17;
  *(unsigned char *)(a2 + 216) = v11;
  *(_OWORD *)(a2 + 224) = v12;
  memcpy(v29, v10, sizeof(v29));
  memmove((void *)(a2 + 240), v10, 0xA8uLL);
  OUTLINED_FUNCTION_4_25();
  char v19 = *(unsigned char *)(v18 + 40);
  long long v20 = *(_OWORD *)(v18 + 48);
  *(void *)(a2 + 408) = v21;
  *(unsigned char *)(a2 + 416) = v22;
  *(void *)(a2 + 424) = v23;
  *(unsigned char *)(a2 + 432) = v24;
  *(void *)(a2 + 440) = v25;
  *(unsigned char *)(a2 + 448) = v19;
  *(_OWORD *)(v4 + 40) = v20;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_268622338);
  sub_22EADAD08(*(void *)(a1 + 40), a2 + *(int *)(v26 + 112), &qword_26861C8F0);
  sub_22EADDF0C(v7, v6, v8);
  swift_bridgeObjectRetain();
  sub_22EC78848((uint64_t)__dst);
  return sub_22EC308DC((uint64_t)v29);
}

uint64_t sub_22EC73554@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = **(void **)a1;
  uint64_t v5 = *(void *)(*(void *)a1 + 8);
  char v6 = *(unsigned char *)(*(void *)a1 + 16);
  uint64_t v7 = *(void *)(*(void *)a1 + 24);
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v5;
  *(unsigned char *)(a2 + 16) = v6;
  *(void *)(a2 + 24) = v7;
  char v8 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2686222D0);
  sub_22EADAD08(*(void *)(a1 + 8), a2 + v8[12], &qword_2686222C8);
  uint64_t v9 = a2 + v8[16];
  uint64_t v10 = *(uint64_t **)(a1 + 16);
  uint64_t v11 = *(const void **)(a1 + 24);
  uint64_t v12 = *v10;
  char v13 = *((unsigned char *)v10 + 8);
  uint64_t v14 = v10[2];
  char v15 = *((unsigned char *)v10 + 24);
  uint64_t v16 = v10[4];
  long long v17 = *((_OWORD *)v10 + 3);
  LOBYTE(v10) = *((unsigned char *)v10 + 40);
  *(void *)uint64_t v9 = v12;
  *(unsigned char *)(v9 + 8) = v13;
  *(void *)(v9 + 16) = v14;
  *(unsigned char *)(v9 + 24) = v15;
  *(void *)(v9 + 32) = v16;
  *(unsigned char *)(v9 + 40) = (_BYTE)v10;
  *(_OWORD *)(v9 + 48) = v17;
  uint64_t v18 = (void *)(a2 + v8[20]);
  memcpy(__dst, v11, sizeof(__dst));
  memmove(v18, v11, 0xA8uLL);
  uint64_t v19 = a2 + v8[24];
  uint64_t v21 = *(void *)(a1 + 32);
  uint64_t v20 = *(void *)(a1 + 40);
  char v22 = *(unsigned char *)(v21 + 8);
  uint64_t v23 = *(void *)(v21 + 16);
  char v24 = *(unsigned char *)(v21 + 24);
  uint64_t v25 = *(void *)(v21 + 32);
  char v26 = *(unsigned char *)(v21 + 40);
  long long v27 = *(_OWORD *)(v21 + 48);
  *(void *)uint64_t v19 = *(void *)v21;
  *(unsigned char *)(v19 + 8) = v22;
  *(void *)(v19 + 16) = v23;
  *(unsigned char *)(v19 + 24) = v24;
  *(void *)(v19 + 32) = v25;
  *(unsigned char *)(v19 + 40) = v26;
  *(_OWORD *)(v19 + 48) = v27;
  sub_22EADAD08(v20, a2 + v8[28], &qword_2686222B0);
  sub_22EADDF0C(v4, v5, v6);
  swift_bridgeObjectRetain();
  return sub_22EC308DC((uint64_t)__dst);
}

uint64_t sub_22EC736C8@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_22EE7D670();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268622200);
  return sub_22EC73714(v1, a1 + *(int *)(v3 + 44));
}

uint64_t sub_22EC73714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v143 = a1;
  uint64_t v140 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268622208);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v139 = (uint64_t *)((char *)&v109 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v131 = sub_22EE7D5E0();
  unint64_t v125 = *(void (***)(char *, char *, uint64_t))(v131 - 8);
  MEMORY[0x270FA5388](v131);
  unint64_t v124 = (char *)&v109 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = sub_22EE7CFF0();
  MEMORY[0x270FA5388](v126);
  uint64_t v135 = (char *)&v109 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C838);
  uint64_t v120 = *(void *)(v121 - 8);
  MEMORY[0x270FA5388](v121);
  unint64_t v118 = (char *)&v109 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C840);
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v117 = (char *)&v109 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C848);
  MEMORY[0x270FA5388](v116);
  uint64_t v123 = (uint64_t)&v109 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C850);
  MEMORY[0x270FA5388](v119);
  uint64_t v142 = (uint64_t)&v109 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_268622210);
  MEMORY[0x270FA5388](v122);
  uint64_t v132 = (char *)&v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_268622218);
  MEMORY[0x270FA5388](v127);
  uint64_t v133 = (char *)&v109 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_268622220);
  MEMORY[0x270FA5388](v129);
  char v136 = (char *)&v109 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_268622228);
  MEMORY[0x270FA5388](v130);
  uint64_t v138 = (uint64_t)&v109 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v134 = (char *)&v109 - v17;
  MEMORY[0x270FA5388](v18);
  uint64_t v137 = (uint64_t)&v109 - v19;
  uint64_t v114 = sub_22EE7DC60();
  unint64_t v128 = *(char **)(v114 - 8);
  MEMORY[0x270FA5388](v114);
  int64_t v113 = (char *)&v109 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = type metadata accessor for FullSheetSubscriptionOfferView();
  uint64_t v109 = *(void *)(v115 - 8);
  uint64_t v21 = *(void *)(v109 + 64);
  MEMORY[0x270FA5388](v115);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_268622230);
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v109 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_268622238);
  MEMORY[0x270FA5388](v110);
  long long v27 = (char *)&v109 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_268622240);
  uint64_t v111 = *(void *)(v112 - 8);
  MEMORY[0x270FA5388](v112);
  uint64_t v29 = (char *)&v109 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_268622248);
  uint64_t v31 = v30 - 8;
  MEMORY[0x270FA5388](v30);
  unsigned __int8 v33 = (char *)&v109 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v34);
  uint64_t v141 = (uint64_t)&v109 - v35;
  sub_22EC78230(a1, (uint64_t)&v109 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for FullSheetSubscriptionOfferView);
  unint64_t v36 = (*(unsigned __int8 *)(v109 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v109 + 80);
  uint64_t v37 = swift_allocObject();
  sub_22EC78074((uint64_t)&v109 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), v37 + v36);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268622250);
  sub_22EC780F0();
  sub_22EE7EA20();
  uint64_t v38 = sub_22EE7DFF0();
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v27, v25, v22);
  uint64_t v40 = (uint64_t *)&v27[*(int *)(v110 + 36)];
  *uint64_t v40 = KeyPath;
  v40[1] = v38;
  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  unint64_t v41 = v113;
  sub_22EE7DC50();
  sub_22EC7816C();
  sub_22EC787E4(&qword_268622270, MEMORY[0x263F1A3B8]);
  uint64_t v42 = v114;
  sub_22EE7E200();
  (*((void (**)(char *, uint64_t))v128 + 1))(v41, v42);
  sub_22EADAC74((uint64_t)v27, &qword_268622238);
  uint64_t v43 = sub_22EE7E7C0();
  uint64_t v44 = v111;
  uint64_t v45 = v112;
  (*(void (**)(char *, char *, uint64_t))(v111 + 16))(v33, v29, v112);
  *(void *)&v33[*(int *)(v31 + 44)] = v43;
  (*(void (**)(char *, uint64_t))(v44 + 8))(v29, v45);
  unint64_t v128 = v33;
  sub_22EAEFC48((uint64_t)v33, v141, &qword_268622248);
  *(void *)&long long v144 = *(void *)(v143
                               + *(int *)(type metadata accessor for SubscriptionOfferViewStyleProtocolConfiguration()
                                        + 24));
  swift_retain();
  LOBYTE(v45) = sub_22EE7DE20();
  unsigned __int8 v46 = sub_22EE7DE40();
  sub_22EE7DE30();
  sub_22EE7DE30();
  if (sub_22EE7DE30() != v45) {
    sub_22EE7DE30();
  }
  sub_22EE7DE30();
  if (sub_22EE7DE30() != v46) {
    sub_22EE7DE30();
  }
  sub_22EE7ED70();
  sub_22EB05154();
  uint64_t v47 = v118;
  sub_22EE7E490();
  swift_release();
  uint64_t v48 = v120;
  uint64_t v49 = (uint64_t)v117;
  uint64_t v50 = v121;
  (*(void (**)(char *, char *, void))(v120 + 16))(v117, v47, v121);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v47, v50);
  uint64_t v51 = v123;
  sub_22EADAD08(v49, v123, &qword_26861C840);
  *(_WORD *)(v51 + *(int *)(v116 + 36)) = 0;
  sub_22EADAC74(v49, &qword_26861C840);
  uint64_t v52 = (char *)*MEMORY[0x263F19860];
  uint64_t v53 = v125;
  uint64_t v54 = v125[13];
  uint64_t v55 = v124;
  uint64_t v56 = v131;
  v54(v124, v52, v131);
  uint64_t v57 = v126;
  uint64_t v58 = v135;
  v53[2](&v135[*(int *)(v126 + 20)], v55, v56);
  __asm { FMOV            V0.2D, #15.0 }
  long long v121 = _Q0;
  *(_OWORD *)uint64_t v58 = _Q0;
  ((void (*)(char *, uint64_t))v53[1])(v55, v56);
  uint64_t v64 = v142;
  uint64_t v65 = v142 + *(int *)(v119 + 36);
  unint64_t v125 = (void (**)(char *, char *, uint64_t))MEMORY[0x263F19048];
  sub_22EC78230((uint64_t)v58, v65, MEMORY[0x263F19048]);
  *(_WORD *)(v65 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26861C880) + 36)) = 256;
  sub_22EADAD08(v51, v64, &qword_26861C848);
  uint64_t v66 = (void (*)(void))MEMORY[0x263F19048];
  sub_22EC78388((uint64_t)v58, MEMORY[0x263F19048]);
  sub_22EADAC74(v51, &qword_26861C848);
  uint64_t v67 = sub_22EE7ED70();
  unint64_t v124 = v68;
  uint64_t v69 = (uint64_t)v132;
  uint64_t v70 = (uint64_t)&v132[*(int *)(v122 + 36)];
  v54(&v58[*(int *)(v57 + 20)], v52, v56);
  *(_OWORD *)uint64_t v58 = v121;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861C8A8);
  uint64_t v71 = swift_allocObject();
  *(_OWORD *)(v71 + 16) = xmmword_22EE881C0;
  *(void *)(v71 + 32) = sub_22EE7E7B0();
  uint64_t v72 = v143;
  *(void *)(v71 + 40) = *(void *)(v143 + *(int *)(v115 + 20));
  *(void *)&long long v144 = v71;
  sub_22EE7FC80();
  uint64_t v73 = v144;
  swift_retain();
  MEMORY[0x230FABFE0](v73);
  sub_22EE7EE60();
  sub_22EE7EE70();
  sub_22EE7CC70();
  sub_22EC78230((uint64_t)v58, v70, (void (*)(void))v125);
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C8B0);
  uint64_t v75 = v70 + *(int *)(v74 + 52);
  long long v76 = v145;
  *(_OWORD *)uint64_t v75 = v144;
  *(_OWORD *)(v75 + 16) = v76;
  *(void *)(v75 + 32) = v146;
  *(_WORD *)(v70 + *(int *)(v74 + 56)) = 256;
  sub_22EC78388((uint64_t)v58, v66);
  uint64_t v77 = (uint64_t *)(v70 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26861C8B8) + 36));
  char v78 = v124;
  *uint64_t v77 = v67;
  v77[1] = (uint64_t)v78;
  sub_22EAEFC48(v142, v69, &qword_26861C850);
  uint64_t v79 = sub_22EE7ED20();
  uint64_t v81 = v80;
  uint64_t v82 = (uint64_t)v133;
  uint64_t v83 = (uint64_t)&v133[*(int *)(v127 + 36)];
  sub_22EC7490C(v72, v83);
  char v84 = (uint64_t *)(v83 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268622278) + 36));
  *char v84 = v79;
  v84[1] = v81;
  sub_22EAEFC48(v69, v82, &qword_268622210);
  uint64_t v85 = sub_22EE7ED30();
  uint64_t v87 = v86;
  uint64_t v88 = (uint64_t)v136;
  uint64_t v89 = (uint64_t)&v136[*(int *)(v129 + 36)];
  sub_22EC7500C(v72, v89);
  uint64_t v90 = (uint64_t *)(v89 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268622280) + 36));
  *uint64_t v90 = v85;
  v90[1] = v87;
  sub_22EAEFC48(v82, v88, &qword_268622218);
  uint64_t v91 = sub_22EE7ED40();
  uint64_t v93 = v92;
  uint64_t v94 = (uint64_t)v134;
  uint64_t v95 = (uint64_t)&v134[*(int *)(v130 + 36)];
  uint64_t v96 = sub_22EE7D680();
  uint64_t v97 = (uint64_t)v139;
  *uint64_t v139 = v96;
  *(void *)(v97 + 8) = 0x4020000000000000;
  *(unsigned char *)(v97 + 16) = 0;
  uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_268622288);
  sub_22EC75910(v72, v97 + *(int *)(v98 + 44));
  LOBYTE(v82) = sub_22EE7DE70();
  sub_22EADAD08(v97, v95, &qword_268622208);
  uint64_t v99 = v95 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268622290) + 36);
  *(unsigned char *)uint64_t v99 = v82;
  *(_OWORD *)(v99 + 8) = 0u;
  *(_OWORD *)(v99 + 24) = 0u;
  *(unsigned char *)(v99 + 40) = 1;
  sub_22EADAC74(v97, &qword_268622208);
  uint64_t v100 = (uint64_t *)(v95 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268622298) + 36));
  *uint64_t v100 = v91;
  v100[1] = v93;
  sub_22EAEFC48(v88, v94, &qword_268622220);
  uint64_t v101 = v137;
  sub_22EAEFC48(v94, v137, &qword_268622228);
  uint64_t v102 = v141;
  uint64_t v103 = (uint64_t)v128;
  sub_22EADAD08(v141, (uint64_t)v128, &qword_268622248);
  uint64_t v104 = v138;
  sub_22EADAD08(v101, v138, &qword_268622228);
  uint64_t v105 = v140;
  sub_22EADAD08(v103, v140, &qword_268622248);
  uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686222A0);
  uint64_t v107 = v105 + *(int *)(v106 + 48);
  *(void *)uint64_t v107 = 0;
  *(unsigned char *)(v107 + 8) = 1;
  sub_22EADAD08(v104, v105 + *(int *)(v106 + 64), &qword_268622228);
  sub_22EADAC74(v101, &qword_268622228);
  sub_22EADAC74(v102, &qword_268622248);
  sub_22EADAC74(v104, &qword_268622228);
  return sub_22EADAC74(v103, &qword_268622248);
}

uint64_t sub_22EC74708()
{
  return swift_release();
}

uint64_t sub_22EC74784()
{
  return swift_release();
}

uint64_t sub_22EC74838@<X0>(uint64_t a1@<X8>)
{
  sub_22EE7D5A0();
  uint64_t v2 = sub_22EE7E120();
  uint64_t v4 = v3;
  char v6 = v5;
  uint64_t v8 = v7;
  char v9 = sub_22EE7DE70();
  uint64_t result = sub_22EE7C6E0();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v6 & 1;
  *(void *)(a1 + 24) = v8;
  *(unsigned char *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v11;
  *(void *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = v13;
  *(void *)(a1 + 64) = v14;
  *(unsigned char *)(a1 + 72) = 0;
  return result;
}

double sub_22EC748F0(char a1, double a2)
{
  return dbl_22EE93DB0[(a1 & 1) == 0] * a2;
}

uint64_t sub_22EC7490C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v93 = sub_22EE7CFF0();
  MEMORY[0x270FA5388](v93);
  char v5 = (char *)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_268622320);
  MEMORY[0x270FA5388](v94);
  uint64_t v7 = (char *)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for SubscriptionOfferCopyWriter();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_268622328);
  MEMORY[0x270FA5388](v92);
  uint64_t v12 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268622330);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (char *)(a1 + *(int *)(type metadata accessor for FullSheetSubscriptionOfferView() + 36));
  char v17 = *v16;
  unint64_t v18 = *((void *)v16 + 1);
  LOBYTE(v101) = v17;
  unint64_t v102 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861D440);
  sub_22EE7E9E0();
  if (v99[0] == 1)
  {
    uint64_t v19 = type metadata accessor for SubscriptionOfferViewStyleProtocolConfiguration();
    sub_22EC78230(a1 + *(int *)(v19 + 20), (uint64_t)v10, (void (*)(void))type metadata accessor for Product.TaskState);
    uint64_t v20 = &v10[v8[5]];
    strcpy(v20, "SPECIAL OFFER");
    *((_WORD *)v20 + 7) = -4864;
    uint64_t v21 = &v10[v8[6]];
    *(void *)uint64_t v21 = 0x4C42414C49415641;
    *((void *)v21 + 1) = 0xE900000000000045;
    uint64_t v22 = &v10[v8[7]];
    *(void *)uint64_t v22 = 0x6F4D206E7261654CLL;
    *((void *)v22 + 1) = 0xEA00000000006572;
    uint64_t v23 = &v10[v8[8]];
    *(void *)uint64_t v23 = 0x6269726373627553;
    *((void *)v23 + 1) = 0xE900000000000065;
    sub_22EC78388((uint64_t)v10, (void (*)(void))type metadata accessor for SubscriptionOfferCopyWriter);
    uint64_t v101 = 0x4C42414C49415641;
    unint64_t v102 = 0xE900000000000045;
    sub_22EB051A0();
    uint64_t v24 = sub_22EE7E150();
    uint64_t v26 = v25;
    char v28 = v27 & 1;
    sub_22EE7E030();
    uint64_t v87 = v5;
    uint64_t v29 = sub_22EE7E0F0();
    uint64_t v91 = a2;
    uint64_t v30 = v29;
    uint64_t v88 = v7;
    uint64_t v32 = v31;
    uint64_t v89 = v15;
    char v34 = v33;
    uint64_t v90 = v13;
    swift_release();
    sub_22EB051EC(v24, v26, v28);
    swift_bridgeObjectRelease();
    sub_22EE7DF50();
    uint64_t v35 = sub_22EE7E0A0();
    uint64_t v37 = v36;
    LOBYTE(v26) = v38 & 1;
    sub_22EB051EC(v30, v32, v34 & 1);
    swift_bridgeObjectRelease();
    sub_22EE7E7A0();
    uint64_t v39 = sub_22EE7E7E0();
    swift_release();
    uint64_t v101 = v39;
    uint64_t v40 = sub_22EE7E0B0();
    uint64_t v42 = v41;
    LOBYTE(v32) = v43;
    uint64_t v86 = v44;
    sub_22EB051EC(v35, v37, v26);
    swift_release();
    swift_bridgeObjectRelease();
    LOBYTE(v35) = sub_22EE7DED0();
    sub_22EE7C6E0();
    uint64_t v46 = v45;
    uint64_t v48 = v47;
    uint64_t v50 = v49;
    uint64_t v52 = v51;
    LOBYTE(v37) = sub_22EE7DE60();
    sub_22EE7C6E0();
    uint64_t v54 = v53;
    uint64_t v56 = v55;
    uint64_t v58 = v57;
    uint64_t v60 = v59;
    char v100 = v32 & 1;
    char v98 = 0;
    char v95 = 0;
    uint64_t v61 = sub_22EE7ED70();
    uint64_t v63 = v62;
    uint64_t v64 = v87;
    uint64_t v65 = (char *)v87 + *(int *)(v93 + 20);
    uint64_t v66 = *MEMORY[0x263F19860];
    uint64_t v67 = sub_22EE7D5E0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v67 - 8) + 104))(v65, v66, v67);
    __asm { FMOV            V0.2D, #7.0 }
    *uint64_t v64 = _Q0;
    uint64_t v73 = sub_22EE7E7C0();
    uint64_t v74 = (uint64_t)v88;
    sub_22EC78230((uint64_t)v64, (uint64_t)v88, MEMORY[0x263F19048]);
    uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C820);
    *(void *)(v74 + *(int *)(v75 + 52)) = v73;
    *(_WORD *)(v74 + *(int *)(v75 + 56)) = 256;
    sub_22EC78388((uint64_t)v64, MEMORY[0x263F19048]);
    long long v76 = (uint64_t *)(v74 + *(int *)(v94 + 36));
    *long long v76 = v61;
    v76[1] = v63;
    sub_22EADAD08(v74, (uint64_t)&v12[*(int *)(v92 + 36)], &qword_268622320);
    *(void *)uint64_t v12 = v40;
    *((void *)v12 + 1) = v42;
    v12[16] = v100;
    *(_DWORD *)(v12 + 17) = v101;
    *((_DWORD *)v12 + 5) = *(_DWORD *)((char *)&v101 + 3);
    *((void *)v12 + 3) = v86;
    v12[32] = v35;
    *(_DWORD *)(v12 + 33) = *(_DWORD *)v99;
    *((_DWORD *)v12 + 9) = *(_DWORD *)&v99[3];
    *((void *)v12 + 5) = v46;
    *((void *)v12 + 6) = v48;
    *((void *)v12 + 7) = v50;
    *((void *)v12 + 8) = v52;
    v12[72] = v98;
    *((_DWORD *)v12 + 19) = *(_DWORD *)&v97[3];
    *(_DWORD *)(v12 + 73) = *(_DWORD *)v97;
    v12[80] = v37;
    *((_DWORD *)v12 + 21) = *(_DWORD *)&v96[3];
    *(_DWORD *)(v12 + 81) = *(_DWORD *)v96;
    *((void *)v12 + 11) = v54;
    *((void *)v12 + 12) = v56;
    *((void *)v12 + 13) = v58;
    *((void *)v12 + 14) = v60;
    v12[120] = v95;
    sub_22EADAC74(v74, &qword_268622320);
    LOBYTE(v35) = sub_22EE7DE70();
    uint64_t v77 = (uint64_t)v89;
    sub_22EADAD08((uint64_t)v12, (uint64_t)v89, &qword_268622328);
    uint64_t v78 = v90;
    uint64_t v79 = v77 + *(int *)(v90 + 36);
    *(unsigned char *)uint64_t v79 = v35;
    *(_OWORD *)(v79 + 8) = 0u;
    *(_OWORD *)(v79 + 24) = 0u;
    *(unsigned char *)(v79 + 40) = 1;
    sub_22EADAC74((uint64_t)v12, &qword_268622328);
    uint64_t v80 = v91;
    sub_22EAEFC48(v77, v91, &qword_268622330);
    uint64_t v81 = v80;
    uint64_t v82 = 0;
    uint64_t v83 = v78;
  }
  else
  {
    uint64_t v81 = a2;
    uint64_t v82 = 1;
    uint64_t v83 = v13;
  }
  return __swift_storeEnumTagSinglePayload(v81, v82, 1, v83);
}

uint64_t sub_22EC7500C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v83 = a2;
  uint64_t v3 = sub_22EE7CD80();
  uint64_t v81 = *(void *)(v3 - 8);
  uint64_t v82 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v77 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v65 - v6;
  uint64_t v8 = sub_22EE7D940();
  uint64_t v70 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FullSheetSubscriptionOfferView();
  uint64_t v66 = *(void *)(v11 - 8);
  uint64_t v12 = *(void *)(v66 + 64);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686222E0);
  uint64_t v69 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686222E8);
  uint64_t v78 = *(void *)(v73 - 8);
  MEMORY[0x270FA5388](v73);
  char v17 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686222F0);
  uint64_t v74 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79);
  uint64_t v67 = (char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686222F8) - 8;
  MEMORY[0x270FA5388](v71);
  uint64_t v68 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_268622300) - 8;
  MEMORY[0x270FA5388](v76);
  uint64_t v72 = (uint64_t)&v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_268622308) - 8;
  MEMORY[0x270FA5388](v80);
  uint64_t v75 = (uint64_t)&v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22EC78230(a1, (uint64_t)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for FullSheetSubscriptionOfferView);
  unint64_t v22 = (*(unsigned __int8 *)(v66 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
  uint64_t v23 = swift_allocObject();
  sub_22EC78074((uint64_t)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v23 + v22);
  sub_22EE7EA20();
  sub_22EE7D930();
  uint64_t v24 = sub_22EADDD7C(&qword_268622310, &qword_2686222E0);
  uint64_t v25 = sub_22EC787E4((unint64_t *)&qword_26861F3E8, MEMORY[0x263F19CE8]);
  uint64_t v26 = v17;
  uint64_t v27 = v13;
  uint64_t v28 = v8;
  sub_22EE7E200();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v15, v27);
  sub_22EE7CD70();
  uint64_t v29 = v77;
  sub_22EE7CD50();
  uint64_t v30 = v82;
  uint64_t v31 = *(void (**)(char *, uint64_t))(v81 + 8);
  v31(v7, v82);
  uint64_t v84 = v27;
  uint64_t v85 = v28;
  uint64_t v86 = v24;
  uint64_t v87 = v25;
  swift_getOpaqueTypeConformance2();
  uint64_t v32 = v67;
  uint64_t v33 = v73;
  sub_22EE7E2D0();
  v31(v29, v30);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v26, v33);
  uint64_t v34 = sub_22EE7DF30();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v36 = v74;
  uint64_t v37 = (uint64_t)v68;
  uint64_t v38 = v79;
  (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v68, v32, v79);
  uint64_t v39 = (uint64_t *)(v37 + *(int *)(v71 + 44));
  *uint64_t v39 = KeyPath;
  v39[1] = v34;
  (*(void (**)(char *, uint64_t))(v36 + 8))(v32, v38);
  sub_22EE7E7A0();
  uint64_t v40 = sub_22EE7E7E0();
  swift_release();
  uint64_t v41 = sub_22EE7E7C0();
  uint64_t v42 = v72;
  sub_22EADAD08(v37, v72, &qword_2686222F8);
  char v43 = (uint64_t *)(v42 + *(int *)(v76 + 44));
  *char v43 = v40;
  v43[1] = v41;
  sub_22EADAC74(v37, &qword_2686222F8);
  LOBYTE(v41) = sub_22EE7DEC0();
  sub_22EE7C6E0();
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  uint64_t v51 = v50;
  uint64_t v52 = v75;
  sub_22EADAD08(v42, v75, &qword_268622300);
  uint64_t v53 = v52 + *(int *)(v80 + 44);
  *(unsigned char *)uint64_t v53 = v41;
  *(void *)(v53 + 8) = v45;
  *(void *)(v53 + 16) = v47;
  *(void *)(v53 + 24) = v49;
  *(void *)(v53 + 32) = v51;
  *(unsigned char *)(v53 + 40) = 0;
  sub_22EADAC74(v42, &qword_268622300);
  LOBYTE(v42) = sub_22EE7DE80();
  sub_22EE7C6E0();
  uint64_t v55 = v54;
  uint64_t v57 = v56;
  uint64_t v59 = v58;
  uint64_t v61 = v60;
  uint64_t v62 = v83;
  sub_22EADAD08(v52, v83, &qword_268622308);
  uint64_t v63 = v62 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268622318) + 36);
  *(unsigned char *)uint64_t v63 = v42;
  *(void *)(v63 + 8) = v55;
  *(void *)(v63 + 16) = v57;
  *(void *)(v63 + 24) = v59;
  *(void *)(v63 + 32) = v61;
  *(unsigned char *)(v63 + 40) = 0;
  return sub_22EADAC74(v52, &qword_268622308);
}

uint64_t sub_22EC7582C()
{
  uint64_t v0 = sub_22EE7CA10();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FullSheetSubscriptionOfferView();
  sub_22EB17D08();
  sub_22EE7CA00();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_22EC75910@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = a1;
  uint64_t v80 = a1;
  uint64_t v115 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C8E8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v109 = (uint64_t *)((char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686222A8) - 8;
  MEMORY[0x270FA5388](v112);
  uint64_t v110 = (uint64_t)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686222B0) - 8;
  MEMORY[0x270FA5388](v114);
  uint64_t v111 = (uint64_t)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v113 = (uint64_t)&v79 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686222B8);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v103 = (uint64_t *)((char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686222C0) - 8;
  MEMORY[0x270FA5388](v104);
  uint64_t v102 = (uint64_t)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686222C8) - 8;
  MEMORY[0x270FA5388](v105);
  uint64_t v117 = (uint64_t)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v116 = (uint64_t)&v79 - v14;
  uint64_t v15 = type metadata accessor for SubscriptionOfferCopyWriter();
  uint64_t v16 = (int *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for SubscriptionOfferViewStyleProtocolConfiguration();
  sub_22EC78230(v2 + *(int *)(v19 + 20), (uint64_t)v18, (void (*)(void))type metadata accessor for Product.TaskState);
  uint64_t v20 = &v18[v16[7]];
  strcpy(v20, "SPECIAL OFFER");
  *((_WORD *)v20 + 7) = -4864;
  uint64_t v21 = &v18[v16[8]];
  *(void *)uint64_t v21 = 0x4C42414C49415641;
  *((void *)v21 + 1) = 0xE900000000000045;
  unint64_t v22 = &v18[v16[9]];
  *(void *)unint64_t v22 = 0x6F4D206E7261654CLL;
  *((void *)v22 + 1) = 0xEA00000000006572;
  uint64_t v23 = &v18[v16[10]];
  *(void *)uint64_t v23 = 0x6269726373627553;
  *((void *)v23 + 1) = 0xE900000000000065;
  sub_22EC78388((uint64_t)v18, (void (*)(void))type metadata accessor for SubscriptionOfferCopyWriter);
  strcpy((char *)v176, "SPECIAL OFFER");
  HIWORD(v176[1]) = -4864;
  sub_22EB051A0();
  uint64_t v24 = sub_22EE7E150();
  uint64_t v26 = v25;
  char v28 = v27 & 1;
  sub_22EE7E030();
  uint64_t v29 = sub_22EE7E0F0();
  uint64_t v31 = v30;
  char v33 = v32;
  swift_release();
  LOBYTE(v2) = v33 & 1;
  sub_22EB051EC(v24, v26, v28);
  swift_bridgeObjectRelease();
  sub_22EE7DF50();
  uint64_t v34 = sub_22EE7E0A0();
  uint64_t v36 = v35;
  char v38 = v37 & 1;
  sub_22EB051EC(v29, v31, v2);
  swift_bridgeObjectRelease();
  sub_22EE7E7C0();
  uint64_t v39 = sub_22EE7E7E0();
  swift_release();
  v176[0] = v39;
  uint64_t v40 = sub_22EE7E0B0();
  uint64_t v106 = v41;
  uint64_t v107 = v40;
  uint64_t v108 = v42;
  char v44 = v43 & 1;
  sub_22EB051EC(v34, v36, v38);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v45 = v103;
  uint64_t v46 = v80;
  sub_22EC76458(v80, v103);
  uint64_t v47 = sub_22EE7E7C0();
  uint64_t v48 = v102;
  sub_22EADAD08((uint64_t)v45, v102, &qword_2686222B8);
  *(void *)(v48 + *(int *)(v104 + 44)) = v47;
  sub_22EADAC74((uint64_t)v45, &qword_2686222B8);
  LOBYTE(v47) = sub_22EE7DEC0();
  sub_22EE7C6E0();
  uint64_t v50 = v49;
  uint64_t v52 = v51;
  uint64_t v54 = v53;
  uint64_t v56 = v55;
  uint64_t v57 = v117;
  sub_22EADAD08(v48, v117, &qword_2686222C0);
  uint64_t v58 = v57 + *(int *)(v105 + 44);
  *(unsigned char *)uint64_t v58 = v47;
  *(void *)(v58 + 8) = v50;
  *(void *)(v58 + 16) = v52;
  *(void *)(v58 + 24) = v54;
  *(void *)(v58 + 32) = v56;
  *(unsigned char *)(v58 + 40) = 0;
  sub_22EADAC74(v48, &qword_2686222C0);
  sub_22EAEFC48(v57, v116, &qword_2686222C8);
  sub_22EE7ED70();
  sub_22EE7C9B0();
  uint64_t v105 = v139[9];
  LODWORD(v104) = v140;
  uint64_t v103 = v141;
  LODWORD(v102) = v142;
  uint64_t v101 = v143;
  uint64_t v100 = v144;
  sub_22EE7E7C0();
  uint64_t v59 = sub_22EE7E7E0();
  swift_release();
  uint64_t v60 = sub_22EE7ED70();
  char v78 = 1;
  char v77 = 1;
  sub_22EADBD4C(v176, 0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, v77, 0, v78, v60, v61, v59);
  swift_release();
  uint64_t v81 = v176[1];
  uint64_t v82 = v176[0];
  LOBYTE(v47) = v176[2];
  LOBYTE(v59) = v176[4];
  uint64_t v89 = v176[3];
  uint64_t v90 = v176[5];
  LOBYTE(v48) = v176[6];
  uint64_t v92 = v176[7];
  LOBYTE(v45) = v176[8];
  uint64_t v94 = v176[9];
  LOBYTE(v29) = v176[10];
  char v62 = v176[12];
  uint64_t v99 = v176[13];
  uint64_t v97 = v176[11];
  uint64_t v98 = v176[14];
  sub_22EE7ED70();
  sub_22EE7C9B0();
  uint64_t v91 = v145;
  uint64_t v93 = v147;
  uint64_t v96 = v149;
  uint64_t v95 = v150;
  char v175 = v47;
  char v173 = v59;
  char v171 = v48;
  char v169 = (char)v45;
  char v167 = v29;
  char v165 = v62;
  char v163 = v146;
  char v161 = v148;
  sub_22EE7ED70();
  sub_22EE7C9B0();
  uint64_t v88 = v151;
  int v87 = v152;
  uint64_t v86 = v153;
  int v85 = v154;
  uint64_t v83 = v156;
  uint64_t v84 = v155;
  uint64_t v63 = sub_22EE7D530();
  uint64_t v64 = (uint64_t)v109;
  *uint64_t v109 = v63;
  *(void *)(v64 + 8) = 0x402E000000000000;
  *(unsigned char *)(v64 + 16) = 0;
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C900);
  sub_22EC771E8(v46, (void *)(v64 + *(int *)(v65 + 44)));
  uint64_t v66 = sub_22EE7E7C0();
  uint64_t v67 = v110;
  sub_22EADAD08(v64, v110, &qword_26861C8E8);
  *(void *)(v67 + *(int *)(v112 + 44)) = v66;
  sub_22EADAC74(v64, &qword_26861C8E8);
  sub_22EE7ED70();
  sub_22EE7C9B0();
  uint64_t v68 = v111;
  sub_22EADAD08(v67, v111, &qword_2686222A8);
  uint64_t v69 = (_OWORD *)(v68 + *(int *)(v114 + 44));
  long long v70 = v158;
  *uint64_t v69 = v157;
  v69[1] = v70;
  v69[2] = v159;
  sub_22EADAC74(v67, &qword_2686222A8);
  uint64_t v71 = v113;
  sub_22EAEFC48(v68, v113, &qword_2686222B0);
  uint64_t v73 = v106;
  uint64_t v72 = v107;
  uint64_t v135 = v107;
  uint64_t v136 = v106;
  char v137 = v44;
  uint64_t v138 = v108;
  v139[0] = &v135;
  uint64_t v75 = v116;
  uint64_t v74 = v117;
  sub_22EADAD08(v116, v117, &qword_2686222C8);
  uint64_t v127 = 0;
  char v128 = 1;
  uint64_t v129 = v105;
  char v130 = v104;
  uint64_t v131 = v103;
  char v132 = v102;
  uint64_t v133 = v101;
  uint64_t v134 = v100;
  v139[1] = v74;
  v139[2] = &v127;
  v126[0] = v82;
  v126[1] = v81;
  LOBYTE(v126[2]) = v175;
  *(_DWORD *)((char *)&v126[2] + 1) = *(_DWORD *)v174;
  HIDWORD(v126[2]) = *(_DWORD *)&v174[3];
  v126[3] = v89;
  LOBYTE(v126[4]) = v173;
  *(_DWORD *)((char *)&v126[4] + 1) = *(_DWORD *)v172;
  HIDWORD(v126[4]) = *(_DWORD *)&v172[3];
  v126[5] = v90;
  LOBYTE(v126[6]) = v171;
  HIDWORD(v126[6]) = *(_DWORD *)&v170[3];
  *(_DWORD *)((char *)&v126[6] + 1) = *(_DWORD *)v170;
  v126[7] = v92;
  LOBYTE(v126[8]) = v169;
  HIDWORD(v126[8]) = *(_DWORD *)&v168[3];
  *(_DWORD *)((char *)&v126[8] + 1) = *(_DWORD *)v168;
  v126[9] = v94;
  LOBYTE(v126[10]) = v167;
  HIDWORD(v126[10]) = *(_DWORD *)&v166[3];
  *(_DWORD *)((char *)&v126[10] + 1) = *(_DWORD *)v166;
  v126[11] = v97;
  LOBYTE(v126[12]) = v165;
  HIDWORD(v126[12]) = *(_DWORD *)&v164[3];
  *(_DWORD *)((char *)&v126[12] + 1) = *(_DWORD *)v164;
  v126[13] = v99;
  v126[14] = v98;
  v126[15] = v91;
  LOBYTE(v126[16]) = v163;
  HIDWORD(v126[16]) = *(_DWORD *)&v162[3];
  *(_DWORD *)((char *)&v126[16] + 1) = *(_DWORD *)v162;
  v126[17] = v93;
  LOBYTE(v126[18]) = v161;
  HIDWORD(v126[18]) = *(_DWORD *)&v160[3];
  *(_DWORD *)((char *)&v126[18] + 1) = *(_DWORD *)v160;
  v126[19] = v96;
  v126[20] = v95;
  uint64_t v118 = 0;
  char v119 = 1;
  uint64_t v120 = v88;
  char v121 = v87;
  uint64_t v122 = v86;
  char v123 = v85;
  uint64_t v124 = v84;
  uint64_t v125 = v83;
  v139[3] = v126;
  v139[4] = &v118;
  sub_22EADAD08(v71, v68, &qword_2686222B0);
  v139[5] = v68;
  sub_22EC73554((uint64_t)v139, v115);
  sub_22EADDF0C(v72, v73, v44);
  swift_bridgeObjectRetain();
  sub_22EADAC74(v71, &qword_2686222B0);
  sub_22EADAC74(v75, &qword_2686222C8);
  sub_22EB051EC(v72, v73, v44);
  swift_bridgeObjectRelease();
  sub_22EADAC74(v68, &qword_2686222B0);
  memcpy(v176, v126, 0xA8uLL);
  sub_22EB051FC((uint64_t)v176);
  sub_22EADAC74(v117, &qword_2686222C8);
  sub_22EB051EC(v135, v136, v137);
  return swift_bridgeObjectRelease();
}