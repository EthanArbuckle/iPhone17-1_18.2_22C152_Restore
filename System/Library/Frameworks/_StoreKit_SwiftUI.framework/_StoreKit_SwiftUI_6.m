uint64_t ProductViewStyleConfiguration.Icon.body.getter@<X0>(void *a1@<X8>)
{
  void *v1;

  *a1 = *v1;
  return swift_retain();
}

uint64_t ProductViewStyleConfiguration.state.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ProductViewStyleConfiguration() + 24);

  return sub_22EB36F38(v3, a1);
}

uint64_t ProductViewStyleConfiguration.icon.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + *(int *)(type metadata accessor for ProductViewStyleConfiguration() + 28));

  return swift_retain();
}

uint64_t ProductViewStyleConfiguration.hasCurrentEntitlement.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ProductViewStyleConfiguration() + 32));
}

uint64_t ProductViewStyleConfiguration.descriptionVisibility.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ProductViewStyleConfiguration() + 36));
}

Swift::Void __swiftcall ProductViewStyleConfiguration.purchase()()
{
  if (*v0) {
    (*v0)();
  }
}

double sub_22EE25E0C()
{
  unint64_t v0 = sub_22EE2749C();
  uint64_t v1 = swift_allocObject();
  double result = 0.0;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(void *)(v1 + 48) = 0;
  qword_268627B20 = (uint64_t)sub_22EE27498;
  *(void *)algn_268627B28 = 0;
  qword_268627B30 = (uint64_t)&type metadata for AutomaticProductViewStyle;
  unk_268627B38 = v0;
  qword_268627B40 = v1;
  return result;
}

uint64_t *sub_22EE25E7C()
{
  if (qword_26861B938 != -1) {
    swift_once();
  }
  return &qword_268627B20;
}

uint64_t sub_22EE25EC8@<X0>(uint64_t a1@<X8>)
{
  v2 = sub_22EE25E7C();
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  *(void *)a1 = *v2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v2 + 1);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v4;
  swift_retain();

  return swift_retain();
}

double sub_22EE25F20@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
  uint64_t v4 = a3 + *(int *)(type metadata accessor for ProductViewStyleModifier() + 36);
  *(void *)uint64_t v4 = swift_getKeyPath();
  double result = 0.0;
  *(_OWORD *)(v4 + 8) = 0u;
  *(_OWORD *)(v4 + 24) = 0u;
  *(unsigned char *)(v4 + 40) = 0;
  return result;
}

uint64_t sub_22EE25FBC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t dispatch thunk of ProductViewStyle.makeBody(configuration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

_OWORD *initializeBufferWithCopyOfBuffer for ProductViewStyleConfiguration(_OWORD *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    if (*a2)
    {
      uint64_t v7 = a2[1];
      *(void *)uint64_t v4 = *a2;
      *((void *)v4 + 1) = v7;
      swift_retain();
    }
    else
    {
      *a1 = *(_OWORD *)a2;
    }
    *((unsigned char *)v4 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v9 = a3[6];
    v10 = (void *)((char *)v4 + v9);
    v11 = (void **)((char *)a2 + v9);
    uint64_t v12 = type metadata accessor for Product.TaskState(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v16 = sub_22EE7F780();
      (*(void (**)(void *, void **, uint64_t))(*(void *)(v16 - 8) + 16))(v10, v11, v16);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
        goto LABEL_12;
      }
      v14 = *v11;
      id v15 = v14;
      void *v10 = v14;
    }
    swift_storeEnumTagMultiPayload();
LABEL_12:
    uint64_t v17 = a3[8];
    *(void *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *((unsigned char *)v4 + v17) = *((unsigned char *)a2 + v17);
    *((unsigned char *)v4 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    goto LABEL_13;
  }
  uint64_t v8 = *a2;
  *(void *)uint64_t v4 = *a2;
  uint64_t v4 = (_OWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
LABEL_13:
  swift_retain();
  return v4;
}

uint64_t destroy for ProductViewStyleConfiguration(void *a1, uint64_t a2)
{
  if (*a1) {
    swift_release();
  }
  uint64_t v4 = (id *)((char *)a1 + *(int *)(a2 + 24));
  type metadata accessor for Product.TaskState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v6 = sub_22EE7F780();
    (*(void (**)(id *, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
  }
  else if (!EnumCaseMultiPayload)
  {
  }

  return swift_release();
}

uint64_t initializeWithCopy for ProductViewStyleConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  if (*(void *)a2)
  {
    uint64_t v6 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void **)(a2 + v7);
  uint64_t v10 = type metadata accessor for Product.TaskState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v14 = sub_22EE7F780();
    (*(void (**)(void *, void **, uint64_t))(*(void *)(v14 - 8) + 16))(v8, v9, v14);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
      goto LABEL_10;
    }
    uint64_t v12 = *v9;
    id v13 = v12;
    *uint64_t v8 = v12;
  }
  swift_storeEnumTagMultiPayload();
LABEL_10:
  uint64_t v15 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v15) = *(unsigned char *)(a2 + v15);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ProductViewStyleConfiguration(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  if (*(void *)a1)
  {
    if (v6)
    {
      uint64_t v7 = a2[1];
      *(void *)a1 = v6;
      *(void *)(a1 + 8) = v7;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v6)
  {
    uint64_t v8 = a2[1];
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v8;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)(a1 + v9);
    v11 = (void **)((char *)a2 + v9);
    sub_22EC40DD8(a1 + v9);
    uint64_t v12 = type metadata accessor for Product.TaskState(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v16 = sub_22EE7F780();
      (*(void (**)(void *, void **, uint64_t))(*(void *)(v16 - 8) + 16))(v10, v11, v16);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
        goto LABEL_15;
      }
      uint64_t v14 = *v11;
      id v15 = v14;
      void *v10 = v14;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  *(void *)(a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *(unsigned char *)(a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  return a1;
}

uint64_t initializeWithTake for ProductViewStyleConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  if (*(void *)a2)
  {
    uint64_t v6 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v6;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Product.TaskState(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_22EE7F780();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  uint64_t v12 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for ProductViewStyleConfiguration(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  if (*(void *)a1)
  {
    if (v6)
    {
      uint64_t v7 = a2[1];
      *(void *)a1 = v6;
      *(void *)(a1 + 8) = v7;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v6)
  {
    uint64_t v8 = a2[1];
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v8;
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (char *)a2 + v9;
    sub_22EC40DD8(a1 + v9);
    uint64_t v12 = type metadata accessor for Product.TaskState(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_22EE7F780();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v10, v11, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
  }
  *(void *)(a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  swift_release();
  uint64_t v14 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *(unsigned char *)(a1 + v14) = *((unsigned char *)a2 + v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for ProductViewStyleConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EE267AC);
}

uint64_t sub_22EE267AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Product.TaskState(0);
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
  else
  {
    unint64_t v11 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ProductViewStyleConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EE26850);
}

void sub_22EE26850(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for Product.TaskState(0);
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a4 + 24);
    __swift_storeEnumTagSinglePayload(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
}

uint64_t sub_22EE268DC()
{
  uint64_t result = type metadata accessor for Product.TaskState(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ProductViewStyleConfiguration.Icon()
{
  return &type metadata for ProductViewStyleConfiguration.Icon;
}

uint64_t sub_22EE269A4()
{
  return MEMORY[0x263F1B718];
}

uint64_t sub_22EE269B0()
{
  return swift_getWitnessTable();
}

uint64_t sub_22EE26A44()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_22EE26ADC(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= 0xFE) {
    unsigned int v7 = 254;
  }
  else {
    unsigned int v7 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 41;
    unsigned int v9 = (a2 - v7 + 255) >> (8 * v8);
    if (v8 < 4) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      unsigned int v11 = 4;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v10 < 0x100) {
      unsigned int v11 = 1;
    }
    if (v10 >= 2) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    switch(v12)
    {
      case 1:
        int v13 = a1[v8];
        if (!a1[v8]) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v13 = *(unsigned __int16 *)&a1[v8];
        if (*(_WORD *)&a1[v8]) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x22EE26C2CLL);
      case 4:
        int v13 = *(_DWORD *)&a1[v8];
        if (!v13) {
          break;
        }
LABEL_22:
        int v15 = (v13 - 1) << (8 * v8);
        if (v8 >= 4) {
          int v15 = 0;
        }
        if (((v6 + 7) & 0xFFFFFFF8) == 0xFFFFFFD8) {
          int v16 = *a1;
        }
        else {
          int v16 = *(_DWORD *)a1;
        }
        return v7 + (v16 | v15) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0xFE) {
    return __swift_getEnumTagSinglePayload((uint64_t)a1, v5, v4);
  }
  unsigned int v17 = *(unsigned __int8 *)(((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8) + 40);
  if (v17 > 1) {
    return (v17 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

double sub_22EE26C40(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7 <= 0xFE) {
    unsigned int v8 = 254;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  size_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 41;
  char v11 = 8 * v10;
  if (v8 >= a3)
  {
    int v15 = 0;
  }
  else
  {
    unsigned int v12 = (a3 - v8 + 255) >> v11;
    if (v10 <= 3) {
      unsigned int v13 = v12 + 1;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
  }
  if (v8 < a2)
  {
    unsigned int v16 = ~v8 + a2;
    unsigned int v17 = (~(_BYTE)v8 + a2);
    if (v10 < 4) {
      int v18 = (v16 >> v11) + 1;
    }
    else {
      int v18 = 1;
    }
    if (v10 >= 4) {
      unsigned int v19 = v16;
    }
    else {
      unsigned int v19 = v17;
    }
    bzero(a1, v10);
    if (v10 == 1) {
      *a1 = v19;
    }
    else {
      *(_DWORD *)a1 = v19;
    }
    switch(v15)
    {
      case 1:
        a1[v10] = v18;
        return result;
      case 2:
        *(_WORD *)&a1[v10] = v18;
        return result;
      case 3:
        goto LABEL_46;
      case 4:
        *(_DWORD *)&a1[v10] = v18;
        return result;
      default:
        return result;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return result;
      }
      goto LABEL_34;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return result;
      }
      goto LABEL_34;
    case 3:
LABEL_46:
      __break(1u);
      JUMPOUT(0x22EE26E50);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_33;
    default:
LABEL_33:
      if (a2)
      {
LABEL_34:
        if (v7 < 0xFE)
        {
          unint64_t v21 = (unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8;
          if (a2 > 0xFE)
          {
            double result = 0.0;
            *(_OWORD *)(v21 + 24) = 0u;
            *(_OWORD *)(v21 + 8) = 0u;
            *(unsigned char *)(v21 + 40) = 0;
            *(void *)unint64_t v21 = (a2 - 255);
          }
          else
          {
            *(unsigned char *)(v21 + 40) = -(char)a2;
          }
        }
        else
        {
          __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v7, v6);
        }
      }
      return result;
  }
}

uint64_t sub_22EE26E78()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EE26EBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v26 = a3;
  uint64_t v5 = *(uint64_t (**)())(a2 + 16);
  uint64_t v6 = *((void *)v5 - 1);
  MEMORY[0x270FA5388](a1);
  unsigned int v8 = (char *)&KeyPath - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getWitnessTable();
  sub_22EE7D9A0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268627BD8);
  uint64_t v9 = sub_22EE7CEE0();
  uint64_t v24 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  char v11 = (char *)&KeyPath - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  int v14 = (char *)&KeyPath - v13;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t (*)()))(v6 + 16))(v8, v3, v5);
  int v15 = (long long *)(v3 + *(int *)(a2 + 36));
  long long v16 = v15[1];
  long long v40 = *v15;
  v41[0] = v16;
  *(_OWORD *)((char *)v41 + 9) = *(long long *)((char *)v15 + 25);
  sub_22EB36FFC((uint64_t)&v40, (uint64_t)v42);
  sub_22EB37064((uint64_t)v42, (void (*)(void, void, void, void, void, void))sub_22EB336F8);
  sub_22EB17230();
  uint64_t v17 = v34;
  sub_22EB37064((uint64_t)&v40, (void (*)(void, void, void, void, void, void))sub_22EB19A34);
  v38[0] = v32;
  v38[1] = v33;
  uint64_t v39 = v17;
  sub_22ED89534((uint64_t)v8, (uint64_t)v38, v5, *(uint64_t (**)())(a2 + 24), (uint64_t (**)())v35);
  uint64_t v37 = v36;
  long long v29 = v35[0];
  long long v30 = v35[1];
  uint64_t v31 = v36;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_22EE7E220();
  swift_release();
  swift_release();
  sub_22EB051FC((uint64_t)&v37);
  uint64_t v19 = sub_22EADDD7C(&qword_268627BE0, &qword_268627BD8);
  uint64_t v27 = WitnessTable;
  uint64_t v28 = v19;
  uint64_t v20 = swift_getWitnessTable();
  sub_22EB69440(v11, v9, v20);
  unint64_t v21 = *(void (**)(char *, uint64_t))(v24 + 8);
  v21(v11, v9);
  sub_22EB69440(v14, v9, v20);
  return ((uint64_t (*)(char *, uint64_t))v21)(v14, v9);
}

uint64_t sub_22EE27234@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v6 = *v2;
  uint64_t v8 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627BF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(a2, a1, v9);
  uint64_t v10 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268627C00) + 36);
  *(void *)uint64_t v10 = KeyPath;
  *(void *)(v10 + 8) = v6;
  *(_OWORD *)(v10 + 16) = *(_OWORD *)(v2 + 1);
  *(void *)(v10 + 32) = v8;
  *(void *)(v10 + 40) = v7;
  swift_retain();

  return swift_retain();
}

uint64_t sub_22EE27308@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22EE27234(a1, a2);
}

unint64_t sub_22EE27344()
{
  unint64_t result = qword_268627BE8;
  if (!qword_268627BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627BE8);
  }
  return result;
}

ValueMetadata *_s30ProductViewStyleEnvironmentKeyOMa()
{
  return &_s30ProductViewStyleEnvironmentKeyON;
}

uint64_t sub_22EE273A0()
{
  return swift_getWitnessTable();
}

unint64_t sub_22EE2749C()
{
  unint64_t result = qword_268627BF0;
  if (!qword_268627BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627BF0);
  }
  return result;
}

uint64_t sub_22EE274E8()
{
  if (*(void *)(v0 + 16))
  {
    swift_release();
    swift_release();
  }

  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for AnyProductViewStyleModifier()
{
  return &type metadata for AnyProductViewStyleModifier;
}

uint64_t sub_22EE27540()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_22EE27560()
{
  unint64_t result = qword_268627C08;
  if (!qword_268627C08)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268627C00);
    sub_22EADDD7C(&qword_268627C10, &qword_268627BF8);
    sub_22EADDD7C(&qword_268627BE0, &qword_268627BD8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627C08);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_4_39()
{
  return v0;
}

uint64_t *sub_22EE27650(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_22EE7F780();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    int v14 = (char *)v4 + v13;
    int v15 = (char *)a2 + v13;
    uint64_t v16 = sub_22EE7F540();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t v17 = a3[7];
    int v18 = (char *)v4 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = sub_22EE7F670();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  }
  return v4;
}

uint64_t sub_22EE277D8(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_22EE7F780();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = sub_22EE7F540();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = a1 + a2[7];
  uint64_t v9 = sub_22EE7F670();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);

  return v10(v8, v9);
}

void *sub_22EE278D8(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_22EE7F780();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  int v14 = (char *)a2 + v12;
  uint64_t v15 = sub_22EE7F540();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = a3[7];
  uint64_t v17 = (char *)a1 + v16;
  int v18 = (char *)a2 + v16;
  uint64_t v19 = sub_22EE7F670();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  return a1;
}

void *sub_22EE27A10(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22EE7F780();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_22EE7F540();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_22EE7F670();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

_OWORD *sub_22EE27B44(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22EE7F780();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_22EE7F540();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_22EE7F670();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  return a1;
}

void *sub_22EE27C60(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_22EE7F780();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_22EE7F540();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_22EE7F670();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t sub_22EE27D84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EE27D98);
}

uint64_t sub_22EE27D98(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_22EE7F780();
    OUTLINED_FUNCTION_10();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a3[5];
    }
    else
    {
      sub_22EE7F540();
      OUTLINED_FUNCTION_10();
      if (*(_DWORD *)(v13 + 84) == a2)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a3[6];
      }
      else
      {
        uint64_t v10 = sub_22EE7F670();
        uint64_t v11 = a3[7];
      }
    }
    return __swift_getEnumTagSinglePayload(a1 + v11, a2, v10);
  }
}

uint64_t sub_22EE27E68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EE27E7C);
}

uint64_t sub_22EE27E7C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_22EE7F780();
    OUTLINED_FUNCTION_10();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a4[5];
    }
    else
    {
      sub_22EE7F540();
      OUTLINED_FUNCTION_10();
      if (*(_DWORD *)(v13 + 84) == a3)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a4[6];
      }
      else
      {
        uint64_t v10 = sub_22EE7F670();
        uint64_t v11 = a4[7];
      }
    }
    return __swift_storeEnumTagSinglePayload(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for SubscriptionOfferViewNoCodeOfferCard(uint64_t a1)
{
  return sub_22EAD01C0(a1, (uint64_t *)&unk_268627C18);
}

uint64_t sub_22EE27F68()
{
  uint64_t result = sub_22EE7F780();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_22EE7F540();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_22EE7F670();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_22EE28078()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EE28094@<X0>(uint64_t a1@<X8>)
{
  if (qword_26861B6E8 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_26864C2D8;
  *(void *)a1 = sub_22EE7D530();
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627C68);
  return sub_22EE2811C(v1, a1 + *(int *)(v4 + 44));
}

uint64_t sub_22EE2811C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627C70);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627C78);
  uint64_t v8 = v7 - 8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v23[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = &v23[-v12 - 8];
  sub_22EE283BC((uint64_t)v6);
  uint64_t v14 = sub_22EE7ED70();
  uint64_t v16 = v15;
  sub_22EAEFF0C((uint64_t)v6, (uint64_t)v10, &qword_268627C70);
  uint64_t v17 = &v10[*(int *)(v8 + 44)];
  *(_OWORD *)uint64_t v17 = xmmword_22EE8B6E0;
  *((_OWORD *)v17 + 1) = xmmword_22EE8B6E0;
  *((_OWORD *)v17 + 2) = xmmword_22EE8B6E0;
  *((_OWORD *)v17 + 3) = xmmword_22EE8B6E0;
  *((_OWORD *)v17 + 4) = xmmword_22EE8B6E0;
  *((void *)v17 + 10) = 0x4054000000000000;
  *((_WORD *)v17 + 44) = 0;
  *((void *)v17 + 12) = v14;
  *((void *)v17 + 13) = v16;
  sub_22EADAC74((uint64_t)v6, &qword_268627C70);
  sub_22EAEFC48((uint64_t)v10, (uint64_t)v13, &qword_268627C78);
  uint64_t v18 = sub_22EE7D680();
  if (qword_26861B6F0 != -1) {
    swift_once();
  }
  uint64_t v19 = qword_26864C2E0;
  sub_22EE28F38(a1, (uint64_t)v23);
  v24[200] = 0;
  memcpy(&v24[7], v23, 0xC0uLL);
  sub_22EAEFF0C((uint64_t)v13, (uint64_t)v10, &qword_268627C78);
  sub_22EAEFF0C((uint64_t)v10, a2, &qword_268627C78);
  uint64_t v20 = (void *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268627C80) + 48));
  v25[0] = v18;
  v25[1] = v19;
  LOBYTE(v25[2]) = 0;
  memcpy((char *)&v25[2] + 1, v24, 0xC7uLL);
  LOWORD(v25[27]) = 256;
  memcpy(v20, v25, 0xDAuLL);
  sub_22EE2A26C((uint64_t)v25);
  sub_22EADAC74((uint64_t)v13, &qword_268627C78);
  v26[0] = v18;
  v26[1] = v19;
  char v27 = 0;
  memcpy(v28, v24, sizeof(v28));
  __int16 v29 = 256;
  sub_22EE2A2FC((uint64_t)v26);
  return sub_22EADAC74((uint64_t)v10, &qword_268627C78);
}

uint64_t sub_22EE283BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v94 = a1;
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627C88);
  MEMORY[0x270FA5388](v76);
  v77 = (char *)&v73 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v78 = (uint64_t)&v73 - v3;
  uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627C90);
  MEMORY[0x270FA5388](v93);
  uint64_t v75 = (uint64_t)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v79 = (uint64_t)&v73 - v6;
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627C98);
  MEMORY[0x270FA5388](v91);
  uint64_t v92 = (uint64_t)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_22EE7E750();
  uint64_t v84 = *(void *)(v8 - 8);
  uint64_t v85 = v8;
  MEMORY[0x270FA5388](v8);
  v86 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_22EE7E8C0();
  uint64_t v82 = *(void *)(v10 - 8);
  uint64_t v83 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_22EE7C530();
  uint64_t v80 = *(void *)(v13 - 8);
  uint64_t v81 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627CA0);
  MEMORY[0x270FA5388](v16 - 8);
  v88 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627CA8);
  MEMORY[0x270FA5388](v90);
  uint64_t v87 = (uint64_t)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v89 = (uint64_t)&v73 - v20;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861FF98);
  MEMORY[0x270FA5388](v21 - 8);
  v23 = (char *)&v73 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861FFA0);
  MEMORY[0x270FA5388](v24 - 8);
  uint64_t v26 = (char *)&v73 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  __int16 v29 = (char *)&v73 - v28;
  uint64_t v30 = sub_22EE7C2B0();
  uint64_t v74 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  long long v32 = (char *)&v73 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22EE7F730();
  uint64_t v33 = sub_22EE7F720();
  if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v33) == 1)
  {
    sub_22EADAC74((uint64_t)v23, &qword_26861FF98);
    __swift_storeEnumTagSinglePayload((uint64_t)v29, 1, 1, v30);
  }
  else
  {
    sub_22EE7F710();
    (*(void (**)(char *, uint64_t))(*(void *)(v33 - 8) + 8))(v23, v33);
    if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, v30) != 1)
    {
      uint64_t v65 = v74;
      (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v32, v29, v30);
      (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v26, v32, v30);
      __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v30);
      uint64_t v67 = v76;
      uint64_t v66 = (uint64_t)v77;
      v68 = &v77[*(int *)(v76 + 56)];
      *(void *)v68 = swift_getKeyPath();
      v68[8] = 0;
      uint64_t v69 = v66 + *(int *)(v67 + 52);
      *(_WORD *)uint64_t v69 = 1;
      *(unsigned char *)(v69 + 16) = 1;
      sub_22EAEFC48((uint64_t)v26, v66, &qword_26861FFA0);
      uint64_t v70 = v78;
      sub_22EAEFC48(v66, v78, &qword_268627C88);
      uint64_t v71 = v75;
      sub_22EAEFF0C(v70, v75, &qword_268627C88);
      sub_22EADAC74(v70, &qword_268627C88);
      uint64_t v72 = v79;
      sub_22EAEFC48(v71, v79, &qword_268627C90);
      sub_22EAEFF0C(v72, v92, &qword_268627C90);
      swift_storeEnumTagMultiPayload();
      sub_22EE2A668();
      sub_22EE2A72C();
      sub_22EE7D800();
      sub_22EADAC74(v72, &qword_268627C90);
      return (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v32, v30);
    }
  }
  sub_22EADAC74((uint64_t)v29, &qword_26861FFA0);
  if (qword_26861B6D0 != -1) {
    swift_once();
  }
  uint64_t v34 = v81;
  uint64_t v35 = __swift_project_value_buffer(v81, (uint64_t)qword_26864C290);
  (*(void (**)(char *, uint64_t, uint64_t))(v80 + 16))(v15, v35, v34);
  sub_22EE7E900();
  uint64_t v37 = v82;
  uint64_t v36 = v83;
  (*(void (**)(char *, void, uint64_t))(v82 + 104))(v12, *MEMORY[0x263F1B4B8], v83);
  uint64_t v81 = sub_22EE7E8E0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v12, v36);
  char v38 = sub_22EE7DE70();
  sub_22EE7C6E0();
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v47 = sub_22EE7ED70();
  uint64_t v49 = v48;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861C8A8);
  uint64_t v50 = swift_allocObject();
  *(_OWORD *)(v50 + 16) = xmmword_22EE881C0;
  uint64_t v51 = *MEMORY[0x263F1B388];
  uint64_t v52 = v85;
  v53 = *(void (**)(char *, uint64_t, uint64_t))(v84 + 104);
  v54 = v86;
  v53(v86, v51, v85);
  *(void *)(v50 + 32) = MEMORY[0x230FABB80](v54, 0.819607843, 0.843137255, 0.858823529, 1.0);
  v53(v54, v51, v52);
  *(void *)(v50 + 40) = MEMORY[0x230FABB80](v54, 0.57254902, 0.6, 0.62745098, 1.0);
  v96[0] = v50;
  sub_22EE7FC80();
  MEMORY[0x230FABFE0](v96[0]);
  sub_22EE7CC70();
  v96[0] = v81;
  v96[1] = 0;
  LOWORD(v96[2]) = 1;
  LOBYTE(v96[3]) = v38;
  v96[4] = v40;
  v96[5] = v42;
  v96[6] = v44;
  v96[7] = v46;
  LOBYTE(v96[8]) = 0;
  LOBYTE(v96[9]) = 0;
  v96[10] = v47;
  v96[11] = v49;
  v96[12] = v96[17];
  *(_OWORD *)&v96[13] = v97;
  *(_OWORD *)&v96[15] = v98;
  memcpy(v95, v96, sizeof(v95));
  if (qword_26861B6B8 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268627CB0);
  sub_22EE2A44C();
  uint64_t v55 = (uint64_t)v88;
  sub_22EE7E4C0();
  swift_bridgeObjectRelease();
  sub_22EE2A628((uint64_t)v96);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v57 = sub_22EE7E7C0();
  id v58 = objc_msgSend(self, sel_systemGray5Color);
  uint64_t v59 = MEMORY[0x230FABA70](v58);
  v95[0] = v57;
  v95[1] = v59;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861C2D0);
  sub_22EAEE58C(&qword_26861C2D8, &qword_26861C2D0, (void (*)(void))sub_22EAEE550);
  sub_22EADDD7C(&qword_26861C2F8, &qword_26861C2D0);
  v95[0] = sub_22EE7E860();
  uint64_t v60 = sub_22EE7C9C0();
  uint64_t v61 = v87;
  sub_22EAEFF0C(v55, v87, &qword_268627CA0);
  v62 = (uint64_t *)(v61 + *(int *)(v90 + 36));
  uint64_t *v62 = KeyPath;
  v62[1] = v60;
  sub_22EADAC74(v55, &qword_268627CA0);
  uint64_t v63 = v89;
  sub_22EAEFC48(v61, v89, &qword_268627CA8);
  sub_22EAEFF0C(v63, v92, &qword_268627CA8);
  swift_storeEnumTagMultiPayload();
  sub_22EE2A668();
  sub_22EE2A72C();
  sub_22EE7D800();
  return sub_22EADAC74(v63, &qword_268627CA8);
}

uint64_t sub_22EE28F38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a1;
  uint64_t v36 = sub_22EE7C220();
  uint64_t v3 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __src[0] = sub_22EE7F2D0();
  __src[1] = v6;
  sub_22EB051A0();
  uint64_t v7 = sub_22EE7E150();
  uint64_t v9 = v8;
  char v11 = v10 & 1;
  sub_22EE7E040();
  uint64_t v12 = sub_22EE7E0F0();
  uint64_t v37 = v13;
  uint64_t v38 = v12;
  char v15 = v14;
  uint64_t v39 = v16;
  swift_release();
  char v17 = v15 & 1;
  sub_22EB051EC(v7, v9, v11);
  swift_bridgeObjectRelease();
  uint64_t v18 = type metadata accessor for SubscriptionOfferViewNoCodeCardHeader(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v35 + *(int *)(v18 + 20), v36);
  uint64_t v19 = sub_22EE7E140();
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  char v25 = v24 & 1;
  uint64_t v26 = sub_22EE7ED80();
  LOBYTE(v34) = v25;
  sub_22EADBE40(__src, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, v26, v27, v19, SHIDWORD(v19), v21, v34,
    v23,
    v35,
    v36,
    v37,
    v38,
    v39,
    v40[0],
    v40[1],
    SHIDWORD(v40[1]),
    v40[2],
    v40[3],
    v40[4],
    v40[5],
    v40[6],
    v40[7],
    v40[8],
    v40[9],
    v40[10],
    v40[11],
    v40[12],
    v40[13],
    v40[14],
    v40[15],
    v40[16],
    v40[17],
    v40[18],
    v40[19],
    v41[0],
    v41[1],
    v41[2],
    v41[3],
    v41[4],
    v41[5],
    v41[6],
    v41[7],
    v41[8]);
  sub_22EB051EC(v19, v21, v25);
  swift_bridgeObjectRelease();
  memcpy(v40, __src, 0x90uLL);
  sub_22EE7DF00();
  sub_22EE7DF70();
  uint64_t v28 = sub_22EE7DFD0();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  memcpy(v41, v40, 0x90uLL);
  v41[18] = KeyPath;
  v41[19] = v28;
  char v43 = v17;
  memcpy((void *)(a2 + 32), v41, 0xA0uLL);
  char v30 = v43;
  *(_DWORD *)(a2 + 17) = *(_DWORD *)v42;
  *(_DWORD *)(a2 + 20) = *(_DWORD *)&v42[3];
  uint64_t v32 = v37;
  uint64_t v31 = v38;
  *(void *)a2 = v38;
  *(void *)(a2 + 8) = v32;
  *(unsigned char *)(a2 + 16) = v30;
  *(void *)(a2 + 24) = v39;
  memcpy(__src, v40, 0x90uLL);
  __src[18] = KeyPath;
  __src[19] = v28;
  sub_22EADDF0C(v31, v32, v17);
  swift_bridgeObjectRetain();
  sub_22EE2A394((uint64_t)v41);
  sub_22EE2A3F0((uint64_t)__src);
  sub_22EB051EC(v31, v32, v17);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22EE2921C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v19 = a1;
  uint64_t v18 = sub_22EE7F6E0();
  uint64_t v1 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_22EE7C220();
  uint64_t v16 = *(void *)(v4 - 8);
  uint64_t v17 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = _s15PricePropertiesVMa(0);
  uint64_t v8 = v7 - 8;
  MEMORY[0x270FA5388](v7);
  char v10 = (uint64_t *)((char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for SubscriptionOfferViewNoCodeOfferCard(0);
  uint64_t v11 = sub_22EE7F600();
  uint64_t v13 = v12;
  sub_22EE7F5E0();
  sub_22EE7F650();
  uint64_t v14 = sub_22EE7F5F0();
  uint64_t *v10 = v11;
  v10[1] = v13;
  *(uint64_t *)((char *)v10 + *(int *)(v8 + 36)) = v14;
  sub_22EE7F2F0();
  sub_22EE7F480();
  sub_22ED905C4();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v18);
  sub_22ECE7CA4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v6, v17);
  return sub_22EE29B3C((uint64_t)v10, (void (*)(void))_s15PricePropertiesVMa);
}

uint64_t sub_22EE29490@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_22EE7D680();
  if (qword_26861B6E8 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_26864C2D8;
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627C28);
  return sub_22EE2951C(v1, a1 + *(int *)(v5 + 44));
}

uint64_t sub_22EE2951C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v65 = a2;
  uint64_t v63 = (char *)sub_22EE7EBC0();
  uint64_t v3 = *((void *)v63 - 1);
  MEMORY[0x270FA5388](v63);
  uint64_t v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627C30);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627C38);
  uint64_t v10 = v9 - 8;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  char v15 = (char *)&v57 - v14;
  uint64_t v16 = type metadata accessor for SubscriptionOfferViewNoCodeCardHeader(0);
  uint64_t v17 = v16 - 8;
  MEMORY[0x270FA5388](v16);
  uint64_t v64 = (uint64_t)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v57 - v20;
  uint64_t v22 = a1 + *(int *)(type metadata accessor for SubscriptionOfferViewNoCodeOfferCard(0) + 20);
  uint64_t v23 = sub_22EE7F780();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  uint64_t v24 = *(int *)(v17 + 28);
  v62 = v21;
  sub_22EE2921C((uint64_t)&v21[v24]);
  sub_22EE7EBB0();
  uint64_t v25 = (uint64_t)v63;
  (*(void (**)(char *, char *, char *))(v3 + 16))(v8, v5, v63);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v25);
  LODWORD(v22) = sub_22EE7DA10();
  LOBYTE(v17) = sub_22EE7DE70();
  sub_22EAEFF0C((uint64_t)v8, (uint64_t)v12, &qword_268627C30);
  uint64_t v26 = &v12[*(int *)(v10 + 44)];
  *(_DWORD *)uint64_t v26 = v22;
  v26[4] = v17;
  sub_22EADAC74((uint64_t)v8, &qword_268627C30);
  uint64_t v27 = (uint64_t)v12;
  uint64_t v63 = v15;
  sub_22EAEFC48((uint64_t)v12, (uint64_t)v15, &qword_268627C38);
  sub_22ED9239C();
  if (qword_26861B690 != -1) {
    swift_once();
  }
  id v28 = (id)qword_26864BFA0;
  uint64_t v29 = sub_22EE7E120();
  uint64_t v31 = v30;
  char v33 = v32 & 1;
  sub_22EE7E030();
  uint64_t v34 = sub_22EE7E0F0();
  uint64_t v36 = v35;
  char v38 = v37;
  swift_release();
  sub_22EB051EC(v29, v31, v33);
  swift_bridgeObjectRelease();
  int v66 = sub_22EE7DA20();
  uint64_t v60 = sub_22EE7E0B0();
  uint64_t v61 = v39;
  uint64_t v41 = v40;
  char v43 = v42;
  sub_22EB051EC(v34, v36, v38 & 1);
  swift_bridgeObjectRelease();
  if (qword_26861B6F8 != -1) {
    swift_once();
  }
  char v44 = v43 & 1;
  long long v59 = xmmword_26864C2E8;
  uint64_t v57 = unk_26864C300;
  uint64_t v58 = qword_26864C2F8;
  char v45 = sub_22EE7DE70();
  uint64_t v46 = (uint64_t)v62;
  uint64_t v47 = v64;
  sub_22EE29AD8((uint64_t)v62, v64);
  uint64_t v48 = (uint64_t)v63;
  uint64_t v49 = v27;
  sub_22EAEFF0C((uint64_t)v63, v27, &qword_268627C38);
  uint64_t v50 = v65;
  sub_22EE29AD8(v47, v65);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627C40);
  sub_22EAEFF0C(v49, v50 + *(int *)(v51 + 48), &qword_268627C38);
  uint64_t v52 = v50 + *(int *)(v51 + 64);
  uint64_t v54 = v60;
  uint64_t v53 = v61;
  *(void *)uint64_t v52 = v60;
  *(void *)(v52 + 8) = v41;
  *(unsigned char *)(v52 + 16) = v44;
  *(void *)(v52 + 24) = v53;
  *(unsigned char *)(v52 + 32) = v45;
  *(_OWORD *)(v52 + 40) = v59;
  uint64_t v55 = v57;
  *(void *)(v52 + 56) = v58;
  *(void *)(v52 + 64) = v55;
  *(unsigned char *)(v52 + 72) = 0;
  *(_WORD *)(v52 + 73) = 256;
  sub_22EADDF0C(v54, v41, v44);
  swift_bridgeObjectRetain();
  sub_22EADAC74(v48, &qword_268627C38);
  sub_22EE29B3C(v46, (void (*)(void))type metadata accessor for SubscriptionOfferViewNoCodeCardHeader);
  sub_22EB051EC(v54, v41, v44);
  swift_bridgeObjectRelease();
  sub_22EADAC74(v49, &qword_268627C38);
  return sub_22EE29B3C(v47, (void (*)(void))type metadata accessor for SubscriptionOfferViewNoCodeCardHeader);
}

uint64_t type metadata accessor for SubscriptionOfferViewNoCodeCardHeader(uint64_t a1)
{
  return sub_22EAD01C0(a1, (uint64_t *)&unk_268627C48);
}

uint64_t sub_22EE29AD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SubscriptionOfferViewNoCodeCardHeader(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22EE29B3C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_2_0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t *sub_22EE29B94(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_22EE7F780();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_22EE7C220();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_22EE29C9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22EE7F780();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_22EE7C220();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t sub_22EE29D44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7F780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_22EE7C220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_22EE29DFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7F780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_22EE7C220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_22EE29EB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7F780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_22EE7C220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_22EE29F6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7F780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_22EE7C220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_22EE2A024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EE2A038);
}

uint64_t sub_22EE2A038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_22EE7F780();
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    uint64_t v8 = sub_22EE7C220();
    uint64_t v9 = a1 + *(int *)(a3 + 20);
  }

  return __swift_getEnumTagSinglePayload(v9, a2, v8);
}

uint64_t sub_22EE2A0B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EE2A0C8);
}

uint64_t sub_22EE2A0C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_22EE7F780();
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    uint64_t v10 = sub_22EE7C220();
    uint64_t v11 = a1 + *(int *)(a4 + 20);
  }

  return __swift_storeEnumTagSinglePayload(v11, a2, a2, v10);
}

uint64_t sub_22EE2A14C()
{
  uint64_t result = sub_22EE7F780();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_22EE7C220();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_22EE2A214()
{
  return sub_22EADDD7C(&qword_268627C58, &qword_268627C60);
}

uint64_t sub_22EE2A250()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EE2A26C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  char v4 = *(unsigned char *)(a1 + 72);
  sub_22EADDF0C(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRetain();
  sub_22EADDF0C(v2, v3, v4);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_22EE2A2FC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  char v4 = *(unsigned char *)(a1 + 72);
  sub_22EB051EC(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRelease();
  sub_22EB051EC(v2, v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

uint64_t sub_22EE2A394(uint64_t a1)
{
  return a1;
}

uint64_t sub_22EE2A3F0(uint64_t a1)
{
  return a1;
}

unint64_t sub_22EE2A44C()
{
  unint64_t result = qword_268627CB8;
  if (!qword_268627CB8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268627CB0);
    sub_22EE2A524(&qword_268627CC0, &qword_268627CC8, (void (*)(void))sub_22EE2A5AC, (void (*)(void))sub_22EE0F404);
    sub_22EADDD7C(&qword_268627CE0, &qword_268627CE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627CB8);
  }
  return result;
}

uint64_t sub_22EE2A524(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22EE2A5AC()
{
  unint64_t result = qword_268627CD0;
  if (!qword_268627CD0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268627CD8);
    sub_22EB319F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627CD0);
  }
  return result;
}

uint64_t sub_22EE2A628(uint64_t a1)
{
  return a1;
}

unint64_t sub_22EE2A668()
{
  unint64_t result = qword_268627CF0;
  if (!qword_268627CF0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268627C90);
    sub_22EADDD7C(&qword_268627CF8, &qword_268627C88);
    sub_22EADDD7C(&qword_268627D00, &qword_268627D08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627CF0);
  }
  return result;
}

unint64_t sub_22EE2A72C()
{
  unint64_t result = qword_268627D10;
  if (!qword_268627D10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268627CA8);
    sub_22EE2A524(&qword_268627D18, &qword_268627CA0, (void (*)(void))sub_22EE2A44C, (void (*)(void))sub_22EBDE744);
    sub_22EADDD7C(&qword_268627D20, &qword_268627D28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627D10);
  }
  return result;
}

uint64_t sub_22EE2A80C()
{
  return sub_22EADDD7C(&qword_268627D30, qword_268627D38);
}

uint64_t sub_22EE2A848(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_0_0();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = *(void (**)(void))(v5 + 16);
  OUTLINED_FUNCTION_1_37();
  v8();
  if (swift_dynamicCast())
  {
    uint64_t inited = v11;
  }
  else
  {
    OUTLINED_FUNCTION_1_37();
    v8();
    if ((swift_dynamicCast() & 1) == 0)
    {
      type metadata accessor for SubscriptionStoreControlStyleBox();
      return sub_22EE2AAA8(a1);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_268622038);
    uint64_t inited = swift_initStaticObject();
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, a2);
  return inited;
}

uint64_t sub_22EE2A9B8@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  (*(void (**)(void *__return_ptr))(*(void *)a1 + 80))(v10);
  __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  OUTLINED_FUNCTION_0_0();
  __n128 v4 = MEMORY[0x270FA5388](v3);
  (*(void (**)(char *, __n128))(v6 + 16))((char *)&v10[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  uint64_t v7 = sub_22EE7EB20();
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  *a2 = v7;
  return result;
}

uint64_t sub_22EE2AAA8(uint64_t a1)
{
  return sub_22EE2ABD4(a1);
}

uint64_t sub_22EE2AAE4@<X0>(uint64_t *a1@<X8>)
{
  return sub_22EE2A9B8(*v1, a1);
}

void sub_22EE2AAEC(uint64_t a1@<X8>)
{
  uint64_t v1 = MEMORY[0x263F1BA00];
  *(void *)(a1 + 24) = MEMORY[0x263F1BA08];
  *(void *)(a1 + 32) = v1;
}

uint64_t sub_22EE2AB04()
{
  return 3;
}

uint64_t sub_22EE2AB0C()
{
  return MEMORY[0x270FA0228](v0, 16, 7);
}

uint64_t type metadata accessor for AnySubscriptionStoreControlStyle.Box()
{
  return self;
}

uint64_t sub_22EE2AB40()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_22EE2ABD4(uint64_t a1)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v1 + 112) - 8) + 32))(v1 + *(void *)(*(void *)v1 + 128), a1);
  return v1;
}

uint64_t sub_22EE2AC48@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)v2;
  uint64_t v6 = type metadata accessor for SubscriptionStoreControlStyleConfiguration(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v5 + 112);
  __n128 v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v17 - v12;
  (*(void (**)(char *, char *, uint64_t, __n128))(v14 + 16))((char *)&v17 - v12, &v2[*(void *)(v5 + 128)], v9, v11);
  sub_22EB581EC(a1, (uint64_t)v8);
  a2[3] = type metadata accessor for SubscriptionStoreControl();
  a2[4] = swift_getWitnessTable();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a2);
  return sub_22ED27974((uint64_t)v13, (uint64_t)v8, v9, (uint64_t)boxed_opaque_existential_1);
}

uint64_t sub_22EE2ADF0(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 112);
  uint64_t v4 = *(void *)(v3 - 8);
  __n128 v5 = MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v11 - v6;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))((char *)&v11 - v6, v1 + *(void *)(v8 + 128), v3, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268627DC0);
  if (swift_dynamicCast())
  {
    uint64_t v9 = a1 != 1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268627DC8);
    if (swift_dynamicCast())
    {
      uint64_t v9 = 1;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_268627DD0);
      if (swift_dynamicCast())
      {
        uint64_t v9 = 2;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(qword_268627DD8);
        if (swift_dynamicCast()) {
          uint64_t v9 = 0;
        }
        else {
          uint64_t v9 = 3;
        }
      }
    }
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return v9;
}

uint64_t sub_22EE2AFBC()
{
  return (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 112) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 128));
}

uint64_t sub_22EE2B014()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 112) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 128));
  return v0;
}

uint64_t sub_22EE2B084()
{
  uint64_t v0 = sub_22EE2B014();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t type metadata accessor for SubscriptionStoreControlStyleBox()
{
  return __swift_instantiateGenericMetadata();
}

ValueMetadata *type metadata accessor for AnySubscriptionStoreControlStyle()
{
  return &type metadata for AnySubscriptionStoreControlStyle;
}

uint64_t sub_22EE2B100()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EE2B130(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  LOBYTE(v13) = a1 & 1;
  *((void *)&v13 + 1) = a2;
  *(void *)&long long v14 = a3;
  BYTE8(v14) = a4 & 1;
  *(void *)&long long v15 = a5;
  *((void *)&v15 + 1) = a6;
  v12[0] = v13;
  v12[1] = v14;
  v12[2] = v15;
  uint64_t v10 = type metadata accessor for MagicPocketApplierModifier();
  swift_retain();
  MEMORY[0x230FAB9D0](v12, a7, v10, a9);
  return sub_22EE2BE94((uint64_t)&v13);
}

uint64_t sub_22EE2B1D8(void (*a1)(__n128), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v21 = a5;
  OUTLINED_FUNCTION_0_0();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for MagicPocketSetterModifier();
  OUTLINED_FUNCTION_0_0();
  uint64_t v15 = v14;
  __n128 v17 = MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v21 - v18;
  a1(v17);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v19, v12, a4);
  MEMORY[0x230FAB9D0](v19, a3, v13, v21);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v19, v13);
}

uint64_t type metadata accessor for MagicPocketSetterModifier()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_22EE2B344@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  v22[1] = a1;
  v22[2] = a3;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getWitnessTable();
  sub_22EE7D9A0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268627E60);
  uint64_t v9 = sub_22EE7CEE0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v22 - v15;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))(v8, v4, v5, v14);
  v22[5] = sub_22EE7EB20();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_22EE2B9C8();
  sub_22EE7E1D0();
  swift_release();
  uint64_t v18 = sub_22EADDD7C(&qword_268627E70, &qword_268627E60);
  v22[3] = WitnessTable;
  v22[4] = v18;
  uint64_t v19 = swift_getWitnessTable();
  sub_22EB69440(v12, v9, v19);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v10 + 8);
  v20(v12, v9);
  sub_22EB69440(v16, v9, v19);
  return ((uint64_t (*)(char *, uint64_t))v20)(v16, v9);
}

uint64_t sub_22EE2B608(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (!a2) {
    return 0;
  }
  int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return __swift_getEnumTagSinglePayload((uint64_t)a1, v5, v4);
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_22EE2B754(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  size_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
  char v9 = 8 * v8;
  BOOL v10 = a3 >= v7;
  int v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      unsigned int v15 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v15))
      {
        int v12 = 4;
      }
      else if (v15 >= 0x100)
      {
        int v12 = 2;
      }
      else
      {
        int v12 = v15 > 1;
      }
    }
    else
    {
      int v12 = 1;
    }
  }
  else
  {
    int v12 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v13 = ~v7 + a2;
    if (v8 < 4)
    {
      int v14 = (v13 >> v9) + 1;
      if (v8)
      {
        int v16 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
      int v14 = 1;
    }
    switch(v12)
    {
      case 1:
        a1[v8] = v14;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v14;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v14;
        return;
      default:
        return;
    }
  }
  switch(v12)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x22EE2B958);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v7, v6);
      }
      return;
  }
}

uint64_t sub_22EE2B980()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_22EE2B9C8()
{
  unint64_t result = qword_268627E68;
  if (!qword_268627E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627E68);
  }
  return result;
}

ValueMetadata *type metadata accessor for MagicPocketContentPreferenceKey()
{
  return &type metadata for MagicPocketContentPreferenceKey;
}

uint64_t sub_22EE2BA24()
{
  return swift_getWitnessTable();
}

uint64_t sub_22EE2BB1C(uint64_t a1, uint64_t a2)
{
  char v19 = *(unsigned char *)v2;
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v18 = *(void *)(v2 + 8);
  int v5 = *(unsigned __int8 *)(v2 + 24);
  uint64_t v7 = *(void *)(v2 + 32);
  uint64_t v6 = *(void *)(v2 + 40);
  size_t v8 = (void *)swift_allocObject();
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v10 = *(void *)(a2 + 24);
  v8[2] = v9;
  v8[3] = v10;
  v8[4] = v7;
  v8[5] = v6;
  swift_retain();
  swift_getWitnessTable();
  uint64_t v11 = sub_22EE7D9A0();
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v13 = sub_22EE2B9C8();
  sub_22EE3D2B4((uint64_t)&type metadata for MagicPocketContentPreferenceKey, v19, v18, v4, v5, (uint64_t)sub_22EE2C0C0, (uint64_t)v8, v11, (uint64_t)&v21, (uint64_t)&type metadata for MagicPocketContentPreferenceKey, v9, WitnessTable, v13, v10);
  swift_release();
  v20[0] = v21;
  v20[1] = v22;
  sub_22EE7DA80();
  swift_getWitnessTable();
  sub_22EE7D610();
  uint64_t v14 = sub_22EE7CEE0();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v15 = sub_22EE7DA70();
  uint64_t v16 = swift_getWitnessTable();
  sub_22EB69440(v20, v15, v16);
  swift_release();
  uint64_t v21 = &type metadata for MagicPocketContentPreferenceKey;
  uint64_t v22 = v14;
  sub_22EB69440(&v21, v15, v16);
  return swift_release();
}

uint64_t sub_22EE2BD78(uint64_t a1, uint64_t a2)
{
  return sub_22EE2BB1C(a1, a2);
}

void *sub_22EE2BDB4(void *a1, void *(*a2)(uint64_t *__return_ptr))
{
  unint64_t result = a2(&v5);
  uint64_t v4 = v5;
  if (v5)
  {
    unint64_t result = (void *)swift_release();
    *a1 = v4;
  }
  return result;
}

uint64_t sub_22EE2BE00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22EADDD7C(qword_268627E78, &qword_26861DBF8);

  return MEMORY[0x270EFF8A8](a1, a2, v4);
}

uint64_t type metadata accessor for MagicPocketApplierModifier()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_22EE2BE94(uint64_t a1)
{
  return a1;
}

uint64_t sub_22EE2BEC0()
{
  return swift_release();
}

uint64_t sub_22EE2BEC8(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_retain();
  return a1;
}

uint64_t sub_22EE2BF10(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_22EE2BF6C(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  return a1;
}

uint64_t sub_22EE2BFB8(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 32);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_22EE2BFF8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_22EE2C044()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EE2C088()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_22EE2C0C0(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 32))(*a1);
}

uint64_t sub_22EE2C0EC()
{
  return swift_getWitnessTable();
}

unsigned char *storeEnumTagSinglePayload for StoreKitViewsFeature(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22EE2C330);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StoreKitViewsFeature()
{
  return &type metadata for StoreKitViewsFeature;
}

unint64_t sub_22EE2C36C()
{
  unint64_t result = qword_268627F00[0];
  if (!qword_268627F00[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_268627F00);
  }
  return result;
}

uint64_t sub_22EE2C3B8@<X0>(char a1@<W0>, void (*a2)(uint64_t)@<X1>, void (*a3)(uint64_t)@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_22EE7D7F0();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = &v15[-v9 - 8];
  uint64_t v16 = &type metadata for StoreKitViewsFeature;
  unint64_t v17 = sub_22EB56C0C();
  v15[0] = a1;
  char v11 = sub_22EE7C420();
  uint64_t v12 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  if (v11) {
    a2(v12);
  }
  else {
    a3(v12);
  }
  swift_storeEnumTagMultiPayload();
  return sub_22ED86B44((uint64_t)v10, a4);
}

const char *sub_22EE2C4E0()
{
  return "StoreKit";
}

const char *sub_22EE2C4F4(char a1)
{
  if (!a1) {
    return "SubscriptionPickerViewPreferencesImplementation";
  }
  if (a1 == 1) {
    return "SubscriptionPoliciesAttributedStringImplementation";
  }
  return "PrefersInvertedPrimaryLabelColorOverTintStyle";
}

const char *sub_22EE2C538()
{
  return sub_22EE2C4F4(*v0);
}

uint64_t sub_22EE2C558()
{
  uint64_t result = sub_22EE7D7F0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_22EE2C5E8(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  int v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v5 = *(void *)(*(void *)(a3 + 32) - 8);
  if (*(void *)(v5 + 64) <= *(void *)(v4 + 64)) {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  }
  else {
    uint64_t v6 = *(void *)(v5 + 64);
  }
  uint64_t v7 = (*(unsigned char *)(v5 + 80) | *(unsigned char *)(v4 + 80));
  if (v7 <= 7
    && (unint64_t)(v6 + 1) <= 0x18
    && ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v4 + 80)) & 0x100000) == 0)
  {
    unsigned int v11 = a2[v6];
    unsigned int v12 = v11 - 2;
    if (v11 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v13 = v6;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *a2;
          goto LABEL_21;
        case 2:
          int v14 = *(unsigned __int16 *)a2;
          goto LABEL_21;
        case 3:
          int v14 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_21;
        case 4:
          int v14 = *(_DWORD *)a2;
LABEL_21:
          int v15 = (v14 | (v12 << (8 * v6))) + 2;
          unsigned int v11 = v14 + 2;
          if (v6 < 4) {
            unsigned int v11 = v15;
          }
          break;
        default:
          break;
      }
    }
    if (v11 == 1)
    {
      (*(void (**)(void *))(v5 + 16))(a1);
      *((unsigned char *)v3 + v6) = 1;
    }
    else
    {
      (*(void (**)(void *))(v4 + 16))(a1);
      *((unsigned char *)v3 + v6) = 0;
    }
  }
  else
  {
    uint64_t v10 = *(void *)a2;
    *int v3 = *(void *)a2;
    int v3 = (void *)(v10 + ((v7 + 16) & ~v7));
    swift_retain();
  }
  return v3;
}

uint64_t sub_22EE2C7BC(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 32) - 8;
  uint64_t v3 = *(void *)v2;
  unint64_t v4 = *(void *)(*(void *)v2 + 64);
  if (v4 <= *(void *)(*(void *)(*(void *)(a2 + 24) - 8) + 64)) {
    unint64_t v4 = *(void *)(*(void *)(*(void *)(a2 + 24) - 8) + 64);
  }
  unsigned int v5 = a1[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a1;
        goto LABEL_12;
      case 2:
        int v8 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v8 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v8 = *(_DWORD *)a1;
LABEL_12:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1) {
    uint64_t v10 = v3;
  }
  else {
    uint64_t v10 = *(void *)(*(void *)(a2 + 24) - 8);
  }
  return (*(uint64_t (**)(void))(v10 + 8))();
}

uint64_t sub_22EE2C8F8(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 32);
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8);
  if (*(void *)(*(void *)(v4 - 8) + 64) <= *(void *)(v5 + 64)) {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  unsigned int v7 = a2[v6];
  unsigned int v8 = v7 - 2;
  if (v7 >= 2)
  {
    if (v6 <= 3) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a2;
        goto LABEL_13;
      case 2:
        int v10 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v10 = *(_DWORD *)a2;
LABEL_13:
        int v11 = (v10 | (v8 << (8 * v6))) + 2;
        unsigned int v7 = v10 + 2;
        if (v6 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  BOOL v12 = v7 == 1;
  if (v7 == 1) {
    uint64_t v5 = *(void *)(v4 - 8);
  }
  (*(void (**)(uint64_t))(v5 + 16))(a1);
  *(unsigned char *)(a1 + v6) = v12;
  return a1;
}

unsigned __int8 *sub_22EE2CA6C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 24);
    uint64_t v6 = *(void *)(a3 + 32);
    uint64_t v7 = *(void *)(v5 - 8);
    uint64_t v8 = *(void *)(v6 - 8);
    if (*(void *)(v8 + 64) <= *(void *)(v7 + 64)) {
      uint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
    }
    else {
      uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v10 = a1[v9];
    unsigned int v11 = v10 - 2;
    if (v10 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v12 = v9;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a1;
          goto LABEL_14;
        case 2:
          int v13 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v13 = *(_DWORD *)a1;
LABEL_14:
          int v14 = (v13 | (v11 << (8 * v9))) + 2;
          unsigned int v10 = v13 + 2;
          if (v9 < 4) {
            unsigned int v10 = v14;
          }
          break;
        default:
          break;
      }
    }
    if (v10 == 1) {
      uint64_t v15 = *(void *)(v6 - 8);
    }
    else {
      uint64_t v15 = *(void *)(*(void *)(a3 + 24) - 8);
    }
    if (v10 == 1) {
      uint64_t v16 = *(void *)(a3 + 32);
    }
    else {
      uint64_t v16 = *(void *)(a3 + 24);
    }
    (*(void (**)(unsigned __int8 *, uint64_t))(v15 + 8))(a1, v16);
    unsigned int v17 = a2[v9];
    unsigned int v18 = v17 - 2;
    if (v17 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v19 = v9;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *a2;
          goto LABEL_31;
        case 2:
          int v20 = *(unsigned __int16 *)a2;
          goto LABEL_31;
        case 3:
          int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_31;
        case 4:
          int v20 = *(_DWORD *)a2;
LABEL_31:
          int v21 = (v20 | (v18 << (8 * v9))) + 2;
          unsigned int v17 = v20 + 2;
          if (v9 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    BOOL v22 = v17 == 1;
    if (v17 == 1) {
      uint64_t v23 = v8;
    }
    else {
      uint64_t v23 = v7;
    }
    if (v17 == 1) {
      uint64_t v24 = v6;
    }
    else {
      uint64_t v24 = v5;
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v23 + 16))(a1, a2, v24);
    a1[v9] = v22;
  }
  return a1;
}

uint64_t sub_22EE2CCAC(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 32);
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8);
  if (*(void *)(*(void *)(v4 - 8) + 64) <= *(void *)(v5 + 64)) {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  unsigned int v7 = a2[v6];
  unsigned int v8 = v7 - 2;
  if (v7 >= 2)
  {
    if (v6 <= 3) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a2;
        goto LABEL_13;
      case 2:
        int v10 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v10 = *(_DWORD *)a2;
LABEL_13:
        int v11 = (v10 | (v8 << (8 * v6))) + 2;
        unsigned int v7 = v10 + 2;
        if (v6 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  BOOL v12 = v7 == 1;
  if (v7 == 1) {
    uint64_t v5 = *(void *)(v4 - 8);
  }
  (*(void (**)(uint64_t))(v5 + 32))(a1);
  *(unsigned char *)(a1 + v6) = v12;
  return a1;
}

unsigned __int8 *sub_22EE2CE20(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 24);
    uint64_t v6 = *(void *)(a3 + 32);
    uint64_t v7 = *(void *)(v5 - 8);
    uint64_t v8 = *(void *)(v6 - 8);
    if (*(void *)(v8 + 64) <= *(void *)(v7 + 64)) {
      uint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
    }
    else {
      uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v10 = a1[v9];
    unsigned int v11 = v10 - 2;
    if (v10 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v12 = v9;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a1;
          goto LABEL_14;
        case 2:
          int v13 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v13 = *(_DWORD *)a1;
LABEL_14:
          int v14 = (v13 | (v11 << (8 * v9))) + 2;
          unsigned int v10 = v13 + 2;
          if (v9 < 4) {
            unsigned int v10 = v14;
          }
          break;
        default:
          break;
      }
    }
    if (v10 == 1) {
      uint64_t v15 = *(void *)(v6 - 8);
    }
    else {
      uint64_t v15 = *(void *)(*(void *)(a3 + 24) - 8);
    }
    if (v10 == 1) {
      uint64_t v16 = *(void *)(a3 + 32);
    }
    else {
      uint64_t v16 = *(void *)(a3 + 24);
    }
    (*(void (**)(unsigned __int8 *, uint64_t))(v15 + 8))(a1, v16);
    unsigned int v17 = a2[v9];
    unsigned int v18 = v17 - 2;
    if (v17 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v19 = v9;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *a2;
          goto LABEL_31;
        case 2:
          int v20 = *(unsigned __int16 *)a2;
          goto LABEL_31;
        case 3:
          int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_31;
        case 4:
          int v20 = *(_DWORD *)a2;
LABEL_31:
          int v21 = (v20 | (v18 << (8 * v9))) + 2;
          unsigned int v17 = v20 + 2;
          if (v9 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    BOOL v22 = v17 == 1;
    if (v17 == 1) {
      uint64_t v23 = v8;
    }
    else {
      uint64_t v23 = v7;
    }
    if (v17 == 1) {
      uint64_t v24 = v6;
    }
    else {
      uint64_t v24 = v5;
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v23 + 32))(a1, a2, v24);
    a1[v9] = v22;
  }
  return a1;
}

uint64_t sub_22EE2D060(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 32) - 8) + 64);
  if (v3 <= *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64)) {
    unint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  unint64_t v4 = v3 + 1;
  char v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    unsigned int v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      int v6 = *(_DWORD *)((char *)a1 + v4);
      if (!v6) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      int v6 = *(unsigned __int16 *)((char *)a1 + v4);
      if (!*(unsigned __int16 *)((char *)a1 + v4)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_22:
      unsigned int v10 = *((unsigned __int8 *)a1 + v3);
      if (v10 >= 2) {
        return (v10 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v6 = *((unsigned __int8 *)a1 + v4);
  if (!*((unsigned char *)a1 + v4)) {
    goto LABEL_22;
  }
LABEL_14:
  int v9 = (v6 - 1) << v5;
  if (v4 > 3) {
    int v9 = 0;
  }
  if (v4)
  {
    if (v4 > 3) {
      LODWORD(v4) = 4;
    }
    switch((int)v4)
    {
      case 2:
        LODWORD(v4) = *a1;
        break;
      case 3:
        LODWORD(v4) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v4) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v4) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v4 | v9) + 255;
}

void sub_22EE2D1A4(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64);
  if (*(void *)(*(void *)(*(void *)(a4 + 32) - 8) + 64) > v5) {
    unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 32) - 8) + 64);
  }
  size_t v6 = v5 + 1;
  char v7 = 8 * (v5 + 1);
  if (a3 < 0xFF)
  {
    int v8 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v11 = ((a3 + ~(-1 << v7) - 254) >> v7) + 1;
    if (HIWORD(v11))
    {
      int v8 = 4;
    }
    else if (v11 >= 0x100)
    {
      int v8 = 2;
    }
    else
    {
      int v8 = v11 > 1;
    }
  }
  else
  {
    int v8 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v9 = a2 - 255;
    if (v6 < 4)
    {
      int v10 = (v9 >> v7) + 1;
      if (v5 != -1)
      {
        int v12 = v9 & ~(-1 << v7);
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v9;
      int v10 = 1;
    }
    switch(v8)
    {
      case 1:
        a1[v6] = v10;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v10;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x22EE2D378);
      case 4:
        *(_DWORD *)&a1[v6] = v10;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v8)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t type metadata accessor for FeatureView()
{
  return swift_getGenericMetadata();
}

uint64_t sub_22EE2D3B8()
{
  return swift_getWitnessTable();
}

uint64_t sub_22EE2D400@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_22EE7D810();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_22EE2D46C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_22EE2D480(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_22EE2D494(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_22EE2D4A8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_22EE2D4BC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_22EE2D4D0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_22EE2D4E4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t sub_22EE2D4F8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_22EE2D50C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_22EE2D520(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_22EE2D534(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_22EE2D548(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_22EE2D55C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_22EE2D570(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_22EE2D584(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_22EE2D598(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_22EE2D5CC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_22EE2D5E0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_22EE2D5F4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_22EE2D608(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_22EE2D61C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_22EE2D630(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_22EE2D644(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t sub_22EE2D658(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t sub_22EE2D66C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_22EE2D680(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_22EE2D694(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_22EE2D6A8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_22EE2D6DC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_22EE2D6F0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_22EE2D704(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t sub_22EE2D718(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t sub_22EE2D72C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_22EE2D740(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_22EE2D754(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_22EE2D768(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_22EE2D77C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_22EE2D790(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_22EE2D7A4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t sub_22EE2D7B8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t sub_22EE2D7CC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t sub_22EE2D7E0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t sub_22EE2D7F4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t sub_22EE2D828(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t sub_22EE2D85C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t sub_22EE2D870(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t sub_22EE2D884(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t sub_22EE2D898(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t sub_22EE2D8AC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_22EE2D8C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_22EE2D8D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_22EE2D8E8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_22EE2D8FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_22EE2D910(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t sub_22EE2D924(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t sub_22EE2D938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t sub_22EE2D94C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t sub_22EE2D960(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t sub_22EE2D974(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t sub_22EE2D988(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t sub_22EE2D99C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t sub_22EE2D9B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

uint64_t sub_22EE2D9C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

uint64_t sub_22EE2D9D8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t sub_22EE2D9EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 136))();
}

uint64_t sub_22EE2DA00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 144))();
}

uint64_t sub_22EE2DA14(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t sub_22EE2DA28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 160))();
}

uint64_t sub_22EE2DA3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 168))();
}

uint64_t sub_22EE2DA50(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 176))();
}

uint64_t sub_22EE2DA64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 184))();
}

uint64_t sub_22EE2DA78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 192))();
}

uint64_t sub_22EE2DA8C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 200))();
}

uint64_t sub_22EE2DAA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 208))();
}

uint64_t sub_22EE2DAB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 216))();
}

uint64_t sub_22EE2DAC8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 224))();
}

uint64_t sub_22EE2DADC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 232))();
}

uint64_t sub_22EE2DB10(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(uint64_t (**)(_OWORD *))(a3 + 240);
  long long v4 = a1[1];
  v7[0] = *a1;
  v7[1] = v4;
  long long v5 = a1[3];
  v7[2] = a1[2];
  v7[3] = v5;
  return v3(v7);
}

uint64_t sub_22EE2DB54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 248))();
}

uint64_t sub_22EE2DB68(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 256))();
}

uint64_t sub_22EE2DB7C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 264))();
}

uint64_t sub_22EE2DB90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 272))();
}

uint64_t sub_22EE2DBA4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 280))();
}

uint64_t sub_22EE2DBD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 288))();
}

uint64_t sub_22EE2DBE4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 296))();
}

void type metadata accessor for SubscriptionStoreViewDetails.VisibleRelationships()
{
}

void type metadata accessor for SubscriptionStoreViewDetails.PolicyDestination()
{
}

void type metadata accessor for SubscriptionStoreViewDetails.Initializer()
{
}

void type metadata accessor for SubscriptionStoreViewDetails.ControlStyle()
{
}

void type metadata accessor for SubscriptionStoreViewDetails()
{
}

unsigned char *sub_22EE2DC4C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22EE2DD18);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

void type metadata accessor for SubscriptionStoreViewDetails.ButtonLabelStyle()
{
}

void type metadata accessor for MintPurchaseResult()
{
}

void type metadata accessor for ProductViewDetails.Style()
{
}

void type metadata accessor for ProductViewDetails()
{
}

void type metadata accessor for ProductViewDetails.Initializer()
{
}

uint64_t sub_22EE2DD7C(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return OUTLINED_FUNCTION_33_12(-1);
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return OUTLINED_FUNCTION_33_12((*a1 | (v4 << 8)) - 3);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return OUTLINED_FUNCTION_33_12((*a1 | (v4 << 8)) - 3);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return OUTLINED_FUNCTION_33_12((*a1 | (v4 << 8)) - 3);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return OUTLINED_FUNCTION_33_12(v8);
}

unsigned char *sub_22EE2DE00(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        uint64_t result = (unsigned char *)OUTLINED_FUNCTION_29_17((uint64_t)result, v6);
        break;
      case 2:
        uint64_t result = (unsigned char *)OUTLINED_FUNCTION_26_14((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22EE2DEBCLL);
      case 4:
        uint64_t result = (unsigned char *)OUTLINED_FUNCTION_27_12((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          uint64_t result = OUTLINED_FUNCTION_5_20(result, a2 + 2);
        break;
    }
  }
  return result;
}

void type metadata accessor for MintAnalyticsSubscriptionOfferType()
{
}

uint64_t sub_22EE2DEF0(uint64_t a1)
{
  sub_22EB2AC34();
  uint64_t v19 = sub_22EE7F800();
  sub_22EE32970(a1, v20);
  uint64_t v2 = v20[0];
  uint64_t v3 = v20[1];
  int64_t v4 = v20[3];
  unint64_t v5 = v20[4];
  int64_t v6 = (unint64_t)(v20[2] + 64) >> 6;
  swift_bridgeObjectRetain();
  if (!v5) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v7 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  unint64_t v8 = v7 | (v4 << 6);
  while (1)
  {
    char v12 = *(unsigned char *)(*(void *)(v2 + 48) + v8);
    sub_22EC202DC(*(void *)(v2 + 56) + 32 * v8, (uint64_t)v17 + 8);
    LOBYTE(v17[0]) = v12;
    v15[0] = v17[0];
    v15[1] = v17[1];
    uint64_t v16 = v18;
    sub_22EE2E678((uint64_t)&v19, (unsigned __int8 *)v15);
    sub_22EADAC74((uint64_t)v15, &qword_268628080);
    if (v5) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v9 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v9 >= v6) {
      goto LABEL_24;
    }
    unint64_t v10 = *(void *)(v3 + 8 * v9);
    if (!v10)
    {
      int64_t v11 = v4 + 2;
      if (v4 + 2 >= v6) {
        goto LABEL_24;
      }
      unint64_t v10 = *(void *)(v3 + 8 * v11);
      if (v10) {
        goto LABEL_14;
      }
      int64_t v11 = v4 + 3;
      if (v4 + 3 >= v6) {
        goto LABEL_24;
      }
      unint64_t v10 = *(void *)(v3 + 8 * v11);
      if (v10) {
        goto LABEL_14;
      }
      int64_t v11 = v4 + 4;
      if (v4 + 4 >= v6) {
        goto LABEL_24;
      }
      unint64_t v10 = *(void *)(v3 + 8 * v11);
      if (v10) {
        goto LABEL_14;
      }
      int64_t v11 = v4 + 5;
      if (v4 + 5 >= v6) {
        goto LABEL_24;
      }
      unint64_t v10 = *(void *)(v3 + 8 * v11);
      if (v10)
      {
LABEL_14:
        int64_t v9 = v11;
      }
      else
      {
        int64_t v9 = v4 + 6;
        if (v4 + 6 >= v6) {
          goto LABEL_24;
        }
        unint64_t v10 = *(void *)(v3 + 8 * v9);
        if (!v10)
        {
          int64_t v13 = v4 + 7;
          while (v13 < v6)
          {
            unint64_t v10 = *(void *)(v3 + 8 * v13++);
            if (v10)
            {
              int64_t v9 = v13 - 1;
              goto LABEL_15;
            }
          }
LABEL_24:
          swift_release();
          return v19;
        }
      }
    }
LABEL_15:
    unint64_t v5 = (v10 - 1) & v10;
    unint64_t v8 = __clz(__rbit64(v10)) + (v9 << 6);
    int64_t v4 = v9;
  }
  __break(1u);
  swift_bridgeObjectRelease();
  sub_22EADAC74((uint64_t)v15, &qword_268628080);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_22EE2E0F8(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t *a3)
{
  sub_22EB2AC34();
  uint64_t v23 = sub_22EE7F800();
  sub_22EE32970(a1, v24);
  uint64_t v6 = v24[0];
  uint64_t v7 = v24[1];
  int64_t v8 = v24[3];
  unint64_t v9 = v24[4];
  int64_t v10 = (unint64_t)(v24[2] + 64) >> 6;
  swift_bridgeObjectRetain();
  if (!v9) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v11 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v12 = v11 | (v8 << 6);
  while (1)
  {
    char v16 = *(unsigned char *)(*(void *)(v6 + 48) + v12);
    sub_22EC202DC(*(void *)(v6 + 56) + 32 * v12, (uint64_t)v21 + 8);
    LOBYTE(v21[0]) = v16;
    v19[0] = v21[0];
    v19[1] = v21[1];
    uint64_t v20 = v22;
    sub_22EE2E300((uint64_t)&v23, (unsigned __int8 *)v19, a2);
    sub_22EADAC74((uint64_t)v19, a3);
    if (v9) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      break;
    }
    if (v13 >= v10) {
      goto LABEL_24;
    }
    unint64_t v14 = *(void *)(v7 + 8 * v13);
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v10) {
        goto LABEL_24;
      }
      unint64_t v14 = *(void *)(v7 + 8 * v15);
      if (v14) {
        goto LABEL_14;
      }
      int64_t v15 = v8 + 3;
      if (v8 + 3 >= v10) {
        goto LABEL_24;
      }
      unint64_t v14 = *(void *)(v7 + 8 * v15);
      if (v14) {
        goto LABEL_14;
      }
      int64_t v15 = v8 + 4;
      if (v8 + 4 >= v10) {
        goto LABEL_24;
      }
      unint64_t v14 = *(void *)(v7 + 8 * v15);
      if (v14) {
        goto LABEL_14;
      }
      int64_t v15 = v8 + 5;
      if (v8 + 5 >= v10) {
        goto LABEL_24;
      }
      unint64_t v14 = *(void *)(v7 + 8 * v15);
      if (v14)
      {
LABEL_14:
        int64_t v13 = v15;
      }
      else
      {
        int64_t v13 = v8 + 6;
        if (v8 + 6 >= v10) {
          goto LABEL_24;
        }
        unint64_t v14 = *(void *)(v7 + 8 * v13);
        if (!v14)
        {
          int64_t v17 = v8 + 7;
          while (v17 < v10)
          {
            unint64_t v14 = *(void *)(v7 + 8 * v17++);
            if (v14)
            {
              int64_t v13 = v17 - 1;
              goto LABEL_15;
            }
          }
LABEL_24:
          swift_release();
          return v23;
        }
      }
    }
LABEL_15:
    unint64_t v9 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v13 << 6);
    int64_t v8 = v13;
  }
  __break(1u);
  swift_bridgeObjectRelease();
  sub_22EADAC74((uint64_t)v19, a3);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_22EE2E300(uint64_t a1, unsigned __int8 *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v7 = type metadata accessor for SKLogger();
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_1_1();
  uint64_t v9 = *a2;
  sub_22EC202DC((uint64_t)(a2 + 8), (uint64_t)v24);
  sub_22EE329A8(v24, v25);
  sub_22EC202DC((uint64_t)v25, (uint64_t)&v23);
  sub_22EB2AC34();
  if (swift_dynamicCast())
  {
    uint64_t v10 = a3(v9);
    uint64_t v12 = v11;
    id v13 = v22;
    sub_22EE31F34((uint64_t)v13, v10, v12, sub_22EE32044);

    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_26861B778 != -1) {
      swift_once();
    }
    uint64_t v14 = __swift_project_value_buffer(v7, (uint64_t)qword_26864C398);
    sub_22EB107F0(v14, v4);
    uint64_t v23 = 0;
    *(void *)&v24[0] = 0xE000000000000000;
    sub_22EE801C0();
    swift_bridgeObjectRelease();
    sub_22EC202DC((uint64_t)v25, (uint64_t)&v23);
    sub_22EE7FA30();
    sub_22EE7FAA0();
    swift_bridgeObjectRelease();
    sub_22EE7FAA0();
    os_log_type_t v15 = sub_22EE7FFD0();
    swift_bridgeObjectRetain_n();
    char v16 = sub_22EE7C550();
    os_log_type_t v17 = v15;
    if (os_log_type_enabled(v16, v15))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v26 = v3;
      uint64_t v20 = v19;
      uint64_t v23 = v19;
      *(_DWORD *)uint64_t v18 = 136446466;
      sub_22EC1FA24(0, 0xE000000000000000, &v23);
      sub_22EE800B0();
      *(_WORD *)(v18 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_22EC1FA24(0xD000000000000018, 0x800000022EE85D60, &v23);
      sub_22EE800B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_22EAC6000, v16, v17, "%{public}s%{public}s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x230FAE500](v20, -1, -1);
      MEMORY[0x230FAE500](v18, -1, -1);
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_22EB31B10(v4);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

uint64_t sub_22EE2E678(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v4 = type metadata accessor for SKLogger();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *a2;
  sub_22EC202DC((uint64_t)(a2 + 8), (uint64_t)v27);
  sub_22EE329A8(v27, v28);
  sub_22EC202DC((uint64_t)v28, (uint64_t)&v26);
  sub_22EB2AC34();
  uint64_t v8 = MEMORY[0x263F8EE58];
  if (swift_dynamicCast())
  {
    uint64_t v9 = 0x6573616863727570;
    uint64_t v10 = 0xEF64657472617453;
    switch(v7)
    {
      case 1:
        uint64_t v9 = 0xD000000000000011;
        uint64_t v10 = 0x800000022EE81670;
        break;
      case 2:
        uint64_t v10 = 0xEF776569566E4974;
        uint64_t v9 = 0x6E657053656D6974;
        break;
      case 3:
        uint64_t v10 = 0xEE00746C75736552;
        break;
      default:
        break;
    }
    id v21 = v24;
    sub_22EE31F34((uint64_t)v21, v9, v10, sub_22EE32044);

    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_26861B778 != -1) {
      swift_once();
    }
    uint64_t v11 = __swift_project_value_buffer(v4, (uint64_t)qword_26864C398);
    sub_22EB107F0(v11, (uint64_t)v6);
    uint64_t v26 = 0;
    *(void *)&v27[0] = 0xE000000000000000;
    sub_22EE801C0();
    swift_bridgeObjectRelease();
    id v24 = (id)0xD000000000000018;
    unint64_t v25 = 0x800000022EE85D60;
    sub_22EC202DC((uint64_t)v28, (uint64_t)&v26);
    uint64_t v12 = v8 + 8;
    sub_22EE7FA30();
    sub_22EE7FAA0();
    swift_bridgeObjectRelease();
    sub_22EE7FAA0();
    uint64_t v13 = (uint64_t)v24;
    unint64_t v14 = v25;
    os_log_type_t v15 = sub_22EE7FFD0();
    swift_bridgeObjectRetain_n();
    char v16 = sub_22EE7C550();
    os_log_type_t v17 = v15;
    if (os_log_type_enabled(v16, v15))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v29 = v2;
      uint64_t v20 = v19;
      uint64_t v26 = v19;
      *(_DWORD *)uint64_t v18 = 136446466;
      uint64_t v23 = v12;
      id v24 = (id)sub_22EC1FA24(0, 0xE000000000000000, &v26);
      sub_22EE800B0();
      *(_WORD *)(v18 + 12) = 2082;
      swift_bridgeObjectRetain();
      id v24 = (id)sub_22EC1FA24(v13, v14, &v26);
      sub_22EE800B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_22EAC6000, v16, v17, "%{public}s%{public}s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x230FAE500](v20, -1, -1);
      MEMORY[0x230FAE500](v18, -1, -1);
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_22EB31B10((uint64_t)v6);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
}

uint64_t sub_22EE2EA98(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_22EE329A8((_OWORD *)a1, v4);
    return sub_22EE31E84();
  }
  else
  {
    sub_22EADAC74(a1, &qword_268623C50);
    sub_22EE31B28(a2, sub_22ED0EA50, &qword_268628018, (void (*)(_OWORD *))sub_22EE32A04, v4);
    return sub_22EADAC74((uint64_t)v4, &qword_268623C50);
  }
}

uint64_t sub_22EE2EB6C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_22EE329A8((_OWORD *)a1, v4);
    return sub_22EE31E84();
  }
  else
  {
    sub_22EADAC74(a1, &qword_268623C50);
    sub_22EE31B28(a2, sub_22ED0EA7C, &qword_268628060, (void (*)(_OWORD *))sub_22EE32B28, v4);
    return sub_22EADAC74((uint64_t)v4, &qword_268623C50);
  }
}

uint64_t sub_22EE2EC40(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_22EE329A8((_OWORD *)a1, v4);
    return sub_22EE31E84();
  }
  else
  {
    sub_22EADAC74(a1, &qword_268623C50);
    sub_22EE31B28(a2, (uint64_t (*)(uint64_t))sub_22ED0EAA8, &qword_268628088, (void (*)(_OWORD *))sub_22EE32BFC, v4);
    return sub_22EADAC74((uint64_t)v4, &qword_268623C50);
  }
}

uint64_t sub_22EE2ED14(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_22EE329A8((_OWORD *)a1, v4);
    return sub_22EE31E84();
  }
  else
  {
    sub_22EADAC74(a1, &qword_268623C50);
    sub_22EE31B28(a2, sub_22ED0EB14, &qword_268628048, (void (*)(_OWORD *))sub_22EE32ADC, v4);
    return sub_22EADAC74((uint64_t)v4, &qword_268623C50);
  }
}

uint64_t sub_22EE2EDE8(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_22EE329A8((_OWORD *)a1, v4);
    return sub_22EE31E84();
  }
  else
  {
    sub_22EADAC74(a1, &qword_268623C50);
    sub_22EE31B28(a2, sub_22ED0EB40, &qword_268628030, (void (*)(_OWORD *))sub_22EE32A70, v4);
    return sub_22EADAC74((uint64_t)v4, &qword_268623C50);
  }
}

uint64_t sub_22EE2EEBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&dword_26861E938);
  MEMORY[0x270FA5388](v8 - 8);
  OUTLINED_FUNCTION_13_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861E850);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_27_1();
  if (__swift_getEnumTagSinglePayload(a1, 1, v10) == 1)
  {
    sub_22EADAC74(a1, &dword_26861E938);
    sub_22EE319AC(a2, a3, v3);
    swift_bridgeObjectRelease();
    return sub_22EADAC74(v3, &dword_26861E938);
  }
  else
  {
    sub_22EAEFC48(a1, v4, &qword_26861E850);
    sub_22EE31DF4(v4, a2, a3);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_22EE2EFE4(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_22EE329A8((_OWORD *)a1, v4);
    return sub_22EE31E84();
  }
  else
  {
    sub_22EADAC74(a1, &qword_268623C50);
    sub_22EE31B28(a2, sub_22ED0EB6C, &qword_268628000, (void (*)(_OWORD *))sub_22EE329B8, v4);
    return sub_22EADAC74((uint64_t)v4, &qword_268623C50);
  }
}

void sub_22EE2F0B8(char a1)
{
  switch(a1)
  {
    case 1:
      OUTLINED_FUNCTION_15_28();
      break;
    case 2:
    case 3:
      OUTLINED_FUNCTION_70();
      break;
    default:
      return;
  }
}

uint64_t *sub_22EE2F164(unint64_t a1, unint64_t a2, int a3)
{
  uint64_t v40 = MEMORY[0x263F8EE80];
  uint64_t v6 = self;
  swift_bridgeObjectRetain();
  id v7 = objc_msgSend(v6, sel_mainBundle);
  id v8 = objc_msgSend(v7, sel_bundleIdentifier);

  if (v8)
  {
    unint64_t v9 = sub_22EE7F9E0();
    unint64_t v11 = v10;

    uint64_t v12 = sub_22EB70E58(v9, v11);
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
    id v8 = (id)sub_22EE7C360();
    unint64_t v16 = v15;
    sub_22EB2AC74(v12, v14);
  }
  else
  {
    unint64_t v16 = 0xE000000000000000;
  }
  swift_bridgeObjectRelease();
  uint64_t v17 = MEMORY[0x263F8D310];
  uint64_t v39 = MEMORY[0x263F8D310];
  id v37 = v8;
  unint64_t v38 = v16;
  uint64_t v18 = &v40;
  sub_22EE2EA98((uint64_t)&v37, 0);
  if (a2)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = (uint64_t *)sub_22EB70E58(a1, a2);
    unint64_t v20 = v19;
    char v21 = sub_22EE7C360();
    unint64_t v23 = v22;
    sub_22EB2AC74((uint64_t)v18, v20);
    uint64_t v24 = swift_bridgeObjectRelease();
    uint64_t v39 = v17;
    unint64_t v38 = v23;
    char v32 = OUTLINED_FUNCTION_22_24(v24, v25, v26, v27, v28, v29, v30, v31, v36, v21);
    sub_22EE2EA98((uint64_t)v32, v33);
  }
  uint64_t v34 = MEMORY[0x263F8D4F8];
  if (a3 != 2)
  {
    uint64_t v39 = MEMORY[0x263F8D4F8];
    LOBYTE(v37) = a3 & 1;
    uint64_t v18 = &v40;
    sub_22EE2EA98((uint64_t)&v37, 2);
  }
  if ((a3 & 0xFF00) != 0x200)
  {
    uint64_t v39 = v34;
    LOBYTE(v37) = BYTE1(a3) & 1;
    uint64_t v18 = &v40;
    sub_22EE2EA98((uint64_t)&v37, 3);
  }
  if ((a3 & 0xFF0000) != 0x20000)
  {
    uint64_t v39 = v34;
    LOBYTE(v37) = BYTE2(a3) & 1;
    uint64_t v18 = &v40;
    sub_22EE2EA98((uint64_t)&v37, 4);
  }
  sub_22EE2E0F8(v40, (uint64_t (*)(uint64_t))sub_22EE2F0B8, &qword_268628010);
  OUTLINED_FUNCTION_11_29();
  return v18;
}

uint64_t *sub_22EE2F39C()
{
  uint64_t v20 = MEMORY[0x263F8EE80];
  sub_22EAEFC48(v0, (uint64_t)&v22, &qword_26861D5C8);
  uint64_t v1 = sub_22EAEFC48((uint64_t)&v22, (uint64_t)&v23, &qword_26861D5C8);
  if (v23 != 2)
  {
    OUTLINED_FUNCTION_12_31();
    uint64_t v1 = sub_22EE2EB6C(v9, 0);
  }
  unint64_t v10 = OUTLINED_FUNCTION_22_24(v1, v2, v3, v4, v5, v6, v7, v8, v19, *(unsigned char *)(v0 + 1) + 1);
  sub_22EE2EB6C((uint64_t)v10, v11);
  OUTLINED_FUNCTION_12_31();
  sub_22EE2EB6C(v12, 2);
  sub_22EAEFC48(v0 + 8, (uint64_t)v21, &qword_268627FE0);
  sub_22EAEFC48((uint64_t)v21, (uint64_t)&v24, &qword_268627FE0);
  if ((v25 & 1) == 0)
  {
    OUTLINED_FUNCTION_5_31();
    sub_22EE2EB6C(v13, 3);
  }
  OUTLINED_FUNCTION_5_31();
  sub_22EE2EB6C(v14, 4);
  OUTLINED_FUNCTION_5_31();
  sub_22EE2EB6C(v15, 5);
  OUTLINED_FUNCTION_12_31();
  sub_22EE2EB6C(v16, 7);
  OUTLINED_FUNCTION_12_31();
  sub_22EE2EB6C(v17, 6);
  sub_22EE2E0F8(v20, (uint64_t (*)(uint64_t))sub_22EE2FDBC, &qword_268628058);
  OUTLINED_FUNCTION_11_29();
  return &qword_268627FE0;
}

uint64_t *sub_22EE2F510()
{
  uint64_t v20 = MEMORY[0x263F8EE80];
  uint64_t v1 = type metadata accessor for MintDisappearBaseEvent(0);
  uint64_t v2 = *(unsigned __int8 *)(v0 + *(int *)(v1 + 24));
  if (*(unsigned char *)(v0 + *(int *)(v1 + 28)) != 1)
  {
    if (v2 == 4)
    {
      uint64_t v5 = MEMORY[0x263F8D4F8];
      uint64_t v19 = MEMORY[0x263F8D4F8];
      v18[0] = 0;
      uint64_t v6 = sub_22EE2EC40((uint64_t)v18, 0);
      uint64_t v19 = v5;
      v18[0] = 0;
    }
    else
    {
      uint64_t v14 = MEMORY[0x263F8D4F8];
      uint64_t v19 = MEMORY[0x263F8D4F8];
      v18[0] = 1;
      uint64_t v6 = sub_22EE2EC40((uint64_t)v18, 0);
      uint64_t v19 = v14;
      v18[0] = v2 == 1;
    }
    uint64_t v3 = OUTLINED_FUNCTION_22_24(v6, v7, v8, v9, v10, v11, v12, v13, v17, v18[0]);
    goto LABEL_8;
  }
  if (v2 != 4)
  {
    uint64_t v19 = MEMORY[0x263F8D6C8];
    *(void *)uint64_t v18 = v2 + 1;
    uint64_t v3 = v18;
    uint64_t v4 = 3;
LABEL_8:
    sub_22EE2EC40((uint64_t)v3, v4);
  }
  sub_22EE7C390();
  uint64_t v19 = MEMORY[0x263F8D538];
  *(void *)uint64_t v18 = v15;
  sub_22EE2EC40((uint64_t)v18, 2);
  sub_22EE2DEF0(v20);
  OUTLINED_FUNCTION_11_29();
  return &v20;
}

uint64_t sub_22EE2F658()
{
  return sub_22EE807F0();
}

uint64_t sub_22EE2F69C()
{
  return sub_22EE807F0();
}

uint64_t sub_22EE2F6E4()
{
  return sub_22EE807F0();
}

uint64_t sub_22EE2F724(uint64_t a1, void (*a2)(uint64_t))
{
  return sub_22EE807F0();
}

uint64_t sub_22EE2F788()
{
  return sub_22EE807F0();
}

uint64_t sub_22EE2F7CC(char a1)
{
  uint64_t result = 0xD000000000000018;
  switch(a1)
  {
    case 1:
      uint64_t result = OUTLINED_FUNCTION_15_28();
      break;
    case 2:
      uint64_t result = 0x64657463656C6573;
      break;
    case 3:
      uint64_t result = 0x6573616863727570;
      break;
    case 4:
      uint64_t result = OUTLINED_FUNCTION_13_34();
      break;
    case 5:
      uint64_t result = 0xD00000000000001BLL;
      break;
    case 7:
      uint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

void sub_22EE2F8B0(char a1)
{
  switch(a1)
  {
    case 1:
    case 4:
    case 6:
      OUTLINED_FUNCTION_70();
      break;
    case 3:
      OUTLINED_FUNCTION_8_36();
      break;
    case 5:
      OUTLINED_FUNCTION_24_18();
      break;
    default:
      return;
  }
}

void sub_22EE2F978()
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E4E0);
  MEMORY[0x270FA5388](v3 - 8);
  OUTLINED_FUNCTION_13_0();
  uint64_t v4 = sub_22EE7F2B0();
  OUTLINED_FUNCTION_0_2();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_27_1();
  uint64_t v21 = MEMORY[0x263F8EE80];
  uint64_t v20 = MEMORY[0x263F8D4F8];
  LOBYTE(v19[0]) = 0;
  sub_22EE2ED14((uint64_t)v19, 0);
  int v8 = *v0;
  if (v8 != 2)
  {
    uint64_t v9 = OUTLINED_FUNCTION_20_25(v8 & 1);
    sub_22EE2ED14(v9, 1);
  }
  uint64_t v10 = (int *)type metadata accessor for ProductViewBaseEvent(0);
  sub_22ED82078((uint64_t)&v0[v10[6]], v1);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v1, 1, v4);
  uint64_t v12 = MEMORY[0x263F8D6C8];
  if (EnumTagSinglePayload == 1)
  {
    sub_22EADAC74(v1, &qword_26861E4E0);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v2, v1, v4);
    sub_22EE302EC();
    uint64_t v20 = v12;
    v19[0] = v13;
    sub_22EE2ED14((uint64_t)v19, 2);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
  }
  uint64_t v14 = OUTLINED_FUNCTION_37_16(v0[1]);
  sub_22EE2ED14(v14, 3);
  uint64_t v15 = OUTLINED_FUNCTION_20_25(v0[v10[7]]);
  sub_22EE2ED14(v15, 4);
  uint64_t v16 = OUTLINED_FUNCTION_37_16(v0[v10[8]]);
  sub_22EE2ED14(v16, 5);
  uint64_t v17 = OUTLINED_FUNCTION_20_25(v0[v10[9]]);
  sub_22EE2ED14(v17, 6);
  uint64_t v18 = OUTLINED_FUNCTION_20_25(v0[v10[10]]);
  sub_22EE2ED14(v18, 7);
  sub_22EE2E0F8(v21, (uint64_t (*)(uint64_t))sub_22EE2F8B0, &qword_268628040);
  OUTLINED_FUNCTION_11_29();
  OUTLINED_FUNCTION_5_0();
}

uint64_t sub_22EE2FBA8()
{
  uint64_t v1 = v0;
  uint64_t v63 = MEMORY[0x263F8EE80];
  uint64_t v2 = type metadata accessor for MintViewBasePurchaseEvent(0);
  uint64_t v10 = (int *)v2;
  if (*(unsigned char *)(v0 + *(int *)(v2 + 20)) == 3)
  {
    uint64_t v11 = OUTLINED_FUNCTION_18_26(v2, v3, v4, v5, v6, v7, v8, v9, 0);
  }
  else
  {
    LOBYTE(v62) = *(unsigned char *)(v0 + *(int *)(v2 + 20));
    uint64_t v11 = OUTLINED_FUNCTION_18_26(v2, v3, v4, v5, v6, v7, v8, v9, v62);
  }
  uint64_t v12 = sub_22EE2EDE8((uint64_t)v11, 0);
  uint64_t v20 = (unint64_t *)(v0 + v10[9]);
  unint64_t v21 = v20[1];
  if (v21)
  {
    unint64_t v22 = *v20;
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_22EB70E58(v22, v21);
    unint64_t v25 = v24;
    swift_bridgeObjectRelease();
    uint64_t v26 = sub_22EE7C360();
    uint64_t v27 = sub_22EB2AC74(v23, v25);
    uint64_t v35 = OUTLINED_FUNCTION_18_26(v27, v28, v29, v30, v31, v32, v33, v34, v26);
  }
  else
  {
    uint64_t v35 = OUTLINED_FUNCTION_18_26(v12, v13, v14, v15, v16, v17, v18, v19, 0);
  }
  uint64_t v36 = sub_22EE2EDE8((uint64_t)v35, 1);
  uint64_t v44 = v1 + v10[8];
  if ((*(unsigned char *)(v44 + 8) & 1) == 0)
  {
    char v45 = OUTLINED_FUNCTION_18_26(v36, v37, v38, v39, v40, v41, v42, v43, *(void *)v44);
    uint64_t v36 = sub_22EE2EDE8((uint64_t)v45, 2);
  }
  uint64_t v46 = OUTLINED_FUNCTION_18_26(v36, v37, v38, v39, v40, v41, v42, v43, *(unsigned __int8 *)(v1 + v10[7]) + 1);
  sub_22EE2EDE8((uint64_t)v46, 3);
  uint64_t v47 = v1 + v10[6];
  uint64_t v48 = sub_22EE7C390();
  uint64_t v57 = OUTLINED_FUNCTION_18_26(v48, v49, v50, v51, v52, v53, v54, v55, v56);
  sub_22EE2EDE8((uint64_t)v57, 4);
  if (*(unsigned char *)(v1 + v10[10]) != 2)
  {
    OUTLINED_FUNCTION_16_30();
    sub_22EE2EDE8(v58, 5);
  }
  if (*(unsigned char *)(v1 + v10[11]) != 2)
  {
    OUTLINED_FUNCTION_16_30();
    sub_22EE2EDE8(v59, 6);
  }
  if (*(unsigned char *)(v1 + v10[12]) != 2)
  {
    OUTLINED_FUNCTION_16_30();
    sub_22EE2EDE8(v60, 7);
  }
  sub_22EE2E0F8(v63, (uint64_t (*)(uint64_t))sub_22EE2F7CC, &qword_268628028);
  OUTLINED_FUNCTION_11_29();
  return v47;
}

uint64_t sub_22EE2FDBC(char a1)
{
  uint64_t result = 0xD000000000000018;
  switch(a1)
  {
    case 1:
      uint64_t result = OUTLINED_FUNCTION_8_36();
      break;
    case 2:
      uint64_t result = 0xD000000000000016;
      break;
    case 3:
      uint64_t result = 0x73746375646F7270;
      break;
    case 4:
      uint64_t result = 0xD000000000000011;
      break;
    case 5:
      uint64_t result = OUTLINED_FUNCTION_24_18();
      break;
    case 6:
      uint64_t result = 0x49796E4173657375;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t *sub_22EE2FE9C()
{
  uint64_t v1 = v0;
  uint64_t v22 = MEMORY[0x263F8EE80];
  sub_22EAEFC48(v0, (uint64_t)&v33, &qword_268627FD0);
  sub_22EAEFC48((uint64_t)&v33, (uint64_t)&v34, &qword_268627FD0);
  if (v34 != 6)
  {
    OUTLINED_FUNCTION_2_33();
    sub_22EE2EFE4(v2, 0);
  }
  sub_22EAEFC48(v0 + 1, (uint64_t)&v32, &qword_268627FD0);
  sub_22EAEFC48((uint64_t)&v32, (uint64_t)&v35, &qword_268627FD0);
  if (v35 != 6)
  {
    OUTLINED_FUNCTION_2_33();
    sub_22EE2EFE4(v3, 1);
  }
  sub_22EAEFC48(v0 + 2, (uint64_t)&v31, &qword_268627FD8);
  sub_22EAEFC48((uint64_t)&v31, (uint64_t)&v36, &qword_268627FD8);
  if (v36 != 3)
  {
    OUTLINED_FUNCTION_2_33();
    sub_22EE2EFE4(v4, 2);
  }
  OUTLINED_FUNCTION_6_42();
  sub_22EE2EFE4(v5, 3);
  sub_22EAEFC48(v0 + 4, (uint64_t)&v30, &qword_26861D5C8);
  sub_22EAEFC48((uint64_t)&v30, (uint64_t)&v37, &qword_26861D5C8);
  if (v37 != 2)
  {
    OUTLINED_FUNCTION_6_42();
    sub_22EE2EFE4(v6, 4);
  }
  OUTLINED_FUNCTION_6_42();
  sub_22EE2EFE4(v7, 5);
  sub_22EAEFC48(v0 + 6, (uint64_t)&v29, &qword_26861D5C8);
  sub_22EAEFC48((uint64_t)&v29, (uint64_t)&v38, &qword_26861D5C8);
  if (v38 != 2)
  {
    OUTLINED_FUNCTION_6_42();
    sub_22EE2EFE4(v8, 6);
  }
  OUTLINED_FUNCTION_6_42();
  sub_22EE2EFE4(v9, 7);
  sub_22EAEFC48(v0 + 8, (uint64_t)&v28, &qword_26861D5C8);
  sub_22EAEFC48((uint64_t)&v28, (uint64_t)&v39, &qword_26861D5C8);
  if (v39 != 2)
  {
    OUTLINED_FUNCTION_6_42();
    sub_22EE2EFE4(v10, 8);
  }
  OUTLINED_FUNCTION_2_33();
  sub_22EE2EFE4(v11, 9);
  sub_22EAEFC48(v0 + 16, (uint64_t)v27, &qword_268627FE0);
  sub_22EAEFC48((uint64_t)v27, (uint64_t)&v40, &qword_268627FE0);
  if ((v41 & 1) == 0)
  {
    OUTLINED_FUNCTION_2_33();
    sub_22EE2EFE4(v12, 10);
  }
  sub_22EAEFC48(v0 + 32, (uint64_t)v26, &qword_268627FE0);
  sub_22EAEFC48((uint64_t)v26, (uint64_t)&v42, &qword_268627FE0);
  if ((v43 & 1) == 0)
  {
    OUTLINED_FUNCTION_2_33();
    sub_22EE2EFE4(v13, 11);
  }
  sub_22EAEFC48(v0 + 41, (uint64_t)&v25, &qword_268627FE8);
  sub_22EAEFC48((uint64_t)&v25, (uint64_t)&v44, &qword_268627FE8);
  if (v44 != 3)
  {
    OUTLINED_FUNCTION_2_33();
    sub_22EE2EFE4(v14, 12);
  }
  uint64_t v15 = &qword_268627FE8;
  sub_22EAEFC48(v1 + 42, (uint64_t)&v24, &qword_268627FE8);
  sub_22EAEFC48((uint64_t)&v24, (uint64_t)&v45, &qword_268627FE8);
  if (v45 != 3)
  {
    OUTLINED_FUNCTION_2_33();
    sub_22EE2EFE4(v16, 13);
  }
  OUTLINED_FUNCTION_6_42();
  sub_22EE2EFE4(v17, 14);
  sub_22EAEFC48(v1 + 48, (uint64_t)v23, &qword_268627FF0);
  sub_22EAEFC48((uint64_t)v23, (uint64_t)&v46, &qword_268627FF0);
  if (v46)
  {
    uint64_t v18 = sub_22ED2302C();
    if (v19)
    {
      v21[3] = MEMORY[0x263F8D310];
      v21[0] = v18;
      v21[1] = v19;
      uint64_t v15 = &v22;
      sub_22EE2EFE4((uint64_t)v21, 15);
    }
  }
  sub_22EE2E0F8(v22, (uint64_t (*)(uint64_t))sub_22EE30BCC, &qword_268627FF8);
  OUTLINED_FUNCTION_11_29();
  return v15;
}

uint64_t sub_22EE30258@<X0>(_DWORD *a1@<X8>)
{
  *a1 = 3;
  uint64_t v2 = (int *)type metadata accessor for PurchaseConfigurationEvent(0);
  uint64_t v3 = (uint64_t)a1 + v2[8];
  uint64_t v4 = sub_22EE7F3A0();
  __swift_storeEnumTagSinglePayload(v3, 1, 1, v4);
  *(void *)((char *)a1 + v2[9]) = 0;
  uint64_t result = sub_22EE7C3B0();
  uint64_t v6 = (void *)((char *)a1 + v2[11]);
  *uint64_t v6 = 0;
  v6[1] = 0;
  uint64_t v7 = (char *)a1 + v2[12];
  *(void *)uint64_t v7 = 0;
  v7[8] = 1;
  return result;
}

void sub_22EE302EC()
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SKLogger();
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_22EE7F2B0();
  OUTLINED_FUNCTION_0_2();
  uint64_t v8 = v7;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v25 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v25 - v11, v1, v6);
  sub_22EE7F260();
  sub_22EE31944((unint64_t *)&qword_26861CA38, MEMORY[0x263F17DE8]);
  char v13 = OUTLINED_FUNCTION_14_30();
  uint64_t v14 = *(void (**)(void))(v8 + 8);
  OUTLINED_FUNCTION_17_11();
  v14();
  if (v13)
  {
    ((void (*)(char *, uint64_t))v14)(v12, v6);
  }
  else
  {
    sub_22EE7F290();
    char v15 = OUTLINED_FUNCTION_14_30();
    OUTLINED_FUNCTION_17_11();
    v14();
    if ((v15 & 1) != 0
      || (sub_22EE7F280(), char v16 = OUTLINED_FUNCTION_14_30(), OUTLINED_FUNCTION_17_11(), v14(), (v16 & 1) != 0))
    {
      OUTLINED_FUNCTION_17_11();
      v14();
    }
    else
    {
      sub_22EE7F270();
      char v17 = OUTLINED_FUNCTION_14_30();
      OUTLINED_FUNCTION_17_11();
      v14();
      OUTLINED_FUNCTION_17_11();
      v14();
      if ((v17 & 1) == 0)
      {
        if (qword_26861B778 != -1) {
          swift_once();
        }
        uint64_t v18 = __swift_project_value_buffer(v2, (uint64_t)qword_26864C398);
        sub_22EB107F0(v18, (uint64_t)v5);
        uint64_t v27 = 0;
        unint64_t v28 = 0xE000000000000000;
        sub_22EE801C0();
        swift_bridgeObjectRelease();
        uint64_t v27 = 0xD00000000000001ALL;
        unint64_t v28 = 0x800000022EE85D10;
        sub_22EE7F2A0();
        sub_22EE7FAA0();
        swift_bridgeObjectRelease();
        uint64_t v20 = v27;
        unint64_t v19 = v28;
        os_log_type_t v21 = sub_22EE7FFD0();
        swift_bridgeObjectRetain_n();
        uint64_t v22 = sub_22EE7C550();
        os_log_type_t v23 = v21;
        if (os_log_type_enabled(v22, v21))
        {
          uint64_t v24 = swift_slowAlloc();
          uint64_t v27 = swift_slowAlloc();
          *(_DWORD *)uint64_t v24 = 136446466;
          uint64_t v26 = sub_22EC1FA24(0, 0xE000000000000000, &v27);
          sub_22EE800B0();
          *(_WORD *)(v24 + 12) = 2082;
          swift_bridgeObjectRetain();
          uint64_t v26 = sub_22EC1FA24(v20, v19, &v27);
          sub_22EE800B0();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_22EAC6000, v22, v23, "%{public}s%{public}s", (uint8_t *)v24, 0x16u);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_4_5();
          OUTLINED_FUNCTION_4_5();
          swift_bridgeObjectRelease();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        sub_22EB31B10((uint64_t)v5);
      }
    }
  }
  OUTLINED_FUNCTION_5_0();
}

void sub_22EE30718()
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for SKLogger();
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_1_1();
  uint64_t v5 = sub_22EE7F590();
  OUTLINED_FUNCTION_0_2();
  uint64_t v7 = v6;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  MEMORY[0x270FA5388](v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v22 - v10, v2, v5);
  sub_22EE7F570();
  sub_22EE31944(&qword_268620E88, MEMORY[0x263F17EF0]);
  char v11 = OUTLINED_FUNCTION_17_27();
  uint64_t v12 = *(void (**)(void))(v7 + 8);
  OUTLINED_FUNCTION_8_27();
  v12();
  if ((v11 & 1) != 0
    || (sub_22EE7F560(), char v13 = OUTLINED_FUNCTION_17_27(), OUTLINED_FUNCTION_8_27(), v12(), (v13 & 1) != 0))
  {
    OUTLINED_FUNCTION_8_27();
    v12();
    OUTLINED_FUNCTION_8_27();
    v12();
  }
  else
  {
    sub_22EE7F580();
    char v14 = OUTLINED_FUNCTION_17_27();
    OUTLINED_FUNCTION_8_27();
    v12();
    OUTLINED_FUNCTION_8_27();
    v12();
    if (v14)
    {
      OUTLINED_FUNCTION_8_27();
      v12();
    }
    else
    {
      if (qword_26861B778 != -1) {
        swift_once();
      }
      uint64_t v15 = __swift_project_value_buffer(v3, (uint64_t)qword_26864C398);
      sub_22EB107F0(v15, v0);
      uint64_t v26 = 0;
      unint64_t v27 = 0xE000000000000000;
      sub_22EE801C0();
      sub_22EE7FAA0();
      sub_22EE80350();
      uint64_t v17 = v26;
      unint64_t v16 = v27;
      os_log_type_t v18 = sub_22EE7FFD0();
      swift_bridgeObjectRetain_n();
      unint64_t v19 = sub_22EE7C550();
      if (os_log_type_enabled(v19, v18))
      {
        uint64_t v20 = swift_slowAlloc();
        int v23 = v18;
        uint64_t v21 = v20;
        uint64_t v24 = swift_slowAlloc();
        uint64_t v26 = v24;
        *(_DWORD *)uint64_t v21 = 136446466;
        uint64_t v22 = v17;
        uint64_t v25 = sub_22EC1FA24(0, 0xE000000000000000, &v26);
        sub_22EE800B0();
        *(_WORD *)(v21 + 12) = 2082;
        swift_bridgeObjectRetain();
        uint64_t v25 = sub_22EC1FA24(v22, v16, &v26);
        sub_22EE800B0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_22EAC6000, v19, (os_log_type_t)v23, "%{public}s%{public}s", (uint8_t *)v21, 0x16u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_4_5();
        OUTLINED_FUNCTION_4_5();
        swift_bridgeObjectRelease();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      OUTLINED_FUNCTION_8_27();
      v12();
      sub_22EB31B10(v0);
    }
  }
  OUTLINED_FUNCTION_5_0();
}

uint64_t sub_22EE30B20(char a1)
{
  uint64_t result = 0x746E6572727563;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x646172676E776F64;
      break;
    case 2:
      uint64_t result = 0x61726773736F7263;
      break;
    case 3:
      uint64_t result = 0x65646172677075;
      break;
    case 4:
      uint64_t result = 7105633;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22EE30BCC(char a1)
{
  uint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      uint64_t result = 0xD000000000000011;
      break;
    case 2:
      uint64_t result = 0x536C6F72746E6F63;
      break;
    case 4:
      uint64_t result = 0xD000000000000010;
      break;
    case 5:
      uint64_t result = 0xD000000000000018;
      break;
    case 6:
      uint64_t result = 0x7379616C70736964;
      break;
    case 7:
      uint64_t result = 0xD000000000000019;
      break;
    case 8:
      uint64_t result = 0x7469746E45736168;
      break;
    case 9:
      uint64_t result = OUTLINED_FUNCTION_8_36();
      break;
    case 10:
      uint64_t result = 0x736944736E616C70;
      break;
    case 11:
      uint64_t result = 0x716552736E616C70;
      break;
    case 12:
      uint64_t result = 0xD000000000000016;
      break;
    case 14:
      uint64_t result = 0xD00000000000001ALL;
      break;
    case 15:
      uint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22EE30D90()
{
  return sub_22EE312A8();
}

uint64_t sub_22EE30D9C(unsigned __int8 *a1, char *a2)
{
  return sub_22EB1464C(*a1, *a2);
}

uint64_t sub_22EE30DA8()
{
  return sub_22EE2F724(*v0, (void (*)(uint64_t))sub_22EE2F0B8);
}

uint64_t sub_22EE30DD8()
{
  return sub_22ED0DCDC();
}

uint64_t sub_22EE30DE0(uint64_t a1)
{
  return sub_22ED0E038(a1, *v1);
}

uint64_t sub_22EE30DE8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22EE312A8();
  *a1 = result;
  return result;
}

void sub_22EE30E20()
{
  char v1 = OUTLINED_FUNCTION_19_22();
  sub_22EE2F0B8(v1);
  *uint64_t v0 = v2;
  v0[1] = v3;
}

uint64_t sub_22EE30E48()
{
  sub_22EE804E0();
  OUTLINED_FUNCTION_11_29();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_22EE30E8C(char a1)
{
  uint64_t result = 0x6573616863727570;
  switch(a1)
  {
    case 1:
      uint64_t result = 0xD000000000000011;
      break;
    case 2:
      uint64_t result = OUTLINED_FUNCTION_13_34();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22EE30F18(unsigned __int8 *a1, char *a2)
{
  return sub_22EB14490(*a1, *a2);
}

uint64_t sub_22EE30F24()
{
  return sub_22EE2F69C();
}

uint64_t sub_22EE30F2C()
{
  return sub_22ED0DBE4();
}

uint64_t sub_22EE30F34()
{
  return sub_22ED0DFDC();
}

uint64_t sub_22EE30F3C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22EE30E48();
  *a1 = result;
  return result;
}

uint64_t sub_22EE30F6C()
{
  char v1 = OUTLINED_FUNCTION_19_22();
  uint64_t result = sub_22EE30E8C(v1);
  *unint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_22EE30F94()
{
  return sub_22EE31110();
}

uint64_t sub_22EE30FA0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_22EB14634(*a1, *a2);
}

uint64_t sub_22EE30FAC()
{
  return sub_22EE2F724(*v0, (void (*)(uint64_t))sub_22EE2F8B0);
}

uint64_t sub_22EE30FDC(uint64_t a1)
{
  return sub_22ED0DCC4(a1, *v1);
}

uint64_t sub_22EE30FE4(uint64_t a1)
{
  return sub_22ED0E020(a1, *v1);
}

uint64_t sub_22EE30FEC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22EE31110();
  *a1 = result;
  return result;
}

void sub_22EE31024()
{
  char v1 = OUTLINED_FUNCTION_19_22();
  sub_22EE2F8B0(v1);
  *unint64_t v0 = v2;
  v0[1] = v3;
}

uint64_t sub_22EE3104C()
{
  return sub_22EE31110();
}

uint64_t sub_22EE31058(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_22EB14820(*a1, *a2);
}

uint64_t sub_22EE31064()
{
  return sub_22EE2F724(*v0, (void (*)(uint64_t))sub_22EE2FDBC);
}

uint64_t sub_22EE31094(uint64_t a1)
{
  return sub_22ED0DDE4(a1, *v1);
}

uint64_t sub_22EE3109C(uint64_t a1)
{
  return sub_22ED0E050(a1, *v1);
}

uint64_t sub_22EE310A4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22EE31110();
  *a1 = result;
  return result;
}

uint64_t sub_22EE310DC()
{
  char v1 = OUTLINED_FUNCTION_19_22();
  uint64_t result = sub_22EE2FDBC(v1);
  *unint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_22EE31104()
{
  return sub_22EE31110();
}

uint64_t sub_22EE31110()
{
  OUTLINED_FUNCTION_42_7();
  OUTLINED_FUNCTION_11_29();
  if (v0 >= 8) {
    return 8;
  }
  else {
    return v0;
  }
}

uint64_t sub_22EE31140(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_22EB14478(*a1, *a2);
}

uint64_t sub_22EE3114C()
{
  return sub_22EE2F724(*v0, (void (*)(uint64_t))sub_22EE2F7CC);
}

uint64_t sub_22EE3117C(uint64_t a1)
{
  return sub_22ED0DBCC(a1, *v1);
}

uint64_t sub_22EE31184(uint64_t a1)
{
  return sub_22ED0DFC4(a1, *v1);
}

uint64_t sub_22EE3118C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22EE31110();
  *a1 = result;
  return result;
}

uint64_t sub_22EE311C4()
{
  char v1 = OUTLINED_FUNCTION_19_22();
  uint64_t result = sub_22EE2F7CC(v1);
  *unint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_22EE311EC()
{
  sub_22EE804E0();
  OUTLINED_FUNCTION_11_29();
  if (v0 >= 0x10) {
    return 16;
  }
  else {
    return v0;
  }
}

uint64_t sub_22EE31230(unint64_t a1)
{
  if (a1 >= 5) {
    return 4;
  }
  else {
    return (0x302010004uLL >> (8 * a1));
  }
}

uint64_t sub_22EE31254(unint64_t a1)
{
  if (a1 >= 4) {
    return 3;
  }
  else {
    return 0x2010003u >> (8 * a1);
  }
}

uint64_t sub_22EE31274(unint64_t a1)
{
  if (a1 >= 7) {
    return 6;
  }
  else {
    return (0x5040302010006uLL >> (8 * a1));
  }
}

uint64_t sub_22EE3129C()
{
  return sub_22EE312A8();
}

uint64_t sub_22EE312A8()
{
  OUTLINED_FUNCTION_42_7();
  OUTLINED_FUNCTION_11_29();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t _s15StoreKit_Shared11MessageTypeO8rawValueACSgSi_tcfC_0(unint64_t a1)
{
  if (a1 >= 6) {
    return 5;
  }
  else {
    return (0x40302010005uLL >> (8 * a1));
  }
}

uint64_t sub_22EE312FC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_22EB14838(*a1, *a2);
}

uint64_t sub_22EE31308()
{
  return sub_22EE2F724(*v0, (void (*)(uint64_t))sub_22EE30BCC);
}

uint64_t sub_22EE31338(uint64_t a1)
{
  return sub_22ED0DDFC(a1, *v1);
}

uint64_t sub_22EE31340(uint64_t a1)
{
  return sub_22ED0E0AC(a1, *v1);
}

uint64_t sub_22EE31348@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22EE311EC();
  *a1 = result;
  return result;
}

uint64_t sub_22EE31378()
{
  char v1 = OUTLINED_FUNCTION_19_22();
  uint64_t result = sub_22EE30BCC(v1);
  *unint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_22EE313A0()
{
  return sub_22EE2F788();
}

uint64_t sub_22EE313BC()
{
  return sub_22ED0DF4C();
}

uint64_t sub_22EE313C4@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_22EE31230(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_22EE313F0()
{
  unsigned __int8 v1 = OUTLINED_FUNCTION_19_22();
  uint64_t result = sub_22ED708C8(v1);
  *unint64_t v0 = result;
  return result;
}

uint64_t sub_22EE31418@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_22EE31254(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_22EE31444@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_22EE31274(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_22EE31470(unsigned __int8 *a1, char *a2)
{
  return sub_22EB148D8(*a1, *a2);
}

uint64_t sub_22EE3147C()
{
  return sub_22EE2F724(*v0, (void (*)(uint64_t))sub_22EE30B20);
}

uint64_t sub_22EE314AC()
{
  return sub_22ED0DE6C();
}

uint64_t sub_22EE314B4(uint64_t a1)
{
  return sub_22ED0E0C4(a1, *v1);
}

uint64_t sub_22EE314BC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22EE312A8();
  *a1 = result;
  return result;
}

uint64_t sub_22EE314F4()
{
  char v1 = OUTLINED_FUNCTION_19_22();
  uint64_t result = sub_22EE30B20(v1);
  *unint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_22EE3151C@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = _s15StoreKit_Shared11MessageTypeO8rawValueACSgSi_tcfC_0(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_22EE3154C()
{
  unint64_t result = qword_268627F88;
  if (!qword_268627F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627F88);
  }
  return result;
}

unint64_t sub_22EE3159C()
{
  unint64_t result = qword_268627F90;
  if (!qword_268627F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627F90);
  }
  return result;
}

unint64_t sub_22EE315EC()
{
  unint64_t result = qword_268627F98;
  if (!qword_268627F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627F98);
  }
  return result;
}

unint64_t sub_22EE3163C()
{
  unint64_t result = qword_268627FA0;
  if (!qword_268627FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627FA0);
  }
  return result;
}

unint64_t sub_22EE3168C()
{
  unint64_t result = qword_268627FA8;
  if (!qword_268627FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627FA8);
  }
  return result;
}

unint64_t sub_22EE316DC()
{
  unint64_t result = qword_268627FB0;
  if (!qword_268627FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627FB0);
  }
  return result;
}

unint64_t sub_22EE3172C()
{
  unint64_t result = qword_268627FB8;
  if (!qword_268627FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627FB8);
  }
  return result;
}

unint64_t sub_22EE3177C()
{
  unint64_t result = qword_268627FC0;
  if (!qword_268627FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627FC0);
  }
  return result;
}

unint64_t sub_22EE317CC()
{
  unint64_t result = qword_268627FC8;
  if (!qword_268627FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627FC8);
  }
  return result;
}

uint64_t sub_22EE31818()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_22EE7F3A0();
  OUTLINED_FUNCTION_0_2();
  uint64_t v4 = v3;
  __n128 v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))(v8, v1, v2, v6);
  int v9 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v8, v2);
  if (v9 == *MEMORY[0x263F17E50])
  {
    uint64_t v10 = 1;
LABEL_8:
    (*(void (**)(char *, uint64_t))(v4 + 8))(v8, v2);
    return v10;
  }
  if (v9 == *MEMORY[0x263F17E40]) {
    return 0;
  }
  if (v9 != *MEMORY[0x263F17E48])
  {
    uint64_t v10 = 0;
    goto LABEL_8;
  }
  return 2;
}

uint64_t sub_22EE31944(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for PurchaseConfigurationEvent(uint64_t a1)
{
  return sub_22EAD01C0(a1, (uint64_t *)&unk_2686280C8);
}

uint64_t sub_22EE319AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_22ED0E9D8(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268628070);
    sub_22EE80370();
    swift_bridgeObjectRelease();
    uint64_t v10 = *(void *)(v16 + 56);
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E850);
    sub_22EAEFC48(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v8, a3, &qword_26861E850);
    sub_22EE80390();
    *uint64_t v4 = v16;
    swift_bridgeObjectRelease();
    uint64_t v12 = a3;
    uint64_t v13 = 0;
    uint64_t v14 = v11;
  }
  else
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E850);
    uint64_t v12 = a3;
    uint64_t v13 = 1;
  }

  return __swift_storeEnumTagSinglePayload(v12, v13, 1, v14);
}

double sub_22EE31B28@<D0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t *a3@<X2>, void (*a4)(_OWORD *)@<X3>, _OWORD *a5@<X8>)
{
  char v9 = v5;
  swift_bridgeObjectRetain();
  uint64_t v12 = a2(a1);
  LOBYTE(a1) = v13;
  swift_bridgeObjectRelease();
  if (a1)
  {
    swift_isUniquelyReferenced_nonNull_native();
    OUTLINED_FUNCTION_35_16();
    __swift_instantiateConcreteTypeFromMangledName(a3);
    sub_22EE80370();
    uint64_t v14 = sub_22EE329A8((_OWORD *)(*(void *)(v16 + 56) + 32 * v12), a5);
    a4(v14);
    sub_22EE80390();
    *char v9 = v16;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a5 = 0u;
    a5[1] = 0u;
  }
  return result;
}

uint64_t sub_22EE31C64(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_22ED0EC20(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  swift_isUniquelyReferenced_nonNull_native();
  OUTLINED_FUNCTION_35_16();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268628118);
  sub_22EE80370();
  sub_22EC9101C(*(void *)(v8 + 48) + 40 * v4);
  uint64_t v6 = *(void *)(*(void *)(v8 + 56) + 24 * v4);
  sub_22EE80390();
  void *v2 = v8;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_22EE31D74(char a1, uint64_t a2, uint64_t a3)
{
  swift_isUniquelyReferenced_nonNull_native();
  OUTLINED_FUNCTION_9_40();
  sub_22EE32288(a1, a2, a3);
  *uint64_t v3 = v8;

  return swift_bridgeObjectRelease();
}

uint64_t sub_22EE31DF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_22EE323AC(a1, a2, a3);
  *uint64_t v3 = v8;

  return swift_bridgeObjectRelease();
}

uint64_t sub_22EE31E84()
{
  swift_isUniquelyReferenced_nonNull_native();
  OUTLINED_FUNCTION_9_40();
  sub_22EE3216C();
  *uint64_t v0 = v2;

  return swift_bridgeObjectRelease();
}

uint64_t sub_22EE31F1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22EE31F34(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_22EE32500);
}

uint64_t sub_22EE31F34(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  swift_isUniquelyReferenced_nonNull_native();
  OUTLINED_FUNCTION_9_40();
  a4(a1, a2, a3);
  *unint64_t v4 = v10;

  return swift_bridgeObjectRelease();
}

uint64_t sub_22EE31FBC(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  char v8 = a3 & 1;
  swift_isUniquelyReferenced_nonNull_native();
  OUTLINED_FUNCTION_9_40();
  sub_22EE32628(a1, a2, v8, a4);
  *unint64_t v4 = v10;

  return swift_bridgeObjectRelease();
}

void sub_22EE32044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = (void **)v3;
  char v8 = (void *)*v3;
  unint64_t v9 = sub_22ED0E9D8(a2, a3);
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v11 = v9;
  char v12 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861D218);
  if ((sub_22EE80370() & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t v13 = sub_22ED0E9D8(a2, a3);
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_11:
    sub_22EE806E0();
    __break(1u);
    return;
  }
  unint64_t v11 = v13;
LABEL_5:
  uint64_t v15 = *v4;
  if (v12)
  {
    uint64_t v16 = v15[7];

    *(void *)(v16 + 8 * v11) = a1;
  }
  else
  {
    sub_22EE32764(v11, a2, a3, a1, v15);
    swift_bridgeObjectRetain();
  }
}

void sub_22EE3216C()
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v2 = v1;
  unint64_t v4 = v3;
  char v5 = (void **)v0;
  uint64_t v7 = v6;
  unint64_t v9 = v8;
  char v10 = (void *)*v0;
  uint64_t v11 = v3(v6);
  if (__OFADD__(v10[2], (v12 & 1) == 0))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v13 = v11;
  char v14 = v12;
  __swift_instantiateConcreteTypeFromMangledName(v2);
  if ((sub_22EE80370() & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t v15 = v4(v7);
  if ((v14 & 1) != (v16 & 1))
  {
LABEL_11:
    sub_22EE806E0();
    __break(1u);
    return;
  }
  unint64_t v13 = v15;
LABEL_5:
  uint64_t v17 = *v5;
  if (v14)
  {
    __swift_destroy_boxed_opaque_existential_1(v17[7] + 32 * v13);
    OUTLINED_FUNCTION_5_0();
    sub_22EE329A8(v18, v19);
  }
  else
  {
    sub_22EE328A0(v13, v7, v9, v17);
    OUTLINED_FUNCTION_5_0();
  }
}

uint64_t sub_22EE32288(char a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = (void **)v3;
  char v8 = (void *)*v3;
  unint64_t v9 = sub_22ED0E9D8(a2, a3);
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v11 = v9;
  char v12 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268628110);
  uint64_t result = sub_22EE80370();
  if ((result & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t result = sub_22ED0E9D8(a2, a3);
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_11:
    uint64_t result = sub_22EE806E0();
    __break(1u);
    return result;
  }
  unint64_t v11 = result;
LABEL_5:
  uint64_t v15 = *v4;
  if (v12)
  {
    *(unsigned char *)(v15[7] + v11) = a1 & 1;
  }
  else
  {
    sub_22EE327AC(v11, a2, a3, a1 & 1, v15);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_22EE323AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = (void **)v3;
  char v8 = (void *)*v3;
  unint64_t v9 = sub_22ED0E9D8(a2, a3);
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v11 = v9;
  char v12 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268628070);
  if ((sub_22EE80370() & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t v13 = sub_22ED0E9D8(a2, a3);
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_13:
    uint64_t result = sub_22EE806E0();
    __break(1u);
    return result;
  }
  unint64_t v11 = v13;
LABEL_5:
  uint64_t v15 = *v4;
  if (v12)
  {
    uint64_t v16 = v15[7];
    uint64_t v17 = v16
        + *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26861E850) - 8) + 72) * v11;
    return sub_22EE32B74(a1, v17);
  }
  else
  {
    sub_22EE327F4(v11, a2, a3, a1, v15);
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_22EE32500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = (void **)v3;
  char v8 = (void *)*v3;
  unint64_t v9 = sub_22ED0E9D8(a2, a3);
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v11 = v9;
  char v12 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268628078);
  if ((sub_22EE80370() & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t v13 = sub_22ED0E9D8(a2, a3);
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_11:
    uint64_t result = sub_22EE806E0();
    __break(1u);
    return result;
  }
  unint64_t v11 = v13;
LABEL_5:
  uint64_t v15 = *v4;
  if (v12)
  {
    uint64_t v16 = v15[7];
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(v16 + 8 * v11) = a1;
  }
  else
  {
    sub_22EE32764(v11, a2, a3, a1, v15);
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_22EE32628(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  char v5 = (void **)v4;
  char v10 = (void *)*v4;
  unint64_t v11 = sub_22ED0EC20(a4);
  if (__OFADD__(v10[2], (v12 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v13 = v11;
  char v14 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268628118);
  if ((sub_22EE80370() & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t v15 = sub_22ED0EC20(a4);
  if ((v14 & 1) != (v16 & 1))
  {
LABEL_10:
    unint64_t result = sub_22EE806E0();
    __break(1u);
    return result;
  }
  unint64_t v13 = v15;
LABEL_5:
  int v17 = a3 & 1;
  os_log_type_t v18 = *v5;
  if (v14)
  {
    uint64_t v19 = v18[7] + 24 * v13;
    unint64_t result = sub_22EADB1A4(*(void *)v19, *(void *)(v19 + 8), *(unsigned char *)(v19 + 16));
    *(void *)uint64_t v19 = a1;
    *(void *)(v19 + 8) = a2;
    *(unsigned char *)(v19 + 16) = v17 != 0;
  }
  else
  {
    sub_22EADAAEC(a4, (uint64_t)v21);
    return sub_22EE32908(v13, (uint64_t)v21, a1, a2, v17, v18);
  }
  return result;
}

unint64_t sub_22EE32764(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  char v5 = (void *)(a5[6] + 16 * result);
  *char v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

unint64_t sub_22EE327AC(unint64_t result, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  char v5 = (void *)(a5[6] + 16 * result);
  *char v5 = a2;
  v5[1] = a3;
  *(unsigned char *)(a5[7] + result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

uint64_t sub_22EE327F4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = (void *)(a5[6] + 16 * a1);
  *uint64_t v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E850);
  uint64_t result = sub_22EAEFC48(a4, v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1, &qword_26861E850);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

_OWORD *sub_22EE328A0(unint64_t a1, char a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(unsigned char *)(a4[6] + a1) = a2;
  uint64_t result = sub_22EE329A8(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

unint64_t sub_22EE32908(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  uint64_t v6 = a6[6] + 40 * result;
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v6 = *(_OWORD *)a2;
  *(_OWORD *)(v6 + 16) = v7;
  *(void *)(v6 + 32) = *(void *)(a2 + 32);
  uint64_t v8 = a6[7] + 24 * result;
  *(void *)uint64_t v8 = a3;
  *(void *)(v8 + 8) = a4;
  *(unsigned char *)(v8 + 16) = a5 & 1;
  uint64_t v9 = a6[2];
  BOOL v10 = __OFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10) {
    __break(1u);
  }
  else {
    a6[2] = v11;
  }
  return result;
}

uint64_t sub_22EE32970@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = -1;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  *a2 = a1;
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t result = a1 + 64;
  uint64_t v5 = v6;
  if (-v3 < 64) {
    uint64_t v2 = ~(-1 << -(char)v3);
  }
  a2[1] = result;
  a2[2] = ~v3;
  a2[3] = 0;
  a2[4] = v2 & v5;
  return result;
}

_OWORD *sub_22EE329A8(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_22EE329B8()
{
  unint64_t result = qword_268628008;
  if (!qword_268628008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628008);
  }
  return result;
}

unint64_t sub_22EE32A04()
{
  unint64_t result = qword_268628020;
  if (!qword_268628020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628020);
  }
  return result;
}

uint64_t type metadata accessor for MintViewBasePurchaseEvent(uint64_t a1)
{
  return sub_22EAD01C0(a1, (uint64_t *)&unk_2686280B8);
}

unint64_t sub_22EE32A70()
{
  unint64_t result = qword_268628038;
  if (!qword_268628038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628038);
  }
  return result;
}

uint64_t type metadata accessor for ProductViewBaseEvent(uint64_t a1)
{
  return sub_22EAD01C0(a1, (uint64_t *)&unk_2686280A8);
}

unint64_t sub_22EE32ADC()
{
  unint64_t result = qword_268628050;
  if (!qword_268628050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628050);
  }
  return result;
}

unint64_t sub_22EE32B28()
{
  unint64_t result = qword_268628068;
  if (!qword_268628068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628068);
  }
  return result;
}

uint64_t sub_22EE32B74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E850);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for MintDisappearBaseEvent(uint64_t a1)
{
  return sub_22EAD01C0(a1, (uint64_t *)&unk_268628098);
}

unint64_t sub_22EE32BFC()
{
  unint64_t result = qword_268628090;
  if (!qword_268628090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628090);
  }
  return result;
}

uint64_t sub_22EE32C48(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return OUTLINED_FUNCTION_33_12(-1);
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return OUTLINED_FUNCTION_33_12((*a1 | (v4 << 8)) - 4);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return OUTLINED_FUNCTION_33_12((*a1 | (v4 << 8)) - 4);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return OUTLINED_FUNCTION_33_12((*a1 | (v4 << 8)) - 4);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return OUTLINED_FUNCTION_33_12(v8);
}

unsigned char *sub_22EE32CCC(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        unint64_t result = (unsigned char *)OUTLINED_FUNCTION_29_17((uint64_t)result, v6);
        break;
      case 2:
        unint64_t result = (unsigned char *)OUTLINED_FUNCTION_26_14((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22EE32D88);
      case 4:
        unint64_t result = (unsigned char *)OUTLINED_FUNCTION_27_12((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          unint64_t result = OUTLINED_FUNCTION_5_20(result, a2 + 3);
        break;
    }
  }
  return result;
}

void type metadata accessor for MintDisappearBaseEvent.PayloadKey()
{
}

void *sub_22EE32DBC(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (void *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_22EE7C3C0();
    int v8 = *(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((void *)((char *)a1 + a3[5]), (void *)((char *)a2 + a3[5]), v7);
    uint64_t v9 = a3[7];
    *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
  }
  return a1;
}

uint64_t sub_22EE32EB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22EE7C3C0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v4 - 8), a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);

  return v7(v5, v4);
}

uint64_t sub_22EE32F58(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_22EE7C3C0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  return a1;
}

uint64_t sub_22EE33004(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_22EE7C3C0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_22EE330B4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_22EE7C3C0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  return a1;
}

uint64_t sub_22EE33160(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_22EE7C3C0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  return a1;
}

uint64_t sub_22EE3320C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EE33220);
}

uint64_t sub_22EE33220()
{
  OUTLINED_FUNCTION_40_9();
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v4 + 84) == v1)
  {
    return __swift_getEnumTagSinglePayload(v0, v1, v3);
  }
  else
  {
    unsigned int v6 = *(unsigned __int8 *)(v0 + *(int *)(v2 + 28));
    if (v6 >= 2) {
      return OUTLINED_FUNCTION_43_8(v6);
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_22EE332A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EE332B4);
}

void sub_22EE332B4()
{
  OUTLINED_FUNCTION_34_13();
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v4 + 84) == v3)
  {
    uint64_t v5 = OUTLINED_FUNCTION_16();
    __swift_storeEnumTagSinglePayload(v5, v6, v7, v8);
  }
  else
  {
    *(unsigned char *)(v1 + *(int *)(v2 + 28)) = v0 + 1;
  }
}

uint64_t sub_22EE3331C()
{
  uint64_t result = sub_22EE7C3C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

__n128 __swift_memcpy35_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 31) = *(_DWORD *)(a2 + 31);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_22EE333D0(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 35))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 2);
      BOOL v4 = v3 >= 2;
      int v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_22EE3341C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 34) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 35) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 35) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 2) = a2 + 1;
    }
  }
  return result;
}

void type metadata accessor for StoreViewBaseEvent()
{
}

void type metadata accessor for StoreViewBaseEvent.PayloadKey()
{
}

void type metadata accessor for ProductViewBaseEvent.PayloadKey()
{
}

void *sub_22EE33494(_WORD *a1, void *a2, int *a3)
{
  BOOL v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *BOOL v4 = *a2;
    BOOL v4 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_WORD *)a2;
    uint64_t v7 = a3[6];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_22EE7F2B0();
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
    {
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E4E0);
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
    }
    uint64_t v13 = a3[8];
    *((unsigned char *)v4 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    *((unsigned char *)v4 + v13) = *((unsigned char *)a2 + v13);
    uint64_t v14 = a3[10];
    *((unsigned char *)v4 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    *((unsigned char *)v4 + v14) = *((unsigned char *)a2 + v14);
  }
  return v4;
}

uint64_t sub_22EE335F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  uint64_t v3 = sub_22EE7F2B0();
  uint64_t result = __swift_getEnumTagSinglePayload(v2, 1, v3);
  if (!result)
  {
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v5(v2, v3);
  }
  return result;
}

_WORD *sub_22EE33680(_WORD *a1, _WORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22EE7F2B0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E4E0);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + v11) = *((unsigned char *)a2 + v11);
  uint64_t v12 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *((unsigned char *)a1 + v12) = *((unsigned char *)a2 + v12);
  return a1;
}

unsigned char *sub_22EE33790(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = a3[6];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_22EE7F2B0();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  int v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (!EnumTagSinglePayload)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E4E0);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
LABEL_7:
  a1[a3[7]] = a2[a3[7]];
  a1[a3[8]] = a2[a3[8]];
  a1[a3[9]] = a2[a3[9]];
  a1[a3[10]] = a2[a3[10]];
  return a1;
}

_WORD *sub_22EE33938(_WORD *a1, _WORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22EE7F2B0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E4E0);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + v11) = *((unsigned char *)a2 + v11);
  uint64_t v12 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *((unsigned char *)a1 + v12) = *((unsigned char *)a2 + v12);
  return a1;
}

_WORD *sub_22EE33A48(_WORD *a1, _WORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22EE7F2B0();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  int v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (!EnumTagSinglePayload)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E4E0);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
LABEL_7:
  uint64_t v14 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + v14) = *((unsigned char *)a2 + v14);
  uint64_t v15 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *((unsigned char *)a1 + v15) = *((unsigned char *)a2 + v15);
  return a1;
}

uint64_t sub_22EE33BE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EE33BF4);
}

uint64_t sub_22EE33BF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861E4E0);
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
  else
  {
    unsigned int v11 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
    if (v11 >= 2) {
      return OUTLINED_FUNCTION_43_8(v11);
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_22EE33C8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EE33CA0);
}

void sub_22EE33CA0()
{
  OUTLINED_FUNCTION_7_26();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861E4E0);
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v5 + 84) == v3)
  {
    uint64_t v6 = v4;
    uint64_t v7 = v1 + *(int *)(v2 + 24);
    __swift_storeEnumTagSinglePayload(v7, v0, v0, v6);
  }
  else
  {
    *(unsigned char *)(v1 + *(int *)(v2 + 28)) = v0 + 1;
  }
}

void sub_22EE33D24()
{
  sub_22EE35AC0(319, &qword_268625C00, MEMORY[0x263F17DE8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_22EE33DF0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return OUTLINED_FUNCTION_33_12(-1);
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return OUTLINED_FUNCTION_33_12((*a1 | (v4 << 8)) - 8);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return OUTLINED_FUNCTION_33_12((*a1 | (v4 << 8)) - 8);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return OUTLINED_FUNCTION_33_12((*a1 | (v4 << 8)) - 8);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return OUTLINED_FUNCTION_33_12(v8);
}

unsigned char *sub_22EE33E74(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        uint64_t result = (unsigned char *)OUTLINED_FUNCTION_29_17((uint64_t)result, v6);
        break;
      case 2:
        uint64_t result = (unsigned char *)OUTLINED_FUNCTION_26_14((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22EE33F30);
      case 4:
        uint64_t result = (unsigned char *)OUTLINED_FUNCTION_27_12((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          uint64_t result = OUTLINED_FUNCTION_5_20(result, a2 + 7);
        break;
    }
  }
  return result;
}

void type metadata accessor for MintViewBasePurchaseEvent.PayloadKey()
{
}

void *sub_22EE33F64(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_22EE7C3C0();
    int v8 = *(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    v8((void *)((char *)a1 + v9), (void *)((char *)a2 + v9), v7);
    uint64_t v10 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    unsigned int v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    *(void *)unsigned int v11 = *(void *)v12;
    v11[8] = v12[8];
    uint64_t v13 = a3[9];
    uint64_t v14 = a3[10];
    uint64_t v15 = (void *)((char *)a1 + v13);
    char v16 = (void *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    *((unsigned char *)a1 + v14) = *((unsigned char *)a2 + v14);
    uint64_t v18 = a3[12];
    *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    *((unsigned char *)a1 + v18) = *((unsigned char *)a2 + v18);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_22EE340AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22EE7C3C0();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 24), v4);

  return swift_bridgeObjectRelease();
}

uint64_t sub_22EE34150(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_22EE7C3C0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  v7(a1 + v8, a2 + v8, v6);
  uint64_t v9 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(void *)uint64_t v10 = *(void *)v11;
  *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
  uint64_t v12 = a3[9];
  uint64_t v13 = a3[10];
  uint64_t v14 = (void *)(a1 + v12);
  uint64_t v15 = (void *)(a2 + v12);
  uint64_t v16 = v15[1];
  void *v14 = *v15;
  v14[1] = v16;
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  uint64_t v17 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v17) = *(unsigned char *)(a2 + v17);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_22EE34248(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_22EE7C3C0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  v7(a1 + a3[6], a2 + a3[6], v6);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v8 = a3[8];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  char v11 = *(unsigned char *)(v10 + 8);
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = v11;
  uint64_t v12 = a3[9];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_22EE34364(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_22EE7C3C0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  v7(a1 + v8, a2 + v8, v6);
  uint64_t v9 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(void *)uint64_t v10 = *(void *)v11;
  *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
  uint64_t v12 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  uint64_t v13 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  return a1;
}

uint64_t sub_22EE34450(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_22EE7C3C0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  v7(a1 + v8, a2 + v8, v6);
  uint64_t v9 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(void *)uint64_t v10 = *(void *)v11;
  *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
  uint64_t v12 = a3[9];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + v17) = *(unsigned char *)(a2 + v17);
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_22EE34550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EE34564);
}

uint64_t sub_22EE34564()
{
  OUTLINED_FUNCTION_40_9();
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v4 + 84) != v1) {
    return OUTLINED_FUNCTION_6_36(*(void *)(v0 + *(int *)(v2 + 36) + 8));
  }

  return __swift_getEnumTagSinglePayload(v0, v1, v3);
}

uint64_t sub_22EE345D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EE345EC);
}

void sub_22EE345EC()
{
  OUTLINED_FUNCTION_34_13();
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v4 + 84) == v3)
  {
    uint64_t v5 = OUTLINED_FUNCTION_16();
    __swift_storeEnumTagSinglePayload(v5, v6, v7, v8);
  }
  else
  {
    *(void *)(v1 + *(int *)(v2 + 36) + 8) = v0;
  }
}

uint64_t sub_22EE34658()
{
  uint64_t result = sub_22EE7C3C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_22EE34718(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_22EE34758(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  return a1;
}

__n128 __swift_memcpy19_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_DWORD *)(a1 + 15) = *(_DWORD *)(a2 + 15);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_22EE347D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  return a1;
}

uint64_t sub_22EE3481C(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 19))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_22EE34870(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(unsigned char *)(result + 18) = 0;
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 19) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 19) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

void type metadata accessor for MintViewBaseEvent()
{
}

uint64_t sub_22EE348D4(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return OUTLINED_FUNCTION_33_12(-1);
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return OUTLINED_FUNCTION_33_12((*a1 | (v4 << 8)) - 5);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return OUTLINED_FUNCTION_33_12((*a1 | (v4 << 8)) - 5);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return OUTLINED_FUNCTION_33_12((*a1 | (v4 << 8)) - 5);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return OUTLINED_FUNCTION_33_12(v8);
}

unsigned char *sub_22EE34958(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        __n128 result = (unsigned char *)OUTLINED_FUNCTION_29_17((uint64_t)result, v6);
        break;
      case 2:
        __n128 result = (unsigned char *)OUTLINED_FUNCTION_26_14((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22EE34A14);
      case 4:
        __n128 result = (unsigned char *)OUTLINED_FUNCTION_27_12((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          __n128 result = OUTLINED_FUNCTION_5_20(result, a2 + 4);
        break;
    }
  }
  return result;
}

void type metadata accessor for MintViewBaseEvent.PayloadKey()
{
}

uint64_t sub_22EE34A48()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_22EE34A50(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_22EE34AB0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(unsigned char *)(a1 + 3) = *(unsigned char *)(a2 + 3);
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(unsigned char *)(a1 + 5) = *(unsigned char *)(a2 + 5);
  *(unsigned char *)(a1 + 6) = *(unsigned char *)(a2 + 6);
  *(unsigned char *)(a1 + 7) = *(unsigned char *)(a2 + 7);
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  uint64_t v3 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  *(unsigned char *)(a1 + 43) = *(unsigned char *)(a2 + 43);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22EE34B74(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  *(unsigned char *)(a1 + 3) = *(unsigned char *)(a2 + 3);
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(unsigned char *)(a1 + 5) = *(unsigned char *)(a2 + 5);
  *(unsigned char *)(a1 + 6) = *(unsigned char *)(a2 + 6);
  *(unsigned char *)(a1 + 7) = *(unsigned char *)(a2 + 7);
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_WORD *)(a1 + 41) = *(_WORD *)(a2 + 41);
  *(unsigned char *)(a1 + 43) = *(unsigned char *)(a2 + 43);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22EE34C18(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 56))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 48);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_22EE34C6C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2) {
      *(void *)(result + 48) = a2;
    }
  }
  return result;
}

void type metadata accessor for SubscriptionStoreViewBaseEvent()
{
}

uint64_t sub_22EE34CD8(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF1)
  {
    if (a2 + 15 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 15) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 16;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x10;
  int v5 = v6 - 16;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *sub_22EE34D60(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 15 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 15) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF0)
  {
    unsigned int v6 = ((a2 - 241) >> 8) + 1;
    *__n128 result = a2 + 15;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22EE34E2CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 15;
        break;
    }
  }
  return result;
}

void type metadata accessor for SubscriptionStoreViewBaseEvent.PayloadKey()
{
}

uint64_t *sub_22EE34E60(uint64_t *a1, uint64_t *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    uint64_t v7 = a3[8];
    int v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_22EE7F3A0();
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
    {
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620E78);
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
    }
    uint64_t v13 = a3[9];
    uint64_t v14 = *(void **)((char *)a2 + v13);
    id v15 = v14;
    *(uint64_t *)((char *)v4 + v13) = (uint64_t)v14;
    uint64_t v16 = a3[10];
    uint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_22EE7C3C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[11];
    uint64_t v21 = a3[12];
    uint64_t v22 = (uint64_t *)((char *)v4 + v20);
    int v23 = (uint64_t *)((char *)a2 + v20);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    uint64_t v25 = (char *)v4 + v21;
    uint64_t v26 = (char *)a2 + v21;
    v25[8] = v26[8];
    *(void *)uint64_t v25 = *(void *)v26;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_22EE35024(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[8];
  uint64_t v5 = sub_22EE7F3A0();
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }

  uint64_t v6 = a1 + a2[10];
  uint64_t v7 = sub_22EE7C3C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return swift_bridgeObjectRelease();
}

_DWORD *sub_22EE35110(_DWORD *a1, _DWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[8];
  uint64_t v7 = (char *)a1 + v6;
  int v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22EE7F3A0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620E78);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = a3[9];
  uint64_t v12 = *(void **)((char *)a2 + v11);
  id v13 = v12;
  *(void *)((char *)a1 + v11) = v12;
  uint64_t v14 = a3[10];
  id v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_22EE7C3C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  uint64_t v18 = a3[11];
  uint64_t v19 = a3[12];
  uint64_t v20 = (void *)((char *)a1 + v18);
  uint64_t v21 = (void *)((char *)a2 + v18);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  int v23 = (char *)a1 + v19;
  uint64_t v24 = (char *)a2 + v19;
  v23[8] = v24[8];
  *(void *)int v23 = *(void *)v24;
  swift_bridgeObjectRetain();
  return a1;
}

unsigned char *sub_22EE35284(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  uint64_t v6 = a3[8];
  uint64_t v7 = &a1[v6];
  int v8 = &a2[v6];
  uint64_t v9 = sub_22EE7F3A0();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  int v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (!EnumTagSinglePayload)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620E78);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
LABEL_7:
  uint64_t v14 = a3[9];
  id v15 = *(void **)&a1[v14];
  uint64_t v16 = *(void **)&a2[v14];
  id v17 = v16;
  *(void *)&a1[v14] = v16;

  uint64_t v18 = a3[10];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = sub_22EE7C3C0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v21 - 8) + 24))(v19, v20, v21);
  uint64_t v22 = a3[11];
  int v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  void *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[12];
  uint64_t v26 = &a1[v25];
  unint64_t v27 = &a2[v25];
  uint64_t v28 = *(void *)v27;
  v26[8] = v27[8];
  *(void *)uint64_t v26 = v28;
  return a1;
}

_DWORD *sub_22EE354BC(_DWORD *a1, _DWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[8];
  uint64_t v7 = (char *)a1 + v6;
  int v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22EE7F3A0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620E78);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_22EE7C3C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[12];
  *(_OWORD *)((char *)a1 + a3[11]) = *(_OWORD *)((char *)a2 + a3[11]);
  uint64_t v16 = (char *)a1 + v15;
  id v17 = (char *)a2 + v15;
  v16[8] = v17[8];
  *(void *)uint64_t v16 = *(void *)v17;
  return a1;
}

unsigned char *sub_22EE35618(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  uint64_t v6 = a3[8];
  uint64_t v7 = &a1[v6];
  int v8 = &a2[v6];
  uint64_t v9 = sub_22EE7F3A0();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  int v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (!EnumTagSinglePayload)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268620E78);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
LABEL_7:
  uint64_t v14 = a3[9];
  uint64_t v15 = *(void **)&a1[v14];
  *(void *)&a1[v14] = *(void *)&a2[v14];

  uint64_t v16 = a3[10];
  id v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = sub_22EE7C3C0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  uint64_t v20 = a3[11];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = (uint64_t *)&a2[v20];
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *uint64_t v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[12];
  uint64_t v26 = &a1[v25];
  unint64_t v27 = &a2[v25];
  *(void *)uint64_t v26 = *(void *)v27;
  v26[8] = v27[8];
  return a1;
}

uint64_t sub_22EE35834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EE35848);
}

uint64_t sub_22EE35848(uint64_t a1, uint64_t a2, int *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_268620E78);
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a3[8];
  }
  else
  {
    if (a2 == 2147483646) {
      return OUTLINED_FUNCTION_6_36(*(void *)(a1 + a3[9]));
    }
    uint64_t v8 = sub_22EE7C3C0();
    uint64_t v9 = a3[10];
  }

  return __swift_getEnumTagSinglePayload(a1 + v9, a2, v8);
}

uint64_t sub_22EE358F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EE35904);
}

void sub_22EE35904()
{
  OUTLINED_FUNCTION_7_26();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268620E78);
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v5 + 84) == v3)
  {
    uint64_t v6 = v4;
    uint64_t v7 = v2[8];
  }
  else
  {
    if (v3 == 2147483646)
    {
      *(void *)(v1 + v2[9]) = v0;
      return;
    }
    uint64_t v6 = sub_22EE7C3C0();
    uint64_t v7 = v2[10];
  }

  __swift_storeEnumTagSinglePayload(v1 + v7, v0, v0, v6);
}

void sub_22EE359A8()
{
  sub_22EE35AC0(319, &qword_2686280D8, MEMORY[0x263F17E58]);
  if (v0 <= 0x3F)
  {
    sub_22EE7C3C0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_22EE35AC0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_22EE80040();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_22EE35B18()
{
  unint64_t result = qword_2686280E0;
  if (!qword_2686280E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686280E0);
  }
  return result;
}

unint64_t sub_22EE35B68()
{
  unint64_t result = qword_2686280E8;
  if (!qword_2686280E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686280E8);
  }
  return result;
}

unint64_t sub_22EE35BB8()
{
  unint64_t result = qword_2686280F0;
  if (!qword_2686280F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686280F0);
  }
  return result;
}

unint64_t sub_22EE35C08()
{
  unint64_t result = qword_2686280F8;
  if (!qword_2686280F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686280F8);
  }
  return result;
}

unint64_t sub_22EE35C58()
{
  unint64_t result = qword_268628100;
  if (!qword_268628100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628100);
  }
  return result;
}

unint64_t sub_22EE35CA8()
{
  unint64_t result = qword_268628108;
  if (!qword_268628108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628108);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_8_36()
{
  return 0x696C616974696E69;
}

void OUTLINED_FUNCTION_9_40()
{
  *unint64_t v0 = 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_11_29()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_13_34()
{
  return 0x6E657053656D6974;
}

uint64_t OUTLINED_FUNCTION_14_30()
{
  return sub_22EE7F900();
}

uint64_t OUTLINED_FUNCTION_15_28()
{
  return 0x7250646568736168;
}

uint64_t OUTLINED_FUNCTION_17_27()
{
  return sub_22EE7F900();
}

uint64_t *OUTLINED_FUNCTION_18_26(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return &a9;
}

uint64_t OUTLINED_FUNCTION_19_22()
{
  return *v0;
}

uint64_t OUTLINED_FUNCTION_20_25@<X0>(char a1@<W8>)
{
  *(void *)(v2 - 96) = v1;
  *(unsigned char *)(v2 - 120) = a1;
  return v2 - 120;
}

char *OUTLINED_FUNCTION_22_24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  return &a10;
}

uint64_t OUTLINED_FUNCTION_24_18()
{
  return 0x656C797473;
}

uint64_t OUTLINED_FUNCTION_26_14@<X0>(uint64_t result@<X0>, __int16 a2@<W8>)
{
  *(_WORD *)(result + 1) = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_27_12@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  *(_DWORD *)(result + 1) = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_29_17@<X0>(uint64_t result@<X0>, char a2@<W8>)
{
  *(unsigned char *)(result + 1) = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_33_12@<X0>(int a1@<W8>)
{
  return (a1 + 1);
}

uint64_t OUTLINED_FUNCTION_34_13()
{
  return sub_22EE7C3C0();
}

void OUTLINED_FUNCTION_35_16()
{
  *uint64_t v0 = 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_37_16@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 - 96) = v1;
  *(void *)(v2 - 120) = a1 + 1;
  return v2 - 120;
}

uint64_t OUTLINED_FUNCTION_40_9()
{
  return sub_22EE7C3C0();
}

uint64_t OUTLINED_FUNCTION_42_7()
{
  return sub_22EE804E0();
}

uint64_t OUTLINED_FUNCTION_43_8@<X0>(int a1@<W8>)
{
  return ((a1 + 2147483646) & 0x7FFFFFFFu) + 1;
}

void *sub_22EE35F5C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *int v3 = *a2;
    int v3 = (void *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(_WORD *)(a1 + 17) = *(_WORD *)((char *)a2 + 17);
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    *(_WORD *)(a1 + v6) = *(_WORD *)((char *)a2 + v6);
    uint64_t v9 = (int *)type metadata accessor for ProductViewBaseEvent(0);
    uint64_t v10 = v9[6];
    int v11 = (void *)(v7 + v10);
    uint64_t v12 = (const void *)(v8 + v10);
    uint64_t v13 = sub_22EE7F2B0();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E4E0);
      memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
    }
    *(unsigned char *)(v7 + v9[7]) = *(unsigned char *)(v8 + v9[7]);
    *(unsigned char *)(v7 + v9[8]) = *(unsigned char *)(v8 + v9[8]);
    *(unsigned char *)(v7 + v9[9]) = *(unsigned char *)(v8 + v9[9]);
    *(unsigned char *)(v7 + v9[10]) = *(unsigned char *)(v8 + v9[10]);
  }
  return v3;
}

uint64_t sub_22EE360FC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = v4 + *(int *)(type metadata accessor for ProductViewBaseEvent(0) + 24);
  uint64_t v6 = sub_22EE7F2B0();
  uint64_t result = __swift_getEnumTagSinglePayload(v5, 1, v6);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    return v8(v5, v6);
  }
  return result;
}

uint64_t sub_22EE361A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  *(_WORD *)(a1 + v5) = *(_WORD *)(a2 + v5);
  uint64_t v8 = (int *)type metadata accessor for ProductViewBaseEvent(0);
  uint64_t v9 = v8[6];
  uint64_t v10 = (void *)(v6 + v9);
  int v11 = (const void *)(v7 + v9);
  uint64_t v12 = sub_22EE7F2B0();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E4E0);
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
  }
  *(unsigned char *)(v6 + v8[7]) = *(unsigned char *)(v7 + v8[7]);
  *(unsigned char *)(v6 + v8[8]) = *(unsigned char *)(v7 + v8[8]);
  *(unsigned char *)(v6 + v8[9]) = *(unsigned char *)(v7 + v8[9]);
  *(unsigned char *)(v6 + v8[10]) = *(unsigned char *)(v7 + v8[10]);
  return a1;
}

uint64_t sub_22EE362F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (unsigned char *)(a1 + v6);
  uint64_t v8 = a2 + v6;
  *uint64_t v7 = *(unsigned char *)(a2 + v6);
  v7[1] = *(unsigned char *)(a2 + v6 + 1);
  uint64_t v9 = (int *)type metadata accessor for ProductViewBaseEvent(0);
  uint64_t v10 = v9[6];
  int v11 = &v7[v10];
  uint64_t v12 = (const void *)(v8 + v10);
  uint64_t v13 = sub_22EE7F2B0();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v13);
  int v15 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (!EnumTagSinglePayload)
  {
    uint64_t v16 = *(void *)(v13 - 8);
    if (!v15)
    {
      (*(void (**)(unsigned char *, const void *, uint64_t))(v16 + 24))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(unsigned char *, uint64_t))(v16 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E4E0);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, const void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
LABEL_7:
  v7[v9[7]] = *(unsigned char *)(v8 + v9[7]);
  v7[v9[8]] = *(unsigned char *)(v8 + v9[8]);
  v7[v9[9]] = *(unsigned char *)(v8 + v9[9]);
  v7[v9[10]] = *(unsigned char *)(v8 + v9[10]);
  return a1;
}

uint64_t sub_22EE364F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 15) = *(_DWORD *)(a2 + 15);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  *(_WORD *)(a1 + v4) = *(_WORD *)(a2 + v4);
  uint64_t v7 = (int *)type metadata accessor for ProductViewBaseEvent(0);
  uint64_t v8 = v7[6];
  uint64_t v9 = (void *)(v5 + v8);
  uint64_t v10 = (const void *)(v6 + v8);
  uint64_t v11 = sub_22EE7F2B0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E4E0);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
  }
  *(unsigned char *)(v5 + v7[7]) = *(unsigned char *)(v6 + v7[7]);
  *(unsigned char *)(v5 + v7[8]) = *(unsigned char *)(v6 + v7[8]);
  *(unsigned char *)(v5 + v7[9]) = *(unsigned char *)(v6 + v7[9]);
  *(unsigned char *)(v5 + v7[10]) = *(unsigned char *)(v6 + v7[10]);
  return a1;
}

uint64_t sub_22EE36630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_WORD *)(a1 + v7) = *(_WORD *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for ProductViewBaseEvent(0);
  uint64_t v11 = v10[6];
  uint64_t v12 = (void *)(v8 + v11);
  uint64_t v13 = (const void *)(v9 + v11);
  uint64_t v14 = sub_22EE7F2B0();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v14);
  int v16 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14);
  if (!EnumTagSinglePayload)
  {
    uint64_t v17 = *(void *)(v14 - 8);
    if (!v16)
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 40))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E4E0);
    memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
LABEL_7:
  *(unsigned char *)(v8 + v10[7]) = *(unsigned char *)(v9 + v10[7]);
  *(unsigned char *)(v8 + v10[8]) = *(unsigned char *)(v9 + v10[8]);
  *(unsigned char *)(v8 + v10[9]) = *(unsigned char *)(v9 + v10[9]);
  *(unsigned char *)(v8 + v10[10]) = *(unsigned char *)(v9 + v10[10]);
  return a1;
}

uint64_t sub_22EE36808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EE3681C);
}

uint64_t sub_22EE3681C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = type metadata accessor for ProductViewBaseEvent(0);
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    return __swift_getEnumTagSinglePayload(v10, a2, v9);
  }
}

uint64_t sub_22EE368B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EE368C4);
}

uint64_t sub_22EE368C4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = type metadata accessor for ProductViewBaseEvent(0);
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return __swift_storeEnumTagSinglePayload(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for ProductViewAppearanceEvent()
{
  uint64_t result = qword_268628120;
  if (!qword_268628120) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_22EE3698C()
{
  uint64_t result = type metadata accessor for ProductViewBaseEvent(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_22EE36A24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  uint64_t v31 = a1;
  uint64_t v35 = a6;
  uint64_t v8 = *(void *)(a5 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v10 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v32 = (uint64_t)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  int v15 = (char *)&v29 - v14;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v29 - v17;
  MEMORY[0x270FA5388](v19);
  char v30 = (char *)&v29 - v20;
  MEMORY[0x270FA5388](v21);
  char v38 = (char *)&v29 - v22;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_22EE806A0();
  uint64_t v29 = v8;
  sub_22EE80630();
  uint64_t v36 = a5;
  sub_22EE36E38(v31, a4, a5, (uint64_t)v15);
  uint64_t v23 = *(void *)(*(void *)(*(void *)(a5 + 16) + 16) + 8);
  sub_22EE7FE00();
  uint64_t v24 = *(void (**)(char *, uint64_t))(v10 + 8);
  v24(v15, a4);
  v24(v18, a4);
  sub_22EE806A0();
  sub_22EE80630();
  uint64_t v25 = v32;
  sub_22EE36E38(v33, a4, v36, v32);
  sub_22EE7FE00();
  v24((char *)v25, a4);
  v24(v15, a4);
  uint64_t v33 = *(void *)(v23 + 8);
  uint64_t v26 = v30;
  sub_22EE803C0();
  v24(v18, a4);
  v24(v26, a4);
  sub_22EE806A0();
  sub_22EE80630();
  sub_22EE36E38(v34, a4, v36, (uint64_t)v15);
  sub_22EE7FE00();
  v24(v15, a4);
  v24(v18, a4);
  unint64_t v27 = v38;
  sub_22EE803C0();
  v24(v26, a4);
  return ((uint64_t (*)(char *, uint64_t))v24)(v27, a4);
}

uint64_t sub_22EE36E38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v25 = a4;
  uint64_t v7 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v22 = (char *)&v21 - v11;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v21 - v13;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_22EE806A0();
  sub_22EE80630();
  uint64_t v23 = a3;
  uint64_t v24 = a1;
  uint64_t v16 = *(void *)(a3 + 16);
  char v17 = sub_22EE7F8A0();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v7 + 8);
  v18(v14, a2);
  sub_22EE806A0();
  sub_22EE80630();
  if (v17)
  {
    sub_22EE7F810();
  }
  else
  {
    uint64_t v21 = v16;
    uint64_t v19 = v22;
    sub_22EE803C0();
    v18(v9, a2);
    sub_22EE806A0();
    sub_22EE80630();
    sub_22EE7F810();
    v18(v9, a2);
    v18(v19, a2);
    sub_22EE806A0();
    sub_22EE80630();
    (*(void (**)(char *, char *, uint64_t))(v23 + 24))(v14, v19, a2);
    v18(v19, a2);
  }
  return ((uint64_t (*)(char *, uint64_t))v18)(v14, a2);
}

uint64_t sub_22EE371EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X6>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22EE36A24(v8, v9, v10, v11, v12, (uint64_t)v7);
  sub_22EE372F0((uint64_t)v7, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, a2);
}

uint64_t sub_22EE372F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22EE36A24(v9, v10, v11, v12, v13, (uint64_t)v8);
  if (sub_22EE7F880())
  {
    uint64_t v14 = a1;
    uint64_t v15 = (uint64_t)v8;
  }
  else
  {
    uint64_t v14 = (uint64_t)v8;
    uint64_t v15 = a1;
  }
  sub_22EE37414(v14, v15, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a2);
}

uint64_t sub_22EE37414@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v18[1] = a1;
  v18[2] = a2;
  v18[3] = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v6 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v18 - v11;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v18 - v14;
  swift_getAssociatedConformanceWitness();
  sub_22EE806A0();
  sub_22EE80630();
  sub_22EE803C0();
  sub_22EE803C0();
  sub_22EE7F810();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16(v9, a3);
  v16(v12, a3);
  return ((uint64_t (*)(char *, uint64_t))v16)(v15, a3);
}

uint64_t sub_22EE3765C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v37 = a6;
  uint64_t v38 = a2;
  uint64_t v39 = a5;
  uint64_t v40 = a7;
  _OWORD v35[2] = a4;
  uint64_t v8 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v36 = (char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v35 - v11;
  v35[0] = (char *)v35 - v11;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v35 - v14;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)v35 - v17;
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)v35 - v20;
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)v35 - v23;
  __n128 v26 = MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)v35 - v27;
  v35[1] = v29;
  (*(void (**)(char *, char *, char *, char *, __n128))(v29 + 24))((char *)v35 - v27, v24, v21, v18, v26);
  char v30 = *(void (**)(char *, uint64_t))(v8 + 8);
  v30(v18, a3);
  uint64_t v31 = v12;
  uint64_t v32 = v36;
  (*(void (**)(char *, char *, char *, char *, uint64_t))(v37 + 24))(v18, v15, v31, v36, v39);
  v30(v32, a3);
  swift_getAssociatedConformanceWitness();
  uint64_t v33 = (char *)v35[0];
  sub_22EE371EC((uint64_t)v28, a3, v40);
  v30(v33, a3);
  v30(v15, a3);
  v30(v18, a3);
  v30(v21, a3);
  v30(v24, a3);
  return ((uint64_t (*)(char *, uint64_t))v30)(v28, a3);
}

uint64_t sub_22EE37930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();

  return sub_22EE3765C(v5, a1, AssociatedTypeWitness, a2, a3, a4, a5);
}

uint64_t sub_22EE379CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v129 = a8;
  uint64_t v126 = a3;
  uint64_t v114 = a2;
  uint64_t v134 = a1;
  uint64_t v104 = a9;
  OUTLINED_FUNCTION_0_0();
  uint64_t v103 = v13;
  MEMORY[0x270FA5388](v14);
  v102 = (char *)v100 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v127 = a4;
  uint64_t v128 = a6;
  uint64_t v139 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  OUTLINED_FUNCTION_9_7();
  MEMORY[0x270FA5388](v17);
  v112 = (char *)v100 - v18;
  uint64_t v125 = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_0();
  uint64_t v119 = v19;
  OUTLINED_FUNCTION_9_7();
  MEMORY[0x270FA5388](v20);
  v124 = (char *)v100 - v21;
  OUTLINED_FUNCTION_0_0();
  v116 = v22;
  MEMORY[0x270FA5388](v23);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_1_18();
  MEMORY[0x270FA5388](v24);
  OUTLINED_FUNCTION_1_18();
  MEMORY[0x270FA5388](v25);
  uint64_t v140 = (uint64_t)v100 - v26;
  OUTLINED_FUNCTION_0_0();
  uint64_t v106 = v27;
  OUTLINED_FUNCTION_9_7();
  MEMORY[0x270FA5388](v28);
  char v30 = (void (**)(void))((char *)v100 - v29);
  v100[2] = sub_22EE80040();
  OUTLINED_FUNCTION_0_0();
  v100[1] = v31;
  MEMORY[0x270FA5388](v32);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_1_18();
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = (char *)v100 - v34;
  uint64_t v132 = a7;
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_9_7();
  MEMORY[0x270FA5388](v36);
  uint64_t v37 = v35;
  swift_getAssociatedConformanceWitness();
  uint64_t v38 = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_0();
  uint64_t v105 = v39;
  OUTLINED_FUNCTION_9_7();
  MEMORY[0x270FA5388](v40);
  uint64_t v42 = (char *)v100 - v41;
  uint64_t v43 = swift_getTupleTypeMetadata2();
  uint64_t v136 = sub_22EE80040();
  OUTLINED_FUNCTION_0_0();
  uint64_t v107 = v44;
  MEMORY[0x270FA5388](v45);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_1_18();
  MEMORY[0x270FA5388](v46);
  uint64_t v138 = (uint64_t)v100 - v47;
  uint64_t v135 = v43;
  __swift_storeEnumTagSinglePayload((uint64_t)v100 - v47, 1, 1, v43);
  uint64_t v133 = a5;
  sub_22EE7FE90();
  sub_22EE7FB80();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v130 = v42;
  uint64_t v131 = v38;
  uint64_t v122 = AssociatedConformanceWitness;
  sub_22EE800A0();
  OUTLINED_FUNCTION_4_40();
  if (v49)
  {
LABEL_12:
    OUTLINED_FUNCTION_5_2();
    v87();
    uint64_t v88 = 1;
    uint64_t v89 = v138;
    int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v138, 1, v135);
    uint64_t v91 = v101;
    if (!EnumTagSinglePayload)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v106 + 16))(v101, v89, AssociatedTypeWitness);
      uint64_t v88 = 0;
    }
    __swift_storeEnumTagSinglePayload(v91, v88, 1, AssociatedTypeWitness);
    uint64_t v92 = v103;
    uint64_t v93 = v102;
    (*(void (**)(char *, uint64_t, uint64_t))(v103 + 16))(v102, v134, v133);
    OUTLINED_FUNCTION_4_40();
    if (v49)
    {
      uint64_t v94 = v133;
      sub_22EE7FE50();
      (*(void (**)(char *, uint64_t))(v92 + 8))(v93, v94);
      OUTLINED_FUNCTION_5_2();
      v95();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v92 + 8))(v93, v133);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v106 + 32))(v104, v91, AssociatedTypeWitness);
    }
  }
  else
  {
    uint64_t v50 = *(void (**)(uint64_t))(v106 + 32);
    uint64_t v120 = v119 + 16;
    v119 += 8;
    uint64_t v117 = v107 + 16;
    uint64_t v51 = (void (**)(uint64_t, uint64_t, uint64_t))(v116 + 4);
    v110 = (void (**)(void))(v116 + 1);
    v116 = (void (**)(uint64_t, uint64_t))(v107 + 8);
    v118 = v37;
    uint64_t v137 = v106 + 32;
    v109 = (void (**)(char *, uint64_t))(v106 + 8);
    v108 = v50;
    v121 = v30;
    while (1)
    {
      uint64_t v52 = AssociatedTypeWitness;
      uint64_t v53 = v50;
      ((void (*)(void (**)(void), char *, uint64_t))v50)(v30, v37, AssociatedTypeWitness);
      uint64_t v54 = (void (*)(char *, void))sub_22EE7FF70();
      OUTLINED_FUNCTION_5_32();
      uint64_t v55 = (uint64_t)v124;
      uint64_t v56 = v125;
      v57(v124);
      v54(v141, 0);
      sub_22EE37930(v55, v127, v56, v129, v140);
      OUTLINED_FUNCTION_5_32();
      OUTLINED_FUNCTION_5_2();
      v58();
      char v30 = *(void (***)(void))(*(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 24) + 8);
      if (sub_22EE7F880()) {
        break;
      }
      OUTLINED_FUNCTION_5_32();
      uint64_t v59 = v123;
      uint64_t v60 = v138;
      uint64_t v61 = v136;
      v62(v123, v138, v136);
      uint64_t v63 = v135;
      if (__swift_getEnumTagSinglePayload(v59, 1, v135) == 1)
      {
        uint64_t v64 = v59;
        uint64_t v65 = v63;
        int v66 = *v116;
        (*v116)(v64, v61);
        v66(v60, v61);
        uint64_t v67 = v60 + *(int *)(v65 + 48);
        uint64_t v68 = OUTLINED_FUNCTION_9_41();
        v53(v68);
        (*v51)(v67, v140, v139);
        uint64_t v69 = v60;
        uint64_t v50 = v53;
        __swift_storeEnumTagSinglePayload(v69, 0, 1, v65);
        uint64_t v37 = v118;
      }
      else
      {
        uint64_t v70 = v59 + *(int *)(v63 + 48);
        uint64_t v71 = TupleTypeMetadata2;
        uint64_t v72 = v112;
        uint64_t v73 = &v112[*(int *)(TupleTypeMetadata2 + 48)];
        OUTLINED_FUNCTION_8_37();
        ((void (*)(void))v53)();
        uint64_t v74 = v51;
        uint64_t v75 = *v51;
        uint64_t v76 = v70;
        uint64_t v77 = v139;
        (*v51)((uint64_t)v73, v76, v139);
        uint64_t v78 = &v72[*(int *)(v71 + 48)];
        v115 = v75;
        v75(v111, (uint64_t)v78, v77);
        uint64_t v79 = *v109;
        (*v109)(v72, AssociatedTypeWitness);
        sub_22EE7FE00();
        LOBYTE(v72) = sub_22EE7F880();
        char v30 = v110;
        uint64_t v80 = *v110;
        OUTLINED_FUNCTION_6_43();
        v80();
        OUTLINED_FUNCTION_6_43();
        v80();
        if (v72)
        {
          OUTLINED_FUNCTION_5_32();
          uint64_t v81 = v138;
          OUTLINED_FUNCTION_5_2();
          v82();
          uint64_t v83 = v135;
          uint64_t v84 = v81 + *(int *)(v135 + 48);
          uint64_t v85 = OUTLINED_FUNCTION_9_41();
          v86 = v108;
          v108(v85);
          v115(v84, v140, v77);
          __swift_storeEnumTagSinglePayload(v81, 0, 1, v83);
          uint64_t AssociatedTypeWitness = v52;
          uint64_t v37 = v118;
          uint64_t v50 = v86;
        }
        else
        {
          OUTLINED_FUNCTION_6_43();
          v80();
          char v30 = v121;
          v79((char *)v121, v52);
          uint64_t AssociatedTypeWitness = v52;
          uint64_t v37 = v118;
          uint64_t v50 = v108;
        }
        uint64_t v51 = v74;
      }
      sub_22EE800A0();
      OUTLINED_FUNCTION_4_40();
      if (v49) {
        goto LABEL_12;
      }
    }
    OUTLINED_FUNCTION_5_32();
    OUTLINED_FUNCTION_5_2();
    v96();
    OUTLINED_FUNCTION_5_2();
    v97();
    OUTLINED_FUNCTION_8_37();
    ((void (*)(void))v53)();
  }
  OUTLINED_FUNCTION_5_2();
  return v98();
}

uint64_t OUTLINED_FUNCTION_4_40()
{
  return __swift_getEnumTagSinglePayload(v0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_9_41()
{
  return v0;
}

uint64_t sub_22EE38568()
{
  sub_22EBC5150();

  return sub_22EE7D4B0();
}

uint64_t sub_22EE385B0(uint64_t a1)
{
  return sub_22EE7D4C0();
}

double static SubscriptionStoreButtonLabel.automatic.getter@<D0>(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(unsigned char *)(a1 + 72) = 1;
  return result;
}

uint64_t View.subscriptionStoreButtonLabel(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = *(unsigned char *)(a1 + 72);
  v5[0] = *(unsigned char *)a1;
  long long v6 = *(_OWORD *)(a1 + 8);
  long long v7 = *(_OWORD *)(a1 + 24);
  long long v8 = *(_OWORD *)(a1 + 40);
  long long v9 = *(_OWORD *)(a1 + 56);
  char v10 = v3;
  return MEMORY[0x230FAB9D0](v5, a2, &type metadata for SubscriptionStoreButtonLabelModifier, a3);
}

void static SubscriptionStoreButtonLabel.singleLine.getter(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 1;
  *(_OWORD *)(a1 + 8) = 0u;
  OUTLINED_FUNCTION_1_38(a1, (__n128)0);
}

double SubscriptionStoreButtonLabel.action.getter@<D0>(unsigned char *a1@<X8>)
{
  *a1 = *v1;
  return OUTLINED_FUNCTION_0_29((uint64_t)a1, (__n128)xmmword_22EEA2480);
}

double static SubscriptionStoreButtonLabel.price.getter@<D0>(unsigned char *a1@<X8>)
{
  *a1 = 0;
  return OUTLINED_FUNCTION_0_29((uint64_t)a1, (__n128)xmmword_22EEA2490);
}

void SubscriptionStoreButtonLabel.singleLine.getter(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_3_35(*(void *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), a1);
}

uint64_t sub_22EE386C0(long long *a1, long long *a2)
{
  char v3 = sub_22EE38A0C(a1, &v15);
  switch(*((void *)&v15 + 1))
  {
    case 0:
      OUTLINED_FUNCTION_7_32((uint64_t)v3, &v13);
      return !v4;
    case 1:
      OUTLINED_FUNCTION_7_32((uint64_t)v3, &v13);
      return v9 == 1;
    case 2:
      OUTLINED_FUNCTION_7_32((uint64_t)v3, &v13);
      return v10 == 2;
    case 3:
      OUTLINED_FUNCTION_7_32((uint64_t)v3, &v13);
      return v11 == 3;
    default:
      uint64_t v5 = v16;
      uint64_t v6 = v17;
      sub_22EE38A0C(a2, &v13);
      if (*((void *)&v13 + 1) < 4uLL) {
        return 0;
      }
      uint64_t v7 = v14;
      if ((sub_22EE7D5C0() & 1) == 0) {
        return 0;
      }
      if (v6)
      {
        if (v7)
        {
          sub_22EB19C18(v5, v6);
          OUTLINED_FUNCTION_14_31();
          char v8 = sub_22EE7D5C0();
          OUTLINED_FUNCTION_15_29();
          OUTLINED_FUNCTION_9_42();
          return (v8 & 1) != 0;
        }
      }
      else if (!v7)
      {
        return 1;
      }
      sub_22EB19C18(v5, v6);
      OUTLINED_FUNCTION_14_31();
      OUTLINED_FUNCTION_9_42();
      OUTLINED_FUNCTION_15_29();
      return 0;
  }
}

uint64_t StoreContent.subscriptionStoreButtonLabel(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  OUTLINED_FUNCTION_2_34(a1);
  sub_22EBCA7C4();
  return sub_22ED872C4((uint64_t)&v6, a2, (uint64_t)&type metadata for SubscriptionStoreButtonLabelModifier, a3);
}

void static SubscriptionStoreButtonLabel.multiline.getter(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 2;
  *(_OWORD *)(a1 + 8) = 0u;
  OUTLINED_FUNCTION_1_38(a1, (__n128)0);
}

double static SubscriptionStoreButtonLabel.action.getter@<D0>(unsigned char *a1@<X8>)
{
  *a1 = 0;
  return OUTLINED_FUNCTION_0_29((uint64_t)a1, (__n128)xmmword_22EEA2480);
}

double static SubscriptionStoreButtonLabel.displayName.getter@<D0>(unsigned char *a1@<X8>)
{
  *a1 = 0;
  return OUTLINED_FUNCTION_0_29((uint64_t)a1, (__n128)xmmword_22EE881E0);
}

void SubscriptionStoreButtonLabel.multiline.getter(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_3_35(*(void *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), a1);
}

double SubscriptionStoreButtonLabel.displayName.getter@<D0>(unsigned char *a1@<X8>)
{
  *a1 = *v1;
  return OUTLINED_FUNCTION_0_29((uint64_t)a1, (__n128)xmmword_22EE881E0);
}

double SubscriptionStoreButtonLabel.price.getter@<D0>(unsigned char *a1@<X8>)
{
  *a1 = *v1;
  return OUTLINED_FUNCTION_0_29((uint64_t)a1, (__n128)xmmword_22EEA2490);
}

uint64_t SubscriptionStoreButtonLabel.hash(into:)()
{
  sub_22EE38A0C((long long *)(v0 + 8), v2);
  sub_22EE807C0();
  sub_22EE390A0(v2, (void (*)(void, void, void, void, void, void, void, void))sub_22EB19B9C);
  sub_22EE38E5C();
  sub_22EE390A0(v2, (void (*)(void, void, void, void, void, void, void, void))sub_22EB19CF0);
  return sub_22EE807D0();
}

_OWORD *sub_22EE38A0C(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  long long v4 = a1[3];
  a2[2] = a1[2];
  a2[3] = v4;
  *a2 = v2;
  a2[1] = v3;
  return a2;
}

uint64_t static SubscriptionStoreButtonLabel.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v4 = *a1;
  sub_22EE38A0C((long long *)(a1 + 8), v9);
  int v5 = a1[72];
  int v6 = *a2;
  sub_22EE38A0C((long long *)(a2 + 8), v10);
  if (v4 != v6) {
    return 0;
  }
  int v7 = a2[72];
  if (sub_22EE386C0(v9, v10)) {
    return v5 ^ v7 ^ 1u;
  }
  else {
    return 0;
  }
}

uint64_t SubscriptionStoreButtonLabel.hashValue.getter()
{
  sub_22EE807B0();
  sub_22EE807C0();
  uint64_t v0 = OUTLINED_FUNCTION_4_41();
  sub_22EB19B9C(v0, v1, v2, v3, v4, v5);
  sub_22EE38E5C();
  uint64_t v6 = OUTLINED_FUNCTION_4_41();
  sub_22EB19CF0(v6, v7, v8, v9, v10, v11);
  sub_22EE807D0();
  return sub_22EE807F0();
}

uint64_t sub_22EE38B68()
{
  uint64_t v1 = v0[1];
  unint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  sub_22EE807B0();
  sub_22EE807C0();
  sub_22EB19B9C(v1, v2, v3, v4, v5, v6);
  sub_22EE38E5C();
  sub_22EB19CF0(v1, v2, v3, v4, v5, v6);
  sub_22EE807D0();
  return sub_22EE807F0();
}

uint64_t sub_22EE38C58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  memcpy(v10, v2, 0x49uLL);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v6 = swift_allocObject();
  memcpy((void *)(v6 + 16), v2, 0x49uLL);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628198);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  uint64_t v8 = (uint64_t *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2686281A0) + 36));
  *uint64_t v8 = KeyPath;
  v8[1] = (uint64_t)sub_22EE39DE8;
  v8[2] = v6;
  return sub_22EE39DF0((uint64_t)v10);
}

void sub_22EE38D50(char *a1, char *a2)
{
  unint64_t v3 = *((void *)a2 + 2);
  char v4 = a2[72];
  if (*a2 || (a2[72] & 1) != 0)
  {
    *a1 = *a2;
    a1[72] = 0;
  }
  uint64_t v5 = *((void *)a2 + 1);
  uint64_t v6 = *((void *)a2 + 3);
  uint64_t v7 = *((void *)a2 + 4);
  uint64_t v8 = *((void *)a2 + 5);
  uint64_t v9 = *((void *)a2 + 6);
  uint64_t v10 = *((void *)a2 + 7);
  uint64_t v11 = *((void *)a2 + 8);
  if (v3 || (v4 & 1) != 0)
  {
    char v18 = *a1;
    uint64_t v12 = *((void *)a1 + 1);
    uint64_t v16 = *((void *)a1 + 3);
    unint64_t v17 = *((void *)a1 + 2);
    uint64_t v14 = *((void *)a1 + 5);
    uint64_t v15 = *((void *)a1 + 4);
    uint64_t v13 = *((void *)a1 + 6);
    sub_22EB19B9C(v5, v3, v6, v7, v8, v9);
    sub_22EB19CF0(v12, v17, v16, v15, v14, v13);
    *a1 = v18;
    *((void *)a1 + 1) = v5;
    *((void *)a1 + 2) = v3;
    *((void *)a1 + 3) = v6;
    *((void *)a1 + 4) = v7;
    *((void *)a1 + 5) = v8;
    *((void *)a1 + 6) = v9;
    *((void *)a1 + 7) = v10;
    *((void *)a1 + 8) = v11;
    a1[72] = 0;
  }
}

uint64_t sub_22EE38E5C()
{
  sub_22EE38A0C(v0, &v3);
  switch(*((void *)&v3 + 1))
  {
    case 0:
    case 1:
    case 2:
    case 3:
      uint64_t result = sub_22EE807C0();
      break;
    default:
      uint64_t v1 = v4;
      sub_22EE807C0();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_22EE7FA30();
      sub_22EE7FA60();
      swift_bridgeObjectRelease();
      if (v1)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_22EE7FA30();
        sub_22EE807D0();
        sub_22EE7FA60();
        uint64_t result = swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t result = sub_22EE807D0();
      }
      break;
  }
  return result;
}

uint64_t sub_22EE38FE8()
{
  return sub_22EE807F0();
}

uint64_t sub_22EE39028()
{
  sub_22EE38A0C(v0, v2);
  return sub_22EE38FE8();
}

uint64_t sub_22EE39060()
{
  sub_22EE38A0C(v0, v2);
  return sub_22EE38E5C();
}

void *sub_22EE390A0(void *a1, void (*a2)(void, void, void, void, void, void, void, void))
{
  return a1;
}

unint64_t sub_22EE390E8()
{
  unint64_t result = qword_268628180;
  if (!qword_268628180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628180);
  }
  return result;
}

void type metadata accessor for SubscriptionStoreButtonLabel()
{
}

uint64_t sub_22EE39158()
{
  return swift_getWitnessTable();
}

uint64_t sub_22EE391BC()
{
  return swift_getWitnessTable();
}

unsigned char *sub_22EE39220(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22EE392ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for SubscriptionStoreButtonLabelStyle()
{
}

unint64_t sub_22EE39320(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t result = *(void *)(a1 + 40);
    if (result)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_22EE39388(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    long long v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v7;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    uint64_t v5 = *(void *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v5)
    {
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v5;
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v8 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v8;
    }
  }
  return a1;
}

uint64_t sub_22EE39444(uint64_t a1, long long *a2)
{
  unint64_t v4 = *((void *)a2 + 1);
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
      *(void *)(a1 + 24) = *((void *)a2 + 3);
      uint64_t v8 = *((void *)a2 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!v8)
      {
        long long v9 = a2[3];
        *(_OWORD *)(a1 + 32) = a2[2];
        *(_OWORD *)(a1 + 48) = v9;
        return a1;
      }
LABEL_13:
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      *(void *)(a1 + 40) = *((void *)a2 + 5);
      *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
      *(void *)(a1 + 56) = *((void *)a2 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_11:
    long long v10 = *a2;
    long long v11 = a2[1];
    long long v12 = a2[3];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v12;
    *(_OWORD *)a1 = v10;
    *(_OWORD *)(a1 + 16) = v11;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 40))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    goto LABEL_11;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (_OWORD *)(a1 + 32);
  long long v6 = a2 + 2;
  uint64_t v7 = *((void *)a2 + 5);
  if (!*(void *)(a1 + 40))
  {
    if (!v7)
    {
      long long v14 = a2[3];
      *uint64_t v5 = *v6;
      *(_OWORD *)(a1 + 48) = v14;
      return a1;
    }
    goto LABEL_13;
  }
  if (v7)
  {
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(void *)(a1 + 40) = *((void *)a2 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    *(void *)(a1 + 56) = *((void *)a2 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_22EB8B890(a1 + 32);
    long long v13 = a2[3];
    *uint64_t v5 = *v6;
    *(_OWORD *)(a1 + 48) = v13;
  }
  return a1;
}

uint64_t sub_22EE3960C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL)
  {
LABEL_8:
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    long long v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v7;
    return a1;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 40))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    goto LABEL_8;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 40))
  {
LABEL_11:
    long long v9 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v9;
    return a1;
  }
  uint64_t v5 = *(void *)(a2 + 40);
  if (!v5)
  {
    sub_22EB8B890(a1 + 32);
    goto LABEL_11;
  }
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22EE39704(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFC && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 2147483644);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 3;
  if (v4 >= 5) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_22EE39758(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 64) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 3;
    }
  }
  return result;
}

uint64_t sub_22EE397BC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

double sub_22EE397D4(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    *(void *)(a1 + 56) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(void *)(a1 + 8) = (a2 - 1);
  }
  return result;
}

void type metadata accessor for SubscriptionStoreButtonLabelContent()
{
}

unint64_t _s17_StoreKit_SwiftUI28SubscriptionStoreButtonLabelVwxx_0(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 16);
  if (result >= 4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t result = *(void *)(a1 + 48);
    if (result)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t _s17_StoreKit_SwiftUI28SubscriptionStoreButtonLabelVwcp_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unsigned int v4 = (_OWORD *)(a1 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  if (v5 >= 4)
  {
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = v5;
    OUTLINED_FUNCTION_12_32();
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    uint64_t v8 = *(void *)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v8)
    {
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v8;
      OUTLINED_FUNCTION_10_33();
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      OUTLINED_FUNCTION_8_38();
    }
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 24);
    *unsigned int v4 = *(_OWORD *)(a2 + 8);
    v4[1] = v6;
    long long v7 = *(_OWORD *)(a2 + 56);
    _OWORD v4[2] = *(_OWORD *)(a2 + 40);
    v4[3] = v7;
  }
  return OUTLINED_FUNCTION_5_33();
}

uint64_t _s17_StoreKit_SwiftUI28SubscriptionStoreButtonLabelVwca_0(unsigned char *a1, unsigned char *a2)
{
  unint64_t v5 = OUTLINED_FUNCTION_6_44(a1, a2);
  long long v7 = (long long *)(v6 + 8);
  unint64_t v8 = *(void *)(v6 + 16);
  if (*((void *)v5 + 2) < 4uLL)
  {
    if (v8 < 4)
    {
      long long v9 = *v7;
      long long v10 = *(_OWORD *)(v6 + 24);
      long long v11 = *(_OWORD *)(v6 + 56);
      _OWORD v4[2] = *(_OWORD *)(v6 + 40);
      v4[3] = v11;
LABEL_4:
      *unsigned int v4 = v9;
      v4[1] = v10;
      return OUTLINED_FUNCTION_5_33();
    }
    OUTLINED_FUNCTION_13_35();
    OUTLINED_FUNCTION_12_32();
    *(void *)(v2 + 32) = *(void *)(v3 + 32);
    uint64_t v15 = *(void *)(v3 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!v15)
    {
      OUTLINED_FUNCTION_8_38();
      return OUTLINED_FUNCTION_5_33();
    }
    goto LABEL_13;
  }
  if (v8 < 4)
  {
    sub_22EBE84F4((uint64_t)v4);
    long long v12 = v7[3];
    long long v14 = *v7;
    long long v13 = v7[1];
    _OWORD v4[2] = v7[2];
    v4[3] = v12;
    *unsigned int v4 = v14;
    v4[1] = v13;
    return OUTLINED_FUNCTION_5_33();
  }
  OUTLINED_FUNCTION_13_35();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_12_32();
  *(void *)(v2 + 32) = *(void *)(v3 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unsigned int v4 = (long long *)(v2 + 40);
  uint64_t v16 = (long long *)(v3 + 40);
  uint64_t v17 = *(void *)(v3 + 48);
  if (!*(void *)(v2 + 48))
  {
    if (!v17)
    {
      long long v9 = *v16;
      long long v10 = *(_OWORD *)(v3 + 56);
      goto LABEL_4;
    }
LABEL_13:
    OUTLINED_FUNCTION_11_30();
    OUTLINED_FUNCTION_10_33();
    *(void *)(v2 + 64) = *(void *)(v3 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return OUTLINED_FUNCTION_5_33();
  }
  if (v17)
  {
    OUTLINED_FUNCTION_11_30();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_10_33();
    *(void *)(v2 + 64) = *(void *)(v3 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_22EB8B890(v2 + 40);
    long long v18 = *(_OWORD *)(v3 + 56);
    *unsigned int v4 = *v16;
    *(_OWORD *)(v2 + 56) = v18;
  }
  return OUTLINED_FUNCTION_5_33();
}

uint64_t _s17_StoreKit_SwiftUI28SubscriptionStoreButtonLabelVwta_0(unsigned char *a1, unsigned char *a2)
{
  unint64_t v5 = OUTLINED_FUNCTION_6_44(a1, a2);
  long long v7 = (_OWORD *)(v6 + 8);
  if (*((void *)v5 + 2) >= 4uLL)
  {
    unint64_t v8 = *(void *)(v3 + 16);
    if (v8 >= 4)
    {
      *(void *)(v2 + 8) = *(void *)(v3 + 8);
      *(void *)(v2 + 16) = v8;
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_12_32();
      *(void *)(v2 + 32) = *(void *)(v3 + 32);
      swift_bridgeObjectRelease();
      if (*(void *)(v2 + 48))
      {
        uint64_t v12 = *(void *)(v3 + 48);
        if (v12)
        {
          *(void *)(v2 + 40) = *(void *)(v3 + 40);
          *(void *)(v2 + 48) = v12;
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_10_33();
          *(void *)(v2 + 64) = *(void *)(v3 + 64);
          swift_bridgeObjectRelease();
          return OUTLINED_FUNCTION_5_33();
        }
        sub_22EB8B890(v2 + 40);
      }
      long long v13 = *(_OWORD *)(v3 + 56);
      *(_OWORD *)(v2 + 40) = *(_OWORD *)(v3 + 40);
      *(_OWORD *)(v2 + 56) = v13;
      return OUTLINED_FUNCTION_5_33();
    }
    sub_22EBE84F4((uint64_t)v4);
  }
  long long v9 = v7[1];
  *unsigned int v4 = *v7;
  v4[1] = v9;
  long long v10 = v7[3];
  _OWORD v4[2] = v7[2];
  v4[3] = v10;
  return OUTLINED_FUNCTION_5_33();
}

uint64_t _s17_StoreKit_SwiftUI28SubscriptionStoreButtonLabelVwet_0(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 > 0x7FFFFFFB && *(unsigned char *)(a1 + 73))
    {
      int v2 = *(_DWORD *)a1 + 2147483643;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 4;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s17_StoreKit_SwiftUI28SubscriptionStoreButtonLabelVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 72) = 0;
    *(void *)unint64_t result = a2 - 2147483644;
    if (a3 > 0x7FFFFFFB) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if (a3 > 0x7FFFFFFB) {
      *(unsigned char *)(result + 73) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2 + 3;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionStoreButtonLabelModifier()
{
  return &type metadata for SubscriptionStoreButtonLabelModifier;
}

uint64_t sub_22EE39C28()
{
  sub_22EE38A0C(v0, v2);
  sub_22EE807B0();
  sub_22EE38E5C();
  return sub_22EE807F0();
}

uint64_t sub_22EE39C7C(long long *a1, long long *a2)
{
  sub_22EE38A0C(a1, v4);
  sub_22EE38A0C(a2, v5);
  return sub_22EE386C0(v4, v5) & 1;
}

unint64_t sub_22EE39CCC()
{
  unint64_t result = qword_268628188;
  if (!qword_268628188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628188);
  }
  return result;
}

unint64_t sub_22EE39D1C()
{
  unint64_t result = qword_268628190;
  if (!qword_268628190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628190);
  }
  return result;
}

uint64_t sub_22EE39D68()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EE39D8C()
{
  if (*(void *)(v0 + 32) >= 4uLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 64))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }

  return swift_deallocObject();
}

void sub_22EE39DE8(char *a1)
{
  sub_22EE38D50(a1, (char *)(v1 + 16));
}

uint64_t sub_22EE39DF0(uint64_t a1)
{
  return a1;
}

ValueMetadata *_s25ButtonLabelEnvironmentKeyOMa()
{
  return &_s25ButtonLabelEnvironmentKeyON;
}

unint64_t sub_22EE39E40()
{
  unint64_t result = qword_2686281A8;
  if (!qword_2686281A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686281A0);
    sub_22EADDD7C(&qword_2686281B0, &qword_268628198);
    sub_22EADDD7C(&qword_2686281B8, &qword_2686281C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686281A8);
  }
  return result;
}

void *sub_22EE39F04()
{
  return &unk_268628130;
}

void sub_22EE39F10(uint64_t a1@<X8>)
{
  int v2 = sub_22EE39F04();
  uint64_t v4 = v2[1];
  unint64_t v3 = v2[2];
  uint64_t v5 = v2[3];
  uint64_t v6 = v2[4];
  uint64_t v7 = v2[5];
  uint64_t v8 = v2[6];
  uint64_t v9 = v2[7];
  uint64_t v10 = v2[8];
  char v11 = *((unsigned char *)v2 + 72);
  *(unsigned char *)a1 = *(unsigned char *)v2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  *(unsigned char *)(a1 + 72) = v11;

  sub_22EB19B9C(v4, v3, v5, v6, v7, v8);
}

uint64_t sub_22EE39F78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_22EE390E8();

  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

double OUTLINED_FUNCTION_0_29@<D0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  *(__n128 *)(a1 + 8) = a2;
  double result = 0.0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(unsigned char *)(a1 + 72) = 0;
  return result;
}

void OUTLINED_FUNCTION_1_38(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  *(__n128 *)(a1 + 24) = a2;
  *(__n128 *)(a1 + 40) = a2;
  *(__n128 *)(a1 + 56) = a2;
  *(unsigned char *)(a1 + 72) = 0;
}

__n128 OUTLINED_FUNCTION_2_34(uint64_t a1)
{
  return *(__n128 *)(a1 + 56);
}

void OUTLINED_FUNCTION_3_35(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  *(unsigned char *)a9 = v9;
  *(void *)(a9 + 8) = a1;
  *(void *)(a9 + 16) = a2;
  *(void *)(a9 + 24) = a3;
  *(void *)(a9 + 32) = a4;
  *(void *)(a9 + 40) = a5;
  *(void *)(a9 + 48) = a6;
  *(void *)(a9 + 56) = a7;
  *(void *)(a9 + 64) = a8;
  *(unsigned char *)(a9 + 72) = 0;
  sub_22EB19B9C(a1, a2, a3, a4, a5, a6);
}

uint64_t OUTLINED_FUNCTION_4_41()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_5_33()
{
  *(unsigned char *)(v0 + 72) = *(unsigned char *)(v1 + 72);
  return v0;
}

unsigned char *OUTLINED_FUNCTION_6_44(unsigned char *result, unsigned char *a2)
{
  *double result = *a2;
  return result;
}

_OWORD *OUTLINED_FUNCTION_7_32(uint64_t a1, _OWORD *a2)
{
  return sub_22EE38A0C(v2, a2);
}

__n128 OUTLINED_FUNCTION_8_38()
{
  __n128 result = *(__n128 *)(v1 + 40);
  long long v3 = *(_OWORD *)(v1 + 56);
  *(__n128 *)(v0 + 40) = result;
  *(_OWORD *)(v0 + 56) = v3;
  return result;
}

uint64_t OUTLINED_FUNCTION_9_42()
{
  return sub_22EB19D6C(v1, v0);
}

void OUTLINED_FUNCTION_10_33()
{
  *(unsigned char *)(v0 + 56) = *(unsigned char *)(v1 + 56);
}

uint64_t OUTLINED_FUNCTION_11_30()
{
  *(void *)(v0 + 40) = *(void *)(v1 + 40);
  uint64_t result = *(void *)(v1 + 48);
  *(void *)(v0 + 48) = result;
  return result;
}

void OUTLINED_FUNCTION_12_32()
{
  *(unsigned char *)(v0 + 24) = *(unsigned char *)(v1 + 24);
}

uint64_t OUTLINED_FUNCTION_13_35()
{
  *(void *)(v0 + 8) = *(void *)(v1 + 8);
  uint64_t result = *(void *)(v1 + 16);
  *(void *)(v0 + 16) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_14_31()
{
  return sub_22EB19C18(v1, v0);
}

uint64_t OUTLINED_FUNCTION_15_29()
{
  return sub_22EB19D6C(v1, v0);
}

uint64_t sub_22EE3A178()
{
  uint64_t v0 = sub_22EBA8C4C();
  return OUTLINED_FUNCTION_8_2(v0);
}

uint64_t sub_22EE3A1A4(unsigned __int8 *a1)
{
  return sub_22EBA8C6C(*a1);
}

uint64_t static PrimitiveButtonStyle<>.subscriptionPickerOptionProminent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = swift_getKeyPath();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = 0;
  return result;
}

uint64_t SubscriptionStorePickerOptionProminentPlatterStyle.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = swift_getKeyPath();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = 0;
  return result;
}

uint64_t sub_22EE3A23C()
{
  uint64_t v0 = sub_22EBA8C4C();
  return OUTLINED_FUNCTION_8_2(v0);
}

uint64_t sub_22EE3A268(unsigned __int8 *a1)
{
  return sub_22EBA8C6C(*a1);
}

uint64_t SubscriptionStorePickerOptionPlatterStyle.makeBody(configuration:)(uint64_t a1)
{
  uint64_t v2 = sub_22EE7DDE0();
  OUTLINED_FUNCTION_0_2();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_11_0();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861CE08);
  OUTLINED_FUNCTION_0_2();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_11_0();
  uint64_t v15 = v14 - v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v8, a1, v2);
  sub_22EE7EA30();
  v17[0] = 0;
  uint64_t KeyPath = swift_getKeyPath();
  char v19 = 0;
  uint64_t v20 = swift_getKeyPath();
  __int16 v21 = 0;
  uint64_t v22 = swift_getKeyPath();
  char v23 = 0;
  uint64_t v24 = swift_getKeyPath();
  char v25 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861F1B8);
  sub_22EADDD7C((unint64_t *)&qword_26861CE10, &qword_26861CE08);
  sub_22EADDD7C(&qword_26861F1C0, &qword_26861F1B8);
  sub_22EE7E210();
  sub_22EE3A838((uint64_t)v17);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v15, v9);
}

uint64_t sub_22EE3A4A4(uint64_t a1)
{
  return SubscriptionStorePickerOptionPlatterStyle.makeBody(configuration:)(a1);
}

uint64_t SubscriptionStorePickerOptionProminentPlatterStyle.makeBody(configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = sub_22EE7DDE0();
  OUTLINED_FUNCTION_0_2();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_11_0();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861CE08);
  OUTLINED_FUNCTION_0_2();
  uint64_t v12 = v11;
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_11_0();
  uint64_t v16 = v15 - v14;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686281C8);
  OUTLINED_FUNCTION_0_2();
  uint64_t v18 = v17;
  MEMORY[0x270FA5388](v19);
  OUTLINED_FUNCTION_11_0();
  uint64_t v22 = v21 - v20;
  uint64_t v23 = *(void *)v2;
  char v24 = *(unsigned char *)(v2 + 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v9, a1, v3);
  sub_22EE7EA30();
  sub_22EADDF00(v23, v24);
  sub_22EB155AC();
  LOBYTE(v5) = v25;
  sub_22EADDB08(v23, v24);
  v33[0] = v5 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  char v35 = 0;
  uint64_t v36 = swift_getKeyPath();
  __int16 v37 = 0;
  uint64_t v38 = swift_getKeyPath();
  char v39 = 0;
  uint64_t v40 = swift_getKeyPath();
  char v41 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861F1B8);
  sub_22EADDD7C((unint64_t *)&qword_26861CE10, &qword_26861CE08);
  sub_22EADDD7C(&qword_26861F1C0, &qword_26861F1B8);
  sub_22EE7E210();
  sub_22EE3A838((uint64_t)v33);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v16, v10);
  uint64_t v26 = swift_getKeyPath();
  uint64_t v27 = swift_allocObject();
  *(unsigned char *)(v27 + 16) = 2;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(a2, v22, v31);
  uint64_t v28 = (uint64_t *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2686281D0) + 36));
  *uint64_t v28 = v26;
  v28[1] = (uint64_t)sub_22EB0DF70;
  _OWORD v28[2] = v27;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v22, v31);
}

uint64_t sub_22EE3A7D8()
{
  BOOL v0 = sub_22EDB04E0();
  return OUTLINED_FUNCTION_8_2(v0);
}

uint64_t sub_22EE3A804()
{
  BOOL v0 = sub_22EDB04E0();
  return OUTLINED_FUNCTION_8_2(v0);
}

uint64_t sub_22EE3A838(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861F1B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22EE3A8A0()
{
  return swift_deallocObject();
}

uint64_t sub_22EE3A8B0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EE3A8CC()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for SubscriptionStorePickerOptionPlatterStyle()
{
  return &type metadata for SubscriptionStorePickerOptionPlatterStyle;
}

ValueMetadata *type metadata accessor for SubscriptionStorePickerOptionProminentPlatterStyle()
{
  return &type metadata for SubscriptionStorePickerOptionProminentPlatterStyle;
}

uint64_t sub_22EE3A908()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_22EE3A9D4()
{
  unint64_t result = qword_2686281D8;
  if (!qword_2686281D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686281D0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861CE08);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861F1B8);
    sub_22EADDD7C((unint64_t *)&qword_26861CE10, &qword_26861CE08);
    sub_22EADDD7C(&qword_26861F1C0, &qword_26861F1B8);
    swift_getOpaqueTypeConformance2();
    sub_22EADDD7C(&qword_26861CA80, &qword_26861CA88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686281D8);
  }
  return result;
}

uint64_t sub_22EE3AB1C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_22EE3AC3C(a4, (uint64_t)v17);
  v18[0] = a1;
  v18[1] = a2;
  char v19 = a3;
  sub_22EE3AC3C((uint64_t)v17, (uint64_t)&v13);
  if (v14)
  {
    sub_22EAE6550(&v13, (uint64_t)v12);
    sub_22EBB1000((uint64_t)v12, (uint64_t)v15);
    swift_retain_n();
    swift_retain_n();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v16 = 0;
    memset(v15, 0, sizeof(v15));
    swift_retain();
    swift_retain();
  }
  sub_22EB9AA30((uint64_t)v17);
  sub_22EE3ACA4((uint64_t)v15, (uint64_t)&v20);
  MEMORY[0x230FAB9D0](v18, a5, &type metadata for LocalizedErrorAlertModifier, a6);
  return sub_22EE3AD0C((uint64_t)v18);
}

uint64_t sub_22EE3AC3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861EC80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22EE3ACA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861F2D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22EE3AD0C(uint64_t a1)
{
  return a1;
}

ValueMetadata *type metadata accessor for LocalizedErrorAlertModifier.AnyLocalizedError()
{
  return &type metadata for LocalizedErrorAlertModifier.AnyLocalizedError;
}

uint64_t destroy for LocalizedErrorAlertModifier(uint64_t a1)
{
  swift_release();
  uint64_t result = swift_release();
  if (*(void *)(a1 + 48))
  {
    return __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  }
  return result;
}

uint64_t initializeWithCopy for LocalizedErrorAlertModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = (_OWORD *)(a1 + 24);
  uint64_t v6 = a2 + 24;
  uint64_t v7 = *(void *)(a2 + 48);
  swift_retain();
  swift_retain();
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = v7;
    *(void *)(a1 + 56) = v8;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8))(a1 + 24, v6, v7);
  }
  else
  {
    long long v9 = *(_OWORD *)(v6 + 16);
    *uint64_t v5 = *(_OWORD *)v6;
    *(_OWORD *)(a1 + 40) = v9;
    *(void *)(a1 + 56) = *(void *)(v6 + 32);
  }
  return a1;
}

uint64_t assignWithCopy for LocalizedErrorAlertModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = (_OWORD *)(a1 + 24);
  uint64_t v5 = (_OWORD *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 48);
  if (*(void *)(a1 + 48))
  {
    if (v6)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
    }
    else
    {
      sub_22EE3AF58(a1 + 24);
      uint64_t v7 = *(void *)(a2 + 56);
      long long v8 = *(_OWORD *)(a2 + 40);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 40) = v8;
      *(void *)(a1 + 56) = v7;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 48) = v6;
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 24, a2 + 24);
  }
  else
  {
    long long v9 = *v5;
    long long v10 = *(_OWORD *)(a2 + 40);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *uint64_t v4 = v9;
    *(_OWORD *)(a1 + 40) = v10;
  }
  return a1;
}

uint64_t sub_22EE3AF58(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for LocalizedErrorAlertModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  if (*(void *)(a1 + 48))
  {
    if (*(void *)(a2 + 48)) {
      __swift_destroy_boxed_opaque_existential_1(a1 + 24);
    }
    else {
      sub_22EE3AF58(a1 + 24);
    }
  }
  long long v4 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = v4;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalizedErrorAlertModifier(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocalizedErrorAlertModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizedErrorAlertModifier()
{
  return &type metadata for LocalizedErrorAlertModifier;
}

uint64_t sub_22EE3B0B4(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  return a1(v3, v4);
}

uint64_t sub_22EE3B100()
{
  return sub_22EE3B0B4(MEMORY[0x263F063F0]);
}

uint64_t sub_22EE3B12C()
{
  return sub_22EE3B0B4(MEMORY[0x263F063E8]);
}

uint64_t sub_22EE3B158()
{
  return sub_22EE3B0B4(MEMORY[0x263F063F8]);
}

unint64_t sub_22EE3B18C()
{
  unint64_t result = qword_2686281E0;
  if (!qword_2686281E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686281E0);
  }
  return result;
}

uint64_t sub_22EE3B1D8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EE3B1F4()
{
  return swift_release();
}

uint64_t sub_22EE3B354@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(qword_268628200);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22EE881C0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v5 = sub_22EE7C100();
  uint64_t v7 = v6;
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 40) = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v9 = sub_22EE7C110();
  uint64_t v10 = v8;
  *(void *)(inited + 48) = v9;
  *(void *)(inited + 56) = v8;
  if (!v7)
  {
    uint64_t v12 = MEMORY[0x263F8EE78];
    if (!v8) {
      goto LABEL_12;
    }
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  sub_22EC6D408(0, 1, 1, MEMORY[0x263F8EE78]);
  uint64_t v12 = v11;
  unint64_t v14 = *(void *)(v11 + 16);
  unint64_t v13 = *(void *)(v11 + 24);
  if (v14 >= v13 >> 1)
  {
    sub_22EC6D408(v13 > 1, v14 + 1, 1, v11);
    uint64_t v12 = v25;
  }
  *(void *)(v12 + 16) = v14 + 1;
  uint64_t v15 = v12 + 16 * v14;
  *(void *)(v15 + 32) = v5;
  *(void *)(v15 + 40) = v7;
  if (v10)
  {
LABEL_7:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_22EC6D408(0, *(void *)(v12 + 16) + 1, 1, v12);
      uint64_t v12 = v26;
    }
    unint64_t v17 = *(void *)(v12 + 16);
    unint64_t v16 = *(void *)(v12 + 24);
    if (v17 >= v16 >> 1)
    {
      sub_22EC6D408(v16 > 1, v17 + 1, 1, v12);
      uint64_t v12 = v27;
    }
    *(void *)(v12 + 16) = v17 + 1;
    uint64_t v18 = v12 + 16 * v17;
    *(void *)(v18 + 32) = v9;
    *(void *)(v18 + 40) = v10;
  }
LABEL_12:
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268621E70);
  sub_22EADDD7C((unint64_t *)&qword_268624578, &qword_268621E70);
  uint64_t v19 = sub_22EE7F870();
  unint64_t v21 = v20;
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v23 = HIBYTE(v21) & 0xF;
  if ((v21 & 0x2000000000000000) == 0) {
    uint64_t v23 = v19 & 0xFFFFFFFFFFFFLL;
  }
  if (v23)
  {
    uint64_t v24 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v19 = 0;
    unint64_t v21 = 0;
    uint64_t v24 = 0;
  }
  *a2 = v19;
  a2[1] = v21;
  a2[2] = 0;
  a2[3] = v24;
  return result;
}

unint64_t sub_22EE3B5B0()
{
  unint64_t result = qword_2686281F8;
  if (!qword_2686281F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686281F8);
  }
  return result;
}

uint64_t sub_22EE3B5FC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EE3B6C8@<X0>(uint64_t a1@<X8>)
{
  v13[1] = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_0();
  v13[0] = v2;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v13 - v7;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v9);
  MEMORY[0x270FA5388](v10);
  swift_getAssociatedConformanceWitness();
  sub_22EE806B0();
  sub_22EE80640();
  sub_22EE806B0();
  sub_22EE80640();
  sub_22EE7F810();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v13[0] + 8);
  v11(v5, AssociatedTypeWitness);
  return ((uint64_t (*)(char *, uint64_t))v11)(v8, AssociatedTypeWitness);
}

uint64_t sub_22EE3B92C()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_9_7();
  MEMORY[0x270FA5388](v0);
  swift_getAssociatedConformanceWitness();
  sub_22EE806A0();
  swift_checkMetadataState();
  return sub_22EE80630();
}

uint64_t sub_22EE3BA60(uint64_t a1, uint64_t a2)
{
  uint64_t v48 = a1;
  uint64_t v52 = a2;
  uint64_t v2 = *(void *)(a2 + 16);
  uint64_t v51 = *(void *)(a2 + 24);
  uint64_t v3 = v51;
  uint64_t v50 = v2;
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_0();
  uint64_t v55 = v5;
  uint64_t v56 = v4;
  OUTLINED_FUNCTION_9_7();
  MEMORY[0x270FA5388](v6);
  uint64_t v53 = (uint64_t)&v47 - v7;
  uint64_t v8 = sub_22EE7D480();
  OUTLINED_FUNCTION_0_0();
  uint64_t v10 = v9;
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v13);
  uint64_t v14 = *(void *)(v3 + 8);
  sub_22EE801E0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v47 = v15;
  OUTLINED_FUNCTION_9_7();
  MEMORY[0x270FA5388](v16);
  uint64_t v49 = sub_22EE80340();
  OUTLINED_FUNCTION_0_0();
  uint64_t v54 = v17;
  OUTLINED_FUNCTION_9_7();
  __n128 v19 = MEMORY[0x270FA5388](v18);
  unint64_t v21 = (char *)&v47 - v20;
  MEMORY[0x230FACF20](v2, v14, v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v48, v8);
  unint64_t v22 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v23 + v22, (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  swift_getWitnessTable();
  uint64_t v24 = MEMORY[0x263F1B408];
  sub_22EE80490();
  swift_release();
  OUTLINED_FUNCTION_5_2();
  v25();
  sub_22EE3C04C();
  sub_22EE7E800();
  int v27 = v26;
  int v29 = v28;
  int v31 = v30;
  int v33 = v32;
  swift_release();
  v57[0] = v27;
  v57[1] = v29;
  v57[2] = v31;
  v57[3] = v33;
  unint64_t v34 = sub_22EE3D238();
  uint64_t v61 = v51;
  uint64_t v35 = v49;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_22EE3B6C8((uint64_t)v58);
  int v60 = v58[0];
  sub_22EE3B92C();
  v59[0] = v59[1];
  sub_22EE379CC((uint64_t)v21, (uint64_t)&v60, (uint64_t)v59, v24, v35, v34, WitnessTable, v34, v53);
  __int16 v37 = (void (*)(void *, void))sub_22EE7FF70();
  sub_22EE3D0FC(v38, (uint64_t)v57);
  v37(v58, 0);
  sub_22EE3C0F8(v58);
  sub_22EE3D284((uint64_t)v57);
  __swift_project_boxed_opaque_existential_1(v58, v58[3]);
  OUTLINED_FUNCTION_0_0();
  __n128 v40 = MEMORY[0x270FA5388](v39);
  (*(void (**)(char *, __n128))(v42 + 16))((char *)&v47 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0), v40);
  uint64_t v43 = sub_22EE7C9C0();
  OUTLINED_FUNCTION_5_2();
  v44();
  OUTLINED_FUNCTION_5_2();
  v45();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  return v43;
}

uint64_t sub_22EE3BF64@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  sub_22EE3D0FC(a1, (uint64_t)v13);
  if (v14)
  {
    sub_22EAE6550(v13, (uint64_t)v12);
    __swift_project_boxed_opaque_existential_1(v12, v12[3]);
    if (sub_22EE7C730()) {
      swift_release();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  sub_22EE7E800();
  int v4 = v3;
  int v6 = v5;
  int v8 = v7;
  int v10 = v9;
  uint64_t result = swift_release();
  *a2 = v4;
  a2[1] = v6;
  a2[2] = v8;
  a2[3] = v10;
  return result;
}

uint64_t sub_22EE3C04C()
{
  sub_22EE3D0FC(v0, (uint64_t)v6);
  if ((v8 & 1) == 0) {
    return *(void *)&v6[0];
  }
  uint64_t v1 = v7;
  sub_22EAE6550(v6, (uint64_t)v5);
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  uint64_t v2 = sub_22EE7C730();
  if (v2)
  {
    uint64_t v3 = v2;
    swift_release();
    uint64_t v1 = v3;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  return v1;
}

uint64_t sub_22EE3C0F8@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_22EE3D0FC(v1, (uint64_t)v6);
  if (v7)
  {
    swift_release();
    return sub_22EAE6550(v6, (uint64_t)a1);
  }
  else
  {
    uint64_t v4 = *(void *)&v6[0];
    uint64_t v5 = MEMORY[0x263F1B420];
    a1[3] = MEMORY[0x263F1B440];
    a1[4] = v5;
    *a1 = v4;
  }
  return result;
}

uint64_t sub_22EE3C168@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_22EE3BA60(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22EE3C190@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_22EE3C04C();
  *a1 = result;
  return result;
}

uint64_t sub_22EE3C1B8()
{
  if (qword_26861B8C0 != -1) {
    swift_once();
  }
  if ((byte_2686241F1 == 1
     || byte_2686241F1 == 3 && (storekit_dyld_fall_2024_os_versions(), dyld_program_minos_at_least()))
    && (v4[3] = &type metadata for StoreKitViewsFeature,
        long long v4[4] = sub_22EB56C0C(),
        LOBYTE(v4[0]) = 2,
        char v0 = sub_22EE7C420(),
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v4),
        (v0 & 1) != 0))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2686276C8);
    uint64_t v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_22EE881C0;
    v4[0] = sub_22EE7E7F0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2686276D0);
    sub_22EE0C5F8();
    sub_22EE3C320();
    *(void *)(v1 + 32) = sub_22EE7E860();
    *(unsigned char *)(v1 + 80) = 0;
    uint64_t v2 = sub_22EE7E7F0();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2686276C8);
    uint64_t v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_22EE881C0;
    *(void *)(v1 + 32) = sub_22EE7E7C0();
    *(unsigned char *)(v1 + 80) = 0;
    uint64_t v2 = sub_22EE7E7A0();
  }
  *(void *)(v1 + 88) = v2;
  *(unsigned char *)(v1 + 136) = 0;
  return v1;
}

unint64_t sub_22EE3C320()
{
  unint64_t result = qword_2686276E0;
  if (!qword_2686276E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686276D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686276E0);
  }
  return result;
}

uint64_t destroy for AnyColorConvertibleShapeStyle(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 48);
  if (v1 >= 2) {
    unsigned int v1 = *(_DWORD *)a1 + 2;
  }
  if (v1 == 1) {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }

  return swift_release();
}

uint64_t initializeWithCopy for AnyColorConvertibleShapeStyle(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a2 + 48);
  if (v4 >= 2) {
    unsigned int v4 = *(_DWORD *)a2 + 2;
  }
  if (v4 == 1)
  {
    long long v5 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v5;
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    char v6 = 1;
  }
  else
  {
    char v6 = 0;
    *(void *)a1 = *(void *)a2;
  }
  swift_retain();
  *(unsigned char *)(a1 + 48) = v6;
  return a1;
}

uint64_t assignWithCopy for AnyColorConvertibleShapeStyle(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 48);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1) {
      __swift_destroy_boxed_opaque_existential_1(a1);
    }
    swift_release();
    unsigned int v5 = *(unsigned __int8 *)(a2 + 48);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      uint64_t v6 = *(void *)(a2 + 24);
      *(void *)(a1 + 24) = v6;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      char v7 = 1;
    }
    else
    {
      char v7 = 0;
      *(void *)a1 = *(void *)a2;
    }
    *(unsigned char *)(a1 + 48) = v7;
    swift_retain();
  }
  return a1;
}

uint64_t assignWithTake for AnyColorConvertibleShapeStyle(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 48);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1) {
      __swift_destroy_boxed_opaque_existential_1(a1);
    }
    swift_release();
    unsigned int v5 = *(unsigned __int8 *)(a2 + 48);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      long long v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    }
    else
    {
      LOBYTE(v5) = 0;
      *(void *)a1 = *(void *)a2;
    }
    *(unsigned char *)(a1 + 48) = v5;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyColorConvertibleShapeStyle(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 >= 2) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AnyColorConvertibleShapeStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)unint64_t result = 0u;
    *(_DWORD *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 48) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_22EE3C690(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 48);
  if (result >= 2) {
    return (*(_DWORD *)a1 + 2);
  }
  return result;
}

uint64_t sub_22EE3C6AC(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_DWORD *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 48) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AnyColorConvertibleShapeStyle()
{
  return &type metadata for AnyColorConvertibleShapeStyle;
}

uint64_t sub_22EE3C6E4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_22EE3C77C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 49 > 0x18)
  {
    uint64_t v9 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    unsigned int v11 = *(unsigned __int8 *)(v10 + 48);
    if (v11 >= 2) {
      unsigned int v11 = *(_DWORD *)v10 + 2;
    }
    unint64_t v12 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    if (v11 == 1)
    {
      uint64_t v13 = *(void *)(v10 + 24);
      *(void *)(v12 + 24) = v13;
      *(void *)(v12 + 32) = *(void *)(v10 + 32);
      (**(void (***)(unint64_t, unint64_t))(v13 - 8))(v12, v10);
      *(void *)(v12 + 40) = *(void *)(v10 + 40);
      *(unsigned char *)(v12 + 48) = 1;
    }
    else
    {
      *(void *)unint64_t v12 = *(void *)v10;
      *(unsigned char *)(v12 + 48) = 0;
    }
  }
  swift_retain();
  return v4;
}

uint64_t sub_22EE3C8E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  unint64_t v4 = (a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8;
  unsigned int v5 = *(unsigned __int8 *)(v4 + 48);
  if (v5 >= 2) {
    unsigned int v5 = *(_DWORD *)v4 + 2;
  }
  if (v5 == 1) {
    __swift_destroy_boxed_opaque_existential_1(v4);
  }

  return swift_release();
}

uint64_t sub_22EE3C980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  uint64_t v7 = v6 + a1;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  unsigned int v9 = *(unsigned __int8 *)(v8 + 48);
  if (v9 >= 2) {
    unsigned int v9 = *(_DWORD *)v8 + 2;
  }
  unint64_t v10 = v7 & 0xFFFFFFFFFFFFFFF8;
  if (v9 == 1)
  {
    uint64_t v11 = *(void *)(v8 + 24);
    *(void *)(v10 + 24) = v11;
    *(void *)(v10 + 32) = *(void *)(v8 + 32);
    (**(void (***)(unint64_t, unint64_t))(v11 - 8))(v10, v8);
    *(void *)(v10 + 40) = *(void *)(v8 + 40);
    char v12 = 1;
  }
  else
  {
    char v12 = 0;
    *(void *)unint64_t v10 = *(void *)v8;
  }
  swift_retain();
  *(unsigned char *)(v10 + 48) = v12;
  return a1;
}

uint64_t sub_22EE3CA74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  if (v7 != v8)
  {
    unsigned int v9 = *(unsigned __int8 *)(v7 + 48);
    if (v9 >= 2) {
      unsigned int v9 = *(_DWORD *)v7 + 2;
    }
    if (v9 == 1) {
      __swift_destroy_boxed_opaque_existential_1(v7);
    }
    swift_release();
    unsigned int v10 = *(unsigned __int8 *)(v8 + 48);
    if (v10 >= 2) {
      unsigned int v10 = *(_DWORD *)v8 + 2;
    }
    if (v10 == 1)
    {
      uint64_t v11 = *(void *)(v8 + 24);
      *(void *)(v7 + 24) = v11;
      *(void *)(v7 + 32) = *(void *)(v8 + 32);
      (**(void (***)(unint64_t, unint64_t))(v11 - 8))(v7, v8);
      *(void *)(v7 + 40) = *(void *)(v8 + 40);
      char v12 = 1;
    }
    else
    {
      char v12 = 0;
      *(void *)unint64_t v7 = *(void *)v8;
    }
    *(unsigned char *)(v7 + 48) = v12;
    swift_retain();
  }
  return a1;
}

uint64_t sub_22EE3CBA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  uint64_t v7 = v6 + a1;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  unsigned int v9 = *(unsigned __int8 *)(v8 + 48);
  if (v9 >= 2) {
    unsigned int v9 = *(_DWORD *)v8 + 2;
  }
  unint64_t v10 = v7 & 0xFFFFFFFFFFFFFFF8;
  if (v9 == 1)
  {
    long long v11 = *(_OWORD *)v8;
    long long v12 = *(_OWORD *)(v8 + 32);
    *(_OWORD *)(v10 + 16) = *(_OWORD *)(v8 + 16);
    *(_OWORD *)(v10 + 32) = v12;
    *(_OWORD *)unint64_t v10 = v11;
  }
  else
  {
    LOBYTE(v9) = 0;
    *(void *)unint64_t v10 = *(void *)v8;
  }
  *(unsigned char *)(v10 + 48) = v9;
  return a1;
}

uint64_t sub_22EE3CC58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  if (v7 != v8)
  {
    unsigned int v9 = *(unsigned __int8 *)(v7 + 48);
    if (v9 >= 2) {
      unsigned int v9 = *(_DWORD *)v7 + 2;
    }
    if (v9 == 1) {
      __swift_destroy_boxed_opaque_existential_1(v7);
    }
    swift_release();
    unsigned int v10 = *(unsigned __int8 *)(v8 + 48);
    if (v10 >= 2) {
      unsigned int v10 = *(_DWORD *)v8 + 2;
    }
    if (v10 == 1)
    {
      long long v11 = *(_OWORD *)v8;
      long long v12 = *(_OWORD *)(v8 + 32);
      *(_OWORD *)(v7 + 16) = *(_OWORD *)(v8 + 16);
      *(_OWORD *)(v7 + 32) = v12;
      *(_OWORD *)unint64_t v7 = v11;
    }
    else
    {
      LOBYTE(v10) = 0;
      *(void *)unint64_t v7 = *(void *)v8;
    }
    *(unsigned char *)(v7 + 48) = v10;
  }
  return a1;
}

uint64_t sub_22EE3CD48(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= 0xFE) {
    unsigned int v7 = 254;
  }
  else {
    unsigned int v7 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 49;
    unsigned int v9 = (a2 - v7 + 255) >> (8 * v8);
    if (v8 < 4) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      unsigned int v11 = 4;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v10 < 0x100) {
      unsigned int v11 = 1;
    }
    if (v10 >= 2) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    switch(v12)
    {
      case 1:
        int v13 = a1[v8];
        if (!a1[v8]) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v13 = *(unsigned __int16 *)&a1[v8];
        if (*(_WORD *)&a1[v8]) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x22EE3CE98);
      case 4:
        int v13 = *(_DWORD *)&a1[v8];
        if (!v13) {
          break;
        }
LABEL_22:
        int v15 = (v13 - 1) << (8 * v8);
        if (v8 >= 4) {
          int v15 = 0;
        }
        if (((v6 + 7) & 0xFFFFFFF8) == 0xFFFFFFD0) {
          int v16 = *a1;
        }
        else {
          int v16 = *(_DWORD *)a1;
        }
        return v7 + (v16 | v15) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0xFE) {
    return __swift_getEnumTagSinglePayload((uint64_t)a1, v5, v4);
  }
  unsigned int v17 = *(unsigned __int8 *)(((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8) + 48);
  if (v17 >= 2) {
    return (v17 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

double sub_22EE3CEAC(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7 <= 0xFE) {
    unsigned int v8 = 254;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  size_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 49;
  char v11 = 8 * v10;
  if (v8 >= a3)
  {
    int v15 = 0;
  }
  else
  {
    unsigned int v12 = (a3 - v8 + 255) >> v11;
    if (v10 <= 3) {
      unsigned int v13 = v12 + 1;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
  }
  if (v8 < a2)
  {
    unsigned int v16 = ~v8 + a2;
    unsigned int v17 = (~(_BYTE)v8 + a2);
    if (v10 < 4) {
      int v18 = (v16 >> v11) + 1;
    }
    else {
      int v18 = 1;
    }
    if (v10 >= 4) {
      unsigned int v19 = v16;
    }
    else {
      unsigned int v19 = v17;
    }
    bzero(a1, v10);
    if (v10 == 1) {
      *a1 = v19;
    }
    else {
      *(_DWORD *)a1 = v19;
    }
    switch(v15)
    {
      case 1:
        a1[v10] = v18;
        return result;
      case 2:
        *(_WORD *)&a1[v10] = v18;
        return result;
      case 3:
        goto LABEL_46;
      case 4:
        *(_DWORD *)&a1[v10] = v18;
        return result;
      default:
        return result;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return result;
      }
      goto LABEL_34;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return result;
      }
      goto LABEL_34;
    case 3:
LABEL_46:
      __break(1u);
      JUMPOUT(0x22EE3D0BCLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_33;
    default:
LABEL_33:
      if (a2)
      {
LABEL_34:
        if (v7 < 0xFE)
        {
          unint64_t v21 = (unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8;
          if (a2 > 0xFE)
          {
            *(unsigned char *)(v21 + 48) = 0;
            double result = 0.0;
            *(_OWORD *)(v21 + 16) = 0u;
            *(_OWORD *)(v21 + 32) = 0u;
            *(_OWORD *)unint64_t v21 = 0u;
            *(_DWORD *)unint64_t v21 = a2 - 255;
          }
          else
          {
            *(unsigned char *)(v21 + 48) = -(char)a2;
          }
        }
        else
        {
          __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v7, v6);
        }
      }
      return result;
  }
}

uint64_t type metadata accessor for BestContrastForegroundStyle()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_22EE3D0FC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_22EE3D134()
{
  sub_22EE7D480();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_5_2();
  v0();

  return swift_deallocObject();
}

uint64_t sub_22EE3D1B8@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  sub_22EE7D480();

  return sub_22EE3BF64(a1, a2);
}

unint64_t sub_22EE3D238()
{
  unint64_t result = qword_268628288[0];
  if (!qword_268628288[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_268628288);
  }
  return result;
}

uint64_t sub_22EE3D284(uint64_t a1)
{
  return a1;
}

uint64_t sub_22EE3D2B4@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v43 = a6;
  uint64_t v44 = a7;
  int v42 = a5;
  uint64_t v40 = a3;
  uint64_t v41 = a4;
  uint64_t v45 = a9;
  uint64_t v38 = a13;
  uint64_t v39 = a14;
  uint64_t v46 = a12;
  uint64_t v35 = a10;
  uint64_t v15 = *(void *)(a8 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  int v37 = a2 & 1;
  __n128 v17 = MEMORY[0x270FA5388](a1);
  int v18 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))(v18, v20, v19, v17);
  unint64_t v21 = (*(unsigned __int8 *)(v15 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v22 = v21 + v16;
  unint64_t v23 = (v21 + v16) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = (char *)swift_allocObject();
  unint64_t v34 = &v24[v23];
  uint64_t v25 = a8;
  uint64_t v36 = a8;
  *((void *)v24 + 2) = a8;
  *((void *)v24 + 3) = a10;
  uint64_t v26 = v46;
  *((void *)v24 + 4) = a11;
  *((void *)v24 + 5) = v26;
  uint64_t v28 = v38;
  uint64_t v27 = v39;
  *((void *)v24 + 6) = v38;
  *((void *)v24 + 7) = v27;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v24[v21], v18, v25);
  v24[v22] = v37;
  *((void *)v34 + 1) = v40;
  int v29 = &v24[(v23 + 23) & 0xFFFFFFFFFFFFFFF8];
  *(void *)int v29 = v41;
  v29[8] = v42 & 1;
  int v30 = &v24[(v23 + 39) & 0xFFFFFFFFFFFFFFF8];
  uint64_t v31 = v44;
  *(void *)int v30 = v43;
  *((void *)v30 + 1) = v31;
  swift_retain();
  uint64_t v49 = v35;
  uint64_t v50 = a11;
  uint64_t v51 = v28;
  uint64_t v52 = v27;
  sub_22EE7DA80();
  swift_getWitnessTable();
  sub_22EE7D610();
  sub_22EE7CEE0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v47 = v46;
  uint64_t v48 = WitnessTable;
  swift_getWitnessTable();
  sub_22EE7CBA0();
  return swift_release();
}

uint64_t sub_22EE3D558()
{
  return sub_22EE7E2C0();
}

uint64_t sub_22EE3D648()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_22EE3D6EC()
{
  return sub_22EE3D558();
}

uint64_t sub_22EE3D7B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X7>, uint64_t a5@<X8>, uint64_t a6)
{
  v16[0] = a1;
  v16[1] = a5;
  v16[2] = a2;
  v16[3] = a3;
  v16[4] = a4;
  v16[5] = a6;
  uint64_t v6 = sub_22EE7DA80();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  unsigned int v12 = (char *)v16 - v11;
  sub_22EE7D030();
  sub_22EE7D020();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_22EB69440(v9, v6, WitnessTable);
  int v14 = *(void (**)(char *, uint64_t))(v7 + 8);
  v14(v9, v6);
  sub_22EB69440(v12, v6, WitnessTable);
  return ((uint64_t (*)(char *, uint64_t))v14)(v12, v6);
}

uint64_t sub_22EE3D95C@<X0>(uint64_t a1@<X8>)
{
  return sub_22EE3D7B4(v1[8], v1[3], v1[4], v1[6], a1, v1[7]);
}

void sub_22EE3D994()
{
  sub_22EB24C50(319, &qword_26861CF60, type metadata accessor for ProductViewConfiguration, MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F)
    {
      sub_22EB24C50(319, (unint64_t *)&qword_26861C810, MEMORY[0x263F18FF8], MEMORY[0x263F185C8]);
      if (v2 <= 0x3F)
      {
        sub_22EB24C50(319, (unint64_t *)&qword_26861C818, MEMORY[0x263F18D80], MEMORY[0x263F185C8]);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void *sub_22EE3DB74(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = sub_22EE7F6E0();
  uint64_t v192 = *(void *)(v4 - 8);
  uint64_t v193 = v4;
  int v5 = *(_DWORD *)(v192 + 80);
  uint64_t v180 = v5 + 16;
  uint64_t v6 = *(void *)(v192 + 64);
  uint64_t v7 = sub_22EE7F5D0();
  uint64_t v176 = *(void *)(v7 - 8);
  uint64_t v177 = v7;
  int v201 = *(_DWORD *)(v176 + 80);
  unint64_t v8 = v5 | (unint64_t)v201 | 7;
  uint64_t v179 = v8 + v6;
  uint64_t v174 = v201 + 16;
  uint64_t v183 = v201;
  uint64_t v175 = *(void *)(v176 + 64) + v5;
  uint64_t v186 = v5;
  uint64_t v9 = v6 + 7;
  unint64_t v10 = (v6 + 7 + ((v175 + ((v183 + 16) & ~v183)) & ~(unint64_t)v5)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = v10 + 8;
  unint64_t v12 = v10 + 9;
  unint64_t v173 = v11;
  if (v12 <= v11) {
    unint64_t v12 = v11;
  }
  if (v12 <= 2) {
    unint64_t v12 = 2;
  }
  uint64_t v181 = v6 + 7;
  unint64_t v182 = v12;
  unint64_t v13 = v12 + ((v8 + v6 + ((v5 + 16) & ~(unint64_t)v5)) & ~v8);
  if (v13 + 1 > (v9 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v14 = v13 + 1;
  }
  else {
    unint64_t v14 = (v9 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v14 <= 0x10) {
    unint64_t v14 = 16;
  }
  unint64_t v204 = v14;
  uint64_t v196 = sub_22EE7C220();
  uint64_t v15 = *(void *)(v196 - 8);
  int v17 = *(_DWORD *)(v15 + 80);
  int v16 = *(_DWORD *)(v15 + 84);
  uint64_t v178 = v15;
  int v18 = v16 - 1;
  if (!v16) {
    int v18 = 0;
  }
  if (v18 <= 0x7FFFFFFF) {
    int v19 = 0x7FFFFFFF;
  }
  else {
    int v19 = v18;
  }
  if (v18 >= 0) {
    int v20 = 0x7FFFFFFF;
  }
  else {
    int v20 = v19;
  }
  int v197 = v20;
  unsigned int v188 = *(_DWORD *)(v15 + 84);
  uint64_t v21 = *(_DWORD *)(v15 + 80);
  unint64_t v22 = v8 | v21;
  size_t v23 = *(void *)(*(void *)(v196 - 8) + 64);
  if (!v16) {
    ++v23;
  }
  size_t v203 = v23;
  uint64_t v195 = *(void *)(a3 + 16);
  uint64_t v194 = *(void *)(v195 - 8);
  int v24 = *(_DWORD *)(v194 + 80);
  uint64_t v199 = *(void *)(v194 + 64);
  uint64_t v191 = sub_22EE7CFC0();
  uint64_t v190 = *(void *)(v191 - 8);
  int v25 = *(_DWORD *)(v190 + 80);
  uint64_t v26 = v25 & 0xF8;
  unint64_t v27 = *(void *)(v190 + 64);
  if (v27 <= 8) {
    unint64_t v27 = 8;
  }
  unint64_t v206 = v27;
  uint64_t v28 = sub_22EE7CE90();
  int v29 = *(_DWORD *)(*(void *)(v28 - 8) + 80);
  uint64_t v30 = v29 & 0xF8 | 7;
  if (*(void *)(*(void *)(v28 - 8) + 64) <= 8uLL) {
    uint64_t v31 = 8;
  }
  else {
    uint64_t v31 = *(void *)(*(void *)(v28 - 8) + 64);
  }
  uint64_t v32 = v22 | v24 | v26 | v30;
  if (v32 != 7
    || ((v201 | v5 | v17 | v25 | v24 | v29) & 0x100000) != 0
    || (unint64_t v33 = v5 | (unint64_t)v201 | 7,
        uint64_t v34 = v21 + 16,
        size_t v35 = ((v22 + 32) & ~v22)
            + ((v203 + 7 + ((v21 + 16 + ((v204 + 8 + ((v204 + 1 + v8) & ~v8)) & 0xFFFFFFFFFFFFFFF8)) & ~v21)) & 0xFFFFFFFFFFFFFFF8)
            + 8,
        uint64_t v36 = v206 + v30 + 1,
        ((v31
        + ((v36
          + ((v199 + (v26 | 7) + ((v35 + v24) & ~(unint64_t)v24)) & ~(v26 | 7))) & ~v30)
        + 40) & 0xFFFFFFFFFFFFFFF8)
      + 9 > 0x18))
  {
    uint64_t v45 = *a2;
    *a1 = *a2;
    uint64_t v44 = (void *)(v45 + ((v32 + 16) & ~v32));
    swift_retain();
    return v44;
  }
  uint64_t v167 = v31;
  unint64_t v37 = ~v8;
  unint64_t v38 = ~v22;
  uint64_t v39 = ~v21;
  uint64_t v166 = v28;
  uint64_t v171 = v29 & 0xF8 | 7;
  uint64_t v172 = *(void *)(v28 - 8);
  uint64_t v200 = v199 + (v26 | 7);
  uint64_t v202 = v206 + v30 + 1;
  uint64_t v169 = ~(v26 | 7);
  size_t v170 = v35 + v24;
  unint64_t v168 = ~(unint64_t)v24;
  if (v197 == 0x7FFFFFFF)
  {
    uint64_t v40 = a2;
    unint64_t v41 = a2[1];
    if (v41 >= 0xFFFFFFFF)
    {
      uint64_t v164 = ~v21;
      size_t __n = v204 + 1;
      unint64_t v189 = v8;
      unint64_t v162 = v204 + 8;
      uint64_t v163 = v21 + 16;
      size_t v198 = v203 + 7;
      int v42 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v43 = (unsigned __int8 *)(((unint64_t)v42 + v22 + 16) & v38);
      uint64_t v44 = a1;
      goto LABEL_34;
    }
  }
  else
  {
    size_t v198 = v203 + 7;
    uint64_t v40 = a2;
    int v42 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v43 = (unsigned __int8 *)(((unint64_t)v42 + v22 + 16) & v38);
    unint64_t v46 = (v34 + ((v204 + 8 + ((unint64_t)&v43[v8 + 1 + v204] & v37)) & 0xFFFFFFFFFFFFFFF8)) & v39;
    uint64_t v47 = v34;
    unint64_t v160 = ~v33;
    uint64_t v48 = v39;
    unint64_t v49 = v33;
    if (__swift_getEnumTagSinglePayload(v46, v188, v196) <= 1)
    {
      uint64_t v164 = v48;
      size_t __n = v204 + 1;
      unint64_t v189 = v49;
      unint64_t v162 = v204 + 8;
      uint64_t v163 = v47;
      unint64_t v41 = a2[1];
      uint64_t v44 = a1;
      uint64_t v36 = v202;
      unint64_t v38 = ~v22;
      unint64_t v37 = v160;
LABEL_34:
      *uint64_t v44 = *v40;
      v44[1] = v41;
      uint64_t v50 = (void *)(((unint64_t)v44 + 23) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v50 = *v42;
      v50[1] = v42[1];
      uint64_t v51 = (void *)(((unint64_t)v50 + v22 + 16) & v38);
      unint64_t v52 = v204;
      unsigned int v53 = v43[v204];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v53 < 3)
      {
        uint64_t v56 = v183;
        uint64_t v55 = v186;
      }
      else
      {
        if (v204 <= 3) {
          uint64_t v54 = v204;
        }
        else {
          uint64_t v54 = 4;
        }
        uint64_t v56 = v183;
        uint64_t v55 = v186;
        switch(v54)
        {
          case 1:
            int v57 = *v43;
            goto LABEL_45;
          case 2:
            int v57 = *(unsigned __int16 *)v43;
            goto LABEL_45;
          case 3:
            int v57 = *(unsigned __int16 *)v43 | (v43[2] << 16);
            goto LABEL_45;
          case 4:
            int v57 = *(_DWORD *)v43;
LABEL_45:
            if (v204 < 4) {
              unsigned int v53 = (v57 | ((v53 - 3) << (8 * v204))) + 3;
            }
            else {
              unsigned int v53 = v57 + 3;
            }
            break;
          default:
            break;
        }
      }
      uint64_t v66 = ~v55;
      uint64_t v187 = ~v56;
      if (v53 == 2)
      {
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v192 + 16))(v51, v43, v193);
        *(_OWORD *)(((unint64_t)v51 + v181) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v43[v181] & 0xFFFFFFFFFFFFFFF8);
        *((unsigned char *)v51 + v204) = 2;
      }
      else
      {
        if (v53 == 1)
        {
          *uint64_t v51 = *(void *)v43;
          v51[1] = *((void *)v43 + 1);
          unint64_t v67 = ((unint64_t)v51 + v180) & v66;
          v161 = v43;
          uint64_t v184 = ~v55;
          unint64_t v68 = (unint64_t)&v43[v180] & v66;
          uint64_t v69 = *(void (**)(unint64_t, unint64_t, uint64_t))(v192 + 16);
          swift_bridgeObjectRetain();
          v69(v67, v68, v193);
          uint64_t v70 = (unsigned char *)((v179 + v67) & v37);
          uint64_t v71 = (unsigned __int8 *)((v179 + v68) & v37);
          unint64_t v72 = v182;
          unsigned int v73 = v71[v182];
          unsigned int v74 = v73 - 4;
          if (v73 >= 4)
          {
            if (v182 <= 3) {
              uint64_t v75 = v182;
            }
            else {
              uint64_t v75 = 4;
            }
            switch(v75)
            {
              case 1:
                int v76 = *v71;
                goto LABEL_62;
              case 2:
                int v76 = *(unsigned __int16 *)v71;
                goto LABEL_62;
              case 3:
                int v76 = *(unsigned __int16 *)v71 | (*(unsigned __int8 *)(((v179 + v68) & v37) + 2) << 16);
                goto LABEL_62;
              case 4:
                int v76 = *(_DWORD *)v71;
LABEL_62:
                if (v182 < 4) {
                  unsigned int v73 = (v76 | (v74 << (8 * v182))) + 4;
                }
                else {
                  unsigned int v73 = v76 + 4;
                }
                break;
              default:
                break;
            }
          }
          switch(v73)
          {
            case 1u:
              *uint64_t v70 = *v71;
              char v79 = 1;
              break;
            case 2u:
              *(void *)uint64_t v70 = *(void *)v71;
              *(void *)(((v179 + v67) & v37) + 8) = *(void *)(((v179 + v68) & v37) + 8);
              unint64_t v80 = (unint64_t)&v70[v174] & v187;
              unint64_t v81 = (unint64_t)&v71[v174] & v187;
              uint64_t v82 = *(void (**)(unint64_t, unint64_t, uint64_t))(v176 + 16);
              swift_bridgeObjectRetain();
              v82(v80, v81, v177);
              uint64_t v44 = a1;
              unint64_t v83 = (v175 + v80) & v184;
              unint64_t v84 = (v175 + v81) & v184;
              v69(v83, v84, v193);
              unint64_t v72 = v182;
              *(void *)((v181 + v83) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v181 + v84) & 0xFFFFFFFFFFFFFFF8);
              v70[v173] = v71[v173];
              char v79 = 2;
              break;
            case 3u:
              *(void *)uint64_t v70 = *(void *)v71;
              *(void *)(((v179 + v67) & v37) + 8) = *(void *)(((v179 + v68) & v37) + 8);
              unint64_t v85 = (unint64_t)&v70[v174] & v187;
              unint64_t v86 = (unint64_t)&v71[v174] & v187;
              uint64_t v87 = *(void (**)(unint64_t, unint64_t, uint64_t))(v176 + 16);
              swift_bridgeObjectRetain();
              v87(v85, v86, v177);
              unint64_t v88 = (v175 + v85) & v184;
              unint64_t v89 = (v175 + v86) & v184;
              v69(v88, v89, v193);
              unint64_t v72 = v182;
              *(void *)((v181 + v88) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v181 + v89) & 0xFFFFFFFFFFFFFFF8);
              char v79 = 3;
              break;
            default:
              char v79 = 0;
              *(_WORD *)uint64_t v70 = *(_WORD *)v71;
              break;
          }
          uint64_t v36 = v202;
          unint64_t v77 = v189;
          size_t v78 = __n;
          v70[v72] = v79;
          unint64_t v52 = v204;
          *((unsigned char *)v51 + v204) = 1;
          uint64_t v66 = v184;
          uint64_t v43 = v161;
LABEL_71:
          uint64_t v90 = (void *)(((unint64_t)v51 + v77 + v78) & v37);
          unint64_t v91 = (unint64_t)&v43[v77 + v78];
          unint64_t v92 = v37;
          uint64_t v93 = (void *)(v91 & v37);
          unsigned int v94 = *((unsigned __int8 *)v93 + v52);
          if (v94 > 2)
          {
            memcpy(v90, v93, v78);
          }
          else
          {
            if (v94 != 2)
            {
              if (v94 == 1)
              {
                *uint64_t v90 = *v93;
                v90[1] = v93[1];
                unint64_t v95 = ((unint64_t)v90 + v180) & v66;
                uint64_t v185 = v66;
                unint64_t v96 = ((unint64_t)v93 + v180) & v66;
                long long v97 = *(void (**)(unint64_t, unint64_t, uint64_t))(v192 + 16);
                swift_bridgeObjectRetain();
                v97(v95, v96, v193);
                unint64_t v98 = v182;
                unint64_t v99 = (v179 + v95) & v92;
                v100 = (unsigned __int8 *)((v179 + v96) & v92);
                unsigned int v101 = v100[v182];
                unsigned int v102 = v101 - 4;
                if (v101 >= 4)
                {
                  if (v182 <= 3) {
                    uint64_t v103 = v182;
                  }
                  else {
                    uint64_t v103 = 4;
                  }
                  switch(v103)
                  {
                    case 1:
                      int v104 = *v100;
                      goto LABEL_87;
                    case 2:
                      int v104 = *(unsigned __int16 *)v100;
                      goto LABEL_87;
                    case 3:
                      int v104 = *(unsigned __int16 *)v100 | (v100[2] << 16);
                      goto LABEL_87;
                    case 4:
                      int v104 = *(_DWORD *)v100;
LABEL_87:
                      if (v182 < 4) {
                        unsigned int v101 = (v104 | (v102 << (8 * v182))) + 4;
                      }
                      else {
                        unsigned int v101 = v104 + 4;
                      }
                      break;
                    default:
                      break;
                  }
                }
                switch(v101)
                {
                  case 1u:
                    *(unsigned char *)unint64_t v99 = *v100;
                    char v108 = 1;
                    break;
                  case 2u:
                    *(void *)unint64_t v99 = *(void *)v100;
                    *(void *)(v99 + 8) = *((void *)v100 + 1);
                    uint64_t v109 = (v174 + v99) & v187;
                    unint64_t v110 = (unint64_t)&v100[v174] & v187;
                    uint64_t v111 = *(void (**)(uint64_t, unint64_t, uint64_t))(v176 + 16);
                    swift_bridgeObjectRetain();
                    v111(v109, v110, v177);
                    uint64_t v112 = (v175 + v109) & v185;
                    unint64_t v113 = (v175 + v110) & v185;
                    v97(v112, v113, v193);
                    unint64_t v98 = v182;
                    *(void *)((v181 + v112) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v181 + v113) & 0xFFFFFFFFFFFFFFF8);
                    *(unsigned char *)(v99 + v173) = v100[v173];
                    char v108 = 2;
                    break;
                  case 3u:
                    *(void *)unint64_t v99 = *(void *)v100;
                    *(void *)(v99 + 8) = *((void *)v100 + 1);
                    uint64_t v114 = (v174 + v99) & v187;
                    unint64_t v115 = (unint64_t)&v100[v174] & v187;
                    v116 = *(void (**)(uint64_t, unint64_t, uint64_t))(v176 + 16);
                    swift_bridgeObjectRetain();
                    v116(v114, v115, v177);
                    uint64_t v117 = (v175 + v114) & v185;
                    unint64_t v118 = (v175 + v115) & v185;
                    v97(v117, v118, v193);
                    unint64_t v98 = v182;
                    *(void *)((v181 + v117) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v181 + v118) & 0xFFFFFFFFFFFFFFF8);
                    char v108 = 3;
                    break;
                  default:
                    char v108 = 0;
                    *(_WORD *)unint64_t v99 = *(_WORD *)v100;
                    break;
                }
                uint64_t v36 = v202;
                unint64_t v105 = v162;
                uint64_t v106 = v163;
                *(unsigned char *)(v99 + v98) = v108;
                *((unsigned char *)v90 + v204) = 1;
                uint64_t v40 = a2;
              }
              else
              {
                uint64_t v40 = a2;
                *uint64_t v90 = *v93;
                v90[1] = v93[1];
                *((unsigned char *)v90 + v52) = 0;
                swift_bridgeObjectRetain();
                unint64_t v105 = v162;
                uint64_t v106 = v163;
              }
              uint64_t v107 = v164;
              goto LABEL_97;
            }
            (*(void (**)(void *, void *, uint64_t))(v192 + 16))(v90, v93, v193);
            *(_OWORD *)(((unint64_t)v90 + v181) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v93
                                                                                            + v181) & 0xFFFFFFFFFFFFFFF8);
            *((unsigned char *)v90 + v52) = 2;
          }
          unint64_t v105 = v162;
          uint64_t v106 = v163;
          uint64_t v107 = v164;
          uint64_t v40 = a2;
LABEL_97:
          uint64_t v119 = (void *)(((unint64_t)v90 + v105) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v120 = (void *)(((unint64_t)v93 + v105) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v121 = v120[1];
          *uint64_t v119 = *v120;
          v119[1] = v121;
          uint64_t v122 = (void *)(((unint64_t)v119 + v106) & v107);
          uint64_t v123 = (const void *)(((unint64_t)v120 + v106) & v107);
          swift_retain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v123, 1, v196))
          {
            memcpy(v122, v123, v203);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v178 + 16))(v122, v123, v196);
            __swift_storeEnumTagSinglePayload((uint64_t)v122, 0, 1, v196);
          }
          unint64_t v60 = v206;
          uint64_t v62 = v194;
          uint64_t v61 = v195;
          uint64_t v63 = v200;
          uint64_t v65 = v169;
          size_t v64 = v170;
          uint64_t v59 = v167;
          unint64_t v58 = v168;
          *(void *)(((unint64_t)v122 + v198) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v123
                                                                                           + v198) & 0xFFFFFFFFFFFFFFF8);
          goto LABEL_101;
        }
        *uint64_t v51 = *(void *)v43;
        v51[1] = *((void *)v43 + 1);
        *((unsigned char *)v51 + v204) = 0;
        swift_bridgeObjectRetain();
      }
      unint64_t v77 = v189;
      size_t v78 = __n;
      goto LABEL_71;
    }
  }
  uint64_t v44 = a1;
  memcpy(a1, v40, v35);
  uint64_t v59 = v167;
  unint64_t v58 = v168;
  unint64_t v60 = v206;
  uint64_t v62 = v194;
  uint64_t v61 = v195;
  uint64_t v63 = v200;
  uint64_t v36 = v202;
  uint64_t v65 = ~(v26 | 7);
  size_t v64 = v170;
LABEL_101:
  unint64_t v124 = ((unint64_t)v44 + v64) & v58;
  unint64_t v125 = ((unint64_t)v40 + v64) & v58;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v62 + 16))(v124, v125, v61);
  uint64_t v126 = (void *)((v63 + v124) & v65);
  uint64_t v127 = (unsigned __int8 *)((v63 + v125) & v65);
  unsigned int v128 = v127[v60];
  unsigned int v129 = v128 - 2;
  if (v128 < 2)
  {
    uint64_t v131 = v171;
  }
  else
  {
    if (v60 <= 3) {
      uint64_t v130 = v60;
    }
    else {
      uint64_t v130 = 4;
    }
    uint64_t v131 = v171;
    switch(v130)
    {
      case 1:
        int v132 = *v127;
        goto LABEL_111;
      case 2:
        int v132 = *(unsigned __int16 *)v127;
        goto LABEL_111;
      case 3:
        int v132 = *(unsigned __int16 *)v127 | (v127[2] << 16);
        goto LABEL_111;
      case 4:
        int v132 = *(_DWORD *)v127;
LABEL_111:
        int v133 = (v132 | (v129 << (8 * v60))) + 2;
        unsigned int v128 = v132 + 2;
        if (v60 < 4) {
          unsigned int v128 = v133;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v134 = ~v131;
  if (v128 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v190 + 16))(v126, v127, v191);
    char v135 = 1;
  }
  else
  {
    *uint64_t v126 = *(void *)v127;
    swift_retain();
    char v135 = 0;
  }
  *((unsigned char *)v126 + v60) = v135;
  uint64_t v136 = (void *)(((unint64_t)v126 + v36) & v134);
  uint64_t v137 = (unsigned __int8 *)((unint64_t)&v127[v36] & v134);
  unsigned int v138 = v137[v59];
  unsigned int v139 = v138 - 2;
  if (v138 >= 2)
  {
    if (v59 <= 3) {
      uint64_t v140 = v59;
    }
    else {
      uint64_t v140 = 4;
    }
    switch(v140)
    {
      case 1:
        int v141 = *v137;
        goto LABEL_125;
      case 2:
        int v141 = *(unsigned __int16 *)v137;
        goto LABEL_125;
      case 3:
        int v141 = *(unsigned __int16 *)v137 | (v137[2] << 16);
        goto LABEL_125;
      case 4:
        int v141 = *(_DWORD *)v137;
LABEL_125:
        int v142 = (v141 | (v139 << (8 * v59))) + 2;
        unsigned int v138 = v141 + 2;
        if (v59 < 4) {
          unsigned int v138 = v142;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v143 = v59 + 1;
  if (v138 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v172 + 16))(v136, v137, v166);
    char v144 = 1;
  }
  else
  {
    *uint64_t v136 = *(void *)v137;
    swift_retain();
    char v144 = 0;
  }
  *((unsigned char *)v136 + v59) = v144;
  v145 = (char *)v136 + v143;
  v146 = &v137[v143];
  unint64_t v147 = (unint64_t)(v145 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v148 = (unint64_t)(v146 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v149 = *(void *)v148;
  char v150 = *(unsigned char *)(v148 + 8);
  sub_22EADDF00(*(void *)v148, v150);
  *(void *)unint64_t v147 = v149;
  *(unsigned char *)(v147 + 8) = v150;
  unint64_t v151 = (unint64_t)(v145 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v152 = (unint64_t)(v146 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v153 = *(void *)v152;
  char v154 = *(unsigned char *)(v152 + 8);
  sub_22EADDF00(*(void *)v152, v154);
  *(void *)unint64_t v151 = v153;
  *(unsigned char *)(v151 + 8) = v154;
  unint64_t v155 = (unint64_t)(v145 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v156 = (unint64_t)(v146 + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v157 = *(void *)v156;
  char v158 = *(unsigned char *)(v156 + 8);
  sub_22EADDF00(*(void *)v156, v158);
  *(void *)unint64_t v155 = v157;
  *(unsigned char *)(v155 + 8) = v158;
  return v44;
}

uint64_t sub_22EE3EBA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22EE7F6E0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v110 = v6 + 16;
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v106 = sub_22EE7F5D0();
  uint64_t v8 = *(void *)(v106 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v6 | v9 | 7;
  uint64_t v109 = v10 + v7;
  uint64_t v104 = v9 + 16;
  uint64_t v105 = *(void *)(v8 + 64) + v6;
  unint64_t v11 = (v7 + 7 + ((v105 + ((v9 + 16) & ~v9)) & ~v6)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = v11 + 8;
  unint64_t v13 = v11 + 9;
  if (v13 <= v12) {
    unint64_t v13 = v12;
  }
  if (v13 <= 2) {
    unint64_t v13 = 2;
  }
  unint64_t v116 = v13;
  unint64_t v14 = v13 + ((v10 + v7 + ((v6 + 16) & ~v6)) & ~v10);
  if (v14 + 1 > ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v15 = v14 + 1;
  }
  else {
    unint64_t v15 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v15 <= 0x10) {
    uint64_t v16 = 16;
  }
  else {
    uint64_t v16 = v15;
  }
  uint64_t v17 = sub_22EE7C220();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(unsigned int *)(v18 + 84);
  uint64_t v20 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v21 = v10 | v20;
  uint64_t v22 = ~(v10 | v20);
  uint64_t v23 = ((v10 | v20) + 32) & v22;
  uint64_t v24 = v16 + 1;
  uint64_t v25 = (v16 + 1 + v10) & ~v10;
  uint64_t v26 = ~v20;
  uint64_t v27 = *(void *)(v18 + 64);
  if (v19 < 0x80000001)
  {
    uint64_t v28 = ~v10;
    if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL)
    {
      uint64_t v32 = v16 + 8;
      uint64_t v33 = v20 + 16;
      goto LABEL_76;
    }
    uint64_t v102 = v17;
    uint64_t v103 = v16 + 1;
    uint64_t v101 = *(unsigned __int8 *)(v18 + 80);
    uint64_t v99 = *(void *)(v17 - 8);
    uint64_t v111 = (v16 + 1 + v10) & ~v10;
    uint64_t v107 = v5;
    uint64_t v118 = ~v20;
    uint64_t v112 = *(void *)(v99 + 64);
    int v113 = *(_DWORD *)(v18 + 84);
    uint64_t v114 = ((v10 | v20) + 32) & ~(v10 | v20);
    uint64_t v115 = a2;
    uint64_t v100 = a1;
    int v29 = (unsigned __int8 *)((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v21 + 16) & v22);
LABEL_16:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unsigned int v37 = v29[v16];
    unsigned int v38 = v37 - 3;
    if (v37 < 3)
    {
      uint64_t v40 = v107;
      unint64_t v41 = v116;
    }
    else
    {
      if (v16 <= 3) {
        uint64_t v39 = v16;
      }
      else {
        uint64_t v39 = 4;
      }
      uint64_t v40 = v107;
      unint64_t v41 = v116;
      switch(v39)
      {
        case 1:
          int v42 = *v29;
          goto LABEL_28;
        case 2:
          int v42 = *(unsigned __int16 *)v29;
          goto LABEL_28;
        case 3:
          int v42 = *(unsigned __int16 *)v29 | (v29[2] << 16);
          goto LABEL_28;
        case 4:
          int v42 = *(_DWORD *)v29;
LABEL_28:
          if (v16 < 4) {
            unsigned int v37 = (v42 | (v38 << (8 * v16))) + 3;
          }
          else {
            unsigned int v37 = v42 + 3;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v117 = ~v6;
    uint64_t v108 = ~v9;
    if (v37 == 2)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v40 + 8))(v29, v4);
    }
    else if (v37 == 1)
    {
      swift_bridgeObjectRelease();
      unint64_t v98 = *(void (**)(unint64_t, uint64_t))(v40 + 8);
      v98((unint64_t)&v29[v110] & v117, v4);
      uint64_t v43 = (unsigned __int8 *)((v109 + ((unint64_t)&v29[v110] & v117)) & v28);
      unsigned int v44 = v43[v41];
      unsigned int v45 = v44 - 4;
      if (v44 < 4)
      {
        uint64_t v47 = v103;
      }
      else
      {
        if (v41 <= 3) {
          uint64_t v46 = v41;
        }
        else {
          uint64_t v46 = 4;
        }
        uint64_t v47 = v103;
        switch(v46)
        {
          case 1:
            int v48 = *v43;
            goto LABEL_45;
          case 2:
            int v48 = *(unsigned __int16 *)v43;
            goto LABEL_45;
          case 3:
            int v48 = *(unsigned __int16 *)((v109 + ((unint64_t)&v29[v110] & v117)) & v28) | (*(unsigned __int8 *)(((v109 + ((unint64_t)&v29[v110] & v117)) & v28) + 2) << 16);
            goto LABEL_45;
          case 4:
            int v48 = *(_DWORD *)v43;
LABEL_45:
            if (v41 < 4) {
              unsigned int v44 = (v48 | (v45 << (8 * v41))) + 4;
            }
            else {
              unsigned int v44 = v48 + 4;
            }
            break;
          default:
            break;
        }
      }
      if (v44 < 2) {
        goto LABEL_53;
      }
      if (v44 == 3)
      {
        uint64_t v49 = v47;
        swift_bridgeObjectRelease();
        unint64_t v50 = (unint64_t)&v43[v104] & v108;
        (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v50, v106);
        v98((v105 + v50) & v117, v4);
        uint64_t v47 = v49;
        uint64_t v28 = ~v10;
LABEL_53:
        uint64_t v52 = v40;
        unint64_t v53 = (unint64_t)&v29[v10 + v47] & v28;
        uint64_t v54 = v16;
        unsigned int v55 = *(unsigned __int8 *)(v53 + v16);
        if (v55 <= 2)
        {
          if (v55 == 2)
          {
            (*(void (**)(unint64_t, uint64_t))(v52 + 8))(v53, v4);
          }
          else if (v55 == 1)
          {
            swift_bridgeObjectRelease();
            unint64_t v56 = (v110 + v53) & v117;
            int v57 = *(void (**)(unint64_t, uint64_t))(v52 + 8);
            v57(v56, v4);
            unint64_t v58 = (unsigned __int8 *)((v109 + v56) & v28);
            unsigned int v59 = v58[v41];
            unsigned int v60 = v59 - 4;
            if (v59 >= 4)
            {
              if (v41 <= 3) {
                uint64_t v61 = v41;
              }
              else {
                uint64_t v61 = 4;
              }
              switch(v61)
              {
                case 1:
                  int v62 = *v58;
                  goto LABEL_67;
                case 2:
                  int v62 = *(unsigned __int16 *)v58;
                  goto LABEL_67;
                case 3:
                  int v62 = *(unsigned __int16 *)v58 | (*(unsigned __int8 *)(((v109 + v56) & v28) + 2) << 16);
                  goto LABEL_67;
                case 4:
                  int v62 = *(_DWORD *)v58;
LABEL_67:
                  if (v41 < 4) {
                    unsigned int v59 = (v62 | (v60 << (8 * v41))) + 4;
                  }
                  else {
                    unsigned int v59 = v62 + 4;
                  }
                  break;
                default:
                  break;
              }
            }
            if (v59 >= 2)
            {
              swift_bridgeObjectRelease();
              (*(void (**)(unint64_t, uint64_t))(v8 + 8))((unint64_t)&v58[v104] & v108, v106);
              v57((v105 + ((unint64_t)&v58[v104] & v108)) & v117, v4);
            }
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
        uint64_t v32 = v54 + 8;
        swift_release();
        uint64_t v33 = v101 + 16;
        unint64_t v63 = (v101 + 16 + ((v54 + 8 + v53) & 0xFFFFFFFFFFFFFFF8)) & v118;
        if (!__swift_getEnumTagSinglePayload(v63, 1, v102)) {
          (*(void (**)(unint64_t, uint64_t))(v99 + 8))(v63, v102);
        }
        a1 = v100;
        goto LABEL_75;
      }
      uint64_t v103 = v47;
      swift_bridgeObjectRelease();
      unint64_t v51 = (unint64_t)&v43[v104] & v108;
      (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v51, v106);
      v98((v105 + v51) & v117, v4);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v47 = v103;
    goto LABEL_53;
  }
  uint64_t v95 = v9;
  uint64_t v96 = v8;
  uint64_t v97 = v4;
  uint64_t v99 = *(void *)(v17 - 8);
  uint64_t v111 = (v16 + 1 + v10) & ~v10;
  uint64_t v112 = *(void *)(v99 + 64);
  uint64_t v107 = v5;
  uint64_t v30 = v16;
  uint64_t v114 = ((v10 | v20) + 32) & ~(v10 | v20);
  uint64_t v115 = a2;
  uint64_t v31 = a1;
  int v29 = (unsigned __int8 *)((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v21 + 16) & v22);
  uint64_t v94 = v30;
  uint64_t v32 = v30 + 8;
  uint64_t v33 = v20 + 16;
  uint64_t v118 = ~v20;
  int v113 = *(_DWORD *)(v18 + 84);
  uint64_t v34 = v17;
  uint64_t v35 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v36 = v24;
  if (__swift_getEnumTagSinglePayload((v20 + 16 + ((v30 + 8 + ((unint64_t)&v29[v10 + v24] & ~v10)) & 0xFFFFFFFFFFFFFFF8)) & v26, v19, v17) <= 1)
  {
    uint64_t v103 = v36;
    uint64_t v28 = ~v10;
    uint64_t v101 = v35;
    uint64_t v102 = v34;
    uint64_t v100 = v31;
    uint64_t v8 = v96;
    uint64_t v4 = v97;
    uint64_t v16 = v94;
    uint64_t v9 = v95;
    goto LABEL_16;
  }
  a1 = v31;
LABEL_75:
  uint64_t v23 = v114;
  a2 = v115;
  LODWORD(v19) = v113;
  uint64_t v25 = v111;
  uint64_t v27 = v112;
  uint64_t v26 = v118;
LABEL_76:
  uint64_t v64 = 7;
  if (!v19) {
    uint64_t v64 = 8;
  }
  uint64_t v65 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v66 = v65 + 8;
  unint64_t v67 = (a1
       + v23
       + *(unsigned __int8 *)(v65 + 80)
       + ((v64 + v27 + ((v33 + ((v32 + v25) & 0xFFFFFFFFFFFFFFF8)) & v26)) & 0xFFFFFFFFFFFFFFF8)
       + 8) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
  (*(void (**)(unint64_t))(v65 + 8))(v67);
  uint64_t v68 = *(void *)(v66 + 56);
  uint64_t v69 = sub_22EE7CFC0();
  uint64_t v70 = *(void *)(v69 - 8);
  uint64_t v71 = *(_DWORD *)(v70 + 80) & 0xF8 | 7;
  unint64_t v72 = (unsigned __int8 *)((v67 + v68 + v71) & ~v71);
  if (*(void *)(v70 + 64) <= 8uLL) {
    uint64_t v73 = 8;
  }
  else {
    uint64_t v73 = *(void *)(v70 + 64);
  }
  unsigned int v74 = v72[v73];
  unsigned int v75 = v74 - 2;
  if (v74 >= 2)
  {
    if (v73 <= 3) {
      uint64_t v76 = v73;
    }
    else {
      uint64_t v76 = 4;
    }
    switch(v76)
    {
      case 1:
        int v77 = *v72;
        goto LABEL_90;
      case 2:
        int v77 = *(unsigned __int16 *)v72;
        goto LABEL_90;
      case 3:
        int v77 = *(unsigned __int16 *)v72 | (v72[2] << 16);
        goto LABEL_90;
      case 4:
        int v77 = *(_DWORD *)v72;
LABEL_90:
        int v78 = (v77 | (v75 << (8 * v73))) + 2;
        unsigned int v74 = v77 + 2;
        if (v73 < 4) {
          unsigned int v74 = v78;
        }
        break;
      default:
        break;
    }
  }
  if (v74 == 1) {
    (*(void (**)(unsigned __int8 *, uint64_t))(v70 + 8))(v72, v69);
  }
  else {
    swift_release();
  }
  uint64_t v79 = sub_22EE7CE90();
  uint64_t v80 = *(void *)(v79 - 8);
  uint64_t v81 = *(_DWORD *)(v80 + 80) & 0xF8 | 7;
  uint64_t v82 = (unsigned __int8 *)((unint64_t)&v72[v73 + 1 + v81] & ~v81);
  if (*(void *)(v80 + 64) <= 8uLL) {
    uint64_t v83 = 8;
  }
  else {
    uint64_t v83 = *(void *)(v80 + 64);
  }
  unsigned int v84 = v82[v83];
  unsigned int v85 = v84 - 2;
  if (v84 >= 2)
  {
    if (v83 <= 3) {
      uint64_t v86 = v83;
    }
    else {
      uint64_t v86 = 4;
    }
    switch(v86)
    {
      case 1:
        int v87 = *v82;
        goto LABEL_107;
      case 2:
        int v87 = *(unsigned __int16 *)v82;
        goto LABEL_107;
      case 3:
        int v87 = *(unsigned __int16 *)v82 | (v82[2] << 16);
        goto LABEL_107;
      case 4:
        int v87 = *(_DWORD *)v82;
LABEL_107:
        int v88 = (v87 | (v85 << (8 * v83))) + 2;
        unsigned int v84 = v87 + 2;
        if (v83 < 4) {
          unsigned int v84 = v88;
        }
        break;
      default:
        break;
    }
  }
  if (v84 == 1) {
    (*(void (**)(unsigned __int8 *, uint64_t))(v80 + 8))(v82, v79);
  }
  else {
    swift_release();
  }
  unint64_t v89 = &v82[v83];
  sub_22EADDB08(*(void *)((unint64_t)(v89 + 8) & 0xFFFFFFFFFFFFFFF8), *(unsigned char *)(((unint64_t)(v89 + 8) & 0xFFFFFFFFFFFFFFF8) + 8));
  sub_22EADDB08(*(void *)((unint64_t)(v89 + 24) & 0xFFFFFFFFFFFFFFF8), *(unsigned char *)(((unint64_t)(v89 + 24) & 0xFFFFFFFFFFFFFFF8) + 8));
  unint64_t v90 = (unint64_t)(v89 + 40) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v91 = *(void *)v90;
  char v92 = *(unsigned char *)(v90 + 8);

  return sub_22EADDB08(v91, v92);
}

void *sub_22EE3F664(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = sub_22EE7F6E0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v183 = v7 + 16;
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = sub_22EE7F5D0();
  uint64_t v179 = *(void *)(v9 - 8);
  uint64_t v180 = v9;
  uint64_t v10 = *(unsigned __int8 *)(v179 + 80);
  uint64_t v11 = v7 | v10 | 7;
  uint64_t v12 = ~v11;
  uint64_t v182 = v11 + v8;
  uint64_t v178 = v10 + 16;
  uint64_t v190 = v10;
  uint64_t v13 = *(void *)(v179 + 64) + v7;
  unint64_t v14 = (v8 + 7 + ((v13 + ((v10 + 16) & ~v10)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = v14 + 8;
  unint64_t v16 = v14 + 9;
  unint64_t v177 = v15;
  if (v16 <= v15) {
    unint64_t v16 = v15;
  }
  if (v16 <= 2) {
    unint64_t v16 = 2;
  }
  uint64_t v184 = v8 + 7;
  unint64_t v185 = v16;
  unint64_t v17 = v16 + ((v11 + v8 + ((v7 + 16) & ~v7)) & ~v11);
  if (v17 + 1 > ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v18 = v17 + 1;
  }
  else {
    unint64_t v18 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v18 <= 0x10) {
    uint64_t v19 = 16;
  }
  else {
    uint64_t v19 = v18;
  }
  uint64_t v20 = sub_22EE7C220();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(unsigned int *)(v21 + 84);
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = v11 | v23;
  uint64_t v25 = ~(v11 | v23);
  uint64_t v26 = ((v11 | v23) + 32) & v25;
  uint64_t v27 = (v19 + 1 + v11) & ~v11;
  uint64_t v28 = ~v23;
  uint64_t v192 = ~v11;
  size_t v194 = *(void *)(v21 + 64);
  uint64_t v196 = a1;
  if (v22 >= 0x80000001)
  {
    uint64_t v170 = v5;
    uint64_t v172 = v13;
    uint64_t v173 = *(void *)(v20 - 8);
    uint64_t v186 = (v19 + 1 + v11) & ~v11;
    uint64_t v188 = ((v11 | v23) + 32) & ~(v11 | v23);
    uint64_t v189 = ~v23;
    uint64_t v30 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v197 = ((unint64_t)v30 + v24 + 16) & v25;
    uint64_t v32 = a2;
    uint64_t v33 = v19 + 8;
    uint64_t v34 = v23 + 16;
    unint64_t v35 = (v23 + 16 + ((v19 + 8 + ((v197 + v11 + v19 + 1) & v12)) & 0xFFFFFFFFFFFFFFF8)) & v28;
    int v187 = *(_DWORD *)(v21 + 84);
    uint64_t v36 = v20;
    uint64_t v181 = *(unsigned __int8 *)(v21 + 80);
    uint64_t v167 = ~(v11 | v23);
    if (__swift_getEnumTagSinglePayload(v35, v22, v20) <= 1)
    {
      size_t v174 = v19 + 1;
      uint64_t v175 = v11;
      uint64_t v176 = v36;
      unint64_t v29 = v32[1];
      a1 = v196;
      uint64_t v31 = v197;
      a2 = v32;
      uint64_t v25 = v167;
      uint64_t v5 = v170;
      uint64_t v12 = ~v11;
LABEL_16:
      *a1 = *a2;
      a1[1] = v29;
      unsigned int v37 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
      *unsigned int v37 = *v30;
      v37[1] = v30[1];
      unsigned int v38 = (void *)(((unint64_t)v37 + v24 + 16) & v25);
      size_t v198 = (unsigned __int8 *)v31;
      unsigned int v39 = *(unsigned __int8 *)(v31 + v19);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v39 < 3)
      {
        unint64_t v41 = v198;
        uint64_t v42 = v190;
      }
      else
      {
        if (v19 <= 3) {
          uint64_t v40 = v19;
        }
        else {
          uint64_t v40 = 4;
        }
        unint64_t v41 = v198;
        uint64_t v42 = v190;
        switch(v40)
        {
          case 1:
            int v43 = *v198;
            goto LABEL_31;
          case 2:
            int v43 = *(unsigned __int16 *)v198;
            goto LABEL_31;
          case 3:
            int v43 = *(unsigned __int16 *)v198 | (v198[2] << 16);
            goto LABEL_31;
          case 4:
            int v43 = *(_DWORD *)v198;
LABEL_31:
            if (v19 < 4) {
              unsigned int v39 = (v43 | ((v39 - 3) << (8 * v19))) + 3;
            }
            else {
              unsigned int v39 = v43 + 3;
            }
            break;
          default:
            break;
        }
      }
      uint64_t v51 = ~v7;
      uint64_t v191 = ~v42;
      if (v39 == 2)
      {
        uint64_t v62 = v5;
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16))(v38, v198, v5);
        unint64_t v63 = v198;
        *(_OWORD *)(((unint64_t)v38 + v184) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v198[v184] & 0xFFFFFFFFFFFFFFF8);
        *((unsigned char *)v38 + v19) = 2;
      }
      else
      {
        if (v39 == 1)
        {
          *unsigned int v38 = *(void *)v41;
          v38[1] = *((void *)v41 + 1);
          unint64_t v52 = ((unint64_t)v38 + v183) & v51;
          uint64_t v168 = v51;
          unint64_t v53 = (unint64_t)&v41[v183] & v51;
          uint64_t v54 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
          swift_bridgeObjectRetain();
          v54(v52, v53, v5);
          unint64_t v55 = (v182 + v52) & v12;
          unint64_t v56 = (unsigned __int8 *)((v182 + v53) & v12);
          unint64_t v57 = v185;
          unsigned int v58 = v56[v185];
          unsigned int v59 = v58 - 4;
          if (v58 >= 4)
          {
            if (v185 <= 3) {
              uint64_t v60 = v185;
            }
            else {
              uint64_t v60 = 4;
            }
            switch(v60)
            {
              case 1:
                int v61 = *v56;
                goto LABEL_48;
              case 2:
                int v61 = *(unsigned __int16 *)v56;
                goto LABEL_48;
              case 3:
                int v61 = *(unsigned __int16 *)v56 | (*(unsigned __int8 *)(((v182 + v53) & v12) + 2) << 16);
                goto LABEL_48;
              case 4:
                int v61 = *(_DWORD *)v56;
LABEL_48:
                if (v185 < 4) {
                  unsigned int v58 = (v61 | (v59 << (8 * v185))) + 4;
                }
                else {
                  unsigned int v58 = v61 + 4;
                }
                break;
              default:
                break;
            }
          }
          switch(v58)
          {
            case 1u:
              *(unsigned char *)unint64_t v55 = *v56;
              char v66 = 1;
              break;
            case 2u:
              *(void *)unint64_t v55 = *(void *)v56;
              *(void *)(v55 + 8) = *(void *)(((v182 + v53) & v12) + 8);
              unint64_t v67 = (v178 + v55) & v191;
              unint64_t v68 = (unint64_t)&v56[v178] & v191;
              unint64_t v164 = v55;
              uint64_t v171 = v5;
              uint64_t v69 = v19;
              uint64_t v70 = a2;
              uint64_t v71 = *(void (**)(unint64_t, unint64_t, uint64_t))(v179 + 16);
              swift_bridgeObjectRetain();
              v71(v67, v68, v180);
              a2 = v70;
              uint64_t v19 = v69;
              uint64_t v5 = v171;
              unint64_t v72 = (v172 + v68) & v168;
              v54((v172 + v67) & v168, v72, v171);
              unint64_t v55 = v164;
              unint64_t v57 = v185;
              *(void *)((v184 + ((v172 + v67) & v168)) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v184 + v72) & 0xFFFFFFFFFFFFFFF8);
              *(unsigned char *)(v164 + v177) = v56[v177];
              char v66 = 2;
              break;
            case 3u:
              *(void *)unint64_t v55 = *(void *)v56;
              *(void *)(v55 + 8) = *(void *)(((v182 + v53) & v12) + 8);
              unint64_t v73 = (v178 + v55) & v191;
              unint64_t v74 = (unint64_t)&v56[v178] & v191;
              unint64_t v165 = v55;
              uint64_t v166 = v54;
              unsigned int v75 = *(void (**)(unint64_t, unint64_t, uint64_t))(v179 + 16);
              swift_bridgeObjectRetain();
              v75(v73, v74, v180);
              unint64_t v76 = (v172 + v74) & v168;
              v166((v172 + v73) & v168, v76, v5);
              unint64_t v55 = v165;
              unint64_t v57 = v185;
              *(void *)((v184 + ((v172 + v73) & v168)) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v184 + v76) & 0xFFFFFFFFFFFFFFF8);
              char v66 = 3;
              break;
            default:
              char v66 = 0;
              *(_WORD *)unint64_t v55 = *(_WORD *)v56;
              break;
          }
          size_t v64 = v174;
          uint64_t v65 = v175;
          unint64_t v63 = v198;
          uint64_t v62 = v5;
          *(unsigned char *)(v55 + v57) = v66;
          *((unsigned char *)v38 + v19) = 1;
          uint64_t v51 = v168;
LABEL_57:
          int v77 = (void *)(((unint64_t)v38 + v65 + v64) & v192);
          int v78 = (void *)((unint64_t)&v63[v65 + v64] & v192);
          unsigned int v79 = *((unsigned __int8 *)v78 + v19);
          if (v79 > 2)
          {
            memcpy(v77, (const void *)((unint64_t)&v63[v65 + v64] & v192), v64);
          }
          else if (v79 == 2)
          {
            (*(void (**)(void *, unint64_t, uint64_t))(v6 + 16))(v77, (unint64_t)&v63[v65 + v64] & v192, v62);
            *(_OWORD *)(((unint64_t)v77 + v184) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v78
                                                                                            + v184) & 0xFFFFFFFFFFFFFFF8);
            *((unsigned char *)v77 + v19) = 2;
          }
          else
          {
            if (v79 == 1)
            {
              uint64_t v199 = v19;
              void *v77 = *v78;
              v77[1] = *(void *)(((unint64_t)&v63[v65 + v64] & v192) + 8);
              unint64_t v80 = ((unint64_t)v77 + v183) & v51;
              uint64_t v169 = v51;
              unint64_t v81 = ((unint64_t)v78 + v183) & v51;
              uint64_t v82 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
              swift_bridgeObjectRetain();
              v82(v80, v81, v62);
              unint64_t v83 = v185;
              unsigned int v84 = (unsigned char *)((v182 + v80) & v192);
              unsigned int v85 = (unsigned __int8 *)((v182 + v81) & v192);
              unsigned int v86 = v85[v185];
              unsigned int v87 = v86 - 4;
              if (v86 >= 4)
              {
                if (v185 <= 3) {
                  uint64_t v88 = v185;
                }
                else {
                  uint64_t v88 = 4;
                }
                switch(v88)
                {
                  case 1:
                    int v89 = *v85;
                    goto LABEL_119;
                  case 2:
                    int v89 = *(unsigned __int16 *)v85;
                    goto LABEL_119;
                  case 3:
                    int v89 = *(unsigned __int16 *)v85 | (*(unsigned __int8 *)(((v182 + v81) & v192) + 2) << 16);
                    goto LABEL_119;
                  case 4:
                    int v89 = *(_DWORD *)v85;
LABEL_119:
                    if (v185 < 4) {
                      unsigned int v86 = (v89 | (v87 << (8 * v185))) + 4;
                    }
                    else {
                      unsigned int v86 = v89 + 4;
                    }
                    break;
                  default:
                    break;
                }
              }
              switch(v86)
              {
                case 1u:
                  *unsigned int v84 = *v85;
                  char v152 = 1;
                  break;
                case 2u:
                  *(void *)unsigned int v84 = *(void *)v85;
                  *(void *)(((v182 + v80) & v192) + 8) = *(void *)(((v182 + v81) & v192) + 8);
                  unint64_t v153 = (unint64_t)&v84[v178] & v191;
                  unint64_t v154 = (unint64_t)&v85[v178] & v191;
                  uint64_t v193 = a2;
                  unint64_t v155 = *(void (**)(unint64_t, unint64_t, uint64_t))(v179 + 16);
                  swift_bridgeObjectRetain();
                  v155(v153, v154, v180);
                  unint64_t v156 = (v172 + v154) & v169;
                  v82((v172 + v153) & v169, v156, v62);
                  unint64_t v83 = v185;
                  a2 = v193;
                  *(void *)((v184 + ((v172 + v153) & v169)) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v184 + v156) & 0xFFFFFFFFFFFFFFF8);
                  v84[v177] = v85[v177];
                  char v152 = 2;
                  break;
                case 3u:
                  *(void *)unsigned int v84 = *(void *)v85;
                  *(void *)(((v182 + v80) & v192) + 8) = *(void *)(((v182 + v81) & v192) + 8);
                  uint64_t v157 = a2;
                  unint64_t v158 = (unint64_t)&v84[v178] & v191;
                  unint64_t v159 = (unint64_t)&v85[v178] & v191;
                  unint64_t v160 = *(void (**)(unint64_t, unint64_t, uint64_t))(v179 + 16);
                  swift_bridgeObjectRetain();
                  v160(v158, v159, v180);
                  uint64_t v161 = v172 + v158;
                  a2 = v157;
                  uint64_t v162 = v161 & v169;
                  unint64_t v163 = (v172 + v159) & v169;
                  v82(v161 & v169, v163, v62);
                  unint64_t v83 = v185;
                  *(void *)((v184 + v162) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v184 + v163) & 0xFFFFFFFFFFFFFFF8);
                  char v152 = 3;
                  break;
                default:
                  char v152 = 0;
                  *(_WORD *)unsigned int v84 = *(_WORD *)v85;
                  break;
              }
              uint64_t v90 = v189;
              uint64_t v91 = v181;
              v84[v83] = v152;
              uint64_t v19 = v199;
              *((unsigned char *)v77 + v199) = 1;
              goto LABEL_70;
            }
            void *v77 = *v78;
            v77[1] = *(void *)(((unint64_t)&v63[v65 + v64] & v192) + 8);
            *((unsigned char *)v77 + v19) = 0;
            swift_bridgeObjectRetain();
          }
          uint64_t v90 = v189;
          uint64_t v91 = v181;
LABEL_70:
          uint64_t v92 = v19 + 8;
          uint64_t v93 = (void *)(((unint64_t)v77 + v19 + 8) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v94 = (void *)(((unint64_t)v78 + v19 + 8) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v95 = v94[1];
          *uint64_t v93 = *v94;
          v93[1] = v95;
          uint64_t v96 = v91 + 16;
          uint64_t v97 = (void *)(((unint64_t)v93 + v91 + 16) & v90);
          uint64_t v98 = v90;
          uint64_t v99 = (const void *)(((unint64_t)v94 + v91 + 16) & v90);
          swift_retain();
          uint64_t v100 = a2;
          if (__swift_getEnumTagSinglePayload((uint64_t)v99, 1, v176))
          {
            size_t v101 = v194;
            if (v187) {
              size_t v102 = v194;
            }
            else {
              size_t v102 = v194 + 1;
            }
            memcpy(v97, v99, v102);
            int v103 = v187;
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v173 + 16))(v97, v99, v176);
            __swift_storeEnumTagSinglePayload((uint64_t)v97, 0, 1, v176);
            int v103 = v187;
            size_t v101 = v194;
            if (v187) {
              size_t v102 = v194;
            }
            else {
              size_t v102 = v194 + 1;
            }
          }
          uint64_t v47 = a3;
          *(void *)(((unint64_t)v97 + v102 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v99
                                                                                              + v102
                                                                                              + 7) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v104 = 7;
          if (!v103) {
            uint64_t v104 = 8;
          }
          size_t v49 = v188
              + ((v104 + v101 + ((v96 + ((v92 + v186) & 0xFFFFFFFFFFFFFFF8)) & v98)) & 0xFFFFFFFFFFFFFFF8)
              + 8;
          unint64_t v50 = v196;
          unsigned int v45 = v100;
          goto LABEL_81;
        }
        uint64_t v62 = v5;
        *unsigned int v38 = *(void *)v41;
        v38[1] = *((void *)v41 + 1);
        *((unsigned char *)v38 + v19) = 0;
        swift_bridgeObjectRetain();
        unint64_t v63 = v198;
      }
      size_t v64 = v174;
      uint64_t v65 = v175;
      goto LABEL_57;
    }
    unsigned int v45 = v32;
    size_t v46 = v194;
    uint64_t v47 = a3;
    uint64_t v26 = v188;
    uint64_t v28 = v189;
    LODWORD(v22) = v187;
    uint64_t v27 = v186;
  }
  else
  {
    unint64_t v29 = a2[1];
    if (v29 >= 0xFFFFFFFF)
    {
      size_t v174 = v19 + 1;
      uint64_t v175 = v11;
      uint64_t v172 = v13;
      uint64_t v173 = *(void *)(v20 - 8);
      uint64_t v181 = *(unsigned __int8 *)(v21 + 80);
      uint64_t v176 = v20;
      uint64_t v186 = (v19 + 1 + v11) & ~v11;
      uint64_t v188 = ((v11 | v23) + 32) & ~(v11 | v23);
      uint64_t v189 = ~v23;
      int v187 = *(_DWORD *)(v21 + 84);
      uint64_t v30 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v31 = ((unint64_t)v30 + v24 + 16) & v25;
      goto LABEL_16;
    }
    uint64_t v44 = v19;
    unsigned int v45 = a2;
    uint64_t v33 = v44 + 8;
    uint64_t v34 = v23 + 16;
    size_t v46 = *(void *)(*(void *)(v20 - 8) + 64);
    uint64_t v47 = a3;
  }
  uint64_t v48 = 7;
  if (!v22) {
    uint64_t v48 = 8;
  }
  size_t v49 = v26 + ((v48 + v46 + ((v34 + ((v33 + v27) & 0xFFFFFFFFFFFFFFF8)) & v28)) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v50 = v196;
  memcpy(v196, v45, v49);
LABEL_81:
  uint64_t v105 = *(void *)(*(void *)(v47 + 16) - 8);
  uint64_t v106 = v105 + 16;
  uint64_t v107 = *(unsigned __int8 *)(v105 + 80);
  size_t v108 = ((unint64_t)v50 + v49 + v107) & ~v107;
  unint64_t v109 = ((unint64_t)v45 + v49 + v107) & ~v107;
  (*(void (**)(size_t, unint64_t))(v105 + 16))(v108, v109);
  uint64_t v110 = *(void *)(v106 + 48);
  uint64_t v111 = sub_22EE7CFC0();
  uint64_t v112 = *(void *)(v111 - 8);
  uint64_t v113 = *(_DWORD *)(v112 + 80) & 0xF8 | 7;
  uint64_t v114 = (void *)((v110 + v113 + v108) & ~v113);
  uint64_t v115 = (unsigned __int8 *)((v110 + v113 + v109) & ~v113);
  if (*(void *)(v112 + 64) <= 8uLL) {
    uint64_t v116 = 8;
  }
  else {
    uint64_t v116 = *(void *)(v112 + 64);
  }
  unsigned int v117 = v115[v116];
  unsigned int v118 = v117 - 2;
  if (v117 >= 2)
  {
    if (v116 <= 3) {
      uint64_t v119 = v116;
    }
    else {
      uint64_t v119 = 4;
    }
    switch(v119)
    {
      case 1:
        int v120 = *v115;
        goto LABEL_93;
      case 2:
        int v120 = *(unsigned __int16 *)v115;
        goto LABEL_93;
      case 3:
        int v120 = *(unsigned __int16 *)v115 | (v115[2] << 16);
        goto LABEL_93;
      case 4:
        int v120 = *(_DWORD *)v115;
LABEL_93:
        int v121 = (v120 | (v118 << (8 * v116))) + 2;
        unsigned int v117 = v120 + 2;
        if (v116 < 4) {
          unsigned int v117 = v121;
        }
        break;
      default:
        break;
    }
  }
  if (v117 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v112 + 16))(v114, v115, v111);
    char v122 = 1;
  }
  else
  {
    *uint64_t v114 = *(void *)v115;
    swift_retain();
    char v122 = 0;
  }
  *((unsigned char *)v114 + v116) = v122;
  uint64_t v123 = v116 + 1;
  uint64_t v124 = sub_22EE7CE90();
  uint64_t v125 = *(void *)(v124 - 8);
  uint64_t v126 = *(_DWORD *)(v125 + 80) & 0xF8 | 7;
  uint64_t v127 = (void *)(((unint64_t)v114 + v123 + v126) & ~v126);
  unsigned int v128 = (unsigned __int8 *)((unint64_t)&v115[v123 + v126] & ~v126);
  if (*(void *)(v125 + 64) <= 8uLL) {
    uint64_t v129 = 8;
  }
  else {
    uint64_t v129 = *(void *)(v125 + 64);
  }
  unsigned int v130 = v128[v129];
  unsigned int v131 = v130 - 2;
  if (v130 >= 2)
  {
    if (v129 <= 3) {
      uint64_t v132 = v129;
    }
    else {
      uint64_t v132 = 4;
    }
    switch(v132)
    {
      case 1:
        int v133 = *v128;
        goto LABEL_110;
      case 2:
        int v133 = *(unsigned __int16 *)v128;
        goto LABEL_110;
      case 3:
        int v133 = *(unsigned __int16 *)v128 | (v128[2] << 16);
        goto LABEL_110;
      case 4:
        int v133 = *(_DWORD *)v128;
LABEL_110:
        int v134 = (v133 | (v131 << (8 * v129))) + 2;
        unsigned int v130 = v133 + 2;
        if (v129 < 4) {
          unsigned int v130 = v134;
        }
        break;
      default:
        break;
    }
  }
  if (v130 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v125 + 16))(v127, v128, v124);
    char v135 = 1;
  }
  else
  {
    *uint64_t v127 = *(void *)v128;
    swift_retain();
    char v135 = 0;
  }
  *((unsigned char *)v127 + v129) = v135;
  uint64_t v136 = v129 + 1;
  uint64_t v137 = (char *)v127 + v129 + 1;
  unsigned int v138 = &v128[v136];
  unint64_t v139 = (unint64_t)(v137 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v140 = (unint64_t)&v128[v136 + 7] & 0xFFFFFFFFFFFFFFF8;
  uint64_t v141 = *(void *)v140;
  char v142 = *(unsigned char *)(v140 + 8);
  sub_22EADDF00(*(void *)v140, v142);
  *(void *)unint64_t v139 = v141;
  *(unsigned char *)(v139 + 8) = v142;
  unint64_t v143 = (unint64_t)(v137 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v144 = (unint64_t)(v138 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v145 = *(void *)v144;
  char v146 = *(unsigned char *)(v144 + 8);
  sub_22EADDF00(*(void *)v144, v146);
  *(void *)unint64_t v143 = v145;
  *(unsigned char *)(v143 + 8) = v146;
  unint64_t v147 = (unint64_t)(v137 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v148 = (unint64_t)(v138 + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v149 = *(void *)v148;
  char v150 = *(unsigned char *)(v148 + 8);
  sub_22EADDF00(*(void *)v148, v150);
  *(void *)unint64_t v147 = v149;
  *(unsigned char *)(v147 + 8) = v150;
  return v50;
}

void *sub_22EE40620(void *a1, void *a2, uint64_t a3)
{
  uint64_t v352 = sub_22EE7F6E0();
  uint64_t v346 = *(void *)(v352 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v346 + 80);
  uint64_t v338 = ~v5;
  uint64_t v327 = v5 + 16;
  uint64_t v6 = (v5 + 16) & ~v5;
  uint64_t v7 = *(void *)(v346 + 64);
  uint64_t v322 = sub_22EE7F5D0();
  uint64_t v323 = *(void *)(v322 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v323 + 80);
  uint64_t v9 = v5 | v8 | 7;
  uint64_t v10 = ~v9;
  uint64_t v328 = v9 + v7;
  uint64_t v321 = ~v8;
  uint64_t v320 = v8 + 16;
  uint64_t v324 = *(void *)(v323 + 64) + v5;
  uint64_t v11 = v7 + 7;
  unint64_t v12 = (v7 + 7 + ((v324 + ((v8 + 16) & ~v8)) & ~v5)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = v12 + 8;
  unint64_t v14 = v12 + 9;
  if (v14 <= v13) {
    unint64_t v14 = v13;
  }
  if (v14 <= 2) {
    unint64_t v14 = 2;
  }
  unint64_t v339 = v14;
  unint64_t v15 = v14 + ((v9 + v7 + v6) & ~v9);
  uint64_t v326 = v7 + 7;
  if (v15 + 1 > (v11 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v16 = v15 + 1;
  }
  else {
    unint64_t v16 = (v11 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v16 <= 0x10) {
    uint64_t v17 = 16;
  }
  else {
    uint64_t v17 = v16;
  }
  uint64_t v18 = sub_22EE7C220();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(unsigned int *)(v19 + 84);
  uint64_t v21 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v22 = v9 | v21;
  uint64_t v23 = ~(v9 | v21);
  uint64_t v24 = ((v9 | v21) + 32) & v23;
  uint64_t v25 = v17 + 1;
  uint64_t v351 = (v17 + 1 + v9) & ~v9;
  uint64_t v26 = ~v21;
  v348 = a1;
  uint64_t v349 = v24;
  uint64_t v345 = a3;
  uint64_t v350 = ~v21;
  uint64_t v342 = v18;
  uint64_t v343 = v9;
  uint64_t v344 = ~v9;
  if (v20 >= 0x80000001)
  {
    uint64_t v30 = v18;
    unint64_t v316 = v13;
    uint64_t v325 = *(void *)(v18 - 8);
    size_t v340 = *(void *)(v325 + 64);
    uint64_t v329 = v17;
    uint64_t v333 = *(unsigned __int8 *)(v19 + 80);
    uint64_t v31 = v17 + 8;
    uint64_t v32 = v21 + 16;
    unint64_t v33 = (v21
         + 16
         + ((v31 + (((((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v22 + 16) & v23) + v9 + v25) & v10)) & 0xFFFFFFFFFFFFFFF8)) & v26;
    uint64_t v34 = ~(v9 | v21);
    size_t v35 = v25;
    unsigned int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v33, v20, v30);
    uint64_t v36 = v20;
    uint64_t v28 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    size_t __n = v35;
    uint64_t v336 = v34;
    uint64_t v318 = ((unint64_t)v28 + v22 + 16) & v34;
    int v347 = v36;
    unsigned int v37 = __swift_getEnumTagSinglePayload((v32 + ((v31 + ((v318 + v9 + v35) & v10)) & 0xFFFFFFFFFFFFFFF8)) & v26, v36, v30);
    if (EnumTagSinglePayload < 2)
    {
      a1 = v348;
      uint64_t v17 = v329;
      unint64_t v29 = (unsigned __int8 *)v318;
      if (v37 < 2)
      {
LABEL_17:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        unsigned int v38 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
        *unsigned int v38 = *v28;
        v38[1] = v28[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        size_t v39 = __n;
        uint64_t v40 = (unsigned __int8 *)(((unint64_t)v38 + v22 + 16) & v336);
        unint64_t v41 = v339;
        if (v40 == v29) {
          goto LABEL_193;
        }
        unsigned int v42 = v40[v17];
        unsigned int v43 = v42 - 3;
        if (v42 >= 3)
        {
          if (v17 <= 3) {
            uint64_t v44 = v17;
          }
          else {
            uint64_t v44 = 4;
          }
          switch(v44)
          {
            case 1:
              int v45 = *v40;
              goto LABEL_84;
            case 2:
              int v45 = *(unsigned __int16 *)v40;
              goto LABEL_84;
            case 3:
              int v45 = *(unsigned __int16 *)v40 | (*(unsigned __int8 *)((((unint64_t)v38 + v22 + 16) & v336) + 2) << 16);
              goto LABEL_84;
            case 4:
              int v45 = *(_DWORD *)v40;
LABEL_84:
              if (v17 < 4) {
                unsigned int v42 = (v45 | (v43 << (8 * v17))) + 3;
              }
              else {
                unsigned int v42 = v45 + 3;
              }
              break;
            default:
              break;
          }
        }
        size_t v98 = __n;
        uint64_t v99 = v17;
        if (v42 == 2)
        {
          (*(void (**)(unint64_t, uint64_t, size_t))(v346 + 8))(((unint64_t)v38 + v22 + 16) & v336, v352, __n);
        }
        else if (v42 == 1)
        {
          swift_bridgeObjectRelease();
          uint64_t v100 = *(void (**)(unint64_t, uint64_t))(v346 + 8);
          v100((unint64_t)&v40[v327] & v338, v352);
          size_t v101 = (unsigned __int8 *)((v328 + ((unint64_t)&v40[v327] & v338)) & v344);
          unsigned int v102 = v101[v339];
          unsigned int v103 = v102 - 4;
          if (v102 >= 4)
          {
            if (v339 <= 3) {
              uint64_t v104 = v339;
            }
            else {
              uint64_t v104 = 4;
            }
            switch(v104)
            {
              case 1:
                int v105 = *v101;
                goto LABEL_153;
              case 2:
                int v105 = *(unsigned __int16 *)v101;
                goto LABEL_153;
              case 3:
                int v105 = *(unsigned __int16 *)((v328 + ((unint64_t)&v40[v327] & v338)) & v344) | (*(unsigned __int8 *)(((v328 + ((unint64_t)&v40[v327] & v338)) & v344) + 2) << 16);
                goto LABEL_153;
              case 4:
                int v105 = *(_DWORD *)v101;
LABEL_153:
                if (v339 < 4) {
                  unsigned int v102 = (v105 | (v103 << (8 * v339))) + 4;
                }
                else {
                  unsigned int v102 = v105 + 4;
                }
                break;
              default:
                break;
            }
          }
          if (v102 >= 2)
          {
            swift_bridgeObjectRelease();
            unint64_t v145 = (unint64_t)&v101[v320] & v321;
            (*(void (**)(unint64_t, uint64_t))(v323 + 8))(v145, v322);
            v100((v324 + v145) & v338, v352);
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        uint64_t v17 = v99;
        unsigned int v146 = v29[v99];
        unsigned int v147 = v146 - 3;
        if (v146 >= 3)
        {
          if (v99 <= 3) {
            uint64_t v148 = v99;
          }
          else {
            uint64_t v148 = 4;
          }
          switch(v148)
          {
            case 1:
              int v149 = *v29;
              goto LABEL_167;
            case 2:
              int v149 = *(unsigned __int16 *)v29;
              goto LABEL_167;
            case 3:
              int v149 = *(unsigned __int16 *)v29 | (v29[2] << 16);
              goto LABEL_167;
            case 4:
              int v149 = *(_DWORD *)v29;
LABEL_167:
              if (v99 < 4) {
                unsigned int v146 = (v149 | (v147 << (8 * v99))) + 3;
              }
              else {
                unsigned int v146 = v149 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v146 == 2)
        {
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v346 + 16))(v40, v29, v352);
          *(_OWORD *)((unint64_t)&v40[v326] & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v29[v326] & 0xFFFFFFFFFFFFFFF8);
          v40[v99] = 2;
        }
        else
        {
          if (v146 == 1)
          {
            uint64_t v331 = v99;
            *(void *)uint64_t v40 = *(void *)v29;
            *(void *)((((unint64_t)v38 + v22 + 16) & v336) + 8) = *((void *)v29 + 1);
            unint64_t v150 = (unint64_t)&v40[v327] & v338;
            unint64_t v151 = (unint64_t)&v29[v327] & v338;
            char v152 = *(void (**)(unint64_t, unint64_t, uint64_t))(v346 + 16);
            swift_bridgeObjectRetain();
            v337 = v152;
            v152(v150, v151, v352);
            unint64_t v153 = (unsigned char *)((v328 + v150) & v344);
            uint64_t v154 = v328 + v151;
            unint64_t v41 = v339;
            unint64_t v155 = (unsigned __int8 *)(v154 & v344);
            unsigned int v156 = *(unsigned __int8 *)((v154 & v344) + v339);
            unsigned int v157 = v156 - 4;
            if (v156 >= 4)
            {
              if (v339 <= 3) {
                uint64_t v158 = v339;
              }
              else {
                uint64_t v158 = 4;
              }
              switch(v158)
              {
                case 1:
                  int v159 = *v155;
                  goto LABEL_184;
                case 2:
                  int v159 = *(unsigned __int16 *)v155;
                  goto LABEL_184;
                case 3:
                  int v159 = *(unsigned __int16 *)v155 | (v155[2] << 16);
                  goto LABEL_184;
                case 4:
                  int v159 = *(_DWORD *)v155;
LABEL_184:
                  if (v339 < 4) {
                    unsigned int v156 = (v159 | (v157 << (8 * v339))) + 4;
                  }
                  else {
                    unsigned int v156 = v159 + 4;
                  }
                  break;
                default:
                  break;
              }
            }
            switch(v156)
            {
              case 1u:
                *unint64_t v153 = *v155;
                char v160 = 1;
                break;
              case 2u:
                *(void *)unint64_t v153 = *(void *)v155;
                *(void *)(((v328 + v150) & v344) + 8) = *((void *)v155 + 1);
                unint64_t v161 = (unint64_t)&v153[v320] & v321;
                unint64_t v162 = (unint64_t)&v155[v320] & v321;
                __na = *(void (**)(unint64_t, unint64_t, uint64_t))(v323 + 16);
                swift_bridgeObjectRetain();
                __na(v161, v162, v322);
                unint64_t v163 = (v324 + v162) & v338;
                v337((v324 + v161) & v338, v163, v352);
                uint64_t v164 = v326 + v163;
                unint64_t v41 = v339;
                *(void *)((v326 + ((v324 + v161) & v338)) & 0xFFFFFFFFFFFFFFF8) = *(void *)(v164 & 0xFFFFFFFFFFFFFFF8);
                v153[v316] = v155[v316];
                char v160 = 2;
                break;
              case 3u:
                *(void *)unint64_t v153 = *(void *)v155;
                *(void *)(((v328 + v150) & v344) + 8) = *((void *)v155 + 1);
                unint64_t v165 = (unint64_t)&v153[v320] & v321;
                unint64_t v166 = (unint64_t)&v155[v320] & v321;
                uint64_t v167 = *(void (**)(unint64_t, unint64_t, uint64_t))(v323 + 16);
                swift_bridgeObjectRetain();
                v167(v165, v166, v322);
                unint64_t v168 = (v324 + v165) & v338;
                unint64_t v169 = (v324 + v166) & v338;
                v337(v168, v169, v352);
                uint64_t v170 = v326 + v169;
                unint64_t v41 = v339;
                *(void *)((v326 + v168) & 0xFFFFFFFFFFFFFFF8) = *(void *)(v170 & 0xFFFFFFFFFFFFFFF8);
                char v160 = 3;
                break;
              default:
                char v160 = 0;
                *(_WORD *)unint64_t v153 = *(_WORD *)v155;
                break;
            }
            size_t v39 = v98;
            v153[v41] = v160;
            uint64_t v17 = v331;
            v40[v331] = 1;
LABEL_193:
            uint64_t v171 = (void *)((unint64_t)&v40[v343 + v39] & v344);
            uint64_t v172 = (unsigned __int8 *)((unint64_t)&v29[v343 + v39] & v344);
            unsigned int v173 = *((unsigned __int8 *)v171 + v17);
            unsigned int v174 = v172[v17];
            if (v173 <= 2)
            {
              if (v174 > 2)
              {
                if (v173 == 2)
                {
                  uint64_t v193 = v17;
                  size_t v201 = v39;
                  (*(void (**)(void *, uint64_t))(v346 + 8))(v171, v352);
                  size_t v199 = v201;
                  size_t v53 = v340;
                }
                else
                {
                  size_t v53 = v340;
                  if (v173 == 1)
                  {
                    size_t v192 = v39;
                    uint64_t v193 = v17;
                    swift_bridgeObjectRelease();
                    size_t v194 = *(void (**)(unint64_t, uint64_t))(v346 + 8);
                    v194(((unint64_t)v171 + v327) & v338, v352);
                    uint64_t v195 = (unsigned __int8 *)((v328 + (((unint64_t)v171 + v327) & v338)) & v344);
                    unsigned int v196 = v195[v41];
                    unsigned int v197 = v196 - 4;
                    if (v196 < 4)
                    {
                      size_t v199 = v192;
                    }
                    else
                    {
                      if (v41 <= 3) {
                        uint64_t v198 = v41;
                      }
                      else {
                        uint64_t v198 = 4;
                      }
                      size_t v199 = v192;
                      switch(v198)
                      {
                        case 1:
                          int v200 = *v195;
                          goto LABEL_264;
                        case 2:
                          int v200 = *(unsigned __int16 *)v195;
                          goto LABEL_264;
                        case 3:
                          int v200 = *(unsigned __int16 *)((v328 + (((unint64_t)v171 + v327) & v338)) & v344) | (*(unsigned __int8 *)(((v328 + (((unint64_t)v171 + v327) & v338)) & v344) + 2) << 16);
                          goto LABEL_264;
                        case 4:
                          int v200 = *(_DWORD *)v195;
LABEL_264:
                          if (v41 < 4) {
                            unsigned int v196 = (v200 | (v197 << (8 * v41))) + 4;
                          }
                          else {
                            unsigned int v196 = v200 + 4;
                          }
                          break;
                        default:
                          break;
                      }
                    }
                    if (v196 >= 2)
                    {
                      swift_bridgeObjectRelease();
                      (*(void (**)(unint64_t, uint64_t))(v323 + 8))((unint64_t)&v195[v320] & v321, v322);
                      v194((v324 + ((unint64_t)&v195[v320] & v321)) & v338, v352);
                      size_t v199 = v192;
                    }
                  }
                  else
                  {
                    size_t v202 = v39;
                    uint64_t v193 = v17;
                    swift_bridgeObjectRelease();
                    size_t v199 = v202;
                  }
                }
                memcpy(v171, v172, v199);
                uint64_t v17 = v193;
LABEL_313:
                uint64_t v73 = v17 + 8;
                v240 = (void *)(((unint64_t)v171 + v17 + 8) & 0xFFFFFFFFFFFFFFF8);
                v241 = (void *)((unint64_t)&v172[v17 + 8] & 0xFFFFFFFFFFFFFFF8);
                uint64_t v242 = v241[1];
                void *v240 = *v241;
                v240[1] = v242;
                swift_retain();
                swift_release();
                uint64_t v74 = v333 + 16;
                unint64_t v243 = (unint64_t)v240 + v333 + 16;
                uint64_t v64 = v350;
                v244 = (void *)(v243 & v350);
                v245 = (const void *)(((unint64_t)v241 + v333 + 16) & v350);
                int v246 = __swift_getEnumTagSinglePayload(v243 & v350, 1, v342);
                int v247 = __swift_getEnumTagSinglePayload((uint64_t)v245, 1, v342);
                if (v246)
                {
                  if (!v247)
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v325 + 16))(v244, v245, v342);
                    __swift_storeEnumTagSinglePayload((uint64_t)v244, 0, 1, v342);
LABEL_323:
                    a1 = v348;
                    uint64_t v76 = v349;
                    unint64_t v72 = a2;
                    LODWORD(v20) = v347;
LABEL_324:
                    uint64_t v65 = v345;
                    if (v20) {
                      size_t v249 = v53;
                    }
                    else {
                      size_t v249 = v53 + 1;
                    }
                    *(void *)(((unint64_t)v244 + v249 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v245 + v249 + 7) & 0xFFFFFFFFFFFFFFF8);
LABEL_328:
                    uint64_t v75 = v351;
                    goto LABEL_329;
                  }
                }
                else
                {
                  if (!v247)
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v325 + 24))(v244, v245, v342);
                    goto LABEL_323;
                  }
                  (*(void (**)(void *, uint64_t))(v325 + 8))(v244, v342);
                }
                LODWORD(v20) = v347;
                if (v347) {
                  size_t v248 = v53;
                }
                else {
                  size_t v248 = v53 + 1;
                }
                memcpy(v244, v245, v248);
                a1 = v348;
                uint64_t v76 = v349;
                unint64_t v72 = a2;
                goto LABEL_324;
              }
              size_t v53 = v340;
              if (v171 == (void *)v172) {
                goto LABEL_313;
              }
              uint64_t v175 = v17;
              if (v173 == 2)
              {
                (*(void (**)(void *, uint64_t))(v346 + 8))(v171, v352);
              }
              else if (v173 == 1)
              {
                swift_bridgeObjectRelease();
                uint64_t v176 = *(void (**)(unint64_t, uint64_t))(v346 + 8);
                v176(((unint64_t)v171 + v327) & v338, v352);
                unint64_t v177 = (unsigned __int8 *)((v328 + (((unint64_t)v171 + v327) & v338)) & v344);
                unsigned int v178 = v177[v41];
                unsigned int v179 = v178 - 4;
                if (v178 >= 4)
                {
                  if (v41 <= 3) {
                    uint64_t v180 = v41;
                  }
                  else {
                    uint64_t v180 = 4;
                  }
                  switch(v180)
                  {
                    case 1:
                      int v181 = *v177;
                      goto LABEL_273;
                    case 2:
                      int v181 = *(unsigned __int16 *)v177;
                      goto LABEL_273;
                    case 3:
                      int v181 = *(unsigned __int16 *)((v328 + (((unint64_t)v171 + v327) & v338)) & v344) | (*(unsigned __int8 *)(((v328 + (((unint64_t)v171 + v327) & v338)) & v344) + 2) << 16);
                      goto LABEL_273;
                    case 4:
                      int v181 = *(_DWORD *)v177;
LABEL_273:
                      if (v41 < 4) {
                        unsigned int v178 = (v181 | (v179 << (8 * v41))) + 4;
                      }
                      else {
                        unsigned int v178 = v181 + 4;
                      }
                      break;
                    default:
                      break;
                  }
                }
                if (v178 >= 2)
                {
                  swift_bridgeObjectRelease();
                  unint64_t v217 = (unint64_t)&v177[v320] & v321;
                  (*(void (**)(unint64_t, uint64_t))(v323 + 8))(v217, v322);
                  v176((v324 + v217) & v338, v352);
                }
              }
              else
              {
                swift_bridgeObjectRelease();
              }
              uint64_t v17 = v175;
              unsigned int v218 = v172[v175];
              unsigned int v219 = v218 - 3;
              if (v218 >= 3)
              {
                if (v175 <= 3) {
                  uint64_t v220 = v175;
                }
                else {
                  uint64_t v220 = 4;
                }
                switch(v220)
                {
                  case 1:
                    int v221 = *v172;
                    goto LABEL_287;
                  case 2:
                    int v221 = *(unsigned __int16 *)v172;
                    goto LABEL_287;
                  case 3:
                    int v221 = *(unsigned __int16 *)v172 | (v172[2] << 16);
                    goto LABEL_287;
                  case 4:
                    int v221 = *(_DWORD *)v172;
LABEL_287:
                    if (v175 < 4) {
                      unsigned int v218 = (v221 | (v219 << (8 * v175))) + 3;
                    }
                    else {
                      unsigned int v218 = v221 + 3;
                    }
                    break;
                  default:
                    break;
                }
              }
              if (v218 != 2)
              {
                if (v218 == 1)
                {
                  uint64_t v332 = v175;
                  *uint64_t v171 = *(void *)v172;
                  v171[1] = *((void *)v172 + 1);
                  unint64_t v222 = ((unint64_t)v171 + v327) & v338;
                  unint64_t v223 = (unint64_t)&v172[v327] & v338;
                  uint64_t v184 = *(void (**)(unint64_t, unint64_t, uint64_t))(v346 + 16);
                  swift_bridgeObjectRetain();
                  v184(v222, v223, v352);
                  unint64_t v185 = (v328 + v222) & v344;
                  unint64_t v186 = v339;
                  int v187 = (unsigned __int8 *)((v328 + v223) & v344);
                  unsigned int v224 = v187[v339];
                  unsigned int v225 = v224 - 4;
                  if (v224 >= 4)
                  {
                    if (v339 <= 3) {
                      uint64_t v226 = v339;
                    }
                    else {
                      uint64_t v226 = 4;
                    }
                    switch(v226)
                    {
                      case 1:
                        int v227 = *v187;
                        goto LABEL_303;
                      case 2:
                        int v227 = *(unsigned __int16 *)v187;
                        goto LABEL_303;
                      case 3:
                        int v227 = *(unsigned __int16 *)v187 | (*(unsigned __int8 *)(((v328 + v223) & v344) + 2) << 16);
                        goto LABEL_303;
                      case 4:
                        int v227 = *(_DWORD *)v187;
LABEL_303:
                        if (v339 < 4) {
                          unsigned int v224 = (v227 | (v225 << (8 * v339))) + 4;
                        }
                        else {
                          unsigned int v224 = v227 + 4;
                        }
                        break;
                      default:
                        break;
                    }
                  }
                  switch(v224)
                  {
                    case 1u:
                      goto LABEL_308;
                    case 2u:
                      goto LABEL_309;
                    case 3u:
                      goto LABEL_310;
                    default:
                      goto LABEL_307;
                  }
                }
                goto LABEL_298;
              }
              (*(void (**)(void *, unsigned __int8 *, uint64_t))(v346 + 16))(v171, v172, v352);
              *(_OWORD *)(((unint64_t)v171 + v326) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v172[v326] & 0xFFFFFFFFFFFFFFF8);
              char v228 = 2;
LABEL_312:
              *((unsigned char *)v171 + v17) = v228;
              goto LABEL_313;
            }
            if (v174 > 2)
            {
              memcpy(v171, v172, v39);
            }
            else
            {
              if (v174 != 2)
              {
                size_t v53 = v340;
                if (v174 != 1)
                {
LABEL_298:
                  *uint64_t v171 = *(void *)v172;
                  v171[1] = *((void *)v172 + 1);
                  *((unsigned char *)v171 + v17) = 0;
                  swift_bridgeObjectRetain();
                  goto LABEL_313;
                }
                uint64_t v332 = v17;
                *uint64_t v171 = *(void *)v172;
                v171[1] = *((void *)v172 + 1);
                unint64_t v182 = ((unint64_t)v171 + v327) & v338;
                unint64_t v183 = (unint64_t)&v172[v327] & v338;
                uint64_t v184 = *(void (**)(unint64_t, unint64_t, uint64_t))(v346 + 16);
                swift_bridgeObjectRetain();
                v184(v182, v183, v352);
                unint64_t v185 = (v328 + v182) & v344;
                unint64_t v186 = v339;
                int v187 = (unsigned __int8 *)((v328 + v183) & v344);
                unsigned int v188 = v187[v339];
                unsigned int v189 = v188 - 4;
                if (v188 >= 4)
                {
                  if (v339 <= 3) {
                    uint64_t v190 = v339;
                  }
                  else {
                    uint64_t v190 = 4;
                  }
                  switch(v190)
                  {
                    case 1:
                      int v191 = *v187;
                      goto LABEL_257;
                    case 2:
                      int v191 = *(unsigned __int16 *)v187;
                      goto LABEL_257;
                    case 3:
                      int v191 = *(unsigned __int16 *)v187 | (*(unsigned __int8 *)(((v328 + v183) & v344) + 2) << 16);
                      goto LABEL_257;
                    case 4:
                      int v191 = *(_DWORD *)v187;
LABEL_257:
                      if (v339 < 4) {
                        unsigned int v188 = (v191 | (v189 << (8 * v339))) + 4;
                      }
                      else {
                        unsigned int v188 = v191 + 4;
                      }
                      break;
                    default:
                      break;
                  }
                }
                switch(v188)
                {
                  case 1u:
LABEL_308:
                    *(unsigned char *)unint64_t v185 = *v187;
                    char v229 = 1;
                    break;
                  case 2u:
LABEL_309:
                    *(void *)unint64_t v185 = *(void *)v187;
                    *(void *)(v185 + 8) = *((void *)v187 + 1);
                    unint64_t v230 = (v320 + v185) & v321;
                    unint64_t v231 = (unint64_t)&v187[v320] & v321;
                    v232 = *(void (**)(unint64_t, unint64_t, uint64_t))(v323 + 16);
                    swift_bridgeObjectRetain();
                    v232(v230, v231, v322);
                    uint64_t v233 = (v324 + v230) & v338;
                    unint64_t v234 = (v324 + v231) & v338;
                    v184(v233, v234, v352);
                    unint64_t v186 = v339;
                    *(void *)((v326 + v233) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v326 + v234) & 0xFFFFFFFFFFFFFFF8);
                    *(unsigned char *)(v185 + v316) = v187[v316];
                    char v229 = 2;
                    break;
                  case 3u:
LABEL_310:
                    *(void *)unint64_t v185 = *(void *)v187;
                    *(void *)(v185 + 8) = *((void *)v187 + 1);
                    unint64_t v235 = (v320 + v185) & v321;
                    unint64_t v236 = (unint64_t)&v187[v320] & v321;
                    v237 = *(void (**)(unint64_t, unint64_t, uint64_t))(v323 + 16);
                    swift_bridgeObjectRetain();
                    v237(v235, v236, v322);
                    uint64_t v238 = (v324 + v235) & v338;
                    unint64_t v239 = (v324 + v236) & v338;
                    v184(v238, v239, v352);
                    unint64_t v186 = v339;
                    *(void *)((v326 + v238) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v326 + v239) & 0xFFFFFFFFFFFFFFF8);
                    char v229 = 3;
                    break;
                  default:
LABEL_307:
                    char v229 = 0;
                    *(_WORD *)unint64_t v185 = *(_WORD *)v187;
                    break;
                }
                *(unsigned char *)(v185 + v186) = v229;
                char v228 = 1;
                uint64_t v17 = v332;
                goto LABEL_312;
              }
              (*(void (**)(void *, unsigned __int8 *, uint64_t))(v346 + 16))(v171, v172, v352);
              *(_OWORD *)(((unint64_t)v171 + v326) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v172[v326] & 0xFFFFFFFFFFFFFFF8);
              *((unsigned char *)v171 + v17) = 2;
            }
            size_t v53 = v340;
            goto LABEL_313;
          }
          *(void *)uint64_t v40 = *(void *)v29;
          *(void *)((((unint64_t)v38 + v22 + 16) & v336) + 8) = *((void *)v29 + 1);
          v40[v99] = 0;
          swift_bridgeObjectRetain();
        }
        size_t v39 = __n;
        goto LABEL_193;
      }
LABEL_33:
      swift_bridgeObjectRelease();
      unint64_t v56 = ((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8;
      swift_bridgeObjectRelease();
      unint64_t v57 = (unsigned __int8 *)((v56 + v22 + 16) & v336);
      unsigned int v58 = v57[v17];
      unsigned int v59 = v58 - 3;
      if (v58 < 3)
      {
        uint64_t v61 = ~v9;
      }
      else
      {
        if (v17 <= 3) {
          uint64_t v60 = v17;
        }
        else {
          uint64_t v60 = 4;
        }
        uint64_t v61 = ~v9;
        switch(v60)
        {
          case 1:
            int v62 = *v57;
            goto LABEL_66;
          case 2:
            int v62 = *(unsigned __int16 *)v57;
            goto LABEL_66;
          case 3:
            int v62 = *(unsigned __int16 *)v57 | (*(unsigned __int8 *)(((v56 + v22 + 16) & v336) + 2) << 16);
            goto LABEL_66;
          case 4:
            int v62 = *(_DWORD *)v57;
LABEL_66:
            if (v17 < 4) {
              unsigned int v58 = (v62 | (v59 << (8 * v17))) + 3;
            }
            else {
              unsigned int v58 = v62 + 3;
            }
            break;
          default:
            break;
        }
      }
      uint64_t v90 = v17;
      if (v58 == 2)
      {
        (*(void (**)(unsigned __int8 *, uint64_t))(v346 + 8))(v57, v352);
      }
      else
      {
        if (v58 == 1)
        {
          swift_bridgeObjectRelease();
          uint64_t v91 = *(void (**)(unint64_t, uint64_t))(v346 + 8);
          v91((unint64_t)&v57[v327] & v338, v352);
          uint64_t v92 = (unsigned __int8 *)((v328 + ((unint64_t)&v57[v327] & v338)) & v61);
          unsigned int v93 = v92[v339];
          unsigned int v94 = v93 - 4;
          if (v93 < 4)
          {
            size_t v96 = __n;
          }
          else
          {
            if (v339 <= 3) {
              uint64_t v95 = v339;
            }
            else {
              uint64_t v95 = 4;
            }
            size_t v96 = __n;
            switch(v95)
            {
              case 1:
                int v97 = *v92;
                goto LABEL_134;
              case 2:
                int v97 = *(unsigned __int16 *)v92;
                goto LABEL_134;
              case 3:
                int v97 = *(unsigned __int16 *)((v328 + ((unint64_t)&v57[v327] & v338)) & v61) | (*(unsigned __int8 *)(((v328 + ((unint64_t)&v57[v327] & v338)) & v61) + 2) << 16);
                goto LABEL_134;
              case 4:
                int v97 = *(_DWORD *)v92;
LABEL_134:
                if (v339 < 4) {
                  unsigned int v93 = (v97 | (v94 << (8 * v339))) + 4;
                }
                else {
                  unsigned int v93 = v97 + 4;
                }
                break;
              default:
                break;
            }
          }
          if (v93 >= 2)
          {
            size_t v135 = v96;
            swift_bridgeObjectRelease();
            unint64_t v136 = (unint64_t)&v92[v320] & v321;
            (*(void (**)(unint64_t, uint64_t))(v323 + 8))(v136, v322);
            v91((v324 + v136) & v338, v352);
            size_t v96 = v135;
          }
          goto LABEL_139;
        }
        swift_bridgeObjectRelease();
      }
      size_t v96 = __n;
LABEL_139:
      unint64_t v137 = (unint64_t)&v57[v9 + v96] & v61;
      unsigned int v138 = *(unsigned __int8 *)(v137 + v90);
      uint64_t v65 = v345;
      if (v138 <= 2)
      {
        if (v138 == 2)
        {
          (*(void (**)(unint64_t, uint64_t))(v346 + 8))(v137, v352);
        }
        else if (v138 == 1)
        {
          swift_bridgeObjectRelease();
          unint64_t v139 = *(void (**)(unint64_t, uint64_t))(v346 + 8);
          v139((v327 + v137) & v338, v352);
          unint64_t v140 = (unsigned __int8 *)((v328 + ((v327 + v137) & v338)) & v61);
          unsigned int v141 = v140[v339];
          unsigned int v142 = v141 - 4;
          if (v141 >= 4)
          {
            if (v339 <= 3) {
              uint64_t v143 = v339;
            }
            else {
              uint64_t v143 = 4;
            }
            switch(v143)
            {
              case 1:
                int v144 = *v140;
                goto LABEL_244;
              case 2:
                int v144 = *(unsigned __int16 *)v140;
                goto LABEL_244;
              case 3:
                int v144 = *(unsigned __int16 *)((v328 + ((v327 + v137) & v338)) & v61) | (*(unsigned __int8 *)(((v328 + ((v327 + v137) & v338)) & v61) + 2) << 16);
                goto LABEL_244;
              case 4:
                int v144 = *(_DWORD *)v140;
LABEL_244:
                if (v339 < 4) {
                  unsigned int v141 = (v144 | (v142 << (8 * v339))) + 4;
                }
                else {
                  unsigned int v141 = v144 + 4;
                }
                break;
              default:
                break;
            }
          }
          if (v141 >= 2)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v323 + 8))((unint64_t)&v140[v320] & v321, v322);
            v139((v324 + ((unint64_t)&v140[v320] & v321)) & v338, v352);
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      uint64_t v214 = v90 + 8;
      unint64_t v215 = (v90 + 8 + v137) & 0xFFFFFFFFFFFFFFF8;
      swift_release();
      uint64_t v64 = v350;
      if (!__swift_getEnumTagSinglePayload((v333 + 16 + v215) & v350, 1, v342)) {
        (*(void (**)(unint64_t, uint64_t))(v325 + 8))((v333 + 16 + v215) & v350, v342);
      }
      uint64_t v75 = v351;
      LODWORD(v20) = v347;
      uint64_t v216 = 7;
      if (!v347) {
        uint64_t v216 = 8;
      }
      memcpy(a1, a2, v349+ ((v216 + v340 + ((v333 + 16 + ((v214 + v351) & 0xFFFFFFFFFFFFFFF8)) & v350)) & 0xFFFFFFFFFFFFFFF8)+ 8);
      unint64_t v72 = a2;
      uint64_t v76 = v349;
      uint64_t v73 = v214;
      size_t v53 = v340;
      uint64_t v74 = v333 + 16;
      goto LABEL_329;
    }
    a1 = v348;
    uint64_t v24 = v349;
    uint64_t v47 = (unsigned __int8 *)v318;
    uint64_t v23 = v336;
    if (v37 < 2)
    {
LABEL_27:
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t v48 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v48 = *v28;
      v48[1] = v28[1];
      size_t v49 = (void *)(((unint64_t)v48 + v22 + 16) & v23);
      uint64_t v50 = v329;
      unsigned int v51 = v47[v329];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v51 < 3)
      {
        size_t v53 = v340;
        uint64_t v54 = v343;
      }
      else
      {
        if (v329 <= 3) {
          uint64_t v52 = v329;
        }
        else {
          uint64_t v52 = 4;
        }
        size_t v53 = v340;
        uint64_t v54 = v343;
        switch(v52)
        {
          case 1:
            int v55 = *v47;
            goto LABEL_49;
          case 2:
            int v55 = *(unsigned __int16 *)v47;
            goto LABEL_49;
          case 3:
            int v55 = *(unsigned __int16 *)v47 | (v47[2] << 16);
            goto LABEL_49;
          case 4:
            int v55 = *(_DWORD *)v47;
LABEL_49:
            if (v329 < 4) {
              unsigned int v51 = (v55 | ((v51 - 3) << (8 * v329))) + 3;
            }
            else {
              unsigned int v51 = v55 + 3;
            }
            break;
          default:
            break;
        }
      }
      if (v51 == 2)
      {
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v346 + 16))(v49, v47, v352);
        *(_OWORD *)(((unint64_t)v49 + v326) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v47[v326] & 0xFFFFFFFFFFFFFFF8);
        *((unsigned char *)v49 + v329) = 2;
      }
      else
      {
        if (v51 == 1)
        {
          *size_t v49 = *(void *)v47;
          v49[1] = *((void *)v47 + 1);
          unint64_t v77 = ((unint64_t)v49 + v327) & v338;
          v319 = v47;
          unint64_t v78 = (unint64_t)&v47[v327] & v338;
          unsigned int v79 = *(void (**)(unint64_t, unint64_t, uint64_t))(v346 + 16);
          swift_bridgeObjectRetain();
          unint64_t v80 = v79;
          v79(v77, v78, v352);
          unint64_t v81 = (unsigned char *)((v328 + v77) & v344);
          unint64_t v82 = v339;
          unint64_t v83 = (unsigned __int8 *)((v328 + v78) & v344);
          unsigned int v84 = v83[v339];
          unsigned int v85 = v84 - 4;
          if (v84 >= 4)
          {
            if (v339 <= 3) {
              uint64_t v86 = v339;
            }
            else {
              uint64_t v86 = 4;
            }
            switch(v86)
            {
              case 1:
                int v87 = *v83;
                goto LABEL_100;
              case 2:
                int v87 = *(unsigned __int16 *)v83;
                goto LABEL_100;
              case 3:
                int v87 = *(unsigned __int16 *)v83 | (*(unsigned __int8 *)(((v328 + v78) & v344) + 2) << 16);
                goto LABEL_100;
              case 4:
                int v87 = *(_DWORD *)v83;
LABEL_100:
                if (v339 < 4) {
                  unsigned int v84 = (v87 | (v85 << (8 * v339))) + 4;
                }
                else {
                  unsigned int v84 = v87 + 4;
                }
                break;
              default:
                break;
            }
          }
          switch(v84)
          {
            case 1u:
              *unint64_t v81 = *v83;
              char v106 = 1;
              break;
            case 2u:
              *(void *)unint64_t v81 = *(void *)v83;
              *(void *)(((v328 + v77) & v344) + 8) = *(void *)(((v328 + v78) & v344) + 8);
              unint64_t v107 = (unint64_t)&v81[v320] & v321;
              unint64_t v108 = (unint64_t)&v83[v320] & v321;
              v341 = *(void (**)(unint64_t, unint64_t, uint64_t))(v323 + 16);
              swift_bridgeObjectRetain();
              v341(v107, v108, v322);
              unint64_t v109 = (v324 + v108) & v338;
              v80((v324 + v107) & v338, v109, v352);
              unint64_t v82 = v339;
              *(void *)((v326 + ((v324 + v107) & v338)) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v326 + v109) & 0xFFFFFFFFFFFFFFF8);
              v81[v316] = v83[v316];
              char v106 = 2;
              break;
            case 3u:
              *(void *)unint64_t v81 = *(void *)v83;
              *(void *)(((v328 + v77) & v344) + 8) = *(void *)(((v328 + v78) & v344) + 8);
              unint64_t v110 = (unint64_t)&v81[v320] & v321;
              unint64_t v111 = (unint64_t)&v83[v320] & v321;
              uint64_t v112 = *(void (**)(unint64_t, unint64_t, uint64_t))(v323 + 16);
              swift_bridgeObjectRetain();
              v112(v110, v111, v322);
              unint64_t v113 = (v324 + v110) & v338;
              unint64_t v114 = (v324 + v111) & v338;
              v80(v113, v114, v352);
              unint64_t v82 = v339;
              *(void *)((v326 + v113) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v326 + v114) & 0xFFFFFFFFFFFFFFF8);
              char v106 = 3;
              break;
            default:
              char v106 = 0;
              *(_WORD *)unint64_t v81 = *(_WORD *)v83;
              break;
          }
          uint64_t v88 = v344;
          size_t v89 = __n;
          uint64_t v54 = v343;
          v81[v82] = v106;
          uint64_t v50 = v329;
          *((unsigned char *)v49 + v329) = 1;
          uint64_t v47 = v319;
LABEL_109:
          uint64_t v115 = (void *)(((unint64_t)v49 + v54 + v89) & v88);
          uint64_t v116 = (void *)((unint64_t)&v47[v54 + v89] & v88);
          unsigned int v117 = *((unsigned __int8 *)v116 + v50);
          if (v117 > 2)
          {
            memcpy(v115, (const void *)((unint64_t)&v47[v54 + v89] & v88), v89);
          }
          else if (v117 == 2)
          {
            (*(void (**)(void *, unint64_t, uint64_t))(v346 + 16))(v115, (unint64_t)&v47[v54 + v89] & v88, v352);
            *(_OWORD *)(((unint64_t)v115 + v326) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v116
                                                                                             + v326) & 0xFFFFFFFFFFFFFFF8);
            *((unsigned char *)v115 + v50) = 2;
          }
          else
          {
            if (v117 == 1)
            {
              uint64_t v330 = v50;
              *uint64_t v115 = *v116;
              v115[1] = *(void *)(((unint64_t)&v47[v54 + v89] & v88) + 8);
              unint64_t v118 = ((unint64_t)v115 + v327) & v338;
              unint64_t v119 = ((unint64_t)v116 + v327) & v338;
              int v120 = *(void (**)(unint64_t, unint64_t, uint64_t))(v346 + 16);
              swift_bridgeObjectRetain();
              v120(v118, v119, v352);
              int v121 = (unsigned char *)((v328 + v118) & v88);
              unint64_t v122 = v339;
              uint64_t v123 = (unsigned __int8 *)((v328 + v119) & v88);
              unsigned int v124 = v123[v339];
              unsigned int v125 = v124 - 4;
              if (v124 >= 4)
              {
                if (v339 <= 3) {
                  uint64_t v126 = v339;
                }
                else {
                  uint64_t v126 = 4;
                }
                switch(v126)
                {
                  case 1:
                    int v127 = *v123;
                    goto LABEL_232;
                  case 2:
                    int v127 = *(unsigned __int16 *)v123;
                    goto LABEL_232;
                  case 3:
                    int v127 = *(unsigned __int16 *)v123 | (*(unsigned __int8 *)(((v328 + v119) & v88) + 2) << 16);
                    goto LABEL_232;
                  case 4:
                    int v127 = *(_DWORD *)v123;
LABEL_232:
                    if (v339 < 4) {
                      unsigned int v124 = (v127 | (v125 << (8 * v339))) + 4;
                    }
                    else {
                      unsigned int v124 = v127 + 4;
                    }
                    break;
                  default:
                    break;
                }
              }
              switch(v124)
              {
                case 1u:
                  *int v121 = *v123;
                  char v203 = 1;
                  break;
                case 2u:
                  *(void *)int v121 = *(void *)v123;
                  *(void *)(((v328 + v118) & v88) + 8) = *(void *)(((v328 + v119) & v88) + 8);
                  unint64_t v204 = (unint64_t)&v121[v320] & v321;
                  unint64_t v205 = (unint64_t)&v123[v320] & v321;
                  unint64_t v206 = *(void (**)(unint64_t, unint64_t, uint64_t))(v323 + 16);
                  swift_bridgeObjectRetain();
                  v206(v204, v205, v322);
                  unint64_t v207 = (v324 + v204) & v338;
                  unint64_t v208 = (v324 + v205) & v338;
                  v120(v207, v208, v352);
                  unint64_t v122 = v339;
                  *(void *)((v326 + v207) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v326 + v208) & 0xFFFFFFFFFFFFFFF8);
                  v121[v316] = v123[v316];
                  char v203 = 2;
                  break;
                case 3u:
                  *(void *)int v121 = *(void *)v123;
                  *(void *)(((v328 + v118) & v88) + 8) = *(void *)(((v328 + v119) & v88) + 8);
                  unint64_t v209 = (unint64_t)&v121[v320] & v321;
                  unint64_t v210 = (unint64_t)&v123[v320] & v321;
                  v211 = *(void (**)(unint64_t, unint64_t, uint64_t))(v323 + 16);
                  swift_bridgeObjectRetain();
                  v211(v209, v210, v322);
                  unint64_t v212 = (v324 + v209) & v338;
                  unint64_t v213 = (v324 + v210) & v338;
                  v120(v212, v213, v352);
                  unint64_t v122 = v339;
                  *(void *)((v326 + v212) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v326 + v213) & 0xFFFFFFFFFFFFFFF8);
                  char v203 = 3;
                  break;
                default:
                  char v203 = 0;
                  *(_WORD *)int v121 = *(_WORD *)v123;
                  break;
              }
              uint64_t v50 = v330;
              uint64_t v128 = v333;
              v121[v122] = v203;
              *((unsigned char *)v115 + v330) = 1;
              uint64_t v64 = v350;
              goto LABEL_122;
            }
            *uint64_t v115 = *v116;
            v115[1] = *(void *)(((unint64_t)&v47[v54 + v89] & v88) + 8);
            *((unsigned char *)v115 + v50) = 0;
            swift_bridgeObjectRetain();
          }
          uint64_t v64 = v350;
          uint64_t v128 = v333;
LABEL_122:
          uint64_t v73 = v50 + 8;
          uint64_t v129 = (void *)(((unint64_t)v115 + v50 + 8) & 0xFFFFFFFFFFFFFFF8);
          unsigned int v130 = (void *)(((unint64_t)v116 + v50 + 8) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v131 = v130[1];
          *uint64_t v129 = *v130;
          v129[1] = v131;
          uint64_t v74 = v128 + 16;
          uint64_t v132 = (void *)(((unint64_t)v129 + v128 + 16) & v64);
          int v133 = (const void *)(((unint64_t)v130 + v128 + 16) & v64);
          swift_retain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v133, 1, v342))
          {
            uint64_t v20 = v349;
            if (v347) {
              size_t v134 = v53;
            }
            else {
              size_t v134 = v53 + 1;
            }
            memcpy(v132, v133, v134);
          }
          else
          {
            uint64_t v20 = v349;
            (*(void (**)(void *, const void *, uint64_t))(v325 + 16))(v132, v133, v342);
            __swift_storeEnumTagSinglePayload((uint64_t)v132, 0, 1, v342);
            if (v347) {
              size_t v134 = v53;
            }
            else {
              size_t v134 = v53 + 1;
            }
          }
          a1 = v348;
          unint64_t v72 = a2;
          uint64_t v65 = v345;
          *(void *)(((unint64_t)v132 + v134 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v133
                                                                                               + v134
                                                                                               + 7) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v76 = v20;
          LODWORD(v20) = v347;
          goto LABEL_328;
        }
        *size_t v49 = *(void *)v47;
        v49[1] = *((void *)v47 + 1);
        *((unsigned char *)v49 + v329) = 0;
        swift_bridgeObjectRetain();
      }
      uint64_t v88 = v344;
      size_t v89 = __n;
      goto LABEL_109;
    }
    size_t v46 = a2;
    uint64_t v65 = v345;
    LODWORD(v20) = v347;
    size_t v53 = v340;
    uint64_t v64 = v350;
    uint64_t v63 = v351;
  }
  else
  {
    unint64_t v27 = a2[1];
    if (a1[1] > 0xFFFFFFFEuLL)
    {
      size_t __n = v17 + 1;
      uint64_t v336 = ~(v9 | v21);
      unint64_t v316 = v13;
      uint64_t v333 = *(unsigned __int8 *)(v19 + 80);
      uint64_t v325 = *(void *)(v18 - 8);
      size_t v340 = *(void *)(v325 + 64);
      int v347 = *(_DWORD *)(v19 + 84);
      if (v27 >= 0xFFFFFFFF)
      {
        uint64_t v28 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v29 = (unsigned __int8 *)(((unint64_t)v28 + v22 + 16) & v336);
        goto LABEL_17;
      }
      goto LABEL_33;
    }
    size_t v46 = a2;
    if (v27 >= 0xFFFFFFFF)
    {
      uint64_t v333 = *(unsigned __int8 *)(v19 + 80);
      size_t __n = v17 + 1;
      unint64_t v316 = v13;
      uint64_t v329 = v17;
      uint64_t v325 = *(void *)(v18 - 8);
      size_t v340 = *(void *)(v325 + 64);
      int v347 = *(_DWORD *)(v19 + 84);
      uint64_t v28 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v47 = (unsigned __int8 *)(((unint64_t)v28 + v22 + 16) & v23);
      goto LABEL_27;
    }
    uint64_t v31 = v17 + 8;
    uint64_t v32 = v21 + 16;
    uint64_t v64 = ~v21;
    uint64_t v63 = v351;
    uint64_t v65 = a3;
    size_t v53 = *(void *)(*(void *)(v18 - 8) + 64);
  }
  uint64_t v66 = 7;
  if (!v20) {
    uint64_t v66 = 8;
  }
  size_t v67 = v24 + ((v66 + v53 + ((v32 + ((v31 + v63) & 0xFFFFFFFFFFFFFFF8)) & v64)) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v68 = v63;
  uint64_t v69 = v32;
  uint64_t v70 = v46;
  uint64_t v71 = v24;
  memcpy(a1, v46, v67);
  unint64_t v72 = v70;
  uint64_t v73 = v31;
  uint64_t v74 = v69;
  uint64_t v75 = v68;
  uint64_t v76 = v71;
LABEL_329:
  uint64_t v250 = 7;
  if (!v20) {
    uint64_t v250 = 8;
  }
  uint64_t v251 = *(void *)(*(void *)(v65 + 16) - 8);
  unint64_t v252 = (v250 + v53 + ((v74 + ((v73 + v75) & 0xFFFFFFFFFFFFFFF8)) & v64)) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v253 = v251 + 24;
  uint64_t v254 = *(unsigned __int8 *)(v251 + 80);
  uint64_t v255 = v76 + v254 + v252 + 8;
  unint64_t v256 = ((unint64_t)a1 + v255) & ~v254;
  uint64_t v257 = ((unint64_t)v72 + v255) & ~v254;
  (*(void (**)(unint64_t, uint64_t))(v251 + 24))(v256, v257);
  uint64_t v258 = *(void *)(v253 + 40);
  uint64_t v259 = sub_22EE7CFC0();
  uint64_t v260 = *(void *)(v259 - 8);
  uint64_t v261 = *(_DWORD *)(v260 + 80) & 0xF8 | 7;
  v262 = (unsigned __int8 *)((v258 + v261 + v256) & ~v261);
  v263 = (unsigned __int8 *)((v258 + v261 + v257) & ~v261);
  if (*(void *)(v260 + 64) <= 8uLL) {
    uint64_t v264 = 8;
  }
  else {
    uint64_t v264 = *(void *)(v260 + 64);
  }
  if (v262 != v263)
  {
    uint64_t v265 = v259;
    unsigned int v266 = v262[v264];
    unsigned int v267 = v266 - 2;
    if (v266 >= 2)
    {
      if (v264 <= 3) {
        uint64_t v268 = v264;
      }
      else {
        uint64_t v268 = 4;
      }
      switch(v268)
      {
        case 1:
          int v269 = *v262;
          goto LABEL_344;
        case 2:
          int v269 = *(unsigned __int16 *)v262;
          goto LABEL_344;
        case 3:
          int v269 = *(unsigned __int16 *)v262 | (v262[2] << 16);
          goto LABEL_344;
        case 4:
          int v269 = *(_DWORD *)v262;
LABEL_344:
          int v270 = (v269 | (v267 << (8 * v264))) + 2;
          unsigned int v266 = v269 + 2;
          if (v264 < 4) {
            unsigned int v266 = v270;
          }
          break;
        default:
          break;
      }
    }
    if (v266 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v260 + 8))(v262, v259);
    }
    else {
      swift_release();
    }
    unsigned int v271 = v263[v264];
    unsigned int v272 = v271 - 2;
    if (v271 >= 2)
    {
      if (v264 <= 3) {
        uint64_t v273 = v264;
      }
      else {
        uint64_t v273 = 4;
      }
      switch(v273)
      {
        case 1:
          int v274 = *v263;
          goto LABEL_358;
        case 2:
          int v274 = *(unsigned __int16 *)v263;
          goto LABEL_358;
        case 3:
          int v274 = *(unsigned __int16 *)v263 | (v263[2] << 16);
          goto LABEL_358;
        case 4:
          int v274 = *(_DWORD *)v263;
LABEL_358:
          int v275 = (v274 | (v272 << (8 * v264))) + 2;
          unsigned int v271 = v274 + 2;
          if (v264 < 4) {
            unsigned int v271 = v275;
          }
          break;
        default:
          break;
      }
    }
    if (v271 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v260 + 16))(v262, v263, v265);
      v262[v264] = 1;
    }
    else
    {
      *(void *)v262 = *(void *)v263;
      v262[v264] = 0;
      swift_retain();
    }
  }
  uint64_t v276 = sub_22EE7CE90();
  uint64_t v277 = *(void *)(v276 - 8);
  uint64_t v278 = *(_DWORD *)(v277 + 80) & 0xF8 | 7;
  uint64_t v279 = v264 + v278 + 1;
  v280 = (unsigned __int8 *)((unint64_t)&v262[v279] & ~v278);
  v281 = (unsigned __int8 *)((unint64_t)&v263[v279] & ~v278);
  if (*(void *)(v277 + 64) <= 8uLL) {
    uint64_t v282 = 8;
  }
  else {
    uint64_t v282 = *(void *)(v277 + 64);
  }
  if (v280 != v281)
  {
    uint64_t v283 = v276;
    unsigned int v284 = v280[v282];
    unsigned int v285 = v284 - 2;
    if (v284 >= 2)
    {
      if (v282 <= 3) {
        uint64_t v286 = v282;
      }
      else {
        uint64_t v286 = 4;
      }
      switch(v286)
      {
        case 1:
          int v287 = *v280;
          goto LABEL_376;
        case 2:
          int v287 = *(unsigned __int16 *)v280;
          goto LABEL_376;
        case 3:
          int v287 = *(unsigned __int16 *)v280 | (v280[2] << 16);
          goto LABEL_376;
        case 4:
          int v287 = *(_DWORD *)v280;
LABEL_376:
          int v288 = (v287 | (v285 << (8 * v282))) + 2;
          unsigned int v284 = v287 + 2;
          if (v282 < 4) {
            unsigned int v284 = v288;
          }
          break;
        default:
          break;
      }
    }
    if (v284 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v277 + 8))(v280, v276);
    }
    else {
      swift_release();
    }
    unsigned int v289 = v281[v282];
    unsigned int v290 = v289 - 2;
    if (v289 >= 2)
    {
      if (v282 <= 3) {
        uint64_t v291 = v282;
      }
      else {
        uint64_t v291 = 4;
      }
      switch(v291)
      {
        case 1:
          int v292 = *v281;
          goto LABEL_390;
        case 2:
          int v292 = *(unsigned __int16 *)v281;
          goto LABEL_390;
        case 3:
          int v292 = *(unsigned __int16 *)v281 | (v281[2] << 16);
          goto LABEL_390;
        case 4:
          int v292 = *(_DWORD *)v281;
LABEL_390:
          int v293 = (v292 | (v290 << (8 * v282))) + 2;
          unsigned int v289 = v292 + 2;
          if (v282 < 4) {
            unsigned int v289 = v293;
          }
          break;
        default:
          break;
      }
    }
    if (v289 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v277 + 16))(v280, v281, v283);
      v280[v282] = 1;
    }
    else
    {
      *(void *)v280 = *(void *)v281;
      v280[v282] = 0;
      swift_retain();
    }
  }
  uint64_t v294 = v282 + 1;
  v295 = &v280[v282 + 1];
  v296 = &v281[v294];
  unint64_t v297 = (unint64_t)(v295 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v298 = (unint64_t)&v281[v294 + 7] & 0xFFFFFFFFFFFFFFF8;
  uint64_t v299 = *(void *)v298;
  char v300 = *(unsigned char *)(v298 + 8);
  sub_22EADDF00(*(void *)v298, v300);
  uint64_t v301 = *(void *)v297;
  char v302 = *(unsigned char *)(v297 + 8);
  *(void *)unint64_t v297 = v299;
  *(unsigned char *)(v297 + 8) = v300;
  sub_22EADDB08(v301, v302);
  unint64_t v303 = (unint64_t)(v295 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v304 = (unint64_t)(v296 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v305 = *(void *)v304;
  char v306 = *(unsigned char *)(v304 + 8);
  sub_22EADDF00(*(void *)v304, v306);
  uint64_t v307 = *(void *)v303;
  char v308 = *(unsigned char *)(v303 + 8);
  *(void *)unint64_t v303 = v305;
  *(unsigned char *)(v303 + 8) = v306;
  sub_22EADDB08(v307, v308);
  unint64_t v309 = (unint64_t)(v295 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v310 = (unint64_t)(v296 + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v311 = *(void *)v310;
  char v312 = *(unsigned char *)(v310 + 8);
  sub_22EADDF00(*(void *)v310, v312);
  uint64_t v313 = *(void *)v309;
  char v314 = *(unsigned char *)(v309 + 8);
  *(void *)unint64_t v309 = v311;
  *(unsigned char *)(v309 + 8) = v312;
  sub_22EADDB08(v313, v314);
  return a1;
}

_OWORD *sub_22EE42D2C(_OWORD *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7F6E0();
  uint64_t v183 = *(void *)(v6 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v183 + 80);
  uint64_t v172 = v7 + 16;
  uint64_t v8 = *(void *)(v183 + 64);
  uint64_t v9 = sub_22EE7F5D0();
  uint64_t v165 = *(void *)(v9 - 8);
  uint64_t v166 = v9;
  uint64_t v10 = *(unsigned __int8 *)(v165 + 80);
  uint64_t v11 = v7 | v10 | 7;
  uint64_t v186 = ~v11;
  uint64_t v171 = v11 + v8;
  uint64_t v163 = v10 + 16;
  uint64_t v180 = v10;
  uint64_t v164 = *(void *)(v165 + 64) + v7;
  uint64_t v12 = (v164 + ((v10 + 16) & ~v10)) & ~v7;
  uint64_t v13 = v8 + 7;
  unint64_t v14 = (v8 + 7 + v12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = v14 + 8;
  unint64_t v16 = v14 + 9;
  unint64_t v157 = v15;
  if (v16 <= v15) {
    unint64_t v16 = v15;
  }
  if (v16 <= 2) {
    uint64_t v17 = 2;
  }
  else {
    uint64_t v17 = v16;
  }
  uint64_t v18 = v17 + ((v11 + v8 + ((v7 + 16) & ~v7)) & ~v11);
  uint64_t v176 = v8 + 7;
  if (v18 + 1 > (v13 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v19 = v18 + 1;
  }
  else {
    unint64_t v19 = (v13 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v19 <= 0x10) {
    uint64_t v20 = 16;
  }
  else {
    uint64_t v20 = v19;
  }
  uint64_t v21 = sub_22EE7C220();
  uint64_t v22 = v11;
  uint64_t v23 = *(void *)(v21 - 8);
  uint64_t v24 = *(unsigned int *)(v23 + 84);
  uint64_t v25 = *(unsigned __int8 *)(v23 + 80);
  uint64_t v26 = v11 | v25;
  uint64_t v27 = ~(v11 | v25);
  uint64_t v28 = (v26 + 32) & ~v26;
  size_t v29 = v20 + 1;
  uint64_t v30 = (v20 + 1 + v22) & ~v22;
  uint64_t v31 = ~v25;
  size_t v32 = *(void *)(v23 + 64);
  int v187 = a1;
  unsigned int v188 = a2;
  uint64_t v185 = a3;
  uint64_t v182 = v25;
  uint64_t v177 = v6;
  uint64_t v184 = ~v25;
  if (v24 >= 0x80000001)
  {
    uint64_t v173 = v17;
    uint64_t v155 = *(void *)(v21 - 8);
    uint64_t v178 = (v20 + 1 + v22) & ~v22;
    uint64_t v179 = (v26 + 32) & ~v26;
    size_t v167 = *(void *)(v155 + 64);
    uint64_t v38 = v20;
    uint64_t v34 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v39 = v38 + 8;
    uint64_t v40 = v25 + 16;
    size_t v158 = v29;
    uint64_t v160 = v22;
    int v41 = *(_DWORD *)(v23 + 84);
    if (__swift_getEnumTagSinglePayload((v25+ 16+ ((v38 + 8 + (((((unint64_t)v34 + v26 + 16) & v27) + v22 + v29) & v186)) & 0xFFFFFFFFFFFFFFF8)) & v31, v24, v21) < 2)
    {
      uint64_t v33 = v38;
      uint64_t v170 = v21;
      uint64_t v36 = v187;
      LODWORD(v24) = v41;
      size_t v37 = v167;
      uint64_t v6 = v177;
      uint64_t v17 = v173;
      size_t v29 = v158;
      uint64_t v22 = v160;
      size_t v35 = (unsigned __int8 *)(((unint64_t)v34 + v26 + 16) & v27);
LABEL_17:
      *uint64_t v36 = *(_OWORD *)a2;
      unsigned int v42 = (_OWORD *)(((unint64_t)v36 + 23) & 0xFFFFFFFFFFFFFFF8);
      *unsigned int v42 = *v34;
      unsigned int v43 = (_OWORD *)(((unint64_t)v42 + v26 + 16) & v27);
      uint64_t v44 = v33;
      unsigned int v45 = v35[v33];
      unsigned int v46 = v45 - 3;
      if (v45 >= 3)
      {
        if (v44 <= 3) {
          uint64_t v47 = v44;
        }
        else {
          uint64_t v47 = 4;
        }
        switch(v47)
        {
          case 1:
            int v48 = *v35;
            goto LABEL_31;
          case 2:
            int v48 = *(unsigned __int16 *)v35;
            goto LABEL_31;
          case 3:
            int v48 = *(unsigned __int16 *)v35 | (v35[2] << 16);
            goto LABEL_31;
          case 4:
            int v48 = *(_DWORD *)v35;
LABEL_31:
            if (v44 < 4) {
              unsigned int v45 = (v48 | (v46 << (8 * v44))) + 3;
            }
            else {
              unsigned int v45 = v48 + 3;
            }
            break;
          default:
            break;
        }
      }
      uint64_t v54 = ~v7;
      uint64_t v181 = ~v180;
      int v156 = v24;
      if (v45 == 2)
      {
        uint64_t v65 = ~v7;
        uint64_t v66 = v22;
        size_t v67 = v29;
        uint64_t v68 = v35;
        (*(void (**)(_OWORD *))(v183 + 32))(v43);
        size_t v35 = v68;
        size_t v29 = v67;
        uint64_t v22 = v66;
        *(_OWORD *)(((unint64_t)v43 + v176) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v68[v176] & 0xFFFFFFFFFFFFFFF8);
        char v69 = 2;
      }
      else
      {
        if (v45 == 1)
        {
          size_t v159 = v29;
          uint64_t v161 = v22;
          *unsigned int v43 = *(_OWORD *)v35;
          unint64_t v168 = v35;
          uint64_t v174 = v17;
          unint64_t v55 = (unint64_t)&v35[v172] & v54;
          unint64_t v56 = *(void (**)(void))(v183 + 32);
          ((void (*)(unint64_t, unint64_t, uint64_t))v56)(((unint64_t)v43 + v172) & v54, v55, v6);
          uint64_t v57 = v186;
          unsigned int v58 = (unsigned char *)((v171 + (((unint64_t)v43 + v172) & v54)) & v186);
          uint64_t v59 = v171 + v55;
          uint64_t v17 = v174;
          uint64_t v60 = (unsigned __int8 *)(v59 & v186);
          unsigned int v61 = *(unsigned __int8 *)((v59 & v186) + v174);
          unsigned int v62 = v61 - 4;
          if (v61 >= 4)
          {
            if (v174 <= 3) {
              uint64_t v63 = v174;
            }
            else {
              uint64_t v63 = 4;
            }
            switch(v63)
            {
              case 1:
                int v64 = *v60;
                goto LABEL_48;
              case 2:
                int v64 = *(unsigned __int16 *)v60;
                goto LABEL_48;
              case 3:
                int v64 = *(unsigned __int16 *)v60 | (v60[2] << 16);
                goto LABEL_48;
              case 4:
                int v64 = *(_DWORD *)v60;
LABEL_48:
                if (v174 < 4) {
                  unsigned int v61 = (v64 | (v62 << (8 * v174))) + 4;
                }
                else {
                  unsigned int v61 = v64 + 4;
                }
                break;
              default:
                break;
            }
          }
          switch(v61)
          {
            case 1u:
              uint64_t v65 = v54;
              *unsigned int v58 = *v60;
              char v70 = 1;
              break;
            case 2u:
              *(_OWORD *)unsigned int v58 = *(_OWORD *)v60;
              unint64_t v154 = (unint64_t)&v58[v163] & v181;
              (*(void (**)(void))(v165 + 32))();
              uint64_t v71 = v56;
              uint64_t v65 = v54;
              v71();
              unsigned int v58 = (unsigned char *)((v171 + (((unint64_t)v43 + v172) & v54)) & v186);
              uint64_t v57 = v186;
              uint64_t v17 = v174;
              *(void *)((v176 + ((v164 + v154) & v54)) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v176
                                                                                              + ((v164
                                                                                                + ((unint64_t)&v60[v163] & v181)) & v54)) & 0xFFFFFFFFFFFFFFF8);
              v58[v157] = v60[v157];
              char v70 = 2;
              break;
            case 3u:
              *(_OWORD *)unsigned int v58 = *(_OWORD *)v60;
              unint64_t v72 = (unint64_t)&v60[v163] & v181;
              unint64_t v73 = (unint64_t)&v58[v163] & v181;
              (*(void (**)(void))(v165 + 32))();
              unint64_t v74 = (v164 + v73) & v54;
              uint64_t v75 = v56;
              uint64_t v65 = v54;
              unint64_t v76 = (v164 + v72) & v54;
              ((void (*)(unint64_t, unint64_t, uint64_t))v75)(v74, v76, v6);
              unsigned int v58 = (unsigned char *)((v171 + (((unint64_t)v43 + v172) & v54)) & v186);
              uint64_t v57 = v186;
              uint64_t v77 = v176 + v76;
              uint64_t v17 = v174;
              *(void *)((v176 + v74) & 0xFFFFFFFFFFFFFFF8) = *(void *)(v77 & 0xFFFFFFFFFFFFFFF8);
              char v70 = 3;
              break;
            default:
              uint64_t v65 = v54;
              char v70 = 0;
              *(_WORD *)unsigned int v58 = *(_WORD *)v60;
              break;
          }
          size_t v29 = v159;
          uint64_t v22 = v161;
          size_t v35 = v168;
          v58[v17] = v70;
          char v69 = 1;
LABEL_57:
          *((unsigned char *)v43 + v44) = v69;
          unint64_t v78 = (_OWORD *)(((unint64_t)v43 + v22 + v29) & v57);
          unsigned int v79 = (_OWORD *)((unint64_t)&v35[v22 + v29] & v57);
          unsigned int v80 = *((unsigned __int8 *)v79 + v44);
          if (v80 > 2)
          {
            memcpy(v78, v79, v29);
          }
          else if (v80 == 2)
          {
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v183 + 32))(v78, v79, v177);
            *(_OWORD *)(((unint64_t)v78 + v176) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v79
                                                                                            + v176) & 0xFFFFFFFFFFFFFFF8);
            *((unsigned char *)v78 + v44) = 2;
          }
          else
          {
            if (v80 == 1)
            {
              uint64_t v162 = v44;
              size_t v169 = v37;
              *unint64_t v78 = *v79;
              uint64_t v81 = v65;
              uint64_t v175 = v17;
              unint64_t v82 = ((unint64_t)v79 + v172) & v65;
              unint64_t v83 = *(void (**)(unint64_t, unint64_t, uint64_t))(v183 + 32);
              uint64_t v84 = v57;
              v83(((unint64_t)v78 + v172) & v65, v82, v177);
              unsigned int v85 = (unsigned char *)((v171 + (((unint64_t)v78 + v172) & v65)) & v84);
              uint64_t v86 = v175;
              int v87 = (unsigned __int8 *)((v171 + v82) & v84);
              unsigned int v88 = v87[v175];
              unsigned int v89 = v88 - 4;
              if (v88 >= 4)
              {
                if (v175 <= 3) {
                  uint64_t v90 = v175;
                }
                else {
                  uint64_t v90 = 4;
                }
                switch(v90)
                {
                  case 1:
                    int v91 = *v87;
                    goto LABEL_119;
                  case 2:
                    int v91 = *(unsigned __int16 *)v87;
                    goto LABEL_119;
                  case 3:
                    int v91 = *(unsigned __int16 *)v87 | (v87[2] << 16);
                    goto LABEL_119;
                  case 4:
                    int v91 = *(_DWORD *)v87;
LABEL_119:
                    if (v175 < 4) {
                      unsigned int v88 = (v91 | (v89 << (8 * v175))) + 4;
                    }
                    else {
                      unsigned int v88 = v91 + 4;
                    }
                    break;
                  default:
                    break;
                }
              }
              switch(v88)
              {
                case 1u:
                  *unsigned int v85 = *v87;
                  char v149 = 1;
                  break;
                case 2u:
                  *(_OWORD *)unsigned int v85 = *(_OWORD *)v87;
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v165 + 32))((unint64_t)&v85[v163] & v181, (unint64_t)&v87[v163] & v181, v166);
                  unint64_t v150 = (v164 + ((unint64_t)&v85[v163] & v181)) & v81;
                  unint64_t v151 = (v164 + ((unint64_t)&v87[v163] & v181)) & v81;
                  v83(v150, v151, v177);
                  uint64_t v86 = v175;
                  *(void *)((v176 + v150) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v176 + v151) & 0xFFFFFFFFFFFFFFF8);
                  v85[v157] = v87[v157];
                  char v149 = 2;
                  break;
                case 3u:
                  *(_OWORD *)unsigned int v85 = *(_OWORD *)v87;
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v165 + 32))((unint64_t)&v85[v163] & v181, (unint64_t)&v87[v163] & v181, v166);
                  unint64_t v152 = (v164 + ((unint64_t)&v85[v163] & v181)) & v81;
                  unint64_t v153 = (v164 + ((unint64_t)&v87[v163] & v181)) & v81;
                  v83(v152, v153, v177);
                  uint64_t v86 = v175;
                  *(void *)((v176 + v152) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v176 + v153) & 0xFFFFFFFFFFFFFFF8);
                  char v149 = 3;
                  break;
                default:
                  char v149 = 0;
                  *(_WORD *)unsigned int v85 = *(_WORD *)v87;
                  break;
              }
              size_t v37 = v169;
              uint64_t v93 = v170;
              uint64_t v92 = v184;
              uint64_t v94 = v182;
              v85[v86] = v149;
              uint64_t v44 = v162;
              *((unsigned char *)v78 + v162) = 1;
              goto LABEL_70;
            }
            *unint64_t v78 = *v79;
            *((unsigned char *)v78 + v44) = 0;
          }
          uint64_t v92 = v184;
          uint64_t v93 = v170;
          uint64_t v94 = v182;
LABEL_70:
          uint64_t v95 = v44 + 8;
          size_t v96 = (_OWORD *)(((unint64_t)v78 + v95) & 0xFFFFFFFFFFFFFFF8);
          int v97 = (_OWORD *)(((unint64_t)v79 + v95) & 0xFFFFFFFFFFFFFFF8);
          *size_t v96 = *v97;
          uint64_t v98 = v94 + 16;
          uint64_t v99 = (void *)(((unint64_t)v96 + v94 + 16) & v92);
          uint64_t v100 = v92;
          size_t v101 = (const void *)(((unint64_t)v97 + v94 + 16) & v92);
          if (__swift_getEnumTagSinglePayload((uint64_t)v101, 1, v93))
          {
            unsigned int v102 = v187;
            if (v156) {
              size_t v103 = v37;
            }
            else {
              size_t v103 = v37 + 1;
            }
            memcpy(v99, v101, v103);
            int v104 = v156;
          }
          else
          {
            unsigned int v102 = v187;
            (*(void (**)(void *, const void *, uint64_t))(v155 + 32))(v99, v101, v93);
            __swift_storeEnumTagSinglePayload((uint64_t)v99, 0, 1, v93);
            int v104 = v156;
            if (v156) {
              size_t v103 = v37;
            }
            else {
              size_t v103 = v37 + 1;
            }
          }
          uint64_t v53 = v185;
          *(void *)(((unint64_t)v99 + v103 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v101
                                                                                              + v103
                                                                                              + 7) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v105 = 7;
          if (!v104) {
            uint64_t v105 = 8;
          }
          size_t v50 = v179
              + ((v105 + v37 + ((v98 + ((v95 + v178) & 0xFFFFFFFFFFFFFFF8)) & v100)) & 0xFFFFFFFFFFFFFFF8)
              + 8;
          uint64_t v52 = v102;
          unsigned int v51 = v188;
          goto LABEL_81;
        }
        uint64_t v65 = ~v7;
        char v69 = 0;
        *unsigned int v43 = *(_OWORD *)v35;
      }
      uint64_t v57 = v186;
      goto LABEL_57;
    }
    uint64_t v30 = v178;
    uint64_t v28 = (v26 + 32) & ~v26;
    LODWORD(v24) = v41;
    size_t v32 = v167;
    uint64_t v31 = v184;
  }
  else
  {
    uint64_t v170 = v21;
    if (a2[1] >= 0xFFFFFFFFuLL)
    {
      uint64_t v33 = v20;
      uint64_t v155 = *(void *)(v21 - 8);
      uint64_t v178 = (v20 + 1 + v22) & ~v22;
      uint64_t v179 = (v26 + 32) & ~v26;
      uint64_t v34 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
      size_t v35 = (unsigned __int8 *)(((unint64_t)v34 + v26 + 16) & v27);
      uint64_t v36 = a1;
      size_t v37 = *(void *)(v155 + 64);
      goto LABEL_17;
    }
    uint64_t v39 = v20 + 8;
    uint64_t v40 = v25 + 16;
  }
  uint64_t v49 = 7;
  if (!v24) {
    uint64_t v49 = 8;
  }
  size_t v50 = v28 + ((v49 + v32 + ((v40 + ((v39 + v30) & 0xFFFFFFFFFFFFFFF8)) & v31)) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v52 = v187;
  unsigned int v51 = a2;
  memcpy(v187, a2, v50);
  uint64_t v53 = v185;
LABEL_81:
  uint64_t v106 = *(void *)(*(void *)(v53 + 16) - 8);
  uint64_t v107 = v106 + 32;
  uint64_t v108 = *(unsigned __int8 *)(v106 + 80);
  size_t v109 = ((unint64_t)v52 + v50 + v108) & ~v108;
  size_t v110 = ((unint64_t)v51 + v50 + v108) & ~v108;
  (*(void (**)(size_t, size_t))(v106 + 32))(v109, v110);
  uint64_t v111 = *(void *)(v107 + 32);
  uint64_t v112 = sub_22EE7CFC0();
  uint64_t v113 = *(void *)(v112 - 8);
  uint64_t v114 = *(_DWORD *)(v113 + 80) & 0xF8 | 7;
  uint64_t v115 = (void *)((v111 + v114 + v109) & ~v114);
  uint64_t v116 = (unsigned __int8 *)((v111 + v114 + v110) & ~v114);
  if (*(void *)(v113 + 64) <= 8uLL) {
    uint64_t v117 = 8;
  }
  else {
    uint64_t v117 = *(void *)(v113 + 64);
  }
  unsigned int v118 = v116[v117];
  unsigned int v119 = v118 - 2;
  if (v118 >= 2)
  {
    if (v117 <= 3) {
      uint64_t v120 = v117;
    }
    else {
      uint64_t v120 = 4;
    }
    switch(v120)
    {
      case 1:
        int v121 = *v116;
        goto LABEL_93;
      case 2:
        int v121 = *(unsigned __int16 *)v116;
        goto LABEL_93;
      case 3:
        int v121 = *(unsigned __int16 *)v116 | (v116[2] << 16);
        goto LABEL_93;
      case 4:
        int v121 = *(_DWORD *)v116;
LABEL_93:
        int v122 = (v121 | (v119 << (8 * v117))) + 2;
        unsigned int v118 = v121 + 2;
        if (v117 < 4) {
          unsigned int v118 = v122;
        }
        break;
      default:
        break;
    }
  }
  if (v118 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v113 + 32))(v115, v116, v112);
    char v123 = 1;
  }
  else
  {
    char v123 = 0;
    *uint64_t v115 = *(void *)v116;
  }
  *((unsigned char *)v115 + v117) = v123;
  uint64_t v124 = v117 + 1;
  uint64_t v125 = sub_22EE7CE90();
  uint64_t v126 = *(void *)(v125 - 8);
  uint64_t v127 = *(_DWORD *)(v126 + 80) & 0xF8 | 7;
  uint64_t v128 = (void *)(((unint64_t)v115 + v124 + v127) & ~v127);
  uint64_t v129 = (unsigned __int8 *)((unint64_t)&v116[v124 + v127] & ~v127);
  if (*(void *)(v126 + 64) <= 8uLL) {
    uint64_t v130 = 8;
  }
  else {
    uint64_t v130 = *(void *)(v126 + 64);
  }
  unsigned int v131 = v129[v130];
  unsigned int v132 = v131 - 2;
  if (v131 >= 2)
  {
    if (v130 <= 3) {
      uint64_t v133 = v130;
    }
    else {
      uint64_t v133 = 4;
    }
    switch(v133)
    {
      case 1:
        int v134 = *v129;
        goto LABEL_110;
      case 2:
        int v134 = *(unsigned __int16 *)v129;
        goto LABEL_110;
      case 3:
        int v134 = *(unsigned __int16 *)v129 | (v129[2] << 16);
        goto LABEL_110;
      case 4:
        int v134 = *(_DWORD *)v129;
LABEL_110:
        int v135 = (v134 | (v132 << (8 * v130))) + 2;
        unsigned int v131 = v134 + 2;
        if (v130 < 4) {
          unsigned int v131 = v135;
        }
        break;
      default:
        break;
    }
  }
  if (v131 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v126 + 32))(v128, v129, v125);
    char v136 = 1;
  }
  else
  {
    char v136 = 0;
    *uint64_t v128 = *(void *)v129;
  }
  *((unsigned char *)v128 + v130) = v136;
  unint64_t v137 = (char *)v128 + v130 + 1;
  unsigned int v138 = &v129[v130 + 1];
  unint64_t v139 = (unint64_t)(v137 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v140 = (unint64_t)(v138 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v141 = *(void *)v140;
  *(unsigned char *)(v139 + 8) = *(unsigned char *)(v140 + 8);
  *(void *)unint64_t v139 = v141;
  unint64_t v142 = (unint64_t)(v137 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v143 = (unint64_t)(v138 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v144 = *(void *)v143;
  *(unsigned char *)(v142 + 8) = *(unsigned char *)(v143 + 8);
  *(void *)unint64_t v142 = v144;
  unint64_t v145 = (unint64_t)(v137 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v146 = (unint64_t)(v138 + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v147 = *(void *)v146;
  *(unsigned char *)(v145 + 8) = *(unsigned char *)(v146 + 8);
  *(void *)unint64_t v145 = v147;
  return v52;
}

void *sub_22EE43C4C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v323 = sub_22EE7F6E0();
  uint64_t v317 = *(void *)(v323 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v317 + 80);
  uint64_t v308 = ~v5;
  uint64_t v303 = v5 + 16;
  uint64_t v6 = *(void *)(v317 + 64);
  uint64_t v295 = sub_22EE7F5D0();
  uint64_t v296 = *(void *)(v295 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v296 + 80);
  uint64_t v8 = v5 | v7 | 7;
  uint64_t v304 = v8 + v6;
  uint64_t v294 = ~v7;
  uint64_t v293 = v7 + 16;
  uint64_t v297 = *(void *)(v296 + 64) + v5;
  uint64_t v9 = v6 + 7;
  unint64_t v10 = (v6 + 7 + ((v297 + ((v7 + 16) & ~v7)) & ~v5)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = v10 + 8;
  unint64_t v12 = v10 + 9;
  unint64_t v291 = v11;
  if (v12 <= v11) {
    unint64_t v12 = v11;
  }
  if (v12 <= 2) {
    unint64_t v12 = 2;
  }
  unint64_t v315 = v12;
  unint64_t v13 = v12 + ((v8 + v6 + ((v5 + 16) & ~v5)) & ~v8);
  uint64_t v298 = v6 + 7;
  if (v13 + 1 > (v9 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v14 = v13 + 1;
  }
  else {
    unint64_t v14 = (v9 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v14 <= 0x10) {
    uint64_t v15 = 16;
  }
  else {
    uint64_t v15 = v14;
  }
  uint64_t v16 = sub_22EE7C220();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(unsigned int *)(v17 + 84);
  uint64_t v299 = v17;
  uint64_t v19 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v20 = v8 | v19;
  uint64_t v21 = ~(v8 | v19);
  uint64_t v22 = ((v8 | v19) + 32) & v21;
  size_t v23 = v15 + 1;
  uint64_t v24 = (v15 + 1 + v8) & ~v8;
  size_t v25 = *(void *)(v17 + 64);
  uint64_t v318 = a1;
  uint64_t v319 = v24;
  uint64_t v320 = a3;
  size_t v321 = v25;
  uint64_t v316 = ~v19;
  uint64_t v314 = v16;
  uint64_t v322 = ~v8;
  uint64_t v313 = v8;
  if (v18 >= 0x80000001)
  {
    uint64_t v32 = v16;
    uint64_t v312 = ((v8 | v19) + 32) & ~(v8 | v19);
    uint64_t v33 = ~v19;
    uint64_t v300 = v15;
    uint64_t v34 = v15 + 8;
    unint64_t v35 = (v15 + 8 + (((((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v20 + 16) & v21) + v8 + v23) & ~v8)) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v307 = *(unsigned __int8 *)(v17 + 80);
    uint64_t v36 = v19 + 16;
    size_t v37 = v23;
    uint64_t v38 = ~(v8 | v19);
    unsigned int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((v19 + 16 + v35) & ~v19, v18, v16);
    uint64_t v306 = v38;
    int v292 = (unsigned __int8 *)(((((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8) + v20 + 16) & v38);
    size_t __n = v37;
    uint64_t v39 = v33;
    int v305 = v18;
    unsigned int v40 = __swift_getEnumTagSinglePayload((v36 + ((v34 + ((unint64_t)&v292[v8 + v37] & ~v8)) & 0xFFFFFFFFFFFFFFF8)) & v33, v18, v32);
    if (EnumTagSinglePayload < 2)
    {
      uint64_t v27 = v318;
      uint64_t v15 = v300;
      if (v40 <= 1)
      {
        unint64_t v26 = a2[1];
        uint64_t v31 = v316;
        uint64_t v30 = (uint64_t)v292;
        uint64_t v29 = v306;
        uint64_t v28 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
LABEL_18:
        *uint64_t v27 = *a2;
        v27[1] = v26;
        swift_bridgeObjectRelease();
        int v41 = (void *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8);
        *int v41 = *v28;
        v41[1] = v28[1];
        swift_bridgeObjectRelease();
        unsigned int v42 = (unsigned __int8 *)(((unint64_t)v41 + v20 + 16) & v29);
        unint64_t v43 = v315;
        size_t v44 = __n;
        unsigned int v45 = (unsigned __int8 *)v30;
        if (v42 != (unsigned __int8 *)v30)
        {
          unsigned int v46 = v42[v15];
          unsigned int v47 = v46 - 3;
          if (v46 >= 3)
          {
            if (v15 <= 3) {
              uint64_t v48 = v15;
            }
            else {
              uint64_t v48 = 4;
            }
            switch(v48)
            {
              case 1:
                int v49 = *v42;
                goto LABEL_84;
              case 2:
                int v49 = *(unsigned __int16 *)v42;
                goto LABEL_84;
              case 3:
                int v49 = *(unsigned __int16 *)v42 | (v42[2] << 16);
                goto LABEL_84;
              case 4:
                int v49 = *(_DWORD *)v42;
LABEL_84:
                if (v15 < 4) {
                  unsigned int v46 = (v49 | (v47 << (8 * v15))) + 3;
                }
                else {
                  unsigned int v46 = v49 + 3;
                }
                break;
              default:
                break;
            }
          }
          uint64_t v96 = v15;
          if (v46 == 2)
          {
            (*(void (**)(unsigned __int8 *, uint64_t, size_t))(v317 + 8))(v42, v323, __n);
          }
          else if (v46 == 1)
          {
            swift_bridgeObjectRelease();
            int v97 = *(void (**)(unint64_t, uint64_t))(v317 + 8);
            v97((unint64_t)&v42[v303] & v308, v323);
            uint64_t v98 = (unsigned __int8 *)((v304 + ((unint64_t)&v42[v303] & v308)) & v322);
            unsigned int v99 = v98[v315];
            unsigned int v100 = v99 - 4;
            if (v99 >= 4)
            {
              if (v315 <= 3) {
                uint64_t v101 = v315;
              }
              else {
                uint64_t v101 = 4;
              }
              switch(v101)
              {
                case 1:
                  int v102 = *v98;
                  goto LABEL_143;
                case 2:
                  int v102 = *(unsigned __int16 *)v98;
                  goto LABEL_143;
                case 3:
                  int v102 = *(unsigned __int16 *)((v304 + ((unint64_t)&v42[v303] & v308)) & v322) | (*(unsigned __int8 *)(((v304 + ((unint64_t)&v42[v303] & v308)) & v322) + 2) << 16);
                  goto LABEL_143;
                case 4:
                  int v102 = *(_DWORD *)v98;
LABEL_143:
                  if (v315 < 4) {
                    unsigned int v99 = (v102 | (v100 << (8 * v315))) + 4;
                  }
                  else {
                    unsigned int v99 = v102 + 4;
                  }
                  break;
                default:
                  break;
              }
            }
            if (v99 >= 2)
            {
              swift_bridgeObjectRelease();
              unint64_t v133 = (unint64_t)&v98[v293] & v294;
              (*(void (**)(unint64_t, uint64_t))(v296 + 8))(v133, v295);
              v97((v297 + v133) & v308, v323);
            }
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          uint64_t v15 = v96;
          unsigned int v134 = v45[v96];
          unsigned int v135 = v134 - 3;
          if (v134 < 3)
          {
            size_t v44 = __n;
          }
          else
          {
            if (v96 <= 3) {
              uint64_t v136 = v96;
            }
            else {
              uint64_t v136 = 4;
            }
            size_t v44 = __n;
            switch(v136)
            {
              case 1:
                int v137 = *v45;
                goto LABEL_158;
              case 2:
                int v137 = *(unsigned __int16 *)v45;
                goto LABEL_158;
              case 3:
                int v137 = *(unsigned __int16 *)v45 | (v45[2] << 16);
                goto LABEL_158;
              case 4:
                int v137 = *(_DWORD *)v45;
LABEL_158:
                if (v96 < 4) {
                  unsigned int v134 = (v137 | (v135 << (8 * v96))) + 3;
                }
                else {
                  unsigned int v134 = v137 + 3;
                }
                break;
              default:
                break;
            }
          }
          if (v134 == 2)
          {
            size_t v147 = v44;
            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v317 + 32))(v42, v45, v323);
            size_t v44 = v147;
            *(_OWORD *)((unint64_t)&v42[v298] & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v45[v298] & 0xFFFFFFFFFFFFFFF8);
            char v148 = 2;
          }
          else if (v134 == 1)
          {
            size_t v138 = v44;
            *(_OWORD *)unsigned int v42 = *(_OWORD *)v45;
            unint64_t v139 = v45;
            unint64_t v140 = (unint64_t)&v45[v303] & v308;
            __nb = *(void (**)(unint64_t, unint64_t, uint64_t))(v317 + 32);
            __nb((unint64_t)&v42[v303] & v308, v140, v323);
            uint64_t v141 = (unsigned char *)((v304 + ((unint64_t)&v42[v303] & v308)) & v322);
            unint64_t v43 = v315;
            unint64_t v142 = (unsigned __int8 *)((v304 + v140) & v322);
            unsigned int v143 = v142[v315];
            unsigned int v144 = v143 - 4;
            if (v143 >= 4)
            {
              if (v315 <= 3) {
                uint64_t v145 = v315;
              }
              else {
                uint64_t v145 = 4;
              }
              switch(v145)
              {
                case 1:
                  int v146 = *v142;
                  goto LABEL_174;
                case 2:
                  int v146 = *(unsigned __int16 *)v142;
                  goto LABEL_174;
                case 3:
                  int v146 = *(unsigned __int16 *)v142 | (*(unsigned __int8 *)(((v304 + v140) & v322) + 2) << 16);
                  goto LABEL_174;
                case 4:
                  int v146 = *(_DWORD *)v142;
LABEL_174:
                  if (v315 < 4) {
                    unsigned int v143 = (v146 | (v144 << (8 * v315))) + 4;
                  }
                  else {
                    unsigned int v143 = v146 + 4;
                  }
                  break;
                default:
                  break;
              }
            }
            switch(v143)
            {
              case 1u:
                *uint64_t v141 = *v142;
                char v149 = 1;
                break;
              case 2u:
                *(_OWORD *)uint64_t v141 = *(_OWORD *)v142;
                unint64_t v150 = (unint64_t)&v141[v293] & v294;
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v296 + 32))(v150, (unint64_t)&v142[v293] & v294, v295);
                unint64_t v151 = (v297 + v150) & v308;
                unint64_t v152 = (v297 + ((unint64_t)&v142[v293] & v294)) & v308;
                __nb(v151, v152, v323);
                uint64_t v141 = (unsigned char *)((v304 + ((unint64_t)&v42[v303] & v308)) & v322);
                unint64_t v43 = v315;
                *(void *)((v298 + v151) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v298 + v152) & 0xFFFFFFFFFFFFFFF8);
                v141[v291] = v142[v291];
                char v149 = 2;
                break;
              case 3u:
                *(_OWORD *)uint64_t v141 = *(_OWORD *)v142;
                unint64_t v153 = (unint64_t)&v141[v293] & v294;
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v296 + 32))(v153, (unint64_t)&v142[v293] & v294, v295);
                unint64_t v154 = (v297 + v153) & v308;
                unint64_t v155 = (v297 + ((unint64_t)&v142[v293] & v294)) & v308;
                __nb(v154, v155, v323);
                uint64_t v141 = (unsigned char *)((v304 + ((unint64_t)&v42[v303] & v308)) & v322);
                unint64_t v43 = v315;
                *(void *)((v298 + v154) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v298 + v155) & 0xFFFFFFFFFFFFFFF8);
                char v149 = 3;
                break;
              default:
                char v149 = 0;
                *(_WORD *)uint64_t v141 = *(_WORD *)v142;
                break;
            }
            uint64_t v15 = v96;
            size_t v44 = v138;
            unsigned int v45 = v139;
            v141[v43] = v149;
            char v148 = 1;
          }
          else
          {
            char v148 = 0;
            *(_OWORD *)unsigned int v42 = *(_OWORD *)v45;
          }
          v42[v15] = v148;
        }
        int v156 = (_OWORD *)((unint64_t)&v42[v313 + v44] & v322);
        unint64_t v157 = (unsigned __int8 *)((unint64_t)&v45[v313 + v44] & v322);
        unsigned int v158 = *((unsigned __int8 *)v156 + v15);
        unsigned int v159 = v157[v15];
        if (v158 > 2)
        {
          if (v159 > 2)
          {
            memcpy(v156, (const void *)((unint64_t)&v45[v313 + v44] & v322), v44);
            goto LABEL_313;
          }
          if (v159 != 2)
          {
            if (v159 != 1)
            {
LABEL_299:
              *int v156 = *(_OWORD *)v157;
              *((unsigned char *)v156 + v15) = 0;
              goto LABEL_313;
            }
            uint64_t v302 = v15;
            *int v156 = *(_OWORD *)v157;
            unint64_t v167 = (unint64_t)&v157[v303] & v308;
            unint64_t v168 = *(void (**)(unint64_t, unint64_t, uint64_t))(v317 + 32);
            v168(((unint64_t)v156 + v303) & v308, v167, v323);
            size_t v169 = (unsigned char *)((v304 + (((unint64_t)v156 + v303) & v308)) & v322);
            unint64_t v170 = v315;
            uint64_t v171 = (unsigned __int8 *)((v304 + v167) & v322);
            unsigned int v172 = v171[v315];
            unsigned int v173 = v172 - 4;
            if (v172 >= 4)
            {
              if (v315 <= 3) {
                uint64_t v174 = v315;
              }
              else {
                uint64_t v174 = 4;
              }
              switch(v174)
              {
                case 1:
                  int v175 = *v171;
                  goto LABEL_257;
                case 2:
                  int v175 = *(unsigned __int16 *)v171;
                  goto LABEL_257;
                case 3:
                  int v175 = *(unsigned __int16 *)v171 | (*(unsigned __int8 *)(((v304 + v167) & v322) + 2) << 16);
                  goto LABEL_257;
                case 4:
                  int v175 = *(_DWORD *)v171;
LABEL_257:
                  if (v315 < 4) {
                    unsigned int v172 = (v175 | (v173 << (8 * v315))) + 4;
                  }
                  else {
                    unsigned int v172 = v175 + 4;
                  }
                  break;
                default:
                  break;
              }
            }
            switch(v172)
            {
              case 1u:
LABEL_308:
                *size_t v169 = *v171;
                char v212 = 1;
                break;
              case 2u:
LABEL_309:
                *(_OWORD *)size_t v169 = *(_OWORD *)v171;
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v296 + 32))((unint64_t)&v169[v293] & v294, (unint64_t)&v171[v293] & v294, v295);
                unint64_t v213 = (v297 + ((unint64_t)&v169[v293] & v294)) & v308;
                unint64_t v214 = (v297 + ((unint64_t)&v171[v293] & v294)) & v308;
                v168(v213, v214, v323);
                unint64_t v170 = v315;
                *(void *)((v298 + v213) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v298 + v214) & 0xFFFFFFFFFFFFFFF8);
                v169[v291] = v171[v291];
                char v212 = 2;
                break;
              case 3u:
LABEL_310:
                *(_OWORD *)size_t v169 = *(_OWORD *)v171;
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v296 + 32))((unint64_t)&v169[v293] & v294, (unint64_t)&v171[v293] & v294, v295);
                unint64_t v215 = (v297 + ((unint64_t)&v169[v293] & v294)) & v308;
                unint64_t v216 = (v297 + ((unint64_t)&v171[v293] & v294)) & v308;
                v168(v215, v216, v323);
                unint64_t v170 = v315;
                *(void *)((v298 + v215) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v298 + v216) & 0xFFFFFFFFFFFFFFF8);
                char v212 = 3;
                break;
              default:
LABEL_307:
                char v212 = 0;
                *(_WORD *)size_t v169 = *(_WORD *)v171;
                break;
            }
            v169[v170] = v212;
            char v211 = 1;
            uint64_t v15 = v302;
LABEL_312:
            *((unsigned char *)v156 + v15) = v211;
LABEL_313:
            unint64_t v217 = (_OWORD *)(((unint64_t)v156 + v15 + 8) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v218 = v15 + 8;
            unsigned int v219 = (_OWORD *)((unint64_t)&v157[v15 + 8] & 0xFFFFFFFFFFFFFFF8);
            *unint64_t v217 = *v219;
            swift_release();
            uint64_t v69 = v307 + 16;
            uint64_t v39 = v31;
            uint64_t v220 = (void *)(((unint64_t)v217 + v307 + 16) & v31);
            int v221 = (const void *)(((unint64_t)v219 + v307 + 16) & v31);
            LODWORD(v217) = __swift_getEnumTagSinglePayload((uint64_t)v220, 1, v314);
            int v222 = __swift_getEnumTagSinglePayload((uint64_t)v221, 1, v314);
            if (v217)
            {
              if (!v222)
              {
                (*(void (**)(void *, const void *, uint64_t))(v299 + 32))(v220, v221, v314);
                __swift_storeEnumTagSinglePayload((uint64_t)v220, 0, 1, v314);
LABEL_323:
                uint64_t v27 = v318;
                LODWORD(v18) = v305;
                size_t v25 = v321;
LABEL_324:
                uint64_t v75 = v319;
                uint64_t v70 = v320;
                if (v18) {
                  size_t v224 = v25;
                }
                else {
                  size_t v224 = v25 + 1;
                }
                *(void *)(((unint64_t)v220 + v224 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v221 + v224 + 7) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v22 = v312;
                uint64_t v68 = v218;
                goto LABEL_328;
              }
            }
            else
            {
              if (!v222)
              {
                (*(void (**)(void *, const void *, uint64_t))(v299 + 40))(v220, v221, v314);
                goto LABEL_323;
              }
              (*(void (**)(void *, uint64_t))(v299 + 8))(v220, v314);
            }
            LODWORD(v18) = v305;
            size_t v25 = v321;
            if (v305) {
              size_t v223 = v321;
            }
            else {
              size_t v223 = v321 + 1;
            }
            memcpy(v220, v221, v223);
            uint64_t v27 = v318;
            goto LABEL_324;
          }
LABEL_298:
          (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v317 + 32))(v156, v157, v323);
          *(_OWORD *)(((unint64_t)v156 + v298) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v157[v298] & 0xFFFFFFFFFFFFFFF8);
          char v211 = 2;
          goto LABEL_312;
        }
        if (v159 <= 2)
        {
          if (v156 == (_OWORD *)v157) {
            goto LABEL_313;
          }
          uint64_t v160 = v15;
          if (v158 == 2)
          {
            (*(void (**)(_OWORD *, uint64_t))(v317 + 8))(v156, v323);
          }
          else if (v158 == 1)
          {
            swift_bridgeObjectRelease();
            uint64_t v161 = *(void (**)(unint64_t, uint64_t))(v317 + 8);
            v161(((unint64_t)v156 + v303) & v308, v323);
            uint64_t v162 = (unsigned __int8 *)((v304 + (((unint64_t)v156 + v303) & v308)) & v322);
            unsigned int v163 = v162[v43];
            unsigned int v164 = v163 - 4;
            if (v163 >= 4)
            {
              if (v43 <= 3) {
                uint64_t v165 = v43;
              }
              else {
                uint64_t v165 = 4;
              }
              switch(v165)
              {
                case 1:
                  int v166 = *v162;
                  goto LABEL_273;
                case 2:
                  int v166 = *(unsigned __int16 *)v162;
                  goto LABEL_273;
                case 3:
                  int v166 = *(unsigned __int16 *)((v304 + (((unint64_t)v156 + v303) & v308)) & v322) | (*(unsigned __int8 *)(((v304 + (((unint64_t)v156 + v303) & v308)) & v322) + 2) << 16);
                  goto LABEL_273;
                case 4:
                  int v166 = *(_DWORD *)v162;
LABEL_273:
                  if (v43 < 4) {
                    unsigned int v163 = (v166 | (v164 << (8 * v43))) + 4;
                  }
                  else {
                    unsigned int v163 = v166 + 4;
                  }
                  break;
                default:
                  break;
              }
            }
            if (v163 >= 2)
            {
              swift_bridgeObjectRelease();
              unint64_t v201 = (unint64_t)&v162[v293] & v294;
              (*(void (**)(unint64_t, uint64_t))(v296 + 8))(v201, v295);
              v161((v297 + v201) & v308, v323);
            }
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          uint64_t v15 = v160;
          unsigned int v202 = v157[v160];
          unsigned int v203 = v202 - 3;
          if (v202 >= 3)
          {
            if (v160 <= 3) {
              uint64_t v204 = v160;
            }
            else {
              uint64_t v204 = 4;
            }
            switch(v204)
            {
              case 1:
                int v205 = *v157;
                goto LABEL_287;
              case 2:
                int v205 = *(unsigned __int16 *)v157;
                goto LABEL_287;
              case 3:
                int v205 = *(unsigned __int16 *)v157 | (v157[2] << 16);
                goto LABEL_287;
              case 4:
                int v205 = *(_DWORD *)v157;
LABEL_287:
                if (v160 < 4) {
                  unsigned int v202 = (v205 | (v203 << (8 * v160))) + 3;
                }
                else {
                  unsigned int v202 = v205 + 3;
                }
                break;
              default:
                break;
            }
          }
          if (v202 != 2)
          {
            if (v202 == 1)
            {
              uint64_t v302 = v160;
              *int v156 = *(_OWORD *)v157;
              unint64_t v206 = (unint64_t)&v157[v303] & v308;
              unint64_t v168 = *(void (**)(unint64_t, unint64_t, uint64_t))(v317 + 32);
              v168(((unint64_t)v156 + v303) & v308, v206, v323);
              size_t v169 = (unsigned char *)((v304 + (((unint64_t)v156 + v303) & v308)) & v322);
              unint64_t v170 = v315;
              uint64_t v171 = (unsigned __int8 *)((v304 + v206) & v322);
              unsigned int v207 = v171[v315];
              unsigned int v208 = v207 - 4;
              if (v207 >= 4)
              {
                if (v315 <= 3) {
                  uint64_t v209 = v315;
                }
                else {
                  uint64_t v209 = 4;
                }
                switch(v209)
                {
                  case 1:
                    int v210 = *v171;
                    goto LABEL_303;
                  case 2:
                    int v210 = *(unsigned __int16 *)v171;
                    goto LABEL_303;
                  case 3:
                    int v210 = *(unsigned __int16 *)v171 | (*(unsigned __int8 *)(((v304 + v206) & v322) + 2) << 16);
                    goto LABEL_303;
                  case 4:
                    int v210 = *(_DWORD *)v171;
LABEL_303:
                    if (v315 < 4) {
                      unsigned int v207 = (v210 | (v208 << (8 * v315))) + 4;
                    }
                    else {
                      unsigned int v207 = v210 + 4;
                    }
                    break;
                  default:
                    break;
                }
              }
              switch(v207)
              {
                case 1u:
                  goto LABEL_308;
                case 2u:
                  goto LABEL_309;
                case 3u:
                  goto LABEL_310;
                default:
                  goto LABEL_307;
              }
            }
            goto LABEL_299;
          }
          goto LABEL_298;
        }
        if (v158 == 2)
        {
          uint64_t v177 = v15;
          size_t v186 = v44;
          (*(void (**)(_OWORD *, uint64_t))(v317 + 8))(v156, v323);
        }
        else
        {
          if (v158 == 1)
          {
            size_t v176 = v44;
            uint64_t v177 = v15;
            swift_bridgeObjectRelease();
            unint64_t v178 = ((unint64_t)v156 + v303) & v308;
            uint64_t v179 = *(void (**)(unint64_t, uint64_t))(v317 + 8);
            v179(v178, v323);
            uint64_t v180 = (unsigned __int8 *)((v304 + v178) & v322);
            unsigned int v181 = v180[v43];
            unsigned int v182 = v181 - 4;
            if (v181 < 4)
            {
              size_t v184 = v176;
            }
            else
            {
              if (v43 <= 3) {
                uint64_t v183 = v43;
              }
              else {
                uint64_t v183 = 4;
              }
              size_t v184 = v176;
              switch(v183)
              {
                case 1:
                  int v185 = *v180;
                  goto LABEL_264;
                case 2:
                  int v185 = *(unsigned __int16 *)v180;
                  goto LABEL_264;
                case 3:
                  int v185 = *(unsigned __int16 *)v180 | (*(unsigned __int8 *)(((v304 + v178) & v322) + 2) << 16);
                  goto LABEL_264;
                case 4:
                  int v185 = *(_DWORD *)v180;
LABEL_264:
                  if (v43 < 4) {
                    unsigned int v181 = (v185 | (v182 << (8 * v43))) + 4;
                  }
                  else {
                    unsigned int v181 = v185 + 4;
                  }
                  break;
                default:
                  break;
              }
            }
            if (v181 >= 2)
            {
              swift_bridgeObjectRelease();
              (*(void (**)(unint64_t, uint64_t))(v296 + 8))((unint64_t)&v180[v293] & v294, v295);
              v179((v297 + ((unint64_t)&v180[v293] & v294)) & v308, v323);
              size_t v184 = v176;
            }
            goto LABEL_269;
          }
          size_t v186 = v44;
          uint64_t v177 = v15;
          swift_bridgeObjectRelease();
        }
        size_t v184 = v186;
LABEL_269:
        memcpy(v156, v157, v184);
        uint64_t v15 = v177;
        goto LABEL_313;
      }
LABEL_34:
      swift_bridgeObjectRelease();
      unint64_t v60 = ((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8;
      swift_bridgeObjectRelease();
      unsigned int v61 = (unsigned __int8 *)((v60 + v20 + 16) & v306);
      unsigned int v62 = v61[v15];
      unsigned int v63 = v62 - 3;
      if (v62 < 3)
      {
        unint64_t v65 = v315;
        uint64_t v66 = v313;
      }
      else
      {
        if (v15 <= 3) {
          uint64_t v64 = v15;
        }
        else {
          uint64_t v64 = 4;
        }
        unint64_t v65 = v315;
        uint64_t v66 = v313;
        switch(v64)
        {
          case 1:
            int v67 = *v61;
            goto LABEL_66;
          case 2:
            int v67 = *(unsigned __int16 *)v61;
            goto LABEL_66;
          case 3:
            int v67 = *(unsigned __int16 *)v61 | (*(unsigned __int8 *)(((v60 + v20 + 16) & v306) + 2) << 16);
            goto LABEL_66;
          case 4:
            int v67 = *(_DWORD *)v61;
LABEL_66:
            if (v15 < 4) {
              unsigned int v62 = (v67 | (v63 << (8 * v15))) + 3;
            }
            else {
              unsigned int v62 = v67 + 3;
            }
            break;
          default:
            break;
        }
      }
      uint64_t v88 = v15;
      if (v62 == 2)
      {
        (*(void (**)(unsigned __int8 *, uint64_t))(v317 + 8))(v61, v323);
      }
      else
      {
        if (v62 == 1)
        {
          swift_bridgeObjectRelease();
          unsigned int v89 = *(void (**)(unint64_t, uint64_t))(v317 + 8);
          v89((unint64_t)&v61[v303] & v308, v323);
          uint64_t v90 = (unsigned __int8 *)((v304 + ((unint64_t)&v61[v303] & v308)) & v322);
          unsigned int v91 = v90[v65];
          unsigned int v92 = v91 - 4;
          if (v91 < 4)
          {
            size_t v94 = __n;
          }
          else
          {
            if (v65 <= 3) {
              uint64_t v93 = v65;
            }
            else {
              uint64_t v93 = 4;
            }
            size_t v94 = __n;
            switch(v93)
            {
              case 1:
                int v95 = *v90;
                goto LABEL_124;
              case 2:
                int v95 = *(unsigned __int16 *)v90;
                goto LABEL_124;
              case 3:
                int v95 = *(unsigned __int16 *)((v304 + ((unint64_t)&v61[v303] & v308)) & v322) | (*(unsigned __int8 *)(((v304 + ((unint64_t)&v61[v303] & v308)) & v322) + 2) << 16);
                goto LABEL_124;
              case 4:
                int v95 = *(_DWORD *)v90;
LABEL_124:
                if (v65 < 4) {
                  unsigned int v91 = (v95 | (v92 << (8 * v65))) + 4;
                }
                else {
                  unsigned int v91 = v95 + 4;
                }
                break;
              default:
                break;
            }
          }
          if (v91 >= 2)
          {
            size_t v123 = v94;
            swift_bridgeObjectRelease();
            unint64_t v124 = (unint64_t)&v90[v293] & v294;
            (*(void (**)(unint64_t, uint64_t))(v296 + 8))(v124, v295);
            v89((v297 + v124) & v308, v323);
            size_t v94 = v123;
          }
          goto LABEL_129;
        }
        swift_bridgeObjectRelease();
      }
      size_t v94 = __n;
LABEL_129:
      unint64_t v125 = (unint64_t)&v61[v66 + v94] & v322;
      unsigned int v126 = *(unsigned __int8 *)(v125 + v88);
      LODWORD(v18) = v305;
      if (v126 <= 2)
      {
        if (v126 == 2)
        {
          (*(void (**)(unint64_t, uint64_t))(v317 + 8))(v125, v323);
        }
        else if (v126 == 1)
        {
          swift_bridgeObjectRelease();
          uint64_t v127 = *(void (**)(unint64_t, uint64_t))(v317 + 8);
          v127((v303 + v125) & v308, v323);
          uint64_t v128 = (unsigned __int8 *)((v304 + ((v303 + v125) & v308)) & v322);
          unsigned int v129 = v128[v315];
          unsigned int v130 = v129 - 4;
          if (v129 >= 4)
          {
            if (v315 <= 3) {
              uint64_t v131 = v315;
            }
            else {
              uint64_t v131 = 4;
            }
            switch(v131)
            {
              case 1:
                int v132 = *v128;
                goto LABEL_244;
              case 2:
                int v132 = *(unsigned __int16 *)v128;
                goto LABEL_244;
              case 3:
                int v132 = *(unsigned __int16 *)((v304 + ((v303 + v125) & v308)) & v322) | (*(unsigned __int8 *)(((v304 + ((v303 + v125) & v308)) & v322) + 2) << 16);
                goto LABEL_244;
              case 4:
                int v132 = *(_DWORD *)v128;
LABEL_244:
                if (v315 < 4) {
                  unsigned int v129 = (v132 | (v130 << (8 * v315))) + 4;
                }
                else {
                  unsigned int v129 = v132 + 4;
                }
                break;
              default:
                break;
            }
          }
          if (v129 >= 2)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v296 + 8))((unint64_t)&v128[v293] & v294, v295);
            v127((v297 + ((unint64_t)&v128[v293] & v294)) & v308, v323);
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      uint64_t v68 = v88 + 8;
      unint64_t v198 = (v68 + v125) & 0xFFFFFFFFFFFFFFF8;
      swift_release();
      uint64_t v69 = v307 + 16;
      uint64_t v39 = v316;
      uint64_t v199 = (v307 + 16 + v198) & v316;
      if (!__swift_getEnumTagSinglePayload(v199, 1, v314)) {
        (*(void (**)(uint64_t, uint64_t))(v299 + 8))(v199, v314);
      }
      uint64_t v200 = 7;
      if (!v305) {
        uint64_t v200 = 8;
      }
      size_t v25 = v321;
      uint64_t v22 = v312;
      memcpy(v27, a2, v312 + ((v200 + v321 + ((v69 + ((v68 + v319) & 0xFFFFFFFFFFFFFFF8)) & v316)) & 0xFFFFFFFFFFFFFFF8) + 8);
      uint64_t v75 = v319;
      uint64_t v70 = v320;
      goto LABEL_328;
    }
    uint64_t v27 = v318;
    uint64_t v24 = v319;
    uint64_t v21 = v306;
    uint64_t v19 = v307;
    size_t v23 = v37;
    size_t v50 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    if (v40 < 2)
    {
LABEL_28:
      *(_OWORD *)uint64_t v27 = *(_OWORD *)a2;
      unsigned int v51 = (_OWORD *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8);
      *unsigned int v51 = *v50;
      uint64_t v52 = (_OWORD *)(((unint64_t)v51 + v20 + 16) & v21);
      uint64_t v53 = v300;
      uint64_t v54 = v292;
      unsigned int v55 = v292[v300];
      unsigned int v56 = v55 - 3;
      if (v55 < 3)
      {
        uint64_t v58 = v322;
      }
      else
      {
        if (v300 <= 3) {
          uint64_t v57 = v300;
        }
        else {
          uint64_t v57 = 4;
        }
        uint64_t v58 = v322;
        switch(v57)
        {
          case 1:
            int v59 = *v292;
            goto LABEL_50;
          case 2:
            int v59 = *(unsigned __int16 *)v292;
            goto LABEL_50;
          case 3:
            int v59 = *(unsigned __int16 *)v292 | (v292[2] << 16);
            goto LABEL_50;
          case 4:
            int v59 = *(_DWORD *)v292;
LABEL_50:
            if (v300 < 4) {
              unsigned int v55 = (v59 | (v56 << (8 * v300))) + 3;
            }
            else {
              unsigned int v55 = v59 + 3;
            }
            break;
          default:
            break;
        }
      }
      if (v55 == 2)
      {
        uint64_t v76 = v19;
        size_t v86 = v23;
        (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v317 + 32))(v52, v292, v323);
        size_t v23 = v86;
        *(_OWORD *)(((unint64_t)v52 + v298) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v292[v298] & 0xFFFFFFFFFFFFFFF8);
        char v87 = 2;
      }
      else if (v55 == 1)
      {
        size_t __na = v23;
        uint64_t v76 = v19;
        *uint64_t v52 = *(_OWORD *)v292;
        unint64_t v77 = (unint64_t)&v292[v303] & v308;
        unint64_t v78 = *(void (**)(unint64_t, unint64_t, uint64_t))(v317 + 32);
        v78(((unint64_t)v52 + v303) & v308, v77, v323);
        unsigned int v79 = (unsigned char *)((v304 + (((unint64_t)v52 + v303) & v308)) & v58);
        unint64_t v80 = v315;
        uint64_t v81 = (unsigned __int8 *)((v304 + v77) & v58);
        unsigned int v82 = v81[v315];
        unsigned int v83 = v82 - 4;
        if (v82 >= 4)
        {
          if (v315 <= 3) {
            uint64_t v84 = v315;
          }
          else {
            uint64_t v84 = 4;
          }
          switch(v84)
          {
            case 1:
              int v85 = *v81;
              goto LABEL_100;
            case 2:
              int v85 = *(unsigned __int16 *)v81;
              goto LABEL_100;
            case 3:
              int v85 = *(unsigned __int16 *)((v304 + v77) & v58) | (*(unsigned __int8 *)(((v304 + v77) & v58) + 2) << 16);
              goto LABEL_100;
            case 4:
              int v85 = *(_DWORD *)v81;
LABEL_100:
              if (v315 < 4) {
                unsigned int v82 = (v85 | (v83 << (8 * v315))) + 4;
              }
              else {
                unsigned int v82 = v85 + 4;
              }
              break;
            default:
              break;
          }
        }
        switch(v82)
        {
          case 1u:
            *unsigned int v79 = *v81;
            char v103 = 1;
            break;
          case 2u:
            *(_OWORD *)unsigned int v79 = *(_OWORD *)v81;
            unint64_t v104 = (unint64_t)&v79[v293] & v294;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v296 + 32))(v104, (unint64_t)&v81[v293] & v294, v295);
            unint64_t v105 = (v297 + v104) & v308;
            unint64_t v106 = (v297 + ((unint64_t)&v81[v293] & v294)) & v308;
            v78(v105, v106, v323);
            unsigned int v79 = (unsigned char *)((v304 + (((unint64_t)v52 + v303) & v308)) & v58);
            unint64_t v80 = v315;
            *(void *)((v298 + v105) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v298 + v106) & 0xFFFFFFFFFFFFFFF8);
            v79[v291] = v81[v291];
            char v103 = 2;
            break;
          case 3u:
            *(_OWORD *)unsigned int v79 = *(_OWORD *)v81;
            unint64_t v107 = (unint64_t)&v79[v293] & v294;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v296 + 32))(v107, (unint64_t)&v81[v293] & v294, v295);
            unint64_t v108 = (v297 + v107) & v308;
            unint64_t v109 = (v297 + ((unint64_t)&v81[v293] & v294)) & v308;
            v78(v108, v109, v323);
            unsigned int v79 = (unsigned char *)((v304 + (((unint64_t)v52 + v303) & v308)) & v58);
            unint64_t v80 = v315;
            *(void *)((v298 + v108) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v298 + v109) & 0xFFFFFFFFFFFFFFF8);
            char v103 = 3;
            break;
          default:
            char v103 = 0;
            *(_WORD *)unsigned int v79 = *(_WORD *)v81;
            break;
        }
        uint64_t v53 = v300;
        uint64_t v58 = v322;
        size_t v23 = __na;
        uint64_t v54 = v292;
        v79[v80] = v103;
        char v87 = 1;
      }
      else
      {
        uint64_t v76 = v19;
        char v87 = 0;
        *uint64_t v52 = *(_OWORD *)v292;
      }
      *((unsigned char *)v52 + v53) = v87;
      size_t v110 = (_OWORD *)(((unint64_t)v52 + v313 + v23) & v58);
      uint64_t v111 = (_OWORD *)((unint64_t)&v54[v313 + v23] & v58);
      unsigned int v112 = *((unsigned __int8 *)v111 + v53);
      if (v112 > 2)
      {
        memcpy((void *)(((unint64_t)v52 + v313 + v23) & v58), (const void *)((unint64_t)&v54[v313 + v23] & v58), v23);
      }
      else
      {
        if (v112 == 2)
        {
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v317 + 32))(((unint64_t)v52 + v313 + v23) & v58, (unint64_t)&v54[v313 + v23] & v58, v323);
          *(_OWORD *)(((unint64_t)v110 + v298) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v111
                                                                                           + v298) & 0xFFFFFFFFFFFFFFF8);
          char v122 = 2;
LABEL_231:
          *((unsigned char *)v110 + v53) = v122;
          goto LABEL_232;
        }
        if (v112 == 1)
        {
          uint64_t v301 = v53;
          *size_t v110 = *v111;
          uint64_t v113 = v58;
          uint64_t v114 = *(void (**)(unint64_t, unint64_t, uint64_t))(v317 + 32);
          v114(((unint64_t)v110 + v303) & v308, ((unint64_t)v111 + v303) & v308, v323);
          uint64_t v115 = (unsigned char *)((v304 + (((unint64_t)v110 + v303) & v308)) & v113);
          unint64_t v116 = v315;
          uint64_t v117 = (unsigned __int8 *)((v304 + (((unint64_t)v111 + v303) & v308)) & v113);
          unsigned int v118 = v117[v315];
          unsigned int v119 = v118 - 4;
          if (v118 >= 4)
          {
            if (v315 <= 3) {
              uint64_t v120 = v315;
            }
            else {
              uint64_t v120 = 4;
            }
            switch(v120)
            {
              case 1:
                int v121 = *v117;
                goto LABEL_222;
              case 2:
                int v121 = *(unsigned __int16 *)v117;
                goto LABEL_222;
              case 3:
                int v121 = *(unsigned __int16 *)v117 | (v117[2] << 16);
                goto LABEL_222;
              case 4:
                int v121 = *(_DWORD *)v117;
LABEL_222:
                if (v315 < 4) {
                  unsigned int v118 = (v121 | (v119 << (8 * v315))) + 4;
                }
                else {
                  unsigned int v118 = v121 + 4;
                }
                break;
              default:
                break;
            }
          }
          switch(v118)
          {
            case 1u:
              *uint64_t v115 = *v117;
              char v187 = 1;
              break;
            case 2u:
              *(_OWORD *)uint64_t v115 = *(_OWORD *)v117;
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v296 + 32))((unint64_t)&v115[v293] & v294, (unint64_t)&v117[v293] & v294, v295);
              unint64_t v188 = (v297 + ((unint64_t)&v115[v293] & v294)) & v308;
              unint64_t v189 = (v297 + ((unint64_t)&v117[v293] & v294)) & v308;
              v114(v188, v189, v323);
              unint64_t v116 = v315;
              *(void *)((v298 + v188) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v298 + v189) & 0xFFFFFFFFFFFFFFF8);
              v115[v291] = v117[v291];
              char v187 = 2;
              break;
            case 3u:
              *(_OWORD *)uint64_t v115 = *(_OWORD *)v117;
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v296 + 32))((unint64_t)&v115[v293] & v294, (unint64_t)&v117[v293] & v294, v295);
              unint64_t v190 = (v297 + ((unint64_t)&v115[v293] & v294)) & v308;
              unint64_t v191 = (v297 + ((unint64_t)&v117[v293] & v294)) & v308;
              v114(v190, v191, v323);
              unint64_t v116 = v315;
              *(void *)((v298 + v190) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v298 + v191) & 0xFFFFFFFFFFFFFFF8);
              char v187 = 3;
              break;
            default:
              char v187 = 0;
              *(_WORD *)uint64_t v115 = *(_WORD *)v117;
              break;
          }
          v115[v116] = v187;
          char v122 = 1;
          uint64_t v53 = v301;
          goto LABEL_231;
        }
        *size_t v110 = *v111;
        *((unsigned char *)v110 + v53) = 0;
      }
LABEL_232:
      size_t v192 = (_OWORD *)(((unint64_t)v110 + v53 + 8) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v324 = v53 + 8;
      uint64_t v193 = (_OWORD *)(((unint64_t)v111 + v53 + 8) & 0xFFFFFFFFFFFFFFF8);
      *size_t v192 = *v193;
      uint64_t v69 = v76 + 16;
      size_t v194 = (void *)(((unint64_t)v192 + v76 + 16) & v316);
      uint64_t v39 = v316;
      uint64_t v195 = (const void *)(((unint64_t)v193 + v76 + 16) & v316);
      if (__swift_getEnumTagSinglePayload((uint64_t)v195, 1, v314))
      {
        size_t v196 = v321;
        if (v18) {
          size_t v197 = v321;
        }
        else {
          size_t v197 = v321 + 1;
        }
        memcpy(v194, v195, v197);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v299 + 32))(v194, v195, v314);
        __swift_storeEnumTagSinglePayload((uint64_t)v194, 0, 1, v314);
        size_t v196 = v321;
        if (v18) {
          size_t v197 = v321;
        }
        else {
          size_t v197 = v321 + 1;
        }
      }
      uint64_t v27 = v318;
      uint64_t v75 = v319;
      *(void *)(((unint64_t)v194 + v197 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v195
                                                                                           + v197
                                                                                           + 7) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v22 = v312;
      uint64_t v70 = v320;
      size_t v25 = v196;
      uint64_t v68 = v324;
      goto LABEL_328;
    }
    uint64_t v71 = v36;
    uint64_t v72 = v34;
    uint64_t v22 = v312;
    uint64_t v70 = v320;
    uint64_t v68 = v72;
    uint64_t v69 = v71;
  }
  else
  {
    unint64_t v26 = a2[1];
    uint64_t v27 = a1;
    if (a1[1] > 0xFFFFFFFEuLL)
    {
      uint64_t v306 = v21;
      uint64_t v307 = *(unsigned __int8 *)(v17 + 80);
      size_t __n = v15 + 1;
      uint64_t v312 = v22;
      int v305 = *(_DWORD *)(v17 + 84);
      if (v26 >= 0xFFFFFFFF)
      {
        uint64_t v28 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v29 = v21;
        uint64_t v30 = ((unint64_t)v28 + v20 + 16) & v21;
        uint64_t v31 = ~v19;
        goto LABEL_18;
      }
      goto LABEL_34;
    }
    if (v26 >= 0xFFFFFFFF)
    {
      uint64_t v300 = v15;
      uint64_t v312 = v22;
      size_t v50 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
      int v292 = (unsigned __int8 *)(((unint64_t)v50 + v20 + 16) & v21);
      goto LABEL_28;
    }
    uint64_t v68 = v15 + 8;
    uint64_t v69 = v19 + 16;
    uint64_t v70 = a3;
    uint64_t v39 = ~v19;
  }
  uint64_t v73 = 7;
  if (!v18) {
    uint64_t v73 = 8;
  }
  uint64_t v74 = v24;
  memcpy(v27, a2, v22 + ((v73 + v25 + ((v69 + ((v68 + v24) & 0xFFFFFFFFFFFFFFF8)) & v39)) & 0xFFFFFFFFFFFFFFF8) + 8);
  uint64_t v75 = v74;
LABEL_328:
  uint64_t v225 = 7;
  if (!v18) {
    uint64_t v225 = 8;
  }
  uint64_t v226 = *(void *)(*(void *)(v70 + 16) - 8);
  unint64_t v227 = (v225 + v25 + ((v69 + ((v68 + v75) & 0xFFFFFFFFFFFFFFF8)) & v39)) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v228 = v226 + 40;
  uint64_t v229 = *(unsigned __int8 *)(v226 + 80);
  uint64_t v230 = v22 + v229 + v227 + 8;
  unint64_t v231 = ((unint64_t)v27 + v230) & ~v229;
  unint64_t v232 = ((unint64_t)a2 + v230) & ~v229;
  (*(void (**)(unint64_t, unint64_t))(v226 + 40))(v231, v232);
  uint64_t v233 = *(void *)(v228 + 24);
  uint64_t v234 = sub_22EE7CFC0();
  uint64_t v235 = *(void *)(v234 - 8);
  uint64_t v236 = *(_DWORD *)(v235 + 80) & 0xF8 | 7;
  v237 = (unsigned __int8 *)((v233 + v236 + v231) & ~v236);
  uint64_t v238 = (unsigned __int8 *)((v233 + v236 + v232) & ~v236);
  if (*(void *)(v235 + 64) <= 8uLL) {
    uint64_t v239 = 8;
  }
  else {
    uint64_t v239 = *(void *)(v235 + 64);
  }
  if (v237 != v238)
  {
    uint64_t v240 = v234;
    unsigned int v241 = v237[v239];
    unsigned int v242 = v241 - 2;
    if (v241 >= 2)
    {
      if (v239 <= 3) {
        uint64_t v243 = v239;
      }
      else {
        uint64_t v243 = 4;
      }
      switch(v243)
      {
        case 1:
          int v244 = *v237;
          goto LABEL_343;
        case 2:
          int v244 = *(unsigned __int16 *)v237;
          goto LABEL_343;
        case 3:
          int v244 = *(unsigned __int16 *)v237 | (v237[2] << 16);
          goto LABEL_343;
        case 4:
          int v244 = *(_DWORD *)v237;
LABEL_343:
          int v245 = (v244 | (v242 << (8 * v239))) + 2;
          unsigned int v241 = v244 + 2;
          if (v239 < 4) {
            unsigned int v241 = v245;
          }
          break;
        default:
          break;
      }
    }
    if (v241 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v235 + 8))(v237, v234);
    }
    else {
      swift_release();
    }
    unsigned int v246 = v238[v239];
    unsigned int v247 = v246 - 2;
    if (v246 >= 2)
    {
      if (v239 <= 3) {
        uint64_t v248 = v239;
      }
      else {
        uint64_t v248 = 4;
      }
      switch(v248)
      {
        case 1:
          int v249 = *v238;
          goto LABEL_357;
        case 2:
          int v249 = *(unsigned __int16 *)v238;
          goto LABEL_357;
        case 3:
          int v249 = *(unsigned __int16 *)v238 | (v238[2] << 16);
          goto LABEL_357;
        case 4:
          int v249 = *(_DWORD *)v238;
LABEL_357:
          int v250 = (v249 | (v247 << (8 * v239))) + 2;
          unsigned int v246 = v249 + 2;
          if (v239 < 4) {
            unsigned int v246 = v250;
          }
          break;
        default:
          break;
      }
    }
    if (v246 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v235 + 32))(v237, v238, v240);
      char v251 = 1;
    }
    else
    {
      char v251 = 0;
      *(void *)v237 = *(void *)v238;
    }
    v237[v239] = v251;
  }
  uint64_t v252 = sub_22EE7CE90();
  uint64_t v253 = *(void *)(v252 - 8);
  uint64_t v254 = *(_DWORD *)(v253 + 80) & 0xF8 | 7;
  uint64_t v255 = v239 + v254 + 1;
  unint64_t v256 = (unsigned __int8 *)((unint64_t)&v237[v255] & ~v254);
  uint64_t v257 = (unsigned __int8 *)((unint64_t)&v238[v255] & ~v254);
  if (*(void *)(v253 + 64) <= 8uLL) {
    uint64_t v258 = 8;
  }
  else {
    uint64_t v258 = *(void *)(v253 + 64);
  }
  if (v256 != v257)
  {
    uint64_t v259 = v252;
    unsigned int v260 = v256[v258];
    unsigned int v261 = v260 - 2;
    if (v260 >= 2)
    {
      if (v258 <= 3) {
        uint64_t v262 = v258;
      }
      else {
        uint64_t v262 = 4;
      }
      switch(v262)
      {
        case 1:
          int v263 = *v256;
          goto LABEL_376;
        case 2:
          int v263 = *(unsigned __int16 *)v256;
          goto LABEL_376;
        case 3:
          int v263 = *(unsigned __int16 *)v256 | (v256[2] << 16);
          goto LABEL_376;
        case 4:
          int v263 = *(_DWORD *)v256;
LABEL_376:
          int v264 = (v263 | (v261 << (8 * v258))) + 2;
          unsigned int v260 = v263 + 2;
          if (v258 < 4) {
            unsigned int v260 = v264;
          }
          break;
        default:
          break;
      }
    }
    if (v260 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v253 + 8))(v256, v252);
    }
    else {
      swift_release();
    }
    unsigned int v265 = v257[v258];
    unsigned int v266 = v265 - 2;
    if (v265 >= 2)
    {
      if (v258 <= 3) {
        uint64_t v267 = v258;
      }
      else {
        uint64_t v267 = 4;
      }
      switch(v267)
      {
        case 1:
          int v268 = *v257;
          goto LABEL_390;
        case 2:
          int v268 = *(unsigned __int16 *)v257;
          goto LABEL_390;
        case 3:
          int v268 = *(unsigned __int16 *)v257 | (v257[2] << 16);
          goto LABEL_390;
        case 4:
          int v268 = *(_DWORD *)v257;
LABEL_390:
          int v269 = (v268 | (v266 << (8 * v258))) + 2;
          unsigned int v265 = v268 + 2;
          if (v258 < 4) {
            unsigned int v265 = v269;
          }
          break;
        default:
          break;
      }
    }
    if (v265 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v253 + 32))(v256, v257, v259);
      char v270 = 1;
    }
    else
    {
      char v270 = 0;
      *(void *)unint64_t v256 = *(void *)v257;
    }
    v256[v258] = v270;
  }
  uint64_t v271 = v258 + 1;
  unsigned int v272 = &v256[v258 + 1];
  uint64_t v273 = &v257[v271];
  unint64_t v274 = (unint64_t)(v272 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v275 = (unint64_t)(v273 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v276 = *(void *)v275;
  LOBYTE(v275) = *(unsigned char *)(v275 + 8);
  uint64_t v277 = *(void *)v274;
  char v278 = *(unsigned char *)(v274 + 8);
  *(void *)unint64_t v274 = v276;
  *(unsigned char *)(v274 + 8) = v275;
  sub_22EADDB08(v277, v278);
  unint64_t v279 = (unint64_t)(v272 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v280 = (unint64_t)(v273 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v281 = *(void *)v280;
  LOBYTE(v280) = *(unsigned char *)(v280 + 8);
  uint64_t v282 = *(void *)v279;
  char v283 = *(unsigned char *)(v279 + 8);
  *(void *)unint64_t v279 = v281;
  *(unsigned char *)(v279 + 8) = v280;
  sub_22EADDB08(v282, v283);
  unint64_t v284 = (unint64_t)(v272 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v285 = (unint64_t)(v273 + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v286 = *(void *)v285;
  LOBYTE(v285) = *(unsigned char *)(v285 + 8);
  uint64_t v287 = *(void *)v284;
  char v288 = *(unsigned char *)(v284 + 8);
  *(void *)unint64_t v284 = v286;
  *(unsigned char *)(v284 + 8) = v285;
  sub_22EADDB08(v287, v288);
  return v27;
}

uint64_t sub_22EE461C8(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(sub_22EE7F6E0() - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(sub_22EE7F5D0() - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v5 | v8 | 7;
  unint64_t v10 = (v6 + 7 + ((*(void *)(v7 + 64) + v5 + ((v8 + 16) & ~v8)) & ~v5)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = v10 + 8;
  unint64_t v12 = v10 + 9;
  if (v12 <= v11) {
    unint64_t v12 = v11;
  }
  if (v12 <= 2) {
    unint64_t v12 = 2;
  }
  unint64_t v13 = v12 + ((((v5 + 16) & ~v5) + v6 + v9) & ~v9);
  if (v13 + 1 > ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v14 = v13 + 1;
  }
  else {
    unint64_t v14 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v14 <= 0x10) {
    unint64_t v14 = 16;
  }
  unint64_t v50 = v14;
  uint64_t v43 = sub_22EE7C220();
  uint64_t v15 = *(void *)(v43 - 8);
  uint64_t v16 = *(unsigned int *)(v15 + 84);
  int v17 = v16 - 1;
  if (!v16) {
    int v17 = 0;
  }
  if (v17 <= 0x7FFFFFFF) {
    int v18 = 0x7FFFFFFF;
  }
  else {
    int v18 = v17;
  }
  if (v17 >= 0) {
    int v19 = 0x7FFFFFFF;
  }
  else {
    int v19 = v18;
  }
  int v44 = v19;
  uint64_t v45 = *(void *)(a3 + 16);
  uint64_t v20 = *(void *)(v45 - 8);
  unsigned int v48 = v19 - 1;
  unsigned int v49 = *(_DWORD *)(v20 + 84);
  if (v49 <= v19 - 1) {
    unsigned int v21 = v19 - 1;
  }
  else {
    unsigned int v21 = *(_DWORD *)(v20 + 84);
  }
  uint64_t v46 = *(void *)(sub_22EE7CFC0() - 8);
  unint64_t v22 = *(void *)(v46 + 64);
  if (v22 <= 8) {
    unint64_t v22 = 8;
  }
  unint64_t v47 = v22;
  uint64_t v23 = *(void *)(sub_22EE7CE90() - 8);
  if (*(void *)(v23 + 64) <= 8uLL) {
    uint64_t v24 = 8;
  }
  else {
    uint64_t v24 = *(void *)(v23 + 64);
  }
  uint64_t v25 = *(unsigned __int8 *)(v15 + 80);
  if (v16) {
    uint64_t v26 = 7;
  }
  else {
    uint64_t v26 = 8;
  }
  uint64_t v27 = *(unsigned __int8 *)(v20 + 80);
  if (!a2) {
    return 0;
  }
  uint64_t v28 = v50 + v9 + 1;
  unint64_t v29 = ((v26 + *(void *)(v15 + 64) + ((v25 + 16 + ((v50 + 8 + (v28 & ~v9)) & 0xFFFFFFFFFFFFFFF8)) & ~v25)) & 0xFFFFFFFFFFFFFFF8)
      + (((v9 | v25) + 32) & ~(v9 | v25))
      + v27
      + 8;
  if (v21 < a2)
  {
    uint64_t v30 = *(_DWORD *)(v46 + 80) & 0xF8 | 7;
    uint64_t v31 = *(_DWORD *)(v23 + 80) & 0xF8 | 7;
    unint64_t v32 = ((v24 + ((v47 + v31 + ((*(void *)(v20 + 64) + v30 + (v29 & ~v27)) & ~v30) + 1) & ~v31) + 40) & 0xFFFFFFFFFFFFFFF8)
        + 9;
    if (v32 < 4) {
      unsigned int v33 = ((a2 - v21 + 255) >> (8 * v32)) + 1;
    }
    else {
      unsigned int v33 = 2;
    }
    if (v33 >= 0x10000) {
      unsigned int v34 = 4;
    }
    else {
      unsigned int v34 = 2;
    }
    if (v33 < 0x100) {
      unsigned int v34 = 1;
    }
    if (v33 >= 2) {
      uint64_t v35 = v34;
    }
    else {
      uint64_t v35 = 0;
    }
    switch(v35)
    {
      case 1:
        int v36 = a1[v32];
        if (!a1[v32]) {
          break;
        }
        goto LABEL_47;
      case 2:
        int v36 = *(unsigned __int16 *)&a1[v32];
        if (*(_WORD *)&a1[v32]) {
          goto LABEL_47;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x22EE466F4);
      case 4:
        int v36 = *(_DWORD *)&a1[v32];
        if (!v36) {
          break;
        }
LABEL_47:
        int v38 = (v36 - 1) << (8 * v32);
        if (v32 >= 4) {
          int v38 = 0;
        }
        if (v32 == 1) {
          int v39 = *a1;
        }
        else {
          int v39 = *(_DWORD *)a1;
        }
        return v21 + (v39 | v38) + 1;
      default:
        break;
    }
  }
  if (v48 >= v49)
  {
    if (v44 == 0x7FFFFFFF)
    {
      unint64_t v40 = *((void *)a1 + 1);
      if (v40 >= 0xFFFFFFFF) {
        LODWORD(v40) = -1;
      }
      unsigned int v41 = v40 + 1;
    }
    else
    {
      unsigned int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((v25+ 16+ ((v50+ 8+ ((v28+ ((((unint64_t)(a1 + 23) & 0xFFFFFFFFFFFFFFF8) + (v9 | v25) + 16) & ~(v9 | v25))) & ~v9)) & 0xFFFFFFFFFFFFFFF8)) & ~v25, v16, v43);
      unsigned int v41 = EnumTagSinglePayload - 1;
      if (EnumTagSinglePayload < 2) {
        unsigned int v41 = 0;
      }
    }
    if (v41 >= 2) {
      return v41 - 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    return __swift_getEnumTagSinglePayload((unint64_t)&a1[v29] & ~v27, v49, v45);
  }
}

void sub_22EE46708(void *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(sub_22EE7F6E0() - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(sub_22EE7F5D0() - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v6 | v9 | 7;
  unint64_t v11 = (v7 + 7 + ((*(void *)(v8 + 64) + v6 + ((v9 + 16) & ~v9)) & ~v6)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = v11 + 8;
  unint64_t v13 = v11 + 9;
  if (v13 <= v12) {
    unint64_t v13 = v12;
  }
  if (v13 <= 2) {
    unint64_t v13 = 2;
  }
  unint64_t v14 = v13 + ((((v6 + 16) & ~v6) + v7 + v10) & ~v10);
  if (v14 + 1 > ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v15 = v14 + 1;
  }
  else {
    unint64_t v15 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v15 <= 0x10) {
    uint64_t v16 = 16;
  }
  else {
    uint64_t v16 = v15;
  }
  uint64_t v60 = sub_22EE7C220();
  uint64_t v17 = *(void *)(v60 - 8);
  uint64_t v18 = *(unsigned int *)(v17 + 84);
  if (v18) {
    int v19 = v18 - 1;
  }
  else {
    int v19 = 0;
  }
  if (v19 <= 0x7FFFFFFF) {
    int v20 = 0x7FFFFFFF;
  }
  else {
    int v20 = v19;
  }
  unsigned int v61 = v19;
  if (v19 >= 0) {
    int v21 = 0x7FFFFFFF;
  }
  else {
    int v21 = v20;
  }
  unsigned int v63 = v21;
  unsigned int v22 = v21 - 1;
  uint64_t v62 = *(void *)(a4 + 16);
  uint64_t v23 = *(void *)(v62 - 8);
  unsigned int v64 = *(_DWORD *)(v23 + 84);
  unsigned int v65 = v22;
  if (v64 > v22) {
    unsigned int v22 = *(_DWORD *)(v23 + 84);
  }
  unsigned int v68 = v22;
  uint64_t v66 = *(void *)(sub_22EE7CFC0() - 8);
  unint64_t v24 = *(void *)(v66 + 64);
  if (v24 <= 8) {
    unint64_t v24 = 8;
  }
  unint64_t v67 = v24;
  uint64_t v25 = sub_22EE7CE90();
  uint64_t v26 = v18;
  int v27 = 0;
  uint64_t v28 = *(void *)(v25 - 8);
  if (*(void *)(v28 + 64) <= 8uLL) {
    uint64_t v29 = 8;
  }
  else {
    uint64_t v29 = *(void *)(v28 + 64);
  }
  uint64_t v30 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v31 = v10 | v30;
  uint64_t v32 = ((v10 | v30) + 32) & ~(v10 | v30);
  uint64_t v33 = v16 + v10 + 1;
  uint64_t v34 = v30 + 16;
  if (v18) {
    size_t v35 = *(void *)(v17 + 64);
  }
  else {
    size_t v35 = *(void *)(v17 + 64) + 1;
  }
  unint64_t v36 = v35 + ((v30 + 16 + ((v16 + 8 + (v33 & ~v10)) & 0xFFFFFFFFFFFFFFF8)) & ~v30) + 7;
  uint64_t v37 = *(unsigned __int8 *)(v23 + 80);
  unint64_t v38 = v32 + v37 + (v36 & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v39 = *(_DWORD *)(v66 + 80) & 0xF8 | 7;
  uint64_t v40 = *(_DWORD *)(v28 + 80) & 0xF8 | 7;
  size_t v41 = ((v29 + ((v67 + v40 + ((*(void *)(v23 + 64) + v39 + (v38 & ~v37)) & ~v39) + 1) & ~v40) + 40) & 0xFFFFFFFFFFFFFFF8)
      + 9;
  char v42 = 8 * v41;
  if (v68 < a3)
  {
    if (v41 <= 3) {
      unsigned int v43 = ((a3 - v68 + 255) >> v42) + 1;
    }
    else {
      unsigned int v43 = 2;
    }
    if (v43 >= 0x10000) {
      int v44 = 4;
    }
    else {
      int v44 = 2;
    }
    if (v43 < 0x100) {
      int v44 = 1;
    }
    if (v43 >= 2) {
      int v27 = v44;
    }
    else {
      int v27 = 0;
    }
  }
  if (v68 < a2)
  {
    int v45 = v27;
    unsigned int v46 = (~v68 + a2) >> v42;
    if (v41 < 4) {
      int v47 = v46 + 1;
    }
    else {
      int v47 = 1;
    }
    if (v41 >= 4) {
      unsigned int v48 = ~v68 + a2;
    }
    else {
      unsigned int v48 = (~(_BYTE)v68 + a2);
    }
    bzero(a1, v41);
    if (v41 == 1) {
      *(unsigned char *)a1 = v48;
    }
    else {
      *(_DWORD *)a1 = v48;
    }
    switch(v45)
    {
      case 1:
        *((unsigned char *)a1 + v41) = v47;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v41) = v47;
        return;
      case 3:
        goto LABEL_92;
      case 4:
        *(_DWORD *)((char *)a1 + v41) = v47;
        return;
      default:
        return;
    }
  }
  uint64_t v49 = ~v31;
  uint64_t v50 = ~v30;
  switch(v27)
  {
    case 1:
      *((unsigned char *)a1 + v41) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_59;
    case 2:
      *(_WORD *)((char *)a1 + v41) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_59;
    case 3:
LABEL_92:
      __break(1u);
      JUMPOUT(0x22EE46D5CLL);
    case 4:
      *(_DWORD *)((char *)a1 + v41) = 0;
      goto LABEL_58;
    default:
LABEL_58:
      if (!a2) {
        return;
      }
LABEL_59:
      if (v65 < v64)
      {
        unint64_t v51 = ((unint64_t)a1 + v38) & ~v37;
        uint64_t v52 = a2;
        uint64_t v26 = v64;
        uint64_t v53 = v62;
LABEL_61:
        __swift_storeEnumTagSinglePayload(v51, v52, v26, v53);
        return;
      }
      size_t v54 = (v36 & 0xFFFFFFF8) + v32 + 8;
      if (v65 >= a2 && (unsigned int v55 = a2 + 1, a2 + 1 <= v63))
      {
        if (a2 == -1) {
          return;
        }
        if (v63 == 0x7FFFFFFF)
        {
          if ((v55 & 0x80000000) != 0)
          {
            *a1 = a2 - 0x7FFFFFFF;
            a1[1] = 0;
          }
          else
          {
            a1[1] = a2;
          }
          return;
        }
        unsigned int v56 = (unsigned char *)((v34
                       + ((v16
                         + 8
                         + ((v33 + (((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v31 + 16) & v49)) & ~v10)) & 0xFFFFFFFFFFFFFFF8)) & v50);
        if (v55 <= v61)
        {
          uint64_t v52 = a2 + 2;
          unint64_t v51 = (v34
               + ((v16 + 8 + ((v33 + (((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v31 + 16) & v49)) & ~v10)) & 0xFFFFFFFFFFFFFFF8)) & v50;
          uint64_t v53 = v60;
          goto LABEL_61;
        }
        if (v35 <= 3) {
          int v57 = ~(-1 << (8 * v35));
        }
        else {
          int v57 = -1;
        }
        if (v35)
        {
          int v58 = v57 & (a2 - v61);
          if (v35 <= 3) {
            int v59 = v35;
          }
          else {
            int v59 = 4;
          }
          bzero(v56, v35);
          switch(v59)
          {
            case 2:
              *(_WORD *)unsigned int v56 = v58;
              break;
            case 3:
              *(_WORD *)unsigned int v56 = v58;
              v56[2] = BYTE2(v58);
              break;
            case 4:
              *(_DWORD *)unsigned int v56 = v58;
              break;
            default:
              *unsigned int v56 = v58;
              break;
          }
        }
      }
      else if (v54)
      {
        bzero(a1, v54);
        *(_DWORD *)a1 = a2 - v63;
      }
      return;
  }
}

uint64_t type metadata accessor for RegularProductView()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_22EE46DAC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EE46DF0()
{
  uint64_t v0 = OUTLINED_FUNCTION_162();
  sub_22EADDF00(v0, v1);
  OUTLINED_FUNCTION_162();
  sub_22EB155AC();
  char v3 = v2;
  uint64_t v4 = OUTLINED_FUNCTION_162();
  sub_22EADDB08(v4, v5);
  return v3 & 1;
}

uint64_t sub_22EE46E44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v26[1] = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861CF68);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  v33[0] = type metadata accessor for ProductViewIconWrapper();
  v33[1] = swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  sub_22EE7CEE0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861D050);
  sub_22EE7CEE0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268628310);
  swift_getTupleTypeMetadata2();
  v26[0] = sub_22EE7EE20();
  sub_22EADDD7C(&qword_26861CF88, &qword_26861CF68);
  uint64_t v6 = sub_22EE7CBE0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v9);
  unint64_t v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  unint64_t v14 = (char *)v26 - v13;
  sub_22EE47390(a1, (uint64_t)v33);
  __swift_project_boxed_opaque_existential_1(v33, v33[3]);
  OUTLINED_FUNCTION_0_0();
  __n128 v16 = MEMORY[0x270FA5388](v15);
  (*(void (**)(char *, __n128))(v18 + 16))((char *)v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v16);
  uint64_t v19 = sub_22EE7EDC0();
  int v20 = sub_22EE471C8(v19, v4, v5);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  uint64_t v28 = v4;
  uint64_t v29 = v5;
  uint64_t v30 = v2;
  ((void (*)(uint64_t (*)@<X0>(uint64_t@<X8>), unsigned char *))v20)(sub_22EE497A4, v27);
  swift_release();
  uint64_t v21 = sub_22EADDD7C(&qword_26861CF90, &qword_26861CF68);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v31 = v21;
  uint64_t v32 = WitnessTable;
  uint64_t v23 = swift_getWitnessTable();
  sub_22EB69440(v11, v6, v23);
  unint64_t v24 = *(void (**)(char *, uint64_t))(v8 + 8);
  v24(v11, v6);
  sub_22EB69440(v14, v6, v23);
  return ((uint64_t (*)(char *, uint64_t))v24)(v14, v6);
}

uint64_t (*sub_22EE471C8(uint64_t a1, uint64_t a2, uint64_t a3))@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = (void *)swift_allocObject();
  long long v6[2] = a2;
  v6[3] = a3;
  v6[4] = a1;
  swift_retain();
  return sub_22EE49F6C;
}

uint64_t sub_22EE4723C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  type metadata accessor for ProductViewIconWrapper();
  swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  sub_22EE7CEE0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861D050);
  sub_22EE7CEE0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268628310);
  swift_getTupleTypeMetadata2();
  uint64_t v6 = sub_22EE7EE20();
  unint64_t v7 = sub_22EB28278();
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_22EB25A10(a1, a2, MEMORY[0x263F1B930], v6, v7, WitnessTable, a3);
}

unint64_t sub_22EE47390@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_22EE7CE90();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22EB15D20();
  char v10 = sub_22EE7CE80();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) != 0
    && (uint64_t v11 = v3 + *(int *)(a1 + 56),
        uint64_t v12 = *(void *)v11,
        char v13 = *(unsigned char *)(v11 + 8),
        sub_22EADDF00(*(void *)v11, v13),
        sub_22EB155AC(),
        char v15 = v14,
        sub_22EADDB08(v12, v13),
        (v15 & 1) != 0))
  {
    uint64_t v16 = sub_22EE7D680();
    *(void *)(a2 + 24) = MEMORY[0x263F187D0];
    unint64_t result = sub_22EB281E8();
    *(void *)(a2 + 32) = result;
    uint64_t v18 = 0x4010000000000000;
  }
  else
  {
    uint64_t v16 = sub_22EE7D530();
    *(void *)(a2 + 24) = MEMORY[0x263F18750];
    unint64_t result = sub_22EB27FDC();
    *(void *)(a2 + 32) = result;
    uint64_t v18 = 0x4028000000000000;
  }
  *(void *)a2 = v16;
  *(void *)(a2 + 8) = v18;
  *(unsigned char *)(a2 + 16) = 0;
  return result;
}

uint64_t sub_22EE4750C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v93 = a4;
  uint64_t v90 = type metadata accessor for ProductViewWrapperFrameModifier();
  MEMORY[0x270FA5388](v90);
  unsigned int v91 = (uint64_t *)((char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628318);
  MEMORY[0x270FA5388](v8 - 8);
  int v85 = (uint64_t *)((char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628320);
  MEMORY[0x270FA5388](v84);
  uint64_t v87 = (uint64_t)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628310);
  MEMORY[0x270FA5388](v88);
  uint64_t v92 = (uint64_t)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v89 = (uint64_t)&v72 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861CFC8);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_22EE7CFC0();
  uint64_t v74 = *(void *)(v73 - 8);
  MEMORY[0x270FA5388](v73);
  uint64_t v18 = (char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for ProductViewIconWrapper();
  uint64_t v72 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v72 - v20;
  uint64_t WitnessTable = swift_getWitnessTable();
  *(void *)&v104[0] = v19;
  *((void *)&v104[0] + 1) = WitnessTable;
  uint64_t v75 = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v78 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v25 = (char *)&v72 - v24;
  uint64_t v26 = sub_22EE7CEE0();
  uint64_t v79 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  unint64_t v77 = (char *)&v72 - v27;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861D050);
  uint64_t v80 = sub_22EE7CEE0();
  uint64_t v81 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  unsigned int v83 = (char *)&v72 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v76 = (char *)&v72 - v30;
  MEMORY[0x270FA5388](v31);
  unsigned int v82 = (char *)&v72 - v32;
  uint64_t v96 = a2;
  uint64_t v97 = a3;
  uint64_t v98 = a1;
  uint64_t v94 = a2;
  uint64_t v95 = a3;
  sub_22EBD91B0((uint64_t (*)(uint64_t))sub_22EE497F8, (uint64_t)v21);
  uint64_t v86 = a1;
  sub_22EADAD08(a1, (uint64_t)v16, &qword_26861CFC8);
  uint64_t v33 = type metadata accessor for ProductViewConfiguration(0);
  LODWORD(a2) = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v33);
  sub_22EADAC74((uint64_t)v16, &qword_26861CFC8);
  if (a2 == 1)
  {
    sub_22EE7CFB0();
    uint64_t v34 = v73;
  }
  else
  {
    *(void *)&v104[0] = MEMORY[0x263F8EE78];
    sub_22EE4AA04((unint64_t *)&qword_26861D078, MEMORY[0x263F18FF8]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26861D080);
    sub_22EADDD7C(&qword_26861D088, &qword_26861D080);
    uint64_t v34 = v73;
    sub_22EE80110();
  }
  uint64_t v35 = v75;
  sub_22EE7E6E0();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v18, v34);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v21, v19);
  uint64_t v36 = type metadata accessor for RegularProductView();
  uint64_t v37 = v86;
  uint64_t v38 = v86 + *(int *)(v36 + 52);
  uint64_t v39 = *(void *)v38;
  char v40 = *(unsigned char *)(v38 + 8);
  sub_22EADDF00(*(void *)v38, v40);
  sub_22EB155AC();
  char v42 = v41;
  sub_22EADDB08(v39, v40);
  uint64_t v43 = 0x4056000000000000;
  if (v42) {
    uint64_t v43 = 0x405A400000000000;
  }
  v104[0] = xmmword_22EE881E0;
  v104[1] = xmmword_22EE881E0;
  v104[2] = xmmword_22EE881E0;
  v104[3] = xmmword_22EEA2C30;
  uint64_t v105 = v43;
  long long v106 = xmmword_22EEA2C40;
  __int16 v107 = 0;
  uint64_t v102 = v19;
  uint64_t v103 = v35;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v45 = sub_22EB284EC(OpaqueTypeMetadata2, OpaqueTypeConformance2);
  unsigned int v46 = v77;
  sub_22EBB497C((uint64_t)v104, v45, v47, OpaqueTypeMetadata2, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v25, OpaqueTypeMetadata2);
  unint64_t v48 = sub_22EB277E4();
  v101[4] = OpaqueTypeConformance2;
  v101[5] = v48;
  uint64_t v49 = swift_getWitnessTable();
  uint64_t v50 = v76;
  sub_22EE7E310();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v46, v26);
  uint64_t v51 = sub_22EADDD7C(&qword_26861D048, &qword_26861D050);
  v101[2] = v49;
  v101[3] = v51;
  uint64_t v52 = v80;
  uint64_t v78 = swift_getWitnessTable();
  uint64_t v53 = v82;
  sub_22EB69440(v50, v52, v78);
  uint64_t v54 = v81;
  uint64_t v79 = *(void *)(v81 + 8);
  ((void (*)(char *, uint64_t))v79)(v50, v52);
  uint64_t v55 = sub_22EE7D680();
  uint64_t v56 = (uint64_t)v85;
  *int v85 = v55;
  *(void *)(v56 + 8) = 0;
  *(unsigned char *)(v56 + 16) = 0;
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628328);
  sub_22EE48194(v37, v94, v95, (char *)(v56 + *(int *)(v57 + 44)));
  sub_22EB27AB4();
  uint64_t v58 = sub_22EE7D6A0();
  uint64_t v59 = v87;
  sub_22EADAD08(v56, v87, &qword_268628318);
  uint64_t v60 = (uint64_t *)(v59 + *(int *)(v84 + 36));
  *uint64_t v60 = v58;
  v60[1] = (uint64_t)sub_22EB273B0;
  v60[2] = 0;
  sub_22EADAC74(v56, &qword_268628318);
  uint64_t v61 = *(void *)v38;
  LOBYTE(v49) = *(unsigned char *)(v38 + 8);
  sub_22EADDF00(*(void *)v38, v49);
  sub_22EB155AC();
  LOBYTE(v56) = v62;
  sub_22EADDB08(v61, v49);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v64 = (uint64_t)v91;
  *unsigned int v91 = KeyPath;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDE0);
  swift_storeEnumTagMultiPayload();
  *(unsigned char *)(v64 + *(int *)(v90 + 20)) = v56 & 1;
  uint64_t v65 = v92;
  sub_22EADAD08(v59, v92, &qword_268628320);
  uint64_t v66 = v88;
  sub_22EE49ED0(v64, v65 + *(int *)(v88 + 36), (void (*)(void))type metadata accessor for ProductViewWrapperFrameModifier);
  sub_22EADAC74(v59, &qword_268628320);
  uint64_t v67 = v89;
  sub_22EADAE38(v65, v89, &qword_268628310);
  unsigned int v68 = v83;
  (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v83, v53, v52);
  uint64_t v102 = (uint64_t)v68;
  sub_22EADAD08(v67, v65, &qword_268628310);
  uint64_t v103 = v65;
  v101[0] = v52;
  v101[1] = v66;
  uint64_t v99 = v78;
  unint64_t v100 = sub_22EE49ABC();
  sub_22ED82348((uint64_t)&v102, 2, (uint64_t)v101);
  sub_22EADAC74(v67, &qword_268628310);
  uint64_t v69 = v53;
  uint64_t v70 = (uint64_t (*)(char *, uint64_t))v79;
  ((void (*)(char *, uint64_t))v79)(v69, v52);
  sub_22EADAC74(v65, &qword_268628310);
  return v70(v68, v52);
}

uint64_t sub_22EE4809C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for RegularProductView();
  sub_22EB69440(a1 + *(int *)(v9 + 36), a2, a3);
  sub_22EB69440(v8, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a2);
}

uint64_t sub_22EE48194@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v102 = a2;
  unint64_t v124 = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861CFC8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v120 = (uint64_t)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861D090);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v121 = (uint64_t)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861D098);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v123 = (uint64_t)&v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  unsigned int v119 = (uint64_t *)((char *)&v93 - v13);
  MEMORY[0x270FA5388](v14);
  uint64_t v122 = (uint64_t)&v93 - v15;
  uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628350);
  MEMORY[0x270FA5388](v116);
  uint64_t v117 = (double *)((char *)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v101 = sub_22EE7E050();
  uint64_t v99 = *(void *)(v101 - 8);
  MEMORY[0x270FA5388](v101);
  uint64_t v96 = (char *)&v93 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v98 = (char *)&v93 - v19;
  uint64_t v94 = type metadata accessor for ProductViewAXTypeStyleButtonSpacer();
  MEMORY[0x270FA5388](v94);
  uint64_t v97 = (uint64_t *)((char *)&v93 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861CF78);
  MEMORY[0x270FA5388](v114);
  uint64_t v95 = (uint64_t)&v93 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v100 = (uint64_t)&v93 - v23;
  uint64_t v24 = sub_22EE7CE90();
  uint64_t v112 = *(void *)(v24 - 8);
  uint64_t v113 = v24;
  MEMORY[0x270FA5388](v24);
  uint64_t v111 = (char *)&v93 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628358);
  MEMORY[0x270FA5388](v26 - 8);
  uint64_t v118 = (uint64_t)&v93 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v125 = (uint64_t)&v93 - v29;
  uint64_t v110 = sub_22EE7DC20();
  uint64_t v109 = *(void *)(v110 - 8);
  MEMORY[0x270FA5388](v110);
  unint64_t v108 = (char *)&v93 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628360);
  uint64_t v32 = v31 - 8;
  MEMORY[0x270FA5388](v31);
  uint64_t v34 = (uint64_t *)((char *)&v93 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628368) - 8;
  MEMORY[0x270FA5388](v105);
  uint64_t v36 = (char *)&v93 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628370);
  MEMORY[0x270FA5388](v106);
  uint64_t v38 = (char *)&v93 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628378);
  uint64_t v107 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v115 = (char *)&v93 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v41);
  unint64_t v104 = (char *)&v93 - v42;
  MEMORY[0x270FA5388](v43);
  unsigned int v126 = (char *)&v93 - v44;
  uint64_t v103 = type metadata accessor for RegularProductView();
  sub_22EE48EC4(v103, v127);
  uint64_t v45 = __swift_project_boxed_opaque_existential_1(v127, v127[3]);
  __n128 v46 = MEMORY[0x270FA5388](v45);
  (*(void (**)(char *, __n128))(v48 + 16))((char *)&v93 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0), v46);
  uint64_t v49 = sub_22EE7EDC0();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v127);
  *uint64_t v34 = v49;
  sub_22EE49108(a1, v102, a3, (uint64_t)v34 + *(int *)(v32 + 52));
  uint64_t KeyPath = swift_getKeyPath();
  sub_22EADAD08((uint64_t)v34, (uint64_t)v36, &qword_268628360);
  uint64_t v51 = (uint64_t *)&v36[*(int *)(v105 + 44)];
  *uint64_t v51 = KeyPath;
  v51[1] = 0;
  sub_22EADAC74((uint64_t)v34, &qword_268628360);
  uint64_t v52 = swift_getKeyPath();
  sub_22EADAD08((uint64_t)v36, (uint64_t)v38, &qword_268628368);
  uint64_t v53 = &v38[*(int *)(v106 + 36)];
  *(void *)uint64_t v53 = v52;
  v53[8] = 0;
  uint64_t v54 = (uint64_t)v36;
  uint64_t v55 = v103;
  sub_22EADAC74(v54, &qword_268628368);
  uint64_t v56 = v108;
  sub_22EE7DC00();
  sub_22EE49C18();
  uint64_t v57 = v104;
  sub_22EE7E410();
  (*(void (**)(char *, uint64_t))(v109 + 8))(v56, v110);
  uint64_t v58 = (uint64_t)v38;
  uint64_t v59 = a1;
  sub_22EADAC74(v58, &qword_268628370);
  uint64_t v60 = v107;
  uint64_t v61 = v57;
  uint64_t v62 = v39;
  (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v126, v61, v39);
  unsigned int v63 = v111;
  sub_22EB15D20();
  LOBYTE(v56) = sub_22EE7CE80();
  (*(void (**)(char *, uint64_t))(v112 + 8))(v63, v113);
  if (v56)
  {
    uint64_t v64 = swift_getKeyPath();
    uint64_t v65 = (uint64_t)v97;
    *uint64_t v97 = v64;
    *(unsigned char *)(v65 + 8) = 0;
    *(void *)(v65 + 16) = swift_getKeyPath();
    *(unsigned char *)(v65 + 24) = 0;
    uint64_t v66 = v99;
    uint64_t v67 = v98;
    uint64_t v68 = v101;
    (*(void (**)(char *, void, uint64_t))(v99 + 104))(v98, *MEMORY[0x263F1A718], v101);
    v127[0] = 0x4024000000000000;
    (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v96, v67, v68);
    sub_22EACA830();
    sub_22EE7C8E0();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v68);
    uint64_t v69 = v95;
    sub_22EE4A884(v65, v95, (void (*)(void))type metadata accessor for ProductViewAXTypeStyleButtonSpacer);
    *(void *)(v69 + *(int *)(v114 + 36)) = 0xBFF0000000000000;
    sub_22EE4A8D8(v65, (void (*)(void))type metadata accessor for ProductViewAXTypeStyleButtonSpacer);
    uint64_t v70 = v100;
    sub_22EADAE38(v69, v100, &qword_26861CF78);
    sub_22EADAD08(v70, (uint64_t)v117, &qword_26861CF78);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2686283A8);
    sub_22EB27E04();
    sub_22EE49E1C();
    uint64_t v71 = v125;
    sub_22EE7D800();
    sub_22EADAC74(v70, &qword_26861CF78);
  }
  else
  {
    double v72 = sub_22EE49644(v55);
    uint64_t v73 = v117;
    *uint64_t v117 = v72;
    *((unsigned char *)v73 + 8) = 0;
    v73[2] = -1.0;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2686283A8);
    sub_22EB27E04();
    sub_22EE49E1C();
    uint64_t v71 = v125;
    sub_22EE7D800();
  }
  uint64_t v74 = v120;
  sub_22EADAD08(v59, v120, &qword_26861CFC8);
  uint64_t v75 = type metadata accessor for ProductViewConfiguration(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v74, 1, v75);
  uint64_t v77 = v121;
  if (EnumTagSinglePayload == 1)
  {
    sub_22EADAC74(v74, &qword_26861CFC8);
    uint64_t v78 = 1;
  }
  else
  {
    sub_22EE4A884(v74 + *(int *)(v75 + 24), v121, (void (*)(void))type metadata accessor for ProductViewButtonConfiguration);
    sub_22EE4A8D8(v74, (void (*)(void))type metadata accessor for ProductViewConfiguration);
    uint64_t v78 = 0;
  }
  uint64_t v79 = type metadata accessor for ProductViewButtonConfiguration(0);
  __swift_storeEnumTagSinglePayload(v77, v78, 1, v79);
  uint64_t v80 = v119;
  sub_22EC42174(v77, v119);
  uint64_t v81 = v122;
  sub_22EADAE38((uint64_t)v80, v122, &qword_26861D098);
  unsigned int v82 = *(void (**)(char *, char *, uint64_t))(v60 + 16);
  unsigned int v83 = v115;
  uint64_t v84 = v126;
  uint64_t v85 = v62;
  v82(v115, v126, v62);
  uint64_t v86 = v71;
  uint64_t v87 = v118;
  sub_22EADAD08(v86, v118, &qword_268628358);
  uint64_t v88 = v123;
  sub_22EADAD08(v81, v123, &qword_26861D098);
  uint64_t v89 = v124;
  v82(v124, v83, v85);
  uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686283B8);
  sub_22EADAD08(v87, (uint64_t)&v89[*(int *)(v90 + 48)], &qword_268628358);
  sub_22EADAD08(v88, (uint64_t)&v89[*(int *)(v90 + 64)], &qword_26861D098);
  sub_22EADAC74(v81, &qword_26861D098);
  sub_22EADAC74(v125, &qword_268628358);
  unsigned int v91 = *(void (**)(char *, uint64_t))(v60 + 8);
  v91(v84, v85);
  sub_22EADAC74(v88, &qword_26861D098);
  sub_22EADAC74(v87, &qword_268628358);
  return ((uint64_t (*)(char *, uint64_t))v91)(v83, v85);
}

unint64_t sub_22EE48EC4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861CFC8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_22EE7CE90();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22EB15D20();
  char v13 = sub_22EE7CE80();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if ((v13 & 1) != 0
    && (uint64_t v14 = v3 + *(int *)(a1 + 56),
        uint64_t v15 = *(void *)v14,
        char v16 = *(unsigned char *)(v14 + 8),
        sub_22EADDF00(*(void *)v14, v16),
        sub_22EB155AC(),
        char v18 = v17,
        sub_22EADDB08(v15, v16),
        (v18 & 1) != 0))
  {
    sub_22EADAD08(v3, (uint64_t)v8, &qword_26861CFC8);
    uint64_t v19 = type metadata accessor for ProductViewConfiguration(0);
    int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v19);
    sub_22EADAC74((uint64_t)v8, &qword_26861CFC8);
    uint64_t v21 = sub_22EE7D680();
    if (EnumTagSinglePayload == 1) {
      uint64_t v22 = 0x4010000000000000;
    }
    else {
      uint64_t v22 = 0;
    }
    a2[3] = MEMORY[0x263F187D0];
    unint64_t result = sub_22EB281E8();
    a2[4] = result;
    *a2 = v21;
    a2[1] = v22;
    uint64_t v24 = a2 + 2;
  }
  else
  {
    uint64_t v25 = sub_22EE7D680();
    a2[3] = &type metadata for TotalLineLimitLayout;
    a2[4] = sub_22EB2818C();
    unint64_t result = swift_allocObject();
    *a2 = result;
    *(void *)(result + 16) = 3;
    *(void *)(result + 24) = v25;
    *(void *)(result + 32) = 0x4000000000000000;
    *(void *)(result + 40) = 0;
    *(unsigned char *)(result + 48) = 0;
    uint64_t v24 = (unsigned char *)(result + 64);
    *(void *)(result + 56) = 0x4010000000000000;
  }
  *uint64_t v24 = 0;
  return result;
}

uint64_t sub_22EE49108@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v49 = a3;
  uint64_t v51 = a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861D0B8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v52 = (uint64_t)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v45 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861CFC8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v47 = (uint64_t)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v45 - v13;
  MEMORY[0x270FA5388](v15);
  char v17 = (uint64_t *)((char *)&v45 - v16);
  uint64_t v50 = type metadata accessor for ProductViewText(0);
  MEMORY[0x270FA5388](v50);
  uint64_t v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v46 = (uint64_t)&v45 - v21;
  MEMORY[0x270FA5388](v22);
  uint64_t v45 = (uint64_t)&v45 - v23;
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v45 - v25;
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (char *)&v45 - v28;
  sub_22EADAD08(a1, (uint64_t)v17, &qword_26861CFC8);
  uint64_t v30 = type metadata accessor for ProductViewConfiguration(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v30) == 1)
  {
    sub_22EADAC74((uint64_t)v17, &qword_26861CFC8);
    uint64_t v31 = 0;
    uint64_t v32 = 0;
  }
  else
  {
    uint64_t v31 = *v17;
    uint64_t v32 = v17[1];
    swift_bridgeObjectRetain();
    sub_22EE4A8D8((uint64_t)v17, (void (*)(void))type metadata accessor for ProductViewConfiguration);
  }
  memset(v53, 0, sizeof(v53));
  uint64_t v33 = 1;
  char v54 = 1;
  sub_22EC10F28(v31, v32, 0, 0, 0, (uint64_t)v53, 0, 0, (uint64_t)v26);
  sub_22EE49ED0((uint64_t)v26, (uint64_t)v29, (void (*)(void))type metadata accessor for ProductViewText);
  type metadata accessor for RegularProductView();
  if (sub_22EE46DF0())
  {
    sub_22EADAD08(a1, (uint64_t)v14, &qword_26861CFC8);
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v30) == 1)
    {
      sub_22EADAC74((uint64_t)v14, &qword_26861CFC8);
    }
    else
    {
      uint64_t v34 = *((void *)v14 + 2);
      unint64_t v35 = *((void *)v14 + 3);
      swift_bridgeObjectRetain();
      sub_22EE4A8D8((uint64_t)v14, (void (*)(void))type metadata accessor for ProductViewConfiguration);
      LOBYTE(v34) = sub_22ED75CF8(v34, v35);
      swift_bridgeObjectRelease();
      if (v34) {
        goto LABEL_12;
      }
    }
    uint64_t v36 = v47;
    sub_22EADAD08(a1, v47, &qword_26861CFC8);
    if (__swift_getEnumTagSinglePayload(v36, 1, v30) == 1)
    {
      sub_22EADAC74(v36, &qword_26861CFC8);
      uint64_t v37 = 0;
      uint64_t v38 = 0;
    }
    else
    {
      uint64_t v37 = *(void *)(v36 + 16);
      uint64_t v38 = *(void *)(v36 + 24);
      swift_bridgeObjectRetain();
      sub_22EE4A8D8(v36, (void (*)(void))type metadata accessor for ProductViewConfiguration);
    }
    uint64_t v39 = v46;
    sub_22EC10F28(v37, v38, 1, 0, 0, (uint64_t)v53, 0, 0, v46);
    uint64_t v40 = v45;
    sub_22EE49ED0(v39, v45, (void (*)(void))type metadata accessor for ProductViewText);
    sub_22EE49ED0(v40, (uint64_t)v9, (void (*)(void))type metadata accessor for ProductViewText);
    uint64_t v33 = 0;
  }
LABEL_12:
  __swift_storeEnumTagSinglePayload((uint64_t)v9, v33, 1, v50);
  sub_22EE4A884((uint64_t)v29, (uint64_t)v19, (void (*)(void))type metadata accessor for ProductViewText);
  uint64_t v41 = v52;
  sub_22EADAD08((uint64_t)v9, v52, &qword_26861D0B8);
  uint64_t v42 = v51;
  sub_22EE4A884((uint64_t)v19, v51, (void (*)(void))type metadata accessor for ProductViewText);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E5C0);
  sub_22EADAD08(v41, v42 + *(int *)(v43 + 48), &qword_26861D0B8);
  sub_22EADAC74((uint64_t)v9, &qword_26861D0B8);
  sub_22EE4A8D8((uint64_t)v29, (void (*)(void))type metadata accessor for ProductViewText);
  sub_22EADAC74(v41, &qword_26861D0B8);
  return sub_22EE4A8D8((uint64_t)v19, (void (*)(void))type metadata accessor for ProductViewText);
}

double sub_22EE49644(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_22EE7CE90();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22EB15D20();
  char v8 = sub_22EE7CE80();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0
    || (uint64_t v9 = v2 + *(int *)(a1 + 56),
        uint64_t v10 = *(void *)v9,
        char v11 = *(unsigned char *)(v9 + 8),
        sub_22EADDF00(*(void *)v9, v11),
        sub_22EB155AC(),
        char v13 = v12,
        sub_22EADDB08(v10, v11),
        (v13 & 1) == 0))
  {
    uint64_t v14 = v2 + *(int *)(a1 + 52);
    uint64_t v15 = *(void *)v14;
    char v16 = *(unsigned char *)(v14 + 8);
    sub_22EADDF00(*(void *)v14, v16);
    sub_22EB155AC();
    sub_22EADDB08(v15, v16);
  }
  return 4.0;
}

uint64_t sub_22EE497A4@<X0>(uint64_t a1@<X8>)
{
  return sub_22EE4750C(v1[4], v1[2], v1[3], a1);
}

uint64_t type metadata accessor for ProductViewWrapperFrameModifier()
{
  uint64_t result = qword_2686283C0;
  if (!qword_2686283C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_22EE497F8()
{
  return sub_22EE4809C(v0[4], v0[2], v0[3]);
}

uint64_t sub_22EE49804@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_22EE7CE90();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for LayoutMetrics(0);
  MEMORY[0x270FA5388](v9 - 8);
  char v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686283D0);
  uint64_t v13 = v12 - 8;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for ProductViewWrapperFrameModifier();
  uint64_t v17 = 0x4056000000000000;
  if (*(unsigned char *)(v2 + *(int *)(v16 + 20))) {
    uint64_t v17 = 0x405A400000000000;
  }
  sub_22EAC9DBC(0, 1, 0, 1, 0, 1, 0x4056000000000000, 0, (uint64_t)v11, v17, 0, 0x405A400000000000, 0, v27, 1);
  sub_22EB15D20();
  char v18 = sub_22EE7CE80();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v19 = sub_22EE7ED70();
  uint64_t v21 = v20;
  uint64_t v22 = (uint64_t)&v15[*(int *)(v13 + 44)];
  sub_22EE4A884((uint64_t)v11, v22, (void (*)(void))type metadata accessor for LayoutMetrics);
  uint64_t v23 = type metadata accessor for LayoutMetricsModifier(0);
  *(unsigned char *)(v22 + *(int *)(v23 + 20)) = (v18 & 1) == 0;
  uint64_t v24 = (uint64_t *)(v22 + *(int *)(v23 + 24));
  *uint64_t v24 = v19;
  v24[1] = v21;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686283D8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v15, a1, v25);
  sub_22EE4A8D8((uint64_t)v11, (void (*)(void))type metadata accessor for LayoutMetrics);
  return sub_22EADAE38((uint64_t)v15, a2, &qword_2686283D0);
}

unint64_t sub_22EE49ABC()
{
  unint64_t result = qword_268628330;
  if (!qword_268628330)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268628310);
    sub_22EE49B68();
    sub_22EE4AA04(&qword_268628348, (void (*)(uint64_t))type metadata accessor for ProductViewWrapperFrameModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628330);
  }
  return result;
}

unint64_t sub_22EE49B68()
{
  unint64_t result = qword_268628338;
  if (!qword_268628338)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268628320);
    sub_22EADDD7C(&qword_268628340, &qword_268628318);
    sub_22EB27DA4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628338);
  }
  return result;
}

unint64_t sub_22EE49C18()
{
  unint64_t result = qword_268628380;
  if (!qword_268628380)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268628370);
    sub_22EE49CB8();
    sub_22EADDD7C(&qword_26861D020, &qword_26861D028);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628380);
  }
  return result;
}

unint64_t sub_22EE49CB8()
{
  unint64_t result = qword_268628388;
  if (!qword_268628388)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268628368);
    sub_22EE49D58();
    sub_22EADDD7C(&qword_26861D010, &qword_26861D018);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628388);
  }
  return result;
}

unint64_t sub_22EE49D58()
{
  unint64_t result = qword_268628390;
  if (!qword_268628390)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268628360);
    sub_22EADDD7C(&qword_26861CF90, &qword_26861CF68);
    sub_22EADDD7C(&qword_268628398, &qword_2686283A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628390);
  }
  return result;
}

unint64_t sub_22EE49E1C()
{
  unint64_t result = qword_2686283B0;
  if (!qword_2686283B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686283A8);
    sub_22EADDD7C(&qword_26861D048, &qword_26861D050);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686283B0);
  }
  return result;
}

uint64_t sub_22EE49ED0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_2_0();
  uint64_t v4 = OUTLINED_FUNCTION_17_0();
  v5(v4);
  return a2;
}

uint64_t sub_22EE49F24()
{
  return swift_deallocObject();
}

uint64_t sub_22EE49F34()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_22EE49F6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_22EE4723C(a1, a2, a3);
}

void *sub_22EE49F78(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDE0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_22EE7CE90();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_22EE4A094(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_22EE7CE90();
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    return swift_release();
  }
}

void *sub_22EE4A138(void *a1, void *a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_22EE7CE90();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_22EE4A204(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_22EADAC74((uint64_t)a1, &qword_26861BDE0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDE0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_22EE7CE90();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_22EE4A2E8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_22EE7CE90();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_22EE4A3BC(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_22EADAC74((uint64_t)a1, &qword_26861BDE0);
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDE0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_22EE7CE90();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_22EE4A4A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EE4A4BC);
}

uint64_t sub_22EE4A4BC(uint64_t a1, int a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861C7F8);
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v6 + 84) == a2)
  {
    uint64_t v7 = OUTLINED_FUNCTION_162();
    return __swift_getEnumTagSinglePayload(v7, v8, v9);
  }
  else
  {
    unsigned int v11 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v11 >= 2) {
      return ((v11 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_22EE4A558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EE4A56C);
}

void sub_22EE4A56C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861C7F8);
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
}

void sub_22EE4A5F8()
{
  sub_22EB24C50(319, (unint64_t *)&qword_26861C818, MEMORY[0x263F18D80], MEMORY[0x263F185C8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_22EE4A6BC()
{
  return swift_getWitnessTable();
}

uint64_t sub_22EE4A868()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EE4A884(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_2_0();
  uint64_t v4 = OUTLINED_FUNCTION_16_0();
  v5(v4);
  return a2;
}

uint64_t sub_22EE4A8D8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_2_0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

unint64_t sub_22EE4A934()
{
  unint64_t result = qword_2686283E0;
  if (!qword_2686283E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686283D0);
    sub_22EADDD7C(&qword_2686283E8, &qword_2686283D8);
    sub_22EE4AA04(&qword_26861CF98, (void (*)(uint64_t))type metadata accessor for LayoutMetricsModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686283E0);
  }
  return result;
}

uint64_t sub_22EE4AA04(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

uint64_t AuditToken.rawValue.setter(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *uint64_t v4 = result;
  v4[1] = a2;
  _OWORD v4[2] = a3;
  v4[3] = a4;
  return result;
}

uint64_t (*AuditToken.rawValue.modify())(void)
{
  return nullsub_1;
}

uint64_t AuditToken.init<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = static AuditToken.decode<A>(data:)();
  if (!v3) {
    uint64_t v2 = v6;
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
  return v2;
}

uint64_t static AuditToken.decode<A>(data:)()
{
  uint64_t v4 = *MEMORY[0x263EF8340];
  sub_22EE4ACA0((uint64_t)v3, 1, &v2);
  if (v0) {
    return swift_willThrow();
  }
  else {
    return v2;
  }
}

uint64_t AuditToken.data.getter()
{
  return 0x2000000000;
}

uint64_t sub_22EE4ACA0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  if (!result)
  {
    sub_22EE4AFF0();
    swift_allocError();
    *(void *)uint64_t v7 = 0;
    *(void *)(v7 + 8) = 0;
    *(unsigned char *)(v7 + 16) = 1;
    return swift_willThrow();
  }
  if ((unint64_t)(a2 - 0x400000000000000) >> 59 == 31)
  {
    uint64_t v4 = (_OWORD *)result;
    uint64_t v5 = 32 * a2;
    if (32 * a2 == sub_22EE7FE70())
    {
      uint64_t result = sub_22EE7C030();
      long long v6 = v4[1];
      *a3 = *v4;
      a3[1] = v6;
      return result;
    }
    uint64_t v8 = sub_22EE7FE70();
    sub_22EE4AFF0();
    swift_allocError();
    *(void *)uint64_t v9 = v5;
    *(void *)(v9 + 8) = v8;
    *(unsigned char *)(v9 + 16) = 0;
    return swift_willThrow();
  }
  __break(1u);
  return result;
}

__n128 sub_22EE4ADC4@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v3;
  *(unsigned char *)(a2 + 32) = 0;
  return result;
}

__n128 sub_22EE4ADD4@<Q0>(_OWORD *a1@<X8>)
{
  __n128 result = *(__n128 *)v1;
  long long v3 = *(_OWORD *)(v1 + 16);
  *a1 = *(_OWORD *)v1;
  a1[1] = v3;
  return result;
}

uint64_t variable initialization expression of ClientOverride.requestAuditTokenData()
{
  return 0;
}

uint64_t variable initialization expression of ClientOverride.requestBundleID()
{
  return 0;
}

uint64_t variable initialization expression of ClientOverride.requestBundleVersion()
{
  return 0;
}

uint64_t variable initialization expression of ClientOverride.storeExternalVersion()
{
  return 0;
}

uint64_t variable initialization expression of ClientOverride.storeItemID()
{
  return 0;
}

uint64_t variable initialization expression of ClientOverride.vendorID@<X0>(uint64_t a1@<X8>)
{
  return sub_22EE4AE54(MEMORY[0x263F07508], a1);
}

uint64_t variable initialization expression of ExternalGatewaySheetRequest.options()
{
  return 0;
}

uint64_t variable initialization expression of AcknowledgeMessageRequest.clientOverride@<X0>(uint64_t a1@<X8>)
{
  return sub_22EE4AE54(type metadata accessor for ClientOverride, a1);
}

uint64_t sub_22EE4AE54@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1(0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);

  return v4(a2, 1, 1, v3);
}

__n128 __swift_memcpy32_4_0(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

ValueMetadata *type metadata accessor for AuditToken()
{
  return &type metadata for AuditToken;
}

__n128 __swift_memcpy17_8_0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for AuditTokenDecodingError(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AuditTokenDecodingError(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 0;
    *(_DWORD *)__n128 result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 17) = v3;
  return result;
}

uint64_t sub_22EE4AF4C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_22EE4AF68(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 1;
  }
  else
  {
    *(unsigned char *)(result + 16) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for AuditTokenDecodingError()
{
  return &type metadata for AuditTokenDecodingError;
}

void _s3__C13audit_token_tVMa_0()
{
  if (!qword_268628400)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_268628400);
    }
  }
}

unint64_t sub_22EE4AFF0()
{
  unint64_t result = qword_268628408;
  if (!qword_268628408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628408);
  }
  return result;
}

uint64_t sub_22EE4B050()
{
  uint64_t result = 0x6974616D6F747561;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x69746375646F7270;
      break;
    case 2:
      uint64_t result = 0x786F62646E6173;
      break;
    case 3:
      uint64_t result = 0x73655465646F6378;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22EE4B0E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_22EE510B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22EE4B110()
{
  return 0;
}

void sub_22EE4B11C(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_22EE4B128(uint64_t a1)
{
  unint64_t v2 = sub_22EE4C534();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE4B164(uint64_t a1)
{
  unint64_t v2 = sub_22EE4C534();

  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_22EE4B1A0()
{
  return 0xD000000000000010;
}

uint64_t sub_22EE4B1BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_22EE5128C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_22EE4B1E8(uint64_t a1)
{
  unint64_t v2 = sub_22EE4C5EC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE4B224(uint64_t a1)
{
  unint64_t v2 = sub_22EE4C5EC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ClientOverride.Server.description.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_22EE7C2B0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ClientOverride.Server(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22EE4E72C(v1, (uint64_t)v8, type metadata accessor for ClientOverride.Server);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
  uint64_t v10 = 0x6974616D6F747541;
  switch((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 3, v9))
  {
    case 1u:
      return v10;
    case 2u:
      uint64_t v10 = 0x69746375646F7250;
      break;
    case 3u:
      uint64_t v10 = 0x786F62646E6153;
      break;
    default:
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
      v12[0] = 0x73655465646F6358;
      v12[1] = 0xEA00000000002874;
      sub_22EE4C640(&qword_268628418, MEMORY[0x263F06EA8]);
      sub_22EE80610();
      sub_22EE7FAA0();
      swift_bridgeObjectRelease();
      sub_22EE7FAA0();
      uint64_t v10 = v12[0];
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      break;
  }
  return v10;
}

uint64_t type metadata accessor for ClientOverride.Server(uint64_t a1)
{
  return sub_22EE4D420(a1, (uint64_t *)&unk_268628528);
}

uint64_t sub_22EE4B518(uint64_t a1)
{
  uint64_t v2 = sub_22EE7C2B0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ClientOverride.Server(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22EE4E72C(a1, (uint64_t)v8, type metadata accessor for ClientOverride.Server);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
  uint64_t v10 = 0x6974616D6F747541;
  switch((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 3, v9))
  {
    case 1u:
      break;
    case 2u:
      uint64_t v10 = 0x69746375646F7250;
      break;
    case 3u:
      uint64_t v10 = 0x786F62646E6153;
      break;
    default:
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
      v12[0] = 0x73655465646F6358;
      v12[1] = 0xEA00000000002874;
      sub_22EE4C640(&qword_268628418, MEMORY[0x263F06EA8]);
      sub_22EE80610();
      sub_22EE7FAA0();
      swift_bridgeObjectRelease();
      sub_22EE7FAA0();
      uint64_t v10 = v12[0];
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      break;
  }
  sub_22EE4E794(a1, type metadata accessor for ClientOverride.Server);
  return v10;
}

uint64_t ClientOverride.Server.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v67 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628420);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v58 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628428);
  uint64_t v60 = *(void *)(v5 - 8);
  uint64_t v61 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v57 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628430);
  uint64_t v59 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  uint64_t v62 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_22EE7C2B0();
  uint64_t v68 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  uint64_t v69 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628438);
  uint64_t v65 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  unsigned int v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628440);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628448);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  char v18 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for ClientOverride.Server(0);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v56 = (char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v66 = (uint64_t)&v55 - v22;
  uint64_t v23 = a1[3];
  uint64_t v76 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v23);
  sub_22EE4C534();
  uint64_t v24 = v70;
  sub_22EE80820();
  if (v24)
  {

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
    sub_22EADD81C((uint64_t)v14, &qword_268628440);
  }
  else
  {
    uint64_t v70 = (void *)v9;
    uint64_t v28 = v68;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
    uint64_t v29 = sub_22EE80570();
    if (*(void *)(v29 + 16))
    {
      uint64_t v30 = *(unsigned __int8 *)(v29 + 32);
      swift_bridgeObjectRelease();
      switch(v30)
      {
        case 1:
          (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
          uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
          uint64_t v32 = v66;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v66, 2, 3, v35);
          goto LABEL_13;
        case 2:
          (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
          uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
          uint64_t v32 = v66;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v66, 3, 3, v36);
          goto LABEL_13;
        case 3:
          LOBYTE(v75[0]) = 3;
          sub_22EE4C5EC();
          sub_22EE804F0();
          sub_22EE4C640(&qword_268628468, MEMORY[0x263F06EA8]);
          uint64_t v40 = v64;
          uint64_t v41 = v70;
          sub_22EE80560();
          (*(void (**)(char *, void *))(v65 + 8))(v11, v41);
          (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
          uint64_t v25 = v76;
          uint64_t v32 = v66;
          (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v66, v69, v40);
          uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v32, 0, 3, v42);
          uint64_t v37 = v67;
          goto LABEL_21;
        default:
          (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
          uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
          uint64_t v32 = v66;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v66, 1, 3, v31);
LABEL_13:
          uint64_t v25 = v76;
          uint64_t v37 = v67;
          break;
      }
      goto LABEL_21;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  uint64_t v25 = v76;
  __swift_project_boxed_opaque_existential_1(v76, v76[3]);
  sub_22EE80810();
  __swift_project_boxed_opaque_existential_1(v75, v75[3]);
  uint64_t v26 = sub_22EE80680();
  uint64_t v33 = v26;
  uint64_t v34 = v27;
  if (v26 == 1869903201 && v27 == 0xE400000000000000
    || (sub_22EE80660() & 1) != 0
    || v33 == 0x6974616D6F747561 && v34 == 0xE900000000000063
    || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
    uint64_t v32 = v66;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v66, 1, 3, v38);
  }
  else if (v33 == 1685025392 && v34 == 0xE400000000000000 {
         || (sub_22EE80660() & 1) != 0
  }
         || v33 == 0x69746375646F7270 && v34 == 0xEA00000000006E6FLL
         || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
    uint64_t v32 = v66;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v66, 2, 3, v43);
  }
  else if (v33 == 0x786F62646E6173 && v34 == 0xE700000000000000 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
    uint64_t v32 = v66;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v66, 3, 3, v44);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268628458);
    sub_22EE7C430();
    uint64_t v45 = (uint64_t)v58;
    sub_22EE7C440();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v45, 1, v61) == 1)
    {
      sub_22EADD81C(v45, &qword_268628420);
      uint64_t v46 = sub_22EE80240();
      swift_allocError();
      uint64_t v48 = v47;
      uint64_t v25 = v76;
      __swift_project_boxed_opaque_existential_1(v76, v76[3]);
      sub_22EE80800();
      sub_22EE80220();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v46 - 8) + 104))(v48, *MEMORY[0x263F8DCB8], v46);
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v59 + 8))(v62, v63);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v75);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    }
    uint64_t v49 = v60;
    uint64_t v50 = v57;
    uint64_t v51 = v45;
    uint64_t v52 = v61;
    (*(void (**)(char *, uint64_t, uint64_t))(v60 + 32))(v57, v51, v61);
    swift_getKeyPath();
    sub_22EE7C450();
    swift_release();
    MEMORY[0x230FACD80](v71, v72, v73, v74);
    swift_bridgeObjectRelease();
    uint64_t v53 = (uint64_t)v56;
    sub_22EE7C240();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v52);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v62, v63);
    uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v53, 0, 3, v54);
    uint64_t v32 = v66;
    sub_22EE4C588(v53, v66);
    uint64_t v25 = v76;
  }
  uint64_t v37 = v67;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v75);
LABEL_21:
  sub_22EE4C588(v32, v37);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

unint64_t sub_22EE4C534()
{
  unint64_t result = qword_268628450;
  if (!qword_268628450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628450);
  }
  return result;
}

uint64_t sub_22EE4C588(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClientOverride.Server(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_22EE4C5EC()
{
  unint64_t result = qword_268628460;
  if (!qword_268628460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628460);
  }
  return result;
}

uint64_t sub_22EE4C640(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22EE4C688()
{
  return 0;
}

uint64_t sub_22EE4C694(uint64_t a1)
{
  unint64_t v2 = sub_22EE4CEF8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE4C6D0(uint64_t a1)
{
  unint64_t v2 = sub_22EE4CEF8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_22EE4C70C(uint64_t a1)
{
  unint64_t v2 = sub_22EE4CEA4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE4C748(uint64_t a1)
{
  unint64_t v2 = sub_22EE4CEA4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_22EE4C784@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_22EE4C7B4(uint64_t a1)
{
  unint64_t v2 = sub_22EE4CE50();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE4C7F0(uint64_t a1)
{
  unint64_t v2 = sub_22EE4CE50();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ClientOverride.Server.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628470);
  uint64_t v39 = *(void *)(v2 - 8);
  uint64_t v40 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v36 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_22EE7C2B0();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v41 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628478);
  uint64_t v34 = *(void *)(v6 - 8);
  uint64_t v35 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v33 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628480);
  uint64_t v31 = *(void *)(v8 - 8);
  uint64_t v32 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628488);
  uint64_t v29 = *(void *)(v11 - 8);
  uint64_t v30 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ClientOverride.Server(0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628490);
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22EE4C534();
  sub_22EE80830();
  sub_22EE4E72C(v42, (uint64_t)v16, type metadata accessor for ClientOverride.Server);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
  switch((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v16, 3, v21))
  {
    case 1u:
      char v43 = 0;
      sub_22EE4CEF8();
      sub_22EE80580();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v13, v30);
      goto LABEL_6;
    case 2u:
      char v44 = 1;
      sub_22EE4CEA4();
      sub_22EE80580();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v10, v32);
      goto LABEL_6;
    case 3u:
      char v45 = 2;
      sub_22EE4CE50();
      uint64_t v27 = v33;
      sub_22EE80580();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v27, v35);
LABEL_6:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
      break;
    default:
      uint64_t v23 = v37;
      uint64_t v22 = v38;
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v41, v16, v38);
      char v46 = 3;
      sub_22EE4C5EC();
      uint64_t v24 = v36;
      sub_22EE80580();
      sub_22EE4C640(&qword_268628498, MEMORY[0x263F06EA8]);
      uint64_t v25 = v40;
      sub_22EE805E0();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v24, v25);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v41, v22);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
      break;
  }
  return result;
}

unint64_t sub_22EE4CE50()
{
  unint64_t result = qword_2686284A0;
  if (!qword_2686284A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686284A0);
  }
  return result;
}

unint64_t sub_22EE4CEA4()
{
  unint64_t result = qword_2686284A8;
  if (!qword_2686284A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686284A8);
  }
  return result;
}

unint64_t sub_22EE4CEF8()
{
  unint64_t result = qword_2686284B0;
  if (!qword_2686284B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686284B0);
  }
  return result;
}

uint64_t sub_22EE4CF50@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ClientOverride.Server.init(from:)(a1, a2);
}

uint64_t sub_22EE4CF68(void *a1)
{
  return ClientOverride.Server.encode(to:)(a1);
}

uint64_t ClientOverride.description.getter()
{
  uint64_t v1 = type metadata accessor for ClientOverride.Server(0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_22EE7C3D0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = 0;
  unint64_t v22 = 0xE000000000000000;
  if (*(void *)(v0 + 24))
  {
    uint64_t v19 = 0x2864696272;
    unint64_t v20 = 0xE500000000000000;
    sub_22EE7FAA0();
    sub_22EE7FAA0();
    sub_22EE7FAA0();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0 + 40))
  {
    uint64_t v19 = 0x287372766272;
    unint64_t v20 = 0xE600000000000000;
    sub_22EE7FAA0();
    sub_22EE7FAA0();
    sub_22EE7FAA0();
    swift_bridgeObjectRelease();
  }
  uint64_t v11 = (int *)type metadata accessor for ClientOverride(0);
  uint64_t v12 = (uint64_t *)(v0 + v11[9]);
  if ((v12[1] & 1) == 0)
  {
    uint64_t v13 = *v12;
    uint64_t v19 = 0x2864496D616461;
    unint64_t v20 = 0xE700000000000000;
    uint64_t v18 = v13;
    sub_22EE80610();
    sub_22EE7FAA0();
    swift_bridgeObjectRelease();
    sub_22EE7FAA0();
    sub_22EE7FAA0();
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = (uint64_t *)(v0 + v11[8]);
  if ((v14[1] & 1) == 0)
  {
    uint64_t v15 = *v14;
    uint64_t v19 = 0x6449737256747865;
    unint64_t v20 = 0xE900000000000028;
    uint64_t v18 = v15;
    sub_22EE80610();
    sub_22EE7FAA0();
    swift_bridgeObjectRelease();
    sub_22EE7FAA0();
    sub_22EE7FAA0();
    swift_bridgeObjectRelease();
  }
  sub_22EE4D458(v0 + v11[10], (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_22EADD81C((uint64_t)v6, &qword_2686284B8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    uint64_t v19 = 677669238;
    unint64_t v20 = 0xE400000000000000;
    sub_22EE4C640(&qword_2686284C0, MEMORY[0x263F07508]);
    sub_22EE80610();
    sub_22EE7FAA0();
    swift_bridgeObjectRelease();
    sub_22EE7FAA0();
    sub_22EE7FAA0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  uint64_t v19 = 0x28726576726573;
  unint64_t v20 = 0xE700000000000000;
  sub_22EE4E72C(v0 + v11[7], (uint64_t)v3, type metadata accessor for ClientOverride.Server);
  sub_22EE4B518((uint64_t)v3);
  sub_22EE7FAA0();
  swift_bridgeObjectRelease();
  sub_22EE7FAA0();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t type metadata accessor for ClientOverride(uint64_t a1)
{
  return sub_22EE4D420(a1, (uint64_t *)&unk_268628510);
}

uint64_t sub_22EE4D420(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_22EE4D458(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ClientOverride.requestAuditTokenData.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_22EE4D4F4(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t sub_22EE4D4F4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_22EB71E60(a1, a2);
  }
  return a1;
}

uint64_t ClientOverride.requestAuditTokenData.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_22EB720DC(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t (*ClientOverride.requestAuditTokenData.modify())(void)
{
  return nullsub_1;
}

uint64_t ClientOverride.requestBundleID.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClientOverride.requestBundleID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ClientOverride.requestBundleID.modify())(void)
{
  return nullsub_1;
}

uint64_t ClientOverride.requestBundleVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClientOverride.requestBundleVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*ClientOverride.requestBundleVersion.modify())(void)
{
  return nullsub_1;
}

uint64_t ClientOverride.server.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ClientOverride(0);
  return sub_22EE4E72C(v1 + *(int *)(v3 + 28), a1, type metadata accessor for ClientOverride.Server);
}

uint64_t ClientOverride.server.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ClientOverride(0) + 28);

  return sub_22EE4D700(a1, v3);
}

uint64_t sub_22EE4D700(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClientOverride.Server(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*ClientOverride.server.modify())(void)
{
  return nullsub_1;
}

uint64_t ClientOverride.storeExternalVersion.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for ClientOverride(0) + 32));
}

uint64_t ClientOverride.storeExternalVersion.setter(uint64_t a1, char a2)
{
  uint64_t result = type metadata accessor for ClientOverride(0);
  uint64_t v6 = v2 + *(int *)(result + 32);
  *(void *)uint64_t v6 = a1;
  *(unsigned char *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*ClientOverride.storeExternalVersion.modify())(void)
{
  return nullsub_1;
}

uint64_t ClientOverride.storeItemID.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for ClientOverride(0) + 36));
}

uint64_t ClientOverride.storeItemID.setter(uint64_t a1, char a2)
{
  uint64_t result = type metadata accessor for ClientOverride(0);
  uint64_t v6 = v2 + *(int *)(result + 36);
  *(void *)uint64_t v6 = a1;
  *(unsigned char *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*ClientOverride.storeItemID.modify())(void)
{
  return nullsub_1;
}

uint64_t ClientOverride.vendorID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ClientOverride(0) + 40);

  return sub_22EE4D458(v3, a1);
}

uint64_t ClientOverride.vendorID.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ClientOverride(0) + 40);

  return sub_22EE4D9AC(a1, v3);
}

uint64_t sub_22EE4D9AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*ClientOverride.vendorID.modify())(void)
{
  return nullsub_1;
}

uint64_t ClientOverride.init(requestAuditTokenData:requestBundleID:requestBundleVersion:server:storeItemID:storeExternalVersion:vendorID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, char a10, uint64_t a11, char a12, uint64_t a13)
{
  uint64_t v19 = (int *)type metadata accessor for ClientOverride(0);
  unint64_t v20 = (char *)a9 + v19[8];
  uint64_t v21 = (char *)a9 + v19[9];
  uint64_t v22 = (uint64_t)a9 + v19[10];
  uint64_t v23 = sub_22EE7C3D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 1, 1, v23);
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  sub_22EE4C588(a7, (uint64_t)a9 + v19[7]);
  *(void *)unint64_t v20 = a11;
  v20[8] = a12 & 1;
  *(void *)uint64_t v21 = a8;
  v21[8] = a10 & 1;

  return sub_22EE4D9AC(a13, v22);
}

unint64_t sub_22EE4DBA0(char a1)
{
  unint64_t result = 0xD000000000000015;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x4274736575716572;
      break;
    case 2:
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0x726576726573;
      break;
    case 5:
      unint64_t result = 0x65744965726F7473;
      break;
    case 6:
      unint64_t result = 0x4449726F646E6576;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_22EE4DC98(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_22EE4DCAC()
{
  return sub_22EE807F0();
}

uint64_t sub_22EE4DCF4()
{
  return sub_22EE807C0();
}

unint64_t sub_22EE4DD20()
{
  return sub_22EE4DBA0(*v0);
}

uint64_t sub_22EE4DD28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_22EE51314(a1, a2);
  *a3 = result;
  return result;
}

void sub_22EE4DD50(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_22EE4DD5C(uint64_t a1)
{
  unint64_t v2 = sub_22EE4E0D8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE4DD98(uint64_t a1)
{
  unint64_t v2 = sub_22EE4E0D8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ClientOverride.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686284C8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22EE4E0D8();
  sub_22EE80830();
  long long v11 = *v3;
  v10[15] = 0;
  sub_22EE4E12C();
  sub_22EE805A0();
  if (!v2)
  {
    LOBYTE(v11) = 1;
    sub_22EE80590();
    LOBYTE(v11) = 2;
    sub_22EE80590();
    type metadata accessor for ClientOverride(0);
    LOBYTE(v11) = 3;
    type metadata accessor for ClientOverride.Server(0);
    sub_22EE4C640(&qword_2686284E0, (void (*)(uint64_t))type metadata accessor for ClientOverride.Server);
    sub_22EE805E0();
    LOBYTE(v11) = 4;
    sub_22EE805B0();
    LOBYTE(v11) = 5;
    sub_22EE805B0();
    LOBYTE(v11) = 6;
    sub_22EE7C3D0();
    sub_22EE4C640(&qword_2686284E8, MEMORY[0x263F07508]);
    sub_22EE805A0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_22EE4E0D8()
{
  unint64_t result = qword_2686284D0;
  if (!qword_2686284D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686284D0);
  }
  return result;
}

unint64_t sub_22EE4E12C()
{
  unint64_t result = qword_2686284D8;
  if (!qword_2686284D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686284D8);
  }
  return result;
}

uint64_t ClientOverride.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v35 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for ClientOverride.Server(0);
  MEMORY[0x270FA5388](v34);
  uint64_t v33 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686284F0);
  uint64_t v32 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ClientOverride(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_OWORD *)v10 + 1) = 0u;
  *((_OWORD *)v10 + 2) = 0u;
  *(_OWORD *)uint64_t v10 = xmmword_22EEA74C0;
  uint64_t v12 = &v10[v11[8]];
  *(void *)uint64_t v12 = 0;
  v12[8] = 1;
  uint64_t v13 = &v10[v11[9]];
  *(void *)uint64_t v13 = 0;
  v13[8] = 1;
  uint64_t v36 = v11;
  uint64_t v14 = (uint64_t)&v10[v11[10]];
  uint64_t v15 = sub_22EE7C3D0();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v38 = v14;
  v16(v14, 1, 1, v15);
  uint64_t v17 = a1[3];
  uint64_t v39 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_22EE4E0D8();
  uint64_t v18 = v40;
  sub_22EE80820();
  if (v18)
  {
    uint64_t v24 = v38;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
    sub_22EB720DC(*(void *)v10, *((void *)v10 + 1));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_22EADD81C(v24, &qword_2686284B8);
  }
  else
  {
    uint64_t v40 = (uint64_t *)v12;
    uint64_t v19 = (uint64_t)v33;
    v30[1] = v15;
    uint64_t v20 = (uint64_t)v35;
    uint64_t v21 = v32;
    char v42 = 0;
    sub_22EE4E6D8();
    sub_22EE80520();
    *(_OWORD *)uint64_t v10 = v41;
    LOBYTE(v41) = 1;
    *((void *)v10 + 2) = sub_22EE80510();
    *((void *)v10 + 3) = v22;
    LOBYTE(v41) = 2;
    *((void *)v10 + 4) = sub_22EE80510();
    *((void *)v10 + 5) = v23;
    LOBYTE(v41) = 3;
    sub_22EE4C640(&qword_268628500, (void (*)(uint64_t))type metadata accessor for ClientOverride.Server);
    sub_22EE80560();
    sub_22EE4C588(v19, (uint64_t)&v10[v36[7]]);
    LOBYTE(v41) = 4;
    uint64_t v25 = sub_22EE80530();
    uint64_t v26 = v40;
    *uint64_t v40 = v25;
    *((unsigned char *)v26 + 8) = v27 & 1;
    LOBYTE(v41) = 5;
    *(void *)uint64_t v13 = sub_22EE80530();
    v13[8] = v28 & 1;
    LOBYTE(v41) = 6;
    sub_22EE4C640(&qword_268628508, MEMORY[0x263F07508]);
    sub_22EE80520();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v37);
    sub_22EE4D9AC(v20, v38);
    sub_22EE4E72C((uint64_t)v10, v31, type metadata accessor for ClientOverride);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
    return sub_22EE4E794((uint64_t)v10, type metadata accessor for ClientOverride);
  }
}

unint64_t sub_22EE4E6D8()
{
  unint64_t result = qword_2686284F8;
  if (!qword_2686284F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686284F8);
  }
  return result;
}

uint64_t sub_22EE4E72C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_22EE4E794(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_22EE4E7F8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ClientOverride.init(from:)(a1, a2);
}

uint64_t sub_22EE4E810(void *a1)
{
  return ClientOverride.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for ClientOverride(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    unint64_t v7 = a2[1];
    if (v7 >> 60 == 15)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    else
    {
      uint64_t v9 = *a2;
      sub_22EB71E60(*a2, a2[1]);
      *uint64_t v4 = v9;
      v4[1] = v7;
    }
    uint64_t v10 = a2[3];
    _OWORD v4[2] = a2[2];
    v4[3] = v10;
    uint64_t v11 = a2[5];
    long long v4[4] = a2[4];
    void v4[5] = v11;
    uint64_t v12 = a3[7];
    uint64_t v13 = (char *)v4 + v12;
    uint64_t v14 = (char *)a2 + v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 3, v15))
    {
      uint64_t v17 = type metadata accessor for ClientOverride.Server(0);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      uint64_t v18 = sub_22EE7C2B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v13, v14, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 3, v15);
    }
    uint64_t v19 = a3[8];
    uint64_t v20 = a3[9];
    uint64_t v21 = (char *)v4 + v19;
    uint64_t v22 = (char *)a2 + v19;
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    uint64_t v23 = (char *)v4 + v20;
    uint64_t v24 = (char *)a2 + v20;
    *(void *)uint64_t v23 = *(void *)v24;
    v23[8] = v24[8];
    uint64_t v25 = a3[10];
    uint64_t v26 = (char *)v4 + v25;
    char v27 = (char *)a2 + v25;
    uint64_t v28 = sub_22EE7C3D0();
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
  }
  return v4;
}

uint64_t destroy for ClientOverride(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = a1[1];
  if (v4 >> 60 != 15) {
    sub_22EB2AC74(*a1, v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v5 = (char *)a1 + *(int *)(a2 + 28);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 3, v6))
  {
    uint64_t v7 = sub_22EE7C2B0();
    (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
  }
  uint64_t v8 = (char *)a1 + *(int *)(a2 + 40);
  uint64_t v9 = sub_22EE7C3D0();
  uint64_t v12 = *(void *)(v9 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v9);
  if (!result)
  {
    uint64_t v11 = *(uint64_t (**)(char *, uint64_t))(v12 + 8);
    return v11(v8, v9);
  }
  return result;
}

uint64_t initializeWithCopy for ClientOverride(uint64_t a1, uint64_t *a2, int *a3)
{
  unint64_t v6 = a2[1];
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v7 = *a2;
    sub_22EB71E60(*a2, a2[1]);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v6;
  }
  uint64_t v8 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v8;
  uint64_t v9 = a2[5];
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = v9;
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (char *)a2 + v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 3, v13))
  {
    uint64_t v15 = type metadata accessor for ClientOverride.Server(0);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    uint64_t v16 = sub_22EE7C2B0();
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v11, v12, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 3, v13);
  }
  uint64_t v17 = a3[8];
  uint64_t v18 = a3[9];
  uint64_t v19 = a1 + v17;
  uint64_t v20 = (char *)a2 + v17;
  *(void *)uint64_t v19 = *(void *)v20;
  *(unsigned char *)(v19 + 8) = v20[8];
  uint64_t v21 = a1 + v18;
  uint64_t v22 = (char *)a2 + v18;
  *(void *)uint64_t v21 = *(void *)v22;
  *(unsigned char *)(v21 + 8) = v22[8];
  uint64_t v23 = a3[10];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (char *)a2 + v23;
  uint64_t v26 = sub_22EE7C3D0();
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  return a1;
}

uint64_t *assignWithCopy for ClientOverride(uint64_t *a1, uint64_t *a2, int *a3)
{
  unint64_t v6 = a2[1];
  if ((unint64_t)a1[1] >> 60 == 15)
  {
    if (v6 >> 60 != 15)
    {
      uint64_t v7 = *a2;
      sub_22EB71E60(*a2, a2[1]);
      *a1 = v7;
      a1[1] = v6;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v6 >> 60 == 15)
  {
    sub_22EE4F300((uint64_t)a1);
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  uint64_t v8 = *a2;
  sub_22EB71E60(*a2, a2[1]);
  uint64_t v9 = *a1;
  unint64_t v10 = a1[1];
  *a1 = v8;
  a1[1] = v6;
  sub_22EB2AC74(v9, v10);
LABEL_8:
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 3, v14);
  int v18 = v16(v13, 3, v14);
  if (v17)
  {
    if (!v18)
    {
      uint64_t v19 = sub_22EE7C2B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v12, v13, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 3, v14);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v18)
  {
    sub_22EADD81C((uint64_t)v12, &qword_268628410);
LABEL_13:
    uint64_t v20 = type metadata accessor for ClientOverride.Server(0);
    memcpy(v12, v13, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_14;
  }
  uint64_t v39 = sub_22EE7C2B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 24))(v12, v13, v39);
LABEL_14:
  uint64_t v21 = a3[8];
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  uint64_t v24 = *(void *)v23;
  v22[8] = v23[8];
  *(void *)uint64_t v22 = v24;
  uint64_t v25 = a3[9];
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = *(void *)v27;
  v26[8] = v27[8];
  *(void *)uint64_t v26 = v28;
  uint64_t v29 = a3[10];
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  uint64_t v32 = sub_22EE7C3D0();
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48);
  int v35 = v34(v30, 1, v32);
  int v36 = v34(v31, 1, v32);
  if (!v35)
  {
    if (!v36)
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 24))(v30, v31, v32);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v33 + 8))(v30, v32);
    goto LABEL_19;
  }
  if (v36)
  {
LABEL_19:
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8);
    memcpy(v30, v31, *(void *)(*(void *)(v37 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  return a1;
}

uint64_t sub_22EE4F300(uint64_t a1)
{
  return a1;
}

_OWORD *initializeWithTake for ClientOverride(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[7];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 3, v10))
  {
    uint64_t v12 = type metadata accessor for ClientOverride.Server(0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v13 = sub_22EE7C2B0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v8, v9, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 3, v10);
  }
  uint64_t v14 = a3[8];
  uint64_t v15 = a3[9];
  uint64_t v16 = (char *)a1 + v14;
  int v17 = (char *)a2 + v14;
  *(void *)uint64_t v16 = *(void *)v17;
  v16[8] = v17[8];
  int v18 = (char *)a1 + v15;
  uint64_t v19 = (char *)a2 + v15;
  *(void *)int v18 = *(void *)v19;
  v18[8] = v19[8];
  uint64_t v20 = a3[10];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = sub_22EE7C3D0();
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  return a1;
}

uint64_t assignWithTake for ClientOverride(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v6 = *(void *)(a1 + 8);
  if (v6 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v7 = *(void *)(a2 + 8);
  if (v7 >> 60 == 15)
  {
    sub_22EE4F300(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v7;
  sub_22EB2AC74(v8, v6);
LABEL_6:
  uint64_t v9 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 3, v14);
  int v18 = v16(v13, 3, v14);
  if (v17)
  {
    if (!v18)
    {
      uint64_t v19 = sub_22EE7C2B0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 32))(v12, v13, v19);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 3, v14);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v18)
  {
    sub_22EADD81C((uint64_t)v12, &qword_268628410);
LABEL_11:
    uint64_t v20 = type metadata accessor for ClientOverride.Server(0);
    memcpy(v12, v13, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_12;
  }
  uint64_t v37 = sub_22EE7C2B0();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v37 - 8) + 40))(v12, v13, v37);
LABEL_12:
  uint64_t v21 = a3[8];
  uint64_t v22 = a3[9];
  uint64_t v23 = a1 + v21;
  uint64_t v24 = a2 + v21;
  *(void *)uint64_t v23 = *(void *)v24;
  *(unsigned char *)(v23 + 8) = *(unsigned char *)(v24 + 8);
  uint64_t v25 = a1 + v22;
  uint64_t v26 = a2 + v22;
  *(void *)uint64_t v25 = *(void *)v26;
  *(unsigned char *)(v25 + 8) = *(unsigned char *)(v26 + 8);
  uint64_t v27 = a3[10];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (void *)(a2 + v27);
  uint64_t v30 = sub_22EE7C3D0();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v31 + 48);
  int v33 = v32(v28, 1, v30);
  int v34 = v32(v29, 1, v30);
  if (!v33)
  {
    if (!v34)
    {
      (*(void (**)(void *, void *, uint64_t))(v31 + 40))(v28, v29, v30);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v31 + 8))(v28, v30);
    goto LABEL_17;
  }
  if (v34)
  {
LABEL_17:
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8);
    memcpy(v28, v29, *(void *)(*(void *)(v35 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v31 + 32))(v28, v29, v30);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClientOverride(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EE4F93C);
}

uint64_t sub_22EE4F93C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = type metadata accessor for ClientOverride.Server(0);
    uint64_t v10 = *(void *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = a1 + *(int *)(a3 + 28);
      uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
      return v13(v12, a2, v11);
    }
    else
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8);
      uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
      uint64_t v16 = v14;
      uint64_t v17 = a1 + *(int *)(a3 + 40);
      return v15(v17, a2, v16);
    }
  }
}

uint64_t storeEnumTagSinglePayload for ClientOverride(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EE4FA8C);
}

uint64_t sub_22EE4FA8C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 24) = a2;
  }
  else
  {
    uint64_t v8 = type metadata accessor for ClientOverride.Server(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 40);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_22EE4FBBC()
{
  type metadata accessor for ClientOverride.Server(319);
  if (v0 <= 0x3F)
  {
    sub_22EE4FCA8();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_22EE4FCA8()
{
  if (!qword_268628520)
  {
    sub_22EE7C3D0();
    unint64_t v0 = sub_22EE80040();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268628520);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ClientOverride.Server(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 3, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = sub_22EE7C2B0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 3, v7);
    }
  }
  return a1;
}

uint64_t destroy for ClientOverride.Server(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 3, v2);
  if (!result)
  {
    uint64_t v4 = sub_22EE7C2B0();
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(a1, v4);
  }
  return result;
}

void *initializeWithCopy for ClientOverride.Server(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_22EE7C2B0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

void *assignWithCopy for ClientOverride.Server(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 3, v6);
  int v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v13 = sub_22EE7C2B0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 24))(a1, a2, v13);
      return a1;
    }
    sub_22EADD81C((uint64_t)a1, &qword_268628410);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = sub_22EE7C2B0();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

void *initializeWithTake for ClientOverride.Server(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_22EE7C2B0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

void *assignWithTake for ClientOverride.Server(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 3, v6);
  int v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v13 = sub_22EE7C2B0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 40))(a1, a2, v13);
      return a1;
    }
    sub_22EADD81C((uint64_t)a1, &qword_268628410);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = sub_22EE7C2B0();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClientOverride.Server(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EE504EC);
}

uint64_t sub_22EE504EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 4) {
    return v5 - 3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ClientOverride.Server(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EE50570);
}

uint64_t sub_22EE50570(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 3);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_22EE505F8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 3, v2);
}

uint64_t sub_22EE50664(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 3, v4);
}

uint64_t sub_22EE506D8()
{
  uint64_t result = sub_22EE7C2B0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

unsigned char *__swift_memcpy1_1_0(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ClientOverride.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ClientOverride.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22EE508B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClientOverride.CodingKeys()
{
  return &type metadata for ClientOverride.CodingKeys;
}

ValueMetadata *type metadata accessor for ClientOverride.Server.AutomaticCodingKeys()
{
  return &type metadata for ClientOverride.Server.AutomaticCodingKeys;
}

ValueMetadata *type metadata accessor for ClientOverride.Server.ProductionCodingKeys()
{
  return &type metadata for ClientOverride.Server.ProductionCodingKeys;
}

ValueMetadata *type metadata accessor for ClientOverride.Server.SandboxCodingKeys()
{
  return &type metadata for ClientOverride.Server.SandboxCodingKeys;
}

uint64_t getEnumTagSinglePayload for ClientOverride.Server.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ClientOverride.Server.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22EE50A7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClientOverride.Server.CodingKeys()
{
  return &type metadata for ClientOverride.Server.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ClientOverride.Server.XcodeTestCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x22EE50B54);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClientOverride.Server.XcodeTestCodingKeys()
{
  return &type metadata for ClientOverride.Server.XcodeTestCodingKeys;
}

unint64_t sub_22EE50B90()
{
  unint64_t result = qword_268628538;
  if (!qword_268628538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628538);
  }
  return result;
}

unint64_t sub_22EE50BE8()
{
  unint64_t result = qword_268628540;
  if (!qword_268628540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628540);
  }
  return result;
}

unint64_t sub_22EE50C40()
{
  unint64_t result = qword_268628548;
  if (!qword_268628548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628548);
  }
  return result;
}

unint64_t sub_22EE50C98()
{
  unint64_t result = qword_268628550;
  if (!qword_268628550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628550);
  }
  return result;
}

unint64_t sub_22EE50CF0()
{
  unint64_t result = qword_268628558;
  if (!qword_268628558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628558);
  }
  return result;
}

unint64_t sub_22EE50D48()
{
  unint64_t result = qword_268628560;
  if (!qword_268628560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628560);
  }
  return result;
}

unint64_t sub_22EE50DA0()
{
  unint64_t result = qword_268628568;
  if (!qword_268628568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628568);
  }
  return result;
}

unint64_t sub_22EE50DF8()
{
  unint64_t result = qword_268628570;
  if (!qword_268628570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628570);
  }
  return result;
}

unint64_t sub_22EE50E50()
{
  unint64_t result = qword_268628578;
  if (!qword_268628578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628578);
  }
  return result;
}

unint64_t sub_22EE50EA8()
{
  unint64_t result = qword_268628580;
  if (!qword_268628580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628580);
  }
  return result;
}

unint64_t sub_22EE50F00()
{
  unint64_t result = qword_268628588;
  if (!qword_268628588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628588);
  }
  return result;
}

unint64_t sub_22EE50F58()
{
  unint64_t result = qword_268628590;
  if (!qword_268628590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628590);
  }
  return result;
}

unint64_t sub_22EE50FB0()
{
  unint64_t result = qword_268628598;
  if (!qword_268628598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628598);
  }
  return result;
}

unint64_t sub_22EE51008()
{
  unint64_t result = qword_2686285A0;
  if (!qword_2686285A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686285A0);
  }
  return result;
}

unint64_t sub_22EE51060()
{
  unint64_t result = qword_2686285A8;
  if (!qword_2686285A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686285A8);
  }
  return result;
}

uint64_t sub_22EE510B4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6974616D6F747561 && a2 == 0xE900000000000063;
  if (v2 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x69746375646F7270 && a2 == 0xEA00000000006E6FLL || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x786F62646E6173 && a2 == 0xE700000000000000 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x73655465646F6378 && a2 == 0xE900000000000074)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_22EE80660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_22EE5128C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x800000022EE86070)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_22EE80660();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_22EE51314(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x800000022EE86090 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4274736575716572 && a2 == 0xEF4449656C646E75 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000022EE860B0 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726576726573 && a2 == 0xE600000000000000 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000022EE860D0 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x65744965726F7473 && a2 == 0xEB0000000044496DLL || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x4449726F646E6576 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v5 = sub_22EE80660();
    swift_bridgeObjectRelease();
    if (v5) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

Swift::Bool __swiftcall NSFileManager.isDirectory(atPath:)(Swift::String atPath)
{
  uint64_t v5 = *MEMORY[0x263EF8340];
  Swift::Bool v4 = 0;
  char v2 = (void *)sub_22EE7F9B0();
  objc_msgSend(v1, sel_fileExistsAtPath_isDirectory_, v2, &v4);

  return v4;
}

uint64_t NSFileManager.fileExists(at:)()
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  char v5 = 0;
  sub_22EE7C280();
  unint64_t v1 = (void *)sub_22EE7F9B0();
  swift_bridgeObjectRelease();
  unsigned int v2 = objc_msgSend(v0, sel_fileExistsAtPath_isDirectory_, v1, &v5);

  if (v5) {
    int v3 = 256;
  }
  else {
    int v3 = 0;
  }
  return v3 | v2;
}

BOOL ExternalGatewayMode.isLink.getter(char a1)
{
  return (a1 & 0xFD) == 0;
}

unint64_t ExternalGatewayMode.description.getter(char a1)
{
  unint64_t result = 0xD000000000000016;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0xD00000000000001DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t ExternalGatewayMode.rawValue.getter(uint64_t result)
{
  return result;
}

unint64_t sub_22EE51804@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = _s15StoreKit_Shared19ExternalGatewayModeO8rawValueACSgSi_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_22EE51830(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_22EE5183C()
{
  return sub_22EE7FC30();
}

uint64_t sub_22EE5189C()
{
  return sub_22EE7FC20();
}

uint64_t sub_22EE518EC()
{
  return sub_22EE807F0();
}

uint64_t sub_22EE51994()
{
  sub_22EE7FA60();

  return swift_bridgeObjectRelease();
}

uint64_t sub_22EE51A24()
{
  return sub_22EE807F0();
}

unint64_t ExternalGatewayOptionsKey.rawValue.getter(char a1)
{
  unint64_t result = 0xD000000000000013;
  if (a1 == 1) {
    return 0xD000000000000015;
  }
  return result;
}

uint64_t sub_22EE51B28(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_22EE58158(*a1, *a2);
}

uint64_t sub_22EE51B34()
{
  return sub_22EE518EC();
}

uint64_t sub_22EE51B3C()
{
  return sub_22EE51994();
}

uint64_t sub_22EE51B44()
{
  return sub_22EE51A24();
}

uint64_t sub_22EE51B4C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s15StoreKit_Shared25ExternalGatewayOptionsKeyO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

unint64_t sub_22EE51B7C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = ExternalGatewayOptionsKey.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t ExternalGatewaySheetRequest.generateToken.getter()
{
  return *v0;
}

uint64_t ExternalGatewaySheetRequest.kind.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t ExternalGatewaySheetRequest.logKey.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ExternalGatewaySheetRequest.logKey.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*ExternalGatewaySheetRequest.logKey.modify())(void)
{
  return nullsub_1;
}

uint64_t ExternalGatewaySheetRequest.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ExternalGatewaySheetRequest.options.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t (*ExternalGatewaySheetRequest.options.modify())(void)
{
  return nullsub_1;
}

uint64_t ExternalGatewaySheetRequest.presentSheet.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t ExternalGatewaySheetRequest.hostSceneID.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ExternalGatewaySheetRequest.init(kind:options:presentSheet:hostSceneID:generateToken:logKey:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  *(unsigned char *)a9 = a6;
  *(unsigned char *)(a9 + 1) = result;
  *(void *)(a9 + 8) = a7;
  *(void *)(a9 + 16) = a8;
  *(void *)(a9 + 24) = a2;
  *(unsigned char *)(a9 + 32) = a3;
  *(void *)(a9 + 40) = a4;
  *(void *)(a9 + 48) = a5;
  return result;
}

uint64_t ExternalGatewaySheetRequest.subscript.getter@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_22EE80040();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  int v10 = (char *)&v21 - v9;
  sub_22EAD43D0(v3 + 24, (uint64_t)v23, &qword_2686285B0);
  sub_22EAD43D0((uint64_t)v23, (uint64_t)&v24, &qword_2686285B0);
  uint64_t v11 = v24;
  if (!v24)
  {
    long long v21 = 0u;
    long long v22 = 0u;
    goto LABEL_14;
  }
  uint64_t v12 = 0xD000000000000013;
  if (a1)
  {
    if (a1 == 1)
    {
      uint64_t v12 = 0xD000000000000015;
      uint64_t v13 = 0x800000022EE85E20;
    }
    else
    {
      uint64_t v13 = 0x800000022EE85E40;
    }
    if (!*(void *)(v24 + 16)) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v13 = 0x800000022EE85E00;
    if (!*(void *)(v24 + 16))
    {
LABEL_12:
      long long v21 = 0u;
      long long v22 = 0u;
      goto LABEL_13;
    }
  }
  unint64_t v14 = sub_22ED0E9D8(v12, v13);
  if ((v15 & 1) == 0) {
    goto LABEL_12;
  }
  sub_22EC202DC(*(void *)(v11 + 56) + 32 * v14, (uint64_t)&v21);
LABEL_13:
  swift_bridgeObjectRelease();
LABEL_14:
  __swift_instantiateConcreteTypeFromMangledName(&qword_2686285B8);
  int v16 = swift_dynamicCast();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56);
  if (v16)
  {
    uint64_t v18 = *(void *)(a2 - 8);
    v17(v10, 0, 1, a2);
    (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(a3, v10, a2);
    uint64_t v19 = 0;
  }
  else
  {
    uint64_t v19 = 1;
    v17(v10, 1, 1, a2);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v17)(a3, v19, 1, a2);
}

double ExternalGatewaySheetRequest.init(from:)@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_22EE525BC(a1, v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    double result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(void *)(a2 + 48) = v8;
  }
  return result;
}

uint64_t ExternalGatewaySheetRequest.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  v22[1] = *MEMORY[0x263EF8340];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686285C0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v19[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22EE52CD8();
  sub_22EE80830();
  LOBYTE(v19[0]) = 0;
  sub_22EE805D0();
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  LOBYTE(v19[0]) = *(unsigned char *)(v3 + 1);
  HIBYTE(v18) = 1;
  sub_22EE52D2C();
  sub_22EE805E0();
  LOBYTE(v19[0]) = 2;
  sub_22EE805C0();
  LOBYTE(v19[0]) = 4;
  sub_22EE805D0();
  sub_22EAD43D0(v3 + 40, (uint64_t)v21, &qword_2686285D8);
  sub_22EAD43D0((uint64_t)v21, (uint64_t)v19, &qword_2686285D8);
  HIBYTE(v18) = 5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2686285D8);
  sub_22EE52D80();
  sub_22EE805E0();
  sub_22EAD43D0(v3 + 24, (uint64_t)v20, &qword_2686285B0);
  sub_22EAD43D0((uint64_t)v20, (uint64_t)v22, &qword_2686285B0);
  if (!v22[0]) {
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  int v10 = self;
  uint64_t v11 = (void *)sub_22EE7F7E0();
  v19[0] = 0;
  id v12 = objc_msgSend(v10, sel_dataWithJSONObject_options_error_, v11, 0, v19);

  id v13 = v19[0];
  if (!v12)
  {
    uint64_t v17 = v13;
    sub_22EE7C1D0();

    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  unint64_t v14 = (void *)sub_22EE7C380();
  int v16 = v15;

  v19[0] = v14;
  v19[1] = v16;
  HIBYTE(v18) = 3;
  sub_22EE4E12C();
  sub_22EE805E0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return sub_22EB2AC74((uint64_t)v14, (unint64_t)v16);
}

uint64_t sub_22EE52348()
{
  uint64_t result = 0x65746172656E6567;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1684957547;
      break;
    case 2:
      uint64_t result = 0x79654B676F6CLL;
      break;
    case 3:
      uint64_t result = 0x736E6F6974706FLL;
      break;
    case 4:
      uint64_t result = 0x53746E6573657270;
      break;
    case 5:
      uint64_t result = 0x6E65635374736F68;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22EE52420@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_22EE5364C(a1, a2);
  *a3 = result;
  return result;
}

void sub_22EE52448(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_22EE52454(uint64_t a1)
{
  unint64_t v2 = sub_22EE52CD8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE52490(uint64_t a1)
{
  unint64_t v2 = sub_22EE52CD8();

  return MEMORY[0x270FA00B8](a1, v2);
}

double sub_22EE524CC@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_22EE525BC(a1, v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    double result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(void *)(a2 + 48) = v8;
  }
  return result;
}

uint64_t sub_22EE5251C(void *a1)
{
  return ExternalGatewaySheetRequest.encode(to:)(a1);
}

unint64_t _s15StoreKit_Shared19ExternalGatewayModeO8rawValueACSgSi_tcfC_0(unint64_t result)
{
  if (result >= 4) {
    return 4;
  }
  return result;
}

uint64_t _s15StoreKit_Shared25ExternalGatewayOptionsKeyO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_22EE804E0();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_22EE525BC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v63 = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_22EE80230();
  uint64_t v56 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628618);
  uint64_t v57 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a1[3];
  uint64_t v58 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  unint64_t v11 = sub_22EE52CD8();
  id v12 = v59;
  sub_22EE80820();
  if (v12)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
    return swift_bridgeObjectRelease();
  }
  uint64_t v59 = a2;
  uint64_t v54 = v4;
  uint64_t v55 = v6;
  uint64_t v13 = v57;
  LOBYTE(v61) = 0;
  int v14 = sub_22EE80550();
  LOBYTE(v60) = 1;
  sub_22EE53960();
  sub_22EE80560();
  LODWORD(v53) = v14;
  int v15 = v61;
  LOBYTE(v61) = 2;
  uint64_t v16 = sub_22EE80540();
  uint64_t v19 = v18;
  uint64_t v51 = v16;
  int v52 = v15;
  LOBYTE(v61) = 4;
  swift_bridgeObjectRetain();
  int v49 = sub_22EE80550();
  LOBYTE(v61) = 5;
  uint64_t v20 = sub_22EE80510();
  LOBYTE(v60) = 3;
  uint64_t v22 = v21;
  sub_22EE4E6D8();
  uint64_t v50 = v22;
  swift_bridgeObjectRetain();
  sub_22EE80520();
  uint64_t v47 = v20;
  uint64_t v48 = v7;
  unint64_t v23 = v62;
  if (v62 >> 60 != 15)
  {
    uint64_t v27 = v19;
    uint64_t v28 = v61;
    uint64_t v29 = self;
    uint64_t v30 = (void *)sub_22EE7C350();
    uint64_t v61 = 0;
    id v31 = objc_msgSend(v29, sel_JSONObjectWithData_options_error_, v30, 0, &v61);

    char v26 = v53;
    if (v31)
    {
      uint64_t v32 = v61;
      sub_22EE800E0();
      swift_unknownObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_268628628);
      if (swift_dynamicCast())
      {
        uint64_t v24 = v27;
        sub_22EB720DC((uint64_t)v28, v23);
        uint64_t v25 = v60;
        (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v48);
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_268628630);
      uint64_t v38 = swift_allocObject();
      uint64_t v59 = v28;
      *(_OWORD *)(v38 + 16) = xmmword_22EE8A1B0;
      *(void *)(v38 + 56) = &type metadata for ExternalGatewaySheetRequest.CodingKeys;
      *(void *)(v38 + 64) = v11;
      *(unsigned char *)(v38 + 32) = 3;
      uint64_t v61 = 0;
      unint64_t v62 = 0xE000000000000000;
      sub_22EE801C0();
      swift_bridgeObjectRelease();
      uint64_t v39 = v55;
      sub_22EE80220();
      uint64_t v40 = sub_22EE80240();
      swift_allocError();
      uint64_t v42 = v41;
      uint64_t v43 = v56;
      char v44 = *(void (**)(uint64_t, char *, uint64_t))(v56 + 16);
      unint64_t v53 = v23;
      uint64_t v45 = v54;
      v44(v41, v39, v54);
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v40 - 8) + 104))(v42, *MEMORY[0x263F8DCB8], v40);
      swift_willThrow();
      sub_22EB720DC((uint64_t)v59, v53);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v39, v45);
    }
    else
    {
      uint64_t v37 = v61;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_22EE7C1D0();

      swift_willThrow();
      sub_22EB720DC((uint64_t)v28, v23);
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v48);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v24 = v19;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v48);
  swift_bridgeObjectRelease();
  uint64_t v25 = 0;
  char v26 = v53;
LABEL_10:
  char v33 = v26 & 1;
  char v34 = v49 & 1;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  uint64_t v35 = v50;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  int v36 = v59;
  *uint64_t v59 = v33;
  v36[1] = v52;
  *((void *)v36 + 1) = v51;
  *((void *)v36 + 2) = v24;
  *((void *)v36 + 3) = v25;
  v36[32] = v34;
  *((void *)v36 + 5) = v47;
  *((void *)v36 + 6) = v35;
  return result;
}

unint64_t sub_22EE52CD8()
{
  unint64_t result = qword_2686285C8;
  if (!qword_2686285C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686285C8);
  }
  return result;
}

unint64_t sub_22EE52D2C()
{
  unint64_t result = qword_2686285D0;
  if (!qword_2686285D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686285D0);
  }
  return result;
}

unint64_t sub_22EE52D80()
{
  unint64_t result = qword_2686285E0;
  if (!qword_2686285E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686285D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686285E0);
  }
  return result;
}

unint64_t sub_22EE52DF0()
{
  unint64_t result = qword_2686285E8;
  if (!qword_2686285E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686285E8);
  }
  return result;
}

unint64_t sub_22EE52E48()
{
  unint64_t result = qword_2686285F0;
  if (!qword_2686285F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686285F0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ExternalGatewayMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22EE52F68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExternalGatewayMode()
{
  return &type metadata for ExternalGatewayMode;
}

uint64_t getEnumTagSinglePayload for ExternalGatewayOptionsKey(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ExternalGatewayOptionsKey(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22EE530FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExternalGatewayOptionsKey()
{
  return &type metadata for ExternalGatewayOptionsKey;
}

uint64_t destroy for ExternalGatewaySheetRequest()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ExternalGatewaySheetRequest(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ExternalGatewaySheetRequest(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8_0(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ExternalGatewaySheetRequest(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExternalGatewaySheetRequest(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ExternalGatewaySheetRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExternalGatewaySheetRequest()
{
  return &type metadata for ExternalGatewaySheetRequest;
}

uint64_t getEnumTagSinglePayload for ExternalGatewaySheetRequest.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ExternalGatewaySheetRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22EE5350CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExternalGatewaySheetRequest.CodingKeys()
{
  return &type metadata for ExternalGatewaySheetRequest.CodingKeys;
}

unint64_t sub_22EE53548()
{
  unint64_t result = qword_2686285F8;
  if (!qword_2686285F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686285F8);
  }
  return result;
}

unint64_t sub_22EE535A0()
{
  unint64_t result = qword_268628600;
  if (!qword_268628600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628600);
  }
  return result;
}

unint64_t sub_22EE535F8()
{
  unint64_t result = qword_268628608;
  if (!qword_268628608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628608);
  }
  return result;
}

uint64_t sub_22EE5364C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65746172656E6567 && a2 == 0xED00006E656B6F54;
  if (v2 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x79654B676F6CLL && a2 == 0xE600000000000000 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x53746E6573657270 && a2 == 0xEC00000074656568 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E65635374736F68 && a2 == 0xEB00000000444965)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_22EE80660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

unint64_t sub_22EE5390C()
{
  unint64_t result = qword_268628610;
  if (!qword_268628610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628610);
  }
  return result;
}

unint64_t sub_22EE53960()
{
  unint64_t result = qword_268628620;
  if (!qword_268628620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628620);
  }
  return result;
}

BOOL static StoreKitInternalError.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t StoreKitInternalError.hash(into:)()
{
  return sub_22EE807C0();
}

unint64_t sub_22EE539EC(char a1)
{
  unint64_t result = 0x4465727574616566;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x4164696C61766E69;
      break;
    case 2:
      unint64_t result = 0xD000000000000018;
      break;
    case 3:
      unint64_t result = 0x7469746E45746F6ELL;
      break;
    case 4:
      unint64_t result = 0x746E6F4349556F6ELL;
      break;
    case 5:
    case 6:
      unint64_t result = 0xD000000000000011;
      break;
    case 7:
      unint64_t result = 0x6E776F6E6B6E75;
      break;
    case 8:
      unint64_t result = 0x636E614372657375;
      break;
    case 9:
      unint64_t result = 0x4D746E756F636361;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22EE53B60(uint64_t a1)
{
  unint64_t v2 = sub_22EE54A84();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE53B9C(uint64_t a1)
{
  unint64_t v2 = sub_22EE54A84();

  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_22EE53BD8()
{
  return sub_22EE539EC(*v0);
}

uint64_t sub_22EE53BE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_22EE550D0(a1, a2);
  *a3 = result;
  return result;
}

void sub_22EE53C08(unsigned char *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_22EE53C14(uint64_t a1)
{
  unint64_t v2 = sub_22EE54A30();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE53C50(uint64_t a1)
{
  unint64_t v2 = sub_22EE54A30();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_22EE53C8C(uint64_t a1)
{
  unint64_t v2 = sub_22EE54D78();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE53CC8(uint64_t a1)
{
  unint64_t v2 = sub_22EE54D78();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_22EE53D04(uint64_t a1)
{
  unint64_t v2 = sub_22EE54D24();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE53D40(uint64_t a1)
{
  unint64_t v2 = sub_22EE54D24();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_22EE53D7C(uint64_t a1)
{
  unint64_t v2 = sub_22EE54C28();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE53DB8(uint64_t a1)
{
  unint64_t v2 = sub_22EE54C28();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_22EE53DF4(uint64_t a1)
{
  unint64_t v2 = sub_22EE54CD0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE53E30(uint64_t a1)
{
  unint64_t v2 = sub_22EE54CD0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_22EE53E6C(uint64_t a1)
{
  unint64_t v2 = sub_22EE54C7C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE53EA8(uint64_t a1)
{
  unint64_t v2 = sub_22EE54C7C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_22EE53EE4(uint64_t a1)
{
  unint64_t v2 = sub_22EE54BD4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE53F20(uint64_t a1)
{
  unint64_t v2 = sub_22EE54BD4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_22EE53F5C(uint64_t a1)
{
  unint64_t v2 = sub_22EE54B80();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE53F98(uint64_t a1)
{
  unint64_t v2 = sub_22EE54B80();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_22EE53FD4(uint64_t a1)
{
  unint64_t v2 = sub_22EE54B2C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE54010(uint64_t a1)
{
  unint64_t v2 = sub_22EE54B2C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_22EE5404C(uint64_t a1)
{
  unint64_t v2 = sub_22EE54AD8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE54088(uint64_t a1)
{
  unint64_t v2 = sub_22EE54AD8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StoreKitInternalError.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v61 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628638);
  uint64_t v59 = *(void *)(v3 - 8);
  uint64_t v60 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v58 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628640);
  uint64_t v56 = *(void *)(v5 - 8);
  uint64_t v57 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v55 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628648);
  uint64_t v53 = *(void *)(v7 - 8);
  uint64_t v54 = v7;
  MEMORY[0x270FA5388](v7);
  int v52 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628650);
  uint64_t v50 = *(void *)(v9 - 8);
  uint64_t v51 = v9;
  MEMORY[0x270FA5388](v9);
  int v49 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628658);
  uint64_t v47 = *(void *)(v11 - 8);
  uint64_t v48 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v46 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628660);
  uint64_t v44 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  uint64_t v43 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628668);
  uint64_t v41 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v40 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628670);
  uint64_t v38 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628678);
  uint64_t v37 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628680);
  uint64_t v36 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628688);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v62 = v23;
  uint64_t v63 = v24;
  MEMORY[0x270FA5388](v23);
  char v26 = (char *)&v35 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22EE54A30();
  sub_22EE80830();
  switch((char)v61)
  {
    case 1:
      char v65 = 1;
      sub_22EE54D24();
      uint64_t v28 = v62;
      sub_22EE80580();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v19, v17);
      return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v26, v28);
    case 2:
      char v66 = 2;
      sub_22EE54CD0();
      uint64_t v27 = v62;
      sub_22EE80580();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v16, v39);
      return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v26, v27);
    case 3:
      char v67 = 3;
      sub_22EE54C7C();
      uint64_t v30 = v40;
      uint64_t v27 = v62;
      sub_22EE80580();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v30, v42);
      return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v26, v27);
    case 4:
      char v68 = 4;
      sub_22EE54C28();
      id v31 = v43;
      uint64_t v27 = v62;
      sub_22EE80580();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v31, v45);
      return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v26, v27);
    case 5:
      char v69 = 5;
      sub_22EE54BD4();
      uint64_t v32 = v46;
      uint64_t v27 = v62;
      sub_22EE80580();
      uint64_t v34 = v47;
      uint64_t v33 = v48;
      goto LABEL_12;
    case 6:
      char v70 = 6;
      sub_22EE54B80();
      uint64_t v32 = v49;
      uint64_t v27 = v62;
      sub_22EE80580();
      uint64_t v34 = v50;
      uint64_t v33 = v51;
      goto LABEL_12;
    case 7:
      char v71 = 7;
      sub_22EE54B2C();
      uint64_t v32 = v52;
      uint64_t v27 = v62;
      sub_22EE80580();
      uint64_t v34 = v53;
      uint64_t v33 = v54;
      goto LABEL_12;
    case 8:
      char v72 = 8;
      sub_22EE54AD8();
      uint64_t v32 = v55;
      uint64_t v27 = v62;
      sub_22EE80580();
      uint64_t v34 = v56;
      uint64_t v33 = v57;
      goto LABEL_12;
    case 9:
      char v73 = 9;
      sub_22EE54A84();
      uint64_t v32 = v58;
      uint64_t v27 = v62;
      sub_22EE80580();
      uint64_t v34 = v59;
      uint64_t v33 = v60;
LABEL_12:
      (*(void (**)(char *, uint64_t))(v34 + 8))(v32, v33);
      break;
    default:
      char v64 = 0;
      sub_22EE54D78();
      uint64_t v27 = v62;
      sub_22EE80580();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v22, v20);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v26, v27);
}

unint64_t sub_22EE54A30()
{
  unint64_t result = qword_268628690;
  if (!qword_268628690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628690);
  }
  return result;
}

unint64_t sub_22EE54A84()
{
  unint64_t result = qword_268628698;
  if (!qword_268628698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628698);
  }
  return result;
}

unint64_t sub_22EE54AD8()
{
  unint64_t result = qword_2686286A0;
  if (!qword_2686286A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686286A0);
  }
  return result;
}

unint64_t sub_22EE54B2C()
{
  unint64_t result = qword_2686286A8;
  if (!qword_2686286A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686286A8);
  }
  return result;
}

unint64_t sub_22EE54B80()
{
  unint64_t result = qword_2686286B0;
  if (!qword_2686286B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686286B0);
  }
  return result;
}

unint64_t sub_22EE54BD4()
{
  unint64_t result = qword_2686286B8;
  if (!qword_2686286B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686286B8);
  }
  return result;
}

unint64_t sub_22EE54C28()
{
  unint64_t result = qword_2686286C0;
  if (!qword_2686286C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686286C0);
  }
  return result;
}

unint64_t sub_22EE54C7C()
{
  unint64_t result = qword_2686286C8;
  if (!qword_2686286C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686286C8);
  }
  return result;
}

unint64_t sub_22EE54CD0()
{
  unint64_t result = qword_2686286D0;
  if (!qword_2686286D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686286D0);
  }
  return result;
}

unint64_t sub_22EE54D24()
{
  unint64_t result = qword_2686286D8;
  if (!qword_2686286D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686286D8);
  }
  return result;
}

unint64_t sub_22EE54D78()
{
  unint64_t result = qword_2686286E0;
  if (!qword_2686286E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686286E0);
  }
  return result;
}

uint64_t StoreKitInternalError.hashValue.getter()
{
  return sub_22EE807F0();
}

char *StoreKitInternalError.init(from:)(void *a1)
{
  return sub_22EE55570(a1);
}

char *sub_22EE54E2C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_22EE55570(a1);
  if (!v2) {
    *a2 = (_BYTE)result;
  }
  return result;
}

uint64_t sub_22EE54E58(void *a1)
{
  return StoreKitInternalError.encode(to:)(a1, *v1);
}

uint64_t StoreKitServerError.rawValue.getter(char a1)
{
  return qword_22EEA4548[a1];
}

BOOL sub_22EE54E8C(char *a1, char *a2)
{
  return qword_22EEA4548[*a1] == qword_22EEA4548[*a2];
}

uint64_t sub_22EE54EB0()
{
  return sub_22EE807F0();
}

uint64_t sub_22EE54F00()
{
  return sub_22EE807C0();
}

uint64_t sub_22EE54F38()
{
  return sub_22EE807F0();
}

uint64_t sub_22EE54F84@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = _s15StoreKit_Shared0aB11ServerErrorO8rawValueACSgSi_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_22EE54FB0(void *a1@<X8>)
{
  *a1 = qword_22EEA4548[*v1];
}

uint64_t sub_22EE54FC8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_22EE57044();
  unint64_t v5 = sub_22EE57098();

  return MEMORY[0x270F9FB50](a1, a2, v4, v5);
}

uint64_t sub_22EE55020()
{
  return sub_22EE7FC30();
}

uint64_t sub_22EE55080()
{
  return sub_22EE7FC20();
}

uint64_t sub_22EE550D0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4465727574616566 && a2 == 0xEF64656C62617369;
  if (v2 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4164696C61766E69 && a2 == 0xEA00000000007070 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000022EE861B0 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7469746E45746F6ELL && a2 == 0xEB0000000064656CLL || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746E6F4349556F6ELL && a2 == 0xEB00000000747865 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000022EE861D0 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000022EE861F0 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x636E614372657375 && a2 == 0xED000064656C6C65 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x4D746E756F636361 && a2 == 0xEE00676E69737369)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = sub_22EE80660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

char *sub_22EE55570(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686287C0);
  uint64_t v69 = *(void *)(v2 - 8);
  uint64_t v70 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v74 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686287C8);
  uint64_t v67 = *(void *)(v4 - 8);
  uint64_t v68 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v78 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686287D0);
  uint64_t v65 = *(void *)(v6 - 8);
  uint64_t v66 = v6;
  MEMORY[0x270FA5388](v6);
  char v73 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686287D8);
  uint64_t v63 = *(void *)(v8 - 8);
  uint64_t v64 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v77 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686287E0);
  uint64_t v61 = *(void *)(v10 - 8);
  uint64_t v62 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v76 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686287E8);
  uint64_t v59 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v75 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686287F0);
  uint64_t v57 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58);
  char v72 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686287F8);
  uint64_t v55 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  char v71 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628800);
  uint64_t v53 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  uint64_t v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628808);
  uint64_t v52 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628810);
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = a1[3];
  uint64_t v79 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v24);
  sub_22EE54A30();
  uint64_t v25 = v80;
  sub_22EE80820();
  if (!v25)
  {
    uint64_t v50 = v19;
    uint64_t v49 = v17;
    uint64_t v51 = v16;
    char v26 = v75;
    uint64_t v27 = v76;
    uint64_t v29 = v77;
    uint64_t v28 = v78;
    uint64_t v80 = v21;
    uint64_t v30 = v23;
    uint64_t v31 = sub_22EE80570();
    if (*(void *)(v31 + 16) == 1)
    {
      uint64_t v23 = (char *)*(unsigned __int8 *)(v31 + 32);
      switch(*(unsigned char *)(v31 + 32))
      {
        case 1:
          uint64_t v32 = v80;
          v81[7] = 1;
          sub_22EE54D24();
          uint64_t v40 = v51;
          sub_22EE804F0();
          uint64_t v34 = *(void (**)(char *, uint64_t))(v53 + 8);
          uint64_t v35 = v40;
          uint64_t v36 = &v82;
          goto LABEL_10;
        case 2:
          uint64_t v32 = v80;
          v81[24] = 2;
          sub_22EE54CD0();
          uint64_t v41 = v71;
          sub_22EE804F0();
          uint64_t v34 = *(void (**)(char *, uint64_t))(v55 + 8);
          uint64_t v35 = v41;
          uint64_t v36 = &v83;
          goto LABEL_10;
        case 3:
          uint64_t v32 = v80;
          v81[25] = 3;
          sub_22EE54C7C();
          uint64_t v42 = v72;
          sub_22EE804F0();
          uint64_t v34 = *(void (**)(char *, uint64_t))(v57 + 8);
          uint64_t v35 = v42;
          uint64_t v36 = &v84;
          goto LABEL_10;
        case 4:
          uint64_t v32 = v80;
          v81[26] = 4;
          sub_22EE54C28();
          sub_22EE804F0();
          uint64_t v34 = *(void (**)(char *, uint64_t))(v59 + 8);
          uint64_t v35 = v26;
          uint64_t v36 = &v85;
          goto LABEL_10;
        case 5:
          uint64_t v32 = v80;
          v81[27] = 5;
          sub_22EE54BD4();
          uint64_t v29 = v27;
          sub_22EE804F0();
          uint64_t v44 = v61;
          uint64_t v43 = v62;
          goto LABEL_17;
        case 6:
          uint64_t v32 = v80;
          v81[28] = 6;
          sub_22EE54B80();
          sub_22EE804F0();
          uint64_t v44 = v63;
          uint64_t v43 = v64;
          goto LABEL_17;
        case 7:
          uint64_t v32 = v80;
          v81[29] = 7;
          sub_22EE54B2C();
          uint64_t v29 = v73;
          sub_22EE804F0();
          uint64_t v44 = v65;
          uint64_t v43 = v66;
LABEL_17:
          uint64_t v34 = *(void (**)(char *, uint64_t))(v44 + 8);
          uint64_t v35 = v29;
          goto LABEL_18;
        case 8:
          uint64_t v46 = v80;
          v81[30] = 8;
          sub_22EE54AD8();
          sub_22EE804F0();
          (*(void (**)(char *, uint64_t))(v67 + 8))(v28, v68);
          swift_bridgeObjectRelease();
          uint64_t v32 = v46;
          goto LABEL_19;
        case 9:
          uint64_t v47 = v80;
          v81[31] = 9;
          sub_22EE54A84();
          uint64_t v48 = v74;
          sub_22EE804F0();
          (*(void (**)(char *, uint64_t))(v69 + 8))(v48, v70);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v47 + 8))(v30, v20);
          break;
        default:
          uint64_t v32 = v80;
          v81[6] = 0;
          sub_22EE54D78();
          uint64_t v33 = v50;
          sub_22EE804F0();
          uint64_t v34 = *(void (**)(char *, uint64_t))(v52 + 8);
          uint64_t v35 = v33;
          uint64_t v36 = (uint64_t *)v81;
LABEL_10:
          uint64_t v43 = *(v36 - 32);
LABEL_18:
          v34(v35, v43);
          swift_bridgeObjectRelease();
LABEL_19:
          (*(void (**)(char *, uint64_t))(v32 + 8))(v30, v20);
          break;
      }
    }
    else
    {
      uint64_t v37 = sub_22EE80240();
      swift_allocError();
      uint64_t v39 = v38;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268628818);
      *uint64_t v39 = &type metadata for StoreKitInternalError;
      sub_22EE80500();
      sub_22EE80220();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v37 - 8) + 104))(v39, *MEMORY[0x263F8DCB0], v37);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v80 + 8))(v23, v20);
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v79);
  return v23;
}

uint64_t _s15StoreKit_Shared0aB11ServerErrorO8rawValueACSgSi_tcfC_0(uint64_t a1)
{
  if (a1 <= 3503)
  {
    if (a1 > 2054)
    {
      switch(a1)
      {
        case 3027:
          return 9;
        case 3028:
        case 3029:
        case 3030:
        case 3031:
        case 3032:
        case 3033:
        case 3034:
        case 3035:
        case 3036:
        case 3037:
        case 3039:
        case 3040:
        case 3041:
        case 3042:
        case 3043:
        case 3044:
        case 3045:
        case 3046:
        case 3047:
        case 3048:
        case 3049:
        case 3050:
        case 3051:
        case 3052:
        case 3053:
        case 3054:
        case 3055:
        case 3056:
        case 3057:
        case 3058:
          return 26;
        case 3038:
          return 10;
        case 3059:
          return 11;
        case 3060:
          return 12;
        default:
          if (a1 == 2055)
          {
            uint64_t result = 7;
          }
          else
          {
            if (a1 != 3004) {
              return 26;
            }
            uint64_t result = 8;
          }
          break;
      }
    }
    else
    {
      uint64_t v1 = a1 - 1001;
      uint64_t result = 1;
      switch(v1)
      {
        case 0:
          uint64_t result = 0;
          break;
        case 2:
          return result;
        case 3:
          uint64_t result = 2;
          break;
        case 4:
          uint64_t result = 3;
          break;
        case 5:
          uint64_t result = 4;
          break;
        default:
          return 26;
      }
    }
    return result;
  }
  if (a1 <= 3899)
  {
    if (a1 <= 3602)
    {
      if (a1 == 3504) {
        return 13;
      }
      if (a1 == 3513) {
        return 14;
      }
    }
    else
    {
      switch(a1)
      {
        case 3603:
          return 15;
        case 3604:
          return 16;
        case 3705:
          return 17;
      }
    }
    return 26;
  }
  if (a1 > 500316)
  {
    switch(a1)
    {
      case 500317:
        return 23;
      case 500328:
        return 24;
      case 4000029:
        return 25;
    }
    return 26;
  }
  switch(a1)
  {
    case 3900:
      uint64_t result = 18;
      break;
    case 3901:
      uint64_t result = 19;
      break;
    case 3902:
      uint64_t result = 20;
      break;
    case 3903:
      uint64_t result = 21;
      break;
    case 3904:
      uint64_t result = 22;
      break;
    default:
      return 26;
  }
  return result;
}

unint64_t sub_22EE563D0()
{
  unint64_t result = qword_2686286E8;
  if (!qword_2686286E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686286E8);
  }
  return result;
}

unint64_t sub_22EE56428()
{
  unint64_t result = qword_2686286F0;
  if (!qword_2686286F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686286F0);
  }
  return result;
}

ValueMetadata *type metadata accessor for StoreKitInternalError()
{
  return &type metadata for StoreKitInternalError;
}

uint64_t getEnumTagSinglePayload for StoreKitServerError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE7) {
    goto LABEL_17;
  }
  if (a2 + 25 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 25) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 25;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 25;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 25;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1A;
  int v8 = v6 - 26;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for StoreKitServerError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 25 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 25) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE6)
  {
    unsigned int v6 = ((a2 - 231) >> 8) + 1;
    *unint64_t result = a2 + 25;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22EE565F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 25;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StoreKitServerError()
{
  return &type metadata for StoreKitServerError;
}

uint64_t _s15StoreKit_Shared21StoreKitInternalErrorOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s15StoreKit_Shared21StoreKitInternalErrorOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22EE56784);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StoreKitInternalError.CodingKeys()
{
  return &type metadata for StoreKitInternalError.CodingKeys;
}

ValueMetadata *type metadata accessor for StoreKitInternalError.FeatureDisabledCodingKeys()
{
  return &type metadata for StoreKitInternalError.FeatureDisabledCodingKeys;
}

ValueMetadata *type metadata accessor for StoreKitInternalError.InvalidAppCodingKeys()
{
  return &type metadata for StoreKitInternalError.InvalidAppCodingKeys;
}

ValueMetadata *type metadata accessor for StoreKitInternalError.NotAvailableInStorefrontCodingKeys()
{
  return &type metadata for StoreKitInternalError.NotAvailableInStorefrontCodingKeys;
}

ValueMetadata *type metadata accessor for StoreKitInternalError.NotEntitledCodingKeys()
{
  return &type metadata for StoreKitInternalError.NotEntitledCodingKeys;
}

ValueMetadata *type metadata accessor for StoreKitInternalError.NoUIContextCodingKeys()
{
  return &type metadata for StoreKitInternalError.NoUIContextCodingKeys;
}

ValueMetadata *type metadata accessor for StoreKitInternalError.PurchasesDisabledCodingKeys()
{
  return &type metadata for StoreKitInternalError.PurchasesDisabledCodingKeys;
}

ValueMetadata *type metadata accessor for StoreKitInternalError.UnimplementedFlowCodingKeys()
{
  return &type metadata for StoreKitInternalError.UnimplementedFlowCodingKeys;
}

ValueMetadata *type metadata accessor for StoreKitInternalError.UnknownCodingKeys()
{
  return &type metadata for StoreKitInternalError.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for StoreKitInternalError.UserCancelledCodingKeys()
{
  return &type metadata for StoreKitInternalError.UserCancelledCodingKeys;
}

ValueMetadata *type metadata accessor for StoreKitInternalError.AccountMissingCodingKeys()
{
  return &type metadata for StoreKitInternalError.AccountMissingCodingKeys;
}

unint64_t sub_22EE56860()
{
  unint64_t result = qword_2686286F8;
  if (!qword_2686286F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686286F8);
  }
  return result;
}

unint64_t sub_22EE568B8()
{
  unint64_t result = qword_268628700;
  if (!qword_268628700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628700);
  }
  return result;
}

unint64_t sub_22EE56910()
{
  unint64_t result = qword_268628708;
  if (!qword_268628708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628708);
  }
  return result;
}

unint64_t sub_22EE56968()
{
  unint64_t result = qword_268628710;
  if (!qword_268628710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628710);
  }
  return result;
}

unint64_t sub_22EE569C0()
{
  unint64_t result = qword_268628718;
  if (!qword_268628718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628718);
  }
  return result;
}

unint64_t sub_22EE56A18()
{
  unint64_t result = qword_268628720;
  if (!qword_268628720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628720);
  }
  return result;
}

unint64_t sub_22EE56A70()
{
  unint64_t result = qword_268628728;
  if (!qword_268628728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628728);
  }
  return result;
}

unint64_t sub_22EE56AC8()
{
  unint64_t result = qword_268628730;
  if (!qword_268628730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628730);
  }
  return result;
}

unint64_t sub_22EE56B20()
{
  unint64_t result = qword_268628738;
  if (!qword_268628738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628738);
  }
  return result;
}

unint64_t sub_22EE56B78()
{
  unint64_t result = qword_268628740;
  if (!qword_268628740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628740);
  }
  return result;
}

unint64_t sub_22EE56BD0()
{
  unint64_t result = qword_268628748;
  if (!qword_268628748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628748);
  }
  return result;
}

unint64_t sub_22EE56C28()
{
  unint64_t result = qword_268628750;
  if (!qword_268628750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628750);
  }
  return result;
}

unint64_t sub_22EE56C80()
{
  unint64_t result = qword_268628758;
  if (!qword_268628758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628758);
  }
  return result;
}

unint64_t sub_22EE56CD8()
{
  unint64_t result = qword_268628760;
  if (!qword_268628760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628760);
  }
  return result;
}

unint64_t sub_22EE56D30()
{
  unint64_t result = qword_268628768;
  if (!qword_268628768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628768);
  }
  return result;
}

unint64_t sub_22EE56D88()
{
  unint64_t result = qword_268628770;
  if (!qword_268628770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628770);
  }
  return result;
}

unint64_t sub_22EE56DE0()
{
  unint64_t result = qword_268628778;
  if (!qword_268628778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628778);
  }
  return result;
}

unint64_t sub_22EE56E38()
{
  unint64_t result = qword_268628780;
  if (!qword_268628780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628780);
  }
  return result;
}

unint64_t sub_22EE56E90()
{
  unint64_t result = qword_268628788;
  if (!qword_268628788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628788);
  }
  return result;
}

unint64_t sub_22EE56EE8()
{
  unint64_t result = qword_268628790;
  if (!qword_268628790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628790);
  }
  return result;
}

unint64_t sub_22EE56F40()
{
  unint64_t result = qword_268628798;
  if (!qword_268628798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628798);
  }
  return result;
}

unint64_t sub_22EE56F98()
{
  unint64_t result = qword_2686287A0;
  if (!qword_2686287A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686287A0);
  }
  return result;
}

unint64_t sub_22EE56FF0()
{
  unint64_t result = qword_2686287A8;
  if (!qword_2686287A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686287A8);
  }
  return result;
}

unint64_t sub_22EE57044()
{
  unint64_t result = qword_2686287B0;
  if (!qword_2686287B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686287B0);
  }
  return result;
}

unint64_t sub_22EE57098()
{
  unint64_t result = qword_2686287B8;
  if (!qword_2686287B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686287B8);
  }
  return result;
}

char *sub_22EE570EC()
{
  uint64_t v0 = sub_22EE80070();
  if (v0)
  {
    uint64_t v1 = v0;
    uint64_t v11 = MEMORY[0x263F8EE78];
    unint64_t result = sub_22EE5EAF0(0, v0 & ~(v0 >> 63), 0);
    if ((v1 & 0x8000000000000000) == 0)
    {
      while (1)
      {
        uint64_t v4 = sub_22EE80080();
        unint64_t v5 = v3;
        if (v4 == 45 && v3 == 0xE100000000000000)
        {
          unint64_t v5 = 0xE100000000000000;
          swift_bridgeObjectRelease();
          uint64_t v4 = 43;
        }
        else if (sub_22EE80660())
        {
          swift_bridgeObjectRelease();
          unint64_t v5 = 0xE100000000000000;
          uint64_t v4 = 43;
        }
        else
        {
          if (v4 == 95 && v5 == 0xE100000000000000)
          {
            unint64_t v5 = 0xE100000000000000;
            swift_bridgeObjectRelease();
LABEL_13:
            uint64_t v4 = 47;
            goto LABEL_14;
          }
          if (sub_22EE80660())
          {
            swift_bridgeObjectRelease();
            unint64_t v5 = 0xE100000000000000;
            goto LABEL_13;
          }
        }
LABEL_14:
        unint64_t v7 = *(void *)(v11 + 16);
        unint64_t v6 = *(void *)(v11 + 24);
        if (v7 >= v6 >> 1) {
          sub_22EE5EAF0((char *)(v6 > 1), v7 + 1, 1);
        }
        *(void *)(v11 + 16) = v7 + 1;
        uint64_t v8 = v11 + 16 * v7;
        *(void *)(v8 + 32) = v4;
        *(void *)(v8 + 40) = v5;
        sub_22EE80060();
        if (!--v1) {
          goto LABEL_17;
        }
      }
    }
    __break(1u);
  }
  else
  {
LABEL_17:
    __swift_instantiateConcreteTypeFromMangledName(&qword_268628820);
    sub_22EE57918();
    uint64_t v12 = sub_22EE7FB50();
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_22EE7FA70();
    swift_bridgeObjectRelease();
    uint64_t v10 = v9 & 3;
    if (v9 <= 0) {
      uint64_t v10 = -(-v9 & 3);
    }
    if (v10)
    {
      MEMORY[0x230FACE60](61, 0xE100000000000000, 4 - v10);
      sub_22EE7FAA0();
      swift_bridgeObjectRelease();
    }
    return (char *)v12;
  }
  return result;
}

Swift::String __swiftcall StringProtocol.base64URLEncodedToBase64()()
{
  sub_22EE57518((void (*)(char *, char *))sub_22EE5745C, 0, v0, MEMORY[0x263F8D120], MEMORY[0x263F8E628], *(void *)(*(void *)(v1 + 8) + 8), MEMORY[0x263F8E658], v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268628820);
  sub_22EE57918();
  uint64_t v9 = sub_22EE7FB50();
  uint64_t v10 = v3;
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_22EE7FA70();
  swift_bridgeObjectRelease();
  uint64_t v5 = v4 & 3;
  if (v4 <= 0) {
    uint64_t v5 = -(-v4 & 3);
  }
  if (v5)
  {
    MEMORY[0x230FACE60](61, 0xE100000000000000, 4 - v5);
    sub_22EE7FAA0();
    swift_bridgeObjectRelease();
  }
  uint64_t v6 = v9;
  unint64_t v7 = v10;
  result._object = v7;
  result._countAndFlagsBits = v6;
  return result;
}

uint64_t sub_22EE5745C@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *(void *)result;
  uint64_t v3 = *(void *)(result + 8);
  BOOL v5 = *(void *)result == 45 && v3 == 0xE100000000000000;
  if (v5 || (Swift::String result = sub_22EE80660(), (result & 1) != 0))
  {
    *a2 = 43;
    a2[1] = 0xE100000000000000;
  }
  else
  {
    BOOL v6 = v4 == 95 && v3 == 0xE100000000000000;
    if (v6 || (Swift::String result = sub_22EE80660(), (result & 1) != 0))
    {
      *a2 = 47;
      a2[1] = 0xE100000000000000;
    }
    else
    {
      *a2 = v4;
      a2[1] = v3;
      return swift_bridgeObjectRetain();
    }
  }
  return result;
}

uint64_t sub_22EE57518(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v28 = a5;
  uint64_t v29 = a8;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v27 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v40 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v33 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v11 = (char *)&v26 - v10;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(v15 - 8);
  uint64_t v31 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v26 - v16;
  uint64_t v18 = sub_22EE7FE70();
  if (!v18) {
    return sub_22EE7FCA0();
  }
  uint64_t v19 = v18;
  uint64_t v43 = sub_22EE802C0();
  uint64_t v32 = sub_22EE802D0();
  sub_22EE80290();
  uint64_t v36 = v8;
  uint64_t result = sub_22EE7FE50();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v34 = (void (**)(char *))(v33 + 2);
    uint64_t v35 = v14;
    ++v33;
    while (1)
    {
      uint64_t v21 = (void (*)(char *, void))sub_22EE7FF70();
      uint64_t v22 = v11;
      uint64_t v23 = v11;
      uint64_t v24 = AssociatedTypeWitness;
      (*v34)(v22);
      v21(v42, 0);
      uint64_t v25 = v41;
      v38(v23, v40);
      if (v25) {
        break;
      }
      uint64_t v41 = 0;
      (*v33)(v23, v24);
      sub_22EE802A0();
      sub_22EE7FED0();
      --v19;
      uint64_t v11 = v23;
      if (!v19)
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
        return v43;
      }
    }
    (*v33)(v23, v24);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v29, v40, v28);
  }
  return result;
}

unint64_t sub_22EE57918()
{
  unint64_t result = qword_268628828;
  if (!qword_268628828)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268628820);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628828);
  }
  return result;
}

uint64_t Data.init<A>(base64URLEncoded:options:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  StringProtocol.base64URLEncodedToBase64()();
  uint64_t v5 = sub_22EE7C300();
  unint64_t v7 = v6;
  swift_bridgeObjectRelease();
  sub_22EE4D4F4(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8))(a1, a3);
  if (v7 >> 60 != 15) {
    sub_22EB720DC(v5, v7);
  }
  return v5;
}

uint64_t LazyJWS.rawHeader.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LazyJWS.rawPayload.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LazyJWS.rawSignature.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LazyJWS.init(rawValue:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_22EE57CD8(a1, a2, v5);
  return sub_22EE57E20((uint64_t)v5, a3);
}

uint64_t LazyJWS.rawValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LazyJWS.payloadJSONString.getter()
{
  uint64_t v0 = sub_22EE7FA10();
  MEMORY[0x270FA5388](v0 - 8);
  swift_bridgeObjectRetain();
  sub_22EE570EC();
  uint64_t v1 = sub_22EE7C300();
  unint64_t v3 = v2;
  swift_bridgeObjectRelease();
  sub_22EE4D4F4(v1, v3);
  swift_bridgeObjectRelease();
  uint64_t v4 = 0;
  if (v3 >> 60 != 15)
  {
    sub_22EB720DC(v1, v3);
    sub_22EE7FA00();
    uint64_t v4 = sub_22EE7F9F0();
    sub_22EB720DC(v1, v3);
  }
  return v4;
}

uint64_t sub_22EE57C88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_22EE57CD8(*(void *)a1, *(void *)(a1 + 8), v4);
  return sub_22EE57E20((uint64_t)v4, a2);
}

uint64_t sub_22EE57CCC@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *a1 = *(void *)(v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_22EE57CD8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  v22[0] = 46;
  v22[1] = 0xE100000000000000;
  uint64_t v21 = v22;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_22EE5EE7C(3, 1, sub_22EE58138, (uint64_t)v20, a1, a2);
  swift_bridgeObjectRelease();
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  if (*((void *)v6 + 2) == 3)
  {
    uint64_t v18 = *((void *)v6 + 5);
    uint64_t v19 = *((void *)v6 + 4);
    uint64_t v7 = *((void *)v6 + 7);
    uint64_t v10 = *((void *)v6 + 11);
    uint64_t v16 = *((void *)v6 + 10);
    uint64_t v17 = *((void *)v6 + 6);
    uint64_t v8 = *((void *)v6 + 8);
    uint64_t v9 = *((void *)v6 + 9);
    uint64_t v11 = *((void *)v6 + 12);
    uint64_t v12 = *((void *)v6 + 13);
    uint64_t v13 = *((void *)v6 + 14);
    uint64_t v14 = *((void *)v6 + 15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v19;
  a3[1] = v18;
  a3[2] = v17;
  a3[3] = v7;
  a3[4] = v8;
  a3[5] = v9;
  a3[6] = v16;
  a3[7] = v10;
  a3[8] = v11;
  a3[9] = v12;
  a3[10] = v13;
  a3[11] = v14;
  return result;
}

uint64_t sub_22EE57E20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628830);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t destroy for LazyJWS()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LazyJWS(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  uint64_t v5 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for LazyJWS(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy96_8_0(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for LazyJWS(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  uint64_t v6 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LazyJWS(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LazyJWS(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LazyJWS()
{
  return &type metadata for LazyJWS;
}

uint64_t sub_22EE58138(void *a1)
{
  return sub_22EE5F4B0(a1, *(void **)(v1 + 16)) & 1;
}

uint64_t sub_22EE58158(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xD000000000000013;
  unint64_t v3 = 0x800000022EE85E00;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0xD000000000000015;
    }
    else {
      unint64_t v5 = 0xD000000000000013;
    }
    if (v4 == 1) {
      unint64_t v6 = 0x800000022EE85E20;
    }
    else {
      unint64_t v6 = 0x800000022EE85E40;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_12;
    }
  }
  else
  {
    unint64_t v5 = 0xD000000000000013;
    unint64_t v6 = 0x800000022EE85E00;
    int v7 = a2;
    if (!a2) {
      goto LABEL_12;
    }
  }
  if (v7 == 1)
  {
    unint64_t v2 = 0xD000000000000015;
    unint64_t v3 = 0x800000022EE85E20;
  }
  else
  {
    unint64_t v3 = 0x800000022EE85E40;
  }
LABEL_12:
  if (v5 == v2 && v6 == v3) {
    char v8 = 1;
  }
  else {
    char v8 = sub_22EE80660();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_22EE58250(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x79654B676F6CLL;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x79654B676F6CLL;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x49746375646F7270;
      unint64_t v3 = 0xE900000000000044;
      break;
    case 2:
      uint64_t v5 = 0x69666F725079656BLL;
      unint64_t v3 = 0xEA0000000000656CLL;
      break;
    case 3:
      uint64_t v5 = 0x736D61726170;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE900000000000044;
      if (v5 == 0x49746375646F7270) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x69666F725079656BLL;
      unint64_t v6 = 0xEA0000000000656CLL;
      goto LABEL_9;
    case 3:
      if (v5 == 0x736D61726170) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_22EE80660();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_22EE583D8(unsigned __int8 *a1, char *a2)
{
  return sub_22EE58250(*a1, *a2);
}

uint64_t sub_22EE583E4()
{
  return sub_22EE807F0();
}

uint64_t sub_22EE584BC()
{
  sub_22EE7FA60();

  return swift_bridgeObjectRelease();
}

uint64_t sub_22EE5857C()
{
  return sub_22EE807F0();
}

uint64_t sub_22EE58650@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22EE5AC4C();
  *a1 = result;
  return result;
}

void sub_22EE58680(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE600000000000000;
  uint64_t v3 = 0x79654B676F6CLL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE900000000000044;
      uint64_t v3 = 0x49746375646F7270;
      goto LABEL_3;
    case 2:
      *a1 = 0x69666F725079656BLL;
      a1[1] = 0xEA0000000000656CLL;
      break;
    case 3:
      *a1 = 0x736D61726170;
      a1[1] = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_22EE58718()
{
  uint64_t result = 0x79654B676F6CLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x49746375646F7270;
      break;
    case 2:
      uint64_t result = 0x69666F725079656BLL;
      break;
    case 3:
      uint64_t result = 0x736D61726170;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22EE587A4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22EE5AC4C();
  *a1 = result;
  return result;
}

uint64_t sub_22EE587CC(uint64_t a1)
{
  unint64_t v2 = sub_22EE58BAC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE58808(uint64_t a1)
{
  unint64_t v2 = sub_22EE58BAC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ProductPageLookupRequest.ParameterRequest.logKey.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ProductPageLookupRequest.ParameterRequest.productID.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ProductPageLookupRequest.ParameterRequest.keyProfile.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ProductPageLookupRequest.ParameterRequest.parameters.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ProductPageLookupRequest.ParameterRequest.init(productID:logKey:keyProfile:parameters:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  *a8 = a3;
  a8[1] = a4;
  a8[2] = result;
  a8[3] = a2;
  a8[4] = a5;
  a8[5] = a6;
  a8[6] = a7;
  return result;
}

uint64_t ProductPageLookupRequest.ParameterRequest.encode(to:)(void *a1)
{
  _OWORD v17[2] = *(id *)MEMORY[0x263EF8340];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628838);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22EE58BAC();
  sub_22EE80830();
  LOBYTE(v17[0]) = 1;
  sub_22EE805C0();
  if (v1) {
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  }
  LOBYTE(v17[0]) = 0;
  sub_22EE805C0();
  LOBYTE(v17[0]) = 2;
  sub_22EE805C0();
  char v8 = self;
  uint64_t v9 = (void *)sub_22EE7F7E0();
  v17[0] = 0;
  id v10 = objc_msgSend(v8, sel_dataWithJSONObject_options_error_, v9, 0, v17);

  id v11 = v17[0];
  if (!v10)
  {
    uint64_t v15 = v11;
    sub_22EE7C1D0();

    swift_willThrow();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  }
  uint64_t v12 = (void *)sub_22EE7C380();
  uint64_t v14 = v13;

  v17[0] = v12;
  v17[1] = v14;
  v16[7] = 3;
  sub_22EE4E12C();
  sub_22EE805E0();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  return sub_22EB2AC74((uint64_t)v12, (unint64_t)v14);
}

unint64_t sub_22EE58BAC()
{
  unint64_t result = qword_268628840;
  if (!qword_268628840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628840);
  }
  return result;
}

double ProductPageLookupRequest.ParameterRequest.init(from:)@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_22EE5AC98(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    double result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(void *)(a2 + 48) = v8;
  }
  return result;
}

double sub_22EE58C50@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_22EE5AC98(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    double result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(void *)(a2 + 48) = v8;
  }
  return result;
}

uint64_t sub_22EE58CA0(void *a1)
{
  return ProductPageLookupRequest.ParameterRequest.encode(to:)(a1);
}

uint64_t ProductPageLookupRequest.URLRequest.productID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ProductPageLookupRequest.URLRequest.logKey.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ProductPageLookupRequest.URLRequest.keyProfile.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ProductPageLookupRequest.URLRequest.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ProductPageLookupRequest.URLRequest() + 28);
  uint64_t v4 = sub_22EE7C2B0();
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ProductPageLookupRequest.URLRequest.init(productID:url:keyProfile:logKey:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  a8[2] = a6;
  a8[3] = a7;
  a8[4] = a4;
  a8[5] = a5;
  uint64_t v12 = (char *)a8 + *(int *)(type metadata accessor for ProductPageLookupRequest.URLRequest() + 28);
  uint64_t v13 = sub_22EE7C2B0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v12, a3, v13);
  *a8 = a1;
  a8[1] = a2;
  return result;
}

uint64_t ProductPageLookupRequest.URLRequest.parameters.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_22EE7C060();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  long long v5 = (char *)v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628848);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x263F8EE78];
  id v10 = (void *)sub_22EE593F4(MEMORY[0x263F8EE78]);
  type metadata accessor for ProductPageLookupRequest.URLRequest();
  sub_22EE7C080();
  uint64_t v11 = sub_22EE7C090();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11) != 1)
  {
    uint64_t v41 = sub_22EE7C070();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v11);
    if (v41) {
      uint64_t v13 = v41;
    }
    else {
      uint64_t v13 = v9;
    }
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14) {
      goto LABEL_3;
    }
LABEL_31:
    swift_bridgeObjectRelease();
LABEL_32:
    *(void *)&long long v58 = 25705;
    *((void *)&v58 + 1) = 0xE200000000000000;
    uint64_t v42 = MEMORY[0x263F8D310];
    sub_22EE80180();
    if (v10[2] && (unint64_t v43 = sub_22ED0EC20((uint64_t)v60), (v44 & 1) != 0))
    {
      sub_22EC202DC(v10[7] + 32 * v43, (uint64_t)&v58);
    }
    else
    {
      long long v58 = 0u;
      long long v59 = 0u;
    }
    sub_22EC9101C((uint64_t)v60);
    uint64_t v45 = *((void *)&v59 + 1);
    sub_22EADD81C((uint64_t)&v58, &qword_2686285B8);
    if (!v45)
    {
      *(void *)&long long v58 = 25705;
      *((void *)&v58 + 1) = 0xE200000000000000;
      sub_22EE80180();
      uint64_t v46 = *v1;
      uint64_t v47 = v1[1];
      *((void *)&v59 + 1) = v42;
      *(void *)&long long v58 = v46;
      *((void *)&v58 + 1) = v47;
      sub_22EE329A8(&v58, v57);
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v56 = v10;
      sub_22EE5A6E0(v57, (uint64_t)v60, isUniquelyReferenced_nonNull_native);
      id v10 = v56;
      swift_bridgeObjectRelease();
      sub_22EC9101C((uint64_t)v60);
    }
    return (uint64_t)v10;
  }
  sub_22EADD81C((uint64_t)v8, &qword_268628848);
  uint64_t v13 = MEMORY[0x263F8EE78];
  uint64_t v14 = *(void *)(MEMORY[0x263F8EE78] + 16);
  if (!v14) {
    goto LABEL_31;
  }
LABEL_3:
  v50[1] = v13;
  uint64_t v51 = v1;
  uint64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
  uint64_t v15 = v3 + 16;
  unint64_t v17 = v13 + ((*(unsigned __int8 *)(v15 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 64));
  uint64_t v53 = (void (**)(char *, uint64_t))(v15 - 8);
  uint64_t v54 = v16;
  uint64_t v18 = MEMORY[0x263F8D310];
  uint64_t v55 = v15;
  uint64_t v52 = *(void *)(v15 + 56);
  v16(v5, v17, v2);
  while (1)
  {
    *(void *)&long long v58 = sub_22EE7C040();
    *((void *)&v58 + 1) = v20;
    sub_22EE80180();
    uint64_t v21 = sub_22EE7C050();
    if (v22) {
      break;
    }
    swift_bridgeObjectRetain();
    unint64_t v34 = sub_22ED0EC20((uint64_t)v60);
    char v36 = v35;
    swift_bridgeObjectRelease();
    if (v36)
    {
      char v37 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&v57[0] = v10;
      if ((v37 & 1) == 0)
      {
        sub_22EE5A8A8();
        id v10 = *(void **)&v57[0];
      }
      sub_22EC9101C(v10[6] + 40 * v34);
      sub_22EE329A8((_OWORD *)(v10[7] + 32 * v34), &v58);
      sub_22EE5A514(v34, (uint64_t)v10);
      swift_bridgeObjectRelease();
    }
    else
    {
      long long v58 = 0u;
      long long v59 = 0u;
    }
    sub_22EC9101C((uint64_t)v60);
    sub_22EADD81C((uint64_t)&v58, &qword_2686285B8);
LABEL_6:
    (*v53)(v5, v2);
    v17 += v52;
    if (!--v14)
    {
      swift_bridgeObjectRelease();
      uint64_t v1 = v51;
      goto LABEL_32;
    }
    v54(v5, v17, v2);
  }
  uint64_t v23 = v2;
  uint64_t v24 = v18;
  *((void *)&v59 + 1) = v18;
  *(void *)&long long v58 = v21;
  *((void *)&v58 + 1) = v22;
  sub_22EE329A8(&v58, v57);
  char v25 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v56 = v10;
  unint64_t v27 = sub_22ED0EC20((uint64_t)v60);
  uint64_t v28 = v10[2];
  BOOL v29 = (v26 & 1) == 0;
  uint64_t v30 = v28 + v29;
  if (!__OFADD__(v28, v29))
  {
    char v31 = v26;
    if (v10[3] < v30)
    {
      sub_22EE59ED4(v30, v25);
      unint64_t v32 = sub_22ED0EC20((uint64_t)v60);
      if ((v31 & 1) != (v33 & 1)) {
        goto LABEL_41;
      }
      unint64_t v27 = v32;
      id v10 = v56;
      if ((v31 & 1) == 0) {
        goto LABEL_20;
      }
LABEL_4:
      uint64_t v19 = (_OWORD *)(v10[7] + 32 * v27);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      sub_22EE329A8(v57, v19);
LABEL_5:
      swift_bridgeObjectRelease();
      sub_22EC9101C((uint64_t)v60);
      uint64_t v18 = v24;
      uint64_t v2 = v23;
      goto LABEL_6;
    }
    if (v25)
    {
      id v10 = v56;
      if (v26) {
        goto LABEL_4;
      }
    }
    else
    {
      sub_22EE5A8A8();
      id v10 = v56;
      if (v31) {
        goto LABEL_4;
      }
    }
LABEL_20:
    v10[(v27 >> 6) + 8] |= 1 << v27;
    sub_22EADAAEC((uint64_t)v60, v10[6] + 40 * v27);
    sub_22EE329A8(v57, (_OWORD *)(v10[7] + 32 * v27));
    uint64_t v38 = v10[2];
    BOOL v39 = __OFADD__(v38, 1);
    uint64_t v40 = v38 + 1;
    if (v39) {
      goto LABEL_40;
    }
    v10[2] = v40;
    goto LABEL_5;
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  uint64_t result = sub_22EE806E0();
  __break(1u);
  return result;
}

unint64_t sub_22EE593F4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2686288B8);
  uint64_t v2 = sub_22EE80410();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_22EE5C324(v6, (uint64_t)v15);
    unint64_t result = sub_22ED0EC20((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_22EE329A8(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_22EE59524(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2686288B0);
  uint64_t v2 = (void *)sub_22EE80410();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_22ED0E9D8(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v11 = (uint64_t *)(v2[6] + 16 * result);
    *long long v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    *uint64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t static ProductPageLookupRequest.URLRequest.productID(from:)()
{
  uint64_t v0 = sub_22EE7C020();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v14 - v5;
  v14[0] = sub_22EE7C250();
  v14[1] = v7;
  sub_22EE7C000();
  sub_22EE7C010();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v6, v0);
  sub_22EE5B398();
  uint64_t v9 = sub_22EE800D0();
  unint64_t v11 = v10;
  v8(v3, v0);
  swift_bridgeObjectRelease();
  uint64_t v12 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0) {
    uint64_t v12 = v9 & 0xFFFFFFFFFFFFLL;
  }
  if (!v12)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v9;
}

uint64_t sub_22EE597B8()
{
  uint64_t result = 0x49746375646F7270;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x79654B676F6CLL;
      break;
    case 2:
      uint64_t result = 0x69666F725079656BLL;
      break;
    case 3:
      uint64_t result = 7107189;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22EE59844@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_22EE5C168(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22EE5986C(uint64_t a1)
{
  unint64_t v2 = sub_22EE5B3EC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE598A8(uint64_t a1)
{
  unint64_t v2 = sub_22EE5B3EC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ProductPageLookupRequest.URLRequest.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628858);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22EE5B3EC();
  sub_22EE80830();
  v8[15] = 0;
  sub_22EE805C0();
  if (!v1)
  {
    v8[14] = 1;
    sub_22EE805C0();
    v8[13] = 2;
    sub_22EE805C0();
    type metadata accessor for ProductPageLookupRequest.URLRequest();
    v8[12] = 3;
    sub_22EE7C2B0();
    sub_22EE5B440(&qword_268628498);
    sub_22EE805E0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ProductPageLookupRequest.URLRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v3 = sub_22EE7C2B0();
  uint64_t v21 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628868);
  uint64_t v23 = *(void *)(v6 - 8);
  uint64_t v24 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ProductPageLookupRequest.URLRequest();
  MEMORY[0x270FA5388](v9);
  unint64_t v11 = (void *)((char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22EE5B3EC();
  char v25 = v8;
  uint64_t v12 = v26;
  sub_22EE80820();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v26 = v5;
  uint64_t v13 = v23;
  uint64_t v14 = v24;
  char v30 = 0;
  *unint64_t v11 = sub_22EE80540();
  v11[1] = v15;
  char v29 = 1;
  v11[2] = sub_22EE80540();
  v11[3] = v16;
  char v28 = 2;
  uint64_t v17 = sub_22EE80540();
  v20[1] = 0;
  v11[4] = v17;
  v11[5] = v18;
  char v27 = 3;
  sub_22EE5B440(&qword_268628468);
  sub_22EE80560();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v25, v14);
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))((char *)v11 + *(int *)(v9 + 28), v26, v3);
  sub_22EE5B484((uint64_t)v11, v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_22EE5B4E8((uint64_t)v11);
}

uint64_t sub_22EE59EA4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ProductPageLookupRequest.URLRequest.init(from:)(a1, a2);
}

uint64_t sub_22EE59EBC(void *a1)
{
  return ProductPageLookupRequest.URLRequest.encode(to:)(a1);
}

uint64_t sub_22EE59ED4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2686288B8);
  uint64_t v6 = sub_22EE80400();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v21 + 1;
      if (v21 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v14);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v14 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v14);
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v24;
      }
    }
LABEL_21:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v5 + 48) + 40 * v20;
    if (a2)
    {
      long long v26 = *(_OWORD *)v25;
      long long v27 = *(_OWORD *)(v25 + 16);
      uint64_t v40 = *(void *)(v25 + 32);
      long long v38 = v26;
      long long v39 = v27;
      sub_22EE329A8((_OWORD *)(*(void *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_22EADAAEC(v25, (uint64_t)&v38);
      sub_22EC202DC(*(void *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    uint64_t result = sub_22EE80140();
    uint64_t v28 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = *(void *)(v7 + 48) + 40 * v15;
    long long v17 = v38;
    long long v18 = v39;
    *(void *)(v16 + 32) = v40;
    *(_OWORD *)uint64_t v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    uint64_t result = (uint64_t)sub_22EE329A8(v37, (_OWORD *)(*(void *)(v7 + 56) + 32 * v15));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v22 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_22EE5A1EC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2686288B0);
  char v42 = a2;
  uint64_t v6 = sub_22EE80400();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  long long v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    int64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    unint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_22EE807B0();
    sub_22EE7FA60();
    uint64_t result = sub_22EE807F0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *unint64_t v19 = v34;
    v19[1] = v33;
    unint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *unint64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  int64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

unint64_t sub_22EE5A514(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_22EE80120();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_22EADAAEC(*(void *)(a2 + 48) + 40 * v6, (uint64_t)v28);
        uint64_t v10 = sub_22EE80140();
        uint64_t result = sub_22EC9101C((uint64_t)v28);
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            uint64_t v14 = *(void *)(a2 + 48);
            unint64_t v15 = v14 + 40 * v3;
            unint64_t v16 = (long long *)(v14 + 40 * v6);
            if (v3 != v6 || v15 >= (unint64_t)v16 + 40)
            {
              long long v17 = *v16;
              long long v18 = v16[1];
              *(void *)(v15 + 32) = *((void *)v16 + 4);
              *(_OWORD *)unint64_t v15 = v17;
              *(_OWORD *)(v15 + 16) = v18;
            }
            uint64_t v19 = *(void *)(a2 + 56);
            unint64_t v20 = (_OWORD *)(v19 + 32 * v3);
            unint64_t v21 = (_OWORD *)(v19 + 32 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v20 >= v21 + 2))
            {
              long long v9 = v21[1];
              *unint64_t v20 = *v21;
              v20[1] = v9;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << result) - 1;
  }
  *unint64_t v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

_OWORD *sub_22EE5A6E0(_OWORD *a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  unint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_22ED0EC20(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_22EE5A8A8();
      goto LABEL_7;
    }
    sub_22EE59ED4(v13, a3 & 1);
    unint64_t v19 = sub_22ED0EC20(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      unint64_t v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
LABEL_13:
      sub_22EADAAEC(a2, (uint64_t)v21);
      return sub_22EE5A82C(v10, (uint64_t)v21, a1, v16);
    }
LABEL_15:
    uint64_t result = (_OWORD *)sub_22EE806E0();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v16 = *v4;
  if ((v14 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  long long v17 = (_OWORD *)(v16[7] + 32 * v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);

  return sub_22EE329A8(a1, v17);
}

_OWORD *sub_22EE5A82C(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v5 = a4[6] + 40 * a1;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(void *)(v5 + 32) = *(void *)(a2 + 32);
  uint64_t result = sub_22EE329A8(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

void *sub_22EE5A8A8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2686288B8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22EE803F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    sub_22EADAAEC(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    uint64_t v17 = 32 * v15;
    sub_22EC202DC(*(void *)(v2 + 56) + v17, (uint64_t)v24);
    uint64_t v18 = *(void *)(v4 + 48) + v16;
    long long v19 = v25[0];
    long long v20 = v25[1];
    *(void *)(v18 + 32) = v26;
    *(_OWORD *)uint64_t v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    uint64_t result = sub_22EE329A8(v24, (_OWORD *)(*(void *)(v4 + 56) + v17));
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_22EE5AA90()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2686288B0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22EE803F0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    long long v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    int64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    void *v23 = v19;
    v23[1] = v18;
    uint64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    *uint64_t v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_22EE5AC4C()
{
  unint64_t v0 = sub_22EE804E0();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_22EE5AC98@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v60 = *MEMORY[0x263EF8340];
  uint64_t v3 = sub_22EE80230();
  uint64_t v54 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686288C8);
  uint64_t v55 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  unint64_t v9 = sub_22EE58BAC();
  uint64_t v10 = v56;
  sub_22EE80820();
  if (v10) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  unint64_t v52 = v9;
  uint64_t v56 = v5;
  uint64_t v11 = v55;
  LOBYTE(v58) = 0;
  uint64_t v12 = sub_22EE80540();
  uint64_t v15 = v14;
  uint64_t v50 = v12;
  LOBYTE(v58) = 1;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_22EE80540();
  uint64_t v18 = v17;
  uint64_t v51 = a1;
  uint64_t v47 = v16;
  LOBYTE(v58) = 2;
  swift_bridgeObjectRetain();
  uint64_t v49 = 0;
  uint64_t v19 = v18;
  uint64_t v46 = sub_22EE80540();
  LOBYTE(v57) = 3;
  uint64_t v21 = v20;
  sub_22EE4E6D8();
  swift_bridgeObjectRetain();
  sub_22EE80560();
  uint64_t v48 = v21;
  unint64_t v43 = v8;
  uint64_t v44 = v6;
  uint64_t v45 = v19;
  int64_t v23 = v58;
  unint64_t v22 = v59;
  uint64_t v24 = self;
  int64_t v25 = (void *)sub_22EE7C350();
  long long v58 = 0;
  id v26 = objc_msgSend(v24, sel_JSONObjectWithData_options_error_, v25, 0, &v58);

  if (v26)
  {
    int64_t v27 = v58;
    sub_22EE800E0();
    swift_unknownObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2686288D0);
    char v28 = swift_dynamicCast();
    uint64_t v29 = v45;
    if (v28)
    {
      sub_22EB2AC74((uint64_t)v23, v22);
      uint64_t v30 = v57;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v43, v44);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
      swift_bridgeObjectRelease();
      uint64_t v31 = v48;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      unint64_t v32 = v53;
      *uint64_t v53 = v50;
      v32[1] = v15;
      v32[2] = v47;
      v32[3] = v29;
      v32[4] = v46;
      v32[5] = v31;
      v32[6] = v30;
      return result;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_268628630);
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_22EE8A1B0;
    unint64_t v35 = v52;
    *(void *)(v34 + 56) = &type metadata for ProductPageLookupRequest.ParameterRequest.CodingKeys;
    *(void *)(v34 + 64) = v35;
    *(unsigned char *)(v34 + 32) = 3;
    long long v58 = 0;
    unint64_t v59 = 0xE000000000000000;
    sub_22EE801C0();
    swift_bridgeObjectRelease();
    uint64_t v36 = v56;
    uint64_t v53 = v23;
    sub_22EE80220();
    uint64_t v37 = sub_22EE80240();
    swift_allocError();
    uint64_t v39 = v38;
    unint64_t v40 = v22;
    uint64_t v41 = v54;
    (*(void (**)(uint64_t, char *, uint64_t))(v54 + 16))(v38, v36, v3);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v37 - 8) + 104))(v39, *MEMORY[0x263F8DCB8], v37);
    swift_willThrow();
    sub_22EB2AC74((uint64_t)v53, v40);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v36, v3);
  }
  else
  {
    uint64_t v33 = v58;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_22EE7C1D0();

    swift_willThrow();
    sub_22EB2AC74((uint64_t)v23, v22);
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v43, v44);
  uint64_t v42 = v49;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
  swift_bridgeObjectRelease();
  if (!v42) {
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for ProductPageLookupRequest.URLRequest()
{
  uint64_t result = qword_268628870;
  if (!qword_268628870) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_22EE5B398()
{
  unint64_t result = qword_268628850;
  if (!qword_268628850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628850);
  }
  return result;
}

unint64_t sub_22EE5B3EC()
{
  unint64_t result = qword_268628860;
  if (!qword_268628860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628860);
  }
  return result;
}

uint64_t sub_22EE5B440(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22EE7C2B0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22EE5B484(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ProductPageLookupRequest.URLRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22EE5B4E8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ProductPageLookupRequest.URLRequest();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for ProductPageLookupRequest()
{
  return &type metadata for ProductPageLookupRequest;
}

uint64_t destroy for ProductPageLookupRequest.ParameterRequest()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ProductPageLookupRequest.ParameterRequest(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ProductPageLookupRequest.ParameterRequest(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ProductPageLookupRequest.ParameterRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ProductPageLookupRequest.ParameterRequest(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ProductPageLookupRequest.ParameterRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ProductPageLookupRequest.ParameterRequest()
{
  return &type metadata for ProductPageLookupRequest.ParameterRequest;
}

uint64_t *initializeBufferWithCopyOfBuffer for ProductPageLookupRequest.URLRequest(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    uint64_t v8 = *(int *)(a3 + 28);
    unint64_t v9 = (char *)a2 + v8;
    uint64_t v10 = (char *)a1 + v8;
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v11 = sub_22EE7C2B0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v10, v9, v11);
  }
  return v3;
}

uint64_t destroy for ProductPageLookupRequest.URLRequest(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_22EE7C2B0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *initializeWithCopy for ProductPageLookupRequest.URLRequest(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)a2 + v7;
  unint64_t v9 = (char *)a1 + v7;
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v10 = sub_22EE7C2B0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v9, v8, v10);
  return a1;
}

void *assignWithCopy for ProductPageLookupRequest.URLRequest(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22EE7C2B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for ProductPageLookupRequest.URLRequest(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_22EE7C2B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

void *assignWithTake for ProductPageLookupRequest.URLRequest(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_22EE7C2B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for ProductPageLookupRequest.URLRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EE5BC34);
}

uint64_t sub_22EE5BC34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_22EE7C2B0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ProductPageLookupRequest.URLRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EE5BCF8);
}

uint64_t sub_22EE5BCF8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_22EE7C2B0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_22EE5BDA0()
{
  uint64_t result = sub_22EE7C2B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ProductPageLookupRequest.URLRequest.CodingKeys()
{
  return &type metadata for ProductPageLookupRequest.URLRequest.CodingKeys;
}

unsigned char *_s15StoreKit_Shared24ProductPageLookupRequestV10URLRequestV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22EE5BF20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ProductPageLookupRequest.ParameterRequest.CodingKeys()
{
  return &type metadata for ProductPageLookupRequest.ParameterRequest.CodingKeys;
}

unint64_t sub_22EE5BF5C()
{
  unint64_t result = qword_268628880;
  if (!qword_268628880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628880);
  }
  return result;
}

unint64_t sub_22EE5BFB4()
{
  unint64_t result = qword_268628888;
  if (!qword_268628888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628888);
  }
  return result;
}

unint64_t sub_22EE5C00C()
{
  unint64_t result = qword_268628890;
  if (!qword_268628890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628890);
  }
  return result;
}

unint64_t sub_22EE5C064()
{
  unint64_t result = qword_268628898;
  if (!qword_268628898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628898);
  }
  return result;
}

unint64_t sub_22EE5C0BC()
{
  unint64_t result = qword_2686288A0;
  if (!qword_2686288A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686288A0);
  }
  return result;
}

unint64_t sub_22EE5C114()
{
  unint64_t result = qword_2686288A8;
  if (!qword_2686288A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686288A8);
  }
  return result;
}

uint64_t sub_22EE5C168(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x49746375646F7270 && a2 == 0xE900000000000044;
  if (v2 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x79654B676F6CLL && a2 == 0xE600000000000000 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x69666F725079656BLL && a2 == 0xEA0000000000656CLL || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_22EE80660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_22EE5C324(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686288C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t ProductResponse.Key.rawValue.getter(char a1)
{
  unint64_t result = 0x6B726F77747261;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7475626972747461;
      break;
    case 2:
      unint64_t result = 0x79636E6572727563;
      break;
    case 3:
      unint64_t result = 0x7470697263736564;
      break;
    case 4:
      unint64_t result = 0x746E756F63736964;
      break;
    case 5:
      unint64_t result = 1701667182;
      break;
    case 6:
      unint64_t result = 0x726F466563697270;
      break;
    case 7:
      unint64_t result = 0x6F43646574736F68;
      break;
    case 8:
      unint64_t result = 0x6E6F6973726576;
      break;
    case 9:
      unint64_t result = 1702521203;
      break;
    case 10:
      unint64_t result = 0xD000000000000011;
      break;
    case 11:
      unint64_t result = 25705;
      break;
    case 12:
      unint64_t result = 1684957547;
      break;
    case 13:
      unint64_t result = 0x6449726566666FLL;
      break;
    case 14:
      unint64_t result = 0x73726566666FLL;
      break;
    case 15:
      unint64_t result = 0x6570795465646F6DLL;
      break;
    case 16:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 17:
      unint64_t result = 0x726550664F6D756ELL;
      break;
    case 18:
      unint64_t result = 0x6563697270;
      break;
    case 19:
      unint64_t result = 0x6C61636F4C756369;
      break;
    case 20:
      unint64_t result = 0x6D614E726566666FLL;
      break;
    case 21:
      unint64_t result = 0xD000000000000015;
      break;
    case 22:
      unint64_t result = 0x647261646E617473;
      break;
    case 23:
    case 25:
      unint64_t result = 0xD000000000000016;
      break;
    case 24:
      unint64_t result = 0xD000000000000014;
      break;
    case 26:
      unint64_t result = 1701869940;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22EE5C6A8(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = ProductResponse.Key.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == ProductResponse.Key.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_22EE80660();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_22EE5C734()
{
  char v1 = *v0;
  sub_22EE807B0();
  ProductResponse.Key.rawValue.getter(v1);
  sub_22EE7FA60();
  swift_bridgeObjectRelease();
  return sub_22EE807F0();
}

uint64_t sub_22EE5C798()
{
  ProductResponse.Key.rawValue.getter(*v0);
  sub_22EE7FA60();

  return swift_bridgeObjectRelease();
}

uint64_t sub_22EE5C7EC()
{
  char v1 = *v0;
  sub_22EE807B0();
  ProductResponse.Key.rawValue.getter(v1);
  sub_22EE7FA60();
  swift_bridgeObjectRelease();
  return sub_22EE807F0();
}

uint64_t sub_22EE5C84C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s15StoreKit_Shared15ProductResponseV3KeyO8rawValueAESgSS_tcfC_0();
  *a1 = result;
  return result;
}

unint64_t sub_22EE5C87C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = ProductResponse.Key.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t ProductResponse.serverCorrelationID.getter(uint64_t a1)
{
  return a1;
}

uint64_t ProductResponse.products.getter()
{
  return swift_bridgeObjectRetain();
}

StoreKit_Shared::ProductResponse __swiftcall ProductResponse.init(products:serverCorrelationID:)(Swift::OpaquePointer products, Swift::String_optional serverCorrelationID)
{
  uint64_t countAndFlagsBits = serverCorrelationID.value._countAndFlagsBits;
  object = serverCorrelationID.value._object;
  rawValue = products._rawValue;
  result.products._rawValue = rawValue;
  result.serverCorrelationID.value._object = object;
  result.serverCorrelationID.value._uint64_t countAndFlagsBits = countAndFlagsBits;
  return result;
}

uint64_t ProductResponse.init(from:)(void *a1)
{
  uint64_t result = sub_22EE5CDA8(a1);
  if (v1) {
    return v3;
  }
  return result;
}

uint64_t ProductResponse.encode(to:)(void *a1, void *a2, unint64_t a3)
{
  uint64_t v21 = a2;
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686288D8);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = self;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268628628);
  uint64_t v11 = (void *)sub_22EE7FC50();
  id v23 = 0;
  id v12 = objc_msgSend(v10, sel_dataWithJSONObject_options_error_, v11, 0, &v23);

  id v13 = v23;
  if (v12)
  {
    uint64_t v14 = (void *)sub_22EE7C380();
    unint64_t v20 = v15;

    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_22EE5D320();
    sub_22EE80830();
    id v23 = v21;
    unint64_t v24 = a3;
    char v22 = 0;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2686285D8);
    sub_22EE5D958((unint64_t *)&qword_2686285E0);
    sub_22EE805E0();
    if (v3)
    {
      sub_22EB2AC74((uint64_t)v14, v20);
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v18 = (uint64_t)v14;
      id v23 = v14;
      unint64_t v19 = v20;
      unint64_t v24 = v20;
      char v22 = 1;
      sub_22EE4E12C();
      sub_22EE805E0();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      return sub_22EB2AC74(v18, v19);
    }
  }
  else
  {
    uint64_t v17 = v13;
    sub_22EE7C1D0();

    return swift_willThrow();
  }
}

BOOL sub_22EE5CC0C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_22EE5CC24()
{
  if (*v0) {
    return 0x73746375646F7270;
  }
  else {
    return 0xD000000000000013;
  }
}

uint64_t sub_22EE5CC64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_22EE5D868(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22EE5CC8C(uint64_t a1)
{
  unint64_t v2 = sub_22EE5D320();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE5CCC8(uint64_t a1)
{
  unint64_t v2 = sub_22EE5D320();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_22EE5CD04@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_22EE5CDA8(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_22EE5CD34(void *a1)
{
  return ProductResponse.encode(to:)(a1, *(void **)v1, *(void *)(v1 + 8));
}

uint64_t _s15StoreKit_Shared15ProductResponseV3KeyO8rawValueAESgSS_tcfC_0()
{
  unint64_t v0 = sub_22EE80690();
  swift_bridgeObjectRelease();
  if (v0 >= 0x1B) {
    return 27;
  }
  else {
    return v0;
  }
}

uint64_t sub_22EE5CDA8(void *a1)
{
  uint64_t v39 = *MEMORY[0x263EF8340];
  uint64_t v2 = sub_22EE80230();
  uint64_t v33 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628908);
  uint64_t v34 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  unint64_t v8 = sub_22EE5D320();
  uint64_t v9 = v35;
  sub_22EE80820();
  if (v9) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  unint64_t v32 = v8;
  unint64_t v35 = v4;
  uint64_t v10 = v34;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2686285D8);
  LOBYTE(v36) = 0;
  sub_22EE5D958(&qword_268628910);
  sub_22EE80560();
  id v13 = v37;
  unint64_t v12 = v38;
  LOBYTE(v36) = 1;
  sub_22EE4E6D8();
  swift_bridgeObjectRetain();
  sub_22EE80560();
  id v29 = v13;
  uint64_t v31 = v5;
  uint64_t v15 = (uint64_t)v37;
  unint64_t v14 = v38;
  uint64_t v16 = self;
  unint64_t v30 = v14;
  uint64_t v17 = (void *)sub_22EE7C350();
  id v37 = 0;
  id v18 = objc_msgSend(v16, sel_JSONObjectWithData_options_error_, v17, 0, &v37);

  if (v18)
  {
    uint64_t v28 = v15;
    id v19 = v37;
    sub_22EE800E0();
    swift_unknownObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_268628918);
    if (swift_dynamicCast())
    {
      sub_22EB2AC74(v28, v30);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v31);
      swift_bridgeObjectRetain();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v29;
    }
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_268628630);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_22EE8A1B0;
    unint64_t v22 = v32;
    *(void *)(v21 + 56) = &type metadata for ProductResponse.CodingKeys;
    *(void *)(v21 + 64) = v22;
    *(unsigned char *)(v21 + 32) = 1;
    id v37 = 0;
    unint64_t v38 = 0xE000000000000000;
    sub_22EE801C0();
    swift_bridgeObjectRelease();
    sub_22EE80220();
    uint64_t v23 = sub_22EE80240();
    swift_allocError();
    unint64_t v32 = v12;
    uint64_t v25 = v24;
    uint64_t v26 = v33;
    int64_t v27 = v35;
    (*(void (**)(uint64_t, char *, uint64_t))(v33 + 16))(v24, v35, v2);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v23 - 8) + 104))(v25, *MEMORY[0x263F8DCB8], v23);
    swift_willThrow();
    sub_22EB2AC74(v28, v30);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v2);
  }
  else
  {
    id v20 = v37;
    swift_bridgeObjectRelease();
    sub_22EE7C1D0();

    swift_willThrow();
    sub_22EB2AC74(v15, v30);
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v31);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

unint64_t sub_22EE5D320()
{
  unint64_t result = qword_2686288E0;
  if (!qword_2686288E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686288E0);
  }
  return result;
}

unint64_t sub_22EE5D378()
{
  unint64_t result = qword_2686288E8;
  if (!qword_2686288E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686288E8);
  }
  return result;
}

__n128 __swift_memcpy24_8_0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ProductResponse(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for ProductResponse()
{
  return &type metadata for ProductResponse;
}

uint64_t getEnumTagSinglePayload for ProductResponse.Key(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE6) {
    goto LABEL_17;
  }
  if (a2 + 26 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 26) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 26;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 26;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 26;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1B;
  int v8 = v6 - 27;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ProductResponse.Key(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 26 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 26) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE5)
  {
    unsigned int v6 = ((a2 - 230) >> 8) + 1;
    *__n128 result = a2 + 26;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22EE5D594);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 26;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ProductResponse.Key()
{
  return &type metadata for ProductResponse.Key;
}

uint64_t getEnumTagSinglePayload for ProductResponse.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ProductResponse.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22EE5D728);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ProductResponse.CodingKeys()
{
  return &type metadata for ProductResponse.CodingKeys;
}

unint64_t sub_22EE5D764()
{
  unint64_t result = qword_2686288F0;
  if (!qword_2686288F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686288F0);
  }
  return result;
}

unint64_t sub_22EE5D7BC()
{
  unint64_t result = qword_2686288F8;
  if (!qword_2686288F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686288F8);
  }
  return result;
}

unint64_t sub_22EE5D814()
{
  unint64_t result = qword_268628900;
  if (!qword_268628900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628900);
  }
  return result;
}

uint64_t sub_22EE5D868(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x800000022EE86280 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73746375646F7270 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_22EE80660();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_22EE5D958(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686285D8);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t PurchaseIntentInternal.appName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PurchaseIntentInternal.bundleID.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PurchaseIntentInternal.productID.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PurchaseIntentInternal.productName.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PurchaseIntentInternal.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseIntentInternal() + 32);
  uint64_t v4 = sub_22EE7C3C0();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for PurchaseIntentInternal()
{
  uint64_t result = qword_268628948;
  if (!qword_268628948) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t PurchaseIntentInternal.additionalBuyParams.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PurchaseIntentInternal() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PurchaseIntentInternal.init(appName:bundleID:productID:productName:timestamp:additionalBuyParams:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  uint64_t v13 = type metadata accessor for PurchaseIntentInternal();
  unint64_t v14 = (char *)a9 + *(int *)(v13 + 32);
  uint64_t v15 = sub_22EE7C3C0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v14, a10, v15);
  uint64_t v17 = (void *)((char *)a9 + *(int *)(v13 + 36));
  *uint64_t v17 = a11;
  v17[1] = a12;
  return result;
}

unint64_t PurchaseIntentInternal.additionalBuyParamsDictionary.getter()
{
  uint64_t v1 = type metadata accessor for PurchaseIntentInternal();
  int v2 = (uint64_t *)(v0 + *(int *)(v1 + 36));
  unint64_t v3 = v2[1];
  if (!v3)
  {
    uint64_t v34 = MEMORY[0x263F8EE78];
    return sub_22EE59524(v34);
  }
  uint64_t v4 = *v2;
  uint64_t v69 = 38;
  unint64_t v70 = 0xE100000000000000;
  MEMORY[0x270FA5388](v1);
  uint64_t v62 = &v69;
  swift_bridgeObjectRetain_n();
  uint64_t v5 = 0;
  unsigned int v6 = sub_22EE5EE7C(0x7FFFFFFFFFFFFFFFLL, 1, sub_22EE5F508, (uint64_t)v61, v4, v3);
  swift_bridgeObjectRelease();
  int64_t v7 = *((void *)v6 + 2);
  if (v7)
  {
    uint64_t v68 = MEMORY[0x263F8EE78];
    sub_22EE5EB10(0, v7, 0);
    uint64_t v8 = 0;
    uint64_t v63 = v6;
    int64_t v64 = v7;
    uint64_t v65 = v6 + 32;
    do
    {
      uint64_t v9 = &v65[32 * v8];
      uint64_t v10 = *(void *)v9;
      uint64_t v11 = *((void *)v9 + 1);
      uint64_t v13 = *((void *)v9 + 2);
      uint64_t v12 = *((void *)v9 + 3);
      swift_bridgeObjectRetain();
      uint64_t v14 = MEMORY[0x230FACD80](v10, v11, v13, v12);
      unint64_t v16 = v15;
      uint64_t v69 = 61;
      unint64_t v70 = 0xE100000000000000;
      MEMORY[0x270FA5388](v14);
      uint64_t v62 = &v69;
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_22EE5EE7C(0x7FFFFFFFFFFFFFFFLL, 1, sub_22EE5F508, (uint64_t)v61, v14, v16);
      swift_bridgeObjectRelease();
      int64_t v18 = *((void *)v17 + 2);
      if (v18)
      {
        uint64_t v66 = v12;
        uint64_t v67 = v5;
        uint64_t v69 = MEMORY[0x263F8EE78];
        sub_22EE5EB30(0, v18, 0);
        uint64_t v19 = v69;
        id v20 = (uint64_t *)(v17 + 56);
        do
        {
          uint64_t v21 = *(v20 - 3);
          uint64_t v22 = *(v20 - 2);
          uint64_t v23 = *(v20 - 1);
          uint64_t v24 = *v20;
          swift_bridgeObjectRetain();
          uint64_t v25 = MEMORY[0x230FACD80](v21, v22, v23, v24);
          uint64_t v27 = v26;
          swift_bridgeObjectRelease();
          uint64_t v69 = v19;
          unint64_t v29 = *(void *)(v19 + 16);
          unint64_t v28 = *(void *)(v19 + 24);
          if (v29 >= v28 >> 1)
          {
            sub_22EE5EB30((char *)(v28 > 1), v29 + 1, 1);
            uint64_t v19 = v69;
          }
          *(void *)(v19 + 16) = v29 + 1;
          unint64_t v30 = v19 + 16 * v29;
          *(void *)(v30 + 32) = v25;
          *(void *)(v30 + 40) = v27;
          v20 += 4;
          --v18;
        }
        while (v18);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        int64_t v7 = v64;
        uint64_t v5 = v67;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v19 = MEMORY[0x263F8EE78];
      }
      uint64_t v31 = v68;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22EE5EB10(0, *(void *)(v31 + 16) + 1, 1);
        uint64_t v31 = v68;
      }
      unint64_t v33 = *(void *)(v31 + 16);
      unint64_t v32 = *(void *)(v31 + 24);
      if (v33 >= v32 >> 1)
      {
        sub_22EE5EB10((void *)(v32 > 1), v33 + 1, 1);
        uint64_t v31 = v68;
      }
      ++v8;
      *(void *)(v31 + 16) = v33 + 1;
      *(void *)(v31 + 8 * v33 + 32) = v19;
    }
    while (v8 != v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v31 = MEMORY[0x263F8EE78];
  }
  unint64_t v36 = sub_22EE59524(MEMORY[0x263F8EE78]);
  id v37 = *(char **)(v31 + 16);
  if (!v37)
  {
    swift_bridgeObjectRelease();
    return v36;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v38 = 0;
  int64_t v64 = v36;
  uint64_t v65 = v37;
  while (1)
  {
    uint64_t v41 = *(void **)(v31 + 8 * v38 + 32);
    if (v41[2] != 2) {
      goto LABEL_25;
    }
    uint64_t v43 = v41[4];
    uint64_t v42 = v41[5];
    uint64_t v44 = v41[7];
    uint64_t v66 = v41[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v67 = v44;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v69 = v36;
    unint64_t v47 = sub_22ED0E9D8(v43, v42);
    uint64_t v48 = *(void *)(v36 + 16);
    BOOL v49 = (v46 & 1) == 0;
    uint64_t v50 = v48 + v49;
    if (__OFADD__(v48, v49)) {
      break;
    }
    char v51 = v46;
    if (*(void *)(v36 + 24) >= v50)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v54 = (void *)v69;
        if ((v46 & 1) == 0) {
          goto LABEL_34;
        }
      }
      else
      {
        sub_22EE5AA90();
        uint64_t v54 = (void *)v69;
        if ((v51 & 1) == 0) {
          goto LABEL_34;
        }
      }
    }
    else
    {
      sub_22EE5A1EC(v50, isUniquelyReferenced_nonNull_native);
      unint64_t v52 = sub_22ED0E9D8(v43, v42);
      if ((v51 & 1) != (v53 & 1)) {
        goto LABEL_43;
      }
      unint64_t v47 = v52;
      uint64_t v54 = (void *)v69;
      if ((v51 & 1) == 0)
      {
LABEL_34:
        v54[(v47 >> 6) + 8] |= 1 << v47;
        uint64_t v55 = (uint64_t *)(v54[6] + 16 * v47);
        *uint64_t v55 = v43;
        v55[1] = v42;
        uint64_t v56 = (void *)(v54[7] + 16 * v47);
        uint64_t v57 = v67;
        *uint64_t v56 = v66;
        v56[1] = v57;
        uint64_t v58 = v54[2];
        BOOL v59 = __OFADD__(v58, 1);
        uint64_t v60 = v58 + 1;
        if (v59) {
          goto LABEL_42;
        }
        v54[2] = v60;
        swift_bridgeObjectRetain();
        goto LABEL_24;
      }
    }
    uint64_t v39 = (void *)(v54[7] + 16 * v47);
    swift_bridgeObjectRelease();
    uint64_t v40 = v67;
    *uint64_t v39 = v66;
    v39[1] = v40;
LABEL_24:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v36 = (unint64_t)v54;
    id v37 = v65;
LABEL_25:
    if (v37 == (char *)++v38)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return v36;
    }
  }
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  unint64_t result = sub_22EE806E0();
  __break(1u);
  return result;
}

uint64_t PurchaseIntentInternal.buyParamsOfferID.getter()
{
  unint64_t v0 = PurchaseIntentInternal.additionalBuyParamsDictionary.getter();
  if (*(void *)(v0 + 16) && (unint64_t v1 = sub_22ED0E9D8(0x66664F636F486461, 0xEC00000064497265), (v2 & 1) != 0))
  {
    uint64_t v3 = *(void *)(*(void *)(v0 + 56) + 16 * v1);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v3 = 0;
  }
  swift_bridgeObjectRelease();
  return v3;
}

unint64_t sub_22EE5E23C()
{
  unint64_t result = 0x656D614E707061;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x4449656C646E7562;
      break;
    case 2:
      unint64_t result = 0x49746375646F7270;
      break;
    case 3:
      unint64_t result = 0x4E746375646F7270;
      break;
    case 4:
      unint64_t result = 0x6D617473656D6974;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22EE5E31C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_22EE6009C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22EE5E344(uint64_t a1)
{
  unint64_t v2 = sub_22EE5F57C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE5E380(uint64_t a1)
{
  unint64_t v2 = sub_22EE5F57C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PurchaseIntentInternal.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628920);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22EE5F57C();
  sub_22EE80830();
  v8[15] = 0;
  sub_22EE80590();
  if (!v1)
  {
    v8[14] = 1;
    sub_22EE805C0();
    v8[13] = 2;
    sub_22EE805C0();
    v8[12] = 3;
    sub_22EE80590();
    type metadata accessor for PurchaseIntentInternal();
    v8[11] = 4;
    sub_22EE7C3C0();
    sub_22EE5F5D0(&qword_268628930);
    sub_22EE805E0();
    v8[10] = 5;
    sub_22EE80590();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t PurchaseIntentInternal.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v3 = sub_22EE7C3C0();
  uint64_t v29 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628938);
  uint64_t v30 = *(void *)(v6 - 8);
  uint64_t v31 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PurchaseIntentInternal();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (void *)((char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = a1[3];
  unint64_t v32 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_22EE5F57C();
  uint64_t v13 = v33;
  sub_22EE80820();
  if (v13) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  }
  unint64_t v33 = v5;
  uint64_t v14 = v30;
  char v39 = 0;
  unint64_t v15 = (char *)v11;
  *uint64_t v11 = sub_22EE80510();
  v11[1] = v16;
  char v38 = 1;
  v11[2] = sub_22EE80540();
  v11[3] = v17;
  char v37 = 2;
  uint64_t v18 = v14;
  *((void *)v15 + 4) = sub_22EE80540();
  *((void *)v15 + 5) = v19;
  char v36 = 3;
  *((void *)v15 + 6) = sub_22EE80510();
  *((void *)v15 + 7) = v20;
  char v35 = 4;
  sub_22EE5F5D0(&qword_268628940);
  uint64_t v21 = v33;
  sub_22EE80560();
  v27[1] = 0;
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(&v15[*(int *)(v9 + 32)], v21, v3);
  char v34 = 5;
  uint64_t v22 = sub_22EE80510();
  uint64_t v24 = v23;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v31);
  uint64_t v25 = (uint64_t *)&v15[*(int *)(v9 + 36)];
  *uint64_t v25 = v22;
  v25[1] = v24;
  sub_22EE5F614((uint64_t)v15, v28);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  return sub_22EE5F678((uint64_t)v15);
}

uint64_t sub_22EE5EAC0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PurchaseIntentInternal.init(from:)(a1, a2);
}

uint64_t sub_22EE5EAD8(void *a1)
{
  return PurchaseIntentInternal.encode(to:)(a1);
}

char *sub_22EE5EAF0(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_22EE5EB50(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_22EE5EB10(void *a1, int64_t a2, char a3)
{
  uint64_t result = sub_22EE5EC54(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_22EE5EB30(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_22EE5ED78(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_22EE5EB50(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268628990);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size_3(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

void *sub_22EE5EC54(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268628978);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size_3(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268628980);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_22EE5ED78(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268628970);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size_3(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_22EE5EE7C(uint64_t a1, char a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  v46[3] = a4;
  if (a1 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v11 = a5;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = MEMORY[0x263F8EE78];
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = 15;
  uint64_t v15 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (uint64_t v16 = HIBYTE(a6) & 0xF) : (uint64_t v16 = v11 & 0xFFFFFFFFFFFFLL), !v16))
  {
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v15 = v11 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v30 = 7;
    if (((a6 >> 60) & ((v11 & 0x800000000000000) == 0)) != 0) {
      uint64_t v30 = 11;
    }
    sub_22EE5F29C(v30 | (v15 << 16), v43, a2 & 1, v14);
    swift_bridgeObjectRelease();
    uint64_t v10 = *(char **)(v14 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_38;
  }
  uint64_t v38 = a1;
  uint64_t v39 = v14;
  unint64_t v44 = 4 * v16;
  uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  unint64_t v9 = 15;
  unint64_t v8 = 15;
  unint64_t v17 = 15;
  while (1)
  {
    v46[0] = sub_22EE7FB40();
    v46[1] = v18;
    uint64_t v19 = a3(v46);
    if (v7)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v10;
    }
    uint64_t v6 = v19;
    swift_bridgeObjectRelease();
    if (v6) {
      break;
    }
    unint64_t v9 = sub_22EE7FA80();
LABEL_9:
    if (v44 == v9 >> 14) {
      goto LABEL_29;
    }
  }
  if (v8 >> 14 == v9 >> 14 && (a2 & 1) != 0)
  {
    unint64_t v9 = sub_22EE7FA80();
    *(void *)(v43 + 16) = v9;
    unint64_t v8 = v9;
    unint64_t v17 = v9;
    goto LABEL_9;
  }
  if (v9 >> 14 < v8 >> 14)
  {
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v20 = sub_22EE7FB70();
  uint64_t v40 = v21;
  uint64_t v41 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v10 = sub_22EE5F3AC(0, *((void *)v10 + 2) + 1, 1, v10);
  }
  unint64_t v27 = *((void *)v10 + 2);
  unint64_t v26 = *((void *)v10 + 3);
  uint64_t v6 = v27 + 1;
  if (v27 >= v26 >> 1) {
    uint64_t v10 = sub_22EE5F3AC((char *)(v26 > 1), v27 + 1, 1, v10);
  }
  *((void *)v10 + 2) = v6;
  uint64_t v28 = &v10[32 * v27];
  *((void *)v28 + 4) = v41;
  *((void *)v28 + 5) = v23;
  *((void *)v28 + 6) = v25;
  *((void *)v28 + 7) = v40;
  *(void *)(v39 + 16) = v10;
  uint64_t v29 = sub_22EE7FA80();
  unint64_t v9 = v29;
  *(void *)(v43 + 16) = v29;
  if (*((void *)v10 + 2) != v38)
  {
    unint64_t v8 = v29;
    unint64_t v17 = v29;
    goto LABEL_9;
  }
  unint64_t v17 = v29;
  unint64_t v8 = v29;
LABEL_29:
  if (v44 == v8 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_37;
  }
  if (v44 >= v17 >> 14)
  {
    uint64_t v6 = sub_22EE7FB70();
    unint64_t v8 = v31;
    unint64_t v9 = v32;
    uint64_t v11 = v33;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      goto LABEL_43;
    }
    goto LABEL_34;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  uint64_t v10 = sub_22EE5F3AC(0, *((void *)v10 + 2) + 1, 1, v10);
LABEL_34:
  unint64_t v35 = *((void *)v10 + 2);
  unint64_t v34 = *((void *)v10 + 3);
  if (v35 >= v34 >> 1) {
    uint64_t v10 = sub_22EE5F3AC((char *)(v34 > 1), v35 + 1, 1, v10);
  }
  *((void *)v10 + 2) = v35 + 1;
  char v36 = &v10[32 * v35];
  *((void *)v36 + 4) = v6;
  *((void *)v36 + 5) = v8;
  *((void *)v36 + 6) = v9;
  *((void *)v36 + 7) = v11;
  *(void *)(v39 + 16) = v10;
LABEL_37:
  swift_bridgeObjectRetain();
  swift_release();
LABEL_38:
  swift_release();
  return v10;
}

uint64_t sub_22EE5F29C(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v10 = *(void *)(a2 + 16) >> 14;
  int v11 = (v10 == a1 >> 14) & a3;
  if (v11 == 1) {
    return v11 ^ 1u;
  }
  if (a1 >> 14 < v10)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v4 = a4;
  uint64_t v5 = sub_22EE7FB70();
  uint64_t v6 = v12;
  uint64_t v7 = v13;
  uint64_t v8 = v14;
  unint64_t v9 = *(char **)(v4 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v4 + 16) = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_9:
    unint64_t v9 = sub_22EE5F3AC(0, *((void *)v9 + 2) + 1, 1, v9);
    *(void *)(v4 + 16) = v9;
  }
  unint64_t v17 = *((void *)v9 + 2);
  unint64_t v16 = *((void *)v9 + 3);
  if (v17 >= v16 >> 1)
  {
    unint64_t v9 = sub_22EE5F3AC((char *)(v16 > 1), v17 + 1, 1, v9);
    *(void *)(v4 + 16) = v9;
  }
  *((void *)v9 + 2) = v17 + 1;
  uint64_t v18 = &v9[32 * v17];
  *((void *)v18 + 4) = v5;
  *((void *)v18 + 5) = v6;
  *((void *)v18 + 6) = v7;
  *((void *)v18 + 7) = v8;
  return v11 ^ 1u;
}

char *sub_22EE5F3AC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268628988);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size_3(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_22EE5F4B0(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_22EE80660() & 1;
  }
}

uint64_t sub_22EE5F508(void *a1)
{
  return sub_22EE5F524(a1) & 1;
}

uint64_t sub_22EE5F524(void *a1)
{
  unint64_t v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return sub_22EE80660() & 1;
  }
}

unint64_t sub_22EE5F57C()
{
  unint64_t result = qword_268628928;
  if (!qword_268628928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628928);
  }
  return result;
}

uint64_t sub_22EE5F5D0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22EE7C3C0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22EE5F614(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PurchaseIntentInternal();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22EE5F678(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PurchaseIntentInternal();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for PurchaseIntentInternal(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v10 = a2[7];
    uint64_t v11 = *(int *)(a3 + 32);
    uint64_t v20 = (char *)a2 + v11;
    uint64_t v21 = (char *)a1 + v11;
    a1[6] = a2[6];
    a1[7] = v10;
    uint64_t v12 = sub_22EE7C3C0();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v21, v20, v12);
    uint64_t v14 = *(int *)(a3 + 36);
    uint64_t v15 = (uint64_t *)((char *)v4 + v14);
    unint64_t v16 = (uint64_t *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for PurchaseIntentInternal(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_22EE7C3C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for PurchaseIntentInternal(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v9 = a2[7];
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v18 = (char *)a2 + v10;
  uint64_t v19 = (char *)a1 + v10;
  a1[6] = a2[6];
  a1[7] = v9;
  uint64_t v11 = sub_22EE7C3C0();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v19, v18, v11);
  uint64_t v13 = *(int *)(a3 + 36);
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  uint64_t v16 = v15[1];
  void *v14 = *v15;
  v14[1] = v16;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for PurchaseIntentInternal(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22EE7C3C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 36);
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for PurchaseIntentInternal(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_22EE7C3C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 36)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 36));
  return a1;
}

void *assignWithTake for PurchaseIntentInternal(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_22EE7C3C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  uint64_t v14 = *(int *)(a3 + 36);
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  *uint64_t v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PurchaseIntentInternal(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EE5FC80);
}

uint64_t sub_22EE5FC80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_22EE7C3C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PurchaseIntentInternal(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EE5FD44);
}

uint64_t sub_22EE5FD44(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_22EE7C3C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_22EE5FDEC()
{
  uint64_t result = sub_22EE7C3C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PurchaseIntentInternal.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22EE5FF5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PurchaseIntentInternal.CodingKeys()
{
  return &type metadata for PurchaseIntentInternal.CodingKeys;
}

unint64_t sub_22EE5FF98()
{
  unint64_t result = qword_268628958;
  if (!qword_268628958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628958);
  }
  return result;
}

unint64_t sub_22EE5FFF0()
{
  unint64_t result = qword_268628960;
  if (!qword_268628960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628960);
  }
  return result;
}

unint64_t sub_22EE60048()
{
  unint64_t result = qword_268628968;
  if (!qword_268628968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628968);
  }
  return result;
}

uint64_t sub_22EE6009C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656D614E707061 && a2 == 0xE700000000000000;
  if (v2 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4449656C646E7562 && a2 == 0xE800000000000000 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x49746375646F7270 && a2 == 0xE900000000000044 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4E746375646F7270 && a2 == 0xEB00000000656D61 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000022EE862E0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_22EE80660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_22EE60348()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_22EE60380()
{
  return swift_deallocObject();
}

uint64_t AcknowledgeMessageRequest.messageType.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AcknowledgeMessageRequest.bundleID.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AcknowledgeMessageRequest.offerID.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AcknowledgeMessageRequest.clientOverride.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AcknowledgeMessageRequest() + 28);

  return sub_22EE604B0(v3, a1);
}

uint64_t type metadata accessor for AcknowledgeMessageRequest()
{
  uint64_t result = qword_2686289E8;
  if (!qword_2686289E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_22EE604B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628998);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t AcknowledgeMessageRequest.clientOverride.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AcknowledgeMessageRequest() + 28);

  return sub_22EE6055C(a1, v3);
}

uint64_t sub_22EE6055C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628998);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*AcknowledgeMessageRequest.clientOverride.modify())(void)
{
  return nullsub_1;
}

uint64_t AcknowledgeMessageRequest.logKey.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AcknowledgeMessageRequest() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AcknowledgeMessageRequest.logKey.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for AcknowledgeMessageRequest() + 32));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*AcknowledgeMessageRequest.logKey.modify())(void)
{
  return nullsub_1;
}

uint64_t AcknowledgeMessageRequest.init(messageType:bundleID:offerID:overrides:logKey:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10)
{
  uint64_t v17 = type metadata accessor for AcknowledgeMessageRequest();
  uint64_t v18 = (uint64_t)a9 + *(int *)(v17 + 28);
  uint64_t v19 = type metadata accessor for ClientOverride(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  uint64_t result = sub_22EE6055C(a7, v18);
  uint64_t v21 = (void *)((char *)a9 + *(int *)(v17 + 32));
  *uint64_t v21 = a8;
  v21[1] = a10;
  return result;
}

uint64_t AcknowledgeMessageRequest.encode()()
{
  sub_22EE7BFF0();
  swift_allocObject();
  sub_22EE7BFE0();
  type metadata accessor for AcknowledgeMessageRequest();
  sub_22EE615D8(&qword_2686289A0, (void (*)(uint64_t))type metadata accessor for AcknowledgeMessageRequest);
  uint64_t v0 = sub_22EE7BFD0();
  swift_release();
  return v0;
}

uint64_t static AcknowledgeMessageRequest.decode(encodedRequest:)()
{
  return swift_release();
}

uint64_t sub_22EE6094C()
{
  uint64_t result = 0x546567617373656DLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x4449656C646E7562;
      break;
    case 2:
      uint64_t result = 0x4449726566666FLL;
      break;
    case 3:
      uint64_t result = 0x764F746E65696C63;
      break;
    case 4:
      uint64_t result = 0x79654B676F6CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22EE60A08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_22EE6132C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22EE60A30(uint64_t a1)
{
  unint64_t v2 = sub_22EE60CE4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE60A6C(uint64_t a1)
{
  unint64_t v2 = sub_22EE60CE4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AcknowledgeMessageRequest.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686289B0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22EE60CE4();
  sub_22EE80830();
  v8[15] = 0;
  sub_22EE805C0();
  if (!v1)
  {
    v8[14] = 1;
    sub_22EE80590();
    v8[13] = 2;
    sub_22EE805C0();
    type metadata accessor for AcknowledgeMessageRequest();
    v8[12] = 3;
    type metadata accessor for ClientOverride(0);
    sub_22EE615D8(&qword_2686289C0, (void (*)(uint64_t))type metadata accessor for ClientOverride);
    sub_22EE805A0();
    v8[11] = 4;
    sub_22EE805C0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_22EE60CE4()
{
  unint64_t result = qword_2686289B8;
  if (!qword_2686289B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686289B8);
  }
  return result;
}

uint64_t AcknowledgeMessageRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628998);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v28 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686289C8);
  uint64_t v27 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  char v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AcknowledgeMessageRequest();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (void *)((char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = (uint64_t)v9 + *(int *)(v10 + 28);
  uint64_t v12 = type metadata accessor for ClientOverride(0);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
  uint64_t v30 = v11;
  v13(v11, 1, 1, v12);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22EE60CE4();
  uint64_t v14 = (uint64_t)v31;
  sub_22EE80820();
  if (v14)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_22EADD81C(v30, &qword_268628998);
  }
  else
  {
    v25[1] = v12;
    unint64_t v31 = a1;
    uint64_t v15 = v27;
    uint64_t v16 = (uint64_t)v28;
    char v36 = 0;
    *uint64_t v9 = sub_22EE80540();
    v9[1] = v17;
    char v35 = 1;
    v9[2] = sub_22EE80510();
    v9[3] = v18;
    char v34 = 2;
    long long v9[4] = sub_22EE80540();
    v9[5] = v19;
    char v33 = 3;
    sub_22EE615D8(&qword_2686289D0, (void (*)(uint64_t))type metadata accessor for ClientOverride);
    sub_22EE80520();
    sub_22EE6055C(v16, v30);
    char v32 = 4;
    uint64_t v20 = sub_22EE80540();
    uint64_t v22 = v21;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v6, v29);
    uint64_t v23 = (uint64_t *)((char *)v9 + *(int *)(v7 + 32));
    uint64_t *v23 = v20;
    v23[1] = v22;
    sub_22EE6119C((uint64_t)v9, v26);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
    return sub_22EE628B0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for AcknowledgeMessageRequest);
  }
}

uint64_t sub_22EE6119C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AcknowledgeMessageRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22EE61200@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AcknowledgeMessageRequest.init(from:)(a1, a2);
}

uint64_t sub_22EE61218(void *a1)
{
  return AcknowledgeMessageRequest.encode(to:)(a1);
}

uint64_t MessageType.rawValue.getter(unsigned __int8 a1)
{
  return a1 + 1;
}

uint64_t sub_22EE61240()
{
  return sub_22EE807F0();
}

uint64_t sub_22EE61288()
{
  return sub_22EE807C0();
}

uint64_t sub_22EE612B8()
{
  return sub_22EE807F0();
}

void sub_22EE612FC(void *a1@<X8>)
{
  *a1 = *v1 + 1;
}

uint64_t MessageType.messageTypeString.getter(char a1)
{
  return qword_22EEA50B8[a1];
}

uint64_t sub_22EE6132C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x546567617373656DLL && a2 == 0xEB00000000657079;
  if (v2 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4449656C646E7562 && a2 == 0xE800000000000000 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4449726566666FLL && a2 == 0xE700000000000000 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x764F746E65696C63 && a2 == 0xEE00656469727265 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x79654B676F6CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_22EE80660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_22EE61580(uint64_t a1)
{
  uint64_t result = sub_22EE615D8(&qword_2686289D8, (void (*)(uint64_t))type metadata accessor for AcknowledgeMessageRequest);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_22EE615D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22EE61620(uint64_t a1)
{
  *(void *)(a1 + 16) = sub_22EE615D8(&qword_2686289A8, (void (*)(uint64_t))type metadata accessor for AcknowledgeMessageRequest);
  uint64_t result = sub_22EE615D8(&qword_2686289A0, (void (*)(uint64_t))type metadata accessor for AcknowledgeMessageRequest);
  *(void *)(a1 + 24) = result;
  return result;
}

unint64_t sub_22EE616A8()
{
  unint64_t result = qword_2686289E0;
  if (!qword_2686289E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686289E0);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for AcknowledgeMessageRequest(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a2[5];
    uint64_t v9 = *(int *)(a3 + 28);
    __dst = (uint64_t *)((char *)a1 + v9);
    uint64_t v10 = (uint64_t *)((char *)a2 + v9);
    a1[4] = a2[4];
    a1[5] = v8;
    uint64_t v11 = type metadata accessor for ClientOverride(0);
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628998);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
      uint64_t v15 = a3;
    }
    else
    {
      unint64_t v17 = v10[1];
      uint64_t v46 = v12;
      if (v17 >> 60 == 15)
      {
        *(_OWORD *)__dst = *(_OWORD *)v10;
      }
      else
      {
        uint64_t v18 = *v10;
        sub_22EB71E60(*v10, v17);
        void *__dst = v18;
        __dst[1] = v17;
      }
      uint64_t v19 = (int *)v11;
      uint64_t v15 = a3;
      uint64_t v20 = v10[3];
      __dst[2] = v10[2];
      __dst[3] = v20;
      uint64_t v21 = v10[5];
      __dst[4] = v10[4];
      __dst[5] = v21;
      uint64_t v22 = v19[7];
      uint64_t v23 = (char *)__dst + v22;
      uint64_t v24 = (char *)v10 + v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
      uint64_t v26 = *(void *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 3, v25))
      {
        uint64_t v27 = type metadata accessor for ClientOverride.Server(0);
        memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        uint64_t v28 = sub_22EE7C2B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v23, v24, v28);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 3, v25);
      }
      uint64_t v29 = v19[8];
      uint64_t v30 = (char *)__dst + v29;
      unint64_t v31 = (char *)v10 + v29;
      *(void *)uint64_t v30 = *(void *)v31;
      v30[8] = v31[8];
      uint64_t v32 = v19[9];
      char v33 = (char *)__dst + v32;
      char v34 = (char *)v10 + v32;
      unsigned char v33[8] = v34[8];
      *(void *)char v33 = *(void *)v34;
      uint64_t v35 = v19[10];
      char v36 = (char *)__dst + v35;
      char v37 = (char *)v10 + v35;
      uint64_t v38 = sub_22EE7C3D0();
      uint64_t v39 = *(void *)(v38 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
      {
        uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8);
        memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v36, v37, v38);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
      }
      (*(void (**)(void *, void, uint64_t, int *))(v46 + 56))(__dst, 0, 1, v19);
    }
    uint64_t v41 = *(int *)(v15 + 32);
    uint64_t v42 = (uint64_t *)((char *)v4 + v41);
    uint64_t v43 = (uint64_t *)((char *)a2 + v41);
    uint64_t v44 = v43[1];
    *uint64_t v42 = *v43;
    v42[1] = v44;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for AcknowledgeMessageRequest(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = (uint64_t *)(a1 + *(int *)(a2 + 28));
  uint64_t v5 = type metadata accessor for ClientOverride(0);
  if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    unint64_t v6 = v4[1];
    if (v6 >> 60 != 15) {
      sub_22EB2AC74(*v4, v6);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = (char *)v4 + *(int *)(v5 + 28);
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 3, v8))
    {
      uint64_t v9 = sub_22EE7C2B0();
      (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v7, v9);
    }
    uint64_t v10 = (char *)v4 + *(int *)(v5 + 40);
    uint64_t v11 = sub_22EE7C3D0();
    uint64_t v12 = *(void *)(v11 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    }
  }

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for AcknowledgeMessageRequest(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  uint64_t v8 = *(int *)(a3 + 28);
  __dst = (void *)((char *)a1 + v8);
  uint64_t v9 = (void *)((char *)a2 + v8);
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v10 = (int *)type metadata accessor for ClientOverride(0);
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(unsigned int (**)(void *, uint64_t, int *))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628998);
    memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
    uint64_t v14 = a3;
  }
  else
  {
    unint64_t v15 = v9[1];
    uint64_t v43 = v11;
    if (v15 >> 60 == 15)
    {
      *(_OWORD *)__dst = *(_OWORD *)v9;
    }
    else
    {
      uint64_t v16 = *v9;
      sub_22EB71E60(*v9, v15);
      void *__dst = v16;
      __dst[1] = v15;
    }
    uint64_t v14 = a3;
    uint64_t v17 = v9[3];
    __dst[2] = v9[2];
    __dst[3] = v17;
    uint64_t v18 = v9[5];
    __dst[4] = v9[4];
    __dst[5] = v18;
    uint64_t v19 = v10[7];
    uint64_t v20 = (char *)__dst + v19;
    uint64_t v21 = (char *)v9 + v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 3, v22))
    {
      uint64_t v24 = type metadata accessor for ClientOverride.Server(0);
      memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      uint64_t v25 = sub_22EE7C2B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v20, v21, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 3, v22);
    }
    uint64_t v26 = v10[8];
    uint64_t v27 = (char *)__dst + v26;
    uint64_t v28 = (char *)v9 + v26;
    *(void *)uint64_t v27 = *(void *)v28;
    v27[8] = v28[8];
    uint64_t v29 = v10[9];
    uint64_t v30 = (char *)__dst + v29;
    unint64_t v31 = (char *)v9 + v29;
    v30[8] = v31[8];
    *(void *)uint64_t v30 = *(void *)v31;
    uint64_t v32 = v10[10];
    char v33 = (char *)__dst + v32;
    char v34 = (char *)v9 + v32;
    uint64_t v35 = sub_22EE7C3D0();
    uint64_t v36 = *(void *)(v35 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
    {
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8);
      memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
    }
    (*(void (**)(void *, void, uint64_t, int *))(v43 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v38 = *(int *)(v14 + 32);
  uint64_t v39 = (void *)((char *)a1 + v38);
  uint64_t v40 = (void *)((char *)a2 + v38);
  uint64_t v41 = v40[1];
  *uint64_t v39 = *v40;
  v39[1] = v41;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for AcknowledgeMessageRequest(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for ClientOverride(0);
  uint64_t v10 = *((void *)v9 - 1);
  uint64_t v11 = *(uint64_t (**)(uint64_t *, uint64_t, int *))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_22EE628B0((uint64_t)v7, type metadata accessor for ClientOverride);
      goto LABEL_7;
    }
    unint64_t v18 = v8[1];
    uint64_t v78 = a3;
    if ((unint64_t)v7[1] >> 60 == 15)
    {
      if (v18 >> 60 != 15)
      {
        uint64_t v19 = *v8;
        sub_22EB71E60(*v8, v18);
        *uint64_t v7 = v19;
        v7[1] = v18;
        goto LABEL_25;
      }
    }
    else
    {
      if (v18 >> 60 != 15)
      {
        uint64_t v46 = *v8;
        sub_22EB71E60(*v8, v18);
        uint64_t v47 = *v7;
        unint64_t v48 = v7[1];
        *uint64_t v7 = v46;
        v7[1] = v18;
        sub_22EB2AC74(v47, v48);
LABEL_25:
        v7[2] = v8[2];
        v7[3] = v8[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        _OWORD v7[4] = v8[4];
        v7[5] = v8[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v49 = v9[7];
        uint64_t v50 = (char *)v7 + v49;
        char v51 = (char *)v8 + v49;
        uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
        uint64_t v75 = *(void *)(v52 - 8);
        char v53 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v75 + 48);
        uint64_t v76 = (uint64_t)v50;
        LODWORD(v50) = v53(v50, 3, v52);
        int v54 = v53(v51, 3, v52);
        if (v50)
        {
          if (!v54)
          {
            uint64_t v57 = sub_22EE7C2B0();
            (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v57 - 8) + 16))(v76, v51, v57);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v75 + 56))(v76, 0, 3, v52);
            goto LABEL_33;
          }
          size_t v55 = *(void *)(*(void *)(type metadata accessor for ClientOverride.Server(0) - 8) + 64);
          uint64_t v56 = (void *)v76;
        }
        else
        {
          if (!v54)
          {
            uint64_t v58 = sub_22EE7C2B0();
            (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v58 - 8) + 24))(v76, v51, v58);
            goto LABEL_33;
          }
          sub_22EADD81C(v76, &qword_268628410);
          size_t v55 = *(void *)(*(void *)(type metadata accessor for ClientOverride.Server(0) - 8) + 64);
          uint64_t v56 = (void *)v76;
        }
        memcpy(v56, v51, v55);
LABEL_33:
        uint64_t v59 = v9[8];
        uint64_t v60 = (char *)v7 + v59;
        uint64_t v61 = (char *)v8 + v59;
        uint64_t v62 = *(void *)v61;
        v60[8] = v61[8];
        *(void *)uint64_t v60 = v62;
        uint64_t v63 = v9[9];
        int64_t v64 = (char *)v7 + v63;
        uint64_t v65 = (char *)v8 + v63;
        uint64_t v66 = *(void *)v65;
        v64[8] = v65[8];
        *(void *)int64_t v64 = v66;
        uint64_t v67 = v9[10];
        uint64_t v68 = (char *)v7 + v67;
        uint64_t v69 = (char *)v8 + v67;
        uint64_t v70 = sub_22EE7C3D0();
        uint64_t v71 = *(void *)(v70 - 8);
        char v72 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v71 + 48);
        int v73 = v72(v68, 1, v70);
        int v74 = v72(v69, 1, v70);
        if (v73)
        {
          a3 = v78;
          if (!v74)
          {
            (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v68, v69, v70);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
            goto LABEL_20;
          }
        }
        else
        {
          a3 = v78;
          if (!v74)
          {
            (*(void (**)(char *, char *, uint64_t))(v71 + 24))(v68, v69, v70);
            goto LABEL_20;
          }
          (*(void (**)(char *, uint64_t))(v71 + 8))(v68, v70);
        }
        size_t v15 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8) - 8) + 64);
        uint64_t v16 = (uint64_t *)v68;
        uint64_t v17 = (uint64_t *)v69;
        goto LABEL_8;
      }
      sub_22EE4F300((uint64_t)v7);
    }
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
    goto LABEL_25;
  }
  if (v13)
  {
LABEL_7:
    size_t v15 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268628998) - 8) + 64);
    uint64_t v16 = v7;
    uint64_t v17 = v8;
LABEL_8:
    memcpy(v16, v17, v15);
    goto LABEL_20;
  }
  unint64_t v14 = v8[1];
  uint64_t v77 = a3;
  if (v14 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
  }
  else
  {
    uint64_t v20 = *v8;
    sub_22EB71E60(*v8, v14);
    *uint64_t v7 = v20;
    v7[1] = v14;
  }
  v7[2] = v8[2];
  v7[3] = v8[3];
  _OWORD v7[4] = v8[4];
  v7[5] = v8[5];
  uint64_t v21 = v9[7];
  uint64_t v22 = (char *)v7 + v21;
  uint64_t v23 = (char *)v8 + v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
  uint64_t v25 = *(void *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 3, v24))
  {
    uint64_t v26 = type metadata accessor for ClientOverride.Server(0);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    uint64_t v27 = sub_22EE7C2B0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v22, v23, v27);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 3, v24);
  }
  a3 = v77;
  uint64_t v28 = v9[8];
  uint64_t v29 = (char *)v7 + v28;
  uint64_t v30 = (char *)v8 + v28;
  uint64_t v31 = *(void *)v30;
  v29[8] = v30[8];
  *(void *)uint64_t v29 = v31;
  uint64_t v32 = v9[9];
  char v33 = (char *)v7 + v32;
  char v34 = (char *)v8 + v32;
  uint64_t v35 = *(void *)v34;
  unsigned char v33[8] = v34[8];
  *(void *)char v33 = v35;
  uint64_t v36 = v9[10];
  uint64_t v37 = (char *)v7 + v36;
  uint64_t v38 = (char *)v8 + v36;
  uint64_t v39 = sub_22EE7C3D0();
  uint64_t v40 = *(void *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
  {
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v37, v38, v39);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  }
  (*(void (**)(uint64_t *, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
LABEL_20:
  uint64_t v42 = *(int *)(a3 + 32);
  uint64_t v43 = (void *)((char *)a1 + v42);
  uint64_t v44 = (void *)((char *)a2 + v42);
  *uint64_t v43 = *v44;
  v43[1] = v44[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22EE628B0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *initializeWithTake for AcknowledgeMessageRequest(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (_OWORD *)((char *)a1 + v7);
  uint64_t v9 = (_OWORD *)((char *)a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for ClientOverride(0);
  uint64_t v11 = *((void *)v10 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628998);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    long long v13 = v9[1];
    *uint64_t v8 = *v9;
    v8[1] = v13;
    v8[2] = v9[2];
    uint64_t v14 = v10[7];
    __dst = (char *)v8 + v14;
    size_t v15 = (char *)v9 + v14;
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 3, v16))
    {
      uint64_t v18 = type metadata accessor for ClientOverride.Server(0);
      memcpy(__dst, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      uint64_t v19 = sub_22EE7C2B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(__dst, v15, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 3, v16);
    }
    uint64_t v20 = v10[8];
    uint64_t v21 = (char *)v8 + v20;
    uint64_t v22 = (char *)v9 + v20;
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    uint64_t v23 = v10[9];
    uint64_t v24 = (char *)v8 + v23;
    uint64_t v25 = (char *)v9 + v23;
    v24[8] = v25[8];
    *(void *)uint64_t v24 = *(void *)v25;
    uint64_t v26 = v10[10];
    uint64_t v27 = (char *)v8 + v26;
    uint64_t v28 = (char *)v9 + v26;
    uint64_t v29 = sub_22EE7C3D0();
    uint64_t v30 = *(void *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8);
      memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v27, v28, v29);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 32)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 32));
  return a1;
}

void *assignWithTake for AcknowledgeMessageRequest(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = (void *)((char *)a1 + v9);
  uint64_t v11 = (void *)((char *)a2 + v9);
  uint64_t v12 = (int *)type metadata accessor for ClientOverride(0);
  uint64_t v13 = *((void *)v12 - 1);
  uint64_t v14 = *(uint64_t (**)(uint64_t *, uint64_t, int *))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (v16)
    {
      sub_22EE628B0((uint64_t)v10, type metadata accessor for ClientOverride);
      goto LABEL_7;
    }
    unint64_t v27 = v10[1];
    uint64_t v78 = a3;
    if (v27 >> 60 != 15)
    {
      unint64_t v28 = v11[1];
      if (v28 >> 60 != 15)
      {
        uint64_t v48 = *v10;
        uint64_t *v10 = *v11;
        v10[1] = v28;
        sub_22EB2AC74(v48, v27);
LABEL_20:
        uint64_t v49 = v11[3];
        v10[2] = v11[2];
        v10[3] = v49;
        swift_bridgeObjectRelease();
        uint64_t v50 = v11[5];
        long long v10[4] = v11[4];
        v10[5] = v50;
        swift_bridgeObjectRelease();
        uint64_t v51 = v12[7];
        uint64_t v52 = (char *)v10 + v51;
        char v53 = (char *)v11 + v51;
        uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
        uint64_t v75 = *(void *)(v54 - 8);
        size_t v55 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v75 + 48);
        uint64_t v76 = (uint64_t)v52;
        LODWORD(v52) = v55(v52, 3, v54);
        int v56 = v55(v53, 3, v54);
        if (v52)
        {
          if (!v56)
          {
            uint64_t v59 = sub_22EE7C2B0();
            (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v59 - 8) + 32))(v76, v53, v59);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v75 + 56))(v76, 0, 3, v54);
            goto LABEL_28;
          }
          size_t v57 = *(void *)(*(void *)(type metadata accessor for ClientOverride.Server(0) - 8) + 64);
          uint64_t v58 = (void *)v76;
        }
        else
        {
          if (!v56)
          {
            uint64_t v60 = sub_22EE7C2B0();
            (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v60 - 8) + 40))(v76, v53, v60);
            goto LABEL_28;
          }
          sub_22EADD81C(v76, &qword_268628410);
          size_t v57 = *(void *)(*(void *)(type metadata accessor for ClientOverride.Server(0) - 8) + 64);
          uint64_t v58 = (void *)v76;
        }
        memcpy(v58, v53, v57);
LABEL_28:
        uint64_t v61 = v12[8];
        uint64_t v62 = (char *)v10 + v61;
        uint64_t v63 = (char *)v11 + v61;
        *(void *)uint64_t v62 = *(void *)v63;
        v62[8] = v63[8];
        uint64_t v64 = v12[9];
        uint64_t v65 = (char *)v10 + v64;
        uint64_t v66 = (char *)v11 + v64;
        v65[8] = v66[8];
        *(void *)uint64_t v65 = *(void *)v66;
        uint64_t v67 = v12[10];
        uint64_t v68 = (char *)v10 + v67;
        uint64_t v69 = (char *)v11 + v67;
        uint64_t v70 = sub_22EE7C3D0();
        uint64_t v71 = *(void *)(v70 - 8);
        char v72 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v71 + 48);
        int v73 = v72(v68, 1, v70);
        int v74 = v72(v69, 1, v70);
        if (v73)
        {
          a3 = v78;
          if (!v74)
          {
            (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v68, v69, v70);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
            goto LABEL_18;
          }
        }
        else
        {
          a3 = v78;
          if (!v74)
          {
            (*(void (**)(char *, char *, uint64_t))(v71 + 40))(v68, v69, v70);
            goto LABEL_18;
          }
          (*(void (**)(char *, uint64_t))(v71 + 8))(v68, v70);
        }
        size_t v24 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8) - 8) + 64);
        uint64_t v25 = (uint64_t *)v68;
        uint64_t v26 = (uint64_t *)v69;
        goto LABEL_8;
      }
      sub_22EE4F300((uint64_t)v10);
    }
    *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
    goto LABEL_20;
  }
  if (v16)
  {
LABEL_7:
    size_t v24 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268628998) - 8) + 64);
    uint64_t v25 = v10;
    uint64_t v26 = v11;
LABEL_8:
    memcpy(v25, v26, v24);
    goto LABEL_18;
  }
  uint64_t v77 = a3;
  long long v17 = *((_OWORD *)v11 + 1);
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  *((_OWORD *)v10 + 1) = v17;
  *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
  uint64_t v18 = v12[7];
  uint64_t v19 = (char *)v10 + v18;
  uint64_t v20 = (char *)v11 + v18;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 3, v21))
  {
    uint64_t v23 = type metadata accessor for ClientOverride.Server(0);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    uint64_t v29 = sub_22EE7C2B0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v19, v20, v29);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 3, v21);
  }
  uint64_t v30 = v12[8];
  uint64_t v31 = (char *)v10 + v30;
  uint64_t v32 = (char *)v11 + v30;
  *(void *)uint64_t v31 = *(void *)v32;
  v31[8] = v32[8];
  uint64_t v33 = v12[9];
  char v34 = (char *)v10 + v33;
  uint64_t v35 = (char *)v11 + v33;
  v34[8] = v35[8];
  *(void *)char v34 = *(void *)v35;
  uint64_t v36 = v12[10];
  uint64_t v37 = (char *)v10 + v36;
  uint64_t v38 = (char *)v11 + v36;
  uint64_t v39 = sub_22EE7C3D0();
  uint64_t v40 = *(void *)(v39 - 8);
  a3 = v77;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
  {
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v37, v38, v39);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  }
  (*(void (**)(uint64_t *, void, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
LABEL_18:
  uint64_t v42 = *(int *)(a3 + 32);
  uint64_t v43 = (void *)((char *)a1 + v42);
  uint64_t v44 = (void *)((char *)a2 + v42);
  uint64_t v46 = *v44;
  uint64_t v45 = v44[1];
  *uint64_t v43 = v46;
  v43[1] = v45;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AcknowledgeMessageRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EE63398);
}

uint64_t sub_22EE63398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628998);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for AcknowledgeMessageRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EE63460);
}

uint64_t sub_22EE63460(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628998);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_22EE6350C()
{
  sub_22EE635B0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_22EE635B0()
{
  if (!qword_2686289F8)
  {
    type metadata accessor for ClientOverride(255);
    unint64_t v0 = sub_22EE80040();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2686289F8);
    }
  }
}

ValueMetadata *type metadata accessor for MessageType()
{
  return &type metadata for MessageType;
}

uint64_t _s15StoreKit_Shared11MessageTypeOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s15StoreKit_Shared11MessageTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22EE6377CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AcknowledgeMessageRequest.CodingKeys()
{
  return &type metadata for AcknowledgeMessageRequest.CodingKeys;
}

unint64_t sub_22EE637B8()
{
  unint64_t result = qword_268628A00;
  if (!qword_268628A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628A00);
  }
  return result;
}

unint64_t sub_22EE63810()
{
  unint64_t result = qword_268628A08;
  if (!qword_268628A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628A08);
  }
  return result;
}

unint64_t sub_22EE63868()
{
  unint64_t result = qword_268628A10;
  if (!qword_268628A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628A10);
  }
  return result;
}

uint64_t ClientOverrideRequest.bundleID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClientOverrideRequest.clientOverride.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ClientOverrideRequest() + 20);

  return sub_22EE604B0(v3, a1);
}

uint64_t type metadata accessor for ClientOverrideRequest()
{
  uint64_t result = qword_268628A48;
  if (!qword_268628A48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ClientOverrideRequest.logKey.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ClientOverrideRequest() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClientOverrideRequest.logKey.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for ClientOverrideRequest() + 24));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ClientOverrideRequest.logKey.modify())(void)
{
  return nullsub_1;
}

uint64_t ClientOverrideRequest.until.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ClientOverrideRequest() + 28);
  uint64_t v4 = sub_22EE7C3C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ClientOverrideRequest.init(bundleID:clientOverride:until:logKey:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  *a7 = a1;
  a7[1] = a2;
  uint64_t v12 = (int *)type metadata accessor for ClientOverrideRequest();
  sub_22EE63B74(a3, (uint64_t)a7 + v12[5]);
  uint64_t v13 = (char *)a7 + v12[7];
  uint64_t v14 = sub_22EE7C3C0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v13, a4, v14);
  int v16 = (void *)((char *)a7 + v12[6]);
  *int v16 = a5;
  v16[1] = a6;
  return result;
}

uint64_t sub_22EE63B74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628998);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22EE63BDC()
{
  uint64_t result = 0x4449656C646E7562;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x764F746E65696C63;
      break;
    case 2:
      uint64_t result = 0x79654B676F6CLL;
      break;
    case 3:
      uint64_t result = 0x6C69746E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22EE63C70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_22EE668BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22EE63C98(uint64_t a1)
{
  unint64_t v2 = sub_22EE63F74();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE63CD4(uint64_t a1)
{
  unint64_t v2 = sub_22EE63F74();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ClientOverrideRequest.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628A18);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22EE63F74();
  sub_22EE80830();
  v8[15] = 0;
  sub_22EE805C0();
  if (!v1)
  {
    type metadata accessor for ClientOverrideRequest();
    v8[14] = 1;
    type metadata accessor for ClientOverride(0);
    sub_22EE64598(&qword_2686289C0, (void (*)(uint64_t))type metadata accessor for ClientOverride);
    sub_22EE805A0();
    v8[13] = 2;
    sub_22EE805C0();
    v8[12] = 3;
    sub_22EE7C3C0();
    sub_22EE64598(&qword_268628930, MEMORY[0x263F07490]);
    sub_22EE805E0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_22EE63F74()
{
  unint64_t result = qword_268628A20;
  if (!qword_268628A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628A20);
  }
  return result;
}

uint64_t ClientOverrideRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v24 = sub_22EE7C3C0();
  uint64_t v22 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628998);
  MEMORY[0x270FA5388](v5 - 8);
  BOOL v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628A28);
  uint64_t v25 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)type metadata accessor for ClientOverrideRequest();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (uint64_t *)((char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22EE63F74();
  uint64_t v26 = v9;
  uint64_t v13 = v28;
  sub_22EE80820();
  if (v13) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v14 = v25;
  char v32 = 0;
  *uint64_t v12 = sub_22EE80540();
  v12[1] = v15;
  type metadata accessor for ClientOverride(0);
  char v31 = 1;
  sub_22EE64598(&qword_2686289D0, (void (*)(uint64_t))type metadata accessor for ClientOverride);
  sub_22EE80520();
  sub_22EE63B74((uint64_t)v7, (uint64_t)v12 + v10[5]);
  char v30 = 2;
  uint64_t v16 = sub_22EE80540();
  long long v17 = (uint64_t *)((char *)v12 + v10[6]);
  *long long v17 = v16;
  v17[1] = v18;
  char v29 = 3;
  sub_22EE64598(&qword_268628940, MEMORY[0x263F07490]);
  uint64_t v19 = v24;
  sub_22EE80560();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v26, v27);
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))((char *)v12 + v10[7], v4, v19);
  sub_22EE64458((uint64_t)v12, v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_22EE65830((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ClientOverrideRequest);
}

uint64_t sub_22EE64458(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClientOverrideRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22EE644BC(uint64_t a1)
{
  uint64_t result = sub_22EE64598(&qword_268628A30, (void (*)(uint64_t))type metadata accessor for ClientOverrideRequest);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_22EE64514(uint64_t a1)
{
  *(void *)(a1 + 16) = sub_22EE64598(&qword_268628A38, (void (*)(uint64_t))type metadata accessor for ClientOverrideRequest);
  uint64_t result = sub_22EE64598(&qword_268628A40, (void (*)(uint64_t))type metadata accessor for ClientOverrideRequest);
  *(void *)(a1 + 24) = result;
  return result;
}

uint64_t sub_22EE64598(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22EE645E0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ClientOverrideRequest.init(from:)(a1, a2);
}

uint64_t sub_22EE645F8(void *a1)
{
  return ClientOverrideRequest.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for ClientOverrideRequest(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (unint64_t *)((char *)a1 + v8);
    uint64_t v10 = (unint64_t *)((char *)a2 + v8);
    uint64_t v11 = (int *)type metadata accessor for ClientOverride(0);
    uint64_t v12 = *((void *)v11 - 1);
    uint64_t v13 = *(unsigned int (**)(unint64_t *, uint64_t, int *))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628998);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      unint64_t v16 = v10[1];
      if (v16 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      }
      else
      {
        unint64_t v17 = *v10;
        sub_22EB71E60(*v10, v10[1]);
        *uint64_t v9 = v17;
        v9[1] = v16;
      }
      unint64_t v18 = v10[3];
      v9[2] = v10[2];
      v9[3] = v18;
      unint64_t v19 = v10[5];
      long long v9[4] = v10[4];
      v9[5] = v19;
      uint64_t v20 = v11[7];
      __dst = (char *)v9 + v20;
      uint64_t v21 = (char *)v10 + v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
      uint64_t v23 = *(void *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 3, v22))
      {
        uint64_t v24 = type metadata accessor for ClientOverride.Server(0);
        memcpy(__dst, v21, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        uint64_t v25 = sub_22EE7C2B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(__dst, v21, v25);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 3, v22);
      }
      uint64_t v26 = v11[8];
      uint64_t v27 = (char *)v9 + v26;
      uint64_t v28 = (char *)v10 + v26;
      *(void *)uint64_t v27 = *(void *)v28;
      v27[8] = v28[8];
      uint64_t v29 = v11[9];
      char v30 = (char *)v9 + v29;
      char v31 = (char *)v10 + v29;
      v30[8] = v31[8];
      *(void *)char v30 = *(void *)v31;
      uint64_t v32 = v11[10];
      uint64_t v33 = (char *)v9 + v32;
      char v34 = (char *)v10 + v32;
      uint64_t v35 = sub_22EE7C3D0();
      uint64_t v36 = *(void *)(v35 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
      {
        uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8);
        memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
      }
      (*(void (**)(unint64_t *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v38 = a3[6];
    uint64_t v39 = a3[7];
    uint64_t v40 = (uint64_t *)((char *)v4 + v38);
    uint64_t v41 = (uint64_t *)((char *)a2 + v38);
    uint64_t v42 = v41[1];
    *uint64_t v40 = *v41;
    v40[1] = v42;
    uint64_t v43 = (char *)v4 + v39;
    uint64_t v44 = (char *)a2 + v39;
    uint64_t v45 = sub_22EE7C3C0();
    uint64_t v46 = *(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16);
    swift_bridgeObjectRetain();
    v46(v43, v44, v45);
  }
  return v4;
}

uint64_t destroy for ClientOverrideRequest(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = (uint64_t *)(a1 + *(int *)(a2 + 20));
  uint64_t v5 = type metadata accessor for ClientOverride(0);
  if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    unint64_t v6 = v4[1];
    if (v6 >> 60 != 15) {
      sub_22EB2AC74(*v4, v6);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = (char *)v4 + *(int *)(v5 + 28);
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 3, v8))
    {
      uint64_t v9 = sub_22EE7C2B0();
      (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v7, v9);
    }
    uint64_t v10 = (char *)v4 + *(int *)(v5 + 40);
    uint64_t v11 = sub_22EE7C3D0();
    uint64_t v12 = *(void *)(v11 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v13 = a1 + *(int *)(a2 + 28);
  uint64_t v14 = sub_22EE7C3C0();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);

  return v15(v13, v14);
}

void *initializeWithCopy for ClientOverrideRequest(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for ClientOverride(0);
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(unsigned int (**)(unint64_t *, uint64_t, int *))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628998);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    unint64_t v14 = v9[1];
    if (v14 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    }
    else
    {
      unint64_t v15 = *v9;
      sub_22EB71E60(*v9, v9[1]);
      *uint64_t v8 = v15;
      v8[1] = v14;
    }
    unint64_t v16 = v9[3];
    v8[2] = v9[2];
    v8[3] = v16;
    unint64_t v17 = v9[5];
    v8[4] = v9[4];
    v8[5] = v17;
    uint64_t v18 = v10[7];
    __dst = (char *)v8 + v18;
    unint64_t v19 = (char *)v9 + v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 3, v20))
    {
      uint64_t v22 = type metadata accessor for ClientOverride.Server(0);
      memcpy(__dst, v19, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      uint64_t v23 = sub_22EE7C2B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(__dst, v19, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 3, v20);
    }
    uint64_t v24 = v10[8];
    uint64_t v25 = (char *)v8 + v24;
    uint64_t v26 = (char *)v9 + v24;
    *(void *)uint64_t v25 = *(void *)v26;
    v25[8] = v26[8];
    uint64_t v27 = v10[9];
    uint64_t v28 = (char *)v8 + v27;
    uint64_t v29 = (char *)v9 + v27;
    v28[8] = v29[8];
    *(void *)uint64_t v28 = *(void *)v29;
    uint64_t v30 = v10[10];
    char v31 = (char *)v8 + v30;
    uint64_t v32 = (char *)v9 + v30;
    uint64_t v33 = sub_22EE7C3D0();
    uint64_t v34 = *(void *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    {
      uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8);
      memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    }
    (*(void (**)(unint64_t *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v36 = a3[6];
  uint64_t v37 = a3[7];
  uint64_t v38 = (void *)((char *)a1 + v36);
  uint64_t v39 = (void *)((char *)a2 + v36);
  uint64_t v40 = v39[1];
  *uint64_t v38 = *v39;
  v38[1] = v40;
  uint64_t v41 = (char *)a1 + v37;
  uint64_t v42 = (char *)a2 + v37;
  uint64_t v43 = sub_22EE7C3C0();
  uint64_t v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16);
  swift_bridgeObjectRetain();
  v44(v41, v42, v43);
  return a1;
}

void *assignWithCopy for ClientOverrideRequest(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for ClientOverride(0);
  uint64_t v10 = *((void *)v9 - 1);
  uint64_t v11 = *(uint64_t (**)(uint64_t *, uint64_t, int *))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_22EE65830((uint64_t)v7, type metadata accessor for ClientOverride);
      goto LABEL_7;
    }
    unint64_t v18 = v8[1];
    uint64_t v82 = a3;
    if ((unint64_t)v7[1] >> 60 == 15)
    {
      if (v18 >> 60 != 15)
      {
        uint64_t v19 = *v8;
        sub_22EB71E60(*v8, v18);
        *uint64_t v7 = v19;
        v7[1] = v18;
        goto LABEL_25;
      }
    }
    else
    {
      if (v18 >> 60 != 15)
      {
        uint64_t v50 = *v8;
        sub_22EB71E60(*v8, v18);
        uint64_t v51 = *v7;
        unint64_t v52 = v7[1];
        *uint64_t v7 = v50;
        v7[1] = v18;
        sub_22EB2AC74(v51, v52);
LABEL_25:
        v7[2] = v8[2];
        v7[3] = v8[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        _OWORD v7[4] = v8[4];
        v7[5] = v8[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v53 = v9[7];
        uint64_t v54 = (char *)v7 + v53;
        size_t v55 = (char *)v8 + v53;
        uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
        uint64_t v79 = *(void *)(v56 - 8);
        size_t v57 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v79 + 48);
        uint64_t v80 = (uint64_t)v54;
        LODWORD(v54) = v57(v54, 3, v56);
        int v58 = v57(v55, 3, v56);
        if (v54)
        {
          if (!v58)
          {
            uint64_t v61 = sub_22EE7C2B0();
            (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v80, v55, v61);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v79 + 56))(v80, 0, 3, v56);
            goto LABEL_33;
          }
          size_t v59 = *(void *)(*(void *)(type metadata accessor for ClientOverride.Server(0) - 8) + 64);
          uint64_t v60 = (void *)v80;
        }
        else
        {
          if (!v58)
          {
            uint64_t v62 = sub_22EE7C2B0();
            (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v62 - 8) + 24))(v80, v55, v62);
            goto LABEL_33;
          }
          sub_22EADD81C(v80, &qword_268628410);
          size_t v59 = *(void *)(*(void *)(type metadata accessor for ClientOverride.Server(0) - 8) + 64);
          uint64_t v60 = (void *)v80;
        }
        memcpy(v60, v55, v59);
LABEL_33:
        uint64_t v63 = v9[8];
        uint64_t v64 = (char *)v7 + v63;
        uint64_t v65 = (char *)v8 + v63;
        uint64_t v66 = *(void *)v65;
        v64[8] = v65[8];
        *(void *)uint64_t v64 = v66;
        uint64_t v67 = v9[9];
        uint64_t v68 = (char *)v7 + v67;
        uint64_t v69 = (char *)v8 + v67;
        uint64_t v70 = *(void *)v69;
        v68[8] = v69[8];
        *(void *)uint64_t v68 = v70;
        uint64_t v71 = v9[10];
        char v72 = (char *)v7 + v71;
        int v73 = (char *)v8 + v71;
        uint64_t v74 = sub_22EE7C3D0();
        uint64_t v75 = *(void *)(v74 - 8);
        uint64_t v76 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v75 + 48);
        int v77 = v76(v72, 1, v74);
        int v78 = v76(v73, 1, v74);
        if (v77)
        {
          a3 = v82;
          if (!v78)
          {
            (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v72, v73, v74);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
            goto LABEL_20;
          }
        }
        else
        {
          a3 = v82;
          if (!v78)
          {
            (*(void (**)(char *, char *, uint64_t))(v75 + 24))(v72, v73, v74);
            goto LABEL_20;
          }
          (*(void (**)(char *, uint64_t))(v75 + 8))(v72, v74);
        }
        size_t v15 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8) - 8) + 64);
        unint64_t v16 = (uint64_t *)v72;
        unint64_t v17 = (uint64_t *)v73;
        goto LABEL_8;
      }
      sub_22EE4F300((uint64_t)v7);
    }
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
    goto LABEL_25;
  }
  if (v13)
  {
LABEL_7:
    size_t v15 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268628998) - 8) + 64);
    unint64_t v16 = v7;
    unint64_t v17 = v8;
LABEL_8:
    memcpy(v16, v17, v15);
    goto LABEL_20;
  }
  unint64_t v14 = v8[1];
  uint64_t v81 = a3;
  if (v14 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
  }
  else
  {
    uint64_t v20 = *v8;
    sub_22EB71E60(*v8, v14);
    *uint64_t v7 = v20;
    v7[1] = v14;
  }
  v7[2] = v8[2];
  v7[3] = v8[3];
  _OWORD v7[4] = v8[4];
  v7[5] = v8[5];
  uint64_t v21 = v9[7];
  uint64_t v22 = (char *)v7 + v21;
  uint64_t v23 = (char *)v8 + v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
  uint64_t v25 = *(void *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 3, v24))
  {
    uint64_t v26 = type metadata accessor for ClientOverride.Server(0);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    uint64_t v27 = sub_22EE7C2B0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v22, v23, v27);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 3, v24);
  }
  a3 = v81;
  uint64_t v28 = v9[8];
  uint64_t v29 = (char *)v7 + v28;
  uint64_t v30 = (char *)v8 + v28;
  uint64_t v31 = *(void *)v30;
  v29[8] = v30[8];
  *(void *)uint64_t v29 = v31;
  uint64_t v32 = v9[9];
  uint64_t v33 = (char *)v7 + v32;
  uint64_t v34 = (char *)v8 + v32;
  uint64_t v35 = *(void *)v34;
  unsigned char v33[8] = v34[8];
  *(void *)uint64_t v33 = v35;
  uint64_t v36 = v9[10];
  uint64_t v37 = (char *)v7 + v36;
  uint64_t v38 = (char *)v8 + v36;
  uint64_t v39 = sub_22EE7C3D0();
  uint64_t v40 = *(void *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
  {
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v37, v38, v39);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  }
  (*(void (**)(uint64_t *, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
LABEL_20:
  uint64_t v42 = a3[6];
  uint64_t v43 = (void *)((char *)a1 + v42);
  uint64_t v44 = (void *)((char *)a2 + v42);
  *uint64_t v43 = *v44;
  v43[1] = v44[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v45 = a3[7];
  uint64_t v46 = (char *)a1 + v45;
  uint64_t v47 = (char *)a2 + v45;
  uint64_t v48 = sub_22EE7C3C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 24))(v46, v47, v48);
  return a1;
}

uint64_t sub_22EE65830(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *initializeWithTake for ClientOverrideRequest(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (_OWORD *)((char *)a1 + v6);
  uint64_t v8 = (_OWORD *)((char *)a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for ClientOverride(0);
  uint64_t v10 = *((void *)v9 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628998);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    long long v12 = v8[1];
    *uint64_t v7 = *v8;
    v7[1] = v12;
    v7[2] = v8[2];
    uint64_t v13 = v9[7];
    __dst = (char *)v7 + v13;
    unint64_t v14 = (char *)v8 + v13;
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 3, v15))
    {
      uint64_t v17 = type metadata accessor for ClientOverride.Server(0);
      memcpy(__dst, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      uint64_t v18 = sub_22EE7C2B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(__dst, v14, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 3, v15);
    }
    uint64_t v19 = v9[8];
    uint64_t v20 = (char *)v7 + v19;
    uint64_t v21 = (char *)v8 + v19;
    *(void *)uint64_t v20 = *(void *)v21;
    unsigned char v20[8] = v21[8];
    uint64_t v22 = v9[9];
    uint64_t v23 = (char *)v7 + v22;
    uint64_t v24 = (char *)v8 + v22;
    unsigned char v23[8] = v24[8];
    *(void *)uint64_t v23 = *(void *)v24;
    uint64_t v25 = v9[10];
    uint64_t v26 = (char *)v7 + v25;
    uint64_t v27 = (char *)v8 + v25;
    uint64_t v28 = sub_22EE7C3D0();
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v26, v27, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v31 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  uint64_t v34 = sub_22EE7C3C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  return a1;
}

void *assignWithTake for ClientOverrideRequest(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for ClientOverride(0);
  uint64_t v11 = *((void *)v10 - 1);
  long long v12 = *(uint64_t (**)(uint64_t *, uint64_t, int *))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_22EE65830((uint64_t)v8, type metadata accessor for ClientOverride);
      goto LABEL_7;
    }
    unint64_t v24 = v8[1];
    int v77 = a3;
    if (v24 >> 60 != 15)
    {
      unint64_t v25 = v9[1];
      if (v25 >> 60 != 15)
      {
        uint64_t v49 = *v8;
        *uint64_t v8 = *v9;
        v8[1] = v25;
        sub_22EB2AC74(v49, v24);
LABEL_20:
        uint64_t v50 = v9[3];
        v8[2] = v9[2];
        v8[3] = v50;
        swift_bridgeObjectRelease();
        uint64_t v51 = v9[5];
        v8[4] = v9[4];
        v8[5] = v51;
        swift_bridgeObjectRelease();
        uint64_t v52 = v10[7];
        uint64_t v53 = (char *)v8 + v52;
        uint64_t v54 = (char *)v9 + v52;
        uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
        uint64_t v76 = *(void *)(v55 - 8);
        uint64_t v56 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v76 + 48);
        __dsta = v53;
        LODWORD(v53) = v56(v53, 3, v55);
        int v57 = v56(v54, 3, v55);
        if (v53)
        {
          if (!v57)
          {
            uint64_t v60 = sub_22EE7C2B0();
            (*(void (**)(void *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(__dsta, v54, v60);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v76 + 56))(__dsta, 0, 3, v55);
            goto LABEL_28;
          }
          size_t v58 = *(void *)(*(void *)(type metadata accessor for ClientOverride.Server(0) - 8) + 64);
          size_t v59 = __dsta;
        }
        else
        {
          if (!v57)
          {
            uint64_t v61 = sub_22EE7C2B0();
            (*(void (**)(void *, char *, uint64_t))(*(void *)(v61 - 8) + 40))(__dsta, v54, v61);
            goto LABEL_28;
          }
          sub_22EADD81C((uint64_t)__dsta, &qword_268628410);
          size_t v58 = *(void *)(*(void *)(type metadata accessor for ClientOverride.Server(0) - 8) + 64);
          size_t v59 = __dsta;
        }
        memcpy(v59, v54, v58);
LABEL_28:
        a3 = v77;
        uint64_t v62 = v10[8];
        uint64_t v63 = (char *)v8 + v62;
        uint64_t v64 = (char *)v9 + v62;
        *(void *)uint64_t v63 = *(void *)v64;
        v63[8] = v64[8];
        uint64_t v65 = v10[9];
        uint64_t v66 = (char *)v8 + v65;
        uint64_t v67 = (char *)v9 + v65;
        v66[8] = v67[8];
        *(void *)uint64_t v66 = *(void *)v67;
        uint64_t v68 = v10[10];
        uint64_t v69 = (char *)v8 + v68;
        uint64_t v70 = (char *)v9 + v68;
        uint64_t v71 = sub_22EE7C3D0();
        uint64_t v72 = *(void *)(v71 - 8);
        int v73 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v72 + 48);
        int v74 = v73(v69, 1, v71);
        int v75 = v73(v70, 1, v71);
        if (v74)
        {
          if (!v75)
          {
            (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v69, v70, v71);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v72 + 56))(v69, 0, 1, v71);
            goto LABEL_18;
          }
        }
        else
        {
          if (!v75)
          {
            (*(void (**)(char *, char *, uint64_t))(v72 + 40))(v69, v70, v71);
            goto LABEL_18;
          }
          (*(void (**)(char *, uint64_t))(v72 + 8))(v69, v71);
        }
        size_t v21 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8) - 8) + 64);
        uint64_t v22 = (uint64_t *)v69;
        uint64_t v23 = (uint64_t *)v70;
        goto LABEL_8;
      }
      sub_22EE4F300((uint64_t)v8);
    }
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    goto LABEL_20;
  }
  if (v14)
  {
LABEL_7:
    size_t v21 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268628998) - 8) + 64);
    uint64_t v22 = v8;
    uint64_t v23 = v9;
LABEL_8:
    memcpy(v22, v23, v21);
    goto LABEL_18;
  }
  long long v15 = *((_OWORD *)v9 + 1);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *((_OWORD *)v8 + 1) = v15;
  *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
  uint64_t v16 = v10[7];
  __dst = (char *)v8 + v16;
  uint64_t v17 = (char *)v9 + v16;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 3, v18))
  {
    uint64_t v20 = type metadata accessor for ClientOverride.Server(0);
    memcpy(__dst, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    uint64_t v26 = sub_22EE7C2B0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(__dst, v17, v26);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 3, v18);
  }
  uint64_t v27 = v10[8];
  uint64_t v28 = (char *)v8 + v27;
  uint64_t v29 = (char *)v9 + v27;
  *(void *)uint64_t v28 = *(void *)v29;
  v28[8] = v29[8];
  uint64_t v30 = v10[9];
  uint64_t v31 = (char *)v8 + v30;
  uint64_t v32 = (char *)v9 + v30;
  v31[8] = v32[8];
  *(void *)uint64_t v31 = *(void *)v32;
  uint64_t v33 = v10[10];
  uint64_t v34 = (char *)v8 + v33;
  uint64_t v35 = (char *)v9 + v33;
  uint64_t v36 = sub_22EE7C3D0();
  uint64_t v37 = *(void *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
  {
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8);
    memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v34, v35, v36);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  }
  (*(void (**)(uint64_t *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
LABEL_18:
  uint64_t v39 = a3[6];
  uint64_t v40 = (void *)((char *)a1 + v39);
  uint64_t v41 = (void *)((char *)a2 + v39);
  uint64_t v43 = *v41;
  uint64_t v42 = v41[1];
  *uint64_t v40 = v43;
  v40[1] = v42;
  swift_bridgeObjectRelease();
  uint64_t v44 = a3[7];
  uint64_t v45 = (char *)a1 + v44;
  uint64_t v46 = (char *)a2 + v44;
  uint64_t v47 = sub_22EE7C3C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 40))(v45, v46, v47);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClientOverrideRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EE66368);
}

uint64_t sub_22EE66368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628998);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      long long v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_22EE7C3C0();
      int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for ClientOverrideRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EE664AC);
}

uint64_t sub_22EE664AC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628998);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      long long v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_22EE7C3C0();
      int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_22EE665DC()
{
  sub_22EE635B0();
  if (v0 <= 0x3F)
  {
    sub_22EE7C3C0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ClientOverrideRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22EE6677CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClientOverrideRequest.CodingKeys()
{
  return &type metadata for ClientOverrideRequest.CodingKeys;
}

unint64_t sub_22EE667B8()
{
  unint64_t result = qword_268628A58;
  if (!qword_268628A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628A58);
  }
  return result;
}

unint64_t sub_22EE66810()
{
  unint64_t result = qword_268628A60;
  if (!qword_268628A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628A60);
  }
  return result;
}

unint64_t sub_22EE66868()
{
  unint64_t result = qword_268628A68;
  if (!qword_268628A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628A68);
  }
  return result;
}

uint64_t sub_22EE668BC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4449656C646E7562 && a2 == 0xE800000000000000;
  if (v2 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x764F746E65696C63 && a2 == 0xEE00656469727265 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x79654B676F6CLL && a2 == 0xE600000000000000 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C69746E75 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_22EE80660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_22EE66A8C()
{
  uint64_t result = 0x6C7561666544736FLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1684099177;
      break;
    case 2:
      uint64_t result = 0x656E6F685069;
      break;
    case 3:
      uint64_t result = 6513005;
      break;
    case 4:
      uint64_t result = 0x7974696C616572;
      break;
    case 5:
      uint64_t result = 30324;
      break;
    case 6:
      uint64_t result = 0x6863746177;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22EE66B50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_22EE6A144(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22EE66B78(uint64_t a1)
{
  unint64_t v2 = sub_22EE675F4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE66BB4(uint64_t a1)
{
  unint64_t v2 = sub_22EE675F4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_22EE66BF0(uint64_t a1)
{
  unint64_t v2 = sub_22EE677EC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE66C2C(uint64_t a1)
{
  unint64_t v2 = sub_22EE677EC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_22EE66C68(uint64_t a1)
{
  unint64_t v2 = sub_22EE67798();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE66CA4(uint64_t a1)
{
  unint64_t v2 = sub_22EE67798();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_22EE66CE0(uint64_t a1)
{
  unint64_t v2 = sub_22EE67744();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE66D1C(uint64_t a1)
{
  unint64_t v2 = sub_22EE67744();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_22EE66D58(uint64_t a1)
{
  unint64_t v2 = sub_22EE67840();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE66D94(uint64_t a1)
{
  unint64_t v2 = sub_22EE67840();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_22EE66DD0(uint64_t a1)
{
  unint64_t v2 = sub_22EE676F0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE66E0C(uint64_t a1)
{
  unint64_t v2 = sub_22EE676F0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_22EE66E48(uint64_t a1)
{
  unint64_t v2 = sub_22EE6769C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE66E84(uint64_t a1)
{
  unint64_t v2 = sub_22EE6769C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_22EE66EC0(uint64_t a1)
{
  unint64_t v2 = sub_22EE67648();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE66EFC(uint64_t a1)
{
  unint64_t v2 = sub_22EE67648();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ProductRequest.Platform.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v47 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628A70);
  uint64_t v45 = *(void *)(v3 - 8);
  uint64_t v46 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v44 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628A78);
  uint64_t v42 = *(void *)(v5 - 8);
  uint64_t v43 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v41 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628A80);
  uint64_t v39 = *(void *)(v7 - 8);
  uint64_t v40 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v38 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628A88);
  uint64_t v36 = *(void *)(v9 - 8);
  uint64_t v37 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v35 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628A90);
  uint64_t v33 = *(void *)(v11 - 8);
  uint64_t v34 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628A98);
  uint64_t v32 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628AA0);
  uint64_t v31 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628AA8);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v48 = v20;
  uint64_t v49 = v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v30 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22EE675F4();
  sub_22EE80830();
  switch((char)v47)
  {
    case 1:
      char v51 = 1;
      sub_22EE677EC();
      uint64_t v24 = v48;
      sub_22EE80580();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v14);
      return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v23, v24);
    case 2:
      char v52 = 2;
      sub_22EE67798();
      uint64_t v25 = v48;
      sub_22EE80580();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v13, v34);
      return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v23, v25);
    case 3:
      char v53 = 3;
      sub_22EE67744();
      uint64_t v27 = v35;
      uint64_t v24 = v48;
      sub_22EE80580();
      uint64_t v29 = v36;
      uint64_t v28 = v37;
      goto LABEL_9;
    case 4:
      char v54 = 4;
      sub_22EE676F0();
      uint64_t v27 = v38;
      uint64_t v24 = v48;
      sub_22EE80580();
      uint64_t v29 = v39;
      uint64_t v28 = v40;
      goto LABEL_9;
    case 5:
      char v55 = 5;
      sub_22EE6769C();
      uint64_t v27 = v41;
      uint64_t v24 = v48;
      sub_22EE80580();
      uint64_t v29 = v42;
      uint64_t v28 = v43;
      goto LABEL_9;
    case 6:
      char v56 = 6;
      sub_22EE67648();
      uint64_t v27 = v44;
      uint64_t v24 = v48;
      sub_22EE80580();
      uint64_t v29 = v45;
      uint64_t v28 = v46;
LABEL_9:
      (*(void (**)(char *, uint64_t))(v29 + 8))(v27, v28);
      break;
    default:
      char v50 = 0;
      sub_22EE67840();
      uint64_t v24 = v48;
      sub_22EE80580();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v19, v17);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v23, v24);
}

unint64_t sub_22EE675F4()
{
  unint64_t result = qword_268628AB0;
  if (!qword_268628AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628AB0);
  }
  return result;
}

unint64_t sub_22EE67648()
{
  unint64_t result = qword_268628AB8;
  if (!qword_268628AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628AB8);
  }
  return result;
}

unint64_t sub_22EE6769C()
{
  unint64_t result = qword_268628AC0;
  if (!qword_268628AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628AC0);
  }
  return result;
}

unint64_t sub_22EE676F0()
{
  unint64_t result = qword_268628AC8;
  if (!qword_268628AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628AC8);
  }
  return result;
}

unint64_t sub_22EE67744()
{
  unint64_t result = qword_268628AD0;
  if (!qword_268628AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628AD0);
  }
  return result;
}

unint64_t sub_22EE67798()
{
  unint64_t result = qword_268628AD8;
  if (!qword_268628AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628AD8);
  }
  return result;
}

unint64_t sub_22EE677EC()
{
  unint64_t result = qword_268628AE0;
  if (!qword_268628AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628AE0);
  }
  return result;
}

unint64_t sub_22EE67840()
{
  unint64_t result = qword_268628AE8;
  if (!qword_268628AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628AE8);
  }
  return result;
}

void *ProductRequest.Platform.init(from:)(void *a1)
{
  return sub_22EE6A3F0(a1);
}

void *sub_22EE678B0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_22EE6A3F0(a1);
  if (!v2) {
    *a2 = (_BYTE)result;
  }
  return result;
}

uint64_t sub_22EE678DC(void *a1)
{
  return ProductRequest.Platform.encode(to:)(a1, *v1);
}

BOOL static ProductRequest.RequestKind.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t ProductRequest.RequestKind.hash(into:)()
{
  return sub_22EE807C0();
}

unint64_t sub_22EE67930()
{
  uint64_t v1 = 0x654D79636167656CLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x495041616964656DLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000019;
  }
}

uint64_t sub_22EE6799C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_22EE6AD3C(a1, a2);
  *a3 = result;
  return result;
}

void sub_22EE679C4(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_22EE679D0(uint64_t a1)
{
  unint64_t v2 = sub_22EE6ABEC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE67A0C(uint64_t a1)
{
  unint64_t v2 = sub_22EE6ABEC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_22EE67A48(uint64_t a1)
{
  unint64_t v2 = sub_22EE6ACE8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE67A84(uint64_t a1)
{
  unint64_t v2 = sub_22EE6ACE8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_22EE67AC0(uint64_t a1)
{
  unint64_t v2 = sub_22EE6AC94();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE67AFC(uint64_t a1)
{
  unint64_t v2 = sub_22EE6AC94();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_22EE67B38(uint64_t a1)
{
  unint64_t v2 = sub_22EE6AC40();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE67B74(uint64_t a1)
{
  unint64_t v2 = sub_22EE6AC40();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ProductRequest.RequestKind.encode(to:)(void *a1, int a2)
{
  int v24 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628AF0);
  uint64_t v22 = *(void *)(v3 - 8);
  uint64_t v23 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v21 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628AF8);
  uint64_t v19 = *(void *)(v5 - 8);
  uint64_t v20 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628B00);
  uint64_t v18 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628B08);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22EE6ABEC();
  sub_22EE80830();
  if ((_BYTE)v24)
  {
    if (v24 == 1)
    {
      char v26 = 1;
      sub_22EE6AC94();
      sub_22EE80580();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v20);
    }
    else
    {
      char v27 = 2;
      sub_22EE6AC40();
      uint64_t v15 = v21;
      sub_22EE80580();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v15, v23);
    }
  }
  else
  {
    char v25 = 0;
    sub_22EE6ACE8();
    sub_22EE80580();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v10, v8);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

void *ProductRequest.RequestKind.init(from:)(void *a1)
{
  return sub_22EE6AEB4(a1);
}

void *sub_22EE67F38@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_22EE6AEB4(a1);
  if (!v2) {
    *a2 = (_BYTE)result;
  }
  return result;
}

uint64_t sub_22EE67F64(void *a1)
{
  return ProductRequest.RequestKind.encode(to:)(a1, *v1);
}

uint64_t sub_22EE67F80()
{
  if (*v0) {
    return 0xD000000000000012;
  }
  else {
    return 0x73746375646F7270;
  }
}

uint64_t sub_22EE67FC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_22EE6B520(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22EE67FE8(uint64_t a1)
{
  unint64_t v2 = sub_22EE6B424();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE68024(uint64_t a1)
{
  unint64_t v2 = sub_22EE6B424();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_22EE68064()
{
  return 7554121;
}

uint64_t sub_22EE68078(uint64_t a1)
{
  unint64_t v2 = sub_22EE6B4CC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE680B4(uint64_t a1)
{
  unint64_t v2 = sub_22EE6B4CC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_22EE680F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 7554121 && a2 == 0xE300000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_22EE80660();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_22EE68178(uint64_t a1)
{
  unint64_t v2 = sub_22EE6B478();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE681B4(uint64_t a1)
{
  unint64_t v2 = sub_22EE6B478();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ProductRequest.IdentifierKind.encode(to:)(void *a1, uint64_t a2, int a3)
{
  uint64_t v20 = a2;
  int v21 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628B30);
  uint64_t v18 = *(void *)(v4 - 8);
  uint64_t v19 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628B38);
  uint64_t v17 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628B40);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22EE6B424();
  sub_22EE80830();
  uint64_t v14 = (uint64_t (**)(char *, uint64_t))(v11 + 8);
  if (v21)
  {
    LOBYTE(v22) = 1;
    sub_22EE6B478();
    sub_22EE80580();
    uint64_t v22 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268628980);
    sub_22EE700FC(&qword_268628B58);
    uint64_t v15 = v19;
    sub_22EE805E0();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v15);
  }
  else
  {
    LOBYTE(v22) = 0;
    sub_22EE6B4CC();
    sub_22EE80580();
    uint64_t v22 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268628980);
    sub_22EE700FC(&qword_268628B58);
    sub_22EE805E0();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v9, v7);
  }
  return (*v14)(v13, v10);
}

void *ProductRequest.IdentifierKind.init(from:)(void *a1)
{
  uint64_t result = sub_22EE6B610(a1);
  if (v1) {
    return (void *)v3;
  }
  return result;
}

void *sub_22EE68584@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_22EE6B610(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5 & 1;
  }
  return result;
}

uint64_t sub_22EE685B8(void *a1)
{
  return ProductRequest.IdentifierKind.encode(to:)(a1, *(void *)v1, *(unsigned __int8 *)(v1 + 8));
}

uint64_t static ProductRequest.IncludedResource.all.getter()
{
  uint64_t v3 = MEMORY[0x263F8EE88];
  sub_22EE697E4(&v2, 0);
  sub_22EE697E4(&v1, 1);
  return v3;
}

void *static ProductRequest.IncludedResource.allCases.getter()
{
  return &unk_26E27B1D0;
}

BOOL static ProductRequest.IncludedResource.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t ProductRequest.IncludedResource.hash(into:)()
{
  return sub_22EE807C0();
}

uint64_t sub_22EE68670()
{
  if (*v0) {
    return 0x4F6B6361426E6977;
  }
  else {
    return 0xD000000000000011;
  }
}

uint64_t sub_22EE686BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_22EE6BC6C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22EE686E4(uint64_t a1)
{
  unint64_t v2 = sub_22EE6BB70();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE68720(uint64_t a1)
{
  unint64_t v2 = sub_22EE6BB70();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_22EE6875C(uint64_t a1)
{
  unint64_t v2 = sub_22EE6BC18();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE68798(uint64_t a1)
{
  unint64_t v2 = sub_22EE6BC18();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_22EE687D4(uint64_t a1)
{
  unint64_t v2 = sub_22EE6BBC4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE68810(uint64_t a1)
{
  unint64_t v2 = sub_22EE6BBC4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ProductRequest.IncludedResource.encode(to:)(void *a1, int a2)
{
  int v18 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628B68);
  uint64_t v16 = *(void *)(v3 - 8);
  uint64_t v17 = v3;
  MEMORY[0x270FA5388](v3);
  char v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628B70);
  uint64_t v6 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628B78);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22EE6BB70();
  sub_22EE80830();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v10 + 8);
  if (v18)
  {
    char v20 = 1;
    sub_22EE6BBC4();
    sub_22EE80580();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    char v19 = 0;
    sub_22EE6BC18();
    sub_22EE80580();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v15);
  }
  return (*v13)(v12, v9);
}

uint64_t ProductRequest.IncludedResource.hashValue.getter()
{
  return sub_22EE807F0();
}

uint64_t ProductRequest.IncludedResource.init(from:)(uint64_t a1)
{
  return sub_22EE6BD80(a1) & 1;
}

uint64_t sub_22EE68B60@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_22EE6BD80(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_22EE68B90(void *a1)
{
  return ProductRequest.IncludedResource.encode(to:)(a1, *v1);
}

void sub_22EE68BAC(void *a1@<X8>)
{
  *a1 = &unk_26E27B1F8;
}

uint64_t ProductRequest.clientOverride.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22EE604B0(v1, a1);
}

uint64_t ProductRequest.identifier.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for ProductRequest() + 20));
  uint64_t v2 = *v1;
  j__swift_bridgeObjectRetain_1(*v1, *((unsigned __int8 *)v1 + 8));
  return v2;
}

uint64_t ProductRequest.kind.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ProductRequest() + 24));
}

uint64_t ProductRequest.includedResources.getter()
{
  type metadata accessor for ProductRequest();

  return swift_bridgeObjectRetain();
}

uint64_t ProductRequest.logKey.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ProductRequest() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ProductRequest.logKey.setter(uint64_t a1, uint64_t a2)
{
  char v5 = (void *)(v2 + *(int *)(type metadata accessor for ProductRequest() + 32));
  uint64_t result = swift_bridgeObjectRelease();
  *char v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ProductRequest.logKey.modify())(void)
{
  return nullsub_1;
}

uint64_t ProductRequest.platform.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ProductRequest() + 36));
}

int *ProductRequest.init(identifier:kind:resources:logKey:platform:clientOverride:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  sub_22EE63B74(a8, a9);
  uint64_t result = (int *)type metadata accessor for ProductRequest();
  uint64_t v18 = a9 + result[5];
  *(void *)uint64_t v18 = a1;
  *(unsigned char *)(v18 + 8) = a2 & 1;
  *(unsigned char *)(a9 + result[6]) = a3;
  *(void *)(a9 + result[7]) = a4;
  char v19 = (void *)(a9 + result[8]);
  *char v19 = a5;
  v19[1] = a6;
  *(unsigned char *)(a9 + result[9]) = a7;
  return result;
}

unint64_t sub_22EE68DFC()
{
  unint64_t result = 0x764F746E65696C63;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x696669746E656469;
      break;
    case 2:
      unint64_t result = 1684957547;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0x79654B676F6CLL;
      break;
    case 5:
      unint64_t result = 0x6D726F6674616C70;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22EE68ECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_22EE6FE68(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22EE68EF4(uint64_t a1)
{
  unint64_t v2 = sub_22EE6C220();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE68F30(uint64_t a1)
{
  unint64_t v2 = sub_22EE6C220();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ProductRequest.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628B98);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22EE6C220();
  sub_22EE80830();
  LOBYTE(v15) = 0;
  type metadata accessor for ClientOverride(0);
  sub_22EE6C830(&qword_2686289C0, (void (*)(uint64_t))type metadata accessor for ClientOverride);
  sub_22EE805A0();
  if (!v2)
  {
    uint64_t v9 = (int *)type metadata accessor for ProductRequest();
    uint64_t v10 = (uint64_t *)(v3 + v9[5]);
    uint64_t v11 = *v10;
    LOBYTE(v10) = *((unsigned char *)v10 + 8);
    uint64_t v15 = v11;
    char v16 = (char)v10;
    char v14 = 1;
    sub_22EE6C274();
    sub_22EE805E0();
    LOBYTE(v15) = *(unsigned char *)(v3 + v9[6]);
    char v14 = 2;
    sub_22EE6C2C8();
    sub_22EE805E0();
    uint64_t v15 = *(void *)(v3 + v9[7]);
    char v14 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268628BB8);
    sub_22EE6C470(&qword_268628BC0, (void (*)(void))sub_22EE6C31C);
    sub_22EE805E0();
    LOBYTE(v15) = 4;
    sub_22EE805C0();
    LOBYTE(v15) = *(unsigned char *)(v3 + v9[9]);
    char v14 = 5;
    sub_22EE6C370();
    sub_22EE805E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ProductRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628998);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628BD8);
  uint64_t v7 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)type metadata accessor for ProductRequest();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  char v25 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_22EE6C220();
  sub_22EE80820();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  }
  uint64_t v14 = v7;
  type metadata accessor for ClientOverride(0);
  LOBYTE(v26) = 0;
  sub_22EE6C830(&qword_2686289D0, (void (*)(uint64_t))type metadata accessor for ClientOverride);
  uint64_t v15 = v24;
  sub_22EE80520();
  sub_22EE63B74((uint64_t)v6, (uint64_t)v12);
  char v28 = 1;
  sub_22EE6C3C8();
  sub_22EE80560();
  char v16 = v27;
  uint64_t v17 = &v12[v10[5]];
  *(void *)uint64_t v17 = v26;
  unsigned char v17[8] = v16;
  char v28 = 2;
  sub_22EE6C41C();
  sub_22EE80560();
  v12[v10[6]] = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268628BB8);
  char v28 = 3;
  sub_22EE6C470(&qword_268628BF0, (void (*)(void))sub_22EE6C4E0);
  sub_22EE80560();
  *(void *)&v12[v10[7]] = v26;
  LOBYTE(v26) = 4;
  uint64_t v18 = sub_22EE80540();
  char v19 = (uint64_t *)&v12[v10[8]];
  *char v19 = v18;
  v19[1] = v20;
  char v28 = 5;
  sub_22EE6C534();
  sub_22EE80560();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v15);
  v12[v10[9]] = v26;
  sub_22EE6C588((uint64_t)v12, v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return sub_22EE6DA28((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ProductRequest);
}

uint64_t sub_22EE697B4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ProductRequest.init(from:)(a1, a2);
}

uint64_t sub_22EE697CC(void *a1)
{
  return ProductRequest.encode(to:)(a1);
}

uint64_t sub_22EE697E4(unsigned char *a1, char a2)
{
  uint64_t v4 = a2 & 1;
  uint64_t v5 = *v2;
  sub_22EE807B0();
  sub_22EE807C0();
  uint64_t v6 = sub_22EE807F0();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    uint64_t *v2 = 0x8000000000000000;
    sub_22EE69BCC(v4, v8, isUniquelyReferenced_nonNull_native);
    uint64_t *v2 = v13;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  if ((((v4 == 0) ^ *(unsigned __int8 *)(v9 + v8)) & 1) == 0)
  {
    uint64_t v10 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v10;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while ((((v4 == 0) ^ *(unsigned __int8 *)(v9 + v8)) & 1) == 0);
  }
  uint64_t result = 0;
  LOBYTE(v4) = *(unsigned char *)(*(void *)(*v2 + 48) + v8);
LABEL_8:
  *a1 = v4;
  return result;
}

uint64_t sub_22EE69920()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268628DD8);
  uint64_t result = sub_22EE801A0();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v26;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
      sub_22EE807B0();
      sub_22EE807C0();
      uint64_t result = sub_22EE807F0();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_22EE69BCC(uint64_t result, unint64_t a2, char a3)
{
  int v5 = result & 1;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_22EE69920();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_22EE69D34();
      goto LABEL_14;
    }
    sub_22EE69EC8();
  }
  uint64_t v8 = *v3;
  sub_22EE807B0();
  sub_22EE807C0();
  uint64_t result = sub_22EE807F0();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (((v5 == 0) ^ *(unsigned __int8 *)(v10 + a2)))
    {
LABEL_13:
      uint64_t result = sub_22EE806D0();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (((v5 == 0) ^ *(unsigned __int8 *)(v10 + a2))) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v12 + 48) + a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

void *sub_22EE69D34()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268628DD8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_22EE80190();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_22EE69EC8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268628DD8);
  uint64_t result = sub_22EE801A0();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
    sub_22EE807B0();
    sub_22EE807C0();
    uint64_t result = sub_22EE807F0();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_22EE6A144(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C7561666544736FLL && a2 == 0xE900000000000074;
  if (v2 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684099177 && a2 == 0xE400000000000000 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656E6F685069 && a2 == 0xE600000000000000 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 6513005 && a2 == 0xE300000000000000 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7974696C616572 && a2 == 0xE700000000000000 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 30324 && a2 == 0xE200000000000000 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6863746177 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_22EE80660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

void *sub_22EE6A3F0(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628E20);
  uint64_t v51 = *(void *)(v2 - 8);
  uint64_t v52 = v2;
  MEMORY[0x270FA5388](v2);
  char v54 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628E28);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v49 = v4;
  uint64_t v50 = v5;
  MEMORY[0x270FA5388](v4);
  int v57 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628E30);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v47 = v7;
  uint64_t v48 = v8;
  MEMORY[0x270FA5388](v7);
  char v56 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628E38);
  uint64_t v45 = *(void *)(v10 - 8);
  uint64_t v46 = v10;
  MEMORY[0x270FA5388](v10);
  char v55 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628E40);
  uint64_t v43 = *(void *)(v12 - 8);
  uint64_t v44 = v12;
  MEMORY[0x270FA5388](v12);
  char v53 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628E48);
  uint64_t v41 = *(void *)(v14 - 8);
  uint64_t v42 = v14;
  MEMORY[0x270FA5388](v14);
  unint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628E50);
  uint64_t v40 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628E58);
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  unint64_t v23 = (uint64_t *)((char *)&v37 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v24 = a1[3];
  size_t v58 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v24);
  sub_22EE675F4();
  uint64_t v25 = v59;
  sub_22EE80820();
  if (v25) {
    goto LABEL_6;
  }
  uint64_t v39 = v19;
  uint64_t v38 = v17;
  size_t v59 = v16;
  char v27 = v55;
  uint64_t v26 = v56;
  char v28 = v57;
  uint64_t v29 = v23;
  uint64_t v30 = sub_22EE80570();
  if (*(void *)(v30 + 16) != 1)
  {
    uint64_t v32 = sub_22EE80240();
    swift_allocError();
    unint64_t v23 = v33;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268628818);
    void *v23 = &type metadata for ProductRequest.Platform;
    sub_22EE80500();
    sub_22EE80220();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v32 - 8) + 104))(v23, *MEMORY[0x263F8DCB0], v32);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(void *, uint64_t))(v21 + 8))(v29, v20);
LABEL_6:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
    return v23;
  }
  unint64_t v23 = (void *)*(unsigned __int8 *)(v30 + 32);
  switch(*(unsigned char *)(v30 + 32))
  {
    case 1:
      char v61 = 1;
      sub_22EE677EC();
      uint64_t v26 = v59;
      sub_22EE804F0();
      uint64_t v36 = v41;
      uint64_t v35 = v42;
      goto LABEL_14;
    case 2:
      char v62 = 2;
      sub_22EE67798();
      uint64_t v26 = v53;
      sub_22EE804F0();
      uint64_t v36 = v43;
      uint64_t v35 = v44;
      goto LABEL_14;
    case 3:
      char v63 = 3;
      sub_22EE67744();
      uint64_t v26 = v27;
      sub_22EE804F0();
      uint64_t v36 = v45;
      uint64_t v35 = v46;
      goto LABEL_14;
    case 4:
      char v64 = 4;
      sub_22EE676F0();
      sub_22EE804F0();
      uint64_t v35 = v47;
      uint64_t v36 = v48;
      goto LABEL_14;
    case 5:
      char v65 = 5;
      sub_22EE6769C();
      sub_22EE804F0();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v28, v49);
      break;
    case 6:
      char v66 = 6;
      sub_22EE67648();
      uint64_t v26 = v54;
      sub_22EE804F0();
      uint64_t v36 = v51;
      uint64_t v35 = v52;
LABEL_14:
      (*(void (**)(char *, uint64_t))(v36 + 8))(v26, v35);
      break;
    default:
      char v60 = 0;
      sub_22EE67840();
      uint64_t v31 = v39;
      sub_22EE804F0();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v38);
      break;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(void *, uint64_t))(v21 + 8))(v29, v20);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  return v23;
}

unint64_t sub_22EE6ABEC()
{
  unint64_t result = qword_268628B10;
  if (!qword_268628B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628B10);
  }
  return result;
}

unint64_t sub_22EE6AC40()
{
  unint64_t result = qword_268628B18;
  if (!qword_268628B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628B18);
  }
  return result;
}

unint64_t sub_22EE6AC94()
{
  unint64_t result = qword_268628B20;
  if (!qword_268628B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628B20);
  }
  return result;
}

unint64_t sub_22EE6ACE8()
{
  unint64_t result = qword_268628B28;
  if (!qword_268628B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628B28);
  }
  return result;
}

uint64_t sub_22EE6AD3C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000019 && a2 == 0x800000022EE86300 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x654D79636167656CLL && a2 == 0xEE00495041616964 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x495041616964656DLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_22EE80660();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

void *sub_22EE6AEB4(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628E00);
  uint64_t v25 = *(void *)(v2 - 8);
  uint64_t v26 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v29 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628E08);
  uint64_t v24 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  char v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628E10);
  uint64_t v23 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628E18);
  uint64_t v28 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (uint64_t *)((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22EE6ABEC();
  uint64_t v12 = (uint64_t)v30;
  sub_22EE80820();
  if (v12) {
    goto LABEL_7;
  }
  uint64_t v22 = v6;
  uint64_t v13 = v29;
  uint64_t v30 = a1;
  uint64_t v14 = v11;
  uint64_t v15 = sub_22EE80570();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v17 = sub_22EE80240();
    swift_allocError();
    uint64_t v11 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268628818);
    *uint64_t v11 = &type metadata for ProductRequest.RequestKind;
    sub_22EE80500();
    sub_22EE80220();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v17 - 8) + 104))(v11, *MEMORY[0x263F8DCB0], v17);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(void *, uint64_t))(v28 + 8))(v14, v9);
    a1 = v30;
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v11;
  }
  uint64_t v11 = (void *)*(unsigned __int8 *)(v15 + 32);
  if (*(unsigned char *)(v15 + 32))
  {
    if (v11 == 1)
    {
      char v32 = 1;
      sub_22EE6AC94();
      sub_22EE804F0();
      uint64_t v16 = v28;
      (*(void (**)(char *, uint64_t))(v24 + 8))(v5, v27);
      swift_bridgeObjectRelease();
      (*(void (**)(void *, uint64_t))(v16 + 8))(v14, v9);
    }
    else
    {
      char v33 = 2;
      sub_22EE6AC40();
      sub_22EE804F0();
      uint64_t v20 = v28;
      (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v26);
      swift_bridgeObjectRelease();
      (*(void (**)(void *, uint64_t))(v20 + 8))(v14, v9);
    }
  }
  else
  {
    char v31 = 0;
    sub_22EE6ACE8();
    sub_22EE804F0();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v22);
    swift_bridgeObjectRelease();
    (*(void (**)(void *, uint64_t))(v28 + 8))(v14, v9);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  return v11;
}

unint64_t sub_22EE6B424()
{
  unint64_t result = qword_268628B48;
  if (!qword_268628B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628B48);
  }
  return result;
}

unint64_t sub_22EE6B478()
{
  unint64_t result = qword_268628B50;
  if (!qword_268628B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628B50);
  }
  return result;
}

unint64_t sub_22EE6B4CC()
{
  unint64_t result = qword_268628B60;
  if (!qword_268628B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628B60);
  }
  return result;
}

uint64_t sub_22EE6B520(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73746375646F7270 && a2 == 0xE800000000000000;
  if (v2 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000022EE86320)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_22EE80660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void *sub_22EE6B610(void *a1)
{
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628DE0);
  uint64_t v26 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628DE8);
  uint64_t v25 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628DF0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1[3];
  uint64_t v27 = a1;
  uint64_t v12 = __swift_project_boxed_opaque_existential_1(a1, v11);
  sub_22EE6B424();
  uint64_t v13 = v28;
  sub_22EE80820();
  if (v13) {
    goto LABEL_6;
  }
  uint64_t v23 = v4;
  uint64_t v28 = v8;
  uint64_t v14 = sub_22EE80570();
  if (*(void *)(v14 + 16) != 1)
  {
    uint64_t v16 = sub_22EE80240();
    swift_allocError();
    uint64_t v18 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268628818);
    *uint64_t v18 = &type metadata for ProductRequest.IdentifierKind;
    uint64_t v12 = v10;
    sub_22EE80500();
    sub_22EE80220();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v16 - 8) + 104))(v18, *MEMORY[0x263F8DCB0], v16);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v7);
LABEL_6:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    return v12;
  }
  if (*(unsigned char *)(v14 + 32))
  {
    LOBYTE(v29) = 1;
    sub_22EE6B478();
    sub_22EE804F0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_268628980);
    sub_22EE700FC(&qword_268628DF8);
    uint64_t v15 = v24;
    sub_22EE80560();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v3, v15);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v7);
  }
  else
  {
    LOBYTE(v29) = 0;
    sub_22EE6B4CC();
    uint64_t v20 = v6;
    sub_22EE804F0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_268628980);
    sub_22EE700FC(&qword_268628DF8);
    uint64_t v21 = v23;
    sub_22EE80560();
    uint64_t v22 = v28;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v20, v21);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v7);
  }
  uint64_t v12 = v29;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return v12;
}

unint64_t sub_22EE6BB70()
{
  unint64_t result = qword_268628B80;
  if (!qword_268628B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628B80);
  }
  return result;
}

unint64_t sub_22EE6BBC4()
{
  unint64_t result = qword_268628B88;
  if (!qword_268628B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628B88);
  }
  return result;
}

unint64_t sub_22EE6BC18()
{
  unint64_t result = qword_268628B90;
  if (!qword_268628B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628B90);
  }
  return result;
}

uint64_t sub_22EE6BC6C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x800000022EE86340 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4F6B6361426E6977 && a2 == 0xED00007372656666)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_22EE80660();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_22EE6BD80(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628DC0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v22 = v2;
  uint64_t v23 = v3;
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628DC8);
  uint64_t v25 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628DD0);
  uint64_t v24 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)a1, *(void *)(a1 + 24));
  sub_22EE6BB70();
  uint64_t v12 = v26;
  sub_22EE80820();
  if (v12) {
    goto LABEL_7;
  }
  uint64_t v13 = v25;
  uint64_t v21 = v6;
  uint64_t v26 = a1;
  uint64_t v14 = sub_22EE80570();
  if (*(void *)(v14 + 16) != 1)
  {
    uint64_t v16 = sub_22EE80240();
    swift_allocError();
    uint64_t v18 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268628818);
    *uint64_t v18 = &type metadata for ProductRequest.IncludedResource;
    sub_22EE80500();
    sub_22EE80220();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v16 - 8) + 104))(v18, *MEMORY[0x263F8DCB0], v16);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v9);
    a1 = v26;
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1(a1);
    return a1;
  }
  a1 = *(unsigned __int8 *)(v14 + 32);
  if (a1)
  {
    LODWORD(v25) = *(unsigned __int8 *)(v14 + 32);
    char v28 = 1;
    sub_22EE6BBC4();
    sub_22EE804F0();
    uint64_t v15 = v24;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v22);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v11, v9);
    a1 = v25;
  }
  else
  {
    char v27 = 0;
    sub_22EE6BC18();
    sub_22EE804F0();
    uint64_t v19 = v24;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v21);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
  }
  __swift_destroy_boxed_opaque_existential_1(v26);
  return a1;
}

uint64_t type metadata accessor for ProductRequest()
{
  uint64_t result = qword_268628C48;
  if (!qword_268628C48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_22EE6C220()
{
  unint64_t result = qword_268628BA0;
  if (!qword_268628BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628BA0);
  }
  return result;
}

unint64_t sub_22EE6C274()
{
  unint64_t result = qword_268628BA8;
  if (!qword_268628BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628BA8);
  }
  return result;
}

unint64_t sub_22EE6C2C8()
{
  unint64_t result = qword_268628BB0;
  if (!qword_268628BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628BB0);
  }
  return result;
}

unint64_t sub_22EE6C31C()
{
  unint64_t result = qword_268628BC8;
  if (!qword_268628BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628BC8);
  }
  return result;
}

unint64_t sub_22EE6C370()
{
  unint64_t result = qword_268628BD0;
  if (!qword_268628BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628BD0);
  }
  return result;
}

unint64_t sub_22EE6C3C8()
{
  unint64_t result = qword_268628BE0;
  if (!qword_268628BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628BE0);
  }
  return result;
}

unint64_t sub_22EE6C41C()
{
  unint64_t result = qword_268628BE8;
  if (!qword_268628BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628BE8);
  }
  return result;
}

uint64_t sub_22EE6C470(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268628BB8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22EE6C4E0()
{
  unint64_t result = qword_268628BF8;
  if (!qword_268628BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628BF8);
  }
  return result;
}

unint64_t sub_22EE6C534()
{
  unint64_t result = qword_268628C00;
  if (!qword_268628C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628C00);
  }
  return result;
}

uint64_t sub_22EE6C588(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ProductRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_22EE6C5F0()
{
  unint64_t result = qword_268628C08;
  if (!qword_268628C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628C08);
  }
  return result;
}

unint64_t sub_22EE6C648()
{
  unint64_t result = qword_268628C10;
  if (!qword_268628C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628C10);
  }
  return result;
}

unint64_t sub_22EE6C6A0()
{
  unint64_t result = qword_268628C18;
  if (!qword_268628C18)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268628C20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628C18);
  }
  return result;
}

unint64_t sub_22EE6C700()
{
  unint64_t result = qword_268628C28;
  if (!qword_268628C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628C28);
  }
  return result;
}

uint64_t sub_22EE6C754(uint64_t a1)
{
  uint64_t result = sub_22EE6C830(&qword_268628C30, (void (*)(uint64_t))type metadata accessor for ProductRequest);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_22EE6C7AC(uint64_t a1)
{
  *(void *)(a1 + 16) = sub_22EE6C830(&qword_268628C38, (void (*)(uint64_t))type metadata accessor for ProductRequest);
  uint64_t result = sub_22EE6C830(&qword_268628C40, (void (*)(uint64_t))type metadata accessor for ProductRequest);
  *(void *)(a1 + 24) = result;
  return result;
}

uint64_t sub_22EE6C830(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t *initializeBufferWithCopyOfBuffer for ProductRequest(unint64_t *a1, unint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    unint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (unint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = (int *)type metadata accessor for ClientOverride(0);
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(unint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628998);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      unint64_t v11 = a2[1];
      if (v11 >> 60 == 15)
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
      }
      else
      {
        unint64_t v12 = *a2;
        sub_22EB71E60(*a2, a2[1]);
        *a1 = v12;
        a1[1] = v11;
      }
      unint64_t v13 = a2[3];
      a1[2] = a2[2];
      a1[3] = v13;
      unint64_t v14 = a2[5];
      a1[4] = a2[4];
      a1[5] = v14;
      uint64_t v15 = v7[7];
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 3, v18))
      {
        uint64_t v20 = type metadata accessor for ClientOverride.Server(0);
        memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        uint64_t v21 = sub_22EE7C2B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v16, v17, v21);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 3, v18);
      }
      uint64_t v22 = v7[8];
      uint64_t v23 = (char *)a1 + v22;
      uint64_t v24 = (char *)a2 + v22;
      *(void *)uint64_t v23 = *(void *)v24;
      unsigned char v23[8] = v24[8];
      uint64_t v25 = v7[9];
      uint64_t v26 = (char *)a1 + v25;
      char v27 = (char *)a2 + v25;
      v26[8] = v27[8];
      *(void *)uint64_t v26 = *(void *)v27;
      uint64_t v28 = v7[10];
      uint64_t v29 = (char *)a1 + v28;
      uint64_t v30 = (char *)a2 + v28;
      uint64_t v31 = sub_22EE7C3D0();
      uint64_t v32 = *(void *)(v31 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
      {
        uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8);
        memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
      }
      (*(void (**)(unint64_t *, void, uint64_t, int *))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v34 = a3[5];
    uint64_t v35 = (char *)a1 + v34;
    uint64_t v36 = (char *)a2 + v34;
    uint64_t v37 = *(void *)v36;
    unsigned __int8 v38 = v36[8];
    j__swift_bridgeObjectRetain_1(*(void *)v36, v38);
    *(void *)uint64_t v35 = v37;
    v35[8] = v38;
    uint64_t v39 = a3[7];
    *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    *(unint64_t *)((char *)a1 + v39) = *(unint64_t *)((char *)a2 + v39);
    uint64_t v40 = a3[8];
    uint64_t v41 = a3[9];
    uint64_t v42 = (unint64_t *)((char *)a1 + v40);
    uint64_t v43 = (unint64_t *)((char *)a2 + v40);
    uint64_t v44 = v43[1];
    *uint64_t v42 = *v43;
    v42[1] = v44;
    *((unsigned char *)a1 + v41) = *((unsigned char *)a2 + v41);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ProductRequest(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClientOverride(0);
  if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4))
  {
    unint64_t v5 = a1[1];
    if (v5 >> 60 != 15) {
      sub_22EB2AC74(*a1, v5);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = (char *)a1 + *(int *)(v4 + 28);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 3, v7))
    {
      uint64_t v8 = sub_22EE7C2B0();
      (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);
    }
    uint64_t v9 = (char *)a1 + *(int *)(v4 + 40);
    uint64_t v10 = sub_22EE7C3D0();
    uint64_t v11 = *(void *)(v10 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    }
  }
  j__swift_bridgeObjectRelease_0(*(uint64_t *)((char *)a1 + *(int *)(a2 + 20)), *((unsigned __int8 *)a1 + *(int *)(a2 + 20) + 8));
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

unint64_t *initializeWithCopy for ProductRequest(unint64_t *a1, unint64_t *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for ClientOverride(0);
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(unint64_t *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628998);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    unint64_t v9 = a2[1];
    if (v9 >> 60 == 15)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    else
    {
      unint64_t v10 = *a2;
      sub_22EB71E60(*a2, a2[1]);
      *a1 = v10;
      a1[1] = v9;
    }
    unint64_t v11 = a2[3];
    a1[2] = a2[2];
    a1[3] = v11;
    unint64_t v12 = a2[5];
    a1[4] = a2[4];
    a1[5] = v12;
    uint64_t v13 = v6[7];
    unint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 3, v16))
    {
      uint64_t v18 = type metadata accessor for ClientOverride.Server(0);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      uint64_t v19 = sub_22EE7C2B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v14, v15, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 3, v16);
    }
    uint64_t v20 = v6[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    uint64_t v23 = v6[9];
    uint64_t v24 = (char *)a1 + v23;
    uint64_t v25 = (char *)a2 + v23;
    v24[8] = v25[8];
    *(void *)uint64_t v24 = *(void *)v25;
    uint64_t v26 = v6[10];
    char v27 = (char *)a1 + v26;
    uint64_t v28 = (char *)a2 + v26;
    uint64_t v29 = sub_22EE7C3D0();
    uint64_t v30 = *(void *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8);
      memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    (*(void (**)(unint64_t *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v32 = a3[5];
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  uint64_t v35 = *(void *)v34;
  unsigned __int8 v36 = v34[8];
  j__swift_bridgeObjectRetain_1(*(void *)v34, v36);
  *(void *)uint64_t v33 = v35;
  unsigned char v33[8] = v36;
  uint64_t v37 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *(unint64_t *)((char *)a1 + v37) = *(unint64_t *)((char *)a2 + v37);
  uint64_t v38 = a3[8];
  uint64_t v39 = a3[9];
  uint64_t v40 = (unint64_t *)((char *)a1 + v38);
  uint64_t v41 = (unint64_t *)((char *)a2 + v38);
  uint64_t v42 = v41[1];
  *uint64_t v40 = *v41;
  v40[1] = v42;
  *((unsigned char *)a1 + v39) = *((unsigned char *)a2 + v39);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for ProductRequest(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for ClientOverride(0);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(uint64_t *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_22EE6DA28((uint64_t)a1, type metadata accessor for ClientOverride);
      goto LABEL_7;
    }
    unint64_t v15 = a2[1];
    if ((unint64_t)a1[1] >> 60 == 15)
    {
      if (v15 >> 60 != 15)
      {
        uint64_t v16 = *a2;
        sub_22EB71E60(*a2, a2[1]);
        *a1 = v16;
        a1[1] = v15;
        goto LABEL_25;
      }
    }
    else
    {
      if (v15 >> 60 != 15)
      {
        uint64_t v50 = *a2;
        sub_22EB71E60(*a2, a2[1]);
        uint64_t v51 = *a1;
        unint64_t v52 = a1[1];
        *a1 = v50;
        a1[1] = v15;
        sub_22EB2AC74(v51, v52);
LABEL_25:
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        a1[4] = a2[4];
        a1[5] = a2[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v53 = v6[7];
        char v54 = (char *)a1 + v53;
        char v55 = (char *)a2 + v53;
        uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
        uint64_t v57 = *(void *)(v56 - 8);
        size_t v58 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v57 + 48);
        uint64_t v80 = (uint64_t)v54;
        LODWORD(v54) = v58(v54, 3, v56);
        int v59 = v58(v55, 3, v56);
        if (v54)
        {
          if (!v59)
          {
            uint64_t v62 = sub_22EE7C2B0();
            (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v62 - 8) + 16))(v80, v55, v62);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v57 + 56))(v80, 0, 3, v56);
            goto LABEL_33;
          }
          size_t v60 = *(void *)(*(void *)(type metadata accessor for ClientOverride.Server(0) - 8) + 64);
          char v61 = (void *)v80;
        }
        else
        {
          if (!v59)
          {
            uint64_t v63 = sub_22EE7C2B0();
            (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v63 - 8) + 24))(v80, v55, v63);
            goto LABEL_33;
          }
          sub_22EADD81C(v80, &qword_268628410);
          size_t v60 = *(void *)(*(void *)(type metadata accessor for ClientOverride.Server(0) - 8) + 64);
          char v61 = (void *)v80;
        }
        memcpy(v61, v55, v60);
LABEL_33:
        uint64_t v64 = v6[8];
        char v65 = (char *)a1 + v64;
        char v66 = (char *)a2 + v64;
        uint64_t v67 = *(void *)v66;
        v65[8] = v66[8];
        *(void *)char v65 = v67;
        uint64_t v68 = v6[9];
        uint64_t v69 = (char *)a1 + v68;
        uint64_t v70 = (char *)a2 + v68;
        uint64_t v71 = *(void *)v70;
        v69[8] = v70[8];
        *(void *)uint64_t v69 = v71;
        uint64_t v72 = v6[10];
        int v73 = (char *)a1 + v72;
        int v74 = (char *)a2 + v72;
        uint64_t v75 = sub_22EE7C3D0();
        uint64_t v76 = *(void *)(v75 - 8);
        int v77 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v76 + 48);
        int v78 = v77(v73, 1, v75);
        int v79 = v77(v74, 1, v75);
        if (v78)
        {
          if (!v79)
          {
            (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v73, v74, v75);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
            goto LABEL_20;
          }
        }
        else
        {
          if (!v79)
          {
            (*(void (**)(char *, char *, uint64_t))(v76 + 24))(v73, v74, v75);
            goto LABEL_20;
          }
          (*(void (**)(char *, uint64_t))(v76 + 8))(v73, v75);
        }
        size_t v12 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8) - 8) + 64);
        uint64_t v13 = (uint64_t *)v73;
        unint64_t v14 = (uint64_t *)v74;
        goto LABEL_8;
      }
      sub_22EE4F300((uint64_t)a1);
    }
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_25;
  }
  if (v10)
  {
LABEL_7:
    size_t v12 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268628998) - 8) + 64);
    uint64_t v13 = a1;
    unint64_t v14 = a2;
LABEL_8:
    memcpy(v13, v14, v12);
    goto LABEL_20;
  }
  unint64_t v11 = a2[1];
  if (v11 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v17 = *a2;
    sub_22EB71E60(*a2, a2[1]);
    *a1 = v17;
    a1[1] = v11;
  }
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  uint64_t v18 = v6[7];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 3, v21))
  {
    uint64_t v23 = type metadata accessor for ClientOverride.Server(0);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    uint64_t v24 = sub_22EE7C2B0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v19, v20, v24);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 3, v21);
  }
  uint64_t v25 = v6[8];
  uint64_t v26 = (char *)a1 + v25;
  char v27 = (char *)a2 + v25;
  uint64_t v28 = *(void *)v27;
  v26[8] = v27[8];
  *(void *)uint64_t v26 = v28;
  uint64_t v29 = v6[9];
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  uint64_t v32 = *(void *)v31;
  v30[8] = v31[8];
  *(void *)uint64_t v30 = v32;
  uint64_t v33 = v6[10];
  uint64_t v34 = (char *)a1 + v33;
  uint64_t v35 = (char *)a2 + v33;
  uint64_t v36 = sub_22EE7C3D0();
  uint64_t v37 = *(void *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
  {
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8);
    memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  }
  (*(void (**)(uint64_t *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
LABEL_20:
  uint64_t v39 = a3[5];
  uint64_t v40 = (char *)a1 + v39;
  uint64_t v41 = (char *)a2 + v39;
  uint64_t v42 = *(void *)v41;
  unsigned __int8 v43 = v41[8];
  j__swift_bridgeObjectRetain_1(*(void *)v41, v43);
  uint64_t v44 = *(void *)v40;
  uint64_t v45 = v40[8];
  *(void *)uint64_t v40 = v42;
  v40[8] = v43;
  j__swift_bridgeObjectRelease_0(v44, v45);
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v46 = a3[8];
  uint64_t v47 = (uint64_t *)((char *)a1 + v46);
  uint64_t v48 = (uint64_t *)((char *)a2 + v46);
  *uint64_t v47 = *v48;
  v47[1] = v48[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  return a1;
}

uint64_t sub_22EE6DA28(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *initializeWithTake for ProductRequest(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for ClientOverride(0);
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628998);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    long long v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    a1[2] = a2[2];
    uint64_t v10 = v6[7];
    unint64_t v11 = (char *)a1 + v10;
    size_t v12 = (char *)a2 + v10;
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 3, v13))
    {
      uint64_t v15 = type metadata accessor for ClientOverride.Server(0);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      uint64_t v16 = sub_22EE7C2B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v11, v12, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 3, v13);
    }
    uint64_t v17 = v6[8];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v6[9];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    v21[8] = v22[8];
    *(void *)uint64_t v21 = *(void *)v22;
    uint64_t v23 = v6[10];
    uint64_t v24 = (char *)a1 + v23;
    uint64_t v25 = (char *)a2 + v23;
    uint64_t v26 = sub_22EE7C3D0();
    uint64_t v27 = *(void *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8);
      memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v29 = a3[5];
  uint64_t v30 = a3[6];
  uint64_t v31 = (char *)a1 + v29;
  uint64_t v32 = (char *)a2 + v29;
  *(void *)uint64_t v31 = *(void *)v32;
  v31[8] = v32[8];
  *((unsigned char *)a1 + v30) = *((unsigned char *)a2 + v30);
  uint64_t v33 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v33) = *(_OWORD *)((char *)a2 + v33);
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  return a1;
}

uint64_t *assignWithTake for ProductRequest(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for ClientOverride(0);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(uint64_t *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_22EE6DA28((uint64_t)a1, type metadata accessor for ClientOverride);
      goto LABEL_7;
    }
    unint64_t v21 = a1[1];
    if (v21 >> 60 != 15)
    {
      unint64_t v22 = a2[1];
      if (v22 >> 60 != 15)
      {
        uint64_t v49 = *a1;
        *a1 = *a2;
        a1[1] = v22;
        sub_22EB2AC74(v49, v21);
LABEL_20:
        uint64_t v50 = a2[3];
        a1[2] = a2[2];
        a1[3] = v50;
        swift_bridgeObjectRelease();
        uint64_t v51 = a2[5];
        a1[4] = a2[4];
        a1[5] = v51;
        swift_bridgeObjectRelease();
        uint64_t v52 = v6[7];
        uint64_t v53 = (char *)a1 + v52;
        char v54 = (char *)a2 + v52;
        uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
        uint64_t v56 = *(void *)(v55 - 8);
        uint64_t v57 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v56 + 48);
        uint64_t v77 = (uint64_t)v53;
        LODWORD(v53) = v57(v53, 3, v55);
        int v58 = v57(v54, 3, v55);
        if (v53)
        {
          if (!v58)
          {
            uint64_t v61 = sub_22EE7C2B0();
            (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v61 - 8) + 32))(v77, v54, v61);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v56 + 56))(v77, 0, 3, v55);
            goto LABEL_28;
          }
          size_t v59 = *(void *)(*(void *)(type metadata accessor for ClientOverride.Server(0) - 8) + 64);
          size_t v60 = (void *)v77;
        }
        else
        {
          if (!v58)
          {
            uint64_t v62 = sub_22EE7C2B0();
            (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v62 - 8) + 40))(v77, v54, v62);
            goto LABEL_28;
          }
          sub_22EADD81C(v77, &qword_268628410);
          size_t v59 = *(void *)(*(void *)(type metadata accessor for ClientOverride.Server(0) - 8) + 64);
          size_t v60 = (void *)v77;
        }
        memcpy(v60, v54, v59);
LABEL_28:
        uint64_t v63 = v6[8];
        uint64_t v64 = (char *)a1 + v63;
        char v65 = (char *)a2 + v63;
        *(void *)uint64_t v64 = *(void *)v65;
        v64[8] = v65[8];
        uint64_t v66 = v6[9];
        uint64_t v67 = (char *)a1 + v66;
        uint64_t v68 = (char *)a2 + v66;
        v67[8] = v68[8];
        *(void *)uint64_t v67 = *(void *)v68;
        uint64_t v69 = v6[10];
        uint64_t v70 = (char *)a1 + v69;
        uint64_t v71 = (char *)a2 + v69;
        uint64_t v72 = sub_22EE7C3D0();
        uint64_t v73 = *(void *)(v72 - 8);
        int v74 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v73 + 48);
        int v75 = v74(v70, 1, v72);
        int v76 = v74(v71, 1, v72);
        if (v75)
        {
          if (!v76)
          {
            (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v70, v71, v72);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56))(v70, 0, 1, v72);
            goto LABEL_18;
          }
        }
        else
        {
          if (!v76)
          {
            (*(void (**)(char *, char *, uint64_t))(v73 + 40))(v70, v71, v72);
            goto LABEL_18;
          }
          (*(void (**)(char *, uint64_t))(v73 + 8))(v70, v72);
        }
        size_t v18 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8) - 8) + 64);
        uint64_t v19 = (uint64_t *)v70;
        uint64_t v20 = (uint64_t *)v71;
        goto LABEL_8;
      }
      sub_22EE4F300((uint64_t)a1);
    }
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_20;
  }
  if (v10)
  {
LABEL_7:
    size_t v18 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268628998) - 8) + 64);
    uint64_t v19 = a1;
    uint64_t v20 = a2;
LABEL_8:
    memcpy(v19, v20, v18);
    goto LABEL_18;
  }
  long long v11 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v11;
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  uint64_t v12 = v6[7];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 3, v15))
  {
    uint64_t v17 = type metadata accessor for ClientOverride.Server(0);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v23 = sub_22EE7C2B0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v13, v14, v23);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 3, v15);
  }
  uint64_t v24 = v6[8];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  *(void *)uint64_t v25 = *(void *)v26;
  v25[8] = v26[8];
  uint64_t v27 = v6[9];
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  v28[8] = v29[8];
  *(void *)uint64_t v28 = *(void *)v29;
  uint64_t v30 = v6[10];
  uint64_t v31 = (char *)a1 + v30;
  uint64_t v32 = (char *)a2 + v30;
  uint64_t v33 = sub_22EE7C3D0();
  uint64_t v34 = *(void *)(v33 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
  {
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8);
    memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v32, v33);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
  }
  (*(void (**)(uint64_t *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
LABEL_18:
  uint64_t v36 = a3[5];
  uint64_t v37 = (char *)a1 + v36;
  uint64_t v38 = (char *)a2 + v36;
  uint64_t v39 = *(void *)v38;
  LOBYTE(v38) = v38[8];
  uint64_t v40 = *(void *)v37;
  uint64_t v41 = v37[8];
  *(void *)uint64_t v37 = v39;
  v37[8] = (char)v38;
  j__swift_bridgeObjectRelease_0(v40, v41);
  uint64_t v42 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *(uint64_t *)((char *)a1 + v42) = *(uint64_t *)((char *)a2 + v42);
  swift_bridgeObjectRelease();
  uint64_t v43 = a3[8];
  uint64_t v44 = (uint64_t *)((char *)a1 + v43);
  uint64_t v45 = (uint64_t *)((char *)a2 + v43);
  uint64_t v47 = *v45;
  uint64_t v46 = v45[1];
  *uint64_t v44 = v47;
  v44[1] = v46;
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  return a1;
}

uint64_t getEnumTagSinglePayload for ProductRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EE6E52C);
}

uint64_t sub_22EE6E52C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628998);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ProductRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EE6E604);
}

uint64_t sub_22EE6E604(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_268628998);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
  return result;
}

void sub_22EE6E6C4()
{
  sub_22EE635B0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for ProductRequest.Platform()
{
  return &type metadata for ProductRequest.Platform;
}

ValueMetadata *type metadata accessor for ProductRequest.RequestKind()
{
  return &type metadata for ProductRequest.RequestKind;
}

uint64_t initializeBufferWithCopyOfBuffer for ProductRequest.IdentifierKind(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unsigned __int8 v4 = *((unsigned char *)a2 + 8);
  j__swift_bridgeObjectRetain_1(*a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for ProductRequest.IdentifierKind(uint64_t a1)
{
  return j__swift_bridgeObjectRelease_0(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t *assignWithCopy for ProductRequest.IdentifierKind(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unsigned __int8 v4 = *((unsigned char *)a2 + 8);
  j__swift_bridgeObjectRetain_1(*a2, v4);
  uint64_t v5 = *a1;
  uint64_t v6 = *((unsigned __int8 *)a1 + 8);
  *a1 = v3;
  *((unsigned char *)a1 + 8) = v4;
  j__swift_bridgeObjectRelease_0(v5, v6);
  return a1;
}

uint64_t __swift_memcpy9_8_0(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t *assignWithTake for ProductRequest.IdentifierKind(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  uint64_t v5 = *a1;
  uint64_t v6 = *((unsigned __int8 *)a1 + 8);
  *a1 = v3;
  *((unsigned char *)a1 + 8) = v4;
  j__swift_bridgeObjectRelease_0(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ProductRequest.IdentifierKind(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

ValueMetadata *type metadata accessor for ProductRequest.IdentifierKind()
{
  return &type metadata for ProductRequest.IdentifierKind;
}

ValueMetadata *type metadata accessor for ProductRequest.IncludedResource()
{
  return &type metadata for ProductRequest.IncludedResource;
}

unsigned char *storeEnumTagSinglePayload for ProductRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22EE6E9F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ProductRequest.CodingKeys()
{
  return &type metadata for ProductRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for ProductRequest.IncludedResource.CodingKeys()
{
  return &type metadata for ProductRequest.IncludedResource.CodingKeys;
}

ValueMetadata *type metadata accessor for ProductRequest.IncludedResource.PromotionalOffersCodingKeys()
{
  return &type metadata for ProductRequest.IncludedResource.PromotionalOffersCodingKeys;
}

ValueMetadata *type metadata accessor for ProductRequest.IncludedResource.WinBackOffersCodingKeys()
{
  return &type metadata for ProductRequest.IncludedResource.WinBackOffersCodingKeys;
}

unsigned char *_s15StoreKit_Shared14ProductRequestV16IncludedResourceOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22EE6EB24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ProductRequest.IdentifierKind.CodingKeys()
{
  return &type metadata for ProductRequest.IdentifierKind.CodingKeys;
}

ValueMetadata *type metadata accessor for ProductRequest.IdentifierKind.ProductsCodingKeys()
{
  return &type metadata for ProductRequest.IdentifierKind.ProductsCodingKeys;
}

unsigned char *_s15StoreKit_Shared14ProductRequestV14IdentifierKindO18ProductsCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x22EE6EC10);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ProductRequest.IdentifierKind.SubscriptionGroupsCodingKeys()
{
  return &type metadata for ProductRequest.IdentifierKind.SubscriptionGroupsCodingKeys;
}

unsigned char *_s15StoreKit_Shared14ProductRequestV11RequestKindOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22EE6ED14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ProductRequest.RequestKind.CodingKeys()
{
  return &type metadata for ProductRequest.RequestKind.CodingKeys;
}

ValueMetadata *type metadata accessor for ProductRequest.RequestKind.LegacyFetchSoftwareAddOnsCodingKeys()
{
  return &type metadata for ProductRequest.RequestKind.LegacyFetchSoftwareAddOnsCodingKeys;
}

ValueMetadata *type metadata accessor for ProductRequest.RequestKind.LegacyMediaAPICodingKeys()
{
  return &type metadata for ProductRequest.RequestKind.LegacyMediaAPICodingKeys;
}

ValueMetadata *type metadata accessor for ProductRequest.RequestKind.MediaAPICodingKeys()
{
  return &type metadata for ProductRequest.RequestKind.MediaAPICodingKeys;
}

unsigned char *_s15StoreKit_Shared14ProductRequestV8PlatformOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22EE6EE48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ProductRequest.Platform.CodingKeys()
{
  return &type metadata for ProductRequest.Platform.CodingKeys;
}

ValueMetadata *type metadata accessor for ProductRequest.Platform.OsDefaultCodingKeys()
{
  return &type metadata for ProductRequest.Platform.OsDefaultCodingKeys;
}

ValueMetadata *type metadata accessor for ProductRequest.Platform.IPadCodingKeys()
{
  return &type metadata for ProductRequest.Platform.IPadCodingKeys;
}

ValueMetadata *type metadata accessor for ProductRequest.Platform.IPhoneCodingKeys()
{
  return &type metadata for ProductRequest.Platform.IPhoneCodingKeys;
}

ValueMetadata *type metadata accessor for ProductRequest.Platform.MacCodingKeys()
{
  return &type metadata for ProductRequest.Platform.MacCodingKeys;
}

ValueMetadata *type metadata accessor for ProductRequest.Platform.RealityCodingKeys()
{
  return &type metadata for ProductRequest.Platform.RealityCodingKeys;
}

ValueMetadata *type metadata accessor for ProductRequest.Platform.TvCodingKeys()
{
  return &type metadata for ProductRequest.Platform.TvCodingKeys;
}

ValueMetadata *type metadata accessor for ProductRequest.Platform.WatchCodingKeys()
{
  return &type metadata for ProductRequest.Platform.WatchCodingKeys;
}

unint64_t sub_22EE6EEF4()
{
  unint64_t result = qword_268628C58;
  if (!qword_268628C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628C58);
  }
  return result;
}

unint64_t sub_22EE6EF4C()
{
  unint64_t result = qword_268628C60;
  if (!qword_268628C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628C60);
  }
  return result;
}

unint64_t sub_22EE6EFA4()
{
  unint64_t result = qword_268628C68;
  if (!qword_268628C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628C68);
  }
  return result;
}

unint64_t sub_22EE6EFFC()
{
  unint64_t result = qword_268628C70;
  if (!qword_268628C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628C70);
  }
  return result;
}

unint64_t sub_22EE6F054()
{
  unint64_t result = qword_268628C78;
  if (!qword_268628C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628C78);
  }
  return result;
}

unint64_t sub_22EE6F0AC()
{
  unint64_t result = qword_268628C80;
  if (!qword_268628C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628C80);
  }
  return result;
}

unint64_t sub_22EE6F104()
{
  unint64_t result = qword_268628C88;
  if (!qword_268628C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628C88);
  }
  return result;
}

unint64_t sub_22EE6F15C()
{
  unint64_t result = qword_268628C90;
  if (!qword_268628C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628C90);
  }
  return result;
}

unint64_t sub_22EE6F1B4()
{
  unint64_t result = qword_268628C98;
  if (!qword_268628C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628C98);
  }
  return result;
}

unint64_t sub_22EE6F20C()
{
  unint64_t result = qword_268628CA0;
  if (!qword_268628CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628CA0);
  }
  return result;
}

unint64_t sub_22EE6F264()
{
  unint64_t result = qword_268628CA8;
  if (!qword_268628CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628CA8);
  }
  return result;
}

unint64_t sub_22EE6F2BC()
{
  unint64_t result = qword_268628CB0;
  if (!qword_268628CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628CB0);
  }
  return result;
}

unint64_t sub_22EE6F314()
{
  unint64_t result = qword_268628CB8;
  if (!qword_268628CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628CB8);
  }
  return result;
}

unint64_t sub_22EE6F36C()
{
  unint64_t result = qword_268628CC0;
  if (!qword_268628CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628CC0);
  }
  return result;
}

unint64_t sub_22EE6F3C4()
{
  unint64_t result = qword_268628CC8;
  if (!qword_268628CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628CC8);
  }
  return result;
}

unint64_t sub_22EE6F41C()
{
  unint64_t result = qword_268628CD0;
  if (!qword_268628CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628CD0);
  }
  return result;
}

unint64_t sub_22EE6F474()
{
  unint64_t result = qword_268628CD8;
  if (!qword_268628CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628CD8);
  }
  return result;
}

unint64_t sub_22EE6F4CC()
{
  unint64_t result = qword_268628CE0;
  if (!qword_268628CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628CE0);
  }
  return result;
}

unint64_t sub_22EE6F524()
{
  unint64_t result = qword_268628CE8;
  if (!qword_268628CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628CE8);
  }
  return result;
}

unint64_t sub_22EE6F57C()
{
  unint64_t result = qword_268628CF0;
  if (!qword_268628CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628CF0);
  }
  return result;
}

unint64_t sub_22EE6F5D4()
{
  unint64_t result = qword_268628CF8;
  if (!qword_268628CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628CF8);
  }
  return result;
}

unint64_t sub_22EE6F62C()
{
  unint64_t result = qword_268628D00;
  if (!qword_268628D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628D00);
  }
  return result;
}

unint64_t sub_22EE6F684()
{
  unint64_t result = qword_268628D08;
  if (!qword_268628D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628D08);
  }
  return result;
}

unint64_t sub_22EE6F6DC()
{
  unint64_t result = qword_268628D10;
  if (!qword_268628D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628D10);
  }
  return result;
}

unint64_t sub_22EE6F734()
{
  unint64_t result = qword_268628D18;
  if (!qword_268628D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628D18);
  }
  return result;
}

unint64_t sub_22EE6F78C()
{
  unint64_t result = qword_268628D20;
  if (!qword_268628D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628D20);
  }
  return result;
}

unint64_t sub_22EE6F7E4()
{
  unint64_t result = qword_268628D28;
  if (!qword_268628D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628D28);
  }
  return result;
}

unint64_t sub_22EE6F83C()
{
  unint64_t result = qword_268628D30;
  if (!qword_268628D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628D30);
  }
  return result;
}

unint64_t sub_22EE6F894()
{
  unint64_t result = qword_268628D38;
  if (!qword_268628D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628D38);
  }
  return result;
}

unint64_t sub_22EE6F8EC()
{
  unint64_t result = qword_268628D40;
  if (!qword_268628D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628D40);
  }
  return result;
}

unint64_t sub_22EE6F944()
{
  unint64_t result = qword_268628D48;
  if (!qword_268628D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628D48);
  }
  return result;
}

unint64_t sub_22EE6F99C()
{
  unint64_t result = qword_268628D50;
  if (!qword_268628D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628D50);
  }
  return result;
}

unint64_t sub_22EE6F9F4()
{
  unint64_t result = qword_268628D58;
  if (!qword_268628D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628D58);
  }
  return result;
}

unint64_t sub_22EE6FA4C()
{
  unint64_t result = qword_268628D60;
  if (!qword_268628D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628D60);
  }
  return result;
}

unint64_t sub_22EE6FAA4()
{
  unint64_t result = qword_268628D68;
  if (!qword_268628D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628D68);
  }
  return result;
}

unint64_t sub_22EE6FAFC()
{
  unint64_t result = qword_268628D70;
  if (!qword_268628D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628D70);
  }
  return result;
}

unint64_t sub_22EE6FB54()
{
  unint64_t result = qword_268628D78;
  if (!qword_268628D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628D78);
  }
  return result;
}

unint64_t sub_22EE6FBAC()
{
  unint64_t result = qword_268628D80;
  if (!qword_268628D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628D80);
  }
  return result;
}

unint64_t sub_22EE6FC04()
{
  unint64_t result = qword_268628D88;
  if (!qword_268628D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628D88);
  }
  return result;
}

unint64_t sub_22EE6FC5C()
{
  unint64_t result = qword_268628D90;
  if (!qword_268628D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628D90);
  }
  return result;
}

unint64_t sub_22EE6FCB4()
{
  unint64_t result = qword_268628D98;
  if (!qword_268628D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628D98);
  }
  return result;
}

unint64_t sub_22EE6FD0C()
{
  unint64_t result = qword_268628DA0;
  if (!qword_268628DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628DA0);
  }
  return result;
}

unint64_t sub_22EE6FD64()
{
  unint64_t result = qword_268628DA8;
  if (!qword_268628DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628DA8);
  }
  return result;
}

unint64_t sub_22EE6FDBC()
{
  unint64_t result = qword_268628DB0;
  if (!qword_268628DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628DB0);
  }
  return result;
}

unint64_t sub_22EE6FE14()
{
  unint64_t result = qword_268628DB8;
  if (!qword_268628DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628DB8);
  }
  return result;
}

uint64_t sub_22EE6FE68(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x764F746E65696C63 && a2 == 0xEE00656469727265;
  if (v2 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000022EE86360 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x79654B676F6CLL && a2 == 0xE600000000000000 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6D726F6674616C70 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_22EE80660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_22EE700FC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268628980);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL static PurchaseIntentRequest.Kind.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t PurchaseIntentRequest.Kind.hash(into:)()
{
  return sub_22EE807C0();
}

uint64_t sub_22EE701A8(uint64_t a1)
{
  unint64_t v2 = sub_22EE706C0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE701E4(uint64_t a1)
{
  unint64_t v2 = sub_22EE706C0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_22EE70220(uint64_t a1)
{
  unint64_t v2 = sub_22EE7066C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE7025C(uint64_t a1)
{
  unint64_t v2 = sub_22EE7066C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_22EE70298()
{
  if (*v0) {
    return 0x746E65696C63;
  }
  else {
    return 7105633;
  }
}

uint64_t sub_22EE702C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_22EE72468(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22EE702F0(uint64_t a1)
{
  unint64_t v2 = sub_22EE70618();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE7032C(uint64_t a1)
{
  unint64_t v2 = sub_22EE70618();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PurchaseIntentRequest.Kind.encode(to:)(void *a1, int a2)
{
  int v18 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628E60);
  uint64_t v16 = *(void *)(v3 - 8);
  uint64_t v17 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628E68);
  uint64_t v6 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628E70);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22EE70618();
  sub_22EE80830();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v10 + 8);
  if (v18)
  {
    char v20 = 1;
    sub_22EE7066C();
    sub_22EE80580();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    char v19 = 0;
    sub_22EE706C0();
    sub_22EE80580();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v15);
  }
  return (*v13)(v12, v9);
}

unint64_t sub_22EE70618()
{
  unint64_t result = qword_268628E78;
  if (!qword_268628E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628E78);
  }
  return result;
}

unint64_t sub_22EE7066C()
{
  unint64_t result = qword_268628E80;
  if (!qword_268628E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628E80);
  }
  return result;
}

unint64_t sub_22EE706C0()
{
  unint64_t result = qword_268628E88;
  if (!qword_268628E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628E88);
  }
  return result;
}

uint64_t PurchaseIntentRequest.Kind.hashValue.getter()
{
  return sub_22EE807F0();
}

uint64_t PurchaseIntentRequest.Kind.init(from:)(uint64_t a1)
{
  return sub_22EE72544(a1) & 1;
}

uint64_t sub_22EE70778@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_22EE72544(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_22EE707A8(void *a1)
{
  return PurchaseIntentRequest.Kind.encode(to:)(a1, *v1);
}

uint64_t PurchaseIntentRequest.Add.intent.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22EE72AB4(v1, a1, (uint64_t (*)(void))type metadata accessor for PurchaseIntentInternal);
}

uint64_t PurchaseIntentRequest.Add.launchApp.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PurchaseIntentRequest.Add(0) + 20));
}

uint64_t PurchaseIntentRequest.Add.logKey.getter()
{
  return sub_22EE71084(type metadata accessor for PurchaseIntentRequest.Add);
}

uint64_t PurchaseIntentRequest.Add.logKey.setter(uint64_t a1, uint64_t a2)
{
  return sub_22EE710E4(a1, a2, type metadata accessor for PurchaseIntentRequest.Add);
}

uint64_t (*PurchaseIntentRequest.Add.logKey.modify())(void)
{
  return nullsub_1;
}

uint64_t PurchaseIntentRequest.Add.notify.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PurchaseIntentRequest.Add(0) + 28));
}

int *PurchaseIntentRequest.Add.init(intent:launchApp:notify:logKey:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  sub_22EE729B4(a1, a6);
  uint64_t result = (int *)type metadata accessor for PurchaseIntentRequest.Add(0);
  *(unsigned char *)(a6 + result[5]) = a2;
  uint64_t v12 = (void *)(a6 + result[6]);
  *uint64_t v12 = a4;
  v12[1] = a5;
  *(unsigned char *)(a6 + result[7]) = a3;
  return result;
}

uint64_t sub_22EE70924()
{
  uint64_t result = 0x746E65746E69;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x704168636E75616CLL;
      break;
    case 2:
      uint64_t result = 0x79654B676F6CLL;
      break;
    case 3:
      uint64_t result = 0x796669746F6ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22EE709A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_22EE77DDC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22EE709CC(uint64_t a1)
{
  unint64_t v2 = sub_22EE72A18();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE70A08(uint64_t a1)
{
  unint64_t v2 = sub_22EE72A18();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PurchaseIntentRequest.Add.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628E90);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22EE72A18();
  sub_22EE80830();
  v8[15] = 0;
  type metadata accessor for PurchaseIntentInternal();
  sub_22EE72A6C(&qword_268628EA0, (void (*)(uint64_t))type metadata accessor for PurchaseIntentInternal);
  sub_22EE805E0();
  if (!v1)
  {
    type metadata accessor for PurchaseIntentRequest.Add(0);
    v8[14] = 1;
    sub_22EE805D0();
    v8[13] = 2;
    sub_22EE805C0();
    v8[12] = 3;
    sub_22EE805D0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t PurchaseIntentRequest.Add.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v4 = type metadata accessor for PurchaseIntentInternal();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628EA8);
  uint64_t v23 = *(void *)(v7 - 8);
  uint64_t v24 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)type metadata accessor for PurchaseIntentRequest.Add(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v25 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_22EE72A18();
  sub_22EE80820();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  }
  uint64_t v14 = v23;
  uint64_t v15 = (uint64_t)v12;
  char v29 = 0;
  sub_22EE72A6C(&qword_268628EB0, (void (*)(uint64_t))type metadata accessor for PurchaseIntentInternal);
  uint64_t v16 = v24;
  sub_22EE80560();
  sub_22EE729B4((uint64_t)v6, v15);
  char v28 = 1;
  *(unsigned char *)(v15 + v10[5]) = sub_22EE80550() & 1;
  char v27 = 2;
  uint64_t v17 = sub_22EE80540();
  int v18 = (uint64_t *)(v15 + v10[6]);
  *int v18 = v17;
  v18[1] = v19;
  char v26 = 3;
  char v20 = sub_22EE80550();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v16);
  *(unsigned char *)(v15 + v10[7]) = v20 & 1;
  sub_22EE72AB4(v15, v22, type metadata accessor for PurchaseIntentRequest.Add);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return sub_22EE72B1C(v15, type metadata accessor for PurchaseIntentRequest.Add);
}

uint64_t sub_22EE7100C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PurchaseIntentRequest.Add.init(from:)(a1, a2);
}

uint64_t sub_22EE71024(void *a1)
{
  return PurchaseIntentRequest.Add.encode(to:)(a1);
}

uint64_t PurchaseIntentRequest.Remove.clientOverride.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22EE604B0(v1, a1);
}

uint64_t PurchaseIntentRequest.Remove.kind.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PurchaseIntentRequest.Remove(0) + 20));
}

uint64_t PurchaseIntentRequest.Remove.logKey.getter()
{
  return sub_22EE71084(type metadata accessor for PurchaseIntentRequest.Remove);
}

uint64_t sub_22EE71084(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 24));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t PurchaseIntentRequest.Remove.logKey.setter(uint64_t a1, uint64_t a2)
{
  return sub_22EE710E4(a1, a2, type metadata accessor for PurchaseIntentRequest.Remove);
}

uint64_t sub_22EE710E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6 = (void *)(v3 + *(int *)(a3(0) + 24));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*PurchaseIntentRequest.Remove.logKey.modify())(void)
{
  return nullsub_1;
}

uint64_t PurchaseIntentRequest.Remove.productID.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PurchaseIntentRequest.Remove(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

int *PurchaseIntentRequest.Remove.init(clientOverride:kind:logKey:productID:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char v12 = a2 & 1;
  sub_22EE63B74(a1, a7);
  uint64_t result = (int *)type metadata accessor for PurchaseIntentRequest.Remove(0);
  *(unsigned char *)(a7 + result[5]) = v12;
  uint64_t v14 = (void *)(a7 + result[6]);
  void *v14 = a3;
  v14[1] = a4;
  uint64_t v15 = (void *)(a7 + result[7]);
  *uint64_t v15 = a5;
  v15[1] = a6;
  return result;
}

uint64_t sub_22EE7122C()
{
  uint64_t result = 0x764F746E65696C63;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1684957547;
      break;
    case 2:
      uint64_t result = 0x79654B676F6CLL;
      break;
    case 3:
      uint64_t result = 0x49746375646F7270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22EE712C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_22EE77F8C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22EE712E8(uint64_t a1)
{
  unint64_t v2 = sub_22EE72B9C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE71324(uint64_t a1)
{
  unint64_t v2 = sub_22EE72B9C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PurchaseIntentRequest.Remove.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628EB8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22EE72B9C();
  sub_22EE80830();
  v10[15] = 0;
  type metadata accessor for ClientOverride(0);
  sub_22EE72A6C(&qword_2686289C0, (void (*)(uint64_t))type metadata accessor for ClientOverride);
  sub_22EE805A0();
  if (!v2)
  {
    v10[14] = *(unsigned char *)(v3 + *(int *)(type metadata accessor for PurchaseIntentRequest.Remove(0) + 20));
    v10[13] = 1;
    sub_22EE72BF0();
    sub_22EE805E0();
    v10[12] = 2;
    sub_22EE805C0();
    v10[11] = 3;
    sub_22EE80590();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t PurchaseIntentRequest.Remove.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628998);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628ED0);
  uint64_t v7 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)type metadata accessor for PurchaseIntentRequest.Remove(0);
  MEMORY[0x270FA5388](v10);
  char v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  char v27 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_22EE72B9C();
  sub_22EE80820();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  }
  uint64_t v14 = v7;
  type metadata accessor for ClientOverride(0);
  char v32 = 0;
  sub_22EE72A6C(&qword_2686289D0, (void (*)(uint64_t))type metadata accessor for ClientOverride);
  uint64_t v15 = v26;
  sub_22EE80520();
  sub_22EE63B74((uint64_t)v6, (uint64_t)v12);
  char v30 = 1;
  sub_22EE72C44();
  sub_22EE80560();
  v12[v10[5]] = v31;
  char v29 = 2;
  uint64_t v16 = sub_22EE80540();
  uint64_t v17 = (uint64_t *)&v12[v10[6]];
  *uint64_t v17 = v16;
  v17[1] = v18;
  char v28 = 3;
  uint64_t v19 = sub_22EE80510();
  uint64_t v21 = v20;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v15);
  uint64_t v22 = (uint64_t *)&v12[v10[7]];
  *uint64_t v22 = v19;
  v22[1] = v21;
  sub_22EE72AB4((uint64_t)v12, v25, type metadata accessor for PurchaseIntentRequest.Remove);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return sub_22EE72B1C((uint64_t)v12, type metadata accessor for PurchaseIntentRequest.Remove);
}

uint64_t sub_22EE7195C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PurchaseIntentRequest.Remove.init(from:)(a1, a2);
}

uint64_t sub_22EE71974(void *a1)
{
  return PurchaseIntentRequest.Remove.encode(to:)(a1);
}

uint64_t PurchaseIntentRequest.Query.after.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_22EE7C3C0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t PurchaseIntentRequest.Query.clientOverride.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PurchaseIntentRequest.Query(0) + 20);

  return sub_22EE604B0(v3, a1);
}

uint64_t PurchaseIntentRequest.Query.kind.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PurchaseIntentRequest.Query(0) + 24));
}

uint64_t PurchaseIntentRequest.Query.logKey.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PurchaseIntentRequest.Query(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PurchaseIntentRequest.Query.logKey.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for PurchaseIntentRequest.Query(0) + 28));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*PurchaseIntentRequest.Query.logKey.modify())(void)
{
  return nullsub_1;
}

uint64_t PurchaseIntentRequest.Query.init(after:clientOverride:kind:logKey:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char v11 = a3 & 1;
  uint64_t v12 = sub_22EE7C3C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(a6, a1, v12);
  uint64_t v13 = (int *)type metadata accessor for PurchaseIntentRequest.Query(0);
  uint64_t result = sub_22EE63B74(a2, a6 + v13[5]);
  *(unsigned char *)(a6 + v13[6]) = v11;
  uint64_t v15 = (void *)(a6 + v13[7]);
  *uint64_t v15 = a4;
  v15[1] = a5;
  return result;
}

uint64_t sub_22EE71BDC()
{
  uint64_t result = 0x7265746661;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x764F746E65696C63;
      break;
    case 2:
      uint64_t result = 1684957547;
      break;
    case 3:
      uint64_t result = 0x79654B676F6CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22EE71C68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_22EE78160(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22EE71C90(uint64_t a1)
{
  unint64_t v2 = sub_22EE72CB8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE71CCC(uint64_t a1)
{
  unint64_t v2 = sub_22EE72CB8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PurchaseIntentRequest.Query.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628EE0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22EE72CB8();
  sub_22EE80830();
  v11[15] = 0;
  sub_22EE7C3C0();
  sub_22EE72A6C(&qword_268628930, MEMORY[0x263F07490]);
  sub_22EE805E0();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for PurchaseIntentRequest.Query(0);
    v11[14] = 1;
    type metadata accessor for ClientOverride(0);
    sub_22EE72A6C(&qword_2686289C0, (void (*)(uint64_t))type metadata accessor for ClientOverride);
    sub_22EE805A0();
    v11[13] = *(unsigned char *)(v3 + *(int *)(v9 + 24));
    v11[12] = 2;
    sub_22EE72BF0();
    sub_22EE805E0();
    v11[11] = 3;
    sub_22EE805C0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t PurchaseIntentRequest.Query.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628998);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_22EE7C3C0();
  uint64_t v22 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v24 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628EF0);
  uint64_t v23 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)type metadata accessor for PurchaseIntentRequest.Query(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22EE72CB8();
  uint64_t v25 = v9;
  uint64_t v13 = (uint64_t)v27;
  sub_22EE80820();
  if (v13) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v14 = v23;
  char v27 = a1;
  char v32 = 0;
  sub_22EE72A6C(&qword_268628940, MEMORY[0x263F07490]);
  sub_22EE80560();
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v12, v24, v6);
  type metadata accessor for ClientOverride(0);
  char v31 = 1;
  sub_22EE72A6C(&qword_2686289D0, (void (*)(uint64_t))type metadata accessor for ClientOverride);
  sub_22EE80520();
  sub_22EE63B74((uint64_t)v5, (uint64_t)&v12[v10[5]]);
  char v29 = 2;
  sub_22EE72C44();
  sub_22EE80560();
  v12[v10[6]] = v30;
  char v28 = 3;
  uint64_t v15 = sub_22EE80540();
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v25, v26);
  uint64_t v18 = (uint64_t *)&v12[v10[7]];
  *uint64_t v18 = v15;
  v18[1] = v17;
  sub_22EE72AB4((uint64_t)v12, v21, type metadata accessor for PurchaseIntentRequest.Query);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return sub_22EE72B1C((uint64_t)v12, type metadata accessor for PurchaseIntentRequest.Query);
}

uint64_t sub_22EE72438@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PurchaseIntentRequest.Query.init(from:)(a1, a2);
}

uint64_t sub_22EE72450(void *a1)
{
  return PurchaseIntentRequest.Query.encode(to:)(a1);
}

uint64_t sub_22EE72468(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7105633 && a2 == 0xE300000000000000;
  if (v2 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E65696C63 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_22EE80660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_22EE72544(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628FF0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v22 = v2;
  uint64_t v23 = v3;
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628FF8);
  uint64_t v25 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268629000);
  uint64_t v24 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)a1, *(void *)(a1 + 24));
  sub_22EE70618();
  uint64_t v12 = v26;
  sub_22EE80820();
  if (v12) {
    goto LABEL_7;
  }
  uint64_t v13 = v25;
  uint64_t v21 = v6;
  uint64_t v26 = a1;
  uint64_t v14 = sub_22EE80570();
  if (*(void *)(v14 + 16) != 1)
  {
    uint64_t v16 = sub_22EE80240();
    swift_allocError();
    uint64_t v18 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268628818);
    *uint64_t v18 = &type metadata for PurchaseIntentRequest.Kind;
    sub_22EE80500();
    sub_22EE80220();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v16 - 8) + 104))(v18, *MEMORY[0x263F8DCB0], v16);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v9);
    a1 = v26;
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1(a1);
    return a1;
  }
  a1 = *(unsigned __int8 *)(v14 + 32);
  if (a1)
  {
    LODWORD(v25) = *(unsigned __int8 *)(v14 + 32);
    char v28 = 1;
    sub_22EE7066C();
    sub_22EE804F0();
    uint64_t v15 = v24;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v22);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v11, v9);
    a1 = v25;
  }
  else
  {
    char v27 = 0;
    sub_22EE706C0();
    sub_22EE804F0();
    uint64_t v19 = v24;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v21);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
  }
  __swift_destroy_boxed_opaque_existential_1(v26);
  return a1;
}

uint64_t type metadata accessor for PurchaseIntentRequest.Add(uint64_t a1)
{
  return sub_22EE4D420(a1, (uint64_t *)&unk_268628F40);
}

uint64_t sub_22EE729B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PurchaseIntentInternal();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_22EE72A18()
{
  unint64_t result = qword_268628E98;
  if (!qword_268628E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628E98);
  }
  return result;
}

uint64_t sub_22EE72A6C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22EE72AB4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_22EE72B1C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for PurchaseIntentRequest.Remove(uint64_t a1)
{
  return sub_22EE4D420(a1, (uint64_t *)&unk_268628F50);
}

unint64_t sub_22EE72B9C()
{
  unint64_t result = qword_268628EC0;
  if (!qword_268628EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628EC0);
  }
  return result;
}

unint64_t sub_22EE72BF0()
{
  unint64_t result = qword_268628EC8;
  if (!qword_268628EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628EC8);
  }
  return result;
}

unint64_t sub_22EE72C44()
{
  unint64_t result = qword_268628ED8;
  if (!qword_268628ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628ED8);
  }
  return result;
}

uint64_t type metadata accessor for PurchaseIntentRequest.Query(uint64_t a1)
{
  return sub_22EE4D420(a1, (uint64_t *)&unk_268628F60);
}

unint64_t sub_22EE72CB8()
{
  unint64_t result = qword_268628EE8;
  if (!qword_268628EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628EE8);
  }
  return result;
}

unint64_t sub_22EE72D10()
{
  unint64_t result = qword_268628EF8;
  if (!qword_268628EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628EF8);
  }
  return result;
}

uint64_t sub_22EE72D64(uint64_t a1)
{
  *(void *)(a1 + 16) = sub_22EE72A6C(&qword_268628F00, (void (*)(uint64_t))type metadata accessor for PurchaseIntentRequest.Add);
  uint64_t result = sub_22EE72A6C(&qword_268628F08, (void (*)(uint64_t))type metadata accessor for PurchaseIntentRequest.Add);
  *(void *)(a1 + 24) = result;
  return result;
}

uint64_t sub_22EE72DE8(uint64_t a1)
{
  uint64_t result = sub_22EE72A6C(&qword_268628F10, (void (*)(uint64_t))type metadata accessor for PurchaseIntentRequest.Remove);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_22EE72E40(uint64_t a1)
{
  *(void *)(a1 + 16) = sub_22EE72A6C(&qword_268628F18, (void (*)(uint64_t))type metadata accessor for PurchaseIntentRequest.Remove);
  uint64_t result = sub_22EE72A6C(&qword_268628F20, (void (*)(uint64_t))type metadata accessor for PurchaseIntentRequest.Remove);
  *(void *)(a1 + 24) = result;
  return result;
}

uint64_t sub_22EE72EC4(uint64_t a1)
{
  uint64_t result = sub_22EE72A6C(&qword_268628F28, (void (*)(uint64_t))type metadata accessor for PurchaseIntentRequest.Query);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_22EE72F1C(uint64_t a1)
{
  *(void *)(a1 + 16) = sub_22EE72A6C(&qword_268628F30, (void (*)(uint64_t))type metadata accessor for PurchaseIntentRequest.Query);
  uint64_t result = sub_22EE72A6C(&qword_268628F38, (void (*)(uint64_t))type metadata accessor for PurchaseIntentRequest.Query);
  *(void *)(a1 + 24) = result;
  return result;
}

ValueMetadata *type metadata accessor for PurchaseIntentRequest()
{
  return &type metadata for PurchaseIntentRequest;
}

ValueMetadata *type metadata accessor for PurchaseIntentRequest.Kind()
{
  return &type metadata for PurchaseIntentRequest.Kind;
}

void *initializeBufferWithCopyOfBuffer for PurchaseIntentRequest.Add(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v10 = a2[7];
    a1[6] = a2[6];
    a1[7] = v10;
    uint64_t v11 = type metadata accessor for PurchaseIntentInternal();
    uint64_t v12 = *(int *)(v11 + 32);
    uint64_t v25 = (char *)a2 + v12;
    uint64_t v26 = (char *)v4 + v12;
    uint64_t v13 = sub_22EE7C3C0();
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v24(v26, v25, v13);
    uint64_t v14 = *(int *)(v11 + 36);
    uint64_t v15 = (void *)((char *)v4 + v14);
    uint64_t v16 = (void *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = a3[6];
    *((unsigned char *)v4 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    uint64_t v19 = (void *)((char *)v4 + v18);
    uint64_t v20 = (void *)((char *)a2 + v18);
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    *((unsigned char *)v4 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for PurchaseIntentRequest.Add(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + *(int *)(type metadata accessor for PurchaseIntentInternal() + 32);
  uint64_t v3 = sub_22EE7C3C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for PurchaseIntentRequest.Add(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  uint64_t v9 = type metadata accessor for PurchaseIntentInternal();
  uint64_t v10 = *(int *)(v9 + 32);
  uint64_t v22 = (char *)a2 + v10;
  uint64_t v23 = (char *)a1 + v10;
  uint64_t v11 = sub_22EE7C3C0();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v23, v22, v11);
  uint64_t v13 = *(int *)(v9 + 36);
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  uint64_t v16 = v15[1];
  void *v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = a3[6];
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for PurchaseIntentRequest.Add(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = type metadata accessor for PurchaseIntentInternal();
  uint64_t v7 = *(int *)(v6 + 32);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_22EE7C3C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(v6 + 36);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  uint64_t v14 = a3[6];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  return a1;
}

_OWORD *initializeWithTake for PurchaseIntentRequest.Add(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = type metadata accessor for PurchaseIntentInternal();
  uint64_t v9 = *(int *)(v8 + 32);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_22EE7C3C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  *(_OWORD *)((char *)a1 + *(int *)(v8 + 36)) = *(_OWORD *)((char *)a2 + *(int *)(v8 + 36));
  uint64_t v13 = a3[6];
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  return a1;
}

void *assignWithTake for PurchaseIntentRequest.Add(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = type metadata accessor for PurchaseIntentInternal();
  uint64_t v11 = *(int *)(v10 + 32);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_22EE7C3C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = *(int *)(v10 + 36);
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  *uint64_t v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[6];
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *uint64_t v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  return a1;
}

uint64_t getEnumTagSinglePayload for PurchaseIntentRequest.Add(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EE736CC);
}

uint64_t sub_22EE736CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PurchaseIntentInternal();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for PurchaseIntentRequest.Add(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EE737A4);
}

uint64_t sub_22EE737A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for PurchaseIntentInternal();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_22EE73864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22EE755B8(a1, a2, a3, (uint64_t (*)(uint64_t))type metadata accessor for PurchaseIntentInternal);
}

unint64_t *initializeBufferWithCopyOfBuffer for PurchaseIntentRequest.Remove(unint64_t *a1, unint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    unint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (unint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = (int *)type metadata accessor for ClientOverride(0);
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(unint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628998);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      unint64_t v11 = a2[1];
      if (v11 >> 60 == 15)
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
      }
      else
      {
        unint64_t v12 = *a2;
        sub_22EB71E60(*a2, a2[1]);
        *a1 = v12;
        a1[1] = v11;
      }
      unint64_t v13 = a2[3];
      a1[2] = a2[2];
      a1[3] = v13;
      unint64_t v14 = a2[5];
      a1[4] = a2[4];
      a1[5] = v14;
      uint64_t v15 = v7[7];
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 3, v18))
      {
        uint64_t v20 = type metadata accessor for ClientOverride.Server(0);
        memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        uint64_t v21 = sub_22EE7C2B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v16, v17, v21);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 3, v18);
      }
      uint64_t v22 = v7[8];
      uint64_t v23 = (char *)a1 + v22;
      uint64_t v24 = (char *)a2 + v22;
      *(void *)uint64_t v23 = *(void *)v24;
      unsigned char v23[8] = v24[8];
      uint64_t v25 = v7[9];
      uint64_t v26 = (char *)a1 + v25;
      char v27 = (char *)a2 + v25;
      v26[8] = v27[8];
      *(void *)uint64_t v26 = *(void *)v27;
      uint64_t v28 = v7[10];
      char v29 = (char *)a1 + v28;
      char v30 = (char *)a2 + v28;
      uint64_t v31 = sub_22EE7C3D0();
      uint64_t v32 = *(void *)(v31 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
      {
        uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8);
        memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
      }
      (*(void (**)(unint64_t *, void, uint64_t, int *))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v34 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    uint64_t v35 = (unint64_t *)((char *)a1 + v34);
    uint64_t v36 = (unint64_t *)((char *)a2 + v34);
    uint64_t v37 = v36[1];
    *uint64_t v35 = *v36;
    v35[1] = v37;
    uint64_t v38 = a3[7];
    uint64_t v39 = (unint64_t *)((char *)a1 + v38);
    uint64_t v40 = (unint64_t *)((char *)a2 + v38);
    uint64_t v41 = v40[1];
    *uint64_t v39 = *v40;
    v39[1] = v41;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for PurchaseIntentRequest.Remove(uint64_t *a1)
{
  uint64_t v2 = type metadata accessor for ClientOverride(0);
  if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2))
  {
    unint64_t v3 = a1[1];
    if (v3 >> 60 != 15) {
      sub_22EB2AC74(*a1, v3);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = (char *)a1 + *(int *)(v2 + 28);
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 3, v5))
    {
      uint64_t v6 = sub_22EE7C2B0();
      (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
    }
    uint64_t v7 = (char *)a1 + *(int *)(v2 + 40);
    uint64_t v8 = sub_22EE7C3D0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    }
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

unint64_t *initializeWithCopy for PurchaseIntentRequest.Remove(unint64_t *a1, unint64_t *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for ClientOverride(0);
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(unint64_t *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628998);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    unint64_t v9 = a2[1];
    if (v9 >> 60 == 15)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    else
    {
      unint64_t v10 = *a2;
      sub_22EB71E60(*a2, a2[1]);
      *a1 = v10;
      a1[1] = v9;
    }
    unint64_t v11 = a2[3];
    a1[2] = a2[2];
    a1[3] = v11;
    unint64_t v12 = a2[5];
    a1[4] = a2[4];
    a1[5] = v12;
    uint64_t v13 = v6[7];
    unint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 3, v16))
    {
      uint64_t v18 = type metadata accessor for ClientOverride.Server(0);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      uint64_t v19 = sub_22EE7C2B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v14, v15, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 3, v16);
    }
    uint64_t v20 = v6[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    uint64_t v23 = v6[9];
    uint64_t v24 = (char *)a1 + v23;
    uint64_t v25 = (char *)a2 + v23;
    v24[8] = v25[8];
    *(void *)uint64_t v24 = *(void *)v25;
    uint64_t v26 = v6[10];
    char v27 = (char *)a1 + v26;
    uint64_t v28 = (char *)a2 + v26;
    uint64_t v29 = sub_22EE7C3D0();
    uint64_t v30 = *(void *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8);
      memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    (*(void (**)(unint64_t *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v32 = a3[6];
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  uint64_t v33 = (unint64_t *)((char *)a1 + v32);
  uint64_t v34 = (unint64_t *)((char *)a2 + v32);
  uint64_t v35 = v34[1];
  *uint64_t v33 = *v34;
  v33[1] = v35;
  uint64_t v36 = a3[7];
  uint64_t v37 = (unint64_t *)((char *)a1 + v36);
  uint64_t v38 = (unint64_t *)((char *)a2 + v36);
  uint64_t v39 = v38[1];
  *uint64_t v37 = *v38;
  v37[1] = v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for PurchaseIntentRequest.Remove(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for ClientOverride(0);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(uint64_t *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_22EE72B1C((uint64_t)a1, type metadata accessor for ClientOverride);
      goto LABEL_7;
    }
    unint64_t v15 = a2[1];
    if ((unint64_t)a1[1] >> 60 == 15)
    {
      if (v15 >> 60 != 15)
      {
        uint64_t v16 = *a2;
        sub_22EB71E60(*a2, a2[1]);
        *a1 = v16;
        a1[1] = v15;
        goto LABEL_25;
      }
    }
    else
    {
      if (v15 >> 60 != 15)
      {
        uint64_t v46 = *a2;
        sub_22EB71E60(*a2, a2[1]);
        uint64_t v47 = *a1;
        unint64_t v48 = a1[1];
        *a1 = v46;
        a1[1] = v15;
        sub_22EB2AC74(v47, v48);
LABEL_25:
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        a1[4] = a2[4];
        a1[5] = a2[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v49 = v6[7];
        uint64_t v50 = (char *)a1 + v49;
        uint64_t v51 = (char *)a2 + v49;
        uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
        uint64_t v53 = *(void *)(v52 - 8);
        char v54 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v53 + 48);
        uint64_t v76 = (uint64_t)v50;
        LODWORD(v50) = v54(v50, 3, v52);
        int v55 = v54(v51, 3, v52);
        if (v50)
        {
          if (!v55)
          {
            uint64_t v58 = sub_22EE7C2B0();
            (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v76, v51, v58);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v53 + 56))(v76, 0, 3, v52);
            goto LABEL_33;
          }
          size_t v56 = *(void *)(*(void *)(type metadata accessor for ClientOverride.Server(0) - 8) + 64);
          uint64_t v57 = (void *)v76;
        }
        else
        {
          if (!v55)
          {
            uint64_t v59 = sub_22EE7C2B0();
            (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v59 - 8) + 24))(v76, v51, v59);
            goto LABEL_33;
          }
          sub_22EADD81C(v76, &qword_268628410);
          size_t v56 = *(void *)(*(void *)(type metadata accessor for ClientOverride.Server(0) - 8) + 64);
          uint64_t v57 = (void *)v76;
        }
        memcpy(v57, v51, v56);
LABEL_33:
        uint64_t v60 = v6[8];
        uint64_t v61 = (char *)a1 + v60;
        uint64_t v62 = (char *)a2 + v60;
        uint64_t v63 = *(void *)v62;
        v61[8] = v62[8];
        *(void *)uint64_t v61 = v63;
        uint64_t v64 = v6[9];
        char v65 = (char *)a1 + v64;
        uint64_t v66 = (char *)a2 + v64;
        uint64_t v67 = *(void *)v66;
        v65[8] = v66[8];
        *(void *)char v65 = v67;
        uint64_t v68 = v6[10];
        uint64_t v69 = (char *)a1 + v68;
        uint64_t v70 = (char *)a2 + v68;
        uint64_t v71 = sub_22EE7C3D0();
        uint64_t v72 = *(void *)(v71 - 8);
        uint64_t v73 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v72 + 48);
        int v74 = v73(v69, 1, v71);
        int v75 = v73(v70, 1, v71);
        if (v74)
        {
          if (!v75)
          {
            (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v69, v70, v71);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v72 + 56))(v69, 0, 1, v71);
            goto LABEL_20;
          }
        }
        else
        {
          if (!v75)
          {
            (*(void (**)(char *, char *, uint64_t))(v72 + 24))(v69, v70, v71);
            goto LABEL_20;
          }
          (*(void (**)(char *, uint64_t))(v72 + 8))(v69, v71);
        }
        size_t v12 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8) - 8) + 64);
        uint64_t v13 = (uint64_t *)v69;
        unint64_t v14 = (uint64_t *)v70;
        goto LABEL_8;
      }
      sub_22EE4F300((uint64_t)a1);
    }
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_25;
  }
  if (v10)
  {
LABEL_7:
    size_t v12 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268628998) - 8) + 64);
    uint64_t v13 = a1;
    unint64_t v14 = a2;
LABEL_8:
    memcpy(v13, v14, v12);
    goto LABEL_20;
  }
  unint64_t v11 = a2[1];
  if (v11 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v17 = *a2;
    sub_22EB71E60(*a2, a2[1]);
    *a1 = v17;
    a1[1] = v11;
  }
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  uint64_t v18 = v6[7];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 3, v21))
  {
    uint64_t v23 = type metadata accessor for ClientOverride.Server(0);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    uint64_t v24 = sub_22EE7C2B0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v19, v20, v24);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 3, v21);
  }
  uint64_t v25 = v6[8];
  uint64_t v26 = (char *)a1 + v25;
  char v27 = (char *)a2 + v25;
  uint64_t v28 = *(void *)v27;
  v26[8] = v27[8];
  *(void *)uint64_t v26 = v28;
  uint64_t v29 = v6[9];
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  uint64_t v32 = *(void *)v31;
  v30[8] = v31[8];
  *(void *)uint64_t v30 = v32;
  uint64_t v33 = v6[10];
  uint64_t v34 = (char *)a1 + v33;
  uint64_t v35 = (char *)a2 + v33;
  uint64_t v36 = sub_22EE7C3D0();
  uint64_t v37 = *(void *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
  {
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8);
    memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  }
  (*(void (**)(uint64_t *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
LABEL_20:
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  uint64_t v39 = a3[6];
  uint64_t v40 = (uint64_t *)((char *)a1 + v39);
  uint64_t v41 = (uint64_t *)((char *)a2 + v39);
  *uint64_t v40 = *v41;
  v40[1] = v41[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v42 = a3[7];
  uint64_t v43 = (uint64_t *)((char *)a1 + v42);
  uint64_t v44 = (uint64_t *)((char *)a2 + v42);
  *uint64_t v43 = *v44;
  v43[1] = v44[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for PurchaseIntentRequest.Remove(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for ClientOverride(0);
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628998);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    long long v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    a1[2] = a2[2];
    uint64_t v10 = v6[7];
    unint64_t v11 = (char *)a1 + v10;
    size_t v12 = (char *)a2 + v10;
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 3, v13))
    {
      uint64_t v15 = type metadata accessor for ClientOverride.Server(0);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      uint64_t v16 = sub_22EE7C2B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v11, v12, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 3, v13);
    }
    uint64_t v17 = v6[8];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v6[9];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    v21[8] = v22[8];
    *(void *)uint64_t v21 = *(void *)v22;
    uint64_t v23 = v6[10];
    uint64_t v24 = (char *)a1 + v23;
    uint64_t v25 = (char *)a2 + v23;
    uint64_t v26 = sub_22EE7C3D0();
    uint64_t v27 = *(void *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8);
      memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v29 = a3[6];
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  *(_OWORD *)((char *)a1 + v29) = *(_OWORD *)((char *)a2 + v29);
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  return a1;
}

uint64_t *assignWithTake for PurchaseIntentRequest.Remove(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for ClientOverride(0);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(uint64_t *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_22EE72B1C((uint64_t)a1, type metadata accessor for ClientOverride);
      goto LABEL_7;
    }
    unint64_t v21 = a1[1];
    if (v21 >> 60 != 15)
    {
      unint64_t v22 = a2[1];
      if (v22 >> 60 != 15)
      {
        uint64_t v47 = *a1;
        *a1 = *a2;
        a1[1] = v22;
        sub_22EB2AC74(v47, v21);
LABEL_20:
        uint64_t v48 = a2[3];
        a1[2] = a2[2];
        a1[3] = v48;
        swift_bridgeObjectRelease();
        uint64_t v49 = a2[5];
        a1[4] = a2[4];
        a1[5] = v49;
        swift_bridgeObjectRelease();
        uint64_t v50 = v6[7];
        uint64_t v51 = (char *)a1 + v50;
        uint64_t v52 = (char *)a2 + v50;
        uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
        uint64_t v54 = *(void *)(v53 - 8);
        int v55 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
        uint64_t v75 = (uint64_t)v51;
        LODWORD(v51) = v55(v51, 3, v53);
        int v56 = v55(v52, 3, v53);
        if (v51)
        {
          if (!v56)
          {
            uint64_t v59 = sub_22EE7C2B0();
            (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v59 - 8) + 32))(v75, v52, v59);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v54 + 56))(v75, 0, 3, v53);
            goto LABEL_28;
          }
          size_t v57 = *(void *)(*(void *)(type metadata accessor for ClientOverride.Server(0) - 8) + 64);
          uint64_t v58 = (void *)v75;
        }
        else
        {
          if (!v56)
          {
            uint64_t v60 = sub_22EE7C2B0();
            (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v60 - 8) + 40))(v75, v52, v60);
            goto LABEL_28;
          }
          sub_22EADD81C(v75, &qword_268628410);
          size_t v57 = *(void *)(*(void *)(type metadata accessor for ClientOverride.Server(0) - 8) + 64);
          uint64_t v58 = (void *)v75;
        }
        memcpy(v58, v52, v57);
LABEL_28:
        uint64_t v61 = v6[8];
        uint64_t v62 = (char *)a1 + v61;
        uint64_t v63 = (char *)a2 + v61;
        *(void *)uint64_t v62 = *(void *)v63;
        v62[8] = v63[8];
        uint64_t v64 = v6[9];
        char v65 = (char *)a1 + v64;
        uint64_t v66 = (char *)a2 + v64;
        v65[8] = v66[8];
        *(void *)char v65 = *(void *)v66;
        uint64_t v67 = v6[10];
        uint64_t v68 = (char *)a1 + v67;
        uint64_t v69 = (char *)a2 + v67;
        uint64_t v70 = sub_22EE7C3D0();
        uint64_t v71 = *(void *)(v70 - 8);
        uint64_t v72 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v71 + 48);
        int v73 = v72(v68, 1, v70);
        int v74 = v72(v69, 1, v70);
        if (v73)
        {
          if (!v74)
          {
            (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v68, v69, v70);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
            goto LABEL_18;
          }
        }
        else
        {
          if (!v74)
          {
            (*(void (**)(char *, char *, uint64_t))(v71 + 40))(v68, v69, v70);
            goto LABEL_18;
          }
          (*(void (**)(char *, uint64_t))(v71 + 8))(v68, v70);
        }
        size_t v18 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8) - 8) + 64);
        uint64_t v19 = (uint64_t *)v68;
        uint64_t v20 = (uint64_t *)v69;
        goto LABEL_8;
      }
      sub_22EE4F300((uint64_t)a1);
    }
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_20;
  }
  if (v10)
  {
LABEL_7:
    size_t v18 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268628998) - 8) + 64);
    uint64_t v19 = a1;
    uint64_t v20 = a2;
LABEL_8:
    memcpy(v19, v20, v18);
    goto LABEL_18;
  }
  long long v11 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v11;
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  uint64_t v12 = v6[7];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 3, v15))
  {
    uint64_t v17 = type metadata accessor for ClientOverride.Server(0);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v23 = sub_22EE7C2B0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v13, v14, v23);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 3, v15);
  }
  uint64_t v24 = v6[8];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  *(void *)uint64_t v25 = *(void *)v26;
  v25[8] = v26[8];
  uint64_t v27 = v6[9];
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  v28[8] = v29[8];
  *(void *)uint64_t v28 = *(void *)v29;
  uint64_t v30 = v6[10];
  uint64_t v31 = (char *)a1 + v30;
  uint64_t v32 = (char *)a2 + v30;
  uint64_t v33 = sub_22EE7C3D0();
  uint64_t v34 = *(void *)(v33 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
  {
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8);
    memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v32, v33);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
  }
  (*(void (**)(uint64_t *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
LABEL_18:
  uint64_t v36 = a3[6];
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  uint64_t v37 = (uint64_t *)((char *)a1 + v36);
  uint64_t v38 = (uint64_t *)((char *)a2 + v36);
  uint64_t v40 = *v38;
  uint64_t v39 = v38[1];
  *uint64_t v37 = v40;
  v37[1] = v39;
  swift_bridgeObjectRelease();
  uint64_t v41 = a3[7];
  uint64_t v42 = (uint64_t *)((char *)a1 + v41);
  uint64_t v43 = (uint64_t *)((char *)a2 + v41);
  uint64_t v45 = *v43;
  uint64_t v44 = v43[1];
  *uint64_t v42 = v45;
  v42[1] = v44;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PurchaseIntentRequest.Remove(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EE753F8);
}

uint64_t sub_22EE753F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628998);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for PurchaseIntentRequest.Remove(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EE754D4);
}

uint64_t sub_22EE754D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_268628998);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_22EE75598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22EE755B8(a1, a2, a3, (uint64_t (*)(uint64_t))sub_22EE635B0);
}

uint64_t sub_22EE755B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for PurchaseIntentRequest.Query(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_22EE7C3C0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (void *)((char *)a1 + v8);
    unint64_t v10 = (void *)((char *)a2 + v8);
    long long v11 = (int *)type metadata accessor for ClientOverride(0);
    uint64_t v12 = *((void *)v11 - 1);
    if ((*(unsigned int (**)(unint64_t *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628998);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      unint64_t v15 = v10[1];
      if (v15 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      }
      else
      {
        unint64_t v16 = *v10;
        sub_22EB71E60(*v10, v10[1]);
        *uint64_t v9 = v16;
        v9[1] = v15;
      }
      unint64_t v17 = v10[3];
      v9[2] = v10[2];
      v9[3] = v17;
      unint64_t v18 = v10[5];
      long long v9[4] = v10[4];
      v9[5] = v18;
      uint64_t v19 = v11[7];
      __dst = (char *)v9 + v19;
      uint64_t v20 = (char *)v10 + v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 3, v21))
      {
        uint64_t v23 = type metadata accessor for ClientOverride.Server(0);
        memcpy(__dst, v20, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        uint64_t v24 = sub_22EE7C2B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(__dst, v20, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 3, v21);
      }
      uint64_t v25 = v11[8];
      uint64_t v26 = (char *)v9 + v25;
      uint64_t v27 = (char *)v10 + v25;
      *(void *)uint64_t v26 = *(void *)v27;
      v26[8] = v27[8];
      uint64_t v28 = v11[9];
      uint64_t v29 = (char *)v9 + v28;
      uint64_t v30 = (char *)v10 + v28;
      v29[8] = v30[8];
      *(void *)uint64_t v29 = *(void *)v30;
      uint64_t v31 = v11[10];
      uint64_t v32 = (char *)v9 + v31;
      uint64_t v33 = (char *)v10 + v31;
      uint64_t v34 = sub_22EE7C3D0();
      uint64_t v35 = *(void *)(v34 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
      {
        uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8);
        memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      }
      (*(void (**)(unint64_t *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v37 = a3[7];
    *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    uint64_t v38 = (void *)((char *)a1 + v37);
    uint64_t v39 = (void *)((char *)a2 + v37);
    uint64_t v40 = v39[1];
    *uint64_t v38 = *v39;
    v38[1] = v40;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for PurchaseIntentRequest.Query(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22EE7C3C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = (uint64_t *)(a1 + *(int *)(a2 + 20));
  uint64_t v6 = type metadata accessor for ClientOverride(0);
  if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
  {
    unint64_t v7 = v5[1];
    if (v7 >> 60 != 15) {
      sub_22EB2AC74(*v5, v7);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v8 = (char *)v5 + *(int *)(v6 + 28);
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 3, v9))
    {
      uint64_t v10 = sub_22EE7C2B0();
      (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v8, v10);
    }
    long long v11 = (char *)v5 + *(int *)(v6 + 40);
    uint64_t v12 = sub_22EE7C3D0();
    uint64_t v13 = *(void *)(v12 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v12);
    }
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PurchaseIntentRequest.Query(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_22EE7C3C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (unint64_t *)(a1 + v7);
  uint64_t v9 = (unint64_t *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for ClientOverride(0);
  uint64_t v11 = *((void *)v10 - 1);
  if ((*(unsigned int (**)(unint64_t *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628998);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    unint64_t v13 = v9[1];
    if (v13 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    }
    else
    {
      unint64_t v14 = *v9;
      sub_22EB71E60(*v9, v9[1]);
      *uint64_t v8 = v14;
      v8[1] = v13;
    }
    unint64_t v15 = v9[3];
    v8[2] = v9[2];
    v8[3] = v15;
    unint64_t v16 = v9[5];
    v8[4] = v9[4];
    v8[5] = v16;
    uint64_t v17 = v10[7];
    __dst = (char *)v8 + v17;
    unint64_t v18 = (char *)v9 + v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 3, v19))
    {
      uint64_t v21 = type metadata accessor for ClientOverride.Server(0);
      memcpy(__dst, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      uint64_t v22 = sub_22EE7C2B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(__dst, v18, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 3, v19);
    }
    uint64_t v23 = v10[8];
    uint64_t v24 = (char *)v8 + v23;
    uint64_t v25 = (char *)v9 + v23;
    *(void *)uint64_t v24 = *(void *)v25;
    v24[8] = v25[8];
    uint64_t v26 = v10[9];
    uint64_t v27 = (char *)v8 + v26;
    uint64_t v28 = (char *)v9 + v26;
    v27[8] = v28[8];
    *(void *)uint64_t v27 = *(void *)v28;
    uint64_t v29 = v10[10];
    uint64_t v30 = (char *)v8 + v29;
    uint64_t v31 = (char *)v9 + v29;
    uint64_t v32 = sub_22EE7C3D0();
    uint64_t v33 = *(void *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8);
      memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
    (*(void (**)(unint64_t *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v35 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (void *)(a2 + v35);
  uint64_t v38 = v37[1];
  *uint64_t v36 = *v37;
  v36[1] = v38;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PurchaseIntentRequest.Query(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_22EE7C3C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (uint64_t *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for ClientOverride(0);
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(uint64_t (**)(uint64_t *, uint64_t, int *))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_22EE72B1C((uint64_t)v8, type metadata accessor for ClientOverride);
      goto LABEL_7;
    }
    unint64_t v19 = v9[1];
    uint64_t v77 = a3;
    if ((unint64_t)v8[1] >> 60 == 15)
    {
      if (v19 >> 60 != 15)
      {
        uint64_t v20 = *v9;
        sub_22EB71E60(*v9, v19);
        *uint64_t v8 = v20;
        v8[1] = v19;
        goto LABEL_25;
      }
    }
    else
    {
      if (v19 >> 60 != 15)
      {
        uint64_t v46 = *v9;
        sub_22EB71E60(*v9, v19);
        uint64_t v47 = *v8;
        unint64_t v48 = v8[1];
        *uint64_t v8 = v46;
        v8[1] = v19;
        sub_22EB2AC74(v47, v48);
LABEL_25:
        v8[2] = v9[2];
        v8[3] = v9[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v8[4] = v9[4];
        v8[5] = v9[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v49 = v10[7];
        uint64_t v50 = (char *)v8 + v49;
        uint64_t v51 = (char *)v9 + v49;
        uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
        uint64_t v75 = *(void *)(v52 - 8);
        uint64_t v53 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v75 + 48);
        __dsta = v50;
        LODWORD(v50) = v53(v50, 3, v52);
        __src = v51;
        int v54 = v53(v51, 3, v52);
        if (v50)
        {
          a3 = v77;
          if (!v54)
          {
            uint64_t v57 = sub_22EE7C2B0();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v57 - 8) + 16))(__dsta, __src, v57);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v75 + 56))(__dsta, 0, 3, v52);
            goto LABEL_33;
          }
          size_t v55 = *(void *)(*(void *)(type metadata accessor for ClientOverride.Server(0) - 8) + 64);
          int v56 = __dsta;
        }
        else
        {
          a3 = v77;
          if (!v54)
          {
            uint64_t v58 = sub_22EE7C2B0();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v58 - 8) + 24))(__dsta, __src, v58);
            goto LABEL_33;
          }
          sub_22EADD81C((uint64_t)__dsta, &qword_268628410);
          size_t v55 = *(void *)(*(void *)(type metadata accessor for ClientOverride.Server(0) - 8) + 64);
          int v56 = __dsta;
        }
        memcpy(v56, __src, v55);
LABEL_33:
        uint64_t v59 = v10[8];
        uint64_t v60 = (char *)v8 + v59;
        uint64_t v61 = (char *)v9 + v59;
        uint64_t v62 = *(void *)v61;
        v60[8] = v61[8];
        *(void *)uint64_t v60 = v62;
        uint64_t v63 = v10[9];
        uint64_t v64 = (char *)v8 + v63;
        char v65 = (char *)v9 + v63;
        uint64_t v66 = *(void *)v65;
        v64[8] = v65[8];
        *(void *)uint64_t v64 = v66;
        uint64_t v67 = v10[10];
        uint64_t v68 = (char *)v8 + v67;
        uint64_t v69 = (char *)v9 + v67;
        uint64_t v70 = sub_22EE7C3D0();
        uint64_t v71 = *(void *)(v70 - 8);
        uint64_t v72 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v71 + 48);
        int v73 = v72(v68, 1, v70);
        int v74 = v72(v69, 1, v70);
        if (v73)
        {
          if (!v74)
          {
            (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v68, v69, v70);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
            goto LABEL_20;
          }
        }
        else
        {
          if (!v74)
          {
            (*(void (**)(char *, char *, uint64_t))(v71 + 24))(v68, v69, v70);
            goto LABEL_20;
          }
          (*(void (**)(char *, uint64_t))(v71 + 8))(v68, v70);
        }
        size_t v16 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8) - 8) + 64);
        uint64_t v17 = (uint64_t *)v68;
        unint64_t v18 = (uint64_t *)v69;
        goto LABEL_8;
      }
      sub_22EE4F300((uint64_t)v8);
    }
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    goto LABEL_25;
  }
  if (v14)
  {
LABEL_7:
    size_t v16 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268628998) - 8) + 64);
    uint64_t v17 = v8;
    unint64_t v18 = v9;
LABEL_8:
    memcpy(v17, v18, v16);
    goto LABEL_20;
  }
  unint64_t v15 = v9[1];
  if (v15 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  }
  else
  {
    uint64_t v21 = *v9;
    sub_22EB71E60(*v9, v9[1]);
    *uint64_t v8 = v21;
    v8[1] = v15;
  }
  v8[2] = v9[2];
  v8[3] = v9[3];
  v8[4] = v9[4];
  v8[5] = v9[5];
  uint64_t v22 = v10[7];
  __dst = (char *)v8 + v22;
  uint64_t v23 = (char *)v9 + v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
  uint64_t v25 = *(void *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 3, v24))
  {
    uint64_t v26 = type metadata accessor for ClientOverride.Server(0);
    memcpy(__dst, v23, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    uint64_t v27 = sub_22EE7C2B0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(__dst, v23, v27);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 3, v24);
  }
  uint64_t v28 = v10[8];
  uint64_t v29 = (char *)v8 + v28;
  uint64_t v30 = (char *)v9 + v28;
  uint64_t v31 = *(void *)v30;
  v29[8] = v30[8];
  *(void *)uint64_t v29 = v31;
  uint64_t v32 = v10[9];
  uint64_t v33 = (char *)v8 + v32;
  uint64_t v34 = (char *)v9 + v32;
  uint64_t v35 = *(void *)v34;
  unsigned char v33[8] = v34[8];
  *(void *)uint64_t v33 = v35;
  uint64_t v36 = v10[10];
  uint64_t v37 = (char *)v8 + v36;
  uint64_t v38 = (char *)v9 + v36;
  uint64_t v39 = sub_22EE7C3D0();
  uint64_t v40 = *(void *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
  {
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v37, v38, v39);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  }
  (*(void (**)(uint64_t *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
LABEL_20:
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v42 = a3[7];
  uint64_t v43 = (void *)(a1 + v42);
  uint64_t v44 = (void *)(a2 + v42);
  *uint64_t v43 = *v44;
  v43[1] = v44[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for PurchaseIntentRequest.Query(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_22EE7C3C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for ClientOverride(0);
  uint64_t v11 = *((void *)v10 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628998);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    long long v13 = v9[1];
    *uint64_t v8 = *v9;
    v8[1] = v13;
    v8[2] = v9[2];
    uint64_t v14 = v10[7];
    __dst = (char *)v8 + v14;
    unint64_t v15 = (char *)v9 + v14;
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 3, v16))
    {
      uint64_t v18 = type metadata accessor for ClientOverride.Server(0);
      memcpy(__dst, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      uint64_t v19 = sub_22EE7C2B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(__dst, v15, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 3, v16);
    }
    uint64_t v20 = v10[8];
    uint64_t v21 = (char *)v8 + v20;
    uint64_t v22 = (char *)v9 + v20;
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    uint64_t v23 = v10[9];
    uint64_t v24 = (char *)v8 + v23;
    uint64_t v25 = (char *)v9 + v23;
    v24[8] = v25[8];
    *(void *)uint64_t v24 = *(void *)v25;
    uint64_t v26 = v10[10];
    uint64_t v27 = (char *)v8 + v26;
    uint64_t v28 = (char *)v9 + v26;
    uint64_t v29 = sub_22EE7C3D0();
    uint64_t v30 = *(void *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8);
      memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v27, v28, v29);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v32 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v32) = *(_OWORD *)(a2 + v32);
  return a1;
}

uint64_t assignWithTake for PurchaseIntentRequest.Query(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_22EE7C3C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (uint64_t *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for ClientOverride(0);
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(uint64_t (**)(uint64_t *, uint64_t, int *))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_22EE72B1C((uint64_t)v8, type metadata accessor for ClientOverride);
      goto LABEL_7;
    }
    unint64_t v24 = v8[1];
    int v73 = a3;
    if (v24 >> 60 != 15)
    {
      unint64_t v25 = v9[1];
      if (v25 >> 60 != 15)
      {
        uint64_t v45 = *v8;
        *uint64_t v8 = *v9;
        v8[1] = v25;
        sub_22EB2AC74(v45, v24);
LABEL_20:
        uint64_t v46 = v9[3];
        v8[2] = v9[2];
        v8[3] = v46;
        swift_bridgeObjectRelease();
        uint64_t v47 = v9[5];
        v8[4] = v9[4];
        v8[5] = v47;
        swift_bridgeObjectRelease();
        uint64_t v48 = v10[7];
        uint64_t v49 = (char *)v8 + v48;
        uint64_t v50 = (char *)v9 + v48;
        uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
        uint64_t v72 = *(void *)(v51 - 8);
        uint64_t v52 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v72 + 48);
        __dsta = v49;
        LODWORD(v49) = v52(v49, 3, v51);
        int v53 = v52(v50, 3, v51);
        if (v49)
        {
          if (!v53)
          {
            uint64_t v56 = sub_22EE7C2B0();
            (*(void (**)(void *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(__dsta, v50, v56);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v72 + 56))(__dsta, 0, 3, v51);
            goto LABEL_28;
          }
          size_t v54 = *(void *)(*(void *)(type metadata accessor for ClientOverride.Server(0) - 8) + 64);
          size_t v55 = __dsta;
        }
        else
        {
          if (!v53)
          {
            uint64_t v57 = sub_22EE7C2B0();
            (*(void (**)(void *, char *, uint64_t))(*(void *)(v57 - 8) + 40))(__dsta, v50, v57);
            goto LABEL_28;
          }
          sub_22EADD81C((uint64_t)__dsta, &qword_268628410);
          size_t v54 = *(void *)(*(void *)(type metadata accessor for ClientOverride.Server(0) - 8) + 64);
          size_t v55 = __dsta;
        }
        memcpy(v55, v50, v54);
LABEL_28:
        a3 = v73;
        uint64_t v58 = v10[8];
        uint64_t v59 = (char *)v8 + v58;
        uint64_t v60 = (char *)v9 + v58;
        *(void *)uint64_t v59 = *(void *)v60;
        v59[8] = v60[8];
        uint64_t v61 = v10[9];
        uint64_t v62 = (char *)v8 + v61;
        uint64_t v63 = (char *)v9 + v61;
        v62[8] = v63[8];
        *(void *)uint64_t v62 = *(void *)v63;
        uint64_t v64 = v10[10];
        char v65 = (char *)v8 + v64;
        uint64_t v66 = (char *)v9 + v64;
        uint64_t v67 = sub_22EE7C3D0();
        uint64_t v68 = *(void *)(v67 - 8);
        uint64_t v69 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v68 + 48);
        int v70 = v69(v65, 1, v67);
        int v71 = v69(v66, 1, v67);
        if (v70)
        {
          if (!v71)
          {
            (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v65, v66, v67);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
            goto LABEL_18;
          }
        }
        else
        {
          if (!v71)
          {
            (*(void (**)(char *, char *, uint64_t))(v68 + 40))(v65, v66, v67);
            goto LABEL_18;
          }
          (*(void (**)(char *, uint64_t))(v68 + 8))(v65, v67);
        }
        size_t v21 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8) - 8) + 64);
        uint64_t v22 = (uint64_t *)v65;
        uint64_t v23 = (uint64_t *)v66;
        goto LABEL_8;
      }
      sub_22EE4F300((uint64_t)v8);
    }
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    goto LABEL_20;
  }
  if (v14)
  {
LABEL_7:
    size_t v21 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268628998) - 8) + 64);
    uint64_t v22 = v8;
    uint64_t v23 = v9;
LABEL_8:
    memcpy(v22, v23, v21);
    goto LABEL_18;
  }
  long long v15 = *((_OWORD *)v9 + 1);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *((_OWORD *)v8 + 1) = v15;
  *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
  uint64_t v16 = v10[7];
  __dst = (char *)v8 + v16;
  uint64_t v17 = (char *)v9 + v16;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 3, v18))
  {
    uint64_t v20 = type metadata accessor for ClientOverride.Server(0);
    memcpy(__dst, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    uint64_t v26 = sub_22EE7C2B0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(__dst, v17, v26);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 3, v18);
  }
  uint64_t v27 = v10[8];
  uint64_t v28 = (char *)v8 + v27;
  uint64_t v29 = (char *)v9 + v27;
  *(void *)uint64_t v28 = *(void *)v29;
  v28[8] = v29[8];
  uint64_t v30 = v10[9];
  uint64_t v31 = (char *)v8 + v30;
  uint64_t v32 = (char *)v9 + v30;
  v31[8] = v32[8];
  *(void *)uint64_t v31 = *(void *)v32;
  uint64_t v33 = v10[10];
  uint64_t v34 = (char *)v8 + v33;
  uint64_t v35 = (char *)v9 + v33;
  uint64_t v36 = sub_22EE7C3D0();
  uint64_t v37 = *(void *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
  {
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8);
    memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v34, v35, v36);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  }
  (*(void (**)(uint64_t *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
LABEL_18:
  uint64_t v39 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v40 = (void *)(a1 + v39);
  uint64_t v41 = (uint64_t *)(a2 + v39);
  uint64_t v43 = *v41;
  uint64_t v42 = v41[1];
  *uint64_t v40 = v43;
  v40[1] = v42;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PurchaseIntentRequest.Query(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EE772EC);
}

uint64_t sub_22EE772EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7C3C0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628998);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 28) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for PurchaseIntentRequest.Query(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EE7741C);
}

uint64_t sub_22EE7741C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_22EE7C3C0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_268628998);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_22EE77534()
{
  sub_22EE7C3C0();
  if (v0 <= 0x3F)
  {
    sub_22EE635B0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

ValueMetadata *type metadata accessor for PurchaseIntentRequest.Query.CodingKeys()
{
  return &type metadata for PurchaseIntentRequest.Query.CodingKeys;
}

ValueMetadata *type metadata accessor for PurchaseIntentRequest.Remove.CodingKeys()
{
  return &type metadata for PurchaseIntentRequest.Remove.CodingKeys;
}

unsigned char *_s15StoreKit_Shared21PurchaseIntentRequestO5QueryV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22EE77700);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PurchaseIntentRequest.Add.CodingKeys()
{
  return &type metadata for PurchaseIntentRequest.Add.CodingKeys;
}

unsigned char *_s15StoreKit_Shared21PurchaseIntentRequestO4KindOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22EE77804);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PurchaseIntentRequest.Kind.CodingKeys()
{
  return &type metadata for PurchaseIntentRequest.Kind.CodingKeys;
}

ValueMetadata *type metadata accessor for PurchaseIntentRequest.Kind.AllCodingKeys()
{
  return &type metadata for PurchaseIntentRequest.Kind.AllCodingKeys;
}

ValueMetadata *type metadata accessor for PurchaseIntentRequest.Kind.ClientCodingKeys()
{
  return &type metadata for PurchaseIntentRequest.Kind.ClientCodingKeys;
}

unint64_t sub_22EE77860()
{
  unint64_t result = qword_268628F70;
  if (!qword_268628F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628F70);
  }
  return result;
}

unint64_t sub_22EE778B8()
{
  unint64_t result = qword_268628F78;
  if (!qword_268628F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628F78);
  }
  return result;
}

unint64_t sub_22EE77910()
{
  unint64_t result = qword_268628F80;
  if (!qword_268628F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628F80);
  }
  return result;
}

unint64_t sub_22EE77968()
{
  unint64_t result = qword_268628F88;
  if (!qword_268628F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628F88);
  }
  return result;
}

unint64_t sub_22EE779C0()
{
  unint64_t result = qword_268628F90;
  if (!qword_268628F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628F90);
  }
  return result;
}

unint64_t sub_22EE77A18()
{
  unint64_t result = qword_268628F98;
  if (!qword_268628F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628F98);
  }
  return result;
}

unint64_t sub_22EE77A70()
{
  unint64_t result = qword_268628FA0;
  if (!qword_268628FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628FA0);
  }
  return result;
}

unint64_t sub_22EE77AC8()
{
  unint64_t result = qword_268628FA8;
  if (!qword_268628FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628FA8);
  }
  return result;
}

unint64_t sub_22EE77B20()
{
  unint64_t result = qword_268628FB0;
  if (!qword_268628FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628FB0);
  }
  return result;
}

unint64_t sub_22EE77B78()
{
  unint64_t result = qword_268628FB8;
  if (!qword_268628FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628FB8);
  }
  return result;
}

unint64_t sub_22EE77BD0()
{
  unint64_t result = qword_268628FC0;
  if (!qword_268628FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628FC0);
  }
  return result;
}

unint64_t sub_22EE77C28()
{
  unint64_t result = qword_268628FC8;
  if (!qword_268628FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628FC8);
  }
  return result;
}

unint64_t sub_22EE77C80()
{
  unint64_t result = qword_268628FD0;
  if (!qword_268628FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628FD0);
  }
  return result;
}

unint64_t sub_22EE77CD8()
{
  unint64_t result = qword_268628FD8;
  if (!qword_268628FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628FD8);
  }
  return result;
}

unint64_t sub_22EE77D30()
{
  unint64_t result = qword_268628FE0;
  if (!qword_268628FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628FE0);
  }
  return result;
}

unint64_t sub_22EE77D88()
{
  unint64_t result = qword_268628FE8;
  if (!qword_268628FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268628FE8);
  }
  return result;
}

uint64_t sub_22EE77DDC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E65746E69 && a2 == 0xE600000000000000;
  if (v2 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x704168636E75616CLL && a2 == 0xE900000000000070 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x79654B676F6CLL && a2 == 0xE600000000000000 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x796669746F6ELL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_22EE80660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_22EE77F8C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x764F746E65696C63 && a2 == 0xEE00656469727265;
  if (v2 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x79654B676F6CLL && a2 == 0xE600000000000000 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x49746375646F7270 && a2 == 0xE900000000000044)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_22EE80660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_22EE78160(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7265746661 && a2 == 0xE500000000000000;
  if (v2 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x764F746E65696C63 && a2 == 0xEE00656469727265 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x79654B676F6CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_22EE80660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t StorefrontRequest.clientOverride.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22EE604B0(v1, a1);
}

uint64_t StorefrontRequest.logKey.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StorefrontRequest() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for StorefrontRequest()
{
  uint64_t result = qword_268629038;
  if (!qword_268629038) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t StorefrontRequest.logKey.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for StorefrontRequest() + 20));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*StorefrontRequest.logKey.modify())(void)
{
  return nullsub_1;
}

uint64_t StorefrontRequest.init(clientOverride:logKey:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_22EE63B74(a1, a4);
  uint64_t result = type metadata accessor for StorefrontRequest();
  uint64_t v8 = (void *)(a4 + *(int *)(result + 20));
  *uint64_t v8 = a2;
  v8[1] = a3;
  return result;
}

uint64_t sub_22EE78494()
{
  if (*v0) {
    return 0x79654B676F6CLL;
  }
  else {
    return 0x764F746E65696C63;
  }
}

uint64_t sub_22EE784D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_22EE7AB40(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22EE78500(uint64_t a1)
{
  unint64_t v2 = sub_22EE78730();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE7853C(uint64_t a1)
{
  unint64_t v2 = sub_22EE78730();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StorefrontRequest.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268629008);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22EE78730();
  sub_22EE80830();
  v8[15] = 0;
  type metadata accessor for ClientOverride(0);
  sub_22EE78BC0(&qword_2686289C0, (void (*)(uint64_t))type metadata accessor for ClientOverride);
  sub_22EE805A0();
  if (!v1)
  {
    type metadata accessor for StorefrontRequest();
    v8[14] = 1;
    sub_22EE805C0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_22EE78730()
{
  unint64_t result = qword_268629010;
  if (!qword_268629010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268629010);
  }
  return result;
}

uint64_t StorefrontRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628998);
  MEMORY[0x270FA5388](v4 - 8);
  char v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268629018);
  uint64_t v21 = *(void *)(v7 - 8);
  uint64_t v22 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for StorefrontRequest();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22EE78730();
  sub_22EE80820();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v13 = v21;
  type metadata accessor for ClientOverride(0);
  char v24 = 0;
  sub_22EE78BC0(&qword_2686289D0, (void (*)(uint64_t))type metadata accessor for ClientOverride);
  sub_22EE80520();
  sub_22EE63B74((uint64_t)v6, (uint64_t)v12);
  char v23 = 1;
  uint64_t v14 = sub_22EE80540();
  uint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v22);
  uint64_t v17 = (uint64_t *)&v12[*(int *)(v10 + 20)];
  *uint64_t v17 = v14;
  v17[1] = v16;
  sub_22EE78A80((uint64_t)v12, v20);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_22EE79CA4((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StorefrontRequest);
}

uint64_t sub_22EE78A80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StorefrontRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22EE78AE4(uint64_t a1)
{
  uint64_t result = sub_22EE78BC0(&qword_268629020, (void (*)(uint64_t))type metadata accessor for StorefrontRequest);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_22EE78B3C(uint64_t a1)
{
  *(void *)(a1 + 16) = sub_22EE78BC0(&qword_268629028, (void (*)(uint64_t))type metadata accessor for StorefrontRequest);
  uint64_t result = sub_22EE78BC0(&qword_268629030, (void (*)(uint64_t))type metadata accessor for StorefrontRequest);
  *(void *)(a1 + 24) = result;
  return result;
}

uint64_t sub_22EE78BC0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22EE78C08@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StorefrontRequest.init(from:)(a1, a2);
}

uint64_t sub_22EE78C20(void *a1)
{
  return StorefrontRequest.encode(to:)(a1);
}

unint64_t *initializeBufferWithCopyOfBuffer for StorefrontRequest(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    unint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (unint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = (int *)type metadata accessor for ClientOverride(0);
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(unint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628998);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      unint64_t v11 = a2[1];
      if (v11 >> 60 == 15)
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
      }
      else
      {
        unint64_t v12 = *a2;
        sub_22EB71E60(*a2, a2[1]);
        *a1 = v12;
        a1[1] = v11;
      }
      unint64_t v13 = a2[3];
      a1[2] = a2[2];
      a1[3] = v13;
      unint64_t v14 = a2[5];
      a1[4] = a2[4];
      a1[5] = v14;
      uint64_t v15 = v7[7];
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 3, v18))
      {
        uint64_t v20 = type metadata accessor for ClientOverride.Server(0);
        memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        uint64_t v21 = sub_22EE7C2B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v16, v17, v21);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 3, v18);
      }
      uint64_t v22 = v7[8];
      char v23 = (char *)a1 + v22;
      char v24 = (char *)a2 + v22;
      *(void *)char v23 = *(void *)v24;
      unsigned char v23[8] = v24[8];
      uint64_t v25 = v7[9];
      uint64_t v26 = (char *)a1 + v25;
      uint64_t v27 = (char *)a2 + v25;
      v26[8] = v27[8];
      *(void *)uint64_t v26 = *(void *)v27;
      uint64_t v28 = v7[10];
      uint64_t v29 = (char *)a1 + v28;
      uint64_t v30 = (char *)a2 + v28;
      uint64_t v31 = sub_22EE7C3D0();
      uint64_t v32 = *(void *)(v31 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
      {
        uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8);
        memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
      }
      (*(void (**)(unint64_t *, void, uint64_t, int *))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v34 = *(int *)(a3 + 20);
    uint64_t v35 = (unint64_t *)((char *)a1 + v34);
    uint64_t v36 = (unint64_t *)((char *)a2 + v34);
    uint64_t v37 = v36[1];
    *uint64_t v35 = *v36;
    v35[1] = v37;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for StorefrontRequest(uint64_t *a1)
{
  uint64_t v2 = type metadata accessor for ClientOverride(0);
  if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2))
  {
    unint64_t v3 = a1[1];
    if (v3 >> 60 != 15) {
      sub_22EB2AC74(*a1, v3);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = (char *)a1 + *(int *)(v2 + 28);
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 3, v5))
    {
      uint64_t v6 = sub_22EE7C2B0();
      (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
    }
    uint64_t v7 = (char *)a1 + *(int *)(v2 + 40);
    uint64_t v8 = sub_22EE7C3D0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    }
  }

  return swift_bridgeObjectRelease();
}

unint64_t *initializeWithCopy for StorefrontRequest(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for ClientOverride(0);
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(unint64_t *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628998);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    unint64_t v9 = a2[1];
    if (v9 >> 60 == 15)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    else
    {
      unint64_t v10 = *a2;
      sub_22EB71E60(*a2, a2[1]);
      *a1 = v10;
      a1[1] = v9;
    }
    unint64_t v11 = a2[3];
    a1[2] = a2[2];
    a1[3] = v11;
    unint64_t v12 = a2[5];
    a1[4] = a2[4];
    a1[5] = v12;
    uint64_t v13 = v6[7];
    unint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 3, v16))
    {
      uint64_t v18 = type metadata accessor for ClientOverride.Server(0);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      uint64_t v19 = sub_22EE7C2B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v14, v15, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 3, v16);
    }
    uint64_t v20 = v6[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    uint64_t v23 = v6[9];
    char v24 = (char *)a1 + v23;
    uint64_t v25 = (char *)a2 + v23;
    v24[8] = v25[8];
    *(void *)char v24 = *(void *)v25;
    uint64_t v26 = v6[10];
    uint64_t v27 = (char *)a1 + v26;
    uint64_t v28 = (char *)a2 + v26;
    uint64_t v29 = sub_22EE7C3D0();
    uint64_t v30 = *(void *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8);
      memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    (*(void (**)(unint64_t *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v32 = *(int *)(a3 + 20);
  uint64_t v33 = (unint64_t *)((char *)a1 + v32);
  uint64_t v34 = (unint64_t *)((char *)a2 + v32);
  uint64_t v35 = v34[1];
  *uint64_t v33 = *v34;
  v33[1] = v35;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for StorefrontRequest(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for ClientOverride(0);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(uint64_t *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_22EE79CA4((uint64_t)a1, type metadata accessor for ClientOverride);
      goto LABEL_7;
    }
    unint64_t v15 = a2[1];
    uint64_t v73 = a3;
    if ((unint64_t)a1[1] >> 60 == 15)
    {
      if (v15 >> 60 != 15)
      {
        uint64_t v16 = *a2;
        sub_22EB71E60(*a2, v15);
        *a1 = v16;
        a1[1] = v15;
        goto LABEL_25;
      }
    }
    else
    {
      if (v15 >> 60 != 15)
      {
        uint64_t v43 = *a2;
        sub_22EB71E60(*a2, v15);
        uint64_t v44 = *a1;
        unint64_t v45 = a1[1];
        *a1 = v43;
        a1[1] = v15;
        sub_22EB2AC74(v44, v45);
LABEL_25:
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        a1[4] = a2[4];
        a1[5] = a2[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v46 = v6[7];
        uint64_t v47 = (char *)a1 + v46;
        uint64_t v48 = (char *)a2 + v46;
        uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
        uint64_t v50 = *(void *)(v49 - 8);
        uint64_t v51 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v50 + 48);
        int v52 = v51(v47, 3, v49);
        int v53 = v51(v48, 3, v49);
        if (v52)
        {
          if (!v53)
          {
            uint64_t v54 = sub_22EE7C2B0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v47, v48, v54);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v47, 0, 3, v49);
LABEL_31:
            uint64_t v56 = v6[8];
            uint64_t v57 = (char *)a1 + v56;
            uint64_t v58 = (char *)a2 + v56;
            uint64_t v59 = *(void *)v58;
            v57[8] = v58[8];
            *(void *)uint64_t v57 = v59;
            uint64_t v60 = v6[9];
            uint64_t v61 = (char *)a1 + v60;
            uint64_t v62 = (char *)a2 + v60;
            uint64_t v63 = *(void *)v62;
            v61[8] = v62[8];
            *(void *)uint64_t v61 = v63;
            uint64_t v64 = v6[10];
            char v65 = (char *)a1 + v64;
            uint64_t v66 = (char *)a2 + v64;
            uint64_t v67 = sub_22EE7C3D0();
            uint64_t v68 = *(void *)(v67 - 8);
            uint64_t v69 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v68 + 48);
            int v70 = v69(v65, 1, v67);
            int v71 = v69(v66, 1, v67);
            if (v70)
            {
              a3 = v73;
              if (!v71)
              {
                (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v65, v66, v67);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
                goto LABEL_20;
              }
            }
            else
            {
              a3 = v73;
              if (!v71)
              {
                (*(void (**)(char *, char *, uint64_t))(v68 + 24))(v65, v66, v67);
                goto LABEL_20;
              }
              (*(void (**)(char *, uint64_t))(v68 + 8))(v65, v67);
            }
            size_t v12 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8) - 8) + 64);
            uint64_t v13 = (uint64_t *)v65;
            unint64_t v14 = (uint64_t *)v66;
            goto LABEL_8;
          }
        }
        else
        {
          if (!v53)
          {
            uint64_t v72 = sub_22EE7C2B0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 24))(v47, v48, v72);
            goto LABEL_31;
          }
          sub_22EADD81C((uint64_t)v47, &qword_268628410);
        }
        uint64_t v55 = type metadata accessor for ClientOverride.Server(0);
        memcpy(v47, v48, *(void *)(*(void *)(v55 - 8) + 64));
        goto LABEL_31;
      }
      sub_22EE4F300((uint64_t)a1);
    }
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_25;
  }
  if (v10)
  {
LABEL_7:
    size_t v12 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268628998) - 8) + 64);
    uint64_t v13 = a1;
    unint64_t v14 = a2;
LABEL_8:
    memcpy(v13, v14, v12);
    goto LABEL_20;
  }
  unint64_t v11 = a2[1];
  if (v11 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v17 = *a2;
    sub_22EB71E60(*a2, a2[1]);
    *a1 = v17;
    a1[1] = v11;
  }
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  uint64_t v18 = v6[7];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 3, v21))
  {
    uint64_t v23 = type metadata accessor for ClientOverride.Server(0);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    uint64_t v24 = sub_22EE7C2B0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v19, v20, v24);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 3, v21);
  }
  uint64_t v25 = v6[8];
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = *(void *)v27;
  v26[8] = v27[8];
  *(void *)uint64_t v26 = v28;
  uint64_t v29 = v6[9];
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  uint64_t v32 = *(void *)v31;
  v30[8] = v31[8];
  *(void *)uint64_t v30 = v32;
  uint64_t v33 = v6[10];
  uint64_t v34 = (char *)a1 + v33;
  uint64_t v35 = (char *)a2 + v33;
  uint64_t v36 = sub_22EE7C3D0();
  uint64_t v37 = *(void *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
  {
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8);
    memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  }
  (*(void (**)(uint64_t *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
LABEL_20:
  uint64_t v39 = *(int *)(a3 + 20);
  uint64_t v40 = (uint64_t *)((char *)a1 + v39);
  uint64_t v41 = (uint64_t *)((char *)a2 + v39);
  *uint64_t v40 = *v41;
  v40[1] = v41[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22EE79CA4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *initializeWithTake for StorefrontRequest(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for ClientOverride(0);
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628998);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    long long v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    a1[2] = a2[2];
    uint64_t v10 = v6[7];
    unint64_t v11 = (char *)a1 + v10;
    size_t v12 = (char *)a2 + v10;
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 3, v13))
    {
      uint64_t v15 = type metadata accessor for ClientOverride.Server(0);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      uint64_t v16 = sub_22EE7C2B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v11, v12, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 3, v13);
    }
    uint64_t v17 = v6[8];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v6[9];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    v21[8] = v22[8];
    *(void *)uint64_t v21 = *(void *)v22;
    uint64_t v23 = v6[10];
    uint64_t v24 = (char *)a1 + v23;
    uint64_t v25 = (char *)a2 + v23;
    uint64_t v26 = sub_22EE7C3D0();
    uint64_t v27 = *(void *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8);
      memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t *assignWithTake for StorefrontRequest(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for ClientOverride(0);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(uint64_t *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_22EE79CA4((uint64_t)a1, type metadata accessor for ClientOverride);
      goto LABEL_7;
    }
    unint64_t v21 = a1[1];
    uint64_t v70 = a3;
    if (v21 >> 60 != 15)
    {
      unint64_t v22 = a2[1];
      if (v22 >> 60 != 15)
      {
        uint64_t v42 = *a1;
        *a1 = *a2;
        a1[1] = v22;
        sub_22EB2AC74(v42, v21);
LABEL_20:
        uint64_t v43 = a2[3];
        a1[2] = a2[2];
        a1[3] = v43;
        swift_bridgeObjectRelease();
        uint64_t v44 = a2[5];
        a1[4] = a2[4];
        a1[5] = v44;
        swift_bridgeObjectRelease();
        uint64_t v45 = v6[7];
        uint64_t v46 = (char *)a1 + v45;
        uint64_t v47 = (char *)a2 + v45;
        uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
        uint64_t v49 = *(void *)(v48 - 8);
        uint64_t v50 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v49 + 48);
        int v51 = v50(v46, 3, v48);
        int v52 = v50(v47, 3, v48);
        if (v51)
        {
          if (!v52)
          {
            uint64_t v53 = sub_22EE7C2B0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 32))(v46, v47, v53);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v46, 0, 3, v48);
LABEL_26:
            uint64_t v55 = v6[8];
            uint64_t v56 = (char *)a1 + v55;
            uint64_t v57 = (char *)a2 + v55;
            *(void *)uint64_t v56 = *(void *)v57;
            v56[8] = v57[8];
            uint64_t v58 = v6[9];
            uint64_t v59 = (char *)a1 + v58;
            uint64_t v60 = (char *)a2 + v58;
            v59[8] = v60[8];
            *(void *)uint64_t v59 = *(void *)v60;
            uint64_t v61 = v6[10];
            uint64_t v62 = (char *)a1 + v61;
            uint64_t v63 = (char *)a2 + v61;
            uint64_t v64 = sub_22EE7C3D0();
            uint64_t v65 = *(void *)(v64 - 8);
            uint64_t v66 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v65 + 48);
            int v67 = v66(v62, 1, v64);
            int v68 = v66(v63, 1, v64);
            if (v67)
            {
              a3 = v70;
              if (!v68)
              {
                (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v62, v63, v64);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
                goto LABEL_18;
              }
            }
            else
            {
              a3 = v70;
              if (!v68)
              {
                (*(void (**)(char *, char *, uint64_t))(v65 + 40))(v62, v63, v64);
                goto LABEL_18;
              }
              (*(void (**)(char *, uint64_t))(v65 + 8))(v62, v64);
            }
            size_t v18 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8) - 8) + 64);
            uint64_t v19 = (uint64_t *)v62;
            uint64_t v20 = (uint64_t *)v63;
            goto LABEL_8;
          }
        }
        else
        {
          if (!v52)
          {
            uint64_t v69 = sub_22EE7C2B0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 40))(v46, v47, v69);
            goto LABEL_26;
          }
          sub_22EADD81C((uint64_t)v46, &qword_268628410);
        }
        uint64_t v54 = type metadata accessor for ClientOverride.Server(0);
        memcpy(v46, v47, *(void *)(*(void *)(v54 - 8) + 64));
        goto LABEL_26;
      }
      sub_22EE4F300((uint64_t)a1);
    }
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_20;
  }
  if (v10)
  {
LABEL_7:
    size_t v18 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268628998) - 8) + 64);
    uint64_t v19 = a1;
    uint64_t v20 = a2;
LABEL_8:
    memcpy(v19, v20, v18);
    goto LABEL_18;
  }
  long long v11 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v11;
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  uint64_t v12 = v6[7];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628410);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 3, v15))
  {
    uint64_t v17 = type metadata accessor for ClientOverride.Server(0);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v23 = sub_22EE7C2B0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v13, v14, v23);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 3, v15);
  }
  uint64_t v24 = v6[8];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  *(void *)uint64_t v25 = *(void *)v26;
  v25[8] = v26[8];
  uint64_t v27 = v6[9];
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  v28[8] = v29[8];
  *(void *)uint64_t v28 = *(void *)v29;
  uint64_t v30 = v6[10];
  uint64_t v31 = (char *)a1 + v30;
  uint64_t v32 = (char *)a2 + v30;
  uint64_t v33 = sub_22EE7C3D0();
  uint64_t v34 = *(void *)(v33 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
  {
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686284B8);
    memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v32, v33);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
  }
  (*(void (**)(uint64_t *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
LABEL_18:
  uint64_t v36 = *(int *)(a3 + 20);
  uint64_t v37 = (uint64_t *)((char *)a1 + v36);
  uint64_t v38 = (uint64_t *)((char *)a2 + v36);
  uint64_t v40 = *v38;
  uint64_t v39 = v38[1];
  *uint64_t v37 = v40;
  v37[1] = v39;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StorefrontRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EE7A700);
}

uint64_t sub_22EE7A700(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268628998);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for StorefrontRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EE7A7DC);
}

uint64_t sub_22EE7A7DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_268628998);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

void sub_22EE7A8A0()
{
  sub_22EE635B0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unsigned char *storeEnumTagSinglePayload for StorefrontRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22EE7AA00);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StorefrontRequest.CodingKeys()
{
  return &type metadata for StorefrontRequest.CodingKeys;
}

unint64_t sub_22EE7AA3C()
{
  unint64_t result = qword_268629048;
  if (!qword_268629048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268629048);
  }
  return result;
}

unint64_t sub_22EE7AA94()
{
  unint64_t result = qword_268629050;
  if (!qword_268629050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268629050);
  }
  return result;
}

unint64_t sub_22EE7AAEC()
{
  unint64_t result = qword_268629058;
  if (!qword_268629058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268629058);
  }
  return result;
}

uint64_t sub_22EE7AB40(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x764F746E65696C63 && a2 == 0xEE00656469727265;
  if (v2 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x79654B676F6CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_22EE80660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t StorefrontInternal.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StorefrontInternal.countryCode.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StorefrontInternal.locale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StorefrontInternal() + 24);
  uint64_t v4 = sub_22EE7C400();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for StorefrontInternal()
{
  uint64_t result = qword_268629088;
  if (!qword_268629088) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t StorefrontInternal.init(id:countryCode:locale:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = a1;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  uint64_t v7 = (char *)a6 + *(int *)(type metadata accessor for StorefrontInternal() + 24);
  uint64_t v8 = sub_22EE7C400();
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32);

  return v9(v7, a5, v8);
}

uint64_t sub_22EE7ADFC()
{
  uint64_t v1 = 0x437972746E756F63;
  if (*v0 != 1) {
    uint64_t v1 = 0x656C61636F6CLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 25705;
  }
}

uint64_t sub_22EE7AE50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_22EE7BE50(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_22EE7AE78(uint64_t a1)
{
  unint64_t v2 = sub_22EE7B4E0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_22EE7AEB4(uint64_t a1)
{
  unint64_t v2 = sub_22EE7B4E0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StorefrontInternal.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268629060);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_22EE7B4E0();
  sub_22EE80830();
  v8[15] = 0;
  sub_22EE805C0();
  if (!v1)
  {
    v8[14] = 1;
    sub_22EE805C0();
    type metadata accessor for StorefrontInternal();
    v8[13] = 2;
    sub_22EE7C400();
    sub_22EE7B534(&qword_268629070);
    sub_22EE805E0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t StorefrontInternal.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v4 = sub_22EE7C400();
  uint64_t v21 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268629078);
  uint64_t v23 = *(void *)(v7 - 8);
  uint64_t v24 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for StorefrontInternal();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (uint64_t *)((char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = a1[3];
  uint64_t v25 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_22EE7B4E0();
  sub_22EE80820();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  }
  uint64_t v14 = v23;
  char v28 = 0;
  *uint64_t v12 = sub_22EE80540();
  v12[1] = v15;
  char v27 = 1;
  void v12[2] = sub_22EE80540();
  _OWORD v12[3] = v16;
  char v26 = 2;
  sub_22EE7B534(&qword_268629080);
  uint64_t v20 = v6;
  uint64_t v17 = (uint64_t)v12;
  uint64_t v18 = v24;
  sub_22EE80560();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v18);
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v17 + *(int *)(v10 + 24), v20, v4);
  sub_22EE7B578(v17, v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return sub_22EE7B5DC(v17);
}

uint64_t sub_22EE7B404@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StorefrontInternal.init(from:)(a1, a2);
}

uint64_t sub_22EE7B41C(void *a1)
{
  return StorefrontInternal.encode(to:)(a1);
}

uint64_t sub_22EE7B438@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t _s15StoreKit_Shared18StorefrontInternalV23__derived_struct_equalsySbAC_ACtFZ_0(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (sub_22EE80660() & 1) != 0)
  {
    BOOL v5 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v5 || (sub_22EE80660() & 1) != 0)
    {
      type metadata accessor for StorefrontInternal();
      JUMPOUT(0x230FA9720);
    }
  }
  return 0;
}

unint64_t sub_22EE7B4E0()
{
  unint64_t result = qword_268629068;
  if (!qword_268629068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268629068);
  }
  return result;
}

uint64_t sub_22EE7B534(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22EE7C400();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22EE7B578(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StorefrontInternal();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22EE7B5DC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StorefrontInternal();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for StorefrontInternal(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_22EE7C400();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t destroy for StorefrontInternal(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_22EE7C400();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *initializeWithCopy for StorefrontInternal(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22EE7C400();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

void *assignWithCopy for StorefrontInternal(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22EE7C400();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for StorefrontInternal(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_22EE7C400();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

void *assignWithTake for StorefrontInternal(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_22EE7C400();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for StorefrontInternal(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EE7BA40);
}

uint64_t sub_22EE7BA40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_22EE7C400();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for StorefrontInternal(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EE7BB04);
}

uint64_t sub_22EE7BB04(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_22EE7C400();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_22EE7BBAC()
{
  uint64_t result = sub_22EE7C400();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for StorefrontInternal.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22EE7BD10);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StorefrontInternal.CodingKeys()
{
  return &type metadata for StorefrontInternal.CodingKeys;
}

unint64_t sub_22EE7BD4C()
{
  unint64_t result = qword_268629098;
  if (!qword_268629098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268629098);
  }
  return result;
}

unint64_t sub_22EE7BDA4()
{
  unint64_t result = qword_2686290A0;
  if (!qword_2686290A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686290A0);
  }
  return result;
}

unint64_t sub_22EE7BDFC()
{
  unint64_t result = qword_2686290A8;
  if (!qword_2686290A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686290A8);
  }
  return result;
}

uint64_t sub_22EE7BE50(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x437972746E756F63 && a2 == 0xEB0000000065646FLL || (sub_22EE80660() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_22EE80660();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_22EE7BFA0()
{
  return MEMORY[0x270EEDDD0]();
}

uint64_t sub_22EE7BFB0()
{
  return MEMORY[0x270EEDE10]();
}

uint64_t sub_22EE7BFC0()
{
  return MEMORY[0x270EEDE18]();
}

uint64_t sub_22EE7BFD0()
{
  return MEMORY[0x270EEDEE8]();
}

uint64_t sub_22EE7BFE0()
{
  return MEMORY[0x270EEDF30]();
}

uint64_t sub_22EE7BFF0()
{
  return MEMORY[0x270EEDF38]();
}

uint64_t sub_22EE7C000()
{
  return MEMORY[0x270EEE0D0]();
}

uint64_t sub_22EE7C010()
{
  return MEMORY[0x270EEE208]();
}

uint64_t sub_22EE7C020()
{
  return MEMORY[0x270EEE258]();
}

uint64_t sub_22EE7C030()
{
  return MEMORY[0x270EEE268]();
}

uint64_t sub_22EE7C040()
{
  return MEMORY[0x270EEE3F0]();
}

uint64_t sub_22EE7C050()
{
  return MEMORY[0x270EEE408]();
}

uint64_t sub_22EE7C060()
{
  return MEMORY[0x270EEE410]();
}

uint64_t sub_22EE7C070()
{
  return MEMORY[0x270EEE4B0]();
}

uint64_t sub_22EE7C080()
{
  return MEMORY[0x270EEE518]();
}

uint64_t sub_22EE7C090()
{
  return MEMORY[0x270EEE610]();
}

uint64_t sub_22EE7C0A0()
{
  return MEMORY[0x270EEE618]();
}

uint64_t sub_22EE7C0B0()
{
  return MEMORY[0x270EEE628]();
}

uint64_t sub_22EE7C0C0()
{
  return MEMORY[0x270EEE638]();
}

uint64_t sub_22EE7C0D0()
{
  return MEMORY[0x270EEE658]();
}

uint64_t sub_22EE7C0E0()
{
  return MEMORY[0x270EEE670]();
}

uint64_t sub_22EE7C0F0()
{
  return MEMORY[0x270EEE688]();
}

uint64_t sub_22EE7C100()
{
  return MEMORY[0x270EEE8F8]();
}

uint64_t sub_22EE7C110()
{
  return MEMORY[0x270EEE910]();
}

uint64_t sub_22EE7C120()
{
  return MEMORY[0x270EEE920]();
}

uint64_t sub_22EE7C130()
{
  return MEMORY[0x270EEEA38]();
}

uint64_t sub_22EE7C140()
{
  return MEMORY[0x270EEEA60]();
}

uint64_t sub_22EE7C150()
{
  return MEMORY[0x270EEEB38]();
}

uint64_t sub_22EE7C160()
{
  return MEMORY[0x270EEEDC0]();
}

uint64_t sub_22EE7C170()
{
  return MEMORY[0x270EEEDD8]();
}

uint64_t sub_22EE7C180()
{
  return MEMORY[0x270EEF020]();
}

uint64_t sub_22EE7C190()
{
  return MEMORY[0x270EEF060]();
}

uint64_t sub_22EE7C1A0()
{
  return MEMORY[0x270EEF070]();
}

uint64_t sub_22EE7C1B0()
{
  return MEMORY[0x270EEF810]();
}

uint64_t sub_22EE7C1C0()
{
  return MEMORY[0x270EEF830]();
}

uint64_t sub_22EE7C1D0()
{
  return MEMORY[0x270EEF840]();
}

uint64_t sub_22EE7C1E0()
{
  return MEMORY[0x270EEF868]();
}

uint64_t sub_22EE7C1F0()
{
  return MEMORY[0x270EEF870]();
}

uint64_t sub_22EE7C200()
{
  return MEMORY[0x270EEF890]();
}

uint64_t sub_22EE7C210()
{
  return MEMORY[0x270EEF8B0]();
}

uint64_t sub_22EE7C220()
{
  return MEMORY[0x270EEF8C0]();
}

uint64_t sub_22EE7C230()
{
  return MEMORY[0x270EEF8D8]();
}

uint64_t sub_22EE7C240()
{
  return MEMORY[0x270EEFCB0]();
}

uint64_t sub_22EE7C250()
{
  return MEMORY[0x270EEFCE0]();
}

uint64_t sub_22EE7C260()
{
  return MEMORY[0x270EEFD28]();
}

uint64_t sub_22EE7C270()
{
  return MEMORY[0x270EEFE20]();
}

uint64_t sub_22EE7C280()
{
  return MEMORY[0x270EEFE68]();
}

uint64_t sub_22EE7C290()
{
  return MEMORY[0x270EEFEE0]();
}

uint64_t sub_22EE7C2A0()
{
  return MEMORY[0x270EEFEF8]();
}

uint64_t sub_22EE7C2B0()
{
  return MEMORY[0x270EEFF68]();
}

uint64_t sub_22EE7C2C0()
{
  return MEMORY[0x270EEFF98]();
}

uint64_t sub_22EE7C2D0()
{
  return MEMORY[0x270EEFFB0]();
}

uint64_t sub_22EE7C2E0()
{
  return MEMORY[0x270EEFFB8]();
}

uint64_t sub_22EE7C2F0()
{
  return MEMORY[0x270EF0008]();
}

uint64_t sub_22EE7C300()
{
  return MEMORY[0x270EF0060]();
}

uint64_t sub_22EE7C310()
{
  return MEMORY[0x270EF0090]();
}

uint64_t sub_22EE7C320()
{
  return MEMORY[0x270EF0098]();
}

uint64_t sub_22EE7C330()
{
  return MEMORY[0x270EF00B0]();
}

uint64_t sub_22EE7C340()
{
  return MEMORY[0x270EF00D8]();
}

uint64_t sub_22EE7C350()
{
  return MEMORY[0x270EF0120]();
}

uint64_t sub_22EE7C360()
{
  return MEMORY[0x270EF0130]();
}

uint64_t sub_22EE7C370()
{
  return MEMORY[0x270EF0158]();
}

uint64_t sub_22EE7C380()
{
  return MEMORY[0x270EF0178]();
}

uint64_t sub_22EE7C390()
{
  return MEMORY[0x270EF07E0]();
}

uint64_t sub_22EE7C3A0()
{
  return MEMORY[0x270EF0BB8]();
}

uint64_t sub_22EE7C3B0()
{
  return MEMORY[0x270EF0C30]();
}

uint64_t sub_22EE7C3C0()
{
  return MEMORY[0x270EF0C40]();
}

uint64_t sub_22EE7C3D0()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t sub_22EE7C3E0()
{
  return MEMORY[0x270EF0F30]();
}

uint64_t sub_22EE7C3F0()
{
  return MEMORY[0x270EF0FA0]();
}

uint64_t sub_22EE7C400()
{
  return MEMORY[0x270EF10A8]();
}

uint64_t sub_22EE7C410()
{
  return MEMORY[0x270EF17B0]();
}

uint64_t sub_22EE7C420()
{
  return MEMORY[0x270F28690]();
}

uint64_t sub_22EE7C430()
{
  return MEMORY[0x270FA2A68]();
}

uint64_t sub_22EE7C440()
{
  return MEMORY[0x270FA2A78]();
}

uint64_t sub_22EE7C450()
{
  return MEMORY[0x270FA2AA0]();
}

uint64_t sub_22EE7C460()
{
  return MEMORY[0x270F87550]();
}

uint64_t sub_22EE7C470()
{
  return MEMORY[0x270F87560]();
}

uint64_t sub_22EE7C480()
{
  return MEMORY[0x270F87688]();
}

uint64_t sub_22EE7C490()
{
  return MEMORY[0x270F180F0]();
}

uint64_t sub_22EE7C4A0()
{
  return MEMORY[0x270F18138]();
}

uint64_t sub_22EE7C4C0()
{
  return MEMORY[0x270F181E0]();
}

uint64_t sub_22EE7C4D0()
{
  return MEMORY[0x270F181E8]();
}

uint64_t sub_22EE7C4E0()
{
  return MEMORY[0x270F18200]();
}

uint64_t sub_22EE7C4F0()
{
  return MEMORY[0x270F18208]();
}

uint64_t sub_22EE7C500()
{
  return MEMORY[0x270F18228]();
}

uint64_t sub_22EE7C510()
{
  return MEMORY[0x270F18230]();
}

uint64_t sub_22EE7C520()
{
  return MEMORY[0x270EEB1D0]();
}

uint64_t sub_22EE7C530()
{
  return MEMORY[0x270EEB1E0]();
}

uint64_t sub_22EE7C540()
{
  return MEMORY[0x270FA2C78]();
}

uint64_t sub_22EE7C550()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_22EE7C560()
{
  return MEMORY[0x270FA2E08]();
}

uint64_t sub_22EE7C570()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_22EE7C580()
{
  return MEMORY[0x270F819E8]();
}

uint64_t sub_22EE7C590()
{
  return MEMORY[0x270EE3928]();
}

uint64_t sub_22EE7C5A0()
{
  return MEMORY[0x270EE39C0]();
}

uint64_t sub_22EE7C5B0()
{
  return MEMORY[0x270EE3BD0]();
}

uint64_t sub_22EE7C5D0()
{
  return MEMORY[0x270EE3BE8]();
}

uint64_t sub_22EE7C5E0()
{
  return MEMORY[0x270EE3C18]();
}

uint64_t sub_22EE7C5F0()
{
  return MEMORY[0x270EE3C20]();
}

uint64_t sub_22EE7C600()
{
  return MEMORY[0x270EE3CF0]();
}

uint64_t sub_22EE7C610()
{
  return MEMORY[0x270EE3DA8]();
}

uint64_t sub_22EE7C620()
{
  return MEMORY[0x270EE3DD8]();
}

uint64_t sub_22EE7C630()
{
  return MEMORY[0x270EE3DE0]();
}

uint64_t sub_22EE7C640()
{
  return MEMORY[0x270EE3DF0]();
}

uint64_t sub_22EE7C650()
{
  return MEMORY[0x270EE3F10]();
}

uint64_t sub_22EE7C660()
{
  return MEMORY[0x270EE4020]();
}

uint64_t sub_22EE7C670()
{
  return MEMORY[0x270EFEBA0]();
}

uint64_t sub_22EE7C680()
{
  return MEMORY[0x270EFEBA8]();
}

uint64_t sub_22EE7C690()
{
  return MEMORY[0x270EFEBB0]();
}

uint64_t sub_22EE7C6A0()
{
  return MEMORY[0x270EFEBB8]();
}

uint64_t sub_22EE7C6B0()
{
  return MEMORY[0x270EFEBD0]();
}

uint64_t sub_22EE7C6C0()
{
  return MEMORY[0x270EFEC48]();
}

uint64_t sub_22EE7C6D0()
{
  return MEMORY[0x270EFEC58]();
}

uint64_t sub_22EE7C6E0()
{
  return MEMORY[0x270EFECF8]();
}

uint64_t sub_22EE7C6F0()
{
  return MEMORY[0x270EFEDE0]();
}

uint64_t sub_22EE7C700()
{
  return MEMORY[0x270EFEDF0]();
}

uint64_t sub_22EE7C710()
{
  return MEMORY[0x270EFEDF8]();
}

uint64_t sub_22EE7C720()
{
  return MEMORY[0x270EFEE10]();
}

uint64_t sub_22EE7C730()
{
  return MEMORY[0x270EFEE18]();
}

uint64_t sub_22EE7C740()
{
  return MEMORY[0x270EFEE28]();
}

uint64_t sub_22EE7C750()
{
  return MEMORY[0x270EFEE40]();
}

uint64_t sub_22EE7C760()
{
  return MEMORY[0x270EFEE48]();
}

uint64_t sub_22EE7C780()
{
  return MEMORY[0x270EFEE90]();
}

uint64_t sub_22EE7C790()
{
  return MEMORY[0x270EFEE98]();
}

uint64_t sub_22EE7C7A0()
{
  return MEMORY[0x270EFEEB0]();
}

uint64_t sub_22EE7C7B0()
{
  return MEMORY[0x270EFEED0]();
}

uint64_t sub_22EE7C7C0()
{
  return MEMORY[0x270EFEF30]();
}

uint64_t sub_22EE7C7D0()
{
  return MEMORY[0x270EFEFC0]();
}

uint64_t sub_22EE7C7E0()
{
  return MEMORY[0x270EFEFD0]();
}

uint64_t sub_22EE7C7F0()
{
  return MEMORY[0x270EFEFD8]();
}

uint64_t sub_22EE7C800()
{
  return MEMORY[0x270EFF0B8]();
}

uint64_t sub_22EE7C810()
{
  return MEMORY[0x270EFF0E8]();
}

uint64_t sub_22EE7C820()
{
  return MEMORY[0x270EFF108]();
}

uint64_t sub_22EE7C830()
{
  return MEMORY[0x270EFF128]();
}

uint64_t sub_22EE7C840()
{
  return MEMORY[0x270EFF170]();
}

uint64_t sub_22EE7C850()
{
  return MEMORY[0x270EFF1B0]();
}

uint64_t sub_22EE7C860()
{
  return MEMORY[0x270EFF1B8]();
}

uint64_t sub_22EE7C870()
{
  return MEMORY[0x270EFF1D8]();
}

uint64_t sub_22EE7C880()
{
  return MEMORY[0x270EFF1E8]();
}

uint64_t sub_22EE7C890()
{
  return MEMORY[0x270EFF1F0]();
}

uint64_t sub_22EE7C8A0()
{
  return MEMORY[0x270EFF208]();
}

uint64_t sub_22EE7C8B0()
{
  return MEMORY[0x270EFF220]();
}

uint64_t sub_22EE7C8C0()
{
  return MEMORY[0x270EFF248]();
}

uint64_t sub_22EE7C8D0()
{
  return MEMORY[0x270EFF250]();
}

uint64_t sub_22EE7C8E0()
{
  return MEMORY[0x270EFF3E0]();
}

uint64_t sub_22EE7C8F0()
{
  return MEMORY[0x270EFF3F8]();
}

uint64_t sub_22EE7C900()
{
  return MEMORY[0x270EFF408]();
}

uint64_t sub_22EE7C910()
{
  return MEMORY[0x270EFF418]();
}

uint64_t sub_22EE7C920()
{
  return MEMORY[0x270EFF4F0]();
}

uint64_t sub_22EE7C950()
{
  return MEMORY[0x270EFF510]();
}

uint64_t sub_22EE7C960()
{
  return MEMORY[0x270EFF520]();
}

uint64_t sub_22EE7C970()
{
  return MEMORY[0x270EFF538]();
}

uint64_t sub_22EE7C980()
{
  return MEMORY[0x270EFF550]();
}

uint64_t sub_22EE7C990()
{
  return MEMORY[0x270EFF558]();
}

uint64_t sub_22EE7C9A0()
{
  return MEMORY[0x270EFF560]();
}

uint64_t sub_22EE7C9B0()
{
  return MEMORY[0x270EFF598]();
}

uint64_t sub_22EE7C9C0()
{
  return MEMORY[0x270EFF5E0]();
}

uint64_t sub_22EE7C9D0()
{
  return MEMORY[0x270EFF5E8]();
}

uint64_t sub_22EE7C9E0()
{
  return MEMORY[0x270EFF630]();
}

uint64_t sub_22EE7C9F0()
{
  return MEMORY[0x270EFF648]();
}

uint64_t sub_22EE7CA00()
{
  return MEMORY[0x270EFF658]();
}

uint64_t sub_22EE7CA10()
{
  return MEMORY[0x270EFF668]();
}

uint64_t sub_22EE7CA20()
{
  return MEMORY[0x270EFF6C0]();
}

uint64_t sub_22EE7CA30()
{
  return MEMORY[0x270EFF6D0]();
}

uint64_t sub_22EE7CA40()
{
  return MEMORY[0x270EFF6E8]();
}

uint64_t sub_22EE7CA50()
{
  return MEMORY[0x270EFF6F0]();
}

uint64_t sub_22EE7CA60()
{
  return MEMORY[0x270EFF6F8]();
}

uint64_t sub_22EE7CA70()
{
  return MEMORY[0x270EFF708]();
}

uint64_t sub_22EE7CA80()
{
  return MEMORY[0x270EFF718]();
}

uint64_t sub_22EE7CA90()
{
  return MEMORY[0x270EFF728]();
}

uint64_t sub_22EE7CAA0()
{
  return MEMORY[0x270EFF738]();
}

uint64_t sub_22EE7CAB0()
{
  return MEMORY[0x270EFF750]();
}

uint64_t sub_22EE7CAC0()
{
  return MEMORY[0x270EFF758]();
}

uint64_t sub_22EE7CAD0()
{
  return MEMORY[0x270EFF7C8]();
}

uint64_t sub_22EE7CAE0()
{
  return MEMORY[0x270EFF7D0]();
}

uint64_t sub_22EE7CAF0()
{
  return MEMORY[0x270EFF7D8]();
}

uint64_t sub_22EE7CB00()
{
  return MEMORY[0x270EFF7E0]();
}

uint64_t sub_22EE7CB10()
{
  return MEMORY[0x270EFF7E8]();
}

uint64_t sub_22EE7CB20()
{
  return MEMORY[0x270EFF7F0]();
}

uint64_t sub_22EE7CB30()
{
  return MEMORY[0x270EFF7F8]();
}

uint64_t sub_22EE7CB40()
{
  return MEMORY[0x270EFF808]();
}

uint64_t sub_22EE7CB50()
{
  return MEMORY[0x270EFF818]();
}

uint64_t sub_22EE7CB60()
{
  return MEMORY[0x270EFF838]();
}

uint64_t sub_22EE7CB70()
{
  return MEMORY[0x270EFF850]();
}

uint64_t sub_22EE7CB80()
{
  return MEMORY[0x270EFF888]();
}

uint64_t sub_22EE7CB90()
{
  return MEMORY[0x270EFF898]();
}

uint64_t sub_22EE7CBA0()
{
  return MEMORY[0x270EFF8A0]();
}

uint64_t sub_22EE7CBC0()
{
  return MEMORY[0x270EFF900]();
}

uint64_t sub_22EE7CBD0()
{
  return MEMORY[0x270EFF908]();
}

uint64_t sub_22EE7CBE0()
{
  return MEMORY[0x270EFF918]();
}

uint64_t sub_22EE7CBF0()
{
  return MEMORY[0x270EFF920]();
}

uint64_t sub_22EE7CC00()
{
  return MEMORY[0x270EFF940]();
}

uint64_t sub_22EE7CC10()
{
  return MEMORY[0x270EFF9A0]();
}

uint64_t sub_22EE7CC30()
{
  return MEMORY[0x270EFFA08]();
}

uint64_t sub_22EE7CC40()
{
  return MEMORY[0x270EFFA10]();
}

uint64_t sub_22EE7CC50()
{
  return MEMORY[0x270EFFA18]();
}

uint64_t sub_22EE7CC60()
{
  return MEMORY[0x270EFFA58]();
}

uint64_t sub_22EE7CC70()
{
  return MEMORY[0x270EFFA68]();
}

uint64_t sub_22EE7CC80()
{
  return MEMORY[0x270EFFAC0]();
}

uint64_t sub_22EE7CC90()
{
  return MEMORY[0x270EFFB00]();
}

uint64_t sub_22EE7CCA0()
{
  return MEMORY[0x270EFFB58]();
}

uint64_t sub_22EE7CCB0()
{
  return MEMORY[0x270EFFB80]();
}

uint64_t sub_22EE7CCC0()
{
  return MEMORY[0x270EFFC00]();
}

uint64_t sub_22EE7CCD0()
{
  return MEMORY[0x270EFFC18]();
}

uint64_t sub_22EE7CCE0()
{
  return MEMORY[0x270EFFC20]();
}

uint64_t sub_22EE7CCF0()
{
  return MEMORY[0x270EFFC28]();
}

uint64_t sub_22EE7CD00()
{
  return MEMORY[0x270EFFC40]();
}

uint64_t sub_22EE7CD10()
{
  return MEMORY[0x270EFFC50]();
}

uint64_t sub_22EE7CD20()
{
  return MEMORY[0x270EFFC58]();
}

uint64_t sub_22EE7CD30()
{
  return MEMORY[0x270EFFC68]();
}

uint64_t sub_22EE7CD40()
{
  return MEMORY[0x270EFFC70]();
}

uint64_t sub_22EE7CD50()
{
  return MEMORY[0x270EFFCB0]();
}

uint64_t sub_22EE7CD60()
{
  return MEMORY[0x270EFFCB8]();
}

uint64_t sub_22EE7CD70()
{
  return MEMORY[0x270EFFCD8]();
}

uint64_t sub_22EE7CD80()
{
  return MEMORY[0x270EFFCF8]();
}

uint64_t sub_22EE7CD90()
{
  return MEMORY[0x270EFFD10]();
}

uint64_t sub_22EE7CDA0()
{
  return MEMORY[0x270EFFD18]();
}

uint64_t sub_22EE7CDC0()
{
  return MEMORY[0x270EFFD40]();
}

uint64_t sub_22EE7CDD0()
{
  return MEMORY[0x270EFFD48]();
}

uint64_t sub_22EE7CDE0()
{
  return MEMORY[0x270EFFD58]();
}

uint64_t sub_22EE7CDF0()
{
  return MEMORY[0x270EFFD60]();
}

uint64_t sub_22EE7CE00()
{
  return MEMORY[0x270EFFD68]();
}

uint64_t sub_22EE7CE10()
{
  return MEMORY[0x270EFFDD8]();
}

uint64_t sub_22EE7CE20()
{
  return MEMORY[0x270EFFE10]();
}

uint64_t sub_22EE7CE30()
{
  return MEMORY[0x270EFFE18]();
}

uint64_t sub_22EE7CE40()
{
  return MEMORY[0x270EFFE20]();
}

uint64_t sub_22EE7CE60()
{
  return MEMORY[0x270EFFE90]();
}

uint64_t sub_22EE7CE70()
{
  return MEMORY[0x270EFFEA8]();
}

uint64_t sub_22EE7CE80()
{
  return MEMORY[0x270EFFEB0]();
}

uint64_t sub_22EE7CE90()
{
  return MEMORY[0x270EFFEE0]();
}

uint64_t sub_22EE7CEA0()
{
  return MEMORY[0x270F00048]();
}

uint64_t sub_22EE7CEB0()
{
  return MEMORY[0x270F00060]();
}

uint64_t sub_22EE7CEC0()
{
  return MEMORY[0x270F00120]();
}

uint64_t sub_22EE7CED0()
{
  return MEMORY[0x270F00138]();
}

uint64_t sub_22EE7CEE0()
{
  return MEMORY[0x270F001A8]();
}

uint64_t sub_22EE7CEF0()
{
  return MEMORY[0x270F001D0]();
}

uint64_t sub_22EE7CF00()
{
  return MEMORY[0x270F001D8]();
}

uint64_t sub_22EE7CF10()
{
  return MEMORY[0x270F00220]();
}

uint64_t sub_22EE7CF20()
{
  return MEMORY[0x270F00230]();
}

uint64_t sub_22EE7CF30()
{
  return MEMORY[0x270F00300]();
}

uint64_t sub_22EE7CF40()
{
  return MEMORY[0x270F00340]();
}

uint64_t sub_22EE7CF50()
{
  return MEMORY[0x270F00458]();
}

uint64_t sub_22EE7CF60()
{
  return MEMORY[0x270F00460]();
}

uint64_t sub_22EE7CF70()
{
  return MEMORY[0x270F00468]();
}

uint64_t sub_22EE7CF80()
{
  return MEMORY[0x270F004D0]();
}

uint64_t sub_22EE7CF90()
{
  return MEMORY[0x270F004E8]();
}

uint64_t sub_22EE7CFA0()
{
  return MEMORY[0x270F00538]();
}

uint64_t sub_22EE7CFB0()
{
  return MEMORY[0x270F00560]();
}

uint64_t sub_22EE7CFC0()
{
  return MEMORY[0x270F00578]();
}

uint64_t sub_22EE7CFD0()
{
  return MEMORY[0x270F00588]();
}

uint64_t sub_22EE7CFE0()
{
  return MEMORY[0x270F00590]();
}

uint64_t sub_22EE7CFF0()
{
  return MEMORY[0x270F00598]();
}

uint64_t sub_22EE7D000()
{
  return MEMORY[0x270F00688]();
}

uint64_t sub_22EE7D010()
{
  return MEMORY[0x270F00698]();
}

uint64_t sub_22EE7D020()
{
  return MEMORY[0x270F006A0]();
}

uint64_t sub_22EE7D030()
{
  return MEMORY[0x270F006A8]();
}

uint64_t sub_22EE7D040()
{
  return MEMORY[0x270F006C8]();
}

uint64_t sub_22EE7D050()
{
  return MEMORY[0x270F006D0]();
}

uint64_t sub_22EE7D060()
{
  return MEMORY[0x270F006E0]();
}

uint64_t sub_22EE7D070()
{
  return MEMORY[0x270F006E8]();
}

uint64_t sub_22EE7D080()
{
  return MEMORY[0x270F006F0]();
}

uint64_t sub_22EE7D090()
{
  return MEMORY[0x270F00718]();
}

uint64_t sub_22EE7D0A0()
{
  return MEMORY[0x270F00720]();
}

uint64_t sub_22EE7D0B0()
{
  return MEMORY[0x270F00738]();
}

uint64_t sub_22EE7D0C0()
{
  return MEMORY[0x270F007E8]();
}

uint64_t sub_22EE7D0D0()
{
  return MEMORY[0x270F007F0]();
}

uint64_t sub_22EE7D0E0()
{
  return MEMORY[0x270F007F8]();
}

uint64_t sub_22EE7D0F0()
{
  return MEMORY[0x270F00810]();
}

uint64_t sub_22EE7D100()
{
  return MEMORY[0x270F00850]();
}

uint64_t sub_22EE7D110()
{
  return MEMORY[0x270F00858]();
}

uint64_t sub_22EE7D120()
{
  return MEMORY[0x270F00860]();
}

uint64_t sub_22EE7D130()
{
  return MEMORY[0x270F00868]();
}

uint64_t sub_22EE7D140()
{
  return MEMORY[0x270F00898]();
}

uint64_t sub_22EE7D150()
{
  return MEMORY[0x270F008D0]();
}

uint64_t sub_22EE7D160()
{
  return MEMORY[0x270F008D8]();
}

uint64_t sub_22EE7D170()
{
  return MEMORY[0x270F008F8]();
}

uint64_t sub_22EE7D180()
{
  return MEMORY[0x270F00908]();
}

uint64_t sub_22EE7D190()
{
  return MEMORY[0x270F00910]();
}

uint64_t sub_22EE7D1A0()
{
  return MEMORY[0x270F00940]();
}

uint64_t sub_22EE7D1B0()
{
  return MEMORY[0x270F00948]();
}

uint64_t sub_22EE7D1C0()
{
  return MEMORY[0x270F00960]();
}

uint64_t sub_22EE7D1D0()
{
  return MEMORY[0x270F00970]();
}

uint64_t sub_22EE7D1E0()
{
  return MEMORY[0x270F009C0]();
}

uint64_t sub_22EE7D1F0()
{
  return MEMORY[0x270F009C8]();
}

uint64_t sub_22EE7D200()
{
  return MEMORY[0x270F009E0]();
}

uint64_t sub_22EE7D210()
{
  return MEMORY[0x270F009E8]();
}

uint64_t sub_22EE7D220()
{
  return MEMORY[0x270F00A00]();
}

uint64_t sub_22EE7D230()
{
  return MEMORY[0x270F00A18]();
}

uint64_t sub_22EE7D240()
{
  return MEMORY[0x270F00A78]();
}

uint64_t sub_22EE7D250()
{
  return MEMORY[0x270F00A88]();
}

uint64_t sub_22EE7D260()
{
  return MEMORY[0x270F00AC8]();
}

uint64_t sub_22EE7D270()
{
  return MEMORY[0x270F00AD0]();
}

uint64_t sub_22EE7D280()
{
  return MEMORY[0x270F00AE8]();
}

uint64_t sub_22EE7D290()
{
  return MEMORY[0x270F00B18]();
}

uint64_t sub_22EE7D2A0()
{
  return MEMORY[0x270F00B20]();
}

uint64_t sub_22EE7D2B0()
{
  return MEMORY[0x270F00B78]();
}

uint64_t sub_22EE7D2C0()
{
  return MEMORY[0x270F00B80]();
}

uint64_t sub_22EE7D2D0()
{
  return MEMORY[0x270F00BC8]();
}

uint64_t sub_22EE7D2E0()
{
  return MEMORY[0x270F00BD8]();
}

uint64_t sub_22EE7D2F0()
{
  return MEMORY[0x270F00BE0]();
}

uint64_t sub_22EE7D300()
{
  return MEMORY[0x270F00BE8]();
}

uint64_t sub_22EE7D310()
{
  return MEMORY[0x270F00C78]();
}

uint64_t sub_22EE7D320()
{
  return MEMORY[0x270F00C88]();
}

uint64_t sub_22EE7D330()
{
  return MEMORY[0x270F00D10]();
}

uint64_t sub_22EE7D340()
{
  return MEMORY[0x270F00D18]();
}

uint64_t sub_22EE7D350()
{
  return MEMORY[0x270F00D20]();
}

uint64_t sub_22EE7D360()
{
  return MEMORY[0x270F00D50]();
}

uint64_t sub_22EE7D370()
{
  return MEMORY[0x270F00D80]();
}

uint64_t sub_22EE7D380()
{
  return MEMORY[0x270F00D90]();
}

uint64_t sub_22EE7D390()
{
  return MEMORY[0x270F00DA8]();
}

uint64_t sub_22EE7D3A0()
{
  return MEMORY[0x270F00DB8]();
}

uint64_t sub_22EE7D3B0()
{
  return MEMORY[0x270F00DC0]();
}

uint64_t sub_22EE7D3C0()
{
  return MEMORY[0x270F00DE8]();
}

uint64_t sub_22EE7D3D0()
{
  return MEMORY[0x270F00DF0]();
}

uint64_t sub_22EE7D3E0()
{
  return MEMORY[0x270F00E00]();
}

uint64_t sub_22EE7D3F0()
{
  return MEMORY[0x270F00E38]();
}

uint64_t sub_22EE7D400()
{
  return MEMORY[0x270F00E40]();
}

uint64_t sub_22EE7D410()
{
  return MEMORY[0x270F00E50]();
}

uint64_t sub_22EE7D420()
{
  return MEMORY[0x270F00E68]();
}

uint64_t sub_22EE7D430()
{
  return MEMORY[0x270F00E88]();
}

uint64_t sub_22EE7D440()
{
  return MEMORY[0x270F00E98]();
}

uint64_t sub_22EE7D450()
{
  return MEMORY[0x270F00EB8]();
}

uint64_t sub_22EE7D460()
{
  return MEMORY[0x270F00EC0]();
}

uint64_t sub_22EE7D470()
{
  return MEMORY[0x270F00ED8]();
}

uint64_t sub_22EE7D480()
{
  return MEMORY[0x270F00EE0]();
}

uint64_t sub_22EE7D490()
{
  return MEMORY[0x270F00EF0]();
}

uint64_t sub_22EE7D4A0()
{
  return MEMORY[0x270F00F00]();
}

uint64_t sub_22EE7D4B0()
{
  return MEMORY[0x270F00F10]();
}

uint64_t sub_22EE7D4C0()
{
  return MEMORY[0x270F00F20]();
}

uint64_t sub_22EE7D4D0()
{
  return MEMORY[0x270F00F88]();
}

uint64_t sub_22EE7D4E0()
{
  return MEMORY[0x270F00FB0]();
}

uint64_t sub_22EE7D4F0()
{
  return MEMORY[0x270F01038]();
}

uint64_t sub_22EE7D500()
{
  return MEMORY[0x270F01040]();
}

uint64_t sub_22EE7D510()
{
  return MEMORY[0x270F01050]();
}

uint64_t sub_22EE7D520()
{
  return MEMORY[0x270F01060]();
}

uint64_t sub_22EE7D530()
{
  return MEMORY[0x270F01070]();
}

uint64_t sub_22EE7D540()
{
  return MEMORY[0x270F01198]();
}

uint64_t sub_22EE7D550()
{
  return MEMORY[0x270F011A0]();
}

uint64_t sub_22EE7D560()
{
  return MEMORY[0x270F01228]();
}

uint64_t sub_22EE7D570()
{
  return MEMORY[0x270F01238]();
}

uint64_t sub_22EE7D580()
{
  return MEMORY[0x270F01248]();
}

uint64_t sub_22EE7D590()
{
  return MEMORY[0x270F01258]();
}

uint64_t sub_22EE7D5A0()
{
  return MEMORY[0x270F01270]();
}

uint64_t sub_22EE7D5B0()
{
  return MEMORY[0x270F01280]();
}

uint64_t sub_22EE7D5C0()
{
  return MEMORY[0x270F01288]();
}

uint64_t sub_22EE7D5D0()
{
  return MEMORY[0x270F01290]();
}

uint64_t sub_22EE7D5E0()
{
  return MEMORY[0x270F01358]();
}

uint64_t sub_22EE7D5F0()
{
  return MEMORY[0x270F01360]();
}

uint64_t sub_22EE7D600()
{
  return MEMORY[0x270F01368]();
}

uint64_t sub_22EE7D610()
{
  return MEMORY[0x270F01380]();
}

uint64_t sub_22EE7D620()
{
  return MEMORY[0x270F01388]();
}

uint64_t sub_22EE7D630()
{
  return MEMORY[0x270F01390]();
}

uint64_t sub_22EE7D640()
{
  return MEMORY[0x270F013D0]();
}

uint64_t sub_22EE7D650()
{
  return MEMORY[0x270F01430]();
}

uint64_t sub_22EE7D660()
{
  return MEMORY[0x270F01460]();
}

uint64_t sub_22EE7D670()
{
  return MEMORY[0x270F01510]();
}

uint64_t sub_22EE7D680()
{
  return MEMORY[0x270F01520]();
}

uint64_t sub_22EE7D690()
{
  return MEMORY[0x270F01528]();
}

uint64_t sub_22EE7D6A0()
{
  return MEMORY[0x270F01538]();
}

uint64_t sub_22EE7D6B0()
{
  return MEMORY[0x270F01608]();
}

uint64_t sub_22EE7D6C0()
{
  return MEMORY[0x270F01610]();
}

uint64_t sub_22EE7D6D0()
{
  return MEMORY[0x270F01618]();
}

uint64_t sub_22EE7D6E0()
{
  return MEMORY[0x270F01630]();
}

uint64_t sub_22EE7D6F0()
{
  return MEMORY[0x270F01648]();
}

uint64_t sub_22EE7D700()
{
  return MEMORY[0x270F01678]();
}

uint64_t sub_22EE7D710()
{
  return MEMORY[0x270F016A0]();
}

uint64_t sub_22EE7D720()
{
  return MEMORY[0x270F016E0]();
}

uint64_t sub_22EE7D730()
{
  return MEMORY[0x270F016F8]();
}

uint64_t sub_22EE7D740()
{
  return MEMORY[0x270F01708]();
}

uint64_t sub_22EE7D760()
{
  return MEMORY[0x270F01728]();
}

uint64_t sub_22EE7D770()
{
  return MEMORY[0x270F01738]();
}

uint64_t sub_22EE7D780()
{
  return MEMORY[0x270F01748]();
}

uint64_t sub_22EE7D790()
{
  return MEMORY[0x270F01758]();
}

uint64_t sub_22EE7D7A0()
{
  return MEMORY[0x270F01768]();
}

uint64_t sub_22EE7D7B0()
{
  return MEMORY[0x270F01778]();
}

uint64_t sub_22EE7D7D0()
{
  return MEMORY[0x270F01790]();
}

uint64_t sub_22EE7D7E0()
{
  return MEMORY[0x270F017E8]();
}

uint64_t sub_22EE7D7F0()
{
  return MEMORY[0x270F017F8]();
}

uint64_t sub_22EE7D800()
{
  return MEMORY[0x270F01800]();
}

uint64_t sub_22EE7D810()
{
  return MEMORY[0x270F01818]();
}

uint64_t sub_22EE7D820()
{
  return MEMORY[0x270F01838]();
}

uint64_t sub_22EE7D830()
{
  return MEMORY[0x270F018A8]();
}

uint64_t sub_22EE7D840()
{
  return MEMORY[0x270F018F0]();
}

uint64_t sub_22EE7D850()
{
  return MEMORY[0x270F01938]();
}

uint64_t sub_22EE7D860()
{
  return MEMORY[0x270F01940]();
}

uint64_t sub_22EE7D870()
{
  return MEMORY[0x270F01950]();
}

uint64_t sub_22EE7D880()
{
  return MEMORY[0x270F019C0]();
}

uint64_t sub_22EE7D890()
{
  return MEMORY[0x270F019C8]();
}

uint64_t sub_22EE7D8A0()
{
  return MEMORY[0x270F019D0]();
}

uint64_t sub_22EE7D8B0()
{
  return MEMORY[0x270F019D8]();
}

uint64_t sub_22EE7D8C0()
{
  return MEMORY[0x270F019E0]();
}

uint64_t sub_22EE7D8D0()
{
  return MEMORY[0x270F019E8]();
}

uint64_t sub_22EE7D8E0()
{
  return MEMORY[0x270F019F0]();
}

uint64_t sub_22EE7D8F0()
{
  return MEMORY[0x270F01A10]();
}

uint64_t sub_22EE7D900()
{
  return MEMORY[0x270F01A18]();
}

uint64_t sub_22EE7D910()
{
  return MEMORY[0x270F01A78]();
}

uint64_t sub_22EE7D920()
{
  return MEMORY[0x270F01AE0]();
}

uint64_t sub_22EE7D930()
{
  return MEMORY[0x270F01B20]();
}

uint64_t sub_22EE7D940()
{
  return MEMORY[0x270F01B30]();
}

uint64_t sub_22EE7D950()
{
  return MEMORY[0x270F01BA0]();
}

uint64_t sub_22EE7D960()
{
  return MEMORY[0x270F01BB0]();
}

uint64_t sub_22EE7D970()
{
  return MEMORY[0x270F01BB8]();
}

uint64_t sub_22EE7D980()
{
  return MEMORY[0x270F01C30]();
}

uint64_t sub_22EE7D990()
{
  return MEMORY[0x270F01C48]();
}

uint64_t sub_22EE7D9A0()
{
  return MEMORY[0x270F01C68]();
}

uint64_t sub_22EE7D9B0()
{
  return MEMORY[0x270F01CB0]();
}

uint64_t sub_22EE7D9C0()
{
  return MEMORY[0x270F01CD8]();
}

uint64_t sub_22EE7D9D0()
{
  return MEMORY[0x270F01CF8]();
}

uint64_t sub_22EE7D9E0()
{
  return MEMORY[0x270F01D00]();
}

uint64_t sub_22EE7D9F0()
{
  return MEMORY[0x270F01D10]();
}

uint64_t sub_22EE7DA00()
{
  return MEMORY[0x270F01D20]();
}

uint64_t sub_22EE7DA10()
{
  return MEMORY[0x270F01D30]();
}

uint64_t sub_22EE7DA20()
{
  return MEMORY[0x270F01D38]();
}

uint64_t sub_22EE7DA30()
{
  return MEMORY[0x270F01DA0]();
}

uint64_t sub_22EE7DA40()
{
  return MEMORY[0x270F01DF0]();
}

uint64_t sub_22EE7DA50()
{
  return MEMORY[0x270F01DF8]();
}

uint64_t sub_22EE7DA60()
{
  return MEMORY[0x270F01E68]();
}

uint64_t sub_22EE7DA70()
{
  return MEMORY[0x270F01E88]();
}

uint64_t sub_22EE7DA80()
{
  return MEMORY[0x270F01E90]();
}

uint64_t sub_22EE7DA90()
{
  return MEMORY[0x270F01F80]();
}

uint64_t sub_22EE7DAA0()
{
  return MEMORY[0x270F01F90]();
}

uint64_t sub_22EE7DAB0()
{
  return MEMORY[0x270F01FF8]();
}

uint64_t sub_22EE7DAC0()
{
  return MEMORY[0x270F02000]();
}

uint64_t sub_22EE7DAD0()
{
  return MEMORY[0x270F02008]();
}

uint64_t sub_22EE7DAE0()
{
  return MEMORY[0x270F02010]();
}

uint64_t sub_22EE7DAF0()
{
  return MEMORY[0x270F02060]();
}

uint64_t sub_22EE7DB00()
{
  return MEMORY[0x270F02068]();
}

uint64_t sub_22EE7DB10()
{
  return MEMORY[0x270F02070]();
}

uint64_t sub_22EE7DB20()
{
  return MEMORY[0x270F02080]();
}

uint64_t sub_22EE7DB30()
{
  return MEMORY[0x270F02088]();
}

uint64_t sub_22EE7DB40()
{
  return MEMORY[0x270F02090]();
}

uint64_t sub_22EE7DB50()
{
  return MEMORY[0x270F020C8]();
}

uint64_t sub_22EE7DB60()
{
  return MEMORY[0x270F020E8]();
}

uint64_t sub_22EE7DB70()
{
  return MEMORY[0x270F020F0]();
}

uint64_t sub_22EE7DB80()
{
  return MEMORY[0x270F02100]();
}

uint64_t sub_22EE7DB90()
{
  return MEMORY[0x270F02120]();
}

uint64_t sub_22EE7DBA0()
{
  return MEMORY[0x270F02128]();
}

uint64_t sub_22EE7DBB0()
{
  return MEMORY[0x270F02230]();
}

uint64_t sub_22EE7DBC0()
{
  return MEMORY[0x270F02318]();
}

uint64_t sub_22EE7DBD0()
{
  return MEMORY[0x270F02330]();
}

uint64_t sub_22EE7DBE0()
{
  return MEMORY[0x270F02350]();
}

uint64_t sub_22EE7DBF0()
{
  return MEMORY[0x270F02370]();
}

uint64_t sub_22EE7DC00()
{
  return MEMORY[0x270F02380]();
}

uint64_t sub_22EE7DC10()
{
  return MEMORY[0x270F02390]();
}

uint64_t sub_22EE7DC20()
{
  return MEMORY[0x270F023A0]();
}

uint64_t sub_22EE7DC30()
{
  return MEMORY[0x270F02418]();
}

uint64_t sub_22EE7DC40()
{
  return MEMORY[0x270F02420]();
}

uint64_t sub_22EE7DC50()
{
  return MEMORY[0x270F025C8]();
}

uint64_t sub_22EE7DC60()
{
  return MEMORY[0x270F025E0]();
}

uint64_t sub_22EE7DC80()
{
  return MEMORY[0x270F02660]();
}

uint64_t sub_22EE7DCA0()
{
  return MEMORY[0x270F02670]();
}

uint64_t sub_22EE7DCB0()
{
  return MEMORY[0x270F02678]();
}

uint64_t sub_22EE7DCC0()
{
  return MEMORY[0x270F02680]();
}

uint64_t sub_22EE7DCD0()
{
  return MEMORY[0x270F02690]();
}

uint64_t sub_22EE7DCE0()
{
  return MEMORY[0x270F02698]();
}

uint64_t sub_22EE7DCF0()
{
  return MEMORY[0x270F026A0]();
}

uint64_t sub_22EE7DD00()
{
  return MEMORY[0x270F026B0]();
}

uint64_t sub_22EE7DD10()
{
  return MEMORY[0x270F026C8]();
}

uint64_t sub_22EE7DD30()
{
  return MEMORY[0x270F026E0]();
}

uint64_t sub_22EE7DD40()
{
  return MEMORY[0x270F026F0]();
}

uint64_t sub_22EE7DD50()
{
  return MEMORY[0x270F02700]();
}

uint64_t sub_22EE7DD70()
{
  return MEMORY[0x270F02728]();
}

uint64_t sub_22EE7DD80()
{
  return MEMORY[0x270F02790]();
}

uint64_t sub_22EE7DD90()
{
  return MEMORY[0x270F027A8]();
}

uint64_t sub_22EE7DDA0()
{
  return MEMORY[0x270F027D8]();
}

uint64_t sub_22EE7DDB0()
{
  return MEMORY[0x270F027E0]();
}

uint64_t sub_22EE7DDC0()
{
  return MEMORY[0x270F027E8]();
}

uint64_t sub_22EE7DDD0()
{
  return MEMORY[0x270F027F0]();
}

uint64_t sub_22EE7DDE0()
{
  return MEMORY[0x270F02920]();
}

uint64_t sub_22EE7DDF0()
{
  return MEMORY[0x270F02948]();
}

uint64_t sub_22EE7DE00()
{
  return MEMORY[0x270F02950]();
}

uint64_t sub_22EE7DE10()
{
  return MEMORY[0x270F029E0]();
}

uint64_t sub_22EE7DE20()
{
  return MEMORY[0x270F029F0]();
}

uint64_t sub_22EE7DE30()
{
  return MEMORY[0x270F029F8]();
}

uint64_t sub_22EE7DE40()
{
  return MEMORY[0x270F02A00]();
}

uint64_t sub_22EE7DE50()
{
  return MEMORY[0x270F02A10]();
}

uint64_t sub_22EE7DE60()
{
  return MEMORY[0x270F02A20]();
}

uint64_t sub_22EE7DE70()
{
  return MEMORY[0x270F02A30]();
}

uint64_t sub_22EE7DE80()
{
  return MEMORY[0x270F02A38]();
}

uint64_t sub_22EE7DE90()
{
  return MEMORY[0x270F02A48]();
}

uint64_t sub_22EE7DEA0()
{
  return MEMORY[0x270F02A60]();
}

uint64_t sub_22EE7DEB0()
{
  return MEMORY[0x270F02A68]();
}

uint64_t sub_22EE7DEC0()
{
  return MEMORY[0x270F02A78]();
}

uint64_t sub_22EE7DED0()
{
  return MEMORY[0x270F02A90]();
}

uint64_t sub_22EE7DEE0()
{
  return MEMORY[0x270F02AA8]();
}

uint64_t sub_22EE7DEF0()
{
  return MEMORY[0x270F02AD0]();
}

uint64_t sub_22EE7DF00()
{
  return MEMORY[0x270F02AE8]();
}

uint64_t sub_22EE7DF10()
{
  return MEMORY[0x270F02B48]();
}

uint64_t sub_22EE7DF20()
{
  return MEMORY[0x270F02B50]();
}

uint64_t sub_22EE7DF30()
{
  return MEMORY[0x270F02B90]();
}

uint64_t sub_22EE7DF40()
{
  return MEMORY[0x270F02BA8]();
}

uint64_t sub_22EE7DF50()
{
  return MEMORY[0x270F02BC0]();
}

uint64_t sub_22EE7DF60()
{
  return MEMORY[0x270F02BF8]();
}

uint64_t sub_22EE7DF70()
{
  return MEMORY[0x270F02C00]();
}

uint64_t sub_22EE7DF80()
{
  return MEMORY[0x270F02C10]();
}

uint64_t sub_22EE7DF90()
{
  return MEMORY[0x270F02C40]();
}

uint64_t sub_22EE7DFA0()
{
  return MEMORY[0x270F02C68]();
}

uint64_t sub_22EE7DFB0()
{
  return MEMORY[0x270F02C70]();
}

uint64_t sub_22EE7DFC0()
{
  return MEMORY[0x270F02C88]();
}

uint64_t sub_22EE7DFD0()
{
  return MEMORY[0x270F02C98]();
}

uint64_t sub_22EE7DFE0()
{
  return MEMORY[0x270F02CB0]();
}

uint64_t sub_22EE7DFF0()
{
  return MEMORY[0x270F02CC0]();
}

uint64_t sub_22EE7E000()
{
  return MEMORY[0x270F02CD0]();
}

uint64_t sub_22EE7E010()
{
  return MEMORY[0x270F02CE8]();
}

uint64_t sub_22EE7E020()
{
  return MEMORY[0x270F02CF8]();
}

uint64_t sub_22EE7E030()
{
  return MEMORY[0x270F02D08]();
}

uint64_t sub_22EE7E040()
{
  return MEMORY[0x270F02D10]();
}

uint64_t sub_22EE7E050()
{
  return MEMORY[0x270F02D30]();
}

uint64_t sub_22EE7E060()
{
  return MEMORY[0x270F02E48]();
}

uint64_t sub_22EE7E070()
{
  return MEMORY[0x270F02E50]();
}

uint64_t sub_22EE7E080()
{
  return MEMORY[0x270F02EB0]();
}

uint64_t sub_22EE7E090()
{
  return MEMORY[0x270F02EE8]();
}

uint64_t sub_22EE7E0A0()
{
  return MEMORY[0x270F02F28]();
}

uint64_t sub_22EE7E0B0()
{
  return MEMORY[0x270F03010]();
}

uint64_t sub_22EE7E0C0()
{
  return MEMORY[0x270F03048]();
}

uint64_t sub_22EE7E0D0()
{
  return MEMORY[0x270F03060]();
}

uint64_t sub_22EE7E0E0()
{
  return MEMORY[0x270F03088]();
}

uint64_t sub_22EE7E0F0()
{
  return MEMORY[0x270F030A8]();
}

uint64_t sub_22EE7E100()
{
  return MEMORY[0x270F031D8]();
}

uint64_t sub_22EE7E110()
{
  return MEMORY[0x270F031E0]();
}

uint64_t sub_22EE7E120()
{
  return MEMORY[0x270F03228]();
}

uint64_t sub_22EE7E130()
{
  return MEMORY[0x270F03238]();
}

uint64_t sub_22EE7E140()
{
  return MEMORY[0x270F03248]();
}

uint64_t sub_22EE7E150()
{
  return MEMORY[0x270F03250]();
}

uint64_t sub_22EE7E160()
{
  return MEMORY[0x270F87720]();
}

uint64_t sub_22EE7E170()
{
  return MEMORY[0x270F032C0]();
}

uint64_t sub_22EE7E180()
{
  return MEMORY[0x270F032D0]();
}

uint64_t sub_22EE7E190()
{
  return MEMORY[0x270F03310]();
}

uint64_t sub_22EE7E1A0()
{
  return MEMORY[0x270F03338]();
}

uint64_t sub_22EE7E1B0()
{
  return MEMORY[0x270F03360]();
}

uint64_t sub_22EE7E1C0()
{
  return MEMORY[0x270F03388]();
}

uint64_t sub_22EE7E1D0()
{
  return MEMORY[0x270F033B0]();
}

uint64_t sub_22EE7E1E0()
{
  return MEMORY[0x270F03400]();
}

uint64_t sub_22EE7E1F0()
{
  return MEMORY[0x270F03428]();
}

uint64_t sub_22EE7E200()
{
  return MEMORY[0x270F03438]();
}

uint64_t sub_22EE7E210()
{
  return MEMORY[0x270F03448]();
}

uint64_t sub_22EE7E220()
{
  return MEMORY[0x270F034A0]();
}

uint64_t sub_22EE7E230()
{
  return MEMORY[0x270F034B0]();
}

uint64_t sub_22EE7E240()
{
  return MEMORY[0x270F034C0]();
}

uint64_t sub_22EE7E250()
{
  return MEMORY[0x270F034E8]();
}

uint64_t sub_22EE7E260()
{
  return MEMORY[0x270F034F0]();
}

uint64_t sub_22EE7E270()
{
  return MEMORY[0x270F03520]();
}

uint64_t sub_22EE7E280()
{
  return MEMORY[0x270F03560]();
}

uint64_t sub_22EE7E290()
{
  return MEMORY[0x270F03568]();
}

uint64_t sub_22EE7E2A0()
{
  return MEMORY[0x270F03580]();
}

uint64_t sub_22EE7E2B0()
{
  return MEMORY[0x270F03588]();
}

uint64_t sub_22EE7E2C0()
{
  return MEMORY[0x270F03690]();
}

uint64_t sub_22EE7E2D0()
{
  return MEMORY[0x270F036A8]();
}

uint64_t sub_22EE7E2E0()
{
  return MEMORY[0x270F036B0]();
}

uint64_t sub_22EE7E2F0()
{
  return MEMORY[0x270F036C0]();
}

uint64_t sub_22EE7E300()
{
  return MEMORY[0x270F036D8]();
}

uint64_t sub_22EE7E310()
{
  return MEMORY[0x270F03708]();
}

uint64_t sub_22EE7E320()
{
  return MEMORY[0x270F03738]();
}

uint64_t sub_22EE7E330()
{
  return MEMORY[0x270F03778]();
}

uint64_t sub_22EE7E340()
{
  return MEMORY[0x270F03788]();
}

uint64_t sub_22EE7E350()
{
  return MEMORY[0x270F03790]();
}

uint64_t sub_22EE7E360()
{
  return MEMORY[0x270F037B0]();
}

uint64_t sub_22EE7E370()
{
  return MEMORY[0x270F03868]();
}

uint64_t sub_22EE7E380()
{
  return MEMORY[0x270F038A8]();
}

uint64_t sub_22EE7E390()
{
  return MEMORY[0x270F038B0]();
}

uint64_t sub_22EE7E3A0()
{
  return MEMORY[0x270F038D0]();
}

uint64_t sub_22EE7E3B0()
{
  return MEMORY[0x270F038D8]();
}

uint64_t sub_22EE7E3C0()
{
  return MEMORY[0x270F039A0]();
}

uint64_t sub_22EE7E3D0()
{
  return MEMORY[0x270F03A88]();
}

uint64_t sub_22EE7E3E0()
{
  return MEMORY[0x270F03AB0]();
}

uint64_t sub_22EE7E3F0()
{
  return MEMORY[0x270F03AC0]();
}

uint64_t sub_22EE7E400()
{
  return MEMORY[0x270F03B00]();
}

uint64_t sub_22EE7E410()
{
  return MEMORY[0x270F03BC0]();
}

uint64_t sub_22EE7E420()
{
  return MEMORY[0x270F03BE0]();
}

uint64_t sub_22EE7E430()
{
  return MEMORY[0x270F03BE8]();
}

uint64_t sub_22EE7E440()
{
  return MEMORY[0x270F03C30]();
}

uint64_t sub_22EE7E450()
{
  return MEMORY[0x270F03C40]();
}

uint64_t sub_22EE7E460()
{
  return MEMORY[0x270F03C48]();
}

uint64_t sub_22EE7E470()
{
  return MEMORY[0x270F03C78]();
}

uint64_t sub_22EE7E480()
{
  return MEMORY[0x270F03CC0]();
}

uint64_t sub_22EE7E490()
{
  return MEMORY[0x270F03CE0]();
}

uint64_t sub_22EE7E4A0()
{
  return MEMORY[0x270F03CE8]();
}

uint64_t sub_22EE7E4B0()
{
  return MEMORY[0x270F03CF8]();
}

uint64_t sub_22EE7E4C0()
{
  return MEMORY[0x270F03D30]();
}

uint64_t sub_22EE7E4D0()
{
  return MEMORY[0x270F03D80]();
}

uint64_t sub_22EE7E4E0()
{
  return MEMORY[0x270F03D88]();
}

uint64_t sub_22EE7E4F0()
{
  return MEMORY[0x270F03DB8]();
}

uint64_t sub_22EE7E500()
{
  return MEMORY[0x270F03DD0]();
}

uint64_t sub_22EE7E510()
{
  return MEMORY[0x270F03E10]();
}

uint64_t sub_22EE7E520()
{
  return MEMORY[0x270F03E60]();
}

uint64_t sub_22EE7E530()
{
  return MEMORY[0x270F03E80]();
}

uint64_t sub_22EE7E540()
{
  return MEMORY[0x270F03ED8]();
}

uint64_t sub_22EE7E550()
{
  return MEMORY[0x270F03EF8]();
}

uint64_t sub_22EE7E560()
{
  return MEMORY[0x270F03F00]();
}

uint64_t sub_22EE7E570()
{
  return MEMORY[0x270F03F18]();
}

uint64_t sub_22EE7E580()
{
  return MEMORY[0x270F03F28]();
}

uint64_t sub_22EE7E590()
{
  return MEMORY[0x270F03F30]();
}

uint64_t sub_22EE7E5A0()
{
  return MEMORY[0x270F03F50]();
}

uint64_t sub_22EE7E5B0()
{
  return MEMORY[0x270F03FE8]();
}

uint64_t sub_22EE7E5C0()
{
  return MEMORY[0x270F03FF8]();
}

uint64_t sub_22EE7E5D0()
{
  return MEMORY[0x270F04008]();
}

uint64_t sub_22EE7E5E0()
{
  return MEMORY[0x270F04010]();
}

uint64_t sub_22EE7E5F0()
{
  return MEMORY[0x270F04028]();
}

uint64_t sub_22EE7E600()
{
  return MEMORY[0x270F04088]();
}

uint64_t sub_22EE7E610()
{
  return MEMORY[0x270F04090]();
}

uint64_t sub_22EE7E620()
{
  return MEMORY[0x270F04098]();
}

uint64_t sub_22EE7E630()
{
  return MEMORY[0x270F040E0]();
}

uint64_t sub_22EE7E640()
{
  return MEMORY[0x270F040F0]();
}

uint64_t sub_22EE7E650()
{
  return MEMORY[0x270F04100]();
}

uint64_t sub_22EE7E660()
{
  return MEMORY[0x270F04110]();
}

uint64_t sub_22EE7E670()
{
  return MEMORY[0x270F04128]();
}

uint64_t sub_22EE7E680()
{
  return MEMORY[0x270F04150]();
}

uint64_t sub_22EE7E690()
{
  return MEMORY[0x270F04170]();
}

uint64_t sub_22EE7E6A0()
{
  return MEMORY[0x270F04178]();
}

uint64_t sub_22EE7E6B0()
{
  return MEMORY[0x270F04188]();
}

uint64_t sub_22EE7E6C0()
{
  return MEMORY[0x270F041A0]();
}

uint64_t sub_22EE7E6D0()
{
  return MEMORY[0x270F041B8]();
}

uint64_t sub_22EE7E6E0()
{
  return MEMORY[0x270F041C8]();
}

uint64_t sub_22EE7E6F0()
{
  return MEMORY[0x270F041F8]();
}

uint64_t sub_22EE7E700()
{
  return MEMORY[0x270F04210]();
}

uint64_t sub_22EE7E710()
{
  return MEMORY[0x270F04230]();
}

uint64_t sub_22EE7E720()
{
  return MEMORY[0x270F042B8]();
}

uint64_t sub_22EE7E730()
{
  return MEMORY[0x270F04378]();
}

uint64_t sub_22EE7E740()
{
  return MEMORY[0x270F04388]();
}

uint64_t sub_22EE7E750()
{
  return MEMORY[0x270F043A8]();
}

uint64_t sub_22EE7E760()
{
  return MEMORY[0x270F043C0]();
}

uint64_t sub_22EE7E770()
{
  return MEMORY[0x270F043E8]();
}

uint64_t sub_22EE7E780()
{
  return MEMORY[0x270F043F8]();
}

uint64_t sub_22EE7E790()
{
  return MEMORY[0x270F04410]();
}

uint64_t sub_22EE7E7A0()
{
  return MEMORY[0x270F04460]();
}

uint64_t sub_22EE7E7B0()
{
  return MEMORY[0x270F04478]();
}

uint64_t sub_22EE7E7C0()
{
  return MEMORY[0x270F04498]();
}

uint64_t sub_22EE7E7D0()
{
  return MEMORY[0x270F044D8]();
}

uint64_t sub_22EE7E7E0()
{
  return MEMORY[0x270F044E8]();
}

uint64_t sub_22EE7E7F0()
{
  return MEMORY[0x270F044F0]();
}

uint64_t sub_22EE7E800()
{
  return MEMORY[0x270F04508]();
}

uint64_t sub_22EE7E810()
{
  return MEMORY[0x270F04520]();
}

uint64_t sub_22EE7E820()
{
  return MEMORY[0x270F04538]();
}

uint64_t sub_22EE7E830()
{
  return MEMORY[0x270F04548]();
}

uint64_t sub_22EE7E840()
{
  return MEMORY[0x270F04570]();
}

uint64_t sub_22EE7E850()
{
  return MEMORY[0x270F045A8]();
}

uint64_t sub_22EE7E860()
{
  return MEMORY[0x270F045B8]();
}

uint64_t sub_22EE7E870()
{
  return MEMORY[0x270F045E0]();
}

uint64_t sub_22EE7E880()
{
  return MEMORY[0x270F045E8]();
}

uint64_t sub_22EE7E890()
{
  return MEMORY[0x270F04608]();
}

uint64_t sub_22EE7E8A0()
{
  return MEMORY[0x270F04620]();
}

uint64_t sub_22EE7E8B0()
{
  return MEMORY[0x270F04650]();
}

uint64_t sub_22EE7E8C0()
{
  return MEMORY[0x270F04690]();
}

uint64_t sub_22EE7E8D0()
{
  return MEMORY[0x270F04708]();
}

uint64_t sub_22EE7E8E0()
{
  return MEMORY[0x270F04718]();
}

uint64_t sub_22EE7E8F0()
{
  return MEMORY[0x270F04728]();
}

uint64_t sub_22EE7E900()
{
  return MEMORY[0x270F04740]();
}

uint64_t sub_22EE7E910()
{
  return MEMORY[0x270F04748]();
}

uint64_t sub_22EE7E920()
{
  return MEMORY[0x270F04788]();
}

uint64_t sub_22EE7E930()
{
  return MEMORY[0x270F047A8]();
}

uint64_t sub_22EE7E940()
{
  return MEMORY[0x270F047B0]();
}

uint64_t sub_22EE7E950()
{
  return MEMORY[0x270F047C8]();
}

uint64_t sub_22EE7E970()
{
  return MEMORY[0x270F047D8]();
}

uint64_t sub_22EE7E990()
{
  return MEMORY[0x270F047E8]();
}

uint64_t sub_22EE7E9A0()
{
  return MEMORY[0x270F047F0]();
}

uint64_t sub_22EE7E9B0()
{
  return MEMORY[0x270F04800]();
}

uint64_t sub_22EE7E9D0()
{
  return MEMORY[0x270F04818]();
}

uint64_t sub_22EE7E9E0()
{
  return MEMORY[0x270F04820]();
}

uint64_t sub_22EE7E9F0()
{
  return MEMORY[0x270F04830]();
}

uint64_t sub_22EE7EA00()
{
  return MEMORY[0x270F04848]();
}

uint64_t sub_22EE7EA10()
{
  return MEMORY[0x270F04850]();
}

uint64_t sub_22EE7EA20()
{
  return MEMORY[0x270F048B0]();
}

uint64_t sub_22EE7EA30()
{
  return MEMORY[0x270F048C0]();
}

uint64_t sub_22EE7EA40()
{
  return MEMORY[0x270F04900]();
}

uint64_t sub_22EE7EA50()
{
  return MEMORY[0x270F04950]();
}

uint64_t sub_22EE7EA60()
{
  return MEMORY[0x270F04960]();
}

uint64_t sub_22EE7EA70()
{
  return MEMORY[0x270F04978]();
}

uint64_t sub_22EE7EA80()
{
  return MEMORY[0x270F04980]();
}

uint64_t sub_22EE7EA90()
{
  return MEMORY[0x270F04988]();
}

uint64_t sub_22EE7EAA0()
{
  return MEMORY[0x270F04990]();
}

uint64_t sub_22EE7EAB0()
{
  return MEMORY[0x270F04998]();
}

uint64_t sub_22EE7EAC0()
{
  return MEMORY[0x270F049A0]();
}

uint64_t sub_22EE7EAD0()
{
  return MEMORY[0x270F049A8]();
}

uint64_t sub_22EE7EAE0()
{
  return MEMORY[0x270F04AF0]();
}

uint64_t sub_22EE7EAF0()
{
  return MEMORY[0x270F04AF8]();
}

uint64_t sub_22EE7EB00()
{
  return MEMORY[0x270F04B08]();
}

uint64_t sub_22EE7EB10()
{
  return MEMORY[0x270F04B10]();
}

uint64_t sub_22EE7EB20()
{
  return MEMORY[0x270F04B20]();
}

uint64_t sub_22EE7EB30()
{
  return MEMORY[0x270F04B30]();
}

uint64_t sub_22EE7EB40()
{
  return MEMORY[0x270F04B48]();
}

uint64_t sub_22EE7EB50()
{
  return MEMORY[0x270F04B58]();
}

uint64_t sub_22EE7EB60()
{
  return MEMORY[0x270F04B68]();
}

uint64_t sub_22EE7EB70()
{
  return MEMORY[0x270F04B80]();
}

uint64_t sub_22EE7EB80()
{
  return MEMORY[0x270F04B90]();
}

uint64_t sub_22EE7EB90()
{
  return MEMORY[0x270F04BF8]();
}

uint64_t sub_22EE7EBA0()
{
  return MEMORY[0x270F04C18]();
}

uint64_t sub_22EE7EBB0()
{
  return MEMORY[0x270F04C20]();
}

uint64_t sub_22EE7EBC0()
{
  return MEMORY[0x270F04C30]();
}

uint64_t sub_22EE7EBD0()
{
  return MEMORY[0x270F04C78]();
}

uint64_t sub_22EE7EBE0()
{
  return MEMORY[0x270F04C90]();
}

uint64_t sub_22EE7EBF0()
{
  return MEMORY[0x270F04CA8]();
}

uint64_t sub_22EE7EC00()
{
  return MEMORY[0x270F04CC0]();
}

uint64_t sub_22EE7EC10()
{
  return MEMORY[0x270F04D50]();
}

uint64_t sub_22EE7EC20()
{
  return MEMORY[0x270F04D80]();
}

uint64_t sub_22EE7EC30()
{
  return MEMORY[0x270F04D98]();
}

uint64_t sub_22EE7EC40()
{
  return MEMORY[0x270F04DA0]();
}

uint64_t sub_22EE7EC50()
{
  return MEMORY[0x270F04DA8]();
}

uint64_t sub_22EE7EC60()
{
  return MEMORY[0x270F04DB0]();
}

uint64_t sub_22EE7EC70()
{
  return MEMORY[0x270F04DD8]();
}

uint64_t sub_22EE7EC80()
{
  return MEMORY[0x270F04EC8]();
}

uint64_t sub_22EE7EC90()
{
  return MEMORY[0x270F04ED8]();
}

uint64_t sub_22EE7ECA0()
{
  return MEMORY[0x270F04EE8]();
}

uint64_t sub_22EE7ECB0()
{
  return MEMORY[0x270F04EF0]();
}

uint64_t sub_22EE7ECC0()
{
  return MEMORY[0x270F04F00]();
}

uint64_t sub_22EE7ECD0()
{
  return MEMORY[0x270F04F10]();
}

uint64_t sub_22EE7ECE0()
{
  return MEMORY[0x270F04F78]();
}

uint64_t sub_22EE7ECF0()
{
  return MEMORY[0x270F04F98]();
}

uint64_t sub_22EE7ED00()
{
  return MEMORY[0x270F04FA0]();
}

uint64_t sub_22EE7ED10()
{
  return MEMORY[0x270F04FB0]();
}

uint64_t sub_22EE7ED20()
{
  return MEMORY[0x270F05010]();
}

uint64_t sub_22EE7ED30()
{
  return MEMORY[0x270F05020]();
}

uint64_t sub_22EE7ED40()
{
  return MEMORY[0x270F05030]();
}

uint64_t sub_22EE7ED50()
{
  return MEMORY[0x270F05058]();
}

uint64_t sub_22EE7ED60()
{
  return MEMORY[0x270F05068]();
}

uint64_t sub_22EE7ED70()
{
  return MEMORY[0x270F05078]();
}

uint64_t sub_22EE7ED80()
{
  return MEMORY[0x270F05088]();
}

uint64_t sub_22EE7ED90()
{
  return MEMORY[0x270F05120]();
}

uint64_t sub_22EE7EDA0()
{
  return MEMORY[0x270F05140]();
}

uint64_t sub_22EE7EDB0()
{
  return MEMORY[0x270F05160]();
}

uint64_t sub_22EE7EDC0()
{
  return MEMORY[0x270F05188]();
}

uint64_t sub_22EE7EDD0()
{
  return MEMORY[0x270F05200]();
}

uint64_t sub_22EE7EDE0()
{
  return MEMORY[0x270F05208]();
}

uint64_t sub_22EE7EDF0()
{
  return MEMORY[0x270F05238]();
}

uint64_t sub_22EE7EE00()
{
  return MEMORY[0x270F05240]();
}

uint64_t sub_22EE7EE10()
{
  return MEMORY[0x270F05248]();
}

uint64_t sub_22EE7EE20()
{
  return MEMORY[0x270F05320]();
}

uint64_t sub_22EE7EE30()
{
  return MEMORY[0x270F05330]();
}

uint64_t sub_22EE7EE40()
{
  return MEMORY[0x270F05368]();
}

uint64_t sub_22EE7EE50()
{
  return MEMORY[0x270F05378]();
}

uint64_t sub_22EE7EE60()
{
  return MEMORY[0x270F05398]();
}

uint64_t sub_22EE7EE70()
{
  return MEMORY[0x270F053B8]();
}

uint64_t sub_22EE7EE80()
{
  return MEMORY[0x270F053C8]();
}

uint64_t sub_22EE7EE90()
{
  return MEMORY[0x270F053D0]();
}

uint64_t sub_22EE7EEA0()
{
  return MEMORY[0x270F053D8]();
}

uint64_t sub_22EE7EEB0()
{
  return MEMORY[0x270FA0BA8]();
}

uint64_t sub_22EE7EEC0()
{
  return MEMORY[0x270FA0BF0]();
}

uint64_t sub_22EE7EF10()
{
  return MEMORY[0x270EFE2F8]();
}

uint64_t sub_22EE7EF20()
{
  return MEMORY[0x270EFE300]();
}

uint64_t sub_22EE7EF30()
{
  return MEMORY[0x270EFE308]();
}

uint64_t sub_22EE7EF40()
{
  return MEMORY[0x270EFE310]();
}

uint64_t sub_22EE7EF50()
{
  return MEMORY[0x270EFE318]();
}

uint64_t sub_22EE7EF60()
{
  return MEMORY[0x270EFE320]();
}

uint64_t sub_22EE7EF70()
{
  return MEMORY[0x270EFE328]();
}

uint64_t sub_22EE7EF80()
{
  return MEMORY[0x270EFE330]();
}

uint64_t sub_22EE7EF90()
{
  return MEMORY[0x270EFE338]();
}

uint64_t sub_22EE7EFA0()
{
  return MEMORY[0x270EFE340]();
}

uint64_t sub_22EE7EFB0()
{
  return MEMORY[0x270EFE348]();
}

uint64_t sub_22EE7EFC0()
{
  return MEMORY[0x270EFE350]();
}

uint64_t sub_22EE7EFE0()
{
  return MEMORY[0x270EFE360]();
}

uint64_t sub_22EE7F000()
{
  return MEMORY[0x270EFE370]();
}

uint64_t sub_22EE7F010()
{
  return MEMORY[0x270EFE378]();
}

uint64_t sub_22EE7F020()
{
  return MEMORY[0x270EFE380]();
}

uint64_t sub_22EE7F030()
{
  return MEMORY[0x270EFE388]();
}

uint64_t sub_22EE7F040()
{
  return MEMORY[0x270EFE390]();
}

uint64_t sub_22EE7F050()
{
  return MEMORY[0x270EFE398]();
}

uint64_t sub_22EE7F060()
{
  return MEMORY[0x270EFE3A0]();
}

uint64_t sub_22EE7F080()
{
  return MEMORY[0x270EFE3B0]();
}

uint64_t sub_22EE7F090()
{
  return MEMORY[0x270EFE3B8]();
}

uint64_t sub_22EE7F0A0()
{
  return MEMORY[0x270EFE3C0]();
}

uint64_t sub_22EE7F0B0()
{
  return MEMORY[0x270EFE3C8]();
}

uint64_t sub_22EE7F0C0()
{
  return MEMORY[0x270EFE3D0]();
}

uint64_t sub_22EE7F0D0()
{
  return MEMORY[0x270EFE3D8]();
}

uint64_t sub_22EE7F0E0()
{
  return MEMORY[0x270EFE3E0]();
}

uint64_t sub_22EE7F0F0()
{
  return MEMORY[0x270EFE3E8]();
}

uint64_t sub_22EE7F100()
{
  return MEMORY[0x270EFE3F0]();
}

uint64_t sub_22EE7F130()
{
  return MEMORY[0x270EFE408]();
}

uint64_t sub_22EE7F140()
{
  return MEMORY[0x270EFE410]();
}

uint64_t sub_22EE7F150()
{
  return MEMORY[0x270EFE418]();
}

uint64_t sub_22EE7F160()
{
  return MEMORY[0x270EFE420]();
}

uint64_t sub_22EE7F170()
{
  return MEMORY[0x270EFE428]();
}

uint64_t sub_22EE7F180()
{
  return MEMORY[0x270EFE430]();
}

uint64_t sub_22EE7F190()
{
  return MEMORY[0x270EFE438]();
}

uint64_t sub_22EE7F1B0()
{
  return MEMORY[0x270EFE448]();
}

uint64_t sub_22EE7F1C0()
{
  return MEMORY[0x270EFE450]();
}

uint64_t sub_22EE7F1D0()
{
  return MEMORY[0x270EFE458]();
}

uint64_t sub_22EE7F1E0()
{
  return MEMORY[0x270EFE460]();
}

uint64_t sub_22EE7F1F0()
{
  return MEMORY[0x270EFE468]();
}

uint64_t sub_22EE7F200()
{
  return MEMORY[0x270EFE470]();
}

uint64_t sub_22EE7F220()
{
  return MEMORY[0x270EFE480]();
}

uint64_t sub_22EE7F230()
{
  return MEMORY[0x270EFE488]();
}

uint64_t sub_22EE7F240()
{
  return MEMORY[0x270EFE490]();
}

uint64_t sub_22EE7F250()
{
  return MEMORY[0x270EFE498]();
}

uint64_t sub_22EE7F260()
{
  return MEMORY[0x270EFE4A0]();
}

uint64_t sub_22EE7F270()
{
  return MEMORY[0x270EFE4A8]();
}

uint64_t sub_22EE7F280()
{
  return MEMORY[0x270EFE4B0]();
}

uint64_t sub_22EE7F290()
{
  return MEMORY[0x270EFE4B8]();
}

uint64_t sub_22EE7F2A0()
{
  return MEMORY[0x270EFE4C0]();
}

uint64_t sub_22EE7F2B0()
{
  return MEMORY[0x270EFE4C8]();
}

uint64_t sub_22EE7F2C0()
{
  return MEMORY[0x270EFE4D0]();
}

uint64_t sub_22EE7F2D0()
{
  return MEMORY[0x270EFE4D8]();
}

uint64_t sub_22EE7F2E0()
{
  return MEMORY[0x270EFE4E0]();
}

uint64_t sub_22EE7F2F0()
{
  return MEMORY[0x270EFE4E8]();
}

uint64_t sub_22EE7F300()
{
  return MEMORY[0x270EFE4F0]();
}

uint64_t sub_22EE7F310()
{
  return MEMORY[0x270EFE4F8]();
}

uint64_t sub_22EE7F320()
{
  return MEMORY[0x270EFE500]();
}

uint64_t sub_22EE7F330()
{
  return MEMORY[0x270EFE508]();
}

uint64_t sub_22EE7F340()
{
  return MEMORY[0x270EFE510]();
}

uint64_t sub_22EE7F350()
{
  return MEMORY[0x270EFE518]();
}

uint64_t sub_22EE7F360()
{
  return MEMORY[0x270EFE520]();
}

uint64_t sub_22EE7F370()
{
  return MEMORY[0x270EFE528]();
}

uint64_t sub_22EE7F380()
{
  return MEMORY[0x270EFE530]();
}

uint64_t sub_22EE7F390()
{
  return MEMORY[0x270EFE538]();
}

uint64_t sub_22EE7F3A0()
{
  return MEMORY[0x270EFE540]();
}

uint64_t sub_22EE7F3C0()
{
  return MEMORY[0x270EFE550]();
}

uint64_t sub_22EE7F3D0()
{
  return MEMORY[0x270EFE558]();
}

uint64_t sub_22EE7F3E0()
{
  return MEMORY[0x270EFE560]();
}

uint64_t sub_22EE7F3F0()
{
  return MEMORY[0x270EFE568]();
}

uint64_t sub_22EE7F400()
{
  return MEMORY[0x270EFE570]();
}

uint64_t sub_22EE7F410()
{
  return MEMORY[0x270EFE578]();
}

uint64_t sub_22EE7F420()
{
  return MEMORY[0x270EFE580]();
}

uint64_t sub_22EE7F430()
{
  return MEMORY[0x270EFE588]();
}

uint64_t sub_22EE7F440()
{
  return MEMORY[0x270EFE590]();
}

uint64_t sub_22EE7F450()
{
  return MEMORY[0x270EFE598]();
}

uint64_t sub_22EE7F460()
{
  return MEMORY[0x270EFE5A0]();
}

uint64_t sub_22EE7F470()
{
  return MEMORY[0x270EFE5A8]();
}

uint64_t sub_22EE7F480()
{
  return MEMORY[0x270EFE5B0]();
}

uint64_t sub_22EE7F490()
{
  return MEMORY[0x270EFE5B8]();
}

uint64_t sub_22EE7F4B0()
{
  return MEMORY[0x270EFE5C8]();
}

uint64_t sub_22EE7F4C0()
{
  return MEMORY[0x270EFE5D0]();
}

uint64_t sub_22EE7F4D0()
{
  return MEMORY[0x270EFE5D8]();
}

uint64_t sub_22EE7F4E0()
{
  return MEMORY[0x270EFE5E0]();
}

uint64_t sub_22EE7F4F0()
{
  return MEMORY[0x270EFE5E8]();
}

uint64_t sub_22EE7F500()
{
  return MEMORY[0x270EFE5F0]();
}

uint64_t sub_22EE7F510()
{
  return MEMORY[0x270EFE5F8]();
}

uint64_t sub_22EE7F520()
{
  return MEMORY[0x270EFE600]();
}

uint64_t sub_22EE7F540()
{
  return MEMORY[0x270EFE610]();
}

uint64_t sub_22EE7F560()
{
  return MEMORY[0x270EFE620]();
}

uint64_t sub_22EE7F570()
{
  return MEMORY[0x270EFE628]();
}

uint64_t sub_22EE7F580()
{
  return MEMORY[0x270EFE630]();
}

uint64_t sub_22EE7F590()
{
  return MEMORY[0x270EFE638]();
}

uint64_t sub_22EE7F5A0()
{
  return MEMORY[0x270EFE640]();
}

uint64_t sub_22EE7F5B0()
{
  return MEMORY[0x270EFE648]();
}

uint64_t sub_22EE7F5C0()
{
  return MEMORY[0x270EFE650]();
}

uint64_t sub_22EE7F5D0()
{
  return MEMORY[0x270EFE658]();
}

uint64_t sub_22EE7F5E0()
{
  return MEMORY[0x270EFE660]();
}

uint64_t sub_22EE7F5F0()
{
  return MEMORY[0x270EFE668]();
}

uint64_t sub_22EE7F600()
{
  return MEMORY[0x270EFE670]();
}

uint64_t sub_22EE7F610()
{
  return MEMORY[0x270EFE678]();
}

uint64_t sub_22EE7F620()
{
  return MEMORY[0x270EFE680]();
}

uint64_t sub_22EE7F630()
{
  return MEMORY[0x270EFE688]();
}

uint64_t sub_22EE7F640()
{
  return MEMORY[0x270EFE690]();
}

uint64_t sub_22EE7F650()
{
  return MEMORY[0x270EFE698]();
}

uint64_t sub_22EE7F660()
{
  return MEMORY[0x270EFE6A0]();
}

uint64_t sub_22EE7F670()
{
  return MEMORY[0x270EFE6A8]();
}

uint64_t sub_22EE7F680()
{
  return MEMORY[0x270EFE6B0]();
}

uint64_t sub_22EE7F690()
{
  return MEMORY[0x270EFE6B8]();
}

uint64_t sub_22EE7F6A0()
{
  return MEMORY[0x270EFE6C0]();
}

uint64_t sub_22EE7F6B0()
{
  return MEMORY[0x270EFE6C8]();
}

uint64_t sub_22EE7F6C0()
{
  return MEMORY[0x270EFE6D0]();
}

uint64_t sub_22EE7F6D0()
{
  return MEMORY[0x270EFE6D8]();
}

uint64_t sub_22EE7F6E0()
{
  return MEMORY[0x270EFE6E0]();
}

uint64_t _s17_StoreKit_SwiftUI012SubscriptionA25ControlStyleConfigurationV12PickerOptionV2idSSvg_0()
{
  return MEMORY[0x270EFE6E8]();
}

uint64_t sub_22EE7F700()
{
  return MEMORY[0x270EFE6F0]();
}

uint64_t sub_22EE7F710()
{
  return MEMORY[0x270EFE6F8]();
}

uint64_t sub_22EE7F720()
{
  return MEMORY[0x270EFE700]();
}

uint64_t sub_22EE7F730()
{
  return MEMORY[0x270EFE708]();
}

uint64_t sub_22EE7F740()
{
  return MEMORY[0x270EFE710]();
}

uint64_t sub_22EE7F750()
{
  return MEMORY[0x270EFE718]();
}

uint64_t sub_22EE7F760()
{
  return MEMORY[0x270EFE720]();
}

uint64_t sub_22EE7F780()
{
  return MEMORY[0x270EFE730]();
}

uint64_t sub_22EE7F790()
{
  return MEMORY[0x270EEAA78]();
}

uint64_t sub_22EE7F7A0()
{
  return MEMORY[0x270EEAA80]();
}

uint64_t sub_22EE7F7B0()
{
  return MEMORY[0x270EEAA98]();
}

uint64_t sub_22EE7F7C0()
{
  return MEMORY[0x270EEB0B8]();
}

uint64_t sub_22EE7F7D0()
{
  return MEMORY[0x270EEB0E0]();
}

uint64_t sub_22EE7F7E0()
{
  return MEMORY[0x270EF1818]();
}

uint64_t sub_22EE7F7F0()
{
  return MEMORY[0x270EF1840]();
}

uint64_t sub_22EE7F800()
{
  return MEMORY[0x270F9D0A8]();
}

uint64_t sub_22EE7F810()
{
  return MEMORY[0x270F9D260]();
}

uint64_t sub_22EE7F820()
{
  return MEMORY[0x270F9D318]();
}

uint64_t sub_22EE7F830()
{
  return MEMORY[0x270F9D320]();
}

uint64_t sub_22EE7F840()
{
  return MEMORY[0x270F9D328]();
}

uint64_t sub_22EE7F850()
{
  return MEMORY[0x270F9D380]();
}

uint64_t sub_22EE7F860()
{
  return MEMORY[0x270F9D3F8]();
}

uint64_t sub_22EE7F870()
{
  return MEMORY[0x270F9D478]();
}

uint64_t sub_22EE7F880()
{
  return MEMORY[0x270F9D480]();
}

uint64_t sub_22EE7F890()
{
  return MEMORY[0x270F9D488]();
}

uint64_t sub_22EE7F8A0()
{
  return MEMORY[0x270F9D498]();
}

uint64_t sub_22EE7F8B0()
{
  return MEMORY[0x270F9D4C8]();
}

uint64_t sub_22EE7F8C0()
{
  return MEMORY[0x270F9D4D0]();
}

uint64_t sub_22EE7F8D0()
{
  return MEMORY[0x270F9D4D8]();
}

uint64_t sub_22EE7F8E0()
{
  return MEMORY[0x270F9D500]();
}

uint64_t sub_22EE7F8F0()
{
  return MEMORY[0x270F9D550]();
}

uint64_t sub_22EE7F900()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_22EE7F910()
{
  return MEMORY[0x270EF18D0]();
}

uint64_t sub_22EE7F930()
{
  return MEMORY[0x270EF1908]();
}

uint64_t sub_22EE7F940()
{
  return MEMORY[0x270EF1910]();
}

uint64_t sub_22EE7F950()
{
  return MEMORY[0x270EF1918]();
}

uint64_t sub_22EE7F960()
{
  return MEMORY[0x270EF1928]();
}

uint64_t sub_22EE7F970()
{
  return MEMORY[0x270EF1938]();
}

uint64_t sub_22EE7F980()
{
  return MEMORY[0x270EF1950]();
}

uint64_t sub_22EE7F990()
{
  return MEMORY[0x270EF1958]();
}

uint64_t sub_22EE7F9A0()
{
  return MEMORY[0x270EF1968]();
}

uint64_t sub_22EE7F9B0()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_22EE7F9C0()
{
  return MEMORY[0x270EF19C8]();
}

uint64_t sub_22EE7F9D0()
{
  return MEMORY[0x270EF19E0]();
}

uint64_t sub_22EE7F9E0()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_22EE7F9F0()
{
  return MEMORY[0x270EF1A10]();
}

uint64_t sub_22EE7FA00()
{
  return MEMORY[0x270EF1AA8]();
}

uint64_t sub_22EE7FA10()
{
  return MEMORY[0x270EF1AD0]();
}

uint64_t sub_22EE7FA20()
{
  return MEMORY[0x270EF1B10]();
}

uint64_t sub_22EE7FA30()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_22EE7FA40()
{
  return MEMORY[0x270F9D648]();
}

uint64_t sub_22EE7FA50()
{
  return MEMORY[0x270F9D6B8]();
}

uint64_t sub_22EE7FA60()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_22EE7FA70()
{
  return MEMORY[0x270F9D740]();
}

uint64_t sub_22EE7FA80()
{
  return MEMORY[0x270F9D748]();
}

uint64_t sub_22EE7FA90()
{
  return MEMORY[0x270F9D788]();
}

uint64_t sub_22EE7FAA0()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_22EE7FAB0()
{
  return MEMORY[0x270F9D7D8]();
}

uint64_t sub_22EE7FAC0()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_22EE7FAD0()
{
  return MEMORY[0x270F9D7E8]();
}

uint64_t sub_22EE7FAE0()
{
  return MEMORY[0x270F9D800]();
}

uint64_t sub_22EE7FB00()
{
  return MEMORY[0x270F9D810]();
}

uint64_t sub_22EE7FB10()
{
  return MEMORY[0x270F9D860]();
}

uint64_t sub_22EE7FB20()
{
  return MEMORY[0x270F9D898]();
}

uint64_t sub_22EE7FB30()
{
  return MEMORY[0x270F9D8A8]();
}

uint64_t sub_22EE7FB40()
{
  return MEMORY[0x270F9D8B0]();
}

uint64_t sub_22EE7FB50()
{
  return MEMORY[0x270F9D8D8]();
}

uint64_t sub_22EE7FB60()
{
  return MEMORY[0x270F9D8E0]();
}

uint64_t sub_22EE7FB70()
{
  return MEMORY[0x270F9D8F0]();
}

uint64_t sub_22EE7FB80()
{
  return MEMORY[0x270F9D8F8]();
}

uint64_t sub_22EE7FB90()
{
  return MEMORY[0x270F9D938]();
}

uint64_t sub_22EE7FBA0()
{
  return MEMORY[0x270F9D948]();
}

uint64_t sub_22EE7FBB0()
{
  return MEMORY[0x270F9D958]();
}

uint64_t sub_22EE7FBC0()
{
  return MEMORY[0x270F9D960]();
}

uint64_t sub_22EE7FBD0()
{
  return MEMORY[0x270F9D968]();
}

uint64_t sub_22EE7FBE0()
{
  return MEMORY[0x270F9D980]();
}

uint64_t sub_22EE7FBF0()
{
  return MEMORY[0x270F9D9B0]();
}

uint64_t sub_22EE7FC10()
{
  return MEMORY[0x270F9DA70]();
}

uint64_t sub_22EE7FC20()
{
  return MEMORY[0x270F9DA98]();
}

uint64_t sub_22EE7FC30()
{
  return MEMORY[0x270F9DB18]();
}

uint64_t sub_22EE7FC40()
{
  return MEMORY[0x270F9DBA0]();
}

uint64_t sub_22EE7FC50()
{
  return MEMORY[0x270EF1B88]();
}

uint64_t sub_22EE7FC60()
{
  return MEMORY[0x270EF1BB8]();
}

uint64_t sub_22EE7FC70()
{
  return MEMORY[0x270F9DBB0]();
}

uint64_t sub_22EE7FC80()
{
  return MEMORY[0x270F9DBB8]();
}

uint64_t sub_22EE7FCA0()
{
  return MEMORY[0x270F9DC10]();
}

uint64_t sub_22EE7FCB0()
{
  return MEMORY[0x270F9DC20]();
}

uint64_t sub_22EE7FCC0()
{
  return MEMORY[0x270F9DC50]();
}

uint64_t sub_22EE7FCD0()
{
  return MEMORY[0x270F9DCD8]();
}

uint64_t sub_22EE7FCE0()
{
  return MEMORY[0x270F9DD08]();
}

uint64_t sub_22EE7FCF0()
{
  return MEMORY[0x270EF1BD8]();
}

uint64_t sub_22EE7FD00()
{
  return MEMORY[0x270FA1DF8]();
}

uint64_t sub_22EE7FD20()
{
  return MEMORY[0x270FA1EA0]();
}

uint64_t sub_22EE7FD30()
{
  return MEMORY[0x270FA1EA8]();
}

uint64_t sub_22EE7FD40()
{
  return MEMORY[0x270FA1EB0]();
}

uint64_t sub_22EE7FD50()
{
  return MEMORY[0x270FA1EC0]();
}

uint64_t sub_22EE7FD60()
{
  return MEMORY[0x270FA1EF0]();
}

uint64_t sub_22EE7FD70()
{
  return MEMORY[0x270FA1F00]();
}

uint64_t sub_22EE7FD80()
{
  return MEMORY[0x270FA1F08]();
}

uint64_t sub_22EE7FD90()
{
  return MEMORY[0x270FA1F10]();
}

uint64_t sub_22EE7FDA0()
{
  return MEMORY[0x270FA1FB0]();
}

uint64_t sub_22EE7FDB0()
{
  return MEMORY[0x270FA1FD8]();
}

uint64_t sub_22EE7FDD0()
{
  return MEMORY[0x270FA2080]();
}

uint64_t sub_22EE7FDE0()
{
  return MEMORY[0x270F9DEF0]();
}

uint64_t sub_22EE7FDF0()
{
  return MEMORY[0x270F9DEF8]();
}

uint64_t sub_22EE7FE00()
{
  return MEMORY[0x270F9E018]();
}

uint64_t sub_22EE7FE10()
{
  return MEMORY[0x270F9E050]();
}

uint64_t sub_22EE7FE50()
{
  return MEMORY[0x270F9E080]();
}

uint64_t sub_22EE7FE60()
{
  return MEMORY[0x270F9E090]();
}

uint64_t sub_22EE7FE70()
{
  return MEMORY[0x270F9E0A0]();
}

uint64_t sub_22EE7FE80()
{
  return MEMORY[0x270F9E0B0]();
}

uint64_t sub_22EE7FE90()
{
  return MEMORY[0x270F9E0C0]();
}

uint64_t sub_22EE7FEA0()
{
  return MEMORY[0x270F9E0C8]();
}

uint64_t sub_22EE7FEB0()
{
  return MEMORY[0x270F9E0D0]();
}

uint64_t sub_22EE7FEC0()
{
  return MEMORY[0x270F9E0D8]();
}

uint64_t sub_22EE7FED0()
{
  return MEMORY[0x270F9E0E0]();
}

uint64_t sub_22EE7FEF0()
{
  return MEMORY[0x270F9E110]();
}

uint64_t sub_22EE7FF00()
{
  return MEMORY[0x270F9E118]();
}

uint64_t sub_22EE7FF10()
{
  return MEMORY[0x270F9E120]();
}

uint64_t sub_22EE7FF30()
{
  return MEMORY[0x270F9E140]();
}

uint64_t sub_22EE7FF40()
{
  return MEMORY[0x270F9E178]();
}

uint64_t sub_22EE7FF50()
{
  return MEMORY[0x270F9E190]();
}

uint64_t sub_22EE7FF60()
{
  return MEMORY[0x270F9E1D8]();
}

uint64_t sub_22EE7FF70()
{
  return MEMORY[0x270F9E1E0]();
}

uint64_t sub_22EE7FF80()
{
  return MEMORY[0x270F9E330]();
}

uint64_t sub_22EE7FF90()
{
  return MEMORY[0x270EE5820]();
}

uint64_t sub_22EE7FFA0()
{
  return MEMORY[0x270FA2E40]();
}

uint64_t sub_22EE7FFB0()
{
  return MEMORY[0x270FA2E58]();
}

uint64_t sub_22EE7FFC0()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t sub_22EE7FFD0()
{
  return MEMORY[0x270FA2E70]();
}

uint64_t sub_22EE7FFE0()
{
  return MEMORY[0x270FA2E80]();
}

uint64_t sub_22EE7FFF0()
{
  return MEMORY[0x270FA0D70]();
}

uint64_t sub_22EE80000()
{
  return MEMORY[0x270F05438]();
}

uint64_t sub_22EE80010()
{
  return MEMORY[0x270FA1180]();
}

uint64_t sub_22EE80020()
{
  return MEMORY[0x270EF2268]();
}

uint64_t sub_22EE80030()
{
  return MEMORY[0x270EF2288]();
}

uint64_t sub_22EE80040()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_22EE80060()
{
  return MEMORY[0x270F9E4A0]();
}

uint64_t sub_22EE80070()
{
  return MEMORY[0x270F9E4E8]();
}

uint64_t sub_22EE80080()
{
  return MEMORY[0x270F9E4F8]();
}

uint64_t sub_22EE80090()
{
  return MEMORY[0x270F9E500]();
}

uint64_t sub_22EE800A0()
{
  return MEMORY[0x270F9E518]();
}

uint64_t sub_22EE800B0()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_22EE800C0()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_22EE800D0()
{
  return MEMORY[0x270EF2478]();
}

uint64_t sub_22EE800E0()
{
  return MEMORY[0x270F9E670]();
}

uint64_t sub_22EE800F0()
{
  return MEMORY[0x270F9E730]();
}

uint64_t sub_22EE80110()
{
  return MEMORY[0x270F9E7E8]();
}

uint64_t sub_22EE80120()
{
  return MEMORY[0x270F9E7F0]();
}

uint64_t sub_22EE80130()
{
  return MEMORY[0x270F9E890]();
}

uint64_t sub_22EE80140()
{
  return MEMORY[0x270F9E8C0]();
}

uint64_t sub_22EE80150()
{
  return MEMORY[0x270F9E8C8]();
}

uint64_t _s17_StoreKit_SwiftUI012SubscriptionA25ControlStyleConfigurationV7SectionV2IDV4hash4intoys6HasherVz_tF_0()
{
  return MEMORY[0x270F9E8D8]();
}

uint64_t sub_22EE80170()
{
  return MEMORY[0x270F9E8E0]();
}

uint64_t sub_22EE80180()
{
  return MEMORY[0x270F9E8E8]();
}

uint64_t sub_22EE80190()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_22EE801A0()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_22EE801B0()
{
  return MEMORY[0x270F9E970]();
}

uint64_t sub_22EE801C0()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_22EE801D0()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_22EE801E0()
{
  return MEMORY[0x270F9E9E0]();
}

uint64_t sub_22EE801F0()
{
  return MEMORY[0x270F9E9E8]();
}

uint64_t sub_22EE80200()
{
  return MEMORY[0x270F9EA08]();
}

uint64_t sub_22EE80210()
{
  return MEMORY[0x270F9EA40]();
}

uint64_t sub_22EE80220()
{
  return MEMORY[0x270F9EA78]();
}

uint64_t sub_22EE80230()
{
  return MEMORY[0x270F9EA90]();
}

uint64_t sub_22EE80240()
{
  return MEMORY[0x270F9EA98]();
}

uint64_t sub_22EE80250()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_22EE80260()
{
  return MEMORY[0x270F9EB78]();
}

uint64_t sub_22EE80270()
{
  return MEMORY[0x270F9EBB8]();
}

uint64_t sub_22EE80280()
{
  return MEMORY[0x270F9EBC8]();
}

uint64_t sub_22EE80290()
{
  return MEMORY[0x270F9EBD8]();
}

uint64_t sub_22EE802A0()
{
  return MEMORY[0x270F9EC48]();
}

uint64_t sub_22EE802B0()
{
  return MEMORY[0x270F9EC70]();
}

uint64_t sub_22EE802C0()
{
  return MEMORY[0x270F9EC88]();
}

uint64_t sub_22EE802D0()
{
  return MEMORY[0x270F9EC90]();
}

uint64_t sub_22EE802E0()
{
  return MEMORY[0x270FA2188]();
}

uint64_t sub_22EE802F0()
{
  return MEMORY[0x270FA2190]();
}

uint64_t sub_22EE80300()
{
  return MEMORY[0x270FA21A0]();
}

uint64_t sub_22EE80310()
{
  return MEMORY[0x270FA21A8]();
}

uint64_t sub_22EE80320()
{
  return MEMORY[0x270FA21B0]();
}

uint64_t sub_22EE80330()
{
  return MEMORY[0x270F9ECD8]();
}

uint64_t sub_22EE80340()
{
  return MEMORY[0x270F9ED00]();
}

uint64_t sub_22EE80350()
{
  return MEMORY[0x270F9ED70]();
}

uint64_t sub_22EE80360()
{
  return MEMORY[0x270F9ED90]();
}

uint64_t sub_22EE80370()
{
  return MEMORY[0x270F9EF08]();
}

uint64_t sub_22EE80380()
{
  return MEMORY[0x270F9EF18]();
}

uint64_t sub_22EE80390()
{
  return MEMORY[0x270F9EF20]();
}

uint64_t sub_22EE803A0()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_22EE803B0()
{
  return MEMORY[0x270F9EFF0]();
}

uint64_t sub_22EE803C0()
{
  return MEMORY[0x270F9F010]();
}

uint64_t sub_22EE803D0()
{
  return MEMORY[0x270F9F060]();
}

uint64_t sub_22EE803E0()
{
  return MEMORY[0x270F9F080]();
}

uint64_t sub_22EE803F0()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_22EE80400()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_22EE80410()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_22EE80420()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_22EE80430()
{
  return MEMORY[0x270FA2248]();
}

uint64_t sub_22EE80440()
{
  return MEMORY[0x270FA2250]();
}

uint64_t sub_22EE80450()
{
  return MEMORY[0x270FA2258]();
}

uint64_t sub_22EE80460()
{
  return MEMORY[0x270FA2260]();
}

uint64_t sub_22EE80470()
{
  return MEMORY[0x270FA2268]();
}

uint64_t sub_22EE80480()
{
  return MEMORY[0x270FA2270]();
}

uint64_t sub_22EE80490()
{
  return MEMORY[0x270F9F148]();
}

uint64_t sub_22EE804A0()
{
  return MEMORY[0x270F9F158]();
}

uint64_t sub_22EE804C0()
{
  return MEMORY[0x270F9F220]();
}

uint64_t sub_22EE804D0()
{
  return MEMORY[0x270F9F228]();
}

uint64_t sub_22EE804E0()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_22EE804F0()
{
  return MEMORY[0x270F9F250]();
}

uint64_t sub_22EE80500()
{
  return MEMORY[0x270F9F258]();
}

uint64_t sub_22EE80510()
{
  return MEMORY[0x270F9F270]();
}

uint64_t sub_22EE80520()
{
  return MEMORY[0x270F9F2A0]();
}

uint64_t sub_22EE80530()
{
  return MEMORY[0x270F9F2E0]();
}

uint64_t sub_22EE80540()
{
  return MEMORY[0x270F9F2E8]();
}

uint64_t sub_22EE80550()
{
  return MEMORY[0x270F9F2F0]();
}

uint64_t sub_22EE80560()
{
  return MEMORY[0x270F9F318]();
}

uint64_t sub_22EE80570()
{
  return MEMORY[0x270F9F360]();
}

uint64_t sub_22EE80580()
{
  return MEMORY[0x270F9F390]();
}

uint64_t sub_22EE80590()
{
  return MEMORY[0x270F9F3B0]();
}

uint64_t sub_22EE805A0()
{
  return MEMORY[0x270F9F3E0]();
}

uint64_t sub_22EE805B0()
{
  return MEMORY[0x270F9F418]();
}

uint64_t sub_22EE805C0()
{
  return MEMORY[0x270F9F428]();
}

uint64_t sub_22EE805D0()
{
  return MEMORY[0x270F9F430]();
}

uint64_t sub_22EE805E0()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_22EE805F0()
{
  return MEMORY[0x270F9F4C8]();
}

uint64_t sub_22EE80600()
{
  return MEMORY[0x270F9F4D8]();
}

uint64_t sub_22EE80610()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_22EE80620()
{
  return MEMORY[0x270F9F730]();
}

uint64_t sub_22EE80630()
{
  return MEMORY[0x270F9F740]();
}

uint64_t sub_22EE80640()
{
  return MEMORY[0x270F9F7B0]();
}

uint64_t sub_22EE80650()
{
  return MEMORY[0x270F9F7C0]();
}

uint64_t sub_22EE80660()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_22EE80680()
{
  return MEMORY[0x270F9F7E8]();
}

uint64_t sub_22EE80690()
{
  return MEMORY[0x270F9FA40]();
}

uint64_t sub_22EE806A0()
{
  return MEMORY[0x270F9FA70]();
}

uint64_t sub_22EE806B0()
{
  return MEMORY[0x270F9FA80]();
}

uint64_t sub_22EE806C0()
{
  return MEMORY[0x270F9FAB8]();
}

uint64_t sub_22EE806D0()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_22EE806E0()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_22EE806F0()
{
  return MEMORY[0x270FA2378]();
}

uint64_t sub_22EE80710()
{
  return MEMORY[0x270EF2680]();
}

uint64_t sub_22EE80720()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_22EE80730()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_22EE80740()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_22EE80750()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_22EE80770()
{
  return MEMORY[0x270EE9FB8]();
}

uint64_t sub_22EE80780()
{
  return MEMORY[0x270F9FBD8]();
}

uint64_t sub_22EE80790()
{
  return MEMORY[0x270F9FC28]();
}

uint64_t sub_22EE807A0()
{
  return MEMORY[0x270F9FC40]();
}

uint64_t sub_22EE807B0()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_22EE807C0()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_22EE807D0()
{
  return MEMORY[0x270F9FC68]();
}

uint64_t sub_22EE807E0()
{
  return MEMORY[0x270F9FC80]();
}

uint64_t sub_22EE807F0()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_22EE80800()
{
  return MEMORY[0x270F9FD50]();
}

uint64_t sub_22EE80810()
{
  return MEMORY[0x270F9FD60]();
}

uint64_t sub_22EE80820()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_22EE80830()
{
  return MEMORY[0x270F9FD98]();
}

uint64_t sub_22EE80840()
{
  return MEMORY[0x270F9FFE8]();
}

uint64_t sub_22EE80870()
{
  return MEMORY[0x270FA00C0]();
}

uint64_t sub_22EE80880()
{
  return MEMORY[0x270FA0128]();
}

CGColorRef CGColorCreateCopyByMatchingToColorSpace(CGColorSpaceRef a1, CGColorRenderingIntent intent, CGColorRef color, CFDictionaryRef options)
{
  return (CGColorRef)MEMORY[0x270EE5B60](a1, *(void *)&intent, color, options);
}

CGFloat CGColorGetAlpha(CGColorRef color)
{
  MEMORY[0x270EE5BC0](color);
  return result;
}

CGColorSpaceRef CGColorGetColorSpace(CGColorRef color)
{
  return (CGColorSpaceRef)MEMORY[0x270EE5BC8](color);
}

CGColorSpaceRef CGColorSpaceCreateDeviceRGB(void)
{
  return (CGColorSpaceRef)MEMORY[0x270EE5C68]();
}

CGColorSpaceModel CGColorSpaceGetModel(CGColorSpaceRef space)
{
  return MEMORY[0x270EE5D08](space);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  MEMORY[0x270EE71A8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  MEMORY[0x270EE71D0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidX(CGRect rect)
{
  MEMORY[0x270EE71D8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidY(CGRect rect)
{
  MEMORY[0x270EE71F0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinX(CGRect rect)
{
  MEMORY[0x270EE71F8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinY(CGRect rect)
{
  MEMORY[0x270EE7210]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetWidth(CGRect rect)
{
  MEMORY[0x270EE7218]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_release(const void *aBlock)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x270FA0160]();
}

void bzero(void *a1, size_t a2)
{
}

uint64_t dyld_program_minos_at_least()
{
  return MEMORY[0x270ED9710]();
}

uint64_t dyld_program_sdk_at_least()
{
  return MEMORY[0x270ED9718]();
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A590](a1);
}

void objc_destroyWeak(id *location)
{
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x270F9A6B0](location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6E8](a1, a2);
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x270F9A9F8](location, obj);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

long double pow(long double __x, long double __y)
{
  MEMORY[0x270EDACF8](__x, __y);
  return result;
}

float powf(float a1, float a2)
{
  MEMORY[0x270EDAD00](a1, a2);
  return result;
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x270FA01A0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_asyncLet_begin()
{
  return MEMORY[0x270FA23D0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x270FA0208]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x270FA23F8]();
}

uint64_t swift_continuation_resume()
{
  return MEMORY[0x270FA2400]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x270FA0238]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x270FA0240]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x270FA2420]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x270FA2428]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_dynamicCastMetatype()
{
  return MEMORY[0x270FA0278]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x270FA0288]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x270FA02F8]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x270FA0300]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x270FA0310]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x270FA0338]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x270FA0348]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getFunctionTypeMetadata1()
{
  return MEMORY[0x270FA0390]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x270FA03B0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x270FA03B8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x270FA03D0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x270FA03F0]();
}

uint64_t swift_getOpaqueTypeMetadata2()
{
  return MEMORY[0x270FA03F8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x270FA0410]();
}

uint64_t swift_getTupleTypeLayout3()
{
  return MEMORY[0x270FA0418]();
}

uint64_t swift_getTupleTypeMetadata()
{
  return MEMORY[0x270FA0420]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x270FA0428]();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return MEMORY[0x270FA0430]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x270FA0458]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x270FA0460]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x270FA0470]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_initStaticObject()
{
  return MEMORY[0x270FA0480]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x270FA04D8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_readAtKeyPath()
{
  return MEMORY[0x270FA0500]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x270FA0538]();
}

uint64_t swift_setAtReferenceWritableKeyPath()
{
  return MEMORY[0x270FA0540]();
}

uint64_t swift_setAtWritableKeyPath()
{
  return MEMORY[0x270FA0548]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x270FA0550]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_stdlib_random()
{
  return MEMORY[0x270FA0570]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x270FA0578]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x270FA2450]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x270FA2458]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x270FA2460]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x270FA05D0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x270FA05E8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x270FA05F0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x270FA05F8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x270FA0648]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x270FA0650]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x270FA0658]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x270FA0670]();
}