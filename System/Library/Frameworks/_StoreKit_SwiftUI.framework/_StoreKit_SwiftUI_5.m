uint64_t sub_22ED96010(uint64_t a1)
{
  uint64_t v2;
  int EnumCaseMultiPayload;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t vars8;

  v2 = type metadata accessor for StoreKitEnvironmentValues(0);
  if (!__swift_getEnumTagSinglePayload(a1, 1, v2))
  {
    type metadata accessor for SubscriptionStorePolicyConfiguration.Destination(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      swift_release();
    }
    else if (!EnumCaseMultiPayload)
    {
      v4 = sub_22EE7C2B0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
    }
    v5 = (int *)type metadata accessor for SubscriptionStorePolicyConfiguration(0);
    v6 = a1 + v5[5];
    v7 = swift_getEnumCaseMultiPayload();
    if (v7 == 1)
    {
      swift_release();
    }
    else if (!v7)
    {
      v8 = sub_22EE7C2B0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);
    }
    v9 = a1 + v5[6];
    if (*(void *)(v9 + 24)) {
      __swift_destroy_boxed_opaque_existential_1(v9);
    }
    v10 = a1 + v5[7];
    if (*(void *)(v10 + 24)) {
      __swift_destroy_boxed_opaque_existential_1(v10);
    }
    swift_bridgeObjectRelease();
  }
  swift_release();

  return swift_release();
}

void *sub_22ED96198(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for StoreKitEnvironmentValues(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861CDE0);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    goto LABEL_22;
  }
  uint64_t v8 = type metadata accessor for SubscriptionStorePolicyConfiguration.Destination(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    swift_retain();
    goto LABEL_7;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v10 = sub_22EE7C2B0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
LABEL_7:
    swift_storeEnumTagMultiPayload();
    goto LABEL_9;
  }
  memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
LABEL_9:
  v11 = (int *)type metadata accessor for SubscriptionStorePolicyConfiguration(0);
  uint64_t v12 = v11[5];
  v13 = (void *)((char *)a1 + v12);
  v14 = (void *)((char *)a2 + v12);
  int v15 = swift_getEnumCaseMultiPayload();
  if (v15 == 1)
  {
    void *v13 = *v14;
    swift_retain();
  }
  else
  {
    if (v15)
    {
      memcpy(v13, v14, *(void *)(*(void *)(v8 - 8) + 64));
      goto LABEL_15;
    }
    uint64_t v16 = sub_22EE7C2B0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v13, v14, v16);
  }
  swift_storeEnumTagMultiPayload();
LABEL_15:
  uint64_t v17 = v11[6];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  uint64_t v20 = *(void *)((char *)a2 + v17 + 24);
  if (v20)
  {
    uint64_t v21 = *((void *)v19 + 4);
    *((void *)v18 + 3) = v20;
    *((void *)v18 + 4) = v21;
    (**(void (***)(void))(v20 - 8))();
  }
  else
  {
    long long v22 = *((_OWORD *)v19 + 1);
    *(_OWORD *)v18 = *(_OWORD *)v19;
    *((_OWORD *)v18 + 1) = v22;
    *((void *)v18 + 4) = *((void *)v19 + 4);
  }
  uint64_t v23 = v11[7];
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  uint64_t v26 = *(void *)((char *)a2 + v23 + 24);
  if (v26)
  {
    uint64_t v27 = *((void *)v25 + 4);
    *((void *)v24 + 3) = v26;
    *((void *)v24 + 4) = v27;
    (**(void (***)(void))(v26 - 8))();
  }
  else
  {
    long long v28 = *((_OWORD *)v25 + 1);
    *(_OWORD *)v24 = *(_OWORD *)v25;
    *((_OWORD *)v24 + 1) = v28;
    *((void *)v24 + 4) = *((void *)v25 + 4);
  }
  uint64_t v29 = *(int *)(v6 + 20);
  v30 = (void *)((char *)a1 + v29);
  v31 = (void *)((char *)a2 + v29);
  uint64_t v32 = v31[1];
  void *v30 = *v31;
  v30[1] = v32;
  *(_WORD *)((char *)a1 + *(int *)(v6 + 24)) = *(_WORD *)((char *)a2 + *(int *)(v6 + 24));
  swift_bridgeObjectRetain();
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
LABEL_22:
  uint64_t v33 = *(int *)(a3 + 24);
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  *(void *)((char *)a1 + v33) = *(void *)((char *)a2 + v33);
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_22ED964A4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for StoreKitEnvironmentValues(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (!EnumTagSinglePayload)
  {
    if (v8)
    {
      sub_22ED9423C((uint64_t)a1, (void (*)(void))type metadata accessor for StoreKitEnvironmentValues);
      goto LABEL_8;
    }
    if (a1 != a2)
    {
      sub_22ED9423C((uint64_t)a1, (void (*)(void))type metadata accessor for SubscriptionStorePolicyConfiguration.Destination);
      uint64_t v13 = type metadata accessor for SubscriptionStorePolicyConfiguration.Destination(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        *a1 = *a2;
        swift_retain();
        goto LABEL_30;
      }
      if (!EnumCaseMultiPayload)
      {
        uint64_t v15 = sub_22EE7C2B0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
LABEL_30:
        swift_storeEnumTagMultiPayload();
        goto LABEL_32;
      }
      memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
    }
LABEL_32:
    uint64_t v37 = type metadata accessor for SubscriptionStorePolicyConfiguration(0);
    uint64_t v38 = v37;
    if (a1 == a2) {
      goto LABEL_39;
    }
    uint64_t v39 = *(int *)(v37 + 20);
    v40 = (void *)((char *)a1 + v39);
    v41 = (void *)((char *)a2 + v39);
    sub_22ED9423C((uint64_t)a1 + v39, (void (*)(void))type metadata accessor for SubscriptionStorePolicyConfiguration.Destination);
    uint64_t v42 = type metadata accessor for SubscriptionStorePolicyConfiguration.Destination(0);
    int v43 = swift_getEnumCaseMultiPayload();
    if (v43 == 1)
    {
      void *v40 = *v41;
      swift_retain();
    }
    else
    {
      if (v43)
      {
        memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
LABEL_39:
        uint64_t v45 = *(int *)(v38 + 24);
        uint64_t v46 = (uint64_t)a1 + v45;
        v47 = (void *)((char *)a2 + v45);
        uint64_t v48 = *(void *)((char *)a2 + v45 + 24);
        if (*(void *)((char *)a1 + v45 + 24))
        {
          if (v48)
          {
            __swift_assign_boxed_opaque_existential_1((uint64_t *)v46, v47);
            goto LABEL_46;
          }
          __swift_destroy_boxed_opaque_existential_1(v46);
        }
        else if (v48)
        {
          *(void *)(v46 + 24) = v48;
          *(void *)(v46 + 32) = v47[4];
          (**(void (***)(uint64_t, char *))(v48 - 8))(v46, (char *)v47);
          goto LABEL_46;
        }
        long long v49 = *(_OWORD *)v47;
        long long v50 = *((_OWORD *)v47 + 1);
        *(void *)(v46 + 32) = v47[4];
        *(_OWORD *)uint64_t v46 = v49;
        *(_OWORD *)(v46 + 16) = v50;
LABEL_46:
        uint64_t v51 = *(int *)(v38 + 28);
        uint64_t v52 = (uint64_t)a1 + v51;
        v53 = (void *)((char *)a2 + v51);
        uint64_t v54 = *(void *)((char *)a2 + v51 + 24);
        if (*(void *)((char *)a1 + v51 + 24))
        {
          if (v54)
          {
            __swift_assign_boxed_opaque_existential_1((uint64_t *)v52, v53);
LABEL_53:
            uint64_t v57 = *(int *)(v6 + 20);
            v58 = (void *)((char *)a1 + v57);
            v59 = (void *)((char *)a2 + v57);
            void *v58 = *v59;
            v58[1] = v59[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v60 = *(int *)(v6 + 24);
            v61 = (char *)a1 + v60;
            v62 = (char *)a2 + v60;
            unsigned char *v61 = *v62;
            v61[1] = v62[1];
            goto LABEL_54;
          }
          __swift_destroy_boxed_opaque_existential_1(v52);
        }
        else if (v54)
        {
          *(void *)(v52 + 24) = v54;
          *(void *)(v52 + 32) = v53[4];
          (**(void (***)(uint64_t, char *))(v54 - 8))(v52, (char *)v53);
          goto LABEL_53;
        }
        long long v55 = *(_OWORD *)v53;
        long long v56 = *((_OWORD *)v53 + 1);
        *(void *)(v52 + 32) = v53[4];
        *(_OWORD *)uint64_t v52 = v55;
        *(_OWORD *)(v52 + 16) = v56;
        goto LABEL_53;
      }
      uint64_t v44 = sub_22EE7C2B0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v44 - 8) + 16))(v40, v41, v44);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_39;
  }
  if (v8)
  {
LABEL_8:
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861CDE0);
    memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
    goto LABEL_54;
  }
  uint64_t v9 = type metadata accessor for SubscriptionStorePolicyConfiguration.Destination(0);
  int v10 = swift_getEnumCaseMultiPayload();
  if (v10 == 1)
  {
    *a1 = *a2;
    swift_retain();
    goto LABEL_14;
  }
  if (!v10)
  {
    uint64_t v11 = sub_22EE7C2B0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
LABEL_14:
    swift_storeEnumTagMultiPayload();
    goto LABEL_16;
  }
  memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
LABEL_16:
  uint64_t v16 = (int *)type metadata accessor for SubscriptionStorePolicyConfiguration(0);
  uint64_t v17 = v16[5];
  v18 = (void *)((char *)a1 + v17);
  v19 = (void *)((char *)a2 + v17);
  int v20 = swift_getEnumCaseMultiPayload();
  if (v20 == 1)
  {
    void *v18 = *v19;
    swift_retain();
  }
  else
  {
    if (v20)
    {
      memcpy(v18, v19, *(void *)(*(void *)(v9 - 8) + 64));
      goto LABEL_22;
    }
    uint64_t v21 = sub_22EE7C2B0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v18, v19, v21);
  }
  swift_storeEnumTagMultiPayload();
LABEL_22:
  uint64_t v22 = v16[6];
  uint64_t v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  uint64_t v25 = *(void *)((char *)a2 + v22 + 24);
  if (v25)
  {
    *((void *)v23 + 3) = v25;
    *((void *)v23 + 4) = *((void *)v24 + 4);
    (**(void (***)(void))(v25 - 8))();
  }
  else
  {
    long long v26 = *(_OWORD *)v24;
    long long v27 = *((_OWORD *)v24 + 1);
    *((void *)v23 + 4) = *((void *)v24 + 4);
    *(_OWORD *)uint64_t v23 = v26;
    *((_OWORD *)v23 + 1) = v27;
  }
  uint64_t v28 = v16[7];
  uint64_t v29 = (char *)a1 + v28;
  v30 = (char *)a2 + v28;
  uint64_t v31 = *(void *)((char *)a2 + v28 + 24);
  if (v31)
  {
    *((void *)v29 + 3) = v31;
    *((void *)v29 + 4) = *((void *)v30 + 4);
    (**(void (***)(void))(v31 - 8))();
  }
  else
  {
    long long v32 = *(_OWORD *)v30;
    long long v33 = *((_OWORD *)v30 + 1);
    *((void *)v29 + 4) = *((void *)v30 + 4);
    *(_OWORD *)uint64_t v29 = v32;
    *((_OWORD *)v29 + 1) = v33;
  }
  uint64_t v34 = *(int *)(v6 + 20);
  v35 = (void *)((char *)a1 + v34);
  v36 = (void *)((char *)a2 + v34);
  void *v35 = *v36;
  v35[1] = v36[1];
  *(_WORD *)((char *)a1 + *(int *)(v6 + 24)) = *(_WORD *)((char *)a2 + *(int *)(v6 + 24));
  swift_bridgeObjectRetain();
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
LABEL_54:
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_retain();
  swift_release();
  return a1;
}

char *sub_22ED96B2C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for StoreKitEnvironmentValues(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861CDE0);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for SubscriptionStorePolicyConfiguration.Destination(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      uint64_t v9 = sub_22EE7C2B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
    }
    int v10 = (int *)type metadata accessor for SubscriptionStorePolicyConfiguration(0);
    uint64_t v11 = v10[5];
    uint64_t v12 = &a1[v11];
    uint64_t v13 = &a2[v11];
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v12, v13, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      uint64_t v14 = sub_22EE7C2B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v15 = v10[6];
    uint64_t v16 = &a1[v15];
    uint64_t v17 = &a2[v15];
    long long v18 = *((_OWORD *)v17 + 1);
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    *((_OWORD *)v16 + 1) = v18;
    *((void *)v16 + 4) = *((void *)v17 + 4);
    uint64_t v19 = v10[7];
    int v20 = &a1[v19];
    uint64_t v21 = &a2[v19];
    *((void *)v20 + 4) = *((void *)v21 + 4);
    long long v22 = *((_OWORD *)v21 + 1);
    *(_OWORD *)int v20 = *(_OWORD *)v21;
    *((_OWORD *)v20 + 1) = v22;
    *(_OWORD *)&a1[*(int *)(v6 + 20)] = *(_OWORD *)&a2[*(int *)(v6 + 20)];
    *(_WORD *)&a1[*(int *)(v6 + 24)] = *(_WORD *)&a2[*(int *)(v6 + 24)];
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v23 = *(int *)(a3 + 24);
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  *(void *)&a1[v23] = *(void *)&a2[v23];
  return a1;
}

char *sub_22ED96D60(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for StoreKitEnvironmentValues(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      uint64_t v9 = type metadata accessor for SubscriptionStorePolicyConfiguration.Destination(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        uint64_t v12 = sub_22EE7C2B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
        swift_storeEnumTagMultiPayload();
      }
      uint64_t v13 = (int *)type metadata accessor for SubscriptionStorePolicyConfiguration(0);
      uint64_t v14 = v13[5];
      uint64_t v15 = &a1[v14];
      uint64_t v16 = &a2[v14];
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v15, v16, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        uint64_t v17 = sub_22EE7C2B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
        swift_storeEnumTagMultiPayload();
      }
      uint64_t v18 = v13[6];
      uint64_t v19 = &a1[v18];
      int v20 = &a2[v18];
      long long v21 = *((_OWORD *)v20 + 1);
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      *((_OWORD *)v19 + 1) = v21;
      *((void *)v19 + 4) = *((void *)v20 + 4);
      uint64_t v22 = v13[7];
      uint64_t v23 = &a1[v22];
      v24 = &a2[v22];
      *((void *)v23 + 4) = *((void *)v24 + 4);
      long long v25 = *((_OWORD *)v24 + 1);
      *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
      *((_OWORD *)v23 + 1) = v25;
      *(_OWORD *)&a1[*(int *)(v6 + 20)] = *(_OWORD *)&a2[*(int *)(v6 + 20)];
      *(_WORD *)&a1[*(int *)(v6 + 24)] = *(_WORD *)&a2[*(int *)(v6 + 24)];
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_26;
    }
LABEL_7:
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861CDE0);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_26;
  }
  if (v8)
  {
    sub_22ED9423C((uint64_t)a1, (void (*)(void))type metadata accessor for StoreKitEnvironmentValues);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_22ED9423C((uint64_t)a1, (void (*)(void))type metadata accessor for SubscriptionStorePolicyConfiguration.Destination);
    uint64_t v11 = type metadata accessor for SubscriptionStorePolicyConfiguration.Destination(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      uint64_t v26 = sub_22EE7C2B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(a1, a2, v26);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v27 = type metadata accessor for SubscriptionStorePolicyConfiguration(0);
  uint64_t v28 = v27;
  if (a1 != a2)
  {
    uint64_t v29 = *(int *)(v27 + 20);
    v30 = &a1[v29];
    uint64_t v31 = &a2[v29];
    sub_22ED9423C((uint64_t)&a1[v29], (void (*)(void))type metadata accessor for SubscriptionStorePolicyConfiguration.Destination);
    uint64_t v32 = type metadata accessor for SubscriptionStorePolicyConfiguration.Destination(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      uint64_t v33 = sub_22EE7C2B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v30, v31, v33);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v34 = *(int *)(v28 + 24);
  uint64_t v35 = (uint64_t)&a1[v34];
  v36 = &a2[v34];
  if (*(void *)&a1[v34 + 24]) {
    __swift_destroy_boxed_opaque_existential_1(v35);
  }
  long long v37 = *((_OWORD *)v36 + 1);
  *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
  *(_OWORD *)(v35 + 16) = v37;
  *(void *)(v35 + 32) = *((void *)v36 + 4);
  uint64_t v38 = *(int *)(v28 + 28);
  uint64_t v39 = (uint64_t)&a1[v38];
  v40 = &a2[v38];
  if (*(void *)&a1[v38 + 24]) {
    __swift_destroy_boxed_opaque_existential_1(v39);
  }
  long long v41 = *((_OWORD *)v40 + 1);
  *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
  *(_OWORD *)(v39 + 16) = v41;
  *(void *)(v39 + 32) = *((void *)v40 + 4);
  uint64_t v42 = *(int *)(v6 + 20);
  int v43 = &a1[v42];
  uint64_t v44 = &a2[v42];
  uint64_t v46 = *(void *)v44;
  uint64_t v45 = *((void *)v44 + 1);
  *(void *)int v43 = v46;
  *((void *)v43 + 1) = v45;
  swift_bridgeObjectRelease();
  uint64_t v47 = *(int *)(v6 + 24);
  uint64_t v48 = &a1[v47];
  long long v49 = &a2[v47];
  *uint64_t v48 = *v49;
  v48[1] = v49[1];
LABEL_26:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_release();
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  swift_release();
  return a1;
}

uint64_t sub_22ED971EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22ED97200);
}

uint64_t sub_22ED97200()
{
  OUTLINED_FUNCTION_9_33();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861CDE0);
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v3 + 84) != v1) {
    return OUTLINED_FUNCTION_6_36(*(void *)(v0 + *(int *)(v2 + 20)));
  }
  uint64_t v4 = OUTLINED_FUNCTION_10_29();

  return __swift_getEnumTagSinglePayload(v4, v5, v6);
}

uint64_t sub_22ED97274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22ED97288);
}

void sub_22ED97288()
{
  OUTLINED_FUNCTION_7_26();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861CDE0);
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v4 + 84) == v3)
  {
    uint64_t v5 = OUTLINED_FUNCTION_16();
    __swift_storeEnumTagSinglePayload(v5, v6, v7, v8);
  }
  else
  {
    *(void *)(v1 + *(int *)(v2 + 20)) = v0;
  }
}

void sub_22ED972FC()
{
  sub_22ED973B0(319, &qword_2686262E0, MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_22ED973B0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for StoreKitEnvironmentValues(255);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_22ED97410()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22ED97434()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686248A0);
  OUTLINED_FUNCTION_6_10(v1);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (int *)type metadata accessor for SubscriptionStorePolicyConfiguration(0);
  if (!__swift_getEnumTagSinglePayload(v3, 1, (uint64_t)v4))
  {
    type metadata accessor for SubscriptionStorePolicyConfiguration.Destination(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      swift_release();
    }
    else if (!EnumCaseMultiPayload)
    {
      sub_22EE7C2B0();
      OUTLINED_FUNCTION_2_0();
      uint64_t v6 = OUTLINED_FUNCTION_8_16();
      v7(v6);
    }
    uint64_t v8 = v3 + v4[5];
    int v9 = swift_getEnumCaseMultiPayload();
    if (v9 == 1)
    {
      swift_release();
    }
    else if (!v9)
    {
      sub_22EE7C2B0();
      OUTLINED_FUNCTION_2_0();
      (*(void (**)(uint64_t))(v10 + 8))(v8);
    }
    uint64_t v11 = OUTLINED_FUNCTION_14_27(v4[6]);
    if (v12) {
      __swift_destroy_boxed_opaque_existential_1(v11);
    }
    uint64_t v13 = OUTLINED_FUNCTION_14_27(v4[7]);
    if (v14) {
      __swift_destroy_boxed_opaque_existential_1(v13);
    }
  }

  return swift_deallocObject();
}

uint64_t sub_22ED975B0()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686248A0);
  OUTLINED_FUNCTION_4_1(v0);
  uint64_t v1 = OUTLINED_FUNCTION_13_28();

  return sub_22ED93318(v1, v2);
}

unsigned char *sub_22ED97600(unsigned char *a1, __int16 *a2)
{
  return sub_22ED932A4(a1, *a2);
}

uint64_t sub_22ED97608(uint64_t a1, uint64_t *a2)
{
  return sub_22ED932C8(a1, *a2);
}

uint64_t sub_22ED97610()
{
  if (*(void *)(v0 + 16) != 1) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_22ED97650(uint64_t a1)
{
  return sub_22ED97608(a1, (uint64_t *)(v1 + 16));
}

uint64_t sub_22ED97670()
{
  return swift_deallocObject();
}

unsigned char *sub_22ED97680(unsigned char *a1)
{
  return sub_22ED97600(a1, (__int16 *)(v1 + 16));
}

uint64_t sub_22ED97688()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_26();
  v2(v1);
  OUTLINED_FUNCTION_2_0();
  uint64_t v3 = OUTLINED_FUNCTION_16_0();
  v4(v3);
  return v0;
}

uint64_t sub_22ED976D0()
{
  uint64_t v1 = OUTLINED_FUNCTION_15_26();
  v2(v1);
  OUTLINED_FUNCTION_2_0();
  uint64_t v3 = OUTLINED_FUNCTION_17_0();
  v4(v3);
  return v0;
}

unint64_t sub_22ED9771C()
{
  unint64_t result = qword_268626328;
  if (!qword_268626328)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268626308);
    sub_22ED977BC();
    sub_22EADDD7C(&qword_268626378, &qword_268626380);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268626328);
  }
  return result;
}

unint64_t sub_22ED977BC()
{
  unint64_t result = qword_268626330;
  if (!qword_268626330)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268626300);
    sub_22ED9785C();
    sub_22EADDD7C(&qword_268625BA8, &qword_268625BA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268626330);
  }
  return result;
}

unint64_t sub_22ED9785C()
{
  unint64_t result = qword_268626338;
  if (!qword_268626338)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686262F8);
    sub_22ED978FC();
    sub_22EADDD7C(&qword_268623410, &qword_268623418);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268626338);
  }
  return result;
}

unint64_t sub_22ED978FC()
{
  unint64_t result = qword_268626340;
  if (!qword_268626340)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686262F0);
    sub_22ED9799C();
    sub_22EADDD7C(&qword_268626368, &qword_268626370);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268626340);
  }
  return result;
}

unint64_t sub_22ED9799C()
{
  unint64_t result = qword_268626348;
  if (!qword_268626348)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686262E8);
    sub_22EADDD7C(&qword_268626350, &qword_268626310);
    sub_22EADDD7C(&qword_268626358, &qword_268626360);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268626348);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_4_35@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return sub_22EADAD08(v2, (uint64_t)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
}

uint64_t OUTLINED_FUNCTION_6_36@<X0>(unint64_t a1@<X8>)
{
  if (a1 >= 0xFFFFFFFF) {
    LODWORD(a1) = -1;
  }
  int v1 = a1 - 1;
  if (v1 < 0) {
    int v1 = -1;
  }
  return (v1 + 1);
}

uint64_t OUTLINED_FUNCTION_10_29()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_13_28()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_14_27@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

uint64_t OUTLINED_FUNCTION_15_26()
{
  return 0;
}

uint64_t sub_22ED97B18(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_22ED97B2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_22ED97B40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10)
{
  v22[0] = a7;
  v22[1] = a8;
  uint64_t v16 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v18);
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = a4;
  v19[3] = a5;
  uint64_t v20 = v22[0];
  v19[4] = a6;
  v19[5] = v20;
  v19[6] = a9;
  v19[7] = a10;
  v19[8] = a2;
  v19[9] = a3;
  sub_22EE7E880();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(a1, a5);
}

uint64_t sub_22ED97CA4@<X0>(uint64_t a1@<X0>, void (*a2)(char *)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v35 = a7;
  uint64_t v36 = a8;
  uint64_t v33 = a5;
  uint64_t v37 = a3;
  uint64_t v38 = a2;
  uint64_t v31 = a1;
  uint64_t v39 = a9;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_268623E20);
  MEMORY[0x270FA5388](v34);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_22EE7D5F0();
  sub_22ED9800C();
  uint64_t v32 = sub_22EE80340();
  uint64_t v15 = *(void *)(v32 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v32);
  uint64_t v18 = (char *)&v30 - v17;
  uint64_t v19 = *(void *)(a6 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v16);
  uint64_t v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  v24 = (char *)&v30 - v23;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v13, v31, v14);
  long long v25 = (void *)swift_allocObject();
  uint64_t v26 = v33;
  v25[2] = a4;
  v25[3] = v26;
  uint64_t v27 = v35;
  v25[4] = a6;
  v25[5] = v27;
  v25[6] = v36;
  v25[7] = a10;
  v25[8] = a4;
  sub_22ED98178();
  sub_22EE80490();
  swift_release();
  sub_22ED981CC((uint64_t)v13);
  v38(v18);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v32);
  sub_22EB69440(v22, a6, a10);
  uint64_t v28 = *(void (**)(char *, uint64_t))(v19 + 8);
  v28(v22, a6);
  sub_22EB69440(v24, a6, a10);
  return ((uint64_t (*)(char *, uint64_t))v28)(v24, a6);
}

uint64_t sub_22ED97FA0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_22ED97FD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22ED97CA4(a1, *(void (**)(char *))(v2 + 64), *(void *)(v2 + 72), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), a2, *(void *)(v2 + 56));
}

unint64_t sub_22ED9800C()
{
  unint64_t result = qword_268623E38;
  if (!qword_268623E38)
  {
    sub_22EE7D5F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268623E38);
  }
  return result;
}

uint64_t sub_22ED9805C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = sub_22EE7EC60();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v12 + 16))(v11, a1);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(a6 + 32))(v11, a3, a6);
}

uint64_t sub_22ED98154()
{
  return swift_deallocObject();
}

uint64_t sub_22ED98164(uint64_t a1)
{
  return sub_22ED9805C(a1, v1[8], v1[2], v1[3], v1[4], v1[5]);
}

unint64_t sub_22ED98178()
{
  unint64_t result = qword_268626388;
  if (!qword_268626388)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268623E20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268626388);
  }
  return result;
}

uint64_t sub_22ED981CC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268623E20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *assignWithCopy for PromotionalOfferProvider(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for PromotionalOfferProvider()
{
  return &type metadata for PromotionalOfferProvider;
}

ValueMetadata *type metadata accessor for SubscriptionPromotionalOfferModifier()
{
  return &type metadata for SubscriptionPromotionalOfferModifier;
}

uint64_t sub_22ED982AC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22ED982C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v23 = a4;
  uint64_t v24 = a5;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v23 - v12;
  uint64_t v14 = sub_22EE7F670();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void (**)(uint64_t, uint64_t))(a3 + 16);
  swift_retain();
  v18(a1, a2);
  swift_release();
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14) != 1)
  {
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v19(v17, v13, v14);
    sub_22ED98688((uint64_t)v17, a1, (uint64_t)v10);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v14) != 1)
    {
      uint64_t v20 = v24;
      v19((char *)v24, v10, v14);
      uint64_t v21 = 0;
      return __swift_storeEnumTagSinglePayload(v20, v21, 1, v14);
    }
    uint64_t v13 = v10;
  }
  uint64_t v20 = v24;
  sub_22EB57B3C((uint64_t)v13);
  uint64_t v21 = 1;
  return __swift_storeEnumTagSinglePayload(v20, v21, 1, v14);
}

uint64_t sub_22ED984F0()
{
  sub_22ED98DA0();
  sub_22EE7D4B0();
  return v1;
}

uint64_t sub_22ED9852C()
{
  return sub_22EE7D4C0();
}

uint64_t sub_22ED98568@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268626390);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a2;
  *(void *)(v13 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268626398);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a4;
  *(void *)(v14 + 24) = a5;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686263A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(a6, a1, v15);
  uint64_t v16 = (uint64_t *)(a6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2686263A8) + 36));
  *uint64_t v16 = KeyPath;
  v16[1] = v13;
  v16[2] = v14;
  swift_retain();

  return swift_retain();
}

uint64_t sub_22ED9867C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22ED98568(a1, *v2, v2[1], v2[2], v2[3], a2);
}

uint64_t sub_22ED98688@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v47[2] = a2;
  uint64_t v49 = a3;
  uint64_t v4 = type metadata accessor for SKLogger();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v48 = (char *)v47 - v8;
  uint64_t v9 = sub_22EE7F590();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v47 - v14;
  sub_22EE7F630();
  sub_22EE7F560();
  char v16 = sub_22EB14BD4((uint64_t)v15, (uint64_t)v12);
  uint64_t v17 = *(void (**)(char *, uint64_t))(v10 + 8);
  v17(v12, v9);
  v17(v15, v9);
  if ((v16 & 1) == 0 || (uint64_t v18 = sub_22EE7F620(), !v19))
  {
    if (qword_26861B778 != -1) {
      swift_once();
    }
    uint64_t v27 = __swift_project_value_buffer(v4, (uint64_t)qword_26864C398);
    sub_22EB107F0(v27, (uint64_t)v6);
    os_log_type_t v28 = sub_22EE7FFC0();
    uint64_t v29 = sub_22EE7C550();
    if (os_log_type_enabled(v29, v28))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      uint64_t v50 = v31;
      *(_DWORD *)uint64_t v30 = 136446466;
      uint64_t v52 = sub_22EC1FA24(0, 0xE000000000000000, &v50);
      sub_22EE800B0();
      *(_WORD *)(v30 + 12) = 2082;
      uint64_t v52 = sub_22EC1FA24(0xD0000000000000AFLL, 0x800000022EE857D0, &v50);
      sub_22EE800B0();
      _os_log_impl(&dword_22EAC6000, v29, v28, "%{public}s%{public}s", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x230FAE500](v31, -1, -1);
      MEMORY[0x230FAE500](v30, -1, -1);
    }

    uint64_t v32 = v49;
    uint64_t v33 = (uint64_t)v6;
    goto LABEL_19;
  }
  uint64_t v20 = v18;
  uint64_t v21 = sub_22EE7F470();
  uint64_t v22 = *(void *)(v21 + 16);
  if (!v22)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v34 = (uint64_t)v48;
    if (qword_26861B778 != -1) {
      swift_once();
    }
    uint64_t v35 = __swift_project_value_buffer(v4, (uint64_t)qword_26864C398);
    sub_22EB107F0(v35, v34);
    uint64_t v50 = 0;
    unint64_t v51 = 0xE000000000000000;
    sub_22EE801C0();
    sub_22EE7FAA0();
    sub_22EE7FAA0();
    swift_bridgeObjectRelease();
    sub_22EE7FAA0();
    _s17_StoreKit_SwiftUI012SubscriptionA25ControlStyleConfigurationV12PickerOptionV2idSSvg_0();
    sub_22EE7FAA0();
    swift_bridgeObjectRelease();
    sub_22EE7FAA0();
    uint64_t v37 = v50;
    unint64_t v36 = v51;
    os_log_type_t v38 = sub_22EE7FFC0();
    swift_bridgeObjectRetain_n();
    uint64_t v39 = sub_22EE7C550();
    if (os_log_type_enabled(v39, v38))
    {
      uint64_t v40 = swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      uint64_t v50 = v41;
      *(_DWORD *)uint64_t v40 = 136446466;
      uint64_t v52 = sub_22EC1FA24(0, 0xE000000000000000, &v50);
      sub_22EE800B0();
      *(_WORD *)(v40 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v52 = sub_22EC1FA24(v37, v36, &v50);
      sub_22EE800B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_22EAC6000, v39, v38, "%{public}s%{public}s", (uint8_t *)v40, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x230FAE500](v41, -1, -1);
      MEMORY[0x230FAE500](v40, -1, -1);
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v32 = v49;
    uint64_t v33 = v34;
LABEL_19:
    sub_22EB31B10(v33);
    uint64_t v42 = sub_22EE7F670();
    uint64_t v43 = v32;
    uint64_t v44 = 1;
    return __swift_storeEnumTagSinglePayload(v43, v44, 1, v42);
  }
  v47[1] = v20;
  uint64_t v23 = sub_22EE7F670();
  uint64_t v24 = *(void *)(v23 - 8);
  unint64_t v25 = v21 + ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
  uint64_t v26 = *(void *)(v24 + 72);
  sub_22ED98D48();
  while ((sub_22EE7F900() & 1) == 0)
  {
    v25 += v26;
    if (!--v22) {
      goto LABEL_13;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v46 = v49;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v49, a1, v23);
  uint64_t v43 = v46;
  uint64_t v44 = 0;
  uint64_t v42 = v23;
  return __swift_storeEnumTagSinglePayload(v43, v44, 1, v42);
}

unint64_t sub_22ED98D48()
{
  unint64_t result = qword_26861BBA0;
  if (!qword_26861BBA0)
  {
    sub_22EE7F670();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26861BBA0);
  }
  return result;
}

unint64_t sub_22ED98DA0()
{
  unint64_t result = qword_2686263B0;
  if (!qword_2686263B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686263B0);
  }
  return result;
}

ValueMetadata *_s38PromotionalOfferProviderEnvironmentKeyOMa()
{
  return &_s38PromotionalOfferProviderEnvironmentKeyON;
}

unint64_t sub_22ED98E00()
{
  unint64_t result = qword_2686263B8;
  if (!qword_2686263B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686263A8);
    sub_22EADDD7C(&qword_2686263C0, &qword_2686263A0);
    sub_22EADDD7C(&qword_2686263C8, &qword_2686263D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686263B8);
  }
  return result;
}

char *sub_22ED98EC4(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    a1 = &v10[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v11 = sub_22EE7C2B0();
      (*(void (**)(char *, char **, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(v6 + 64));
        return a1;
      }
      uint64_t v8 = *a2;
      uint64_t v9 = v8;
      *(void *)a1 = v8;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_22ED98FE4(void **a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v4 = sub_22EE7C2B0();
    int v5 = *(void (**)(void **, uint64_t))(*(void *)(v4 - 8) + 8);
    v5(a1, v4);
  }
  else if (!EnumCaseMultiPayload)
  {
    uint64_t v3 = *a1;
  }
}

void *sub_22ED99084(void *a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v9 = sub_22EE7C2B0();
    (*(void (**)(void *, void **, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
    }
    uint64_t v7 = *a2;
    id v8 = v7;
    *a1 = v7;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **sub_22ED99160(void **a1, void **a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_22ED9E284((uint64_t)a1, (void (*)(void))type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton.LicenseAgreementState);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v9 = sub_22EE7C2B0();
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
      }
      uint64_t v7 = *a2;
      id v8 = v7;
      *a1 = v7;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton.LicenseAgreementState(uint64_t a1)
{
  return sub_22EAD01C0(a1, (uint64_t *)&unk_2686263D8);
}

void *sub_22ED99280(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_22EE7C2B0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_22ED99338(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_22ED9E284((uint64_t)a1, (void (*)(void))type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton.LicenseAgreementState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_22EE7C2B0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_22ED99414()
{
  uint64_t result = sub_22EE7C2B0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_22ED994A8(void *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    a1[1] = a2[1];
    uint64_t v7 = *(int *)(a3 + 20);
    id v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (id *)((char *)a2 + v7);
    uint64_t v10 = type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton.LicenseAgreementState(0);
    swift_retain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
    {
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686203E0);
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
LABEL_12:
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686263E8);
      *(void *)((char *)v8 + *(int *)(v17 + 28)) = *(id *)((char *)v9 + *(int *)(v17 + 28));
      uint64_t v18 = *(int *)(a3 + 24);
      uint64_t v19 = *(void **)((char *)a2 + v18);
      *(void *)((char *)v4 + v18) = v19;
      swift_retain();
      id v20 = v19;
      return v4;
    }
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v16 = sub_22EE7C2B0();
      (*(void (**)(void *, id *, uint64_t))(*(void *)(v16 - 8) + 16))(v8, v9, v16);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
        goto LABEL_11;
      }
      id v14 = *v9;
      id v15 = *v9;
      *id v8 = v14;
    }
    swift_storeEnumTagMultiPayload();
LABEL_11:
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
    goto LABEL_12;
  }
  uint64_t v12 = *a2;
  *uint64_t v4 = *a2;
  uint64_t v4 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return v4;
}

void sub_22ED9969C(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = (id *)(a1 + *(int *)(a2 + 20));
  uint64_t v5 = type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton.LicenseAgreementState(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = sub_22EE7C2B0();
      (*(void (**)(id *, uint64_t))(*(void *)(v8 - 8) + 8))(v4, v8);
    }
    else if (!EnumCaseMultiPayload)
    {
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2686263E8);
  swift_release();
  uint64_t v6 = *(void **)(a1 + *(int *)(a2 + 24));
}

uint64_t sub_22ED99788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (id *)(a2 + v6);
  uint64_t v9 = type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton.LicenseAgreementState(0);
  swift_retain();
  if (!__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v14 = sub_22EE7C2B0();
      (*(void (**)(void *, id *, uint64_t))(*(void *)(v14 - 8) + 16))(v7, v8, v14);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
        goto LABEL_9;
      }
      id v12 = *v8;
      id v13 = *v8;
      *uint64_t v7 = v12;
    }
    swift_storeEnumTagMultiPayload();
LABEL_9:
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
    goto LABEL_10;
  }
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686203E0);
  memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
LABEL_10:
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686263E8);
  *(void *)((char *)v7 + *(int *)(v15 + 28)) = *(id *)((char *)v8 + *(int *)(v15 + 28));
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = *(void **)(a2 + v16);
  *(void *)(a1 + v16) = v17;
  swift_retain();
  id v18 = v17;
  return a1;
}

uint64_t sub_22ED9992C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (id *)(a2 + v6);
  uint64_t v9 = type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton.LicenseAgreementState(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  int v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (EnumTagSinglePayload)
  {
    if (!v11)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v19 = sub_22EE7C2B0();
        (*(void (**)(void *, id *, uint64_t))(*(void *)(v19 - 8) + 16))(v7, v8, v19);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
          goto LABEL_17;
        }
        id v13 = *v8;
        id v14 = *v8;
        *uint64_t v7 = v13;
      }
      swift_storeEnumTagMultiPayload();
LABEL_17:
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      goto LABEL_20;
    }
  }
  else
  {
    if (!v11)
    {
      if (a1 == a2) {
        goto LABEL_20;
      }
      sub_22ED9E284((uint64_t)v7, (void (*)(void))type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton.LicenseAgreementState);
      int v16 = swift_getEnumCaseMultiPayload();
      if (v16 == 1)
      {
        uint64_t v20 = sub_22EE7C2B0();
        (*(void (**)(void *, id *, uint64_t))(*(void *)(v20 - 8) + 16))(v7, v8, v20);
      }
      else
      {
        if (v16)
        {
          size_t v15 = *(void *)(*(void *)(v9 - 8) + 64);
          goto LABEL_9;
        }
        id v17 = *v8;
        id v18 = *v8;
        *uint64_t v7 = v17;
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_20;
    }
    sub_22ED9E284((uint64_t)v7, (void (*)(void))type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton.LicenseAgreementState);
  }
  size_t v15 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2686203E0) - 8) + 64);
LABEL_9:
  memcpy(v7, v8, v15);
LABEL_20:
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686263E8);
  *(void *)((char *)v7 + *(int *)(v21 + 28)) = *(id *)((char *)v8 + *(int *)(v21 + 28));
  swift_retain();
  swift_release();
  uint64_t v22 = *(int *)(a3 + 24);
  uint64_t v23 = *(void **)(a2 + v22);
  uint64_t v24 = *(void **)(a1 + v22);
  *(void *)(a1 + v22) = v23;
  id v25 = v23;

  return a1;
}

_OWORD *sub_22ED99BE8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton.LicenseAgreementState(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686203E0);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_22EE7C2B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v7, v8, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686263E8);
  *(void *)&v7[*(int *)(v12 + 28)] = *(void *)&v8[*(int *)(v12 + 28)];
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_22ED99D48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton.LicenseAgreementState(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  int v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (!EnumTagSinglePayload)
  {
    if (!v11)
    {
      if (a1 == a2) {
        goto LABEL_14;
      }
      sub_22ED9E284((uint64_t)v7, (void (*)(void))type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton.LicenseAgreementState);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v14 = sub_22EE7C2B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v7, v8, v14);
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      size_t v13 = *(void *)(*(void *)(v9 - 8) + 64);
      goto LABEL_8;
    }
    sub_22ED9E284((uint64_t)v7, (void (*)(void))type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton.LicenseAgreementState);
LABEL_7:
    size_t v13 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2686203E0) - 8) + 64);
LABEL_8:
    memcpy(v7, v8, v13);
    goto LABEL_14;
  }
  if (v11) {
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_22EE7C2B0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v7, v8, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
LABEL_14:
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686263E8);
  *(void *)&v7[*(int *)(v15 + 28)] = *(void *)&v8[*(int *)(v15 + 28)];
  swift_release();
  uint64_t v16 = *(int *)(a3 + 24);
  id v17 = *(void **)(a1 + v16);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);

  return a1;
}

uint64_t sub_22ED99FA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22ED99FBC);
}

uint64_t sub_22ED99FBC(uint64_t a1, int a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2686263E8);
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v6 + 84) != a2) {
    return OUTLINED_FUNCTION_20_0(*(void *)(a1 + *(int *)(a3 + 24)));
  }
  uint64_t v7 = OUTLINED_FUNCTION_12_14();

  return __swift_getEnumTagSinglePayload(v7, v8, v9);
}

uint64_t sub_22ED9A038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22ED9A04C);
}

void sub_22ED9A04C(uint64_t a1, int a2, int a3, uint64_t a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2686263E8);
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v8 + 84) == a3)
  {
    uint64_t v9 = OUTLINED_FUNCTION_10_14();
    __swift_storeEnumTagSinglePayload(v9, v10, v11, v12);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
}

uint64_t type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton(uint64_t a1)
{
  return sub_22EAD01C0(a1, (uint64_t *)&unk_2686263F0);
}

void sub_22ED9A0EC()
{
  sub_22ED9DC74(319, &qword_268626400, MEMORY[0x263F1B5D0]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_22ED9A1A8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22ED9A1C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v76 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268626408);
  MEMORY[0x270FA5388](v2 - 8);
  OUTLINED_FUNCTION_3_2();
  uint64_t v75 = v3;
  sub_22EE7DC20();
  OUTLINED_FUNCTION_0_2();
  uint64_t v71 = v5;
  uint64_t v72 = v4;
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_3_2();
  uint64_t v70 = v6;
  sub_22EE7CF90();
  OUTLINED_FUNCTION_0_2();
  uint64_t v65 = v7;
  uint64_t v66 = v8;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_3_2();
  v60[2] = v9;
  uint64_t v73 = type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton(0);
  OUTLINED_FUNCTION_0_2();
  uint64_t v11 = v10;
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v14);
  v60[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_268626410);
  OUTLINED_FUNCTION_0_2();
  uint64_t v62 = v15;
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_11_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268626418);
  OUTLINED_FUNCTION_0_2();
  uint64_t v63 = v18;
  uint64_t v64 = v17;
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_3_2();
  v60[0] = v19;
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_268626420) - 8;
  MEMORY[0x270FA5388](v61);
  OUTLINED_FUNCTION_11_0();
  uint64_t v22 = v21 - v20;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_268626428);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v24);
  OUTLINED_FUNCTION_11_0();
  uint64_t v27 = v26 - v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268626430);
  OUTLINED_FUNCTION_0_2();
  uint64_t v67 = v29;
  uint64_t v68 = v28;
  MEMORY[0x270FA5388](v28);
  OUTLINED_FUNCTION_11_0();
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_268626438);
  MEMORY[0x270FA5388](v30 - 8);
  OUTLINED_FUNCTION_3_2();
  uint64_t v69 = v31;
  uint64_t v74 = v1;
  sub_22ED9DEF8(v1, (uint64_t)v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton);
  unint64_t v32 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v33 = swift_allocObject();
  sub_22ED9E0A0((uint64_t)v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v33 + v32, (void (*)(void))type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268626440);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861EEF8);
  uint64_t v35 = sub_22EADDD7C(&qword_26861EEF0, &qword_26861EEF8);
  unint64_t v36 = sub_22ED9BC10();
  uint64_t v79 = v34;
  v80 = &type metadata for SubscriptionOfferViewNoCodeLabelStyle;
  uint64_t v81 = v35;
  unint64_t v82 = v36;
  swift_getOpaqueTypeConformance2();
  uint64_t v37 = v23;
  sub_22EE7EA20();
  sub_22EE7CF80();
  sub_22EADDD7C(&qword_268626450, &qword_268626410);
  sub_22ED9DE78(&qword_26861EE80, MEMORY[0x263F18FD0]);
  uint64_t v38 = v60[0];
  sub_22EE7E200();
  OUTLINED_FUNCTION_5_2();
  v39();
  OUTLINED_FUNCTION_5_2();
  v40();
  sub_22EE7E000();
  sub_22EE7DF60();
  uint64_t v41 = sub_22EE7DFD0();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v44 = v63;
  uint64_t v43 = v64;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 16))(v22, v38, v64);
  uint64_t v45 = (uint64_t *)(v22 + *(int *)(v61 + 44));
  *uint64_t v45 = KeyPath;
  v45[1] = v41;
  (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v38, v43);
  LODWORD(KeyPath) = sub_22EE7DA20();
  sub_22EADAD08(v22, v27, &qword_268626420);
  *(_DWORD *)(v27 + *(int *)(v37 + 36)) = KeyPath;
  sub_22EB0584C(v22, &qword_268626420);
  sub_22EE7DC00();
  unint64_t v46 = sub_22ED9CB60();
  sub_22EE7E410();
  OUTLINED_FUNCTION_5_2();
  v47();
  sub_22EB0584C(v27, &qword_268626428);
  if (qword_26861B6B8 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  uint64_t v79 = v37;
  v80 = (ValueMetadata *)v46;
  swift_getOpaqueTypeConformance2();
  uint64_t v48 = v69;
  sub_22EE7E4C0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_5_2();
  v49();
  uint64_t v50 = *(void *)(v74 + 8);
  char v77 = *(unsigned char *)v74;
  uint64_t v78 = v50;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861D440);
  sub_22EE7EA00();
  uint64_t v51 = v79;
  uint64_t v52 = v80;
  char v53 = v81;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2686263E8);
  uint64_t v54 = v75;
  sub_22EE7EA00();
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_268626468);
  uint64_t v56 = v76;
  uint64_t v57 = v76 + *(int *)(v55 + 36);
  uint64_t v58 = type metadata accessor for LicenseAgreementModifier(0);
  sub_22EADAD08(v54, v57 + *(int *)(v58 + 20), &qword_268626408);
  *(void *)uint64_t v57 = v51;
  *(void *)(v57 + 8) = v52;
  *(unsigned char *)(v57 + 16) = v53;
  sub_22EADAD08(v48, v56, &qword_268626438);
  sub_22EB0584C(v54, &qword_268626408);
  return sub_22EB0584C(v48, &qword_268626438);
}

uint64_t sub_22ED9A958()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C390);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_22EE7FD90();
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, v9);
  sub_22ED9DEF8(v0, (uint64_t)v5, (void (*)(void))type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton);
  sub_22EE7FD30();
  uint64_t v10 = sub_22EE7FD20();
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = MEMORY[0x263F8F500];
  *(void *)(v12 + 16) = v10;
  *(void *)(v12 + 24) = v13;
  sub_22ED9E0A0((uint64_t)v5, v12 + v11, (void (*)(void))type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton);
  sub_22EBEC0F0((uint64_t)v8, (uint64_t)&unk_268626478, v12);
  swift_release();
  uint64_t v14 = *(void *)(v1 + 8);
  v16[16] = *(unsigned char *)v1;
  uint64_t v17 = v14;
  v16[15] = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861D440);
  return sub_22EE7E9F0();
}

uint64_t sub_22ED9AB48()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861EEF8);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22EE7E910();
  sub_22EADDD7C(&qword_26861EEF0, &qword_26861EEF8);
  sub_22ED9BC10();
  sub_22EE7E1C0();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_22ED9ACB8@<X0>(uint64_t a1@<X8>)
{
  sub_22EE7D5A0();
  if (qword_26861B690 != -1) {
    swift_once();
  }
  id v2 = (id)qword_26864BFA0;
  uint64_t result = sub_22EE7E120();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5 & 1;
  *(void *)(a1 + 24) = v6;
  return result;
}

uint64_t sub_22ED9AD98@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_22EE7E8B0();
  *a1 = result;
  return result;
}

uint64_t sub_22ED9ADE0()
{
  v0[2] = sub_22EE7FD30();
  v0[3] = sub_22EE7FD20();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_22ED9AE8C;
  return sub_22ED9AF9C();
}

uint64_t sub_22ED9AE8C()
{
  OUTLINED_FUNCTION_9_12();
  OUTLINED_FUNCTION_1_5();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_12_8();
  *id v2 = v1;
  swift_task_dealloc();
  uint64_t v4 = sub_22EE7FD00();
  return MEMORY[0x270FA2498](sub_22EB84390, v4, v3);
}

uint64_t sub_22ED9AF9C()
{
  v1[2] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2686203E0);
  v1[3] = swift_task_alloc();
  v1[4] = swift_task_alloc();
  v1[5] = swift_task_alloc();
  v1[6] = swift_task_alloc();
  sub_22EE7FD30();
  v1[7] = sub_22EE7FD20();
  uint64_t v3 = sub_22EE7FD00();
  v1[8] = v3;
  v1[9] = v2;
  return MEMORY[0x270FA2498](sub_22ED9B08C, v3, v2);
}

uint64_t sub_22ED9B08C()
{
  uint64_t v1 = *(void *)(v0 + 48);
  *(_DWORD *)(v0 + 112) = *(_DWORD *)(type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton(0)
                                    + 20);
  *(void *)(v0 + 80) = __swift_instantiateConcreteTypeFromMangledName(&qword_2686263E8);
  sub_22EE7E9E0();
  uint64_t v2 = type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton.LicenseAgreementState(0);
  *(void *)(v0 + 88) = v2;
  if (__swift_getEnumTagSinglePayload(v1, 1, v2) != 1)
  {
    uint64_t v3 = *(void *)(v0 + 48);
    OUTLINED_FUNCTION_80();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        swift_release();
        sub_22ED9E284(v3, (void (*)(void))type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton.LicenseAgreementState);
      }
      else
      {
        swift_release();
      }
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      OUTLINED_FUNCTION_18_5();
      return v13();
    }
    sub_22ED9E284(v3, (void (*)(void))type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton.LicenseAgreementState);
  }
  uint64_t v6 = *(void *)(v0 + 32);
  uint64_t v5 = *(void *)(v0 + 40);
  OUTLINED_FUNCTION_80();
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload(v5, 0, 1, v2);
  sub_22EADAD08(v5, v6, &qword_2686203E0);
  sub_22EE7E9F0();
  uint64_t v7 = OUTLINED_FUNCTION_80();
  sub_22EB0584C(v7, v8);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_22ED9B29C;
  uint64_t v11 = *(void *)(v0 + 16);
  uint64_t v10 = *(void *)(v0 + 24);
  return sub_22ED9B5CC(v10, v11);
}

uint64_t sub_22ED9B29C()
{
  OUTLINED_FUNCTION_28_2();
  uint64_t v2 = *v1;
  OUTLINED_FUNCTION_12_8();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  *(void *)(v3 + 104) = v0;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v2 + 72);
  uint64_t v6 = *(void *)(v2 + 64);
  if (v0) {
    uint64_t v7 = sub_22ED9B4C4;
  }
  else {
    uint64_t v7 = sub_22ED9B3D0;
  }
  return MEMORY[0x270FA2498](v7, v6, v5);
}

uint64_t sub_22ED9B3D0()
{
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 24);
  swift_release();
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload(v2, 0, 1, v1);
  uint64_t v3 = OUTLINED_FUNCTION_80();
  sub_22EADAD08(v3, v4, &qword_2686203E0);
  sub_22EE7E9F0();
  sub_22EB0584C(v2, &qword_2686203E0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_18_5();
  return v5();
}

uint64_t sub_22ED9B4C4()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[11];
  uint64_t v4 = v0[4];
  uint64_t v3 = (void *)v0[5];
  swift_release();
  *uint64_t v3 = v1;
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload((uint64_t)v3, 0, 1, v2);
  sub_22EADAD08((uint64_t)v3, v4, &qword_2686203E0);
  sub_22EE7E9F0();
  sub_22EB0584C((uint64_t)v3, &qword_2686203E0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_18_5();
  return v5();
}

uint64_t sub_22ED9B5CC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 136) = a1;
  *(void *)(v2 + 144) = a2;
  return MEMORY[0x270FA2498](sub_22ED9B5EC, 0, 0);
}

uint64_t sub_22ED9B5EC()
{
  uint64_t v1 = v0[18];
  sub_22ED9CF4C();
  id v2 = sub_22ED9B928();
  v0[19] = v2;
  id v3 = objc_msgSend(v2, sel_URLForKey_, *(void *)(v1+ *(int *)(type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton(0) + 24)));
  v0[20] = v3;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_22ED9B758;
  uint64_t v4 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_22ED9B9BC;
  v0[13] = &block_descriptor_0;
  v0[14] = v4;
  objc_msgSend(v3, sel_valueWithCompletion_, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_22ED9B758()
{
  OUTLINED_FUNCTION_9_12();
  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_12_8();
  *id v2 = v1;
  *id v2 = *v0;
  uint64_t v4 = *(void *)(v3 + 48);
  *(void *)(v1 + 168) = v4;
  if (v4) {
    uint64_t v5 = sub_22ED9B8B8;
  }
  else {
    uint64_t v5 = sub_22ED9B83C;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_22ED9B83C()
{
  OUTLINED_FUNCTION_28_2();
  id v2 = (void *)v0[19];
  uint64_t v1 = (void *)v0[20];
  uint64_t v3 = (void *)v0[15];
  sub_22EE7C270();

  OUTLINED_FUNCTION_18_5();
  return v4();
}

uint64_t sub_22ED9B8B8()
{
  OUTLINED_FUNCTION_28_2();
  uint64_t v1 = *(void **)(v0 + 160);
  id v2 = *(void **)(v0 + 152);
  swift_willThrow();

  OUTLINED_FUNCTION_18_5();
  return v3();
}

id sub_22ED9B928()
{
  uint64_t v0 = (void *)sub_22EE7F9B0();
  swift_bridgeObjectRelease();
  uint64_t v1 = (void *)sub_22EE7F9B0();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_bagForProfile_profileVersion_, v0, v1);

  return v2;
}

uint64_t sub_22ED9B9BC(uint64_t result, void *a2, char a3, void *a4)
{
  uint64_t v4 = *(void *)(result + 32);
  if (a4)
  {
    id v5 = a4;
    return sub_22ED9BA34(v4, (uint64_t)v5);
  }
  else if (a2)
  {
    id v7 = a2;
    return sub_22ED9BA98(v4, (uint64_t)v7, a3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_22ED9BA34(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268623C60);
  uint64_t v4 = swift_allocError();
  *id v5 = a2;

  return MEMORY[0x270FA2410](a1, v4);
}

uint64_t sub_22ED9BA98(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3 = *(void *)(*(void *)(a1 + 64) + 40);
  *(void *)uint64_t v3 = a2;
  *(unsigned char *)(v3 + 8) = a3;
  return MEMORY[0x270FA2408]();
}

uint64_t sub_22ED9BAC0()
{
  type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton(0);
  OUTLINED_FUNCTION_1_4();
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_release();
  if (!OUTLINED_FUNCTION_10_30())
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      sub_22EE7C2B0();
      OUTLINED_FUNCTION_2_0();
      OUTLINED_FUNCTION_5_2();
      v7();
    }
    else if (!EnumCaseMultiPayload)
    {
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2686263E8);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_22ED9BBD4()
{
  uint64_t v0 = type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton(0);
  OUTLINED_FUNCTION_4_1(v0);
  return sub_22ED9A958();
}

unint64_t sub_22ED9BC10()
{
  unint64_t result = qword_268626448;
  if (!qword_268626448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268626448);
  }
  return result;
}

uint64_t sub_22ED9BC5C()
{
  uint64_t v1 = type metadata accessor for LicenseAgreementModifier(0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v4 = *(void *)(v0 + 8);
  char v5 = *(unsigned char *)(v0 + 16);
  v9[0] = *(void *)v0;
  v9[1] = v4;
  char v10 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861E660);
  sub_22EE7EB60();
  sub_22ED9DEF8(v0, (uint64_t)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for LicenseAgreementModifier);
  unint64_t v6 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v7 = swift_allocObject();
  sub_22ED9E0A0((uint64_t)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, (void (*)(void))type metadata accessor for LicenseAgreementModifier);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2686264D8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2686264E0);
  sub_22EADDD7C(&qword_2686264E8, &qword_2686264D8);
  sub_22ED9E144();
  sub_22EE7E5D0();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_22ED9BE64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v55 = a1;
  uint64_t v1 = sub_22EE7C400();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v2 = sub_22EE7F990();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_22EE7C220();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E1D0);
  uint64_t v51 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  char v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SFSafariView(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v47 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_268624398);
  MEMORY[0x270FA5388](v54);
  uint64_t v45 = (uint64_t)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v49 = (uint64_t)&v43 - v10;
  uint64_t v50 = sub_22EE7C2B0();
  uint64_t v48 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  unint64_t v46 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_268626508);
  MEMORY[0x270FA5388](v53);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268626510);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (uint64_t (**)@<X0>(uint64_t@<X8>))((char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_268626500);
  MEMORY[0x270FA5388](v52);
  uint64_t v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686203E0);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (void **)((char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for LicenseAgreementModifier(0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_268626408);
  MEMORY[0x230FABE70](v22);
  uint64_t v23 = type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton.LicenseAgreementState(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v23) == 1)
  {
LABEL_5:
    sub_22EE7F910();
    sub_22EE7C3F0();
    sub_22ED91694();
    uint64_t v57 = sub_22EE7FA20();
    uint64_t v58 = v36;
    sub_22EB051A0();
    sub_22EE7C470();
    uint64_t v37 = v51;
    uint64_t v38 = v56;
    (*(void (**)(uint64_t (**)@<X0>(uint64_t@<X8>), char *, uint64_t))(v51 + 16))(v16, v5, v56);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26861EC90);
    sub_22EADDD7C(&qword_26861E1E8, &qword_26861E1D0);
    sub_22EADDD7C((unint64_t *)&qword_26861EC88, &qword_26861EC90);
    sub_22EE7D800();
    sub_22EADAD08((uint64_t)v18, (uint64_t)v13, &qword_268626500);
    swift_storeEnumTagMultiPayload();
    sub_22ED9E1C0();
    sub_22ED0A9A8();
    sub_22EE7D800();
    sub_22EB0584C((uint64_t)v18, &qword_268626500);
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v5, v38);
  }
  uint64_t v43 = v18;
  uint64_t v44 = v13;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    uint64_t v18 = v43;
    uint64_t v13 = v44;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v25 = v48;
      uint64_t v26 = v46;
      uint64_t v27 = v21;
      uint64_t v28 = v50;
      (*(void (**)(char *, void **, uint64_t))(v48 + 32))(v46, v27, v50);
      uint64_t v29 = (uint64_t)v47;
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v47, v26, v28);
      uint64_t v30 = sub_22EE7CF20();
      char v31 = sub_22EE7DE70();
      uint64_t v32 = v45;
      sub_22ED9DEF8(v29, v45, (void (*)(void))type metadata accessor for SFSafariView);
      uint64_t v33 = v32 + *(int *)(v54 + 36);
      *(void *)uint64_t v33 = v30;
      *(unsigned char *)(v33 + 8) = v31;
      sub_22ED9E284(v29, (void (*)(void))type metadata accessor for SFSafariView);
      uint64_t v34 = v49;
      sub_22ED9E2D8(v32, v49);
      sub_22EADAD08(v34, (uint64_t)v13, &qword_268624398);
      swift_storeEnumTagMultiPayload();
      sub_22ED9E1C0();
      sub_22ED0A9A8();
      sub_22EE7D800();
      sub_22EB0584C(v34, &qword_268624398);
      return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v26, v28);
    }
    goto LABEL_5;
  }
  uint64_t v39 = *v21;
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = v39;
  *uint64_t v16 = sub_22ED9C6F4;
  v16[1] = 0;
  v16[2] = sub_22ED0C9A8;
  v16[3] = (uint64_t (*)@<X0>(uint64_t@<X8>))v40;
  swift_storeEnumTagMultiPayload();
  id v41 = v39;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861EC90);
  sub_22EADDD7C(&qword_26861E1E8, &qword_26861E1D0);
  sub_22EADDD7C((unint64_t *)&qword_26861EC88, &qword_26861EC90);
  uint64_t v42 = (uint64_t)v43;
  sub_22EE7D800();
  sub_22EADAD08(v42, (uint64_t)v44, &qword_268626500);
  swift_storeEnumTagMultiPayload();
  sub_22ED9E1C0();
  sub_22ED0A9A8();
  sub_22EE7D800();

  sub_22EB0584C(v42, &qword_268626500);
  return swift_release();
}

uint64_t sub_22ED9C6F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_22EE7C400();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_22EE7F990();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v4 = sub_22EE7C220();
  MEMORY[0x270FA5388](v4 - 8);
  sub_22EE7F910();
  sub_22EE7C3F0();
  sub_22ED91694();
  uint64_t result = sub_22EE7E140();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = v7 & 1;
  *(void *)(a1 + 24) = v8;
  return result;
}

uint64_t sub_22ED9C840@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_22EE7D4F0();
  if (qword_26861B720 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_26864C360;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686264C8);
  return sub_22ED9C8D0((char *)(a1 + *(int *)(v4 + 44)));
}

uint64_t sub_22ED9C8D0@<X0>(char *a1@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v1 = sub_22EE7DAB0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v25 = v1;
  uint64_t v26 = v2;
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  char v7 = (char *)&v25 - v6;
  uint64_t v8 = sub_22EE7DAD0();
  uint64_t v27 = *(void *)(v8 - 8);
  uint64_t v9 = v27;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v25 - v13;
  sub_22EE7DAE0();
  sub_22EE7DAC0();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v15(v11, v14, v8);
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
  v16(v4, v7, v1);
  uint64_t v17 = v28;
  v15(v28, v11, v8);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686264D0);
  uint64_t v19 = v25;
  v16(&v17[*(int *)(v18 + 48)], v4, v25);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v26 + 8);
  uint64_t v21 = v7;
  uint64_t v22 = v19;
  v20(v21, v19);
  uint64_t v23 = *(void (**)(char *, uint64_t))(v27 + 8);
  v23(v14, v8);
  v20(v4, v22);
  return ((uint64_t (*)(char *, uint64_t))v23)(v11, v8);
}

unint64_t sub_22ED9CB60()
{
  unint64_t result = qword_268626458;
  if (!qword_268626458)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268626428);
    sub_22ED9CC00();
    sub_22EADDD7C(&qword_268620A90, &qword_268620A98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268626458);
  }
  return result;
}

unint64_t sub_22ED9CC00()
{
  unint64_t result = qword_268626460;
  if (!qword_268626460)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268626420);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268626410);
    sub_22EE7CF90();
    sub_22EADDD7C(&qword_268626450, &qword_268626410);
    sub_22ED9DE78(&qword_26861EE80, MEMORY[0x263F18FD0]);
    swift_getOpaqueTypeConformance2();
    sub_22EADDD7C(&qword_26861C3E8, &qword_26861C3F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268626460);
  }
  return result;
}

uint64_t type metadata accessor for LicenseAgreementModifier(uint64_t a1)
{
  return sub_22EAD01C0(a1, (uint64_t *)&unk_268626498);
}

uint64_t sub_22ED9CD68()
{
  type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton(0);
  OUTLINED_FUNCTION_1_4();
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_unknownObjectRelease();
  swift_release();
  if (!OUTLINED_FUNCTION_10_30())
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      sub_22EE7C2B0();
      OUTLINED_FUNCTION_2_0();
      OUTLINED_FUNCTION_5_2();
      v7();
    }
    else if (!EnumCaseMultiPayload)
    {
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2686263E8);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_22ED9CE84()
{
  OUTLINED_FUNCTION_28_2();
  uint64_t v1 = type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton(0);
  OUTLINED_FUNCTION_4_1(v1);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_22EB659B8;
  return sub_22ED9ADE0();
}

unint64_t sub_22ED9CF4C()
{
  unint64_t result = qword_268626490;
  if (!qword_268626490)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268626490);
  }
  return result;
}

uint64_t sub_22ED9CF8C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
    return a1;
  }
  *(void *)(a1 + 8) = a2[1];
  *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  uint64_t v6 = *(int *)(a3 + 20);
  char v7 = (void *)(a1 + v6);
  uint64_t v8 = (uint64_t)a2 + v6;
  uint64_t v9 = *(uint64_t *)((char *)a2 + v6 + 8);
  *char v7 = *(uint64_t *)((char *)a2 + v6);
  v7[1] = v9;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268626408) + 32);
  uint64_t v11 = (void *)((char *)v7 + v10);
  uint64_t v12 = (void **)(v8 + v10);
  uint64_t v13 = type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton.LicenseAgreementState(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v18 = sub_22EE7C2B0();
      (*(void (**)(void *, void **, uint64_t))(*(void *)(v18 - 8) + 16))(v11, v12, v18);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
        goto LABEL_11;
      }
      uint64_t v16 = *v12;
      id v17 = v16;
      void *v11 = v16;
    }
    swift_storeEnumTagMultiPayload();
LABEL_11:
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
    return a1;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686203E0);
  memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
  return a1;
}

void sub_22ED9D178(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  swift_release();
  swift_release();
  uint64_t v5 = (void **)(v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268626408) + 32));
  uint64_t v6 = type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton.LicenseAgreementState(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v5, 1, v6))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v9 = sub_22EE7C2B0();
      uint64_t v10 = *(void (**)(void **, uint64_t))(*(void *)(v9 - 8) + 8);
      v10(v5, v9);
    }
    else if (!EnumCaseMultiPayload)
    {
      uint64_t v8 = *v5;
    }
  }
}

uint64_t sub_22ED9D280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = a2 + v5;
  uint64_t v8 = *(void *)(a2 + v5 + 8);
  *uint64_t v6 = *(void *)(a2 + v5);
  v6[1] = v8;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268626408) + 32);
  uint64_t v10 = (void *)((char *)v6 + v9);
  uint64_t v11 = (void **)(v7 + v9);
  uint64_t v12 = type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton.LicenseAgreementState(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v17 = sub_22EE7C2B0();
      (*(void (**)(void *, void **, uint64_t))(*(void *)(v17 - 8) + 16))(v10, v11, v17);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
        goto LABEL_9;
      }
      uint64_t v15 = *v11;
      id v16 = v15;
      *uint64_t v10 = v15;
    }
    swift_storeEnumTagMultiPayload();
LABEL_9:
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
    return a1;
  }
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686203E0);
  memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  return a1;
}

uint64_t sub_22ED9D41C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(void *)(a1 + v6) = *(void *)(a2 + v6);
  swift_retain();
  swift_release();
  *(void *)(v7 + 8) = *(void *)(v8 + 8);
  swift_retain();
  swift_release();
  uint64_t v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268626408) + 32);
  uint64_t v10 = (void *)(v7 + v9);
  uint64_t v11 = (void **)(v8 + v9);
  uint64_t v12 = type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton.LicenseAgreementState(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v12);
  int v14 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12);
  if (EnumTagSinglePayload)
  {
    if (!v14)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v22 = sub_22EE7C2B0();
        (*(void (**)(void *, void **, uint64_t))(*(void *)(v22 - 8) + 16))(v10, v11, v22);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
          goto LABEL_17;
        }
        id v16 = *v11;
        id v17 = v16;
        *uint64_t v10 = v16;
      }
      swift_storeEnumTagMultiPayload();
LABEL_17:
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
      return a1;
    }
  }
  else
  {
    if (!v14)
    {
      if (a1 == a2) {
        return a1;
      }
      sub_22ED9E284((uint64_t)v10, (void (*)(void))type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton.LicenseAgreementState);
      int v19 = swift_getEnumCaseMultiPayload();
      if (v19 == 1)
      {
        uint64_t v23 = sub_22EE7C2B0();
        (*(void (**)(void *, void **, uint64_t))(*(void *)(v23 - 8) + 16))(v10, v11, v23);
      }
      else
      {
        if (v19)
        {
          size_t v18 = *(void *)(*(void *)(v12 - 8) + 64);
          goto LABEL_9;
        }
        uint64_t v20 = *v11;
        id v21 = v20;
        *uint64_t v10 = v20;
      }
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    sub_22ED9E284((uint64_t)v10, (void (*)(void))type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton.LicenseAgreementState);
  }
  size_t v18 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2686203E0) - 8) + 64);
LABEL_9:
  memcpy(v10, v11, v18);
  return a1;
}

uint64_t sub_22ED9D6F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = a2 + v4;
  uint64_t v7 = *(void *)(a2 + v4 + 8);
  *uint64_t v5 = *(void *)(a2 + v4);
  v5[1] = v7;
  uint64_t v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268626408) + 32);
  uint64_t v9 = (char *)v5 + v8;
  uint64_t v10 = (const void *)(v6 + v8);
  uint64_t v11 = type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton.LicenseAgreementState(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686203E0);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_22EE7C2B0();
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v9, v10, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_22ED9D844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(void *)(a1 + v6) = *(void *)(a2 + v6);
  swift_release();
  *(void *)(v7 + 8) = *(void *)(v8 + 8);
  swift_release();
  uint64_t v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268626408) + 32);
  uint64_t v10 = (void *)(v7 + v9);
  uint64_t v11 = (const void *)(v8 + v9);
  uint64_t v12 = type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton.LicenseAgreementState(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v12);
  int v14 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12);
  if (!EnumTagSinglePayload)
  {
    if (!v14)
    {
      if (a1 == a2) {
        return a1;
      }
      sub_22ED9E284((uint64_t)v10, (void (*)(void))type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton.LicenseAgreementState);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v17 = sub_22EE7C2B0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(v10, v11, v17);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      size_t v16 = *(void *)(*(void *)(v12 - 8) + 64);
      goto LABEL_8;
    }
    sub_22ED9E284((uint64_t)v10, (void (*)(void))type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton.LicenseAgreementState);
LABEL_7:
    size_t v16 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2686203E0) - 8) + 64);
LABEL_8:
    memcpy(v10, v11, v16);
    return a1;
  }
  if (v14) {
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_22EE7C2B0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v10, v11, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
  return a1;
}

uint64_t sub_22ED9DAB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22ED9DAC4);
}

uint64_t sub_22ED9DAC4(uint64_t a1, int a2)
{
  if (a2 == 0x7FFFFFFF) {
    return OUTLINED_FUNCTION_20_0(*(void *)(a1 + 8));
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_268626408);
  uint64_t v3 = OUTLINED_FUNCTION_12_14();

  return __swift_getEnumTagSinglePayload(v3, v4, v5);
}

uint64_t sub_22ED9DB38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22ED9DB4C);
}

uint64_t sub_22ED9DB4C(uint64_t result, int a2, int a3)
{
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268626408);
    uint64_t v3 = OUTLINED_FUNCTION_10_14();
    return __swift_storeEnumTagSinglePayload(v3, v4, v5, v6);
  }
  return result;
}

void sub_22ED9DBC0()
{
  sub_22ED9DC74(319, &qword_2686264A8, MEMORY[0x263F1B750]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_22ED9DC74(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686203E0);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

ValueMetadata *type metadata accessor for SubscriptionOfferViewNoCodeLabelStyle()
{
  return &type metadata for SubscriptionOfferViewNoCodeLabelStyle;
}

unint64_t sub_22ED9DCEC()
{
  unint64_t result = qword_2686264B0;
  if (!qword_2686264B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268626468);
    sub_22ED9DD98();
    sub_22ED9DE78(&qword_2686264C0, (void (*)(uint64_t))type metadata accessor for LicenseAgreementModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686264B0);
  }
  return result;
}

unint64_t sub_22ED9DD98()
{
  unint64_t result = qword_2686264B8;
  if (!qword_2686264B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268626438);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268626428);
    sub_22ED9CB60();
    swift_getOpaqueTypeConformance2();
    sub_22ED9DE78((unint64_t *)&qword_26861C3C0, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686264B8);
  }
  return result;
}

uint64_t sub_22ED9DE78(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22ED9DEC0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22ED9DEDC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22ED9DEF8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_2_0();
  uint64_t v4 = OUTLINED_FUNCTION_16_0();
  v5(v4);
  return a2;
}

uint64_t sub_22ED9DF4C()
{
  uint64_t v1 = (int *)(type metadata accessor for LicenseAgreementModifier(0) - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_release();
  swift_release();
  uint64_t v3 = v2 + v1[7];
  swift_release();
  swift_release();
  uint64_t v4 = (id *)(v3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268626408) + 32));
  uint64_t v5 = type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton.LicenseAgreementState(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      sub_22EE7C2B0();
      OUTLINED_FUNCTION_2_0();
      OUTLINED_FUNCTION_5_2();
      v8();
    }
    else if (!EnumCaseMultiPayload)
    {
    }
  }

  return swift_deallocObject();
}

uint64_t sub_22ED9E0A0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_2_0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_22ED9E100@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for LicenseAgreementModifier(0);
  OUTLINED_FUNCTION_4_1(v2);
  return sub_22ED9BE64(a1);
}

unint64_t sub_22ED9E144()
{
  unint64_t result = qword_2686264F0;
  if (!qword_2686264F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686264E0);
    sub_22ED9E1C0();
    sub_22ED0A9A8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686264F0);
  }
  return result;
}

unint64_t sub_22ED9E1C0()
{
  unint64_t result = qword_2686264F8;
  if (!qword_2686264F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268626500);
    sub_22EADDD7C(&qword_26861E1E8, &qword_26861E1D0);
    sub_22EADDD7C((unint64_t *)&qword_26861EC88, &qword_26861EC90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686264F8);
  }
  return result;
}

uint64_t sub_22ED9E284(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_5_2();
  v3();
  return a1;
}

uint64_t sub_22ED9E2D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268624398);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22ED9E340()
{
  return swift_deallocObject();
}

uint64_t sub_22ED9E378()
{
  return sub_22EADDD7C(&qword_268626518, &qword_268626520);
}

uint64_t sub_22ED9E3B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t OUTLINED_FUNCTION_10_30()
{
  uint64_t v2 = v1 + *(int *)(v0 + 20);
  uint64_t v3 = type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton.LicenseAgreementState(0);
  return __swift_getEnumTagSinglePayload(v2, 1, v3);
}

void sub_22ED9E498()
{
  qword_26864C640 = (uint64_t)&unk_26E26AEE8;
}

uint64_t sub_22ED9E4AC()
{
  uint64_t v1 = v0;
  unint64_t v3 = *v0;
  unint64_t v2 = v0[1];
  uint64_t v4 = self;
  swift_bridgeObjectRetain();
  id v5 = objc_msgSend(v4, sel_mainBundle);
  id v6 = objc_msgSend(v5, sel_bundleIdentifier);

  if (v6)
  {
    unint64_t v7 = sub_22EE7F9E0();
    unint64_t v9 = v8;

    uint64_t v10 = sub_22EB70E58(v7, v9);
    unint64_t v12 = v11;
    swift_bridgeObjectRelease();
    uint64_t v13 = sub_22EE7C360();
    unint64_t v15 = v14;
    sub_22EB2AC74(v10, v12);
  }
  else
  {
    uint64_t v13 = 0;
    unint64_t v15 = 0xE000000000000000;
  }
  char v16 = sub_22ED75CF8(v13, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v16) {
    return 0;
  }
  uint64_t v17 = sub_22EE2F164(v3, v2, *((unsigned __int16 *)v1 + 8) | (*((unsigned __int8 *)v1 + 18) << 16));
  if (!v17) {
    return 0;
  }
  uint64_t v18 = (uint64_t)v17;
  int v19 = sub_22EE2FE9C();
  if (!v19)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v20 = (uint64_t)v19;
  type metadata accessor for SubscriptionViewPurchaseEvent();
  uint64_t v21 = sub_22EE2FBA8();
  if (!v21)
  {
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  uint64_t v22 = v21;
  uint64_t v23 = sub_22ED0DAE0(v20, v18, 1);
  uint64_t v24 = sub_22ED0DAE0(v22, v23, 1);
  if (qword_26861B908 != -1) {
    swift_once();
  }
  uint64_t v25 = *(void *)(qword_26864C640 + 16);
  if (v25)
  {
    uint64_t v26 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    do
    {
      uint64_t v28 = *(v26 - 1);
      uint64_t v27 = *v26;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v29 = sub_22ED0E9D8(v28, v27);
      char v31 = v30;
      swift_bridgeObjectRelease();
      if (v31)
      {
        swift_isUniquelyReferenced_nonNull_native();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26861D218);
        sub_22EE80370();
        swift_bridgeObjectRelease();
        uint64_t v32 = *(void **)(*(void *)(v24 + 56) + 8 * v29);
        sub_22EB2AC34();
        sub_22EE80390();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      v26 += 2;
      --v25;
    }
    while (v25);
    swift_bridgeObjectRelease();
  }
  return v24;
}

uint64_t type metadata accessor for SubscriptionViewPurchaseEvent()
{
  uint64_t result = qword_268626528;
  if (!qword_268626528) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_22ED9E800(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (void *)(v20 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(_WORD *)(a1 + 17) = *(_WORD *)((char *)a2 + 17);
    *(void *)(a1 + 24) = a2[3];
    *(_WORD *)(a1 + 32) = *((_WORD *)a2 + 16);
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    *(void *)(a1 + 40) = a2[5];
    uint64_t v6 = a2[7];
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    *(void *)(a1 + 56) = v6;
    *(unsigned char *)(a1 + 65) = *((unsigned char *)a2 + 65);
    *(_WORD *)(a1 + 66) = *((_WORD *)a2 + 33);
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    *(void *)(a1 + 72) = a2[9];
    uint64_t v10 = sub_22EE7C3C0();
    unint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    unint64_t v12 = (int *)type metadata accessor for MintViewBasePurchaseEvent(0);
    *(unsigned char *)(v8 + v12[5]) = *(unsigned char *)(v9 + v12[5]);
    v11(v8 + v12[6], v9 + v12[6], v10);
    *(unsigned char *)(v8 + v12[7]) = *(unsigned char *)(v9 + v12[7]);
    uint64_t v13 = v12[8];
    uint64_t v14 = v8 + v13;
    uint64_t v15 = v9 + v13;
    *(unsigned char *)(v14 + 8) = *(unsigned char *)(v15 + 8);
    *(void *)uint64_t v14 = *(void *)v15;
    uint64_t v16 = v12[9];
    uint64_t v17 = (void *)(v8 + v16);
    uint64_t v18 = (void *)(v9 + v16);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    *(unsigned char *)(v8 + v12[10]) = *(unsigned char *)(v9 + v12[10]);
    *(unsigned char *)(v8 + v12[11]) = *(unsigned char *)(v9 + v12[11]);
    *(unsigned char *)(v8 + v12[12]) = *(unsigned char *)(v9 + v12[12]);
    swift_bridgeObjectRetain();
  }
  return v3;
}

uint64_t sub_22ED9E9E0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_22EE7C3C0();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  uint64_t v7 = type metadata accessor for MintViewBasePurchaseEvent(0);
  v6(v4 + *(int *)(v7 + 24), v5);

  return swift_bridgeObjectRelease();
}

uint64_t sub_22ED9EAA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(_WORD *)(a1 + 66) = *(_WORD *)(a2 + 66);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v9 = sub_22EE7C3C0();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  unint64_t v11 = (int *)type metadata accessor for MintViewBasePurchaseEvent(0);
  *(unsigned char *)(v7 + v11[5]) = *(unsigned char *)(v8 + v11[5]);
  v10(v7 + v11[6], v8 + v11[6], v9);
  *(unsigned char *)(v7 + v11[7]) = *(unsigned char *)(v8 + v11[7]);
  uint64_t v12 = v11[8];
  uint64_t v13 = v7 + v12;
  uint64_t v14 = v8 + v12;
  *(unsigned char *)(v13 + 8) = *(unsigned char *)(v14 + 8);
  *(void *)uint64_t v13 = *(void *)v14;
  uint64_t v15 = v11[9];
  uint64_t v16 = (void *)(v7 + v15);
  uint64_t v17 = (void *)(v8 + v15);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  *(unsigned char *)(v7 + v11[10]) = *(unsigned char *)(v8 + v11[10]);
  *(unsigned char *)(v7 + v11[11]) = *(unsigned char *)(v8 + v11[11]);
  *(unsigned char *)(v7 + v11[12]) = *(unsigned char *)(v8 + v11[12]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_22ED9EC38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(unsigned char *)(a1 + 27) = *(unsigned char *)(a2 + 27);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  *(unsigned char *)(a1 + 29) = *(unsigned char *)(a2 + 29);
  *(unsigned char *)(a1 + 30) = *(unsigned char *)(a2 + 30);
  *(unsigned char *)(a1 + 31) = *(unsigned char *)(a2 + 31);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  uint64_t v6 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v7;
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(unsigned char *)(a1 + 66) = *(unsigned char *)(a2 + 66);
  *(unsigned char *)(a1 + 67) = *(unsigned char *)(a2 + 67);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_22EE7C3C0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24);
  v12(v9, v10, v11);
  uint64_t v13 = (int *)type metadata accessor for MintViewBasePurchaseEvent(0);
  *(unsigned char *)(v9 + v13[5]) = *(unsigned char *)(v10 + v13[5]);
  v12(v9 + v13[6], v10 + v13[6], v11);
  *(unsigned char *)(v9 + v13[7]) = *(unsigned char *)(v10 + v13[7]);
  uint64_t v14 = v13[8];
  uint64_t v15 = v9 + v14;
  uint64_t v16 = v10 + v14;
  char v17 = *(unsigned char *)(v16 + 8);
  *(void *)uint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = v17;
  uint64_t v18 = v13[9];
  uint64_t v19 = (void *)(v9 + v18);
  uint64_t v20 = (void *)(v10 + v18);
  void *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v9 + v13[10]) = *(unsigned char *)(v10 + v13[10]);
  *(unsigned char *)(v9 + v13[11]) = *(unsigned char *)(v10 + v13[11]);
  *(unsigned char *)(v9 + v13[12]) = *(unsigned char *)(v10 + v13[12]);
  return a1;
}

uint64_t sub_22ED9EE4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 15) = *(_DWORD *)(a2 + 15);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a2 + v4;
  uint64_t v6 = a1 + v4;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v7 = sub_22EE7C3C0();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32);
  v8(v6, v5, v7);
  uint64_t v9 = (int *)type metadata accessor for MintViewBasePurchaseEvent(0);
  *(unsigned char *)(v6 + v9[5]) = *(unsigned char *)(v5 + v9[5]);
  v8(v6 + v9[6], v5 + v9[6], v7);
  *(unsigned char *)(v6 + v9[7]) = *(unsigned char *)(v5 + v9[7]);
  uint64_t v10 = v9[8];
  uint64_t v11 = v6 + v10;
  uint64_t v12 = v5 + v10;
  *(unsigned char *)(v11 + 8) = *(unsigned char *)(v12 + 8);
  *(void *)uint64_t v11 = *(void *)v12;
  *(_OWORD *)(v6 + v9[9]) = *(_OWORD *)(v5 + v9[9]);
  *(unsigned char *)(v6 + v9[10]) = *(unsigned char *)(v5 + v9[10]);
  *(unsigned char *)(v6 + v9[11]) = *(unsigned char *)(v5 + v9[11]);
  *(unsigned char *)(v6 + v9[12]) = *(unsigned char *)(v5 + v9[12]);
  return a1;
}

uint64_t sub_22ED9EF90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  *(unsigned char *)(a1 + 27) = *(unsigned char *)(a2 + 27);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  *(unsigned char *)(a1 + 29) = *(unsigned char *)(a2 + 29);
  *(unsigned char *)(a1 + 30) = *(unsigned char *)(a2 + 30);
  *(unsigned char *)(a1 + 31) = *(unsigned char *)(a2 + 31);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_WORD *)(a1 + 65) = *(_WORD *)(a2 + 65);
  *(unsigned char *)(a1 + 67) = *(unsigned char *)(a2 + 67);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_22EE7C3C0();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  uint64_t v12 = (int *)type metadata accessor for MintViewBasePurchaseEvent(0);
  *(unsigned char *)(v8 + v12[5]) = *(unsigned char *)(v9 + v12[5]);
  v11(v8 + v12[6], v9 + v12[6], v10);
  *(unsigned char *)(v8 + v12[7]) = *(unsigned char *)(v9 + v12[7]);
  uint64_t v13 = v12[8];
  uint64_t v14 = v8 + v13;
  uint64_t v15 = v9 + v13;
  *(unsigned char *)(v14 + 8) = *(unsigned char *)(v15 + 8);
  *(void *)uint64_t v14 = *(void *)v15;
  uint64_t v16 = v12[9];
  char v17 = (void *)(v8 + v16);
  uint64_t v18 = (uint64_t *)(v9 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *char v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + v12[10]) = *(unsigned char *)(v9 + v12[10]);
  *(unsigned char *)(v8 + v12[11]) = *(unsigned char *)(v9 + v12[11]);
  *(unsigned char *)(v8 + v12[12]) = *(unsigned char *)(v9 + v12[12]);
  return a1;
}

uint64_t sub_22ED9F15C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22ED9F170);
}

uint64_t sub_22ED9F170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = type metadata accessor for MintViewBasePurchaseEvent(0);
    uint64_t v10 = a1 + *(int *)(a3 + 24);
    return __swift_getEnumTagSinglePayload(v10, a2, v9);
  }
}

uint64_t sub_22ED9F204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22ED9F218);
}

uint64_t sub_22ED9F218(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = type metadata accessor for MintViewBasePurchaseEvent(0);
    uint64_t v8 = v5 + *(int *)(a4 + 24);
    return __swift_storeEnumTagSinglePayload(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_22ED9F298()
{
  uint64_t result = type metadata accessor for MintViewBasePurchaseEvent(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_22ED9F338(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v17 = MEMORY[0x263F8EE78];
    sub_22EC62290(0, v1, 0);
    uint64_t v2 = v17;
    uint64_t v4 = type metadata accessor for SubscriptionStoreContentConfiguration.Section(0);
    OUTLINED_FUNCTION_6_10(v4);
    uint64_t v6 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v8 = *(void *)(v7 + 72);
    do
    {
      sub_22EADAAEC(v6, (uint64_t)v15);
      uint64_t v17 = v2;
      unint64_t v10 = *(void *)(v2 + 16);
      unint64_t v9 = *(void *)(v2 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_22EC62290(v9 > 1, v10 + 1, 1);
        uint64_t v2 = v17;
      }
      *(void *)(v2 + 16) = v10 + 1;
      uint64_t v11 = v2 + 40 * v10;
      long long v12 = v15[0];
      long long v13 = v15[1];
      *(void *)(v11 + 64) = v16;
      *(_OWORD *)(v11 + 32) = v12;
      *(_OWORD *)(v11 + 48) = v13;
      v6 += v8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_22ED9F450()
{
  OUTLINED_FUNCTION_4_2();
  return (*(uint64_t (**)(void))(v0 + 32))();
}

void sub_22ED9F48C()
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v200 = v2;
  uint64_t v211 = 0;
  uint64_t v189 = type metadata accessor for SKLogger();
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_3_2();
  uint64_t v190 = v4;
  uint64_t v5 = OUTLINED_FUNCTION_8_3();
  uint64_t v199 = type metadata accessor for SubscriptionStoreContentConfiguration.AccessorySubviews(v5);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_3_2();
  uint64_t v202 = v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E6F8);
  MEMORY[0x270FA5388](v8 - 8);
  OUTLINED_FUNCTION_3_2();
  uint64_t v192 = v9;
  uint64_t v10 = OUTLINED_FUNCTION_8_3();
  type metadata accessor for SubscriptionStoreContentConfiguration(v10);
  OUTLINED_FUNCTION_0_0();
  v225 = v11;
  uint64_t v226 = v12;
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_18_0();
  uint64_t v193 = v13;
  OUTLINED_FUNCTION_6_5();
  MEMORY[0x270FA5388](v14);
  v198 = (char *)&v185 - v15;
  OUTLINED_FUNCTION_6_5();
  MEMORY[0x270FA5388](v16);
  uint64_t v196 = (uint64_t)&v185 - v17;
  OUTLINED_FUNCTION_6_5();
  MEMORY[0x270FA5388](v18);
  uint64_t v191 = (uint64_t)&v185 - v19;
  OUTLINED_FUNCTION_6_5();
  MEMORY[0x270FA5388](v20);
  OUTLINED_FUNCTION_9_5();
  uint64_t v210 = v21;
  OUTLINED_FUNCTION_8_3();
  uint64_t v220 = sub_22EE7EC40();
  OUTLINED_FUNCTION_0_0();
  uint64_t v216 = v22;
  MEMORY[0x270FA5388](v23);
  OUTLINED_FUNCTION_18_0();
  uint64_t v222 = v24;
  OUTLINED_FUNCTION_6_5();
  MEMORY[0x270FA5388](v25);
  OUTLINED_FUNCTION_9_5();
  uint64_t v221 = v26;
  uint64_t v27 = OUTLINED_FUNCTION_8_3();
  type metadata accessor for SubscriptionStoreContentConfiguration.Section(v27);
  OUTLINED_FUNCTION_0_0();
  uint64_t v206 = v29;
  uint64_t v207 = v28;
  MEMORY[0x270FA5388](v28);
  OUTLINED_FUNCTION_3_2();
  uint64_t v224 = v30;
  uint64_t v31 = OUTLINED_FUNCTION_8_3();
  uint64_t v205 = type metadata accessor for SubscriptionStoreContentConfiguration.Context.SectionContext(v31);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v32);
  OUTLINED_FUNCTION_3_2();
  uint64_t v223 = v33;
  uint64_t v34 = OUTLINED_FUNCTION_8_3();
  uint64_t v204 = type metadata accessor for SubscriptionStoreContentConfiguration.Context.GroupContext(v34);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v35);
  OUTLINED_FUNCTION_3_2();
  uint64_t v236 = v36;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861D9B8);
  MEMORY[0x270FA5388](v37 - 8);
  OUTLINED_FUNCTION_3_2();
  v229 = v38;
  OUTLINED_FUNCTION_8_3();
  uint64_t v234 = sub_22EE7CE20();
  OUTLINED_FUNCTION_0_0();
  uint64_t v213 = v39;
  MEMORY[0x270FA5388](v40);
  OUTLINED_FUNCTION_18_0();
  uint64_t v203 = v41;
  OUTLINED_FUNCTION_6_5();
  MEMORY[0x270FA5388](v42);
  OUTLINED_FUNCTION_9_5();
  uint64_t v228 = v43;
  uint64_t v44 = OUTLINED_FUNCTION_8_3();
  uint64_t v227 = type metadata accessor for SubscriptionStoreContentConfiguration.Context(v44);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v45);
  uint64_t v47 = (char *)&v185 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v48);
  OUTLINED_FUNCTION_9_5();
  uint64_t v237 = v49;
  OUTLINED_FUNCTION_8_3();
  uint64_t v50 = sub_22EE7EC60();
  OUTLINED_FUNCTION_0_0();
  uint64_t v209 = v51;
  MEMORY[0x270FA5388](v52);
  OUTLINED_FUNCTION_3_2();
  uint64_t v240 = v53;
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C700);
  MEMORY[0x270FA5388](v54 - 8);
  OUTLINED_FUNCTION_3_2();
  uint64_t v238 = v55;
  OUTLINED_FUNCTION_8_3();
  uint64_t v56 = sub_22EE7D5F0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v233 = v57;
  MEMORY[0x270FA5388](v58);
  OUTLINED_FUNCTION_27_1();
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_268623E30);
  uint64_t v60 = v59 - 8;
  MEMORY[0x270FA5388](v59);
  OUTLINED_FUNCTION_64_1();
  uint64_t v61 = (void (*)(uint64_t))MEMORY[0x263F19880];
  uint64_t v62 = sub_22EDAA8C0((unint64_t *)&qword_26861C540, MEMORY[0x263F19880]);
  uint64_t v63 = sub_22EE7FE70();
  uint64_t v239 = MEMORY[0x263F8EE78];
  uint64_t v235 = sub_22EC6D764(0, v63 & ~(v63 >> 63), 0, MEMORY[0x263F8EE78]);
  uint64_t v230 = *(void *)(v233 + 16);
  uint64_t v231 = v233 + 16;
  OUTLINED_FUNCTION_10_4();
  v64();
  sub_22EDAA8C0((unint64_t *)&qword_268623E38, v61);
  uint64_t v232 = v0;
  sub_22EE7FB80();
  uint64_t v65 = v1 + *(int *)(v60 + 44);
  OUTLINED_FUNCTION_19_19();
  if (v60 != *(void *)&v241[0])
  {
    int v188 = 0;
    uint64_t v218 = v233 + 8;
    uint64_t v219 = v209 + 16;
    uint64_t v233 = v213 + 8;
    uint64_t v213 = v216 + 16;
    uint64_t v212 = v216 + 8;
    uint64_t v216 = v209 + 8;
    v217 = (void (**)(uint64_t, uint64_t, uint64_t))(v209 + 32);
    *(void *)&long long v66 = 136446466;
    long long v187 = v66;
    unint64_t v186 = 0x800000022EE859A0;
    uint64_t v185 = MEMORY[0x263F8EE58] + 8;
    uint64_t v239 = MEMORY[0x263F8EE78];
    uint64_t v197 = v56;
    uint64_t v208 = v65;
    uint64_t v209 = v62;
    v201 = v47;
    uint64_t v214 = v50;
    uint64_t v215 = v1;
    do
    {
      uint64_t v78 = (void (*)(_OWORD *, void))sub_22EE7FF70();
      uint64_t v79 = v238;
      OUTLINED_FUNCTION_12_12();
      v81(v80);
      v78(v241, 0);
      OUTLINED_FUNCTION_10_4();
      v83(v82);
      sub_22EE7FED0();
      OUTLINED_FUNCTION_5_2();
      v85(v84);
      __swift_storeEnumTagSinglePayload(v79, 0, 1, v50);
      if (__swift_getEnumTagSinglePayload(v79, 1, v50) == 1) {
        goto LABEL_3;
      }
      uint64_t v86 = v65;
      (*v217)(v240, v238, v50);
      uint64_t v87 = v228;
      sub_22EE7EC30();
      sub_22EBC3D90();
      uint64_t v88 = (uint64_t)v229;
      sub_22EE7CE30();
      v89 = *(void (**)(uint64_t, uint64_t))v233;
      (*(void (**)(uint64_t, uint64_t))v233)(v87, v234);
      if (__swift_getEnumTagSinglePayload(v88, 1, v227) == 1)
      {
        sub_22EB0584C(v88, &qword_26861D9B8);
        uint64_t v50 = v214;
        uint64_t v1 = v215;
        uint64_t v65 = v86;
        if ((v188 & 1) == 0)
        {
          if (qword_26861B778 != -1) {
            swift_once();
          }
          uint64_t v165 = __swift_project_value_buffer(v189, (uint64_t)qword_26864C398);
          sub_22EDAA95C(v165, v190, (void (*)(void))type metadata accessor for SKLogger);
          LOBYTE(v88) = sub_22EE7FFD0();
          v166 = sub_22EE7C550();
          uint64_t v88 = v88;
          if (os_log_type_enabled(v166, (os_log_type_t)v88))
          {
            uint64_t v167 = swift_slowAlloc();
            uint64_t v195 = swift_slowAlloc();
            *(void *)&v241[0] = v195;
            *(_DWORD *)uint64_t v167 = v187;
            *(void *)(v167 + 4) = sub_22EC1FA24(0, 0xE000000000000000, (uint64_t *)v241);
            *(_WORD *)(v167 + 12) = 2082;
            *(void *)(v167 + 14) = sub_22EC1FA24(0xD000000000000053, v186, (uint64_t *)v241);
            _os_log_impl(&dword_22EAC6000, v166, (os_log_type_t)v88, "%{public}s%{public}s", (uint8_t *)v167, 0x16u);
            uint64_t v88 = v195;
            swift_arrayDestroy();
            MEMORY[0x230FAE500](v88, -1, -1);
            uint64_t v168 = v167;
            uint64_t v65 = v86;
            MEMORY[0x230FAE500](v168, -1, -1);
          }

          sub_22EDAA9B8(v190, (void (*)(void))type metadata accessor for SKLogger);
        }
        OUTLINED_FUNCTION_5_2();
        v170(v169);
        OUTLINED_FUNCTION_19_19();
        v149 = *(int **)&v241[0];
        int v188 = 1;
        continue;
      }
      uint64_t v90 = v88;
      uint64_t v91 = v237;
      sub_22EDAA908(v90, v237, (void (*)(void))type metadata accessor for SubscriptionStoreContentConfiguration.Context);
      sub_22EDAA95C(v91, (uint64_t)v47, (void (*)(void))type metadata accessor for SubscriptionStoreContentConfiguration.Context);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v92 = v223;
        sub_22EDAA908((uint64_t)v47, v223, (void (*)(void))type metadata accessor for SubscriptionStoreContentConfiguration.Context.SectionContext);
        sub_22EE7EC50();
        OUTLINED_FUNCTION_39_11();
        OUTLINED_FUNCTION_12_12();
        v94(v93);
        sub_22EDAA8C0((unint64_t *)&qword_26861F108, MEMORY[0x263F1B818]);
        OUTLINED_FUNCTION_38_11();
        sub_22EE80180();
        OUTLINED_FUNCTION_5_2();
        v96(v95);
        v97 = (uint64_t *)(v92 + *(int *)(v205 + 20));
        uint64_t v99 = *v97;
        uint64_t v98 = v97[1];
        uint64_t v100 = v224;
        sub_22EDAA95C(v92, v224 + *(int *)(v207 + 24), (void (*)(void))type metadata accessor for SubscriptionStoreContentConfiguration.Section.AccessorySubviews);
        long long v101 = v241[1];
        *(_OWORD *)uint64_t v100 = v241[0];
        *(_OWORD *)(v100 + 16) = v101;
        *(void *)(v100 + 32) = v242;
        *(void *)(v100 + 40) = v99;
        *(void *)(v100 + 48) = v98;
        swift_retain();
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          uint64_t v50 = v214;
          uint64_t v102 = v239;
        }
        else
        {
          uint64_t v102 = sub_22EC6D510(0, *(void *)(v239 + 16) + 1, 1, v239);
          uint64_t v50 = v214;
        }
        uint64_t v65 = v86;
        uint64_t v88 = *(void *)(v102 + 16);
        unint64_t v103 = *(void *)(v102 + 24);
        uint64_t v1 = v215;
        if (v88 >= v103 >> 1) {
          uint64_t v102 = sub_22EC6D510(v103 > 1, v88 + 1, 1, v102);
        }
        *(void *)(v102 + 16) = v88 + 1;
        unint64_t v104 = (*(unsigned __int8 *)(v206 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v206 + 80);
        uint64_t v239 = v102;
        sub_22EDAA908(v224, v102 + v104 + *(void *)(v206 + 72) * v88, (void (*)(void))type metadata accessor for SubscriptionStoreContentConfiguration.Section);
        v105 = type metadata accessor for SubscriptionStoreContentConfiguration.Context.SectionContext;
        uint64_t v106 = v223;
      }
      else
      {
        sub_22EDAA908((uint64_t)v47, v236, (void (*)(void))type metadata accessor for SubscriptionStoreContentConfiguration.Context.GroupContext);
        uint64_t v107 = v239;
        if (*(void *)(v239 + 16))
        {
          uint64_t v108 = v239;
          uint64_t v109 = swift_bridgeObjectRetain();
          uint64_t v110 = v211;
          uint64_t v111 = sub_22ED9F338(v109);
          swift_bridgeObjectRelease();
          *(void *)&v241[0] = v111;
          __swift_instantiateConcreteTypeFromMangledName(&qword_268623390);
          sub_22EDAA854();
          uint64_t v112 = v210;
          sub_22EE80180();
          v113 = v225;
          type metadata accessor for SubscriptionOptionGroupAccessorySubview();
          OUTLINED_FUNCTION_20_23();
          sub_22EC52800(v200, v112 + v113[6], &qword_26861E7A0);
          uint64_t v114 = v112 + v113[7];
          *(void *)uint64_t v114 = v108;
          *(unsigned char *)(v114 + 8) = 0;
          *(unsigned char *)(v112 + v113[8]) = 1;
          OUTLINED_FUNCTION_9_34();
          if (v77)
          {
            uint64_t v115 = OUTLINED_FUNCTION_12_27(v118, v119);
            uint64_t v118 = v115;
          }
          OUTLINED_FUNCTION_17_24(v115, v116, v117, v118);
          sub_22EDAA908(v210, v120, (void (*)(void))type metadata accessor for SubscriptionStoreContentConfiguration);
          uint64_t v107 = MEMORY[0x263F8EE78];
          uint64_t v211 = v110;
          uint64_t v86 = v208;
        }
        v121 = (unsigned __int8 *)(v236 + *(int *)(v204 + 20));
        int v122 = v121[8];
        uint64_t v239 = v107;
        if (v122 != 1 || (uint64_t v123 = *(void *)v121, *(void *)(*(void *)v121 + 16) != 1))
        {
          sub_22EE7EC50();
          OUTLINED_FUNCTION_39_11();
          OUTLINED_FUNCTION_12_12();
          v129(v128);
          sub_22EDAA8C0((unint64_t *)&qword_26861F108, MEMORY[0x263F1B818]);
          sub_22EE80180();
          OUTLINED_FUNCTION_5_2();
          v131(v130);
          uint64_t v132 = v202;
          sub_22EDAA95C(v236, v202, (void (*)(void))type metadata accessor for SubscriptionStoreContentConfiguration.AccessorySubviews);
          sub_22EE7EC30();
          sub_22EBC3D44();
          OUTLINED_FUNCTION_38_11();
          sub_22EE7CE30();
          OUTLINED_FUNCTION_34_12();
          ((void (*)(uint64_t))v89)(v133);
          uint64_t v134 = *(void *)v121;
          uint64_t v88 = v121[8];
          v135 = v198;
          *((void *)v198 + 4) = v245;
          long long v136 = v244;
          _OWORD *v135 = v243;
          v135[1] = v136;
          v137 = v225;
          uint64_t v138 = v132;
          uint64_t v139 = (uint64_t)v135;
          sub_22EDAA908(v138, (uint64_t)v135 + v225[5], (void (*)(void))type metadata accessor for SubscriptionStoreContentConfiguration.AccessorySubviews);
          sub_22EADAE38((uint64_t)v241, v139 + v137[6], &qword_26861E7A0);
          uint64_t v140 = v139 + v137[7];
          *(void *)uint64_t v140 = v134;
          *(unsigned char *)(v140 + 8) = v88;
          *(unsigned char *)(v139 + v137[8]) = 0;
          j__swift_bridgeObjectRetain(v134, v88);
          OUTLINED_FUNCTION_9_34();
          if (v77)
          {
            uint64_t v141 = OUTLINED_FUNCTION_12_27(v144, v145);
            uint64_t v144 = v141;
          }
          uint64_t v50 = v214;
          uint64_t v65 = v208;
          OUTLINED_FUNCTION_17_24(v141, v142, v143, v144);
          sub_22EDAA908(v139, v146, (void (*)(void))type metadata accessor for SubscriptionStoreContentConfiguration);
          sub_22EDAA9B8(v236, (void (*)(void))type metadata accessor for SubscriptionStoreContentConfiguration.Context.GroupContext);
          uint64_t v47 = v201;
          uint64_t v1 = v215;
          goto LABEL_28;
        }
        uint64_t v124 = (uint64_t)v225;
        uint64_t v125 = v123 + ((*(unsigned __int8 *)(v226 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v226 + 80));
        uint64_t v126 = v125 + v225[7];
        int v127 = *(unsigned __int8 *)(v126 + 8);
        unint64_t v194 = (*(unsigned __int8 *)(v226 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v226 + 80);
        uint64_t v195 = v123;
        if (v127 == 1)
        {
          swift_bridgeObjectRetain();
LABEL_43:
          sub_22EE7EC50();
          OUTLINED_FUNCTION_39_11();
          OUTLINED_FUNCTION_12_12();
          v172(v171);
          sub_22EDAA8C0((unint64_t *)&qword_26861F108, MEMORY[0x263F1B818]);
          sub_22EE80180();
          OUTLINED_FUNCTION_5_2();
          v174(v173);
          uint64_t v175 = v202;
          sub_22EDAA95C(v236, v202, (void (*)(void))type metadata accessor for SubscriptionStoreContentConfiguration.AccessorySubviews);
          sub_22EE7EC30();
          sub_22EBC3D44();
          OUTLINED_FUNCTION_38_11();
          sub_22EE7CE30();
          OUTLINED_FUNCTION_34_12();
          ((void (*)(uint64_t))v89)(v176);
          uint64_t v177 = *(void *)v121;
          uint64_t v178 = v121[8];
          v179 = (_OWORD *)v196;
          *(void *)(v196 + 32) = v245;
          long long v180 = v244;
          _OWORD *v179 = v243;
          v179[1] = v180;
          uint64_t v88 = (uint64_t)v225;
          sub_22EDAA908(v175, (uint64_t)v179 + v225[5], (void (*)(void))type metadata accessor for SubscriptionStoreContentConfiguration.AccessorySubviews);
          sub_22EADAE38((uint64_t)v241, (uint64_t)v179 + *(int *)(v88 + 24), &qword_26861E7A0);
          v181 = (char *)v179 + *(int *)(v88 + 28);
          *(void *)v181 = v177;
          v181[8] = v178;
          *((unsigned char *)v179 + *(int *)(v88 + 32)) = 0;
          j__swift_bridgeObjectRetain(v177, v178);
          OUTLINED_FUNCTION_9_34();
          if (v77) {
            uint64_t v182 = OUTLINED_FUNCTION_12_27(v182, v183);
          }
          uint64_t v50 = v214;
          uint64_t v65 = v86;
          *(void *)(v182 + 16) = v177;
          uint64_t v235 = v182;
          OUTLINED_FUNCTION_35_13();
          sub_22EDAA908(v196, v184, (void (*)(void))type metadata accessor for SubscriptionStoreContentConfiguration);
          j__swift_bridgeObjectRelease(v195, 1);
          sub_22EDAA9B8(v236, (void (*)(void))type metadata accessor for SubscriptionStoreContentConfiguration.Context.GroupContext);
          uint64_t v1 = v215;
          uint64_t v47 = v201;
          goto LABEL_28;
        }
        uint64_t v150 = *(void *)v126;
        uint64_t v151 = v192;
        sub_22EDAA95C(v125, v192, (void (*)(void))type metadata accessor for SubscriptionStoreContentConfiguration);
        __swift_storeEnumTagSinglePayload(v151, 0, 1, v124);
        int v152 = *(unsigned __int8 *)(v151 + *(int *)(v124 + 32));
        j__swift_bridgeObjectRetain(v123, 1);
        j__swift_bridgeObjectRetain(v150, 0);
        sub_22EDAA9B8(v151, (void (*)(void))type metadata accessor for SubscriptionStoreContentConfiguration);
        if (v152 != 1)
        {
          j__swift_bridgeObjectRelease(v150, 0);
          goto LABEL_43;
        }
        sub_22EE7EC50();
        OUTLINED_FUNCTION_39_11();
        OUTLINED_FUNCTION_12_12();
        v154(v153);
        sub_22EDAA8C0((unint64_t *)&qword_26861F108, MEMORY[0x263F1B818]);
        sub_22EE80180();
        OUTLINED_FUNCTION_5_2();
        v156(v155);
        uint64_t v157 = v202;
        sub_22EDAA95C(v236, v202, (void (*)(void))type metadata accessor for SubscriptionStoreContentConfiguration.AccessorySubviews);
        sub_22EE7EC30();
        sub_22EBC3D44();
        OUTLINED_FUNCTION_38_11();
        sub_22EE7CE30();
        OUTLINED_FUNCTION_34_12();
        ((void (*)(uint64_t))v89)(v158);
        v159 = (_OWORD *)v191;
        *(void *)(v191 + 32) = v245;
        long long v160 = v244;
        _OWORD *v159 = v243;
        v159[1] = v160;
        uint64_t v88 = (uint64_t)v225;
        sub_22EDAA908(v157, (uint64_t)v159 + v225[5], (void (*)(void))type metadata accessor for SubscriptionStoreContentConfiguration.AccessorySubviews);
        sub_22EADAE38((uint64_t)v241, (uint64_t)v159 + *(int *)(v88 + 24), &qword_26861E7A0);
        v161 = (char *)v159 + *(int *)(v88 + 28);
        *(void *)v161 = v150;
        v161[8] = 0;
        *((unsigned char *)v159 + *(int *)(v88 + 32)) = 0;
        OUTLINED_FUNCTION_9_34();
        uint64_t v50 = v214;
        if (v77) {
          uint64_t v162 = OUTLINED_FUNCTION_12_27(v162, v163);
        }
        uint64_t v47 = v201;
        uint64_t v1 = v215;
        uint64_t v65 = v86;
        *(void *)(v162 + 16) = v159;
        uint64_t v235 = v162;
        OUTLINED_FUNCTION_35_13();
        sub_22EDAA908(v191, v164, (void (*)(void))type metadata accessor for SubscriptionStoreContentConfiguration);
        j__swift_bridgeObjectRelease(v195, 1);
        v105 = type metadata accessor for SubscriptionStoreContentConfiguration.Context.GroupContext;
        uint64_t v106 = v236;
      }
      sub_22EDAA9B8(v106, (void (*)(void))v105);
LABEL_28:
      sub_22EDAA9B8(v237, (void (*)(void))type metadata accessor for SubscriptionStoreContentConfiguration.Context);
      OUTLINED_FUNCTION_5_2();
      v148(v147);
      OUTLINED_FUNCTION_19_19();
      v149 = *(int **)&v241[0];
    }
    while ((int *)v88 != v149);
  }
  __swift_storeEnumTagSinglePayload(v238, 1, 1, v50);
LABEL_3:
  sub_22EB0584C(v1, &qword_268623E30);
  if (*(void *)(v239 + 16))
  {
    uint64_t v67 = v239;
    uint64_t v68 = swift_bridgeObjectRetain();
    uint64_t v69 = sub_22ED9F338(v68);
    swift_bridgeObjectRelease();
    *(void *)&v241[0] = v69;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268623390);
    sub_22EDAA854();
    uint64_t v70 = v193;
    sub_22EE80180();
    uint64_t v71 = v225;
    uint64_t v72 = v70 + v225[5];
    uint64_t v73 = type metadata accessor for SubscriptionOptionGroupAccessorySubview();
    OUTLINED_FUNCTION_20_23();
    sub_22EC52800(v200, v70 + v71[6], &qword_26861E7A0);
    uint64_t v74 = v70 + v71[7];
    *(void *)uint64_t v74 = v67;
    *(unsigned char *)(v74 + 8) = 0;
    *(unsigned char *)(v70 + v71[8]) = 1;
    OUTLINED_FUNCTION_9_34();
    if (v77) {
      uint64_t v75 = OUTLINED_FUNCTION_12_27(v75, v76);
    }
    *(void *)(v75 + 16) = v72;
    sub_22EDAA908(v70, v75+ ((*(unsigned __int8 *)(v226 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v226 + 80))+ *(void *)(v226 + 72) * v73, (void (*)(void))type metadata accessor for SubscriptionStoreContentConfiguration);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_5_0();
}

uint64_t sub_22EDA0914@<X0>(uint64_t a1@<X0>, char *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  LODWORD(v69) = a3;
  uint64_t v62 = a2;
  uint64_t v54 = a1;
  uint64_t v5 = sub_22EE7CE20();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v66 = v5;
  uint64_t v67 = (char *)v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v65 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SubscriptionOptionGroupAccessorySubview();
  MEMORY[0x270FA5388](v8);
  uint64_t v64 = (uint64_t)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_22EE7EC60();
  uint64_t v57 = *(void (***)(char *, uint64_t))(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v63 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C700);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v71 = (uint64_t)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v68 = (char *)&v53 - v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861D9D0);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_22EE7D5F0();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861D9B0) - 8;
  MEMORY[0x270FA5388](v61);
  uint64_t v24 = (char *)&v53 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686267B8);
  uint64_t v26 = v25 - 8;
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)&v53 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_storeEnumTagSinglePayload(a4, 1, 1, v8);
  uint64_t v55 = a4 + *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.AccessorySubviews(0) + 20);
  uint64_t v70 = v8;
  __swift_storeEnumTagSinglePayload(v55, 1, 1, v8);
  uint64_t v29 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.Context.GroupContext(0) + 20);
  uint64_t v56 = a4;
  uint64_t v30 = a4 + v29;
  *(void *)uint64_t v30 = v62;
  *(unsigned char *)(v30 + 8) = v69 & 1;
  sub_22EC52800(v54, (uint64_t)v24, &qword_26861D9B0);
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  v20 += 32;
  v31(v22, v24, v19);
  uint64_t v32 = (void (*)(uint64_t))MEMORY[0x263F19880];
  sub_22EDAA8C0((unint64_t *)&qword_268623E38, MEMORY[0x263F19880]);
  uint64_t v62 = v22;
  sub_22EE7FB80();
  long long v33 = *(_OWORD *)&v24[*(int *)(v61 + 52)];
  uint64_t v69 = &v28[*(int *)(v26 + 52)];
  *(_OWORD *)uint64_t v69 = v33;
  uint64_t v34 = &v28[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268623E30) + 36)];
  uint64_t v35 = (uint64_t)v28;
  sub_22EDAA8C0((unint64_t *)&qword_26861C540, v32);
  uint64_t v60 = (void (**)(char *, uint64_t, uint64_t))(v20 - 16);
  uint64_t v61 = (uint64_t)(v57 + 2);
  uint64_t v58 = (void (**)(char *, uint64_t, uint64_t))(v57 + 4);
  uint64_t v59 = (void (**)(char *, uint64_t))(v20 - 24);
  ++v57;
  uint64_t v36 = (void (**)(char *, uint64_t))(v67 + 8);
  uint64_t v67 = v28;
  while (1)
  {
    uint64_t v37 = *(void *)v34;
    sub_22EE7FEC0();
    if (v37 == v72[0])
    {
      uint64_t v38 = 1;
      uint64_t v39 = (uint64_t)v68;
    }
    else
    {
      uint64_t v40 = (void (*)(uint64_t *, void))sub_22EE7FF70();
      uint64_t v39 = (uint64_t)v68;
      (*(void (**)(char *))v61)(v68);
      v40(v72, 0);
      uint64_t v41 = v62;
      (*v60)(v62, v35, v19);
      sub_22EE7FED0();
      (*v59)(v41, v19);
      uint64_t v38 = 0;
    }
    uint64_t v42 = 1;
    __swift_storeEnumTagSinglePayload(v39, v38, 1, v10);
    uint64_t v43 = *(void (**)(char *))v69;
    uint64_t v44 = v39;
    uint64_t v45 = v71;
    sub_22EADAE38(v44, v71, &qword_26861C700);
    if (__swift_getEnumTagSinglePayload(v45, 1, v10) != 1)
    {
      uint64_t v46 = v63;
      (*v58)(v63, v71, v10);
      v43(v46);
      (*v57)(v46, v10);
      uint64_t v42 = 0;
    }
    uint64_t v47 = v70;
    __swift_storeEnumTagSinglePayload((uint64_t)v18, v42, 1, v70);
    if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v47) == 1) {
      break;
    }
    uint64_t v48 = v64;
    sub_22EDAA908((uint64_t)v18, v64, (void (*)(void))type metadata accessor for SubscriptionOptionGroupAccessorySubview);
    uint64_t v49 = v65;
    sub_22EE7EC30();
    sub_22EB44F00();
    sub_22EE7CE30();
    char v50 = v72[0];
    (*v36)(v49, v66);
    if (v50 == 2)
    {
      sub_22EDAA9B8(v48, (void (*)(void))type metadata accessor for SubscriptionOptionGroupAccessorySubview);
      uint64_t v35 = (uint64_t)v67;
    }
    else
    {
      if (v50) {
        uint64_t v51 = v55;
      }
      else {
        uint64_t v51 = v56;
      }
      sub_22EB0584C(v51, &qword_26861D9D0);
      sub_22EDAA908(v48, v51, (void (*)(void))type metadata accessor for SubscriptionOptionGroupAccessorySubview);
      __swift_storeEnumTagSinglePayload(v51, 0, 1, v70);
      uint64_t v35 = (uint64_t)v67;
    }
  }
  sub_22EB0584C(v54, &qword_26861D9B0);
  return sub_22EB0584C((uint64_t)v67, &qword_2686267B8);
}

uint64_t sub_22EDA10AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861D9B0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_22EC52800(a1, (uint64_t)v10, &qword_26861D9B0);
  sub_22EB44DEC(a3, (uint64_t)v16);
  sub_22ED9F48C();
  uint64_t v12 = v11;
  sub_22EB0584C((uint64_t)v16, &qword_26861E7A0);
  sub_22EDA0914((uint64_t)v10, v12, 1, a4);
  sub_22EB44E48(a3);
  uint64_t v13 = sub_22EE7D5F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a2, v13);
  return sub_22EB0584C(a1, &qword_26861D9B0);
}

uint64_t sub_22EDA11EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_22EE7D5F0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = &v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861D9B0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = &v16[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_22EC52800(a1, (uint64_t)v14, &qword_26861D9B0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_22EB44DEC(a3, (uint64_t)v16);
  sub_22EDA10AC((uint64_t)v14, (uint64_t)v11, (uint64_t)v16, a4);
  type metadata accessor for SubscriptionStoreContentConfiguration.Context(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_22EDA136C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22ECC6C78();
  *a1 = result;
  return result;
}

uint64_t sub_22EDA1398()
{
  return sub_22ECC6CB4();
}

void SubscriptionOptionGroup.init<>(isIncluded:label:marketingContent:)()
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v19 = v9;
  OUTLINED_FUNCTION_4_2();
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_64_1();
  OUTLINED_FUNCTION_4_2();
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_11_0();
  uint64_t v14 = v13 - v12;
  v20[0] = v15;
  v20[1] = v16;
  char v21 = 1;
  uint64_t v17 = swift_retain();
  uint64_t v18 = v8(v17);
  v6(v18);
  swift_release();
  sub_22EB3EE04();
  sub_22EDA14E4((uint64_t)v20, v14, v0, v4, v2, v19);
  OUTLINED_FUNCTION_13_29();
  OUTLINED_FUNCTION_5_0();
}

uint64_t sub_22EDA14E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v12 = type metadata accessor for SubscriptionOptionGroup.ContentStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(a6, a1, v12);
  uint64_t v13 = type metadata accessor for SubscriptionOptionGroup();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a6 + *(int *)(v13 + 68), a2, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(a6 + *(int *)(v13 + 72), a3, a5);
}

void SubscriptionOptionGroup.init(content:label:marketingContent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v25 = v24;
  uint64_t v35 = v26;
  uint64_t v37 = v27;
  uint64_t v36 = v28;
  uint64_t v38 = v29;
  OUTLINED_FUNCTION_4_2();
  MEMORY[0x270FA5388](v30);
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_4_2();
  MEMORY[0x270FA5388](v31);
  OUTLINED_FUNCTION_27_1();
  type metadata accessor for SubscriptionOptionGroup.ContentStorage();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_9_7();
  MEMORY[0x270FA5388](v32);
  OUTLINED_FUNCTION_37_14();
  v35();
  uint64_t v33 = swift_storeEnumTagMultiPayload();
  uint64_t v34 = v36(v33);
  v37(v34);
  sub_22EDA14E4(v23, v21, v22, v25, a21, v38);
  OUTLINED_FUNCTION_13_29();
  OUTLINED_FUNCTION_5_0();
}

uint64_t type metadata accessor for SubscriptionOptionGroup.ContentStorage()
{
  return swift_getGenericMetadata();
}

void SubscriptionOptionGroup.body.getter()
{
}

uint64_t SubscriptionOptionGroup._identifiedContent.getter@<X0>(uint64_t a1@<X8>)
{
  _s17_StoreKit_SwiftUI18AccessoryMultiviewVMa_0();
  swift_getWitnessTable();
  type metadata accessor for GroupView();
  type metadata accessor for LeafView();
  uint64_t v2 = sub_22EE7D810();
  swift_getWitnessTable();
  swift_getWitnessTable();
  swift_getWitnessTable();
  return sub_22ED87CC8((uint64_t)sub_22EDA20D8, v2, a1);
}

uint64_t sub_22EDA1918@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v70 = a1;
  uint64_t v83 = a8;
  uint64_t v86 = a3;
  uint64_t v87 = a4;
  uint64_t v88 = a6;
  uint64_t v89 = a7;
  uint64_t v14 = _s17_StoreKit_SwiftUI18AccessoryMultiviewVMa_0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v16 = type metadata accessor for LeafView();
  uint64_t v68 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v67 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v66 = (char *)&v61 - v19;
  MEMORY[0x270FA5388](v20);
  uint64_t v71 = (uint64_t)&v61 - v21;
  uint64_t v72 = v14;
  uint64_t v86 = a2;
  uint64_t v87 = v14;
  uint64_t v88 = a5;
  uint64_t v89 = WitnessTable;
  uint64_t v78 = WitnessTable;
  uint64_t v22 = type metadata accessor for GroupView();
  uint64_t v65 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v61 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v63 = (char *)&v61 - v26;
  uint64_t v64 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v62 = (char *)&v61 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v69 = (char *)&v61 - v30;
  uint64_t v73 = a2;
  uint64_t v74 = a3;
  uint64_t v86 = a2;
  uint64_t v87 = a3;
  uint64_t v75 = a4;
  uint64_t v76 = a6;
  uint64_t v88 = a4;
  uint64_t v89 = a5;
  uint64_t v79 = a5;
  uint64_t v90 = a6;
  uint64_t v91 = a7;
  uint64_t v77 = a7;
  uint64_t v31 = type metadata accessor for SubscriptionOptionGroup.ContentStorage();
  uint64_t v32 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v34 = (uint64_t *)((char *)&v61 - v33);
  uint64_t v35 = sub_22EE7D810();
  uint64_t v81 = *(void *)(v35 - 8);
  uint64_t v82 = v35;
  __n128 v36 = MEMORY[0x270FA5388](v35);
  uint64_t v80 = (char *)&v61 - v37;
  (*(void (**)(uint64_t *, __n128))(v32 + 16))(v34, v36);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v39 = *v34;
    uint64_t v38 = v34[1];
    uint64_t v86 = v73;
    uint64_t v87 = v74;
    uint64_t v88 = v75;
    uint64_t v89 = v79;
    uint64_t v90 = v76;
    uint64_t v91 = v77;
    uint64_t v40 = type metadata accessor for SubscriptionOptionGroup();
    uint64_t v41 = v71;
    sub_22EDA2134(v40, v71);
    uint64_t v42 = v67;
    sub_22EDA2398(v39, v38, v41, v72, v67);
    uint64_t v43 = swift_getWitnessTable();
    uint64_t v44 = v66;
    sub_22EB69440(v42, v16, v43);
    uint64_t v45 = *(void (**)(char *, uint64_t))(v68 + 8);
    swift_retain();
    v45(v42, v16);
    sub_22EB69440(v44, v16, v43);
    swift_getWitnessTable();
    uint64_t v46 = v80;
    sub_22EC4F330();
    swift_release();
    v45(v42, v16);
    v45(v44, v16);
  }
  else
  {
    uint64_t v47 = v64;
    uint64_t v48 = v69;
    uint64_t v49 = v73;
    (*(void (**)(char *, uint64_t *, uint64_t))(v64 + 32))(v69, v34, v73);
    uint64_t v50 = (uint64_t)v62;
    (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v62, v48, v49);
    uint64_t v86 = v49;
    uint64_t v87 = v74;
    uint64_t v88 = v75;
    uint64_t v89 = v79;
    uint64_t v90 = v76;
    uint64_t v91 = v77;
    uint64_t v51 = type metadata accessor for SubscriptionOptionGroup();
    uint64_t v52 = v71;
    sub_22EDA2134(v51, v71);
    sub_22EDA22B0(v50, v52, v49, v72, (uint64_t)v24);
    uint64_t v53 = swift_getWitnessTable();
    uint64_t v54 = v63;
    sub_22EB69440(v24, v22, v53);
    uint64_t v55 = *(void (**)(char *, uint64_t))(v65 + 8);
    v55(v24, v22);
    sub_22EB69440(v54, v22, v53);
    swift_getWitnessTable();
    uint64_t v46 = v80;
    sub_22EC4F278();
    v55(v24, v22);
    v55(v54, v22);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v69, v49);
  }
  uint64_t v56 = swift_getWitnessTable();
  uint64_t v57 = swift_getWitnessTable();
  uint64_t v84 = v56;
  uint64_t v85 = v57;
  uint64_t v58 = v82;
  uint64_t v59 = swift_getWitnessTable();
  sub_22EB69440(v46, v58, v59);
  return (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v46, v58);
}

uint64_t sub_22EDA20D8@<X0>(uint64_t a1@<X8>)
{
  return sub_22EDA1918(v1[8], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], a1);
}

uint64_t _s17_StoreKit_SwiftUI18AccessoryMultiviewVMa_0()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for GroupView()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for LeafView()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_22EDA2134@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v9 + 24);
  __n128 v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))(v13, v2 + *(int *)(v14 + 68), v10, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v2 + *(int *)(a1 + 72), v5);
  return sub_22EDA243C((uint64_t)v13, (uint64_t)v8, v10, v5, a2);
}

uint64_t sub_22EDA22B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a5, a1);
  uint64_t v8 = type metadata accessor for GroupView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5 + *(int *)(v8 + 52), a2, a4);
  uint64_t v9 = a5 + *(int *)(v8 + 56);
  uint64_t result = swift_getKeyPath();
  *(void *)uint64_t v9 = result;
  *(unsigned char *)(v9 + 343) = 0;
  return result;
}

uint64_t sub_22EDA2398@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  *(void *)a5 = a1;
  *((void *)a5 + 1) = a2;
  uint64_t v8 = (int *)type metadata accessor for LeafView();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(&a5[v8[9]], a3, a4);
  uint64_t v9 = &a5[v8[10]];
  uint64_t result = swift_getKeyPath();
  *(void *)uint64_t v9 = result;
  v9[343] = 0;
  *(void *)&a5[v8[11]] = 0;
  return result;
}

uint64_t sub_22EDA243C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a5, a1);
  uint64_t v8 = _s17_StoreKit_SwiftUI18AccessoryMultiviewVMa_0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5 + *(int *)(v8 + 52), a2, a4);
}

void sub_22EDA2504()
{
}

void SubscriptionOptionGroup<>.init<>(isIncluded:label:)()
{
}

void SubscriptionOptionGroup<>.init(content:label:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v16 = sub_22EB39F70();
  SubscriptionOptionGroup.init(content:label:marketingContent:)(a1, a2, a3, a4, (uint64_t)nullsub_1, 0, a5, a6, (uint64_t)&type metadata for AutomaticSubscriptionStoreMarketingContent, a7, a8, v16, v17, v18, v19, v20, v21, v22, v23,
    v24,
    v25);
}

uint64_t SubscriptionOptionGroup<>.init<>(isIncluded:marketingContent:)@<X0>(void (*a1)(__n128)@<X2>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  OUTLINED_FUNCTION_4_2();
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_13_0();
  v16[0] = v8;
  v16[1] = v9;
  char v17 = 1;
  OUTLINED_FUNCTION_29_15();
  uint64_t KeyPath = swift_getKeyPath();
  char v14 = 0;
  swift_retain();
  sub_22EB0584C((uint64_t)v12, &qword_268620140);
  __n128 v10 = OUTLINED_FUNCTION_7_27();
  a1(v10);
  swift_release();
  sub_22EB3EE04();
  sub_22ECD95E0();
  return sub_22EDA14E4((uint64_t)v16, (uint64_t)v15, v3, (uint64_t)&type metadata for AutomaticSubscriptionOptionGroupLabel, a2, a3);
}

uint64_t sub_22EDA2780@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22ECC6C78();
  *a1 = result;
  return result;
}

uint64_t sub_22EDA27AC()
{
  return sub_22ECC6CB4();
}

void SubscriptionOptionGroup<>.init(content:marketingContent:)()
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  char v17 = v10;
  uint64_t v12 = v11;
  uint64_t v18 = v13;
  OUTLINED_FUNCTION_4_2();
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_26_9();
  v21[0] = v9;
  v21[1] = &type metadata for AutomaticSubscriptionOptionGroupLabel;
  v21[2] = v7;
  v21[3] = v5;
  v21[4] = sub_22ECD95E0();
  v21[5] = v3;
  type metadata accessor for SubscriptionOptionGroup.ContentStorage();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_9_7();
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_37_14();
  v12();
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_29_15();
  v19[5] = swift_getKeyPath();
  char v20 = 0;
  sub_22EB0584C((uint64_t)v19, &qword_268620140);
  __n128 v16 = OUTLINED_FUNCTION_7_27();
  v17(v16);
  sub_22EDA14E4(v0, (uint64_t)v21, v1, (uint64_t)&type metadata for AutomaticSubscriptionOptionGroupLabel, v7, v18);
  OUTLINED_FUNCTION_13_29();
  OUTLINED_FUNCTION_5_0();
}

uint64_t SubscriptionOptionGroup<>.init<>(isIncluded:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)&long long v10 = 0;
  long long v8 = 0u;
  long long v9 = 0u;
  *((void *)&v10 + 1) = swift_getKeyPath();
  char v11 = 0;
  swift_retain();
  sub_22EB0584C((uint64_t)&v8, &qword_268620140);
  long long v8 = 0u;
  long long v9 = 0u;
  *(void *)&long long v10 = 0;
  *(unsigned char *)(a3 + 72) = v11;
  long long v6 = v9;
  *(_OWORD *)(a3 + 24) = v8;
  *(_OWORD *)(a3 + 40) = v6;
  *(_OWORD *)(a3 + 56) = v10;
  uint64_t result = swift_release();
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void SubscriptionOptionGroup<>.init(content:)()
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  v13[0] = v4;
  v13[1] = &type metadata for AutomaticSubscriptionOptionGroupLabel;
  v13[2] = &type metadata for AutomaticSubscriptionStoreMarketingContent;
  v13[3] = v5;
  v13[4] = sub_22ECD95E0();
  v13[5] = sub_22EB39F70();
  type metadata accessor for SubscriptionOptionGroup.ContentStorage();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_9_7();
  __n128 v7 = MEMORY[0x270FA5388](v6);
  long long v9 = (char *)v11 - v8;
  v1(v7);
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_29_15();
  v11[5] = swift_getKeyPath();
  char v12 = 0;
  sub_22EB0584C((uint64_t)v11, &qword_268620140);
  OUTLINED_FUNCTION_7_27();
  sub_22EDA14E4((uint64_t)v9, (uint64_t)v13, v10, (uint64_t)&type metadata for AutomaticSubscriptionOptionGroupLabel, (uint64_t)&type metadata for AutomaticSubscriptionStoreMarketingContent, v3);
  OUTLINED_FUNCTION_13_29();
  OUTLINED_FUNCTION_5_0();
}

void SubscriptionOptionGroup<>.init<>(_:isIncluded:marketingContent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v23 = v22;
  uint64_t v31 = v24;
  OUTLINED_FUNCTION_4_2();
  MEMORY[0x270FA5388](v25);
  OUTLINED_FUNCTION_13_0();
  v35[0] = v26;
  v35[1] = v27;
  LOBYTE(v36) = 1;
  swift_retain();
  OUTLINED_FUNCTION_23_16();
  v32[0] = OUTLINED_FUNCTION_15_27();
  v32[1] = v28;
  char v33 = v29 & 1;
  uint64_t v34 = v30;
  v23();
  swift_release();
  sub_22EB3EE04();
  sub_22EDA14E4((uint64_t)v35, (uint64_t)v32, v21, MEMORY[0x263F1A830], a21, v31);
  OUTLINED_FUNCTION_13_29();
  OUTLINED_FUNCTION_5_0();
}

void SubscriptionOptionGroup<>.init<A>(_:isIncluded:marketingContent:)()
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v20 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  __n128 v7 = v6;
  uint64_t v9 = v8;
  OUTLINED_FUNCTION_4_2();
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_27_1();
  OUTLINED_FUNCTION_0_0();
  uint64_t v12 = v11;
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_11_0();
  v24[0] = v14;
  v24[1] = v15;
  LOBYTE(v25) = 1;
  OUTLINED_FUNCTION_10_4();
  v16();
  swift_retain();
  v21[0] = sub_22EE7E150();
  v21[1] = v17;
  char v22 = v18 & 1;
  uint64_t v23 = v19;
  v7();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v9, v3);
  sub_22EB3EE04();
  sub_22EDA14E4((uint64_t)v24, (uint64_t)v21, v0, MEMORY[0x263F1A830], v5, v20);
  OUTLINED_FUNCTION_13_29();
  OUTLINED_FUNCTION_5_0();
}

void SubscriptionOptionGroup<>.init(_:content:marketingContent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v48 = v25;
  uint64_t v49 = v24;
  uint64_t v27 = v26;
  uint64_t v47 = v28;
  int v46 = v29;
  v45[1] = v30;
  uint64_t v50 = v31;
  OUTLINED_FUNCTION_4_2();
  MEMORY[0x270FA5388](v32);
  OUTLINED_FUNCTION_11_0();
  uint64_t v35 = v34 - v33;
  v51[0] = a21;
  v51[1] = MEMORY[0x263F1A830];
  v51[2] = a22;
  v51[3] = a23;
  v51[4] = MEMORY[0x263F1A820];
  v51[5] = a24;
  type metadata accessor for SubscriptionOptionGroup.ContentStorage();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_9_7();
  __n128 v37 = MEMORY[0x270FA5388](v36);
  uint64_t v39 = (char *)v45 - v38;
  v27(v37);
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_23_16();
  uint64_t v40 = OUTLINED_FUNCTION_15_27();
  uint64_t v44 = OUTLINED_FUNCTION_25_14(v40, v41, v42, v43);
  v49(v44);
  sub_22EDA14E4((uint64_t)v39, (uint64_t)v51, v35, MEMORY[0x263F1A830], a22, v50);
  OUTLINED_FUNCTION_13_29();
  OUTLINED_FUNCTION_5_0();
}

void SubscriptionOptionGroup<>.init<A>(_:content:marketingContent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v57 = v29;
  uint64_t v58 = v28;
  uint64_t v53 = v30;
  uint64_t v32 = v31;
  uint64_t v59 = v33;
  uint64_t v55 = v34;
  uint64_t v56 = a23;
  OUTLINED_FUNCTION_4_2();
  uint64_t v54 = a21;
  MEMORY[0x270FA5388](v35);
  OUTLINED_FUNCTION_64_1();
  OUTLINED_FUNCTION_0_0();
  uint64_t v37 = v36;
  MEMORY[0x270FA5388](v38);
  OUTLINED_FUNCTION_26_9();
  v60[0] = v39;
  v60[1] = MEMORY[0x263F1A830];
  v60[2] = v40;
  void v60[3] = v41;
  v60[4] = MEMORY[0x263F1A820];
  v60[5] = a22;
  type metadata accessor for SubscriptionOptionGroup.ContentStorage();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_9_7();
  __n128 v43 = MEMORY[0x270FA5388](v42);
  uint64_t v45 = (char *)&v52 - v44;
  v53(v43);
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_10_4();
  v46();
  uint64_t v47 = sub_22EE7E150();
  uint64_t v51 = OUTLINED_FUNCTION_25_14(v47, v48, v49, v50);
  v58(v51);
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v32, v25);
  sub_22EDA14E4((uint64_t)v45, (uint64_t)v60, v23, MEMORY[0x263F1A830], v27, v59);
  OUTLINED_FUNCTION_13_29();
  OUTLINED_FUNCTION_5_0();
}

uint64_t SubscriptionOptionGroup<>.init<>(_:isIncluded:)@<X0>(uint64_t a1@<X4>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  OUTLINED_FUNCTION_23_16();
  uint64_t result = OUTLINED_FUNCTION_15_27();
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(unsigned char *)(a3 + 16) = 1;
  *(void *)(a3 + 24) = result;
  *(void *)(a3 + 32) = v7;
  *(unsigned char *)(a3 + 40) = v8 & 1;
  *(void *)(a3 + 48) = v9;
  return result;
}

void SubscriptionOptionGroup<>.init<A>(_:isIncluded:)()
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  OUTLINED_FUNCTION_0_0();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_10_4();
  v13();
  uint64_t v14 = sub_22EE7E150();
  uint64_t v16 = v15;
  char v18 = v17;
  uint64_t v20 = v19;
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v7, v1);
  *(void *)uint64_t v9 = v5;
  *(void *)(v9 + 8) = v3;
  *(unsigned char *)(v9 + 16) = 1;
  *(void *)(v9 + 24) = v14;
  *(void *)(v9 + 32) = v16;
  *(unsigned char *)(v9 + 40) = v18 & 1;
  *(void *)(v9 + 48) = v20;
  OUTLINED_FUNCTION_5_0();
}

void SubscriptionOptionGroup<>.init(_:content:)()
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  v18[1] = v6;
  uint64_t v19 = v7;
  unint64_t v8 = sub_22EB39F70();
  v20[0] = v3;
  v20[1] = MEMORY[0x263F1A830];
  void v20[2] = &type metadata for AutomaticSubscriptionStoreMarketingContent;
  v20[3] = v1;
  v20[4] = MEMORY[0x263F1A820];
  v20[5] = v8;
  type metadata accessor for SubscriptionOptionGroup.ContentStorage();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_9_7();
  __n128 v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v18 - v11;
  v5(v10);
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_23_16();
  uint64_t v13 = OUTLINED_FUNCTION_15_27();
  OUTLINED_FUNCTION_25_14(v13, v14, v15, v16);
  sub_22EDA14E4((uint64_t)v12, (uint64_t)v20, v17, MEMORY[0x263F1A830], (uint64_t)&type metadata for AutomaticSubscriptionStoreMarketingContent, v19);
  OUTLINED_FUNCTION_13_29();
  OUTLINED_FUNCTION_5_0();
}

void SubscriptionOptionGroup<>.init<A>(_:content:)()
{
  OUTLINED_FUNCTION_6_0();
  v28[1] = v0;
  v28[2] = v1;
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  unint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v29 = v11;
  OUTLINED_FUNCTION_0_0();
  uint64_t v13 = v12;
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_64_1();
  unint64_t v15 = sub_22EB39F70();
  uint64_t v30 = v6;
  uint64_t v31 = MEMORY[0x263F1A830];
  uint64_t v32 = &type metadata for AutomaticSubscriptionStoreMarketingContent;
  uint64_t v33 = v2;
  uint64_t v34 = MEMORY[0x263F1A820];
  unint64_t v35 = v15;
  type metadata accessor for SubscriptionOptionGroup.ContentStorage();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_9_7();
  __n128 v17 = MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)v28 - v18;
  v8(v17);
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_10_4();
  v20();
  uint64_t v21 = sub_22EE7E150();
  uint64_t v23 = v22;
  LOBYTE(v8) = v24;
  uint64_t v26 = v25;
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v10, v4);
  uint64_t v30 = v21;
  uint64_t v31 = v23;
  LOBYTE(v32) = v8 & 1;
  uint64_t v33 = v26;
  sub_22EDA14E4((uint64_t)v19, (uint64_t)&v30, v27, MEMORY[0x263F1A830], (uint64_t)&type metadata for AutomaticSubscriptionStoreMarketingContent, v29);
  OUTLINED_FUNCTION_13_29();
  OUTLINED_FUNCTION_5_0();
}

uint64_t sub_22EDA34F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EDA3544()
{
  uint64_t result = type metadata accessor for SubscriptionOptionGroup.ContentStorage();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

void *sub_22EDA366C(void *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(a3[2] - 8);
  uint64_t v6 = *(void *)(a3[3] - 8);
  if (*(void *)(v5 + 64) <= 0x10uLL) {
    uint64_t v7 = 16;
  }
  else {
    uint64_t v7 = *(void *)(*(void *)(a3[2] - 8) + 64);
  }
  uint64_t v8 = *(void *)(a3[3] - 8);
  int v9 = *(_DWORD *)(v6 + 80);
  uint64_t v10 = v9;
  uint64_t v11 = v7 + v9 + 1;
  uint64_t v12 = *(void *)(v6 + 64);
  uint64_t v13 = *(void *)(a3[4] - 8);
  int v14 = *(_DWORD *)(v13 + 80);
  uint64_t v15 = v14;
  unsigned int v16 = v14 | *(_DWORD *)(v5 + 80) & 0xF8 | v9;
  int v17 = (v14 | v9 | *(_DWORD *)(v5 + 80)) & 0x100000;
  if (((v12 + v14 + (v11 & ~v10)) & ~(unint64_t)v14) + *(void *)(v13 + 64) > 0x18
    || v17 != 0
    || v16 > 7)
  {
    uint64_t v20 = *(void *)a2;
    *uint64_t v4 = *(void *)a2;
    uint64_t v4 = (void *)(v20 + (((v16 | 7) + 16) & ~(unint64_t)(v16 | 7)));
    swift_retain();
  }
  else
  {
    unsigned int v21 = a2[v7];
    unsigned int v22 = v21 - 2;
    if (v21 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v23 = v7;
      }
      else {
        uint64_t v23 = 4;
      }
      switch(v23)
      {
        case 1:
          int v24 = *a2;
          goto LABEL_22;
        case 2:
          int v24 = *(unsigned __int16 *)a2;
          goto LABEL_22;
        case 3:
          int v24 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_22;
        case 4:
          int v24 = *(_DWORD *)a2;
LABEL_22:
          if (v7 < 4) {
            unsigned int v21 = (v24 | (v22 << (8 * v7))) + 2;
          }
          else {
            unsigned int v21 = v24 + 2;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v30 = a3[4];
    uint64_t v31 = a3[3];
    uint64_t v25 = ~v10;
    if (v21 == 1)
    {
      uint64_t v26 = *((void *)a2 + 1);
      *uint64_t v4 = *(void *)a2;
      v4[1] = v26;
      swift_retain();
      char v27 = 1;
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *))(v5 + 16))(a1, a2);
      char v27 = 0;
    }
    *((unsigned char *)v4 + v7) = v27;
    unint64_t v28 = (unint64_t)&a2[v11] & v25;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)v4 + v11) & v25, v28, v31);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 16))(((((unint64_t)v4 + v11) & v25) + v12 + v15) & ~v15, (v28 + v12 + v15) & ~v15, v30);
  }
  return v4;
}

uint64_t sub_22EDA3944(unsigned __int8 *a1, void *a2)
{
  if (*(void *)(*(void *)(a2[2] - 8) + 64) <= 0x10uLL) {
    uint64_t v4 = 16;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(a2[2] - 8) + 64);
  }
  unsigned int v5 = a1[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a1;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a1;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a1;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1) {
    swift_release();
  }
  else {
    (*(void (**)(unsigned __int8 *))(*(void *)(a2[2] - 8) + 8))(a1);
  }
  uint64_t v10 = *(void *)(a2[3] - 8);
  uint64_t v11 = v10 + 8;
  unint64_t v12 = (unint64_t)&a1[v4 + 1 + *(unsigned __int8 *)(v10 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  (*(void (**)(unint64_t))(v10 + 8))(v12);
  uint64_t v13 = *(void *)(a2[4] - 8);
  int v14 = *(uint64_t (**)(unint64_t))(v13 + 8);
  unint64_t v15 = (v12 + *(void *)(v11 + 56) + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);

  return v14(v15);
}

void *sub_22EDA3B08(void *a1, unsigned __int8 *a2, void *a3)
{
  if (*(void *)(*(void *)(a3[2] - 8) + 64) <= 0x10uLL) {
    uint64_t v6 = 16;
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(a3[2] - 8) + 64);
  }
  unsigned int v7 = a2[v6];
  unsigned int v8 = v7 - 2;
  if (v7 >= 2)
  {
    if (v6 <= 3) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a2;
        goto LABEL_13;
      case 2:
        int v10 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v10 = *(_DWORD *)a2;
LABEL_13:
        int v11 = (v10 | (v8 << (8 * v6))) + 2;
        unsigned int v7 = v10 + 2;
        if (v6 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  if (v7 == 1)
  {
    uint64_t v12 = *((void *)a2 + 1);
    *a1 = *(void *)a2;
    a1[1] = v12;
    swift_retain();
    char v13 = 1;
  }
  else
  {
    (*(void (**)(void *, unsigned __int8 *))(*(void *)(a3[2] - 8) + 16))(a1, a2);
    char v13 = 0;
  }
  *((unsigned char *)a1 + v6) = v13;
  uint64_t v14 = *(void *)(a3[3] - 8);
  uint64_t v15 = v14 + 16;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v6 + v16 + 1;
  unint64_t v18 = ((unint64_t)a1 + v17) & ~v16;
  unint64_t v19 = (unint64_t)&a2[v17] & ~v16;
  (*(void (**)(unint64_t, unint64_t))(v14 + 16))(v18, v19);
  uint64_t v20 = *(void *)(a3[4] - 8);
  (*(void (**)(unint64_t, unint64_t))(v20 + 16))((*(void *)(v15 + 48) + *(unsigned __int8 *)(v20 + 80) + v18) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80), (*(void *)(v15 + 48) + *(unsigned __int8 *)(v20 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
  return a1;
}

unsigned __int8 *sub_22EDA3CF8(unsigned __int8 *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v6 = a3[2];
  uint64_t v7 = *(void *)(v6 - 8);
  if (a1 != a2)
  {
    if (*(void *)(v7 + 64) <= 0x10uLL) {
      uint64_t v8 = 16;
    }
    else {
      uint64_t v8 = *(void *)(v7 + 64);
    }
    unsigned int v9 = a1[v8];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v11 = v8;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a1;
          goto LABEL_14;
        case 2:
          int v12 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v12 = *(_DWORD *)a1;
LABEL_14:
          if (v8 < 4) {
            unsigned int v9 = (v12 | (v10 << (8 * v8))) + 2;
          }
          else {
            unsigned int v9 = v12 + 2;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1) {
      swift_release();
    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
    }
    unsigned int v13 = a2[v8];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v15 = v8;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_29;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_29;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_29;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_29:
          if (v8 < 4) {
            unsigned int v13 = (v16 | (v14 << (8 * v8))) + 2;
          }
          else {
            unsigned int v13 = v16 + 2;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      uint64_t v17 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v17;
      a1[v8] = 1;
      swift_retain();
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v6);
      a1[v8] = 0;
    }
  }
  unint64_t v18 = *(void *)(v7 + 64);
  if (v18 <= 0x10) {
    unint64_t v18 = 16;
  }
  uint64_t v19 = *(void *)(a3[3] - 8);
  uint64_t v20 = v19 + 24;
  uint64_t v21 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v22 = v18 + v21 + 1;
  unint64_t v23 = (unint64_t)&a1[v22] & ~v21;
  unint64_t v24 = (unint64_t)&a2[v22] & ~v21;
  (*(void (**)(unint64_t, unint64_t))(v19 + 24))(v23, v24);
  uint64_t v25 = *(void *)(a3[4] - 8);
  (*(void (**)(unint64_t, unint64_t))(v25 + 24))((*(void *)(v20 + 40) + *(unsigned __int8 *)(v25 + 80) + v23) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80), (*(void *)(v20 + 40) + *(unsigned __int8 *)(v25 + 80) + v24) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
  return a1;
}

_OWORD *sub_22EDA3FE0(_OWORD *a1, unsigned __int8 *a2, void *a3)
{
  if (*(void *)(*(void *)(a3[2] - 8) + 64) <= 0x10uLL) {
    uint64_t v6 = 16;
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(a3[2] - 8) + 64);
  }
  unsigned int v7 = a2[v6];
  unsigned int v8 = v7 - 2;
  if (v7 >= 2)
  {
    if (v6 <= 3) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a2;
        goto LABEL_13;
      case 2:
        int v10 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v10 = *(_DWORD *)a2;
LABEL_13:
        int v11 = (v10 | (v8 << (8 * v6))) + 2;
        unsigned int v7 = v10 + 2;
        if (v6 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  if (v7 == 1)
  {
    *a1 = *(_OWORD *)a2;
    char v12 = 1;
  }
  else
  {
    (*(void (**)(_OWORD *, unsigned __int8 *))(*(void *)(a3[2] - 8) + 32))(a1, a2);
    char v12 = 0;
  }
  *((unsigned char *)a1 + v6) = v12;
  uint64_t v13 = *(void *)(a3[3] - 8);
  uint64_t v14 = v13 + 32;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = v6 + v15 + 1;
  unint64_t v17 = ((unint64_t)a1 + v16) & ~v15;
  unint64_t v18 = (unint64_t)&a2[v16] & ~v15;
  (*(void (**)(unint64_t, unint64_t))(v13 + 32))(v17, v18);
  uint64_t v19 = *(void *)(a3[4] - 8);
  (*(void (**)(unint64_t, unint64_t))(v19 + 32))((*(void *)(v14 + 32) + *(unsigned __int8 *)(v19 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80), (*(void *)(v14 + 32) + *(unsigned __int8 *)(v19 + 80) + v18) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
  return a1;
}

unsigned __int8 *sub_22EDA41CC(unsigned __int8 *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v6 = a3[2];
  uint64_t v7 = *(void *)(v6 - 8);
  if (a1 != a2)
  {
    if (*(void *)(v7 + 64) <= 0x10uLL) {
      uint64_t v8 = 16;
    }
    else {
      uint64_t v8 = *(void *)(v7 + 64);
    }
    unsigned int v9 = a1[v8];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v11 = v8;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a1;
          goto LABEL_14;
        case 2:
          int v12 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v12 = *(_DWORD *)a1;
LABEL_14:
          if (v8 < 4) {
            unsigned int v9 = (v12 | (v10 << (8 * v8))) + 2;
          }
          else {
            unsigned int v9 = v12 + 2;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1) {
      swift_release();
    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
    }
    unsigned int v13 = a2[v8];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v15 = v8;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_29;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_29;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_29;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_29:
          if (v8 < 4) {
            unsigned int v13 = (v16 | (v14 << (8 * v8))) + 2;
          }
          else {
            unsigned int v13 = v16 + 2;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      char v17 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v6);
      char v17 = 0;
    }
    a1[v8] = v17;
  }
  unint64_t v18 = *(void *)(v7 + 64);
  if (v18 <= 0x10) {
    unint64_t v18 = 16;
  }
  uint64_t v19 = *(void *)(a3[3] - 8);
  uint64_t v20 = v19 + 40;
  uint64_t v21 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v22 = v18 + v21 + 1;
  unint64_t v23 = (unint64_t)&a1[v22] & ~v21;
  unint64_t v24 = (unint64_t)&a2[v22] & ~v21;
  (*(void (**)(unint64_t, unint64_t))(v19 + 40))(v23, v24);
  uint64_t v25 = *(void *)(a3[4] - 8);
  (*(void (**)(unint64_t, unint64_t))(v25 + 40))((*(void *)(v20 + 24) + *(unsigned __int8 *)(v25 + 80) + v23) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80), (*(void *)(v20 + 24) + *(unsigned __int8 *)(v25 + 80) + v24) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
  return a1;
}

uint64_t sub_22EDA44B0(unsigned __int16 *a1, unsigned int a2, void *a3)
{
  uint64_t v6 = a3[2];
  uint64_t v5 = a3[3];
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v5 - 8);
  if (*(void *)(v7 + 64) <= 0x10uLL) {
    uint64_t v9 = 16;
  }
  else {
    uint64_t v9 = *(void *)(v7 + 64);
  }
  uint64_t v10 = *(unsigned int *)(v8 + 84);
  uint64_t v11 = a3[4];
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int *)(v12 + 84);
  if (v10 <= v13) {
    unsigned int v14 = *(_DWORD *)(v12 + 84);
  }
  else {
    unsigned int v14 = *(_DWORD *)(v8 + 84);
  }
  uint64_t v15 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v16 = *(void *)(v8 + 64);
  uint64_t v17 = *(unsigned __int8 *)(v12 + 80);
  if (v14 <= 0xFE) {
    unsigned int v18 = 254;
  }
  else {
    unsigned int v18 = v14;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v19 = v9 + v15 + 1;
  int v20 = a2 - v18;
  if (a2 <= v18) {
    goto LABEL_31;
  }
  uint64_t v21 = ((v16 + v17 + (v19 & ~v15)) & ~v17) + *(void *)(*(void *)(v11 - 8) + 64);
  char v22 = 8 * v21;
  if (v21 <= 3)
  {
    unsigned int v25 = ((v20 + ~(-1 << v22)) >> v22) + 1;
    if (HIWORD(v25))
    {
      int v23 = *(_DWORD *)((char *)a1 + v21);
      if (!v23) {
        goto LABEL_31;
      }
      goto LABEL_21;
    }
    if (v25 > 0xFF)
    {
      int v23 = *(unsigned __int16 *)((char *)a1 + v21);
      if (!*(unsigned __int16 *)((char *)a1 + v21)) {
        goto LABEL_31;
      }
      goto LABEL_21;
    }
    if (v25 < 2)
    {
LABEL_31:
      if (v14 > 0xFE)
      {
        uint64_t v30 = ((unint64_t)a1 + v19) & ~v15;
        if (v10 != v18)
        {
          uint64_t v30 = (v30 + v16 + v17) & ~v17;
          uint64_t v10 = v13;
          uint64_t v5 = v11;
        }
        return __swift_getEnumTagSinglePayload(v30, v10, v5);
      }
      else
      {
        unsigned int v29 = *((unsigned __int8 *)a1 + v9);
        if (v29 >= 2) {
          return (v29 ^ 0xFF) + 1;
        }
        else {
          return 0;
        }
      }
    }
  }
  int v23 = *((unsigned __int8 *)a1 + v21);
  if (!*((unsigned char *)a1 + v21)) {
    goto LABEL_31;
  }
LABEL_21:
  int v26 = (v23 - 1) << v22;
  if (v21 > 3) {
    int v26 = 0;
  }
  if (v21)
  {
    if (v21 <= 3) {
      int v27 = v21;
    }
    else {
      int v27 = 4;
    }
    switch(v27)
    {
      case 2:
        int v28 = *a1;
        break;
      case 3:
        int v28 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v28 = *(_DWORD *)a1;
        break;
      default:
        int v28 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v28 = 0;
  }
  return v18 + (v28 | v26) + 1;
}

void sub_22EDA46F4(char *a1, uint64_t a2, unsigned int a3, void *a4)
{
  uint64_t v8 = a4[2];
  uint64_t v7 = a4[3];
  unint64_t v9 = *(void *)(*(void *)(v8 - 8) + 64);
  if (v9 <= 0x10) {
    uint64_t v10 = 16;
  }
  else {
    uint64_t v10 = v9;
  }
  uint64_t v11 = *(void *)(v7 - 8);
  uint64_t v12 = *(unsigned int *)(v11 + 84);
  uint64_t v13 = a4[4];
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned int *)(v14 + 84);
  if (v12 <= v15) {
    unsigned int v16 = *(_DWORD *)(v14 + 84);
  }
  else {
    unsigned int v16 = *(_DWORD *)(v11 + 84);
  }
  if (v16 <= 0xFE) {
    unsigned int v17 = 254;
  }
  else {
    unsigned int v17 = v16;
  }
  size_t v18 = v10 + 1;
  uint64_t v19 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v20 = v10 + 1 + v19;
  uint64_t v21 = *(void *)(*(void *)(v7 - 8) + 64);
  uint64_t v22 = *(unsigned __int8 *)(v14 + 80);
  size_t v23 = ((v21 + v22 + (v20 & ~v19)) & ~v22) + *(void *)(*(void *)(v13 - 8) + 64);
  char v24 = 8 * v23;
  BOOL v25 = a3 >= v17;
  unsigned int v26 = a3 - v17;
  if (v26 != 0 && v25)
  {
    if (v23 <= 3)
    {
      unsigned int v30 = ((v26 + ~(-1 << v24)) >> v24) + 1;
      if (HIWORD(v30))
      {
        int v27 = 4;
      }
      else if (v30 >= 0x100)
      {
        int v27 = 2;
      }
      else
      {
        int v27 = v30 > 1;
      }
    }
    else
    {
      int v27 = 1;
    }
  }
  else
  {
    int v27 = 0;
  }
  if (v17 < a2)
  {
    unsigned int v28 = ~v17 + a2;
    if (v23 < 4)
    {
      int v29 = (v28 >> v24) + 1;
      if (v23)
      {
        int v31 = v28 & ~(-1 << v24);
        bzero(a1, v23);
        if (v23 == 3)
        {
          *(_WORD *)a1 = v31;
          a1[2] = BYTE2(v31);
        }
        else if (v23 == 2)
        {
          *(_WORD *)a1 = v31;
        }
        else
        {
          *a1 = v31;
        }
      }
    }
    else
    {
      bzero(a1, v23);
      *(_DWORD *)a1 = v28;
      int v29 = 1;
    }
    switch(v27)
    {
      case 1:
        a1[v23] = v29;
        return;
      case 2:
        *(_WORD *)&a1[v23] = v29;
        return;
      case 3:
        goto LABEL_60;
      case 4:
        *(_DWORD *)&a1[v23] = v29;
        return;
      default:
        return;
    }
  }
  switch(v27)
  {
    case 1:
      a1[v23] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 2:
      *(_WORD *)&a1[v23] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 3:
LABEL_60:
      __break(1u);
      JUMPOUT(0x22EDA4A6CLL);
    case 4:
      *(_DWORD *)&a1[v23] = 0;
      goto LABEL_29;
    default:
LABEL_29:
      if (a2)
      {
LABEL_30:
        if (v16 > 0xFE)
        {
          unint64_t v32 = (unint64_t)&a1[v20] & ~v19;
          if (v12 != v17)
          {
            unint64_t v32 = (v32 + v21 + v22) & ~v22;
            uint64_t v12 = v15;
            uint64_t v7 = v13;
          }
          __swift_storeEnumTagSinglePayload(v32, a2, v12, v7);
        }
        else if (a2 > 0xFE)
        {
          if (v18 <= 3) {
            int v33 = ~(-1 << (8 * v18));
          }
          else {
            int v33 = -1;
          }
          if (v10 != -1)
          {
            int v34 = v33 & (a2 - 255);
            if (v18 <= 3) {
              int v35 = v10 + 1;
            }
            else {
              int v35 = 4;
            }
            bzero(a1, v18);
            switch(v35)
            {
              case 2:
                *(_WORD *)a1 = v34;
                break;
              case 3:
                *(_WORD *)a1 = v34;
                a1[2] = BYTE2(v34);
                break;
              case 4:
                *(_DWORD *)a1 = v34;
                break;
              default:
                *a1 = v34;
                break;
            }
          }
        }
        else
        {
          a1[v10] = -(char)a2;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for SubscriptionOptionGroup()
{
  return swift_getGenericMetadata();
}

uint64_t sub_22EDA4ABC()
{
  return swift_getWitnessTable();
}

uint64_t sub_22EDA4BCC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_22EDA4C84(void *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64) + 7;
  uint64_t v8 = *a2;
  if (v6 <= 7
    && (*(_DWORD *)(v5 + 80) & 0x100000) == 0
    && ((((v7 + ((v6 + 16) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 351) & 0xFFFFFFFFFFFFFFF8) + 8 <= 0x18)
  {
    uint64_t v11 = a2[1];
    *a1 = v8;
    a1[1] = v11;
    uint64_t v12 = ((unint64_t)a1 + v6 + 16) & ~v6;
    uint64_t v13 = ((unint64_t)a2 + v6 + 16) & ~v6;
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    v14(v12, v13, v4);
    unint64_t v15 = (v7 + v12) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v16 = (v7 + v13) & 0xFFFFFFFFFFFFFFF8;
    if ((*(unsigned char *)(v16 + 343) & 1) == 0)
    {
      *(void *)unint64_t v15 = *(void *)v16;
      *(unsigned char *)(v15 + 343) = 0;
      swift_retain();
LABEL_37:
      *(void *)((v15 + 351) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v16 + 351) & 0xFFFFFFFFFFFFFFF8);
      return a1;
    }
    *(unsigned char *)unint64_t v15 = *(unsigned char *)v16;
    *(void *)(v15 + 8) = *(void *)(v16 + 8);
    unint64_t v17 = *(void *)(v16 + 40);
    swift_retain();
    if (v17 >= 6)
    {
      *(void *)(v15 + 40) = v17;
      *(void *)(v15 + 48) = *(void *)(v16 + 48);
      (**(void (***)(uint64_t, uint64_t, unint64_t))(v17 - 8))(v15 + 16, v16 + 16, v17);
    }
    else
    {
      long long v18 = *(_OWORD *)(v16 + 16);
      long long v19 = *(_OWORD *)(v16 + 32);
      *(void *)(v15 + 48) = *(void *)(v16 + 48);
      *(_OWORD *)(v15 + 16) = v18;
      *(_OWORD *)(v15 + 32) = v19;
    }
    uint64_t v20 = (_OWORD *)(v15 + 56);
    uint64_t v21 = (long long *)(v16 + 56);
    uint64_t v22 = *(void *)(v16 + 80);
    if (v22)
    {
      *(void *)(v15 + 80) = v22;
      *(void *)(v15 + 88) = *(void *)(v16 + 88);
      (**(void (***)(_OWORD *, long long *))(v22 - 8))(v20, v21);
    }
    else
    {
      long long v23 = *v21;
      long long v24 = *(_OWORD *)(v16 + 72);
      *(void *)(v15 + 88) = *(void *)(v16 + 88);
      *uint64_t v20 = v23;
      *(_OWORD *)(v15 + 72) = v24;
    }
    BOOL v25 = (_OWORD *)(v15 + 96);
    unsigned int v26 = (long long *)(v16 + 96);
    uint64_t v27 = *(void *)(v16 + 120);
    if (v27)
    {
      *(void *)(v15 + 120) = v27;
      *(void *)(v15 + 128) = *(void *)(v16 + 128);
      (**(void (***)(_OWORD *, long long *))(v27 - 8))(v25, v26);
    }
    else
    {
      long long v28 = *v26;
      long long v29 = *(_OWORD *)(v16 + 112);
      *(void *)(v15 + 128) = *(void *)(v16 + 128);
      _OWORD *v25 = v28;
      *(_OWORD *)(v15 + 112) = v29;
    }
    unsigned int v30 = (_OWORD *)(v15 + 136);
    int v31 = (long long *)(v16 + 136);
    uint64_t v32 = *(void *)(v16 + 160);
    if (v32)
    {
      *(void *)(v15 + 160) = v32;
      *(void *)(v15 + 168) = *(void *)(v16 + 168);
      (**(void (***)(_OWORD *, long long *))(v32 - 8))(v30, v31);
    }
    else
    {
      long long v33 = *v31;
      long long v34 = *(_OWORD *)(v16 + 152);
      *(void *)(v15 + 168) = *(void *)(v16 + 168);
      _OWORD *v30 = v33;
      *(_OWORD *)(v15 + 152) = v34;
    }
    int v35 = (_OWORD *)(v15 + 176);
    uint64_t v36 = (long long *)(v16 + 176);
    uint64_t v37 = *(void *)(v16 + 200);
    if (v37)
    {
      *(void *)(v15 + 200) = v37;
      *(void *)(v15 + 208) = *(void *)(v16 + 208);
      (**(void (***)(_OWORD *, long long *))(v37 - 8))(v35, v36);
      *(void *)(v15 + 216) = *(void *)(v16 + 216);
    }
    else
    {
      long long v38 = *v36;
      long long v39 = *(_OWORD *)(v16 + 208);
      *(_OWORD *)(v15 + 192) = *(_OWORD *)(v16 + 192);
      *(_OWORD *)(v15 + 208) = v39;
      _OWORD *v35 = v38;
    }
    uint64_t v40 = (_OWORD *)(v15 + 224);
    uint64_t v41 = (long long *)(v16 + 224);
    unint64_t v42 = *(void *)(v16 + 248);
    if (v42 >= 3)
    {
      *(void *)(v15 + 248) = v42;
      *(void *)(v15 + 256) = *(void *)(v16 + 256);
      (**(void (***)(_OWORD *, long long *))(v42 - 8))(v40, v41);
    }
    else
    {
      long long v43 = *v41;
      long long v44 = *(_OWORD *)(v16 + 240);
      *(void *)(v15 + 256) = *(void *)(v16 + 256);
      _OWORD *v40 = v43;
      *(_OWORD *)(v15 + 240) = v44;
    }
    *(unsigned char *)(v15 + 264) = *(unsigned char *)(v16 + 264);
    if (*(void *)(v16 + 280) >= 4uLL)
    {
      *(void *)(v15 + 272) = *(void *)(v16 + 272);
      *(void *)(v15 + 280) = *(void *)(v16 + 280);
      *(unsigned char *)(v15 + 288) = *(unsigned char *)(v16 + 288);
      *(void *)(v15 + 296) = *(void *)(v16 + 296);
      uint64_t v49 = *(void *)(v16 + 312);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v49)
      {
        *(void *)(v15 + 304) = *(void *)(v16 + 304);
        *(void *)(v15 + 312) = *(void *)(v16 + 312);
        *(unsigned char *)(v15 + 320) = *(unsigned char *)(v16 + 320);
        *(void *)(v15 + 328) = *(void *)(v16 + 328);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_36:
        *(unsigned char *)(v15 + 336) = *(unsigned char *)(v16 + 336);
        *(unsigned char *)(v15 + 337) = *(unsigned char *)(v16 + 337);
        int v50 = *(_DWORD *)(v16 + 338);
        *(unsigned char *)(v15 + 342) = *(unsigned char *)(v16 + 342);
        *(_DWORD *)(v15 + 338) = v50;
        *(unsigned char *)(v15 + 343) = 1;
        goto LABEL_37;
      }
      uint64_t v45 = (_OWORD *)(v15 + 304);
      long long v46 = *(_OWORD *)(v16 + 304);
      long long v47 = *(_OWORD *)(v16 + 320);
    }
    else
    {
      uint64_t v45 = (_OWORD *)(v15 + 272);
      long long v46 = *(_OWORD *)(v16 + 272);
      long long v47 = *(_OWORD *)(v16 + 288);
      long long v48 = *(_OWORD *)(v16 + 320);
      *(_OWORD *)(v15 + 304) = *(_OWORD *)(v16 + 304);
      *(_OWORD *)(v15 + 320) = v48;
    }
    *uint64_t v45 = v46;
    v45[1] = v47;
    goto LABEL_36;
  }
  *a1 = v8;
  a1 = (void *)(v8 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
  swift_retain();
  return a1;
}

unint64_t sub_22EDA5100(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = v4 + 8;
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v6);
  unint64_t v7 = (*(void *)(v5 + 56) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  if (*(unsigned char *)(v7 + 343))
  {
    swift_release();
    if (*(void *)(v7 + 40) >= 6uLL) {
      __swift_destroy_boxed_opaque_existential_1(v7 + 16);
    }
    if (*(void *)(v7 + 80)) {
      __swift_destroy_boxed_opaque_existential_1(v7 + 56);
    }
    if (*(void *)(v7 + 120)) {
      __swift_destroy_boxed_opaque_existential_1(v7 + 96);
    }
    if (*(void *)(v7 + 160)) {
      __swift_destroy_boxed_opaque_existential_1(v7 + 136);
    }
    if (*(void *)(v7 + 200)) {
      __swift_destroy_boxed_opaque_existential_1(v7 + 176);
    }
    if (*(void *)(v7 + 248) >= 3uLL) {
      __swift_destroy_boxed_opaque_existential_1(v7 + 224);
    }
    unint64_t result = *(void *)(v7 + 280);
    if (result >= 4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t result = *(void *)(v7 + 312);
      if (result)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
  }
  else
  {
    return swift_release();
  }
  return result;
}

void *sub_22EDA5268(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a3 + 16);
  unint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  uint64_t v7 = *(void *)(v5 - 8) + 16;
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 16) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 16) & ~v8;
  swift_retain();
  v6(v9, v10, v5);
  uint64_t v11 = *(void *)(v7 + 48) + 7;
  unint64_t v12 = (v11 + v9) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = (v11 + v10) & 0xFFFFFFFFFFFFFFF8;
  if (*(unsigned char *)(v13 + 343))
  {
    *(unsigned char *)unint64_t v12 = *(unsigned char *)v13;
    *(void *)(v12 + 8) = *(void *)(v13 + 8);
    unint64_t v14 = *(void *)(v13 + 40);
    swift_retain();
    if (v14 >= 6)
    {
      *(void *)(v12 + 40) = v14;
      *(void *)(v12 + 48) = *(void *)(v13 + 48);
      (**(void (***)(uint64_t, uint64_t, unint64_t))(v14 - 8))(v12 + 16, v13 + 16, v14);
    }
    else
    {
      long long v15 = *(_OWORD *)(v13 + 16);
      long long v16 = *(_OWORD *)(v13 + 32);
      *(void *)(v12 + 48) = *(void *)(v13 + 48);
      *(_OWORD *)(v12 + 16) = v15;
      *(_OWORD *)(v12 + 32) = v16;
    }
    unint64_t v17 = (_OWORD *)(v12 + 56);
    long long v18 = (long long *)(v13 + 56);
    uint64_t v19 = *(void *)(v13 + 80);
    if (v19)
    {
      *(void *)(v12 + 80) = v19;
      *(void *)(v12 + 88) = *(void *)(v13 + 88);
      (**(void (***)(_OWORD *, long long *))(v19 - 8))(v17, v18);
    }
    else
    {
      long long v20 = *v18;
      long long v21 = *(_OWORD *)(v13 + 72);
      *(void *)(v12 + 88) = *(void *)(v13 + 88);
      *unint64_t v17 = v20;
      *(_OWORD *)(v12 + 72) = v21;
    }
    uint64_t v22 = (_OWORD *)(v12 + 96);
    long long v23 = (long long *)(v13 + 96);
    uint64_t v24 = *(void *)(v13 + 120);
    if (v24)
    {
      *(void *)(v12 + 120) = v24;
      *(void *)(v12 + 128) = *(void *)(v13 + 128);
      (**(void (***)(_OWORD *, long long *))(v24 - 8))(v22, v23);
    }
    else
    {
      long long v25 = *v23;
      long long v26 = *(_OWORD *)(v13 + 112);
      *(void *)(v12 + 128) = *(void *)(v13 + 128);
      *uint64_t v22 = v25;
      *(_OWORD *)(v12 + 112) = v26;
    }
    uint64_t v27 = (_OWORD *)(v12 + 136);
    long long v28 = (long long *)(v13 + 136);
    uint64_t v29 = *(void *)(v13 + 160);
    if (v29)
    {
      *(void *)(v12 + 160) = v29;
      *(void *)(v12 + 168) = *(void *)(v13 + 168);
      (**(void (***)(_OWORD *, long long *))(v29 - 8))(v27, v28);
    }
    else
    {
      long long v30 = *v28;
      long long v31 = *(_OWORD *)(v13 + 152);
      *(void *)(v12 + 168) = *(void *)(v13 + 168);
      *uint64_t v27 = v30;
      *(_OWORD *)(v12 + 152) = v31;
    }
    uint64_t v32 = (_OWORD *)(v12 + 176);
    long long v33 = (long long *)(v13 + 176);
    uint64_t v34 = *(void *)(v13 + 200);
    if (v34)
    {
      *(void *)(v12 + 200) = v34;
      *(void *)(v12 + 208) = *(void *)(v13 + 208);
      (**(void (***)(_OWORD *, long long *))(v34 - 8))(v32, v33);
      *(void *)(v12 + 216) = *(void *)(v13 + 216);
    }
    else
    {
      long long v35 = *v33;
      long long v36 = *(_OWORD *)(v13 + 208);
      *(_OWORD *)(v12 + 192) = *(_OWORD *)(v13 + 192);
      *(_OWORD *)(v12 + 208) = v36;
      *uint64_t v32 = v35;
    }
    uint64_t v37 = (_OWORD *)(v12 + 224);
    long long v38 = (long long *)(v13 + 224);
    unint64_t v39 = *(void *)(v13 + 248);
    if (v39 >= 3)
    {
      *(void *)(v12 + 248) = v39;
      *(void *)(v12 + 256) = *(void *)(v13 + 256);
      (**(void (***)(_OWORD *, long long *))(v39 - 8))(v37, v38);
    }
    else
    {
      long long v40 = *v38;
      long long v41 = *(_OWORD *)(v13 + 240);
      *(void *)(v12 + 256) = *(void *)(v13 + 256);
      *uint64_t v37 = v40;
      *(_OWORD *)(v12 + 240) = v41;
    }
    *(unsigned char *)(v12 + 264) = *(unsigned char *)(v13 + 264);
    if (*(void *)(v13 + 280) >= 4uLL)
    {
      *(void *)(v12 + 272) = *(void *)(v13 + 272);
      *(void *)(v12 + 280) = *(void *)(v13 + 280);
      *(unsigned char *)(v12 + 288) = *(unsigned char *)(v13 + 288);
      *(void *)(v12 + 296) = *(void *)(v13 + 296);
      uint64_t v46 = *(void *)(v13 + 312);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v46)
      {
        *(void *)(v12 + 304) = *(void *)(v13 + 304);
        *(void *)(v12 + 312) = *(void *)(v13 + 312);
        *(unsigned char *)(v12 + 320) = *(unsigned char *)(v13 + 320);
        *(void *)(v12 + 328) = *(void *)(v13 + 328);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_27:
        *(unsigned char *)(v12 + 336) = *(unsigned char *)(v13 + 336);
        *(unsigned char *)(v12 + 337) = *(unsigned char *)(v13 + 337);
        int v47 = *(_DWORD *)(v13 + 338);
        *(unsigned char *)(v12 + 342) = *(unsigned char *)(v13 + 342);
        *(_DWORD *)(v12 + 338) = v47;
        *(unsigned char *)(v12 + 343) = 1;
        goto LABEL_28;
      }
      unint64_t v42 = (_OWORD *)(v12 + 304);
      long long v43 = *(_OWORD *)(v13 + 304);
      long long v44 = *(_OWORD *)(v13 + 320);
    }
    else
    {
      unint64_t v42 = (_OWORD *)(v12 + 272);
      long long v43 = *(_OWORD *)(v13 + 272);
      long long v44 = *(_OWORD *)(v13 + 288);
      long long v45 = *(_OWORD *)(v13 + 320);
      *(_OWORD *)(v12 + 304) = *(_OWORD *)(v13 + 304);
      *(_OWORD *)(v12 + 320) = v45;
    }
    *unint64_t v42 = v43;
    v42[1] = v44;
    goto LABEL_27;
  }
  *(void *)unint64_t v12 = *(void *)v13;
  *(unsigned char *)(v12 + 343) = 0;
  swift_retain();
LABEL_28:
  *(void *)((v12 + 351) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v13 + 351) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void *sub_22EDA5654(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v8 = v7 + 24;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = ((unint64_t)a1 + v9 + 16) & ~v9;
  uint64_t v11 = ((unint64_t)a2 + v9 + 16) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v10, v11);
  uint64_t v12 = *(void *)(v8 + 40) + 7;
  unint64_t v13 = (v12 + v10) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v14 = (v12 + v11) & 0xFFFFFFFFFFFFFFF8;
  if (v13 != v14)
  {
    sub_22EB0584C(v13, &qword_26861CD58);
    if (*(unsigned char *)(v14 + 343))
    {
      *(unsigned char *)unint64_t v13 = *(unsigned char *)v14;
      *(void *)(v13 + 8) = *(void *)(v14 + 8);
      unint64_t v15 = *(void *)(v14 + 40);
      swift_retain();
      if (v15 >= 6)
      {
        *(void *)(v13 + 40) = v15;
        *(void *)(v13 + 48) = *(void *)(v14 + 48);
        (**(void (***)(uint64_t, uint64_t, unint64_t))(v15 - 8))(v13 + 16, v14 + 16, v15);
      }
      else
      {
        long long v16 = *(_OWORD *)(v14 + 16);
        long long v17 = *(_OWORD *)(v14 + 32);
        *(void *)(v13 + 48) = *(void *)(v14 + 48);
        *(_OWORD *)(v13 + 16) = v16;
        *(_OWORD *)(v13 + 32) = v17;
      }
      long long v18 = (_OWORD *)(v13 + 56);
      uint64_t v19 = (long long *)(v14 + 56);
      uint64_t v20 = *(void *)(v14 + 80);
      if (v20)
      {
        *(void *)(v13 + 80) = v20;
        *(void *)(v13 + 88) = *(void *)(v14 + 88);
        (**(void (***)(_OWORD *, long long *))(v20 - 8))(v18, v19);
      }
      else
      {
        long long v21 = *v19;
        long long v22 = *(_OWORD *)(v14 + 72);
        *(void *)(v13 + 88) = *(void *)(v14 + 88);
        _OWORD *v18 = v21;
        *(_OWORD *)(v13 + 72) = v22;
      }
      long long v23 = (_OWORD *)(v13 + 96);
      uint64_t v24 = (long long *)(v14 + 96);
      uint64_t v25 = *(void *)(v14 + 120);
      if (v25)
      {
        *(void *)(v13 + 120) = v25;
        *(void *)(v13 + 128) = *(void *)(v14 + 128);
        (**(void (***)(_OWORD *, long long *))(v25 - 8))(v23, v24);
      }
      else
      {
        long long v26 = *v24;
        long long v27 = *(_OWORD *)(v14 + 112);
        *(void *)(v13 + 128) = *(void *)(v14 + 128);
        *long long v23 = v26;
        *(_OWORD *)(v13 + 112) = v27;
      }
      long long v28 = (_OWORD *)(v13 + 136);
      uint64_t v29 = (long long *)(v14 + 136);
      uint64_t v30 = *(void *)(v14 + 160);
      if (v30)
      {
        *(void *)(v13 + 160) = v30;
        *(void *)(v13 + 168) = *(void *)(v14 + 168);
        (**(void (***)(_OWORD *, long long *))(v30 - 8))(v28, v29);
      }
      else
      {
        long long v31 = *v29;
        long long v32 = *(_OWORD *)(v14 + 152);
        *(void *)(v13 + 168) = *(void *)(v14 + 168);
        *long long v28 = v31;
        *(_OWORD *)(v13 + 152) = v32;
      }
      long long v33 = (_OWORD *)(v13 + 176);
      uint64_t v34 = (long long *)(v14 + 176);
      uint64_t v35 = *(void *)(v14 + 200);
      if (v35)
      {
        *(void *)(v13 + 200) = v35;
        *(void *)(v13 + 208) = *(void *)(v14 + 208);
        (**(void (***)(_OWORD *, long long *))(v35 - 8))(v33, v34);
        *(void *)(v13 + 216) = *(void *)(v14 + 216);
      }
      else
      {
        long long v36 = *v34;
        long long v37 = *(_OWORD *)(v14 + 208);
        *(_OWORD *)(v13 + 192) = *(_OWORD *)(v14 + 192);
        *(_OWORD *)(v13 + 208) = v37;
        *long long v33 = v36;
      }
      long long v38 = (_OWORD *)(v13 + 224);
      unint64_t v39 = (long long *)(v14 + 224);
      unint64_t v40 = *(void *)(v14 + 248);
      if (v40 >= 3)
      {
        *(void *)(v13 + 248) = v40;
        *(void *)(v13 + 256) = *(void *)(v14 + 256);
        (**(void (***)(_OWORD *, long long *))(v40 - 8))(v38, v39);
      }
      else
      {
        long long v41 = *v39;
        long long v42 = *(_OWORD *)(v14 + 240);
        *(void *)(v13 + 256) = *(void *)(v14 + 256);
        *long long v38 = v41;
        *(_OWORD *)(v13 + 240) = v42;
      }
      *(unsigned char *)(v13 + 264) = *(unsigned char *)(v14 + 264);
      if (*(void *)(v14 + 280) >= 4uLL)
      {
        *(void *)(v13 + 272) = *(void *)(v14 + 272);
        *(void *)(v13 + 280) = *(void *)(v14 + 280);
        *(unsigned char *)(v13 + 288) = *(unsigned char *)(v14 + 288);
        *(void *)(v13 + 296) = *(void *)(v14 + 296);
        uint64_t v47 = *(void *)(v14 + 312);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v47)
        {
          *(void *)(v13 + 304) = *(void *)(v14 + 304);
          *(void *)(v13 + 312) = *(void *)(v14 + 312);
          *(unsigned char *)(v13 + 320) = *(unsigned char *)(v14 + 320);
          *(void *)(v13 + 328) = *(void *)(v14 + 328);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_28:
          *(unsigned char *)(v13 + 336) = *(unsigned char *)(v14 + 336);
          *(unsigned char *)(v13 + 337) = *(unsigned char *)(v14 + 337);
          int v48 = *(_DWORD *)(v14 + 338);
          *(unsigned char *)(v13 + 342) = *(unsigned char *)(v14 + 342);
          *(_DWORD *)(v13 + 338) = v48;
          *(unsigned char *)(v13 + 343) = 1;
          goto LABEL_29;
        }
        long long v43 = (_OWORD *)(v13 + 304);
        long long v44 = *(_OWORD *)(v14 + 304);
        long long v45 = *(_OWORD *)(v14 + 320);
      }
      else
      {
        long long v43 = (_OWORD *)(v13 + 272);
        long long v44 = *(_OWORD *)(v14 + 272);
        long long v45 = *(_OWORD *)(v14 + 288);
        long long v46 = *(_OWORD *)(v14 + 320);
        *(_OWORD *)(v13 + 304) = *(_OWORD *)(v14 + 304);
        *(_OWORD *)(v13 + 320) = v46;
      }
      *long long v43 = v44;
      v43[1] = v45;
      goto LABEL_28;
    }
    *(void *)unint64_t v13 = *(void *)v14;
    *(unsigned char *)(v13 + 343) = 0;
    swift_retain();
  }
LABEL_29:
  *(void *)((v13 + 351) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v14 + 351) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

_OWORD *sub_22EDA5A68(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 32;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 16) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 16) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v7, v8);
  uint64_t v9 = *(void *)(v5 + 32) + 7;
  uint64_t v10 = (void *)((v9 + v7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = (const void *)((v9 + v8) & 0xFFFFFFFFFFFFFFF8);
  memcpy(v10, v11, 0x158uLL);
  *(void *)(((unint64_t)v10 + 351) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v11 + 351) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

_OWORD *sub_22EDA5B28(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v7 = v6 + 40;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 16) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 16) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 40))(v9, v10);
  uint64_t v11 = *(void *)(v7 + 24) + 7;
  uint64_t v12 = (void *)((v11 + v9) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v13 = (const void *)((v11 + v10) & 0xFFFFFFFFFFFFFFF8);
  if (v12 != v13)
  {
    sub_22EB0584C((uint64_t)v12, &qword_26861CD58);
    memcpy(v12, v13, 0x158uLL);
  }
  *(void *)(((unint64_t)v12 + 351) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v13 + 351) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_22EDA5C10(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v5 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v8 < a2)
  {
    unint64_t v9 = ((((*(void *)(*(void *)(v4 - 8) + 64) + ((v7 + 16) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8) + 351) & 0xFFFFFFFFFFFFFFF8)
       + 8;
    unsigned int v10 = a2 - v8;
    uint64_t v11 = v9 & 0xFFFFFFF8;
    if ((v9 & 0xFFFFFFF8) != 0) {
      unsigned int v12 = 2;
    }
    else {
      unsigned int v12 = v10 + 1;
    }
    if (v12 >= 0x10000) {
      unsigned int v13 = 4;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v12 < 0x100) {
      unsigned int v13 = 1;
    }
    if (v12 >= 2) {
      uint64_t v14 = v13;
    }
    else {
      uint64_t v14 = 0;
    }
    switch(v14)
    {
      case 1:
        int v15 = *((unsigned __int8 *)a1 + v9);
        if (!v15) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v15 = *(unsigned __int16 *)((char *)a1 + v9);
        if (v15) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x22EDA5D60);
      case 4:
        int v15 = *(_DWORD *)((char *)a1 + v9);
        if (!v15) {
          break;
        }
LABEL_22:
        int v17 = v15 - 1;
        if (v11)
        {
          int v17 = 0;
          LODWORD(v11) = *a1;
        }
        return v8 + (v11 | v17) + 1;
      default:
        break;
    }
  }
  if ((v6 & 0x80000000) != 0) {
    return __swift_getEnumTagSinglePayload(((unint64_t)a1 + v7 + 16) & ~v7, v6, v4);
  }
  uint64_t v18 = *(void *)a1;
  if (*(void *)a1 >= 0xFFFFFFFFuLL) {
    LODWORD(v18) = -1;
  }
  return (v18 + 1);
}

void sub_22EDA5D74(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  size_t v11 = ((((*(void *)(*(void *)(v6 - 8) + 64) + ((v10 + 16) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8) + 351) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v9 >= a3)
  {
    int v15 = 0;
  }
  else
  {
    unsigned int v12 = a3 - v9;
    if (((((*(_DWORD *)(*(void *)(v6 - 8) + 64) + ((v10 + 16) & ~v10) + 7) & 0xFFFFFFF8) + 351) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v13 = v12 + 1;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
  }
  if (a2 > v9)
  {
    if (((((*(_DWORD *)(*(void *)(v6 - 8) + 64) + ((v10 + 16) & ~v10) + 7) & 0xFFFFFFF8) + 351) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      int v16 = a2 - v9;
    }
    else {
      int v16 = 1;
    }
    if (((((*(_DWORD *)(*(void *)(v6 - 8) + 64) + ((v10 + 16) & ~v10) + 7) & 0xFFFFFFF8) + 351) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      int v17 = ~v9 + a2;
      bzero(a1, v11);
      *(_DWORD *)a1 = v17;
    }
    switch(v15)
    {
      case 1:
        a1[v11] = v16;
        return;
      case 2:
        *(_WORD *)&a1[v11] = v16;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v11] = v16;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 2:
      *(_WORD *)&a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x22EDA5F5CLL);
    case 4:
      *(_DWORD *)&a1[v11] = 0;
      goto LABEL_31;
    default:
LABEL_31:
      if (a2)
      {
LABEL_32:
        if ((v8 & 0x80000000) != 0)
        {
          unint64_t v19 = (unint64_t)&a1[v10 + 16] & ~v10;
          __swift_storeEnumTagSinglePayload(v19, a2, v8, v6);
        }
        else
        {
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v18 = a2 ^ 0x80000000;
            *((void *)a1 + 1) = 0;
          }
          else
          {
            uint64_t v18 = (a2 - 1);
          }
          *(void *)a1 = v18;
        }
      }
      return;
  }
}

uint64_t sub_22EDA5F84()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_22EDA605C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  int v8 = *(_DWORD *)(v7 + 80);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v5 + 64) + v8;
  uint64_t v11 = *(void *)(v7 + 64) + 7;
  unsigned int v12 = v8 | *(_DWORD *)(v5 + 80) & 0xF8;
  int v13 = (*(_DWORD *)(v5 + 80) | v8) & 0x100000;
  if (v12 > 7 || v13 != 0 || ((v11 + (v10 & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 344 > 0x18)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + (((v12 | 7) + 16) & ~(unint64_t)(v12 | 7)));
  }
  else
  {
    uint64_t v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v18 = ((unint64_t)a2 + v10) & v17;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v10) & v17, v18, v6);
    unint64_t v19 = (v11 + (((unint64_t)v4 + v10) & v17)) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v20 = (v11 + v18) & 0xFFFFFFFFFFFFFFF8;
    if (*(unsigned char *)(v20 + 343))
    {
      *(unsigned char *)unint64_t v19 = *(unsigned char *)v20;
      *(void *)(v19 + 8) = *(void *)(v20 + 8);
      unint64_t v21 = *(void *)(v20 + 40);
      swift_retain();
      if (v21 >= 6)
      {
        *(void *)(v19 + 40) = v21;
        *(void *)(v19 + 48) = *(void *)(v20 + 48);
        (**(void (***)(uint64_t, uint64_t, unint64_t))(v21 - 8))(v19 + 16, v20 + 16, v21);
      }
      else
      {
        long long v22 = *(_OWORD *)(v20 + 16);
        long long v23 = *(_OWORD *)(v20 + 32);
        *(void *)(v19 + 48) = *(void *)(v20 + 48);
        *(_OWORD *)(v19 + 16) = v22;
        *(_OWORD *)(v19 + 32) = v23;
      }
      uint64_t v24 = (_OWORD *)(v19 + 56);
      uint64_t v25 = (long long *)(v20 + 56);
      uint64_t v26 = *(void *)(v20 + 80);
      if (v26)
      {
        *(void *)(v19 + 80) = v26;
        *(void *)(v19 + 88) = *(void *)(v20 + 88);
        (**(void (***)(_OWORD *, long long *))(v26 - 8))(v24, v25);
      }
      else
      {
        long long v27 = *v25;
        long long v28 = *(_OWORD *)(v20 + 72);
        *(void *)(v19 + 88) = *(void *)(v20 + 88);
        _OWORD *v24 = v27;
        *(_OWORD *)(v19 + 72) = v28;
      }
      uint64_t v29 = (_OWORD *)(v19 + 96);
      uint64_t v30 = (long long *)(v20 + 96);
      uint64_t v31 = *(void *)(v20 + 120);
      if (v31)
      {
        *(void *)(v19 + 120) = v31;
        *(void *)(v19 + 128) = *(void *)(v20 + 128);
        (**(void (***)(_OWORD *, long long *))(v31 - 8))(v29, v30);
      }
      else
      {
        long long v32 = *v30;
        long long v33 = *(_OWORD *)(v20 + 112);
        *(void *)(v19 + 128) = *(void *)(v20 + 128);
        *uint64_t v29 = v32;
        *(_OWORD *)(v19 + 112) = v33;
      }
      uint64_t v34 = (_OWORD *)(v19 + 136);
      uint64_t v35 = (long long *)(v20 + 136);
      uint64_t v36 = *(void *)(v20 + 160);
      if (v36)
      {
        *(void *)(v19 + 160) = v36;
        *(void *)(v19 + 168) = *(void *)(v20 + 168);
        (**(void (***)(_OWORD *, long long *))(v36 - 8))(v34, v35);
      }
      else
      {
        long long v37 = *v35;
        long long v38 = *(_OWORD *)(v20 + 152);
        *(void *)(v19 + 168) = *(void *)(v20 + 168);
        *uint64_t v34 = v37;
        *(_OWORD *)(v19 + 152) = v38;
      }
      unint64_t v39 = (_OWORD *)(v19 + 176);
      unint64_t v40 = (long long *)(v20 + 176);
      uint64_t v41 = *(void *)(v20 + 200);
      if (v41)
      {
        *(void *)(v19 + 200) = v41;
        *(void *)(v19 + 208) = *(void *)(v20 + 208);
        (**(void (***)(_OWORD *, long long *))(v41 - 8))(v39, v40);
        *(void *)(v19 + 216) = *(void *)(v20 + 216);
      }
      else
      {
        long long v42 = *v40;
        long long v43 = *(_OWORD *)(v20 + 208);
        *(_OWORD *)(v19 + 192) = *(_OWORD *)(v20 + 192);
        *(_OWORD *)(v19 + 208) = v43;
        *unint64_t v39 = v42;
      }
      long long v44 = (_OWORD *)(v19 + 224);
      long long v45 = (long long *)(v20 + 224);
      unint64_t v46 = *(void *)(v20 + 248);
      if (v46 >= 3)
      {
        *(void *)(v19 + 248) = v46;
        *(void *)(v19 + 256) = *(void *)(v20 + 256);
        (**(void (***)(_OWORD *, long long *))(v46 - 8))(v44, v45);
      }
      else
      {
        long long v47 = *v45;
        long long v48 = *(_OWORD *)(v20 + 240);
        *(void *)(v19 + 256) = *(void *)(v20 + 256);
        *long long v44 = v47;
        *(_OWORD *)(v19 + 240) = v48;
      }
      *(unsigned char *)(v19 + 264) = *(unsigned char *)(v20 + 264);
      if (*(void *)(v20 + 280) >= 4uLL)
      {
        *(void *)(v19 + 272) = *(void *)(v20 + 272);
        *(void *)(v19 + 280) = *(void *)(v20 + 280);
        *(unsigned char *)(v19 + 288) = *(unsigned char *)(v20 + 288);
        *(void *)(v19 + 296) = *(void *)(v20 + 296);
        uint64_t v53 = *(void *)(v20 + 312);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v53)
        {
          *(void *)(v19 + 304) = *(void *)(v20 + 304);
          *(void *)(v19 + 312) = *(void *)(v20 + 312);
          *(unsigned char *)(v19 + 320) = *(unsigned char *)(v20 + 320);
          *(void *)(v19 + 328) = *(void *)(v20 + 328);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_37:
          *(unsigned char *)(v19 + 336) = *(unsigned char *)(v20 + 336);
          *(unsigned char *)(v19 + 337) = *(unsigned char *)(v20 + 337);
          int v54 = *(_DWORD *)(v20 + 338);
          *(unsigned char *)(v19 + 342) = *(unsigned char *)(v20 + 342);
          *(_DWORD *)(v19 + 338) = v54;
          *(unsigned char *)(v19 + 343) = 1;
          return v4;
        }
        uint64_t v49 = (_OWORD *)(v19 + 304);
        long long v50 = *(_OWORD *)(v20 + 304);
        long long v51 = *(_OWORD *)(v20 + 320);
      }
      else
      {
        uint64_t v49 = (_OWORD *)(v19 + 272);
        long long v50 = *(_OWORD *)(v20 + 272);
        long long v51 = *(_OWORD *)(v20 + 288);
        long long v52 = *(_OWORD *)(v20 + 320);
        *(_OWORD *)(v19 + 304) = *(_OWORD *)(v20 + 304);
        *(_OWORD *)(v19 + 320) = v52;
      }
      *uint64_t v49 = v50;
      v49[1] = v51;
      goto LABEL_37;
    }
    *(void *)unint64_t v19 = *(void *)v20;
    *(unsigned char *)(v19 + 343) = 0;
  }
  swift_retain();
  return v4;
}

unint64_t sub_22EDA6514(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(v4 + 56) + a1;
  uint64_t v6 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v7 = v6 + 8;
  unint64_t v8 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v8);
  unint64_t v9 = (*(void *)(v7 + 56) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  if (*(unsigned char *)(v9 + 343))
  {
    swift_release();
    if (*(void *)(v9 + 40) >= 6uLL) {
      __swift_destroy_boxed_opaque_existential_1(v9 + 16);
    }
    if (*(void *)(v9 + 80)) {
      __swift_destroy_boxed_opaque_existential_1(v9 + 56);
    }
    if (*(void *)(v9 + 120)) {
      __swift_destroy_boxed_opaque_existential_1(v9 + 96);
    }
    if (*(void *)(v9 + 160)) {
      __swift_destroy_boxed_opaque_existential_1(v9 + 136);
    }
    if (*(void *)(v9 + 200)) {
      __swift_destroy_boxed_opaque_existential_1(v9 + 176);
    }
    if (*(void *)(v9 + 248) >= 3uLL) {
      __swift_destroy_boxed_opaque_existential_1(v9 + 224);
    }
    unint64_t result = *(void *)(v9 + 280);
    if (result >= 4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t result = *(void *)(v9 + 312);
      if (result)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
  }
  else
  {
    return swift_release();
  }
  return result;
}

uint64_t sub_22EDA66A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 48);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 16;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 48) + 7;
  unint64_t v15 = (v14 + v12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v14 + v13) & 0xFFFFFFFFFFFFFFF8;
  if (*(unsigned char *)(v16 + 343))
  {
    *(unsigned char *)unint64_t v15 = *(unsigned char *)v16;
    *(void *)(v15 + 8) = *(void *)(v16 + 8);
    unint64_t v17 = *(void *)(v16 + 40);
    swift_retain();
    if (v17 >= 6)
    {
      *(void *)(v15 + 40) = v17;
      *(void *)(v15 + 48) = *(void *)(v16 + 48);
      (**(void (***)(uint64_t, uint64_t, unint64_t))(v17 - 8))(v15 + 16, v16 + 16, v17);
    }
    else
    {
      long long v18 = *(_OWORD *)(v16 + 16);
      long long v19 = *(_OWORD *)(v16 + 32);
      *(void *)(v15 + 48) = *(void *)(v16 + 48);
      *(_OWORD *)(v15 + 16) = v18;
      *(_OWORD *)(v15 + 32) = v19;
    }
    unint64_t v20 = (_OWORD *)(v15 + 56);
    unint64_t v21 = (long long *)(v16 + 56);
    uint64_t v22 = *(void *)(v16 + 80);
    if (v22)
    {
      *(void *)(v15 + 80) = v22;
      *(void *)(v15 + 88) = *(void *)(v16 + 88);
      (**(void (***)(_OWORD *, long long *))(v22 - 8))(v20, v21);
    }
    else
    {
      long long v23 = *v21;
      long long v24 = *(_OWORD *)(v16 + 72);
      *(void *)(v15 + 88) = *(void *)(v16 + 88);
      *unint64_t v20 = v23;
      *(_OWORD *)(v15 + 72) = v24;
    }
    uint64_t v25 = (_OWORD *)(v15 + 96);
    uint64_t v26 = (long long *)(v16 + 96);
    uint64_t v27 = *(void *)(v16 + 120);
    if (v27)
    {
      *(void *)(v15 + 120) = v27;
      *(void *)(v15 + 128) = *(void *)(v16 + 128);
      (**(void (***)(_OWORD *, long long *))(v27 - 8))(v25, v26);
    }
    else
    {
      long long v28 = *v26;
      long long v29 = *(_OWORD *)(v16 + 112);
      *(void *)(v15 + 128) = *(void *)(v16 + 128);
      _OWORD *v25 = v28;
      *(_OWORD *)(v15 + 112) = v29;
    }
    uint64_t v30 = (_OWORD *)(v15 + 136);
    uint64_t v31 = (long long *)(v16 + 136);
    uint64_t v32 = *(void *)(v16 + 160);
    if (v32)
    {
      *(void *)(v15 + 160) = v32;
      *(void *)(v15 + 168) = *(void *)(v16 + 168);
      (**(void (***)(_OWORD *, long long *))(v32 - 8))(v30, v31);
    }
    else
    {
      long long v33 = *v31;
      long long v34 = *(_OWORD *)(v16 + 152);
      *(void *)(v15 + 168) = *(void *)(v16 + 168);
      _OWORD *v30 = v33;
      *(_OWORD *)(v15 + 152) = v34;
    }
    uint64_t v35 = (_OWORD *)(v15 + 176);
    uint64_t v36 = (long long *)(v16 + 176);
    uint64_t v37 = *(void *)(v16 + 200);
    if (v37)
    {
      *(void *)(v15 + 200) = v37;
      *(void *)(v15 + 208) = *(void *)(v16 + 208);
      (**(void (***)(_OWORD *, long long *))(v37 - 8))(v35, v36);
      *(void *)(v15 + 216) = *(void *)(v16 + 216);
    }
    else
    {
      long long v38 = *v36;
      long long v39 = *(_OWORD *)(v16 + 208);
      *(_OWORD *)(v15 + 192) = *(_OWORD *)(v16 + 192);
      *(_OWORD *)(v15 + 208) = v39;
      _OWORD *v35 = v38;
    }
    unint64_t v40 = (_OWORD *)(v15 + 224);
    uint64_t v41 = (long long *)(v16 + 224);
    unint64_t v42 = *(void *)(v16 + 248);
    if (v42 >= 3)
    {
      *(void *)(v15 + 248) = v42;
      *(void *)(v15 + 256) = *(void *)(v16 + 256);
      (**(void (***)(_OWORD *, long long *))(v42 - 8))(v40, v41);
    }
    else
    {
      long long v43 = *v41;
      long long v44 = *(_OWORD *)(v16 + 240);
      *(void *)(v15 + 256) = *(void *)(v16 + 256);
      _OWORD *v40 = v43;
      *(_OWORD *)(v15 + 240) = v44;
    }
    *(unsigned char *)(v15 + 264) = *(unsigned char *)(v16 + 264);
    if (*(void *)(v16 + 280) >= 4uLL)
    {
      *(void *)(v15 + 272) = *(void *)(v16 + 272);
      *(void *)(v15 + 280) = *(void *)(v16 + 280);
      *(unsigned char *)(v15 + 288) = *(unsigned char *)(v16 + 288);
      *(void *)(v15 + 296) = *(void *)(v16 + 296);
      uint64_t v49 = *(void *)(v16 + 312);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v49)
      {
        *(void *)(v15 + 304) = *(void *)(v16 + 304);
        *(void *)(v15 + 312) = *(void *)(v16 + 312);
        *(unsigned char *)(v15 + 320) = *(unsigned char *)(v16 + 320);
        *(void *)(v15 + 328) = *(void *)(v16 + 328);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_27:
        *(unsigned char *)(v15 + 336) = *(unsigned char *)(v16 + 336);
        *(unsigned char *)(v15 + 337) = *(unsigned char *)(v16 + 337);
        int v50 = *(_DWORD *)(v16 + 338);
        *(unsigned char *)(v15 + 342) = *(unsigned char *)(v16 + 342);
        *(_DWORD *)(v15 + 338) = v50;
        *(unsigned char *)(v15 + 343) = 1;
        return a1;
      }
      long long v45 = (_OWORD *)(v15 + 304);
      long long v46 = *(_OWORD *)(v16 + 304);
      long long v47 = *(_OWORD *)(v16 + 320);
    }
    else
    {
      long long v45 = (_OWORD *)(v15 + 272);
      long long v46 = *(_OWORD *)(v16 + 272);
      long long v47 = *(_OWORD *)(v16 + 288);
      long long v48 = *(_OWORD *)(v16 + 320);
      *(_OWORD *)(v15 + 304) = *(_OWORD *)(v16 + 304);
      *(_OWORD *)(v15 + 320) = v48;
    }
    *long long v45 = v46;
    v45[1] = v47;
    goto LABEL_27;
  }
  *(void *)unint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 343) = 0;
  swift_retain();
  return a1;
}

uint64_t sub_22EDA6AA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 40);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 40) + 7;
  unint64_t v15 = (v14 + v12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v14 + v13) & 0xFFFFFFFFFFFFFFF8;
  if (v15 != v16)
  {
    sub_22EB0584C(v15, &qword_26861CD58);
    if (*(unsigned char *)(v16 + 343))
    {
      *(unsigned char *)unint64_t v15 = *(unsigned char *)v16;
      *(void *)(v15 + 8) = *(void *)(v16 + 8);
      unint64_t v17 = *(void *)(v16 + 40);
      swift_retain();
      if (v17 >= 6)
      {
        *(void *)(v15 + 40) = v17;
        *(void *)(v15 + 48) = *(void *)(v16 + 48);
        (**(void (***)(uint64_t, uint64_t, unint64_t))(v17 - 8))(v15 + 16, v16 + 16, v17);
      }
      else
      {
        long long v18 = *(_OWORD *)(v16 + 16);
        long long v19 = *(_OWORD *)(v16 + 32);
        *(void *)(v15 + 48) = *(void *)(v16 + 48);
        *(_OWORD *)(v15 + 16) = v18;
        *(_OWORD *)(v15 + 32) = v19;
      }
      unint64_t v20 = (_OWORD *)(v15 + 56);
      unint64_t v21 = (long long *)(v16 + 56);
      uint64_t v22 = *(void *)(v16 + 80);
      if (v22)
      {
        *(void *)(v15 + 80) = v22;
        *(void *)(v15 + 88) = *(void *)(v16 + 88);
        (**(void (***)(_OWORD *, long long *))(v22 - 8))(v20, v21);
      }
      else
      {
        long long v23 = *v21;
        long long v24 = *(_OWORD *)(v16 + 72);
        *(void *)(v15 + 88) = *(void *)(v16 + 88);
        *unint64_t v20 = v23;
        *(_OWORD *)(v15 + 72) = v24;
      }
      uint64_t v25 = (_OWORD *)(v15 + 96);
      uint64_t v26 = (long long *)(v16 + 96);
      uint64_t v27 = *(void *)(v16 + 120);
      if (v27)
      {
        *(void *)(v15 + 120) = v27;
        *(void *)(v15 + 128) = *(void *)(v16 + 128);
        (**(void (***)(_OWORD *, long long *))(v27 - 8))(v25, v26);
      }
      else
      {
        long long v28 = *v26;
        long long v29 = *(_OWORD *)(v16 + 112);
        *(void *)(v15 + 128) = *(void *)(v16 + 128);
        _OWORD *v25 = v28;
        *(_OWORD *)(v15 + 112) = v29;
      }
      uint64_t v30 = (_OWORD *)(v15 + 136);
      uint64_t v31 = (long long *)(v16 + 136);
      uint64_t v32 = *(void *)(v16 + 160);
      if (v32)
      {
        *(void *)(v15 + 160) = v32;
        *(void *)(v15 + 168) = *(void *)(v16 + 168);
        (**(void (***)(_OWORD *, long long *))(v32 - 8))(v30, v31);
      }
      else
      {
        long long v33 = *v31;
        long long v34 = *(_OWORD *)(v16 + 152);
        *(void *)(v15 + 168) = *(void *)(v16 + 168);
        _OWORD *v30 = v33;
        *(_OWORD *)(v15 + 152) = v34;
      }
      uint64_t v35 = (_OWORD *)(v15 + 176);
      uint64_t v36 = (long long *)(v16 + 176);
      uint64_t v37 = *(void *)(v16 + 200);
      if (v37)
      {
        *(void *)(v15 + 200) = v37;
        *(void *)(v15 + 208) = *(void *)(v16 + 208);
        (**(void (***)(_OWORD *, long long *))(v37 - 8))(v35, v36);
        *(void *)(v15 + 216) = *(void *)(v16 + 216);
      }
      else
      {
        long long v38 = *v36;
        long long v39 = *(_OWORD *)(v16 + 208);
        *(_OWORD *)(v15 + 192) = *(_OWORD *)(v16 + 192);
        *(_OWORD *)(v15 + 208) = v39;
        _OWORD *v35 = v38;
      }
      unint64_t v40 = (_OWORD *)(v15 + 224);
      uint64_t v41 = (long long *)(v16 + 224);
      unint64_t v42 = *(void *)(v16 + 248);
      if (v42 >= 3)
      {
        *(void *)(v15 + 248) = v42;
        *(void *)(v15 + 256) = *(void *)(v16 + 256);
        (**(void (***)(_OWORD *, long long *))(v42 - 8))(v40, v41);
      }
      else
      {
        long long v43 = *v41;
        long long v44 = *(_OWORD *)(v16 + 240);
        *(void *)(v15 + 256) = *(void *)(v16 + 256);
        _OWORD *v40 = v43;
        *(_OWORD *)(v15 + 240) = v44;
      }
      *(unsigned char *)(v15 + 264) = *(unsigned char *)(v16 + 264);
      if (*(void *)(v16 + 280) >= 4uLL)
      {
        *(void *)(v15 + 272) = *(void *)(v16 + 272);
        *(void *)(v15 + 280) = *(void *)(v16 + 280);
        *(unsigned char *)(v15 + 288) = *(unsigned char *)(v16 + 288);
        *(void *)(v15 + 296) = *(void *)(v16 + 296);
        uint64_t v49 = *(void *)(v16 + 312);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v49)
        {
          *(void *)(v15 + 304) = *(void *)(v16 + 304);
          *(void *)(v15 + 312) = *(void *)(v16 + 312);
          *(unsigned char *)(v15 + 320) = *(unsigned char *)(v16 + 320);
          *(void *)(v15 + 328) = *(void *)(v16 + 328);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_28:
          *(unsigned char *)(v15 + 336) = *(unsigned char *)(v16 + 336);
          *(unsigned char *)(v15 + 337) = *(unsigned char *)(v16 + 337);
          int v50 = *(_DWORD *)(v16 + 338);
          *(unsigned char *)(v15 + 342) = *(unsigned char *)(v16 + 342);
          *(_DWORD *)(v15 + 338) = v50;
          *(unsigned char *)(v15 + 343) = 1;
          return a1;
        }
        long long v45 = (_OWORD *)(v15 + 304);
        long long v46 = *(_OWORD *)(v16 + 304);
        long long v47 = *(_OWORD *)(v16 + 320);
      }
      else
      {
        long long v45 = (_OWORD *)(v15 + 272);
        long long v46 = *(_OWORD *)(v16 + 272);
        long long v47 = *(_OWORD *)(v16 + 288);
        long long v48 = *(_OWORD *)(v16 + 320);
        *(_OWORD *)(v15 + 304) = *(_OWORD *)(v16 + 304);
        *(_OWORD *)(v15 + 320) = v48;
      }
      *long long v45 = v46;
      v45[1] = v47;
      goto LABEL_28;
    }
    *(void *)unint64_t v15 = *(void *)v16;
    *(unsigned char *)(v15 + 343) = 0;
    swift_retain();
  }
  return a1;
}

uint64_t sub_22EDA6EB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v12, v13);
  memcpy((void *)((*(void *)(v9 + 32) + 7 + v12) & 0xFFFFFFFFFFFFFFF8), (const void *)((*(void *)(v9 + 32) + 7 + v13) & 0xFFFFFFFFFFFFFFF8), 0x158uLL);
  return a1;
}

uint64_t sub_22EDA6F84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 24);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 24) + 7;
  unint64_t v15 = (void *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v16 = (const void *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  if (v15 != v16)
  {
    sub_22EB0584C((uint64_t)v15, &qword_26861CD58);
    memcpy(v15, v16, 0x158uLL);
  }
  return a1;
}

uint64_t sub_22EDA7074(int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(a3 + 24);
  unsigned int v6 = *(_DWORD *)(*(void *)(v5 - 8) + 84);
  uint64_t v7 = *(void *)(v4 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= v6) {
    unsigned int v9 = *(_DWORD *)(*(void *)(v5 - 8) + 84);
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  if (v9 <= 0xFE) {
    unsigned int v11 = 254;
  }
  else {
    unsigned int v11 = v9;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v12 = *(void *)(*(void *)(v5 - 8) + 64) + v10;
  uint64_t v13 = *(void *)(*(void *)(v4 - 8) + 64) + 7;
  if (v11 < a2)
  {
    unint64_t v14 = ((v13 + (v12 & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 344;
    unsigned int v15 = a2 - v11;
    uint64_t v16 = v14 & 0xFFFFFFF8;
    if ((v14 & 0xFFFFFFF8) != 0) {
      unsigned int v17 = 2;
    }
    else {
      unsigned int v17 = v15 + 1;
    }
    if (v17 >= 0x10000) {
      unsigned int v18 = 4;
    }
    else {
      unsigned int v18 = 2;
    }
    if (v17 < 0x100) {
      unsigned int v18 = 1;
    }
    if (v17 >= 2) {
      uint64_t v19 = v18;
    }
    else {
      uint64_t v19 = 0;
    }
    switch(v19)
    {
      case 1:
        int v20 = *((unsigned __int8 *)a1 + v14);
        if (!v20) {
          break;
        }
        goto LABEL_25;
      case 2:
        int v20 = *(unsigned __int16 *)((char *)a1 + v14);
        if (v20) {
          goto LABEL_25;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x22EDA722CLL);
      case 4:
        int v20 = *(int *)((char *)a1 + v14);
        if (!v20) {
          break;
        }
LABEL_25:
        int v22 = v20 - 1;
        if (v16)
        {
          int v22 = 0;
          int v23 = *a1;
        }
        else
        {
          int v23 = 0;
        }
        return v11 + (v23 | v22) + 1;
      default:
        break;
    }
  }
  if (v6 == v11)
  {
    uint64_t v8 = *(unsigned int *)(*(void *)(v5 - 8) + 84);
    uint64_t v4 = v5;
    return __swift_getEnumTagSinglePayload((uint64_t)a1, v8, v4);
  }
  a1 = (int *)(((unint64_t)a1 + v12) & ~v10);
  if (v8 == v11) {
    return __swift_getEnumTagSinglePayload((uint64_t)a1, v8, v4);
  }
  unsigned int v24 = *(unsigned __int8 *)((((unint64_t)a1 + v13) & 0xFFFFFFFFFFFFFFF8) + 343);
  if (v24 > 1) {
    return (v24 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

double sub_22EDA7240(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6 = a1;
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(unsigned int *)(*(void *)(v7 - 8) + 84);
  uint64_t v9 = *(void *)(a4 + 24);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v8) {
    unsigned int v12 = *(_DWORD *)(*(void *)(v7 - 8) + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v10 + 84);
  }
  if (v12 <= 0xFE) {
    unsigned int v12 = 254;
  }
  uint64_t v13 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = *(void *)(*(void *)(v7 - 8) + 64) + v13;
  uint64_t v15 = v14 & ~v13;
  uint64_t v16 = *(void *)(*(void *)(v9 - 8) + 64) + 7;
  unint64_t v17 = ((v16 + v15) & 0xFFFFFFFFFFFFFFF8) + 344;
  if (v12 >= a3)
  {
    int v21 = 0;
  }
  else
  {
    unsigned int v18 = a3 - v12;
    if (((v16 + v15) & 0xFFFFFFF8) == 0xFFFFFEA8) {
      unsigned int v19 = v18 + 1;
    }
    else {
      unsigned int v19 = 2;
    }
    if (v19 >= 0x10000) {
      int v20 = 4;
    }
    else {
      int v20 = 2;
    }
    if (v19 < 0x100) {
      int v20 = 1;
    }
    if (v19 >= 2) {
      int v21 = v20;
    }
    else {
      int v21 = 0;
    }
  }
  if (a2 > v12)
  {
    if (((v16 + v15) & 0xFFFFFFF8) == 0xFFFFFEA8) {
      int v22 = a2 - v12;
    }
    else {
      int v22 = 1;
    }
    if (((v16 + v15) & 0xFFFFFFF8) != 0xFFFFFEA8)
    {
      int v23 = ~v12 + a2;
      bzero(a1, ((v16 + v15) & 0xFFFFFFFFFFFFFFF8) + 344);
      *unsigned int v6 = v23;
    }
    switch(v21)
    {
      case 1:
        *((unsigned char *)v6 + v17) = v22;
        return result;
      case 2:
        *(_WORD *)((char *)v6 + v17) = v22;
        return result;
      case 3:
        goto LABEL_46;
      case 4:
        *(_DWORD *)((char *)v6 + v17) = v22;
        return result;
      default:
        return result;
    }
  }
  switch(v21)
  {
    case 1:
      a1[v17] = 0;
      if (!a2) {
        return result;
      }
      goto LABEL_34;
    case 2:
      *(_WORD *)&a1[v17] = 0;
      if (!a2) {
        return result;
      }
      goto LABEL_34;
    case 3:
LABEL_46:
      __break(1u);
      JUMPOUT(0x22EDA74F8);
    case 4:
      *(_DWORD *)&a1[v17] = 0;
      goto LABEL_33;
    default:
LABEL_33:
      if (!a2) {
        return result;
      }
LABEL_34:
      if (v8 == v12) {
        goto LABEL_37;
      }
      a1 = (char *)((unint64_t)&a1[v14] & ~v13);
      if (v11 == v12)
      {
        uint64_t v8 = v11;
        uint64_t v7 = v9;
LABEL_37:
        __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v8, v7);
      }
      else
      {
        unint64_t v25 = (unint64_t)&a1[v16] & 0xFFFFFFFFFFFFFFF8;
        if (a2 > 0xFE)
        {
          double result = 0.0;
          *(_OWORD *)(v25 + 248) = 0u;
          *(_OWORD *)(v25 + 232) = 0u;
          *(_OWORD *)(v25 + 216) = 0u;
          *(_OWORD *)(v25 + 200) = 0u;
          *(_OWORD *)(v25 + 184) = 0u;
          *(_OWORD *)(v25 + 168) = 0u;
          *(_OWORD *)(v25 + 152) = 0u;
          *(_OWORD *)(v25 + 136) = 0u;
          *(_OWORD *)(v25 + 120) = 0u;
          *(_OWORD *)(v25 + 104) = 0u;
          *(_OWORD *)(v25 + 88) = 0u;
          *(_OWORD *)(v25 + 72) = 0u;
          *(_OWORD *)(v25 + 56) = 0u;
          *(_OWORD *)(v25 + 40) = 0u;
          *(_OWORD *)(v25 + 24) = 0u;
          *(_OWORD *)(v25 + 8) = 0u;
          *(_OWORD *)(v25 + 328) = 0u;
          *(_OWORD *)(v25 + 312) = 0u;
          *(_OWORD *)(v25 + 296) = 0u;
          *(_OWORD *)(v25 + 280) = 0u;
          *(_OWORD *)(v25 + 264) = 0u;
          *(void *)unint64_t v25 = (a2 - 255);
        }
        else
        {
          *(unsigned char *)(v25 + 343) = -(char)a2;
        }
      }
      return result;
  }
}

uint64_t sub_22EDA7520(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v7 = *(unsigned int *)(*(void *)(v5 - 8) + 84);
  uint64_t v8 = *(void *)(v6 - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  if (v9 <= v7) {
    unsigned int v11 = *(_DWORD *)(*(void *)(v5 - 8) + 84);
  }
  else {
    unsigned int v11 = *(_DWORD *)(v8 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v12 = *(void *)(*(void *)(v5 - 8) + 64) + v10;
  unsigned int v13 = a2 - v11;
  if (a2 <= v11) {
    goto LABEL_24;
  }
  uint64_t v14 = (v12 & ~v10) + *(void *)(*(void *)(v6 - 8) + 64);
  char v15 = 8 * v14;
  if (v14 <= 3)
  {
    unsigned int v17 = ((v13 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v17))
    {
      int v16 = *(_DWORD *)((char *)a1 + v14);
      if (!v16) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 > 0xFF)
    {
      int v16 = *(unsigned __int16 *)((char *)a1 + v14);
      if (!*(unsigned __int16 *)((char *)a1 + v14)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 < 2)
    {
LABEL_24:
      if (v11)
      {
        if (v7 < v9)
        {
          a1 = (unsigned __int16 *)(((unint64_t)a1 + v12) & ~v10);
          uint64_t v7 = *(unsigned int *)(v8 + 84);
          uint64_t v5 = v6;
        }
        return __swift_getEnumTagSinglePayload((uint64_t)a1, v7, v5);
      }
      return 0;
    }
  }
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_24;
  }
LABEL_14:
  int v18 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v18 = 0;
  }
  if (v14)
  {
    if (v14 <= 3) {
      int v19 = v14;
    }
    else {
      int v19 = 4;
    }
    switch(v19)
    {
      case 2:
        int v20 = *a1;
        break;
      case 3:
        int v20 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v20 = *(_DWORD *)a1;
        break;
      default:
        int v20 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v20 = 0;
  }
  return v11 + (v20 | v18) + 1;
}

void sub_22EDA76F8(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = a1;
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(unsigned int *)(*(void *)(v7 - 8) + 84);
  uint64_t v9 = *(void *)(a4 + 24);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v8) {
    unsigned int v12 = *(_DWORD *)(*(void *)(v7 - 8) + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v13 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = *(void *)(*(void *)(v7 - 8) + 64) + v13;
  size_t v15 = (v14 & ~v13) + *(void *)(*(void *)(v9 - 8) + 64);
  char v16 = 8 * v15;
  BOOL v17 = a3 >= v12;
  unsigned int v18 = a3 - v12;
  if (v18 != 0 && v17)
  {
    if (v15 <= 3)
    {
      unsigned int v22 = ((v18 + ~(-1 << v16)) >> v16) + 1;
      if (HIWORD(v22))
      {
        int v19 = 4;
      }
      else if (v22 >= 0x100)
      {
        int v19 = 2;
      }
      else
      {
        int v19 = v22 > 1;
      }
    }
    else
    {
      int v19 = 1;
    }
  }
  else
  {
    int v19 = 0;
  }
  if (v12 < a2)
  {
    unsigned int v20 = ~v12 + a2;
    if (v15 < 4)
    {
      int v21 = (v20 >> v16) + 1;
      if (v15)
      {
        int v23 = v20 & ~(-1 << v16);
        bzero(a1, v15);
        if (v15 == 3)
        {
          *(_WORD *)uint64_t v6 = v23;
          v6[2] = BYTE2(v23);
        }
        else if (v15 == 2)
        {
          *(_WORD *)uint64_t v6 = v23;
        }
        else
        {
          *uint64_t v6 = v23;
        }
      }
    }
    else
    {
      bzero(a1, v15);
      *(_DWORD *)uint64_t v6 = v20;
      int v21 = 1;
    }
    switch(v19)
    {
      case 1:
        v6[v15] = v21;
        return;
      case 2:
        *(_WORD *)&v6[v15] = v21;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&v6[v15] = v21;
        return;
      default:
        return;
    }
  }
  switch(v19)
  {
    case 1:
      a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x22EDA7984);
    case 4:
      *(_DWORD *)&a1[v15] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v8 < v11)
        {
          a1 = (char *)((unint64_t)&a1[v14] & ~v13);
          uint64_t v8 = v11;
          uint64_t v7 = v9;
        }
        __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v8, v7);
      }
      return;
  }
}

uint64_t sub_22EDA79AC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_22EDA7A44(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  unint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 0x10uLL) {
    uint64_t v5 = 16;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *(void *)a2;
    *unint64_t v3 = *(void *)a2;
    unint64_t v3 = (void *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
  }
  else
  {
    unsigned int v9 = a2[v5];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v5 <= 3) {
        uint64_t v11 = v5;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_19;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_19;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_19:
          int v13 = (v12 | (v10 << (8 * v5))) + 2;
          unsigned int v9 = v12 + 2;
          if (v5 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 != 1)
    {
      (*(void (**)(void *))(v4 + 16))(a1);
      *((unsigned char *)v3 + v5) = 0;
      return v3;
    }
    uint64_t v14 = *((void *)a2 + 1);
    *unint64_t v3 = *(void *)a2;
    v3[1] = v14;
    *((unsigned char *)v3 + v5) = 1;
  }
  swift_retain();
  return v3;
}

uint64_t sub_22EDA7BBC(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 0x10) {
    unint64_t v2 = 16;
  }
  unsigned int v3 = a1[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 1) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
}

void *sub_22EDA7CBC(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    uint64_t v4 = 16;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    uint64_t v10 = *((void *)a2 + 1);
    *a1 = *(void *)a2;
    a1[1] = v10;
    swift_retain();
    char v11 = 1;
  }
  else
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1);
    char v11 = 0;
  }
  *((unsigned char *)a1 + v4) = v11;
  return a1;
}

unsigned __int8 *sub_22EDA7DF8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      swift_release();
    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      uint64_t v18 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v18;
      a1[v7] = 1;
      swift_retain();
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      a1[v7] = 0;
    }
  }
  return a1;
}

_OWORD *sub_22EDA8014(_OWORD *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    uint64_t v4 = 16;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    *a1 = *(_OWORD *)a2;
    char v10 = 1;
  }
  else
  {
    (*(void (**)(_OWORD *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
    char v10 = 0;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_22EDA814C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      swift_release();
    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      char v18 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v18 = 0;
    }
    a1[v7] = v18;
  }
  return a1;
}

uint64_t sub_22EDA8364(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 16;
  if (*(void *)(v3 + 64) > 0x10uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 254) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 2) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 255;
}

void sub_22EDA8498(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 0x10) {
    unint64_t v5 = 16;
  }
  size_t v6 = v5 + 1;
  char v7 = 8 * (v5 + 1);
  if (a3 < 0xFF)
  {
    int v8 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v11 = ((a3 + ~(-1 << v7) - 254) >> v7) + 1;
    if (HIWORD(v11))
    {
      int v8 = 4;
    }
    else if (v11 >= 0x100)
    {
      int v8 = 2;
    }
    else
    {
      int v8 = v11 > 1;
    }
  }
  else
  {
    int v8 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v9 = a2 - 255;
    if (v6 < 4)
    {
      int v10 = (v9 >> v7) + 1;
      if (v5 != -1)
      {
        int v12 = v9 & ~(-1 << v7);
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v9;
      int v10 = 1;
    }
    switch(v8)
    {
      case 1:
        a1[v6] = v10;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v10;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x22EDA865CLL);
      case 4:
        *(_DWORD *)&a1[v6] = v10;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v8)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_22EDA8684(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 16;
  if (*(void *)(v2 + 64) > 0x10uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

uint64_t sub_22EDA873C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EDA8780@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v49 = a2;
  long long v44 = *(ValueMetadata **)(a1 + 24);
  Description = (void (**)(char *, void, ValueMetadata *))v44[-1].Description;
  MEMORY[0x270FA5388](a1);
  long long v45 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for WrappedIntoUnaryVStack();
  uint64_t v48 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v41 = (char *)&v35 - v5;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861D928);
  uint64_t v36 = sub_22EE7CEE0();
  uint64_t v47 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  int v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  long long v43 = (char *)&v35 - v9;
  int v10 = *(ValueMetadata **)(a1 + 16);
  uint64_t v11 = sub_22EE7CEE0();
  uint64_t v37 = *(void *)(v11 - 8);
  uint64_t v12 = v37;
  MEMORY[0x270FA5388](v11);
  unsigned int v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v35 = (char *)&v35 - v16;
  uint64_t v17 = *(void *)(a1 + 32);
  sub_22ED1C054(0, v10 == &type metadata for AutomaticSubscriptionOptionGroupLabel, (uint64_t)v10, v17);
  uint64_t v18 = sub_22ED6FED0(&qword_26861DA28, &qword_26861D928);
  v53[4] = v17;
  v53[5] = v18;
  uint64_t v19 = v18;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_22EB69440(v14, v11, WitnessTable);
  long long v39 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v40 = v12 + 8;
  v39(v14, v11);
  uint64_t v20 = v2 + *(int *)(a1 + 52);
  unsigned int v22 = v45;
  int v21 = Description;
  int v23 = v44;
  Description[2](v45, v20, v44);
  unsigned int v24 = v41;
  ((void (**)(char *, char *, ValueMetadata *))v21)[4](v41, v22, v23);
  uint64_t v25 = v42;
  uint64_t v26 = swift_getWitnessTable();
  sub_22ED1C054(1, v23 == &type metadata for AutomaticSubscriptionStoreMarketingContent, v25, v26);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v24, v25);
  v53[2] = v26;
  v53[3] = v19;
  uint64_t v27 = v36;
  uint64_t v28 = swift_getWitnessTable();
  long long v29 = v43;
  sub_22EB69440(v7, v27, v28);
  uint64_t v30 = v47;
  uint64_t v31 = *(void (**)(char *, uint64_t))(v47 + 8);
  v31(v7, v27);
  uint64_t v32 = v35;
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v14, v35, v11);
  v53[0] = v14;
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v7, v29, v27);
  v53[1] = v7;
  v52[0] = v11;
  v52[1] = v27;
  uint64_t v50 = WitnessTable;
  uint64_t v51 = v28;
  sub_22ED82348((uint64_t)v53, 2, (uint64_t)v52);
  v31(v29, v27);
  long long v33 = (uint64_t (*)(char *, uint64_t))v39;
  v39(v32, v11);
  v31(v7, v27);
  return v33(v14, v11);
}

uint64_t sub_22EDA8CBC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = sub_22EE7EAF0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = &v16[-v11];
  uint64_t v17 = v2;
  uint64_t v18 = v3;
  uint64_t v19 = v1;
  sub_22EB51934();
  sub_22EE7EAE0();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_22EB69440(v9, v4, WitnessTable);
  unsigned int v14 = *(void (**)(unsigned char *, uint64_t))(v6 + 8);
  v14(v9, v4);
  sub_22EB69440(v12, v4, WitnessTable);
  return ((uint64_t (*)(unsigned char *, uint64_t))v14)(v12, v4);
}

uint64_t sub_22EDA8E34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22EB69440(v6, v9, v10);
  sub_22EB69440(v8, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, a2);
}

uint64_t sub_22EDA8F18()
{
  return sub_22EE807F0();
}

uint64_t sub_22EDA8F64()
{
  return sub_22EDA8F18();
}

uint64_t sub_22EDA8F74(uint64_t a1, uint64_t a2)
{
  return sub_22EDA8F10(a1, *v2, *(void *)(a2 + 16), *(void *)(a2 + 24));
}

uint64_t sub_22EDA8F84(uint64_t a1, uint64_t a2)
{
  sub_22EE807B0();
  sub_22EDA8F10(v5, *v2, *(void *)(a2 + 16), *(void *)(a2 + 24));
  return sub_22EE807F0();
}

uint64_t sub_22EDA8FCC(void *a1, void *a2, uint64_t a3)
{
  return sub_22EDA8F14(*a1, *a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
}

uint64_t sub_22EDA8FE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v7 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861D930);
  uint64_t v35 = v12;
  uint64_t v31 = *(void *)(a1 + 24);
  uint64_t v13 = v31;
  unint64_t v33 = sub_22EB4404C();
  uint64_t v39 = v8;
  uint64_t v40 = v12;
  uint64_t v41 = v13;
  unint64_t v42 = v33;
  uint64_t v34 = sub_22EE7D9D0();
  uint64_t v14 = sub_22EE7E8A0();
  uint64_t v36 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v18 = MEMORY[0x270FA5388](v17);
  uint64_t v32 = (char *)&v29 - v19;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))(v11, v2 + *(int *)(a1 + 36), v8, v18);
  uint64_t v20 = type metadata accessor for SubscriptionOptionGroupAccessorySubview();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, a1);
  unint64_t v21 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = v31;
  *(void *)(v22 + 16) = v8;
  *(void *)(v22 + 24) = v23;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v22 + v21, v6, a1);
  uint64_t v24 = sub_22EDAA8C0(&qword_26861D9A8, (void (*)(uint64_t))type metadata accessor for SubscriptionOptionGroupAccessorySubview);
  sub_22ED97B40((uint64_t)v30, (uint64_t)sub_22EDAAB84, v22, v20, v8, v35, v24, (uint64_t)v16, v23, v33);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v25 = swift_getWitnessTable();
  uint64_t v26 = v32;
  sub_22EB69440(v16, v14, v25);
  uint64_t v27 = *(void (**)(char *, uint64_t))(v36 + 8);
  v27(v16, v14);
  sub_22EB69440(v26, v14, v25);
  return ((uint64_t (*)(char *, uint64_t))v27)(v26, v14);
}

uint64_t sub_22EDA9394@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  v37[1] = a3;
  uint64_t v42 = a1;
  uint64_t v45 = a4;
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861D960) - 8;
  MEMORY[0x270FA5388](v44);
  long long v43 = (void *)((char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861D9B0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v38 = (uint64_t)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861D9B8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861D948);
  uint64_t v12 = v11 - 8;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (void *)((char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_22EE7ED70();
  uint64_t v40 = v16;
  uint64_t v41 = v15;
  uint64_t KeyPath = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861D9C8);
  uint64_t v17 = (int *)(type metadata accessor for SubscriptionStoreContentConfiguration.Section(0) - 8);
  unint64_t v18 = (*(unsigned __int8 *)(*(void *)v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v17 + 80);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_22EE8A1B0;
  unint64_t v20 = v19 + v18;
  v37[2] = type metadata accessor for LeafView();
  uint64_t v48 = sub_22EE7EDF0();
  type metadata accessor for LeafView.ImplicitSectionID();
  swift_getWitnessTable();
  sub_22EE80180();
  unint64_t v21 = a2;
  v37[0] = a2;
  uint64_t v22 = *a2;
  uint64_t v23 = v21[1];
  uint64_t v24 = v19 + v18 + v17[8];
  uint64_t v25 = type metadata accessor for SubscriptionOptionSectionAccessorySubview();
  __swift_storeEnumTagSinglePayload(v24, 1, 1, v25);
  uint64_t v26 = type metadata accessor for SubscriptionStoreContentConfiguration.Section.AccessorySubviews(0);
  __swift_storeEnumTagSinglePayload(v24 + *(int *)(v26 + 20), 1, 1, v25);
  long long v27 = v46[1];
  *(_OWORD *)unint64_t v20 = v46[0];
  *(_OWORD *)(v20 + 16) = v27;
  *(void *)(v20 + 32) = v47;
  *(void *)(v20 + 40) = v22;
  *(void *)(v20 + 48) = v23;
  uint64_t v28 = v38;
  sub_22EC52800(v42, v38, &qword_26861D9B0);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_22EDA0914(v28, (char *)v19, 0, (uint64_t)v10);
  uint64_t v29 = type metadata accessor for SubscriptionStoreContentConfiguration.Context(0);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRelease();
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v29);
  uint64_t v30 = v43;
  sub_22EC52800((uint64_t)v10, (uint64_t)v43 + *(int *)(v44 + 36), &qword_26861D9B8);
  uint64_t *v30 = KeyPath;
  sub_22EC52800((uint64_t)v30, (uint64_t)v14 + *(int *)(v12 + 44), &qword_26861D960);
  uint64_t v31 = v40;
  uint64_t *v14 = v41;
  v14[1] = v31;
  sub_22EB0584C((uint64_t)v30, &qword_26861D960);
  sub_22EB0584C((uint64_t)v10, &qword_26861D9B8);
  uint64_t v32 = swift_getKeyPath();
  sub_22EB17560();
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861D930);
  uint64_t v34 = v45;
  uint64_t v35 = (uint64_t *)(v45 + *(int *)(v33 + 36));
  sub_22EB44DEC((uint64_t)v46, (uint64_t)(v35 + 1));
  uint64_t *v35 = v32;
  sub_22EC52800((uint64_t)v14, v34, &qword_26861D948);
  sub_22EB44E48((uint64_t)v46);
  return sub_22EB0584C((uint64_t)v14, &qword_26861D948);
}

uint64_t sub_22EDA97FC()
{
  return sub_22EAED934();
}

uint64_t sub_22EDA9814@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v51 = *(void *)(a1 - 8);
  uint64_t v52 = *(void *)(v51 + 64);
  MEMORY[0x270FA5388](a1);
  uint64_t v50 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = v9;
  uint64_t v11 = *(void *)(v10 + 32);
  uint64_t v48 = *(void *)(v10 + 16);
  uint64_t v49 = v11;
  uint64_t v12 = type metadata accessor for StoreContentAdapter();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861D948);
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v15 = sub_22EB440EC();
  uint64_t v56 = v12;
  uint64_t v57 = v13;
  uint64_t v58 = WitnessTable;
  uint64_t v59 = v15;
  sub_22EE7D9D0();
  uint64_t v16 = sub_22EE7E8A0();
  uint64_t v41 = *(void *)(a1 + 40);
  uint64_t v17 = v41;
  uint64_t v47 = MEMORY[0x263F19E28];
  uint64_t v55 = swift_getWitnessTable();
  uint64_t v46 = MEMORY[0x263F1B488];
  uint64_t v44 = v16;
  uint64_t v42 = swift_getWitnessTable();
  uint64_t v56 = v6;
  uint64_t v57 = v16;
  uint64_t v58 = v17;
  uint64_t v59 = v42;
  uint64_t v43 = sub_22EE7D9D0();
  uint64_t v18 = sub_22EE7E8A0();
  uint64_t v45 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  unint64_t v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v22 = MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v39 - v23;
  uint64_t v25 = v2;
  uint64_t v26 = v2 + *(int *)(a1 + 52);
  long long v27 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16);
  uint64_t v39 = v6;
  v27(v9, v26, v6, v22);
  uint64_t v28 = type metadata accessor for SubscriptionOptionGroupAccessorySubview();
  uint64_t v29 = v50;
  uint64_t v30 = v51;
  (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v50, v25, a1);
  uint64_t v31 = v30;
  unint64_t v32 = (*(unsigned __int8 *)(v30 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v33 = (char *)swift_allocObject();
  *((void *)v33 + 2) = v48;
  *((void *)v33 + 3) = v6;
  uint64_t v34 = v41;
  *((void *)v33 + 4) = v49;
  *((void *)v33 + 5) = v34;
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(&v33[v32], v29, a1);
  uint64_t v35 = sub_22EDAA8C0(&qword_26861D9A8, (void (*)(uint64_t))type metadata accessor for SubscriptionOptionGroupAccessorySubview);
  sub_22ED97B40((uint64_t)v40, (uint64_t)sub_22EDAA49C, (uint64_t)v33, v28, v39, v44, v35, (uint64_t)v20, v34, v42);
  uint64_t v54 = swift_getWitnessTable();
  uint64_t v36 = swift_getWitnessTable();
  sub_22EB69440(v20, v18, v36);
  uint64_t v37 = *(void (**)(char *, uint64_t))(v45 + 8);
  v37(v20, v18);
  sub_22EB69440(v24, v18, v36);
  return ((uint64_t (*)(char *, uint64_t))v37)(v24, v18);
}

uint64_t sub_22EDA9C70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v54 = a4;
  unint64_t v55 = a6;
  uint64_t v49 = a2;
  uint64_t v53 = a1;
  uint64_t v56 = a7;
  uint64_t v58 = a3;
  uint64_t v59 = a4;
  uint64_t v60 = a5;
  unint64_t v61 = a6;
  uint64_t v51 = type metadata accessor for GroupView();
  uint64_t v47 = *(void *)(v51 - 8);
  uint64_t v52 = *(void *)(v47 + 64);
  MEMORY[0x270FA5388](v51);
  uint64_t v48 = (char *)&v37 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861D9B0);
  uint64_t v46 = *(void *)(v10 - 8);
  uint64_t v11 = *(void *)(v46 + 64);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v38 = a3;
  uint64_t v39 = a5;
  uint64_t v12 = type metadata accessor for StoreContentAdapter();
  uint64_t v45 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v37 - v13;
  uint64_t v40 = (char *)&v37 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861D948);
  uint64_t v44 = v15;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v43 = WitnessTable;
  unint64_t v42 = sub_22EB440EC();
  uint64_t v58 = v12;
  uint64_t v59 = v15;
  uint64_t v60 = WitnessTable;
  unint64_t v61 = v42;
  uint64_t v41 = sub_22EE7D9D0();
  uint64_t v17 = sub_22EE7E8A0();
  uint64_t v50 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  __n128 v22 = (char *)&v37 - v21;
  uint64_t v23 = v49;
  sub_22ED860C0(a3, (uint64_t)v14);
  uint64_t v24 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22EC52800(v53, (uint64_t)v24, &qword_26861D9B0);
  uint64_t v26 = v47;
  uint64_t v25 = v48;
  uint64_t v27 = v23;
  uint64_t v28 = v51;
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v48, v27, v51);
  unint64_t v29 = (*(unsigned __int8 *)(v46 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
  unint64_t v30 = (v11 + *(unsigned __int8 *)(v26 + 80) + v29) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  uint64_t v31 = (char *)swift_allocObject();
  uint64_t v32 = v54;
  *((void *)v31 + 2) = v38;
  *((void *)v31 + 3) = v32;
  unint64_t v33 = v55;
  *((void *)v31 + 4) = v39;
  *((void *)v31 + 5) = v33;
  sub_22EADAE38((uint64_t)v24, (uint64_t)&v31[v29], &qword_26861D9B0);
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(&v31[v30], v25, v28);
  sub_22EE7E880();
  uint64_t v57 = swift_getWitnessTable();
  uint64_t v34 = swift_getWitnessTable();
  sub_22EB69440(v19, v17, v34);
  uint64_t v35 = *(void (**)(char *, uint64_t))(v50 + 8);
  v35(v19, v17);
  sub_22EB69440(v22, v17, v34);
  return ((uint64_t (*)(char *, uint64_t))v35)(v22, v17);
}

uint64_t sub_22EDAA0DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  v27[1] = a3;
  uint64_t v30 = a1;
  uint64_t v31 = a2;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861D960);
  uint64_t v14 = v13 - 8;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (void *)((char *)v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861D9B8);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_22EE7ED70();
  uint64_t v28 = v21;
  uint64_t v29 = v20;
  uint64_t KeyPath = swift_getKeyPath();
  v32[0] = a4;
  v32[1] = a5;
  void v32[2] = a6;
  v32[3] = a7;
  type metadata accessor for GroupView();
  sub_22EB17560();
  sub_22EDA11EC(v31, v30, (uint64_t)v32, (uint64_t)v19);
  sub_22EB44E48((uint64_t)v32);
  uint64_t v23 = type metadata accessor for SubscriptionStoreContentConfiguration.Context(0);
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v23);
  sub_22EC52800((uint64_t)v19, (uint64_t)v16 + *(int *)(v14 + 36), &qword_26861D9B8);
  *uint64_t v16 = KeyPath;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861D948);
  sub_22EC52800((uint64_t)v16, (uint64_t)a8 + *(int *)(v24 + 36), &qword_26861D960);
  uint64_t v25 = v28;
  *a8 = v29;
  a8[1] = v25;
  sub_22EB0584C((uint64_t)v16, &qword_26861D960);
  return sub_22EB0584C((uint64_t)v19, &qword_26861D9B8);
}

uint64_t sub_22EDAA2B8()
{
  return sub_22EAED934();
}

uint64_t type metadata accessor for WrappedIntoUnaryVStack()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_22EDAA2E8()
{
  type metadata accessor for GroupView();
  OUTLINED_FUNCTION_7_3();
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_5_2();
  v4();
  OUTLINED_FUNCTION_4_2();
  (*(void (**)(void))(v5 + 8))();
  uint64_t v6 = v3 + *(int *)(v1 + 64);
  if (*(unsigned char *)(v6 + 343))
  {
    swift_release();
    if (*(void *)(v6 + 40) >= 6uLL) {
      __swift_destroy_boxed_opaque_existential_1(v6 + 16);
    }
    if (*(void *)(v6 + 80)) {
      __swift_destroy_boxed_opaque_existential_1(v6 + 56);
    }
    if (*(void *)(v6 + 120)) {
      __swift_destroy_boxed_opaque_existential_1(v6 + 96);
    }
    if (*(void *)(v6 + 160)) {
      __swift_destroy_boxed_opaque_existential_1(v6 + 136);
    }
    if (*(void *)(v6 + 200)) {
      __swift_destroy_boxed_opaque_existential_1(v6 + 176);
    }
    if (*(void *)(v6 + 248) >= 3uLL) {
      __swift_destroy_boxed_opaque_existential_1(v6 + 224);
    }
    if (*(void *)(v6 + 280) >= 4uLL)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v6 + 312))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_22EDAA49C()
{
  OUTLINED_FUNCTION_28_12();
  uint64_t v2 = type metadata accessor for GroupView();
  OUTLINED_FUNCTION_4_1(v2);
  uint64_t v3 = OUTLINED_FUNCTION_6_3();

  return sub_22EDA9C70(v3, v4, v5, v6, v0, v1, v7);
}

uint64_t sub_22EDAA518()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26861D9B0) - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  type metadata accessor for GroupView();
  OUTLINED_FUNCTION_7_3();
  unint64_t v6 = (v4 + v3 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  sub_22EE7D5F0();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_5_2();
  v7();
  swift_release();
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_5_2();
  v8();
  OUTLINED_FUNCTION_4_2();
  (*(void (**)(void))(v9 + 8))();
  unint64_t v10 = v0 + v6 + *(int *)(v1 + 64);
  if (*(unsigned char *)(v10 + 343))
  {
    swift_release();
    if (*(void *)(v10 + 40) >= 6uLL) {
      __swift_destroy_boxed_opaque_existential_1(v10 + 16);
    }
    if (*(void *)(v10 + 80)) {
      __swift_destroy_boxed_opaque_existential_1(v10 + 56);
    }
    if (*(void *)(v10 + 120)) {
      __swift_destroy_boxed_opaque_existential_1(v10 + 96);
    }
    if (*(void *)(v10 + 160)) {
      __swift_destroy_boxed_opaque_existential_1(v10 + 136);
    }
    if (*(void *)(v10 + 200)) {
      __swift_destroy_boxed_opaque_existential_1(v10 + 176);
    }
    if (*(void *)(v10 + 248) >= 3uLL) {
      __swift_destroy_boxed_opaque_existential_1(v10 + 224);
    }
    if (*(void *)(v10 + 280) >= 4uLL)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v10 + 312))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_22EDAA778()
{
  OUTLINED_FUNCTION_28_12();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861D9B0);
  OUTLINED_FUNCTION_6_10(v7);
  uint64_t v10 = *(void *)(v9 + 64);
  unint64_t v11 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = type metadata accessor for GroupView();
  OUTLINED_FUNCTION_4_1(v12);
  uint64_t v14 = v1 + ((v11 + v10 + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));

  return sub_22EDAA0DC(v0, v1 + v11, v14, v3, v4, v5, v6, v2);
}

unint64_t sub_22EDAA854()
{
  unint64_t result = qword_2686267C0[0];
  if (!qword_2686267C0[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268623390);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2686267C0);
  }
  return result;
}

uint64_t sub_22EDAA8C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22EDAA908(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_2_0();
  uint64_t v4 = OUTLINED_FUNCTION_17_0();
  v5(v4);
  return a2;
}

uint64_t sub_22EDAA95C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_12_12();
  v4();
  return a2;
}

uint64_t sub_22EDAA9B8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_5_2();
  v3();
  return a1;
}

uint64_t sub_22EDAAA0C()
{
  type metadata accessor for LeafView();
  OUTLINED_FUNCTION_7_3();
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  swift_release();
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_5_2();
  v4();
  uint64_t v5 = v3 + *(int *)(v1 + 48);
  if (*(unsigned char *)(v5 + 343))
  {
    swift_release();
    if (*(void *)(v5 + 40) >= 6uLL) {
      __swift_destroy_boxed_opaque_existential_1(v5 + 16);
    }
    if (*(void *)(v5 + 80)) {
      __swift_destroy_boxed_opaque_existential_1(v5 + 56);
    }
    if (*(void *)(v5 + 120)) {
      __swift_destroy_boxed_opaque_existential_1(v5 + 96);
    }
    if (*(void *)(v5 + 160)) {
      __swift_destroy_boxed_opaque_existential_1(v5 + 136);
    }
    if (*(void *)(v5 + 200)) {
      __swift_destroy_boxed_opaque_existential_1(v5 + 176);
    }
    if (*(void *)(v5 + 248) >= 3uLL) {
      __swift_destroy_boxed_opaque_existential_1(v5 + 224);
    }
    if (*(void *)(v5 + 280) >= 4uLL)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v5 + 312))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_22EDAAB84()
{
  uint64_t v0 = type metadata accessor for LeafView();
  OUTLINED_FUNCTION_4_1(v0);
  uint64_t v1 = OUTLINED_FUNCTION_6_3();

  return sub_22EDA9394(v1, v2, v3, v4);
}

uint64_t type metadata accessor for LeafView.ImplicitSectionID()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_22EDAAC10(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (!a2) {
    return 0;
  }
  int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return __swift_getEnumTagSinglePayload((uint64_t)a1, v5, v4);
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_22EDAAD5C(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  size_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
  char v9 = 8 * v8;
  BOOL v10 = a3 >= v7;
  int v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      unsigned int v15 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v15))
      {
        int v12 = 4;
      }
      else if (v15 >= 0x100)
      {
        int v12 = 2;
      }
      else
      {
        int v12 = v15 > 1;
      }
    }
    else
    {
      int v12 = 1;
    }
  }
  else
  {
    int v12 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v13 = ~v7 + a2;
    if (v8 < 4)
    {
      int v14 = (v13 >> v9) + 1;
      if (v8)
      {
        int v16 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
      int v14 = 1;
    }
    switch(v12)
    {
      case 1:
        a1[v8] = v14;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v14;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v14;
        return;
      default:
        return;
    }
  }
  switch(v12)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x22EDAAF60);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v7, v6);
      }
      return;
  }
}

uint64_t sub_22EDAAF88()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861D928);
  sub_22EE7CEE0();
  type metadata accessor for WrappedIntoUnaryVStack();
  sub_22EE7CEE0();
  swift_getTupleTypeMetadata2();
  sub_22EE7EE20();

  return swift_getWitnessTable();
}

uint64_t sub_22EDAB044()
{
  return swift_getWitnessTable();
}

uint64_t sub_22EDAB178()
{
  return swift_getWitnessTable();
}

uint64_t sub_22EDAB224()
{
  return swift_getWitnessTable();
}

uint64_t sub_22EDAB240()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EDAB284()
{
  return sub_22EDA8E34(v0[4], v0[2], v0[3]);
}

uint64_t sub_22EDAB290()
{
  sub_22EE7EAF0();

  return swift_getWitnessTable();
}

__n128 OUTLINED_FUNCTION_7_27()
{
  *(_OWORD *)(v0 - 208) = 0u;
  *(_OWORD *)(v0 - 192) = 0u;
  *(void *)(v0 - 176) = 0;
  *(unsigned char *)(v0 - 96) = *(unsigned char *)(v0 - 160);
  long long v1 = *(_OWORD *)(v0 - 192);
  *(_OWORD *)(v0 - 144) = *(_OWORD *)(v0 - 208);
  *(_OWORD *)(v0 - 128) = v1;
  __n128 result = *(__n128 *)(v0 - 176);
  *(__n128 *)(v0 - 112) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_12_27@<X0>(uint64_t a1@<X3>, unint64_t a2@<X8>)
{
  return sub_22EC6D764(a2 > 1, v2, 1, a1);
}

uint64_t OUTLINED_FUNCTION_15_27()
{
  return sub_22EE7E120();
}

void OUTLINED_FUNCTION_17_24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a4 + 16) = v5;
  *(void *)(v4 + 416) = a4;
}

uint64_t OUTLINED_FUNCTION_19_19()
{
  return sub_22EE7FEC0();
}

uint64_t OUTLINED_FUNCTION_20_23()
{
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v2);
  uint64_t v3 = v1 + *(int *)(*(void *)(v0 + 128) + 20);
  return __swift_storeEnumTagSinglePayload(v3, 1, 1, v2);
}

uint64_t OUTLINED_FUNCTION_25_14(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  *(void *)(v4 - 128) = result;
  *(void *)(v4 - 120) = a2;
  *(unsigned char *)(v4 - 112) = a3 & 1;
  *(void *)(v4 - 104) = a4;
  return result;
}

double OUTLINED_FUNCTION_29_15()
{
  *(void *)(v0 - 176) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 - 208) = 0u;
  *(_OWORD *)(v0 - 192) = 0u;
  return result;
}

uint64_t sub_22EDAB47C@<X0>(uint64_t a1@<X8>)
{
  return EnvironmentValues.purchase.getter(a1);
}

uint64_t sub_22EDAB4A0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861F2C0);
  sub_22EE7E9E0();
  return v1;
}

uint64_t sub_22EDAB4EC()
{
  return sub_22EE7E9F0();
}

uint64_t sub_22EDAB53C(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 60);
  uint64_t v3 = *(void *)v2;
  char v4 = *(unsigned char *)(v2 + 8);
  sub_22EADDF00(*(void *)v2, v4);
  sub_22EB155AC();
  char v6 = v5;
  sub_22EADDB08(v3, v4);
  return v6 & 1;
}

uint64_t sub_22EDAB59C(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1);
  char v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = sub_22EDAB53C(v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, a1);
  if ((v7 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, a1);
    return 0;
  }
  uint64_t v8 = sub_22EDAB4A0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, a1);
  if (v8)
  {
    swift_release();
    return 0;
  }
  return 1;
}

uint64_t sub_22EDAB6C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v17 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_268626950);
  uint64_t v18 = v17[13];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861F2F0);
  sub_22EE7E9D0();
  *(_OWORD *)(a9 + v18) = v27;
  uint64_t v19 = (uint64_t *)(a9 + v17[14]);
  uint64_t *v19 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861CD60);
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = a9 + v17[15];
  *(void *)uint64_t v20 = swift_getKeyPath();
  *(unsigned char *)(v20 + 8) = 0;
  uint64_t v21 = sub_22EE7F780();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(a9, a1, v21);
  *(void *)(a9 + v17[9]) = a2;
  uint64_t v23 = (void *)(a9 + v17[10]);
  *uint64_t v23 = a3;
  v23[1] = a4;
  uint64_t v24 = (void *)(a9 + v17[11]);
  void *v24 = a5;
  v24[1] = a6;
  uint64_t v25 = (void *)(a9 + v17[12]);
  void *v25 = a7;
  v25[1] = a8;
  return result;
}

uint64_t InAppPurchaseButton.init(_:options:onTap:onCompletion:label:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v17 = (int *)type metadata accessor for InAppPurchaseButton();
  uint64_t v18 = (uint64_t *)(a9 + v17[13]);
  uint64_t *v18 = sub_22EBAF124();
  v18[1] = v19;
  uint64_t v20 = (uint64_t *)(a9 + v17[14]);
  *uint64_t v20 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861CD60);
  swift_storeEnumTagMultiPayload();
  uint64_t v21 = a9 + v17[15];
  *(void *)uint64_t v21 = swift_getKeyPath();
  *(unsigned char *)(v21 + 8) = 0;
  uint64_t v22 = sub_22EE7F780();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(a9, a1, v22);
  *(void *)(a9 + v17[9]) = a2;
  uint64_t v24 = (void *)(a9 + v17[10]);
  void *v24 = a3;
  v24[1] = a4;
  uint64_t v25 = (void *)(a9 + v17[11]);
  void *v25 = a5;
  v25[1] = a6;
  uint64_t v26 = (void *)(a9 + v17[12]);
  *uint64_t v26 = a7;
  v26[1] = a8;
  return result;
}

uint64_t type metadata accessor for InAppPurchaseButton()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_22EDAB984@<X0>(uint64_t a1@<X8>)
{
  return EnvironmentValues.purchase.getter(a1);
}

uint64_t InAppPurchaseButton.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v37 = a2;
  OUTLINED_FUNCTION_0_0();
  uint64_t v6 = v5;
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = *(void *)(v10 + 16);
  uint64_t v12 = *(void *)(v10 + 24);
  sub_22EE7EA40();
  OUTLINED_FUNCTION_0_0();
  uint64_t v35 = v13;
  MEMORY[0x270FA5388](v14);
  v33[1] = (char *)v33 - v15;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861C380);
  uint64_t v16 = sub_22EE7CEE0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v36 = v17;
  MEMORY[0x270FA5388](v18);
  v33[0] = (char *)v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v34 = (char *)v33 - v21;
  OUTLINED_FUNCTION_10_4();
  v22();
  unint64_t v23 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v11;
  *(void *)(v24 + 24) = v12;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v24 + v23, (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  uint64_t v38 = v11;
  uint64_t v39 = v12;
  uint64_t v40 = v3;
  sub_22EE7EA20();
  sub_22EDAB59C(a1);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v26 = v33[0];
  sub_22EE7E680();
  OUTLINED_FUNCTION_5_2();
  v27();
  unint64_t v28 = sub_22EDACE58();
  uint64_t v41 = WitnessTable;
  unint64_t v42 = v28;
  uint64_t v29 = swift_getWitnessTable();
  uint64_t v30 = v34;
  sub_22EB69440(v26, v16, v29);
  uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
  v31(v26, v16);
  sub_22EB69440(v30, v16, v29);
  return ((uint64_t (*)(char *, uint64_t))v31)(v30, v16);
}

uint64_t sub_22EDABCD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for InAppPurchaseButton();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v18 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C390);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_22EDAB4A0();
  uint64_t result = swift_release();
  if (!v13)
  {
    sub_22EE7FD50();
    uint64_t v15 = sub_22EE7FD90();
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v15);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
    unint64_t v16 = (*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v17 = (char *)swift_allocObject();
    *((void *)v17 + 2) = 0;
    *((void *)v17 + 3) = 0;
    *((void *)v17 + 4) = a2;
    *((void *)v17 + 5) = a3;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v17[v16], v9, v6);
    sub_22ED1F7B4((uint64_t)v12, (uint64_t)&unk_268626960, (uint64_t)v17);
    sub_22EAE6504((uint64_t)v12, &qword_26861C390);
    return sub_22EDAB4EC();
  }
  return result;
}

uint64_t sub_22EDABEC0()
{
  type metadata accessor for InAppPurchaseButton();
  OUTLINED_FUNCTION_1_4();
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  sub_22EE7F780();
  OUTLINED_FUNCTION_7_2();
  OUTLINED_FUNCTION_5_2();
  v4();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_11_26();
  OUTLINED_FUNCTION_11_26();
  OUTLINED_FUNCTION_11_26();
  swift_release();
  swift_release();
  uint64_t v5 = v3 + *(int *)(v0 + 56);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861CD60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_22EE7DE00();
    OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_5_2();
    v6();
  }
  else
  {
    swift_release();
  }
  OUTLINED_FUNCTION_9_35();

  return swift_deallocObject();
}

uint64_t sub_22EDAC014()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = type metadata accessor for InAppPurchaseButton();
  OUTLINED_FUNCTION_4_1(v3);
  uint64_t v5 = v0 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return sub_22EDABCD4(v5, v1, v2);
}

uint64_t sub_22EDAC078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  v6[5] = __swift_instantiateConcreteTypeFromMangledName(&qword_268620E60);
  v6[6] = swift_task_alloc();
  type metadata accessor for PurchaseAction();
  v6[7] = swift_task_alloc();
  uint64_t v7 = sub_22EE7F3A0();
  v6[8] = v7;
  v6[9] = *(void *)(v7 - 8);
  v6[10] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_22EDAC19C, 0, 0);
}

uint64_t sub_22EDAC19C()
{
  OUTLINED_FUNCTION_9_12();
  uint64_t v1 = v0[2];
  uint64_t v2 = type metadata accessor for InAppPurchaseButton();
  v0[11] = v2;
  uint64_t v5 = (uint64_t (*)(void))(*(void *)(v1 + *(int *)(v2 + 40)) + **(int **)(v1 + *(int *)(v2 + 40)));
  uint64_t v3 = (void *)swift_task_alloc();
  v0[12] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_22EDAC27C;
  return v5();
}

uint64_t sub_22EDAC27C()
{
  OUTLINED_FUNCTION_9_12();
  OUTLINED_FUNCTION_1_5();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_4_12();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_16_10();
  return MEMORY[0x270FA2498](v3, v4, v5);
}

uint64_t sub_22EDAC344()
{
  OUTLINED_FUNCTION_9_12();
  sub_22EE7FD30();
  *(void *)(v0 + 104) = sub_22EE7FD20();
  uint64_t v2 = sub_22EE7FD00();
  return MEMORY[0x270FA2498](sub_22EDAC3D4, v2, v1);
}

uint64_t sub_22EDAC3D4()
{
  OUTLINED_FUNCTION_28_2();
  swift_release();
  sub_22EB181D4();
  OUTLINED_FUNCTION_16_10();
  return MEMORY[0x270FA2498](v0, v1, v2);
}

uint64_t sub_22EDAC458()
{
  OUTLINED_FUNCTION_9_12();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_22EDAC508;
  return PurchaseAction.callAsFunction(_:options:)();
}

uint64_t sub_22EDAC508()
{
  OUTLINED_FUNCTION_9_12();
  OUTLINED_FUNCTION_1_5();
  uint64_t v3 = *(void *)(v2 + 56);
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_4_12();
  *uint64_t v5 = v4;
  *(void *)(v6 + 120) = v0;
  swift_task_dealloc();
  sub_22EDAE36C(v3);
  OUTLINED_FUNCTION_16_10();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_22EDAC604()
{
  uint64_t v1 = *(int **)(v0[2] + *(int *)(v0[11] + 44));
  (*(void (**)(void, void, void))(v0[9] + 16))(v0[6], v0[10], v0[8]);
  swift_storeEnumTagMultiPayload();
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)v1 + *v1);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[16] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_22EDAC720;
  uint64_t v3 = v0[6];
  return v5(v3);
}

uint64_t sub_22EDAC720()
{
  OUTLINED_FUNCTION_9_12();
  OUTLINED_FUNCTION_1_5();
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_4_12();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  sub_22EAE6504(v2, &qword_268620E60);
  OUTLINED_FUNCTION_16_10();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

uint64_t sub_22EDAC80C()
{
  OUTLINED_FUNCTION_28_2();
  (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[8]);
  OUTLINED_FUNCTION_14_28();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_18_5();
  return v1();
}

uint64_t sub_22EDAC898()
{
  OUTLINED_FUNCTION_28_2();
  uint64_t v1 = *(void **)(v0 + 120);
  uint64_t v2 = *(int **)(*(void *)(v0 + 16) + *(int *)(*(void *)(v0 + 88) + 44));
  **(void **)(v0 + 48) = v1;
  swift_storeEnumTagMultiPayload();
  id v3 = v1;
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v2 + *v2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_22EDAC99C;
  uint64_t v5 = *(void *)(v0 + 48);
  return v7(v5);
}

uint64_t sub_22EDAC99C()
{
  OUTLINED_FUNCTION_9_12();
  OUTLINED_FUNCTION_1_5();
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_4_12();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  sub_22EAE6504(v2, &qword_268620E60);
  OUTLINED_FUNCTION_16_10();
  return MEMORY[0x270FA2498](v5, v6, v7);
}

uint64_t sub_22EDACA88()
{
  OUTLINED_FUNCTION_28_2();

  OUTLINED_FUNCTION_14_28();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_18_5();
  return v1();
}

uint64_t sub_22EDACB04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for InAppPurchaseButton();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v19 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C390);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22EE7FD50();
  uint64_t v13 = sub_22EE7FD90();
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  sub_22EE7FD30();
  uint64_t v14 = sub_22EE7FD20();
  unint64_t v15 = (*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v16 = (char *)swift_allocObject();
  uint64_t v17 = MEMORY[0x263F8F500];
  *((void *)v16 + 2) = v14;
  *((void *)v16 + 3) = v17;
  *((void *)v16 + 4) = a2;
  *((void *)v16 + 5) = a3;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v16[v15], v9, v6);
  sub_22EBEC0F0((uint64_t)v12, (uint64_t)&unk_268626970, (uint64_t)v16);
  return swift_release();
}

uint64_t sub_22EDACCDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v16 - v10;
  uint64_t v12 = *(void (**)(BOOL))(a1 + *(int *)(type metadata accessor for InAppPurchaseButton() + 48));
  uint64_t v13 = sub_22EDAB4A0();
  if (v13) {
    swift_release();
  }
  v12(v13 != 0);
  sub_22EB69440(v8, a2, a3);
  uint64_t v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v8, a2);
  sub_22EB69440(v11, a2, a3);
  return ((uint64_t (*)(char *, uint64_t))v14)(v11, a2);
}

uint64_t sub_22EDACE4C()
{
  return sub_22EDACCDC(v0[4], v0[2], v0[3]);
}

unint64_t sub_22EDACE58()
{
  unint64_t result = qword_26861C378;
  if (!qword_26861C378)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861C380);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26861C378);
  }
  return result;
}

uint64_t InAppPurchaseButton<>.init(_:titleKey:options:onTap:onCompletion:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v28 = a7;
  uint64_t v29 = a8;
  uint64_t v26 = a10;
  uint64_t v27 = a6;
  uint64_t v17 = sub_22EE7F780();
  OUTLINED_FUNCTION_0_0();
  uint64_t v19 = v18;
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v26 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_10_4();
  v23();
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = a2;
  *(void *)(v24 + 24) = a3;
  *(unsigned char *)(v24 + 32) = a4;
  *(void *)(v24 + 40) = a5;
  sub_22EDAB6C4((uint64_t)v22, v27, v28, v29, v26, a11, (uint64_t)sub_22EDAD0CC, v24, a9);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(a1, v17);
}

uint64_t sub_22EDACFF4@<X0>(uint64_t a1@<X8>)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_22EE7E120();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_22EDAD08C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_22EDAD0CC@<X0>(uint64_t a1@<X8>)
{
  return sub_22EDACFF4(a1);
}

uint64_t InAppPurchaseButton<>.init<A>(_:title:options:onTap:onCompletion:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v37 = a6;
  uint64_t v38 = a7;
  uint64_t v35 = a4;
  uint64_t v36 = a5;
  uint64_t v33 = a9;
  uint64_t v34 = a3;
  OUTLINED_FUNCTION_0_0();
  uint64_t v14 = v13;
  uint64_t v16 = *(void *)(v15 + 64);
  uint64_t v32 = a10;
  MEMORY[0x270FA5388](v17);
  uint64_t v18 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_22EE7F780();
  OUTLINED_FUNCTION_0_0();
  uint64_t v21 = v20;
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v31 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_10_4();
  v25();
  OUTLINED_FUNCTION_10_4();
  v26();
  unint64_t v27 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v28 = swift_allocObject();
  uint64_t v29 = v32;
  *(void *)(v28 + 16) = a8;
  *(void *)(v28 + 24) = v29;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v28 + v27, v18, a8);
  sub_22EDAB6C4((uint64_t)v24, v34, v35, v36, v37, v38, (uint64_t)sub_22EDAD414, v28, v33);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a2, a8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(a1, v19);
}

uint64_t sub_22EDAD2BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 v3 = MEMORY[0x270FA5388](a1);
  (*(void (**)(char *, __n128))(v5 + 16))((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  uint64_t result = sub_22EE7E150();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v7;
  *(unsigned char *)(a2 + 16) = v8 & 1;
  *(void *)(a2 + 24) = v9;
  return result;
}

uint64_t sub_22EDAD390()
{
  OUTLINED_FUNCTION_5_2();
  v0();

  return swift_deallocObject();
}

uint64_t sub_22EDAD414@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22EDAD2BC(a1, a2);
}

uint64_t sub_22EDAD454()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_22EDAD498()
{
  sub_22EE7F780();
  if (v0 <= 0x3F)
  {
    sub_22EBAF038();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_22EDAD590(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v31 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v31 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_22EE7F780();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[10];
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    uint64_t v12 = a3[11];
    uint64_t v13 = a3[12];
    uint64_t v14 = (uint64_t *)((char *)a1 + v12);
    uint64_t v15 = (uint64_t *)((char *)a2 + v12);
    uint64_t v16 = v15[1];
    void *v14 = *v15;
    v14[1] = v16;
    uint64_t v17 = (uint64_t *)((char *)a1 + v13);
    uint64_t v18 = (uint64_t *)((char *)a2 + v13);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = a3[13];
    uint64_t v21 = a3[14];
    uint64_t v22 = (uint64_t *)((char *)a1 + v20);
    uint64_t v23 = (uint64_t *)((char *)a2 + v20);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    uint64_t v25 = (uint64_t *)((char *)a1 + v21);
    uint64_t v26 = (uint64_t *)((char *)a2 + v21);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26861CD60);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v27 = sub_22EE7DE00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
      uint64_t v28 = *(int *)(type metadata accessor for PurchaseAction() + 20);
      uint64_t v29 = *(void **)((char *)v26 + v28);
      *(void *)((char *)v25 + v28) = v29;
      id v30 = v29;
    }
    else
    {
      void *v25 = *v26;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v32 = a3[15];
    uint64_t v33 = (char *)a1 + v32;
    uint64_t v34 = (char *)a2 + v32;
    uint64_t v35 = *(void *)v34;
    char v36 = v34[8];
    sub_22EADDF00(*(void *)v34, v36);
    *(void *)uint64_t v33 = v35;
    v33[8] = v36;
  }
  return a1;
}

uint64_t sub_22EDAD7B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22EE7F780();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v5 = a1 + *(int *)(a2 + 56);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861CD60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_22EE7DE00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + *(int *)(a2 + 60);
  uint64_t v8 = *(void *)v7;
  char v9 = *(unsigned char *)(v7 + 8);

  return sub_22EADDB08(v8, v9);
}

uint64_t sub_22EDAD90C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_22EE7F780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v8 = (void *)(a1 + v7);
  char v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  uint64_t v11 = a3[11];
  uint64_t v12 = a3[12];
  uint64_t v13 = (void *)(a1 + v11);
  uint64_t v14 = (void *)(a2 + v11);
  uint64_t v15 = v14[1];
  void *v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = (void *)(a1 + v12);
  uint64_t v17 = (void *)(a2 + v12);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = a3[13];
  uint64_t v20 = a3[14];
  uint64_t v21 = (void *)(a1 + v19);
  uint64_t v22 = (void *)(a2 + v19);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  uint64_t v24 = (void *)(a1 + v20);
  uint64_t v25 = (void *)(a2 + v20);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861CD60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v26 = sub_22EE7DE00();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    uint64_t v27 = *(int *)(type metadata accessor for PurchaseAction() + 20);
    uint64_t v28 = *(void **)((char *)v25 + v27);
    *(void *)((char *)v24 + v27) = v28;
    id v29 = v28;
  }
  else
  {
    void *v24 = *v25;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v30 = a3[15];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  uint64_t v33 = *(void *)v32;
  char v34 = *(unsigned char *)(v32 + 8);
  sub_22EADDF00(*(void *)v32, v34);
  *(void *)uint64_t v31 = v33;
  *(unsigned char *)(v31 + 8) = v34;
  return a1;
}

uint64_t sub_22EDADAE0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_22EE7F780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[10];
  uint64_t v8 = (void *)(a1 + v7);
  char v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_retain();
  swift_release();
  uint64_t v11 = a3[11];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_release();
  uint64_t v15 = a3[12];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  swift_retain();
  swift_release();
  uint64_t v19 = a3[13];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  swift_retain();
  swift_release();
  *(void *)(v20 + 8) = *(void *)(v21 + 8);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v22 = a3[14];
    uint64_t v23 = (void *)(a1 + v22);
    uint64_t v24 = (void *)(a2 + v22);
    sub_22EAE6504(a1 + v22, &qword_26861CD60);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26861CD60);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v25 = sub_22EE7DE00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
      uint64_t v26 = *(int *)(type metadata accessor for PurchaseAction() + 20);
      uint64_t v27 = *(void **)((char *)v24 + v26);
      *(void *)((char *)v23 + v26) = v27;
      id v28 = v27;
    }
    else
    {
      *uint64_t v23 = *v24;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v29 = a3[15];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  uint64_t v32 = *(void *)v31;
  char v33 = *(unsigned char *)(v31 + 8);
  sub_22EADDF00(*(void *)v31, v33);
  uint64_t v34 = *(void *)v30;
  char v35 = *(unsigned char *)(v30 + 8);
  *(void *)uint64_t v30 = v32;
  *(unsigned char *)(v30 + 8) = v33;
  sub_22EADDB08(v34, v35);
  return a1;
}

uint64_t sub_22EDADD10(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_22EE7F780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  uint64_t v9 = a3[14];
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  uint64_t v10 = (char *)(a1 + v9);
  uint64_t v11 = (char *)(a2 + v9);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861CD60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_22EE7DE00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v10, v11, v13);
    uint64_t v14 = type metadata accessor for PurchaseAction();
    *(void *)&v10[*(int *)(v14 + 20)] = *(void *)&v11[*(int *)(v14 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  uint64_t v15 = a3[15];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  return a1;
}

uint64_t sub_22EDADE88(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_22EE7F780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  swift_release();
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  swift_release();
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  swift_release();
  uint64_t v7 = a3[13];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_release();
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v10 = a3[14];
    uint64_t v11 = (char *)(a1 + v10);
    uint64_t v12 = (char *)(a2 + v10);
    sub_22EAE6504(a1 + v10, &qword_26861CD60);
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861CD60);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_22EE7DE00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v11, v12, v14);
      uint64_t v15 = type metadata accessor for PurchaseAction();
      *(void *)&v11[*(int *)(v15 + 20)] = *(void *)&v12[*(int *)(v15 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
  }
  uint64_t v16 = a3[15];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = (uint64_t *)(a2 + v16);
  uint64_t v19 = *v18;
  LOBYTE(v18) = *((unsigned char *)v18 + 8);
  uint64_t v20 = *(void *)v17;
  char v21 = *(unsigned char *)(v17 + 8);
  *(void *)uint64_t v17 = v19;
  *(unsigned char *)(v17 + 8) = (_BYTE)v18;
  sub_22EADDB08(v20, v21);
  return a1;
}

uint64_t sub_22EDAE07C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EDAE090);
}

uint64_t sub_22EDAE090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_22EE7F780();
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_8:
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
  if (a2 != 0x7FFFFFFF)
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_2686268C8);
    uint64_t v9 = a1 + *(int *)(a3 + 56);
    goto LABEL_8;
  }
  unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 36));
  if (v10 >= 0xFFFFFFFF) {
    LODWORD(v10) = -1;
  }
  return (v10 + 1);
}

uint64_t sub_22EDAE144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EDAE158);
}

void sub_22EDAE158(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_22EE7F780();
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(void *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
      return;
    }
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(qword_2686268C8);
    uint64_t v11 = a1 + *(int *)(a4 + 56);
  }

  __swift_storeEnumTagSinglePayload(v11, a2, a2, v10);
}

uint64_t sub_22EDAE208()
{
  return swift_getWitnessTable();
}

uint64_t sub_22EDAE2A8()
{
  uint64_t v1 = type metadata accessor for InAppPurchaseButton();
  OUTLINED_FUNCTION_4_1(v1);
  OUTLINED_FUNCTION_16_27();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_22EBD65C0;
  uint64_t v3 = OUTLINED_FUNCTION_8_33();
  return sub_22EDAC078(v3, v4, v5, v6, v7, v8);
}

uint64_t sub_22EDAE36C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PurchaseAction();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22EDAE3C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  sub_22EE7FD30();
  v6[5] = sub_22EE7FD20();
  uint64_t v8 = sub_22EE7FD00();
  return MEMORY[0x270FA2498](sub_22EDAE464, v8, v7);
}

uint64_t sub_22EDAE464()
{
  OUTLINED_FUNCTION_28_2();
  swift_release();
  type metadata accessor for InAppPurchaseButton();
  sub_22EDAB4EC();
  OUTLINED_FUNCTION_18_5();
  return v0();
}

uint64_t objectdestroy_12Tm()
{
  type metadata accessor for InAppPurchaseButton();
  OUTLINED_FUNCTION_1_4();
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  sub_22EE7F780();
  OUTLINED_FUNCTION_7_2();
  OUTLINED_FUNCTION_5_2();
  v4();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_11_26();
  OUTLINED_FUNCTION_11_26();
  OUTLINED_FUNCTION_11_26();
  swift_release();
  swift_release();
  uint64_t v5 = v1 + ((v3 + 48) & ~v3) + *(int *)(v0 + 56);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861CD60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_22EE7DE00();
    OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_5_2();
    v6();
  }
  else
  {
    swift_release();
  }
  OUTLINED_FUNCTION_9_35();

  return swift_deallocObject();
}

uint64_t sub_22EDAE644()
{
  uint64_t v1 = type metadata accessor for InAppPurchaseButton();
  OUTLINED_FUNCTION_4_1(v1);
  OUTLINED_FUNCTION_16_27();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_22EB971E0;
  uint64_t v3 = OUTLINED_FUNCTION_8_33();
  return sub_22EDAE3C8(v3, v4, v5, v6, v7, v8);
}

uint64_t OUTLINED_FUNCTION_8_33()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_9_35()
{
  sub_22EADDB08(*(void *)(v2 + *(int *)(v0 + 60)), *(unsigned char *)(v2 + *(int *)(v0 + 60) + 8));
  return v1;
}

uint64_t OUTLINED_FUNCTION_11_26()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_14_28()
{
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[2];
  return sub_22EDACB04(v4, v2, v3);
}

uint64_t sub_22EDAE7AC@<X0>(char a1@<W0>, void (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  a2();
  uint64_t result = type metadata accessor for StructuredScrollViewBottomInset();
  *(unsigned char *)(a3 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t type metadata accessor for StructuredScrollViewBottomInset()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_22EDAE824()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_22EDAE8BC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= 0xFE) {
    unsigned int v7 = 254;
  }
  else {
    unsigned int v7 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_22;
  }
  uint64_t v9 = v6 + 1;
  char v10 = 8 * (v6 + 1);
  if ((v6 + 1) > 3) {
    goto LABEL_7;
  }
  unsigned int v12 = ((v8 + ~(-1 << v10)) >> v10) + 1;
  if (HIWORD(v12))
  {
    int v11 = *(_DWORD *)((char *)a1 + v9);
    if (v11) {
      goto LABEL_14;
    }
  }
  else
  {
    if (v12 <= 0xFF)
    {
      if (v12 < 2) {
        goto LABEL_22;
      }
LABEL_7:
      int v11 = *((unsigned __int8 *)a1 + v9);
      if (!*((unsigned char *)a1 + v9)) {
        goto LABEL_22;
      }
LABEL_14:
      int v13 = (v11 - 1) << v10;
      if (v9 > 3) {
        int v13 = 0;
      }
      if (v9)
      {
        if (v9 > 3) {
          LODWORD(v9) = 4;
        }
        switch((int)v9)
        {
          case 2:
            LODWORD(v9) = *a1;
            break;
          case 3:
            LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            LODWORD(v9) = *(_DWORD *)a1;
            break;
          default:
            LODWORD(v9) = *(unsigned __int8 *)a1;
            break;
        }
      }
      int v16 = v7 + (v9 | v13);
      return (v16 + 1);
    }
    int v11 = *(unsigned __int16 *)((char *)a1 + v9);
    if (*(unsigned __int16 *)((char *)a1 + v9)) {
      goto LABEL_14;
    }
  }
LABEL_22:
  if (v5 >= 0xFE) {
    return __swift_getEnumTagSinglePayload((uint64_t)a1, v5, v4);
  }
  unsigned int v15 = *((unsigned __int8 *)a1 + v6);
  if (v15 < 2) {
    return 0;
  }
  int v16 = (v15 + 2147483646) & 0x7FFFFFFF;
  return (v16 + 1);
}

void sub_22EDAEA38(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7 <= 0xFE) {
    unsigned int v8 = 254;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  uint64_t v10 = v9 + 1;
  char v11 = 8 * (v9 + 1);
  BOOL v12 = a3 >= v8;
  unsigned int v13 = a3 - v8;
  if (v13 != 0 && v12)
  {
    if (v10 <= 3)
    {
      unsigned int v17 = ((v13 + ~(-1 << v11)) >> v11) + 1;
      if (HIWORD(v17))
      {
        int v14 = 4;
      }
      else if (v17 >= 0x100)
      {
        int v14 = 2;
      }
      else
      {
        int v14 = v17 > 1;
      }
    }
    else
    {
      int v14 = 1;
    }
  }
  else
  {
    int v14 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v15 = ~v8 + a2;
    if (v10 < 4)
    {
      int v16 = (v15 >> v11) + 1;
      if (v9 != -1)
      {
        int v18 = v15 & ~(-1 << v11);
        bzero(a1, v9 + 1);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v18;
          a1[2] = BYTE2(v18);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v18;
        }
        else
        {
          *a1 = v18;
        }
      }
    }
    else
    {
      bzero(a1, v9 + 1);
      *(_DWORD *)a1 = v15;
      int v16 = 1;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v16;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v16;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&a1[v10] = v16;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x22EDAEC64);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 < 0xFE)
        {
          a1[v9] = a2 + 1;
        }
        else
        {
          __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v7, v6);
        }
      }
      return;
  }
}

uint64_t sub_22EDAEC8C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EDAECD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268626A88);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22EE7ECE0();
  sub_22EE7E7A0();
  sub_22EE7E7E0();
  swift_release();
  sub_22EE7C810();
  swift_release();
  int v8 = *(unsigned __int8 *)(v2 + *(int *)(a1 + 36));
  sub_22EAEFF0C((uint64_t)v7, a2, &qword_268626A88);
  if (v8) {
    float v9 = 1.0;
  }
  else {
    float v9 = 0.0;
  }
  *(float *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268626A78) + 36)) = v9;
  return sub_22EB0584C((uint64_t)v7, &qword_268626A88);
}

uint64_t sub_22EDAEDFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v45 = sub_22EE7D0B0();
  OUTLINED_FUNCTION_0_2();
  uint64_t v47 = v4;
  MEMORY[0x270FA5388](v5);
  uint64_t v46 = (char *)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + 16);
  v39[0] = a1;
  sub_22EE7CEE0();
  OUTLINED_FUNCTION_0_2();
  v39[2] = v8;
  MEMORY[0x270FA5388](v9);
  sub_22EE7CEE0();
  OUTLINED_FUNCTION_0_2();
  v39[4] = v10;
  MEMORY[0x270FA5388](v11);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686269F8);
  uint64_t v12 = sub_22EE7CEE0();
  OUTLINED_FUNCTION_0_2();
  uint64_t v43 = v13;
  MEMORY[0x270FA5388](v14);
  v39[1] = (char *)v39 - v15;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268626A00);
  v39[3] = v12;
  uint64_t v40 = sub_22EE7CEE0();
  OUTLINED_FUNCTION_0_2();
  uint64_t v44 = v16;
  MEMORY[0x270FA5388](v17);
  uint64_t v41 = (char *)v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v20 = MEMORY[0x270FA5388](v19);
  unint64_t v42 = (char *)v39 - v21;
  uint64_t v22 = *(void *)(a1 + 24);
  MEMORY[0x230FAB9D0](v20);
  unint64_t v23 = sub_22EDAF648();
  uint64_t v59 = v22;
  unint64_t v60 = v23;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_22EB24CF8();
  sub_22EE7E5C0();
  OUTLINED_FUNCTION_5_2();
  v24();
  uint64_t v49 = v7;
  uint64_t v50 = v22;
  uint64_t v51 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268626A10);
  uint64_t v57 = WitnessTable;
  uint64_t v58 = MEMORY[0x263F19100];
  uint64_t v25 = swift_getWitnessTable();
  sub_22EDAF6A0();
  sub_22EB24CF8();
  sub_22EE7E190();
  OUTLINED_FUNCTION_5_2();
  v26();
  if (*(unsigned char *)(v2 + *(int *)(v39[0] + 36)) == 1)
  {
    sub_22EE7D0A0();
  }
  else
  {
    uint64_t v56 = MEMORY[0x263F8EE78];
    sub_22EDAF808();
    __swift_instantiateConcreteTypeFromMangledName(&qword_268626A50);
    sub_22EADDD7C(&qword_268626A58, &qword_268626A50);
    sub_22EE80110();
  }
  uint64_t v27 = sub_22EADDD7C(&qword_268626A60, &qword_2686269F8);
  uint64_t v54 = v25;
  uint64_t v55 = v27;
  uint64_t v28 = swift_getWitnessTable();
  sub_22EDAF858();
  OUTLINED_FUNCTION_1_3();
  uint64_t v29 = v41;
  sub_22EE7E2B0();
  OUTLINED_FUNCTION_5_2();
  v30();
  OUTLINED_FUNCTION_5_2();
  v31();
  uint64_t v32 = sub_22EADDD7C(&qword_268626A70, &qword_268626A00);
  uint64_t v52 = v28;
  uint64_t v53 = v32;
  uint64_t v33 = v40;
  uint64_t v34 = swift_getWitnessTable();
  char v35 = v42;
  sub_22EB69440(v29, v33, v34);
  char v36 = *(void (**)(char *, uint64_t))(v44 + 8);
  v36(v29, v33);
  sub_22EB69440(v35, v33, v34);
  return ((uint64_t (*)(char *, uint64_t))v36)(v35, v33);
}

uint64_t sub_22EDAF404@<X0>(uint64_t a1@<X8>)
{
  uint64_t v19 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_268626A78);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268626A38);
  uint64_t v5 = v4 - 8;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268626A28);
  uint64_t v9 = v8 - 8;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for StructuredScrollViewBottomInset();
  sub_22EDAECD0(v12, (uint64_t)v3);
  sub_22EDAF858();
  sub_22EADDD7C(&qword_268626A80, &qword_268626A78);
  sub_22EAEFF0C((uint64_t)v3, (uint64_t)v7, &qword_268626A78);
  *(_WORD *)&v7[*(int *)(v5 + 64)] = 256;
  sub_22EB0584C((uint64_t)v3, &qword_268626A78);
  sub_22EADDD7C(&qword_268626A30, &qword_268626A38);
  uint64_t v13 = sub_22EE7CF10();
  char v14 = sub_22EE7DE70();
  sub_22EAEFF0C((uint64_t)v7, (uint64_t)v11, &qword_268626A38);
  uint64_t v15 = &v11[*(int *)(v9 + 44)];
  *(void *)uint64_t v15 = v13;
  v15[8] = v14;
  sub_22EB0584C((uint64_t)v7, &qword_268626A38);
  uint64_t v16 = v19;
  sub_22EAEFF0C((uint64_t)v11, v19, &qword_268626A28);
  *(unsigned char *)(v16 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268626A10) + 36)) = 0;
  return sub_22EB0584C((uint64_t)v11, &qword_268626A28);
}

unint64_t sub_22EDAF648()
{
  unint64_t result = qword_268626A08;
  if (!qword_268626A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268626A08);
  }
  return result;
}

uint64_t sub_22EDAF694@<X0>(uint64_t a1@<X8>)
{
  return sub_22EDAF404(a1);
}

unint64_t sub_22EDAF6A0()
{
  unint64_t result = qword_268626A18;
  if (!qword_268626A18)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268626A10);
    sub_22EDAF71C();
    sub_22EDAF7BC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268626A18);
  }
  return result;
}

unint64_t sub_22EDAF71C()
{
  unint64_t result = qword_268626A20;
  if (!qword_268626A20)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268626A28);
    sub_22EADDD7C(&qword_268626A30, &qword_268626A38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268626A20);
  }
  return result;
}

unint64_t sub_22EDAF7BC()
{
  unint64_t result = qword_268626A40;
  if (!qword_268626A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268626A40);
  }
  return result;
}

unint64_t sub_22EDAF808()
{
  unint64_t result = qword_268626A48;
  if (!qword_268626A48)
  {
    sub_22EE7D0B0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268626A48);
  }
  return result;
}

unint64_t sub_22EDAF858()
{
  unint64_t result = qword_268626A68;
  if (!qword_268626A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268626A68);
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentHeightWriterModifier()
{
  return &type metadata for ContentHeightWriterModifier;
}

uint64_t sub_22EDAF8B4()
{
  return swift_getWitnessTable();
}

uint64_t sub_22EDAFA28()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EDAFA44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_22EE7ED70();
  uint64_t v6 = v5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268626A90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_268626A98);
  uint64_t v9 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t (**)(uint64_t)@<X8>))(a2 + *(int *)(result + 36));
  *uint64_t v9 = sub_22EDAFAE8;
  v9[1] = 0;
  void v9[2] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t (**)(uint64_t)@<X8>))v4;
  v9[3] = v6;
  return result;
}

uint64_t sub_22EDAFAE8@<X0>(uint64_t a1@<X0>, uint64_t (**a2)(uint64_t a1)@<X8>)
{
  uint64_t v4 = sub_22EE7CA60();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __n128 v7 = MEMORY[0x270FA5388](v4);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v7);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  *a2 = sub_22EDAFCCC;
  a2[1] = (uint64_t (*)(uint64_t))v9;
  return result;
}

uint64_t sub_22EDAFC14(uint64_t a1)
{
  uint64_t result = sub_22EE7CA30();
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = 0;
  return result;
}

uint64_t sub_22EDAFC48()
{
  sub_22EE7CA60();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_5_2();
  v0();

  return swift_deallocObject();
}

uint64_t sub_22EDAFCCC(uint64_t a1)
{
  sub_22EE7CA60();

  return sub_22EDAFC14(a1);
}

unint64_t sub_22EDAFD40()
{
  unint64_t result = qword_268626AA0;
  if (!qword_268626AA0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268626A98);
    sub_22EADDD7C(&qword_268626AA8, &qword_268626A90);
    sub_22EADDD7C(&qword_26861DD98, &qword_26861DDA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268626AA0);
  }
  return result;
}

uint64_t sub_22EDAFE04()
{
  sub_22EBC5104();

  return sub_22EE7D4B0();
}

uint64_t sub_22EDAFE4C@<X0>(uint64_t a1@<X8>)
{
  memset(v3, 0, sizeof(v3));
  char v4 = -1;
  sub_22ECC5F80();
  return sub_22EDAFEC0((uint64_t)v3, a1);
}

uint64_t sub_22EDAFEC0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  OUTLINED_FUNCTION_4_2();
  (*(void (**)(uint64_t))(v4 + 32))(a2);
  uint64_t v5 = a2 + *(int *)(type metadata accessor for SubscriptionStorePickerItemBackgroundStyleModifier() + 52);
  sub_22EE80040();
  OUTLINED_FUNCTION_4_2();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 32))(v5, a1);
}

uint64_t sub_22EDAFF90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v29 = a1;
  uint64_t v30 = a3;
  OUTLINED_FUNCTION_0_0();
  uint64_t v7 = v6;
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v10);
  swift_getWitnessTable();
  uint64_t v27 = sub_22EE7D9A0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861FB08);
  uint64_t v11 = sub_22EE7CEE0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v28 = v12;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v27 - v17;
  swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v4, a2);
  unint64_t v19 = (*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v20 = swift_allocObject();
  long long v21 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v20 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v20 + 32) = v21;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v20 + v19, (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_22EE7E460();
  swift_release();
  swift_release();
  unint64_t v23 = sub_22EDB0DE4();
  uint64_t v31 = WitnessTable;
  unint64_t v32 = v23;
  uint64_t v24 = swift_getWitnessTable();
  sub_22EB69440(v15, v11, v24);
  uint64_t v25 = *(void (**)(char *, uint64_t))(v28 + 8);
  v25(v15, v11);
  sub_22EB69440(v18, v11, v24);
  return ((uint64_t (*)(char *, uint64_t))v25)(v18, v11);
}

uint64_t sub_22EDB0240()
{
  return sub_22EDAFE04();
}

uint64_t sub_22EDB0264(uint64_t a1)
{
  sub_22EBCA2B4(a1, (uint64_t)v2);
  return sub_22EDB029C((uint64_t)v2);
}

uint64_t sub_22EDB029C(uint64_t a1)
{
  sub_22EBCA2B4(a1, (uint64_t)v3);
  sub_22EBC5104();
  sub_22EE7D4C0();
  return sub_22ECD8E94(a1);
}

uint64_t sub_22EDB02F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = sub_22EE80040();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v20 - v14;
  *((void *)&v21 + 1) = a3;
  uint64_t v22 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v20);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, a2, a3);
  sub_22EDB2498((uint64_t)&v20, a1, &qword_2686239F0);
  *(void *)&long long v20 = a3;
  *((void *)&v20 + 1) = a4;
  *(void *)&long long v21 = a5;
  *((void *)&v21 + 1) = a6;
  uint64_t v17 = type metadata accessor for SubscriptionStorePickerItemBackgroundStyleModifier();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a2 + *(int *)(v17 + 52), v12);
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, a4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    uint64_t v22 = 0;
    long long v20 = 0u;
    long long v21 = 0u;
  }
  else
  {
    *((void *)&v21 + 1) = a4;
    uint64_t v22 = a6;
    uint64_t v18 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v20);
    (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(a4 - 8) + 32))(v18, v15, a4);
  }
  return sub_22EDB2498((uint64_t)&v20, a1 + 80, &qword_26861BEE0);
}

BOOL sub_22EDB04E0()
{
  sub_22EAFC2EC(v0, (uint64_t)v3, &qword_2686239F0);
  BOOL v1 = v4 == 0;
  sub_22ECB225C((uint64_t)v3, &qword_2686239F0);
  return v1;
}

void sub_22EDB0538()
{
}

void *sub_22EDB0548()
{
  if (qword_26861B910 != -1) {
    swift_once();
  }
  return &unk_268626AB0;
}

uint64_t sub_22EDB0594@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_22EDB0548();

  return sub_22EBCA2B4((uint64_t)v2, a1);
}

uint64_t View.automaticSubscriptionStorePickerItemBackgroundInternal<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v22 = a6;
  uint64_t v21 = a5;
  uint64_t v10 = sub_22EE80040();
  OUTLINED_FUNCTION_0_0();
  uint64_t v12 = v11;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v20 - v14;
  swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a1, v10);
  unint64_t v16 = (*(unsigned __int8 *)(v12 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v17 = (char *)swift_allocObject();
  *((void *)v17 + 2) = a2;
  *((void *)v17 + 3) = a3;
  uint64_t v18 = v21;
  *((void *)v17 + 4) = a4;
  *((void *)v17 + 5) = v18;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v17[v16], v15, v10);
  sub_22EE7E460();
  swift_release();
  return swift_release();
}

uint64_t sub_22EDB0738()
{
  return sub_22EDAFE04();
}

uint64_t sub_22EDB0760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = sub_22EE80040();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v23[-1] - v12;
  uint64_t v14 = *(void *)(a4 - 8);
  __n128 v16 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v23[-1] - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))(v13, a2, v10, v16);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, a4) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v20(v18, v13, a4);
  v23[3] = a4;
  v23[4] = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v23);
  v20((char *)boxed_opaque_existential_1, v18, a4);
  return sub_22EDB2498((uint64_t)v23, a1 + 40, &qword_2686239F0);
}

uint64_t sub_22EDB093C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(sub_22EE80040() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  if (!__swift_getEnumTagSinglePayload(v0 + v3, 1, v1))
  {
    OUTLINED_FUNCTION_4_2();
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v3, v1);
  }

  return swift_deallocObject();
}

uint64_t sub_22EDB0A24()
{
  uint64_t v0 = sub_22EE80040();
  OUTLINED_FUNCTION_4_1(v0);
  uint64_t v1 = OUTLINED_FUNCTION_3_30();

  return sub_22EDB0760(v1, v2, v3, v4, v5, v6);
}

uint64_t View.subscriptionStorePickerOptionStrokeInternal<A>(style:lineWidth:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>)
{
  uint64_t v21 = a6;
  OUTLINED_FUNCTION_0_0();
  uint64_t v14 = v13;
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x270FA5388](v17);
  swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a3);
  unint64_t v18 = (*(unsigned __int8 *)(v14 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v19 = (char *)swift_allocObject();
  *((void *)v19 + 2) = a2;
  *((void *)v19 + 3) = a3;
  *((void *)v19 + 4) = a4;
  *((void *)v19 + 5) = a5;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v19[v18], (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), a3);
  *(double *)&v19[(v16 + v18 + 7) & 0xFFFFFFFFFFFFFFF8] = a7;
  sub_22EE7E460();
  swift_release();
  return swift_release();
}

uint64_t sub_22EDB0BF8(uint64_t a1, uint64_t a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v13[3] = a5;
  v13[4] = a7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 16))(boxed_opaque_existential_1, a2, a5);
  *(double *)&v13[5] = a3;
  return sub_22EDB2498((uint64_t)v13, a1 + 120, &qword_268623A10);
}

uint64_t sub_22EDB0C90()
{
  OUTLINED_FUNCTION_4_2();
  (*(void (**)(unint64_t))(v1 + 8))(v0 + ((*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));

  return swift_deallocObject();
}

uint64_t sub_22EDB0D20()
{
  OUTLINED_FUNCTION_0_0();
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_22EDB0BF8(v4, v0 + v2, *(double *)(v0 + ((*(void *)(v3 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8)), v5, v6, v7, v8);
}

uint64_t sub_22EDB0D70()
{
  return swift_getWitnessTable();
}

unint64_t sub_22EDB0DE4()
{
  unint64_t result = qword_26861FB00;
  if (!qword_26861FB00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861FB08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26861FB00);
  }
  return result;
}

uint64_t destroy for SubscriptionPickerOptionBackgroundConfiguration(uint64_t result)
{
  uint64_t v1 = (void *)result;
  if (*(void *)(result + 24)) {
    unint64_t result = __swift_destroy_boxed_opaque_existential_1(result);
  }
  if (v1[8]) {
    unint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)(v1 + 5));
  }
  if (v1[13]) {
    unint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)(v1 + 10));
  }
  if (v1[18])
  {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)(v1 + 15));
  }
  return result;
}

uint64_t initializeWithCopy for SubscriptionPickerOptionBackgroundConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  uint64_t v7 = (_OWORD *)(a1 + 40);
  uint64_t v8 = (_OWORD *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 64);
  if (v9)
  {
    uint64_t v10 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v9;
    *(void *)(a1 + 72) = v10;
    (**(void (***)(_OWORD *, _OWORD *))(v9 - 8))(v7, v8);
  }
  else
  {
    long long v11 = *(_OWORD *)(a2 + 56);
    *uint64_t v7 = *v8;
    *(_OWORD *)(a1 + 56) = v11;
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
  }
  uint64_t v12 = (_OWORD *)(a1 + 80);
  uint64_t v13 = (_OWORD *)(a2 + 80);
  uint64_t v14 = *(void *)(a2 + 104);
  if (v14)
  {
    uint64_t v15 = *(void *)(a2 + 112);
    *(void *)(a1 + 104) = v14;
    *(void *)(a1 + 112) = v15;
    (**(void (***)(_OWORD *, _OWORD *))(v14 - 8))(v12, v13);
  }
  else
  {
    long long v16 = *(_OWORD *)(a2 + 96);
    *uint64_t v12 = *v13;
    *(_OWORD *)(a1 + 96) = v16;
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
  }
  uint64_t v17 = (_OWORD *)(a1 + 120);
  unint64_t v18 = (_OWORD *)(a2 + 120);
  uint64_t v19 = *(void *)(a2 + 144);
  if (v19)
  {
    uint64_t v20 = *(void *)(a2 + 152);
    *(void *)(a1 + 144) = v19;
    *(void *)(a1 + 152) = v20;
    (**(void (***)(_OWORD *, _OWORD *))(v19 - 8))(v17, v18);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
  }
  else
  {
    long long v21 = *(_OWORD *)(a2 + 136);
    *uint64_t v17 = *v18;
    *(_OWORD *)(a1 + 136) = v21;
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  }
  return a1;
}

uint64_t assignWithCopy for SubscriptionPickerOptionBackgroundConfiguration(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 3);
  if (*(void *)(a1 + 24))
  {
    if (v4)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  else if (v4)
  {
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
    goto LABEL_8;
  }
  long long v5 = *a2;
  long long v6 = a2[1];
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  *(_OWORD *)a1 = v5;
  *(_OWORD *)(a1 + 16) = v6;
LABEL_8:
  uint64_t v7 = *((void *)a2 + 8);
  if (*(void *)(a1 + 64))
  {
    if (v7)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 40), (uint64_t *)a2 + 5);
      goto LABEL_15;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  }
  else if (v7)
  {
    *(void *)(a1 + 64) = v7;
    *(void *)(a1 + 72) = *((void *)a2 + 9);
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, (uint64_t)a2 + 40);
    goto LABEL_15;
  }
  long long v8 = *(long long *)((char *)a2 + 40);
  long long v9 = *(long long *)((char *)a2 + 56);
  *(void *)(a1 + 72) = *((void *)a2 + 9);
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v9;
LABEL_15:
  uint64_t v10 = *((void *)a2 + 13);
  if (*(void *)(a1 + 104))
  {
    if (v10)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 80), (uint64_t *)a2 + 10);
      goto LABEL_22;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 80);
  }
  else if (v10)
  {
    *(void *)(a1 + 104) = v10;
    *(void *)(a1 + 112) = *((void *)a2 + 14);
    (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 80, (uint64_t)(a2 + 5));
    goto LABEL_22;
  }
  long long v11 = a2[5];
  long long v12 = a2[6];
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v11;
  *(_OWORD *)(a1 + 96) = v12;
LABEL_22:
  uint64_t v13 = (_OWORD *)(a1 + 120);
  uint64_t v14 = (long long *)((char *)a2 + 120);
  uint64_t v15 = *((void *)a2 + 18);
  if (*(void *)(a1 + 144))
  {
    if (v15)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 120), (uint64_t *)a2 + 15);
      *(void *)(a1 + 160) = *((void *)a2 + 20);
    }
    else
    {
      sub_22ECB225C(a1 + 120, &qword_26861E700);
      long long v17 = *(long long *)((char *)a2 + 136);
      long long v16 = *(long long *)((char *)a2 + 152);
      _OWORD *v13 = *v14;
      *(_OWORD *)(a1 + 136) = v17;
      *(_OWORD *)(a1 + 152) = v16;
    }
  }
  else if (v15)
  {
    *(void *)(a1 + 144) = v15;
    *(void *)(a1 + 152) = *((void *)a2 + 19);
    (**(void (***)(uint64_t, uint64_t))(v15 - 8))(a1 + 120, (uint64_t)a2 + 120);
    *(void *)(a1 + 160) = *((void *)a2 + 20);
  }
  else
  {
    long long v18 = *v14;
    long long v19 = *(long long *)((char *)a2 + 152);
    *(_OWORD *)(a1 + 136) = *(long long *)((char *)a2 + 136);
    *(_OWORD *)(a1 + 152) = v19;
    _OWORD *v13 = v18;
  }
  return a1;
}

void *__swift_memcpy168_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xA8uLL);
}

uint64_t assignWithTake for SubscriptionPickerOptionBackgroundConfiguration(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  if (*(void *)(a1 + 64)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  }
  long long v5 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v5;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  if (*(void *)(a1 + 104)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 80);
  }
  long long v6 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v6;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  uint64_t v7 = (_OWORD *)(a1 + 120);
  long long v8 = (_OWORD *)(a2 + 120);
  if (!*(void *)(a1 + 144)) {
    goto LABEL_11;
  }
  if (!*(void *)(a2 + 144))
  {
    sub_22ECB225C(a1 + 120, &qword_26861E700);
LABEL_11:
    long long v10 = *(_OWORD *)(a2 + 136);
    *uint64_t v7 = *v8;
    *(_OWORD *)(a1 + 136) = v10;
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    return a1;
  }
  __swift_destroy_boxed_opaque_existential_1(a1 + 120);
  long long v9 = *(_OWORD *)(a2 + 136);
  *uint64_t v7 = *v8;
  *(_OWORD *)(a1 + 136) = v9;
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscriptionPickerOptionBackgroundConfiguration(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 168))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 24);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SubscriptionPickerOptionBackgroundConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 168) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 168) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionPickerOptionBackgroundConfiguration()
{
  return &type metadata for SubscriptionPickerOptionBackgroundConfiguration;
}

uint64_t sub_22EDB1474()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_22EE80040();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_22EDB1544(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  long long v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  int v9 = *(_DWORD *)(v7 + 80);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v5 + 64) + v9;
  if (*(_DWORD *)(v7 + 84)) {
    size_t v12 = *(void *)(v7 + 64);
  }
  else {
    size_t v12 = *(void *)(v7 + 64) + 1;
  }
  unint64_t v13 = (v11 & ~(unint64_t)v9) + v12;
  int v14 = *(_DWORD *)(v5 + 80) | v9;
  uint64_t v15 = v14;
  int v16 = v14 & 0x100000;
  if (v15 > 7 || v16 != 0 || v13 > 0x18)
  {
    uint64_t v19 = *a2;
    *long long v4 = *a2;
    long long v4 = (uint64_t *)(v19 + ((v15 + 16) & ~v15));
    swift_retain();
  }
  else
  {
    uint64_t v20 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    long long v21 = (const void *)(((unint64_t)a2 + v11) & v20);
    if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v6))
    {
      memcpy((void *)(((unint64_t)v4 + v11) & v20), v21, v12);
    }
    else
    {
      (*(void (**)(unint64_t, const void *, uint64_t))(v8 + 16))(((unint64_t)v4 + v11) & v20, v21, v6);
      __swift_storeEnumTagSinglePayload(((unint64_t)v4 + v11) & v20, 0, 1, v6);
    }
  }
  return v4;
}

uint64_t sub_22EDB16F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(v5 - 8);
  unint64_t v6 = (*(void *)(v4 + 56) + a1 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t result = __swift_getEnumTagSinglePayload(v6, 1, v5);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(unint64_t, uint64_t))(v9 + 8);
    return v8(v6, v5);
  }
  return result;
}

uint64_t sub_22EDB17E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v6 + 48) + v9;
  uint64_t v11 = (void *)((v10 + a1) & ~v9);
  size_t v12 = (const void *)((v10 + a2) & ~v9);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v7))
  {
    if (*(_DWORD *)(v8 + 84)) {
      size_t v13 = *(void *)(v8 + 64);
    }
    else {
      size_t v13 = *(void *)(v8 + 64) + 1;
    }
    memcpy(v11, v12, v13);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v11, v12, v7);
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_22EDB1900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v6 + 40) + v9;
  uint64_t v11 = (void *)((v10 + a1) & ~v9);
  size_t v12 = (const void *)((v10 + a2) & ~v9);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v7);
  int v14 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v7);
  if (EnumTagSinglePayload)
  {
    if (!v14)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v11, v12, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v7);
      return a1;
    }
    int v15 = *(_DWORD *)(v8 + 84);
    size_t v16 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v14)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 24))(v11, v12, v7);
      return a1;
    }
    long long v18 = *(void (**)(void *, uint64_t))(v8 + 8);
    uint64_t v17 = v8 + 8;
    v18(v11, v7);
    int v15 = *(_DWORD *)(v17 + 76);
    size_t v16 = *(void *)(v17 + 56);
  }
  if (v15) {
    size_t v19 = v16;
  }
  else {
    size_t v19 = v16 + 1;
  }
  memcpy(v11, v12, v19);
  return a1;
}

uint64_t sub_22EDB1A78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v6 + 32) + v9;
  uint64_t v11 = (void *)((v10 + a1) & ~v9);
  size_t v12 = (const void *)((v10 + a2) & ~v9);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v7))
  {
    if (*(_DWORD *)(v8 + 84)) {
      size_t v13 = *(void *)(v8 + 64);
    }
    else {
      size_t v13 = *(void *)(v8 + 64) + 1;
    }
    memcpy(v11, v12, v13);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v11, v12, v7);
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_22EDB1B90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v6 + 24) + v9;
  uint64_t v11 = (void *)((v10 + a1) & ~v9);
  size_t v12 = (const void *)((v10 + a2) & ~v9);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v7);
  int v14 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v7);
  if (EnumTagSinglePayload)
  {
    if (!v14)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v11, v12, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v7);
      return a1;
    }
    int v15 = *(_DWORD *)(v8 + 84);
    size_t v16 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v14)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 40))(v11, v12, v7);
      return a1;
    }
    long long v18 = *(void (**)(void *, uint64_t))(v8 + 8);
    uint64_t v17 = v8 + 8;
    v18(v11, v7);
    int v15 = *(_DWORD *)(v17 + 76);
    size_t v16 = *(void *)(v17 + 56);
  }
  if (v15) {
    size_t v19 = v16;
  }
  else {
    size_t v19 = v16 + 1;
  }
  memcpy(v11, v12, v19);
  return a1;
}

uint64_t sub_22EDB1D08(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(unsigned int *)(*(void *)(v5 - 8) + 84);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v9) {
    unsigned int v10 = v9 - 1;
  }
  else {
    unsigned int v10 = 0;
  }
  if (v10 <= v6) {
    unsigned int v11 = *(_DWORD *)(*(void *)(v5 - 8) + 84);
  }
  else {
    unsigned int v11 = v10;
  }
  uint64_t v12 = *(unsigned __int8 *)(v8 + 80);
  if (v9) {
    uint64_t v13 = *(void *)(*(void *)(v7 - 8) + 64);
  }
  else {
    uint64_t v13 = *(void *)(*(void *)(v7 - 8) + 64) + 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v14 = *(void *)(*(void *)(v5 - 8) + 64) + v12;
  int v15 = a2 - v11;
  if (a2 <= v11) {
    goto LABEL_30;
  }
  uint64_t v16 = v13 + (v14 & ~v12);
  char v17 = 8 * v16;
  if (v16 <= 3)
  {
    unsigned int v19 = ((v15 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      int v18 = *(_DWORD *)((char *)a1 + v16);
      if (!v18) {
        goto LABEL_30;
      }
      goto LABEL_20;
    }
    if (v19 > 0xFF)
    {
      int v18 = *(unsigned __int16 *)((char *)a1 + v16);
      if (!*(unsigned __int16 *)((char *)a1 + v16)) {
        goto LABEL_30;
      }
      goto LABEL_20;
    }
    if (v19 < 2)
    {
LABEL_30:
      if (v11)
      {
        if (v6 >= v10)
        {
          return __swift_getEnumTagSinglePayload((uint64_t)a1, v6, v5);
        }
        else
        {
          unsigned int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(((unint64_t)a1 + v14) & ~v12, v9, v7);
          if (EnumTagSinglePayload >= 2) {
            return EnumTagSinglePayload - 1;
          }
          else {
            return 0;
          }
        }
      }
      return 0;
    }
  }
  int v18 = *((unsigned __int8 *)a1 + v16);
  if (!*((unsigned char *)a1 + v16)) {
    goto LABEL_30;
  }
LABEL_20:
  int v20 = (v18 - 1) << v17;
  if (v16 > 3) {
    int v20 = 0;
  }
  if (v16)
  {
    if (v16 <= 3) {
      int v21 = v16;
    }
    else {
      int v21 = 4;
    }
    switch(v21)
    {
      case 2:
        int v22 = *a1;
        break;
      case 3:
        int v22 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v22 = *(_DWORD *)a1;
        break;
      default:
        int v22 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v22 = 0;
  }
  return v11 + (v22 | v20) + 1;
}

void sub_22EDB1F28(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v8 = *(void *)(a4 + 16);
  uint64_t v7 = *(void *)(a4 + 24);
  uint64_t v9 = *(unsigned int *)(*(void *)(v8 - 8) + 84);
  uint64_t v10 = *(void *)(v7 - 8);
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  unsigned int v12 = v11 - 1;
  if (!v11) {
    unsigned int v12 = 0;
  }
  if (v12 <= v9) {
    unsigned int v13 = *(_DWORD *)(*(void *)(v8 - 8) + 84);
  }
  else {
    unsigned int v13 = v12;
  }
  uint64_t v14 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = *(void *)(*(void *)(v8 - 8) + 64) + v14;
  uint64_t v16 = v15 & ~v14;
  size_t v17 = *(void *)(*(void *)(v7 - 8) + 64);
  if (!v11) {
    ++v17;
  }
  size_t v18 = v16 + v17;
  char v19 = 8 * (v16 + v17);
  BOOL v20 = a3 >= v13;
  unsigned int v21 = a3 - v13;
  if (v21 != 0 && v20)
  {
    if (v18 <= 3)
    {
      unsigned int v22 = ((v21 + ~(-1 << v19)) >> v19) + 1;
      if (HIWORD(v22))
      {
        int v6 = 4;
      }
      else if (v22 >= 0x100)
      {
        int v6 = 2;
      }
      else
      {
        int v6 = v22 > 1;
      }
    }
    else
    {
      int v6 = 1;
    }
  }
  if (v13 < a2)
  {
    unsigned int v23 = ~v13 + a2;
    if (v18 < 4)
    {
      int v24 = (v23 >> v19) + 1;
      if (v18)
      {
        int v25 = v23 & ~(-1 << v19);
        bzero(a1, v16 + v17);
        if (v18 == 3)
        {
          *(_WORD *)a1 = v25;
          a1[2] = BYTE2(v25);
        }
        else if (v18 == 2)
        {
          *(_WORD *)a1 = v25;
        }
        else
        {
          *a1 = v25;
        }
      }
    }
    else
    {
      bzero(a1, v16 + v17);
      *(_DWORD *)a1 = v23;
      int v24 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v18] = v24;
        return;
      case 2:
        *(_WORD *)&a1[v18] = v24;
        return;
      case 3:
        goto LABEL_57;
      case 4:
        *(_DWORD *)&a1[v18] = v24;
        return;
      default:
        return;
    }
  }
  switch(v6)
  {
    case 1:
      a1[v18] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 2:
      *(_WORD *)&a1[v18] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 3:
LABEL_57:
      __break(1u);
      JUMPOUT(0x22EDB2250);
    case 4:
      *(_DWORD *)&a1[v18] = 0;
      goto LABEL_28;
    default:
LABEL_28:
      if (!a2) {
        return;
      }
LABEL_29:
      if (v9 >= v12)
      {
        uint64_t v30 = (uint64_t)a1;
        uint64_t v11 = v9;
        uint64_t v7 = v8;
      }
      else
      {
        uint64_t v26 = (unsigned char *)((unint64_t)&a1[v15] & ~v14);
        if (v12 < a2)
        {
          if (v17 <= 3) {
            int v27 = ~(-1 << (8 * v17));
          }
          else {
            int v27 = -1;
          }
          if (v17)
          {
            int v28 = v27 & (~v12 + a2);
            if (v17 <= 3) {
              int v29 = v17;
            }
            else {
              int v29 = 4;
            }
            bzero(v26, v17);
            switch(v29)
            {
              case 2:
                *(_WORD *)uint64_t v26 = v28;
                break;
              case 3:
                *(_WORD *)uint64_t v26 = v28;
                v26[2] = BYTE2(v28);
                break;
              case 4:
                *(_DWORD *)uint64_t v26 = v28;
                break;
              default:
                *uint64_t v26 = v28;
                break;
            }
          }
          return;
        }
        a2 = (a2 + 1);
        uint64_t v30 = (uint64_t)v26;
      }
      __swift_storeEnumTagSinglePayload(v30, a2, v11, v7);
      return;
  }
}

uint64_t type metadata accessor for SubscriptionStorePickerItemBackgroundStyleModifier()
{
  return swift_getGenericMetadata();
}

uint64_t sub_22EDB22A0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EDB22E4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  long long v8 = *(_OWORD *)(v0 + 24);
  unint64_t v2 = (int *)(type metadata accessor for SubscriptionStorePickerItemBackgroundStyleModifier() - 8);
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80));
  OUTLINED_FUNCTION_4_2();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v1);
  uint64_t v5 = v3 + v2[15];
  if (!__swift_getEnumTagSinglePayload(v5, 1, v8))
  {
    OUTLINED_FUNCTION_4_2();
    (*(void (**)(uint64_t, void))(v6 + 8))(v5, v8);
  }
  return swift_deallocObject();
}

uint64_t sub_22EDB2428()
{
  uint64_t v0 = type metadata accessor for SubscriptionStorePickerItemBackgroundStyleModifier();
  OUTLINED_FUNCTION_4_1(v0);
  uint64_t v1 = OUTLINED_FUNCTION_3_30();

  return sub_22EDB02F0(v1, v2, v3, v4, v5, v6);
}

uint64_t sub_22EDB2498(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_4_2();
  (*(void (**)(uint64_t, uint64_t))(v5 + 40))(a2, a1);
  return a2;
}

ValueMetadata *_s61SubscriptionPickerOptionBackgroundConfigurationEnvironmentKeyOMa()
{
  return &_s61SubscriptionPickerOptionBackgroundConfigurationEnvironmentKeyON;
}

uint64_t sub_22EDB2508()
{
  return swift_getWitnessTable();
}

uint64_t sub_22EDB25DC(uint64_t a1, uint64_t a2)
{
  sub_22EAFC2EC(a2, (uint64_t)v4, &qword_26861FAA8);
  if (v4[3] == 1) {
    return sub_22ECB225C((uint64_t)v4, &qword_26861FAA8);
  }
  memcpy(__dst, v4, sizeof(__dst));
  sub_22EDB2694((uint64_t)__dst, a1);
  sub_22EAFC2EC((uint64_t)&__dst[80], (uint64_t)v4, &qword_26861BEE0);
  sub_22ECD8E94((uint64_t)__dst);
  return sub_22EDB2498((uint64_t)v4, a1 + 80, &qword_26861BEE0);
}

uint64_t sub_22EDB2694(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686239F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_3_30()
{
  return v0;
}

uint64_t sub_22EDB2720()
{
  uint64_t result = type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void *sub_22EDB27FC(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v284 = sub_22EE7F6E0();
  uint64_t v276 = *(void *)(v284 - 8);
  int v3 = *(_DWORD *)(v276 + 80);
  uint64_t v4 = v3;
  uint64_t v261 = v3 + 16;
  uint64_t v5 = *(void *)(v276 + 64);
  uint64_t v264 = sub_22EE7F5D0();
  uint64_t v265 = *(void *)(v264 - 8);
  int v6 = *(_DWORD *)(v265 + 80);
  uint64_t v7 = v3 | 7;
  uint64_t v8 = v7 | v6;
  uint64_t v262 = v8 + v5;
  uint64_t v263 = v6 + 16;
  uint64_t v267 = *(void *)(v265 + 64) + v3;
  uint64_t v270 = v5;
  uint64_t v9 = v5 + 7;
  unint64_t v10 = (v5 + 7 + ((v267 + (v263 & ~(unint64_t)v6)) & ~(unint64_t)v3)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = v10 + 8;
  unint64_t v12 = v10 + 9;
  unint64_t v258 = v11;
  if (v12 <= v11) {
    unint64_t v12 = v11;
  }
  if (v12 <= 2) {
    unint64_t v12 = 2;
  }
  uint64_t v273 = v5 + 7;
  unint64_t v274 = v12;
  unint64_t v13 = v12 + ((v8 + v5 + ((v3 + 16) & ~(unint64_t)v3)) & ~v8);
  unint64_t v14 = v13 + 1;
  unint64_t v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v13 + 1 > v15) {
    unint64_t v16 = v13 + 1;
  }
  else {
    unint64_t v16 = (v9 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v16 <= 0x10) {
    unint64_t v16 = 16;
  }
  unint64_t v17 = v16 + 1;
  unint64_t v275 = v16;
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = sub_22EE7C220();
  int v20 = *(_DWORD *)(*(void *)(v19 - 8) + 80);
  uint64_t v21 = v20;
  unint64_t v22 = ((*(void *)(*(void *)(v19 - 8) + 64)
        + v8
        + ((v18 + v20 + 24) & ~(unint64_t)v20)) & ~v8)
      + v17;
  unint64_t v23 = v22 + v7;
  uint64_t v259 = v3 | 7;
  if (((v22 + v7) & ~v7) + v15 > v22) {
    unint64_t v22 = ((v22 + v7) & ~v7) + v15;
  }
  unint64_t v24 = v14 + v8;
  unint64_t v268 = v17;
  if (v17 + (v24 & ~v8) <= v22) {
    unint64_t v25 = v22;
  }
  else {
    unint64_t v25 = v17 + (v24 & ~v8);
  }
  uint64_t v26 = *(void *)(*(void *)(a3 + 16) - 8);
  int v27 = *(_DWORD *)(v26 + 80);
  uint64_t v28 = v8 | v20 | v27;
  if (v28 == 7
    && ((v6 | v3 | v20 | v27) & 0x100000) == 0
    && *(void *)(v26 + 64)
     + (((v25 & 0xFFFFFFFFFFFFFFF8) + v27 + 24) & ~(unint64_t)v27)
     + 1 <= 0x18)
  {
    int v29 = a2;
    unsigned int v30 = a2[v25];
    unsigned int v31 = v30 - 3;
    if (v30 < 3)
    {
      uint64_t v33 = a1;
    }
    else
    {
      if (v25 <= 3) {
        uint64_t v32 = v25;
      }
      else {
        uint64_t v32 = 4;
      }
      uint64_t v33 = a1;
      switch(v32)
      {
        case 1:
          int v34 = *a2;
          goto LABEL_29;
        case 2:
          int v34 = *(unsigned __int16 *)a2;
          goto LABEL_29;
        case 3:
          int v34 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_29;
        case 4:
          int v34 = *(_DWORD *)a2;
LABEL_29:
          if (v25 < 4) {
            v34 |= v31 << (8 * v25);
          }
          unsigned int v30 = v34 + 3;
          break;
        default:
          break;
      }
    }
    uint64_t v36 = ~v4;
    uint64_t v37 = ~v8;
    unint64_t v38 = ~(unint64_t)v6;
    uint64_t v283 = *(void *)(a3 + 16);
    uint64_t v256 = *(void *)(v26 + 64);
    uint64_t v257 = v26;
    unint64_t v254 = v25;
    uint64_t v255 = v27;
    unint64_t v281 = ~(unint64_t)v27;
    unint64_t v253 = v25 + 1;
    unint64_t v248 = v38;
    if (v30 != 2)
    {
      uint64_t v39 = ~v21;
      uint64_t v252 = *(void *)(*(void *)(v19 - 8) + 64) + v8;
      if (v30 == 1)
      {
        unint64_t v40 = v275;
        unsigned int v41 = a2[v275];
        unsigned int v42 = v41 - 3;
        if (v41 >= 3)
        {
          if (v275 <= 3) {
            uint64_t v43 = v275;
          }
          else {
            uint64_t v43 = 4;
          }
          switch(v43)
          {
            case 1:
              int v44 = *a2;
              goto LABEL_55;
            case 2:
              int v44 = *(unsigned __int16 *)a2;
              goto LABEL_55;
            case 3:
              int v44 = *(unsigned __int16 *)a2 | (a2[2] << 16);
              goto LABEL_55;
            case 4:
              int v44 = *(_DWORD *)a2;
LABEL_55:
              if (v275 < 4) {
                unsigned int v41 = (v44 | (v42 << (8 * v275))) + 3;
              }
              else {
                unsigned int v41 = v44 + 3;
              }
              break;
            default:
              break;
          }
        }
        unint64_t v246 = v23;
        uint64_t v247 = v19;
        if (v41 == 2)
        {
          uint64_t v75 = v276;
          uint64_t v76 = *(void *)(v19 - 8);
          uint64_t v77 = v21;
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v276 + 16))(v33, a2, v284);
          uint64_t v78 = v77;
          uint64_t v79 = v76;
          *(_OWORD *)(((unint64_t)v33 + v270 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&a2[v270 + 7] & 0xFFFFFFFFFFFFFFF8);
          char v80 = 2;
        }
        else
        {
          if (v41 != 1)
          {
            uint64_t v81 = v21;
            uint64_t v82 = *(void *)(v19 - 8);
            uint64_t v83 = *((void *)a2 + 1);
            *uint64_t v33 = *(void *)a2;
            v33[1] = v83;
            *((unsigned char *)v33 + v275) = 0;
            swift_bridgeObjectRetain();
            uint64_t v75 = v276;
            uint64_t v79 = v82;
            uint64_t v78 = v81;
            goto LABEL_133;
          }
          uint64_t v249 = ~v21;
          uint64_t v242 = v21;
          uint64_t v244 = *(void *)(v19 - 8);
          uint64_t v61 = *((void *)a2 + 1);
          *uint64_t v33 = *(void *)a2;
          v33[1] = v61;
          uint64_t v62 = &a2[v4];
          uint64_t v63 = ((unint64_t)v33 + v4 + 16) & v36;
          uint64_t v64 = v36;
          uint64_t v65 = (unint64_t)(v62 + 16) & v36;
          uint64_t v66 = *(void (**)(unint64_t, unint64_t, uint64_t))(v276 + 16);
          swift_bridgeObjectRetain();
          v241 = v66;
          v66(v63, v65, v284);
          uint64_t v67 = v270 + v8;
          uint64_t v68 = (v63 + v270 + v8) & v37;
          uint64_t v69 = (unsigned __int8 *)((v65 + v67) & v37);
          unint64_t v70 = v274;
          unsigned int v71 = v69[v274];
          unsigned int v72 = v71 - 4;
          if (v71 >= 4)
          {
            if (v274 <= 3) {
              uint64_t v73 = v274;
            }
            else {
              uint64_t v73 = 4;
            }
            switch(v73)
            {
              case 1:
                int v74 = *v69;
                goto LABEL_122;
              case 2:
                int v74 = *(unsigned __int16 *)v69;
                goto LABEL_122;
              case 3:
                int v74 = *(unsigned __int16 *)v69 | (v69[2] << 16);
                goto LABEL_122;
              case 4:
                int v74 = *(_DWORD *)v69;
LABEL_122:
                if (v274 < 4) {
                  unsigned int v71 = (v74 | (v72 << (8 * v274))) + 4;
                }
                else {
                  unsigned int v71 = v74 + 4;
                }
                break;
              default:
                break;
            }
          }
          switch(v71)
          {
            case 1u:
              *(unsigned char *)uint64_t v68 = *v69;
              char v137 = 1;
              goto LABEL_128;
            case 2u:
              *(void *)uint64_t v68 = *(void *)v69;
              *(void *)(v68 + 8) = *((void *)v69 + 1);
              unint64_t v138 = (v263 + v68) & v38;
              unint64_t v139 = (unint64_t)&v69[v263] & v38;
              uint64_t v140 = *(void (**)(unint64_t, unint64_t, uint64_t))(v265 + 16);
              swift_bridgeObjectRetain();
              v140(v138, v139, v264);
              int v29 = a2;
              unint64_t v141 = (v267 + v138) & v64;
              unint64_t v142 = (v267 + v139) & v64;
              v241(v141, v142, v284);
              unint64_t v70 = v274;
              *(void *)((v273 + v141) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v273 + v142) & 0xFFFFFFFFFFFFFFF8);
              unsigned __int8 v143 = v69[v258];
              uint64_t v36 = v64;
              *(unsigned char *)(v258 + v68) = v143;
              char v137 = 2;
              break;
            case 3u:
              *(void *)uint64_t v68 = *(void *)v69;
              *(void *)(v68 + 8) = *((void *)v69 + 1);
              unint64_t v144 = (v263 + v68) & v38;
              unint64_t v145 = (unint64_t)&v69[v263] & v38;
              uint64_t v146 = *(void (**)(unint64_t, unint64_t, uint64_t))(v265 + 16);
              swift_bridgeObjectRetain();
              v146(v144, v145, v264);
              int v29 = a2;
              uint64_t v36 = v64;
              unint64_t v147 = (v267 + v144) & v64;
              unint64_t v148 = (v267 + v145) & v64;
              v241(v147, v148, v284);
              unint64_t v70 = v274;
              *(void *)((v273 + v147) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v273 + v148) & 0xFFFFFFFFFFFFFFF8);
              char v137 = 3;
              break;
            default:
              char v137 = 0;
              *(_WORD *)uint64_t v68 = *(_WORD *)v69;
LABEL_128:
              uint64_t v36 = v64;
              break;
          }
          uint64_t v78 = v242;
          uint64_t v79 = v244;
          uint64_t v39 = v249;
          *(unsigned char *)(v68 + v70) = v137;
          char v80 = 1;
          unint64_t v40 = v275;
          uint64_t v75 = v276;
        }
        *((unsigned char *)v33 + v40) = v80;
LABEL_133:
        v271 = (char *)v33 + 7;
        v149 = (void *)(((unint64_t)v33 + v268 + 7) & 0xFFFFFFFFFFFFFFF8);
        v251 = v29 + 7;
        uint64_t v150 = (void *)((unint64_t)&v29[v268 + 7] & 0xFFFFFFFFFFFFFFF8);
        void *v149 = *v150;
        v149[1] = v150[1];
        uint64_t v151 = ((unint64_t)v149 + v78 + 16) & v39;
        uint64_t v152 = ((unint64_t)v150 + v78 + 16) & v39;
        uint64_t v153 = *(void (**)(uint64_t, uint64_t, uint64_t))(v79 + 16);
        swift_bridgeObjectRetain();
        v153(v151, v152, v247);
        v154 = (void *)((v252 + v151) & v37);
        uint64_t v155 = (unsigned __int8 *)((v252 + v152) & v37);
        unsigned int v156 = v155[v40];
        unsigned int v157 = v156 - 3;
        if (v156 >= 3)
        {
          if (v40 <= 3) {
            uint64_t v158 = v40;
          }
          else {
            uint64_t v158 = 4;
          }
          switch(v158)
          {
            case 1:
              int v159 = *v155;
              goto LABEL_142;
            case 2:
              int v159 = *(unsigned __int16 *)v155;
              goto LABEL_142;
            case 3:
              int v159 = *(unsigned __int16 *)v155 | (*(unsigned __int8 *)(((v252 + v152) & v37) + 2) << 16);
              goto LABEL_142;
            case 4:
              int v159 = *(_DWORD *)v155;
LABEL_142:
              if (v40 < 4) {
                unsigned int v156 = (v159 | (v157 << (8 * v40))) + 3;
              }
              else {
                unsigned int v156 = v159 + 3;
              }
              break;
            default:
              break;
          }
        }
        uint64_t v160 = ~v259;
        if (v156 == 2)
        {
          unint64_t v171 = v40;
          unint64_t v163 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v75 + 16);
          v163(v154, v155, v284);
          *(_OWORD *)(((unint64_t)v154 + v273) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v155[v273] & 0xFFFFFFFFFFFFFFF8);
          *((unsigned char *)v154 + v171) = 2;
        }
        else
        {
          if (v156 == 1)
          {
            void *v154 = *(void *)v155;
            v154[1] = *(void *)(((v252 + v152) & v37) + 8);
            unint64_t v161 = ((unint64_t)v154 + v261) & v36;
            unint64_t v162 = (unint64_t)&v155[v261] & v36;
            unint64_t v163 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v75 + 16);
            swift_bridgeObjectRetain();
            v163((void *)v161, (unsigned __int8 *)v162, v284);
            unint64_t v164 = (v262 + v161) & v37;
            uint64_t v165 = (unsigned __int8 *)((v262 + v162) & v37);
            unint64_t v166 = v274;
            unsigned int v167 = v165[v274];
            unsigned int v168 = v167 - 4;
            if (v167 >= 4)
            {
              if (v274 <= 3) {
                uint64_t v169 = v274;
              }
              else {
                uint64_t v169 = 4;
              }
              switch(v169)
              {
                case 1:
                  int v170 = *v165;
                  goto LABEL_206;
                case 2:
                  int v170 = *(unsigned __int16 *)v165;
                  goto LABEL_206;
                case 3:
                  int v170 = *(unsigned __int16 *)v165 | (v165[2] << 16);
                  goto LABEL_206;
                case 4:
                  int v170 = *(_DWORD *)v165;
LABEL_206:
                  int v215 = (v170 | (v168 << (8 * v274))) + 4;
                  unsigned int v167 = v170 + 4;
                  if (v274 < 4) {
                    unsigned int v167 = v215;
                  }
                  break;
                default:
                  break;
              }
            }
            switch(v167)
            {
              case 1u:
                *(unsigned char *)unint64_t v164 = *v165;
                char v216 = 1;
                break;
              case 2u:
                *(void *)unint64_t v164 = *(void *)v165;
                *(void *)(v164 + 8) = *((void *)v165 + 1);
                uint64_t v217 = (v263 + v164) & v248;
                v266 = *(void (**)(uint64_t, unint64_t, uint64_t))(v265 + 16);
                swift_bridgeObjectRetain();
                unint64_t v218 = (unint64_t)&v165[v263] & v248;
                v266(v217, v218, v264);
                uint64_t v219 = (v267 + v217) & v36;
                v163((void *)v219, (unsigned __int8 *)((v267 + v218) & v36), v284);
                unint64_t v166 = v274;
                *(void *)((v273 + v219) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v273 + ((v267 + v218) & v36)) & 0xFFFFFFFFFFFFFFF8);
                *(unsigned char *)(v164 + v258) = v165[v258];
                char v216 = 2;
                break;
              case 3u:
                *(void *)unint64_t v164 = *(void *)v165;
                *(void *)(v164 + 8) = *((void *)v165 + 1);
                uint64_t v220 = (v263 + v164) & v248;
                unint64_t v221 = (unint64_t)&v165[v263] & v248;
                v279 = *(void (**)(uint64_t, unint64_t, uint64_t))(v265 + 16);
                swift_bridgeObjectRetain();
                v279(v220, v221, v264);
                uint64_t v222 = (v267 + v220) & v36;
                v163((void *)v222, (unsigned __int8 *)((v267 + v221) & v36), v284);
                unint64_t v166 = v274;
                *(void *)((v273 + v222) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v273 + ((v267 + v221) & v36)) & 0xFFFFFFFFFFFFFFF8);
                char v216 = 3;
                break;
              default:
                char v216 = 0;
                *(_WORD *)unint64_t v164 = *(_WORD *)v165;
                break;
            }
            unint64_t v172 = v246;
            *(unsigned char *)(v164 + v166) = v216;
            *((unsigned char *)v154 + v275) = 1;
            int v29 = a2;
            goto LABEL_214;
          }
          void *v154 = *(void *)v155;
          v154[1] = *(void *)(((v252 + v152) & v37) + 8);
          *((unsigned char *)v154 + v40) = 0;
          unint64_t v163 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v75 + 16);
          swift_bridgeObjectRetain();
        }
        unint64_t v172 = v246;
LABEL_214:
        unint64_t v223 = ((unint64_t)v33 + v172) & v160;
        unint64_t v224 = (unint64_t)&v29[v172] & v160;
        v163((void *)v223, (unsigned __int8 *)v224, v284);
        *(_OWORD *)((v273 + v223) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v273 + v224) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v113 = v255;
        *((unsigned char *)v33 + v254) = 1;
        unint64_t v114 = v281;
        unint64_t v115 = v253;
LABEL_227:
        long long v180 = v271;
        v181 = v251;
        goto LABEL_228;
      }
      unint64_t v56 = v275;
      unsigned int v57 = a2[v275];
      unsigned int v58 = v57 - 3;
      if (v57 >= 3)
      {
        if (v275 <= 3) {
          uint64_t v59 = v275;
        }
        else {
          uint64_t v59 = 4;
        }
        switch(v59)
        {
          case 1:
            int v60 = *a2;
            goto LABEL_106;
          case 2:
            int v60 = *(unsigned __int16 *)a2;
            goto LABEL_106;
          case 3:
            int v60 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_106;
          case 4:
            int v60 = *(_DWORD *)a2;
LABEL_106:
            if (v275 < 4) {
              unsigned int v57 = (v60 | (v58 << (8 * v275))) + 3;
            }
            else {
              unsigned int v57 = v60 + 3;
            }
            break;
          default:
            break;
        }
      }
      if (v57 == 2)
      {
        uint64_t v116 = v19;
        uint64_t v129 = v276;
        uint64_t v130 = *(void *)(v19 - 8);
        uint64_t v131 = v21;
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v276 + 16))(v33, a2, v284);
        uint64_t v132 = v131;
        uint64_t v133 = v130;
        *(_OWORD *)(((unint64_t)v33 + v270 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&a2[v270 + 7] & 0xFFFFFFFFFFFFFFF8);
        *((unsigned char *)v33 + v275) = 2;
      }
      else
      {
        uint64_t v250 = ~v21;
        if (v57 == 1)
        {
          uint64_t v243 = v21;
          uint64_t v245 = *(void *)(v19 - 8);
          uint64_t v116 = v19;
          uint64_t v117 = *((void *)a2 + 1);
          *uint64_t v33 = *(void *)a2;
          v33[1] = v117;
          uint64_t v118 = &a2[v4];
          uint64_t v119 = ((unint64_t)v33 + v4 + 16) & v36;
          uint64_t v120 = (unint64_t)(v118 + 16) & v36;
          v121 = *(void (**)(unint64_t, unint64_t, uint64_t))(v276 + 16);
          swift_bridgeObjectRetain();
          v260 = v121;
          v121(v119, v120, v284);
          uint64_t v122 = (v119 + v270 + v8) & v37;
          uint64_t v123 = (unsigned __int8 *)((v120 + v270 + v8) & v37);
          unint64_t v124 = v274;
          unsigned int v125 = v123[v274];
          unsigned int v126 = v125 - 4;
          if (v125 >= 4)
          {
            if (v274 <= 3) {
              uint64_t v127 = v274;
            }
            else {
              uint64_t v127 = 4;
            }
            switch(v127)
            {
              case 1:
                int v128 = *v123;
                goto LABEL_172;
              case 2:
                int v128 = *(unsigned __int16 *)v123;
                goto LABEL_172;
              case 3:
                int v128 = *(unsigned __int16 *)v123 | (v123[2] << 16);
                goto LABEL_172;
              case 4:
                int v128 = *(_DWORD *)v123;
LABEL_172:
                if (v274 < 4) {
                  unsigned int v125 = (v128 | (v126 << (8 * v274))) + 4;
                }
                else {
                  unsigned int v125 = v128 + 4;
                }
                break;
              default:
                break;
            }
          }
          switch(v125)
          {
            case 1u:
              *(unsigned char *)uint64_t v122 = *v123;
              char v182 = 1;
              break;
            case 2u:
              *(void *)uint64_t v122 = *(void *)v123;
              *(void *)(v122 + 8) = *((void *)v123 + 1);
              unint64_t v183 = (v263 + v122) & v38;
              unint64_t v184 = (unint64_t)&v123[v263] & v38;
              v272 = *(void (**)(unint64_t, unint64_t, uint64_t))(v265 + 16);
              swift_bridgeObjectRetain();
              v272(v183, v184, v264);
              unint64_t v185 = (v267 + v183) & v36;
              unint64_t v186 = (v267 + v184) & v36;
              v260(v185, v186, v284);
              unint64_t v124 = v274;
              *(void *)((v273 + v185) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v273 + v186) & 0xFFFFFFFFFFFFFFF8);
              *(unsigned char *)(v258 + v122) = v123[v258];
              char v182 = 2;
              break;
            case 3u:
              *(void *)uint64_t v122 = *(void *)v123;
              *(void *)(v122 + 8) = *((void *)v123 + 1);
              unint64_t v187 = (v263 + v122) & v38;
              unint64_t v188 = (unint64_t)&v123[v263] & v38;
              uint64_t v189 = *(void (**)(unint64_t, unint64_t, uint64_t))(v265 + 16);
              swift_bridgeObjectRetain();
              v189(v187, v188, v264);
              unint64_t v190 = (v267 + v187) & v36;
              unint64_t v191 = (v267 + v188) & v36;
              v260(v190, v191, v284);
              unint64_t v124 = v274;
              *(void *)((v273 + v190) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v273 + v191) & 0xFFFFFFFFFFFFFFF8);
              char v182 = 3;
              break;
            default:
              char v182 = 0;
              *(_WORD *)uint64_t v122 = *(_WORD *)v123;
              break;
          }
          uint64_t v132 = v243;
          uint64_t v133 = v245;
          uint64_t v39 = v250;
          *(unsigned char *)(v122 + v124) = v182;
          unint64_t v56 = v275;
          uint64_t v129 = v276;
          *((unsigned char *)v33 + v275) = 1;
          int v29 = a2;
        }
        else
        {
          uint64_t v134 = v21;
          uint64_t v135 = *(void *)(v19 - 8);
          uint64_t v116 = v19;
          uint64_t v136 = *((void *)a2 + 1);
          *uint64_t v33 = *(void *)a2;
          v33[1] = v136;
          *((unsigned char *)v33 + v275) = 0;
          swift_bridgeObjectRetain();
          uint64_t v129 = v276;
          uint64_t v133 = v135;
          uint64_t v132 = v134;
          uint64_t v39 = v250;
        }
      }
      v271 = (char *)v33 + 7;
      uint64_t v192 = (void *)(((unint64_t)v33 + v268 + 7) & 0xFFFFFFFFFFFFFFF8);
      v251 = v29 + 7;
      uint64_t v193 = (void *)((unint64_t)&v29[v268 + 7] & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v192 = *v193;
      v192[1] = v193[1];
      uint64_t v194 = ((unint64_t)v192 + v132 + 16) & v39;
      uint64_t v195 = ((unint64_t)v193 + v132 + 16) & v39;
      uint64_t v196 = *(void (**)(uint64_t, uint64_t, uint64_t))(v133 + 16);
      swift_bridgeObjectRetain();
      v196(v194, v195, v116);
      uint64_t v197 = (void *)((v252 + v194) & v37);
      v198 = (unsigned __int8 *)((v252 + v195) & v37);
      unsigned int v199 = v198[v56];
      unsigned int v200 = v199 - 3;
      if (v199 >= 3)
      {
        if (v56 <= 3) {
          uint64_t v201 = v56;
        }
        else {
          uint64_t v201 = 4;
        }
        switch(v201)
        {
          case 1:
            int v202 = *v198;
            goto LABEL_190;
          case 2:
            int v202 = *(unsigned __int16 *)v198;
            goto LABEL_190;
          case 3:
            int v202 = *(unsigned __int16 *)v198 | (*(unsigned __int8 *)(((v252 + v195) & v37) + 2) << 16);
            goto LABEL_190;
          case 4:
            int v202 = *(_DWORD *)v198;
LABEL_190:
            int v203 = (v202 | (v200 << (8 * v56))) + 3;
            unsigned int v199 = v202 + 3;
            if (v56 < 4) {
              unsigned int v199 = v203;
            }
            break;
          default:
            break;
        }
      }
      if (v199 == 2)
      {
        (*(void (**)(void *, uint64_t, uint64_t))(v129 + 16))(v197, (v252 + v195) & v37, v284);
        *(_OWORD *)(((unint64_t)v197 + v273) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v198[v273] & 0xFFFFFFFFFFFFFFF8);
        *((unsigned char *)v197 + v56) = 2;
      }
      else
      {
        if (v199 == 1)
        {
          *uint64_t v197 = *(void *)v198;
          v197[1] = *(void *)(((v252 + v195) & v37) + 8);
          unint64_t v204 = ((unint64_t)v197 + v261) & v36;
          unint64_t v205 = (unint64_t)&v198[v261] & v36;
          uint64_t v206 = *(void (**)(unint64_t, unint64_t, uint64_t))(v129 + 16);
          swift_bridgeObjectRetain();
          v206(v204, v205, v284);
          unint64_t v207 = (v262 + v204) & v37;
          uint64_t v208 = (unsigned __int8 *)((v262 + v205) & v37);
          unint64_t v209 = v274;
          unsigned int v210 = v208[v274];
          unsigned int v211 = v210 - 4;
          if (v210 >= 4)
          {
            if (v274 <= 3) {
              uint64_t v212 = v274;
            }
            else {
              uint64_t v212 = 4;
            }
            switch(v212)
            {
              case 1:
                int v213 = *v208;
                goto LABEL_218;
              case 2:
                int v213 = *(unsigned __int16 *)v208;
                goto LABEL_218;
              case 3:
                int v213 = *(unsigned __int16 *)v208 | (v208[2] << 16);
                goto LABEL_218;
              case 4:
                int v213 = *(_DWORD *)v208;
LABEL_218:
                int v225 = (v213 | (v211 << (8 * v274))) + 4;
                unsigned int v210 = v213 + 4;
                if (v274 < 4) {
                  unsigned int v210 = v225;
                }
                break;
              default:
                break;
            }
          }
          switch(v210)
          {
            case 1u:
              *(unsigned char *)unint64_t v207 = *v208;
              char v226 = 1;
              break;
            case 2u:
              *(void *)unint64_t v207 = *(void *)v208;
              *(void *)(v207 + 8) = *((void *)v208 + 1);
              uint64_t v227 = (v263 + v207) & v248;
              unint64_t v228 = (unint64_t)&v208[v263] & v248;
              v229 = *(void (**)(uint64_t, unint64_t, uint64_t))(v265 + 16);
              swift_bridgeObjectRetain();
              v229(v227, v228, v264);
              uint64_t v230 = (v267 + v227) & v36;
              v206(v230, (v267 + v228) & v36, v284);
              unint64_t v209 = v274;
              *(void *)((v273 + v230) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v273 + ((v267 + v228) & v36)) & 0xFFFFFFFFFFFFFFF8);
              *(unsigned char *)(v207 + v258) = v208[v258];
              char v226 = 2;
              break;
            case 3u:
              *(void *)unint64_t v207 = *(void *)v208;
              *(void *)(v207 + 8) = *((void *)v208 + 1);
              uint64_t v231 = (v263 + v207) & v248;
              unint64_t v232 = (unint64_t)&v208[v263] & v248;
              uint64_t v233 = *(void (**)(uint64_t, unint64_t, uint64_t))(v265 + 16);
              swift_bridgeObjectRetain();
              v233(v231, v232, v264);
              uint64_t v234 = (v267 + v231) & v36;
              v206(v234, (v267 + v232) & v36, v284);
              unint64_t v209 = v274;
              *(void *)((v273 + v234) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v273 + ((v267 + v232) & v36)) & 0xFFFFFFFFFFFFFFF8);
              char v226 = 3;
              break;
            default:
              char v226 = 0;
              *(_WORD *)unint64_t v207 = *(_WORD *)v208;
              break;
          }
          unint64_t v214 = v254;
          uint64_t v113 = v255;
          unint64_t v114 = v281;
          unint64_t v115 = v253;
          *(unsigned char *)(v207 + v209) = v226;
          *((unsigned char *)v197 + v275) = 1;
          goto LABEL_226;
        }
        *uint64_t v197 = *(void *)v198;
        v197[1] = *(void *)(((v252 + v195) & v37) + 8);
        *((unsigned char *)v197 + v56) = 0;
        swift_bridgeObjectRetain();
      }
      unint64_t v214 = v254;
      uint64_t v113 = v255;
      unint64_t v114 = v281;
      unint64_t v115 = v253;
LABEL_226:
      *((unsigned char *)v33 + v214) = 0;
      goto LABEL_227;
    }
    uint64_t v45 = *((void *)a2 + 1);
    *uint64_t v33 = *(void *)a2;
    v33[1] = v45;
    uint64_t v46 = ((unint64_t)v33 + v4 + 16) & v36;
    uint64_t v47 = (unint64_t)&a2[v4 + 16] & v36;
    uint64_t v48 = *(void (**)(unint64_t, unint64_t, uint64_t))(v276 + 16);
    swift_bridgeObjectRetain();
    v269 = v48;
    v48(v46, v47, v284);
    uint64_t v49 = (unsigned char *)((v46 + v270 + v8) & v37);
    uint64_t v50 = (unsigned __int8 *)((v47 + v270 + v8) & v37);
    unint64_t v51 = v274;
    unsigned int v52 = v50[v274];
    unsigned int v53 = v52 - 4;
    if (v52 >= 4)
    {
      if (v274 <= 3) {
        uint64_t v54 = v274;
      }
      else {
        uint64_t v54 = 4;
      }
      switch(v54)
      {
        case 1:
          int v55 = *v50;
          goto LABEL_71;
        case 2:
          int v55 = *(unsigned __int16 *)v50;
          goto LABEL_71;
        case 3:
          int v55 = *(unsigned __int16 *)v50 | (*(unsigned __int8 *)(((v47 + v270 + v8) & v37) + 2) << 16);
          goto LABEL_71;
        case 4:
          int v55 = *(_DWORD *)v50;
LABEL_71:
          if (v274 < 4) {
            unsigned int v52 = (v55 | (v53 << (8 * v274))) + 4;
          }
          else {
            unsigned int v52 = v55 + 4;
          }
          break;
        default:
          break;
      }
    }
    switch(v52)
    {
      case 1u:
        *uint64_t v49 = *v50;
        char v84 = 1;
        break;
      case 2u:
        *(void *)uint64_t v49 = *(void *)v50;
        *(void *)(((v46 + v270 + v8) & v37) + 8) = *(void *)(((v47 + v270 + v8) & v37) + 8);
        unint64_t v85 = (unint64_t)&v49[v263] & v38;
        unint64_t v86 = (unint64_t)&v50[v263] & v38;
        uint64_t v87 = v36;
        uint64_t v88 = *(void (**)(unint64_t, unint64_t, uint64_t))(v265 + 16);
        swift_bridgeObjectRetain();
        v88(v85, v86, v264);
        uint64_t v36 = v87;
        unint64_t v89 = (v267 + v85) & v87;
        unint64_t v90 = (v267 + v86) & v87;
        v269(v89, v90, v284);
        unint64_t v51 = v274;
        *(void *)((v273 + v89) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v273 + v90) & 0xFFFFFFFFFFFFFFF8);
        v49[v258] = v50[v258];
        char v84 = 2;
        break;
      case 3u:
        *(void *)uint64_t v49 = *(void *)v50;
        *(void *)(((v46 + v270 + v8) & v37) + 8) = *(void *)(((v47 + v270 + v8) & v37) + 8);
        unint64_t v91 = (unint64_t)&v49[v263] & v38;
        unint64_t v92 = (unint64_t)&v50[v263] & v38;
        uint64_t v93 = *(void (**)(unint64_t, unint64_t, uint64_t))(v265 + 16);
        swift_bridgeObjectRetain();
        v93(v91, v92, v264);
        unint64_t v94 = (v267 + v91) & v36;
        unint64_t v95 = (v267 + v92) & v36;
        v269(v94, v95, v284);
        unint64_t v51 = v274;
        *(void *)((v273 + v94) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v273 + v95) & 0xFFFFFFFFFFFFFFF8);
        char v84 = 3;
        break;
      default:
        char v84 = 0;
        *(_WORD *)uint64_t v49 = *(_WORD *)v50;
        break;
    }
    v49[v51] = v84;
    v96 = (void *)(((unint64_t)v33 + v24) & v37);
    v97 = a2;
    uint64_t v98 = (unsigned __int8 *)((unint64_t)&a2[v24] & v37);
    unsigned int v99 = v98[v275];
    unsigned int v100 = v99 - 3;
    if (v99 >= 3)
    {
      if (v275 <= 3) {
        uint64_t v101 = v275;
      }
      else {
        uint64_t v101 = 4;
      }
      switch(v101)
      {
        case 1:
          int v102 = *v98;
          goto LABEL_90;
        case 2:
          int v102 = *(unsigned __int16 *)v98;
          goto LABEL_90;
        case 3:
          int v102 = *(unsigned __int16 *)v98 | (*(unsigned __int8 *)(((unint64_t)&a2[v24] & v37) + 2) << 16);
          goto LABEL_90;
        case 4:
          int v102 = *(_DWORD *)v98;
LABEL_90:
          if (v275 < 4) {
            unsigned int v99 = (v102 | (v100 << (8 * v275))) + 3;
          }
          else {
            unsigned int v99 = v102 + 3;
          }
          break;
        default:
          break;
      }
    }
    if (v99 == 2)
    {
      v269(((unint64_t)v33 + v24) & v37, (unint64_t)&a2[v24] & v37, v284);
      *(_OWORD *)(((unint64_t)v96 + v273) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v98[v273] & 0xFFFFFFFFFFFFFFF8);
      *((unsigned char *)v96 + v275) = 2;
    }
    else
    {
      if (v99 == 1)
      {
        void *v96 = *(void *)v98;
        *(void *)((((unint64_t)v33 + v24) & v37) + 8) = *(void *)(((unint64_t)&a2[v24] & v37) + 8);
        unint64_t v103 = ((unint64_t)v96 + v261) & v36;
        unint64_t v104 = (unint64_t)&v98[v261] & v36;
        swift_bridgeObjectRetain();
        v269(v103, v104, v284);
        unint64_t v105 = v274;
        unint64_t v106 = (v262 + v103) & v37;
        uint64_t v107 = (unsigned __int8 *)((v262 + v104) & v37);
        unsigned int v108 = v107[v274];
        unsigned int v109 = v108 - 4;
        if (v108 >= 4)
        {
          if (v274 <= 3) {
            uint64_t v110 = v274;
          }
          else {
            uint64_t v110 = 4;
          }
          switch(v110)
          {
            case 1:
              int v111 = *v107;
              goto LABEL_159;
            case 2:
              int v111 = *(unsigned __int16 *)v107;
              goto LABEL_159;
            case 3:
              int v111 = *(unsigned __int16 *)v107 | (v107[2] << 16);
              goto LABEL_159;
            case 4:
              int v111 = *(_DWORD *)v107;
LABEL_159:
              if (v274 < 4) {
                unsigned int v108 = (v111 | (v109 << (8 * v274))) + 4;
              }
              else {
                unsigned int v108 = v111 + 4;
              }
              break;
            default:
              break;
          }
        }
        switch(v108)
        {
          case 1u:
            *(unsigned char *)unint64_t v106 = *v107;
            char v173 = 1;
            break;
          case 2u:
            *(void *)unint64_t v106 = *(void *)v107;
            *(void *)(v106 + 8) = *((void *)v107 + 1);
            uint64_t v174 = (v263 + v106) & v248;
            unint64_t v175 = (unint64_t)&v107[v263] & v248;
            v277 = *(void (**)(uint64_t, unint64_t, uint64_t))(v265 + 16);
            swift_bridgeObjectRetain();
            v277(v174, v175, v264);
            v97 = a2;
            uint64_t v176 = (v267 + v174) & v36;
            v269(v176, (v267 + v175) & v36, v284);
            unint64_t v105 = v274;
            *(void *)((v273 + v176) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v273 + ((v267 + v175) & v36)) & 0xFFFFFFFFFFFFFFF8);
            *(unsigned char *)(v106 + v258) = v107[v258];
            char v173 = 2;
            break;
          case 3u:
            *(void *)unint64_t v106 = *(void *)v107;
            *(void *)(v106 + 8) = *((void *)v107 + 1);
            uint64_t v177 = (v263 + v106) & v248;
            unint64_t v178 = (unint64_t)&v107[v263] & v248;
            v278 = *(void (**)(uint64_t, unint64_t, uint64_t))(v265 + 16);
            swift_bridgeObjectRetain();
            v278(v177, v178, v264);
            uint64_t v179 = (v267 + v177) & v36;
            v269(v179, (v267 + v178) & v36, v284);
            unint64_t v105 = v274;
            *(void *)((v273 + v179) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v273 + ((v267 + v178) & v36)) & 0xFFFFFFFFFFFFFFF8);
            char v173 = 3;
            break;
          default:
            char v173 = 0;
            *(_WORD *)unint64_t v106 = *(_WORD *)v107;
            break;
        }
        unint64_t v112 = v254;
        uint64_t v113 = v255;
        unint64_t v114 = v281;
        unint64_t v115 = v253;
        *(unsigned char *)(v106 + v105) = v173;
        *((unsigned char *)v96 + v275) = 1;
        goto LABEL_168;
      }
      void *v96 = *(void *)v98;
      *(void *)((((unint64_t)v33 + v24) & v37) + 8) = *(void *)(((unint64_t)&a2[v24] & v37) + 8);
      *((unsigned char *)v96 + v275) = 0;
      swift_bridgeObjectRetain();
    }
    unint64_t v112 = v254;
    uint64_t v113 = v255;
    unint64_t v114 = v281;
    unint64_t v115 = v253;
LABEL_168:
    *((unsigned char *)v33 + v112) = 2;
    long long v180 = (char *)v33 + 7;
    v181 = v97 + 7;
LABEL_228:
    uint64_t v235 = (void *)((unint64_t)&v180[v115] & 0xFFFFFFFFFFFFFFF8);
    uint64_t v236 = (void *)((unint64_t)&v181[v115] & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v235 = *v236;
    v235[1] = v236[1];
    uint64_t v237 = ((unint64_t)v235 + v113 + 16) & v114;
    uint64_t v238 = ((unint64_t)v236 + v113 + 16) & v114;
    uint64_t v239 = *(void (**)(uint64_t, uint64_t, uint64_t))(v257 + 16);
    swift_bridgeObjectRetain();
    v239(v237, v238, v283);
    *(unsigned char *)(v237 + v256) = *(unsigned char *)(v238 + v256);
    return v33;
  }
  uint64_t v35 = *(void *)a2;
  *a1 = *(void *)a2;
  uint64_t v33 = (void *)(v35 + ((v28 + 16) & ~v28));
  swift_retain();
  return v33;
}

uint64_t sub_22EDB438C(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v135 = sub_22EE7F6E0();
  uint64_t v3 = *(void *)(v135 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v122 = v4 + 16;
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = sub_22EE7F5D0();
  uint64_t v128 = *(void *)(v6 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v128 + 80);
  uint64_t v8 = v4 | 7;
  uint64_t v9 = v4 | 7 | v7;
  uint64_t v123 = v9 + v5;
  uint64_t v125 = v7 + 16;
  uint64_t v126 = v6;
  uint64_t v127 = *(void *)(v128 + 64) + v4;
  uint64_t v129 = v5;
  unint64_t v10 = (v5 + 7 + ((v127 + ((v7 + 16) & ~v7)) & ~v4)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = v10 + 8;
  unint64_t v12 = v10 + 9;
  if (v12 <= v11) {
    unint64_t v12 = v11;
  }
  if (v12 <= 2) {
    unint64_t v12 = 2;
  }
  unint64_t v132 = v12;
  unint64_t v13 = v12 + ((v9 + v5 + ((v4 + 16) & ~v4)) & ~v9);
  unint64_t v14 = v13 + 1;
  unint64_t v15 = (v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = v15 + 16;
  if (v13 + 1 > v15 + 16) {
    unint64_t v17 = v13 + 1;
  }
  else {
    unint64_t v17 = v15 + 16;
  }
  if (v17 <= 0x10) {
    unint64_t v17 = 16;
  }
  unint64_t v18 = v17 + 1;
  unint64_t v134 = v17;
  unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = sub_22EE7C220();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v23 = v22 + v19;
  unint64_t v24 = a1;
  unint64_t v25 = ((*(void *)(v21 + 64) + v9 + ((v23 + 24) & ~v22)) & ~v9) + v18;
  unint64_t v26 = v25 + v8;
  uint64_t v120 = v4 | 7;
  if (((v25 + v8) & ~v8) + v16 > v25) {
    unint64_t v25 = ((v25 + v8) & ~v8) + v16;
  }
  unint64_t v27 = v14 + v9;
  unint64_t v130 = v18;
  if (v18 + (v27 & ~v9) <= v25) {
    unint64_t v28 = v25;
  }
  else {
    unint64_t v28 = v18 + (v27 & ~v9);
  }
  unsigned int v29 = a1[v28];
  unsigned int v30 = v29 - 3;
  if (v29 < 3)
  {
    uint64_t v32 = v135;
  }
  else
  {
    if (v28 <= 3) {
      uint64_t v31 = v28;
    }
    else {
      uint64_t v31 = 4;
    }
    uint64_t v32 = v135;
    switch(v31)
    {
      case 1:
        int v33 = *v24;
        goto LABEL_25;
      case 2:
        int v33 = *(unsigned __int16 *)v24;
        goto LABEL_25;
      case 3:
        int v33 = *(unsigned __int16 *)v24 | (v24[2] << 16);
        goto LABEL_25;
      case 4:
        int v33 = *(_DWORD *)v24;
LABEL_25:
        if (v28 < 4) {
          v33 |= v30 << (8 * v28);
        }
        unsigned int v29 = v33 + 3;
        break;
      default:
        break;
    }
  }
  uint64_t v133 = ~v4;
  uint64_t v136 = ~v9;
  uint64_t v124 = ~v7;
  if (v29 == 2)
  {
    swift_bridgeObjectRelease();
    uint64_t v38 = (unint64_t)&v24[v4 + 16] & v133;
    uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    v39(v38, v32);
    unint64_t v40 = (unsigned __int8 *)((v38 + v129 + v9) & v136);
    unsigned int v41 = v40[v132];
    unsigned int v42 = v41 - 4;
    if (v41 >= 4)
    {
      if (v132 <= 3) {
        uint64_t v43 = v132;
      }
      else {
        uint64_t v43 = 4;
      }
      switch(v43)
      {
        case 1:
          int v44 = *v40;
          goto LABEL_74;
        case 2:
          int v44 = *(unsigned __int16 *)v40;
          goto LABEL_74;
        case 3:
          int v44 = *(unsigned __int16 *)v40 | (*(unsigned __int8 *)(((v38 + v129 + v9) & v136) + 2) << 16);
          goto LABEL_74;
        case 4:
          int v44 = *(_DWORD *)v40;
LABEL_74:
          if (v132 < 4) {
            unsigned int v41 = (v44 | (v42 << (8 * v132))) + 4;
          }
          else {
            unsigned int v41 = v44 + 4;
          }
          break;
        default:
          break;
      }
    }
    if (v41 >= 2)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v128 + 8))((unint64_t)&v40[v125] & v124, v126);
      v39((v127 + ((unint64_t)&v40[v125] & v124)) & v133, v32);
    }
    uint64_t v64 = (unsigned __int8 *)((unint64_t)&v24[v27] & v136);
    unsigned int v65 = v64[v134];
    unsigned int v66 = v65 - 3;
    if (v65 < 3)
    {
      uint64_t v68 = a2;
    }
    else
    {
      if (v134 <= 3) {
        uint64_t v67 = v134;
      }
      else {
        uint64_t v67 = 4;
      }
      uint64_t v68 = a2;
      switch(v67)
      {
        case 1:
          int v69 = *v64;
          goto LABEL_107;
        case 2:
          int v69 = *(unsigned __int16 *)v64;
          goto LABEL_107;
        case 3:
          int v69 = *(unsigned __int16 *)v64 | (*(unsigned __int8 *)(((unint64_t)&v24[v27] & v136) + 2) << 16);
          goto LABEL_107;
        case 4:
          int v69 = *(_DWORD *)v64;
LABEL_107:
          int v80 = (v69 | (v66 << (8 * v134))) + 3;
          unsigned int v65 = v69 + 3;
          if (v134 < 4) {
            unsigned int v65 = v80;
          }
          break;
        default:
          break;
      }
    }
    if (v65 == 2)
    {
      unint64_t v87 = (unint64_t)&v24[v27] & v136;
      goto LABEL_195;
    }
    if (v65 == 1)
    {
      swift_bridgeObjectRelease();
      unint64_t v81 = (unint64_t)&v64[v122] & v133;
      v39(v81, v32);
      uint64_t v82 = (unsigned __int8 *)((v123 + v81) & v136);
      unsigned int v83 = v82[v132];
      unsigned int v84 = v83 - 4;
      if (v83 >= 4)
      {
        if (v132 <= 3) {
          uint64_t v85 = v132;
        }
        else {
          uint64_t v85 = 4;
        }
        switch(v85)
        {
          case 1:
            int v86 = *v82;
            goto LABEL_156;
          case 2:
            int v86 = *(unsigned __int16 *)v82;
            goto LABEL_156;
          case 3:
            int v86 = *(unsigned __int16 *)v82 | (*(unsigned __int8 *)(((v123 + v81) & v136) + 2) << 16);
            goto LABEL_156;
          case 4:
            int v86 = *(_DWORD *)v82;
LABEL_156:
            int v98 = (v86 | (v84 << (8 * v132))) + 4;
            unsigned int v83 = v86 + 4;
            BOOL v99 = v132 >= 4;
LABEL_191:
            if (!v99) {
              unsigned int v83 = v98;
            }
            break;
          default:
            goto LABEL_193;
        }
      }
      goto LABEL_193;
    }
LABEL_185:
    swift_bridgeObjectRelease();
    goto LABEL_196;
  }
  uint64_t v118 = *(void *)(v20 - 8);
  uint64_t v119 = *(void *)(v118 + 64) + v9;
  uint64_t v117 = ~v22;
  if (v29 == 1)
  {
    unsigned int v34 = v24[v134];
    unsigned int v35 = v34 - 3;
    if (v34 >= 3)
    {
      if (v134 <= 3) {
        uint64_t v36 = v134;
      }
      else {
        uint64_t v36 = 4;
      }
      switch(v36)
      {
        case 1:
          int v37 = *v24;
          goto LABEL_51;
        case 2:
          int v37 = *(unsigned __int16 *)v24;
          goto LABEL_51;
        case 3:
          int v37 = *(unsigned __int16 *)v24 | (v24[2] << 16);
          goto LABEL_51;
        case 4:
          int v37 = *(_DWORD *)v24;
LABEL_51:
          if (v134 < 4) {
            unsigned int v34 = (v37 | (v35 << (8 * v134))) + 3;
          }
          else {
            unsigned int v34 = v37 + 3;
          }
          break;
        default:
          break;
      }
    }
    unint64_t v116 = v26;
    uint64_t v49 = *(unsigned __int8 *)(v21 + 80);
    if (v34 == 2)
    {
      uint64_t v50 = v20;
      (*(void (**)(unsigned __int8 *, uint64_t))(v3 + 8))(v24, v32);
    }
    else
    {
      uint64_t v50 = v20;
      if (v34 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v51 = (unint64_t)&v24[v4 + 16] & v133;
        unint64_t v115 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
        v115(v51, v32);
        unsigned int v52 = (unsigned __int8 *)((v51 + v129 + v9) & v136);
        unint64_t v53 = v132;
        unsigned int v54 = v52[v132];
        unsigned int v55 = v54 - 4;
        if (v54 >= 4)
        {
          if (v132 <= 3) {
            uint64_t v56 = v132;
          }
          else {
            uint64_t v56 = 4;
          }
          switch(v56)
          {
            case 1:
              int v57 = *v52;
              goto LABEL_137;
            case 2:
              int v57 = *(unsigned __int16 *)v52;
              goto LABEL_137;
            case 3:
              int v57 = *(unsigned __int16 *)v52 | (v52[2] << 16);
              goto LABEL_137;
            case 4:
              int v57 = *(_DWORD *)v52;
LABEL_137:
              if (v132 < 4) {
                unsigned int v54 = (v57 | (v55 << (8 * v132))) + 4;
              }
              else {
                unsigned int v54 = v57 + 4;
              }
              break;
            default:
              break;
          }
        }
        if (v54 >= 2)
        {
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v128 + 8))((unint64_t)&v52[v125] & v124, v126);
          v115((v127 + ((unint64_t)&v52[v125] & v124)) & v133, v32);
        }
LABEL_65:
        swift_bridgeObjectRelease();
        unint64_t v58 = (v49 + ((unint64_t)&v24[v130 + 7] & 0xFFFFFFFFFFFFFFF8) + 16) & v117;
        (*(void (**)(unint64_t, uint64_t))(v118 + 8))(v58, v50);
        uint64_t v59 = (unsigned __int8 *)((v119 + v58) & v136);
        unsigned int v60 = v59[v134];
        unsigned int v61 = v60 - 3;
        if (v60 >= 3)
        {
          if (v134 <= 3) {
            uint64_t v62 = v134;
          }
          else {
            uint64_t v62 = 4;
          }
          switch(v62)
          {
            case 1:
              int v63 = *v59;
              goto LABEL_90;
            case 2:
              int v63 = *(unsigned __int16 *)v59;
              goto LABEL_90;
            case 3:
              int v63 = *(unsigned __int16 *)v59 | (*(unsigned __int8 *)(((v119 + v58) & v136) + 2) << 16);
              goto LABEL_90;
            case 4:
              int v63 = *(_DWORD *)v59;
LABEL_90:
              int v70 = (v63 | (v61 << (8 * v134))) + 3;
              unsigned int v60 = v63 + 3;
              if (v134 < 4) {
                unsigned int v60 = v70;
              }
              break;
            default:
              break;
          }
        }
        if (v60 == 2)
        {
          uint64_t v73 = *(void (**)(unint64_t, uint64_t))(v3 + 8);
          v73((v119 + v58) & v136, v32);
        }
        else if (v60 == 1)
        {
          unint64_t v71 = v28;
          swift_bridgeObjectRelease();
          unint64_t v72 = (unint64_t)&v59[v122] & v133;
          uint64_t v73 = *(void (**)(unint64_t, uint64_t))(v3 + 8);
          v73(v72, v32);
          int v74 = (unsigned __int8 *)((v123 + v72) & v136);
          unsigned int v75 = v74[v53];
          unsigned int v76 = v75 - 4;
          if (v75 < 4)
          {
            unint64_t v78 = v116;
          }
          else
          {
            if (v53 <= 3) {
              uint64_t v77 = v53;
            }
            else {
              uint64_t v77 = 4;
            }
            unint64_t v78 = v116;
            switch(v77)
            {
              case 1:
                int v79 = *v74;
                goto LABEL_145;
              case 2:
                int v79 = *(unsigned __int16 *)v74;
                goto LABEL_145;
              case 3:
                int v79 = *(unsigned __int16 *)v74 | (*(unsigned __int8 *)(((v123 + v72) & v136) + 2) << 16);
                goto LABEL_145;
              case 4:
                int v79 = *(_DWORD *)v74;
LABEL_145:
                int v97 = (v79 | (v76 << (8 * v53))) + 4;
                unsigned int v75 = v79 + 4;
                if (v53 < 4) {
                  unsigned int v75 = v97;
                }
                break;
              default:
                break;
            }
          }
          if (v75 < 2) {
            goto LABEL_150;
          }
          if (v75 == 3)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v128 + 8))((unint64_t)&v74[v125] & v124, v126);
            v73((v127 + ((unint64_t)&v74[v125] & v124)) & v133, v32);
            unint64_t v78 = v116;
LABEL_150:
            unint64_t v28 = v71;
            goto LABEL_151;
          }
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v128 + 8))((unint64_t)&v74[v125] & v124, v126);
          v73((v127 + ((unint64_t)&v74[v125] & v124)) & v133, v32);
          unint64_t v28 = v71;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v73 = *(void (**)(unint64_t, uint64_t))(v3 + 8);
        }
        unint64_t v78 = v116;
LABEL_151:
        v73((unint64_t)&v24[v78] & ~v120, v32);
        uint64_t v68 = a2;
        goto LABEL_196;
      }
      swift_bridgeObjectRelease();
    }
    unint64_t v53 = v132;
    goto LABEL_65;
  }
  unsigned int v45 = v24[v134];
  unsigned int v46 = v45 - 3;
  if (v45 >= 3)
  {
    if (v134 <= 3) {
      uint64_t v47 = v134;
    }
    else {
      uint64_t v47 = 4;
    }
    switch(v47)
    {
      case 1:
        int v48 = *v24;
        goto LABEL_120;
      case 2:
        int v48 = *(unsigned __int16 *)v24;
        goto LABEL_120;
      case 3:
        int v48 = *(unsigned __int16 *)v24 | (v24[2] << 16);
        goto LABEL_120;
      case 4:
        int v48 = *(_DWORD *)v24;
LABEL_120:
        if (v134 < 4) {
          unsigned int v45 = (v48 | (v46 << (8 * v134))) + 3;
        }
        else {
          unsigned int v45 = v48 + 3;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v88 = *(unsigned __int8 *)(v21 + 80);
  if (v45 == 2)
  {
    uint64_t v89 = v20;
    (*(void (**)(unsigned __int8 *, uint64_t))(v3 + 8))(v24, v32);
LABEL_133:
    unint64_t v92 = v132;
    goto LABEL_165;
  }
  uint64_t v89 = v20;
  if (v45 != 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_133;
  }
  swift_bridgeObjectRelease();
  uint64_t v90 = (unint64_t)&v24[v4 + 16] & v133;
  v121 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v121(v90, v32);
  unint64_t v91 = (unsigned __int8 *)((v90 + v129 + v9) & v136);
  unint64_t v92 = v132;
  unsigned int v93 = v91[v132];
  unsigned int v94 = v93 - 4;
  if (v93 >= 4)
  {
    if (v132 <= 3) {
      uint64_t v95 = v132;
    }
    else {
      uint64_t v95 = 4;
    }
    switch(v95)
    {
      case 1:
        int v96 = *v91;
        goto LABEL_160;
      case 2:
        int v96 = *(unsigned __int16 *)v91;
        goto LABEL_160;
      case 3:
        int v96 = *(unsigned __int16 *)v91 | (v91[2] << 16);
        goto LABEL_160;
      case 4:
        int v96 = *(_DWORD *)v91;
LABEL_160:
        if (v132 < 4) {
          unsigned int v93 = (v96 | (v94 << (8 * v132))) + 4;
        }
        else {
          unsigned int v93 = v96 + 4;
        }
        break;
      default:
        break;
    }
  }
  if (v93 >= 2)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, uint64_t))(v128 + 8))((unint64_t)&v91[v125] & v124, v126);
    v121((v127 + ((unint64_t)&v91[v125] & v124)) & v133, v32);
  }
LABEL_165:
  swift_bridgeObjectRelease();
  unint64_t v100 = (v88 + ((unint64_t)&v24[v130 + 7] & 0xFFFFFFFFFFFFFFF8) + 16) & v117;
  (*(void (**)(unint64_t, uint64_t))(v118 + 8))(v100, v89);
  uint64_t v101 = (unsigned __int8 *)((v119 + v100) & v136);
  unsigned int v102 = v101[v134];
  unsigned int v103 = v102 - 3;
  if (v102 < 3)
  {
    uint64_t v68 = a2;
  }
  else
  {
    if (v134 <= 3) {
      uint64_t v104 = v134;
    }
    else {
      uint64_t v104 = 4;
    }
    uint64_t v68 = a2;
    switch(v104)
    {
      case 1:
        int v105 = *v101;
        goto LABEL_175;
      case 2:
        int v105 = *(unsigned __int16 *)v101;
        goto LABEL_175;
      case 3:
        int v105 = *(unsigned __int16 *)v101 | (*(unsigned __int8 *)(((v119 + v100) & v136) + 2) << 16);
        goto LABEL_175;
      case 4:
        int v105 = *(_DWORD *)v101;
LABEL_175:
        int v106 = (v105 | (v103 << (8 * v134))) + 3;
        unsigned int v102 = v105 + 3;
        if (v134 < 4) {
          unsigned int v102 = v106;
        }
        break;
      default:
        break;
    }
  }
  if (v102 == 2)
  {
    (*(void (**)(unint64_t, uint64_t))(v3 + 8))((v119 + v100) & v136, v32);
    goto LABEL_196;
  }
  if (v102 != 1) {
    goto LABEL_185;
  }
  swift_bridgeObjectRelease();
  unint64_t v107 = (unint64_t)&v101[v122] & v133;
  uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v39(v107, v32);
  uint64_t v82 = (unsigned __int8 *)((v123 + v107) & v136);
  unsigned int v83 = v82[v92];
  unsigned int v108 = v83 - 4;
  if (v83 >= 4)
  {
    if (v92 <= 3) {
      uint64_t v109 = v92;
    }
    else {
      uint64_t v109 = 4;
    }
    switch(v109)
    {
      case 1:
        int v110 = *v82;
        goto LABEL_190;
      case 2:
        int v110 = *(unsigned __int16 *)v82;
        goto LABEL_190;
      case 3:
        int v110 = *(unsigned __int16 *)v82 | (*(unsigned __int8 *)(((v123 + v107) & v136) + 2) << 16);
        goto LABEL_190;
      case 4:
        int v110 = *(_DWORD *)v82;
LABEL_190:
        int v98 = (v110 | (v108 << (8 * v92))) + 4;
        unsigned int v83 = v110 + 4;
        BOOL v99 = v92 >= 4;
        goto LABEL_191;
      default:
        break;
    }
  }
LABEL_193:
  if (v83 < 2) {
    goto LABEL_196;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v128 + 8))((unint64_t)&v82[v125] & v124, v126);
  unint64_t v87 = (v127 + ((unint64_t)&v82[v125] & v124)) & v133;
LABEL_195:
  v39(v87, v32);
LABEL_196:
  swift_bridgeObjectRelease();
  uint64_t v111 = *(void *)(*(void *)(v68 + 16) - 8);
  unint64_t v112 = *(uint64_t (**)(unint64_t))(v111 + 8);
  unint64_t v113 = (((unint64_t)&v24[v28 + 8] & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v111 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v111 + 80);

  return v112(v113);
}

void *sub_22EDB5314(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v267 = sub_22EE7F6E0();
  uint64_t v268 = *(void *)(v267 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v268 + 80);
  uint64_t v246 = v5 + 16;
  uint64_t v6 = *(void *)(v268 + 64);
  uint64_t v250 = sub_22EE7F5D0();
  uint64_t v251 = *(void *)(v250 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v251 + 80);
  uint64_t v8 = v5 | 7;
  uint64_t v9 = v5 | 7 | v7;
  uint64_t v247 = v9 + v6;
  uint64_t v249 = v7 + 16;
  uint64_t v252 = *(void *)(v251 + 64) + v5;
  uint64_t v255 = v6;
  uint64_t v10 = v6 + 7;
  unint64_t v11 = (v6 + 7 + ((v252 + ((v7 + 16) & ~v7)) & ~v5)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = v11 + 8;
  unint64_t v13 = v11 + 9;
  unint64_t v242 = v12;
  if (v13 <= v12) {
    unint64_t v13 = v12;
  }
  if (v13 <= 2) {
    unint64_t v13 = 2;
  }
  unint64_t v260 = v13;
  unint64_t v14 = v13 + ((v9 + v6 + ((v5 + 16) & ~v5)) & ~v9);
  unint64_t v15 = v14 + 1;
  uint64_t v258 = v6 + 7;
  unint64_t v16 = (v10 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v14 + 1 > v16) {
    unint64_t v17 = v14 + 1;
  }
  else {
    unint64_t v17 = (v10 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v17 <= 0x10) {
    unint64_t v17 = 16;
  }
  unint64_t v18 = v17 + 1;
  unint64_t v261 = v17;
  unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = sub_22EE7C220();
  uint64_t v254 = *(void *)(v20 - 8);
  uint64_t v21 = *(unsigned __int8 *)(v254 + 80);
  uint64_t v22 = v21 + v19;
  uint64_t v23 = a2;
  unint64_t v24 = ((*(void *)(v254 + 64) + v9 + ((v22 + 24) & ~v21)) & ~v9) + v18;
  unint64_t v25 = v24 + v8;
  uint64_t v244 = v5 | 7;
  if (((v24 + v8) & ~v8) + v16 > v24) {
    unint64_t v24 = ((v24 + v8) & ~v8) + v16;
  }
  unint64_t v26 = v15 + v9;
  unint64_t v253 = v18;
  if (v18 + (v26 & ~v9) <= v24) {
    unint64_t v27 = v24;
  }
  else {
    unint64_t v27 = v18 + (v26 & ~v9);
  }
  unsigned int v28 = v23[v27];
  unsigned int v29 = v28 - 3;
  if (v28 < 3)
  {
    uint64_t v31 = a1;
  }
  else
  {
    if (v27 <= 3) {
      uint64_t v30 = v27;
    }
    else {
      uint64_t v30 = 4;
    }
    uint64_t v31 = a1;
    switch(v30)
    {
      case 1:
        int v32 = *v23;
        goto LABEL_25;
      case 2:
        int v32 = *(unsigned __int16 *)v23;
        goto LABEL_25;
      case 3:
        int v32 = *(unsigned __int16 *)v23 | (v23[2] << 16);
        goto LABEL_25;
      case 4:
        int v32 = *(_DWORD *)v23;
LABEL_25:
        if (v27 < 4) {
          v32 |= v29 << (8 * v27);
        }
        unsigned int v28 = v32 + 3;
        break;
      default:
        break;
    }
  }
  uint64_t v259 = ~v5;
  uint64_t v262 = ~v9;
  uint64_t v248 = ~v7;
  if (v28 != 2)
  {
    uint64_t v33 = ~v21;
    uint64_t v243 = *(void *)(*(void *)(v20 - 8) + 64) + v9;
    if (v28 == 1)
    {
      unsigned int v34 = v23[v261];
      unsigned int v35 = v34 - 3;
      if (v34 >= 3)
      {
        if (v261 <= 3) {
          uint64_t v36 = v261;
        }
        else {
          uint64_t v36 = 4;
        }
        switch(v36)
        {
          case 1:
            int v37 = *v23;
            goto LABEL_51;
          case 2:
            int v37 = *(unsigned __int16 *)v23;
            goto LABEL_51;
          case 3:
            int v37 = *(unsigned __int16 *)v23 | (v23[2] << 16);
            goto LABEL_51;
          case 4:
            int v37 = *(_DWORD *)v23;
LABEL_51:
            if (v261 < 4) {
              unsigned int v34 = (v37 | (v35 << (8 * v261))) + 3;
            }
            else {
              unsigned int v34 = v37 + 3;
            }
            break;
          default:
            break;
        }
      }
      unint64_t v238 = v27;
      unint64_t v236 = v25;
      uint64_t v237 = v20;
      if (v34 == 2)
      {
        uint64_t v68 = *(unsigned __int8 *)(v254 + 80);
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v268 + 16))(v31, v23, v267);
        *(_OWORD *)(((unint64_t)v31 + v255 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v23[v255 + 7] & 0xFFFFFFFFFFFFFFF8);
        *((unsigned char *)v31 + v261) = 2;
      }
      else
      {
        if (v34 == 1)
        {
          uint64_t v232 = ~v21;
          uint64_t v234 = *(unsigned __int8 *)(v254 + 80);
          uint64_t v54 = *((void *)v23 + 1);
          void *v31 = *(void *)v23;
          v31[1] = v54;
          unsigned int v55 = &v23[v5];
          uint64_t v56 = ((unint64_t)v31 + v5 + 16) & v259;
          uint64_t v57 = (unint64_t)(v55 + 16) & v259;
          unint64_t v58 = *(void (**)(uint64_t, unint64_t, uint64_t))(v268 + 16);
          swift_bridgeObjectRetain();
          uint64_t v59 = v58;
          v58(v56, v57, v267);
          uint64_t v60 = v255 + v9;
          uint64_t v61 = (v56 + v255 + v9) & v262;
          uint64_t v62 = (unsigned __int8 *)((v57 + v60) & v262);
          unint64_t v63 = v260;
          unsigned int v64 = v62[v260];
          unsigned int v65 = v64 - 4;
          if (v64 >= 4)
          {
            if (v260 <= 3) {
              uint64_t v66 = v260;
            }
            else {
              uint64_t v66 = 4;
            }
            switch(v66)
            {
              case 1:
                int v67 = *v62;
                goto LABEL_116;
              case 2:
                int v67 = *(unsigned __int16 *)v62;
                goto LABEL_116;
              case 3:
                int v67 = *(unsigned __int16 *)v62 | (v62[2] << 16);
                goto LABEL_116;
              case 4:
                int v67 = *(_DWORD *)v62;
LABEL_116:
                if (v260 < 4) {
                  unsigned int v64 = (v67 | (v65 << (8 * v260))) + 4;
                }
                else {
                  unsigned int v64 = v67 + 4;
                }
                break;
              default:
                break;
            }
          }
          switch(v64)
          {
            case 1u:
              *(unsigned char *)uint64_t v61 = *v62;
              char v121 = 1;
              break;
            case 2u:
              *(void *)uint64_t v61 = *(void *)v62;
              *(void *)(v61 + 8) = *((void *)v62 + 1);
              uint64_t v122 = (v249 + v61) & v248;
              unint64_t v123 = (unint64_t)&v62[v249] & v248;
              uint64_t v124 = *(void (**)(uint64_t, unint64_t, uint64_t))(v251 + 16);
              swift_bridgeObjectRetain();
              v124(v122, v123, v250);
              unint64_t v63 = v260;
              uint64_t v125 = (v252 + v122) & v259;
              unint64_t v126 = (v252 + v123) & v259;
              v59(v125, v126, v267);
              *(void *)((v258 + v125) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v258 + v126) & 0xFFFFFFFFFFFFFFF8);
              *(unsigned char *)(v242 + v61) = v62[v242];
              char v121 = 2;
              break;
            case 3u:
              *(void *)uint64_t v61 = *(void *)v62;
              *(void *)(v61 + 8) = *((void *)v62 + 1);
              uint64_t v127 = (v249 + v61) & v248;
              unint64_t v128 = (unint64_t)&v62[v249] & v248;
              uint64_t v129 = v23;
              unint64_t v130 = *(void (**)(uint64_t, unint64_t, uint64_t))(v251 + 16);
              swift_bridgeObjectRetain();
              v130(v127, v128, v250);
              uint64_t v23 = v129;
              uint64_t v131 = (v252 + v127) & v259;
              unint64_t v132 = (v252 + v128) & v259;
              v59(v131, v132, v267);
              *(void *)((v258 + v131) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v258 + v132) & 0xFFFFFFFFFFFFFFF8);
              char v121 = 3;
              break;
            default:
              char v121 = 0;
              *(_WORD *)uint64_t v61 = *(_WORD *)v62;
              break;
          }
          uint64_t v33 = v232;
          uint64_t v68 = v234;
          *(unsigned char *)(v61 + v63) = v121;
          unint64_t v70 = v261;
          *((unsigned char *)v31 + v261) = 1;
LABEL_125:
          uint64_t v133 = (void *)(((unint64_t)v31 + v18 + 7) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v134 = (void *)((unint64_t)&v23[v18 + 7] & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v133 = *v134;
          v133[1] = v134[1];
          uint64_t v135 = ((unint64_t)v133 + v68 + 16) & v33;
          uint64_t v136 = ((unint64_t)v134 + v68 + 16) & v33;
          char v137 = *(void (**)(uint64_t, uint64_t, uint64_t))(v254 + 16);
          swift_bridgeObjectRetain();
          v137(v135, v136, v237);
          unint64_t v138 = (void *)((v243 + v135) & v262);
          unint64_t v139 = (unsigned __int8 *)((v243 + v136) & v262);
          unsigned int v140 = v139[v70];
          unsigned int v141 = v140 - 3;
          unint64_t v142 = v70;
          if (v140 >= 3)
          {
            if (v70 <= 3) {
              uint64_t v143 = v70;
            }
            else {
              uint64_t v143 = 4;
            }
            switch(v143)
            {
              case 1:
                int v144 = *v139;
                goto LABEL_134;
              case 2:
                int v144 = *(unsigned __int16 *)v139;
                goto LABEL_134;
              case 3:
                int v144 = *(unsigned __int16 *)v139 | (*(unsigned __int8 *)(((v243 + v136) & v262) + 2) << 16);
                goto LABEL_134;
              case 4:
                int v144 = *(_DWORD *)v139;
LABEL_134:
                int v145 = (v144 | (v141 << (8 * v70))) + 3;
                unsigned int v140 = v144 + 3;
                if (v70 < 4) {
                  unsigned int v140 = v145;
                }
                break;
              default:
                break;
            }
          }
          uint64_t v146 = ~v244;
          if (v140 == 2)
          {
            v149 = *(void (**)(void *, uint64_t, uint64_t))(v268 + 16);
            v149(v138, (v243 + v136) & v262, v267);
            *(_OWORD *)(((unint64_t)v138 + v258) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v139[v258] & 0xFFFFFFFFFFFFFFF8);
            *((unsigned char *)v138 + v142) = 2;
          }
          else
          {
            if (v140 == 1)
            {
              *unint64_t v138 = *(void *)v139;
              v138[1] = *(void *)(((v243 + v136) & v262) + 8);
              unint64_t v147 = ((unint64_t)v138 + v246) & v259;
              unint64_t v148 = (unint64_t)&v139[v246] & v259;
              v149 = *(void (**)(void *, uint64_t, uint64_t))(v268 + 16);
              swift_bridgeObjectRetain();
              v149((void *)v147, v148, v267);
              uint64_t v150 = (unsigned char *)((v247 + v147) & v262);
              uint64_t v151 = (unsigned __int8 *)((v247 + v148) & v262);
              unsigned int v152 = v151[v63];
              unsigned int v153 = v152 - 4;
              if (v152 >= 4)
              {
                if (v63 <= 3) {
                  uint64_t v154 = v63;
                }
                else {
                  uint64_t v154 = 4;
                }
                switch(v154)
                {
                  case 1:
                    int v155 = *v151;
                    goto LABEL_195;
                  case 2:
                    int v155 = *(unsigned __int16 *)v151;
                    goto LABEL_195;
                  case 3:
                    int v155 = *(unsigned __int16 *)v151 | (*(unsigned __int8 *)(((v247 + v148) & v262) + 2) << 16);
                    goto LABEL_195;
                  case 4:
                    int v155 = *(_DWORD *)v151;
LABEL_195:
                    int v202 = (v155 | (v153 << (8 * v260))) + 4;
                    unsigned int v152 = v155 + 4;
                    if (v260 < 4) {
                      unsigned int v152 = v202;
                    }
                    break;
                  default:
                    break;
                }
              }
              switch(v152)
              {
                case 1u:
                  *uint64_t v150 = *v151;
                  char v203 = 1;
                  break;
                case 2u:
                  *(void *)uint64_t v150 = *(void *)v151;
                  *(void *)(((v247 + v147) & v262) + 8) = *(void *)(((v247 + v148) & v262) + 8);
                  unint64_t v204 = (unint64_t)&v150[v249] & v248;
                  uint64_t v264 = *(void (**)(unint64_t, unint64_t, uint64_t))(v251 + 16);
                  swift_bridgeObjectRetain();
                  v264(v204, (unint64_t)&v151[v249] & v248, v250);
                  unint64_t v205 = (v252 + v204) & v259;
                  unint64_t v206 = (v252 + ((unint64_t)&v151[v249] & v248)) & v259;
                  v149((void *)v205, v206, v267);
                  *(void *)((v258 + v205) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v258 + v206) & 0xFFFFFFFFFFFFFFF8);
                  v150[v242] = v151[v242];
                  char v203 = 2;
                  break;
                case 3u:
                  *(void *)uint64_t v150 = *(void *)v151;
                  *(void *)(((v247 + v147) & v262) + 8) = *(void *)(((v247 + v148) & v262) + 8);
                  unint64_t v207 = (unint64_t)&v150[v249] & v248;
                  unint64_t v208 = (unint64_t)&v151[v249] & v248;
                  unint64_t v209 = *(void (**)(unint64_t, unint64_t, uint64_t))(v251 + 16);
                  swift_bridgeObjectRetain();
                  v209(v207, v208, v250);
                  unint64_t v210 = (v252 + v207) & v259;
                  v149((void *)v210, (v252 + v208) & v259, v267);
                  *(void *)((v258 + v210) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v258 + ((v252 + v208) & v259)) & 0xFFFFFFFFFFFFFFF8);
                  char v203 = 3;
                  break;
                default:
                  char v203 = 0;
                  *(_WORD *)uint64_t v150 = *(_WORD *)v151;
                  break;
              }
              unint64_t v156 = v236;
              v150[v260] = v203;
              *((unsigned char *)v138 + v261) = 1;
              goto LABEL_203;
            }
            *unint64_t v138 = *(void *)v139;
            v138[1] = *(void *)(((v243 + v136) & v262) + 8);
            *((unsigned char *)v138 + v70) = 0;
            v149 = *(void (**)(void *, uint64_t, uint64_t))(v268 + 16);
            swift_bridgeObjectRetain();
          }
          unint64_t v156 = v236;
LABEL_203:
          unint64_t v211 = ((unint64_t)v31 + v156) & v146;
          unint64_t v212 = (unint64_t)&v23[v156] & v146;
          v149((void *)v211, v212, v267);
          *(_OWORD *)((v258 + v211) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v258 + v212) & 0xFFFFFFFFFFFFFFF8);
          char v101 = 1;
          uint64_t v168 = a3;
          unint64_t v27 = v238;
          goto LABEL_215;
        }
        uint64_t v68 = *(unsigned __int8 *)(v254 + 80);
        uint64_t v69 = *((void *)v23 + 1);
        void *v31 = *(void *)v23;
        v31[1] = v69;
        *((unsigned char *)v31 + v261) = 0;
        swift_bridgeObjectRetain();
      }
      unint64_t v70 = v261;
      unint64_t v63 = v260;
      goto LABEL_125;
    }
    unsigned int v50 = v23[v261];
    unsigned int v51 = v50 - 3;
    if (v50 >= 3)
    {
      if (v261 <= 3) {
        uint64_t v52 = v261;
      }
      else {
        uint64_t v52 = 4;
      }
      switch(v52)
      {
        case 1:
          int v53 = *v23;
          goto LABEL_100;
        case 2:
          int v53 = *(unsigned __int16 *)v23;
          goto LABEL_100;
        case 3:
          int v53 = *(unsigned __int16 *)v23 | (v23[2] << 16);
          goto LABEL_100;
        case 4:
          int v53 = *(_DWORD *)v23;
LABEL_100:
          if (v261 < 4) {
            unsigned int v50 = (v53 | (v51 << (8 * v261))) + 3;
          }
          else {
            unsigned int v50 = v53 + 3;
          }
          break;
        default:
          break;
      }
    }
    if (v50 == 2)
    {
      uint64_t v102 = v20;
      uint64_t v116 = *(unsigned __int8 *)(v254 + 80);
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v268 + 16))(v31, v23, v267);
      uint64_t v117 = v116;
      *(_OWORD *)(((unint64_t)v31 + v255 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v23[v255 + 7] & 0xFFFFFFFFFFFFFFF8);
      *((unsigned char *)v31 + v261) = 2;
      unint64_t v118 = v261;
      unint64_t v111 = v260;
    }
    else if (v50 == 1)
    {
      uint64_t v233 = ~v21;
      uint64_t v235 = *(unsigned __int8 *)(v254 + 80);
      uint64_t v102 = v20;
      uint64_t v103 = *((void *)v23 + 1);
      void *v31 = *(void *)v23;
      v31[1] = v103;
      uint64_t v104 = &v23[v5];
      uint64_t v105 = ((unint64_t)v31 + v5 + 16) & v259;
      uint64_t v106 = (unint64_t)(v104 + 16) & v259;
      unint64_t v107 = *(void (**)(uint64_t, unint64_t, uint64_t))(v268 + 16);
      swift_bridgeObjectRetain();
      uint64_t v245 = v107;
      v107(v105, v106, v267);
      uint64_t v108 = v255 + v9;
      uint64_t v109 = (v105 + v255 + v9) & v262;
      int v110 = (unsigned __int8 *)((v106 + v108) & v262);
      unint64_t v111 = v260;
      unsigned int v112 = v110[v260];
      unsigned int v113 = v112 - 4;
      if (v112 >= 4)
      {
        if (v260 <= 3) {
          uint64_t v114 = v260;
        }
        else {
          uint64_t v114 = 4;
        }
        switch(v114)
        {
          case 1:
            int v115 = *v110;
            goto LABEL_161;
          case 2:
            int v115 = *(unsigned __int16 *)v110;
            goto LABEL_161;
          case 3:
            int v115 = *(unsigned __int16 *)v110 | (v110[2] << 16);
            goto LABEL_161;
          case 4:
            int v115 = *(_DWORD *)v110;
LABEL_161:
            if (v260 < 4) {
              unsigned int v112 = (v115 | (v113 << (8 * v260))) + 4;
            }
            else {
              unsigned int v112 = v115 + 4;
            }
            break;
          default:
            break;
        }
      }
      switch(v112)
      {
        case 1u:
          *(unsigned char *)uint64_t v109 = *v110;
          char v169 = 1;
          break;
        case 2u:
          *(void *)uint64_t v109 = *(void *)v110;
          *(void *)(v109 + 8) = *((void *)v110 + 1);
          uint64_t v170 = (v249 + v109) & v248;
          unint64_t v171 = (unint64_t)&v110[v249] & v248;
          unint64_t v172 = *(void (**)(uint64_t, unint64_t, uint64_t))(v251 + 16);
          swift_bridgeObjectRetain();
          v172(v170, v171, v250);
          unint64_t v111 = v260;
          uint64_t v173 = (v252 + v170) & v259;
          unint64_t v174 = (v252 + v171) & v259;
          v245(v173, v174, v267);
          *(void *)((v258 + v173) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v258 + v174) & 0xFFFFFFFFFFFFFFF8);
          *(unsigned char *)(v242 + v109) = v110[v242];
          char v169 = 2;
          break;
        case 3u:
          *(void *)uint64_t v109 = *(void *)v110;
          *(void *)(v109 + 8) = *((void *)v110 + 1);
          uint64_t v175 = (v249 + v109) & v248;
          unint64_t v176 = (unint64_t)&v110[v249] & v248;
          unint64_t v240 = v27;
          uint64_t v177 = v23;
          unint64_t v178 = *(void (**)(uint64_t, unint64_t, uint64_t))(v251 + 16);
          swift_bridgeObjectRetain();
          v178(v175, v176, v250);
          uint64_t v23 = v177;
          unint64_t v27 = v240;
          uint64_t v179 = (v252 + v175) & v259;
          unint64_t v180 = (v252 + v176) & v259;
          v245(v179, v180, v267);
          *(void *)((v258 + v179) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v258 + v180) & 0xFFFFFFFFFFFFFFF8);
          char v169 = 3;
          break;
        default:
          char v169 = 0;
          *(_WORD *)uint64_t v109 = *(_WORD *)v110;
          break;
      }
      uint64_t v33 = v233;
      uint64_t v117 = v235;
      *(unsigned char *)(v109 + v111) = v169;
      unint64_t v118 = v261;
      *((unsigned char *)v31 + v261) = 1;
    }
    else
    {
      uint64_t v119 = *(unsigned __int8 *)(v254 + 80);
      uint64_t v102 = v20;
      uint64_t v120 = *((void *)v23 + 1);
      void *v31 = *(void *)v23;
      v31[1] = v120;
      *((unsigned char *)v31 + v261) = 0;
      swift_bridgeObjectRetain();
      unint64_t v118 = v261;
      unint64_t v111 = v260;
      uint64_t v117 = v119;
    }
    v181 = (void *)(((unint64_t)v31 + v253 + 7) & 0xFFFFFFFFFFFFFFF8);
    char v182 = (void *)((unint64_t)&v23[v253 + 7] & 0xFFFFFFFFFFFFFFF8);
    void *v181 = *v182;
    v181[1] = v182[1];
    uint64_t v183 = ((unint64_t)v181 + v117 + 16) & v33;
    uint64_t v184 = ((unint64_t)v182 + v117 + 16) & v33;
    unint64_t v185 = *(void (**)(uint64_t, uint64_t, uint64_t))(v254 + 16);
    swift_bridgeObjectRetain();
    v185(v183, v184, v102);
    unint64_t v186 = (void *)((v243 + v183) & v262);
    unint64_t v187 = (unsigned __int8 *)((v243 + v184) & v262);
    unsigned int v188 = v187[v118];
    unsigned int v189 = v188 - 3;
    if (v188 >= 3)
    {
      if (v118 <= 3) {
        uint64_t v190 = v118;
      }
      else {
        uint64_t v190 = 4;
      }
      switch(v190)
      {
        case 1:
          int v191 = *v187;
          goto LABEL_179;
        case 2:
          int v191 = *(unsigned __int16 *)v187;
          goto LABEL_179;
        case 3:
          int v191 = *(unsigned __int16 *)v187 | (*(unsigned __int8 *)(((v243 + v184) & v262) + 2) << 16);
          goto LABEL_179;
        case 4:
          int v191 = *(_DWORD *)v187;
LABEL_179:
          int v192 = (v191 | (v189 << (8 * v118))) + 3;
          unsigned int v188 = v191 + 3;
          if (v118 < 4) {
            unsigned int v188 = v192;
          }
          break;
        default:
          break;
      }
    }
    if (v188 == 2)
    {
      (*(void (**)(void *, uint64_t, uint64_t))(v268 + 16))(v186, (v243 + v184) & v262, v267);
      char v101 = 0;
      *(_OWORD *)(((unint64_t)v186 + v258) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v187[v258] & 0xFFFFFFFFFFFFFFF8);
      *((unsigned char *)v186 + v118) = 2;
    }
    else
    {
      if (v188 == 1)
      {
        *unint64_t v186 = *(void *)v187;
        v186[1] = *(void *)(((v243 + v184) & v262) + 8);
        unint64_t v193 = ((unint64_t)v186 + v246) & v259;
        unint64_t v194 = (unint64_t)&v187[v246] & v259;
        uint64_t v195 = *(void (**)(unint64_t, unint64_t, uint64_t))(v268 + 16);
        swift_bridgeObjectRetain();
        v195(v193, v194, v267);
        uint64_t v196 = (unsigned char *)((v247 + v193) & v262);
        uint64_t v197 = (unsigned __int8 *)((v247 + v194) & v262);
        unsigned int v198 = v197[v111];
        unsigned int v199 = v198 - 4;
        if (v198 >= 4)
        {
          if (v111 <= 3) {
            uint64_t v200 = v111;
          }
          else {
            uint64_t v200 = 4;
          }
          switch(v200)
          {
            case 1:
              int v201 = *v197;
              goto LABEL_207;
            case 2:
              int v201 = *(unsigned __int16 *)v197;
              goto LABEL_207;
            case 3:
              int v201 = *(unsigned __int16 *)v197 | (*(unsigned __int8 *)(((v247 + v194) & v262) + 2) << 16);
              goto LABEL_207;
            case 4:
              int v201 = *(_DWORD *)v197;
LABEL_207:
              int v213 = (v201 | (v199 << (8 * v111))) + 4;
              unsigned int v198 = v201 + 4;
              if (v111 < 4) {
                unsigned int v198 = v213;
              }
              break;
            default:
              break;
          }
        }
        switch(v198)
        {
          case 1u:
            *uint64_t v196 = *v197;
            char v214 = 1;
            break;
          case 2u:
            *(void *)uint64_t v196 = *(void *)v197;
            *(void *)(((v247 + v193) & v262) + 8) = *(void *)(((v247 + v194) & v262) + 8);
            unint64_t v215 = (unint64_t)&v196[v249] & v248;
            uint64_t v265 = v195;
            unint64_t v216 = (unint64_t)&v197[v249] & v248;
            unint64_t v241 = v27;
            uint64_t v217 = v23;
            unint64_t v218 = *(void (**)(unint64_t, unint64_t, uint64_t))(v251 + 16);
            swift_bridgeObjectRetain();
            v218(v215, v216, v250);
            uint64_t v23 = v217;
            unint64_t v27 = v241;
            unint64_t v219 = (v252 + v215) & v259;
            v265(v219, (v252 + v216) & v259, v267);
            *(void *)((v258 + v219) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v258 + ((v252 + v216) & v259)) & 0xFFFFFFFFFFFFFFF8);
            v196[v242] = v197[v242];
            char v214 = 2;
            break;
          case 3u:
            *(void *)uint64_t v196 = *(void *)v197;
            *(void *)(((v247 + v193) & v262) + 8) = *(void *)(((v247 + v194) & v262) + 8);
            unint64_t v220 = (unint64_t)&v196[v249] & v248;
            unint64_t v221 = (unint64_t)&v197[v249] & v248;
            v266 = *(void (**)(unint64_t, unint64_t, uint64_t))(v251 + 16);
            swift_bridgeObjectRetain();
            v266(v220, v221, v250);
            unint64_t v222 = (v252 + v220) & v259;
            v195(v222, (v252 + v221) & v259, v267);
            *(void *)((v258 + v222) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v258 + ((v252 + v221) & v259)) & 0xFFFFFFFFFFFFFFF8);
            char v214 = 3;
            break;
          default:
            char v214 = 0;
            *(_WORD *)uint64_t v196 = *(_WORD *)v197;
            break;
        }
        uint64_t v168 = a3;
        char v101 = 0;
        v196[v111] = v214;
        *((unsigned char *)v186 + v261) = 1;
        goto LABEL_215;
      }
      *unint64_t v186 = *(void *)v187;
      v186[1] = *(void *)(((v243 + v184) & v262) + 8);
      *((unsigned char *)v186 + v118) = 0;
      swift_bridgeObjectRetain();
      char v101 = 0;
    }
LABEL_191:
    uint64_t v168 = a3;
    goto LABEL_215;
  }
  uint64_t v38 = *((void *)v23 + 1);
  void *v31 = *(void *)v23;
  v31[1] = v38;
  uint64_t v39 = ((unint64_t)v31 + v5 + 16) & v259;
  uint64_t v40 = (unint64_t)&v23[v5 + 16] & v259;
  unsigned int v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(v268 + 16);
  swift_bridgeObjectRetain();
  v41(v39, v40, v267);
  uint64_t v42 = v255 + v9;
  uint64_t v43 = (v39 + v255 + v9) & v262;
  int v44 = (unsigned __int8 *)((v40 + v42) & v262);
  unint64_t v45 = v260;
  unsigned int v46 = v44[v260];
  unsigned int v47 = v46 - 4;
  if (v46 >= 4)
  {
    if (v260 <= 3) {
      uint64_t v48 = v260;
    }
    else {
      uint64_t v48 = 4;
    }
    switch(v48)
    {
      case 1:
        int v49 = *v44;
        goto LABEL_68;
      case 2:
        int v49 = *(unsigned __int16 *)v44;
        goto LABEL_68;
      case 3:
        int v49 = *(unsigned __int16 *)v44 | (v44[2] << 16);
        goto LABEL_68;
      case 4:
        int v49 = *(_DWORD *)v44;
LABEL_68:
        if (v260 < 4) {
          unsigned int v46 = (v49 | (v47 << (8 * v260))) + 4;
        }
        else {
          unsigned int v46 = v49 + 4;
        }
        break;
      default:
        break;
    }
  }
  switch(v46)
  {
    case 1u:
      *(unsigned char *)uint64_t v43 = *v44;
      char v71 = 1;
      break;
    case 2u:
      *(void *)uint64_t v43 = *(void *)v44;
      *(void *)(v43 + 8) = *((void *)v44 + 1);
      uint64_t v72 = (v249 + v43) & v248;
      unint64_t v73 = (unint64_t)&v44[v249] & v248;
      unint64_t v74 = v27;
      unsigned int v75 = *(void (**)(uint64_t, unint64_t, uint64_t))(v251 + 16);
      swift_bridgeObjectRetain();
      v75(v72, v73, v250);
      unint64_t v27 = v74;
      unint64_t v45 = v260;
      uint64_t v76 = (v252 + v72) & v259;
      unint64_t v77 = (v252 + v73) & v259;
      v41(v76, v77, v267);
      *(void *)((v258 + v76) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v258 + v77) & 0xFFFFFFFFFFFFFFF8);
      *(unsigned char *)(v242 + v43) = v44[v242];
      char v71 = 2;
      break;
    case 3u:
      *(void *)uint64_t v43 = *(void *)v44;
      *(void *)(v43 + 8) = *((void *)v44 + 1);
      uint64_t v78 = (v249 + v43) & v248;
      unint64_t v79 = (unint64_t)&v44[v249] & v248;
      int v80 = v41;
      unint64_t v81 = v27;
      uint64_t v82 = v23;
      unsigned int v83 = *(void (**)(uint64_t, unint64_t, uint64_t))(v251 + 16);
      swift_bridgeObjectRetain();
      v83(v78, v79, v250);
      uint64_t v23 = v82;
      unint64_t v27 = v81;
      unsigned int v41 = v80;
      unint64_t v45 = v260;
      uint64_t v84 = (v252 + v78) & v259;
      unint64_t v85 = (v252 + v79) & v259;
      v41(v84, v85, v267);
      *(void *)((v258 + v84) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v258 + v85) & 0xFFFFFFFFFFFFFFF8);
      char v71 = 3;
      break;
    default:
      char v71 = 0;
      *(_WORD *)uint64_t v43 = *(_WORD *)v44;
      break;
  }
  *(unsigned char *)(v43 + v45) = v71;
  int v86 = (void *)(((unint64_t)v31 + v26) & v262);
  unint64_t v87 = (unsigned __int8 *)((unint64_t)&v23[v26] & v262);
  unsigned int v88 = v87[v261];
  unsigned int v89 = v88 - 3;
  if (v88 >= 3)
  {
    if (v261 <= 3) {
      uint64_t v90 = v261;
    }
    else {
      uint64_t v90 = 4;
    }
    switch(v90)
    {
      case 1:
        int v91 = *v87;
        goto LABEL_86;
      case 2:
        int v91 = *(unsigned __int16 *)v87;
        goto LABEL_86;
      case 3:
        int v91 = *(unsigned __int16 *)v87 | (*(unsigned __int8 *)(((unint64_t)&v23[v26] & v262) + 2) << 16);
        goto LABEL_86;
      case 4:
        int v91 = *(_DWORD *)v87;
LABEL_86:
        int v92 = (v91 | (v89 << (8 * v261))) + 3;
        unsigned int v88 = v91 + 3;
        if (v261 < 4) {
          unsigned int v88 = v92;
        }
        break;
      default:
        break;
    }
  }
  if (v88 == 2)
  {
    v41(((unint64_t)v31 + v26) & v262, (unint64_t)&v23[v26] & v262, v267);
    *(_OWORD *)(((unint64_t)v86 + v258) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v87[v258] & 0xFFFFFFFFFFFFFFF8);
    char v101 = 2;
    *((unsigned char *)v86 + v261) = 2;
    goto LABEL_191;
  }
  if (v88 != 1)
  {
    *int v86 = *(void *)v87;
    *(void *)((((unint64_t)v31 + v26) & v262) + 8) = *(void *)(((unint64_t)&v23[v26] & v262) + 8);
    *((unsigned char *)v86 + v261) = 0;
    swift_bridgeObjectRetain();
    char v101 = 2;
    goto LABEL_191;
  }
  *int v86 = *(void *)v87;
  *(void *)((((unint64_t)v31 + v26) & v262) + 8) = *(void *)(((unint64_t)&v23[v26] & v262) + 8);
  unint64_t v93 = ((unint64_t)v86 + v246) & v259;
  unint64_t v94 = (unint64_t)&v87[v246] & v259;
  swift_bridgeObjectRetain();
  v41(v93, v94, v267);
  uint64_t v95 = (unsigned char *)((v247 + v93) & v262);
  int v96 = (unsigned __int8 *)((v247 + v94) & v262);
  unsigned int v97 = v96[v45];
  unsigned int v98 = v97 - 4;
  if (v97 >= 4)
  {
    if (v45 <= 3) {
      uint64_t v99 = v45;
    }
    else {
      uint64_t v99 = 4;
    }
    switch(v99)
    {
      case 1:
        int v100 = *v96;
        goto LABEL_150;
      case 2:
        int v100 = *(unsigned __int16 *)v96;
        goto LABEL_150;
      case 3:
        int v100 = *(unsigned __int16 *)v96 | (*(unsigned __int8 *)(((v247 + v94) & v262) + 2) << 16);
        goto LABEL_150;
      case 4:
        int v100 = *(_DWORD *)v96;
LABEL_150:
        int v157 = (v100 | (v98 << (8 * v45))) + 4;
        unsigned int v97 = v100 + 4;
        if (v45 < 4) {
          unsigned int v97 = v157;
        }
        break;
      default:
        break;
    }
  }
  switch(v97)
  {
    case 1u:
      *uint64_t v95 = *v96;
      char v158 = 1;
      break;
    case 2u:
      *(void *)uint64_t v95 = *(void *)v96;
      *(void *)(((v247 + v93) & v262) + 8) = *(void *)(((v247 + v94) & v262) + 8);
      unint64_t v159 = (unint64_t)&v95[v249] & v248;
      unint64_t v239 = v27;
      uint64_t v160 = v23;
      uint64_t v256 = v31;
      unint64_t v161 = *(void (**)(unint64_t, unint64_t, uint64_t))(v251 + 16);
      swift_bridgeObjectRetain();
      unint64_t v162 = (unint64_t)&v96[v249] & v248;
      v161(v159, v162, v250);
      uint64_t v23 = v160;
      unint64_t v27 = v239;
      unint64_t v163 = (v252 + v159) & v259;
      unint64_t v164 = (v252 + v162) & v259;
      v41(v163, v164, v267);
      uint64_t v31 = v256;
      *(void *)((v258 + v163) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v258 + v164) & 0xFFFFFFFFFFFFFFF8);
      v95[v242] = v96[v242];
      char v158 = 2;
      break;
    case 3u:
      *(void *)uint64_t v95 = *(void *)v96;
      *(void *)(((v247 + v93) & v262) + 8) = *(void *)(((v247 + v94) & v262) + 8);
      unint64_t v165 = (unint64_t)&v95[v249] & v248;
      unint64_t v166 = (unint64_t)&v96[v249] & v248;
      uint64_t v263 = *(void (**)(unint64_t, unint64_t, uint64_t))(v251 + 16);
      swift_bridgeObjectRetain();
      v263(v165, v166, v250);
      unint64_t v167 = (v252 + v165) & v259;
      v41(v167, (v252 + v166) & v259, v267);
      *(void *)((v258 + v167) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v258 + ((v252 + v166) & v259)) & 0xFFFFFFFFFFFFFFF8);
      char v158 = 3;
      break;
    default:
      char v158 = 0;
      *(_WORD *)uint64_t v95 = *(_WORD *)v96;
      break;
  }
  uint64_t v168 = a3;
  v95[v45] = v158;
  *((unsigned char *)v86 + v261) = 1;
  char v101 = 2;
LABEL_215:
  *((unsigned char *)v31 + v27) = v101;
  unint64_t v223 = (void *)(((unint64_t)v31 + v27 + 8) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v224 = (void *)((unint64_t)&v23[v27 + 8] & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v223 = *v224;
  v223[1] = v224[1];
  uint64_t v225 = *(void *)(v168 + 16);
  char v226 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v225 - 8) + 16);
  uint64_t v227 = *(void *)(v225 - 8) + 16;
  uint64_t v228 = *(unsigned __int8 *)(*(void *)(v225 - 8) + 80);
  uint64_t v229 = ((unint64_t)v223 + v228 + 16) & ~v228;
  uint64_t v230 = ((unint64_t)v224 + v228 + 16) & ~v228;
  swift_bridgeObjectRetain();
  v226(v229, v230, v225);
  *(unsigned char *)(*(void *)(v227 + 48) + v229) = *(unsigned char *)(*(void *)(v227 + 48) + v230);
  return v31;
}

unsigned __int8 *sub_22EDB6E10(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = a2;
  if (a1 != a2)
  {
    uint64_t v7 = sub_22EE7F6E0();
    uint64_t v330 = *(void *)(v7 - 8);
    uint64_t v331 = v7;
    uint64_t v8 = *(unsigned __int8 *)(v330 + 80);
    uint64_t v305 = v8 + 16;
    uint64_t v9 = *(void *)(v330 + 64);
    uint64_t v312 = sub_22EE7F5D0();
    uint64_t v313 = *(void *)(v312 - 8);
    uint64_t v10 = *(unsigned __int8 *)(v313 + 80);
    uint64_t v11 = v8 | 7;
    uint64_t v12 = v8 | 7 | v10;
    uint64_t v306 = v12 + v9;
    uint64_t v311 = v10 + 16;
    uint64_t v314 = *(void *)(v313 + 64) + v8;
    uint64_t v325 = v8;
    uint64_t v323 = v9;
    uint64_t v13 = v9 + 7;
    unint64_t v14 = (v9 + 7 + ((v314 + ((v10 + 16) & ~v10)) & ~v8)) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v15 = v14 + 8;
    unint64_t v16 = v14 + 9;
    unint64_t v304 = v15;
    if (v16 <= v15) {
      unint64_t v16 = v15;
    }
    if (v16 <= 2) {
      unint64_t v16 = 2;
    }
    unint64_t v328 = v16;
    unint64_t v17 = v16 + ((v12 + v9 + ((v8 + 16) & ~v8)) & ~v12);
    unint64_t v18 = v17 + 1;
    uint64_t v316 = v9 + 7;
    unint64_t v19 = (v13 & 0xFFFFFFFFFFFFFFF8) + 16;
    if (v17 + 1 > v19) {
      unint64_t v20 = v17 + 1;
    }
    else {
      unint64_t v20 = (v13 & 0xFFFFFFFFFFFFFFF8) + 16;
    }
    if (v20 <= 0x10) {
      unint64_t v20 = 16;
    }
    unint64_t v21 = v20 + 1;
    unint64_t v22 = v20;
    unint64_t v23 = v20 & 0xFFFFFFFFFFFFFFF8;
    uint64_t v321 = sub_22EE7C220();
    uint64_t v319 = *(void *)(v321 - 8);
    uint64_t v24 = *(unsigned __int8 *)(v319 + 80);
    uint64_t v320 = *(void *)(v319 + 64) + v12;
    unint64_t v25 = ((v320 + ((v24 + v23 + 24) & ~v24)) & ~v12) + v21;
    unint64_t v309 = v25 + v11;
    if (((v25 + v11) & ~v11) + v19 > v25) {
      unint64_t v25 = ((v25 + v11) & ~v11) + v19;
    }
    unint64_t v307 = v18 + v12;
    unint64_t v318 = v21;
    if (v21 + ((v18 + v12) & ~v12) <= v25) {
      unint64_t v26 = v25;
    }
    else {
      unint64_t v26 = v21 + ((v18 + v12) & ~v12);
    }
    unsigned int v27 = a1[v26];
    unsigned int v28 = v27 - 3;
    unint64_t v332 = v22;
    if (v27 < 3)
    {
      uint64_t v4 = a2;
    }
    else
    {
      if (v26 <= 3) {
        uint64_t v29 = v26;
      }
      else {
        uint64_t v29 = 4;
      }
      uint64_t v4 = a2;
      switch(v29)
      {
        case 1:
          int v30 = *a1;
          goto LABEL_26;
        case 2:
          int v30 = *(unsigned __int16 *)a1;
          goto LABEL_26;
        case 3:
          int v30 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_26;
        case 4:
          int v30 = *(_DWORD *)a1;
LABEL_26:
          if (v26 < 4) {
            v30 |= v28 << (8 * v26);
          }
          unsigned int v27 = v30 + 3;
          break;
        default:
          break;
      }
    }
    uint64_t v329 = ~v325;
    uint64_t v31 = ~v12;
    uint64_t v310 = ~v10;
    uint64_t v317 = ~v24;
    uint64_t v32 = ~v11;
    unint64_t v324 = v26;
    uint64_t v322 = *(unsigned __int8 *)(v319 + 80);
    if (v27 != 2)
    {
      if (v27 == 1)
      {
        unsigned int v33 = a1[v22];
        unsigned int v34 = v33 - 3;
        if (v33 >= 3)
        {
          if (v22 <= 3) {
            uint64_t v35 = v22;
          }
          else {
            uint64_t v35 = 4;
          }
          switch(v35)
          {
            case 1:
              int v36 = *a1;
              goto LABEL_52;
            case 2:
              int v36 = *(unsigned __int16 *)a1;
              goto LABEL_52;
            case 3:
              int v36 = *(unsigned __int16 *)a1 | (a1[2] << 16);
              goto LABEL_52;
            case 4:
              int v36 = *(_DWORD *)a1;
LABEL_52:
              if (v22 < 4) {
                unsigned int v33 = (v36 | (v34 << (8 * v22))) + 3;
              }
              else {
                unsigned int v33 = v36 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v33 == 2)
        {
          (*(void (**)(unsigned __int8 *, uint64_t))(v330 + 8))(a1, v331);
        }
        else if (v33 == 1)
        {
          swift_bridgeObjectRelease();
          uint64_t v48 = (unint64_t)&a1[v325 + 16] & v329;
          int v49 = *(void (**)(uint64_t, uint64_t))(v330 + 8);
          v49(v48, v331);
          unsigned int v50 = (unsigned __int8 *)((v48 + v323 + v12) & v31);
          unsigned int v51 = v50[v328];
          unsigned int v52 = v51 - 4;
          if (v51 >= 4)
          {
            if (v328 <= 3) {
              uint64_t v53 = v328;
            }
            else {
              uint64_t v53 = 4;
            }
            switch(v53)
            {
              case 1:
                int v54 = *v50;
                goto LABEL_114;
              case 2:
                int v54 = *(unsigned __int16 *)v50;
                goto LABEL_114;
              case 3:
                int v54 = *(unsigned __int16 *)v50 | (*(unsigned __int8 *)(((v48 + v323 + v12) & v31) + 2) << 16);
                goto LABEL_114;
              case 4:
                int v54 = *(_DWORD *)v50;
LABEL_114:
                if (v328 < 4) {
                  unsigned int v51 = (v54 | (v52 << (8 * v328))) + 4;
                }
                else {
                  unsigned int v51 = v54 + 4;
                }
                break;
              default:
                break;
            }
          }
          if (v51 >= 2)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v313 + 8))((unint64_t)&v50[v311] & v310, v312);
            v49((v314 + ((unint64_t)&v50[v311] & v310)) & v329, v331);
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        unint64_t v75 = (v322 + ((unint64_t)&a1[v318 + 7] & 0xFFFFFFFFFFFFFFF8) + 16) & v317;
        (*(void (**)(unint64_t, uint64_t))(v319 + 8))(v75, v321);
        uint64_t v76 = (unsigned __int8 *)((v320 + v75) & v31);
        unsigned int v77 = v76[v22];
        unsigned int v78 = v77 - 3;
        if (v77 >= 3)
        {
          if (v22 <= 3) {
            uint64_t v79 = v22;
          }
          else {
            uint64_t v79 = 4;
          }
          switch(v79)
          {
            case 1:
              int v80 = *v76;
              goto LABEL_128;
            case 2:
              int v80 = *(unsigned __int16 *)v76;
              goto LABEL_128;
            case 3:
              int v80 = *(unsigned __int16 *)v76 | (v76[2] << 16);
              goto LABEL_128;
            case 4:
              int v80 = *(_DWORD *)v76;
LABEL_128:
              if (v22 < 4) {
                unsigned int v77 = (v80 | (v78 << (8 * v22))) + 3;
              }
              else {
                unsigned int v77 = v80 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v77 != 2)
        {
          if (v77 == 1)
          {
            swift_bridgeObjectRelease();
            unint64_t v81 = (unint64_t)&v76[v305] & v329;
            uint64_t v82 = *(void (**)(unint64_t, uint64_t))(v330 + 8);
            v82(v81, v331);
            unsigned int v83 = (unsigned __int8 *)((v306 + v81) & v31);
            unsigned int v84 = v83[v328];
            unsigned int v85 = v84 - 4;
            if (v84 >= 4)
            {
              if (v328 <= 3) {
                uint64_t v86 = v328;
              }
              else {
                uint64_t v86 = 4;
              }
              switch(v86)
              {
                case 1:
                  int v87 = *v83;
                  goto LABEL_184;
                case 2:
                  int v87 = *(unsigned __int16 *)v83;
                  goto LABEL_184;
                case 3:
                  int v87 = *(unsigned __int16 *)v83 | (v83[2] << 16);
                  goto LABEL_184;
                case 4:
                  int v87 = *(_DWORD *)v83;
LABEL_184:
                  if (v328 < 4) {
                    unsigned int v84 = (v87 | (v85 << (8 * v328))) + 4;
                  }
                  else {
                    unsigned int v84 = v87 + 4;
                  }
                  break;
                default:
                  break;
              }
            }
            if (v84 >= 2)
            {
              swift_bridgeObjectRelease();
              unint64_t v103 = (unint64_t)&v83[v311] & v310;
              (*(void (**)(unint64_t, uint64_t))(v313 + 8))(v103, v312);
              unint64_t v104 = (v314 + v103) & v329;
              uint64_t v102 = v331;
              v82(v104, v331);
              goto LABEL_190;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            uint64_t v82 = *(void (**)(unint64_t, uint64_t))(v330 + 8);
          }
          uint64_t v102 = v331;
LABEL_190:
          v82((unint64_t)&a1[v309] & v32, v102);
          goto LABEL_191;
        }
        unsigned int v88 = *(void (**)(unsigned __int8 *, uint64_t))(v330 + 8);
        v88(v76, v331);
        v88((unsigned __int8 *)((unint64_t)&a1[v309] & v32), v331);
LABEL_191:
        unint64_t v65 = v324;
        goto LABEL_192;
      }
      unsigned int v44 = a1[v22];
      unsigned int v45 = v44 - 3;
      if (v44 >= 3)
      {
        if (v22 <= 3) {
          uint64_t v46 = v22;
        }
        else {
          uint64_t v46 = 4;
        }
        switch(v46)
        {
          case 1:
            int v47 = *a1;
            goto LABEL_98;
          case 2:
            int v47 = *(unsigned __int16 *)a1;
            goto LABEL_98;
          case 3:
            int v47 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            goto LABEL_98;
          case 4:
            int v47 = *(_DWORD *)a1;
LABEL_98:
            if (v22 < 4) {
              unsigned int v44 = (v47 | (v45 << (8 * v22))) + 3;
            }
            else {
              unsigned int v44 = v47 + 3;
            }
            break;
          default:
            break;
        }
      }
      if (v44 == 2)
      {
        (*(void (**)(unsigned __int8 *, uint64_t))(v330 + 8))(a1, v331);
      }
      else if (v44 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v68 = (unint64_t)&a1[v325 + 16] & v329;
        uint64_t v69 = *(void (**)(uint64_t, uint64_t))(v330 + 8);
        v69(v68, v331);
        unint64_t v70 = (unsigned __int8 *)((v68 + v323 + v12) & v31);
        unsigned int v71 = v70[v328];
        unsigned int v72 = v71 - 4;
        if (v71 >= 4)
        {
          if (v328 <= 3) {
            uint64_t v73 = v328;
          }
          else {
            uint64_t v73 = 4;
          }
          switch(v73)
          {
            case 1:
              int v74 = *v70;
              goto LABEL_153;
            case 2:
              int v74 = *(unsigned __int16 *)v70;
              goto LABEL_153;
            case 3:
              int v74 = *(unsigned __int16 *)v70 | (*(unsigned __int8 *)(((v68 + v323 + v12) & v31) + 2) << 16);
              goto LABEL_153;
            case 4:
              int v74 = *(_DWORD *)v70;
LABEL_153:
              if (v328 < 4) {
                unsigned int v71 = (v74 | (v72 << (8 * v328))) + 4;
              }
              else {
                unsigned int v71 = v74 + 4;
              }
              break;
            default:
              break;
          }
        }
        if (v71 >= 2)
        {
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v313 + 8))((unint64_t)&v70[v311] & v310, v312);
          v69((v314 + ((unint64_t)&v70[v311] & v310)) & v329, v331);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      unint64_t v89 = (v322 + ((unint64_t)&a1[v318 + 7] & 0xFFFFFFFFFFFFFFF8) + 16) & v317;
      (*(void (**)(unint64_t, uint64_t))(v319 + 8))(v89, v321);
      uint64_t v90 = (unsigned __int8 *)((v320 + v89) & v31);
      unsigned int v91 = v90[v22];
      unsigned int v92 = v91 - 3;
      if (v91 >= 3)
      {
        if (v22 <= 3) {
          uint64_t v93 = v22;
        }
        else {
          uint64_t v93 = 4;
        }
        switch(v93)
        {
          case 1:
            int v94 = *v90;
            goto LABEL_167;
          case 2:
            int v94 = *(unsigned __int16 *)v90;
            goto LABEL_167;
          case 3:
            int v94 = *(unsigned __int16 *)v90 | (v90[2] << 16);
            goto LABEL_167;
          case 4:
            int v94 = *(_DWORD *)v90;
LABEL_167:
            if (v22 < 4) {
              unsigned int v91 = (v94 | (v92 << (8 * v22))) + 3;
            }
            else {
              unsigned int v91 = v94 + 3;
            }
            break;
          default:
            break;
        }
      }
      if (v91 == 2)
      {
        (*(void (**)(unsigned __int8 *, uint64_t))(v330 + 8))(v90, v331);
        goto LABEL_191;
      }
      if (v91 == 1)
      {
        swift_bridgeObjectRelease();
        unint64_t v95 = (unint64_t)&v90[v305] & v329;
        int v96 = *(void (**)(unint64_t, uint64_t))(v330 + 8);
        v96(v95, v331);
        unsigned int v97 = (unsigned __int8 *)((v306 + v95) & v31);
        unsigned int v98 = v97[v328];
        unsigned int v99 = v98 - 4;
        if (v98 < 4)
        {
          unint64_t v65 = v324;
        }
        else
        {
          if (v328 <= 3) {
            uint64_t v100 = v328;
          }
          else {
            uint64_t v100 = 4;
          }
          unint64_t v65 = v324;
          switch(v100)
          {
            case 1:
              int v101 = *v97;
              goto LABEL_296;
            case 2:
              int v101 = *(unsigned __int16 *)v97;
              goto LABEL_296;
            case 3:
              int v101 = *(unsigned __int16 *)v97 | (*(unsigned __int8 *)(((v306 + v95) & v31) + 2) << 16);
              goto LABEL_296;
            case 4:
              int v101 = *(_DWORD *)v97;
LABEL_296:
              if (v328 < 4) {
                unsigned int v98 = (v101 | (v99 << (8 * v328))) + 4;
              }
              else {
                unsigned int v98 = v101 + 4;
              }
              break;
            default:
              break;
          }
        }
        if (v98 >= 2)
        {
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v313 + 8))((unint64_t)&v97[v311] & v310, v312);
          v96((v314 + ((unint64_t)&v97[v311] & v310)) & v329, v331);
          goto LABEL_191;
        }
LABEL_192:
        unsigned int v105 = v4[v65];
        unsigned int v106 = v105 - 3;
        if (v105 >= 3)
        {
          if (v65 <= 3) {
            uint64_t v107 = v65;
          }
          else {
            uint64_t v107 = 4;
          }
          switch(v107)
          {
            case 1:
              int v108 = *v4;
              goto LABEL_201;
            case 2:
              int v108 = *(unsigned __int16 *)v4;
              goto LABEL_201;
            case 3:
              int v108 = *(unsigned __int16 *)v4 | (v4[2] << 16);
              goto LABEL_201;
            case 4:
              int v108 = *(_DWORD *)v4;
LABEL_201:
              if (v65 < 4) {
                unsigned int v105 = (v108 | (v106 << (8 * v65))) + 3;
              }
              else {
                unsigned int v105 = v108 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v105 != 2)
        {
          if (v105 == 1)
          {
            unsigned int v109 = v4[v22];
            unsigned int v110 = v109 - 3;
            if (v109 >= 3)
            {
              if (v22 <= 3) {
                uint64_t v111 = v22;
              }
              else {
                uint64_t v111 = 4;
              }
              switch(v111)
              {
                case 1:
                  int v112 = *v4;
                  goto LABEL_228;
                case 2:
                  int v112 = *(unsigned __int16 *)v4;
                  goto LABEL_228;
                case 3:
                  int v112 = *(unsigned __int16 *)v4 | (v4[2] << 16);
                  goto LABEL_228;
                case 4:
                  int v112 = *(_DWORD *)v4;
LABEL_228:
                  if (v22 < 4) {
                    unsigned int v109 = (v112 | (v110 << (8 * v22))) + 3;
                  }
                  else {
                    unsigned int v109 = v112 + 3;
                  }
                  break;
                default:
                  break;
              }
            }
            uint64_t v308 = v32;
            if (v109 == 2)
            {
              uint64_t v138 = v331;
              (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v330 + 16))(a1, v4, v331);
              *(_OWORD *)((unint64_t)&a1[v323 + 7] & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v4[v323 + 7] & 0xFFFFFFFFFFFFFFF8);
              a1[v22] = 2;
            }
            else
            {
              if (v109 == 1)
              {
                *(void *)a1 = *(void *)v4;
                *((void *)a1 + 1) = *((void *)v4 + 1);
                uint64_t v128 = (unint64_t)&a1[v325 + 16] & v329;
                uint64_t v129 = (unint64_t)&v4[v325 + 16] & v329;
                unint64_t v130 = *(void (**)(uint64_t, uint64_t, uint64_t))(v330 + 16);
                swift_bridgeObjectRetain();
                v130(v128, v129, v331);
                uint64_t v131 = (v128 + v323 + v12) & v31;
                unint64_t v132 = (unsigned __int8 *)((v129 + v323 + v12) & v31);
                unint64_t v133 = v328;
                unsigned int v134 = v132[v328];
                unsigned int v135 = v134 - 4;
                if (v134 >= 4)
                {
                  if (v328 <= 3) {
                    uint64_t v136 = v328;
                  }
                  else {
                    uint64_t v136 = 4;
                  }
                  switch(v136)
                  {
                    case 1:
                      int v137 = *v132;
                      goto LABEL_304;
                    case 2:
                      int v137 = *(unsigned __int16 *)v132;
                      goto LABEL_304;
                    case 3:
                      int v137 = *(unsigned __int16 *)v132 | (v132[2] << 16);
                      goto LABEL_304;
                    case 4:
                      int v137 = *(_DWORD *)v132;
LABEL_304:
                      if (v328 < 4) {
                        unsigned int v134 = (v137 | (v135 << (8 * v328))) + 4;
                      }
                      else {
                        unsigned int v134 = v137 + 4;
                      }
                      break;
                    default:
                      break;
                  }
                }
                switch(v134)
                {
                  case 1u:
                    *(unsigned char *)uint64_t v131 = *v132;
                    char v180 = 1;
                    goto LABEL_310;
                  case 2u:
                    *(void *)uint64_t v131 = *(void *)v132;
                    *(void *)(v131 + 8) = *((void *)v132 + 1);
                    uint64_t v181 = (v311 + v131) & v310;
                    unint64_t v182 = (unint64_t)&v132[v311] & v310;
                    v326 = *(void (**)(uint64_t, unint64_t, uint64_t))(v313 + 16);
                    swift_bridgeObjectRetain();
                    v326(v181, v182, v312);
                    uint64_t v183 = (v314 + v181) & v329;
                    unint64_t v184 = (v314 + v182) & v329;
                    v130(v183, v184, v331);
                    unint64_t v133 = v328;
                    *(void *)((v316 + v183) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v316 + v184) & 0xFFFFFFFFFFFFFFF8);
                    unsigned __int8 v185 = v132[v304];
                    uint64_t v138 = v331;
                    *(unsigned char *)(v304 + v131) = v185;
                    char v180 = 2;
                    break;
                  case 3u:
                    *(void *)uint64_t v131 = *(void *)v132;
                    *(void *)(v131 + 8) = *((void *)v132 + 1);
                    uint64_t v186 = (v311 + v131) & v310;
                    unint64_t v187 = (unint64_t)&v132[v311] & v310;
                    unsigned int v188 = *(void (**)(uint64_t, unint64_t, uint64_t))(v313 + 16);
                    swift_bridgeObjectRetain();
                    v188(v186, v187, v312);
                    uint64_t v189 = (v314 + v186) & v329;
                    unint64_t v190 = (v314 + v187) & v329;
                    uint64_t v138 = v331;
                    v130(v189, v190, v331);
                    unint64_t v133 = v328;
                    *(void *)((v316 + v189) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v316 + v190) & 0xFFFFFFFFFFFFFFF8);
                    char v180 = 3;
                    break;
                  default:
                    char v180 = 0;
                    *(_WORD *)uint64_t v131 = *(_WORD *)v132;
LABEL_310:
                    uint64_t v138 = v331;
                    break;
                }
                uint64_t v139 = v322;
                *(unsigned char *)(v131 + v133) = v180;
                a1[v332] = 1;
                goto LABEL_314;
              }
              *(void *)a1 = *(void *)v4;
              *((void *)a1 + 1) = *((void *)v4 + 1);
              a1[v22] = 0;
              swift_bridgeObjectRetain();
              uint64_t v138 = v331;
            }
            uint64_t v139 = v322;
LABEL_314:
            int v191 = (void *)((unint64_t)&a1[v318 + 7] & 0xFFFFFFFFFFFFFFF8);
            int v192 = (void *)((unint64_t)&v4[v318 + 7] & 0xFFFFFFFFFFFFFFF8);
            *int v191 = *v192;
            v191[1] = v192[1];
            uint64_t v193 = ((unint64_t)v191 + v139 + 16) & v317;
            uint64_t v194 = ((unint64_t)v192 + v139 + 16) & v317;
            uint64_t v195 = *(void (**)(uint64_t, uint64_t, uint64_t))(v319 + 16);
            swift_bridgeObjectRetain();
            v195(v193, v194, v321);
            uint64_t v196 = (void *)((v320 + v193) & v31);
            uint64_t v197 = (unsigned __int8 *)((v320 + v194) & v31);
            unsigned int v198 = v197[v332];
            unsigned int v199 = v198 - 3;
            if (v198 < 3)
            {
              uint64_t v201 = v308;
            }
            else
            {
              if (v332 <= 3) {
                uint64_t v200 = v332;
              }
              else {
                uint64_t v200 = 4;
              }
              uint64_t v201 = v308;
              switch(v200)
              {
                case 1:
                  int v202 = *v197;
                  goto LABEL_324;
                case 2:
                  int v202 = *(unsigned __int16 *)v197;
                  goto LABEL_324;
                case 3:
                  int v202 = *(unsigned __int16 *)v197 | (v197[2] << 16);
                  goto LABEL_324;
                case 4:
                  int v202 = *(_DWORD *)v197;
LABEL_324:
                  if (v332 < 4) {
                    unsigned int v198 = (v202 | (v199 << (8 * v332))) + 3;
                  }
                  else {
                    unsigned int v198 = v202 + 3;
                  }
                  break;
                default:
                  break;
              }
            }
            if (v198 == 2)
            {
              unint64_t v205 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v330 + 16);
              v205(v196, v197, v138);
              *(_OWORD *)(((unint64_t)v196 + v316) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v197[v316] & 0xFFFFFFFFFFFFFFF8);
              *((unsigned char *)v196 + v332) = 2;
            }
            else if (v198 == 1)
            {
              *uint64_t v196 = *(void *)v197;
              v196[1] = *((void *)v197 + 1);
              unint64_t v203 = ((unint64_t)v196 + v305) & v329;
              unint64_t v204 = (unint64_t)&v197[v305] & v329;
              unint64_t v205 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v330 + 16);
              swift_bridgeObjectRetain();
              v205((void *)v203, (unsigned __int8 *)v204, v138);
              unint64_t v206 = (v306 + v203) & v31;
              unint64_t v207 = (unsigned __int8 *)((v306 + v204) & v31);
              unint64_t v208 = v328;
              unsigned int v209 = v207[v328];
              unsigned int v210 = v209 - 4;
              if (v209 >= 4)
              {
                if (v328 <= 3) {
                  uint64_t v211 = v328;
                }
                else {
                  uint64_t v211 = 4;
                }
                switch(v211)
                {
                  case 1:
                    int v212 = *v207;
                    goto LABEL_389;
                  case 2:
                    int v212 = *(unsigned __int16 *)v207;
                    goto LABEL_389;
                  case 3:
                    int v212 = *(unsigned __int16 *)v207 | (*(unsigned __int8 *)(((v306 + v204) & v31) + 2) << 16);
                    goto LABEL_389;
                  case 4:
                    int v212 = *(_DWORD *)v207;
LABEL_389:
                    if (v328 < 4) {
                      unsigned int v209 = (v212 | (v210 << (8 * v328))) + 4;
                    }
                    else {
                      unsigned int v209 = v212 + 4;
                    }
                    break;
                  default:
                    break;
                }
              }
              switch(v209)
              {
                case 1u:
                  *(unsigned char *)unint64_t v206 = *v207;
                  char v258 = 1;
                  break;
                case 2u:
                  *(void *)unint64_t v206 = *(void *)v207;
                  *(void *)(v206 + 8) = *(void *)(((v306 + v204) & v31) + 8);
                  unint64_t v259 = (v311 + v206) & v310;
                  unint64_t v260 = (unint64_t)&v207[v311] & v310;
                  unint64_t v261 = *(void (**)(unint64_t, unint64_t, uint64_t))(v313 + 16);
                  swift_bridgeObjectRetain();
                  v261(v259, v260, v312);
                  uint64_t v262 = (v314 + v259) & v329;
                  v205((void *)v262, (unsigned __int8 *)((v314 + v260) & v329), v331);
                  unint64_t v208 = v328;
                  *(void *)((v316 + v262) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v316 + ((v314 + v260) & v329)) & 0xFFFFFFFFFFFFFFF8);
                  *(unsigned char *)(v206 + v304) = v207[v304];
                  char v258 = 2;
                  break;
                case 3u:
                  *(void *)unint64_t v206 = *(void *)v207;
                  *(void *)(v206 + 8) = *(void *)(((v306 + v204) & v31) + 8);
                  unint64_t v263 = (v311 + v206) & v310;
                  unint64_t v264 = (unint64_t)&v207[v311] & v310;
                  uint64_t v265 = *(void (**)(unint64_t, unint64_t, uint64_t))(v313 + 16);
                  swift_bridgeObjectRetain();
                  v265(v263, v264, v312);
                  uint64_t v266 = (v314 + v263) & v329;
                  v205((void *)v266, (unsigned __int8 *)((v314 + v264) & v329), v331);
                  unint64_t v208 = v328;
                  *(void *)((v316 + v266) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v316 + ((v314 + v264) & v329)) & 0xFFFFFFFFFFFFFFF8);
                  char v258 = 3;
                  break;
                default:
                  char v258 = 0;
                  *(_WORD *)unint64_t v206 = *(_WORD *)v207;
                  break;
              }
              *(unsigned char *)(v206 + v208) = v258;
              uint64_t v138 = v331;
              *((unsigned char *)v196 + v332) = 1;
              uint64_t v201 = v308;
            }
            else
            {
              *uint64_t v196 = *(void *)v197;
              v196[1] = *((void *)v197 + 1);
              *((unsigned char *)v196 + v332) = 0;
              unint64_t v205 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v330 + 16);
              swift_bridgeObjectRetain();
            }
            v205((void *)((unint64_t)&a1[v309] & v201), (unsigned __int8 *)((unint64_t)&v4[v309] & v201), v138);
            *(_OWORD *)((v316 + ((unint64_t)&a1[v309] & v201)) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v316 + ((unint64_t)&v4[v309] & v201)) & 0xFFFFFFFFFFFFFFF8);
            char v224 = 1;
            unint64_t v167 = v324;
            goto LABEL_399;
          }
          unsigned int v124 = v4[v22];
          unsigned int v125 = v124 - 3;
          if (v124 >= 3)
          {
            if (v22 <= 3) {
              uint64_t v126 = v22;
            }
            else {
              uint64_t v126 = 4;
            }
            switch(v126)
            {
              case 1:
                int v127 = *v4;
                goto LABEL_279;
              case 2:
                int v127 = *(unsigned __int16 *)v4;
                goto LABEL_279;
              case 3:
                int v127 = *(unsigned __int16 *)v4 | (v4[2] << 16);
                goto LABEL_279;
              case 4:
                int v127 = *(_DWORD *)v4;
LABEL_279:
                if (v22 < 4) {
                  unsigned int v124 = (v127 | (v125 << (8 * v22))) + 3;
                }
                else {
                  unsigned int v124 = v127 + 3;
                }
                break;
              default:
                break;
            }
          }
          if (v124 == 2)
          {
            uint64_t v178 = v331;
            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v330 + 16))(a1, v4, v331);
            *(_OWORD *)((unint64_t)&a1[v323 + 7] & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v4[v323 + 7] & 0xFFFFFFFFFFFFFFF8);
            a1[v22] = 2;
          }
          else
          {
            if (v124 == 1)
            {
              *(void *)a1 = *(void *)v4;
              *((void *)a1 + 1) = *((void *)v4 + 1);
              uint64_t v168 = (unint64_t)&a1[v325 + 16] & v329;
              uint64_t v169 = (unint64_t)&v4[v325 + 16] & v329;
              uint64_t v170 = *(void (**)(uint64_t, uint64_t, uint64_t))(v330 + 16);
              swift_bridgeObjectRetain();
              v170(v168, v169, v331);
              uint64_t v171 = (v168 + v323 + v12) & v31;
              unint64_t v172 = (unsigned __int8 *)((v169 + v323 + v12) & v31);
              unint64_t v173 = v328;
              unsigned int v174 = v172[v328];
              unsigned int v175 = v174 - 4;
              if (v174 >= 4)
              {
                if (v328 <= 3) {
                  uint64_t v176 = v328;
                }
                else {
                  uint64_t v176 = 4;
                }
                switch(v176)
                {
                  case 1:
                    int v177 = *v172;
                    goto LABEL_353;
                  case 2:
                    int v177 = *(unsigned __int16 *)v172;
                    goto LABEL_353;
                  case 3:
                    int v177 = *(unsigned __int16 *)v172 | (v172[2] << 16);
                    goto LABEL_353;
                  case 4:
                    int v177 = *(_DWORD *)v172;
LABEL_353:
                    if (v328 < 4) {
                      unsigned int v174 = (v177 | (v175 << (8 * v328))) + 4;
                    }
                    else {
                      unsigned int v174 = v177 + 4;
                    }
                    break;
                  default:
                    break;
                }
              }
              switch(v174)
              {
                case 1u:
                  *(unsigned char *)uint64_t v171 = *v172;
                  char v225 = 1;
                  goto LABEL_359;
                case 2u:
                  *(void *)uint64_t v171 = *(void *)v172;
                  *(void *)(v171 + 8) = *((void *)v172 + 1);
                  uint64_t v226 = (v311 + v171) & v310;
                  unint64_t v227 = (unint64_t)&v172[v311] & v310;
                  v327 = *(void (**)(uint64_t, unint64_t, uint64_t))(v313 + 16);
                  swift_bridgeObjectRetain();
                  v327(v226, v227, v312);
                  uint64_t v228 = (v314 + v226) & v329;
                  unint64_t v229 = (v314 + v227) & v329;
                  v170(v228, v229, v331);
                  unint64_t v173 = v328;
                  *(void *)((v316 + v228) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v316 + v229) & 0xFFFFFFFFFFFFFFF8);
                  unsigned __int8 v230 = v172[v304];
                  uint64_t v178 = v331;
                  *(unsigned char *)(v304 + v171) = v230;
                  char v225 = 2;
                  break;
                case 3u:
                  *(void *)uint64_t v171 = *(void *)v172;
                  *(void *)(v171 + 8) = *((void *)v172 + 1);
                  uint64_t v231 = (v311 + v171) & v310;
                  unint64_t v232 = (unint64_t)&v172[v311] & v310;
                  uint64_t v233 = *(void (**)(uint64_t, unint64_t, uint64_t))(v313 + 16);
                  swift_bridgeObjectRetain();
                  v233(v231, v232, v312);
                  uint64_t v234 = (v314 + v231) & v329;
                  unint64_t v235 = (v314 + v232) & v329;
                  uint64_t v178 = v331;
                  v170(v234, v235, v331);
                  unint64_t v173 = v328;
                  *(void *)((v316 + v234) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v316 + v235) & 0xFFFFFFFFFFFFFFF8);
                  char v225 = 3;
                  break;
                default:
                  char v225 = 0;
                  *(_WORD *)uint64_t v171 = *(_WORD *)v172;
LABEL_359:
                  uint64_t v178 = v331;
                  break;
              }
              uint64_t v179 = v322;
              *(unsigned char *)(v171 + v173) = v225;
              a1[v332] = 1;
LABEL_363:
              unint64_t v236 = (void *)((unint64_t)&a1[v318 + 7] & 0xFFFFFFFFFFFFFFF8);
              uint64_t v237 = (void *)((unint64_t)&v4[v318 + 7] & 0xFFFFFFFFFFFFFFF8);
              *unint64_t v236 = *v237;
              v236[1] = v237[1];
              uint64_t v238 = ((unint64_t)v236 + v179 + 16) & v317;
              uint64_t v239 = ((unint64_t)v237 + v179 + 16) & v317;
              unint64_t v240 = *(void (**)(uint64_t, uint64_t, uint64_t))(v319 + 16);
              swift_bridgeObjectRetain();
              v240(v238, v239, v321);
              unint64_t v241 = (void *)((v320 + v238) & v31);
              unint64_t v242 = (unsigned __int8 *)((v320 + v239) & v31);
              unsigned int v243 = v242[v332];
              unsigned int v244 = v243 - 3;
              if (v243 >= 3)
              {
                if (v332 <= 3) {
                  uint64_t v245 = v332;
                }
                else {
                  uint64_t v245 = 4;
                }
                switch(v245)
                {
                  case 1:
                    int v246 = *v242;
                    goto LABEL_372;
                  case 2:
                    int v246 = *(unsigned __int16 *)v242;
                    goto LABEL_372;
                  case 3:
                    int v246 = *(unsigned __int16 *)v242 | (*(unsigned __int8 *)(((v320 + v239) & v31) + 2) << 16);
                    goto LABEL_372;
                  case 4:
                    int v246 = *(_DWORD *)v242;
LABEL_372:
                    if (v332 < 4) {
                      unsigned int v243 = (v246 | (v244 << (8 * v332))) + 3;
                    }
                    else {
                      unsigned int v243 = v246 + 3;
                    }
                    break;
                  default:
                    break;
                }
              }
              if (v243 == 2)
              {
                (*(void (**)(void *, uint64_t, uint64_t))(v330 + 16))(v241, (v320 + v239) & v31, v178);
                *(_OWORD *)(((unint64_t)v241 + v316) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v242[v316] & 0xFFFFFFFFFFFFFFF8);
                *((unsigned char *)v241 + v332) = 2;
              }
              else
              {
                if (v243 == 1)
                {
                  *unint64_t v241 = *(void *)v242;
                  v241[1] = *(void *)(((v320 + v239) & v31) + 8);
                  unint64_t v247 = ((unint64_t)v241 + v305) & v329;
                  unint64_t v248 = (unint64_t)&v242[v305] & v329;
                  uint64_t v249 = *(void (**)(unint64_t, unint64_t, uint64_t))(v330 + 16);
                  swift_bridgeObjectRetain();
                  v249(v247, v248, v178);
                  uint64_t v250 = (unsigned char *)((v306 + v247) & v31);
                  uint64_t v251 = (unsigned __int8 *)((v306 + v248) & v31);
                  unint64_t v252 = v328;
                  unsigned int v253 = v251[v328];
                  unsigned int v254 = v253 - 4;
                  if (v253 >= 4)
                  {
                    if (v328 <= 3) {
                      uint64_t v255 = v328;
                    }
                    else {
                      uint64_t v255 = 4;
                    }
                    switch(v255)
                    {
                      case 1:
                        int v256 = *v251;
                        goto LABEL_403;
                      case 2:
                        int v256 = *(unsigned __int16 *)v251;
                        goto LABEL_403;
                      case 3:
                        int v256 = *(unsigned __int16 *)v251 | (*(unsigned __int8 *)(((v306 + v248) & v31) + 2) << 16);
                        goto LABEL_403;
                      case 4:
                        int v256 = *(_DWORD *)v251;
LABEL_403:
                        if (v328 < 4) {
                          unsigned int v253 = (v256 | (v254 << (8 * v328))) + 4;
                        }
                        else {
                          unsigned int v253 = v256 + 4;
                        }
                        break;
                      default:
                        break;
                    }
                  }
                  switch(v253)
                  {
                    case 1u:
                      *uint64_t v250 = *v251;
                      char v267 = 1;
                      break;
                    case 2u:
                      *(void *)uint64_t v250 = *(void *)v251;
                      *(void *)(((v306 + v247) & v31) + 8) = *(void *)(((v306 + v248) & v31) + 8);
                      unint64_t v268 = (unint64_t)&v250[v311] & v310;
                      unint64_t v269 = (unint64_t)&v251[v311] & v310;
                      uint64_t v270 = *(void (**)(unint64_t, unint64_t, uint64_t))(v313 + 16);
                      swift_bridgeObjectRetain();
                      v270(v268, v269, v312);
                      unint64_t v271 = (v314 + v268) & v329;
                      v249(v271, (v314 + v269) & v329, v331);
                      unint64_t v252 = v328;
                      *(void *)((v316 + v271) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v316 + ((v314 + v269) & v329)) & 0xFFFFFFFFFFFFFFF8);
                      v250[v304] = v251[v304];
                      char v267 = 2;
                      break;
                    case 3u:
                      *(void *)uint64_t v250 = *(void *)v251;
                      *(void *)(((v306 + v247) & v31) + 8) = *(void *)(((v306 + v248) & v31) + 8);
                      unint64_t v272 = (unint64_t)&v250[v311] & v310;
                      unint64_t v273 = (unint64_t)&v251[v311] & v310;
                      unint64_t v274 = *(void (**)(unint64_t, unint64_t, uint64_t))(v313 + 16);
                      swift_bridgeObjectRetain();
                      v274(v272, v273, v312);
                      unint64_t v275 = (v314 + v272) & v329;
                      v249(v275, (v314 + v273) & v329, v331);
                      unint64_t v252 = v328;
                      *(void *)((v316 + v275) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v316 + ((v314 + v273) & v329)) & 0xFFFFFFFFFFFFFFF8);
                      char v267 = 3;
                      break;
                    default:
                      char v267 = 0;
                      *(_WORD *)uint64_t v250 = *(_WORD *)v251;
                      break;
                  }
                  unint64_t v257 = v324;
                  v250[v252] = v267;
                  *((unsigned char *)v241 + v332) = 1;
                  goto LABEL_412;
                }
                *unint64_t v241 = *(void *)v242;
                v241[1] = *(void *)(((v320 + v239) & v31) + 8);
                *((unsigned char *)v241 + v332) = 0;
                swift_bridgeObjectRetain();
              }
              unint64_t v257 = v324;
LABEL_412:
              a1[v257] = 0;
              goto LABEL_413;
            }
            *(void *)a1 = *(void *)v4;
            *((void *)a1 + 1) = *((void *)v4 + 1);
            a1[v22] = 0;
            swift_bridgeObjectRetain();
            uint64_t v178 = v331;
          }
          uint64_t v179 = v322;
          goto LABEL_363;
        }
        *(void *)a1 = *(void *)v4;
        *((void *)a1 + 1) = *((void *)v4 + 1);
        uint64_t v113 = (unint64_t)&a1[v325 + 16] & v329;
        uint64_t v114 = (unint64_t)&v4[v325 + 16] & v329;
        int v115 = *(void (**)(uint64_t, uint64_t, uint64_t))(v330 + 16);
        swift_bridgeObjectRetain();
        v115(v113, v114, v331);
        uint64_t v116 = (unsigned char *)((v113 + v323 + v12) & v31);
        uint64_t v117 = (unsigned __int8 *)((v114 + v323 + v12) & v31);
        unint64_t v118 = v328;
        unsigned int v119 = v117[v328];
        unsigned int v120 = v119 - 4;
        if (v119 < 4)
        {
          uint64_t v122 = v331;
        }
        else
        {
          if (v328 <= 3) {
            uint64_t v121 = v328;
          }
          else {
            uint64_t v121 = 4;
          }
          uint64_t v122 = v331;
          switch(v121)
          {
            case 1:
              int v123 = *v117;
              goto LABEL_245;
            case 2:
              int v123 = *(unsigned __int16 *)v117;
              goto LABEL_245;
            case 3:
              int v123 = *(unsigned __int16 *)v117 | (*(unsigned __int8 *)(((v114 + v323 + v12) & v31) + 2) << 16);
              goto LABEL_245;
            case 4:
              int v123 = *(_DWORD *)v117;
LABEL_245:
              if (v328 < 4) {
                unsigned int v119 = (v123 | (v120 << (8 * v328))) + 4;
              }
              else {
                unsigned int v119 = v123 + 4;
              }
              break;
            default:
              break;
          }
        }
        switch(v119)
        {
          case 1u:
            *uint64_t v116 = *v117;
            char v140 = 1;
            break;
          case 2u:
            *(void *)uint64_t v116 = *(void *)v117;
            *(void *)(((v113 + v323 + v12) & v31) + 8) = *(void *)(((v114 + v323 + v12) & v31) + 8);
            unint64_t v141 = (unint64_t)&v116[v311] & v310;
            unint64_t v142 = (unint64_t)&v117[v311] & v310;
            uint64_t v143 = v115;
            int v144 = *(void (**)(unint64_t, unint64_t, uint64_t))(v313 + 16);
            swift_bridgeObjectRetain();
            v144(v141, v142, v312);
            int v115 = v143;
            uint64_t v31 = ~v12;
            uint64_t v122 = v331;
            unint64_t v145 = (v314 + v141) & v329;
            unint64_t v146 = (v314 + v142) & v329;
            v115(v145, v146, v331);
            unint64_t v118 = v328;
            *(void *)((v316 + v145) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v316 + v146) & 0xFFFFFFFFFFFFFFF8);
            v116[v304] = v117[v304];
            char v140 = 2;
            break;
          case 3u:
            *(void *)uint64_t v116 = *(void *)v117;
            *(void *)(((v113 + v323 + v12) & v31) + 8) = *(void *)(((v114 + v323 + v12) & v31) + 8);
            unint64_t v147 = (unint64_t)&v116[v311] & v310;
            unint64_t v148 = (unint64_t)&v117[v311] & v310;
            v149 = *(void (**)(unint64_t, unint64_t, uint64_t))(v313 + 16);
            swift_bridgeObjectRetain();
            v149(v147, v148, v312);
            uint64_t v31 = ~v12;
            unint64_t v150 = (v314 + v147) & v329;
            unint64_t v151 = (v314 + v148) & v329;
            v115(v150, v151, v122);
            unint64_t v118 = v328;
            *(void *)((v316 + v150) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v316 + v151) & 0xFFFFFFFFFFFFFFF8);
            char v140 = 3;
            break;
          default:
            char v140 = 0;
            *(_WORD *)uint64_t v116 = *(_WORD *)v117;
            break;
        }
        v116[v118] = v140;
        unsigned int v152 = (void *)((unint64_t)&a1[v307] & v31);
        unsigned int v153 = (unsigned __int8 *)((unint64_t)&v4[v307] & v31);
        unsigned int v154 = v153[v332];
        unsigned int v155 = v154 - 3;
        if (v154 >= 3)
        {
          if (v332 <= 3) {
            uint64_t v156 = v332;
          }
          else {
            uint64_t v156 = 4;
          }
          switch(v156)
          {
            case 1:
              int v157 = *v153;
              goto LABEL_263;
            case 2:
              int v157 = *(unsigned __int16 *)v153;
              goto LABEL_263;
            case 3:
              int v157 = *(unsigned __int16 *)v153 | (*(unsigned __int8 *)(((unint64_t)&v4[v307] & v31) + 2) << 16);
              goto LABEL_263;
            case 4:
              int v157 = *(_DWORD *)v153;
LABEL_263:
              if (v332 < 4) {
                unsigned int v154 = (v157 | (v155 << (8 * v332))) + 3;
              }
              else {
                unsigned int v154 = v157 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v154 == 2)
        {
          v115((unint64_t)&a1[v307] & v31, (unint64_t)&v4[v307] & v31, v122);
          *(_OWORD *)(((unint64_t)v152 + v316) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v153[v316] & 0xFFFFFFFFFFFFFFF8);
          *((unsigned char *)v152 + v332) = 2;
        }
        else
        {
          if (v154 == 1)
          {
            *unsigned int v152 = *(void *)v153;
            *(void *)(((unint64_t)&a1[v307] & v31) + 8) = *(void *)(((unint64_t)&v4[v307] & v31) + 8);
            unint64_t v158 = ((unint64_t)v152 + v305) & v329;
            unint64_t v159 = (unint64_t)&v153[v305] & v329;
            swift_bridgeObjectRetain();
            v115(v158, v159, v122);
            unint64_t v160 = v328;
            unint64_t v161 = (unsigned char *)((v306 + v158) & v31);
            unint64_t v162 = (unsigned __int8 *)((v306 + v159) & v31);
            unsigned int v163 = v162[v328];
            unsigned int v164 = v163 - 4;
            if (v163 >= 4)
            {
              if (v328 <= 3) {
                uint64_t v165 = v328;
              }
              else {
                uint64_t v165 = 4;
              }
              switch(v165)
              {
                case 1:
                  int v166 = *v162;
                  goto LABEL_340;
                case 2:
                  int v166 = *(unsigned __int16 *)v162;
                  goto LABEL_340;
                case 3:
                  int v166 = *(unsigned __int16 *)v162 | (*(unsigned __int8 *)(((v306 + v159) & v31) + 2) << 16);
                  goto LABEL_340;
                case 4:
                  int v166 = *(_DWORD *)v162;
LABEL_340:
                  if (v328 < 4) {
                    unsigned int v163 = (v166 | (v164 << (8 * v328))) + 4;
                  }
                  else {
                    unsigned int v163 = v166 + 4;
                  }
                  break;
                default:
                  break;
              }
            }
            switch(v163)
            {
              case 1u:
                unsigned char *v161 = *v162;
                char v213 = 1;
                break;
              case 2u:
                *(void *)unint64_t v161 = *(void *)v162;
                *(void *)(((v306 + v158) & v31) + 8) = *(void *)(((v306 + v159) & v31) + 8);
                unint64_t v214 = (unint64_t)&v161[v311] & v310;
                unint64_t v215 = (unint64_t)&v162[v311] & v310;
                unint64_t v216 = (void (*)(unint64_t, unint64_t, uint64_t))v115;
                uint64_t v217 = *(void (**)(unint64_t, unint64_t, uint64_t))(v313 + 16);
                swift_bridgeObjectRetain();
                v217(v214, v215, v312);
                unint64_t v218 = (v314 + v214) & v329;
                v216(v218, (v314 + v215) & v329, v331);
                unint64_t v160 = v328;
                *(void *)((v316 + v218) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v316 + ((v314 + v215) & v329)) & 0xFFFFFFFFFFFFFFF8);
                v161[v304] = v162[v304];
                char v213 = 2;
                break;
              case 3u:
                *(void *)unint64_t v161 = *(void *)v162;
                *(void *)(((v306 + v158) & v31) + 8) = *(void *)(((v306 + v159) & v31) + 8);
                unint64_t v219 = (unint64_t)&v161[v311] & v310;
                unint64_t v220 = (unint64_t)&v162[v311] & v310;
                unint64_t v221 = (void (*)(unint64_t, unint64_t, uint64_t))v115;
                unint64_t v222 = *(void (**)(unint64_t, unint64_t, uint64_t))(v313 + 16);
                swift_bridgeObjectRetain();
                v222(v219, v220, v312);
                unint64_t v223 = (v314 + v219) & v329;
                v221(v223, (v314 + v220) & v329, v331);
                unint64_t v160 = v328;
                *(void *)((v316 + v223) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v316 + ((v314 + v220) & v329)) & 0xFFFFFFFFFFFFFFF8);
                char v213 = 3;
                break;
              default:
                char v213 = 0;
                *(_WORD *)unint64_t v161 = *(_WORD *)v162;
                break;
            }
            unint64_t v167 = v324;
            v161[v160] = v213;
            *((unsigned char *)v152 + v332) = 1;
            goto LABEL_349;
          }
          *unsigned int v152 = *(void *)v153;
          *(void *)(((unint64_t)&a1[v307] & v31) + 8) = *(void *)(((unint64_t)&v4[v307] & v31) + 8);
          *((unsigned char *)v152 + v332) = 0;
          swift_bridgeObjectRetain();
        }
        unint64_t v167 = v324;
LABEL_349:
        char v224 = 2;
LABEL_399:
        a1[v167] = v224;
LABEL_413:
        uint64_t v3 = a3;
        goto LABEL_414;
      }
LABEL_178:
      swift_bridgeObjectRelease();
      goto LABEL_191;
    }
    swift_bridgeObjectRelease();
    uint64_t v37 = (unint64_t)&a1[v325 + 16] & v329;
    uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v330 + 8);
    v38(v37, v331);
    uint64_t v39 = (unsigned __int8 *)((v37 + v323 + v12) & v31);
    unsigned int v40 = v39[v328];
    unsigned int v41 = v40 - 4;
    if (v40 >= 4)
    {
      if (v328 <= 3) {
        uint64_t v42 = v328;
      }
      else {
        uint64_t v42 = 4;
      }
      switch(v42)
      {
        case 1:
          int v43 = *v39;
          goto LABEL_68;
        case 2:
          int v43 = *(unsigned __int16 *)v39;
          goto LABEL_68;
        case 3:
          int v43 = *(unsigned __int16 *)v39 | (*(unsigned __int8 *)(((v37 + v323 + v12) & v31) + 2) << 16);
          goto LABEL_68;
        case 4:
          int v43 = *(_DWORD *)v39;
LABEL_68:
          if (v328 < 4) {
            unsigned int v40 = (v43 | (v41 << (8 * v328))) + 4;
          }
          else {
            unsigned int v40 = v43 + 4;
          }
          break;
        default:
          break;
      }
    }
    if (v40 >= 2)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v313 + 8))((unint64_t)&v39[v311] & v310, v312);
      v38((v314 + ((unint64_t)&v39[v311] & v310)) & v329, v331);
    }
    unsigned int v55 = (unsigned __int8 *)((unint64_t)&a1[v307] & v31);
    unsigned int v56 = v55[v22];
    unsigned int v57 = v56 - 3;
    if (v56 >= 3)
    {
      if (v22 <= 3) {
        uint64_t v58 = v22;
      }
      else {
        uint64_t v58 = 4;
      }
      switch(v58)
      {
        case 1:
          int v59 = *v55;
          goto LABEL_83;
        case 2:
          int v59 = *(unsigned __int16 *)v55;
          goto LABEL_83;
        case 3:
          int v59 = *(unsigned __int16 *)v55 | (*(unsigned __int8 *)(((unint64_t)&a1[v307] & v31) + 2) << 16);
          goto LABEL_83;
        case 4:
          int v59 = *(_DWORD *)v55;
LABEL_83:
          if (v22 < 4) {
            unsigned int v56 = (v59 | (v57 << (8 * v22))) + 3;
          }
          else {
            unsigned int v56 = v59 + 3;
          }
          break;
        default:
          break;
      }
    }
    if (v56 == 2)
    {
      unint64_t v67 = (unint64_t)&a1[v307] & v31;
    }
    else
    {
      if (v56 != 1) {
        goto LABEL_178;
      }
      swift_bridgeObjectRelease();
      unint64_t v60 = (unint64_t)&v55[v305] & v329;
      v38(v60, v331);
      uint64_t v61 = (unsigned __int8 *)((v306 + v60) & v31);
      unsigned int v62 = v61[v328];
      unsigned int v63 = v62 - 4;
      if (v62 < 4)
      {
        unint64_t v65 = v324;
      }
      else
      {
        if (v328 <= 3) {
          uint64_t v64 = v328;
        }
        else {
          uint64_t v64 = 4;
        }
        unint64_t v65 = v324;
        switch(v64)
        {
          case 1:
            int v66 = *v61;
            goto LABEL_144;
          case 2:
            int v66 = *(unsigned __int16 *)v61;
            goto LABEL_144;
          case 3:
            int v66 = *(unsigned __int16 *)v61 | (*(unsigned __int8 *)(((v306 + v60) & v31) + 2) << 16);
            goto LABEL_144;
          case 4:
            int v66 = *(_DWORD *)v61;
LABEL_144:
            if (v328 < 4) {
              unsigned int v62 = (v66 | (v63 << (8 * v328))) + 4;
            }
            else {
              unsigned int v62 = v66 + 4;
            }
            break;
          default:
            break;
        }
      }
      if (v62 < 2) {
        goto LABEL_192;
      }
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v313 + 8))((unint64_t)&v61[v311] & v310, v312);
      unint64_t v67 = (v314 + ((unint64_t)&v61[v311] & v310)) & v329;
    }
    v38(v67, v331);
    goto LABEL_191;
  }
LABEL_414:
  uint64_t v276 = *(void *)(sub_22EE7F6E0() - 8);
  uint64_t v277 = *(unsigned __int8 *)(v276 + 80);
  uint64_t v278 = *(void *)(v276 + 64);
  uint64_t v279 = *(void *)(sub_22EE7F5D0() - 8);
  uint64_t v280 = *(unsigned __int8 *)(v279 + 80);
  uint64_t v281 = v277 | 7;
  uint64_t v282 = v277 | 7 | v280;
  unint64_t v283 = (v278 + 7 + ((*(void *)(v279 + 64) + v277 + ((v280 + 16) & ~v280)) & ~v277)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v284 = v283 + 8;
  unint64_t v285 = v283 + 9;
  if (v285 <= v284) {
    unint64_t v285 = v284;
  }
  if (v285 <= 2) {
    unint64_t v285 = 2;
  }
  unint64_t v286 = v285 + ((((v277 + 16) & ~v277) + v278 + v282) & ~v282);
  unint64_t v287 = v286 + 1;
  unint64_t v288 = (v278 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v289 = v288 + 16;
  if (v286 + 1 > v288 + 16) {
    unint64_t v290 = v286 + 1;
  }
  else {
    unint64_t v290 = v288 + 16;
  }
  if (v290 <= 0x10) {
    unint64_t v290 = 16;
  }
  unint64_t v291 = v290 + 1;
  unint64_t v292 = v290 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v293 = *(void *)(sub_22EE7C220() - 8);
  unint64_t v294 = ((*(void *)(v293 + 64)
         + v282
         + ((*(unsigned __int8 *)(v293 + 80) + v292 + 24) & ~(unint64_t)*(unsigned __int8 *)(v293 + 80))) & ~v282)
       + v291;
  if (((v294 + v281) & ~v281) + v289 > v294) {
    unint64_t v294 = ((v294 + v281) & ~v281) + v289;
  }
  if (v291 + ((v287 + v282) & ~v282) > v294) {
    unint64_t v294 = v291 + ((v287 + v282) & ~v282);
  }
  unint64_t v295 = v294 + 8;
  v296 = (void *)((unint64_t)&a1[v295] & 0xFFFFFFFFFFFFFFF8);
  v297 = (void *)((unint64_t)&v4[v295] & 0xFFFFFFFFFFFFFFF8);
  void *v296 = *v297;
  v296[1] = v297[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v298 = *(void *)(*(void *)(v3 + 16) - 8);
  uint64_t v299 = v298 + 24;
  uint64_t v300 = *(unsigned __int8 *)(v298 + 80);
  uint64_t v301 = ((unint64_t)v296 + v300 + 16) & ~v300;
  uint64_t v302 = ((unint64_t)v297 + v300 + 16) & ~v300;
  (*(void (**)(uint64_t, uint64_t))(v298 + 24))(v301, v302);
  *(unsigned char *)(v301 + *(void *)(v299 + 40)) = *(unsigned char *)(v302 + *(void *)(v299 + 40));
  return a1;
}

_OWORD *sub_22EDB97FC(_OWORD *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v227 = sub_22EE7F6E0();
  uint64_t v225 = *(void *)(v227 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v225 + 80);
  uint64_t v211 = v5 + 16;
  uint64_t v6 = *(void *)(v225 + 64);
  uint64_t v215 = sub_22EE7F5D0();
  uint64_t v216 = *(void *)(v215 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v216 + 80);
  uint64_t v8 = v5 | 7;
  uint64_t v9 = v5 | 7 | v7;
  uint64_t v212 = v9 + v6;
  uint64_t v214 = v7 + 16;
  uint64_t v217 = *(void *)(v216 + 64) + v5;
  uint64_t v219 = v6;
  uint64_t v10 = v6 + 7;
  unint64_t v11 = (v6 + 7 + ((v217 + ((v7 + 16) & ~v7)) & ~v5)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = v11 + 8;
  unint64_t v13 = v11 + 9;
  unint64_t v207 = v12;
  if (v13 <= v12) {
    unint64_t v13 = v12;
  }
  if (v13 <= 2) {
    unint64_t v13 = 2;
  }
  unint64_t v223 = v13;
  unint64_t v14 = v13 + ((v9 + v6 + ((v5 + 16) & ~v5)) & ~v9);
  unint64_t v15 = v14 + 1;
  uint64_t v221 = v6 + 7;
  unint64_t v16 = (v10 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v14 + 1 > v16) {
    unint64_t v17 = v14 + 1;
  }
  else {
    unint64_t v17 = (v10 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v17 <= 0x10) {
    unint64_t v17 = 16;
  }
  unint64_t v18 = v17 + 1;
  unint64_t v224 = v17;
  unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = sub_22EE7C220();
  uint64_t v21 = v20;
  uint64_t v22 = *(void *)(v20 - 8);
  uint64_t v23 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v24 = v23 + v19;
  unint64_t v25 = a2;
  unint64_t v26 = ((*(void *)(v22 + 64) + v9 + ((v24 + 24) & ~v23)) & ~v9) + v18;
  unint64_t v27 = v26 + v8;
  uint64_t v208 = v5 | 7;
  if (((v26 + v8) & ~v8) + v16 > v26) {
    unint64_t v26 = ((v26 + v8) & ~v8) + v16;
  }
  unint64_t v28 = v15 + v9;
  unint64_t v218 = v18;
  if (v18 + (v28 & ~v9) <= v26) {
    unint64_t v29 = v26;
  }
  else {
    unint64_t v29 = v18 + (v28 & ~v9);
  }
  unsigned int v30 = v25[v29];
  unsigned int v31 = v30 - 3;
  if (v30 < 3)
  {
    unsigned int v33 = a1;
  }
  else
  {
    if (v29 <= 3) {
      uint64_t v32 = v29;
    }
    else {
      uint64_t v32 = 4;
    }
    unsigned int v33 = a1;
    switch(v32)
    {
      case 1:
        int v34 = *v25;
        goto LABEL_25;
      case 2:
        int v34 = *(unsigned __int16 *)v25;
        goto LABEL_25;
      case 3:
        int v34 = *(unsigned __int16 *)v25 | (v25[2] << 16);
        goto LABEL_25;
      case 4:
        int v34 = *(_DWORD *)v25;
LABEL_25:
        if (v29 < 4) {
          v34 |= v31 << (8 * v29);
        }
        unsigned int v30 = v34 + 3;
        break;
      default:
        break;
    }
  }
  uint64_t v222 = ~v5;
  uint64_t v226 = ~v9;
  uint64_t v213 = ~v7;
  if (v30 == 2)
  {
    unint64_t v209 = v29;
    *unsigned int v33 = *(_OWORD *)v25;
    uint64_t v41 = ((unint64_t)v33 + v5 + 16) & v222;
    uint64_t v42 = (unint64_t)&v25[v5 + 16] & v222;
    int v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(v225 + 32);
    v43(v41, v42, v227);
    unsigned int v44 = (unsigned char *)((v41 + v219 + v9) & v226);
    unsigned int v45 = (unsigned __int8 *)((v42 + v219 + v9) & v226);
    unint64_t v46 = v223;
    unsigned int v47 = v45[v223];
    unsigned int v48 = v47 - 4;
    if (v47 >= 4)
    {
      if (v223 <= 3) {
        uint64_t v49 = v223;
      }
      else {
        uint64_t v49 = 4;
      }
      switch(v49)
      {
        case 1:
          int v50 = *v45;
          goto LABEL_67;
        case 2:
          int v50 = *(unsigned __int16 *)v45;
          goto LABEL_67;
        case 3:
          int v50 = *(unsigned __int16 *)v45 | (v45[2] << 16);
          goto LABEL_67;
        case 4:
          int v50 = *(_DWORD *)v45;
LABEL_67:
          if (v223 < 4) {
            unsigned int v47 = (v50 | (v48 << (8 * v223))) + 4;
          }
          else {
            unsigned int v47 = v50 + 4;
          }
          break;
        default:
          break;
      }
    }
    switch(v47)
    {
      case 1u:
        *unsigned int v44 = *v45;
        char v71 = 1;
        break;
      case 2u:
        *(_OWORD *)unsigned int v44 = *(_OWORD *)v45;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v216 + 32))((unint64_t)&v44[v214] & v213, (unint64_t)&v45[v214] & v213, v215);
        unint64_t v72 = (v217 + ((unint64_t)&v44[v214] & v213)) & v222;
        unint64_t v73 = (v217 + ((unint64_t)&v45[v214] & v213)) & v222;
        v43(v72, v73, v227);
        unint64_t v46 = v223;
        *(void *)((v221 + v72) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v221 + v73) & 0xFFFFFFFFFFFFFFF8);
        v44[v207] = v45[v207];
        char v71 = 2;
        break;
      case 3u:
        *(_OWORD *)unsigned int v44 = *(_OWORD *)v45;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v216 + 32))((unint64_t)&v44[v214] & v213, (unint64_t)&v45[v214] & v213, v215);
        unint64_t v74 = (v217 + ((unint64_t)&v44[v214] & v213)) & v222;
        unint64_t v75 = (v217 + ((unint64_t)&v45[v214] & v213)) & v222;
        v43(v74, v75, v227);
        unint64_t v46 = v223;
        *(void *)((v221 + v74) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v221 + v75) & 0xFFFFFFFFFFFFFFF8);
        char v71 = 3;
        break;
      default:
        char v71 = 0;
        *(_WORD *)unsigned int v44 = *(_WORD *)v45;
        break;
    }
    v44[v46] = v71;
    uint64_t v76 = (_OWORD *)(((unint64_t)v33 + v28) & v226);
    unsigned int v77 = (unsigned __int8 *)((unint64_t)&v25[v28] & v226);
    unsigned int v78 = v77[v224];
    unsigned int v79 = v78 - 3;
    if (v78 >= 3)
    {
      if (v224 <= 3) {
        uint64_t v80 = v224;
      }
      else {
        uint64_t v80 = 4;
      }
      switch(v80)
      {
        case 1:
          int v81 = *v77;
          goto LABEL_85;
        case 2:
          int v81 = *(unsigned __int16 *)v77;
          goto LABEL_85;
        case 3:
          int v81 = *(unsigned __int16 *)v77 | (*(unsigned __int8 *)(((unint64_t)&v25[v28] & v226) + 2) << 16);
          goto LABEL_85;
        case 4:
          int v81 = *(_DWORD *)v77;
LABEL_85:
          int v82 = (v81 | (v79 << (8 * v224))) + 3;
          unsigned int v78 = v81 + 3;
          if (v224 < 4) {
            unsigned int v78 = v82;
          }
          break;
        default:
          break;
      }
    }
    if (v78 == 2)
    {
      v43(((unint64_t)v33 + v28) & v226, (unint64_t)&v25[v28] & v226, v227);
      *(_OWORD *)(((unint64_t)v76 + v221) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v77[v221] & 0xFFFFFFFFFFFFFFF8);
      char v91 = 2;
    }
    else
    {
      if (v78 == 1)
      {
        *uint64_t v76 = *(_OWORD *)v77;
        unint64_t v83 = (unint64_t)&v77[v211] & v222;
        v43(((unint64_t)v76 + v211) & v222, v83, v227);
        unint64_t v84 = v223;
        unsigned int v85 = (unsigned char *)((v212 + (((unint64_t)v76 + v211) & v222)) & v226);
        uint64_t v86 = (unsigned __int8 *)((v212 + v83) & v226);
        unsigned int v87 = v86[v223];
        unsigned int v88 = v87 - 4;
        if (v87 >= 4)
        {
          if (v223 <= 3) {
            uint64_t v89 = v223;
          }
          else {
            uint64_t v89 = 4;
          }
          switch(v89)
          {
            case 1:
              int v90 = *v86;
              goto LABEL_151;
            case 2:
              int v90 = *(unsigned __int16 *)v86;
              goto LABEL_151;
            case 3:
              int v90 = *(unsigned __int16 *)v86 | (*(unsigned __int8 *)(((v212 + v83) & v226) + 2) << 16);
              goto LABEL_151;
            case 4:
              int v90 = *(_DWORD *)v86;
LABEL_151:
              int v140 = (v90 | (v88 << (8 * v223))) + 4;
              unsigned int v87 = v90 + 4;
              if (v223 < 4) {
                unsigned int v87 = v140;
              }
              break;
            default:
              break;
          }
        }
        switch(v87)
        {
          case 1u:
            *unsigned int v85 = *v86;
            char v141 = 1;
            break;
          case 2u:
            *(_OWORD *)unsigned int v85 = *(_OWORD *)v86;
            (*(void (**)(unint64_t))(v216 + 32))((unint64_t)&v85[v214] & v213);
            unint64_t v142 = (v217 + ((unint64_t)&v85[v214] & v213)) & v222;
            unint64_t v143 = (v217 + ((unint64_t)&v86[v214] & v213)) & v222;
            v43(v142, v143, v227);
            unint64_t v84 = v223;
            *(void *)((v221 + v142) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v221 + v143) & 0xFFFFFFFFFFFFFFF8);
            v85[v207] = v86[v207];
            char v141 = 2;
            break;
          case 3u:
            *(_OWORD *)unsigned int v85 = *(_OWORD *)v86;
            unint64_t v144 = (unint64_t)&v86[v214] & v213;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v216 + 32))((unint64_t)&v85[v214] & v213, v144, v215);
            unint64_t v145 = (v217 + ((unint64_t)&v85[v214] & v213)) & v222;
            v43(v145, (v217 + v144) & v222, v227);
            unint64_t v84 = v223;
            *(void *)((v221 + v145) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v221 + ((v217 + v144) & v222)) & 0xFFFFFFFFFFFFFFF8);
            char v141 = 3;
            break;
          default:
            char v141 = 0;
            *(_WORD *)unsigned int v85 = *(_WORD *)v86;
            break;
        }
        uint64_t v92 = a3;
        unint64_t v29 = v209;
        v85[v84] = v141;
        char v91 = 1;
        goto LABEL_159;
      }
      char v91 = 0;
      *uint64_t v76 = *(_OWORD *)v77;
    }
    uint64_t v92 = a3;
    unint64_t v29 = v209;
LABEL_159:
    *((unsigned char *)v76 + v224) = v91;
    char v146 = 2;
    goto LABEL_219;
  }
  uint64_t v35 = ~v23;
  unint64_t v36 = v224;
  if (v30 != 1)
  {
    unsigned int v51 = v25[v224];
    unsigned int v52 = v51 - 3;
    if (v51 >= 3)
    {
      if (v224 <= 3) {
        uint64_t v53 = v224;
      }
      else {
        uint64_t v53 = 4;
      }
      switch(v53)
      {
        case 1:
          int v54 = *v25;
          goto LABEL_100;
        case 2:
          int v54 = *(unsigned __int16 *)v25;
          goto LABEL_100;
        case 3:
          int v54 = *(unsigned __int16 *)v25 | (v25[2] << 16);
          goto LABEL_100;
        case 4:
          int v54 = *(_DWORD *)v25;
LABEL_100:
          if (v224 < 4) {
            unsigned int v51 = (v54 | (v52 << (8 * v224))) + 3;
          }
          else {
            unsigned int v51 = v54 + 3;
          }
          break;
        default:
          break;
      }
    }
    if (v51 == 2)
    {
      uint64_t v94 = *(void *)(*(void *)(v20 - 8) + 64) + v9;
      uint64_t v106 = v20;
      uint64_t v107 = *(void *)(v20 - 8);
      uint64_t v108 = *(unsigned __int8 *)(v22 + 80);
      (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v225 + 32))(v33, v25, v227);
      uint64_t v23 = v108;
      uint64_t v22 = v107;
      uint64_t v21 = v106;
      *(_OWORD *)(((unint64_t)v33 + v219 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v25[v219 + 7] & 0xFFFFFFFFFFFFFFF8);
      char v109 = 2;
    }
    else
    {
      if (v51 != 1)
      {
        uint64_t v94 = *(void *)(*(void *)(v20 - 8) + 64) + v9;
        *unsigned int v33 = *(_OWORD *)v25;
        *((unsigned char *)v33 + v224) = 0;
        goto LABEL_173;
      }
      uint64_t v93 = ~v23;
      uint64_t v201 = *(unsigned __int8 *)(v22 + 80);
      uint64_t v203 = *(void *)(v20 - 8);
      uint64_t v94 = *(void *)(v203 + 64) + v9;
      uint64_t v205 = v20;
      *unsigned int v33 = *(_OWORD *)v25;
      unint64_t v95 = &v25[v5];
      uint64_t v96 = ((unint64_t)v33 + v5 + 16) & v222;
      uint64_t v97 = (unint64_t)(v95 + 16) & v222;
      unsigned int v98 = *(void (**)(uint64_t, uint64_t, uint64_t))(v225 + 32);
      v98(v96, v97, v227);
      unsigned int v99 = (unsigned char *)((v96 + v219 + v9) & v226);
      uint64_t v100 = (unsigned __int8 *)((v97 + v219 + v9) & v226);
      unint64_t v101 = v223;
      unsigned int v102 = v100[v223];
      unsigned int v103 = v102 - 4;
      if (v102 >= 4)
      {
        if (v223 <= 3) {
          uint64_t v104 = v223;
        }
        else {
          uint64_t v104 = 4;
        }
        switch(v104)
        {
          case 1:
            int v105 = *v100;
            goto LABEL_163;
          case 2:
            int v105 = *(unsigned __int16 *)v100;
            goto LABEL_163;
          case 3:
            int v105 = *(unsigned __int16 *)v100 | (v100[2] << 16);
            goto LABEL_163;
          case 4:
            int v105 = *(_DWORD *)v100;
LABEL_163:
            if (v223 < 4) {
              unsigned int v102 = (v105 | (v103 << (8 * v223))) + 4;
            }
            else {
              unsigned int v102 = v105 + 4;
            }
            break;
          default:
            break;
        }
      }
      switch(v102)
      {
        case 1u:
          *unsigned int v99 = *v100;
          char v147 = 1;
          break;
        case 2u:
          *(_OWORD *)unsigned int v99 = *(_OWORD *)v100;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v216 + 32))((unint64_t)&v99[v214] & v213, (unint64_t)&v100[v214] & v213, v215);
          unint64_t v148 = (v217 + ((unint64_t)&v99[v214] & v213)) & v222;
          unint64_t v149 = (v217 + ((unint64_t)&v100[v214] & v213)) & v222;
          v98(v148, v149, v227);
          unint64_t v101 = v223;
          *(void *)((v221 + v148) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v221 + v149) & 0xFFFFFFFFFFFFFFF8);
          v99[v207] = v100[v207];
          char v147 = 2;
          break;
        case 3u:
          *(_OWORD *)unsigned int v99 = *(_OWORD *)v100;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v216 + 32))((unint64_t)&v99[v214] & v213, (unint64_t)&v100[v214] & v213, v215);
          unint64_t v150 = (v217 + ((unint64_t)&v99[v214] & v213)) & v222;
          unint64_t v151 = (v217 + ((unint64_t)&v100[v214] & v213)) & v222;
          v98(v150, v151, v227);
          unint64_t v101 = v223;
          *(void *)((v221 + v150) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v221 + v151) & 0xFFFFFFFFFFFFFFF8);
          char v147 = 3;
          break;
        default:
          char v147 = 0;
          *(_WORD *)unsigned int v99 = *(_WORD *)v100;
          break;
      }
      uint64_t v22 = v203;
      uint64_t v21 = v205;
      uint64_t v23 = v201;
      uint64_t v35 = v93;
      v99[v101] = v147;
      char v109 = 1;
      unint64_t v36 = v224;
    }
    *((unsigned char *)v33 + v36) = v109;
LABEL_173:
    unsigned int v152 = (_OWORD *)(((unint64_t)v33 + v218 + 7) & 0xFFFFFFFFFFFFFFF8);
    unsigned int v153 = (_OWORD *)((unint64_t)&v25[v218 + 7] & 0xFFFFFFFFFFFFFFF8);
    *unsigned int v152 = *v153;
    uint64_t v154 = ((unint64_t)v152 + v23 + 16) & v35;
    uint64_t v155 = ((unint64_t)v153 + v23 + 16) & v35;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v154, v155, v21);
    uint64_t v156 = v94;
    int v157 = (_OWORD *)((v94 + v154) & v226);
    unint64_t v158 = (unsigned __int8 *)((v156 + v155) & v226);
    unsigned int v159 = v158[v36];
    unsigned int v160 = v159 - 3;
    if (v159 >= 3)
    {
      if (v36 <= 3) {
        uint64_t v161 = v36;
      }
      else {
        uint64_t v161 = 4;
      }
      switch(v161)
      {
        case 1:
          int v162 = *v158;
          goto LABEL_182;
        case 2:
          int v162 = *(unsigned __int16 *)v158;
          goto LABEL_182;
        case 3:
          int v162 = *(unsigned __int16 *)((v156 + v155) & v226) | (*(unsigned __int8 *)(((v156 + v155) & v226) + 2) << 16);
          goto LABEL_182;
        case 4:
          int v162 = *(_DWORD *)v158;
LABEL_182:
          int v163 = (v162 | (v160 << (8 * v36))) + 3;
          unsigned int v159 = v162 + 3;
          if (v36 < 4) {
            unsigned int v159 = v163;
          }
          break;
        default:
          break;
      }
    }
    if (v159 == 2)
    {
      (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v225 + 32))(v157, v158, v227);
      *(_OWORD *)(((unint64_t)v157 + v221) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v158[v221] & 0xFFFFFFFFFFFFFFF8);
      char v173 = 2;
    }
    else
    {
      if (v159 == 1)
      {
        unint64_t v210 = v29;
        *int v157 = *(_OWORD *)v158;
        unint64_t v164 = (unint64_t)&v158[v211] & v222;
        uint64_t v165 = *(void (**)(unint64_t, unint64_t, uint64_t))(v225 + 32);
        v165(((unint64_t)v157 + v211) & v222, v164, v227);
        int v166 = (unsigned char *)((v212 + (((unint64_t)v157 + v211) & v222)) & v226);
        unint64_t v167 = (unsigned __int8 *)((v212 + v164) & v226);
        unint64_t v168 = v223;
        unsigned int v169 = v167[v223];
        unsigned int v170 = v169 - 4;
        if (v169 >= 4)
        {
          if (v223 <= 3) {
            uint64_t v171 = v223;
          }
          else {
            uint64_t v171 = 4;
          }
          switch(v171)
          {
            case 1:
              int v172 = *v167;
              goto LABEL_210;
            case 2:
              int v172 = *(unsigned __int16 *)v167;
              goto LABEL_210;
            case 3:
              int v172 = *(unsigned __int16 *)v167 | (*(unsigned __int8 *)(((v212 + v164) & v226) + 2) << 16);
              goto LABEL_210;
            case 4:
              int v172 = *(_DWORD *)v167;
LABEL_210:
              int v185 = (v172 | (v170 << (8 * v223))) + 4;
              unsigned int v169 = v172 + 4;
              if (v223 < 4) {
                unsigned int v169 = v185;
              }
              break;
            default:
              break;
          }
        }
        switch(v169)
        {
          case 1u:
            unsigned char *v166 = *v167;
            char v186 = 1;
            break;
          case 2u:
            *(_OWORD *)int v166 = *(_OWORD *)v167;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v216 + 32))((unint64_t)&v166[v214] & v213, (unint64_t)&v167[v214] & v213, v215);
            unint64_t v187 = (v217 + ((unint64_t)&v166[v214] & v213)) & v222;
            unint64_t v188 = (v217 + ((unint64_t)&v167[v214] & v213)) & v222;
            v165(v187, v188, v227);
            unint64_t v168 = v223;
            *(void *)((v221 + v187) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v221 + v188) & 0xFFFFFFFFFFFFFFF8);
            v166[v207] = v167[v207];
            char v186 = 2;
            break;
          case 3u:
            *(_OWORD *)int v166 = *(_OWORD *)v167;
            unint64_t v189 = (unint64_t)&v167[v214] & v213;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v216 + 32))((unint64_t)&v166[v214] & v213, v189, v215);
            unint64_t v190 = (v217 + ((unint64_t)&v166[v214] & v213)) & v222;
            v165(v190, (v217 + v189) & v222, v227);
            unint64_t v168 = v223;
            *(void *)((v221 + v190) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v221 + ((v217 + v189) & v222)) & 0xFFFFFFFFFFFFFFF8);
            char v186 = 3;
            break;
          default:
            char v186 = 0;
            *(_WORD *)int v166 = *(_WORD *)v167;
            break;
        }
        uint64_t v92 = a3;
        v166[v168] = v186;
        char v173 = 1;
        unint64_t v29 = v210;
        goto LABEL_218;
      }
      char v173 = 0;
      *int v157 = *(_OWORD *)v158;
    }
    uint64_t v92 = a3;
LABEL_218:
    char v146 = 0;
    *((unsigned char *)v157 + v36) = v173;
    goto LABEL_219;
  }
  unsigned int v37 = v25[v224];
  unsigned int v38 = v37 - 3;
  if (v37 >= 3)
  {
    if (v224 <= 3) {
      uint64_t v39 = v224;
    }
    else {
      uint64_t v39 = 4;
    }
    switch(v39)
    {
      case 1:
        int v40 = *v25;
        goto LABEL_51;
      case 2:
        int v40 = *(unsigned __int16 *)v25;
        goto LABEL_51;
      case 3:
        int v40 = *(unsigned __int16 *)v25 | (v25[2] << 16);
        goto LABEL_51;
      case 4:
        int v40 = *(_DWORD *)v25;
LABEL_51:
        if (v224 < 4) {
          unsigned int v37 = (v40 | (v38 << (8 * v224))) + 3;
        }
        else {
          unsigned int v37 = v40 + 3;
        }
        break;
      default:
        break;
    }
  }
  unint64_t v206 = v27;
  if (v37 == 2)
  {
    uint64_t v55 = *(void *)(*(void *)(v20 - 8) + 64) + v9;
    uint64_t v67 = v20;
    uint64_t v68 = *(void *)(v20 - 8);
    uint64_t v69 = *(unsigned __int8 *)(v22 + 80);
    (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v225 + 32))(v33, v25, v227);
    uint64_t v23 = v69;
    uint64_t v22 = v68;
    uint64_t v21 = v67;
    *(_OWORD *)(((unint64_t)v33 + v219 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v25[v219 + 7] & 0xFFFFFFFFFFFFFFF8);
    char v70 = 2;
LABEL_125:
    *((unsigned char *)v33 + v36) = v70;
    goto LABEL_126;
  }
  if (v37 == 1)
  {
    uint64_t v199 = ~v23;
    uint64_t v200 = *(unsigned __int8 *)(v22 + 80);
    uint64_t v202 = *(void *)(v20 - 8);
    uint64_t v204 = v20;
    uint64_t v55 = *(void *)(v202 + 64) + v9;
    *unsigned int v33 = *(_OWORD *)v25;
    unsigned int v56 = &v25[v5];
    uint64_t v57 = ((unint64_t)v33 + v5 + 16) & v222;
    uint64_t v58 = (unint64_t)(v56 + 16) & v222;
    int v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v225 + 32);
    v59(v57, v58, v227);
    unint64_t v60 = (unsigned char *)((v57 + v219 + v9) & v226);
    uint64_t v61 = (unsigned __int8 *)((v58 + v219 + v9) & v226);
    unint64_t v62 = v223;
    unsigned int v63 = v61[v223];
    unsigned int v64 = v63 - 4;
    if (v63 >= 4)
    {
      if (v223 <= 3) {
        uint64_t v65 = v223;
      }
      else {
        uint64_t v65 = 4;
      }
      switch(v65)
      {
        case 1:
          int v66 = *v61;
          goto LABEL_116;
        case 2:
          int v66 = *(unsigned __int16 *)v61;
          goto LABEL_116;
        case 3:
          int v66 = *(unsigned __int16 *)v61 | (v61[2] << 16);
          goto LABEL_116;
        case 4:
          int v66 = *(_DWORD *)v61;
LABEL_116:
          if (v223 < 4) {
            unsigned int v63 = (v66 | (v64 << (8 * v223))) + 4;
          }
          else {
            unsigned int v63 = v66 + 4;
          }
          break;
        default:
          break;
      }
    }
    switch(v63)
    {
      case 1u:
        *unint64_t v60 = *v61;
        char v110 = 1;
        break;
      case 2u:
        *(_OWORD *)unint64_t v60 = *(_OWORD *)v61;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v216 + 32))((unint64_t)&v60[v214] & v213, (unint64_t)&v61[v214] & v213, v215);
        unint64_t v111 = (v217 + ((unint64_t)&v60[v214] & v213)) & v222;
        unint64_t v112 = (v217 + ((unint64_t)&v61[v214] & v213)) & v222;
        v59(v111, v112, v227);
        unint64_t v62 = v223;
        *(void *)((v221 + v111) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v221 + v112) & 0xFFFFFFFFFFFFFFF8);
        v60[v207] = v61[v207];
        char v110 = 2;
        break;
      case 3u:
        *(_OWORD *)unint64_t v60 = *(_OWORD *)v61;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v216 + 32))((unint64_t)&v60[v214] & v213, (unint64_t)&v61[v214] & v213, v215);
        unint64_t v113 = (v217 + ((unint64_t)&v60[v214] & v213)) & v222;
        unint64_t v114 = (v217 + ((unint64_t)&v61[v214] & v213)) & v222;
        v59(v113, v114, v227);
        unint64_t v62 = v223;
        *(void *)((v221 + v113) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v221 + v114) & 0xFFFFFFFFFFFFFFF8);
        char v110 = 3;
        break;
      default:
        char v110 = 0;
        *(_WORD *)unint64_t v60 = *(_WORD *)v61;
        break;
    }
    uint64_t v22 = v202;
    uint64_t v21 = v204;
    uint64_t v35 = v199;
    uint64_t v23 = v200;
    v60[v62] = v110;
    char v70 = 1;
    unint64_t v36 = v224;
    goto LABEL_125;
  }
  uint64_t v55 = *(void *)(*(void *)(v20 - 8) + 64) + v9;
  *unsigned int v33 = *(_OWORD *)v25;
  *((unsigned char *)v33 + v224) = 0;
LABEL_126:
  int v115 = (_OWORD *)(((unint64_t)v33 + v218 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v116 = (_OWORD *)((unint64_t)&v25[v218 + 7] & 0xFFFFFFFFFFFFFFF8);
  *int v115 = *v116;
  uint64_t v117 = ((unint64_t)v115 + v23 + 16) & v35;
  uint64_t v118 = ((unint64_t)v116 + v23 + 16) & v35;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v117, v118, v21);
  uint64_t v119 = v55;
  unsigned int v120 = (_OWORD *)((v55 + v117) & v226);
  uint64_t v121 = (unsigned __int8 *)((v119 + v118) & v226);
  unsigned int v122 = v121[v36];
  unsigned int v123 = v122 - 3;
  if (v122 < 3)
  {
    unint64_t v125 = v206;
  }
  else
  {
    if (v36 <= 3) {
      uint64_t v124 = v36;
    }
    else {
      uint64_t v124 = 4;
    }
    unint64_t v125 = v206;
    switch(v124)
    {
      case 1:
        int v126 = *v121;
        goto LABEL_136;
      case 2:
        int v126 = *(unsigned __int16 *)v121;
        goto LABEL_136;
      case 3:
        int v126 = *(unsigned __int16 *)((v119 + v118) & v226) | (*(unsigned __int8 *)(((v119 + v118) & v226) + 2) << 16);
        goto LABEL_136;
      case 4:
        int v126 = *(_DWORD *)v121;
LABEL_136:
        int v127 = (v126 | (v123 << (8 * v36))) + 3;
        unsigned int v122 = v126 + 3;
        if (v36 < 4) {
          unsigned int v122 = v127;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v128 = ~v208;
  if (v122 == 2)
  {
    unint64_t v139 = v36;
    uint64_t v129 = v25;
    uint64_t v131 = *(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v225 + 32);
    v131(v120, v121, v227);
    unint64_t v125 = v206;
    *(_OWORD *)(((unint64_t)v120 + v221) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v121[v221] & 0xFFFFFFFFFFFFFFF8);
    *((unsigned char *)v120 + v139) = 2;
  }
  else
  {
    uint64_t v129 = v25;
    if (v122 == 1)
    {
      *unsigned int v120 = *(_OWORD *)v121;
      unint64_t v130 = (unint64_t)&v121[v211] & v222;
      uint64_t v131 = *(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v225 + 32);
      v131((_OWORD *)(((unint64_t)v120 + v211) & v222), (unsigned __int8 *)v130, v227);
      unint64_t v132 = (unsigned char *)((v212 + (((unint64_t)v120 + v211) & v222)) & v226);
      unint64_t v133 = (unsigned __int8 *)((v212 + v130) & v226);
      unint64_t v134 = v223;
      unsigned int v135 = v133[v223];
      unsigned int v136 = v135 - 4;
      if (v135 >= 4)
      {
        if (v223 <= 3) {
          uint64_t v137 = v223;
        }
        else {
          uint64_t v137 = 4;
        }
        switch(v137)
        {
          case 1:
            int v138 = *v133;
            goto LABEL_198;
          case 2:
            int v138 = *(unsigned __int16 *)v133;
            goto LABEL_198;
          case 3:
            int v138 = *(unsigned __int16 *)v133 | (*(unsigned __int8 *)(((v212 + v130) & v226) + 2) << 16);
            goto LABEL_198;
          case 4:
            int v138 = *(_DWORD *)v133;
LABEL_198:
            int v174 = (v138 | (v136 << (8 * v223))) + 4;
            unsigned int v135 = v138 + 4;
            if (v223 < 4) {
              unsigned int v135 = v174;
            }
            break;
          default:
            break;
        }
      }
      switch(v135)
      {
        case 1u:
          *unint64_t v132 = *v133;
          char v175 = 1;
          break;
        case 2u:
          *(_OWORD *)unint64_t v132 = *(_OWORD *)v133;
          unint64_t v176 = (unint64_t)&v132[v214] & v213;
          (*(void (**)(unint64_t))(v216 + 32))(v176);
          unint64_t v177 = (v217 + v176) & v222;
          unint64_t v178 = (v217 + ((unint64_t)&v133[v214] & v213)) & v222;
          v131((_OWORD *)v177, (unsigned __int8 *)v178, v227);
          unint64_t v132 = (unsigned char *)((v212 + (((unint64_t)v120 + v211) & v222)) & v226);
          unint64_t v134 = v223;
          *(void *)((v221 + v177) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v221 + v178) & 0xFFFFFFFFFFFFFFF8);
          v132[v207] = v133[v207];
          char v175 = 2;
          break;
        case 3u:
          *(_OWORD *)unint64_t v132 = *(_OWORD *)v133;
          unint64_t v179 = (unint64_t)&v132[v214] & v213;
          unint64_t v180 = (unint64_t)&v133[v214] & v213;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v216 + 32))(v179, v180, v215);
          unint64_t v181 = (v217 + v179) & v222;
          v131((_OWORD *)v181, (unsigned __int8 *)((v217 + v180) & v222), v227);
          unint64_t v132 = (unsigned char *)((v212 + (((unint64_t)v120 + v211) & v222)) & v226);
          unint64_t v134 = v223;
          *(void *)((v221 + v181) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v221 + ((v217 + v180) & v222)) & 0xFFFFFFFFFFFFFFF8);
          char v175 = 3;
          break;
        default:
          char v175 = 0;
          *(_WORD *)unint64_t v132 = *(_WORD *)v133;
          break;
      }
      unint64_t v125 = v206;
      v132[v134] = v175;
      *((unsigned char *)v120 + v224) = 1;
    }
    else
    {
      *unsigned int v120 = *(_OWORD *)v121;
      *((unsigned char *)v120 + v224) = 0;
      uint64_t v131 = *(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v225 + 32);
    }
  }
  unint64_t v182 = ((unint64_t)v33 + v125) & v128;
  unint64_t v183 = (unint64_t)&v129[v125] & v128;
  v131((_OWORD *)v182, (unsigned __int8 *)v183, v227);
  uint64_t v92 = a3;
  uint64_t v184 = v221 + v182;
  unint64_t v25 = v129;
  *(_OWORD *)(v184 & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v221 + v183) & 0xFFFFFFFFFFFFFFF8);
  char v146 = 1;
LABEL_219:
  *((unsigned char *)v33 + v29) = v146;
  int v191 = (_OWORD *)(((unint64_t)v33 + v29 + 8) & 0xFFFFFFFFFFFFFFF8);
  int v192 = (_OWORD *)((unint64_t)&v25[v29 + 8] & 0xFFFFFFFFFFFFFFF8);
  *int v191 = *v192;
  uint64_t v193 = *(void *)(*(void *)(v92 + 16) - 8);
  uint64_t v194 = v193 + 32;
  uint64_t v195 = *(unsigned __int8 *)(v193 + 80);
  uint64_t v196 = ((unint64_t)v191 + v195 + 16) & ~v195;
  uint64_t v197 = ((unint64_t)v192 + v195 + 16) & ~v195;
  (*(void (**)(uint64_t, uint64_t))(v193 + 32))(v196, v197);
  *(unsigned char *)(*(void *)(v194 + 32) + v196) = *(unsigned char *)(*(void *)(v194 + 32) + v197);
  return v33;
}

unsigned __int8 *sub_22EDBB15C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = a2;
  if (a1 != a2)
  {
    uint64_t v7 = sub_22EE7F6E0();
    uint64_t v289 = *(void *)(v7 - 8);
    uint64_t v290 = v7;
    uint64_t v8 = *(unsigned __int8 *)(v289 + 80);
    uint64_t v266 = v8 + 16;
    uint64_t v9 = *(void *)(v289 + 64);
    uint64_t v273 = sub_22EE7F5D0();
    uint64_t v274 = *(void *)(v273 - 8);
    uint64_t v10 = *(unsigned __int8 *)(v274 + 80);
    uint64_t v11 = v8 | 7;
    uint64_t v12 = v8 | 7 | v10;
    uint64_t v267 = v12 + v9;
    uint64_t v272 = v10 + 16;
    uint64_t v275 = *(void *)(v274 + 64) + v8;
    uint64_t v285 = v8;
    uint64_t v283 = v9;
    uint64_t v13 = v9 + 7;
    unint64_t v14 = (v9 + 7 + ((v275 + ((v10 + 16) & ~v10)) & ~v8)) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v15 = v14 + 8;
    unint64_t v16 = v14 + 9;
    unint64_t v264 = v15;
    if (v16 <= v15) {
      unint64_t v16 = v15;
    }
    if (v16 <= 2) {
      unint64_t v16 = 2;
    }
    unint64_t v287 = v16;
    unint64_t v17 = v16 + ((v12 + v9 + ((v8 + 16) & ~v8)) & ~v12);
    unint64_t v18 = v17 + 1;
    uint64_t v277 = v9 + 7;
    unint64_t v19 = (v13 & 0xFFFFFFFFFFFFFFF8) + 16;
    if (v17 + 1 > v19) {
      unint64_t v20 = v17 + 1;
    }
    else {
      unint64_t v20 = (v13 & 0xFFFFFFFFFFFFFFF8) + 16;
    }
    if (v20 <= 0x10) {
      unint64_t v20 = 16;
    }
    unint64_t v21 = v20 + 1;
    unint64_t v22 = v20;
    unint64_t v23 = v20 & 0xFFFFFFFFFFFFFFF8;
    uint64_t v24 = sub_22EE7C220();
    uint64_t v281 = *(void *)(v24 - 8);
    uint64_t v282 = v24;
    uint64_t v278 = *(unsigned __int8 *)(v281 + 80);
    uint64_t v25 = (v278 + v23 + 24) & ~v278;
    uint64_t v26 = *(void *)(v281 + 64) + v12;
    unint64_t v27 = ((v26 + v25) & ~v12) + v21;
    unint64_t v270 = v27 + v11;
    if (((v27 + v11) & ~v11) + v19 > v27) {
      unint64_t v27 = ((v27 + v11) & ~v11) + v19;
    }
    unint64_t v268 = v18 + v12;
    unint64_t v280 = v21;
    if (v21 + ((v18 + v12) & ~v12) <= v27) {
      unint64_t v28 = v27;
    }
    else {
      unint64_t v28 = v21 + ((v18 + v12) & ~v12);
    }
    unsigned int v29 = a1[v28];
    unsigned int v30 = v29 - 3;
    if (v29 < 3)
    {
      uint64_t v4 = a2;
      uint64_t v32 = *(unsigned __int8 *)(v281 + 80);
    }
    else
    {
      if (v28 <= 3) {
        uint64_t v31 = v28;
      }
      else {
        uint64_t v31 = 4;
      }
      uint64_t v4 = a2;
      uint64_t v32 = *(unsigned __int8 *)(v281 + 80);
      switch(v31)
      {
        case 1:
          int v33 = *a1;
          goto LABEL_26;
        case 2:
          int v33 = *(unsigned __int16 *)a1;
          goto LABEL_26;
        case 3:
          int v33 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_26;
        case 4:
          int v33 = *(_DWORD *)a1;
LABEL_26:
          if (v28 < 4) {
            v33 |= v30 << (8 * v28);
          }
          unsigned int v29 = v33 + 3;
          break;
        default:
          break;
      }
    }
    uint64_t v288 = ~v285;
    uint64_t v34 = ~v12;
    uint64_t v271 = ~v10;
    uint64_t v279 = ~v32;
    uint64_t v269 = ~v11;
    unint64_t v284 = v28;
    uint64_t v265 = *(void *)(*(void *)(v24 - 8) + 64) + v12;
    if (v29 != 2)
    {
      if (v29 == 1)
      {
        unsigned int v35 = a1[v22];
        unsigned int v36 = v35 - 3;
        if (v35 >= 3)
        {
          if (v22 <= 3) {
            uint64_t v37 = v22;
          }
          else {
            uint64_t v37 = 4;
          }
          switch(v37)
          {
            case 1:
              int v38 = *a1;
              goto LABEL_52;
            case 2:
              int v38 = *(unsigned __int16 *)a1;
              goto LABEL_52;
            case 3:
              int v38 = *(unsigned __int16 *)a1 | (a1[2] << 16);
              goto LABEL_52;
            case 4:
              int v38 = *(_DWORD *)a1;
LABEL_52:
              if (v22 < 4) {
                unsigned int v35 = (v38 | (v36 << (8 * v22))) + 3;
              }
              else {
                unsigned int v35 = v38 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v35 == 2)
        {
          (*(void (**)(unsigned __int8 *, uint64_t))(v289 + 8))(a1, v290);
        }
        else if (v35 == 1)
        {
          swift_bridgeObjectRelease();
          int v50 = *(void (**)(unint64_t, uint64_t))(v289 + 8);
          v50((unint64_t)&a1[v285 + 16] & v288, v290);
          unsigned int v51 = (unsigned __int8 *)((((unint64_t)&a1[v285 + 16] & v288) + v283 + v12) & v34);
          unsigned int v52 = v51[v287];
          unsigned int v53 = v52 - 4;
          if (v52 >= 4)
          {
            if (v287 <= 3) {
              uint64_t v54 = v287;
            }
            else {
              uint64_t v54 = 4;
            }
            switch(v54)
            {
              case 1:
                int v55 = *v51;
                goto LABEL_113;
              case 2:
                int v55 = *(unsigned __int16 *)v51;
                goto LABEL_113;
              case 3:
                int v55 = *(unsigned __int16 *)v51 | (v51[2] << 16);
                goto LABEL_113;
              case 4:
                int v55 = *(_DWORD *)v51;
LABEL_113:
                if (v287 < 4) {
                  unsigned int v52 = (v55 | (v53 << (8 * v287))) + 4;
                }
                else {
                  unsigned int v52 = v55 + 4;
                }
                break;
              default:
                break;
            }
          }
          if (v52 >= 2)
          {
            swift_bridgeObjectRelease();
            unint64_t v74 = (unint64_t)&v51[v272] & v271;
            (*(void (**)(unint64_t, uint64_t))(v274 + 8))(v74, v273);
            v50((v275 + v74) & v288, v290);
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        unint64_t v75 = (v32 + ((unint64_t)&a1[v280 + 7] & 0xFFFFFFFFFFFFFFF8) + 16) & v279;
        (*(void (**)(unint64_t, uint64_t))(v281 + 8))(v75, v282);
        uint64_t v76 = (unsigned __int8 *)((v26 + v75) & v34);
        unsigned int v77 = v76[v22];
        unsigned int v78 = v77 - 3;
        if (v77 >= 3)
        {
          if (v22 <= 3) {
            uint64_t v79 = v22;
          }
          else {
            uint64_t v79 = 4;
          }
          switch(v79)
          {
            case 1:
              int v80 = *v76;
              goto LABEL_127;
            case 2:
              int v80 = *(unsigned __int16 *)v76;
              goto LABEL_127;
            case 3:
              int v80 = *(unsigned __int16 *)v76 | (v76[2] << 16);
              goto LABEL_127;
            case 4:
              int v80 = *(_DWORD *)v76;
LABEL_127:
              if (v22 < 4) {
                unsigned int v77 = (v80 | (v78 << (8 * v22))) + 3;
              }
              else {
                unsigned int v77 = v80 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v77 == 2)
        {
          unsigned int v88 = *(void (**)(unsigned __int8 *, uint64_t))(v289 + 8);
          v88(v76, v290);
          v88((unsigned __int8 *)((unint64_t)&a1[v270] & v269), v290);
          goto LABEL_189;
        }
        if (v77 == 1)
        {
          swift_bridgeObjectRelease();
          unint64_t v81 = (unint64_t)&v76[v266] & v288;
          int v82 = *(void (**)(unint64_t, uint64_t))(v289 + 8);
          v82(v81, v290);
          unint64_t v83 = (unsigned __int8 *)((v267 + v81) & v34);
          unsigned int v84 = v83[v287];
          unsigned int v85 = v84 - 4;
          if (v84 >= 4)
          {
            if (v287 <= 3) {
              uint64_t v86 = v287;
            }
            else {
              uint64_t v86 = 4;
            }
            switch(v86)
            {
              case 1:
                int v87 = *v83;
                goto LABEL_182;
              case 2:
                int v87 = *(unsigned __int16 *)v83;
                goto LABEL_182;
              case 3:
                int v87 = *(unsigned __int16 *)v83 | (v83[2] << 16);
                goto LABEL_182;
              case 4:
                int v87 = *(_DWORD *)v83;
LABEL_182:
                if (v287 < 4) {
                  unsigned int v84 = (v87 | (v85 << (8 * v287))) + 4;
                }
                else {
                  unsigned int v84 = v87 + 4;
                }
                break;
              default:
                break;
            }
          }
          if (v84 >= 2)
          {
            swift_bridgeObjectRelease();
            unint64_t v104 = (unint64_t)&v83[v272] & v271;
            (*(void (**)(unint64_t, uint64_t))(v274 + 8))(v104, v273);
            unint64_t v105 = (v275 + v104) & v288;
            uint64_t v103 = v290;
            v82(v105, v290);
            goto LABEL_188;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          int v82 = *(void (**)(unint64_t, uint64_t))(v289 + 8);
        }
        uint64_t v103 = v290;
LABEL_188:
        v82((unint64_t)&a1[v270] & v269, v103);
        goto LABEL_189;
      }
      unsigned int v46 = a1[v22];
      unsigned int v47 = v46 - 3;
      if (v46 >= 3)
      {
        if (v22 <= 3) {
          uint64_t v48 = v22;
        }
        else {
          uint64_t v48 = 4;
        }
        switch(v48)
        {
          case 1:
            int v49 = *a1;
            goto LABEL_97;
          case 2:
            int v49 = *(unsigned __int16 *)a1;
            goto LABEL_97;
          case 3:
            int v49 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            goto LABEL_97;
          case 4:
            int v49 = *(_DWORD *)a1;
LABEL_97:
            if (v22 < 4) {
              unsigned int v46 = (v49 | (v47 << (8 * v22))) + 3;
            }
            else {
              unsigned int v46 = v49 + 3;
            }
            break;
          default:
            break;
        }
      }
      if (v46 == 2)
      {
        (*(void (**)(unsigned __int8 *, uint64_t))(v289 + 8))(a1, v290);
      }
      else if (v46 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v68 = *(void (**)(unint64_t, uint64_t))(v289 + 8);
        v68((unint64_t)&a1[v285 + 16] & v288, v290);
        uint64_t v69 = (unsigned __int8 *)((((unint64_t)&a1[v285 + 16] & v288) + v283 + v12) & v34);
        unsigned int v70 = v69[v287];
        unsigned int v71 = v70 - 4;
        if (v70 >= 4)
        {
          if (v287 <= 3) {
            uint64_t v72 = v287;
          }
          else {
            uint64_t v72 = 4;
          }
          switch(v72)
          {
            case 1:
              int v73 = *v69;
              goto LABEL_152;
            case 2:
              int v73 = *(unsigned __int16 *)v69;
              goto LABEL_152;
            case 3:
              int v73 = *(unsigned __int16 *)v69 | (v69[2] << 16);
              goto LABEL_152;
            case 4:
              int v73 = *(_DWORD *)v69;
LABEL_152:
              if (v287 < 4) {
                unsigned int v70 = (v73 | (v71 << (8 * v287))) + 4;
              }
              else {
                unsigned int v70 = v73 + 4;
              }
              break;
            default:
              break;
          }
        }
        if (v70 >= 2)
        {
          swift_bridgeObjectRelease();
          unint64_t v89 = (unint64_t)&v69[v272] & v271;
          (*(void (**)(unint64_t, uint64_t))(v274 + 8))(v89, v273);
          v68((v275 + v89) & v288, v290);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      unint64_t v90 = (v32 + ((unint64_t)&a1[v280 + 7] & 0xFFFFFFFFFFFFFFF8) + 16) & v279;
      (*(void (**)(unint64_t, uint64_t))(v281 + 8))(v90, v282);
      char v91 = (unsigned __int8 *)((v26 + v90) & v34);
      unsigned int v92 = v91[v22];
      unsigned int v93 = v92 - 3;
      if (v92 >= 3)
      {
        if (v22 <= 3) {
          uint64_t v94 = v22;
        }
        else {
          uint64_t v94 = 4;
        }
        switch(v94)
        {
          case 1:
            int v95 = *v91;
            goto LABEL_166;
          case 2:
            int v95 = *(unsigned __int16 *)v91;
            goto LABEL_166;
          case 3:
            int v95 = *(unsigned __int16 *)v91 | (v91[2] << 16);
            goto LABEL_166;
          case 4:
            int v95 = *(_DWORD *)v91;
LABEL_166:
            if (v22 < 4) {
              unsigned int v92 = (v95 | (v93 << (8 * v22))) + 3;
            }
            else {
              unsigned int v92 = v95 + 3;
            }
            break;
          default:
            break;
        }
      }
      if (v92 == 2)
      {
        (*(void (**)(unsigned __int8 *, uint64_t))(v289 + 8))(v91, v290);
        goto LABEL_189;
      }
      if (v92 == 1)
      {
        swift_bridgeObjectRelease();
        unint64_t v96 = (unint64_t)&v91[v266] & v288;
        uint64_t v97 = *(void (**)(unint64_t, uint64_t))(v289 + 8);
        v97(v96, v290);
        unsigned int v98 = (unsigned __int8 *)((v267 + v96) & v34);
        unsigned int v99 = v98[v287];
        unsigned int v100 = v99 - 4;
        if (v99 >= 4)
        {
          if (v287 <= 3) {
            uint64_t v101 = v287;
          }
          else {
            uint64_t v101 = 4;
          }
          switch(v101)
          {
            case 1:
              int v102 = *v98;
              goto LABEL_290;
            case 2:
              int v102 = *(unsigned __int16 *)v98;
              goto LABEL_290;
            case 3:
              int v102 = *(unsigned __int16 *)v98 | (v98[2] << 16);
              goto LABEL_290;
            case 4:
              int v102 = *(_DWORD *)v98;
LABEL_290:
              if (v287 < 4) {
                unsigned int v99 = (v102 | (v100 << (8 * v287))) + 4;
              }
              else {
                unsigned int v99 = v102 + 4;
              }
              break;
            default:
              break;
          }
        }
        if (v99 >= 2)
        {
          swift_bridgeObjectRelease();
          unint64_t v166 = (unint64_t)&v98[v272] & v271;
          (*(void (**)(unint64_t, uint64_t))(v274 + 8))(v166, v273);
          v97((v275 + v166) & v288, v290);
        }
        goto LABEL_189;
      }
LABEL_177:
      swift_bridgeObjectRelease();
      goto LABEL_189;
    }
    swift_bridgeObjectRelease();
    uint64_t v39 = (unint64_t)&a1[v285 + 16] & v288;
    int v40 = *(void (**)(uint64_t, uint64_t))(v289 + 8);
    v40(v39, v290);
    uint64_t v41 = (unsigned __int8 *)((v39 + v283 + v12) & v34);
    unsigned int v42 = v41[v287];
    unsigned int v43 = v42 - 4;
    if (v42 >= 4)
    {
      if (v287 <= 3) {
        uint64_t v44 = v287;
      }
      else {
        uint64_t v44 = 4;
      }
      switch(v44)
      {
        case 1:
          int v45 = *v41;
          goto LABEL_68;
        case 2:
          int v45 = *(unsigned __int16 *)v41;
          goto LABEL_68;
        case 3:
          int v45 = *(unsigned __int16 *)v41 | (*(unsigned __int8 *)(((v39 + v283 + v12) & v34) + 2) << 16);
          goto LABEL_68;
        case 4:
          int v45 = *(_DWORD *)v41;
LABEL_68:
          if (v287 < 4) {
            unsigned int v42 = (v45 | (v43 << (8 * v287))) + 4;
          }
          else {
            unsigned int v42 = v45 + 4;
          }
          break;
        default:
          break;
      }
    }
    if (v42 >= 2)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v274 + 8))((unint64_t)&v41[v272] & v271, v273);
      v40((v275 + ((unint64_t)&v41[v272] & v271)) & v288, v290);
    }
    unsigned int v56 = (unsigned __int8 *)((unint64_t)&a1[v268] & v34);
    unsigned int v57 = v56[v22];
    unsigned int v58 = v57 - 3;
    if (v57 >= 3)
    {
      if (v22 <= 3) {
        uint64_t v59 = v22;
      }
      else {
        uint64_t v59 = 4;
      }
      switch(v59)
      {
        case 1:
          int v60 = *v56;
          goto LABEL_83;
        case 2:
          int v60 = *(unsigned __int16 *)v56;
          goto LABEL_83;
        case 3:
          int v60 = *(unsigned __int16 *)v56 | (*(unsigned __int8 *)(((unint64_t)&a1[v268] & v34) + 2) << 16);
          goto LABEL_83;
        case 4:
          int v60 = *(_DWORD *)v56;
LABEL_83:
          if (v22 < 4) {
            unsigned int v57 = (v60 | (v58 << (8 * v22))) + 3;
          }
          else {
            unsigned int v57 = v60 + 3;
          }
          break;
        default:
          break;
      }
    }
    if (v57 == 2)
    {
      unint64_t v67 = (unint64_t)&a1[v268] & v34;
    }
    else
    {
      if (v57 != 1) {
        goto LABEL_177;
      }
      swift_bridgeObjectRelease();
      unint64_t v61 = (unint64_t)&v56[v266] & v288;
      v40(v61, v290);
      unint64_t v62 = (unsigned __int8 *)((v267 + v61) & v34);
      unsigned int v63 = v62[v287];
      unsigned int v64 = v63 - 4;
      if (v63 >= 4)
      {
        if (v287 <= 3) {
          uint64_t v65 = v287;
        }
        else {
          uint64_t v65 = 4;
        }
        switch(v65)
        {
          case 1:
            int v66 = *v62;
            goto LABEL_143;
          case 2:
            int v66 = *(unsigned __int16 *)v62;
            goto LABEL_143;
          case 3:
            int v66 = *(unsigned __int16 *)v62 | (*(unsigned __int8 *)(((v267 + v61) & v34) + 2) << 16);
            goto LABEL_143;
          case 4:
            int v66 = *(_DWORD *)v62;
LABEL_143:
            if (v287 < 4) {
              unsigned int v63 = (v66 | (v64 << (8 * v287))) + 4;
            }
            else {
              unsigned int v63 = v66 + 4;
            }
            break;
          default:
            break;
        }
      }
      if (v63 < 2)
      {
LABEL_189:
        unint64_t v106 = v284;
        unsigned int v107 = v4[v284];
        unsigned int v108 = v107 - 3;
        if (v107 >= 3)
        {
          if (v284 <= 3) {
            uint64_t v109 = v284;
          }
          else {
            uint64_t v109 = 4;
          }
          switch(v109)
          {
            case 1:
              int v110 = *v4;
              goto LABEL_198;
            case 2:
              int v110 = *(unsigned __int16 *)v4;
              goto LABEL_198;
            case 3:
              int v110 = *(unsigned __int16 *)v4 | (v4[2] << 16);
              goto LABEL_198;
            case 4:
              int v110 = *(_DWORD *)v4;
LABEL_198:
              if (v284 < 4) {
                unsigned int v107 = (v110 | (v108 << (8 * v284))) + 3;
              }
              else {
                unsigned int v107 = v110 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v107 != 2)
        {
          if (v107 == 1)
          {
            unsigned int v111 = v4[v22];
            unsigned int v112 = v111 - 3;
            if (v111 >= 3)
            {
              if (v22 <= 3) {
                uint64_t v113 = v22;
              }
              else {
                uint64_t v113 = 4;
              }
              switch(v113)
              {
                case 1:
                  int v114 = *v4;
                  goto LABEL_224;
                case 2:
                  int v114 = *(unsigned __int16 *)v4;
                  goto LABEL_224;
                case 3:
                  int v114 = *(unsigned __int16 *)v4 | (v4[2] << 16);
                  goto LABEL_224;
                case 4:
                  int v114 = *(_DWORD *)v4;
LABEL_224:
                  if (v22 < 4) {
                    unsigned int v111 = (v114 | (v112 << (8 * v22))) + 3;
                  }
                  else {
                    unsigned int v111 = v114 + 3;
                  }
                  break;
                default:
                  break;
              }
            }
            if (v111 == 2)
            {
              (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v289 + 32))(a1, v4, v290);
              *(_OWORD *)((unint64_t)&a1[v283 + 7] & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v4[v283 + 7] & 0xFFFFFFFFFFFFFFF8);
              char v135 = 2;
            }
            else
            {
              if (v111 != 1)
              {
                *(_OWORD *)a1 = *(_OWORD *)v4;
                a1[v22] = 0;
LABEL_308:
                int v172 = (_OWORD *)((unint64_t)&a1[v280 + 7] & 0xFFFFFFFFFFFFFFF8);
                char v173 = (_OWORD *)((unint64_t)&v4[v280 + 7] & 0xFFFFFFFFFFFFFFF8);
                *int v172 = *v173;
                uint64_t v174 = ((unint64_t)v172 + v32 + 16) & v279;
                uint64_t v175 = ((unint64_t)v173 + v32 + 16) & v279;
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v281 + 32))(v174, v175, v282);
                unint64_t v176 = (_OWORD *)((v265 + v174) & v34);
                unint64_t v177 = (unsigned __int8 *)((v265 + v175) & v34);
                unsigned int v178 = v177[v22];
                unsigned int v179 = v178 - 3;
                if (v178 < 3)
                {
                  uint64_t v181 = v290;
                }
                else
                {
                  if (v22 <= 3) {
                    uint64_t v180 = v22;
                  }
                  else {
                    uint64_t v180 = 4;
                  }
                  uint64_t v181 = v290;
                  switch(v180)
                  {
                    case 1:
                      int v182 = *v177;
                      goto LABEL_318;
                    case 2:
                      int v182 = *(unsigned __int16 *)v177;
                      goto LABEL_318;
                    case 3:
                      int v182 = *(unsigned __int16 *)v177 | (v177[2] << 16);
                      goto LABEL_318;
                    case 4:
                      int v182 = *(_DWORD *)v177;
LABEL_318:
                      if (v22 < 4) {
                        unsigned int v178 = (v182 | (v179 << (8 * v22))) + 3;
                      }
                      else {
                        unsigned int v178 = v182 + 3;
                      }
                      break;
                    default:
                      break;
                  }
                }
                if (v178 == 2)
                {
                  uint64_t v184 = *(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v289 + 32);
                  v184(v176, v177, v181);
                  *(_OWORD *)(((unint64_t)v176 + v277) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v177[v277] & 0xFFFFFFFFFFFFFFF8);
                  *((unsigned char *)v176 + v22) = 2;
                }
                else if (v178 == 1)
                {
                  *unint64_t v176 = *(_OWORD *)v177;
                  unint64_t v183 = (unint64_t)&v177[v266] & v288;
                  uint64_t v184 = *(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v289 + 32);
                  v184((_OWORD *)(((unint64_t)v176 + v266) & v288), (unsigned __int8 *)v183, v181);
                  int v185 = (unsigned char *)((v267 + (((unint64_t)v176 + v266) & v288)) & v34);
                  char v186 = (unsigned __int8 *)((v267 + v183) & v34);
                  unint64_t v187 = v287;
                  unsigned int v188 = v186[v287];
                  unsigned int v189 = v188 - 4;
                  if (v188 >= 4)
                  {
                    if (v287 <= 3) {
                      uint64_t v190 = v287;
                    }
                    else {
                      uint64_t v190 = 4;
                    }
                    switch(v190)
                    {
                      case 1:
                        int v191 = *v186;
                        goto LABEL_383;
                      case 2:
                        int v191 = *(unsigned __int16 *)v186;
                        goto LABEL_383;
                      case 3:
                        int v191 = *(unsigned __int16 *)v186 | (*(unsigned __int8 *)(((v267 + v183) & v34) + 2) << 16);
                        goto LABEL_383;
                      case 4:
                        int v191 = *(_DWORD *)v186;
LABEL_383:
                        if (v287 < 4) {
                          unsigned int v188 = (v191 | (v189 << (8 * v287))) + 4;
                        }
                        else {
                          unsigned int v188 = v191 + 4;
                        }
                        break;
                      default:
                        break;
                    }
                  }
                  switch(v188)
                  {
                    case 1u:
                      *int v185 = *v186;
                      char v223 = 1;
                      goto LABEL_389;
                    case 2u:
                      *(_OWORD *)int v185 = *(_OWORD *)v186;
                      unint64_t v224 = (unint64_t)&v185[v272] & v271;
                      unint64_t v286 = (unsigned char *)((v267 + (((unint64_t)v176 + v266) & v288)) & v34);
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v274 + 32))(v224, (unint64_t)&v186[v272] & v271, v273);
                      unint64_t v225 = (v275 + v224) & v288;
                      uint64_t v181 = v290;
                      v184((_OWORD *)v225, (unsigned __int8 *)((v275 + ((unint64_t)&v186[v272] & v271)) & v288), v290);
                      int v185 = v286;
                      unint64_t v187 = v287;
                      *(void *)((v277 + v225) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v277
                                                                                     + ((v275
                                                                                       + ((unint64_t)&v186[v272] & v271)) & v288)) & 0xFFFFFFFFFFFFFFF8);
                      v286[v264] = v186[v264];
                      char v223 = 2;
                      break;
                    case 3u:
                      *(_OWORD *)int v185 = *(_OWORD *)v186;
                      unint64_t v226 = (unint64_t)&v185[v272] & v271;
                      unint64_t v227 = (unint64_t)&v186[v272] & v271;
                      uint64_t v228 = (unsigned char *)((v267 + (((unint64_t)v176 + v266) & v288)) & v34);
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v274 + 32))(v226, v227, v273);
                      unint64_t v229 = (v275 + v226) & v288;
                      unint64_t v230 = (v275 + v227) & v288;
                      uint64_t v181 = v290;
                      v184((_OWORD *)v229, (unsigned __int8 *)v230, v290);
                      int v185 = v228;
                      unint64_t v187 = v287;
                      *(void *)((v277 + v229) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v277 + v230) & 0xFFFFFFFFFFFFFFF8);
                      char v223 = 3;
                      break;
                    default:
                      char v223 = 0;
                      *(_WORD *)int v185 = *(_WORD *)v186;
LABEL_389:
                      uint64_t v181 = v290;
                      break;
                  }
                  v185[v187] = v223;
                  *((unsigned char *)v176 + v22) = 1;
                  unint64_t v106 = v284;
                }
                else
                {
                  *unint64_t v176 = *(_OWORD *)v177;
                  *((unsigned char *)v176 + v22) = 0;
                  uint64_t v184 = *(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v289 + 32);
                }
                v184((_OWORD *)((unint64_t)&a1[v270] & v269), (unsigned __int8 *)((unint64_t)&v4[v270] & v269), v181);
                *(_OWORD *)((v277 + ((unint64_t)&a1[v270] & v269)) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v277 + ((unint64_t)&v4[v270] & v269)) & 0xFFFFFFFFFFFFFFF8);
                a1[v106] = 1;
                goto LABEL_407;
              }
              *(_OWORD *)a1 = *(_OWORD *)v4;
              int v127 = *(void (**)(unint64_t, unint64_t, uint64_t))(v289 + 32);
              v127((unint64_t)&a1[v285 + 16] & v288, (unint64_t)&v4[v285 + 16] & v288, v290);
              uint64_t v128 = (unsigned char *)((((unint64_t)&a1[v285 + 16] & v288) + v283 + v12) & v34);
              uint64_t v129 = (unsigned __int8 *)((((unint64_t)&v4[v285 + 16] & v288) + v283 + v12) & v34);
              unint64_t v130 = v287;
              unsigned int v131 = v129[v287];
              unsigned int v132 = v131 - 4;
              if (v131 >= 4)
              {
                if (v287 <= 3) {
                  uint64_t v133 = v287;
                }
                else {
                  uint64_t v133 = 4;
                }
                switch(v133)
                {
                  case 1:
                    int v134 = *v129;
                    goto LABEL_298;
                  case 2:
                    int v134 = *(unsigned __int16 *)v129;
                    goto LABEL_298;
                  case 3:
                    int v134 = *(unsigned __int16 *)v129 | (v129[2] << 16);
                    goto LABEL_298;
                  case 4:
                    int v134 = *(_DWORD *)v129;
LABEL_298:
                    if (v287 < 4) {
                      unsigned int v131 = (v134 | (v132 << (8 * v287))) + 4;
                    }
                    else {
                      unsigned int v131 = v134 + 4;
                    }
                    break;
                  default:
                    break;
                }
              }
              switch(v131)
              {
                case 1u:
                  *uint64_t v128 = *v129;
                  char v167 = 1;
                  break;
                case 2u:
                  *(_OWORD *)uint64_t v128 = *(_OWORD *)v129;
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v274 + 32))((unint64_t)&v128[v272] & v271, (unint64_t)&v129[v272] & v271, v273);
                  unint64_t v168 = (v275 + ((unint64_t)&v128[v272] & v271)) & v288;
                  unint64_t v169 = (v275 + ((unint64_t)&v129[v272] & v271)) & v288;
                  v127(v168, v169, v290);
                  unint64_t v130 = v287;
                  *(void *)((v277 + v168) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v277 + v169) & 0xFFFFFFFFFFFFFFF8);
                  v128[v264] = v129[v264];
                  char v167 = 2;
                  break;
                case 3u:
                  *(_OWORD *)uint64_t v128 = *(_OWORD *)v129;
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v274 + 32))((unint64_t)&v128[v272] & v271, (unint64_t)&v129[v272] & v271, v273);
                  unint64_t v170 = (v275 + ((unint64_t)&v128[v272] & v271)) & v288;
                  unint64_t v171 = (v275 + ((unint64_t)&v129[v272] & v271)) & v288;
                  v127(v170, v171, v290);
                  unint64_t v130 = v287;
                  *(void *)((v277 + v170) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v277 + v171) & 0xFFFFFFFFFFFFFFF8);
                  char v167 = 3;
                  break;
                default:
                  char v167 = 0;
                  *(_WORD *)uint64_t v128 = *(_WORD *)v129;
                  break;
              }
              unint64_t v106 = v284;
              uint64_t v32 = v278;
              v128[v130] = v167;
              char v135 = 1;
            }
            a1[v22] = v135;
            goto LABEL_308;
          }
          unsigned int v123 = v4[v22];
          unsigned int v124 = v123 - 3;
          if (v123 >= 3)
          {
            if (v22 <= 3) {
              uint64_t v125 = v22;
            }
            else {
              uint64_t v125 = 4;
            }
            switch(v125)
            {
              case 1:
                int v126 = *v4;
                goto LABEL_274;
              case 2:
                int v126 = *(unsigned __int16 *)v4;
                goto LABEL_274;
              case 3:
                int v126 = *(unsigned __int16 *)v4 | (v4[2] << 16);
                goto LABEL_274;
              case 4:
                int v126 = *(_DWORD *)v4;
LABEL_274:
                if (v22 < 4) {
                  unsigned int v123 = (v126 | (v124 << (8 * v22))) + 3;
                }
                else {
                  unsigned int v123 = v126 + 3;
                }
                break;
              default:
                break;
            }
          }
          if (v123 == 2)
          {
            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v289 + 32))(a1, v4, v290);
            *(_OWORD *)((unint64_t)&a1[v283 + 7] & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v4[v283 + 7] & 0xFFFFFFFFFFFFFFF8);
            char v165 = 2;
          }
          else
          {
            if (v123 != 1)
            {
              *(_OWORD *)a1 = *(_OWORD *)v4;
              a1[v22] = 0;
LABEL_357:
              uint64_t v202 = (_OWORD *)((unint64_t)&a1[v280 + 7] & 0xFFFFFFFFFFFFFFF8);
              uint64_t v203 = (_OWORD *)((unint64_t)&v4[v280 + 7] & 0xFFFFFFFFFFFFFFF8);
              *uint64_t v202 = *v203;
              uint64_t v204 = ((unint64_t)v202 + v32 + 16) & v279;
              uint64_t v205 = ((unint64_t)v203 + v32 + 16) & v279;
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v281 + 32))(v204, v205, v282);
              unint64_t v206 = (_OWORD *)((v265 + v204) & v34);
              unint64_t v207 = (unsigned __int8 *)((v265 + v205) & v34);
              unsigned int v208 = v207[v22];
              unsigned int v209 = v208 - 3;
              if (v208 < 3)
              {
                uint64_t v211 = v290;
              }
              else
              {
                if (v22 <= 3) {
                  uint64_t v210 = v22;
                }
                else {
                  uint64_t v210 = 4;
                }
                uint64_t v211 = v290;
                switch(v210)
                {
                  case 1:
                    int v212 = *v207;
                    goto LABEL_367;
                  case 2:
                    int v212 = *(unsigned __int16 *)v207;
                    goto LABEL_367;
                  case 3:
                    int v212 = *(unsigned __int16 *)v207 | (*(unsigned __int8 *)(((v265 + v205) & v34) + 2) << 16);
                    goto LABEL_367;
                  case 4:
                    int v212 = *(_DWORD *)v207;
LABEL_367:
                    if (v22 < 4) {
                      unsigned int v208 = (v212 | (v209 << (8 * v22))) + 3;
                    }
                    else {
                      unsigned int v208 = v212 + 3;
                    }
                    break;
                  default:
                    break;
                }
              }
              if (v208 == 2)
              {
                (*(void (**)(_OWORD *, uint64_t, uint64_t))(v289 + 32))(v206, (v265 + v205) & v34, v211);
                *(_OWORD *)(((unint64_t)v206 + v277) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v207[v277] & 0xFFFFFFFFFFFFFFF8);
                char v222 = 2;
              }
              else if (v208 == 1)
              {
                *unint64_t v206 = *(_OWORD *)v207;
                unint64_t v213 = (unint64_t)&v207[v266] & v288;
                uint64_t v214 = *(void (**)(unint64_t, unint64_t, uint64_t))(v289 + 32);
                v214(((unint64_t)v206 + v266) & v288, v213, v211);
                uint64_t v215 = (unsigned char *)((v267 + (((unint64_t)v206 + v266) & v288)) & v34);
                uint64_t v216 = (unsigned __int8 *)((v267 + v213) & v34);
                unint64_t v217 = v287;
                unsigned int v218 = v216[v287];
                unsigned int v219 = v218 - 4;
                if (v218 >= 4)
                {
                  if (v287 <= 3) {
                    uint64_t v220 = v287;
                  }
                  else {
                    uint64_t v220 = 4;
                  }
                  switch(v220)
                  {
                    case 1:
                      int v221 = *v216;
                      goto LABEL_397;
                    case 2:
                      int v221 = *(unsigned __int16 *)v216;
                      goto LABEL_397;
                    case 3:
                      int v221 = *(unsigned __int16 *)v216 | (*(unsigned __int8 *)(((v267 + v213) & v34) + 2) << 16);
                      goto LABEL_397;
                    case 4:
                      int v221 = *(_DWORD *)v216;
LABEL_397:
                      if (v287 < 4) {
                        unsigned int v218 = (v221 | (v219 << (8 * v287))) + 4;
                      }
                      else {
                        unsigned int v218 = v221 + 4;
                      }
                      break;
                    default:
                      break;
                  }
                }
                switch(v218)
                {
                  case 1u:
                    *uint64_t v215 = *v216;
                    char v231 = 1;
                    break;
                  case 2u:
                    *(_OWORD *)uint64_t v215 = *(_OWORD *)v216;
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v274 + 32))((unint64_t)&v215[v272] & v271, (unint64_t)&v216[v272] & v271, v273);
                    unint64_t v232 = (v275 + ((unint64_t)&v215[v272] & v271)) & v288;
                    unint64_t v233 = (v275 + ((unint64_t)&v216[v272] & v271)) & v288;
                    v214(v232, v233, v290);
                    unint64_t v217 = v287;
                    *(void *)((v277 + v232) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v277 + v233) & 0xFFFFFFFFFFFFFFF8);
                    v215[v264] = v216[v264];
                    char v231 = 2;
                    break;
                  case 3u:
                    *(_OWORD *)uint64_t v215 = *(_OWORD *)v216;
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v274 + 32))((unint64_t)&v215[v272] & v271, (unint64_t)&v216[v272] & v271, v273);
                    unint64_t v234 = (v275 + ((unint64_t)&v215[v272] & v271)) & v288;
                    unint64_t v235 = (v275 + ((unint64_t)&v216[v272] & v271)) & v288;
                    v214(v234, v235, v290);
                    unint64_t v217 = v287;
                    *(void *)((v277 + v234) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v277 + v235) & 0xFFFFFFFFFFFFFFF8);
                    char v231 = 3;
                    break;
                  default:
                    char v231 = 0;
                    *(_WORD *)uint64_t v215 = *(_WORD *)v216;
                    break;
                }
                v215[v217] = v231;
                char v222 = 1;
                unint64_t v106 = v284;
              }
              else
              {
                char v222 = 0;
                *unint64_t v206 = *(_OWORD *)v207;
              }
              *((unsigned char *)v206 + v22) = v222;
              a1[v106] = 0;
              goto LABEL_407;
            }
            *(_OWORD *)a1 = *(_OWORD *)v4;
            int v157 = *(void (**)(unint64_t, unint64_t, uint64_t))(v289 + 32);
            v157((unint64_t)&a1[v285 + 16] & v288, (unint64_t)&v4[v285 + 16] & v288, v290);
            unint64_t v158 = (unsigned char *)((((unint64_t)&a1[v285 + 16] & v288) + v283 + v12) & v34);
            unsigned int v159 = (unsigned __int8 *)((((unint64_t)&v4[v285 + 16] & v288) + v283 + v12) & v34);
            unint64_t v160 = v287;
            unsigned int v161 = v159[v287];
            unsigned int v162 = v161 - 4;
            if (v161 >= 4)
            {
              if (v287 <= 3) {
                uint64_t v163 = v287;
              }
              else {
                uint64_t v163 = 4;
              }
              switch(v163)
              {
                case 1:
                  int v164 = *v159;
                  goto LABEL_347;
                case 2:
                  int v164 = *(unsigned __int16 *)v159;
                  goto LABEL_347;
                case 3:
                  int v164 = *(unsigned __int16 *)v159 | (v159[2] << 16);
                  goto LABEL_347;
                case 4:
                  int v164 = *(_DWORD *)v159;
LABEL_347:
                  if (v287 < 4) {
                    unsigned int v161 = (v164 | (v162 << (8 * v287))) + 4;
                  }
                  else {
                    unsigned int v161 = v164 + 4;
                  }
                  break;
                default:
                  break;
              }
            }
            switch(v161)
            {
              case 1u:
                *unint64_t v158 = *v159;
                char v197 = 1;
                break;
              case 2u:
                *(_OWORD *)unint64_t v158 = *(_OWORD *)v159;
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v274 + 32))((unint64_t)&v158[v272] & v271, (unint64_t)&v159[v272] & v271, v273);
                unint64_t v198 = (v275 + ((unint64_t)&v158[v272] & v271)) & v288;
                unint64_t v199 = (v275 + ((unint64_t)&v159[v272] & v271)) & v288;
                v157(v198, v199, v290);
                unint64_t v160 = v287;
                *(void *)((v277 + v198) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v277 + v199) & 0xFFFFFFFFFFFFFFF8);
                v158[v264] = v159[v264];
                char v197 = 2;
                break;
              case 3u:
                *(_OWORD *)unint64_t v158 = *(_OWORD *)v159;
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v274 + 32))((unint64_t)&v158[v272] & v271, (unint64_t)&v159[v272] & v271, v273);
                unint64_t v200 = (v275 + ((unint64_t)&v158[v272] & v271)) & v288;
                unint64_t v201 = (v275 + ((unint64_t)&v159[v272] & v271)) & v288;
                v157(v200, v201, v290);
                unint64_t v160 = v287;
                *(void *)((v277 + v200) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v277 + v201) & 0xFFFFFFFFFFFFFFF8);
                char v197 = 3;
                break;
              default:
                char v197 = 0;
                *(_WORD *)unint64_t v158 = *(_WORD *)v159;
                break;
            }
            unint64_t v106 = v284;
            uint64_t v32 = v278;
            v158[v160] = v197;
            char v165 = 1;
          }
          a1[v22] = v165;
          goto LABEL_357;
        }
        *(_OWORD *)a1 = *(_OWORD *)v4;
        int v115 = *(void (**)(unint64_t, unint64_t, uint64_t))(v289 + 32);
        v115((unint64_t)&a1[v285 + 16] & v288, (unint64_t)&v4[v285 + 16] & v288, v290);
        uint64_t v116 = (unsigned char *)((((unint64_t)&a1[v285 + 16] & v288) + v283 + v12) & v34);
        uint64_t v117 = (unsigned __int8 *)((((unint64_t)&v4[v285 + 16] & v288) + v283 + v12) & v34);
        unint64_t v118 = v287;
        unsigned int v119 = v117[v287];
        unsigned int v120 = v119 - 4;
        if (v119 >= 4)
        {
          if (v287 <= 3) {
            uint64_t v121 = v287;
          }
          else {
            uint64_t v121 = 4;
          }
          switch(v121)
          {
            case 1:
              int v122 = *v117;
              goto LABEL_240;
            case 2:
              int v122 = *(unsigned __int16 *)v117;
              goto LABEL_240;
            case 3:
              int v122 = *(unsigned __int16 *)v117 | (v117[2] << 16);
              goto LABEL_240;
            case 4:
              int v122 = *(_DWORD *)v117;
LABEL_240:
              if (v287 < 4) {
                unsigned int v119 = (v122 | (v120 << (8 * v287))) + 4;
              }
              else {
                unsigned int v119 = v122 + 4;
              }
              break;
            default:
              break;
          }
        }
        switch(v119)
        {
          case 1u:
            *uint64_t v116 = *v117;
            char v136 = 1;
            break;
          case 2u:
            *(_OWORD *)uint64_t v116 = *(_OWORD *)v117;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v274 + 32))((unint64_t)&v116[v272] & v271, (unint64_t)&v117[v272] & v271, v273);
            unint64_t v137 = (v275 + ((unint64_t)&v116[v272] & v271)) & v288;
            unint64_t v138 = (v275 + ((unint64_t)&v117[v272] & v271)) & v288;
            v115(v137, v138, v290);
            unint64_t v118 = v287;
            *(void *)((v277 + v137) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v277 + v138) & 0xFFFFFFFFFFFFFFF8);
            v116[v264] = v117[v264];
            char v136 = 2;
            break;
          case 3u:
            *(_OWORD *)uint64_t v116 = *(_OWORD *)v117;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v274 + 32))((unint64_t)&v116[v272] & v271, (unint64_t)&v117[v272] & v271, v273);
            unint64_t v139 = (v275 + ((unint64_t)&v116[v272] & v271)) & v288;
            unint64_t v140 = (v275 + ((unint64_t)&v117[v272] & v271)) & v288;
            v115(v139, v140, v290);
            unint64_t v118 = v287;
            *(void *)((v277 + v139) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v277 + v140) & 0xFFFFFFFFFFFFFFF8);
            char v136 = 3;
            break;
          default:
            char v136 = 0;
            *(_WORD *)uint64_t v116 = *(_WORD *)v117;
            break;
        }
        v116[v118] = v136;
        char v141 = (_OWORD *)((unint64_t)&a1[v268] & v34);
        unint64_t v142 = (unsigned __int8 *)((unint64_t)&v4[v268] & v34);
        unsigned int v143 = v142[v22];
        unsigned int v144 = v143 - 3;
        if (v143 >= 3)
        {
          if (v22 <= 3) {
            uint64_t v145 = v22;
          }
          else {
            uint64_t v145 = 4;
          }
          switch(v145)
          {
            case 1:
              int v146 = *v142;
              goto LABEL_258;
            case 2:
              int v146 = *(unsigned __int16 *)v142;
              goto LABEL_258;
            case 3:
              int v146 = *(unsigned __int16 *)v142 | (*(unsigned __int8 *)(((unint64_t)&v4[v268] & v34) + 2) << 16);
              goto LABEL_258;
            case 4:
              int v146 = *(_DWORD *)v142;
LABEL_258:
              if (v22 < 4) {
                unsigned int v143 = (v146 | (v144 << (8 * v22))) + 3;
              }
              else {
                unsigned int v143 = v146 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v143 == 2)
        {
          v115((unint64_t)&a1[v268] & v34, (unint64_t)&v4[v268] & v34, v290);
          *(_OWORD *)(((unint64_t)v141 + v277) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v142[v277] & 0xFFFFFFFFFFFFFFF8);
          char v155 = 2;
        }
        else
        {
          if (v143 == 1)
          {
            *char v141 = *(_OWORD *)v142;
            unint64_t v147 = (unint64_t)&v142[v266] & v288;
            v115(((unint64_t)v141 + v266) & v288, v147, v290);
            unint64_t v148 = (unsigned char *)((v267 + (((unint64_t)v141 + v266) & v288)) & v34);
            unint64_t v149 = (unsigned __int8 *)((v267 + v147) & v34);
            unint64_t v150 = v287;
            unsigned int v151 = v149[v287];
            unsigned int v152 = v151 - 4;
            if (v151 >= 4)
            {
              if (v287 <= 3) {
                uint64_t v153 = v287;
              }
              else {
                uint64_t v153 = 4;
              }
              switch(v153)
              {
                case 1:
                  int v154 = *v149;
                  goto LABEL_334;
                case 2:
                  int v154 = *(unsigned __int16 *)v149;
                  goto LABEL_334;
                case 3:
                  int v154 = *(unsigned __int16 *)v149 | (*(unsigned __int8 *)(((v267 + v147) & v34) + 2) << 16);
                  goto LABEL_334;
                case 4:
                  int v154 = *(_DWORD *)v149;
LABEL_334:
                  if (v287 < 4) {
                    unsigned int v151 = (v154 | (v152 << (8 * v287))) + 4;
                  }
                  else {
                    unsigned int v151 = v154 + 4;
                  }
                  break;
                default:
                  break;
              }
            }
            switch(v151)
            {
              case 1u:
                *unint64_t v148 = *v149;
                char v192 = 1;
                break;
              case 2u:
                *(_OWORD *)unint64_t v148 = *(_OWORD *)v149;
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v274 + 32))((unint64_t)&v148[v272] & v271, (unint64_t)&v149[v272] & v271, v273);
                unint64_t v193 = (v275 + ((unint64_t)&v148[v272] & v271)) & v288;
                unint64_t v194 = (v275 + ((unint64_t)&v149[v272] & v271)) & v288;
                v115(v193, v194, v290);
                unint64_t v150 = v287;
                *(void *)((v277 + v193) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v277 + v194) & 0xFFFFFFFFFFFFFFF8);
                v148[v264] = v149[v264];
                char v192 = 2;
                break;
              case 3u:
                *(_OWORD *)unint64_t v148 = *(_OWORD *)v149;
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v274 + 32))((unint64_t)&v148[v272] & v271, (unint64_t)&v149[v272] & v271, v273);
                unint64_t v195 = (v275 + ((unint64_t)&v148[v272] & v271)) & v288;
                unint64_t v196 = (v275 + ((unint64_t)&v149[v272] & v271)) & v288;
                v115(v195, v196, v290);
                unint64_t v150 = v287;
                *(void *)((v277 + v195) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v277 + v196) & 0xFFFFFFFFFFFFFFF8);
                char v192 = 3;
                break;
              default:
                char v192 = 0;
                *(_WORD *)unint64_t v148 = *(_WORD *)v149;
                break;
            }
            unint64_t v156 = v284;
            v148[v150] = v192;
            char v155 = 1;
            goto LABEL_343;
          }
          char v155 = 0;
          *char v141 = *(_OWORD *)v142;
        }
        unint64_t v156 = v284;
LABEL_343:
        *((unsigned char *)v141 + v22) = v155;
        a1[v156] = 2;
LABEL_407:
        uint64_t v3 = a3;
        goto LABEL_408;
      }
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v274 + 8))((unint64_t)&v62[v272] & v271, v273);
      unint64_t v67 = (v275 + ((unint64_t)&v62[v272] & v271)) & v288;
    }
    v40(v67, v290);
    goto LABEL_189;
  }
LABEL_408:
  uint64_t v236 = *(void *)(sub_22EE7F6E0() - 8);
  uint64_t v237 = *(unsigned __int8 *)(v236 + 80);
  uint64_t v238 = *(void *)(v236 + 64);
  uint64_t v239 = *(void *)(sub_22EE7F5D0() - 8);
  uint64_t v240 = *(unsigned __int8 *)(v239 + 80);
  uint64_t v241 = v237 | 7;
  uint64_t v242 = v237 | 7 | v240;
  unint64_t v243 = (v238 + 7 + ((*(void *)(v239 + 64) + v237 + ((v240 + 16) & ~v240)) & ~v237)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v244 = v243 + 8;
  unint64_t v245 = v243 + 9;
  if (v245 <= v244) {
    unint64_t v245 = v244;
  }
  if (v245 <= 2) {
    unint64_t v245 = 2;
  }
  unint64_t v246 = v245 + ((((v237 + 16) & ~v237) + v238 + v242) & ~v242);
  unint64_t v247 = v246 + 1;
  unint64_t v248 = (v238 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v249 = v248 + 16;
  if (v246 + 1 > v248 + 16) {
    unint64_t v250 = v246 + 1;
  }
  else {
    unint64_t v250 = v248 + 16;
  }
  if (v250 <= 0x10) {
    unint64_t v250 = 16;
  }
  unint64_t v251 = v250 + 1;
  unint64_t v252 = v250 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v253 = *(void *)(sub_22EE7C220() - 8);
  unint64_t v254 = ((*(void *)(v253 + 64)
         + v242
         + ((*(unsigned __int8 *)(v253 + 80) + v252 + 24) & ~(unint64_t)*(unsigned __int8 *)(v253 + 80))) & ~v242)
       + v251;
  if (((v254 + v241) & ~v241) + v249 > v254) {
    unint64_t v254 = ((v254 + v241) & ~v241) + v249;
  }
  if (v251 + ((v247 + v242) & ~v242) > v254) {
    unint64_t v254 = v251 + ((v247 + v242) & ~v242);
  }
  unint64_t v255 = v254 + 8;
  int v256 = (void *)((unint64_t)&a1[v255] & 0xFFFFFFFFFFFFFFF8);
  unint64_t v257 = (void *)((unint64_t)&v4[v255] & 0xFFFFFFFFFFFFFFF8);
  *int v256 = *v257;
  v256[1] = v257[1];
  swift_bridgeObjectRelease();
  uint64_t v258 = *(void *)(*(void *)(v3 + 16) - 8);
  uint64_t v259 = v258 + 40;
  uint64_t v260 = *(unsigned __int8 *)(v258 + 80);
  uint64_t v261 = ((unint64_t)v256 + v260 + 16) & ~v260;
  uint64_t v262 = ((unint64_t)v257 + v260 + 16) & ~v260;
  (*(void (**)(uint64_t, uint64_t))(v258 + 40))(v261, v262);
  *(unsigned char *)(v261 + *(void *)(v259 + 24)) = *(unsigned char *)(v262 + *(void *)(v259 + 24));
  return a1;
}

uint64_t sub_22EDBD868(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(sub_22EE7F6E0() - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(void *)(sub_22EE7F5D0() - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v7 | 7;
  uint64_t v12 = v7 | 7 | v10;
  unint64_t v13 = (v8 + 7 + ((*(void *)(v9 + 64) + v7 + ((v10 + 16) & ~v10)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v14 = v13 + 8;
  unint64_t v15 = v13 + 9;
  if (v15 <= v14) {
    unint64_t v15 = v14;
  }
  if (v15 <= 2) {
    unint64_t v15 = 2;
  }
  unint64_t v16 = v15 + ((((v7 + 16) & ~v7) + v8 + v12) & ~v12);
  unint64_t v17 = v16 + 1;
  unint64_t v18 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = v18 + 16;
  if (v16 + 1 > v18 + 16) {
    unint64_t v20 = v16 + 1;
  }
  else {
    unint64_t v20 = v18 + 16;
  }
  if (v20 <= 0x10) {
    unint64_t v20 = 16;
  }
  unint64_t v21 = v20 + 1;
  unint64_t v22 = v20 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = *(void *)(sub_22EE7C220() - 8);
  unint64_t v24 = ((*(void *)(v23 + 64)
        + v12
        + ((*(unsigned __int8 *)(v23 + 80) + v22 + 24) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))) & ~v12)
      + v21;
  if (((v24 + v11) & ~v11) + v19 > v24) {
    unint64_t v24 = ((v24 + v11) & ~v11) + v19;
  }
  if (v21 + ((v17 + v12) & ~v12) <= v24) {
    unint64_t v25 = v24;
  }
  else {
    unint64_t v25 = v21 + ((v17 + v12) & ~v12);
  }
  uint64_t v26 = *(void *)(a3 + 16);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(unsigned int *)(v27 + 84);
  if (v28 <= 0x7FFFFFFF) {
    unsigned int v29 = 0x7FFFFFFF;
  }
  else {
    unsigned int v29 = *(_DWORD *)(v27 + 84);
  }
  uint64_t v30 = *(unsigned __int8 *)(v27 + 80);
  uint64_t v31 = *(void *)(v27 + 64);
  if (!a2) {
    return 0;
  }
  if (a2 <= v29) {
    goto LABEL_37;
  }
  unint64_t v32 = v31 + ((v30 + (v25 & 0xFFFFFFFFFFFFFFF8) + 24) & ~v30) + 1;
  char v33 = 8 * v32;
  if (v32 <= 3)
  {
    unsigned int v36 = ((a2 - v29 + ~(-1 << v33)) >> v33) + 1;
    if (HIWORD(v36))
    {
      int v34 = *(_DWORD *)((char *)a1 + v32);
      if (!v34) {
        goto LABEL_37;
      }
      goto LABEL_29;
    }
    if (v36 > 0xFF)
    {
      int v34 = *(unsigned __int16 *)((char *)a1 + v32);
      if (!*(unsigned __int16 *)((char *)a1 + v32)) {
        goto LABEL_37;
      }
      goto LABEL_29;
    }
    if (v36 < 2)
    {
LABEL_37:
      unint64_t v38 = ((unint64_t)a1 + v25 + 8) & 0xFFFFFFFFFFFFFFF8;
      if ((v28 & 0x80000000) != 0)
      {
        return __swift_getEnumTagSinglePayload((v30 + v38 + 16) & ~v30, v28, v26);
      }
      else
      {
        unint64_t v39 = *(void *)(v38 + 8);
        if (v39 >= 0xFFFFFFFF) {
          LODWORD(v39) = -1;
        }
        return (v39 + 1);
      }
    }
  }
  int v34 = *((unsigned __int8 *)a1 + v32);
  if (!*((unsigned char *)a1 + v32)) {
    goto LABEL_37;
  }
LABEL_29:
  int v37 = (v34 - 1) << v33;
  if (v32 > 3) {
    int v37 = 0;
  }
  if (v32)
  {
    if (v32 > 3) {
      LODWORD(v32) = 4;
    }
    switch((int)v32)
    {
      case 2:
        LODWORD(v32) = *a1;
        break;
      case 3:
        LODWORD(v32) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v32) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v32) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v29 + (v32 | v37) + 1;
}

void sub_22EDBDC20(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(sub_22EE7F6E0() - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 64);
  uint64_t v11 = *(void *)(sub_22EE7F5D0() - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = v9 | 7;
  uint64_t v14 = v9 | 7 | v12;
  unint64_t v15 = (v10 + 7 + ((*(void *)(v11 + 64) + v9 + ((v12 + 16) & ~v12)) & ~v9)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = v15 + 8;
  unint64_t v17 = v15 + 9;
  if (v17 <= v16) {
    unint64_t v17 = v16;
  }
  if (v17 <= 2) {
    unint64_t v17 = 2;
  }
  unint64_t v18 = v17 + ((((v9 + 16) & ~v9) + v10 + v14) & ~v14);
  unint64_t v19 = v18 + 1;
  unint64_t v20 = (v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = v20 + 16;
  if (v18 + 1 > v20 + 16) {
    unint64_t v22 = v18 + 1;
  }
  else {
    unint64_t v22 = v20 + 16;
  }
  if (v22 <= 0x10) {
    unint64_t v22 = 16;
  }
  unint64_t v23 = v22 + 1;
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v25 = *(void *)(sub_22EE7C220() - 8);
  unint64_t v26 = ((*(void *)(v25 + 64)
        + v14
        + ((*(unsigned __int8 *)(v25 + 80) + v24 + 24) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))) & ~v14)
      + v23;
  if (((v26 + v13) & ~v13) + v21 > v26) {
    unint64_t v26 = ((v26 + v13) & ~v13) + v21;
  }
  unint64_t v27 = v23 + ((v19 + v14) & ~v14);
  if (v27 <= v26) {
    unint64_t v27 = v26;
  }
  uint64_t v28 = *(void *)(a4 + 16);
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(unsigned int *)(v29 + 84);
  if (v30 <= 0x7FFFFFFF) {
    unsigned int v31 = 0x7FFFFFFF;
  }
  else {
    unsigned int v31 = *(_DWORD *)(v29 + 84);
  }
  uint64_t v32 = *(unsigned __int8 *)(v29 + 80);
  size_t v33 = *(void *)(v29 + 64) + ((v32 + (v27 & 0xFFFFFFFFFFFFFFF8) + 24) & ~v32) + 1;
  char v34 = 8 * v33;
  if (a3 <= v31)
  {
    int v35 = 0;
  }
  else if (v33 <= 3)
  {
    unsigned int v38 = ((a3 - v31 + ~(-1 << v34)) >> v34) + 1;
    if (HIWORD(v38))
    {
      int v35 = 4;
    }
    else if (v38 >= 0x100)
    {
      int v35 = 2;
    }
    else
    {
      int v35 = v38 > 1;
    }
  }
  else
  {
    int v35 = 1;
  }
  if (v31 < a2)
  {
    unsigned int v36 = ~v31 + a2;
    if (v33 < 4)
    {
      int v37 = (v36 >> v34) + 1;
      if (v33)
      {
        int v39 = v36 & ~(-1 << v34);
        bzero(a1, v33);
        if (v33 == 3)
        {
          *(_WORD *)a1 = v39;
          a1[2] = BYTE2(v39);
        }
        else if (v33 == 2)
        {
          *(_WORD *)a1 = v39;
        }
        else
        {
          *a1 = v39;
        }
      }
    }
    else
    {
      bzero(a1, v33);
      *(_DWORD *)a1 = v36;
      int v37 = 1;
    }
    switch(v35)
    {
      case 1:
        a1[v33] = v37;
        return;
      case 2:
        *(_WORD *)&a1[v33] = v37;
        return;
      case 3:
        goto LABEL_54;
      case 4:
        *(_DWORD *)&a1[v33] = v37;
        return;
      default:
        return;
    }
  }
  switch(v35)
  {
    case 1:
      a1[v33] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_37;
    case 2:
      *(_WORD *)&a1[v33] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_37;
    case 3:
LABEL_54:
      __break(1u);
      JUMPOUT(0x22EDBE050);
    case 4:
      *(_DWORD *)&a1[v33] = 0;
      goto LABEL_36;
    default:
LABEL_36:
      if (a2)
      {
LABEL_37:
        int v40 = (void *)((unint64_t)&a1[v27 + 8] & 0xFFFFFFFFFFFFFFF8);
        if ((v30 & 0x80000000) != 0)
        {
          __swift_storeEnumTagSinglePayload(((unint64_t)v40 + v32 + 16) & ~v32, a2, v30, v28);
        }
        else if ((a2 & 0x80000000) != 0)
        {
          void *v40 = a2 ^ 0x80000000;
          v40[1] = 0;
        }
        else
        {
          v40[1] = (a2 - 1);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for CompactSubscriptionPickerOptionLabel()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration(uint64_t a1)
{
  return sub_22EAD01C0(a1, (uint64_t *)&unk_268626C80);
}

void *sub_22EDBE0B0(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 2)
    {
      if (EnumCaseMultiPayload == 1)
      {
        _s11PriceStringOMa(0);
        int v7 = swift_getEnumCaseMultiPayload();
        char v231 = a1;
        if (v7 == 2)
        {
          uint64_t v66 = sub_22EE7F6E0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v66 - 8) + 16))(a1, a2, v66);
          uint64_t v67 = _s20LocalizationResourceVMa();
          *(_OWORD *)((char *)a1 + *(int *)(v67 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v67 + 20));
          goto LABEL_35;
        }
        if (v7 != 1)
        {
          uint64_t v68 = a2[1];
          *a1 = *a2;
          a1[1] = v68;
          swift_bridgeObjectRetain();
          goto LABEL_35;
        }
        uint64_t v8 = a2[1];
        *a1 = *a2;
        a1[1] = v8;
        uint64_t v9 = _s22LocalizedPriceResourceVMa(0);
        uint64_t v10 = *(int *)(v9 + 20);
        unint64_t v232 = (char *)a1 + v10;
        uint64_t v11 = (char *)a2 + v10;
        uint64_t v12 = sub_22EE7F6E0();
        uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v229 = v12;
        uint64_t v14 = v12;
        unint64_t v15 = v13;
        v13(v232, v11, v14);
        uint64_t v16 = *(int *)(v9 + 24);
        unint64_t v17 = (char *)a1 + v16;
        unint64_t v18 = (char *)a2 + v16;
        uint64_t v19 = _s22LocalizedPriceResourceV6FormatOMa(0);
        int v20 = swift_getEnumCaseMultiPayload();
        if (v20 == 3)
        {
          uint64_t v97 = *((void *)v18 + 1);
          *(void *)unint64_t v17 = *(void *)v18;
          *((void *)v17 + 1) = v97;
          unsigned int v98 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v99 = v98[5];
          uint64_t v214 = &v18[v99];
          char v222 = &v17[v99];
          uint64_t v100 = sub_22EE7F5D0();
          uint64_t v101 = *(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 16);
          swift_bridgeObjectRetain();
          v101(v222, v214, v100);
          v15(&v17[v98[6]], &v18[v98[6]], v229);
          *(void *)&v17[v98[7]] = *(void *)&v18[v98[7]];
        }
        else
        {
          if (v20 != 2)
          {
            memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
LABEL_35:
            swift_storeEnumTagMultiPayload();
            int v102 = (int *)type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard(0);
            uint64_t v103 = v102[5];
            unint64_t v104 = (void *)((char *)a1 + v103);
            unint64_t v105 = (void *)((char *)a2 + v103);
            uint64_t v106 = v105[1];
            *unint64_t v104 = *v105;
            v104[1] = v106;
            uint64_t v107 = v102[6];
            unsigned int v108 = (char *)a1 + v107;
            uint64_t v109 = (char *)a2 + v107;
            uint64_t v110 = sub_22EE7C220();
            unsigned int v111 = *(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 16);
            swift_bridgeObjectRetain();
            v111(v108, v109, v110);
            uint64_t v112 = v102[7];
            uint64_t v113 = (void *)((char *)a1 + v112);
            int v114 = (void *)((char *)a2 + v112);
            int v115 = swift_getEnumCaseMultiPayload();
            if (v115 == 2)
            {
              uint64_t v133 = sub_22EE7F6E0();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v133 - 8) + 16))(v113, v114, v133);
              uint64_t v134 = _s20LocalizationResourceVMa();
              *(_OWORD *)((char *)v113 + *(int *)(v134 + 20)) = *(_OWORD *)((char *)v114 + *(int *)(v134 + 20));
            }
            else
            {
              if (v115 == 1)
              {
                uint64_t v116 = v114[1];
                void *v113 = *v114;
                v113[1] = v116;
                uint64_t v117 = _s22LocalizedPriceResourceVMa(0);
                uint64_t v118 = *(int *)(v117 + 20);
                unsigned int v119 = (char *)v113 + v118;
                unsigned int v120 = (char *)v114 + v118;
                uint64_t v121 = sub_22EE7F6E0();
                int v122 = *(void (**)(char *, char *, uint64_t))(*(void *)(v121 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v215 = v121;
                v122(v119, v120, v121);
                uint64_t v123 = *(int *)(v117 + 24);
                unsigned int v124 = (char *)v113 + v123;
                uint64_t v125 = (char *)v114 + v123;
                uint64_t v126 = _s22LocalizedPriceResourceV6FormatOMa(0);
                int v127 = swift_getEnumCaseMultiPayload();
                if (v127 == 3)
                {
                  uint64_t v178 = *((void *)v125 + 1);
                  *(void *)unsigned int v124 = *(void *)v125;
                  *((void *)v124 + 1) = v178;
                  unsigned int v179 = (int *)_s15PricePropertiesVMa(0);
                  uint64_t v180 = v179[5];
                  uint64_t v181 = &v124[v180];
                  unsigned int v208 = &v125[v180];
                  uint64_t v182 = sub_22EE7F5D0();
                  unint64_t v198 = *(void (**)(char *, char *, uint64_t))(*(void *)(v182 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v198(v181, v208, v182);
                  v122(&v124[v179[6]], &v125[v179[6]], v215);
                  *(void *)&v124[v179[7]] = *(void *)&v125[v179[7]];
                }
                else
                {
                  if (v127 != 2)
                  {
                    memcpy(v124, v125, *(void *)(*(void *)(v126 - 8) + 64));
                    goto LABEL_58;
                  }
                  uint64_t v128 = *((void *)v125 + 1);
                  *(void *)unsigned int v124 = *(void *)v125;
                  *((void *)v124 + 1) = v128;
                  uint64_t v129 = (int *)_s15PricePropertiesVMa(0);
                  uint64_t v130 = v129[5];
                  unint64_t v195 = &v125[v130];
                  uint64_t v204 = &v124[v130];
                  uint64_t v131 = sub_22EE7F5D0();
                  unint64_t v193 = *(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v193(v204, v195, v131);
                  v122(&v124[v129[6]], &v125[v129[6]], v215);
                  *(void *)&v124[v129[7]] = *(void *)&v125[v129[7]];
                  uint64_t v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
                  v124[*(int *)(v132 + 48)] = v125[*(int *)(v132 + 48)];
                }
                swift_storeEnumTagMultiPayload();
LABEL_58:
                a1 = v231;
                goto LABEL_59;
              }
              uint64_t v135 = v114[1];
              void *v113 = *v114;
              v113[1] = v135;
              swift_bridgeObjectRetain();
            }
LABEL_59:
            swift_storeEnumTagMultiPayload();
            uint64_t v183 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268626C70) + 48);
            uint64_t v184 = (char *)a1 + v183;
            int v185 = (char *)a2 + v183;
            uint64_t v186 = sub_22EE7F6E0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v186 - 8) + 16))(v184, v185, v186);
            uint64_t v187 = _s20LocalizationResourceVMa();
            *(_OWORD *)&v184[*(int *)(v187 + 20)] = *(_OWORD *)&v185[*(int *)(v187 + 20)];
LABEL_63:
            swift_storeEnumTagMultiPayload();
            return a1;
          }
          uint64_t v21 = *((void *)v18 + 1);
          *(void *)unint64_t v17 = *(void *)v18;
          *((void *)v17 + 1) = v21;
          unint64_t v22 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v23 = v22[5];
          uint64_t v210 = &v18[v23];
          unsigned int v219 = &v17[v23];
          uint64_t v24 = sub_22EE7F5D0();
          uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
          swift_bridgeObjectRetain();
          v25(v219, v210, v24);
          v15(&v17[v22[6]], &v18[v22[6]], v229);
          *(void *)&v17[v22[7]] = *(void *)&v18[v22[7]];
          uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
          v17[*(int *)(v26 + 48)] = v18[*(int *)(v26 + 48)];
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_35;
      }
      _s11PriceStringOMa(0);
      int v46 = swift_getEnumCaseMultiPayload();
      if (v46 == 2)
      {
        uint64_t v92 = sub_22EE7F6E0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v92 - 8) + 16))(a1, a2, v92);
        uint64_t v93 = _s20LocalizationResourceVMa();
        *(_OWORD *)((char *)a1 + *(int *)(v93 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v93 + 20));
        goto LABEL_45;
      }
      if (v46 != 1)
      {
        uint64_t v96 = a2[1];
        *a1 = *a2;
        a1[1] = v96;
        swift_bridgeObjectRetain();
        goto LABEL_45;
      }
      uint64_t v47 = a2[1];
      *a1 = *a2;
      a1[1] = v47;
      uint64_t v48 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v49 = *(int *)(v48 + 20);
      int v50 = (char *)a1 + v49;
      unsigned int v51 = (char *)a2 + v49;
      uint64_t v52 = sub_22EE7F6E0();
      unsigned int v53 = *(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v226 = v52;
      uint64_t v54 = v52;
      int v55 = v53;
      v53(v50, v51, v54);
      uint64_t v56 = *(int *)(v48 + 24);
      unsigned int v57 = (char *)a1 + v56;
      unsigned int v58 = (char *)a2 + v56;
      uint64_t v59 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v60 = swift_getEnumCaseMultiPayload();
      if (v60 == 3)
      {
        uint64_t v136 = *((void *)v58 + 1);
        *(void *)unsigned int v57 = *(void *)v58;
        *((void *)v57 + 1) = v136;
        unint64_t v137 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v138 = v137[5];
        uint64_t v216 = &v58[v138];
        char v223 = &v57[v138];
        uint64_t v139 = sub_22EE7F5D0();
        uint64_t v205 = *(void (**)(char *, char *, uint64_t))(*(void *)(v139 - 8) + 16);
        swift_bridgeObjectRetain();
        v205(v223, v216, v139);
        v55(&v57[v137[6]], &v58[v137[6]], v226);
        *(void *)&v57[v137[7]] = *(void *)&v58[v137[7]];
      }
      else
      {
        if (v60 != 2)
        {
          memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
LABEL_45:
          swift_storeEnumTagMultiPayload();
          unint64_t v140 = (int *)type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard(0);
          uint64_t v141 = v140[5];
          unint64_t v142 = (void *)((char *)a1 + v141);
          unsigned int v143 = (void *)((char *)a2 + v141);
          uint64_t v144 = v143[1];
          *unint64_t v142 = *v143;
          v142[1] = v144;
          uint64_t v145 = v140[6];
          int v146 = (char *)a1 + v145;
          unint64_t v147 = (char *)a2 + v145;
          uint64_t v148 = sub_22EE7C220();
          unint64_t v149 = *(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 16);
          swift_bridgeObjectRetain();
          v149(v146, v147, v148);
          uint64_t v150 = v140[7];
          unsigned int v151 = (void *)((char *)a1 + v150);
          unsigned int v152 = (void *)((char *)a2 + v150);
          int v153 = swift_getEnumCaseMultiPayload();
          if (v153 == 2)
          {
            uint64_t v171 = sub_22EE7F6E0();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v171 - 8) + 16))(v151, v152, v171);
            uint64_t v172 = _s20LocalizationResourceVMa();
            *(_OWORD *)((char *)v151 + *(int *)(v172 + 20)) = *(_OWORD *)((char *)v152 + *(int *)(v172 + 20));
          }
          else
          {
            if (v153 == 1)
            {
              uint64_t v154 = v152[1];
              *unsigned int v151 = *v152;
              v151[1] = v154;
              uint64_t v155 = _s22LocalizedPriceResourceVMa(0);
              uint64_t v156 = *(int *)(v155 + 20);
              int v157 = (char *)v151 + v156;
              unint64_t v158 = (char *)v152 + v156;
              uint64_t v159 = sub_22EE7F6E0();
              unint64_t v160 = *(void (**)(char *, char *, uint64_t))(*(void *)(v159 - 8) + 16);
              swift_bridgeObjectRetain();
              uint64_t v224 = v159;
              v160(v157, v158, v159);
              uint64_t v161 = *(int *)(v155 + 24);
              unsigned int v162 = (char *)v151 + v161;
              uint64_t v163 = (char *)v152 + v161;
              uint64_t v164 = _s22LocalizedPriceResourceV6FormatOMa(0);
              int v165 = swift_getEnumCaseMultiPayload();
              if (v165 == 3)
              {
                uint64_t v188 = *((void *)v163 + 1);
                *(void *)unsigned int v162 = *(void *)v163;
                *((void *)v162 + 1) = v188;
                unsigned int v189 = (int *)_s15PricePropertiesVMa(0);
                uint64_t v190 = v189[5];
                unsigned int v209 = &v163[v190];
                unsigned int v218 = &v162[v190];
                uint64_t v191 = sub_22EE7F5D0();
                unint64_t v199 = *(void (**)(char *, char *, uint64_t))(*(void *)(v191 - 8) + 16);
                swift_bridgeObjectRetain();
                v199(v218, v209, v191);
                v160(&v162[v189[6]], &v163[v189[6]], v224);
                *(void *)&v162[v189[7]] = *(void *)&v163[v189[7]];
              }
              else
              {
                if (v165 != 2)
                {
                  memcpy(v162, v163, *(void *)(*(void *)(v164 - 8) + 64));
                  goto LABEL_62;
                }
                uint64_t v166 = *((void *)v163 + 1);
                *(void *)unsigned int v162 = *(void *)v163;
                *((void *)v162 + 1) = v166;
                char v167 = (int *)_s15PricePropertiesVMa(0);
                uint64_t v168 = v167[5];
                unint64_t v206 = &v163[v168];
                unint64_t v217 = &v162[v168];
                uint64_t v169 = sub_22EE7F5D0();
                unint64_t v196 = *(void (**)(char *, char *, uint64_t))(*(void *)(v169 - 8) + 16);
                swift_bridgeObjectRetain();
                v196(v217, v206, v169);
                v160(&v162[v167[6]], &v163[v167[6]], v224);
                *(void *)&v162[v167[7]] = *(void *)&v163[v167[7]];
                uint64_t v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
                v162[*(int *)(v170 + 48)] = v163[*(int *)(v170 + 48)];
              }
LABEL_53:
              swift_storeEnumTagMultiPayload();
              goto LABEL_62;
            }
            uint64_t v173 = v152[1];
            *unsigned int v151 = *v152;
            v151[1] = v173;
            swift_bridgeObjectRetain();
          }
          goto LABEL_62;
        }
        uint64_t v61 = *((void *)v58 + 1);
        *(void *)unsigned int v57 = *(void *)v58;
        *((void *)v57 + 1) = v61;
        unint64_t v62 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v63 = v62[5];
        int v212 = &v58[v63];
        uint64_t v220 = &v57[v63];
        uint64_t v64 = sub_22EE7F5D0();
        unint64_t v201 = *(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16);
        swift_bridgeObjectRetain();
        v201(v220, v212, v64);
        v55(&v57[v62[6]], &v58[v62[6]], v226);
        *(void *)&v57[v62[7]] = *(void *)&v58[v62[7]];
        uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v57[*(int *)(v65 + 48)] = v58[*(int *)(v65 + 48)];
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_45;
    }
    uint64_t v28 = a2[1];
    *a1 = *a2;
    a1[1] = v28;
    uint64_t v29 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v30 = *(int *)(v29 + 20);
    unsigned int v31 = (char *)a1 + v30;
    uint64_t v32 = (char *)a2 + v30;
    uint64_t v33 = sub_22EE7F6E0();
    char v34 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
    swift_bridgeObjectRetain();
    v34(v31, v32, v33);
    uint64_t v225 = v29;
    uint64_t v35 = *(int *)(v29 + 24);
    unsigned int v36 = (char *)a1 + v35;
    int v37 = (char *)a2 + v35;
    uint64_t v38 = _s22LocalizedPriceResourceV6FormatOMa(0);
    int v39 = swift_getEnumCaseMultiPayload();
    uint64_t v230 = v33;
    if (v39 == 3)
    {
      int v221 = v34;
      uint64_t v69 = *((void *)v37 + 1);
      *(void *)unsigned int v36 = *(void *)v37;
      *((void *)v36 + 1) = v69;
      unsigned int v70 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v71 = v70[5];
      uint64_t v202 = &v37[v71];
      unint64_t v213 = &v36[v71];
      uint64_t v72 = sub_22EE7F5D0();
      int v73 = *(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16);
      char v34 = v221;
      swift_bridgeObjectRetain();
      v73(v213, v202, v72);
      uint64_t v33 = v230;
      v221(&v36[v70[6]], &v37[v70[6]], v230);
      *(void *)&v36[v70[7]] = *(void *)&v37[v70[7]];
    }
    else
    {
      if (v39 != 2)
      {
        memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
LABEL_23:
        uint64_t v74 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268626C78) + 48);
        unint64_t v75 = (char *)a1 + v74;
        uint64_t v76 = (char *)a2 + v74;
        _s11PriceStringOMa(0);
        int v77 = swift_getEnumCaseMultiPayload();
        if (v77 == 2)
        {
          v34(v75, v76, v33);
          uint64_t v94 = _s20LocalizationResourceVMa();
          *(_OWORD *)&v75[*(int *)(v94 + 20)] = *(_OWORD *)&v76[*(int *)(v94 + 20)];
        }
        else
        {
          if (v77 == 1)
          {
            uint64_t v78 = *((void *)v76 + 1);
            *(void *)unint64_t v75 = *(void *)v76;
            *((void *)v75 + 1) = v78;
            uint64_t v79 = *(int *)(v225 + 20);
            int v80 = v34;
            unint64_t v81 = &v75[v79];
            int v82 = &v76[v79];
            swift_bridgeObjectRetain();
            v80(v81, v82, v33);
            uint64_t v83 = *(int *)(v225 + 24);
            unsigned int v84 = &v75[v83];
            unsigned int v85 = &v76[v83];
            int v86 = swift_getEnumCaseMultiPayload();
            if (v86 == 3)
            {
              uint64_t v174 = *((void *)v85 + 1);
              *(void *)unsigned int v84 = *(void *)v85;
              *((void *)v84 + 1) = v174;
              uint64_t v175 = (int *)_s15PricePropertiesVMa(0);
              uint64_t v176 = v175[5];
              uint64_t v228 = &v84[v176];
              unint64_t v207 = &v85[v176];
              uint64_t v177 = sub_22EE7F5D0();
              char v197 = *(void (**)(char *, char *, uint64_t))(*(void *)(v177 - 8) + 16);
              swift_bridgeObjectRetain();
              v197(v228, v207, v177);
              v80(&v84[v175[6]], &v85[v175[6]], v230);
              *(void *)&v84[v175[7]] = *(void *)&v85[v175[7]];
            }
            else
            {
              if (v86 != 2)
              {
                memcpy(v84, v85, *(void *)(*(void *)(v38 - 8) + 64));
                goto LABEL_62;
              }
              uint64_t v87 = *((void *)v85 + 1);
              *(void *)unsigned int v84 = *(void *)v85;
              *((void *)v84 + 1) = v87;
              unsigned int v88 = (int *)_s15PricePropertiesVMa(0);
              uint64_t v89 = v88[5];
              unint64_t v227 = &v84[v89];
              uint64_t v203 = &v85[v89];
              uint64_t v90 = sub_22EE7F5D0();
              unint64_t v194 = *(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 16);
              swift_bridgeObjectRetain();
              v194(v227, v203, v90);
              v80(&v84[v88[6]], &v85[v88[6]], v230);
              *(void *)&v84[v88[7]] = *(void *)&v85[v88[7]];
              uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
              v84[*(int *)(v91 + 48)] = v85[*(int *)(v91 + 48)];
            }
            goto LABEL_53;
          }
          uint64_t v95 = *((void *)v76 + 1);
          *(void *)unint64_t v75 = *(void *)v76;
          *((void *)v75 + 1) = v95;
          swift_bridgeObjectRetain();
        }
LABEL_62:
        swift_storeEnumTagMultiPayload();
        goto LABEL_63;
      }
      uint64_t v40 = *((void *)v37 + 1);
      *(void *)unsigned int v36 = *(void *)v37;
      *((void *)v36 + 1) = v40;
      uint64_t v41 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v42 = v41[5];
      unint64_t v200 = &v37[v42];
      uint64_t v211 = &v36[v42];
      uint64_t v43 = sub_22EE7F5D0();
      uint64_t v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16);
      swift_bridgeObjectRetain();
      v44(v211, v200, v43);
      uint64_t v33 = v230;
      v34(&v36[v41[6]], &v37[v41[6]], v230);
      *(void *)&v36[v41[7]] = *(void *)&v37[v41[7]];
      uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
      v36[*(int *)(v45 + 48)] = v37[*(int *)(v45 + 48)];
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_23;
  }
  uint64_t v27 = *a2;
  *a1 = *a2;
  a1 = (void *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard(uint64_t a1)
{
  return sub_22EAD01C0(a1, (uint64_t *)&unk_268626C90);
}

uint64_t sub_22EDBF40C(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v6 = a1 + *(int *)(v5 + 20);
    uint64_t v7 = sub_22EE7F6E0();
    unsigned int v70 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    v70(v6, v7);
    uint64_t v8 = a1 + *(int *)(v5 + 24);
    _s22LocalizedPriceResourceV6FormatOMa(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3 || EnumCaseMultiPayload == 2)
    {
      swift_bridgeObjectRelease();
      uint64_t v10 = _s15PricePropertiesVMa(0);
      uint64_t v11 = v8 + *(int *)(v10 + 20);
      uint64_t v12 = sub_22EE7F5D0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
      v70(v8 + *(int *)(v10 + 24), v7);
    }
    uint64_t v13 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268626C78) + 48);
    _s11PriceStringOMa(0);
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result == 2)
    {
      uint64_t v38 = v13;
    }
    else
    {
      if (result != 1)
      {
        if (result) {
          return result;
        }
LABEL_44:
        return swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      v70(v13 + *(int *)(v5 + 20), v7);
      uint64_t v39 = v13 + *(int *)(v5 + 24);
      uint64_t result = swift_getEnumCaseMultiPayload();
      if (result != 3 && result != 2) {
        return result;
      }
      swift_bridgeObjectRelease();
      uint64_t v40 = _s15PricePropertiesVMa(0);
      uint64_t v41 = v39 + *(int *)(v40 + 20);
      uint64_t v42 = sub_22EE7F5D0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v41, v42);
      uint64_t v38 = v39 + *(int *)(v40 + 24);
    }
    uint64_t v43 = v7;
  }
  else
  {
    if (result == 1)
    {
      _s11PriceStringOMa(0);
      int v4 = swift_getEnumCaseMultiPayload();
      switch(v4)
      {
        case 2:
          uint64_t v23 = sub_22EE7F6E0();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(a1, v23);
          break;
        case 1:
          swift_bridgeObjectRelease();
          uint64_t v24 = _s22LocalizedPriceResourceVMa(0);
          uint64_t v25 = a1 + *(int *)(v24 + 20);
          uint64_t v26 = sub_22EE7F6E0();
          uint64_t v27 = *(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8);
          v27(v25, v26);
          uint64_t v28 = a1 + *(int *)(v24 + 24);
          _s22LocalizedPriceResourceV6FormatOMa(0);
          int v29 = swift_getEnumCaseMultiPayload();
          if (v29 == 3 || v29 == 2)
          {
            swift_bridgeObjectRelease();
            uint64_t v30 = _s15PricePropertiesVMa(0);
            uint64_t v31 = v28 + *(int *)(v30 + 20);
            uint64_t v32 = sub_22EE7F5D0();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v31, v32);
            v27(v28 + *(int *)(v30 + 24), v26);
          }
          break;
        case 0:
          swift_bridgeObjectRelease();
          break;
      }
      uint64_t v33 = type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard(0);
      swift_bridgeObjectRelease();
      uint64_t v34 = a1 + *(int *)(v33 + 24);
      uint64_t v35 = sub_22EE7C220();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(v34, v35);
      uint64_t v36 = a1 + *(int *)(v33 + 28);
      int v37 = swift_getEnumCaseMultiPayload();
      switch(v37)
      {
        case 2:
          uint64_t v44 = sub_22EE7F6E0();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v44 - 8) + 8))(v36, v44);
          break;
        case 1:
          swift_bridgeObjectRelease();
          uint64_t v45 = _s22LocalizedPriceResourceVMa(0);
          uint64_t v46 = v36 + *(int *)(v45 + 20);
          uint64_t v47 = sub_22EE7F6E0();
          uint64_t v48 = *(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8);
          v48(v46, v47);
          uint64_t v49 = v36 + *(int *)(v45 + 24);
          _s22LocalizedPriceResourceV6FormatOMa(0);
          int v50 = swift_getEnumCaseMultiPayload();
          if (v50 == 3 || v50 == 2)
          {
            swift_bridgeObjectRelease();
            uint64_t v51 = _s15PricePropertiesVMa(0);
            uint64_t v52 = v49 + *(int *)(v51 + 20);
            uint64_t v53 = sub_22EE7F5D0();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v53 - 8) + 8))(v52, v53);
            v48(v49 + *(int *)(v51 + 24), v47);
          }
          break;
        case 0:
          swift_bridgeObjectRelease();
          break;
      }
      uint64_t v54 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268626C70) + 48);
      uint64_t v55 = sub_22EE7F6E0();
      uint64_t v56 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v55 - 8) + 8);
      uint64_t v43 = v55;
      uint64_t v38 = v54;
      goto LABEL_53;
    }
    if (result) {
      return result;
    }
    _s11PriceStringOMa(0);
    int v3 = swift_getEnumCaseMultiPayload();
    switch(v3)
    {
      case 2:
        uint64_t v57 = sub_22EE7F6E0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v57 - 8) + 8))(a1, v57);
        break;
      case 1:
        swift_bridgeObjectRelease();
        uint64_t v14 = _s22LocalizedPriceResourceVMa(0);
        uint64_t v15 = a1 + *(int *)(v14 + 20);
        uint64_t v16 = sub_22EE7F6E0();
        unint64_t v17 = *(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);
        v17(v15, v16);
        uint64_t v18 = a1 + *(int *)(v14 + 24);
        _s22LocalizedPriceResourceV6FormatOMa(0);
        int v19 = swift_getEnumCaseMultiPayload();
        if (v19 == 3 || v19 == 2)
        {
          swift_bridgeObjectRelease();
          uint64_t v20 = _s15PricePropertiesVMa(0);
          uint64_t v21 = v18 + *(int *)(v20 + 20);
          uint64_t v22 = sub_22EE7F5D0();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
          v17(v18 + *(int *)(v20 + 24), v16);
        }
        break;
      case 0:
        swift_bridgeObjectRelease();
        break;
    }
    uint64_t v58 = type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard(0);
    swift_bridgeObjectRelease();
    uint64_t v59 = a1 + *(int *)(v58 + 24);
    uint64_t v60 = sub_22EE7C220();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v60 - 8) + 8))(v59, v60);
    uint64_t v61 = a1 + *(int *)(v58 + 28);
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result == 2)
    {
      uint64_t v69 = sub_22EE7F6E0();
      uint64_t v56 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v69 - 8) + 8);
      uint64_t v43 = v69;
      uint64_t v38 = v61;
      goto LABEL_53;
    }
    if (result != 1)
    {
      if (result) {
        return result;
      }
      goto LABEL_44;
    }
    swift_bridgeObjectRelease();
    uint64_t v62 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v63 = v61 + *(int *)(v62 + 20);
    uint64_t v64 = sub_22EE7F6E0();
    unsigned int v70 = *(void (**)(uint64_t, uint64_t))(*(void *)(v64 - 8) + 8);
    v70(v63, v64);
    uint64_t v65 = v61 + *(int *)(v62 + 24);
    _s22LocalizedPriceResourceV6FormatOMa(0);
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result != 3 && result != 2) {
      return result;
    }
    swift_bridgeObjectRelease();
    uint64_t v66 = _s15PricePropertiesVMa(0);
    uint64_t v67 = v65 + *(int *)(v66 + 20);
    uint64_t v68 = sub_22EE7F5D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v68 - 8) + 8))(v67, v68);
    uint64_t v38 = v65 + *(int *)(v66 + 24);
    uint64_t v43 = v64;
  }
  uint64_t v56 = (uint64_t (*)(uint64_t, uint64_t))v70;
LABEL_53:

  return v56(v38, v43);
}

void *sub_22EDBFD24(void *a1, void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v23 = a2[1];
    *a1 = *a2;
    a1[1] = v23;
    uint64_t v24 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v25 = *(int *)(v24 + 20);
    uint64_t v26 = (char *)a1 + v25;
    uint64_t v27 = (char *)a2 + v25;
    uint64_t v28 = sub_22EE7F6E0();
    int v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
    swift_bridgeObjectRetain();
    v29(v26, v27, v28);
    uint64_t v225 = v24;
    uint64_t v30 = *(int *)(v24 + 24);
    uint64_t v31 = (char *)a1 + v30;
    uint64_t v32 = (char *)a2 + v30;
    uint64_t v33 = _s22LocalizedPriceResourceV6FormatOMa(0);
    int v34 = swift_getEnumCaseMultiPayload();
    if (v34 == 3)
    {
      uint64_t v66 = *((void *)v32 + 1);
      *(void *)uint64_t v31 = *(void *)v32;
      *((void *)v31 + 1) = v66;
      uint64_t v67 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v68 = v67[5];
      uint64_t v220 = &v31[v68];
      unint64_t v201 = &v32[v68];
      uint64_t v211 = v33;
      uint64_t v69 = v28;
      uint64_t v70 = sub_22EE7F5D0();
      uint64_t v71 = *(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v72 = v70;
      uint64_t v28 = v69;
      uint64_t v33 = v211;
      v71(v220, v201, v72);
      v29(&v31[v67[6]], &v32[v67[6]], v28);
      *(void *)&v31[v67[7]] = *(void *)&v32[v67[7]];
    }
    else
    {
      if (v34 != 2)
      {
        memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
LABEL_21:
        uint64_t v73 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268626C78) + 48);
        uint64_t v74 = (char *)a1 + v73;
        unint64_t v75 = (char *)a2 + v73;
        _s11PriceStringOMa(0);
        int v76 = swift_getEnumCaseMultiPayload();
        if (v76 == 2)
        {
          v29(v74, v75, v28);
          uint64_t v93 = _s20LocalizationResourceVMa();
          *(_OWORD *)&v74[*(int *)(v93 + 20)] = *(_OWORD *)&v75[*(int *)(v93 + 20)];
        }
        else if (v76 == 1)
        {
          uint64_t v77 = *((void *)v75 + 1);
          *(void *)uint64_t v74 = *(void *)v75;
          *((void *)v74 + 1) = v77;
          uint64_t v78 = *(int *)(v225 + 20);
          uint64_t v79 = &v74[v78];
          int v80 = v29;
          unint64_t v81 = &v75[v78];
          swift_bridgeObjectRetain();
          v80(v79, v81, v28);
          uint64_t v82 = *(int *)(v225 + 24);
          uint64_t v83 = &v74[v82];
          unsigned int v84 = &v75[v82];
          int v85 = swift_getEnumCaseMultiPayload();
          if (v85 == 3)
          {
            uint64_t v174 = *((void *)v84 + 1);
            *(void *)uint64_t v83 = *(void *)v84;
            *((void *)v83 + 1) = v174;
            uint64_t v175 = (int *)_s15PricePropertiesVMa(0);
            uint64_t v176 = v175[5];
            uint64_t v230 = &v83[v176];
            uint64_t v205 = &v84[v176];
            uint64_t v177 = sub_22EE7F5D0();
            unint64_t v198 = *(void (**)(char *, char *, uint64_t))(*(void *)(v177 - 8) + 16);
            swift_bridgeObjectRetain();
            v198(v230, v205, v177);
            v80(&v83[v175[6]], &v84[v175[6]], v28);
            *(void *)&v83[v175[7]] = *(void *)&v84[v175[7]];
          }
          else
          {
            if (v85 != 2)
            {
              memcpy(v83, v84, *(void *)(*(void *)(v33 - 8) + 64));
              goto LABEL_58;
            }
            uint64_t v86 = *((void *)v84 + 1);
            *(void *)uint64_t v83 = *(void *)v84;
            *((void *)v83 + 1) = v86;
            uint64_t v87 = (int *)_s15PricePropertiesVMa(0);
            uint64_t v88 = v87[5];
            unint64_t v227 = &v83[v88];
            uint64_t v202 = &v84[v88];
            uint64_t v89 = sub_22EE7F5D0();
            unint64_t v195 = *(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 16);
            swift_bridgeObjectRetain();
            v195(v227, v202, v89);
            v80(&v83[v87[6]], &v84[v87[6]], v28);
            *(void *)&v83[v87[7]] = *(void *)&v84[v87[7]];
            uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
            v83[*(int *)(v90 + 48)] = v84[*(int *)(v90 + 48)];
          }
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          uint64_t v94 = *((void *)v75 + 1);
          *(void *)uint64_t v74 = *(void *)v75;
          *((void *)v74 + 1) = v94;
          swift_bridgeObjectRetain();
        }
LABEL_58:
        swift_storeEnumTagMultiPayload();
        goto LABEL_59;
      }
      uint64_t v35 = *((void *)v32 + 1);
      *(void *)uint64_t v31 = *(void *)v32;
      *((void *)v31 + 1) = v35;
      uint64_t v36 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v37 = v36[5];
      uint64_t v218 = v28;
      uint64_t v38 = &v31[v37];
      uint64_t v39 = &v32[v37];
      unsigned int v209 = v29;
      uint64_t v40 = sub_22EE7F5D0();
      unint64_t v200 = *(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v41 = v38;
      uint64_t v42 = v40;
      int v29 = v209;
      uint64_t v28 = v218;
      v200(v41, v39, v42);
      v209(&v31[v36[6]], &v32[v36[6]], v218);
      *(void *)&v31[v36[7]] = *(void *)&v32[v36[7]];
      uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
      v31[*(int *)(v43 + 48)] = v32[*(int *)(v43 + 48)];
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_21;
  }
  if (EnumCaseMultiPayload != 1)
  {
    _s11PriceStringOMa(0);
    int v44 = swift_getEnumCaseMultiPayload();
    if (v44 == 2)
    {
      uint64_t v91 = sub_22EE7F6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v91 - 8) + 16))(a1, a2, v91);
      uint64_t v92 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)a1 + *(int *)(v92 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v92 + 20));
      goto LABEL_43;
    }
    if (v44 != 1)
    {
      uint64_t v95 = a2[1];
      *a1 = *a2;
      a1[1] = v95;
      swift_bridgeObjectRetain();
      goto LABEL_43;
    }
    uint64_t v45 = a2[1];
    *a1 = *a2;
    a1[1] = v45;
    uint64_t v46 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v47 = *(int *)(v46 + 20);
    uint64_t v48 = (char *)a1 + v47;
    uint64_t v49 = (char *)a2 + v47;
    uint64_t v50 = sub_22EE7F6E0();
    uint64_t v51 = *(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16);
    swift_bridgeObjectRetain();
    v51(v48, v49, v50);
    uint64_t v52 = *(int *)(v46 + 24);
    uint64_t v53 = (char *)a1 + v52;
    uint64_t v54 = (char *)a2 + v52;
    uint64_t v55 = _s22LocalizedPriceResourceV6FormatOMa(0);
    int v56 = swift_getEnumCaseMultiPayload();
    if (v56 == 3)
    {
      uint64_t v135 = *((void *)v54 + 1);
      *(void *)uint64_t v53 = *(void *)v54;
      *((void *)v53 + 1) = v135;
      char v231 = v51;
      uint64_t v136 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v137 = v136[5];
      char v222 = &v54[v137];
      uint64_t v229 = &v53[v137];
      uint64_t v138 = sub_22EE7F5D0();
      uint64_t v214 = *(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 16);
      swift_bridgeObjectRetain();
      v214(v229, v222, v138);
      v231(&v53[v136[6]], &v54[v136[6]], v50);
      *(void *)&v53[v136[7]] = *(void *)&v54[v136[7]];
    }
    else
    {
      if (v56 != 2)
      {
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
LABEL_43:
        swift_storeEnumTagMultiPayload();
        uint64_t v139 = (int *)type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard(0);
        uint64_t v140 = v139[5];
        uint64_t v141 = (void *)((char *)a1 + v140);
        unint64_t v142 = (void *)((char *)a2 + v140);
        uint64_t v143 = v142[1];
        *uint64_t v141 = *v142;
        v141[1] = v143;
        uint64_t v144 = v139[6];
        uint64_t v145 = (char *)a1 + v144;
        int v146 = (char *)a2 + v144;
        uint64_t v147 = sub_22EE7C220();
        uint64_t v148 = *(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 16);
        swift_bridgeObjectRetain();
        v148(v145, v146, v147);
        uint64_t v149 = v139[7];
        uint64_t v150 = (void *)((char *)a1 + v149);
        unsigned int v151 = (void *)((char *)a2 + v149);
        int v152 = swift_getEnumCaseMultiPayload();
        if (v152 == 2)
        {
          uint64_t v171 = sub_22EE7F6E0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v171 - 8) + 16))(v150, v151, v171);
          uint64_t v172 = _s20LocalizationResourceVMa();
          *(_OWORD *)((char *)v150 + *(int *)(v172 + 20)) = *(_OWORD *)((char *)v151 + *(int *)(v172 + 20));
        }
        else if (v152 == 1)
        {
          uint64_t v153 = v151[1];
          *uint64_t v150 = *v151;
          v150[1] = v153;
          uint64_t v154 = _s22LocalizedPriceResourceVMa(0);
          uint64_t v155 = *(int *)(v154 + 20);
          uint64_t v156 = (char *)v150 + v155;
          int v157 = (char *)v151 + v155;
          uint64_t v158 = sub_22EE7F6E0();
          uint64_t v159 = *(void (**)(char *, char *, uint64_t))(*(void *)(v158 - 8) + 16);
          swift_bridgeObjectRetain();
          uint64_t v223 = v158;
          v159(v156, v157, v158);
          unint64_t v160 = v159;
          uint64_t v161 = *(int *)(v154 + 24);
          unsigned int v162 = (char *)v150 + v161;
          uint64_t v163 = (char *)v151 + v161;
          uint64_t v164 = _s22LocalizedPriceResourceV6FormatOMa(0);
          int v165 = swift_getEnumCaseMultiPayload();
          if (v165 == 3)
          {
            uint64_t v188 = *((void *)v163 + 1);
            *(void *)unsigned int v162 = *(void *)v163;
            *((void *)v162 + 1) = v188;
            unsigned int v189 = (int *)_s15PricePropertiesVMa(0);
            uint64_t v190 = v189[5];
            uint64_t v191 = &v162[v190];
            uint64_t v216 = &v163[v190];
            uint64_t v192 = sub_22EE7F5D0();
            unint64_t v207 = *(void (**)(char *, char *, uint64_t))(*(void *)(v192 - 8) + 16);
            swift_bridgeObjectRetain();
            v207(v191, v216, v192);
            v160(&v162[v189[6]], &v163[v189[6]], v223);
            *(void *)&v162[v189[7]] = *(void *)&v163[v189[7]];
            swift_storeEnumTagMultiPayload();
          }
          else if (v165 == 2)
          {
            uint64_t v166 = *((void *)v163 + 1);
            *(void *)unsigned int v162 = *(void *)v163;
            *((void *)v162 + 1) = v166;
            char v167 = (int *)_s15PricePropertiesVMa(0);
            uint64_t v168 = v167[5];
            uint64_t v204 = &v163[v168];
            uint64_t v215 = &v162[v168];
            uint64_t v169 = sub_22EE7F5D0();
            char v197 = *(void (**)(char *, char *, uint64_t))(*(void *)(v169 - 8) + 16);
            swift_bridgeObjectRetain();
            v197(v215, v204, v169);
            v160(&v162[v167[6]], &v163[v167[6]], v158);
            *(void *)&v162[v167[7]] = *(void *)&v163[v167[7]];
            uint64_t v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
            v162[*(int *)(v170 + 48)] = v163[*(int *)(v170 + 48)];
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v162, v163, *(void *)(*(void *)(v164 - 8) + 64));
          }
        }
        else
        {
          uint64_t v173 = v151[1];
          *uint64_t v150 = *v151;
          v150[1] = v173;
          swift_bridgeObjectRetain();
        }
        goto LABEL_58;
      }
      uint64_t v57 = *((void *)v54 + 1);
      *(void *)uint64_t v53 = *(void *)v54;
      *((void *)v53 + 1) = v57;
      uint64_t v58 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v59 = v58[5];
      unsigned int v219 = &v54[v59];
      uint64_t v226 = &v53[v59];
      uint64_t v60 = v51;
      uint64_t v61 = sub_22EE7F5D0();
      uint64_t v210 = *(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16);
      swift_bridgeObjectRetain();
      v210(v226, v219, v61);
      v60(&v53[v58[6]], &v54[v58[6]], v50);
      *(void *)&v53[v58[7]] = *(void *)&v54[v58[7]];
      uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
      v53[*(int *)(v62 + 48)] = v54[*(int *)(v62 + 48)];
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_43;
  }
  _s11PriceStringOMa(0);
  int v4 = swift_getEnumCaseMultiPayload();
  if (v4 == 2)
  {
    uint64_t v63 = sub_22EE7F6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v63 - 8) + 16))(a1, a2, v63);
    uint64_t v64 = _s20LocalizationResourceVMa();
    *(_OWORD *)((char *)a1 + *(int *)(v64 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v64 + 20));
  }
  else if (v4 == 1)
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v7 = *(int *)(v6 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_22EE7F6E0();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    uint64_t v12 = *(int *)(v6 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = _s22LocalizedPriceResourceV6FormatOMa(0);
    int v16 = swift_getEnumCaseMultiPayload();
    if (v16 == 3)
    {
      uint64_t v96 = *((void *)v14 + 1);
      *(void *)uint64_t v13 = *(void *)v14;
      *((void *)v13 + 1) = v96;
      uint64_t v97 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v98 = v97[5];
      int v221 = &v14[v98];
      uint64_t v228 = &v13[v98];
      uint64_t v99 = v11;
      uint64_t v100 = sub_22EE7F5D0();
      int v212 = *(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 16);
      swift_bridgeObjectRetain();
      v212(v228, v221, v100);
      v99(&v13[v97[6]], &v14[v97[6]], v10);
      *(void *)&v13[v97[7]] = *(void *)&v14[v97[7]];
    }
    else
    {
      if (v16 != 2)
      {
        memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
        goto LABEL_33;
      }
      uint64_t v17 = *((void *)v14 + 1);
      *(void *)uint64_t v13 = *(void *)v14;
      *((void *)v13 + 1) = v17;
      uint64_t v18 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v19 = v18[5];
      unint64_t v217 = &v14[v19];
      uint64_t v224 = &v13[v19];
      uint64_t v20 = v11;
      uint64_t v21 = sub_22EE7F5D0();
      unsigned int v208 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
      swift_bridgeObjectRetain();
      v208(v224, v217, v21);
      v20(&v13[v18[6]], &v14[v18[6]], v10);
      *(void *)&v13[v18[7]] = *(void *)&v14[v18[7]];
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
      v13[*(int *)(v22 + 48)] = v14[*(int *)(v22 + 48)];
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    uint64_t v65 = a2[1];
    *a1 = *a2;
    a1[1] = v65;
    swift_bridgeObjectRetain();
  }
LABEL_33:
  swift_storeEnumTagMultiPayload();
  uint64_t v101 = (int *)type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard(0);
  uint64_t v102 = v101[5];
  uint64_t v103 = (void *)((char *)a1 + v102);
  unint64_t v104 = (void *)((char *)a2 + v102);
  uint64_t v105 = v104[1];
  *uint64_t v103 = *v104;
  v103[1] = v105;
  uint64_t v106 = v101[6];
  uint64_t v107 = (char *)a1 + v106;
  unsigned int v108 = (char *)a2 + v106;
  uint64_t v109 = sub_22EE7C220();
  uint64_t v110 = *(void (**)(char *, char *, uint64_t))(*(void *)(v109 - 8) + 16);
  swift_bridgeObjectRetain();
  v110(v107, v108, v109);
  uint64_t v111 = v101[7];
  uint64_t v112 = (void *)((char *)a1 + v111);
  uint64_t v113 = (void *)((char *)a2 + v111);
  int v114 = swift_getEnumCaseMultiPayload();
  if (v114 == 2)
  {
    uint64_t v132 = sub_22EE7F6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v132 - 8) + 16))(v112, v113, v132);
    uint64_t v133 = _s20LocalizationResourceVMa();
    *(_OWORD *)((char *)v112 + *(int *)(v133 + 20)) = *(_OWORD *)((char *)v113 + *(int *)(v133 + 20));
  }
  else if (v114 == 1)
  {
    uint64_t v115 = v113[1];
    *uint64_t v112 = *v113;
    v112[1] = v115;
    uint64_t v116 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v117 = *(int *)(v116 + 20);
    uint64_t v118 = (char *)v112 + v117;
    unsigned int v119 = (char *)v113 + v117;
    uint64_t v120 = sub_22EE7F6E0();
    uint64_t v121 = *(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 16);
    swift_bridgeObjectRetain();
    uint64_t v213 = v120;
    v121(v118, v119, v120);
    uint64_t v122 = *(int *)(v116 + 24);
    uint64_t v123 = (char *)v112 + v122;
    unsigned int v124 = (char *)v113 + v122;
    uint64_t v125 = _s22LocalizedPriceResourceV6FormatOMa(0);
    int v126 = swift_getEnumCaseMultiPayload();
    if (v126 == 3)
    {
      uint64_t v178 = *((void *)v124 + 1);
      *(void *)uint64_t v123 = *(void *)v124;
      *((void *)v123 + 1) = v178;
      unsigned int v179 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v180 = v179[5];
      uint64_t v181 = &v123[v180];
      unint64_t v206 = &v124[v180];
      uint64_t v182 = sub_22EE7F5D0();
      unint64_t v199 = *(void (**)(char *, char *, uint64_t))(*(void *)(v182 - 8) + 16);
      swift_bridgeObjectRetain();
      v199(v181, v206, v182);
      v121(&v123[v179[6]], &v124[v179[6]], v213);
      *(void *)&v123[v179[7]] = *(void *)&v124[v179[7]];
      swift_storeEnumTagMultiPayload();
    }
    else if (v126 == 2)
    {
      uint64_t v127 = *((void *)v124 + 1);
      *(void *)uint64_t v123 = *(void *)v124;
      *((void *)v123 + 1) = v127;
      uint64_t v128 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v129 = v128[5];
      unint64_t v196 = &v124[v129];
      uint64_t v203 = &v123[v129];
      uint64_t v130 = sub_22EE7F5D0();
      unint64_t v194 = *(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 16);
      swift_bridgeObjectRetain();
      v194(v203, v196, v130);
      v121(&v123[v128[6]], &v124[v128[6]], v120);
      *(void *)&v123[v128[7]] = *(void *)&v124[v128[7]];
      uint64_t v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
      v123[*(int *)(v131 + 48)] = v124[*(int *)(v131 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v123, v124, *(void *)(*(void *)(v125 - 8) + 64));
    }
  }
  else
  {
    uint64_t v134 = v113[1];
    *uint64_t v112 = *v113;
    v112[1] = v134;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v183 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268626C70) + 48);
  uint64_t v184 = (char *)a1 + v183;
  int v185 = (char *)a2 + v183;
  uint64_t v186 = sub_22EE7F6E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v186 - 8) + 16))(v184, v185, v186);
  uint64_t v187 = _s20LocalizationResourceVMa();
  *(_OWORD *)&v184[*(int *)(v187 + 20)] = *(_OWORD *)&v185[*(int *)(v187 + 20)];
LABEL_59:
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_22EDC1008(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_22EDC6154((uint64_t)a1, (void (*)(void))type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 2)
    {
      if (EnumCaseMultiPayload == 1)
      {
        _s11PriceStringOMa(0);
        int v5 = swift_getEnumCaseMultiPayload();
        if (v5 == 2)
        {
          uint64_t v55 = sub_22EE7F6E0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v55 - 8) + 16))(a1, a2, v55);
          uint64_t v56 = _s20LocalizationResourceVMa();
          *(_OWORD *)((char *)a1 + *(int *)(v56 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v56 + 20));
        }
        else if (v5 == 1)
        {
          *a1 = *a2;
          a1[1] = a2[1];
          uint64_t v6 = _s22LocalizedPriceResourceVMa(0);
          uint64_t v7 = *(int *)(v6 + 20);
          uint64_t v8 = (char *)a1 + v7;
          uint64_t v9 = (char *)a2 + v7;
          uint64_t v10 = sub_22EE7F6E0();
          uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
          swift_bridgeObjectRetain();
          v11(v8, v9, v10);
          uint64_t v12 = *(int *)(v6 + 24);
          uint64_t v13 = (char *)a1 + v12;
          uint64_t v14 = (char *)a2 + v12;
          uint64_t v15 = _s22LocalizedPriceResourceV6FormatOMa(0);
          int v16 = swift_getEnumCaseMultiPayload();
          if (v16 == 3)
          {
            *(void *)uint64_t v13 = *(void *)v14;
            *((void *)v13 + 1) = *((void *)v14 + 1);
            uint64_t v83 = (int *)_s15PricePropertiesVMa(0);
            uint64_t v84 = v83[5];
            uint64_t v192 = &v14[v84];
            unint64_t v201 = &v13[v84];
            unint64_t v207 = v11;
            uint64_t v85 = sub_22EE7F5D0();
            uint64_t v182 = *(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 16);
            swift_bridgeObjectRetain();
            v182(v201, v192, v85);
            v207(&v13[v83[6]], &v14[v83[6]], v10);
            *(void *)&v13[v83[7]] = *(void *)&v14[v83[7]];
          }
          else
          {
            if (v16 != 2)
            {
              memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
              goto LABEL_34;
            }
            *(void *)uint64_t v13 = *(void *)v14;
            *((void *)v13 + 1) = *((void *)v14 + 1);
            uint64_t v17 = (int *)_s15PricePropertiesVMa(0);
            uint64_t v18 = v17[5];
            uint64_t v187 = &v14[v18];
            char v197 = &v13[v18];
            uint64_t v204 = v11;
            uint64_t v19 = sub_22EE7F5D0();
            uint64_t v178 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
            swift_bridgeObjectRetain();
            v178(v197, v187, v19);
            v204(&v13[v17[6]], &v14[v17[6]], v10);
            *(void *)&v13[v17[7]] = *(void *)&v14[v17[7]];
            uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
            v13[*(int *)(v20 + 48)] = v14[*(int *)(v20 + 48)];
          }
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          *a1 = *a2;
          a1[1] = a2[1];
          swift_bridgeObjectRetain();
        }
LABEL_34:
        swift_storeEnumTagMultiPayload();
        uint64_t v86 = (int *)type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard(0);
        uint64_t v87 = v86[5];
        uint64_t v88 = (void *)((char *)a1 + v87);
        uint64_t v89 = (void *)((char *)a2 + v87);
        *uint64_t v88 = *v89;
        v88[1] = v89[1];
        uint64_t v90 = v86[6];
        uint64_t v91 = (char *)a1 + v90;
        uint64_t v92 = (char *)a2 + v90;
        uint64_t v93 = sub_22EE7C220();
        uint64_t v94 = *(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 16);
        swift_bridgeObjectRetain();
        v94(v91, v92, v93);
        uint64_t v95 = v86[7];
        uint64_t v96 = (void *)((char *)a1 + v95);
        uint64_t v97 = (void *)((char *)a2 + v95);
        int v98 = swift_getEnumCaseMultiPayload();
        if (v98 == 2)
        {
          uint64_t v113 = sub_22EE7F6E0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v113 - 8) + 16))(v96, v97, v113);
          uint64_t v114 = _s20LocalizationResourceVMa();
          *(_OWORD *)((char *)v96 + *(int *)(v114 + 20)) = *(_OWORD *)((char *)v97 + *(int *)(v114 + 20));
        }
        else if (v98 == 1)
        {
          void *v96 = *v97;
          v96[1] = v97[1];
          uint64_t v99 = _s22LocalizedPriceResourceVMa(0);
          uint64_t v100 = *(int *)(v99 + 20);
          uint64_t v101 = (char *)v96 + v100;
          uint64_t v202 = (char *)v97 + v100;
          uint64_t v102 = sub_22EE7F6E0();
          uint64_t v103 = *(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 16);
          swift_bridgeObjectRetain();
          unint64_t v193 = v103;
          v103(v101, v202, v102);
          uint64_t v104 = *(int *)(v99 + 24);
          uint64_t v105 = (char *)v96 + v104;
          uint64_t v106 = (char *)v97 + v104;
          uint64_t v107 = _s22LocalizedPriceResourceV6FormatOMa(0);
          int v108 = swift_getEnumCaseMultiPayload();
          if (v108 == 3)
          {
            *(void *)uint64_t v105 = *(void *)v106;
            *((void *)v105 + 1) = *((void *)v106 + 1);
            unsigned int v151 = (int *)_s15PricePropertiesVMa(0);
            uint64_t v152 = v151[5];
            uint64_t v153 = &v105[v152];
            uint64_t v176 = &v106[v152];
            uint64_t v154 = sub_22EE7F5D0();
            uint64_t v171 = *(void (**)(char *, char *, uint64_t))(*(void *)(v154 - 8) + 16);
            swift_bridgeObjectRetain();
            v171(v153, v176, v154);
            v193(&v105[v151[6]], &v106[v151[6]], v102);
            *(void *)&v105[v151[7]] = *(void *)&v106[v151[7]];
            swift_storeEnumTagMultiPayload();
          }
          else if (v108 == 2)
          {
            *(void *)uint64_t v105 = *(void *)v106;
            *((void *)v105 + 1) = *((void *)v106 + 1);
            uint64_t v109 = (int *)_s15PricePropertiesVMa(0);
            uint64_t v110 = v109[5];
            uint64_t v168 = &v106[v110];
            uint64_t v174 = &v105[v110];
            uint64_t v111 = sub_22EE7F5D0();
            uint64_t v166 = *(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 16);
            swift_bridgeObjectRetain();
            v166(v174, v168, v111);
            v103(&v105[v109[6]], &v106[v109[6]], v102);
            *(void *)&v105[v109[7]] = *(void *)&v106[v109[7]];
            uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
            v105[*(int *)(v112 + 48)] = v106[*(int *)(v112 + 48)];
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v105, v106, *(void *)(*(void *)(v107 - 8) + 64));
          }
        }
        else
        {
          void *v96 = *v97;
          v96[1] = v97[1];
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        uint64_t v155 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268626C70) + 48);
        uint64_t v156 = (char *)a1 + v155;
        int v157 = (char *)a2 + v155;
        uint64_t v158 = sub_22EE7F6E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v158 - 8) + 16))(v156, v157, v158);
        uint64_t v159 = _s20LocalizationResourceVMa();
        *(_OWORD *)&v156[*(int *)(v159 + 20)] = *(_OWORD *)&v157[*(int *)(v159 + 20)];
        goto LABEL_59;
      }
      _s11PriceStringOMa(0);
      int v39 = swift_getEnumCaseMultiPayload();
      if (v39 == 2)
      {
        uint64_t v80 = sub_22EE7F6E0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v80 - 8) + 16))(a1, a2, v80);
        uint64_t v81 = _s20LocalizationResourceVMa();
        *(_OWORD *)((char *)a1 + *(int *)(v81 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v81 + 20));
        goto LABEL_44;
      }
      if (v39 != 1)
      {
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_44;
      }
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t v40 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v41 = *(int *)(v40 + 20);
      uint64_t v42 = (char *)a1 + v41;
      uint64_t v43 = (char *)a2 + v41;
      uint64_t v44 = sub_22EE7F6E0();
      uint64_t v45 = *(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16);
      swift_bridgeObjectRetain();
      v45(v42, v43, v44);
      uint64_t v46 = *(int *)(v40 + 24);
      uint64_t v47 = (char *)a1 + v46;
      uint64_t v48 = (char *)a2 + v46;
      uint64_t v49 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v50 = swift_getEnumCaseMultiPayload();
      if (v50 == 3)
      {
        *(void *)uint64_t v47 = *(void *)v48;
        *((void *)v47 + 1) = *((void *)v48 + 1);
        uint64_t v210 = v45;
        uint64_t v115 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v116 = v115[5];
        unint64_t v194 = &v48[v116];
        uint64_t v203 = &v47[v116];
        uint64_t v117 = sub_22EE7F5D0();
        uint64_t v183 = *(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 16);
        swift_bridgeObjectRetain();
        v183(v203, v194, v117);
        v210(&v47[v115[6]], &v48[v115[6]], v44);
        *(void *)&v47[v115[7]] = *(void *)&v48[v115[7]];
      }
      else
      {
        if (v50 != 2)
        {
          memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
LABEL_44:
          swift_storeEnumTagMultiPayload();
          uint64_t v118 = (int *)type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard(0);
          uint64_t v119 = v118[5];
          uint64_t v120 = (void *)((char *)a1 + v119);
          uint64_t v121 = (void *)((char *)a2 + v119);
          *uint64_t v120 = *v121;
          v120[1] = v121[1];
          uint64_t v122 = v118[6];
          uint64_t v123 = (char *)a1 + v122;
          unsigned int v124 = (char *)a2 + v122;
          uint64_t v125 = sub_22EE7C220();
          int v126 = *(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 16);
          swift_bridgeObjectRetain();
          v126(v123, v124, v125);
          uint64_t v127 = v118[7];
          uint64_t v128 = (void *)((char *)a1 + v127);
          uint64_t v129 = (void *)((char *)a2 + v127);
          int v130 = swift_getEnumCaseMultiPayload();
          if (v130 == 2)
          {
            uint64_t v146 = sub_22EE7F6E0();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v146 - 8) + 16))(v128, v129, v146);
            uint64_t v147 = _s20LocalizationResourceVMa();
            *(_OWORD *)((char *)v128 + *(int *)(v147 + 20)) = *(_OWORD *)((char *)v129 + *(int *)(v147 + 20));
          }
          else if (v130 == 1)
          {
            *uint64_t v128 = *v129;
            v128[1] = v129[1];
            uint64_t v131 = _s22LocalizedPriceResourceVMa(0);
            uint64_t v132 = *(int *)(v131 + 20);
            uint64_t v133 = (char *)v128 + v132;
            uint64_t v134 = (char *)v129 + v132;
            uint64_t v135 = sub_22EE7F6E0();
            uint64_t v136 = *(void (**)(char *, char *, uint64_t))(*(void *)(v135 - 8) + 16);
            swift_bridgeObjectRetain();
            uint64_t v195 = v135;
            v136(v133, v134, v135);
            uint64_t v137 = *(int *)(v131 + 24);
            uint64_t v138 = (char *)v128 + v137;
            uint64_t v139 = (char *)v129 + v137;
            uint64_t v140 = _s22LocalizedPriceResourceV6FormatOMa(0);
            int v141 = swift_getEnumCaseMultiPayload();
            if (v141 == 3)
            {
              *(void *)uint64_t v138 = *(void *)v139;
              *((void *)v138 + 1) = *((void *)v139 + 1);
              unint64_t v160 = (int *)_s15PricePropertiesVMa(0);
              uint64_t v161 = v160[5];
              unsigned int v162 = &v138[v161];
              uint64_t v186 = &v139[v161];
              uint64_t v163 = sub_22EE7F5D0();
              uint64_t v177 = *(void (**)(char *, char *, uint64_t))(*(void *)(v163 - 8) + 16);
              swift_bridgeObjectRetain();
              v177(v162, v186, v163);
              v136(&v138[v160[6]], &v139[v160[6]], v195);
              *(void *)&v138[v160[7]] = *(void *)&v139[v160[7]];
              swift_storeEnumTagMultiPayload();
            }
            else if (v141 == 2)
            {
              *(void *)uint64_t v138 = *(void *)v139;
              *((void *)v138 + 1) = *((void *)v139 + 1);
              unint64_t v142 = (int *)_s15PricePropertiesVMa(0);
              uint64_t v143 = v142[5];
              uint64_t v175 = &v139[v143];
              uint64_t v184 = &v138[v143];
              uint64_t v144 = sub_22EE7F5D0();
              uint64_t v169 = *(void (**)(char *, char *, uint64_t))(*(void *)(v144 - 8) + 16);
              swift_bridgeObjectRetain();
              v169(v184, v175, v144);
              v136(&v138[v142[6]], &v139[v142[6]], v135);
              *(void *)&v138[v142[7]] = *(void *)&v139[v142[7]];
              uint64_t v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
              v138[*(int *)(v145 + 48)] = v139[*(int *)(v145 + 48)];
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v138, v139, *(void *)(*(void *)(v140 - 8) + 64));
            }
          }
          else
          {
            *uint64_t v128 = *v129;
            v128[1] = v129[1];
            swift_bridgeObjectRetain();
          }
LABEL_58:
          swift_storeEnumTagMultiPayload();
LABEL_59:
          swift_storeEnumTagMultiPayload();
          return a1;
        }
        *(void *)uint64_t v47 = *(void *)v48;
        *((void *)v47 + 1) = *((void *)v48 + 1);
        uint64_t v51 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v52 = v51[5];
        unsigned int v189 = &v48[v52];
        unint64_t v199 = &v47[v52];
        unsigned int v209 = v45;
        uint64_t v53 = sub_22EE7F5D0();
        uint64_t v180 = *(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16);
        swift_bridgeObjectRetain();
        v180(v199, v189, v53);
        v209(&v47[v51[6]], &v48[v51[6]], v44);
        *(void *)&v47[v51[7]] = *(void *)&v48[v51[7]];
        uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v47[*(int *)(v54 + 48)] = v48[*(int *)(v54 + 48)];
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_44;
    }
    *a1 = *a2;
    a1[1] = a2[1];
    uint64_t v21 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v22 = *(int *)(v21 + 20);
    uint64_t v23 = (char *)a1 + v22;
    uint64_t v24 = (char *)a2 + v22;
    uint64_t v25 = sub_22EE7F6E0();
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
    swift_bridgeObjectRetain();
    v26(v23, v24, v25);
    uint64_t v205 = v21;
    uint64_t v27 = *(int *)(v21 + 24);
    uint64_t v28 = (char *)a1 + v27;
    int v29 = (char *)a2 + v27;
    uint64_t v30 = _s22LocalizedPriceResourceV6FormatOMa(0);
    int v31 = swift_getEnumCaseMultiPayload();
    if (v31 == 3)
    {
      *(void *)uint64_t v28 = *(void *)v29;
      *((void *)v28 + 1) = *((void *)v29 + 1);
      uint64_t v57 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v58 = v57[5];
      uint64_t v190 = &v29[v58];
      unint64_t v200 = &v28[v58];
      uint64_t v181 = v30;
      uint64_t v59 = v25;
      uint64_t v60 = sub_22EE7F5D0();
      uint64_t v173 = *(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v61 = v60;
      uint64_t v25 = v59;
      uint64_t v30 = v181;
      v173(v200, v190, v61);
      v26(&v28[v57[6]], &v29[v57[6]], v25);
      *(void *)&v28[v57[7]] = *(void *)&v29[v57[7]];
    }
    else
    {
      if (v31 != 2)
      {
        memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
LABEL_22:
        uint64_t v62 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268626C78) + 48);
        uint64_t v63 = (char *)a1 + v62;
        uint64_t v64 = (char *)a2 + v62;
        _s11PriceStringOMa(0);
        int v65 = swift_getEnumCaseMultiPayload();
        if (v65 == 2)
        {
          v26(v63, v64, v25);
          uint64_t v82 = _s20LocalizationResourceVMa();
          *(_OWORD *)&v63[*(int *)(v82 + 20)] = *(_OWORD *)&v64[*(int *)(v82 + 20)];
        }
        else if (v65 == 1)
        {
          *(void *)uint64_t v63 = *(void *)v64;
          *((void *)v63 + 1) = *((void *)v64 + 1);
          uint64_t v66 = *(int *)(v205 + 20);
          uint64_t v67 = &v63[v66];
          uint64_t v68 = v26;
          uint64_t v69 = &v64[v66];
          swift_bridgeObjectRetain();
          uint64_t v70 = v69;
          uint64_t v71 = v68;
          v68(v67, v70, v25);
          uint64_t v72 = *(int *)(v205 + 24);
          uint64_t v73 = &v63[v72];
          uint64_t v74 = &v64[v72];
          int v75 = swift_getEnumCaseMultiPayload();
          if (v75 == 3)
          {
            *(void *)uint64_t v73 = *(void *)v74;
            *((void *)v73 + 1) = *((void *)v74 + 1);
            unint64_t v196 = v71;
            uint64_t v148 = (int *)_s15PricePropertiesVMa(0);
            uint64_t v149 = v148[5];
            unsigned int v208 = &v73[v149];
            int v185 = &v74[v149];
            uint64_t v150 = sub_22EE7F5D0();
            uint64_t v170 = *(void (**)(char *, char *, uint64_t))(*(void *)(v150 - 8) + 16);
            swift_bridgeObjectRetain();
            v170(v208, v185, v150);
            v196(&v73[v148[6]], &v74[v148[6]], v25);
            *(void *)&v73[v148[7]] = *(void *)&v74[v148[7]];
            swift_storeEnumTagMultiPayload();
          }
          else if (v75 == 2)
          {
            *(void *)uint64_t v73 = *(void *)v74;
            *((void *)v73 + 1) = *((void *)v74 + 1);
            uint64_t v191 = v71;
            int v76 = (int *)_s15PricePropertiesVMa(0);
            uint64_t v77 = v76[5];
            unint64_t v206 = &v73[v77];
            char v167 = &v74[v77];
            uint64_t v78 = sub_22EE7F5D0();
            int v165 = *(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 16);
            swift_bridgeObjectRetain();
            v165(v206, v167, v78);
            v191(&v73[v76[6]], &v74[v76[6]], v25);
            *(void *)&v73[v76[7]] = *(void *)&v74[v76[7]];
            uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
            v73[*(int *)(v79 + 48)] = v74[*(int *)(v79 + 48)];
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v73, v74, *(void *)(*(void *)(v30 - 8) + 64));
          }
        }
        else
        {
          *(void *)uint64_t v63 = *(void *)v64;
          *((void *)v63 + 1) = *((void *)v64 + 1);
          swift_bridgeObjectRetain();
        }
        goto LABEL_58;
      }
      *(void *)uint64_t v28 = *(void *)v29;
      *((void *)v28 + 1) = *((void *)v29 + 1);
      uint64_t v32 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v33 = v32[5];
      uint64_t v198 = v25;
      int v34 = &v28[v33];
      unsigned int v179 = &v29[v33];
      uint64_t v188 = v26;
      uint64_t v35 = sub_22EE7F5D0();
      uint64_t v172 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v36 = v34;
      uint64_t v37 = v35;
      uint64_t v26 = v188;
      uint64_t v25 = v198;
      v172(v36, v179, v37);
      v188(&v28[v32[6]], &v29[v32[6]], v198);
      *(void *)&v28[v32[7]] = *(void *)&v29[v32[7]];
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
      v28[*(int *)(v38 + 48)] = v29[*(int *)(v38 + 48)];
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_22;
  }
  return a1;
}

_OWORD *sub_22EDC23DC(_OWORD *a1, _OWORD *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 2)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = _s11PriceStringOMa(0);
      int v6 = swift_getEnumCaseMultiPayload();
      if (v6 == 2)
      {
        uint64_t v57 = sub_22EE7F6E0();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v57 - 8) + 32))(a1, a2, v57);
        uint64_t v58 = _s20LocalizationResourceVMa();
        *(_OWORD *)((char *)a1 + *(int *)(v58 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v58 + 20));
      }
      else
      {
        if (v6 != 1)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
          goto LABEL_34;
        }
        *a1 = *a2;
        uint64_t v7 = _s22LocalizedPriceResourceVMa(0);
        uint64_t v8 = *(int *)(v7 + 20);
        uint64_t v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = sub_22EE7F6E0();
        uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32);
        v12(v9, v10, v11);
        uint64_t v13 = *(int *)(v7 + 24);
        uint64_t v14 = (char *)a1 + v13;
        uint64_t v15 = (char *)a2 + v13;
        uint64_t v16 = _s22LocalizedPriceResourceV6FormatOMa(0);
        int v17 = swift_getEnumCaseMultiPayload();
        if (v17 == 3)
        {
          *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
          uint64_t v86 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v87 = v86[5];
          uint64_t v166 = &v15[v87];
          uint64_t v175 = &v14[v87];
          uint64_t v88 = sub_22EE7F5D0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 32))(v175, v166, v88);
          v12(&v14[v86[6]], &v15[v86[6]], v11);
          *(void *)&v14[v86[7]] = *(void *)&v15[v86[7]];
        }
        else
        {
          if (v17 != 2)
          {
            memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
            goto LABEL_33;
          }
          *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
          uint64_t v18 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v19 = v18[5];
          uint64_t v163 = &v15[v19];
          uint64_t v172 = &v14[v19];
          uint64_t v20 = sub_22EE7F5D0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v172, v163, v20);
          v12(&v14[v18[6]], &v15[v18[6]], v11);
          *(void *)&v14[v18[7]] = *(void *)&v15[v18[7]];
          uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
          v14[*(int *)(v21 + 48)] = v15[*(int *)(v21 + 48)];
        }
        swift_storeEnumTagMultiPayload();
      }
LABEL_33:
      swift_storeEnumTagMultiPayload();
LABEL_34:
      uint64_t v89 = (int *)type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard(0);
      *(_OWORD *)((char *)a1 + v89[5]) = *(_OWORD *)((char *)a2 + v89[5]);
      uint64_t v90 = v89[6];
      uint64_t v91 = (char *)a1 + v90;
      uint64_t v92 = (char *)a2 + v90;
      uint64_t v93 = sub_22EE7C220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 32))(v91, v92, v93);
      uint64_t v94 = v89[7];
      uint64_t v95 = (_OWORD *)((char *)a1 + v94);
      uint64_t v96 = (_OWORD *)((char *)a2 + v94);
      int v97 = swift_getEnumCaseMultiPayload();
      if (v97 == 2)
      {
        uint64_t v113 = sub_22EE7F6E0();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v113 - 8) + 32))(v95, v96, v113);
        uint64_t v114 = _s20LocalizationResourceVMa();
        *(_OWORD *)((char *)v95 + *(int *)(v114 + 20)) = *(_OWORD *)((char *)v96 + *(int *)(v114 + 20));
      }
      else
      {
        if (v97 != 1)
        {
          memcpy(v95, v96, *(void *)(*(void *)(v5 - 8) + 64));
LABEL_60:
          uint64_t v152 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268626C70) + 48);
          uint64_t v153 = (char *)a1 + v152;
          uint64_t v154 = (char *)a2 + v152;
          uint64_t v155 = sub_22EE7F6E0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 32))(v153, v154, v155);
          uint64_t v156 = _s20LocalizationResourceVMa();
          *(_OWORD *)&v153[*(int *)(v156 + 20)] = *(_OWORD *)&v154[*(int *)(v156 + 20)];
          goto LABEL_64;
        }
        *uint64_t v95 = *v96;
        uint64_t v98 = _s22LocalizedPriceResourceVMa(0);
        uint64_t v99 = *(int *)(v98 + 20);
        uint64_t v100 = (char *)v95 + v99;
        uint64_t v101 = (char *)v96 + v99;
        uint64_t v102 = sub_22EE7F6E0();
        uint64_t v103 = (void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 32);
        uint64_t v176 = *v103;
        (*v103)(v100, v101, v102);
        uint64_t v104 = *(int *)(v98 + 24);
        uint64_t v105 = (char *)v95 + v104;
        uint64_t v106 = (char *)v96 + v104;
        uint64_t v107 = _s22LocalizedPriceResourceV6FormatOMa(0);
        int v108 = swift_getEnumCaseMultiPayload();
        if (v108 == 3)
        {
          *(_OWORD *)uint64_t v105 = *(_OWORD *)v106;
          uint64_t v149 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v150 = v149[5];
          unsigned int v162 = &v106[v150];
          uint64_t v170 = &v105[v150];
          uint64_t v151 = sub_22EE7F5D0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v151 - 8) + 32))(v170, v162, v151);
          v176(&v105[v149[6]], &v106[v149[6]], v102);
          *(void *)&v105[v149[7]] = *(void *)&v106[v149[7]];
        }
        else
        {
          if (v108 != 2)
          {
            memcpy(v105, v106, *(void *)(*(void *)(v107 - 8) + 64));
            goto LABEL_59;
          }
          *(_OWORD *)uint64_t v105 = *(_OWORD *)v106;
          uint64_t v109 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v110 = v109[5];
          uint64_t v161 = &v106[v110];
          char v167 = &v105[v110];
          uint64_t v111 = sub_22EE7F5D0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 32))(v167, v161, v111);
          v176(&v105[v109[6]], &v106[v109[6]], v102);
          *(void *)&v105[v109[7]] = *(void *)&v106[v109[7]];
          uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
          v105[*(int *)(v112 + 48)] = v106[*(int *)(v112 + 48)];
        }
        swift_storeEnumTagMultiPayload();
      }
LABEL_59:
      swift_storeEnumTagMultiPayload();
      goto LABEL_60;
    }
    uint64_t v40 = _s11PriceStringOMa(0);
    int v41 = swift_getEnumCaseMultiPayload();
    if (v41 == 2)
    {
      uint64_t v80 = sub_22EE7F6E0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v80 - 8) + 32))(a1, a2, v80);
      uint64_t v81 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)a1 + *(int *)(v81 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v81 + 20));
    }
    else
    {
      if (v41 != 1)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v40 - 8) + 64));
LABEL_45:
        uint64_t v118 = (int *)type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard(0);
        *(_OWORD *)((char *)a1 + v118[5]) = *(_OWORD *)((char *)a2 + v118[5]);
        uint64_t v119 = v118[6];
        uint64_t v120 = (char *)a1 + v119;
        uint64_t v121 = (char *)a2 + v119;
        uint64_t v122 = sub_22EE7C220();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v122 - 8) + 32))(v120, v121, v122);
        uint64_t v123 = v118[7];
        unsigned int v124 = (char *)a1 + v123;
        uint64_t v125 = (char *)a2 + v123;
        int v126 = swift_getEnumCaseMultiPayload();
        if (v126 != 2)
        {
          if (v126 == 1)
          {
            *(_OWORD *)unsigned int v124 = *(_OWORD *)v125;
            uint64_t v127 = _s22LocalizedPriceResourceVMa(0);
            uint64_t v128 = *(int *)(v127 + 20);
            uint64_t v129 = &v124[v128];
            int v130 = &v125[v128];
            uint64_t v131 = sub_22EE7F6E0();
            uint64_t v132 = *(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 32);
            v132(v129, v130, v131);
            uint64_t v133 = *(int *)(v127 + 24);
            uint64_t v134 = &v124[v133];
            uint64_t v135 = &v125[v133];
            uint64_t v136 = _s22LocalizedPriceResourceV6FormatOMa(0);
            int v137 = swift_getEnumCaseMultiPayload();
            if (v137 == 3)
            {
              *(_OWORD *)uint64_t v134 = *(_OWORD *)v135;
              int v157 = (int *)_s15PricePropertiesVMa(0);
              uint64_t v158 = v157[5];
              uint64_t v171 = &v135[v158];
              unsigned int v179 = &v134[v158];
              uint64_t v159 = sub_22EE7F5D0();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v159 - 8) + 32))(v179, v171, v159);
              v132(&v134[v157[6]], &v135[v157[6]], v131);
              *(void *)&v134[v157[7]] = *(void *)&v135[v157[7]];
            }
            else
            {
              if (v137 != 2)
              {
                memcpy(v134, v135, *(void *)(*(void *)(v136 - 8) + 64));
                goto LABEL_63;
              }
              *(_OWORD *)uint64_t v134 = *(_OWORD *)v135;
              uint64_t v138 = (int *)_s15PricePropertiesVMa(0);
              uint64_t v139 = v138[5];
              uint64_t v169 = &v135[v139];
              uint64_t v178 = &v134[v139];
              uint64_t v140 = sub_22EE7F5D0();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 32))(v178, v169, v140);
              v132(&v134[v138[6]], &v135[v138[6]], v131);
              *(void *)&v134[v138[7]] = *(void *)&v135[v138[7]];
              uint64_t v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
              v134[*(int *)(v141 + 48)] = v135[*(int *)(v141 + 48)];
            }
LABEL_54:
            swift_storeEnumTagMultiPayload();
            goto LABEL_63;
          }
          size_t v83 = *(void *)(*(void *)(v40 - 8) + 64);
          uint64_t v84 = v124;
          uint64_t v85 = v125;
          goto LABEL_52;
        }
        uint64_t v142 = sub_22EE7F6E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 32))(v124, v125, v142);
        uint64_t v143 = _s20LocalizationResourceVMa();
        *(_OWORD *)&v124[*(int *)(v143 + 20)] = *(_OWORD *)&v125[*(int *)(v143 + 20)];
LABEL_63:
        swift_storeEnumTagMultiPayload();
        goto LABEL_64;
      }
      *a1 = *a2;
      uint64_t v42 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v43 = *(int *)(v42 + 20);
      uint64_t v44 = (char *)a1 + v43;
      uint64_t v45 = (char *)a2 + v43;
      uint64_t v46 = sub_22EE7F6E0();
      uint64_t v47 = *(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32);
      v47(v44, v45, v46);
      uint64_t v48 = *(int *)(v42 + 24);
      uint64_t v49 = (char *)a1 + v48;
      int v50 = (char *)a2 + v48;
      uint64_t v51 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v52 = swift_getEnumCaseMultiPayload();
      if (v52 == 3)
      {
        *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
        uint64_t v115 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v116 = v115[5];
        uint64_t v168 = &v50[v116];
        uint64_t v177 = &v49[v116];
        uint64_t v117 = sub_22EE7F5D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 32))(v177, v168, v117);
        v47(&v49[v115[6]], &v50[v115[6]], v46);
        *(void *)&v49[v115[7]] = *(void *)&v50[v115[7]];
      }
      else
      {
        if (v52 != 2)
        {
          memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
          goto LABEL_44;
        }
        *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
        uint64_t v53 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v54 = v53[5];
        int v165 = &v50[v54];
        uint64_t v173 = &v49[v54];
        uint64_t v55 = sub_22EE7F5D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v173, v165, v55);
        v47(&v49[v53[6]], &v50[v53[6]], v46);
        *(void *)&v49[v53[7]] = *(void *)&v50[v53[7]];
        uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v49[*(int *)(v56 + 48)] = v50[*(int *)(v56 + 48)];
      }
      swift_storeEnumTagMultiPayload();
    }
LABEL_44:
    swift_storeEnumTagMultiPayload();
    goto LABEL_45;
  }
  *a1 = *a2;
  uint64_t v22 = _s22LocalizedPriceResourceVMa(0);
  uint64_t v23 = *(int *)(v22 + 20);
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  uint64_t v26 = sub_22EE7F6E0();
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32);
  v27(v24, v25, v26);
  uint64_t v164 = v22;
  uint64_t v28 = *(int *)(v22 + 24);
  int v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = _s22LocalizedPriceResourceV6FormatOMa(0);
  int v32 = swift_getEnumCaseMultiPayload();
  if (v32 == 3)
  {
    *(_OWORD *)int v29 = *(_OWORD *)v30;
    uint64_t v181 = v31;
    uint64_t v59 = (int *)_s15PricePropertiesVMa(0);
    uint64_t v60 = v59[5];
    uint64_t v61 = &v29[v60];
    uint64_t v62 = &v30[v60];
    uint64_t v63 = sub_22EE7F5D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32))(v61, v62, v63);
    v27(&v29[v59[6]], &v30[v59[6]], v26);
    uint64_t v64 = v59[7];
    uint64_t v31 = v181;
    *(void *)&v29[v64] = *(void *)&v30[v64];
    goto LABEL_19;
  }
  if (v32 == 2)
  {
    *(_OWORD *)int v29 = *(_OWORD *)v30;
    uint64_t v180 = v31;
    uint64_t v33 = (int *)_s15PricePropertiesVMa(0);
    uint64_t v34 = v33[5];
    uint64_t v35 = &v29[v34];
    uint64_t v36 = &v30[v34];
    uint64_t v37 = sub_22EE7F5D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
    v27(&v29[v33[6]], &v30[v33[6]], v26);
    uint64_t v38 = v33[7];
    uint64_t v31 = v180;
    *(void *)&v29[v38] = *(void *)&v30[v38];
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
    v29[*(int *)(v39 + 48)] = v30[*(int *)(v39 + 48)];
LABEL_19:
    swift_storeEnumTagMultiPayload();
    goto LABEL_21;
  }
  memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
LABEL_21:
  uint64_t v65 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268626C78) + 48);
  uint64_t v66 = (char *)a1 + v65;
  uint64_t v67 = (char *)a2 + v65;
  uint64_t v68 = _s11PriceStringOMa(0);
  int v69 = swift_getEnumCaseMultiPayload();
  if (v69 == 2)
  {
    v27(v66, v67, v26);
    uint64_t v82 = _s20LocalizationResourceVMa();
    *(_OWORD *)&v66[*(int *)(v82 + 20)] = *(_OWORD *)&v67[*(int *)(v82 + 20)];
    goto LABEL_63;
  }
  if (v69 == 1)
  {
    *(_OWORD *)uint64_t v66 = *(_OWORD *)v67;
    uint64_t v174 = v27;
    v27(&v66[*(int *)(v164 + 20)], &v67[*(int *)(v164 + 20)], v26);
    uint64_t v70 = *(int *)(v164 + 24);
    uint64_t v71 = &v66[v70];
    uint64_t v72 = &v67[v70];
    int v73 = swift_getEnumCaseMultiPayload();
    if (v73 == 3)
    {
      *(_OWORD *)uint64_t v71 = *(_OWORD *)v72;
      uint64_t v144 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v145 = v144[5];
      uint64_t v146 = &v71[v145];
      uint64_t v147 = &v72[v145];
      uint64_t v148 = sub_22EE7F5D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 32))(v146, v147, v148);
      v174(&v71[v144[6]], &v72[v144[6]], v26);
      *(void *)&v71[v144[7]] = *(void *)&v72[v144[7]];
    }
    else
    {
      if (v73 != 2)
      {
        memcpy(v71, v72, *(void *)(*(void *)(v31 - 8) + 64));
        goto LABEL_63;
      }
      *(_OWORD *)uint64_t v71 = *(_OWORD *)v72;
      uint64_t v74 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v75 = v74[5];
      int v76 = &v71[v75];
      uint64_t v77 = &v72[v75];
      uint64_t v78 = sub_22EE7F5D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 32))(v76, v77, v78);
      v174(&v71[v74[6]], &v72[v74[6]], v26);
      *(void *)&v71[v74[7]] = *(void *)&v72[v74[7]];
      uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
      v71[*(int *)(v79 + 48)] = v72[*(int *)(v79 + 48)];
    }
    goto LABEL_54;
  }
  size_t v83 = *(void *)(*(void *)(v68 - 8) + 64);
  uint64_t v84 = v66;
  uint64_t v85 = v67;
LABEL_52:
  memcpy(v84, v85, v83);
LABEL_64:
  swift_storeEnumTagMultiPayload();
  return a1;
}

_OWORD *sub_22EDC35C0(_OWORD *a1, _OWORD *a2)
{
  if (a1 != a2)
  {
    sub_22EDC6154((uint64_t)a1, (void (*)(void))type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 2)
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v5 = _s11PriceStringOMa(0);
        int v6 = swift_getEnumCaseMultiPayload();
        if (v6 == 2)
        {
          uint64_t v57 = sub_22EE7F6E0();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v57 - 8) + 32))(a1, a2, v57);
          uint64_t v58 = _s20LocalizationResourceVMa();
          *(_OWORD *)((char *)a1 + *(int *)(v58 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v58 + 20));
        }
        else
        {
          if (v6 != 1)
          {
            memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
            goto LABEL_35;
          }
          *a1 = *a2;
          uint64_t v7 = _s22LocalizedPriceResourceVMa(0);
          uint64_t v8 = *(int *)(v7 + 20);
          uint64_t v9 = (char *)a1 + v8;
          uint64_t v10 = (char *)a2 + v8;
          uint64_t v11 = sub_22EE7F6E0();
          uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32);
          v12(v9, v10, v11);
          uint64_t v13 = *(int *)(v7 + 24);
          uint64_t v14 = (char *)a1 + v13;
          uint64_t v15 = (char *)a2 + v13;
          uint64_t v16 = _s22LocalizedPriceResourceV6FormatOMa(0);
          int v17 = swift_getEnumCaseMultiPayload();
          if (v17 == 3)
          {
            *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
            uint64_t v86 = (int *)_s15PricePropertiesVMa(0);
            uint64_t v87 = v86[5];
            uint64_t v166 = &v15[v87];
            uint64_t v176 = &v14[v87];
            uint64_t v88 = sub_22EE7F5D0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 32))(v176, v166, v88);
            v12(&v14[v86[6]], &v15[v86[6]], v11);
            *(void *)&v14[v86[7]] = *(void *)&v15[v86[7]];
          }
          else
          {
            if (v17 != 2)
            {
              memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
              goto LABEL_34;
            }
            *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
            uint64_t v18 = (int *)_s15PricePropertiesVMa(0);
            uint64_t v19 = v18[5];
            uint64_t v163 = &v15[v19];
            uint64_t v172 = &v14[v19];
            uint64_t v20 = sub_22EE7F5D0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v172, v163, v20);
            v12(&v14[v18[6]], &v15[v18[6]], v11);
            *(void *)&v14[v18[7]] = *(void *)&v15[v18[7]];
            uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
            v14[*(int *)(v21 + 48)] = v15[*(int *)(v21 + 48)];
          }
          swift_storeEnumTagMultiPayload();
        }
LABEL_34:
        swift_storeEnumTagMultiPayload();
LABEL_35:
        uint64_t v89 = (int *)type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard(0);
        *(_OWORD *)((char *)a1 + v89[5]) = *(_OWORD *)((char *)a2 + v89[5]);
        uint64_t v90 = v89[6];
        uint64_t v91 = (char *)a1 + v90;
        uint64_t v92 = (char *)a2 + v90;
        uint64_t v93 = sub_22EE7C220();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 32))(v91, v92, v93);
        uint64_t v94 = v89[7];
        uint64_t v95 = (_OWORD *)((char *)a1 + v94);
        uint64_t v96 = (_OWORD *)((char *)a2 + v94);
        int v97 = swift_getEnumCaseMultiPayload();
        if (v97 == 2)
        {
          uint64_t v113 = sub_22EE7F6E0();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v113 - 8) + 32))(v95, v96, v113);
          uint64_t v114 = _s20LocalizationResourceVMa();
          *(_OWORD *)((char *)v95 + *(int *)(v114 + 20)) = *(_OWORD *)((char *)v96 + *(int *)(v114 + 20));
        }
        else
        {
          if (v97 != 1)
          {
            memcpy(v95, v96, *(void *)(*(void *)(v5 - 8) + 64));
LABEL_61:
            uint64_t v152 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268626C70) + 48);
            uint64_t v153 = (char *)a1 + v152;
            uint64_t v154 = (char *)a2 + v152;
            uint64_t v155 = sub_22EE7F6E0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 32))(v153, v154, v155);
            uint64_t v156 = _s20LocalizationResourceVMa();
            *(_OWORD *)&v153[*(int *)(v156 + 20)] = *(_OWORD *)&v154[*(int *)(v156 + 20)];
            goto LABEL_65;
          }
          *uint64_t v95 = *v96;
          uint64_t v98 = _s22LocalizedPriceResourceVMa(0);
          uint64_t v99 = *(int *)(v98 + 20);
          uint64_t v100 = (char *)v95 + v99;
          uint64_t v101 = (char *)v96 + v99;
          uint64_t v102 = sub_22EE7F6E0();
          uint64_t v103 = (void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 32);
          uint64_t v177 = *v103;
          (*v103)(v100, v101, v102);
          uint64_t v104 = *(int *)(v98 + 24);
          uint64_t v105 = (char *)v95 + v104;
          uint64_t v106 = (char *)v96 + v104;
          uint64_t v107 = _s22LocalizedPriceResourceV6FormatOMa(0);
          int v108 = swift_getEnumCaseMultiPayload();
          if (v108 == 3)
          {
            *(_OWORD *)uint64_t v105 = *(_OWORD *)v106;
            uint64_t v149 = (int *)_s15PricePropertiesVMa(0);
            uint64_t v150 = v149[5];
            unsigned int v162 = &v106[v150];
            uint64_t v170 = &v105[v150];
            uint64_t v151 = sub_22EE7F5D0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v151 - 8) + 32))(v170, v162, v151);
            v177(&v105[v149[6]], &v106[v149[6]], v102);
            *(void *)&v105[v149[7]] = *(void *)&v106[v149[7]];
          }
          else
          {
            if (v108 != 2)
            {
              memcpy(v105, v106, *(void *)(*(void *)(v107 - 8) + 64));
              goto LABEL_60;
            }
            *(_OWORD *)uint64_t v105 = *(_OWORD *)v106;
            uint64_t v109 = (int *)_s15PricePropertiesVMa(0);
            uint64_t v110 = v109[5];
            uint64_t v161 = &v106[v110];
            char v167 = &v105[v110];
            uint64_t v111 = sub_22EE7F5D0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 32))(v167, v161, v111);
            v177(&v105[v109[6]], &v106[v109[6]], v102);
            *(void *)&v105[v109[7]] = *(void *)&v106[v109[7]];
            uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
            v105[*(int *)(v112 + 48)] = v106[*(int *)(v112 + 48)];
          }
          swift_storeEnumTagMultiPayload();
        }
LABEL_60:
        swift_storeEnumTagMultiPayload();
        goto LABEL_61;
      }
      uint64_t v40 = _s11PriceStringOMa(0);
      int v41 = swift_getEnumCaseMultiPayload();
      if (v41 == 2)
      {
        uint64_t v80 = sub_22EE7F6E0();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v80 - 8) + 32))(a1, a2, v80);
        uint64_t v81 = _s20LocalizationResourceVMa();
        *(_OWORD *)((char *)a1 + *(int *)(v81 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v81 + 20));
      }
      else
      {
        if (v41 != 1)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v40 - 8) + 64));
LABEL_46:
          uint64_t v118 = (int *)type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard(0);
          *(_OWORD *)((char *)a1 + v118[5]) = *(_OWORD *)((char *)a2 + v118[5]);
          uint64_t v119 = v118[6];
          uint64_t v120 = (char *)a1 + v119;
          uint64_t v121 = (char *)a2 + v119;
          uint64_t v122 = sub_22EE7C220();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v122 - 8) + 32))(v120, v121, v122);
          uint64_t v123 = v118[7];
          unsigned int v124 = (char *)a1 + v123;
          uint64_t v125 = (char *)a2 + v123;
          int v126 = swift_getEnumCaseMultiPayload();
          if (v126 != 2)
          {
            if (v126 == 1)
            {
              *(_OWORD *)unsigned int v124 = *(_OWORD *)v125;
              uint64_t v127 = _s22LocalizedPriceResourceVMa(0);
              uint64_t v128 = *(int *)(v127 + 20);
              uint64_t v129 = &v124[v128];
              int v130 = &v125[v128];
              uint64_t v131 = sub_22EE7F6E0();
              uint64_t v132 = *(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 32);
              v132(v129, v130, v131);
              uint64_t v133 = *(int *)(v127 + 24);
              uint64_t v134 = &v124[v133];
              uint64_t v135 = &v125[v133];
              uint64_t v136 = _s22LocalizedPriceResourceV6FormatOMa(0);
              int v137 = swift_getEnumCaseMultiPayload();
              if (v137 == 3)
              {
                *(_OWORD *)uint64_t v134 = *(_OWORD *)v135;
                int v157 = (int *)_s15PricePropertiesVMa(0);
                uint64_t v158 = v157[5];
                uint64_t v171 = &v135[v158];
                uint64_t v180 = &v134[v158];
                uint64_t v159 = sub_22EE7F5D0();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v159 - 8) + 32))(v180, v171, v159);
                v132(&v134[v157[6]], &v135[v157[6]], v131);
                *(void *)&v134[v157[7]] = *(void *)&v135[v157[7]];
              }
              else
              {
                if (v137 != 2)
                {
                  memcpy(v134, v135, *(void *)(*(void *)(v136 - 8) + 64));
                  goto LABEL_64;
                }
                *(_OWORD *)uint64_t v134 = *(_OWORD *)v135;
                uint64_t v138 = (int *)_s15PricePropertiesVMa(0);
                uint64_t v139 = v138[5];
                uint64_t v169 = &v135[v139];
                unsigned int v179 = &v134[v139];
                uint64_t v140 = sub_22EE7F5D0();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 32))(v179, v169, v140);
                v132(&v134[v138[6]], &v135[v138[6]], v131);
                *(void *)&v134[v138[7]] = *(void *)&v135[v138[7]];
                uint64_t v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
                v134[*(int *)(v141 + 48)] = v135[*(int *)(v141 + 48)];
              }
LABEL_55:
              swift_storeEnumTagMultiPayload();
              goto LABEL_64;
            }
            size_t v83 = *(void *)(*(void *)(v40 - 8) + 64);
            uint64_t v84 = v124;
            uint64_t v85 = v125;
            goto LABEL_53;
          }
          uint64_t v142 = sub_22EE7F6E0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 32))(v124, v125, v142);
          uint64_t v143 = _s20LocalizationResourceVMa();
          *(_OWORD *)&v124[*(int *)(v143 + 20)] = *(_OWORD *)&v125[*(int *)(v143 + 20)];
          goto LABEL_64;
        }
        *a1 = *a2;
        uint64_t v42 = _s22LocalizedPriceResourceVMa(0);
        uint64_t v43 = *(int *)(v42 + 20);
        uint64_t v44 = (char *)a1 + v43;
        uint64_t v45 = (char *)a2 + v43;
        uint64_t v46 = sub_22EE7F6E0();
        uint64_t v47 = *(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32);
        v47(v44, v45, v46);
        uint64_t v48 = *(int *)(v42 + 24);
        uint64_t v49 = (char *)a1 + v48;
        int v50 = (char *)a2 + v48;
        uint64_t v51 = _s22LocalizedPriceResourceV6FormatOMa(0);
        int v52 = swift_getEnumCaseMultiPayload();
        if (v52 == 3)
        {
          *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
          uint64_t v115 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v116 = v115[5];
          uint64_t v168 = &v50[v116];
          uint64_t v178 = &v49[v116];
          uint64_t v117 = sub_22EE7F5D0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 32))(v178, v168, v117);
          v47(&v49[v115[6]], &v50[v115[6]], v46);
          *(void *)&v49[v115[7]] = *(void *)&v50[v115[7]];
        }
        else
        {
          if (v52 != 2)
          {
            memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
            goto LABEL_45;
          }
          *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
          uint64_t v53 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v54 = v53[5];
          int v165 = &v50[v54];
          uint64_t v174 = &v49[v54];
          uint64_t v55 = sub_22EE7F5D0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v174, v165, v55);
          v47(&v49[v53[6]], &v50[v53[6]], v46);
          *(void *)&v49[v53[7]] = *(void *)&v50[v53[7]];
          uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
          v49[*(int *)(v56 + 48)] = v50[*(int *)(v56 + 48)];
        }
        swift_storeEnumTagMultiPayload();
      }
LABEL_45:
      swift_storeEnumTagMultiPayload();
      goto LABEL_46;
    }
    *a1 = *a2;
    uint64_t v22 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v23 = *(int *)(v22 + 20);
    uint64_t v24 = (char *)a1 + v23;
    uint64_t v25 = (char *)a2 + v23;
    uint64_t v26 = sub_22EE7F6E0();
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32);
    v27(v24, v25, v26);
    uint64_t v164 = v22;
    uint64_t v28 = *(int *)(v22 + 24);
    int v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    uint64_t v31 = _s22LocalizedPriceResourceV6FormatOMa(0);
    int v32 = swift_getEnumCaseMultiPayload();
    uint64_t v181 = v27;
    if (v32 == 3)
    {
      *(_OWORD *)int v29 = *(_OWORD *)v30;
      uint64_t v175 = v31;
      uint64_t v59 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v60 = v59[5];
      uint64_t v61 = &v29[v60];
      uint64_t v62 = &v30[v60];
      uint64_t v63 = sub_22EE7F5D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32))(v61, v62, v63);
      v27(&v29[v59[6]], &v30[v59[6]], v26);
      uint64_t v64 = v59[7];
      uint64_t v31 = v175;
      *(void *)&v29[v64] = *(void *)&v30[v64];
    }
    else
    {
      if (v32 != 2)
      {
        memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
        goto LABEL_22;
      }
      *(_OWORD *)int v29 = *(_OWORD *)v30;
      uint64_t v173 = v31;
      uint64_t v33 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v34 = v33[5];
      uint64_t v35 = &v29[v34];
      uint64_t v36 = &v30[v34];
      uint64_t v37 = sub_22EE7F5D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
      v27(&v29[v33[6]], &v30[v33[6]], v26);
      uint64_t v38 = v33[7];
      uint64_t v31 = v173;
      *(void *)&v29[v38] = *(void *)&v30[v38];
      uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
      v29[*(int *)(v39 + 48)] = v30[*(int *)(v39 + 48)];
    }
    swift_storeEnumTagMultiPayload();
LABEL_22:
    uint64_t v65 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268626C78) + 48);
    uint64_t v66 = (char *)a1 + v65;
    uint64_t v67 = (char *)a2 + v65;
    uint64_t v68 = _s11PriceStringOMa(0);
    int v69 = swift_getEnumCaseMultiPayload();
    if (v69 != 2)
    {
      if (v69 == 1)
      {
        *(_OWORD *)uint64_t v66 = *(_OWORD *)v67;
        v27(&v66[*(int *)(v164 + 20)], &v67[*(int *)(v164 + 20)], v26);
        uint64_t v70 = *(int *)(v164 + 24);
        uint64_t v71 = &v66[v70];
        uint64_t v72 = &v67[v70];
        int v73 = swift_getEnumCaseMultiPayload();
        if (v73 == 3)
        {
          *(_OWORD *)uint64_t v71 = *(_OWORD *)v72;
          uint64_t v144 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v145 = v144[5];
          uint64_t v146 = &v71[v145];
          uint64_t v147 = &v72[v145];
          uint64_t v148 = sub_22EE7F5D0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 32))(v146, v147, v148);
          v181(&v71[v144[6]], &v72[v144[6]], v26);
          *(void *)&v71[v144[7]] = *(void *)&v72[v144[7]];
        }
        else
        {
          if (v73 != 2)
          {
            memcpy(v71, v72, *(void *)(*(void *)(v31 - 8) + 64));
            goto LABEL_64;
          }
          *(_OWORD *)uint64_t v71 = *(_OWORD *)v72;
          uint64_t v74 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v75 = v74[5];
          int v76 = &v71[v75];
          uint64_t v77 = &v72[v75];
          uint64_t v78 = sub_22EE7F5D0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 32))(v76, v77, v78);
          v181(&v71[v74[6]], &v72[v74[6]], v26);
          *(void *)&v71[v74[7]] = *(void *)&v72[v74[7]];
          uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
          v71[*(int *)(v79 + 48)] = v72[*(int *)(v79 + 48)];
        }
        goto LABEL_55;
      }
      size_t v83 = *(void *)(*(void *)(v68 - 8) + 64);
      uint64_t v84 = v66;
      uint64_t v85 = v67;
LABEL_53:
      memcpy(v84, v85, v83);
LABEL_65:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    v27(v66, v67, v26);
    uint64_t v82 = _s20LocalizationResourceVMa();
    *(_OWORD *)&v66[*(int *)(v82 + 20)] = *(_OWORD *)&v67[*(int *)(v82 + 20)];
LABEL_64:
    swift_storeEnumTagMultiPayload();
    goto LABEL_65;
  }
  return a1;
}

uint64_t sub_22EDC47B0()
{
  uint64_t result = type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard(319);
  if (v1 <= 0x3F)
  {
    uint64_t v7 = *(void *)(result - 8) + 64;
    uint64_t result = _s20LocalizationResourceVMa();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      uint64_t v8 = &v6;
      uint64_t result = _s22LocalizedPriceResourceVMa(319);
      if (v3 <= 0x3F)
      {
        uint64_t result = _s11PriceStringOMa(319);
        if (v4 <= 0x3F)
        {
          swift_getTupleTypeLayout2();
          uint64_t v9 = &v5;
          swift_initEnumMetadataMultiPayload();
          return 0;
        }
      }
    }
  }
  return result;
}

void *sub_22EDC4910(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    _s11PriceStringOMa(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v27 = sub_22EE7F6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(a1, a2, v27);
      uint64_t v28 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)a1 + *(int *)(v28 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v28 + 20));
      goto LABEL_13;
    }
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v29 = a2[1];
      *a1 = *a2;
      a1[1] = v29;
      swift_bridgeObjectRetain();
      goto LABEL_13;
    }
    uint64_t v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    uint64_t v9 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v10 = *(int *)(v9 + 20);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_22EE7F6E0();
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    uint64_t v85 = v13;
    v14(v11, v12, v13);
    uint64_t v15 = *(int *)(v9 + 24);
    uint64_t v16 = (char *)a1 + v15;
    int v17 = (char *)a2 + v15;
    uint64_t v18 = _s22LocalizedPriceResourceV6FormatOMa(0);
    int v19 = swift_getEnumCaseMultiPayload();
    if (v19 == 3)
    {
      uint64_t v30 = *((void *)v17 + 1);
      *(void *)uint64_t v16 = *(void *)v17;
      *((void *)v16 + 1) = v30;
      uint64_t v31 = v14;
      int v32 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v33 = v32[5];
      uint64_t v78 = &v17[v33];
      uint64_t v82 = &v16[v33];
      uint64_t v34 = sub_22EE7F5D0();
      int v76 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16);
      swift_bridgeObjectRetain();
      v76(v82, v78, v34);
      v31(&v16[v32[6]], &v17[v32[6]], v85);
      *(void *)&v16[v32[7]] = *(void *)&v17[v32[7]];
    }
    else
    {
      if (v19 != 2)
      {
        memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
LABEL_13:
        swift_storeEnumTagMultiPayload();
        uint64_t v35 = a3[5];
        uint64_t v36 = a3[6];
        uint64_t v37 = (void *)((char *)a1 + v35);
        uint64_t v38 = (void *)((char *)a2 + v35);
        uint64_t v39 = v38[1];
        *uint64_t v37 = *v38;
        v37[1] = v39;
        uint64_t v40 = (char *)a1 + v36;
        int v41 = (char *)a2 + v36;
        uint64_t v42 = sub_22EE7C220();
        uint64_t v43 = *(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16);
        swift_bridgeObjectRetain();
        v43(v40, v41, v42);
        uint64_t v44 = a3[7];
        uint64_t v45 = (void *)((char *)a1 + v44);
        uint64_t v46 = (void *)((char *)a2 + v44);
        int v47 = swift_getEnumCaseMultiPayload();
        if (v47 == 2)
        {
          uint64_t v66 = sub_22EE7F6E0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v66 - 8) + 16))(v45, v46, v66);
          uint64_t v67 = _s20LocalizationResourceVMa();
          *(_OWORD *)((char *)v45 + *(int *)(v67 + 20)) = *(_OWORD *)((char *)v46 + *(int *)(v67 + 20));
        }
        else if (v47 == 1)
        {
          uint64_t v48 = v46[1];
          *uint64_t v45 = *v46;
          v45[1] = v48;
          uint64_t v49 = _s22LocalizedPriceResourceVMa(0);
          uint64_t v50 = *(int *)(v49 + 20);
          uint64_t v51 = (char *)v45 + v50;
          int v52 = (char *)v46 + v50;
          uint64_t v53 = sub_22EE7F6E0();
          uint64_t v54 = *(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16);
          swift_bridgeObjectRetain();
          uint64_t v86 = v53;
          v54(v51, v52, v53);
          uint64_t v55 = *(int *)(v49 + 24);
          uint64_t v56 = (char *)v45 + v55;
          uint64_t v57 = (char *)v46 + v55;
          uint64_t v58 = _s22LocalizedPriceResourceV6FormatOMa(0);
          int v59 = swift_getEnumCaseMultiPayload();
          if (v59 == 3)
          {
            uint64_t v69 = *((void *)v57 + 1);
            *(void *)uint64_t v56 = *(void *)v57;
            *((void *)v56 + 1) = v69;
            uint64_t v70 = (int *)_s15PricePropertiesVMa(0);
            uint64_t v71 = v70[5];
            uint64_t v72 = &v56[v71];
            uint64_t v84 = &v57[v71];
            uint64_t v73 = sub_22EE7F5D0();
            uint64_t v80 = *(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16);
            swift_bridgeObjectRetain();
            v80(v72, v84, v73);
            v54(&v56[v70[6]], &v57[v70[6]], v86);
            *(void *)&v56[v70[7]] = *(void *)&v57[v70[7]];
          }
          else
          {
            if (v59 != 2)
            {
              memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
              goto LABEL_23;
            }
            uint64_t v60 = *((void *)v57 + 1);
            *(void *)uint64_t v56 = *(void *)v57;
            *((void *)v56 + 1) = v60;
            uint64_t v61 = (int *)_s15PricePropertiesVMa(0);
            uint64_t v62 = v61[5];
            uint64_t v63 = &v56[v62];
            size_t v83 = &v57[v62];
            uint64_t v64 = sub_22EE7F5D0();
            uint64_t v79 = *(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16);
            swift_bridgeObjectRetain();
            v79(v63, v83, v64);
            v54(&v56[v61[6]], &v57[v61[6]], v86);
            *(void *)&v56[v61[7]] = *(void *)&v57[v61[7]];
            uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
            v56[*(int *)(v65 + 48)] = v57[*(int *)(v65 + 48)];
          }
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          uint64_t v68 = v46[1];
          *uint64_t v45 = *v46;
          v45[1] = v68;
          swift_bridgeObjectRetain();
        }
LABEL_23:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      uint64_t v20 = *((void *)v17 + 1);
      *(void *)uint64_t v16 = *(void *)v17;
      *((void *)v16 + 1) = v20;
      uint64_t v21 = v14;
      uint64_t v22 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v23 = v22[5];
      uint64_t v77 = &v17[v23];
      uint64_t v81 = &v16[v23];
      uint64_t v24 = sub_22EE7F5D0();
      uint64_t v75 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
      swift_bridgeObjectRetain();
      v75(v81, v77, v24);
      v21(&v16[v22[6]], &v17[v22[6]], v85);
      *(void *)&v16[v22[7]] = *(void *)&v17[v22[7]];
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
      v16[*(int *)(v25 + 48)] = v17[*(int *)(v25 + 48)];
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_13;
  }
  uint64_t v26 = *a2;
  *a1 = *a2;
  a1 = (void *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t sub_22EDC4FE4(uint64_t a1, uint64_t a2)
{
  _s11PriceStringOMa(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v14 = sub_22EE7F6E0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(a1, v14);
      break;
    case 1:
      swift_bridgeObjectRelease();
      uint64_t v5 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v6 = a1 + *(int *)(v5 + 20);
      uint64_t v7 = sub_22EE7F6E0();
      uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
      v8(v6, v7);
      uint64_t v9 = a1 + *(int *)(v5 + 24);
      _s22LocalizedPriceResourceV6FormatOMa(0);
      int v10 = swift_getEnumCaseMultiPayload();
      if (v10 == 3 || v10 == 2)
      {
        swift_bridgeObjectRelease();
        uint64_t v11 = _s15PricePropertiesVMa(0);
        uint64_t v12 = v9 + *(int *)(v11 + 20);
        uint64_t v13 = sub_22EE7F5D0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
        v8(v9 + *(int *)(v11 + 24), v7);
      }
      break;
    case 0:
      swift_bridgeObjectRelease();
      break;
  }
  swift_bridgeObjectRelease();
  uint64_t v15 = a1 + *(int *)(a2 + 24);
  uint64_t v16 = sub_22EE7C220();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + *(int *)(a2 + 28);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch(result)
  {
    case 2:
      uint64_t v29 = sub_22EE7F6E0();
      uint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8);
      uint64_t v27 = v29;
      uint64_t v26 = v17;
      break;
    case 1:
      swift_bridgeObjectRelease();
      uint64_t v19 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v20 = v17 + *(int *)(v19 + 20);
      uint64_t v21 = sub_22EE7F6E0();
      uint64_t v30 = *(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8);
      v30(v20, v21);
      uint64_t v22 = v17 + *(int *)(v19 + 24);
      _s22LocalizedPriceResourceV6FormatOMa(0);
      uint64_t result = swift_getEnumCaseMultiPayload();
      if (result != 3 && result != 2) {
        return result;
      }
      swift_bridgeObjectRelease();
      uint64_t v23 = _s15PricePropertiesVMa(0);
      uint64_t v24 = v22 + *(int *)(v23 + 20);
      uint64_t v25 = sub_22EE7F5D0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
      uint64_t v26 = v22 + *(int *)(v23 + 24);
      uint64_t v27 = v21;
      uint64_t v28 = (uint64_t (*)(uint64_t, uint64_t))v30;
      break;
    case 0:
      return swift_bridgeObjectRelease();
    default:
      return result;
  }

  return v28(v26, v27);
}

void *sub_22EDC5394(void *a1, void *a2, int *a3)
{
  _s11PriceStringOMa(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v25 = sub_22EE7F6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
    uint64_t v26 = _s20LocalizationResourceVMa();
    *(_OWORD *)((char *)a1 + *(int *)(v26 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v26 + 20));
    goto LABEL_12;
  }
  if (EnumCaseMultiPayload != 1)
  {
    uint64_t v27 = a2[1];
    *a1 = *a2;
    a1[1] = v27;
    swift_bridgeObjectRetain();
    goto LABEL_12;
  }
  uint64_t v85 = a3;
  uint64_t v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  uint64_t v8 = _s22LocalizedPriceResourceVMa(0);
  uint64_t v9 = *(int *)(v8 + 20);
  int v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_22EE7F6E0();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  uint64_t v84 = v12;
  v13(v10, v11, v12);
  uint64_t v14 = *(int *)(v8 + 24);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = _s22LocalizedPriceResourceV6FormatOMa(0);
  int v18 = swift_getEnumCaseMultiPayload();
  if (v18 == 3)
  {
    uint64_t v28 = *((void *)v16 + 1);
    *(void *)uint64_t v15 = *(void *)v16;
    *((void *)v15 + 1) = v28;
    uint64_t v29 = v13;
    uint64_t v30 = (int *)_s15PricePropertiesVMa(0);
    uint64_t v31 = v30[5];
    uint64_t v78 = &v16[v31];
    uint64_t v82 = &v15[v31];
    uint64_t v32 = sub_22EE7F5D0();
    uint64_t v74 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16);
    swift_bridgeObjectRetain();
    v74(v82, v78, v32);
    v29(&v15[v30[6]], &v16[v30[6]], v84);
    *(void *)&v15[v30[7]] = *(void *)&v16[v30[7]];
  }
  else
  {
    if (v18 != 2)
    {
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
      goto LABEL_11;
    }
    uint64_t v19 = *((void *)v16 + 1);
    *(void *)uint64_t v15 = *(void *)v16;
    *((void *)v15 + 1) = v19;
    uint64_t v20 = v13;
    uint64_t v21 = (int *)_s15PricePropertiesVMa(0);
    uint64_t v22 = v21[5];
    uint64_t v77 = &v16[v22];
    uint64_t v81 = &v15[v22];
    uint64_t v23 = sub_22EE7F5D0();
    uint64_t v73 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
    swift_bridgeObjectRetain();
    v73(v81, v77, v23);
    v20(&v15[v21[6]], &v16[v21[6]], v84);
    *(void *)&v15[v21[7]] = *(void *)&v16[v21[7]];
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
    v15[*(int *)(v24 + 48)] = v16[*(int *)(v24 + 48)];
  }
  swift_storeEnumTagMultiPayload();
LABEL_11:
  a3 = v85;
LABEL_12:
  swift_storeEnumTagMultiPayload();
  uint64_t v33 = a3[5];
  uint64_t v34 = a3[6];
  uint64_t v35 = (void *)((char *)a1 + v33);
  uint64_t v36 = (void *)((char *)a2 + v33);
  uint64_t v37 = v36[1];
  void *v35 = *v36;
  v35[1] = v37;
  uint64_t v38 = (char *)a1 + v34;
  uint64_t v39 = (char *)a2 + v34;
  uint64_t v40 = sub_22EE7C220();
  int v41 = *(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16);
  swift_bridgeObjectRetain();
  v41(v38, v39, v40);
  uint64_t v42 = a3[7];
  uint64_t v43 = (void *)((char *)a1 + v42);
  uint64_t v44 = (void *)((char *)a2 + v42);
  int v45 = swift_getEnumCaseMultiPayload();
  if (v45 == 2)
  {
    uint64_t v63 = sub_22EE7F6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v63 - 8) + 16))(v43, v44, v63);
    uint64_t v64 = _s20LocalizationResourceVMa();
    *(_OWORD *)((char *)v43 + *(int *)(v64 + 20)) = *(_OWORD *)((char *)v44 + *(int *)(v64 + 20));
  }
  else if (v45 == 1)
  {
    uint64_t v46 = v44[1];
    *uint64_t v43 = *v44;
    v43[1] = v46;
    uint64_t v47 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v48 = *(int *)(v47 + 20);
    uint64_t v49 = (char *)v43 + v48;
    uint64_t v50 = (char *)v44 + v48;
    uint64_t v51 = sub_22EE7F6E0();
    int v52 = *(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16);
    swift_bridgeObjectRetain();
    uint64_t v83 = v51;
    v52(v49, v50, v51);
    uint64_t v53 = *(int *)(v47 + 24);
    uint64_t v54 = (char *)v43 + v53;
    uint64_t v55 = (char *)v44 + v53;
    uint64_t v56 = _s22LocalizedPriceResourceV6FormatOMa(0);
    int v57 = swift_getEnumCaseMultiPayload();
    if (v57 == 3)
    {
      uint64_t v66 = *((void *)v55 + 1);
      *(void *)uint64_t v54 = *(void *)v55;
      *((void *)v54 + 1) = v66;
      uint64_t v67 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v68 = v67[5];
      uint64_t v69 = &v54[v68];
      uint64_t v80 = &v55[v68];
      uint64_t v70 = sub_22EE7F5D0();
      int v76 = *(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16);
      swift_bridgeObjectRetain();
      v76(v69, v80, v70);
      v52(&v54[v67[6]], &v55[v67[6]], v83);
      *(void *)&v54[v67[7]] = *(void *)&v55[v67[7]];
      swift_storeEnumTagMultiPayload();
    }
    else if (v57 == 2)
    {
      uint64_t v58 = *((void *)v55 + 1);
      *(void *)uint64_t v54 = *(void *)v55;
      *((void *)v54 + 1) = v58;
      int v59 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v60 = v59[5];
      uint64_t v75 = &v55[v60];
      uint64_t v79 = &v54[v60];
      uint64_t v61 = sub_22EE7F5D0();
      uint64_t v72 = *(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16);
      swift_bridgeObjectRetain();
      v72(v79, v75, v61);
      v52(&v54[v59[6]], &v55[v59[6]], v51);
      *(void *)&v54[v59[7]] = *(void *)&v55[v59[7]];
      uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
      v54[*(int *)(v62 + 48)] = v55[*(int *)(v62 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
    }
  }
  else
  {
    uint64_t v65 = v44[1];
    *uint64_t v43 = *v44;
    v43[1] = v65;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_22EDC5A1C(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_22EDC6154((uint64_t)a1, (void (*)(void))_s11PriceStringOMa);
    _s11PriceStringOMa(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v22 = sub_22EE7F6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
      uint64_t v23 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)a1 + *(int *)(v23 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v23 + 20));
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t v7 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v8 = *(int *)(v7 + 20);
      uint64_t v9 = (char *)a1 + v8;
      int v10 = (char *)a2 + v8;
      uint64_t v11 = sub_22EE7F6E0();
      uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v73 = v11;
      v12(v9, v10, v11);
      uint64_t v13 = *(int *)(v7 + 24);
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v17 = swift_getEnumCaseMultiPayload();
      if (v17 == 3)
      {
        *(void *)uint64_t v14 = *(void *)v15;
        *((void *)v14 + 1) = *((void *)v15 + 1);
        uint64_t v24 = v12;
        uint64_t v25 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v26 = v25[5];
        uint64_t v68 = &v15[v26];
        uint64_t v72 = &v14[v26];
        uint64_t v27 = sub_22EE7F5D0();
        uint64_t v64 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
        swift_bridgeObjectRetain();
        v64(v72, v68, v27);
        v24(&v14[v25[6]], &v15[v25[6]], v73);
        *(void *)&v14[v25[7]] = *(void *)&v15[v25[7]];
        swift_storeEnumTagMultiPayload();
      }
      else if (v17 == 2)
      {
        *(void *)uint64_t v14 = *(void *)v15;
        *((void *)v14 + 1) = *((void *)v15 + 1);
        uint64_t v71 = v12;
        int v18 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v19 = v18[5];
        uint64_t v63 = &v15[v19];
        uint64_t v67 = &v14[v19];
        uint64_t v20 = sub_22EE7F5D0();
        uint64_t v61 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
        swift_bridgeObjectRetain();
        v61(v67, v63, v20);
        v71(&v14[v18[6]], &v15[v18[6]], v73);
        *(void *)&v14[v18[7]] = *(void *)&v15[v18[7]];
        uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v14[*(int *)(v21 + 48)] = v15[*(int *)(v21 + 48)];
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
      }
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v28 = a3[5];
  uint64_t v29 = (void *)((char *)a1 + v28);
  uint64_t v30 = (void *)((char *)a2 + v28);
  *uint64_t v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[6];
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  uint64_t v34 = sub_22EE7C220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  if (a1 != a2)
  {
    uint64_t v35 = a3[7];
    uint64_t v36 = (void *)((char *)a1 + v35);
    uint64_t v37 = (void *)((char *)a2 + v35);
    sub_22EDC6154((uint64_t)a1 + v35, (void (*)(void))_s11PriceStringOMa);
    _s11PriceStringOMa(0);
    int v38 = swift_getEnumCaseMultiPayload();
    if (v38 == 2)
    {
      uint64_t v54 = sub_22EE7F6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v54 - 8) + 16))(v36, v37, v54);
      uint64_t v55 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)v36 + *(int *)(v55 + 20)) = *(_OWORD *)((char *)v37 + *(int *)(v55 + 20));
    }
    else if (v38 == 1)
    {
      void *v36 = *v37;
      v36[1] = v37[1];
      uint64_t v39 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v40 = *(int *)(v39 + 20);
      int v41 = (char *)v36 + v40;
      uint64_t v42 = (char *)v37 + v40;
      uint64_t v43 = sub_22EE7F6E0();
      uint64_t v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16);
      swift_bridgeObjectRetain();
      v44(v41, v42, v43);
      uint64_t v45 = *(int *)(v39 + 24);
      uint64_t v46 = (char *)v36 + v45;
      uint64_t v47 = (char *)v37 + v45;
      uint64_t v48 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v49 = swift_getEnumCaseMultiPayload();
      if (v49 == 3)
      {
        *(void *)uint64_t v46 = *(void *)v47;
        *((void *)v46 + 1) = *((void *)v47 + 1);
        uint64_t v56 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v57 = v56[5];
        uint64_t v58 = &v46[v57];
        uint64_t v70 = &v47[v57];
        uint64_t v59 = sub_22EE7F5D0();
        uint64_t v66 = *(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16);
        swift_bridgeObjectRetain();
        v66(v58, v70, v59);
        v44(&v46[v56[6]], &v47[v56[6]], v43);
        *(void *)&v46[v56[7]] = *(void *)&v47[v56[7]];
        swift_storeEnumTagMultiPayload();
      }
      else if (v49 == 2)
      {
        *(void *)uint64_t v46 = *(void *)v47;
        *((void *)v46 + 1) = *((void *)v47 + 1);
        uint64_t v50 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v51 = v50[5];
        uint64_t v65 = &v47[v51];
        uint64_t v69 = &v46[v51];
        uint64_t v52 = sub_22EE7F5D0();
        uint64_t v62 = *(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16);
        swift_bridgeObjectRetain();
        v62(v69, v65, v52);
        v44(&v46[v50[6]], &v47[v50[6]], v43);
        *(void *)&v46[v50[7]] = *(void *)&v47[v50[7]];
        uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v46[*(int *)(v53 + 48)] = v47[*(int *)(v53 + 48)];
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
      }
    }
    else
    {
      void *v36 = *v37;
      v36[1] = v37[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_22EDC6154(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_5_2();
  v3();
  return a1;
}

_OWORD *sub_22EDC61A8(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6 = _s11PriceStringOMa(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v23 = sub_22EE7F6E0();
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v23 - 8) + 32))(a1, a2, v23);
    uint64_t v24 = _s20LocalizationResourceVMa();
    *(_OWORD *)((char *)a1 + *(int *)(v24 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v24 + 20));
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_12;
    }
    *a1 = *a2;
    uint64_t v8 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v9 = *(int *)(v8 + 20);
    int v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_22EE7F6E0();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32);
    v13(v10, v11, v12);
    uint64_t v14 = *(int *)(v8 + 24);
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = _s22LocalizedPriceResourceV6FormatOMa(0);
    int v18 = swift_getEnumCaseMultiPayload();
    if (v18 == 3)
    {
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      uint64_t v64 = v13;
      uint64_t v25 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v26 = v25[5];
      uint64_t v58 = &v16[v26];
      uint64_t v60 = &v15[v26];
      uint64_t v27 = sub_22EE7F5D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v60, v58, v27);
      v64(&v15[v25[6]], &v16[v25[6]], v12);
      *(void *)&v15[v25[7]] = *(void *)&v16[v25[7]];
    }
    else
    {
      if (v18 != 2)
      {
        memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
        goto LABEL_11;
      }
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      uint64_t v63 = v13;
      uint64_t v19 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v20 = v19[5];
      uint64_t v57 = &v16[v20];
      uint64_t v59 = &v15[v20];
      uint64_t v21 = sub_22EE7F5D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v59, v57, v21);
      v63(&v15[v19[6]], &v16[v19[6]], v12);
      *(void *)&v15[v19[7]] = *(void *)&v16[v19[7]];
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
      v15[*(int *)(v22 + 48)] = v16[*(int *)(v22 + 48)];
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_11:
  swift_storeEnumTagMultiPayload();
LABEL_12:
  uint64_t v28 = a3[6];
  *(_OWORD *)((char *)a1 + a3[5]) = *(_OWORD *)((char *)a2 + a3[5]);
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = sub_22EE7C220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
  uint64_t v32 = a3[7];
  uint64_t v33 = (_OWORD *)((char *)a1 + v32);
  uint64_t v34 = (_OWORD *)((char *)a2 + v32);
  int v35 = swift_getEnumCaseMultiPayload();
  if (v35 == 2)
  {
    uint64_t v51 = sub_22EE7F6E0();
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v51 - 8) + 32))(v33, v34, v51);
    uint64_t v52 = _s20LocalizationResourceVMa();
    *(_OWORD *)((char *)v33 + *(int *)(v52 + 20)) = *(_OWORD *)((char *)v34 + *(int *)(v52 + 20));
    goto LABEL_22;
  }
  if (v35 == 1)
  {
    *uint64_t v33 = *v34;
    uint64_t v36 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v37 = *(int *)(v36 + 20);
    int v38 = (char *)v33 + v37;
    uint64_t v39 = (char *)v34 + v37;
    uint64_t v40 = sub_22EE7F6E0();
    int v41 = *(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32);
    v41(v38, v39, v40);
    uint64_t v42 = *(int *)(v36 + 24);
    uint64_t v43 = (char *)v33 + v42;
    uint64_t v44 = (char *)v34 + v42;
    uint64_t v45 = _s22LocalizedPriceResourceV6FormatOMa(0);
    int v46 = swift_getEnumCaseMultiPayload();
    if (v46 == 3)
    {
      *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
      uint64_t v53 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v54 = v53[5];
      uint64_t v62 = &v44[v54];
      uint64_t v66 = &v43[v54];
      uint64_t v55 = sub_22EE7F5D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v66, v62, v55);
      v41(&v43[v53[6]], &v44[v53[6]], v40);
      *(void *)&v43[v53[7]] = *(void *)&v44[v53[7]];
    }
    else
    {
      if (v46 != 2)
      {
        memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
        goto LABEL_22;
      }
      *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
      uint64_t v47 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v48 = v47[5];
      uint64_t v61 = &v44[v48];
      uint64_t v65 = &v43[v48];
      uint64_t v49 = sub_22EE7F5D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v65, v61, v49);
      v41(&v43[v47[6]], &v44[v47[6]], v40);
      *(void *)&v43[v47[7]] = *(void *)&v44[v47[7]];
      uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
      v43[*(int *)(v50 + 48)] = v44[*(int *)(v50 + 48)];
    }
    swift_storeEnumTagMultiPayload();
LABEL_22:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(v33, v34, *(void *)(*(void *)(v6 - 8) + 64));
  return a1;
}

_OWORD *sub_22EDC67C8(_OWORD *a1, _OWORD *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_22EDC6154((uint64_t)a1, (void (*)(void))_s11PriceStringOMa);
    uint64_t v6 = _s11PriceStringOMa(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v23 = sub_22EE7F6E0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v23 - 8) + 32))(a1, a2, v23);
      uint64_t v24 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)a1 + *(int *)(v24 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v24 + 20));
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        goto LABEL_13;
      }
      *a1 = *a2;
      uint64_t v8 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v9 = *(int *)(v8 + 20);
      int v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_22EE7F6E0();
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32);
      v13(v10, v11, v12);
      uint64_t v14 = *(int *)(v8 + 24);
      uint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      uint64_t v17 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v18 = swift_getEnumCaseMultiPayload();
      if (v18 == 3)
      {
        *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
        uint64_t v70 = v13;
        uint64_t v25 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v26 = v25[5];
        uint64_t v64 = &v16[v26];
        uint64_t v66 = &v15[v26];
        uint64_t v27 = sub_22EE7F5D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v66, v64, v27);
        v70(&v15[v25[6]], &v16[v25[6]], v12);
        *(void *)&v15[v25[7]] = *(void *)&v16[v25[7]];
      }
      else
      {
        if (v18 != 2)
        {
          memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
          goto LABEL_12;
        }
        *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
        uint64_t v69 = v13;
        uint64_t v19 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v20 = v19[5];
        uint64_t v63 = &v16[v20];
        uint64_t v65 = &v15[v20];
        uint64_t v21 = sub_22EE7F5D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v65, v63, v21);
        v69(&v15[v19[6]], &v16[v19[6]], v12);
        *(void *)&v15[v19[7]] = *(void *)&v16[v19[7]];
        uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v15[*(int *)(v22 + 48)] = v16[*(int *)(v22 + 48)];
      }
      swift_storeEnumTagMultiPayload();
    }
LABEL_12:
    swift_storeEnumTagMultiPayload();
  }
LABEL_13:
  uint64_t v28 = a3[5];
  uint64_t v29 = (void *)((char *)a1 + v28);
  uint64_t v30 = (uint64_t *)((char *)a2 + v28);
  uint64_t v32 = *v30;
  uint64_t v31 = v30[1];
  *uint64_t v29 = v32;
  v29[1] = v31;
  swift_bridgeObjectRelease();
  uint64_t v33 = a3[6];
  uint64_t v34 = (char *)a1 + v33;
  int v35 = (char *)a2 + v33;
  uint64_t v36 = sub_22EE7C220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 40))(v34, v35, v36);
  if (a1 != a2)
  {
    uint64_t v37 = a3[7];
    int v38 = (_OWORD *)((char *)a1 + v37);
    uint64_t v39 = (_OWORD *)((char *)a2 + v37);
    sub_22EDC6154((uint64_t)a1 + v37, (void (*)(void))_s11PriceStringOMa);
    uint64_t v40 = _s11PriceStringOMa(0);
    int v41 = swift_getEnumCaseMultiPayload();
    if (v41 == 2)
    {
      uint64_t v57 = sub_22EE7F6E0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v57 - 8) + 32))(v38, v39, v57);
      uint64_t v58 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)v38 + *(int *)(v58 + 20)) = *(_OWORD *)((char *)v39 + *(int *)(v58 + 20));
      goto LABEL_24;
    }
    if (v41 == 1)
    {
      *int v38 = *v39;
      uint64_t v42 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v43 = *(int *)(v42 + 20);
      uint64_t v44 = (char *)v38 + v43;
      uint64_t v45 = (char *)v39 + v43;
      uint64_t v46 = sub_22EE7F6E0();
      uint64_t v47 = *(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32);
      v47(v44, v45, v46);
      uint64_t v48 = *(int *)(v42 + 24);
      uint64_t v49 = (char *)v38 + v48;
      uint64_t v50 = (char *)v39 + v48;
      uint64_t v51 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v52 = swift_getEnumCaseMultiPayload();
      if (v52 == 3)
      {
        *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
        uint64_t v59 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v60 = v59[5];
        uint64_t v68 = &v50[v60];
        uint64_t v72 = &v49[v60];
        uint64_t v61 = sub_22EE7F5D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 32))(v72, v68, v61);
        v47(&v49[v59[6]], &v50[v59[6]], v46);
        *(void *)&v49[v59[7]] = *(void *)&v50[v59[7]];
      }
      else
      {
        if (v52 != 2)
        {
          memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
          goto LABEL_24;
        }
        *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
        uint64_t v53 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v54 = v53[5];
        uint64_t v67 = &v50[v54];
        uint64_t v71 = &v49[v54];
        uint64_t v55 = sub_22EE7F5D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v71, v67, v55);
        v47(&v49[v53[6]], &v50[v53[6]], v46);
        *(void *)&v49[v53[7]] = *(void *)&v50[v53[7]];
        uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v49[*(int *)(v56 + 48)] = v50[*(int *)(v56 + 48)];
      }
      swift_storeEnumTagMultiPayload();
LABEL_24:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
  }
  return a1;
}

uint64_t sub_22EDC6E4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EDC6E60);
}

uint64_t sub_22EDC6E60()
{
  uint64_t v3 = OUTLINED_FUNCTION_6_37();
  _s11PriceStringOMa(v3);
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v4 + 84) == v0)
  {
    uint64_t v5 = OUTLINED_FUNCTION_21_23();
  }
  else
  {
    if (v0 == 0x7FFFFFFF) {
      return OUTLINED_FUNCTION_20_0(*(void *)(v1 + *(int *)(v2 + 20) + 8));
    }
    sub_22EE7C220();
    uint64_t v5 = OUTLINED_FUNCTION_19_20();
  }

  return __swift_getEnumTagSinglePayload(v5, v0, v6);
}

uint64_t sub_22EDC6EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EDC6F08);
}

void sub_22EDC6F08(uint64_t a1, int a2, int a3, uint64_t a4)
{
  _s11PriceStringOMa(0);
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v8 + 84) != a3)
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
      return;
    }
    sub_22EE7C220();
    OUTLINED_FUNCTION_19_20();
  }
  OUTLINED_FUNCTION_18_23();

  __swift_storeEnumTagSinglePayload(v9, v10, v11, v12);
}

uint64_t sub_22EDC6FB0()
{
  uint64_t result = _s11PriceStringOMa(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_22EE7C220();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_22EDC7080@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v118 = a1;
  uint64_t v116 = a3;
  uint64_t v4 = type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration(0);
  uint64_t v5 = OUTLINED_FUNCTION_14(v4);
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_3_2();
  uint64_t v119 = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
  uint64_t v8 = OUTLINED_FUNCTION_14(v7);
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_3_2();
  uint64_t v113 = v9;
  OUTLINED_FUNCTION_8_3();
  sub_22EE7F540();
  OUTLINED_FUNCTION_0_2();
  uint64_t v110 = v11;
  uint64_t v111 = v10;
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_18_0();
  uint64_t v96 = v12;
  OUTLINED_FUNCTION_6_5();
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_9_5();
  uint64_t v108 = v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E620);
  uint64_t v16 = OUTLINED_FUNCTION_14(v15);
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_3_2();
  uint64_t v117 = v17;
  OUTLINED_FUNCTION_8_3();
  uint64_t v18 = type metadata accessor for Subscription();
  uint64_t v19 = v18 - 8;
  MEMORY[0x270FA5388](v18);
  OUTLINED_FUNCTION_9_1();
  uint64_t v22 = v20 - v21;
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v95 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v28 = (char *)&v95 - v27;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(qword_26861BAB0);
  uint64_t v30 = OUTLINED_FUNCTION_14(v29);
  MEMORY[0x270FA5388](v30);
  uint64_t v32 = (char *)&v95 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = type metadata accessor for SubscriptionStoreControlOption(0);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v33);
  OUTLINED_FUNCTION_9_1();
  uint64_t v36 = v34 - v35;
  MEMORY[0x270FA5388](v37);
  uint64_t v39 = (char *)&v95 - v38;
  uint64_t v106 = type metadata accessor for SubscriptionStoreCopyWriter(0);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v40);
  OUTLINED_FUNCTION_9_1();
  uint64_t v43 = v41 - v42;
  MEMORY[0x270FA5388](v44);
  OUTLINED_FUNCTION_9_5();
  uint64_t v114 = v45;
  uint64_t v115 = a2;
  sub_22EDCBF68(a2, (uint64_t)v39, (void (*)(void))type metadata accessor for SubscriptionStoreControlOption);
  sub_22EC5BD80((uint64_t)v32);
  sub_22EDCBF68((uint64_t)v39, v36, (void (*)(void))type metadata accessor for SubscriptionStoreControlOption);
  uint64_t v109 = v39;
  uint64_t v112 = v32;
  sub_22EDE0034();
  uint64_t v95 = v46;
  int v97 = v47;
  uint64_t v48 = v36 + *(int *)(v19 + 28);
  uint64_t v49 = *(void *)v48;
  int v50 = *(unsigned __int8 *)(v48 + 8);
  sub_22EDCBF68(v36, (uint64_t)v28, (void (*)(void))type metadata accessor for Subscription);
  if (v50 == 2)
  {
    uint64_t v51 = _s17_StoreKit_SwiftUI012SubscriptionA25ControlStyleConfigurationV12PickerOptionV2idSSvg_0();
    uint64_t v104 = v52;
    uint64_t v105 = v51;
  }
  else
  {
    uint64_t v104 = v50 & 1;
    uint64_t v105 = v49;
  }
  sub_22EDC6154((uint64_t)v28, (void (*)(void))type metadata accessor for Subscription);
  sub_22EDCBF68(v36, (uint64_t)v26, (void (*)(void))type metadata accessor for Subscription);
  uint64_t v53 = sub_22EE7F2D0();
  uint64_t v102 = v54;
  uint64_t v103 = v53;
  sub_22EDC6154((uint64_t)v26, (void (*)(void))type metadata accessor for Subscription);
  uint64_t v55 = sub_22EDE0434();
  uint64_t v100 = v56;
  uint64_t v101 = v55;
  sub_22EDCBF68(v36, v22, (void (*)(void))type metadata accessor for Subscription);
  uint64_t v99 = sub_22EE7F2F0();
  uint64_t v98 = v57;
  sub_22EDC6154(v22, (void (*)(void))type metadata accessor for Subscription);
  uint64_t v58 = v108;
  sub_22EAD9EA8(v108);
  uint64_t v59 = v117;
  sub_22EE7F480();
  uint64_t v60 = *(void (**)(uint64_t, uint64_t))(v110 + 8);
  v60(v58, v111);
  uint64_t v61 = sub_22EE7F6E0();
  __swift_storeEnumTagSinglePayload(v59, 0, 1, v61);
  uint64_t v62 = 0;
  if ((v97 & 1) == 0)
  {
    uint64_t v63 = v96;
    sub_22EAD9EA8(v96);
    sub_22EE7F410();
    uint64_t v64 = OUTLINED_FUNCTION_14_29();
    ((void (*)(uint64_t))v60)(v64);
    uint64_t v65 = v95;
    if (v63 >= v95)
    {
      sub_22EAD9EA8(v63);
      sub_22EE7F410();
      uint64_t v66 = OUTLINED_FUNCTION_14_29();
      ((void (*)(uint64_t))v60)(v66);
      if (v65 == v63) {
        uint64_t v62 = 4;
      }
      else {
        uint64_t v62 = 2;
      }
    }
    else
    {
      uint64_t v62 = 8;
    }
  }
  BOOL v67 = v50 == 2;
  uint64_t v68 = v113;
  sub_22EADAD08(v36 + *(int *)(v107 + 20), v113, &qword_26861BB58);
  uint64_t v69 = v106;
  uint64_t v70 = v43 + *(int *)(v106 + 32);
  __swift_storeEnumTagSinglePayload(v70, 1, 1, v61);
  uint64_t v71 = *(int *)(v69 + 36);
  *(void *)(v43 + v71) = 0;
  uint64_t v72 = v43 + *(int *)(v69 + 40);
  uint64_t v73 = sub_22EE7F670();
  __swift_storeEnumTagSinglePayload(v72, 1, 1, v73);
  uint64_t v74 = v104;
  *(void *)uint64_t v43 = v105;
  *(void *)(v43 + 8) = v74;
  *(unsigned char *)(v43 + 16) = v67;
  uint64_t v75 = v102;
  *(void *)(v43 + 24) = v103;
  *(void *)(v43 + 32) = v75;
  uint64_t v76 = v100;
  *(void *)(v43 + 40) = v101;
  *(void *)(v43 + 48) = v76;
  uint64_t v77 = v98;
  *(void *)(v43 + 56) = v99;
  *(void *)(v43 + 64) = v77;
  sub_22ED821D8(v117, v70, &qword_26861E620);
  *(void *)(v43 + v71) = v62;
  sub_22ED821D8(v68, v72, &qword_26861BB58);
  uint64_t v78 = v114;
  sub_22EDCBF08(v43, v114, (void (*)(void))type metadata accessor for SubscriptionStoreCopyWriter);
  sub_22EDC6154(v36, (void (*)(void))type metadata accessor for SubscriptionStoreControlOption);
  sub_22EB0584C((uint64_t)v112, qword_26861BAB0);
  sub_22EDC6154((uint64_t)v109, (void (*)(void))type metadata accessor for SubscriptionStoreControlOption);
  sub_22EDDFA84();
  uint64_t v80 = *(void *)(v78 + 24);
  uint64_t v79 = *(void *)(v78 + 32);
  uint64_t v81 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
  uint64_t v82 = v115;
  uint64_t v83 = *(uint64_t (**)(void))(v115 + *(int *)(v81 + 20));
  swift_bridgeObjectRetain();
  if (v83)
  {
    uint64_t v84 = sub_22EADA90C();
    uint64_t v86 = v85;
    char v88 = v87 & 1;
    uint64_t v89 = v83();
    sub_22EADB1A4(v84, v86, v88);
  }
  else
  {
    uint64_t v89 = 0;
  }
  sub_22EDC6154(v118, (void (*)(void))type metadata accessor for SubscriptionStoreControlStyleConfiguration);
  sub_22EDC6154(v78, (void (*)(void))type metadata accessor for SubscriptionStoreCopyWriter);
  char v90 = *(unsigned char *)(v82
                 + *(int *)(type metadata accessor for SubscriptionStoreControlStyleConfiguration.PickerOption(0) + 20));
  sub_22EDC6154(v82, (void (*)(void))type metadata accessor for SubscriptionStoreControlStyleConfiguration.PickerOption);
  uint64_t v91 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_268626CE0);
  uint64_t v92 = v116;
  *(void *)(v116 + v91[10]) = v89;
  uint64_t result = sub_22EDCBF08(v119, v92, (void (*)(void))type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration);
  uint64_t v94 = (void *)(v92 + v91[9]);
  *uint64_t v94 = v80;
  v94[1] = v79;
  *(unsigned char *)(v92 + v91[11]) = v90;
  return result;
}

uint64_t sub_22EDC77E4()
{
  swift_getKeyPath();
  sub_22EE7E220();

  return swift_release();
}

uint64_t sub_22EDC7858()
{
  return swift_release();
}

void sub_22EDC78CC(uint64_t a1, uint64_t a2)
{
  sub_22ECE5850();
  if (v4)
  {
    uint64_t v5 = *(int *)(type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard(0) + 20);
    uint64_t v6 = *(void *)(a1 + v5);
    uint64_t v7 = *(void *)(a1 + v5 + 8);
    uint64_t v8 = (void *)(a2 + v5);
    BOOL v9 = v6 == *v8 && v7 == v8[1];
    if (v9 || (sub_22EE80660() & 1) != 0)
    {
      uint64_t v10 = OUTLINED_FUNCTION_19_20();
      if (MEMORY[0x230FA9540](v10, a2 + v11))
      {
        sub_22ECE5850();
      }
    }
  }
}

uint64_t sub_22EDC7978(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s11PriceStringOMa(0);
  uint64_t v5 = OUTLINED_FUNCTION_14(v4);
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_18_0();
  uint64_t v83 = v6;
  OUTLINED_FUNCTION_6_5();
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_9_5();
  uint64_t v84 = v8;
  uint64_t v9 = OUTLINED_FUNCTION_8_3();
  uint64_t v81 = _s22LocalizedPriceResourceVMa(v9);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_3_2();
  uint64_t v82 = (void *)v11;
  OUTLINED_FUNCTION_8_3();
  uint64_t v80 = _s20LocalizationResourceVMa();
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_18_0();
  uint64_t v85 = v13;
  OUTLINED_FUNCTION_6_5();
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_9_5();
  uint64_t v87 = v15;
  uint64_t v16 = OUTLINED_FUNCTION_8_3();
  uint64_t v88 = type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard(v16);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_18_0();
  uint64_t v86 = v18;
  OUTLINED_FUNCTION_6_5();
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v79 - v20;
  type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration(0);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v22);
  OUTLINED_FUNCTION_9_1();
  uint64_t v25 = (void *)(v23 - v24);
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)&v79 - v27;
  MEMORY[0x270FA5388](v29);
  uint64_t v31 = (char *)&v79 - v30;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_268626CD8);
  uint64_t v33 = OUTLINED_FUNCTION_14(v32);
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = (char *)&v79 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = (uint64_t)&v35[*(int *)(v36 + 56)];
  sub_22EDCBF68(a1, (uint64_t)v35, (void (*)(void))type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration);
  sub_22EDCBF68(a2, v37, (void (*)(void))type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_22EDCBF68((uint64_t)v35, (uint64_t)v31, (void (*)(void))type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration);
    if (swift_getEnumCaseMultiPayload())
    {
      uint64_t v56 = type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard;
      uint64_t v57 = (uint64_t)v31;
      goto LABEL_29;
    }
    sub_22EDCBF08(v37, (uint64_t)v21, (void (*)(void))type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard);
    sub_22ECE5850();
    uint64_t v69 = v88;
    if (v70)
    {
      uint64_t v71 = *(int *)(v88 + 20);
      uint64_t v72 = *(void *)&v31[v71];
      uint64_t v73 = *(void *)&v31[v71 + 8];
      uint64_t v74 = &v21[v71];
      BOOL v75 = v72 == *(void *)v74 && v73 == *((void *)v74 + 1);
      if (v75 || (sub_22EE80660())
        && (MEMORY[0x230FA9540](&v31[*(int *)(v69 + 24)], &v21[*(int *)(v69 + 24)]) & 1) != 0)
      {
        sub_22ECE5850();
        if (v76)
        {
          sub_22EDC6154((uint64_t)v21, (void (*)(void))type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard);
          uint64_t v77 = (uint64_t)v31;
          goto LABEL_50;
        }
      }
    }
    uint64_t v68 = type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard;
    sub_22EDC6154((uint64_t)v21, (void (*)(void))type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard);
    uint64_t v66 = (uint64_t)v31;
LABEL_42:
    BOOL v67 = v68;
    goto LABEL_43;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_22EDCBF68((uint64_t)v35, (uint64_t)v28, (void (*)(void))type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration);
    uint64_t v39 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268626C70) + 48);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v40 = v86;
      sub_22EDCBF08(v37, v86, (void (*)(void))type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard);
      uint64_t v41 = v87;
      sub_22EDCBF08((uint64_t)&v28[v39], v87, (void (*)(void))_s20LocalizationResourceVMa);
      uint64_t v42 = v85;
      sub_22EDCBF08(v37 + v39, v85, (void (*)(void))_s20LocalizationResourceVMa);
      sub_22ECE5850();
      if (v43)
      {
        uint64_t v44 = *(int *)(v88 + 20);
        uint64_t v45 = *(void *)&v28[v44];
        uint64_t v46 = *(void *)&v28[v44 + 8];
        int v47 = (void *)(v40 + v44);
        BOOL v48 = v45 == *v47 && v46 == v47[1];
        if (v48 || (sub_22EE80660() & 1) != 0)
        {
          uint64_t v49 = OUTLINED_FUNCTION_19_20();
          if (MEMORY[0x230FA9540](v49, v40 + v50))
          {
            sub_22ECE5850();
            if (v51)
            {
              sub_22EDC6154((uint64_t)v28, (void (*)(void))type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard);
              if ((sub_22EE7F680() & 1) == 0)
              {
LABEL_51:
                sub_22EDC6154(v42, (void (*)(void))_s20LocalizationResourceVMa);
                sub_22EDC6154(v41, (void (*)(void))_s20LocalizationResourceVMa);
                BOOL v67 = type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard;
                uint64_t v66 = v40;
                goto LABEL_43;
              }
              uint64_t v52 = *(int *)(v80 + 20);
              uint64_t v53 = v41 + v52;
              uint64_t v54 = *(void *)(v41 + v52);
              uint64_t v55 = (void *)(v42 + v52);
              if (v54 == 6)
              {
                if (*v55 != 6) {
                  goto LABEL_51;
                }
              }
              else if (*v55 == 6 {
                     || *v55 != v54
              }
                     || *(void *)(v53 + 8) != v55[1])
              {
                goto LABEL_51;
              }
              sub_22EDC6154(v42, (void (*)(void))_s20LocalizationResourceVMa);
              sub_22EDC6154(v41, (void (*)(void))_s20LocalizationResourceVMa);
              uint64_t v77 = v40;
LABEL_50:
              sub_22EDC6154(v77, (void (*)(void))type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard);
              sub_22EDC6154((uint64_t)v35, (void (*)(void))type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration);
              char v65 = 1;
              return v65 & 1;
            }
          }
        }
      }
      sub_22EDC6154((uint64_t)v28, (void (*)(void))type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard);
      sub_22EDC6154(v42, (void (*)(void))_s20LocalizationResourceVMa);
      sub_22EDC6154(v41, (void (*)(void))_s20LocalizationResourceVMa);
      uint64_t v66 = v40;
      BOOL v67 = type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard;
LABEL_43:
      sub_22EDC6154(v66, (void (*)(void))v67);
      sub_22EDC6154((uint64_t)v35, (void (*)(void))type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration);
      goto LABEL_44;
    }
    sub_22EDC6154((uint64_t)&v28[v39], (void (*)(void))_s20LocalizationResourceVMa);
    uint64_t v56 = type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard;
    uint64_t v57 = (uint64_t)v28;
LABEL_29:
    sub_22EDC6154(v57, (void (*)(void))v56);
    sub_22EB0584C((uint64_t)v35, &qword_268626CD8);
LABEL_44:
    char v65 = 0;
    return v65 & 1;
  }
  sub_22EDCBF68((uint64_t)v35, (uint64_t)v25, (void (*)(void))type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration);
  uint64_t v58 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268626C78) + 48);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_22EDC6154((uint64_t)v25 + v58, (void (*)(void))_s11PriceStringOMa);
    uint64_t v56 = _s22LocalizedPriceResourceVMa;
    uint64_t v57 = (uint64_t)v25;
    goto LABEL_29;
  }
  uint64_t v59 = v82;
  sub_22EDCBF08(v37, (uint64_t)v82, (void (*)(void))_s22LocalizedPriceResourceVMa);
  uint64_t v60 = v84;
  sub_22EDCBF08((uint64_t)v25 + v58, v84, (void (*)(void))_s11PriceStringOMa);
  uint64_t v61 = v83;
  sub_22EDCBF08(v37 + v58, v83, (void (*)(void))_s11PriceStringOMa);
  BOOL v62 = *v25 == *v59 && v25[1] == v59[1];
  if (!v62 && (sub_22EE80660() & 1) == 0 || (sub_22EE7F680() & 1) == 0 || (sub_22ECE75CC(), (v63 & 1) == 0))
  {
    uint64_t v68 = _s22LocalizedPriceResourceVMa;
    sub_22EDC6154((uint64_t)v25, (void (*)(void))_s22LocalizedPriceResourceVMa);
    sub_22EDC6154(v61, (void (*)(void))_s11PriceStringOMa);
    sub_22EDC6154(v60, (void (*)(void))_s11PriceStringOMa);
    uint64_t v66 = (uint64_t)v59;
    goto LABEL_42;
  }
  sub_22EDC6154((uint64_t)v25, (void (*)(void))_s22LocalizedPriceResourceVMa);
  sub_22ECE5850();
  char v65 = v64;
  sub_22EDC6154(v61, (void (*)(void))_s11PriceStringOMa);
  sub_22EDC6154(v60, (void (*)(void))_s11PriceStringOMa);
  sub_22EDC6154((uint64_t)v59, (void (*)(void))_s22LocalizedPriceResourceVMa);
  sub_22EDC6154((uint64_t)v35, (void (*)(void))type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration);
  return v65 & 1;
}

uint64_t sub_22EDC8260()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EDC82A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v48 = a1;
  uint64_t v56 = a2;
  uint64_t v46 = *(void *)(a1 + 16);
  swift_getTupleTypeMetadata2();
  OUTLINED_FUNCTION_11_9();
  swift_getWitnessTable();
  sub_22EE7EA60();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861C3F0);
  OUTLINED_FUNCTION_5_28();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268626CA0);
  OUTLINED_FUNCTION_5_28();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268626CA8);
  OUTLINED_FUNCTION_12_28();
  OUTLINED_FUNCTION_11_9();
  swift_getWitnessTable();
  uint64_t v2 = sub_22EE7EAF0();
  OUTLINED_FUNCTION_0_2();
  v45[1] = v3;
  OUTLINED_FUNCTION_9_7();
  MEMORY[0x270FA5388](v4);
  v45[0] = swift_getWitnessTable();
  uint64_t v70 = v2;
  uint64_t v71 = v45[0];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  OUTLINED_FUNCTION_0_2();
  uint64_t v47 = v6;
  OUTLINED_FUNCTION_9_7();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_22EE7CEE0();
  OUTLINED_FUNCTION_0_2();
  uint64_t v50 = v9;
  OUTLINED_FUNCTION_9_7();
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_6_4((uint64_t)v45 - v11);
  sub_22EE7CEE0();
  OUTLINED_FUNCTION_0_2();
  uint64_t v54 = v12;
  OUTLINED_FUNCTION_9_7();
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_6_4((uint64_t)v45 - v14);
  sub_22EE7CEE0();
  OUTLINED_FUNCTION_0_2();
  uint64_t v53 = v15;
  OUTLINED_FUNCTION_9_7();
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_6_4((uint64_t)v45 - v17);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861D028);
  uint64_t v18 = sub_22EE7CEE0();
  OUTLINED_FUNCTION_0_2();
  uint64_t v55 = v19;
  MEMORY[0x270FA5388](v20);
  OUTLINED_FUNCTION_18_0();
  uint64_t v51 = v21;
  OUTLINED_FUNCTION_6_5();
  MEMORY[0x270FA5388](v22);
  OUTLINED_FUNCTION_9_5();
  OUTLINED_FUNCTION_6_4(v23);
  uint64_t v24 = *(void *)(v48 + 24);
  uint64_t v57 = v46;
  uint64_t v58 = v24;
  uint64_t v59 = v49;
  sub_22EB51934();
  uint64_t v25 = v45[0];
  sub_22EE7EAE0();
  sub_22EE7DF80();
  sub_22EE7E1B0();
  OUTLINED_FUNCTION_5_2();
  v26();
  if (qword_26861B808 != -1) {
    swift_once();
  }
  uint64_t v70 = qword_26864C428;
  uint64_t v71 = byte_26864C430;
  uint64_t v72 = qword_26864C438;
  uint64_t v73 = byte_26864C440;
  uint64_t v74 = qword_26864C448;
  uint64_t v75 = byte_26864C450;
  uint64_t v76 = qword_26864C458;
  uint64_t v77 = byte_26864C460;
  uint64_t v78 = qword_26864C468;
  uint64_t v79 = byte_26864C470;
  uint64_t v80 = qword_26864C478;
  __int16 v81 = byte_26864C480;
  uint64_t KeyPath = v2;
  uint64_t v69 = v25;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v28 = sub_22EB284EC(OpaqueTypeMetadata2, OpaqueTypeConformance2);
  sub_22EBB497C((uint64_t)&v70, v28, v29, OpaqueTypeMetadata2, OpaqueTypeConformance2);
  OUTLINED_FUNCTION_5_2();
  v30();
  uint64_t KeyPath = swift_getKeyPath();
  LOWORD(v69) = 0;
  unint64_t v31 = sub_22EB277E4();
  uint64_t v66 = OpaqueTypeConformance2;
  unint64_t v67 = v31;
  uint64_t WitnessTable = swift_getWitnessTable();
  MEMORY[0x230FAB9D0](&KeyPath, v8, &type metadata for CompactPickerLabelMaxWidthModifier, WitnessTable);
  swift_release();
  OUTLINED_FUNCTION_5_2();
  v33();
  sub_22EE7ED50();
  unint64_t v34 = sub_22EDCBE64();
  uint64_t v64 = WitnessTable;
  unint64_t v65 = v34;
  uint64_t v44 = swift_getWitnessTable();
  sub_22EE7E5C0();
  OUTLINED_FUNCTION_5_2();
  v35();
  uint64_t v62 = v44;
  uint64_t v63 = MEMORY[0x263F19100];
  uint64_t v36 = swift_getWitnessTable();
  uint64_t v37 = v51;
  sub_22EE7E4A0();
  OUTLINED_FUNCTION_5_2();
  v38();
  uint64_t v39 = sub_22EADDD7C(&qword_26861D020, &qword_26861D028);
  uint64_t v60 = v36;
  uint64_t v61 = v39;
  uint64_t v40 = swift_getWitnessTable();
  uint64_t v41 = v52;
  sub_22EB69440(v37, v18, v40);
  uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
  v42(v37, v18);
  sub_22EB69440(v41, v18, v40);
  return ((uint64_t (*)(uint64_t, uint64_t))v42)(v41, v18);
}

uint64_t sub_22EDC8A20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v49 = a3;
  uint64_t v43 = a2;
  uint64_t v56 = a4;
  uint64_t v57 = a1;
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_268626CA8);
  MEMORY[0x270FA5388](v55);
  uint64_t v54 = (uint64_t)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v53 = (uint64_t *)((char *)&v42 - v6);
  uint64_t v51 = sub_22EE7CDA0();
  uint64_t v52 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v50 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621550);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v42 = (uint64_t)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_22EE7E050();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getTupleTypeMetadata2();
  sub_22EE7EE20();
  swift_getWitnessTable();
  uint64_t v14 = sub_22EE7EA60();
  uint64_t v45 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v42 - v15;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861C3F0);
  uint64_t v17 = sub_22EE7CEE0();
  uint64_t v47 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v44 = (char *)&v42 - v18;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268626CA0);
  uint64_t v19 = sub_22EE7CEE0();
  uint64_t v48 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v46 = (char *)&v42 - v23;
  sub_22EE7D4F0();
  uint64_t v58 = v43;
  uint64_t v59 = v49;
  uint64_t v60 = v57;
  sub_22EE7EA50();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x263F1A718], v10);
  uint64_t v24 = sub_22EE7DF40();
  uint64_t v25 = v42;
  __swift_storeEnumTagSinglePayload(v42, 1, 1, v24);
  sub_22EC38FB4((uint64_t)v13);
  sub_22EE7DFA0();
  sub_22EB0584C(v25, &qword_268621550);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v27 = v44;
  sub_22EE7E560();
  swift_release();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v16, v14);
  uint64_t v28 = v50;
  sub_22EE7CD90();
  uint64_t v29 = sub_22EADDD7C(&qword_26861C3E8, &qword_26861C3F0);
  v64[4] = WitnessTable;
  v64[5] = v29;
  uint64_t v30 = swift_getWitnessTable();
  uint64_t v31 = v51;
  sub_22EE7E360();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v28, v31);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v27, v17);
  uint64_t v32 = sub_22EADDD7C(&qword_268626CC0, &qword_268626CA0);
  v64[2] = v30;
  v64[3] = v32;
  uint64_t v33 = swift_getWitnessTable();
  unint64_t v34 = v46;
  sub_22EB69440(v21, v19, v33);
  uint64_t v35 = v48;
  uint64_t v36 = *(void (**)(char *, uint64_t))(v48 + 8);
  v36(v21, v19);
  uint64_t v37 = sub_22EE7D670();
  uint64_t v38 = (uint64_t)v53;
  uint64_t *v53 = v37;
  *(void *)(v38 + 8) = 0x4008000000000000;
  *(unsigned char *)(v38 + 16) = 0;
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_268626CC8);
  sub_22EDCBF68(v57, v38 + *(int *)(v39 + 44), (void (*)(void))type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration);
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v21, v34, v19);
  v64[0] = v21;
  uint64_t v40 = v54;
  sub_22EADAD08(v38, v54, &qword_268626CA8);
  v64[1] = v40;
  v63[0] = v19;
  v63[1] = v55;
  uint64_t v61 = v33;
  uint64_t v62 = sub_22EADDD7C(&qword_268626CD0, &qword_268626CA8);
  sub_22ED82348((uint64_t)v64, 2, (uint64_t)v63);
  sub_22EB0584C(v38, &qword_268626CA8);
  v36(v34, v19);
  sub_22EB0584C(v40, &qword_268626CA8);
  return ((uint64_t (*)(char *, uint64_t))v36)(v21, v19);
}

uint64_t sub_22EDC9200@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v25[1] = a4;
  uint64_t v7 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v25 - v11;
  uint64_t v13 = type metadata accessor for CompactSubscriptionPickerOptionLabel();
  sub_22EB69440(a1 + *(int *)(v13 + 40), a2, a3);
  uint64_t v14 = (uint64_t *)(a1 + *(int *)(v13 + 36));
  uint64_t v15 = v14[1];
  uint64_t v27 = *v14;
  uint64_t v28 = v15;
  sub_22EB051A0();
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_22EE7E150();
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  char v22 = v21 & 1;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, a2);
  uint64_t v27 = v16;
  uint64_t v28 = v18;
  char v29 = v22;
  uint64_t v30 = v20;
  v31[0] = v9;
  v31[1] = &v27;
  sub_22EADDF0C(v16, v18, v22);
  swift_bridgeObjectRetain();
  v26[0] = a2;
  v26[1] = MEMORY[0x263F1A830];
  v25[2] = a3;
  v25[3] = MEMORY[0x263F1A820];
  sub_22ED82348((uint64_t)v31, 2, (uint64_t)v26);
  sub_22EB051EC(v16, v18, v22);
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v7 + 8);
  v23(v12, a2);
  sub_22EB051EC(v27, v28, v29);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v23)(v9, a2);
}

uint64_t sub_22EDC9424@<X0>(uint64_t a1@<X8>)
{
  return sub_22EDC8A20(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_22EDC9430@<X0>(uint64_t a1@<X8>)
{
  uint64_t v135 = a1;
  uint64_t v115 = sub_22EE7DC20();
  uint64_t v113 = *(void *)(v115 - 8);
  MEMORY[0x270FA5388](v115);
  uint64_t v112 = (char *)&v100 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = type metadata accessor for CompactOptionLowerLabel.OtherOffer(0);
  MEMORY[0x270FA5388](v117);
  uint64_t v111 = (uint64_t)&v100 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_268626CF8);
  uint64_t v122 = *(void *)(v124 - 8);
  MEMORY[0x270FA5388](v124);
  uint64_t v119 = (char *)&v100 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_268626D00);
  MEMORY[0x270FA5388](v134);
  uint64_t v116 = (char *)&v100 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v123 = (uint64_t)&v100 - v6;
  uint64_t v7 = _s11PriceStringOMa(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v110 = (uint64_t)&v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v114 = (uint64_t)&v100 - v10;
  uint64_t v11 = _s22LocalizedPriceResourceVMa(0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v100 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_268626D08);
  MEMORY[0x270FA5388](v129);
  uint64_t v118 = (uint64_t)&v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_22EE7C220();
  uint64_t v106 = *(void *)(v107 - 8);
  MEMORY[0x270FA5388](v107);
  uint64_t v104 = (uint64_t)&v100 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v103 = (uint64_t)&v100 - v17;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_268626D10);
  uint64_t v120 = *(void *)(v18 - 8);
  uint64_t v121 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v109 = (uint64_t)&v100 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v105 = (uint64_t)&v100 - v21;
  MEMORY[0x270FA5388](v22);
  uint64_t v108 = (uint64_t)&v100 - v23;
  uint64_t v24 = _s20LocalizationResourceVMa();
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v100 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v127 = (uint64_t)&v100 - v28;
  uint64_t v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_268626D18);
  MEMORY[0x270FA5388](v131);
  uint64_t v133 = (uint64_t)&v100 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_268626D20);
  MEMORY[0x270FA5388](v126);
  uint64_t v31 = (char *)&v100 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_268626D28);
  MEMORY[0x270FA5388](v132);
  uint64_t v128 = (char *)&v100 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = type metadata accessor for CompactOptionLowerLabel.Standard(0);
  MEMORY[0x270FA5388](v130);
  unint64_t v34 = (char *)&v100 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v35);
  uint64_t v37 = (char *)&v100 - v36;
  MEMORY[0x270FA5388](v38);
  uint64_t v40 = (char *)&v100 - v39;
  uint64_t v41 = type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard(0);
  MEMORY[0x270FA5388](v41 - 8);
  uint64_t v125 = (uint64_t)&v100 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v43);
  uint64_t v45 = (char *)&v100 - v44;
  uint64_t v46 = type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration(0);
  MEMORY[0x270FA5388](v46);
  uint64_t v48 = (char *)&v100 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22EDCBF68((uint64_t)v136, (uint64_t)v48, (void (*)(void))type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v50 = (uint64_t)&v48[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268626C70) + 48)];
      uint64_t v51 = v125;
      sub_22EDCBF08((uint64_t)v48, v125, (void (*)(void))type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard);
      uint64_t v52 = v127;
      sub_22EDCBF08(v50, v127, (void (*)(void))_s20LocalizationResourceVMa);
      sub_22EDCBF68(v51, (uint64_t)v40, (void (*)(void))type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard);
      uint64_t v53 = (uint64_t *)&v40[*(int *)(v130 + 20)];
      uint64_t *v53 = swift_getKeyPath();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26861CDD0);
      swift_storeEnumTagMultiPayload();
      sub_22EDCBF08((uint64_t)v40, (uint64_t)v34, (void (*)(void))type metadata accessor for CompactOptionLowerLabel.Standard);
      sub_22EDCBF68(v52, (uint64_t)v26, (void (*)(void))_s20LocalizationResourceVMa);
      uint64_t v61 = v104;
      if (v26[*(int *)(v24 + 20)] == 6) {
        sub_22ED9196C(6, v54, v55, v56, v57, v58, v59, v60, v100, (uint64_t)v101, (uint64_t)v102, v103, v104, v105, v106, v107, v108, v109, v110,
      }
          v111);
      else {
        sub_22ED905C4();
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v106 + 32))(v103, v61, v107);
      uint64_t v84 = sub_22EE7E140();
      uint64_t v86 = v85;
      char v88 = v87 & 1;
      uint64_t v136 = _s20LocalizationResourceVMa;
      sub_22EDC6154((uint64_t)v26, (void (*)(void))_s20LocalizationResourceVMa);
      uint64_t v89 = v105;
      sub_22EDCA4A4(v84, v86, v88);
      sub_22EB051EC(v84, v86, v88);
      swift_bridgeObjectRelease();
      uint64_t v90 = v120;
      uint64_t v91 = v121;
      uint64_t v92 = v108;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v120 + 32))(v108, v89, v121);
      uint64_t v101 = v34;
      sub_22EDCBF68((uint64_t)v34, (uint64_t)v40, (void (*)(void))type metadata accessor for CompactOptionLowerLabel.Standard);
      uint64_t v93 = *(void (**)(uint64_t, uint64_t, uint64_t))(v90 + 16);
      uint64_t v94 = v109;
      v93(v109, v92, v91);
      uint64_t v95 = v118;
      sub_22EDCBF68((uint64_t)v40, v118, (void (*)(void))type metadata accessor for CompactOptionLowerLabel.Standard);
      uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_268626D58);
      v93(v95 + *(int *)(v96 + 48), v94, v91);
      int v97 = *(void (**)(uint64_t, uint64_t))(v90 + 8);
      v97(v94, v91);
      sub_22EDC6154((uint64_t)v40, (void (*)(void))type metadata accessor for CompactOptionLowerLabel.Standard);
      sub_22EADAD08(v95, (uint64_t)v31, &qword_268626D08);
      swift_storeEnumTagMultiPayload();
      sub_22EDD2C70(&qword_268626D40, (void (*)(uint64_t))type metadata accessor for CompactOptionLowerLabel.Standard);
      sub_22EADDD7C(&qword_268626D48, &qword_268626D08);
      uint64_t v98 = (uint64_t)v128;
      sub_22EE7D800();
      sub_22EB0584C(v95, &qword_268626D08);
      sub_22EADAD08(v98, v133, &qword_268626D28);
      swift_storeEnumTagMultiPayload();
      sub_22EDD2BA0();
      sub_22EDD2CB8();
      sub_22EE7D800();
      sub_22EB0584C(v98, &qword_268626D28);
      v97(v92, v91);
      sub_22EDC6154((uint64_t)v101, (void (*)(void))type metadata accessor for CompactOptionLowerLabel.Standard);
      sub_22EDC6154(v127, (void (*)(void))v136);
      uint64_t v64 = type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard;
      uint64_t v65 = v125;
    }
    else
    {
      uint64_t v66 = (uint64_t)&v48[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268626C78) + 48)];
      uint64_t v102 = v13;
      sub_22EDCBF08((uint64_t)v48, (uint64_t)v13, (void (*)(void))_s22LocalizedPriceResourceVMa);
      uint64_t v67 = v114;
      sub_22EDCBF08(v66, v114, (void (*)(void))_s11PriceStringOMa);
      uint64_t v68 = v111;
      sub_22EDCBF68((uint64_t)v13, v111, (void (*)(void))_s22LocalizedPriceResourceVMa);
      uint64_t v69 = v117;
      uint64_t v70 = (uint64_t *)(v68 + *(int *)(v117 + 20));
      *uint64_t v70 = swift_getKeyPath();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26861CD68);
      swift_storeEnumTagMultiPayload();
      uint64_t v71 = v112;
      sub_22EE7DBF0();
      uint64_t v72 = sub_22EDD2C70(&qword_268626D30, (void (*)(uint64_t))type metadata accessor for CompactOptionLowerLabel.OtherOffer);
      uint64_t v73 = v119;
      sub_22EE7E410();
      (*(void (**)(char *, uint64_t))(v113 + 8))(v71, v115);
      sub_22EDC6154(v68, (void (*)(void))type metadata accessor for CompactOptionLowerLabel.OtherOffer);
      uint64_t v74 = v110;
      uint64_t v75 = sub_22EDCBF68(v67, v110, (void (*)(void))_s11PriceStringOMa);
      uint64_t v76 = sub_22ECE508C(v75);
      uint64_t v78 = v77;
      char v80 = v79 & 1;
      sub_22EDC6154(v74, (void (*)(void))_s11PriceStringOMa);
      uint64_t v137 = v69;
      uint64_t v138 = v72;
      swift_getOpaqueTypeConformance2();
      uint64_t v81 = (uint64_t)v116;
      uint64_t v82 = v124;
      sub_22EE7E3C0();
      sub_22EB051EC(v76, v78, v80);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v122 + 8))(v73, v82);
      uint64_t v83 = v123;
      sub_22EDD2B38(v81, v123);
      sub_22EADAD08(v83, v133, &qword_268626D00);
      swift_storeEnumTagMultiPayload();
      sub_22EDD2BA0();
      sub_22EDD2CB8();
      sub_22EE7D800();
      sub_22EB0584C(v83, &qword_268626D00);
      sub_22EDC6154(v67, (void (*)(void))_s11PriceStringOMa);
      uint64_t v64 = _s22LocalizedPriceResourceVMa;
      uint64_t v65 = (uint64_t)v102;
    }
  }
  else
  {
    sub_22EDCBF08((uint64_t)v48, (uint64_t)v45, (void (*)(void))type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard);
    sub_22EDCBF68((uint64_t)v45, (uint64_t)v37, (void (*)(void))type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard);
    uint64_t v62 = (uint64_t *)&v37[*(int *)(v130 + 20)];
    uint64_t *v62 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26861CDD0);
    swift_storeEnumTagMultiPayload();
    sub_22EDCBF08((uint64_t)v37, (uint64_t)v40, (void (*)(void))type metadata accessor for CompactOptionLowerLabel.Standard);
    sub_22EDCBF68((uint64_t)v40, (uint64_t)v31, (void (*)(void))type metadata accessor for CompactOptionLowerLabel.Standard);
    swift_storeEnumTagMultiPayload();
    sub_22EDD2C70(&qword_268626D40, (void (*)(uint64_t))type metadata accessor for CompactOptionLowerLabel.Standard);
    sub_22EADDD7C(&qword_268626D48, &qword_268626D08);
    uint64_t v63 = (uint64_t)v128;
    sub_22EE7D800();
    sub_22EADAD08(v63, v133, &qword_268626D28);
    swift_storeEnumTagMultiPayload();
    sub_22EDD2BA0();
    sub_22EDD2CB8();
    sub_22EE7D800();
    sub_22EB0584C(v63, &qword_268626D28);
    sub_22EDC6154((uint64_t)v40, (void (*)(void))type metadata accessor for CompactOptionLowerLabel.Standard);
    uint64_t v64 = type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard;
    uint64_t v65 = (uint64_t)v45;
  }
  return sub_22EDC6154(v65, (void (*)(void))v64);
}

uint64_t sub_22EDCA4A4(uint64_t a1, uint64_t a2, char a3)
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_22EDCA5D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v45 = a1;
  uint64_t v3 = _s11PriceStringOMa(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v44 = (uint64_t)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_22EE7DC20();
  uint64_t v42 = *(void *)(v5 - 8);
  uint64_t v43 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621550);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_22EE7E050();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_268626DE8);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_268626DF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_268626DF8);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v40 = v21;
  uint64_t v41 = v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v39 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22EDCAADC(v2, (uint64_t)v17);
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F1A6C8], v11);
  uint64_t v25 = sub_22EE7DF40();
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 1, 1, v25);
  sub_22EC38FB4((uint64_t)v14);
  uint64_t v26 = sub_22EE7DFA0();
  sub_22EB0584C((uint64_t)v10, &qword_268621550);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t KeyPath = swift_getKeyPath();
  sub_22EADAD08((uint64_t)v17, (uint64_t)v20, &qword_268626DE8);
  uint64_t v28 = (uint64_t *)&v20[*(int *)(v18 + 36)];
  *uint64_t v28 = KeyPath;
  v28[1] = v26;
  sub_22EB0584C((uint64_t)v17, &qword_268626DE8);
  sub_22EE7DBF0();
  uint64_t v29 = sub_22EDD7690(&qword_268626E00, &qword_268626DF0, (void (*)(void))sub_22EDD7734);
  sub_22EE7E410();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v7, v43);
  sub_22EB0584C((uint64_t)v20, &qword_268626DF0);
  uint64_t v30 = type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard(0);
  uint64_t v31 = v44;
  uint64_t v32 = sub_22EDCBF68(v39 + *(int *)(v30 + 28), v44, (void (*)(void))_s11PriceStringOMa);
  uint64_t v33 = sub_22ECE508C(v32);
  uint64_t v35 = v34;
  LOBYTE(v7) = v36 & 1;
  sub_22EDC6154(v31, (void (*)(void))_s11PriceStringOMa);
  uint64_t v46 = v18;
  uint64_t v47 = v29;
  swift_getOpaqueTypeConformance2();
  uint64_t v37 = v40;
  sub_22EE7E3C0();
  sub_22EB051EC(v33, v35, (char)v7);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v24, v37);
}

uint64_t sub_22EDCAADC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v33[1] = a2;
  v33[0] = type metadata accessor for CompactOptionLowerLabel.Standard.MultilineLabel(0);
  MEMORY[0x270FA5388](v33[0]);
  uint64_t v4 = (void *)((char *)v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268626E28);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = _s11PriceStringOMa(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_22EE7DA60();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CompactOptionLowerLabel.Standard(0);
  sub_22EB19898();
  int v15 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v14, v11);
  int v16 = *MEMORY[0x263F19F00];
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (v15 == v16)
  {
    uint64_t v17 = type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard(0);
    uint64_t v18 = (uint64_t *)(a1 + *(int *)(v17 + 20));
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    uint64_t v21 = a1 + *(int *)(v17 + 24);
    uint64_t v22 = (char *)v4 + *(int *)(v33[0] + 20);
    uint64_t v23 = sub_22EE7C220();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v22, v21, v23);
    *uint64_t v4 = v19;
    v4[1] = v20;
    sub_22EDCBF68((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for CompactOptionLowerLabel.Standard.MultilineLabel);
    swift_storeEnumTagMultiPayload();
    sub_22EDD2C70(&qword_268626E20, (void (*)(uint64_t))type metadata accessor for CompactOptionLowerLabel.Standard.MultilineLabel);
    swift_bridgeObjectRetain();
    sub_22EE7D800();
    return sub_22EDC6154((uint64_t)v4, (void (*)(void))type metadata accessor for CompactOptionLowerLabel.Standard.MultilineLabel);
  }
  else
  {
    uint64_t v25 = sub_22EDCBF68(a1, (uint64_t)v10, (void (*)(void))_s11PriceStringOMa);
    uint64_t v26 = sub_22ECE508C(v25);
    uint64_t v28 = v27;
    char v30 = v29;
    uint64_t v32 = v31;
    sub_22EDC6154((uint64_t)v10, (void (*)(void))_s11PriceStringOMa);
    *(void *)uint64_t v7 = v26;
    *((void *)v7 + 1) = v28;
    v7[16] = v30 & 1;
    *((void *)v7 + 3) = v32;
    swift_storeEnumTagMultiPayload();
    sub_22EDD2C70(&qword_268626E20, (void (*)(uint64_t))type metadata accessor for CompactOptionLowerLabel.Standard.MultilineLabel);
    return sub_22EE7D800();
  }
}

uint64_t sub_22EDCAEC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621550);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_22EE7E050();
  uint64_t v14 = *(void *)(v13 - 8);
  __n128 v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v14 + 104))(v17, *MEMORY[0x263F1A6C8], v13, v15);
  uint64_t v18 = sub_22EE7DF40();
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 1, 1, v18);
  sub_22EC38FB4((uint64_t)v17);
  uint64_t v19 = sub_22EE7DFA0();
  sub_22EB0584C((uint64_t)v12, &qword_268621550);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  uint64_t KeyPath = swift_getKeyPath();
  a3 &= 1u;
  sub_22EADDF0C(a1, a2, a3);
  uint64_t result = swift_bridgeObjectRetain();
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  *(unsigned char *)(a5 + 16) = a3;
  *(void *)(a5 + 24) = a4;
  *(void *)(a5 + 32) = KeyPath;
  *(void *)(a5 + 40) = v19;
  return result;
}

__n128 sub_22EDCB0A0@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_22EE7D670();
  sub_22EDCB120(v1, (uint64_t)&v10);
  char v4 = v11;
  uint64_t v5 = v12;
  char v6 = v14;
  uint64_t v7 = v15;
  __n128 result = v10;
  long long v9 = v13;
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(__n128 *)(a1 + 24) = result;
  *(unsigned char *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 56) = v9;
  *(unsigned char *)(a1 + 72) = v6;
  *(void *)(a1 + 80) = v7;
  return result;
}

uint64_t sub_22EDCB120@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_22EE7C220();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *((void *)a1 + 1);
  v23[0] = *(void *)a1;
  v23[1] = v8;
  sub_22EB051A0();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_22EE7E150();
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  char v15 = v14 & 1;
  uint64_t v16 = type metadata accessor for CompactOptionLowerLabel.Standard.MultilineLabel(0);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, &a1[*(int *)(v16 + 20)], v4);
  uint64_t v17 = sub_22EE7E140();
  uint64_t v19 = v18;
  LOBYTE(v23[0]) = v15;
  LOBYTE(v5) = v20 & 1;
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(unsigned char *)(a2 + 16) = v15;
  *(void *)(a2 + 24) = v13;
  *(void *)(a2 + 32) = v17;
  *(void *)(a2 + 40) = v18;
  *(unsigned char *)(a2 + 48) = v20 & 1;
  *(void *)(a2 + 56) = v21;
  sub_22EADDF0C(v9, v11, v15);
  swift_bridgeObjectRetain();
  sub_22EADDF0C(v17, v19, v5);
  swift_bridgeObjectRetain();
  sub_22EB051EC(v17, v19, v5);
  swift_bridgeObjectRelease();
  sub_22EB051EC(v9, v11, v23[0]);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22EDCB2E0()
{
  sub_22EDD34BC();

  return sub_22EE7D4B0();
}

uint64_t sub_22EDCB328(uint64_t a1)
{
  uint64_t v2 = sub_22EE7DA60();
  __n128 v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v6 + 16))(v5, a1, v3);
  return sub_22EDCB3F0((uint64_t)v5);
}

uint64_t sub_22EDCB3F0(uint64_t a1)
{
  uint64_t v2 = sub_22EE7DA60();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v4 = MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))((char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v4);
  sub_22EDD34BC();
  sub_22EE7D4C0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t sub_22EDCB4F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_22EE7C400();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_22EE7C220();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v33 - v8;
  sub_22ECE5324();
  type metadata accessor for CompactOptionLowerLabel.OtherOffer(0);
  sub_22EB17740();
  sub_22EE7C210();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  uint64_t v36 = v3;
  v10(v6, v9, v3);
  uint64_t v11 = sub_22EE7FA20();
  unint64_t v13 = v12;
  v39[0] = 10;
  v39[1] = 0xE100000000000000;
  uint64_t v38 = v39;
  swift_bridgeObjectRetain();
  char v14 = (void *)sub_22EDD2E30(1, 1u, sub_22EDD7628, (uint64_t)v37, v11, v13);
  swift_bridgeObjectRelease();
  uint64_t v15 = v14[2];
  if (v15 == 1)
  {
    uint64_t v16 = v14[4];
    uint64_t v35 = v14[5];
    uint64_t v22 = v14[6];
    uint64_t v21 = v14[7];
    swift_bridgeObjectRetain();
    uint64_t v19 = v22;
    swift_bridgeObjectRelease();
  }
  else
  {
    if (v15)
    {
      uint64_t v21 = v14[7];
      uint64_t v16 = v14[4];
      uint64_t v30 = v14[5];
      uint64_t v34 = v14[6];
      uint64_t v35 = v30;
      uint64_t v23 = v14[8];
      uint64_t v25 = v14[9];
      uint64_t v27 = v14[10];
      uint64_t v29 = v14[11];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v19 = v34;
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    swift_bridgeObjectRelease();
    uint64_t v16 = MEMORY[0x230FAD3D0](0, 0xE000000000000000);
    uint64_t v35 = v17;
    uint64_t v19 = v18;
    uint64_t v21 = v20;
  }
  uint64_t v23 = MEMORY[0x230FAD3D0](0, 0xE000000000000000);
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
LABEL_7:
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v36);
  uint64_t v32 = v35;
  *a1 = v16;
  a1[1] = v32;
  a1[2] = v19;
  a1[3] = v21;
  a1[4] = v23;
  a1[5] = v25;
  a1[6] = v27;
  a1[7] = v29;
  return result;
}

uint64_t sub_22EDCB7A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_268626D10);
  uint64_t v35 = *(void *)(v39 - 8);
  uint64_t v1 = v35;
  MEMORY[0x270FA5388](v39);
  uint64_t v40 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v34 - v4;
  sub_22EDCB4F4(v44);
  long long v36 = v47;
  uint64_t v7 = v48;
  uint64_t v6 = v49;
  sub_22EDD75B0();
  uint64_t v8 = sub_22EE7E150();
  uint64_t v10 = v9;
  char v12 = v11 & 1;
  sub_22EDCAEC4(v8, v9, v11 & 1, v13, (uint64_t)v44);
  sub_22EB051EC(v8, v10, v12);
  swift_bridgeObjectRelease();
  long long v41 = v36;
  uint64_t v42 = v7;
  uint64_t v43 = v6;
  uint64_t v14 = sub_22EE7E150();
  uint64_t v16 = v15;
  LOBYTE(v10) = v17 & 1;
  uint64_t v37 = v5;
  sub_22EDCA4A4(v14, v15, v17 & 1);
  sub_22EB051EC(v14, v16, v10);
  swift_bridgeObjectRelease();
  uint64_t v19 = v44[0];
  uint64_t v18 = v44[1];
  uint64_t v34 = v44[0];
  char v20 = v45;
  uint64_t v21 = v46;
  uint64_t v22 = v47;
  *(void *)&long long v36 = v46;
  uint64_t v23 = *((void *)&v47 + 1);
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
  uint64_t v25 = v40;
  uint64_t v26 = v39;
  v24(v40, v5, v39);
  v20 &= 1u;
  uint64_t v27 = v38;
  *uint64_t v38 = v19;
  v27[1] = v18;
  uint64_t v28 = v18;
  *((unsigned char *)v27 + 16) = v20;
  v27[3] = v21;
  v27[4] = v22;
  v27[5] = v23;
  uint64_t v29 = v27;
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_268626DE0);
  v24((char *)v29 + *(int *)(v30 + 48), v25, v26);
  uint64_t v31 = v34;
  sub_22EADDF0C(v34, v28, v20);
  uint64_t v32 = *(void (**)(char *, uint64_t))(v35 + 8);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v32(v37, v26);
  v32(v40, v26);
  sub_22EB051EC(v31, v28, v20);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22EDCBA84()
{
  uint64_t v0 = sub_22EE7DA60();
  __swift_allocate_value_buffer(v0, qword_268626BD8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_268626BD8);
  uint64_t v2 = *MEMORY[0x263F19F08];
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

uint64_t sub_22EDCBB0C()
{
  if (qword_26861B918 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_22EE7DA60();

  return __swift_project_value_buffer(v0, (uint64_t)qword_268626BD8);
}

uint64_t sub_22EDCBB70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_22EDCBB0C();
  uint64_t v3 = sub_22EE7DA60();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v2, v3);
}

uint64_t sub_22EDCBBE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_22EDD2C70(&qword_26861DC58, MEMORY[0x263F19F18]);

  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

uint64_t sub_22EDCBC74()
{
  sub_22EDCBEB0();
  sub_22EE7D4B0();
  return v1;
}

uint64_t sub_22EDCBCB0()
{
  return sub_22EE7D4C0();
}

uint64_t sub_22EDCBCEC()
{
  sub_22EDCBEB0();
  sub_22EE7D4B0();
  if (v1) {
    return 0x4064000000000000;
  }
  else {
    return 0x7FF0000000000000;
  }
}

uint64_t sub_22EDCBD3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v5 = (a3 >> 8) & 1;
  sub_22EADEC74(a2, a3, BYTE1(a3) & 1);
  sub_22EB15B9C();
  uint64_t v7 = v6;
  uint64_t v9 = v8 & 1;
  sub_22EADED40(a2, a3, v5);
  uint64_t v10 = sub_22EE7ED70();
  return sub_22EADC38C(0, 1, 0, 1, v7, v9, 0, 1, 0, 1, 0, 1, v10, v11);
}

uint64_t sub_22EDCBE10(uint64_t a1)
{
  return sub_22EDCBD3C(a1, *(void *)v1, *(unsigned __int8 *)(v1 + 8) | (*(unsigned __int8 *)(v1 + 9) << 8));
}

uint64_t sub_22EDCBE2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_22EDCBCEC();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

unint64_t sub_22EDCBE64()
{
  unint64_t result = qword_268626CB0;
  if (!qword_268626CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268626CB0);
  }
  return result;
}

unint64_t sub_22EDCBEB0()
{
  unint64_t result = qword_268626CB8;
  if (!qword_268626CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268626CB8);
  }
  return result;
}

uint64_t sub_22EDCBEFC@<X0>(uint64_t a1@<X8>)
{
  return sub_22EDC9200(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_22EDCBF08(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_2_0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_22EDCBF68(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_2_0();
  uint64_t v4 = OUTLINED_FUNCTION_16_0();
  v5(v4);
  return a2;
}

ValueMetadata *_s38CompactPickerLabelConstainsMaxWidthKeyOMa()
{
  return &_s38CompactPickerLabelConstainsMaxWidthKeyON;
}

ValueMetadata *type metadata accessor for CompactPickerLabelMaxWidthModifier()
{
  return &type metadata for CompactPickerLabelMaxWidthModifier;
}

void *sub_22EDCBFDC(void *a1, void *a2)
{
  int v4 = *(_DWORD *)(*(void *)(type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration(0) - 8)
                 + 80);
  if ((v4 & 0x20000) == 0)
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 2)
    {
      if (EnumCaseMultiPayload == 1)
      {
        _s11PriceStringOMa(0);
        int v6 = swift_getEnumCaseMultiPayload();
        uint64_t v230 = a1;
        if (v6 == 2)
        {
          uint64_t v65 = sub_22EE7F6E0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v65 - 8) + 16))(a1, a2, v65);
          uint64_t v66 = _s20LocalizationResourceVMa();
          *(_OWORD *)((char *)a1 + *(int *)(v66 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v66 + 20));
          goto LABEL_35;
        }
        if (v6 != 1)
        {
          uint64_t v67 = a2[1];
          *a1 = *a2;
          a1[1] = v67;
          swift_bridgeObjectRetain();
          goto LABEL_35;
        }
        uint64_t v7 = a2[1];
        *a1 = *a2;
        a1[1] = v7;
        uint64_t v8 = _s22LocalizedPriceResourceVMa(0);
        uint64_t v9 = *(int *)(v8 + 20);
        char v231 = (char *)a1 + v9;
        uint64_t v10 = (char *)a2 + v9;
        uint64_t v11 = sub_22EE7F6E0();
        char v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v228 = v11;
        uint64_t v13 = v11;
        uint64_t v14 = v12;
        v12(v231, v10, v13);
        uint64_t v15 = *(int *)(v8 + 24);
        uint64_t v16 = (char *)a1 + v15;
        char v17 = (char *)a2 + v15;
        uint64_t v18 = _s22LocalizedPriceResourceV6FormatOMa(0);
        int v19 = swift_getEnumCaseMultiPayload();
        if (v19 == 3)
        {
          uint64_t v96 = *((void *)v17 + 1);
          *(void *)uint64_t v16 = *(void *)v17;
          *((void *)v16 + 1) = v96;
          int v97 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v98 = v97[5];
          uint64_t v213 = &v17[v98];
          int v221 = &v16[v98];
          uint64_t v99 = sub_22EE7F5D0();
          uint64_t v100 = *(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 16);
          swift_bridgeObjectRetain();
          v100(v221, v213, v99);
          v14(&v16[v97[6]], &v17[v97[6]], v228);
          *(void *)&v16[v97[7]] = *(void *)&v17[v97[7]];
        }
        else
        {
          if (v19 != 2)
          {
            memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
LABEL_35:
            swift_storeEnumTagMultiPayload();
            uint64_t v101 = (int *)type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard(0);
            uint64_t v102 = v101[5];
            uint64_t v103 = (void *)((char *)a1 + v102);
            uint64_t v104 = (void *)((char *)a2 + v102);
            uint64_t v105 = v104[1];
            *uint64_t v103 = *v104;
            v103[1] = v105;
            uint64_t v106 = v101[6];
            uint64_t v107 = (char *)a1 + v106;
            uint64_t v108 = (char *)a2 + v106;
            uint64_t v109 = sub_22EE7C220();
            uint64_t v110 = *(void (**)(char *, char *, uint64_t))(*(void *)(v109 - 8) + 16);
            swift_bridgeObjectRetain();
            v110(v107, v108, v109);
            uint64_t v111 = v101[7];
            uint64_t v112 = (void *)((char *)a1 + v111);
            uint64_t v113 = (void *)((char *)a2 + v111);
            int v114 = swift_getEnumCaseMultiPayload();
            if (v114 == 2)
            {
              uint64_t v132 = sub_22EE7F6E0();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v132 - 8) + 16))(v112, v113, v132);
              uint64_t v133 = _s20LocalizationResourceVMa();
              *(_OWORD *)((char *)v112 + *(int *)(v133 + 20)) = *(_OWORD *)((char *)v113 + *(int *)(v133 + 20));
            }
            else
            {
              if (v114 == 1)
              {
                uint64_t v115 = v113[1];
                *uint64_t v112 = *v113;
                v112[1] = v115;
                uint64_t v116 = _s22LocalizedPriceResourceVMa(0);
                uint64_t v117 = *(int *)(v116 + 20);
                uint64_t v118 = (char *)v112 + v117;
                uint64_t v119 = (char *)v113 + v117;
                uint64_t v120 = sub_22EE7F6E0();
                uint64_t v121 = *(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v214 = v120;
                v121(v118, v119, v120);
                uint64_t v122 = *(int *)(v116 + 24);
                uint64_t v123 = (char *)v112 + v122;
                uint64_t v124 = (char *)v113 + v122;
                uint64_t v125 = _s22LocalizedPriceResourceV6FormatOMa(0);
                int v126 = swift_getEnumCaseMultiPayload();
                if (v126 == 3)
                {
                  uint64_t v177 = *((void *)v124 + 1);
                  *(void *)uint64_t v123 = *(void *)v124;
                  *((void *)v123 + 1) = v177;
                  uint64_t v178 = (int *)_s15PricePropertiesVMa(0);
                  uint64_t v179 = v178[5];
                  uint64_t v180 = &v123[v179];
                  unint64_t v207 = &v124[v179];
                  uint64_t v181 = sub_22EE7F5D0();
                  char v197 = *(void (**)(char *, char *, uint64_t))(*(void *)(v181 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v197(v180, v207, v181);
                  v121(&v123[v178[6]], &v124[v178[6]], v214);
                  *(void *)&v123[v178[7]] = *(void *)&v124[v178[7]];
                }
                else
                {
                  if (v126 != 2)
                  {
                    memcpy(v123, v124, *(void *)(*(void *)(v125 - 8) + 64));
                    goto LABEL_58;
                  }
                  uint64_t v127 = *((void *)v124 + 1);
                  *(void *)uint64_t v123 = *(void *)v124;
                  *((void *)v123 + 1) = v127;
                  uint64_t v128 = (int *)_s15PricePropertiesVMa(0);
                  uint64_t v129 = v128[5];
                  unint64_t v194 = &v124[v129];
                  uint64_t v203 = &v123[v129];
                  uint64_t v130 = sub_22EE7F5D0();
                  uint64_t v192 = *(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v192(v203, v194, v130);
                  v121(&v123[v128[6]], &v124[v128[6]], v214);
                  *(void *)&v123[v128[7]] = *(void *)&v124[v128[7]];
                  uint64_t v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
                  v123[*(int *)(v131 + 48)] = v124[*(int *)(v131 + 48)];
                }
                swift_storeEnumTagMultiPayload();
LABEL_58:
                a1 = v230;
                goto LABEL_59;
              }
              uint64_t v134 = v113[1];
              *uint64_t v112 = *v113;
              v112[1] = v134;
              swift_bridgeObjectRetain();
            }
LABEL_59:
            swift_storeEnumTagMultiPayload();
            uint64_t v182 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268626C70) + 48);
            uint64_t v183 = (char *)a1 + v182;
            uint64_t v184 = (char *)a2 + v182;
            uint64_t v185 = sub_22EE7F6E0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v185 - 8) + 16))(v183, v184, v185);
            uint64_t v186 = _s20LocalizationResourceVMa();
            *(_OWORD *)&v183[*(int *)(v186 + 20)] = *(_OWORD *)&v184[*(int *)(v186 + 20)];
LABEL_63:
            swift_storeEnumTagMultiPayload();
            return a1;
          }
          uint64_t v20 = *((void *)v17 + 1);
          *(void *)uint64_t v16 = *(void *)v17;
          *((void *)v16 + 1) = v20;
          uint64_t v21 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v22 = v21[5];
          unsigned int v209 = &v17[v22];
          uint64_t v218 = &v16[v22];
          uint64_t v23 = sub_22EE7F5D0();
          uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
          swift_bridgeObjectRetain();
          v24(v218, v209, v23);
          v14(&v16[v21[6]], &v17[v21[6]], v228);
          *(void *)&v16[v21[7]] = *(void *)&v17[v21[7]];
          uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
          v16[*(int *)(v25 + 48)] = v17[*(int *)(v25 + 48)];
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_35;
      }
      _s11PriceStringOMa(0);
      int v45 = swift_getEnumCaseMultiPayload();
      if (v45 == 2)
      {
        uint64_t v91 = sub_22EE7F6E0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v91 - 8) + 16))(a1, a2, v91);
        uint64_t v92 = _s20LocalizationResourceVMa();
        *(_OWORD *)((char *)a1 + *(int *)(v92 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v92 + 20));
        goto LABEL_45;
      }
      if (v45 != 1)
      {
        uint64_t v95 = a2[1];
        *a1 = *a2;
        a1[1] = v95;
        swift_bridgeObjectRetain();
        goto LABEL_45;
      }
      uint64_t v46 = a2[1];
      *a1 = *a2;
      a1[1] = v46;
      uint64_t v47 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v48 = *(int *)(v47 + 20);
      uint64_t v49 = (char *)a1 + v48;
      uint64_t v50 = (char *)a2 + v48;
      uint64_t v51 = sub_22EE7F6E0();
      uint64_t v52 = *(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v225 = v51;
      uint64_t v53 = v51;
      uint64_t v54 = v52;
      v52(v49, v50, v53);
      uint64_t v55 = *(int *)(v47 + 24);
      uint64_t v56 = (char *)a1 + v55;
      uint64_t v57 = (char *)a2 + v55;
      uint64_t v58 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v59 = swift_getEnumCaseMultiPayload();
      if (v59 == 3)
      {
        uint64_t v135 = *((void *)v57 + 1);
        *(void *)uint64_t v56 = *(void *)v57;
        *((void *)v56 + 1) = v135;
        uint64_t v136 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v137 = v136[5];
        uint64_t v215 = &v57[v137];
        char v222 = &v56[v137];
        uint64_t v138 = sub_22EE7F5D0();
        uint64_t v204 = *(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 16);
        swift_bridgeObjectRetain();
        v204(v222, v215, v138);
        v54(&v56[v136[6]], &v57[v136[6]], v225);
        *(void *)&v56[v136[7]] = *(void *)&v57[v136[7]];
      }
      else
      {
        if (v59 != 2)
        {
          memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
LABEL_45:
          swift_storeEnumTagMultiPayload();
          uint64_t v139 = (int *)type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard(0);
          uint64_t v140 = v139[5];
          uint64_t v141 = (void *)((char *)a1 + v140);
          uint64_t v142 = (void *)((char *)a2 + v140);
          uint64_t v143 = v142[1];
          *uint64_t v141 = *v142;
          v141[1] = v143;
          uint64_t v144 = v139[6];
          uint64_t v145 = (char *)a1 + v144;
          uint64_t v146 = (char *)a2 + v144;
          uint64_t v147 = sub_22EE7C220();
          uint64_t v148 = *(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 16);
          swift_bridgeObjectRetain();
          v148(v145, v146, v147);
          uint64_t v149 = v139[7];
          uint64_t v150 = (void *)((char *)a1 + v149);
          uint64_t v151 = (void *)((char *)a2 + v149);
          int v152 = swift_getEnumCaseMultiPayload();
          if (v152 == 2)
          {
            uint64_t v170 = sub_22EE7F6E0();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v170 - 8) + 16))(v150, v151, v170);
            uint64_t v171 = _s20LocalizationResourceVMa();
            *(_OWORD *)((char *)v150 + *(int *)(v171 + 20)) = *(_OWORD *)((char *)v151 + *(int *)(v171 + 20));
          }
          else
          {
            if (v152 == 1)
            {
              uint64_t v153 = v151[1];
              *uint64_t v150 = *v151;
              v150[1] = v153;
              uint64_t v154 = _s22LocalizedPriceResourceVMa(0);
              uint64_t v155 = *(int *)(v154 + 20);
              uint64_t v156 = (char *)v150 + v155;
              int v157 = (char *)v151 + v155;
              uint64_t v158 = sub_22EE7F6E0();
              uint64_t v159 = *(void (**)(char *, char *, uint64_t))(*(void *)(v158 - 8) + 16);
              swift_bridgeObjectRetain();
              uint64_t v223 = v158;
              v159(v156, v157, v158);
              uint64_t v160 = *(int *)(v154 + 24);
              uint64_t v161 = (char *)v150 + v160;
              unsigned int v162 = (char *)v151 + v160;
              uint64_t v163 = _s22LocalizedPriceResourceV6FormatOMa(0);
              int v164 = swift_getEnumCaseMultiPayload();
              if (v164 == 3)
              {
                uint64_t v187 = *((void *)v162 + 1);
                *(void *)uint64_t v161 = *(void *)v162;
                *((void *)v161 + 1) = v187;
                uint64_t v188 = (int *)_s15PricePropertiesVMa(0);
                uint64_t v189 = v188[5];
                unsigned int v208 = &v162[v189];
                unint64_t v217 = &v161[v189];
                uint64_t v190 = sub_22EE7F5D0();
                uint64_t v198 = *(void (**)(char *, char *, uint64_t))(*(void *)(v190 - 8) + 16);
                swift_bridgeObjectRetain();
                v198(v217, v208, v190);
                v159(&v161[v188[6]], &v162[v188[6]], v223);
                *(void *)&v161[v188[7]] = *(void *)&v162[v188[7]];
              }
              else
              {
                if (v164 != 2)
                {
                  memcpy(v161, v162, *(void *)(*(void *)(v163 - 8) + 64));
                  goto LABEL_62;
                }
                uint64_t v165 = *((void *)v162 + 1);
                *(void *)uint64_t v161 = *(void *)v162;
                *((void *)v161 + 1) = v165;
                uint64_t v166 = (int *)_s15PricePropertiesVMa(0);
                uint64_t v167 = v166[5];
                uint64_t v205 = &v162[v167];
                uint64_t v216 = &v161[v167];
                uint64_t v168 = sub_22EE7F5D0();
                uint64_t v195 = *(void (**)(char *, char *, uint64_t))(*(void *)(v168 - 8) + 16);
                swift_bridgeObjectRetain();
                v195(v216, v205, v168);
                v159(&v161[v166[6]], &v162[v166[6]], v223);
                *(void *)&v161[v166[7]] = *(void *)&v162[v166[7]];
                uint64_t v169 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
                v161[*(int *)(v169 + 48)] = v162[*(int *)(v169 + 48)];
              }
LABEL_53:
              swift_storeEnumTagMultiPayload();
              goto LABEL_62;
            }
            uint64_t v172 = v151[1];
            *uint64_t v150 = *v151;
            v150[1] = v172;
            swift_bridgeObjectRetain();
          }
          goto LABEL_62;
        }
        uint64_t v60 = *((void *)v57 + 1);
        *(void *)uint64_t v56 = *(void *)v57;
        *((void *)v56 + 1) = v60;
        uint64_t v61 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v62 = v61[5];
        uint64_t v211 = &v57[v62];
        unsigned int v219 = &v56[v62];
        uint64_t v63 = sub_22EE7F5D0();
        unint64_t v200 = *(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16);
        swift_bridgeObjectRetain();
        v200(v219, v211, v63);
        v54(&v56[v61[6]], &v57[v61[6]], v225);
        *(void *)&v56[v61[7]] = *(void *)&v57[v61[7]];
        uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v56[*(int *)(v64 + 48)] = v57[*(int *)(v64 + 48)];
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_45;
    }
    uint64_t v27 = a2[1];
    *a1 = *a2;
    a1[1] = v27;
    uint64_t v28 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v29 = *(int *)(v28 + 20);
    uint64_t v30 = (char *)a1 + v29;
    uint64_t v31 = (char *)a2 + v29;
    uint64_t v32 = sub_22EE7F6E0();
    uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16);
    swift_bridgeObjectRetain();
    v33(v30, v31, v32);
    uint64_t v224 = v28;
    uint64_t v34 = *(int *)(v28 + 24);
    uint64_t v35 = (char *)a1 + v34;
    long long v36 = (char *)a2 + v34;
    uint64_t v37 = _s22LocalizedPriceResourceV6FormatOMa(0);
    int v38 = swift_getEnumCaseMultiPayload();
    uint64_t v229 = v32;
    if (v38 == 3)
    {
      uint64_t v220 = v33;
      uint64_t v68 = *((void *)v36 + 1);
      *(void *)uint64_t v35 = *(void *)v36;
      *((void *)v35 + 1) = v68;
      uint64_t v69 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v70 = v69[5];
      unint64_t v201 = &v36[v70];
      int v212 = &v35[v70];
      uint64_t v71 = sub_22EE7F5D0();
      uint64_t v72 = *(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16);
      uint64_t v33 = v220;
      swift_bridgeObjectRetain();
      v72(v212, v201, v71);
      uint64_t v32 = v229;
      v220(&v35[v69[6]], &v36[v69[6]], v229);
      *(void *)&v35[v69[7]] = *(void *)&v36[v69[7]];
    }
    else
    {
      if (v38 != 2)
      {
        memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
LABEL_23:
        uint64_t v73 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268626C78) + 48);
        uint64_t v74 = (char *)a1 + v73;
        uint64_t v75 = (char *)a2 + v73;
        _s11PriceStringOMa(0);
        int v76 = swift_getEnumCaseMultiPayload();
        if (v76 == 2)
        {
          v33(v74, v75, v32);
          uint64_t v93 = _s20LocalizationResourceVMa();
          *(_OWORD *)&v74[*(int *)(v93 + 20)] = *(_OWORD *)&v75[*(int *)(v93 + 20)];
        }
        else
        {
          if (v76 == 1)
          {
            uint64_t v77 = *((void *)v75 + 1);
            *(void *)uint64_t v74 = *(void *)v75;
            *((void *)v74 + 1) = v77;
            uint64_t v78 = *(int *)(v224 + 20);
            char v79 = v33;
            char v80 = &v74[v78];
            uint64_t v81 = &v75[v78];
            swift_bridgeObjectRetain();
            v79(v80, v81, v32);
            uint64_t v82 = *(int *)(v224 + 24);
            uint64_t v83 = &v74[v82];
            uint64_t v84 = &v75[v82];
            int v85 = swift_getEnumCaseMultiPayload();
            if (v85 == 3)
            {
              uint64_t v173 = *((void *)v84 + 1);
              *(void *)uint64_t v83 = *(void *)v84;
              *((void *)v83 + 1) = v173;
              uint64_t v174 = (int *)_s15PricePropertiesVMa(0);
              uint64_t v175 = v174[5];
              unint64_t v227 = &v83[v175];
              unint64_t v206 = &v84[v175];
              uint64_t v176 = sub_22EE7F5D0();
              unint64_t v196 = *(void (**)(char *, char *, uint64_t))(*(void *)(v176 - 8) + 16);
              swift_bridgeObjectRetain();
              v196(v227, v206, v176);
              v79(&v83[v174[6]], &v84[v174[6]], v229);
              *(void *)&v83[v174[7]] = *(void *)&v84[v174[7]];
            }
            else
            {
              if (v85 != 2)
              {
                memcpy(v83, v84, *(void *)(*(void *)(v37 - 8) + 64));
                goto LABEL_62;
              }
              uint64_t v86 = *((void *)v84 + 1);
              *(void *)uint64_t v83 = *(void *)v84;
              *((void *)v83 + 1) = v86;
              char v87 = (int *)_s15PricePropertiesVMa(0);
              uint64_t v88 = v87[5];
              uint64_t v226 = &v83[v88];
              uint64_t v202 = &v84[v88];
              uint64_t v89 = sub_22EE7F5D0();
              unint64_t v193 = *(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 16);
              swift_bridgeObjectRetain();
              v193(v226, v202, v89);
              v79(&v83[v87[6]], &v84[v87[6]], v229);
              *(void *)&v83[v87[7]] = *(void *)&v84[v87[7]];
              uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
              v83[*(int *)(v90 + 48)] = v84[*(int *)(v90 + 48)];
            }
            goto LABEL_53;
          }
          uint64_t v94 = *((void *)v75 + 1);
          *(void *)uint64_t v74 = *(void *)v75;
          *((void *)v74 + 1) = v94;
          swift_bridgeObjectRetain();
        }
LABEL_62:
        swift_storeEnumTagMultiPayload();
        goto LABEL_63;
      }
      uint64_t v39 = *((void *)v36 + 1);
      *(void *)uint64_t v35 = *(void *)v36;
      *((void *)v35 + 1) = v39;
      uint64_t v40 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v41 = v40[5];
      unint64_t v199 = &v36[v41];
      uint64_t v210 = &v35[v41];
      uint64_t v42 = sub_22EE7F5D0();
      uint64_t v43 = *(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16);
      swift_bridgeObjectRetain();
      v43(v210, v199, v42);
      uint64_t v32 = v229;
      v33(&v35[v40[6]], &v36[v40[6]], v229);
      *(void *)&v35[v40[7]] = *(void *)&v36[v40[7]];
      uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
      v35[*(int *)(v44 + 48)] = v36[*(int *)(v44 + 48)];
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_23;
  }
  uint64_t v26 = *a2;
  *a1 = *a2;
  a1 = (void *)(v26 + ((v4 + 16) & ~(unint64_t)v4));
  swift_retain();
  return a1;
}

uint64_t sub_22EDCD320(uint64_t a1)
{
  type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v6 = a1 + *(int *)(v5 + 20);
    uint64_t v7 = sub_22EE7F6E0();
    uint64_t v70 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    v70(v6, v7);
    uint64_t v8 = a1 + *(int *)(v5 + 24);
    _s22LocalizedPriceResourceV6FormatOMa(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3 || EnumCaseMultiPayload == 2)
    {
      swift_bridgeObjectRelease();
      uint64_t v10 = _s15PricePropertiesVMa(0);
      uint64_t v11 = v8 + *(int *)(v10 + 20);
      uint64_t v12 = sub_22EE7F5D0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
      v70(v8 + *(int *)(v10 + 24), v7);
    }
    uint64_t v13 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268626C78) + 48);
    _s11PriceStringOMa(0);
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result == 2)
    {
      uint64_t v38 = v13;
    }
    else
    {
      if (result != 1)
      {
        if (result) {
          return result;
        }
LABEL_44:
        return swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      v70(v13 + *(int *)(v5 + 20), v7);
      uint64_t v39 = v13 + *(int *)(v5 + 24);
      uint64_t result = swift_getEnumCaseMultiPayload();
      if (result != 3 && result != 2) {
        return result;
      }
      swift_bridgeObjectRelease();
      uint64_t v40 = _s15PricePropertiesVMa(0);
      uint64_t v41 = v39 + *(int *)(v40 + 20);
      uint64_t v42 = sub_22EE7F5D0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v41, v42);
      uint64_t v38 = v39 + *(int *)(v40 + 24);
    }
    uint64_t v43 = v7;
  }
  else
  {
    if (result == 1)
    {
      _s11PriceStringOMa(0);
      int v4 = swift_getEnumCaseMultiPayload();
      switch(v4)
      {
        case 2:
          uint64_t v23 = sub_22EE7F6E0();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(a1, v23);
          break;
        case 1:
          swift_bridgeObjectRelease();
          uint64_t v24 = _s22LocalizedPriceResourceVMa(0);
          uint64_t v25 = a1 + *(int *)(v24 + 20);
          uint64_t v26 = sub_22EE7F6E0();
          uint64_t v27 = *(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8);
          v27(v25, v26);
          uint64_t v28 = a1 + *(int *)(v24 + 24);
          _s22LocalizedPriceResourceV6FormatOMa(0);
          int v29 = swift_getEnumCaseMultiPayload();
          if (v29 == 3 || v29 == 2)
          {
            swift_bridgeObjectRelease();
            uint64_t v30 = _s15PricePropertiesVMa(0);
            uint64_t v31 = v28 + *(int *)(v30 + 20);
            uint64_t v32 = sub_22EE7F5D0();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v31, v32);
            v27(v28 + *(int *)(v30 + 24), v26);
          }
          break;
        case 0:
          swift_bridgeObjectRelease();
          break;
      }
      uint64_t v33 = type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard(0);
      swift_bridgeObjectRelease();
      uint64_t v34 = a1 + *(int *)(v33 + 24);
      uint64_t v35 = sub_22EE7C220();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(v34, v35);
      uint64_t v36 = a1 + *(int *)(v33 + 28);
      int v37 = swift_getEnumCaseMultiPayload();
      switch(v37)
      {
        case 2:
          uint64_t v44 = sub_22EE7F6E0();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v44 - 8) + 8))(v36, v44);
          break;
        case 1:
          swift_bridgeObjectRelease();
          uint64_t v45 = _s22LocalizedPriceResourceVMa(0);
          uint64_t v46 = v36 + *(int *)(v45 + 20);
          uint64_t v47 = sub_22EE7F6E0();
          uint64_t v48 = *(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8);
          v48(v46, v47);
          uint64_t v49 = v36 + *(int *)(v45 + 24);
          _s22LocalizedPriceResourceV6FormatOMa(0);
          int v50 = swift_getEnumCaseMultiPayload();
          if (v50 == 3 || v50 == 2)
          {
            swift_bridgeObjectRelease();
            uint64_t v51 = _s15PricePropertiesVMa(0);
            uint64_t v52 = v49 + *(int *)(v51 + 20);
            uint64_t v53 = sub_22EE7F5D0();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v53 - 8) + 8))(v52, v53);
            v48(v49 + *(int *)(v51 + 24), v47);
          }
          break;
        case 0:
          swift_bridgeObjectRelease();
          break;
      }
      uint64_t v54 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268626C70) + 48);
      uint64_t v55 = sub_22EE7F6E0();
      uint64_t v56 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v55 - 8) + 8);
      uint64_t v43 = v55;
      uint64_t v38 = v54;
      goto LABEL_53;
    }
    if (result) {
      return result;
    }
    _s11PriceStringOMa(0);
    int v3 = swift_getEnumCaseMultiPayload();
    switch(v3)
    {
      case 2:
        uint64_t v57 = sub_22EE7F6E0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v57 - 8) + 8))(a1, v57);
        break;
      case 1:
        swift_bridgeObjectRelease();
        uint64_t v14 = _s22LocalizedPriceResourceVMa(0);
        uint64_t v15 = a1 + *(int *)(v14 + 20);
        uint64_t v16 = sub_22EE7F6E0();
        char v17 = *(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);
        v17(v15, v16);
        uint64_t v18 = a1 + *(int *)(v14 + 24);
        _s22LocalizedPriceResourceV6FormatOMa(0);
        int v19 = swift_getEnumCaseMultiPayload();
        if (v19 == 3 || v19 == 2)
        {
          swift_bridgeObjectRelease();
          uint64_t v20 = _s15PricePropertiesVMa(0);
          uint64_t v21 = v18 + *(int *)(v20 + 20);
          uint64_t v22 = sub_22EE7F5D0();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
          v17(v18 + *(int *)(v20 + 24), v16);
        }
        break;
      case 0:
        swift_bridgeObjectRelease();
        break;
    }
    uint64_t v58 = type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard(0);
    swift_bridgeObjectRelease();
    uint64_t v59 = a1 + *(int *)(v58 + 24);
    uint64_t v60 = sub_22EE7C220();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v60 - 8) + 8))(v59, v60);
    uint64_t v61 = a1 + *(int *)(v58 + 28);
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result == 2)
    {
      uint64_t v69 = sub_22EE7F6E0();
      uint64_t v56 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v69 - 8) + 8);
      uint64_t v43 = v69;
      uint64_t v38 = v61;
      goto LABEL_53;
    }
    if (result != 1)
    {
      if (result) {
        return result;
      }
      goto LABEL_44;
    }
    swift_bridgeObjectRelease();
    uint64_t v62 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v63 = v61 + *(int *)(v62 + 20);
    uint64_t v64 = sub_22EE7F6E0();
    uint64_t v70 = *(void (**)(uint64_t, uint64_t))(*(void *)(v64 - 8) + 8);
    v70(v63, v64);
    uint64_t v65 = v61 + *(int *)(v62 + 24);
    _s22LocalizedPriceResourceV6FormatOMa(0);
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result != 3 && result != 2) {
      return result;
    }
    swift_bridgeObjectRelease();
    uint64_t v66 = _s15PricePropertiesVMa(0);
    uint64_t v67 = v65 + *(int *)(v66 + 20);
    uint64_t v68 = sub_22EE7F5D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v68 - 8) + 8))(v67, v68);
    uint64_t v38 = v65 + *(int *)(v66 + 24);
    uint64_t v43 = v64;
  }
  uint64_t v56 = (uint64_t (*)(uint64_t, uint64_t))v70;
LABEL_53:

  return v56(v38, v43);
}

void *sub_22EDCDC48(void *a1, void *a2)
{
  type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v23 = a2[1];
    *a1 = *a2;
    a1[1] = v23;
    uint64_t v24 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v25 = *(int *)(v24 + 20);
    uint64_t v26 = (char *)a1 + v25;
    uint64_t v27 = (char *)a2 + v25;
    uint64_t v28 = sub_22EE7F6E0();
    int v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
    swift_bridgeObjectRetain();
    v29(v26, v27, v28);
    uint64_t v225 = v24;
    uint64_t v30 = *(int *)(v24 + 24);
    uint64_t v31 = (char *)a1 + v30;
    uint64_t v32 = (char *)a2 + v30;
    uint64_t v33 = _s22LocalizedPriceResourceV6FormatOMa(0);
    int v34 = swift_getEnumCaseMultiPayload();
    if (v34 == 3)
    {
      uint64_t v66 = *((void *)v32 + 1);
      *(void *)uint64_t v31 = *(void *)v32;
      *((void *)v31 + 1) = v66;
      uint64_t v67 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v68 = v67[5];
      uint64_t v220 = &v31[v68];
      unint64_t v201 = &v32[v68];
      uint64_t v211 = v33;
      uint64_t v69 = v28;
      uint64_t v70 = sub_22EE7F5D0();
      uint64_t v71 = *(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v72 = v70;
      uint64_t v28 = v69;
      uint64_t v33 = v211;
      v71(v220, v201, v72);
      v29(&v31[v67[6]], &v32[v67[6]], v28);
      *(void *)&v31[v67[7]] = *(void *)&v32[v67[7]];
    }
    else
    {
      if (v34 != 2)
      {
        memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
LABEL_21:
        uint64_t v73 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268626C78) + 48);
        uint64_t v74 = (char *)a1 + v73;
        uint64_t v75 = (char *)a2 + v73;
        _s11PriceStringOMa(0);
        int v76 = swift_getEnumCaseMultiPayload();
        if (v76 == 2)
        {
          v29(v74, v75, v28);
          uint64_t v93 = _s20LocalizationResourceVMa();
          *(_OWORD *)&v74[*(int *)(v93 + 20)] = *(_OWORD *)&v75[*(int *)(v93 + 20)];
        }
        else if (v76 == 1)
        {
          uint64_t v77 = *((void *)v75 + 1);
          *(void *)uint64_t v74 = *(void *)v75;
          *((void *)v74 + 1) = v77;
          uint64_t v78 = *(int *)(v225 + 20);
          char v79 = &v74[v78];
          char v80 = v29;
          uint64_t v81 = &v75[v78];
          swift_bridgeObjectRetain();
          v80(v79, v81, v28);
          uint64_t v82 = *(int *)(v225 + 24);
          uint64_t v83 = &v74[v82];
          uint64_t v84 = &v75[v82];
          int v85 = swift_getEnumCaseMultiPayload();
          if (v85 == 3)
          {
            uint64_t v174 = *((void *)v84 + 1);
            *(void *)uint64_t v83 = *(void *)v84;
            *((void *)v83 + 1) = v174;
            uint64_t v175 = (int *)_s15PricePropertiesVMa(0);
            uint64_t v176 = v175[5];
            uint64_t v230 = &v83[v176];
            uint64_t v205 = &v84[v176];
            uint64_t v177 = sub_22EE7F5D0();
            uint64_t v198 = *(void (**)(char *, char *, uint64_t))(*(void *)(v177 - 8) + 16);
            swift_bridgeObjectRetain();
            v198(v230, v205, v177);
            v80(&v83[v175[6]], &v84[v175[6]], v28);
            *(void *)&v83[v175[7]] = *(void *)&v84[v175[7]];
          }
          else
          {
            if (v85 != 2)
            {
              memcpy(v83, v84, *(void *)(*(void *)(v33 - 8) + 64));
              goto LABEL_58;
            }
            uint64_t v86 = *((void *)v84 + 1);
            *(void *)uint64_t v83 = *(void *)v84;
            *((void *)v83 + 1) = v86;
            char v87 = (int *)_s15PricePropertiesVMa(0);
            uint64_t v88 = v87[5];
            unint64_t v227 = &v83[v88];
            uint64_t v202 = &v84[v88];
            uint64_t v89 = sub_22EE7F5D0();
            uint64_t v195 = *(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 16);
            swift_bridgeObjectRetain();
            v195(v227, v202, v89);
            v80(&v83[v87[6]], &v84[v87[6]], v28);
            *(void *)&v83[v87[7]] = *(void *)&v84[v87[7]];
            uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
            v83[*(int *)(v90 + 48)] = v84[*(int *)(v90 + 48)];
          }
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          uint64_t v94 = *((void *)v75 + 1);
          *(void *)uint64_t v74 = *(void *)v75;
          *((void *)v74 + 1) = v94;
          swift_bridgeObjectRetain();
        }
LABEL_58:
        swift_storeEnumTagMultiPayload();
        goto LABEL_59;
      }
      uint64_t v35 = *((void *)v32 + 1);
      *(void *)uint64_t v31 = *(void *)v32;
      *((void *)v31 + 1) = v35;
      uint64_t v36 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v37 = v36[5];
      uint64_t v218 = v28;
      uint64_t v38 = &v31[v37];
      uint64_t v39 = &v32[v37];
      unsigned int v209 = v29;
      uint64_t v40 = sub_22EE7F5D0();
      unint64_t v200 = *(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v41 = v38;
      uint64_t v42 = v40;
      int v29 = v209;
      uint64_t v28 = v218;
      v200(v41, v39, v42);
      v209(&v31[v36[6]], &v32[v36[6]], v218);
      *(void *)&v31[v36[7]] = *(void *)&v32[v36[7]];
      uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
      v31[*(int *)(v43 + 48)] = v32[*(int *)(v43 + 48)];
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_21;
  }
  if (EnumCaseMultiPayload != 1)
  {
    _s11PriceStringOMa(0);
    int v44 = swift_getEnumCaseMultiPayload();
    if (v44 == 2)
    {
      uint64_t v91 = sub_22EE7F6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v91 - 8) + 16))(a1, a2, v91);
      uint64_t v92 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)a1 + *(int *)(v92 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v92 + 20));
      goto LABEL_43;
    }
    if (v44 != 1)
    {
      uint64_t v95 = a2[1];
      *a1 = *a2;
      a1[1] = v95;
      swift_bridgeObjectRetain();
      goto LABEL_43;
    }
    uint64_t v45 = a2[1];
    *a1 = *a2;
    a1[1] = v45;
    uint64_t v46 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v47 = *(int *)(v46 + 20);
    uint64_t v48 = (char *)a1 + v47;
    uint64_t v49 = (char *)a2 + v47;
    uint64_t v50 = sub_22EE7F6E0();
    uint64_t v51 = *(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16);
    swift_bridgeObjectRetain();
    v51(v48, v49, v50);
    uint64_t v52 = *(int *)(v46 + 24);
    uint64_t v53 = (char *)a1 + v52;
    uint64_t v54 = (char *)a2 + v52;
    uint64_t v55 = _s22LocalizedPriceResourceV6FormatOMa(0);
    int v56 = swift_getEnumCaseMultiPayload();
    if (v56 == 3)
    {
      uint64_t v135 = *((void *)v54 + 1);
      *(void *)uint64_t v53 = *(void *)v54;
      *((void *)v53 + 1) = v135;
      char v231 = v51;
      uint64_t v136 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v137 = v136[5];
      char v222 = &v54[v137];
      uint64_t v229 = &v53[v137];
      uint64_t v138 = sub_22EE7F5D0();
      uint64_t v214 = *(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 16);
      swift_bridgeObjectRetain();
      v214(v229, v222, v138);
      v231(&v53[v136[6]], &v54[v136[6]], v50);
      *(void *)&v53[v136[7]] = *(void *)&v54[v136[7]];
    }
    else
    {
      if (v56 != 2)
      {
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
LABEL_43:
        swift_storeEnumTagMultiPayload();
        uint64_t v139 = (int *)type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard(0);
        uint64_t v140 = v139[5];
        uint64_t v141 = (void *)((char *)a1 + v140);
        uint64_t v142 = (void *)((char *)a2 + v140);
        uint64_t v143 = v142[1];
        *uint64_t v141 = *v142;
        v141[1] = v143;
        uint64_t v144 = v139[6];
        uint64_t v145 = (char *)a1 + v144;
        uint64_t v146 = (char *)a2 + v144;
        uint64_t v147 = sub_22EE7C220();
        uint64_t v148 = *(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 16);
        swift_bridgeObjectRetain();
        v148(v145, v146, v147);
        uint64_t v149 = v139[7];
        uint64_t v150 = (void *)((char *)a1 + v149);
        uint64_t v151 = (void *)((char *)a2 + v149);
        int v152 = swift_getEnumCaseMultiPayload();
        if (v152 == 2)
        {
          uint64_t v171 = sub_22EE7F6E0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v171 - 8) + 16))(v150, v151, v171);
          uint64_t v172 = _s20LocalizationResourceVMa();
          *(_OWORD *)((char *)v150 + *(int *)(v172 + 20)) = *(_OWORD *)((char *)v151 + *(int *)(v172 + 20));
        }
        else if (v152 == 1)
        {
          uint64_t v153 = v151[1];
          *uint64_t v150 = *v151;
          v150[1] = v153;
          uint64_t v154 = _s22LocalizedPriceResourceVMa(0);
          uint64_t v155 = *(int *)(v154 + 20);
          uint64_t v156 = (char *)v150 + v155;
          int v157 = (char *)v151 + v155;
          uint64_t v158 = sub_22EE7F6E0();
          uint64_t v159 = *(void (**)(char *, char *, uint64_t))(*(void *)(v158 - 8) + 16);
          swift_bridgeObjectRetain();
          uint64_t v223 = v158;
          v159(v156, v157, v158);
          uint64_t v160 = v159;
          uint64_t v161 = *(int *)(v154 + 24);
          unsigned int v162 = (char *)v150 + v161;
          uint64_t v163 = (char *)v151 + v161;
          uint64_t v164 = _s22LocalizedPriceResourceV6FormatOMa(0);
          int v165 = swift_getEnumCaseMultiPayload();
          if (v165 == 3)
          {
            uint64_t v188 = *((void *)v163 + 1);
            *(void *)unsigned int v162 = *(void *)v163;
            *((void *)v162 + 1) = v188;
            uint64_t v189 = (int *)_s15PricePropertiesVMa(0);
            uint64_t v190 = v189[5];
            uint64_t v191 = &v162[v190];
            uint64_t v216 = &v163[v190];
            uint64_t v192 = sub_22EE7F5D0();
            unint64_t v207 = *(void (**)(char *, char *, uint64_t))(*(void *)(v192 - 8) + 16);
            swift_bridgeObjectRetain();
            v207(v191, v216, v192);
            v160(&v162[v189[6]], &v163[v189[6]], v223);
            *(void *)&v162[v189[7]] = *(void *)&v163[v189[7]];
            swift_storeEnumTagMultiPayload();
          }
          else if (v165 == 2)
          {
            uint64_t v166 = *((void *)v163 + 1);
            *(void *)unsigned int v162 = *(void *)v163;
            *((void *)v162 + 1) = v166;
            uint64_t v167 = (int *)_s15PricePropertiesVMa(0);
            uint64_t v168 = v167[5];
            uint64_t v204 = &v163[v168];
            uint64_t v215 = &v162[v168];
            uint64_t v169 = sub_22EE7F5D0();
            char v197 = *(void (**)(char *, char *, uint64_t))(*(void *)(v169 - 8) + 16);
            swift_bridgeObjectRetain();
            v197(v215, v204, v169);
            v160(&v162[v167[6]], &v163[v167[6]], v158);
            *(void *)&v162[v167[7]] = *(void *)&v163[v167[7]];
            uint64_t v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
            v162[*(int *)(v170 + 48)] = v163[*(int *)(v170 + 48)];
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v162, v163, *(void *)(*(void *)(v164 - 8) + 64));
          }
        }
        else
        {
          uint64_t v173 = v151[1];
          *uint64_t v150 = *v151;
          v150[1] = v173;
          swift_bridgeObjectRetain();
        }
        goto LABEL_58;
      }
      uint64_t v57 = *((void *)v54 + 1);
      *(void *)uint64_t v53 = *(void *)v54;
      *((void *)v53 + 1) = v57;
      uint64_t v58 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v59 = v58[5];
      unsigned int v219 = &v54[v59];
      uint64_t v226 = &v53[v59];
      uint64_t v60 = v51;
      uint64_t v61 = sub_22EE7F5D0();
      uint64_t v210 = *(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16);
      swift_bridgeObjectRetain();
      v210(v226, v219, v61);
      v60(&v53[v58[6]], &v54[v58[6]], v50);
      *(void *)&v53[v58[7]] = *(void *)&v54[v58[7]];
      uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
      v53[*(int *)(v62 + 48)] = v54[*(int *)(v62 + 48)];
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_43;
  }
  _s11PriceStringOMa(0);
  int v4 = swift_getEnumCaseMultiPayload();
  if (v4 == 2)
  {
    uint64_t v63 = sub_22EE7F6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v63 - 8) + 16))(a1, a2, v63);
    uint64_t v64 = _s20LocalizationResourceVMa();
    *(_OWORD *)((char *)a1 + *(int *)(v64 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v64 + 20));
  }
  else if (v4 == 1)
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v7 = *(int *)(v6 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_22EE7F6E0();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    uint64_t v12 = *(int *)(v6 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = _s22LocalizedPriceResourceV6FormatOMa(0);
    int v16 = swift_getEnumCaseMultiPayload();
    if (v16 == 3)
    {
      uint64_t v96 = *((void *)v14 + 1);
      *(void *)uint64_t v13 = *(void *)v14;
      *((void *)v13 + 1) = v96;
      int v97 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v98 = v97[5];
      int v221 = &v14[v98];
      uint64_t v228 = &v13[v98];
      uint64_t v99 = v11;
      uint64_t v100 = sub_22EE7F5D0();
      int v212 = *(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 16);
      swift_bridgeObjectRetain();
      v212(v228, v221, v100);
      v99(&v13[v97[6]], &v14[v97[6]], v10);
      *(void *)&v13[v97[7]] = *(void *)&v14[v97[7]];
    }
    else
    {
      if (v16 != 2)
      {
        memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
        goto LABEL_33;
      }
      uint64_t v17 = *((void *)v14 + 1);
      *(void *)uint64_t v13 = *(void *)v14;
      *((void *)v13 + 1) = v17;
      uint64_t v18 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v19 = v18[5];
      unint64_t v217 = &v14[v19];
      uint64_t v224 = &v13[v19];
      uint64_t v20 = v11;
      uint64_t v21 = sub_22EE7F5D0();
      unsigned int v208 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
      swift_bridgeObjectRetain();
      v208(v224, v217, v21);
      v20(&v13[v18[6]], &v14[v18[6]], v10);
      *(void *)&v13[v18[7]] = *(void *)&v14[v18[7]];
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
      v13[*(int *)(v22 + 48)] = v14[*(int *)(v22 + 48)];
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    uint64_t v65 = a2[1];
    *a1 = *a2;
    a1[1] = v65;
    swift_bridgeObjectRetain();
  }
LABEL_33:
  swift_storeEnumTagMultiPayload();
  uint64_t v101 = (int *)type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard(0);
  uint64_t v102 = v101[5];
  uint64_t v103 = (void *)((char *)a1 + v102);
  uint64_t v104 = (void *)((char *)a2 + v102);
  uint64_t v105 = v104[1];
  *uint64_t v103 = *v104;
  v103[1] = v105;
  uint64_t v106 = v101[6];
  uint64_t v107 = (char *)a1 + v106;
  uint64_t v108 = (char *)a2 + v106;
  uint64_t v109 = sub_22EE7C220();
  uint64_t v110 = *(void (**)(char *, char *, uint64_t))(*(void *)(v109 - 8) + 16);
  swift_bridgeObjectRetain();
  v110(v107, v108, v109);
  uint64_t v111 = v101[7];
  uint64_t v112 = (void *)((char *)a1 + v111);
  uint64_t v113 = (void *)((char *)a2 + v111);
  int v114 = swift_getEnumCaseMultiPayload();
  if (v114 == 2)
  {
    uint64_t v132 = sub_22EE7F6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v132 - 8) + 16))(v112, v113, v132);
    uint64_t v133 = _s20LocalizationResourceVMa();
    *(_OWORD *)((char *)v112 + *(int *)(v133 + 20)) = *(_OWORD *)((char *)v113 + *(int *)(v133 + 20));
  }
  else if (v114 == 1)
  {
    uint64_t v115 = v113[1];
    *uint64_t v112 = *v113;
    v112[1] = v115;
    uint64_t v116 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v117 = *(int *)(v116 + 20);
    uint64_t v118 = (char *)v112 + v117;
    uint64_t v119 = (char *)v113 + v117;
    uint64_t v120 = sub_22EE7F6E0();
    uint64_t v121 = *(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 16);
    swift_bridgeObjectRetain();
    uint64_t v213 = v120;
    v121(v118, v119, v120);
    uint64_t v122 = *(int *)(v116 + 24);
    uint64_t v123 = (char *)v112 + v122;
    uint64_t v124 = (char *)v113 + v122;
    uint64_t v125 = _s22LocalizedPriceResourceV6FormatOMa(0);
    int v126 = swift_getEnumCaseMultiPayload();
    if (v126 == 3)
    {
      uint64_t v178 = *((void *)v124 + 1);
      *(void *)uint64_t v123 = *(void *)v124;
      *((void *)v123 + 1) = v178;
      uint64_t v179 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v180 = v179[5];
      uint64_t v181 = &v123[v180];
      unint64_t v206 = &v124[v180];
      uint64_t v182 = sub_22EE7F5D0();
      unint64_t v199 = *(void (**)(char *, char *, uint64_t))(*(void *)(v182 - 8) + 16);
      swift_bridgeObjectRetain();
      v199(v181, v206, v182);
      v121(&v123[v179[6]], &v124[v179[6]], v213);
      *(void *)&v123[v179[7]] = *(void *)&v124[v179[7]];
      swift_storeEnumTagMultiPayload();
    }
    else if (v126 == 2)
    {
      uint64_t v127 = *((void *)v124 + 1);
      *(void *)uint64_t v123 = *(void *)v124;
      *((void *)v123 + 1) = v127;
      uint64_t v128 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v129 = v128[5];
      unint64_t v196 = &v124[v129];
      uint64_t v203 = &v123[v129];
      uint64_t v130 = sub_22EE7F5D0();
      unint64_t v194 = *(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 16);
      swift_bridgeObjectRetain();
      v194(v203, v196, v130);
      v121(&v123[v128[6]], &v124[v128[6]], v120);
      *(void *)&v123[v128[7]] = *(void *)&v124[v128[7]];
      uint64_t v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
      v123[*(int *)(v131 + 48)] = v124[*(int *)(v131 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v123, v124, *(void *)(*(void *)(v125 - 8) + 64));
    }
  }
  else
  {
    uint64_t v134 = v113[1];
    *uint64_t v112 = *v113;
    v112[1] = v134;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v183 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268626C70) + 48);
  uint64_t v184 = (char *)a1 + v183;
  uint64_t v185 = (char *)a2 + v183;
  uint64_t v186 = sub_22EE7F6E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v186 - 8) + 16))(v184, v185, v186);
  uint64_t v187 = _s20LocalizationResourceVMa();
  *(_OWORD *)&v184[*(int *)(v187 + 20)] = *(_OWORD *)&v185[*(int *)(v187 + 20)];
LABEL_59:
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_22EDCEF34(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_22EDC6154((uint64_t)a1, (void (*)(void))type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration);
    type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 2)
    {
      if (EnumCaseMultiPayload == 1)
      {
        _s11PriceStringOMa(0);
        int v5 = swift_getEnumCaseMultiPayload();
        if (v5 == 2)
        {
          uint64_t v55 = sub_22EE7F6E0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v55 - 8) + 16))(a1, a2, v55);
          uint64_t v56 = _s20LocalizationResourceVMa();
          *(_OWORD *)((char *)a1 + *(int *)(v56 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v56 + 20));
        }
        else if (v5 == 1)
        {
          *a1 = *a2;
          a1[1] = a2[1];
          uint64_t v6 = _s22LocalizedPriceResourceVMa(0);
          uint64_t v7 = *(int *)(v6 + 20);
          uint64_t v8 = (char *)a1 + v7;
          uint64_t v9 = (char *)a2 + v7;
          uint64_t v10 = sub_22EE7F6E0();
          uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
          swift_bridgeObjectRetain();
          v11(v8, v9, v10);
          uint64_t v12 = *(int *)(v6 + 24);
          uint64_t v13 = (char *)a1 + v12;
          uint64_t v14 = (char *)a2 + v12;
          uint64_t v15 = _s22LocalizedPriceResourceV6FormatOMa(0);
          int v16 = swift_getEnumCaseMultiPayload();
          if (v16 == 3)
          {
            *(void *)uint64_t v13 = *(void *)v14;
            *((void *)v13 + 1) = *((void *)v14 + 1);
            uint64_t v83 = (int *)_s15PricePropertiesVMa(0);
            uint64_t v84 = v83[5];
            uint64_t v192 = &v14[v84];
            unint64_t v201 = &v13[v84];
            unint64_t v207 = v11;
            uint64_t v85 = sub_22EE7F5D0();
            uint64_t v182 = *(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 16);
            swift_bridgeObjectRetain();
            v182(v201, v192, v85);
            v207(&v13[v83[6]], &v14[v83[6]], v10);
            *(void *)&v13[v83[7]] = *(void *)&v14[v83[7]];
          }
          else
          {
            if (v16 != 2)
            {
              memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
              goto LABEL_34;
            }
            *(void *)uint64_t v13 = *(void *)v14;
            *((void *)v13 + 1) = *((void *)v14 + 1);
            uint64_t v17 = (int *)_s15PricePropertiesVMa(0);
            uint64_t v18 = v17[5];
            uint64_t v187 = &v14[v18];
            char v197 = &v13[v18];
            uint64_t v204 = v11;
            uint64_t v19 = sub_22EE7F5D0();
            uint64_t v178 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
            swift_bridgeObjectRetain();
            v178(v197, v187, v19);
            v204(&v13[v17[6]], &v14[v17[6]], v10);
            *(void *)&v13[v17[7]] = *(void *)&v14[v17[7]];
            uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
            v13[*(int *)(v20 + 48)] = v14[*(int *)(v20 + 48)];
          }
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          *a1 = *a2;
          a1[1] = a2[1];
          swift_bridgeObjectRetain();
        }
LABEL_34:
        swift_storeEnumTagMultiPayload();
        uint64_t v86 = (int *)type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard(0);
        uint64_t v87 = v86[5];
        uint64_t v88 = (void *)((char *)a1 + v87);
        uint64_t v89 = (void *)((char *)a2 + v87);
        *uint64_t v88 = *v89;
        v88[1] = v89[1];
        uint64_t v90 = v86[6];
        uint64_t v91 = (char *)a1 + v90;
        uint64_t v92 = (char *)a2 + v90;
        uint64_t v93 = sub_22EE7C220();
        uint64_t v94 = *(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 16);
        swift_bridgeObjectRetain();
        v94(v91, v92, v93);
        uint64_t v95 = v86[7];
        uint64_t v96 = (void *)((char *)a1 + v95);
        int v97 = (void *)((char *)a2 + v95);
        int v98 = swift_getEnumCaseMultiPayload();
        if (v98 == 2)
        {
          uint64_t v113 = sub_22EE7F6E0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v113 - 8) + 16))(v96, v97, v113);
          uint64_t v114 = _s20LocalizationResourceVMa();
          *(_OWORD *)((char *)v96 + *(int *)(v114 + 20)) = *(_OWORD *)((char *)v97 + *(int *)(v114 + 20));
        }
        else if (v98 == 1)
        {
          void *v96 = *v97;
          v96[1] = v97[1];
          uint64_t v99 = _s22LocalizedPriceResourceVMa(0);
          uint64_t v100 = *(int *)(v99 + 20);
          uint64_t v101 = (char *)v96 + v100;
          uint64_t v202 = (char *)v97 + v100;
          uint64_t v102 = sub_22EE7F6E0();
          uint64_t v103 = *(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 16);
          swift_bridgeObjectRetain();
          unint64_t v193 = v103;
          v103(v101, v202, v102);
          uint64_t v104 = *(int *)(v99 + 24);
          uint64_t v105 = (char *)v96 + v104;
          uint64_t v106 = (char *)v97 + v104;
          uint64_t v107 = _s22LocalizedPriceResourceV6FormatOMa(0);
          int v108 = swift_getEnumCaseMultiPayload();
          if (v108 == 3)
          {
            *(void *)uint64_t v105 = *(void *)v106;
            *((void *)v105 + 1) = *((void *)v106 + 1);
            uint64_t v151 = (int *)_s15PricePropertiesVMa(0);
            uint64_t v152 = v151[5];
            uint64_t v153 = &v105[v152];
            uint64_t v176 = &v106[v152];
            uint64_t v154 = sub_22EE7F5D0();
            uint64_t v171 = *(void (**)(char *, char *, uint64_t))(*(void *)(v154 - 8) + 16);
            swift_bridgeObjectRetain();
            v171(v153, v176, v154);
            v193(&v105[v151[6]], &v106[v151[6]], v102);
            *(void *)&v105[v151[7]] = *(void *)&v106[v151[7]];
            swift_storeEnumTagMultiPayload();
          }
          else if (v108 == 2)
          {
            *(void *)uint64_t v105 = *(void *)v106;
            *((void *)v105 + 1) = *((void *)v106 + 1);
            uint64_t v109 = (int *)_s15PricePropertiesVMa(0);
            uint64_t v110 = v109[5];
            uint64_t v168 = &v106[v110];
            uint64_t v174 = &v105[v110];
            uint64_t v111 = sub_22EE7F5D0();
            uint64_t v166 = *(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 16);
            swift_bridgeObjectRetain();
            v166(v174, v168, v111);
            v103(&v105[v109[6]], &v106[v109[6]], v102);
            *(void *)&v105[v109[7]] = *(void *)&v106[v109[7]];
            uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
            v105[*(int *)(v112 + 48)] = v106[*(int *)(v112 + 48)];
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v105, v106, *(void *)(*(void *)(v107 - 8) + 64));
          }
        }
        else
        {
          void *v96 = *v97;
          v96[1] = v97[1];
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        uint64_t v155 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268626C70) + 48);
        uint64_t v156 = (char *)a1 + v155;
        int v157 = (char *)a2 + v155;
        uint64_t v158 = sub_22EE7F6E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v158 - 8) + 16))(v156, v157, v158);
        uint64_t v159 = _s20LocalizationResourceVMa();
        *(_OWORD *)&v156[*(int *)(v159 + 20)] = *(_OWORD *)&v157[*(int *)(v159 + 20)];
        goto LABEL_59;
      }
      _s11PriceStringOMa(0);
      int v39 = swift_getEnumCaseMultiPayload();
      if (v39 == 2)
      {
        uint64_t v80 = sub_22EE7F6E0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v80 - 8) + 16))(a1, a2, v80);
        uint64_t v81 = _s20LocalizationResourceVMa();
        *(_OWORD *)((char *)a1 + *(int *)(v81 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v81 + 20));
        goto LABEL_44;
      }
      if (v39 != 1)
      {
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_44;
      }
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t v40 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v41 = *(int *)(v40 + 20);
      uint64_t v42 = (char *)a1 + v41;
      uint64_t v43 = (char *)a2 + v41;
      uint64_t v44 = sub_22EE7F6E0();
      uint64_t v45 = *(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16);
      swift_bridgeObjectRetain();
      v45(v42, v43, v44);
      uint64_t v46 = *(int *)(v40 + 24);
      uint64_t v47 = (char *)a1 + v46;
      uint64_t v48 = (char *)a2 + v46;
      uint64_t v49 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v50 = swift_getEnumCaseMultiPayload();
      if (v50 == 3)
      {
        *(void *)uint64_t v47 = *(void *)v48;
        *((void *)v47 + 1) = *((void *)v48 + 1);
        uint64_t v210 = v45;
        uint64_t v115 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v116 = v115[5];
        unint64_t v194 = &v48[v116];
        uint64_t v203 = &v47[v116];
        uint64_t v117 = sub_22EE7F5D0();
        uint64_t v183 = *(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 16);
        swift_bridgeObjectRetain();
        v183(v203, v194, v117);
        v210(&v47[v115[6]], &v48[v115[6]], v44);
        *(void *)&v47[v115[7]] = *(void *)&v48[v115[7]];
      }
      else
      {
        if (v50 != 2)
        {
          memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
LABEL_44:
          swift_storeEnumTagMultiPayload();
          uint64_t v118 = (int *)type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard(0);
          uint64_t v119 = v118[5];
          uint64_t v120 = (void *)((char *)a1 + v119);
          uint64_t v121 = (void *)((char *)a2 + v119);
          *uint64_t v120 = *v121;
          v120[1] = v121[1];
          uint64_t v122 = v118[6];
          uint64_t v123 = (char *)a1 + v122;
          uint64_t v124 = (char *)a2 + v122;
          uint64_t v125 = sub_22EE7C220();
          int v126 = *(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 16);
          swift_bridgeObjectRetain();
          v126(v123, v124, v125);
          uint64_t v127 = v118[7];
          uint64_t v128 = (void *)((char *)a1 + v127);
          uint64_t v129 = (void *)((char *)a2 + v127);
          int v130 = swift_getEnumCaseMultiPayload();
          if (v130 == 2)
          {
            uint64_t v146 = sub_22EE7F6E0();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v146 - 8) + 16))(v128, v129, v146);
            uint64_t v147 = _s20LocalizationResourceVMa();
            *(_OWORD *)((char *)v128 + *(int *)(v147 + 20)) = *(_OWORD *)((char *)v129 + *(int *)(v147 + 20));
          }
          else if (v130 == 1)
          {
            *uint64_t v128 = *v129;
            v128[1] = v129[1];
            uint64_t v131 = _s22LocalizedPriceResourceVMa(0);
            uint64_t v132 = *(int *)(v131 + 20);
            uint64_t v133 = (char *)v128 + v132;
            uint64_t v134 = (char *)v129 + v132;
            uint64_t v135 = sub_22EE7F6E0();
            uint64_t v136 = *(void (**)(char *, char *, uint64_t))(*(void *)(v135 - 8) + 16);
            swift_bridgeObjectRetain();
            uint64_t v195 = v135;
            v136(v133, v134, v135);
            uint64_t v137 = *(int *)(v131 + 24);
            uint64_t v138 = (char *)v128 + v137;
            uint64_t v139 = (char *)v129 + v137;
            uint64_t v140 = _s22LocalizedPriceResourceV6FormatOMa(0);
            int v141 = swift_getEnumCaseMultiPayload();
            if (v141 == 3)
            {
              *(void *)uint64_t v138 = *(void *)v139;
              *((void *)v138 + 1) = *((void *)v139 + 1);
              uint64_t v160 = (int *)_s15PricePropertiesVMa(0);
              uint64_t v161 = v160[5];
              unsigned int v162 = &v138[v161];
              uint64_t v186 = &v139[v161];
              uint64_t v163 = sub_22EE7F5D0();
              uint64_t v177 = *(void (**)(char *, char *, uint64_t))(*(void *)(v163 - 8) + 16);
              swift_bridgeObjectRetain();
              v177(v162, v186, v163);
              v136(&v138[v160[6]], &v139[v160[6]], v195);
              *(void *)&v138[v160[7]] = *(void *)&v139[v160[7]];
              swift_storeEnumTagMultiPayload();
            }
            else if (v141 == 2)
            {
              *(void *)uint64_t v138 = *(void *)v139;
              *((void *)v138 + 1) = *((void *)v139 + 1);
              uint64_t v142 = (int *)_s15PricePropertiesVMa(0);
              uint64_t v143 = v142[5];
              uint64_t v175 = &v139[v143];
              uint64_t v184 = &v138[v143];
              uint64_t v144 = sub_22EE7F5D0();
              uint64_t v169 = *(void (**)(char *, char *, uint64_t))(*(void *)(v144 - 8) + 16);
              swift_bridgeObjectRetain();
              v169(v184, v175, v144);
              v136(&v138[v142[6]], &v139[v142[6]], v135);
              *(void *)&v138[v142[7]] = *(void *)&v139[v142[7]];
              uint64_t v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
              v138[*(int *)(v145 + 48)] = v139[*(int *)(v145 + 48)];
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v138, v139, *(void *)(*(void *)(v140 - 8) + 64));
            }
          }
          else
          {
            *uint64_t v128 = *v129;
            v128[1] = v129[1];
            swift_bridgeObjectRetain();
          }
LABEL_58:
          swift_storeEnumTagMultiPayload();
LABEL_59:
          swift_storeEnumTagMultiPayload();
          return a1;
        }
        *(void *)uint64_t v47 = *(void *)v48;
        *((void *)v47 + 1) = *((void *)v48 + 1);
        uint64_t v51 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v52 = v51[5];
        uint64_t v189 = &v48[v52];
        unint64_t v199 = &v47[v52];
        unsigned int v209 = v45;
        uint64_t v53 = sub_22EE7F5D0();
        uint64_t v180 = *(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16);
        swift_bridgeObjectRetain();
        v180(v199, v189, v53);
        v209(&v47[v51[6]], &v48[v51[6]], v44);
        *(void *)&v47[v51[7]] = *(void *)&v48[v51[7]];
        uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v47[*(int *)(v54 + 48)] = v48[*(int *)(v54 + 48)];
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_44;
    }
    *a1 = *a2;
    a1[1] = a2[1];
    uint64_t v21 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v22 = *(int *)(v21 + 20);
    uint64_t v23 = (char *)a1 + v22;
    uint64_t v24 = (char *)a2 + v22;
    uint64_t v25 = sub_22EE7F6E0();
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
    swift_bridgeObjectRetain();
    v26(v23, v24, v25);
    uint64_t v205 = v21;
    uint64_t v27 = *(int *)(v21 + 24);
    uint64_t v28 = (char *)a1 + v27;
    int v29 = (char *)a2 + v27;
    uint64_t v30 = _s22LocalizedPriceResourceV6FormatOMa(0);
    int v31 = swift_getEnumCaseMultiPayload();
    if (v31 == 3)
    {
      *(void *)uint64_t v28 = *(void *)v29;
      *((void *)v28 + 1) = *((void *)v29 + 1);
      uint64_t v57 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v58 = v57[5];
      uint64_t v190 = &v29[v58];
      unint64_t v200 = &v28[v58];
      uint64_t v181 = v30;
      uint64_t v59 = v25;
      uint64_t v60 = sub_22EE7F5D0();
      uint64_t v173 = *(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v61 = v60;
      uint64_t v25 = v59;
      uint64_t v30 = v181;
      v173(v200, v190, v61);
      v26(&v28[v57[6]], &v29[v57[6]], v25);
      *(void *)&v28[v57[7]] = *(void *)&v29[v57[7]];
    }
    else
    {
      if (v31 != 2)
      {
        memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
LABEL_22:
        uint64_t v62 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268626C78) + 48);
        uint64_t v63 = (char *)a1 + v62;
        uint64_t v64 = (char *)a2 + v62;
        _s11PriceStringOMa(0);
        int v65 = swift_getEnumCaseMultiPayload();
        if (v65 == 2)
        {
          v26(v63, v64, v25);
          uint64_t v82 = _s20LocalizationResourceVMa();
          *(_OWORD *)&v63[*(int *)(v82 + 20)] = *(_OWORD *)&v64[*(int *)(v82 + 20)];
        }
        else if (v65 == 1)
        {
          *(void *)uint64_t v63 = *(void *)v64;
          *((void *)v63 + 1) = *((void *)v64 + 1);
          uint64_t v66 = *(int *)(v205 + 20);
          uint64_t v67 = &v63[v66];
          uint64_t v68 = v26;
          uint64_t v69 = &v64[v66];
          swift_bridgeObjectRetain();
          uint64_t v70 = v69;
          uint64_t v71 = v68;
          v68(v67, v70, v25);
          uint64_t v72 = *(int *)(v205 + 24);
          uint64_t v73 = &v63[v72];
          uint64_t v74 = &v64[v72];
          int v75 = swift_getEnumCaseMultiPayload();
          if (v75 == 3)
          {
            *(void *)uint64_t v73 = *(void *)v74;
            *((void *)v73 + 1) = *((void *)v74 + 1);
            unint64_t v196 = v71;
            uint64_t v148 = (int *)_s15PricePropertiesVMa(0);
            uint64_t v149 = v148[5];
            unsigned int v208 = &v73[v149];
            uint64_t v185 = &v74[v149];
            uint64_t v150 = sub_22EE7F5D0();
            uint64_t v170 = *(void (**)(char *, char *, uint64_t))(*(void *)(v150 - 8) + 16);
            swift_bridgeObjectRetain();
            v170(v208, v185, v150);
            v196(&v73[v148[6]], &v74[v148[6]], v25);
            *(void *)&v73[v148[7]] = *(void *)&v74[v148[7]];
            swift_storeEnumTagMultiPayload();
          }
          else if (v75 == 2)
          {
            *(void *)uint64_t v73 = *(void *)v74;
            *((void *)v73 + 1) = *((void *)v74 + 1);
            uint64_t v191 = v71;
            int v76 = (int *)_s15PricePropertiesVMa(0);
            uint64_t v77 = v76[5];
            unint64_t v206 = &v73[v77];
            uint64_t v167 = &v74[v77];
            uint64_t v78 = sub_22EE7F5D0();
            int v165 = *(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 16);
            swift_bridgeObjectRetain();
            v165(v206, v167, v78);
            v191(&v73[v76[6]], &v74[v76[6]], v25);
            *(void *)&v73[v76[7]] = *(void *)&v74[v76[7]];
            uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
            v73[*(int *)(v79 + 48)] = v74[*(int *)(v79 + 48)];
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v73, v74, *(void *)(*(void *)(v30 - 8) + 64));
          }
        }
        else
        {
          *(void *)uint64_t v63 = *(void *)v64;
          *((void *)v63 + 1) = *((void *)v64 + 1);
          swift_bridgeObjectRetain();
        }
        goto LABEL_58;
      }
      *(void *)uint64_t v28 = *(void *)v29;
      *((void *)v28 + 1) = *((void *)v29 + 1);
      uint64_t v32 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v33 = v32[5];
      uint64_t v198 = v25;
      int v34 = &v28[v33];
      uint64_t v179 = &v29[v33];
      uint64_t v188 = v26;
      uint64_t v35 = sub_22EE7F5D0();
      uint64_t v172 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v36 = v34;
      uint64_t v37 = v35;
      uint64_t v26 = v188;
      uint64_t v25 = v198;
      v172(v36, v179, v37);
      v188(&v28[v32[6]], &v29[v32[6]], v198);
      *(void *)&v28[v32[7]] = *(void *)&v29[v32[7]];
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
      v28[*(int *)(v38 + 48)] = v29[*(int *)(v38 + 48)];
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_22;
  }
  return a1;
}

_OWORD *sub_22EDD0310(_OWORD *a1, _OWORD *a2)
{
  type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 2)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = _s11PriceStringOMa(0);
      int v6 = swift_getEnumCaseMultiPayload();
      if (v6 == 2)
      {
        uint64_t v57 = sub_22EE7F6E0();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v57 - 8) + 32))(a1, a2, v57);
        uint64_t v58 = _s20LocalizationResourceVMa();
        *(_OWORD *)((char *)a1 + *(int *)(v58 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v58 + 20));
      }
      else
      {
        if (v6 != 1)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
          goto LABEL_34;
        }
        *a1 = *a2;
        uint64_t v7 = _s22LocalizedPriceResourceVMa(0);
        uint64_t v8 = *(int *)(v7 + 20);
        uint64_t v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = sub_22EE7F6E0();
        uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32);
        v12(v9, v10, v11);
        uint64_t v13 = *(int *)(v7 + 24);
        uint64_t v14 = (char *)a1 + v13;
        uint64_t v15 = (char *)a2 + v13;
        uint64_t v16 = _s22LocalizedPriceResourceV6FormatOMa(0);
        int v17 = swift_getEnumCaseMultiPayload();
        if (v17 == 3)
        {
          *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
          uint64_t v86 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v87 = v86[5];
          uint64_t v166 = &v15[v87];
          uint64_t v175 = &v14[v87];
          uint64_t v88 = sub_22EE7F5D0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 32))(v175, v166, v88);
          v12(&v14[v86[6]], &v15[v86[6]], v11);
          *(void *)&v14[v86[7]] = *(void *)&v15[v86[7]];
        }
        else
        {
          if (v17 != 2)
          {
            memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
            goto LABEL_33;
          }
          *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
          uint64_t v18 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v19 = v18[5];
          uint64_t v163 = &v15[v19];
          uint64_t v172 = &v14[v19];
          uint64_t v20 = sub_22EE7F5D0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v172, v163, v20);
          v12(&v14[v18[6]], &v15[v18[6]], v11);
          *(void *)&v14[v18[7]] = *(void *)&v15[v18[7]];
          uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
          v14[*(int *)(v21 + 48)] = v15[*(int *)(v21 + 48)];
        }
        swift_storeEnumTagMultiPayload();
      }
LABEL_33:
      swift_storeEnumTagMultiPayload();
LABEL_34:
      uint64_t v89 = (int *)type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard(0);
      *(_OWORD *)((char *)a1 + v89[5]) = *(_OWORD *)((char *)a2 + v89[5]);
      uint64_t v90 = v89[6];
      uint64_t v91 = (char *)a1 + v90;
      uint64_t v92 = (char *)a2 + v90;
      uint64_t v93 = sub_22EE7C220();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 32))(v91, v92, v93);
      uint64_t v94 = v89[7];
      uint64_t v95 = (_OWORD *)((char *)a1 + v94);
      uint64_t v96 = (_OWORD *)((char *)a2 + v94);
      int v97 = swift_getEnumCaseMultiPayload();
      if (v97 == 2)
      {
        uint64_t v113 = sub_22EE7F6E0();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v113 - 8) + 32))(v95, v96, v113);
        uint64_t v114 = _s20LocalizationResourceVMa();
        *(_OWORD *)((char *)v95 + *(int *)(v114 + 20)) = *(_OWORD *)((char *)v96 + *(int *)(v114 + 20));
      }
      else
      {
        if (v97 != 1)
        {
          memcpy(v95, v96, *(void *)(*(void *)(v5 - 8) + 64));
LABEL_60:
          uint64_t v152 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268626C70) + 48);
          uint64_t v153 = (char *)a1 + v152;
          uint64_t v154 = (char *)a2 + v152;
          uint64_t v155 = sub_22EE7F6E0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 32))(v153, v154, v155);
          uint64_t v156 = _s20LocalizationResourceVMa();
          *(_OWORD *)&v153[*(int *)(v156 + 20)] = *(_OWORD *)&v154[*(int *)(v156 + 20)];
          goto LABEL_64;
        }
        *uint64_t v95 = *v96;
        uint64_t v98 = _s22LocalizedPriceResourceVMa(0);
        uint64_t v99 = *(int *)(v98 + 20);
        uint64_t v100 = (char *)v95 + v99;
        uint64_t v101 = (char *)v96 + v99;
        uint64_t v102 = sub_22EE7F6E0();
        uint64_t v103 = (void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 32);
        uint64_t v176 = *v103;
        (*v103)(v100, v101, v102);
        uint64_t v104 = *(int *)(v98 + 24);
        uint64_t v105 = (char *)v95 + v104;
        uint64_t v106 = (char *)v96 + v104;
        uint64_t v107 = _s22LocalizedPriceResourceV6FormatOMa(0);
        int v108 = swift_getEnumCaseMultiPayload();
        if (v108 == 3)
        {
          *(_OWORD *)uint64_t v105 = *(_OWORD *)v106;
          uint64_t v149 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v150 = v149[5];
          unsigned int v162 = &v106[v150];
          uint64_t v170 = &v105[v150];
          uint64_t v151 = sub_22EE7F5D0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v151 - 8) + 32))(v170, v162, v151);
          v176(&v105[v149[6]], &v106[v149[6]], v102);
          *(void *)&v105[v149[7]] = *(void *)&v106[v149[7]];
        }
        else
        {
          if (v108 != 2)
          {
            memcpy(v105, v106, *(void *)(*(void *)(v107 - 8) + 64));
            goto LABEL_59;
          }
          *(_OWORD *)uint64_t v105 = *(_OWORD *)v106;
          uint64_t v109 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v110 = v109[5];
          uint64_t v161 = &v106[v110];
          uint64_t v167 = &v105[v110];
          uint64_t v111 = sub_22EE7F5D0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 32))(v167, v161, v111);
          v176(&v105[v109[6]], &v106[v109[6]], v102);
          *(void *)&v105[v109[7]] = *(void *)&v106[v109[7]];
          uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
          v105[*(int *)(v112 + 48)] = v106[*(int *)(v112 + 48)];
        }
        swift_storeEnumTagMultiPayload();
      }
LABEL_59:
      swift_storeEnumTagMultiPayload();
      goto LABEL_60;
    }
    uint64_t v40 = _s11PriceStringOMa(0);
    int v41 = swift_getEnumCaseMultiPayload();
    if (v41 == 2)
    {
      uint64_t v80 = sub_22EE7F6E0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v80 - 8) + 32))(a1, a2, v80);
      uint64_t v81 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)a1 + *(int *)(v81 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v81 + 20));
    }
    else
    {
      if (v41 != 1)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v40 - 8) + 64));
LABEL_45:
        uint64_t v118 = (int *)type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard(0);
        *(_OWORD *)((char *)a1 + v118[5]) = *(_OWORD *)((char *)a2 + v118[5]);
        uint64_t v119 = v118[6];
        uint64_t v120 = (char *)a1 + v119;
        uint64_t v121 = (char *)a2 + v119;
        uint64_t v122 = sub_22EE7C220();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v122 - 8) + 32))(v120, v121, v122);
        uint64_t v123 = v118[7];
        uint64_t v124 = (char *)a1 + v123;
        uint64_t v125 = (char *)a2 + v123;
        int v126 = swift_getEnumCaseMultiPayload();
        if (v126 != 2)
        {
          if (v126 == 1)
          {
            *(_OWORD *)uint64_t v124 = *(_OWORD *)v125;
            uint64_t v127 = _s22LocalizedPriceResourceVMa(0);
            uint64_t v128 = *(int *)(v127 + 20);
            uint64_t v129 = &v124[v128];
            int v130 = &v125[v128];
            uint64_t v131 = sub_22EE7F6E0();
            uint64_t v132 = *(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 32);
            v132(v129, v130, v131);
            uint64_t v133 = *(int *)(v127 + 24);
            uint64_t v134 = &v124[v133];
            uint64_t v135 = &v125[v133];
            uint64_t v136 = _s22LocalizedPriceResourceV6FormatOMa(0);
            int v137 = swift_getEnumCaseMultiPayload();
            if (v137 == 3)
            {
              *(_OWORD *)uint64_t v134 = *(_OWORD *)v135;
              int v157 = (int *)_s15PricePropertiesVMa(0);
              uint64_t v158 = v157[5];
              uint64_t v171 = &v135[v158];
              uint64_t v179 = &v134[v158];
              uint64_t v159 = sub_22EE7F5D0();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v159 - 8) + 32))(v179, v171, v159);
              v132(&v134[v157[6]], &v135[v157[6]], v131);
              *(void *)&v134[v157[7]] = *(void *)&v135[v157[7]];
            }
            else
            {
              if (v137 != 2)
              {
                memcpy(v134, v135, *(void *)(*(void *)(v136 - 8) + 64));
                goto LABEL_63;
              }
              *(_OWORD *)uint64_t v134 = *(_OWORD *)v135;
              uint64_t v138 = (int *)_s15PricePropertiesVMa(0);
              uint64_t v139 = v138[5];
              uint64_t v169 = &v135[v139];
              uint64_t v178 = &v134[v139];
              uint64_t v140 = sub_22EE7F5D0();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 32))(v178, v169, v140);
              v132(&v134[v138[6]], &v135[v138[6]], v131);
              *(void *)&v134[v138[7]] = *(void *)&v135[v138[7]];
              uint64_t v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
              v134[*(int *)(v141 + 48)] = v135[*(int *)(v141 + 48)];
            }
LABEL_54:
            swift_storeEnumTagMultiPayload();
            goto LABEL_63;
          }
          size_t v83 = *(void *)(*(void *)(v40 - 8) + 64);
          uint64_t v84 = v124;
          uint64_t v85 = v125;
          goto LABEL_52;
        }
        uint64_t v142 = sub_22EE7F6E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 32))(v124, v125, v142);
        uint64_t v143 = _s20LocalizationResourceVMa();
        *(_OWORD *)&v124[*(int *)(v143 + 20)] = *(_OWORD *)&v125[*(int *)(v143 + 20)];
LABEL_63:
        swift_storeEnumTagMultiPayload();
        goto LABEL_64;
      }
      *a1 = *a2;
      uint64_t v42 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v43 = *(int *)(v42 + 20);
      uint64_t v44 = (char *)a1 + v43;
      uint64_t v45 = (char *)a2 + v43;
      uint64_t v46 = sub_22EE7F6E0();
      uint64_t v47 = *(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32);
      v47(v44, v45, v46);
      uint64_t v48 = *(int *)(v42 + 24);
      uint64_t v49 = (char *)a1 + v48;
      int v50 = (char *)a2 + v48;
      uint64_t v51 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v52 = swift_getEnumCaseMultiPayload();
      if (v52 == 3)
      {
        *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
        uint64_t v115 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v116 = v115[5];
        uint64_t v168 = &v50[v116];
        uint64_t v177 = &v49[v116];
        uint64_t v117 = sub_22EE7F5D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 32))(v177, v168, v117);
        v47(&v49[v115[6]], &v50[v115[6]], v46);
        *(void *)&v49[v115[7]] = *(void *)&v50[v115[7]];
      }
      else
      {
        if (v52 != 2)
        {
          memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
          goto LABEL_44;
        }
        *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
        uint64_t v53 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v54 = v53[5];
        int v165 = &v50[v54];
        uint64_t v173 = &v49[v54];
        uint64_t v55 = sub_22EE7F5D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v173, v165, v55);
        v47(&v49[v53[6]], &v50[v53[6]], v46);
        *(void *)&v49[v53[7]] = *(void *)&v50[v53[7]];
        uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v49[*(int *)(v56 + 48)] = v50[*(int *)(v56 + 48)];
      }
      swift_storeEnumTagMultiPayload();
    }
LABEL_44:
    swift_storeEnumTagMultiPayload();
    goto LABEL_45;
  }
  *a1 = *a2;
  uint64_t v22 = _s22LocalizedPriceResourceVMa(0);
  uint64_t v23 = *(int *)(v22 + 20);
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  uint64_t v26 = sub_22EE7F6E0();
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32);
  v27(v24, v25, v26);
  uint64_t v164 = v22;
  uint64_t v28 = *(int *)(v22 + 24);
  int v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = _s22LocalizedPriceResourceV6FormatOMa(0);
  int v32 = swift_getEnumCaseMultiPayload();
  if (v32 == 3)
  {
    *(_OWORD *)int v29 = *(_OWORD *)v30;
    uint64_t v181 = v31;
    uint64_t v59 = (int *)_s15PricePropertiesVMa(0);
    uint64_t v60 = v59[5];
    uint64_t v61 = &v29[v60];
    uint64_t v62 = &v30[v60];
    uint64_t v63 = sub_22EE7F5D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32))(v61, v62, v63);
    v27(&v29[v59[6]], &v30[v59[6]], v26);
    uint64_t v64 = v59[7];
    uint64_t v31 = v181;
    *(void *)&v29[v64] = *(void *)&v30[v64];
    goto LABEL_19;
  }
  if (v32 == 2)
  {
    *(_OWORD *)int v29 = *(_OWORD *)v30;
    uint64_t v180 = v31;
    uint64_t v33 = (int *)_s15PricePropertiesVMa(0);
    uint64_t v34 = v33[5];
    uint64_t v35 = &v29[v34];
    uint64_t v36 = &v30[v34];
    uint64_t v37 = sub_22EE7F5D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
    v27(&v29[v33[6]], &v30[v33[6]], v26);
    uint64_t v38 = v33[7];
    uint64_t v31 = v180;
    *(void *)&v29[v38] = *(void *)&v30[v38];
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
    v29[*(int *)(v39 + 48)] = v30[*(int *)(v39 + 48)];
LABEL_19:
    swift_storeEnumTagMultiPayload();
    goto LABEL_21;
  }
  memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
LABEL_21:
  uint64_t v65 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268626C78) + 48);
  uint64_t v66 = (char *)a1 + v65;
  uint64_t v67 = (char *)a2 + v65;
  uint64_t v68 = _s11PriceStringOMa(0);
  int v69 = swift_getEnumCaseMultiPayload();
  if (v69 == 2)
  {
    v27(v66, v67, v26);
    uint64_t v82 = _s20LocalizationResourceVMa();
    *(_OWORD *)&v66[*(int *)(v82 + 20)] = *(_OWORD *)&v67[*(int *)(v82 + 20)];
    goto LABEL_63;
  }
  if (v69 == 1)
  {
    *(_OWORD *)uint64_t v66 = *(_OWORD *)v67;
    uint64_t v174 = v27;
    v27(&v66[*(int *)(v164 + 20)], &v67[*(int *)(v164 + 20)], v26);
    uint64_t v70 = *(int *)(v164 + 24);
    uint64_t v71 = &v66[v70];
    uint64_t v72 = &v67[v70];
    int v73 = swift_getEnumCaseMultiPayload();
    if (v73 == 3)
    {
      *(_OWORD *)uint64_t v71 = *(_OWORD *)v72;
      uint64_t v144 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v145 = v144[5];
      uint64_t v146 = &v71[v145];
      uint64_t v147 = &v72[v145];
      uint64_t v148 = sub_22EE7F5D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 32))(v146, v147, v148);
      v174(&v71[v144[6]], &v72[v144[6]], v26);
      *(void *)&v71[v144[7]] = *(void *)&v72[v144[7]];
    }
    else
    {
      if (v73 != 2)
      {
        memcpy(v71, v72, *(void *)(*(void *)(v31 - 8) + 64));
        goto LABEL_63;
      }
      *(_OWORD *)uint64_t v71 = *(_OWORD *)v72;
      uint64_t v74 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v75 = v74[5];
      int v76 = &v71[v75];
      uint64_t v77 = &v72[v75];
      uint64_t v78 = sub_22EE7F5D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 32))(v76, v77, v78);
      v174(&v71[v74[6]], &v72[v74[6]], v26);
      *(void *)&v71[v74[7]] = *(void *)&v72[v74[7]];
      uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
      v71[*(int *)(v79 + 48)] = v72[*(int *)(v79 + 48)];
    }
    goto LABEL_54;
  }
  size_t v83 = *(void *)(*(void *)(v68 - 8) + 64);
  uint64_t v84 = v66;
  uint64_t v85 = v67;
LABEL_52:
  memcpy(v84, v85, v83);
LABEL_64:
  swift_storeEnumTagMultiPayload();
  return a1;
}

_OWORD *sub_22EDD14FC(_OWORD *a1, _OWORD *a2)
{
  if (a1 != a2)
  {
    sub_22EDC6154((uint64_t)a1, (void (*)(void))type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration);
    type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 2)
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v5 = _s11PriceStringOMa(0);
        int v6 = swift_getEnumCaseMultiPayload();
        if (v6 == 2)
        {
          uint64_t v57 = sub_22EE7F6E0();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v57 - 8) + 32))(a1, a2, v57);
          uint64_t v58 = _s20LocalizationResourceVMa();
          *(_OWORD *)((char *)a1 + *(int *)(v58 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v58 + 20));
        }
        else
        {
          if (v6 != 1)
          {
            memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
            goto LABEL_35;
          }
          *a1 = *a2;
          uint64_t v7 = _s22LocalizedPriceResourceVMa(0);
          uint64_t v8 = *(int *)(v7 + 20);
          uint64_t v9 = (char *)a1 + v8;
          uint64_t v10 = (char *)a2 + v8;
          uint64_t v11 = sub_22EE7F6E0();
          uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32);
          v12(v9, v10, v11);
          uint64_t v13 = *(int *)(v7 + 24);
          uint64_t v14 = (char *)a1 + v13;
          uint64_t v15 = (char *)a2 + v13;
          uint64_t v16 = _s22LocalizedPriceResourceV6FormatOMa(0);
          int v17 = swift_getEnumCaseMultiPayload();
          if (v17 == 3)
          {
            *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
            uint64_t v86 = (int *)_s15PricePropertiesVMa(0);
            uint64_t v87 = v86[5];
            uint64_t v166 = &v15[v87];
            uint64_t v176 = &v14[v87];
            uint64_t v88 = sub_22EE7F5D0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 32))(v176, v166, v88);
            v12(&v14[v86[6]], &v15[v86[6]], v11);
            *(void *)&v14[v86[7]] = *(void *)&v15[v86[7]];
          }
          else
          {
            if (v17 != 2)
            {
              memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
              goto LABEL_34;
            }
            *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
            uint64_t v18 = (int *)_s15PricePropertiesVMa(0);
            uint64_t v19 = v18[5];
            uint64_t v163 = &v15[v19];
            uint64_t v172 = &v14[v19];
            uint64_t v20 = sub_22EE7F5D0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v172, v163, v20);
            v12(&v14[v18[6]], &v15[v18[6]], v11);
            *(void *)&v14[v18[7]] = *(void *)&v15[v18[7]];
            uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
            v14[*(int *)(v21 + 48)] = v15[*(int *)(v21 + 48)];
          }
          swift_storeEnumTagMultiPayload();
        }
LABEL_34:
        swift_storeEnumTagMultiPayload();
LABEL_35:
        uint64_t v89 = (int *)type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard(0);
        *(_OWORD *)((char *)a1 + v89[5]) = *(_OWORD *)((char *)a2 + v89[5]);
        uint64_t v90 = v89[6];
        uint64_t v91 = (char *)a1 + v90;
        uint64_t v92 = (char *)a2 + v90;
        uint64_t v93 = sub_22EE7C220();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 32))(v91, v92, v93);
        uint64_t v94 = v89[7];
        uint64_t v95 = (_OWORD *)((char *)a1 + v94);
        uint64_t v96 = (_OWORD *)((char *)a2 + v94);
        int v97 = swift_getEnumCaseMultiPayload();
        if (v97 == 2)
        {
          uint64_t v113 = sub_22EE7F6E0();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v113 - 8) + 32))(v95, v96, v113);
          uint64_t v114 = _s20LocalizationResourceVMa();
          *(_OWORD *)((char *)v95 + *(int *)(v114 + 20)) = *(_OWORD *)((char *)v96 + *(int *)(v114 + 20));
        }
        else
        {
          if (v97 != 1)
          {
            memcpy(v95, v96, *(void *)(*(void *)(v5 - 8) + 64));
LABEL_61:
            uint64_t v152 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268626C70) + 48);
            uint64_t v153 = (char *)a1 + v152;
            uint64_t v154 = (char *)a2 + v152;
            uint64_t v155 = sub_22EE7F6E0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 32))(v153, v154, v155);
            uint64_t v156 = _s20LocalizationResourceVMa();
            *(_OWORD *)&v153[*(int *)(v156 + 20)] = *(_OWORD *)&v154[*(int *)(v156 + 20)];
            goto LABEL_65;
          }
          *uint64_t v95 = *v96;
          uint64_t v98 = _s22LocalizedPriceResourceVMa(0);
          uint64_t v99 = *(int *)(v98 + 20);
          uint64_t v100 = (char *)v95 + v99;
          uint64_t v101 = (char *)v96 + v99;
          uint64_t v102 = sub_22EE7F6E0();
          uint64_t v103 = (void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 32);
          uint64_t v177 = *v103;
          (*v103)(v100, v101, v102);
          uint64_t v104 = *(int *)(v98 + 24);
          uint64_t v105 = (char *)v95 + v104;
          uint64_t v106 = (char *)v96 + v104;
          uint64_t v107 = _s22LocalizedPriceResourceV6FormatOMa(0);
          int v108 = swift_getEnumCaseMultiPayload();
          if (v108 == 3)
          {
            *(_OWORD *)uint64_t v105 = *(_OWORD *)v106;
            uint64_t v149 = (int *)_s15PricePropertiesVMa(0);
            uint64_t v150 = v149[5];
            unsigned int v162 = &v106[v150];
            uint64_t v170 = &v105[v150];
            uint64_t v151 = sub_22EE7F5D0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v151 - 8) + 32))(v170, v162, v151);
            v177(&v105[v149[6]], &v106[v149[6]], v102);
            *(void *)&v105[v149[7]] = *(void *)&v106[v149[7]];
          }
          else
          {
            if (v108 != 2)
            {
              memcpy(v105, v106, *(void *)(*(void *)(v107 - 8) + 64));
              goto LABEL_60;
            }
            *(_OWORD *)uint64_t v105 = *(_OWORD *)v106;
            uint64_t v109 = (int *)_s15PricePropertiesVMa(0);
            uint64_t v110 = v109[5];
            uint64_t v161 = &v106[v110];
            uint64_t v167 = &v105[v110];
            uint64_t v111 = sub_22EE7F5D0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 32))(v167, v161, v111);
            v177(&v105[v109[6]], &v106[v109[6]], v102);
            *(void *)&v105[v109[7]] = *(void *)&v106[v109[7]];
            uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
            v105[*(int *)(v112 + 48)] = v106[*(int *)(v112 + 48)];
          }
          swift_storeEnumTagMultiPayload();
        }
LABEL_60:
        swift_storeEnumTagMultiPayload();
        goto LABEL_61;
      }
      uint64_t v40 = _s11PriceStringOMa(0);
      int v41 = swift_getEnumCaseMultiPayload();
      if (v41 == 2)
      {
        uint64_t v80 = sub_22EE7F6E0();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v80 - 8) + 32))(a1, a2, v80);
        uint64_t v81 = _s20LocalizationResourceVMa();
        *(_OWORD *)((char *)a1 + *(int *)(v81 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v81 + 20));
      }
      else
      {
        if (v41 != 1)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v40 - 8) + 64));
LABEL_46:
          uint64_t v118 = (int *)type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard(0);
          *(_OWORD *)((char *)a1 + v118[5]) = *(_OWORD *)((char *)a2 + v118[5]);
          uint64_t v119 = v118[6];
          uint64_t v120 = (char *)a1 + v119;
          uint64_t v121 = (char *)a2 + v119;
          uint64_t v122 = sub_22EE7C220();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v122 - 8) + 32))(v120, v121, v122);
          uint64_t v123 = v118[7];
          uint64_t v124 = (char *)a1 + v123;
          uint64_t v125 = (char *)a2 + v123;
          int v126 = swift_getEnumCaseMultiPayload();
          if (v126 != 2)
          {
            if (v126 == 1)
            {
              *(_OWORD *)uint64_t v124 = *(_OWORD *)v125;
              uint64_t v127 = _s22LocalizedPriceResourceVMa(0);
              uint64_t v128 = *(int *)(v127 + 20);
              uint64_t v129 = &v124[v128];
              int v130 = &v125[v128];
              uint64_t v131 = sub_22EE7F6E0();
              uint64_t v132 = *(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 32);
              v132(v129, v130, v131);
              uint64_t v133 = *(int *)(v127 + 24);
              uint64_t v134 = &v124[v133];
              uint64_t v135 = &v125[v133];
              uint64_t v136 = _s22LocalizedPriceResourceV6FormatOMa(0);
              int v137 = swift_getEnumCaseMultiPayload();
              if (v137 == 3)
              {
                *(_OWORD *)uint64_t v134 = *(_OWORD *)v135;
                int v157 = (int *)_s15PricePropertiesVMa(0);
                uint64_t v158 = v157[5];
                uint64_t v171 = &v135[v158];
                uint64_t v180 = &v134[v158];
                uint64_t v159 = sub_22EE7F5D0();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v159 - 8) + 32))(v180, v171, v159);
                v132(&v134[v157[6]], &v135[v157[6]], v131);
                *(void *)&v134[v157[7]] = *(void *)&v135[v157[7]];
              }
              else
              {
                if (v137 != 2)
                {
                  memcpy(v134, v135, *(void *)(*(void *)(v136 - 8) + 64));
                  goto LABEL_64;
                }
                *(_OWORD *)uint64_t v134 = *(_OWORD *)v135;
                uint64_t v138 = (int *)_s15PricePropertiesVMa(0);
                uint64_t v139 = v138[5];
                uint64_t v169 = &v135[v139];
                uint64_t v179 = &v134[v139];
                uint64_t v140 = sub_22EE7F5D0();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 32))(v179, v169, v140);
                v132(&v134[v138[6]], &v135[v138[6]], v131);
                *(void *)&v134[v138[7]] = *(void *)&v135[v138[7]];
                uint64_t v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
                v134[*(int *)(v141 + 48)] = v135[*(int *)(v141 + 48)];
              }
LABEL_55:
              swift_storeEnumTagMultiPayload();
              goto LABEL_64;
            }
            size_t v83 = *(void *)(*(void *)(v40 - 8) + 64);
            uint64_t v84 = v124;
            uint64_t v85 = v125;
            goto LABEL_53;
          }
          uint64_t v142 = sub_22EE7F6E0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 32))(v124, v125, v142);
          uint64_t v143 = _s20LocalizationResourceVMa();
          *(_OWORD *)&v124[*(int *)(v143 + 20)] = *(_OWORD *)&v125[*(int *)(v143 + 20)];
          goto LABEL_64;
        }
        *a1 = *a2;
        uint64_t v42 = _s22LocalizedPriceResourceVMa(0);
        uint64_t v43 = *(int *)(v42 + 20);
        uint64_t v44 = (char *)a1 + v43;
        uint64_t v45 = (char *)a2 + v43;
        uint64_t v46 = sub_22EE7F6E0();
        uint64_t v47 = *(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32);
        v47(v44, v45, v46);
        uint64_t v48 = *(int *)(v42 + 24);
        uint64_t v49 = (char *)a1 + v48;
        int v50 = (char *)a2 + v48;
        uint64_t v51 = _s22LocalizedPriceResourceV6FormatOMa(0);
        int v52 = swift_getEnumCaseMultiPayload();
        if (v52 == 3)
        {
          *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
          uint64_t v115 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v116 = v115[5];
          uint64_t v168 = &v50[v116];
          uint64_t v178 = &v49[v116];
          uint64_t v117 = sub_22EE7F5D0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 32))(v178, v168, v117);
          v47(&v49[v115[6]], &v50[v115[6]], v46);
          *(void *)&v49[v115[7]] = *(void *)&v50[v115[7]];
        }
        else
        {
          if (v52 != 2)
          {
            memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
            goto LABEL_45;
          }
          *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
          uint64_t v53 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v54 = v53[5];
          int v165 = &v50[v54];
          uint64_t v174 = &v49[v54];
          uint64_t v55 = sub_22EE7F5D0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v174, v165, v55);
          v47(&v49[v53[6]], &v50[v53[6]], v46);
          *(void *)&v49[v53[7]] = *(void *)&v50[v53[7]];
          uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
          v49[*(int *)(v56 + 48)] = v50[*(int *)(v56 + 48)];
        }
        swift_storeEnumTagMultiPayload();
      }
LABEL_45:
      swift_storeEnumTagMultiPayload();
      goto LABEL_46;
    }
    *a1 = *a2;
    uint64_t v22 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v23 = *(int *)(v22 + 20);
    uint64_t v24 = (char *)a1 + v23;
    uint64_t v25 = (char *)a2 + v23;
    uint64_t v26 = sub_22EE7F6E0();
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32);
    v27(v24, v25, v26);
    uint64_t v164 = v22;
    uint64_t v28 = *(int *)(v22 + 24);
    int v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    uint64_t v31 = _s22LocalizedPriceResourceV6FormatOMa(0);
    int v32 = swift_getEnumCaseMultiPayload();
    uint64_t v181 = v27;
    if (v32 == 3)
    {
      *(_OWORD *)int v29 = *(_OWORD *)v30;
      uint64_t v175 = v31;
      uint64_t v59 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v60 = v59[5];
      uint64_t v61 = &v29[v60];
      uint64_t v62 = &v30[v60];
      uint64_t v63 = sub_22EE7F5D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32))(v61, v62, v63);
      v27(&v29[v59[6]], &v30[v59[6]], v26);
      uint64_t v64 = v59[7];
      uint64_t v31 = v175;
      *(void *)&v29[v64] = *(void *)&v30[v64];
    }
    else
    {
      if (v32 != 2)
      {
        memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
        goto LABEL_22;
      }
      *(_OWORD *)int v29 = *(_OWORD *)v30;
      uint64_t v173 = v31;
      uint64_t v33 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v34 = v33[5];
      uint64_t v35 = &v29[v34];
      uint64_t v36 = &v30[v34];
      uint64_t v37 = sub_22EE7F5D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
      v27(&v29[v33[6]], &v30[v33[6]], v26);
      uint64_t v38 = v33[7];
      uint64_t v31 = v173;
      *(void *)&v29[v38] = *(void *)&v30[v38];
      uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
      v29[*(int *)(v39 + 48)] = v30[*(int *)(v39 + 48)];
    }
    swift_storeEnumTagMultiPayload();
LABEL_22:
    uint64_t v65 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268626C78) + 48);
    uint64_t v66 = (char *)a1 + v65;
    uint64_t v67 = (char *)a2 + v65;
    uint64_t v68 = _s11PriceStringOMa(0);
    int v69 = swift_getEnumCaseMultiPayload();
    if (v69 != 2)
    {
      if (v69 == 1)
      {
        *(_OWORD *)uint64_t v66 = *(_OWORD *)v67;
        v27(&v66[*(int *)(v164 + 20)], &v67[*(int *)(v164 + 20)], v26);
        uint64_t v70 = *(int *)(v164 + 24);
        uint64_t v71 = &v66[v70];
        uint64_t v72 = &v67[v70];
        int v73 = swift_getEnumCaseMultiPayload();
        if (v73 == 3)
        {
          *(_OWORD *)uint64_t v71 = *(_OWORD *)v72;
          uint64_t v144 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v145 = v144[5];
          uint64_t v146 = &v71[v145];
          uint64_t v147 = &v72[v145];
          uint64_t v148 = sub_22EE7F5D0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 32))(v146, v147, v148);
          v181(&v71[v144[6]], &v72[v144[6]], v26);
          *(void *)&v71[v144[7]] = *(void *)&v72[v144[7]];
        }
        else
        {
          if (v73 != 2)
          {
            memcpy(v71, v72, *(void *)(*(void *)(v31 - 8) + 64));
            goto LABEL_64;
          }
          *(_OWORD *)uint64_t v71 = *(_OWORD *)v72;
          uint64_t v74 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v75 = v74[5];
          int v76 = &v71[v75];
          uint64_t v77 = &v72[v75];
          uint64_t v78 = sub_22EE7F5D0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 32))(v76, v77, v78);
          v181(&v71[v74[6]], &v72[v74[6]], v26);
          *(void *)&v71[v74[7]] = *(void *)&v72[v74[7]];
          uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
          v71[*(int *)(v79 + 48)] = v72[*(int *)(v79 + 48)];
        }
        goto LABEL_55;
      }
      size_t v83 = *(void *)(*(void *)(v68 - 8) + 64);
      uint64_t v84 = v66;
      uint64_t v85 = v67;
LABEL_53:
      memcpy(v84, v85, v83);
LABEL_65:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    v27(v66, v67, v26);
    uint64_t v82 = _s20LocalizationResourceVMa();
    *(_OWORD *)&v66[*(int *)(v82 + 20)] = *(_OWORD *)&v67[*(int *)(v82 + 20)];
LABEL_64:
    swift_storeEnumTagMultiPayload();
    goto LABEL_65;
  }
  return a1;
}

uint64_t sub_22EDD26F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EDD2708);
}

uint64_t sub_22EDD2708(uint64_t a1, uint64_t a2)
{
  type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration(0);
  uint64_t v3 = OUTLINED_FUNCTION_21_23();

  return __swift_getEnumTagSinglePayload(v3, a2, v4);
}

uint64_t sub_22EDD274C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EDD2760);
}

uint64_t sub_22EDD2760()
{
  type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration(0);
  OUTLINED_FUNCTION_18_23();

  return __swift_storeEnumTagSinglePayload(v0, v1, v2, v3);
}

uint64_t type metadata accessor for CompactOptionLowerLabel(uint64_t a1)
{
  return sub_22EAD01C0(a1, (uint64_t *)&unk_268626CE8);
}

uint64_t sub_22EDD27C8()
{
  uint64_t result = type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_22EDD2854()
{
  return swift_getWitnessTable();
}

uint64_t sub_22EDD2AB8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EDD2AD4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for CompactOptionLowerLabel.OtherOffer(uint64_t a1)
{
  return sub_22EAD01C0(a1, (uint64_t *)&unk_268626D88);
}

uint64_t type metadata accessor for CompactOptionLowerLabel.Standard(uint64_t a1)
{
  return sub_22EAD01C0(a1, (uint64_t *)&unk_268626DA0);
}

uint64_t sub_22EDD2B38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268626D00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_22EDD2BA0()
{
  unint64_t result = qword_268626D38;
  if (!qword_268626D38)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268626D28);
    sub_22EDD2C70(&qword_268626D40, (void (*)(uint64_t))type metadata accessor for CompactOptionLowerLabel.Standard);
    sub_22EADDD7C(&qword_268626D48, &qword_268626D08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268626D38);
  }
  return result;
}

uint64_t sub_22EDD2C70(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22EDD2CB8()
{
  unint64_t result = qword_268626D50;
  if (!qword_268626D50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268626D00);
    type metadata accessor for CompactOptionLowerLabel.OtherOffer(255);
    sub_22EDD2C70(&qword_268626D30, (void (*)(uint64_t))type metadata accessor for CompactOptionLowerLabel.OtherOffer);
    swift_getOpaqueTypeConformance2();
    sub_22EDD2C70((unint64_t *)&qword_26861C3C0, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268626D50);
  }
  return result;
}

uint64_t sub_22EDD2DC4()
{
  return sub_22EDCB2E0();
}

uint64_t sub_22EDD2DEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4) {
    return 1;
  }
  else {
    return sub_22EE80660() & 1;
  }
}

uint64_t sub_22EDD2E30(uint64_t a1, unsigned __int8 a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  v51[3] = a4;
  if (a1 < 0) {
    goto LABEL_38;
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = MEMORY[0x263F8EE78];
  uint64_t v43 = (uint64_t *)(v10 + 16);
  uint64_t v48 = swift_allocObject();
  *(void *)(v48 + 16) = 15;
  uint64_t v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (uint64_t v12 = HIBYTE(a6) & 0xF) : (uint64_t v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v11 = a5 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v31 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0) {
      uint64_t v31 = 11;
    }
    sub_22EDD3280(v31 | (v11 << 16), v48, a2 & 1, v10);
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_36;
  }
  uint64_t v42 = a1;
  unint64_t v49 = 4 * v12;
  uint64_t v13 = MEMORY[0x263F8EE78];
  unint64_t v14 = 15;
  unint64_t v15 = 15;
  unint64_t v16 = 15;
  while (1)
  {
    v51[0] = sub_22EE7FB40();
    v51[1] = v17;
    char v18 = a3(v51);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v13;
    }
    char v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
      unint64_t v14 = sub_22EE7FA80();
      goto LABEL_21;
    }
    int v20 = (v15 >> 14 == v14 >> 14) & a2;
    if (v20 != 1)
    {
      if (v14 >> 14 < v15 >> 14) {
        goto LABEL_38;
      }
      uint64_t v21 = sub_22EE7FB70();
      uint64_t v44 = v23;
      uint64_t v45 = v22;
      uint64_t v46 = v24;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_22EC6D938(0, *(void *)(v13 + 16) + 1, 1, v13);
        uint64_t v13 = v29;
      }
      unint64_t v26 = *(void *)(v13 + 16);
      unint64_t v25 = *(void *)(v13 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_22EC6D938(v25 > 1, v26 + 1, 1, v13);
        uint64_t v13 = v30;
      }
      *(void *)(v13 + 16) = v26 + 1;
      uint64_t v27 = (void *)(v13 + 32 * v26);
      v27[4] = v21;
      v27[5] = v46;
      v27[6] = v45;
      v27[7] = v44;
      *uint64_t v43 = v13;
    }
    uint64_t v28 = sub_22EE7FA80();
    unint64_t v14 = v28;
    *(void *)(v48 + 16) = v28;
    if ((v20 & 1) == 0 && *(void *)(v13 + 16) == v42) {
      break;
    }
    unint64_t v15 = v28;
    unint64_t v16 = v28;
LABEL_21:
    if (v49 == v14 >> 14) {
      goto LABEL_30;
    }
  }
  unint64_t v16 = v28;
  unint64_t v15 = v28;
LABEL_30:
  if (v49 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  if (v49 < v16 >> 14)
  {
LABEL_38:
    uint64_t result = sub_22EE803A0();
    __break(1u);
    return result;
  }
  uint64_t v32 = sub_22EE7FB70();
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  swift_bridgeObjectRelease();
  sub_22EDD3388();
  uint64_t v39 = *(void *)(*v43 + 16);
  sub_22EDD33D4(v39);
  uint64_t v13 = *v43;
  *(void *)(v13 + 16) = v39 + 1;
  uint64_t v40 = (void *)(v13 + 32 * v39);
  v40[4] = v32;
  v40[5] = v34;
  v40[6] = v36;
  v40[7] = v38;
  *uint64_t v43 = v13;
LABEL_35:
  swift_bridgeObjectRetain();
  swift_release();
LABEL_36:
  swift_release();
  return v13;
}

uint64_t sub_22EDD3280(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a2 + 16) >> 14;
  int v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1) {
    return v5 ^ 1u;
  }
  if (a1 >> 14 >= v4)
  {
    uint64_t v7 = sub_22EE7FB70();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    sub_22EDD3388();
    uint64_t v14 = *(void *)(*(void *)(a4 + 16) + 16);
    sub_22EDD33D4(v14);
    uint64_t v15 = *(void *)(a4 + 16);
    *(void *)(v15 + 16) = v14 + 1;
    unint64_t v16 = (void *)(v15 + 32 * v14);
    v16[4] = v7;
    v16[5] = v9;
    v16[6] = v11;
    v16[7] = v13;
    return v5 ^ 1u;
  }
  uint64_t result = sub_22EE803A0();
  __break(1u);
  return result;
}

void sub_22EDD3388()
{
  uint64_t v1 = *v0;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v0 = v1;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_22EC6D938(0, *(void *)(v1 + 16) + 1, 1, v1);
    *uint64_t v0 = v3;
  }
}

void sub_22EDD33D4(uint64_t a1)
{
  unint64_t v2 = *(void *)(*v1 + 24);
  if (a1 + 1 > (uint64_t)(v2 >> 1))
  {
    sub_22EC6D938(v2 > 1, a1 + 1, 1, *v1);
    *uint64_t v1 = v3;
  }
}

unint64_t sub_22EDD341C()
{
  unint64_t result = qword_268626D70;
  if (!qword_268626D70)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268626D78);
    sub_22EADDD7C(&qword_268620A90, &qword_268620A98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268626D70);
  }
  return result;
}

unint64_t sub_22EDD34BC()
{
  unint64_t result = qword_268626D80;
  if (!qword_268626D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268626D80);
  }
  return result;
}

ValueMetadata *_s34CompactPickerLabelLayoutVariantKeyOMa()
{
  return &_s34CompactPickerLabelLayoutVariantKeyON;
}

uint64_t *sub_22EDD3518(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return v4;
  }
  uint64_t v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  uint64_t v8 = _s22LocalizedPriceResourceVMa(0);
  uint64_t v9 = *(int *)(v8 + 20);
  uint64_t v10 = (char *)v4 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_22EE7F6E0();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  uint64_t v14 = *(int *)(v8 + 24);
  uint64_t v15 = (char *)v4 + v14;
  unint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = _s22LocalizedPriceResourceV6FormatOMa(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    uint64_t v25 = *((void *)v16 + 1);
    *(void *)uint64_t v15 = *(void *)v16;
    *((void *)v15 + 1) = v25;
    int v41 = v13;
    unint64_t v26 = (int *)_s15PricePropertiesVMa(0);
    uint64_t v27 = v26[5];
    uint64_t v37 = &v16[v27];
    uint64_t v39 = &v15[v27];
    uint64_t v28 = sub_22EE7F5D0();
    uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
    swift_bridgeObjectRetain();
    v35(v39, v37, v28);
    v41(&v15[v26[6]], &v16[v26[6]], v12);
    *(void *)&v15[v26[7]] = *(void *)&v16[v26[7]];
  }
  else
  {
    if (EnumCaseMultiPayload != 2)
    {
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
      goto LABEL_9;
    }
    uint64_t v19 = *((void *)v16 + 1);
    *(void *)uint64_t v15 = *(void *)v16;
    *((void *)v15 + 1) = v19;
    uint64_t v40 = v13;
    int v20 = (int *)_s15PricePropertiesVMa(0);
    uint64_t v21 = v20[5];
    uint64_t v36 = &v16[v21];
    uint64_t v38 = &v15[v21];
    uint64_t v22 = sub_22EE7F5D0();
    uint64_t v34 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
    swift_bridgeObjectRetain();
    v34(v38, v36, v22);
    v40(&v15[v20[6]], &v16[v20[6]], v12);
    *(void *)&v15[v20[7]] = *(void *)&v16[v20[7]];
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
    v15[*(int *)(v23 + 48)] = v16[*(int *)(v23 + 48)];
  }
  swift_storeEnumTagMultiPayload();
LABEL_9:
  uint64_t v29 = *(int *)(a3 + 20);
  uint64_t v30 = (uint64_t *)((char *)v4 + v29);
  uint64_t v31 = (uint64_t *)((char *)a2 + v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861CD68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v32 = sub_22EE7C400();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
  }
  else
  {
    void *v30 = *v31;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return v4;
}

uint64_t sub_22EDD388C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = _s22LocalizedPriceResourceVMa(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = sub_22EE7F6E0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  uint64_t v8 = a1 + *(int *)(v4 + 24);
  _s22LocalizedPriceResourceV6FormatOMa(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3 || EnumCaseMultiPayload == 2)
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = _s15PricePropertiesVMa(0);
    uint64_t v11 = v8 + *(int *)(v10 + 20);
    uint64_t v12 = sub_22EE7F5D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
    v7(v8 + *(int *)(v10 + 24), v6);
  }
  uint64_t v13 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861CD68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_22EE7C400();
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);
    return v15(v13, v14);
  }
  else
  {
    return swift_release();
  }
}

void *sub_22EDD3A50(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = _s22LocalizedPriceResourceVMa(0);
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_22EE7F6E0();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  uint64_t v13 = *(int *)(v7 + 24);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = _s22LocalizedPriceResourceV6FormatOMa(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    uint64_t v42 = a3;
    uint64_t v24 = *((void *)v15 + 1);
    *(void *)uint64_t v14 = *(void *)v15;
    *((void *)v14 + 1) = v24;
    uint64_t v25 = (int *)_s15PricePropertiesVMa(0);
    uint64_t v26 = v25[5];
    uint64_t v36 = &v15[v26];
    uint64_t v38 = &v14[v26];
    uint64_t v40 = v12;
    uint64_t v27 = sub_22EE7F5D0();
    uint64_t v34 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
    a3 = v42;
    swift_bridgeObjectRetain();
    v34(v38, v36, v27);
    v40(&v14[v25[6]], &v15[v25[6]], v11);
    *(void *)&v14[v25[7]] = *(void *)&v15[v25[7]];
    goto LABEL_5;
  }
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v18 = *((void *)v15 + 1);
    *(void *)uint64_t v14 = *(void *)v15;
    *((void *)v14 + 1) = v18;
    uint64_t v39 = v12;
    uint64_t v19 = (int *)_s15PricePropertiesVMa(0);
    uint64_t v20 = v19[5];
    uint64_t v35 = &v15[v20];
    uint64_t v37 = &v14[v20];
    uint64_t v41 = a3;
    uint64_t v21 = sub_22EE7F5D0();
    uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
    swift_bridgeObjectRetain();
    uint64_t v22 = v21;
    a3 = v41;
    v33(v37, v35, v22);
    v39(&v14[v19[6]], &v15[v19[6]], v11);
    *(void *)&v14[v19[7]] = *(void *)&v15[v19[7]];
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
    v14[*(int *)(v23 + 48)] = v15[*(int *)(v23 + 48)];
LABEL_5:
    swift_storeEnumTagMultiPayload();
    goto LABEL_7;
  }
  memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
LABEL_7:
  uint64_t v28 = *(int *)(a3 + 20);
  uint64_t v29 = (void *)((char *)a1 + v28);
  uint64_t v30 = (void *)((char *)a2 + v28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861CD68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v31 = sub_22EE7C400();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
  }
  else
  {
    *uint64_t v29 = *v30;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_22EDD3D84(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = _s22LocalizedPriceResourceVMa(0);
  uint64_t v7 = *(int *)(v6 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_22EE7F6E0();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v8, v9, v10);
  if (a1 == a2) {
    return a1;
  }
  uint64_t v12 = *(int *)(v6 + 24);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  sub_22EDC6154((uint64_t)a1 + v12, (void (*)(void))_s22LocalizedPriceResourceV6FormatOMa);
  uint64_t v15 = _s22LocalizedPriceResourceV6FormatOMa(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    *(void *)uint64_t v13 = *(void *)v14;
    *((void *)v13 + 1) = *((void *)v14 + 1);
    uint64_t v22 = (int *)_s15PricePropertiesVMa(0);
    uint64_t v23 = v22[5];
    uint64_t v33 = &v14[v23];
    uint64_t v35 = &v13[v23];
    uint64_t v24 = sub_22EE7F5D0();
    uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
    swift_bridgeObjectRetain();
    v31(v35, v33, v24);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(&v13[v22[6]], &v14[v22[6]], v10);
    *(void *)&v13[v22[7]] = *(void *)&v14[v22[7]];
  }
  else
  {
    if (EnumCaseMultiPayload != 2)
    {
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
      goto LABEL_8;
    }
    *(void *)uint64_t v13 = *(void *)v14;
    *((void *)v13 + 1) = *((void *)v14 + 1);
    uint64_t v17 = (int *)_s15PricePropertiesVMa(0);
    uint64_t v18 = v17[5];
    uint64_t v32 = &v14[v18];
    uint64_t v34 = &v13[v18];
    uint64_t v36 = a3;
    uint64_t v19 = sub_22EE7F5D0();
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
    swift_bridgeObjectRetain();
    uint64_t v20 = v19;
    a3 = v36;
    v30(v34, v32, v20);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(&v13[v17[6]], &v14[v17[6]], v10);
    *(void *)&v13[v17[7]] = *(void *)&v14[v17[7]];
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
    v13[*(int *)(v21 + 48)] = v14[*(int *)(v21 + 48)];
  }
  swift_storeEnumTagMultiPayload();
LABEL_8:
  uint64_t v25 = *(int *)(a3 + 20);
  uint64_t v26 = (void *)((char *)a1 + v25);
  uint64_t v27 = (void *)((char *)a2 + v25);
  sub_22EB0584C((uint64_t)a1 + v25, &qword_26861CD68);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861CD68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v28 = sub_22EE7C400();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
  }
  else
  {
    *uint64_t v26 = *v27;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_OWORD *sub_22EDD410C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = _s22LocalizedPriceResourceVMa(0);
  uint64_t v7 = *(int *)(v6 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_22EE7F6E0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(v6 + 24);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = _s22LocalizedPriceResourceV6FormatOMa(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    uint64_t v37 = a3;
    uint64_t v23 = (int *)_s15PricePropertiesVMa(0);
    uint64_t v24 = v23[5];
    uint64_t v35 = &v13[v24];
    uint64_t v25 = &v14[v24];
    uint64_t v26 = sub_22EE7F5D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v35, v25, v26);
    v11(&v13[v23[6]], &v14[v23[6]], v10);
    uint64_t v27 = v23[7];
    a3 = v37;
    *(void *)&v13[v27] = *(void *)&v14[v27];
    goto LABEL_5;
  }
  if (EnumCaseMultiPayload == 2)
  {
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    uint64_t v36 = a3;
    uint64_t v17 = (int *)_s15PricePropertiesVMa(0);
    uint64_t v18 = v17[5];
    uint64_t v34 = &v13[v18];
    uint64_t v19 = &v14[v18];
    uint64_t v20 = sub_22EE7F5D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v34, v19, v20);
    v11(&v13[v17[6]], &v14[v17[6]], v10);
    uint64_t v21 = v17[7];
    a3 = v36;
    *(void *)&v13[v21] = *(void *)&v14[v21];
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
    v13[*(int *)(v22 + 48)] = v14[*(int *)(v22 + 48)];
LABEL_5:
    swift_storeEnumTagMultiPayload();
    goto LABEL_7;
  }
  memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
LABEL_7:
  uint64_t v28 = *(int *)(a3 + 20);
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861CD68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v32 = sub_22EE7C400();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v29, v30, v32);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  return a1;
}

void *sub_22EDD4410(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = _s22LocalizedPriceResourceVMa(0);
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_22EE7F6E0();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
  if (a1 != a2)
  {
    uint64_t v13 = *(int *)(v7 + 24);
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    sub_22EDC6154((uint64_t)a1 + v13, (void (*)(void))_s22LocalizedPriceResourceV6FormatOMa);
    uint64_t v16 = _s22LocalizedPriceResourceV6FormatOMa(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      uint64_t v38 = a3;
      uint64_t v25 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v26 = v25[5];
      uint64_t v27 = &v14[v26];
      uint64_t v28 = &v15[v26];
      uint64_t v29 = sub_22EE7F5D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v14[v25[6]], &v15[v25[6]], v11);
      uint64_t v30 = v25[7];
      a3 = v38;
      *(void *)&v14[v30] = *(void *)&v15[v30];
    }
    else
    {
      if (EnumCaseMultiPayload != 2)
      {
        memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
LABEL_8:
        uint64_t v31 = *(int *)(a3 + 20);
        uint64_t v32 = (char *)a1 + v31;
        uint64_t v33 = (char *)a2 + v31;
        sub_22EB0584C((uint64_t)a1 + v31, &qword_26861CD68);
        uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861CD68);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v35 = sub_22EE7C400();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v32, v33, v35);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
        }
        return a1;
      }
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      uint64_t v37 = a3;
      uint64_t v18 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v19 = v18[5];
      uint64_t v20 = &v14[v19];
      uint64_t v21 = &v15[v19];
      uint64_t v22 = sub_22EE7F5D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v14[v18[6]], &v15[v18[6]], v11);
      uint64_t v23 = v18[7];
      a3 = v37;
      *(void *)&v14[v23] = *(void *)&v15[v23];
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
      v14[*(int *)(v24 + 48)] = v15[*(int *)(v24 + 48)];
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_8;
  }
  return a1;
}

uint64_t sub_22EDD4768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EDD477C);
}

uint64_t sub_22EDD477C()
{
  uint64_t v1 = OUTLINED_FUNCTION_6_37();
  _s22LocalizedPriceResourceVMa(v1);
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v2 + 84) == v0)
  {
    uint64_t v3 = OUTLINED_FUNCTION_21_23();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268622178);
    uint64_t v3 = OUTLINED_FUNCTION_13_30();
  }

  return __swift_getEnumTagSinglePayload(v3, v0, v4);
}

uint64_t sub_22EDD47E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EDD47F8);
}

uint64_t sub_22EDD47F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_22Tm(a1, a2, a3, a4, (void (*)(void))_s22LocalizedPriceResourceVMa, &qword_268622178);
}

void sub_22EDD4818(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *sub_22EDD484C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v26 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  _s11PriceStringOMa(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v93 = a3;
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v27 = sub_22EE7F6E0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v27 - 8) + 16))(a1, a2, v27);
    uint64_t v28 = _s20LocalizationResourceVMa();
    *(_OWORD *)((char *)a1 + *(int *)(v28 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v28 + 20));
    goto LABEL_13;
  }
  if (EnumCaseMultiPayload != 1)
  {
    uint64_t v29 = a2[1];
    *a1 = *a2;
    a1[1] = v29;
    swift_bridgeObjectRetain();
    goto LABEL_13;
  }
  uint64_t v8 = a2[1];
  *a1 = *a2;
  a1[1] = v8;
  uint64_t v9 = _s22LocalizedPriceResourceVMa(0);
  uint64_t v10 = *(int *)(v9 + 20);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_22EE7F6E0();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
  swift_bridgeObjectRetain();
  uint64_t v91 = v13;
  v14(v11, v12, v13);
  uint64_t v15 = *(int *)(v9 + 24);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = _s22LocalizedPriceResourceV6FormatOMa(0);
  int v19 = swift_getEnumCaseMultiPayload();
  if (v19 == 3)
  {
    uint64_t v30 = *((void *)v17 + 1);
    *(void *)uint64_t v16 = *(void *)v17;
    *((void *)v16 + 1) = v30;
    uint64_t v31 = v14;
    uint64_t v32 = (int *)_s15PricePropertiesVMa(0);
    uint64_t v33 = v32[5];
    uint64_t v85 = &v17[v33];
    uint64_t v89 = &v16[v33];
    uint64_t v34 = sub_22EE7F5D0();
    uint64_t v81 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16);
    swift_bridgeObjectRetain();
    v81(v89, v85, v34);
    v31(&v16[v32[6]], &v17[v32[6]], v91);
    *(void *)&v16[v32[7]] = *(void *)&v17[v32[7]];
    goto LABEL_11;
  }
  if (v19 == 2)
  {
    uint64_t v20 = *((void *)v17 + 1);
    *(void *)uint64_t v16 = *(void *)v17;
    *((void *)v16 + 1) = v20;
    uint64_t v21 = v14;
    uint64_t v22 = (int *)_s15PricePropertiesVMa(0);
    uint64_t v23 = v22[5];
    uint64_t v84 = &v17[v23];
    uint64_t v88 = &v16[v23];
    uint64_t v24 = sub_22EE7F5D0();
    uint64_t v80 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
    swift_bridgeObjectRetain();
    v80(v88, v84, v24);
    v21(&v16[v22[6]], &v17[v22[6]], v91);
    *(void *)&v16[v22[7]] = *(void *)&v17[v22[7]];
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
    v16[*(int *)(v25 + 48)] = v17[*(int *)(v25 + 48)];
LABEL_11:
    swift_storeEnumTagMultiPayload();
    goto LABEL_13;
  }
  memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
LABEL_13:
  swift_storeEnumTagMultiPayload();
  uint64_t v35 = (int *)type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard(0);
  uint64_t v36 = v35[5];
  uint64_t v37 = (uint64_t *)((char *)a1 + v36);
  uint64_t v38 = (uint64_t *)((char *)a2 + v36);
  uint64_t v39 = v38[1];
  *uint64_t v37 = *v38;
  v37[1] = v39;
  uint64_t v40 = v35[6];
  uint64_t v41 = (char *)a1 + v40;
  uint64_t v42 = (char *)a2 + v40;
  uint64_t v43 = sub_22EE7C220();
  uint64_t v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16);
  swift_bridgeObjectRetain();
  v44(v41, v42, v43);
  uint64_t v45 = v35[7];
  uint64_t v46 = (uint64_t *)((char *)a1 + v45);
  uint64_t v47 = (uint64_t *)((char *)a2 + v45);
  int v48 = swift_getEnumCaseMultiPayload();
  if (v48 == 2)
  {
    uint64_t v65 = sub_22EE7F6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v65 - 8) + 16))(v46, v47, v65);
    uint64_t v66 = _s20LocalizationResourceVMa();
    *(_OWORD *)((char *)v46 + *(int *)(v66 + 20)) = *(_OWORD *)((char *)v47 + *(int *)(v66 + 20));
  }
  else
  {
    if (v48 == 1)
    {
      uint64_t v49 = v47[1];
      *uint64_t v46 = *v47;
      v46[1] = v49;
      uint64_t v50 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v51 = *(int *)(v50 + 20);
      int v52 = (char *)v46 + v51;
      uint64_t v92 = (char *)v47 + v51;
      uint64_t v53 = sub_22EE7F6E0();
      uint64_t v54 = *(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v90 = v54;
      v54(v52, v92, v53);
      uint64_t v55 = *(int *)(v50 + 24);
      uint64_t v56 = (char *)v46 + v55;
      uint64_t v57 = (char *)v47 + v55;
      uint64_t v58 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v59 = swift_getEnumCaseMultiPayload();
      if (v59 == 3)
      {
        uint64_t v69 = *((void *)v57 + 1);
        *(void *)uint64_t v56 = *(void *)v57;
        *((void *)v56 + 1) = v69;
        uint64_t v70 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v71 = v70[5];
        size_t v83 = &v57[v71];
        uint64_t v87 = &v56[v71];
        uint64_t v72 = sub_22EE7F5D0();
        uint64_t v79 = *(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16);
        swift_bridgeObjectRetain();
        v79(v87, v83, v72);
        v90(&v56[v70[6]], &v57[v70[6]], v53);
        *(void *)&v56[v70[7]] = *(void *)&v57[v70[7]];
      }
      else
      {
        if (v59 != 2)
        {
          memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
          goto LABEL_24;
        }
        uint64_t v60 = *((void *)v57 + 1);
        *(void *)uint64_t v56 = *(void *)v57;
        *((void *)v56 + 1) = v60;
        uint64_t v61 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v62 = v61[5];
        uint64_t v82 = &v57[v62];
        uint64_t v86 = &v56[v62];
        uint64_t v63 = sub_22EE7F5D0();
        uint64_t v78 = *(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16);
        swift_bridgeObjectRetain();
        v78(v86, v82, v63);
        v90(&v56[v61[6]], &v57[v61[6]], v53);
        *(void *)&v56[v61[7]] = *(void *)&v57[v61[7]];
        uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v56[*(int *)(v64 + 48)] = v57[*(int *)(v64 + 48)];
      }
      swift_storeEnumTagMultiPayload();
LABEL_24:
      uint64_t v68 = v93;
      goto LABEL_25;
    }
    uint64_t v67 = v47[1];
    *uint64_t v46 = *v47;
    v46[1] = v67;
    swift_bridgeObjectRetain();
  }
  uint64_t v68 = v93;
LABEL_25:
  swift_storeEnumTagMultiPayload();
  uint64_t v73 = *(int *)(v68 + 20);
  uint64_t v74 = (uint64_t *)((char *)a1 + v73);
  uint64_t v75 = (uint64_t *)((char *)a2 + v73);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861CDD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v76 = sub_22EE7DA60();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v76 - 8) + 16))(v74, v75, v76);
  }
  else
  {
    *uint64_t v74 = *v75;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_22EDD4FC8(uint64_t a1, uint64_t a2)
{
  _s11PriceStringOMa(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v14 = sub_22EE7F6E0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(a1, v14);
      break;
    case 1:
      swift_bridgeObjectRelease();
      uint64_t v5 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v6 = a1 + *(int *)(v5 + 20);
      uint64_t v7 = sub_22EE7F6E0();
      uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
      v8(v6, v7);
      uint64_t v9 = a1 + *(int *)(v5 + 24);
      _s22LocalizedPriceResourceV6FormatOMa(0);
      int v10 = swift_getEnumCaseMultiPayload();
      if (v10 == 3 || v10 == 2)
      {
        swift_bridgeObjectRelease();
        uint64_t v11 = _s15PricePropertiesVMa(0);
        uint64_t v12 = v9 + *(int *)(v11 + 20);
        uint64_t v13 = sub_22EE7F5D0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
        v8(v9 + *(int *)(v11 + 24), v7);
      }
      break;
    case 0:
      swift_bridgeObjectRelease();
      break;
  }
  uint64_t v15 = type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard(0);
  swift_bridgeObjectRelease();
  uint64_t v16 = a1 + *(int *)(v15 + 24);
  uint64_t v17 = sub_22EE7C220();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  uint64_t v18 = a1 + *(int *)(v15 + 28);
  int v19 = swift_getEnumCaseMultiPayload();
  switch(v19)
  {
    case 2:
      uint64_t v29 = sub_22EE7F6E0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v18, v29);
      break;
    case 1:
      swift_bridgeObjectRelease();
      uint64_t v20 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v21 = v18 + *(int *)(v20 + 20);
      uint64_t v22 = sub_22EE7F6E0();
      uint64_t v23 = *(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8);
      v23(v21, v22);
      uint64_t v24 = v18 + *(int *)(v20 + 24);
      _s22LocalizedPriceResourceV6FormatOMa(0);
      int v25 = swift_getEnumCaseMultiPayload();
      if (v25 == 3 || v25 == 2)
      {
        swift_bridgeObjectRelease();
        uint64_t v26 = _s15PricePropertiesVMa(0);
        uint64_t v27 = v24 + *(int *)(v26 + 20);
        uint64_t v28 = sub_22EE7F5D0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
        v23(v24 + *(int *)(v26 + 24), v22);
      }
      break;
    case 0:
      swift_bridgeObjectRelease();
      break;
  }
  uint64_t v30 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861CDD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v31 = sub_22EE7DA60();
    uint64_t v32 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8);
    return v32(v30, v31);
  }
  else
  {
    return swift_release();
  }
}

void *sub_22EDD53C8(void *a1, void *a2, uint64_t a3)
{
  _s11PriceStringOMa(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v90 = a3;
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v25 = sub_22EE7F6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
    uint64_t v26 = _s20LocalizationResourceVMa();
    *(_OWORD *)((char *)a1 + *(int *)(v26 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v26 + 20));
    goto LABEL_11;
  }
  if (EnumCaseMultiPayload != 1)
  {
    uint64_t v27 = a2[1];
    *a1 = *a2;
    a1[1] = v27;
    swift_bridgeObjectRetain();
    goto LABEL_11;
  }
  uint64_t v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  uint64_t v8 = _s22LocalizedPriceResourceVMa(0);
  uint64_t v9 = *(int *)(v8 + 20);
  int v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_22EE7F6E0();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  uint64_t v88 = v12;
  v13(v10, v11, v12);
  uint64_t v14 = *(int *)(v8 + 24);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = _s22LocalizedPriceResourceV6FormatOMa(0);
  int v18 = swift_getEnumCaseMultiPayload();
  if (v18 == 3)
  {
    uint64_t v28 = *((void *)v16 + 1);
    *(void *)uint64_t v15 = *(void *)v16;
    *((void *)v15 + 1) = v28;
    uint64_t v29 = (int *)_s15PricePropertiesVMa(0);
    uint64_t v30 = v29[5];
    uint64_t v31 = &v15[v30];
    uint64_t v87 = &v16[v30];
    uint64_t v32 = sub_22EE7F5D0();
    uint64_t v84 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16);
    swift_bridgeObjectRetain();
    v84(v31, v87, v32);
    v13(&v15[v29[6]], &v16[v29[6]], v88);
    *(void *)&v15[v29[7]] = *(void *)&v16[v29[7]];
    goto LABEL_9;
  }
  if (v18 == 2)
  {
    uint64_t v19 = *((void *)v16 + 1);
    *(void *)uint64_t v15 = *(void *)v16;
    *((void *)v15 + 1) = v19;
    uint64_t v20 = (int *)_s15PricePropertiesVMa(0);
    uint64_t v21 = v20[5];
    uint64_t v22 = &v15[v21];
    uint64_t v86 = &v16[v21];
    uint64_t v23 = sub_22EE7F5D0();
    size_t v83 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
    swift_bridgeObjectRetain();
    v83(v22, v86, v23);
    v13(&v15[v20[6]], &v16[v20[6]], v88);
    *(void *)&v15[v20[7]] = *(void *)&v16[v20[7]];
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
    v15[*(int *)(v24 + 48)] = v16[*(int *)(v24 + 48)];
LABEL_9:
    swift_storeEnumTagMultiPayload();
    goto LABEL_11;
  }
  memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
LABEL_11:
  swift_storeEnumTagMultiPayload();
  uint64_t v33 = (int *)type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard(0);
  uint64_t v34 = v33[5];
  uint64_t v35 = (void *)((char *)a1 + v34);
  uint64_t v36 = (void *)((char *)a2 + v34);
  uint64_t v37 = v36[1];
  void *v35 = *v36;
  v35[1] = v37;
  uint64_t v38 = v33[6];
  uint64_t v39 = (char *)a1 + v38;
  uint64_t v40 = (char *)a2 + v38;
  uint64_t v41 = sub_22EE7C220();
  uint64_t v42 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16);
  swift_bridgeObjectRetain();
  v42(v39, v40, v41);
  uint64_t v43 = v33[7];
  uint64_t v44 = (void *)((char *)a1 + v43);
  uint64_t v45 = (void *)((char *)a2 + v43);
  int v46 = swift_getEnumCaseMultiPayload();
  if (v46 == 2)
  {
    uint64_t v64 = sub_22EE7F6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v64 - 8) + 16))(v44, v45, v64);
    uint64_t v65 = _s20LocalizationResourceVMa();
    *(_OWORD *)((char *)v44 + *(int *)(v65 + 20)) = *(_OWORD *)((char *)v45 + *(int *)(v65 + 20));
LABEL_18:
    uint64_t v67 = v90;
    goto LABEL_22;
  }
  if (v46 != 1)
  {
    uint64_t v66 = v45[1];
    *uint64_t v44 = *v45;
    v44[1] = v66;
    swift_bridgeObjectRetain();
    goto LABEL_18;
  }
  uint64_t v89 = a2;
  uint64_t v47 = v45[1];
  *uint64_t v44 = *v45;
  v44[1] = v47;
  uint64_t v48 = _s22LocalizedPriceResourceVMa(0);
  uint64_t v49 = *(int *)(v48 + 20);
  uint64_t v50 = (char *)v44 + v49;
  uint64_t v51 = (char *)v45 + v49;
  uint64_t v52 = sub_22EE7F6E0();
  uint64_t v53 = *(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16);
  swift_bridgeObjectRetain();
  uint64_t v85 = v53;
  v53(v50, v51, v52);
  uint64_t v54 = *(int *)(v48 + 24);
  uint64_t v55 = (char *)v44 + v54;
  uint64_t v56 = (char *)v45 + v54;
  uint64_t v57 = _s22LocalizedPriceResourceV6FormatOMa(0);
  int v58 = swift_getEnumCaseMultiPayload();
  if (v58 == 3)
  {
    uint64_t v68 = *((void *)v56 + 1);
    *(void *)uint64_t v55 = *(void *)v56;
    *((void *)v55 + 1) = v68;
    uint64_t v69 = (int *)_s15PricePropertiesVMa(0);
    uint64_t v70 = v69[5];
    uint64_t v71 = &v55[v70];
    uint64_t v82 = &v56[v70];
    uint64_t v72 = sub_22EE7F5D0();
    uint64_t v80 = *(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16);
    swift_bridgeObjectRetain();
    v80(v71, v82, v72);
    v85(&v55[v69[6]], &v56[v69[6]], v52);
    *(void *)&v55[v69[7]] = *(void *)&v56[v69[7]];
    swift_storeEnumTagMultiPayload();
    uint64_t v67 = v90;
    a2 = v89;
  }
  else
  {
    if (v58 == 2)
    {
      uint64_t v59 = *((void *)v56 + 1);
      *(void *)uint64_t v55 = *(void *)v56;
      *((void *)v55 + 1) = v59;
      uint64_t v60 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v61 = v60[5];
      uint64_t v79 = &v56[v61];
      uint64_t v81 = &v55[v61];
      uint64_t v62 = sub_22EE7F5D0();
      uint64_t v78 = *(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16);
      swift_bridgeObjectRetain();
      v78(v81, v79, v62);
      v85(&v55[v60[6]], &v56[v60[6]], v52);
      *(void *)&v55[v60[7]] = *(void *)&v56[v60[7]];
      uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
      v55[*(int *)(v63 + 48)] = v56[*(int *)(v63 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
    }
    uint64_t v67 = v90;
  }
LABEL_22:
  swift_storeEnumTagMultiPayload();
  uint64_t v73 = *(int *)(v67 + 20);
  uint64_t v74 = (void *)((char *)a1 + v73);
  uint64_t v75 = (void *)((char *)a2 + v73);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861CDD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v76 = sub_22EE7DA60();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v76 - 8) + 16))(v74, v75, v76);
  }
  else
  {
    *uint64_t v74 = *v75;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_22EDD5B0C(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_22EDC6154((uint64_t)a1, (void (*)(void))_s11PriceStringOMa);
    _s11PriceStringOMa(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v24 = sub_22EE7F6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(a1, a2, v24);
      uint64_t v25 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)a1 + *(int *)(v25 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v25 + 20));
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v84 = a3;
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t v7 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v8 = *(int *)(v7 + 20);
      uint64_t v9 = (char *)a1 + v8;
      int v10 = (char *)a2 + v8;
      uint64_t v11 = sub_22EE7F6E0();
      uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v81 = v11;
      v12(v9, v10, v11);
      uint64_t v13 = *(int *)(v7 + 24);
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v17 = swift_getEnumCaseMultiPayload();
      if (v17 == 3)
      {
        *(void *)uint64_t v14 = *(void *)v15;
        *((void *)v14 + 1) = *((void *)v15 + 1);
        uint64_t v26 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v27 = v26[5];
        uint64_t v78 = &v15[v27];
        uint64_t v80 = &v14[v27];
        uint64_t v28 = sub_22EE7F5D0();
        uint64_t v74 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v29 = v28;
        a3 = v84;
        v74(v80, v78, v29);
        v12(&v14[v26[6]], &v15[v26[6]], v81);
        *(void *)&v14[v26[7]] = *(void *)&v15[v26[7]];
      }
      else
      {
        a3 = v84;
        if (v17 != 2)
        {
          memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
          goto LABEL_12;
        }
        *(void *)uint64_t v14 = *(void *)v15;
        *((void *)v14 + 1) = *((void *)v15 + 1);
        int v18 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v19 = v18[5];
        uint64_t v77 = &v15[v19];
        uint64_t v79 = &v14[v19];
        uint64_t v20 = v12;
        uint64_t v21 = sub_22EE7F5D0();
        uint64_t v73 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
        swift_bridgeObjectRetain();
        v73(v79, v77, v21);
        v20(&v14[v18[6]], &v15[v18[6]], v81);
        uint64_t v22 = v18[7];
        a3 = v84;
        *(void *)&v14[v22] = *(void *)&v15[v22];
        uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v14[*(int *)(v23 + 48)] = v15[*(int *)(v23 + 48)];
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
LABEL_12:
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v30 = (int *)type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard(0);
  uint64_t v31 = v30[5];
  uint64_t v32 = (void *)((char *)a1 + v31);
  uint64_t v33 = (void *)((char *)a2 + v31);
  *uint64_t v32 = *v33;
  v32[1] = v33[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v34 = v30[6];
  uint64_t v35 = (char *)a1 + v34;
  uint64_t v36 = (char *)a2 + v34;
  uint64_t v37 = sub_22EE7C220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 24))(v35, v36, v37);
  if (a1 == a2) {
    return a1;
  }
  uint64_t v38 = v30[7];
  uint64_t v39 = (void *)((char *)a1 + v38);
  uint64_t v40 = (void *)((char *)a2 + v38);
  sub_22EDC6154((uint64_t)a1 + v38, (void (*)(void))_s11PriceStringOMa);
  _s11PriceStringOMa(0);
  int v41 = swift_getEnumCaseMultiPayload();
  if (v41 == 2)
  {
    uint64_t v59 = sub_22EE7F6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v59 - 8) + 16))(v39, v40, v59);
    uint64_t v60 = _s20LocalizationResourceVMa();
    *(_OWORD *)((char *)v39 + *(int *)(v60 + 20)) = *(_OWORD *)((char *)v40 + *(int *)(v60 + 20));
  }
  else
  {
    if (v41 == 1)
    {
      uint64_t v85 = a3;
      *uint64_t v39 = *v40;
      v39[1] = v40[1];
      uint64_t v42 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v43 = *(int *)(v42 + 20);
      uint64_t v82 = (char *)v39 + v43;
      uint64_t v44 = (char *)v40 + v43;
      uint64_t v45 = sub_22EE7F6E0();
      int v46 = *(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v47 = v82;
      uint64_t v83 = v45;
      uint64_t v48 = v45;
      uint64_t v49 = v46;
      v46(v47, v44, v48);
      uint64_t v50 = *(int *)(v42 + 24);
      uint64_t v51 = (char *)v39 + v50;
      uint64_t v52 = (char *)v40 + v50;
      uint64_t v53 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v54 = swift_getEnumCaseMultiPayload();
      if (v54 == 3)
      {
        *(void *)uint64_t v51 = *(void *)v52;
        *((void *)v51 + 1) = *((void *)v52 + 1);
        uint64_t v61 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v62 = v61[5];
        uint64_t v72 = &v52[v62];
        uint64_t v76 = &v51[v62];
        uint64_t v63 = sub_22EE7F5D0();
        uint64_t v70 = *(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16);
        swift_bridgeObjectRetain();
        v70(v76, v72, v63);
        v49(&v51[v61[6]], &v52[v61[6]], v83);
        *(void *)&v51[v61[7]] = *(void *)&v52[v61[7]];
      }
      else
      {
        if (v54 != 2)
        {
          memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
          goto LABEL_24;
        }
        *(void *)uint64_t v51 = *(void *)v52;
        *((void *)v51 + 1) = *((void *)v52 + 1);
        uint64_t v55 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v56 = v55[5];
        uint64_t v71 = &v52[v56];
        uint64_t v75 = &v51[v56];
        uint64_t v57 = sub_22EE7F5D0();
        uint64_t v69 = *(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16);
        swift_bridgeObjectRetain();
        v69(v75, v71, v57);
        v49(&v51[v55[6]], &v52[v55[6]], v83);
        *(void *)&v51[v55[7]] = *(void *)&v52[v55[7]];
        uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v51[*(int *)(v58 + 48)] = v52[*(int *)(v58 + 48)];
      }
      swift_storeEnumTagMultiPayload();
LABEL_24:
      a3 = v85;
      goto LABEL_25;
    }
    *uint64_t v39 = *v40;
    v39[1] = v40[1];
    swift_bridgeObjectRetain();
  }
LABEL_25:
  swift_storeEnumTagMultiPayload();
  uint64_t v64 = *(int *)(a3 + 20);
  uint64_t v65 = (void *)((char *)a1 + v64);
  uint64_t v66 = (void *)((char *)a2 + v64);
  sub_22EB0584C((uint64_t)a1 + v64, &qword_26861CDD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861CDD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v67 = sub_22EE7DA60();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v67 - 8) + 16))(v65, v66, v67);
  }
  else
  {
    *uint64_t v65 = *v66;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_OWORD *sub_22EDD62F8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = _s11PriceStringOMa(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v25 = sub_22EE7F6E0();
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v25 - 8) + 32))(a1, a2, v25);
    uint64_t v26 = _s20LocalizationResourceVMa();
    *(_OWORD *)((char *)a1 + *(int *)(v26 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v26 + 20));
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_12;
    }
    *a1 = *a2;
    uint64_t v8 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v9 = *(int *)(v8 + 20);
    int v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_22EE7F6E0();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32);
    v13(v10, v11, v12);
    uint64_t v14 = *(int *)(v8 + 24);
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = _s22LocalizedPriceResourceV6FormatOMa(0);
    int v18 = swift_getEnumCaseMultiPayload();
    if (v18 == 3)
    {
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      uint64_t v74 = v13;
      uint64_t v77 = a3;
      uint64_t v27 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v28 = v27[5];
      uint64_t v29 = &v15[v28];
      uint64_t v70 = &v16[v28];
      uint64_t v30 = sub_22EE7F5D0();
      uint64_t v31 = v29;
      a3 = v77;
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v31, v70, v30);
      v74(&v15[v27[6]], &v16[v27[6]], v12);
      *(void *)&v15[v27[7]] = *(void *)&v16[v27[7]];
    }
    else
    {
      if (v18 != 2)
      {
        memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
        goto LABEL_11;
      }
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      uint64_t v73 = v13;
      uint64_t v76 = a3;
      uint64_t v19 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v20 = v19[5];
      uint64_t v69 = &v15[v20];
      uint64_t v21 = &v16[v20];
      uint64_t v22 = sub_22EE7F5D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v69, v21, v22);
      v73(&v15[v19[6]], &v16[v19[6]], v12);
      uint64_t v23 = v19[7];
      a3 = v76;
      *(void *)&v15[v23] = *(void *)&v16[v23];
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
      v15[*(int *)(v24 + 48)] = v16[*(int *)(v24 + 48)];
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_11:
  swift_storeEnumTagMultiPayload();
LABEL_12:
  uint64_t v32 = (int *)type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard(0);
  *(_OWORD *)((char *)a1 + v32[5]) = *(_OWORD *)((char *)a2 + v32[5]);
  uint64_t v33 = v32[6];
  uint64_t v34 = (char *)a1 + v33;
  uint64_t v35 = (char *)a2 + v33;
  uint64_t v36 = sub_22EE7C220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
  uint64_t v37 = v32[7];
  uint64_t v38 = (_OWORD *)((char *)a1 + v37);
  uint64_t v39 = (_OWORD *)((char *)a2 + v37);
  int v40 = swift_getEnumCaseMultiPayload();
  if (v40 != 2)
  {
    if (v40 != 1)
    {
      memcpy(v38, v39, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_24;
    }
    uint64_t v78 = a3;
    *uint64_t v38 = *v39;
    uint64_t v41 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v42 = *(int *)(v41 + 20);
    uint64_t v43 = (char *)v38 + v42;
    uint64_t v44 = (char *)v39 + v42;
    uint64_t v45 = sub_22EE7F6E0();
    int v46 = (void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32);
    uint64_t v75 = *v46;
    (*v46)(v43, v44, v45);
    uint64_t v47 = *(int *)(v41 + 24);
    uint64_t v48 = (char *)v38 + v47;
    uint64_t v49 = (char *)v39 + v47;
    uint64_t v50 = _s22LocalizedPriceResourceV6FormatOMa(0);
    int v51 = swift_getEnumCaseMultiPayload();
    if (v51 == 3)
    {
      *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
      uint64_t v58 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v59 = v58[5];
      uint64_t v68 = &v49[v59];
      uint64_t v72 = &v48[v59];
      uint64_t v60 = sub_22EE7F5D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(v72, v68, v60);
      v75(&v48[v58[6]], &v49[v58[6]], v45);
      *(void *)&v48[v58[7]] = *(void *)&v49[v58[7]];
    }
    else
    {
      if (v51 != 2)
      {
        memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
        goto LABEL_22;
      }
      *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
      uint64_t v52 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v53 = v52[5];
      uint64_t v67 = &v49[v53];
      uint64_t v71 = &v48[v53];
      uint64_t v54 = sub_22EE7F5D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32))(v71, v67, v54);
      v75(&v48[v52[6]], &v49[v52[6]], v45);
      *(void *)&v48[v52[7]] = *(void *)&v49[v52[7]];
      uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
      v48[*(int *)(v55 + 48)] = v49[*(int *)(v55 + 48)];
    }
    swift_storeEnumTagMultiPayload();
LABEL_22:
    a3 = v78;
    goto LABEL_23;
  }
  uint64_t v56 = sub_22EE7F6E0();
  (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v56 - 8) + 32))(v38, v39, v56);
  uint64_t v57 = _s20LocalizationResourceVMa();
  *(_OWORD *)((char *)v38 + *(int *)(v57 + 20)) = *(_OWORD *)((char *)v39 + *(int *)(v57 + 20));
LABEL_23:
  swift_storeEnumTagMultiPayload();
LABEL_24:
  uint64_t v61 = *(int *)(a3 + 20);
  uint64_t v62 = (char *)a1 + v61;
  uint64_t v63 = (char *)a2 + v61;
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861CDD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v65 = sub_22EE7DA60();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 32))(v62, v63, v65);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_22EDD69EC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_22EDC6154((uint64_t)a1, (void (*)(void))_s11PriceStringOMa);
    uint64_t v6 = _s11PriceStringOMa(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v25 = sub_22EE7F6E0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v25 - 8) + 32))(a1, a2, v25);
      uint64_t v26 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)a1 + *(int *)(v26 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v26 + 20));
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        goto LABEL_13;
      }
      *a1 = *a2;
      uint64_t v8 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v9 = *(int *)(v8 + 20);
      int v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_22EE7F6E0();
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32);
      v13(v10, v11, v12);
      uint64_t v14 = *(int *)(v8 + 24);
      uint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      uint64_t v17 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v18 = swift_getEnumCaseMultiPayload();
      if (v18 == 3)
      {
        *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
        uint64_t v80 = v13;
        uint64_t v83 = a3;
        uint64_t v27 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v28 = v27[5];
        uint64_t v29 = &v15[v28];
        uint64_t v76 = &v16[v28];
        uint64_t v30 = sub_22EE7F5D0();
        uint64_t v31 = v29;
        a3 = v83;
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v31, v76, v30);
        v80(&v15[v27[6]], &v16[v27[6]], v12);
        *(void *)&v15[v27[7]] = *(void *)&v16[v27[7]];
      }
      else
      {
        if (v18 != 2)
        {
          memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
          goto LABEL_12;
        }
        *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
        uint64_t v79 = v13;
        uint64_t v82 = a3;
        uint64_t v19 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v20 = v19[5];
        uint64_t v75 = &v15[v20];
        uint64_t v21 = &v16[v20];
        uint64_t v22 = sub_22EE7F5D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v75, v21, v22);
        v79(&v15[v19[6]], &v16[v19[6]], v12);
        uint64_t v23 = v19[7];
        a3 = v82;
        *(void *)&v15[v23] = *(void *)&v16[v23];
        uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v15[*(int *)(v24 + 48)] = v16[*(int *)(v24 + 48)];
      }
      swift_storeEnumTagMultiPayload();
    }
LABEL_12:
    swift_storeEnumTagMultiPayload();
  }
LABEL_13:
  uint64_t v32 = (int *)type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard(0);
  uint64_t v33 = v32[5];
  uint64_t v34 = (void *)((char *)a1 + v33);
  uint64_t v35 = (uint64_t *)((char *)a2 + v33);
  uint64_t v37 = *v35;
  uint64_t v36 = v35[1];
  *uint64_t v34 = v37;
  v34[1] = v36;
  swift_bridgeObjectRelease();
  uint64_t v38 = v32[6];
  uint64_t v39 = (char *)a1 + v38;
  int v40 = (char *)a2 + v38;
  uint64_t v41 = sub_22EE7C220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 40))(v39, v40, v41);
  if (a1 == a2) {
    return a1;
  }
  uint64_t v42 = v32[7];
  uint64_t v43 = (_OWORD *)((char *)a1 + v42);
  uint64_t v44 = (_OWORD *)((char *)a2 + v42);
  sub_22EDC6154((uint64_t)a1 + v42, (void (*)(void))_s11PriceStringOMa);
  uint64_t v45 = _s11PriceStringOMa(0);
  int v46 = swift_getEnumCaseMultiPayload();
  if (v46 != 2)
  {
    if (v46 != 1)
    {
      memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
      goto LABEL_26;
    }
    uint64_t v84 = a3;
    *uint64_t v43 = *v44;
    uint64_t v47 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v48 = *(int *)(v47 + 20);
    uint64_t v49 = (char *)v43 + v48;
    uint64_t v50 = (char *)v44 + v48;
    uint64_t v51 = sub_22EE7F6E0();
    uint64_t v52 = (void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32);
    uint64_t v81 = *v52;
    (*v52)(v49, v50, v51);
    uint64_t v53 = *(int *)(v47 + 24);
    uint64_t v54 = (char *)v43 + v53;
    uint64_t v55 = (char *)v44 + v53;
    uint64_t v56 = _s22LocalizedPriceResourceV6FormatOMa(0);
    int v57 = swift_getEnumCaseMultiPayload();
    if (v57 == 3)
    {
      *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
      uint64_t v64 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v65 = v64[5];
      uint64_t v74 = &v55[v65];
      uint64_t v78 = &v54[v65];
      uint64_t v66 = sub_22EE7F5D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 32))(v78, v74, v66);
      v81(&v54[v64[6]], &v55[v64[6]], v51);
      *(void *)&v54[v64[7]] = *(void *)&v55[v64[7]];
    }
    else
    {
      if (v57 != 2)
      {
        memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
        goto LABEL_24;
      }
      *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
      uint64_t v58 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v59 = v58[5];
      uint64_t v73 = &v55[v59];
      uint64_t v77 = &v54[v59];
      uint64_t v60 = sub_22EE7F5D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(v77, v73, v60);
      v81(&v54[v58[6]], &v55[v58[6]], v51);
      *(void *)&v54[v58[7]] = *(void *)&v55[v58[7]];
      uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
      v54[*(int *)(v61 + 48)] = v55[*(int *)(v61 + 48)];
    }
    swift_storeEnumTagMultiPayload();
LABEL_24:
    a3 = v84;
    goto LABEL_25;
  }
  uint64_t v62 = sub_22EE7F6E0();
  (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v62 - 8) + 32))(v43, v44, v62);
  uint64_t v63 = _s20LocalizationResourceVMa();
  *(_OWORD *)((char *)v43 + *(int *)(v63 + 20)) = *(_OWORD *)((char *)v44 + *(int *)(v63 + 20));
LABEL_25:
  swift_storeEnumTagMultiPayload();
LABEL_26:
  uint64_t v67 = *(int *)(a3 + 20);
  uint64_t v68 = (char *)a1 + v67;
  uint64_t v69 = (char *)a2 + v67;
  sub_22EB0584C((uint64_t)a1 + v67, &qword_26861CDD0);
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861CDD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v71 = sub_22EE7DA60();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(v68, v69, v71);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
  }
  return a1;
}

uint64_t sub_22EDD7150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EDD7164);
}

uint64_t sub_22EDD7164()
{
  uint64_t v1 = OUTLINED_FUNCTION_6_37();
  type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard(v1);
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v2 + 84) == v0)
  {
    uint64_t v3 = OUTLINED_FUNCTION_21_23();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268626D98);
    uint64_t v3 = OUTLINED_FUNCTION_13_30();
  }

  return __swift_getEnumTagSinglePayload(v3, v0, v4);
}

uint64_t sub_22EDD71CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EDD71E0);
}

uint64_t sub_22EDD71E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_22Tm(a1, a2, a3, a4, (void (*)(void))type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard, &qword_268626D98);
}

uint64_t __swift_store_extra_inhabitant_index_22Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4, void (*a5)(void), uint64_t *a6)
{
  a5(0);
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v8 + 84) != a3) {
    __swift_instantiateConcreteTypeFromMangledName(a6);
  }
  OUTLINED_FUNCTION_18_23();

  return __swift_storeEnumTagSinglePayload(v9, v10, v11, v12);
}

void sub_22EDD7290(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_22EDD72C4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), unint64_t *a5, void (*a6)(uint64_t))
{
  a4(319);
  if (v8 <= 0x3F)
  {
    sub_22EDD73A8(319, a5, a6);
    if (v9 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_22EDD73A8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_22EE7C7E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_22EDD7400()
{
  unint64_t result = qword_268626DB8;
  if (!qword_268626DB8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861BD70);
    sub_22EADDD7C(&qword_268626DC0, &qword_26861BD68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268626DB8);
  }
  return result;
}

unint64_t sub_22EDD74A4()
{
  unint64_t result = qword_268626DC8;
  if (!qword_268626DC8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268626DD0);
    sub_22EDD2BA0();
    sub_22EDD2CB8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268626DC8);
  }
  return result;
}

uint64_t sub_22EDD7520()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EDD753C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EDD7558@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22EDCBC74();
  *a1 = result & 1;
  return result;
}

uint64_t sub_22EDD7588()
{
  return sub_22EDCBCB0();
}

unint64_t sub_22EDD75B0()
{
  unint64_t result = qword_268626DD8;
  if (!qword_268626DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268626DD8);
  }
  return result;
}

uint64_t sub_22EDD75FC(uint64_t *a1, uint64_t *a2)
{
  return sub_22EDD2DEC(*a1, a1[1], *a2, a2[1]) & 1;
}

uint64_t sub_22EDD7628(uint64_t *a1)
{
  return sub_22EDD75FC(a1, *(uint64_t **)(v1 + 16)) & 1;
}

uint64_t sub_22EDD7648()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_22EDD7680()
{
  return swift_deallocObject();
}

uint64_t sub_22EDD7690(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    sub_22EADDD7C(&qword_26861C3E8, &qword_26861C3F0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22EDD7734()
{
  unint64_t result = qword_268626E08;
  if (!qword_268626E08)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268626DE8);
    sub_22EDD77A8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268626E08);
  }
  return result;
}

unint64_t sub_22EDD77A8()
{
  unint64_t result = qword_268626E10;
  if (!qword_268626E10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268626E18);
    sub_22EDD2C70(&qword_268626E20, (void (*)(uint64_t))type metadata accessor for CompactOptionLowerLabel.Standard.MultilineLabel);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268626E10);
  }
  return result;
}

uint64_t type metadata accessor for CompactOptionLowerLabel.Standard.MultilineLabel(uint64_t a1)
{
  return sub_22EAD01C0(a1, (uint64_t *)&unk_268626E30);
}

uint64_t *sub_22EDD7874(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    unint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_22EE7C220();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_22EDD795C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_22EE7C220();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_22EDD79D4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_22EE7C220();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *sub_22EDD7A6C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_22EE7C220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_22EDD7B08(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_22EE7C220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_22EDD7B84(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_22EE7C220();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_22EDD7C10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EDD7C24);
}

uint64_t sub_22EDD7C24(uint64_t a1, uint64_t a2)
{
  if (a2 == 0x7FFFFFFF) {
    return OUTLINED_FUNCTION_20_0(*(void *)(a1 + 8));
  }
  sub_22EE7C220();
  uint64_t v4 = OUTLINED_FUNCTION_13_30();

  return __swift_getEnumTagSinglePayload(v4, a2, v5);
}

uint64_t sub_22EDD7C98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EDD7CAC);
}

uint64_t sub_22EDD7CAC(uint64_t result, int a2, int a3)
{
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_22EE7C220();
    OUTLINED_FUNCTION_18_23();
    return __swift_storeEnumTagSinglePayload(v3, v4, v5, v6);
  }
  return result;
}

uint64_t sub_22EDD7D28()
{
  uint64_t result = sub_22EE7C220();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_22EDD7DC0()
{
  return sub_22EADDD7C(&qword_268626E40, &qword_268626E48);
}

unint64_t sub_22EDD7E00()
{
  unint64_t result = qword_268626E50;
  if (!qword_268626E50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268626E58);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268626DF0);
    sub_22EDD7690(&qword_268626E00, &qword_268626DF0, (void (*)(void))sub_22EDD7734);
    swift_getOpaqueTypeConformance2();
    sub_22EDD2C70((unint64_t *)&qword_26861C3C0, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268626E50);
  }
  return result;
}

uint64_t sub_22EDD7F0C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EDD7F28()
{
  return sub_22EADDD7C(&qword_268626E60, &qword_268626E68);
}

uint64_t OUTLINED_FUNCTION_5_28()
{
  return sub_22EE7CEE0();
}

uint64_t OUTLINED_FUNCTION_6_37()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_12_28()
{
  return swift_getTupleTypeMetadata2();
}

uint64_t OUTLINED_FUNCTION_13_30()
{
  return v0 + *(int *)(v1 + 20);
}

uint64_t OUTLINED_FUNCTION_14_29()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_19_20()
{
  return v0 + *(int *)(v1 + 24);
}

uint64_t OUTLINED_FUNCTION_21_23()
{
  return v0;
}

uint64_t sub_22EDD8004(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      uint64_t v26 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v26;
      *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
      *(void *)(a1 + 24) = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_29:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    uint64_t v6 = _s11PriceStringOMa(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v27 = sub_22EE7F6E0();
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v27 - 8) + 16))(a1, a2, v27);
      uint64_t v28 = _s20LocalizationResourceVMa();
      *(_OWORD *)(a1 + *(int *)(v28 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v28 + 20));
      goto LABEL_16;
    }
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v29 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v29;
      swift_bridgeObjectRetain();
      goto LABEL_16;
    }
    uint64_t v80 = v6;
    uint64_t v8 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v8;
    uint64_t v9 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v10 = *(int *)(v9 + 20);
    uint64_t v11 = a1 + v10;
    uint64_t v12 = (uint64_t)a2 + v10;
    uint64_t v13 = sub_22EE7F6E0();
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    uint64_t v15 = *(int *)(v9 + 24);
    uint64_t v16 = (char *)(a1 + v15);
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = _s22LocalizedPriceResourceV6FormatOMa(0);
    int v19 = swift_getEnumCaseMultiPayload();
    if (v19 == 3)
    {
      uint64_t v30 = *((void *)v17 + 1);
      *(void *)uint64_t v16 = *(void *)v17;
      *((void *)v16 + 1) = v30;
      uint64_t v77 = (void (*)(char *, char *, uint64_t))v14;
      uint64_t v31 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v32 = v31[5];
      uint64_t v69 = &v17[v32];
      uint64_t v73 = &v16[v32];
      uint64_t v33 = sub_22EE7F5D0();
      uint64_t v65 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
      swift_bridgeObjectRetain();
      v65(v73, v69, v33);
      v77(&v16[v31[6]], &v17[v31[6]], v13);
      *(void *)&v16[v31[7]] = *(void *)&v17[v31[7]];
    }
    else
    {
      if (v19 != 2)
      {
        memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
        goto LABEL_15;
      }
      uint64_t v20 = *((void *)v17 + 1);
      *(void *)uint64_t v16 = *(void *)v17;
      *((void *)v16 + 1) = v20;
      uint64_t v76 = (void (*)(char *, char *, uint64_t))v14;
      uint64_t v21 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v22 = v21[5];
      uint64_t v68 = &v17[v22];
      uint64_t v72 = &v16[v22];
      uint64_t v23 = sub_22EE7F5D0();
      uint64_t v64 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
      swift_bridgeObjectRetain();
      v64(v72, v68, v23);
      v76(&v16[v21[6]], &v17[v21[6]], v13);
      *(void *)&v16[v21[7]] = *(void *)&v17[v21[7]];
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
      v16[*(int *)(v24 + 48)] = v17[*(int *)(v24 + 48)];
    }
    swift_storeEnumTagMultiPayload();
LABEL_15:
    uint64_t v6 = v80;
LABEL_16:
    swift_storeEnumTagMultiPayload();
    uint64_t v34 = *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
    uint64_t v35 = (void *)(a1 + v34);
    uint64_t v36 = (uint64_t *)((char *)a2 + v34);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v34, 1, v6))
    {
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F8);
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
      goto LABEL_29;
    }
    int v38 = swift_getEnumCaseMultiPayload();
    if (v38 == 2)
    {
      uint64_t v56 = sub_22EE7F6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v56 - 8) + 16))(v35, v36, v56);
      uint64_t v57 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)v35 + *(int *)(v57 + 20)) = *(_OWORD *)((char *)v36 + *(int *)(v57 + 20));
    }
    else if (v38 == 1)
    {
      uint64_t v39 = v36[1];
      void *v35 = *v36;
      v35[1] = v39;
      uint64_t v40 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v41 = *(int *)(v40 + 20);
      uint64_t v78 = (char *)v36 + v41;
      uint64_t v81 = (char *)v35 + v41;
      uint64_t v42 = sub_22EE7F6E0();
      uint64_t v43 = *(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v45 = v78;
      uint64_t v44 = v81;
      uint64_t v79 = v42;
      uint64_t v82 = v43;
      v43(v44, v45, v42);
      uint64_t v46 = *(int *)(v40 + 24);
      uint64_t v47 = (char *)v35 + v46;
      uint64_t v48 = (char *)v36 + v46;
      uint64_t v49 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v50 = swift_getEnumCaseMultiPayload();
      if (v50 == 3)
      {
        uint64_t v59 = *((void *)v48 + 1);
        *(void *)uint64_t v47 = *(void *)v48;
        *((void *)v47 + 1) = v59;
        uint64_t v60 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v61 = v60[5];
        uint64_t v71 = &v48[v61];
        uint64_t v75 = &v47[v61];
        uint64_t v62 = sub_22EE7F5D0();
        uint64_t v67 = *(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16);
        swift_bridgeObjectRetain();
        v67(v75, v71, v62);
        v82(&v47[v60[6]], &v48[v60[6]], v79);
        *(void *)&v47[v60[7]] = *(void *)&v48[v60[7]];
      }
      else
      {
        if (v50 != 2)
        {
          memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
          goto LABEL_28;
        }
        uint64_t v51 = *((void *)v48 + 1);
        *(void *)uint64_t v47 = *(void *)v48;
        *((void *)v47 + 1) = v51;
        uint64_t v52 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v53 = v52[5];
        uint64_t v70 = &v48[v53];
        uint64_t v74 = &v47[v53];
        uint64_t v54 = sub_22EE7F5D0();
        uint64_t v66 = *(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16);
        swift_bridgeObjectRetain();
        v66(v74, v70, v54);
        v82(&v47[v52[6]], &v48[v52[6]], v79);
        *(void *)&v47[v52[7]] = *(void *)&v48[v52[7]];
        uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v47[*(int *)(v55 + 48)] = v48[*(int *)(v55 + 48)];
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      uint64_t v58 = v36[1];
      void *v35 = *v36;
      v35[1] = v58;
      swift_bridgeObjectRetain();
    }
LABEL_28:
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v35, 0, 1, v6);
    goto LABEL_29;
  }
  uint64_t v25 = *a2;
  *(void *)a1 = *a2;
  a1 = v25 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return a1;
}

uint64_t type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(uint64_t a1)
{
  return sub_22EAD01C0(a1, (uint64_t *)&unk_268626E80);
}

uint64_t sub_22EDD8758(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    return swift_bridgeObjectRelease();
  }
  uint64_t v2 = _s11PriceStringOMa(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v14 = sub_22EE7F6E0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(a1, v14);
      break;
    case 1:
      swift_bridgeObjectRelease();
      uint64_t v5 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v6 = a1 + *(int *)(v5 + 20);
      uint64_t v7 = sub_22EE7F6E0();
      uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
      v8(v6, v7);
      uint64_t v9 = a1 + *(int *)(v5 + 24);
      _s22LocalizedPriceResourceV6FormatOMa(0);
      int v10 = swift_getEnumCaseMultiPayload();
      if (v10 == 3 || v10 == 2)
      {
        swift_bridgeObjectRelease();
        uint64_t v11 = _s15PricePropertiesVMa(0);
        uint64_t v12 = v9 + *(int *)(v11 + 20);
        uint64_t v13 = sub_22EE7F5D0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
        v8(v9 + *(int *)(v11 + 24), v7);
      }
      break;
    case 0:
      swift_bridgeObjectRelease();
      break;
  }
  uint64_t v15 = a1 + *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
  uint64_t result = __swift_getEnumTagSinglePayload(v15, 1, v2);
  if (!result)
  {
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result == 2)
    {
      uint64_t v26 = sub_22EE7F6E0();
      uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8);
      uint64_t v24 = v26;
      uint64_t v23 = v15;
    }
    else
    {
      if (result != 1)
      {
        if (result) {
          return result;
        }
        goto LABEL_7;
      }
      swift_bridgeObjectRelease();
      uint64_t v16 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v17 = v15 + *(int *)(v16 + 20);
      uint64_t v18 = sub_22EE7F6E0();
      uint64_t v27 = *(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8);
      v27(v17, v18);
      uint64_t v19 = v15 + *(int *)(v16 + 24);
      _s22LocalizedPriceResourceV6FormatOMa(0);
      uint64_t result = swift_getEnumCaseMultiPayload();
      if (result != 3 && result != 2) {
        return result;
      }
      swift_bridgeObjectRelease();
      uint64_t v20 = _s15PricePropertiesVMa(0);
      uint64_t v21 = v19 + *(int *)(v20 + 20);
      uint64_t v22 = sub_22EE7F5D0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
      uint64_t v23 = v19 + *(int *)(v20 + 24);
      uint64_t v24 = v18;
      uint64_t v25 = (uint64_t (*)(uint64_t, uint64_t))v27;
    }
    return v25(v23, v24);
  }
  return result;
}

uint64_t sub_22EDD8ADC(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = _s11PriceStringOMa(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v24 = sub_22EE7F6E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(a1, a2, v24);
      uint64_t v25 = _s20LocalizationResourceVMa();
      *(_OWORD *)(a1 + *(int *)(v25 + 20)) = *(_OWORD *)(a2 + *(int *)(v25 + 20));
      goto LABEL_14;
    }
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v26 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v26;
      swift_bridgeObjectRetain();
      goto LABEL_14;
    }
    uint64_t v77 = v4;
    uint64_t v6 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v6;
    uint64_t v7 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v8 = *(int *)(v7 + 20);
    uint64_t v9 = a1 + v8;
    uint64_t v10 = a2 + v8;
    uint64_t v11 = sub_22EE7F6E0();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(v7 + 24);
    uint64_t v14 = (char *)(a1 + v13);
    uint64_t v15 = (char *)(a2 + v13);
    uint64_t v16 = _s22LocalizedPriceResourceV6FormatOMa(0);
    int v17 = swift_getEnumCaseMultiPayload();
    if (v17 == 3)
    {
      uint64_t v27 = *((void *)v15 + 1);
      *(void *)uint64_t v14 = *(void *)v15;
      *((void *)v14 + 1) = v27;
      uint64_t v74 = (void (*)(char *, char *, uint64_t))v12;
      uint64_t v28 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v29 = v28[5];
      uint64_t v66 = &v15[v29];
      uint64_t v70 = &v14[v29];
      uint64_t v30 = sub_22EE7F5D0();
      uint64_t v62 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
      swift_bridgeObjectRetain();
      v62(v70, v66, v30);
      v74(&v14[v28[6]], &v15[v28[6]], v11);
      *(void *)&v14[v28[7]] = *(void *)&v15[v28[7]];
    }
    else
    {
      if (v17 != 2)
      {
        memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
        goto LABEL_13;
      }
      uint64_t v18 = *((void *)v15 + 1);
      *(void *)uint64_t v14 = *(void *)v15;
      *((void *)v14 + 1) = v18;
      uint64_t v73 = (void (*)(char *, char *, uint64_t))v12;
      uint64_t v19 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v20 = v19[5];
      uint64_t v65 = &v15[v20];
      uint64_t v69 = &v14[v20];
      uint64_t v21 = sub_22EE7F5D0();
      uint64_t v61 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
      swift_bridgeObjectRetain();
      v61(v69, v65, v21);
      v73(&v14[v19[6]], &v15[v19[6]], v11);
      *(void *)&v14[v19[7]] = *(void *)&v15[v19[7]];
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
      v14[*(int *)(v22 + 48)] = v15[*(int *)(v22 + 48)];
    }
    swift_storeEnumTagMultiPayload();
LABEL_13:
    uint64_t v4 = v77;
LABEL_14:
    swift_storeEnumTagMultiPayload();
    uint64_t v31 = *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
    uint64_t v32 = (void *)(a1 + v31);
    uint64_t v33 = (void *)(a2 + v31);
    if (__swift_getEnumTagSinglePayload(a2 + v31, 1, v4))
    {
      uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F8);
      memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
      goto LABEL_27;
    }
    int v35 = swift_getEnumCaseMultiPayload();
    if (v35 == 2)
    {
      uint64_t v53 = sub_22EE7F6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v53 - 8) + 16))(v32, v33, v53);
      uint64_t v54 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)v32 + *(int *)(v54 + 20)) = *(_OWORD *)((char *)v33 + *(int *)(v54 + 20));
    }
    else if (v35 == 1)
    {
      uint64_t v36 = v33[1];
      *uint64_t v32 = *v33;
      v32[1] = v36;
      uint64_t v37 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v38 = *(int *)(v37 + 20);
      uint64_t v75 = (char *)v33 + v38;
      uint64_t v78 = (char *)v32 + v38;
      uint64_t v39 = sub_22EE7F6E0();
      uint64_t v40 = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v42 = v75;
      uint64_t v41 = v78;
      uint64_t v76 = v39;
      uint64_t v79 = v40;
      v40(v41, v42, v39);
      uint64_t v43 = *(int *)(v37 + 24);
      uint64_t v44 = (char *)v32 + v43;
      uint64_t v45 = (char *)v33 + v43;
      uint64_t v46 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v47 = swift_getEnumCaseMultiPayload();
      if (v47 == 3)
      {
        uint64_t v56 = *((void *)v45 + 1);
        *(void *)uint64_t v44 = *(void *)v45;
        *((void *)v44 + 1) = v56;
        uint64_t v57 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v58 = v57[5];
        uint64_t v68 = &v45[v58];
        uint64_t v72 = &v44[v58];
        uint64_t v59 = sub_22EE7F5D0();
        uint64_t v64 = *(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16);
        swift_bridgeObjectRetain();
        v64(v72, v68, v59);
        v79(&v44[v57[6]], &v45[v57[6]], v76);
        *(void *)&v44[v57[7]] = *(void *)&v45[v57[7]];
      }
      else
      {
        if (v47 != 2)
        {
          memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
          goto LABEL_26;
        }
        uint64_t v48 = *((void *)v45 + 1);
        *(void *)uint64_t v44 = *(void *)v45;
        *((void *)v44 + 1) = v48;
        uint64_t v49 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v50 = v49[5];
        uint64_t v67 = &v45[v50];
        uint64_t v71 = &v44[v50];
        uint64_t v51 = sub_22EE7F5D0();
        uint64_t v63 = *(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16);
        swift_bridgeObjectRetain();
        v63(v71, v67, v51);
        v79(&v44[v49[6]], &v45[v49[6]], v76);
        *(void *)&v44[v49[7]] = *(void *)&v45[v49[7]];
        uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v44[*(int *)(v52 + 48)] = v45[*(int *)(v52 + 48)];
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      uint64_t v55 = v33[1];
      *uint64_t v32 = *v33;
      v32[1] = v55;
      swift_bridgeObjectRetain();
    }
LABEL_26:
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v32, 0, 1, v4);
    goto LABEL_27;
  }
  uint64_t v23 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v23;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_27:
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_22EDD91C0(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_22EDDC230();
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_28:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    uint64_t v4 = _s11PriceStringOMa(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v21 = sub_22EE7F6E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
      uint64_t v22 = _s20LocalizationResourceVMa();
      *(_OWORD *)(a1 + *(int *)(v22 + 20)) = *(_OWORD *)(a2 + *(int *)(v22 + 20));
      goto LABEL_15;
    }
    if (EnumCaseMultiPayload != 1)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      swift_bridgeObjectRetain();
      goto LABEL_15;
    }
    uint64_t v67 = v4;
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    uint64_t v6 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v7 = *(int *)(v6 + 20);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = a2 + v7;
    uint64_t v10 = sub_22EE7F6E0();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    uint64_t v12 = *(int *)(v6 + 24);
    uint64_t v13 = (char *)(a1 + v12);
    uint64_t v14 = (char *)(a2 + v12);
    uint64_t v15 = _s22LocalizedPriceResourceV6FormatOMa(0);
    int v16 = swift_getEnumCaseMultiPayload();
    if (v16 == 3)
    {
      *(void *)uint64_t v13 = *(void *)v14;
      *((void *)v13 + 1) = *((void *)v14 + 1);
      uint64_t v64 = (void (*)(char *, char *, uint64_t))v11;
      uint64_t v23 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v24 = v23[5];
      uint64_t v56 = &v14[v24];
      uint64_t v60 = &v13[v24];
      uint64_t v25 = sub_22EE7F5D0();
      uint64_t v52 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
      swift_bridgeObjectRetain();
      v52(v60, v56, v25);
      v64(&v13[v23[6]], &v14[v23[6]], v10);
      *(void *)&v13[v23[7]] = *(void *)&v14[v23[7]];
    }
    else
    {
      if (v16 != 2)
      {
        memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
        goto LABEL_14;
      }
      *(void *)uint64_t v13 = *(void *)v14;
      *((void *)v13 + 1) = *((void *)v14 + 1);
      uint64_t v63 = (void (*)(char *, char *, uint64_t))v11;
      int v17 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v18 = v17[5];
      uint64_t v55 = &v14[v18];
      uint64_t v59 = &v13[v18];
      uint64_t v19 = sub_22EE7F5D0();
      uint64_t v51 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
      swift_bridgeObjectRetain();
      v51(v59, v55, v19);
      v63(&v13[v17[6]], &v14[v17[6]], v10);
      *(void *)&v13[v17[7]] = *(void *)&v14[v17[7]];
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
      v13[*(int *)(v20 + 48)] = v14[*(int *)(v20 + 48)];
    }
    swift_storeEnumTagMultiPayload();
LABEL_14:
    uint64_t v4 = v67;
LABEL_15:
    swift_storeEnumTagMultiPayload();
    uint64_t v26 = *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
    uint64_t v27 = (void *)(a1 + v26);
    uint64_t v28 = (void *)(a2 + v26);
    if (__swift_getEnumTagSinglePayload(a2 + v26, 1, v4))
    {
      uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F8);
      memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
      goto LABEL_28;
    }
    int v30 = swift_getEnumCaseMultiPayload();
    if (v30 == 2)
    {
      uint64_t v45 = sub_22EE7F6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v45 - 8) + 16))(v27, v28, v45);
      uint64_t v46 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)v27 + *(int *)(v46 + 20)) = *(_OWORD *)((char *)v28 + *(int *)(v46 + 20));
    }
    else if (v30 == 1)
    {
      *uint64_t v27 = *v28;
      v27[1] = v28[1];
      uint64_t v31 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v32 = *(int *)(v31 + 20);
      uint64_t v65 = (char *)v28 + v32;
      uint64_t v68 = (char *)v27 + v32;
      uint64_t v33 = sub_22EE7F6E0();
      uint64_t v34 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
      swift_bridgeObjectRetain();
      int v35 = v65;
      uint64_t v66 = v33;
      v34(v68, v35, v33);
      uint64_t v36 = *(int *)(v31 + 24);
      uint64_t v37 = (char *)v27 + v36;
      uint64_t v38 = (char *)v28 + v36;
      uint64_t v39 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v40 = swift_getEnumCaseMultiPayload();
      if (v40 == 3)
      {
        *(void *)uint64_t v37 = *(void *)v38;
        *((void *)v37 + 1) = *((void *)v38 + 1);
        int v47 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v48 = v47[5];
        uint64_t v58 = &v38[v48];
        uint64_t v62 = &v37[v48];
        uint64_t v49 = sub_22EE7F5D0();
        uint64_t v54 = *(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16);
        swift_bridgeObjectRetain();
        v54(v62, v58, v49);
        v34(&v37[v47[6]], &v38[v47[6]], v66);
        *(void *)&v37[v47[7]] = *(void *)&v38[v47[7]];
      }
      else
      {
        if (v40 != 2)
        {
          memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
          goto LABEL_27;
        }
        *(void *)uint64_t v37 = *(void *)v38;
        *((void *)v37 + 1) = *((void *)v38 + 1);
        uint64_t v41 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v42 = v41[5];
        uint64_t v57 = &v38[v42];
        uint64_t v61 = &v37[v42];
        uint64_t v43 = sub_22EE7F5D0();
        uint64_t v53 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16);
        swift_bridgeObjectRetain();
        v53(v61, v57, v43);
        v34(&v37[v41[6]], &v38[v41[6]], v66);
        *(void *)&v37[v41[7]] = *(void *)&v38[v41[7]];
        uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v37[*(int *)(v44 + 48)] = v38[*(int *)(v44 + 48)];
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      *uint64_t v27 = *v28;
      v27[1] = v28[1];
      swift_bridgeObjectRetain();
    }
LABEL_27:
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v4);
    goto LABEL_28;
  }
  return a1;
}

uint64_t type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(uint64_t a1)
{
  return sub_22EAD01C0(a1, (uint64_t *)&unk_268626E70);
}

_OWORD *sub_22EDD9930(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = _s11PriceStringOMa(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v23 = sub_22EE7F6E0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v23 - 8) + 32))(a1, a2, v23);
      uint64_t v24 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)a1 + *(int *)(v24 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v24 + 20));
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        goto LABEL_14;
      }
      *a1 = *a2;
      uint64_t v8 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v9 = *(int *)(v8 + 20);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_22EE7F6E0();
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32);
      v13(v10, v11, v12);
      uint64_t v14 = *(int *)(v8 + 24);
      uint64_t v15 = (char *)a1 + v14;
      int v16 = (char *)a2 + v14;
      uint64_t v17 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v18 = swift_getEnumCaseMultiPayload();
      if (v18 == 3)
      {
        *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
        uint64_t v63 = v13;
        uint64_t v25 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v26 = v25[5];
        uint64_t v55 = &v16[v26];
        uint64_t v59 = &v15[v26];
        uint64_t v27 = sub_22EE7F5D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v59, v55, v27);
        v63(&v15[v25[6]], &v16[v25[6]], v12);
        *(void *)&v15[v25[7]] = *(void *)&v16[v25[7]];
      }
      else
      {
        if (v18 != 2)
        {
          memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
          goto LABEL_13;
        }
        *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
        uint64_t v62 = v13;
        uint64_t v19 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v20 = v19[5];
        uint64_t v54 = &v16[v20];
        uint64_t v58 = &v15[v20];
        uint64_t v21 = sub_22EE7F5D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v58, v54, v21);
        v62(&v15[v19[6]], &v16[v19[6]], v12);
        *(void *)&v15[v19[7]] = *(void *)&v16[v19[7]];
        uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v15[*(int *)(v22 + 48)] = v16[*(int *)(v22 + 48)];
      }
      swift_storeEnumTagMultiPayload();
    }
LABEL_13:
    swift_storeEnumTagMultiPayload();
LABEL_14:
    uint64_t v28 = *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
    uint64_t v29 = (_OWORD *)((char *)a1 + v28);
    int v30 = (_OWORD *)((char *)a2 + v28);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v28, 1, v6))
    {
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F8);
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
LABEL_28:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    int v32 = swift_getEnumCaseMultiPayload();
    if (v32 == 2)
    {
      uint64_t v48 = sub_22EE7F6E0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v48 - 8) + 32))(v29, v30, v48);
      uint64_t v49 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)v29 + *(int *)(v49 + 20)) = *(_OWORD *)((char *)v30 + *(int *)(v49 + 20));
    }
    else
    {
      if (v32 != 1)
      {
        memcpy(v29, v30, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_27:
        __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v6);
        goto LABEL_28;
      }
      *uint64_t v29 = *v30;
      uint64_t v33 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v34 = *(int *)(v33 + 20);
      int v35 = (char *)v29 + v34;
      uint64_t v36 = (char *)v30 + v34;
      uint64_t v37 = sub_22EE7F6E0();
      uint64_t v38 = (void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32);
      uint64_t v64 = *v38;
      (*v38)(v35, v36, v37);
      uint64_t v39 = *(int *)(v33 + 24);
      int v40 = (char *)v29 + v39;
      uint64_t v41 = (char *)v30 + v39;
      uint64_t v42 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v43 = swift_getEnumCaseMultiPayload();
      if (v43 == 3)
      {
        *(_OWORD *)int v40 = *(_OWORD *)v41;
        uint64_t v50 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v51 = v50[5];
        uint64_t v57 = &v41[v51];
        uint64_t v61 = &v40[v51];
        uint64_t v52 = sub_22EE7F5D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v61, v57, v52);
        v64(&v40[v50[6]], &v41[v50[6]], v37);
        *(void *)&v40[v50[7]] = *(void *)&v41[v50[7]];
      }
      else
      {
        if (v43 != 2)
        {
          memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
          goto LABEL_26;
        }
        *(_OWORD *)int v40 = *(_OWORD *)v41;
        uint64_t v44 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v45 = v44[5];
        uint64_t v56 = &v41[v45];
        uint64_t v60 = &v40[v45];
        uint64_t v46 = sub_22EE7F5D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v60, v56, v46);
        v64(&v40[v44[6]], &v41[v44[6]], v37);
        *(void *)&v40[v44[7]] = *(void *)&v41[v44[7]];
        uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v40[*(int *)(v47 + 48)] = v41[*(int *)(v47 + 48)];
      }
      swift_storeEnumTagMultiPayload();
    }
LABEL_26:
    swift_storeEnumTagMultiPayload();
    goto LABEL_27;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

_OWORD *sub_22EDD9FB8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_22EDDC230();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = _s11PriceStringOMa(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v23 = sub_22EE7F6E0();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v23 - 8) + 32))(a1, a2, v23);
        uint64_t v24 = _s20LocalizationResourceVMa();
        *(_OWORD *)((char *)a1 + *(int *)(v24 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v24 + 20));
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
          goto LABEL_15;
        }
        *a1 = *a2;
        uint64_t v8 = _s22LocalizedPriceResourceVMa(0);
        uint64_t v9 = *(int *)(v8 + 20);
        uint64_t v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = sub_22EE7F6E0();
        uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32);
        v13(v10, v11, v12);
        uint64_t v14 = *(int *)(v8 + 24);
        uint64_t v15 = (char *)a1 + v14;
        int v16 = (char *)a2 + v14;
        uint64_t v17 = _s22LocalizedPriceResourceV6FormatOMa(0);
        int v18 = swift_getEnumCaseMultiPayload();
        if (v18 == 3)
        {
          *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
          uint64_t v63 = v13;
          uint64_t v25 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v26 = v25[5];
          uint64_t v55 = &v16[v26];
          uint64_t v59 = &v15[v26];
          uint64_t v27 = sub_22EE7F5D0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v59, v55, v27);
          v63(&v15[v25[6]], &v16[v25[6]], v12);
          *(void *)&v15[v25[7]] = *(void *)&v16[v25[7]];
        }
        else
        {
          if (v18 != 2)
          {
            memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
            goto LABEL_14;
          }
          *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
          uint64_t v62 = v13;
          uint64_t v19 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v20 = v19[5];
          uint64_t v54 = &v16[v20];
          uint64_t v58 = &v15[v20];
          uint64_t v21 = sub_22EE7F5D0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v58, v54, v21);
          v62(&v15[v19[6]], &v16[v19[6]], v12);
          *(void *)&v15[v19[7]] = *(void *)&v16[v19[7]];
          uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
          v15[*(int *)(v22 + 48)] = v16[*(int *)(v22 + 48)];
        }
        swift_storeEnumTagMultiPayload();
      }
LABEL_14:
      swift_storeEnumTagMultiPayload();
LABEL_15:
      uint64_t v28 = *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
      uint64_t v29 = (_OWORD *)((char *)a1 + v28);
      int v30 = (_OWORD *)((char *)a2 + v28);
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v28, 1, v6))
      {
        uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F8);
        memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
LABEL_29:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      int v32 = swift_getEnumCaseMultiPayload();
      if (v32 == 2)
      {
        uint64_t v48 = sub_22EE7F6E0();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v48 - 8) + 32))(v29, v30, v48);
        uint64_t v49 = _s20LocalizationResourceVMa();
        *(_OWORD *)((char *)v29 + *(int *)(v49 + 20)) = *(_OWORD *)((char *)v30 + *(int *)(v49 + 20));
      }
      else
      {
        if (v32 != 1)
        {
          memcpy(v29, v30, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_28:
          __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v6);
          goto LABEL_29;
        }
        *uint64_t v29 = *v30;
        uint64_t v33 = _s22LocalizedPriceResourceVMa(0);
        uint64_t v34 = *(int *)(v33 + 20);
        int v35 = (char *)v29 + v34;
        uint64_t v36 = (char *)v30 + v34;
        uint64_t v37 = sub_22EE7F6E0();
        uint64_t v38 = (void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32);
        uint64_t v64 = *v38;
        (*v38)(v35, v36, v37);
        uint64_t v39 = *(int *)(v33 + 24);
        int v40 = (char *)v29 + v39;
        uint64_t v41 = (char *)v30 + v39;
        uint64_t v42 = _s22LocalizedPriceResourceV6FormatOMa(0);
        int v43 = swift_getEnumCaseMultiPayload();
        if (v43 == 3)
        {
          *(_OWORD *)int v40 = *(_OWORD *)v41;
          uint64_t v50 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v51 = v50[5];
          uint64_t v57 = &v41[v51];
          uint64_t v61 = &v40[v51];
          uint64_t v52 = sub_22EE7F5D0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v61, v57, v52);
          v64(&v40[v50[6]], &v41[v50[6]], v37);
          *(void *)&v40[v50[7]] = *(void *)&v41[v50[7]];
        }
        else
        {
          if (v43 != 2)
          {
            memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
            goto LABEL_27;
          }
          *(_OWORD *)int v40 = *(_OWORD *)v41;
          uint64_t v44 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v45 = v44[5];
          uint64_t v56 = &v41[v45];
          uint64_t v60 = &v40[v45];
          uint64_t v46 = sub_22EE7F5D0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v60, v56, v46);
          v64(&v40[v44[6]], &v41[v44[6]], v37);
          *(void *)&v40[v44[7]] = *(void *)&v41[v44[7]];
          uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
          v40[*(int *)(v47 + 48)] = v41[*(int *)(v47 + 48)];
        }
        swift_storeEnumTagMultiPayload();
      }
LABEL_27:
      swift_storeEnumTagMultiPayload();
      goto LABEL_28;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_22EDDA664()
{
  uint64_t result = type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_22EDDA6F8(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v7 = _s11PriceStringOMa(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v27 = sub_22EE7F6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(a1, a2, v27);
      uint64_t v28 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)a1 + *(int *)(v28 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v28 + 20));
      goto LABEL_14;
    }
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v29 = a2[1];
      *a1 = *a2;
      a1[1] = v29;
      swift_bridgeObjectRetain();
      goto LABEL_14;
    }
    uint64_t v82 = v7;
    uint64_t v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    uint64_t v10 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v11 = *(int *)(v10 + 20);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_22EE7F6E0();
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    v15(v12, v13, v14);
    uint64_t v16 = *(int *)(v10 + 24);
    uint64_t v17 = (char *)a1 + v16;
    int v18 = (char *)a2 + v16;
    uint64_t v19 = _s22LocalizedPriceResourceV6FormatOMa(0);
    int v20 = swift_getEnumCaseMultiPayload();
    if (v20 == 3)
    {
      uint64_t v30 = *((void *)v18 + 1);
      *(void *)uint64_t v17 = *(void *)v18;
      *((void *)v17 + 1) = v30;
      uint64_t v80 = v15;
      uint64_t v31 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v32 = v31[5];
      uint64_t v70 = &v18[v32];
      uint64_t v74 = &v17[v32];
      uint64_t v33 = sub_22EE7F5D0();
      uint64_t v68 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
      swift_bridgeObjectRetain();
      v68(v74, v70, v33);
      v80(&v17[v31[6]], &v18[v31[6]], v14);
      *(void *)&v17[v31[7]] = *(void *)&v18[v31[7]];
    }
    else
    {
      if (v20 != 2)
      {
        memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
        goto LABEL_13;
      }
      uint64_t v21 = *((void *)v18 + 1);
      *(void *)uint64_t v17 = *(void *)v18;
      *((void *)v17 + 1) = v21;
      uint64_t v79 = v15;
      uint64_t v22 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v23 = v22[5];
      uint64_t v69 = &v18[v23];
      uint64_t v73 = &v17[v23];
      uint64_t v24 = sub_22EE7F5D0();
      uint64_t v67 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
      swift_bridgeObjectRetain();
      v67(v73, v69, v24);
      v79(&v17[v22[6]], &v18[v22[6]], v14);
      *(void *)&v17[v22[7]] = *(void *)&v18[v22[7]];
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
      v17[*(int *)(v25 + 48)] = v18[*(int *)(v25 + 48)];
    }
    swift_storeEnumTagMultiPayload();
LABEL_13:
    uint64_t v7 = v82;
LABEL_14:
    swift_storeEnumTagMultiPayload();
    uint64_t v34 = *(int *)(a3 + 20);
    int v35 = (void *)((char *)a1 + v34);
    uint64_t v36 = (void *)((char *)a2 + v34);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v34, 1, v7))
    {
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F8);
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
      return a1;
    }
    int v38 = swift_getEnumCaseMultiPayload();
    if (v38 == 2)
    {
      uint64_t v58 = sub_22EE7F6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v58 - 8) + 16))(v35, v36, v58);
      uint64_t v59 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)v35 + *(int *)(v59 + 20)) = *(_OWORD *)((char *)v36 + *(int *)(v59 + 20));
    }
    else if (v38 == 1)
    {
      uint64_t v39 = v36[1];
      void *v35 = *v36;
      v35[1] = v39;
      uint64_t v40 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v41 = *(int *)(v40 + 20);
      uint64_t v83 = (char *)v35 + v41;
      uint64_t v42 = (char *)v36 + v41;
      uint64_t v43 = sub_22EE7F6E0();
      uint64_t v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v81 = v43;
      uint64_t v45 = v43;
      uint64_t v46 = v44;
      v44(v83, v42, v45);
      uint64_t v47 = *(int *)(v40 + 24);
      uint64_t v48 = (char *)v35 + v47;
      uint64_t v49 = (char *)v36 + v47;
      uint64_t v50 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v51 = swift_getEnumCaseMultiPayload();
      if (v51 == 3)
      {
        uint64_t v61 = *((void *)v49 + 1);
        *(void *)uint64_t v48 = *(void *)v49;
        *((void *)v48 + 1) = v61;
        uint64_t v62 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v63 = v62[5];
        uint64_t v76 = &v49[v63];
        uint64_t v78 = &v48[v63];
        uint64_t v64 = v46;
        uint64_t v65 = sub_22EE7F5D0();
        uint64_t v72 = *(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16);
        swift_bridgeObjectRetain();
        v72(v78, v76, v65);
        v64(&v48[v62[6]], &v49[v62[6]], v81);
        *(void *)&v48[v62[7]] = *(void *)&v49[v62[7]];
      }
      else
      {
        if (v51 != 2)
        {
          memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
          goto LABEL_26;
        }
        uint64_t v52 = *((void *)v49 + 1);
        *(void *)uint64_t v48 = *(void *)v49;
        *((void *)v48 + 1) = v52;
        uint64_t v53 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v54 = v53[5];
        uint64_t v75 = &v49[v54];
        uint64_t v77 = &v48[v54];
        uint64_t v55 = v46;
        uint64_t v56 = sub_22EE7F5D0();
        uint64_t v71 = *(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16);
        swift_bridgeObjectRetain();
        v71(v77, v75, v56);
        v55(&v48[v53[6]], &v49[v53[6]], v81);
        *(void *)&v48[v53[7]] = *(void *)&v49[v53[7]];
        uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v48[*(int *)(v57 + 48)] = v49[*(int *)(v57 + 48)];
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      uint64_t v60 = v36[1];
      void *v35 = *v36;
      v35[1] = v60;
      swift_bridgeObjectRetain();
    }
LABEL_26:
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v35, 0, 1, v7);
    return a1;
  }
  uint64_t v26 = *a2;
  *a1 = *a2;
  a1 = (void *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t sub_22EDDADD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s11PriceStringOMa(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v15 = sub_22EE7F6E0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(a1, v15);
      break;
    case 1:
      swift_bridgeObjectRelease();
      uint64_t v6 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v7 = a1 + *(int *)(v6 + 20);
      uint64_t v8 = sub_22EE7F6E0();
      uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
      v9(v7, v8);
      uint64_t v10 = a1 + *(int *)(v6 + 24);
      _s22LocalizedPriceResourceV6FormatOMa(0);
      int v11 = swift_getEnumCaseMultiPayload();
      if (v11 == 3 || v11 == 2)
      {
        swift_bridgeObjectRelease();
        uint64_t v12 = _s15PricePropertiesVMa(0);
        uint64_t v13 = v10 + *(int *)(v12 + 20);
        uint64_t v14 = sub_22EE7F5D0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
        v9(v10 + *(int *)(v12 + 24), v8);
      }
      break;
    case 0:
      swift_bridgeObjectRelease();
      break;
  }
  uint64_t v16 = a1 + *(int *)(a2 + 20);
  uint64_t result = __swift_getEnumTagSinglePayload(v16, 1, v4);
  if (!result)
  {
    uint64_t result = swift_getEnumCaseMultiPayload();
    switch(result)
    {
      case 2:
        uint64_t v28 = sub_22EE7F6E0();
        uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8);
        uint64_t v26 = v28;
        uint64_t v25 = v16;
        break;
      case 1:
        swift_bridgeObjectRelease();
        uint64_t v18 = _s22LocalizedPriceResourceVMa(0);
        uint64_t v19 = v16 + *(int *)(v18 + 20);
        uint64_t v20 = sub_22EE7F6E0();
        uint64_t v29 = *(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8);
        v29(v19, v20);
        uint64_t v21 = v16 + *(int *)(v18 + 24);
        _s22LocalizedPriceResourceV6FormatOMa(0);
        uint64_t result = swift_getEnumCaseMultiPayload();
        if (result != 3 && result != 2) {
          return result;
        }
        swift_bridgeObjectRelease();
        uint64_t v22 = _s15PricePropertiesVMa(0);
        uint64_t v23 = v21 + *(int *)(v22 + 20);
        uint64_t v24 = sub_22EE7F5D0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
        uint64_t v25 = v21 + *(int *)(v22 + 24);
        uint64_t v26 = v20;
        uint64_t v27 = (uint64_t (*)(uint64_t, uint64_t))v29;
        break;
      case 0:
        return swift_bridgeObjectRelease();
      default:
        return result;
    }
    return v27(v25, v26);
  }
  return result;
}

void *sub_22EDDB144(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = _s11PriceStringOMa(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v26 = sub_22EE7F6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(a1, a2, v26);
    uint64_t v27 = _s20LocalizationResourceVMa();
    *(_OWORD *)((char *)a1 + *(int *)(v27 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v27 + 20));
    goto LABEL_12;
  }
  if (EnumCaseMultiPayload != 1)
  {
    uint64_t v28 = a2[1];
    *a1 = *a2;
    a1[1] = v28;
    swift_bridgeObjectRetain();
    goto LABEL_12;
  }
  uint64_t v83 = v6;
  uint64_t v8 = a2[1];
  *a1 = *a2;
  a1[1] = v8;
  uint64_t v9 = _s22LocalizedPriceResourceVMa(0);
  uint64_t v10 = *(int *)(v9 + 20);
  int v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_22EE7F6E0();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
  swift_bridgeObjectRetain();
  v14(v11, v12, v13);
  uint64_t v15 = *(int *)(v9 + 24);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = _s22LocalizedPriceResourceV6FormatOMa(0);
  int v19 = swift_getEnumCaseMultiPayload();
  if (v19 == 3)
  {
    uint64_t v81 = a3;
    uint64_t v29 = *((void *)v17 + 1);
    *(void *)uint64_t v16 = *(void *)v17;
    *((void *)v16 + 1) = v29;
    uint64_t v30 = (int *)_s15PricePropertiesVMa(0);
    uint64_t v31 = v30[5];
    uint64_t v69 = &v17[v31];
    uint64_t v73 = &v16[v31];
    uint64_t v77 = v14;
    uint64_t v32 = sub_22EE7F5D0();
    uint64_t v67 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16);
    a3 = v81;
    swift_bridgeObjectRetain();
    v67(v73, v69, v32);
    v77(&v16[v30[6]], &v17[v30[6]], v13);
    *(void *)&v16[v30[7]] = *(void *)&v17[v30[7]];
  }
  else
  {
    if (v19 != 2)
    {
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
      goto LABEL_11;
    }
    uint64_t v20 = *((void *)v17 + 1);
    *(void *)uint64_t v16 = *(void *)v17;
    *((void *)v16 + 1) = v20;
    uint64_t v76 = v14;
    uint64_t v21 = (int *)_s15PricePropertiesVMa(0);
    uint64_t v22 = v21[5];
    uint64_t v68 = &v17[v22];
    uint64_t v72 = &v16[v22];
    uint64_t v80 = a3;
    uint64_t v23 = sub_22EE7F5D0();
    uint64_t v66 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
    swift_bridgeObjectRetain();
    uint64_t v24 = v23;
    a3 = v80;
    v66(v72, v68, v24);
    v76(&v16[v21[6]], &v17[v21[6]], v13);
    *(void *)&v16[v21[7]] = *(void *)&v17[v21[7]];
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
    v16[*(int *)(v25 + 48)] = v17[*(int *)(v25 + 48)];
  }
  swift_storeEnumTagMultiPayload();
LABEL_11:
  uint64_t v6 = v83;
LABEL_12:
  swift_storeEnumTagMultiPayload();
  uint64_t v33 = *(int *)(a3 + 20);
  uint64_t v34 = (void *)((char *)a1 + v33);
  int v35 = (void *)((char *)a2 + v33);
  if (!__swift_getEnumTagSinglePayload((uint64_t)a2 + v33, 1, v6))
  {
    int v37 = swift_getEnumCaseMultiPayload();
    if (v37 == 2)
    {
      uint64_t v57 = sub_22EE7F6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v57 - 8) + 16))(v34, v35, v57);
      uint64_t v58 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)v34 + *(int *)(v58 + 20)) = *(_OWORD *)((char *)v35 + *(int *)(v58 + 20));
    }
    else if (v37 == 1)
    {
      uint64_t v38 = v35[1];
      *uint64_t v34 = *v35;
      v34[1] = v38;
      uint64_t v39 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v40 = *(int *)(v39 + 20);
      uint64_t v84 = (char *)v34 + v40;
      uint64_t v41 = (char *)v35 + v40;
      uint64_t v42 = sub_22EE7F6E0();
      uint64_t v43 = *(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v82 = v42;
      uint64_t v44 = v42;
      uint64_t v45 = v43;
      v43(v84, v41, v44);
      uint64_t v46 = *(int *)(v39 + 24);
      uint64_t v47 = (char *)v34 + v46;
      uint64_t v48 = (char *)v35 + v46;
      uint64_t v49 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v50 = swift_getEnumCaseMultiPayload();
      if (v50 == 3)
      {
        uint64_t v60 = *((void *)v48 + 1);
        *(void *)uint64_t v47 = *(void *)v48;
        *((void *)v47 + 1) = v60;
        uint64_t v61 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v62 = v61[5];
        uint64_t v75 = &v48[v62];
        uint64_t v79 = &v47[v62];
        uint64_t v63 = v45;
        uint64_t v64 = sub_22EE7F5D0();
        uint64_t v71 = *(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16);
        swift_bridgeObjectRetain();
        v71(v79, v75, v64);
        v63(&v47[v61[6]], &v48[v61[6]], v82);
        *(void *)&v47[v61[7]] = *(void *)&v48[v61[7]];
      }
      else
      {
        if (v50 != 2)
        {
          memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
          goto LABEL_24;
        }
        uint64_t v51 = *((void *)v48 + 1);
        *(void *)uint64_t v47 = *(void *)v48;
        *((void *)v47 + 1) = v51;
        uint64_t v52 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v53 = v52[5];
        uint64_t v74 = &v48[v53];
        uint64_t v78 = &v47[v53];
        uint64_t v54 = v45;
        uint64_t v55 = sub_22EE7F5D0();
        uint64_t v70 = *(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16);
        swift_bridgeObjectRetain();
        v70(v78, v74, v55);
        v54(&v47[v52[6]], &v48[v52[6]], v82);
        *(void *)&v47[v52[7]] = *(void *)&v48[v52[7]];
        uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v47[*(int *)(v56 + 48)] = v48[*(int *)(v56 + 48)];
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      uint64_t v59 = v35[1];
      *uint64_t v34 = *v35;
      v34[1] = v59;
      swift_bridgeObjectRetain();
    }
LABEL_24:
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v6);
    return a1;
  }
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F8);
  memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
  return a1;
}

void *sub_22EDDB7E4(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_22EDDC230();
    _s11PriceStringOMa(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v23 = sub_22EE7F6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
      uint64_t v24 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)a1 + *(int *)(v24 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v24 + 20));
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v98 = a3;
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v7 = _s22LocalizedPriceResourceVMa(0);
        uint64_t v8 = *(int *)(v7 + 20);
        uint64_t v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = sub_22EE7F6E0();
        uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v92 = v11;
        v12(v9, v10, v11);
        uint64_t v13 = *(int *)(v7 + 24);
        uint64_t v14 = (char *)a1 + v13;
        uint64_t v15 = (char *)a2 + v13;
        uint64_t v16 = _s22LocalizedPriceResourceV6FormatOMa(0);
        int v17 = swift_getEnumCaseMultiPayload();
        if (v17 == 3)
        {
          *(void *)uint64_t v14 = *(void *)v15;
          *((void *)v14 + 1) = *((void *)v15 + 1);
          uint64_t v25 = v12;
          uint64_t v26 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v27 = v26[5];
          uint64_t v81 = &v15[v27];
          uint64_t v87 = &v14[v27];
          uint64_t v28 = sub_22EE7F5D0();
          uint64_t v79 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
          swift_bridgeObjectRetain();
          v79(v87, v81, v28);
          v25(&v14[v26[6]], &v15[v26[6]], v92);
          *(void *)&v14[v26[7]] = *(void *)&v15[v26[7]];
        }
        else
        {
          if (v17 != 2)
          {
            memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
            goto LABEL_12;
          }
          *(void *)uint64_t v14 = *(void *)v15;
          *((void *)v14 + 1) = *((void *)v15 + 1);
          uint64_t v18 = v12;
          int v19 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v20 = v19[5];
          uint64_t v80 = &v15[v20];
          uint64_t v86 = &v14[v20];
          uint64_t v21 = sub_22EE7F5D0();
          uint64_t v78 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
          swift_bridgeObjectRetain();
          v78(v86, v80, v21);
          v18(&v14[v19[6]], &v15[v19[6]], v92);
          *(void *)&v14[v19[7]] = *(void *)&v15[v19[7]];
          uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
          v14[*(int *)(v22 + 48)] = v15[*(int *)(v22 + 48)];
        }
        swift_storeEnumTagMultiPayload();
LABEL_12:
        a3 = v98;
        goto LABEL_13;
      }
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
LABEL_13:
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v29 = *(int *)(a3 + 20);
  uint64_t v30 = (void *)((char *)a1 + v29);
  uint64_t v31 = (void *)((char *)a2 + v29);
  uint64_t v32 = _s11PriceStringOMa(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v30, 1, v32);
  int v34 = __swift_getEnumTagSinglePayload((uint64_t)v31, 1, v32);
  if (EnumTagSinglePayload)
  {
    if (!v34)
    {
      int v35 = swift_getEnumCaseMultiPayload();
      if (v35 == 2)
      {
        uint64_t v67 = sub_22EE7F6E0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v67 - 8) + 16))(v30, v31, v67);
        uint64_t v68 = _s20LocalizationResourceVMa();
        *(_OWORD *)((char *)v30 + *(int *)(v68 + 20)) = *(_OWORD *)((char *)v31 + *(int *)(v68 + 20));
      }
      else if (v35 == 1)
      {
        void *v30 = *v31;
        v30[1] = v31[1];
        uint64_t v36 = _s22LocalizedPriceResourceVMa(0);
        uint64_t v37 = *(int *)(v36 + 20);
        uint64_t v99 = (char *)v30 + v37;
        uint64_t v38 = (char *)v31 + v37;
        uint64_t v39 = sub_22EE7F6E0();
        uint64_t v40 = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v41 = v99;
        uint64_t v100 = v40;
        v40(v41, v38, v39);
        uint64_t v42 = *(int *)(v36 + 24);
        uint64_t v43 = (char *)v30 + v42;
        uint64_t v44 = (char *)v31 + v42;
        uint64_t v45 = _s22LocalizedPriceResourceV6FormatOMa(0);
        int v46 = swift_getEnumCaseMultiPayload();
        if (v46 == 3)
        {
          *(void *)uint64_t v43 = *(void *)v44;
          *((void *)v43 + 1) = *((void *)v44 + 1);
          uint64_t v71 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v72 = v71[5];
          uint64_t v90 = &v44[v72];
          uint64_t v95 = &v43[v72];
          uint64_t v73 = sub_22EE7F5D0();
          uint64_t v84 = *(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16);
          swift_bridgeObjectRetain();
          v84(v95, v90, v73);
          v100(&v43[v71[6]], &v44[v71[6]], v39);
          *(void *)&v43[v71[7]] = *(void *)&v44[v71[7]];
        }
        else
        {
          if (v46 != 2)
          {
            memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
            goto LABEL_37;
          }
          *(void *)uint64_t v43 = *(void *)v44;
          *((void *)v43 + 1) = *((void *)v44 + 1);
          uint64_t v47 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v48 = v47[5];
          uint64_t v88 = &v44[v48];
          uint64_t v93 = &v43[v48];
          uint64_t v49 = sub_22EE7F5D0();
          uint64_t v82 = *(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16);
          swift_bridgeObjectRetain();
          v82(v93, v88, v49);
          v100(&v43[v47[6]], &v44[v47[6]], v39);
          *(void *)&v43[v47[7]] = *(void *)&v44[v47[7]];
          uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
          v43[*(int *)(v50 + 48)] = v44[*(int *)(v50 + 48)];
        }
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        void *v30 = *v31;
        v30[1] = v31[1];
        swift_bridgeObjectRetain();
      }
LABEL_37:
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v32);
      return a1;
    }
    goto LABEL_23;
  }
  if (!v34)
  {
    if (a1 == a2) {
      return a1;
    }
    sub_22EDDC230();
    int v52 = swift_getEnumCaseMultiPayload();
    if (v52 == 2)
    {
      uint64_t v69 = sub_22EE7F6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v69 - 8) + 16))(v30, v31, v69);
      uint64_t v70 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)v30 + *(int *)(v70 + 20)) = *(_OWORD *)((char *)v31 + *(int *)(v70 + 20));
    }
    else if (v52 == 1)
    {
      void *v30 = *v31;
      v30[1] = v31[1];
      uint64_t v53 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v54 = *(int *)(v53 + 20);
      uint64_t v101 = (char *)v30 + v54;
      uint64_t v55 = (char *)v31 + v54;
      uint64_t v56 = sub_22EE7F6E0();
      uint64_t v57 = *(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v97 = v56;
      v57(v101, v55, v56);
      uint64_t v58 = *(int *)(v53 + 24);
      uint64_t v59 = (char *)v30 + v58;
      uint64_t v60 = (char *)v31 + v58;
      uint64_t v61 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v62 = swift_getEnumCaseMultiPayload();
      if (v62 == 3)
      {
        *(void *)uint64_t v59 = *(void *)v60;
        *((void *)v59 + 1) = *((void *)v60 + 1);
        uint64_t v74 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v75 = v74[5];
        uint64_t v91 = &v60[v75];
        uint64_t v96 = &v59[v75];
        uint64_t v76 = sub_22EE7F5D0();
        uint64_t v85 = *(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 16);
        swift_bridgeObjectRetain();
        v85(v96, v91, v76);
        v57(&v59[v74[6]], &v60[v74[6]], v97);
        *(void *)&v59[v74[7]] = *(void *)&v60[v74[7]];
      }
      else
      {
        if (v62 != 2)
        {
          memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
          goto LABEL_41;
        }
        *(void *)uint64_t v59 = *(void *)v60;
        *((void *)v59 + 1) = *((void *)v60 + 1);
        uint64_t v63 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v64 = v63[5];
        uint64_t v89 = &v60[v64];
        uint64_t v94 = &v59[v64];
        uint64_t v65 = sub_22EE7F5D0();
        uint64_t v83 = *(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16);
        swift_bridgeObjectRetain();
        v83(v94, v89, v65);
        v57(&v59[v63[6]], &v60[v63[6]], v97);
        *(void *)&v59[v63[7]] = *(void *)&v60[v63[7]];
        uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v59[*(int *)(v66 + 48)] = v60[*(int *)(v66 + 48)];
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      void *v30 = *v31;
      v30[1] = v31[1];
      swift_bridgeObjectRetain();
    }
LABEL_41:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  sub_22EDDC230();
LABEL_23:
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F8);
  memcpy(v30, v31, *(void *)(*(void *)(v51 - 8) + 64));
  return a1;
}

uint64_t sub_22EDDC230()
{
  uint64_t v1 = OUTLINED_FUNCTION_51_3();
  v2(v1);
  OUTLINED_FUNCTION_2_0();
  (*(void (**)(uint64_t))(v3 + 8))(v0);
  return v0;
}

_OWORD *sub_22EDDC284(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = _s11PriceStringOMa(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v23 = sub_22EE7F6E0();
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v23 - 8) + 32))(a1, a2, v23);
    uint64_t v24 = _s20LocalizationResourceVMa();
    *(_OWORD *)((char *)a1 + *(int *)(v24 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v24 + 20));
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_12;
    }
    *a1 = *a2;
    uint64_t v8 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v9 = *(int *)(v8 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_22EE7F6E0();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32);
    v13(v10, v11, v12);
    uint64_t v14 = *(int *)(v8 + 24);
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = _s22LocalizedPriceResourceV6FormatOMa(0);
    int v18 = swift_getEnumCaseMultiPayload();
    if (v18 == 3)
    {
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      uint64_t v61 = v13;
      uint64_t v25 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v26 = v25[5];
      uint64_t v55 = &v16[v26];
      uint64_t v57 = &v15[v26];
      uint64_t v27 = sub_22EE7F5D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v57, v55, v27);
      v61(&v15[v25[6]], &v16[v25[6]], v12);
      *(void *)&v15[v25[7]] = *(void *)&v16[v25[7]];
    }
    else
    {
      if (v18 != 2)
      {
        memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
        goto LABEL_11;
      }
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      uint64_t v60 = v13;
      int v19 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v20 = v19[5];
      uint64_t v54 = &v16[v20];
      uint64_t v56 = &v15[v20];
      uint64_t v21 = sub_22EE7F5D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v56, v54, v21);
      v60(&v15[v19[6]], &v16[v19[6]], v12);
      *(void *)&v15[v19[7]] = *(void *)&v16[v19[7]];
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
      v15[*(int *)(v22 + 48)] = v16[*(int *)(v22 + 48)];
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_11:
  swift_storeEnumTagMultiPayload();
LABEL_12:
  uint64_t v28 = *(int *)(a3 + 20);
  uint64_t v29 = (_OWORD *)((char *)a1 + v28);
  uint64_t v30 = (_OWORD *)((char *)a2 + v28);
  if (!__swift_getEnumTagSinglePayload((uint64_t)a2 + v28, 1, v6))
  {
    int v32 = swift_getEnumCaseMultiPayload();
    if (v32 == 2)
    {
      uint64_t v48 = sub_22EE7F6E0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v48 - 8) + 32))(v29, v30, v48);
      uint64_t v49 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)v29 + *(int *)(v49 + 20)) = *(_OWORD *)((char *)v30 + *(int *)(v49 + 20));
    }
    else
    {
      if (v32 != 1)
      {
        memcpy(v29, v30, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_25:
        __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v6);
        return a1;
      }
      *uint64_t v29 = *v30;
      uint64_t v33 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v34 = *(int *)(v33 + 20);
      int v35 = (char *)v29 + v34;
      uint64_t v36 = (char *)v30 + v34;
      uint64_t v37 = sub_22EE7F6E0();
      uint64_t v38 = *(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32);
      v38(v35, v36, v37);
      uint64_t v39 = *(int *)(v33 + 24);
      uint64_t v40 = (char *)v29 + v39;
      uint64_t v41 = (char *)v30 + v39;
      uint64_t v42 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v43 = swift_getEnumCaseMultiPayload();
      if (v43 == 3)
      {
        *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
        uint64_t v50 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v51 = v50[5];
        uint64_t v59 = &v41[v51];
        uint64_t v63 = &v40[v51];
        uint64_t v52 = sub_22EE7F5D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v63, v59, v52);
        v38(&v40[v50[6]], &v41[v50[6]], v37);
        *(void *)&v40[v50[7]] = *(void *)&v41[v50[7]];
      }
      else
      {
        if (v43 != 2)
        {
          memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
          goto LABEL_24;
        }
        *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
        uint64_t v44 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v45 = v44[5];
        uint64_t v58 = &v41[v45];
        int v62 = &v40[v45];
        uint64_t v46 = sub_22EE7F5D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v62, v58, v46);
        v38(&v40[v44[6]], &v41[v44[6]], v37);
        *(void *)&v40[v44[7]] = *(void *)&v41[v44[7]];
        uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v40[*(int *)(v47 + 48)] = v41[*(int *)(v47 + 48)];
      }
      swift_storeEnumTagMultiPayload();
    }
LABEL_24:
    swift_storeEnumTagMultiPayload();
    goto LABEL_25;
  }
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F8);
  memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  return a1;
}

_OWORD *sub_22EDDC8B0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_22EDDC230();
    uint64_t v6 = _s11PriceStringOMa(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v23 = sub_22EE7F6E0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v23 - 8) + 32))(a1, a2, v23);
      uint64_t v24 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)a1 + *(int *)(v24 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v24 + 20));
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        goto LABEL_13;
      }
      *a1 = *a2;
      uint64_t v8 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v9 = *(int *)(v8 + 20);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_22EE7F6E0();
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32);
      v13(v10, v11, v12);
      uint64_t v14 = *(int *)(v8 + 24);
      uint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      uint64_t v17 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v18 = swift_getEnumCaseMultiPayload();
      if (v18 == 3)
      {
        *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
        uint64_t v87 = v13;
        uint64_t v25 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v26 = v25[5];
        uint64_t v79 = &v16[v26];
        uint64_t v81 = &v15[v26];
        uint64_t v27 = sub_22EE7F5D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v81, v79, v27);
        v87(&v15[v25[6]], &v16[v25[6]], v12);
        *(void *)&v15[v25[7]] = *(void *)&v16[v25[7]];
      }
      else
      {
        if (v18 != 2)
        {
          memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
          goto LABEL_12;
        }
        *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
        uint64_t v86 = v13;
        int v19 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v20 = v19[5];
        uint64_t v78 = &v16[v20];
        uint64_t v80 = &v15[v20];
        uint64_t v21 = sub_22EE7F5D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v80, v78, v21);
        v86(&v15[v19[6]], &v16[v19[6]], v12);
        *(void *)&v15[v19[7]] = *(void *)&v16[v19[7]];
        uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v15[*(int *)(v22 + 48)] = v16[*(int *)(v22 + 48)];
      }
      swift_storeEnumTagMultiPayload();
    }
LABEL_12:
    swift_storeEnumTagMultiPayload();
  }
LABEL_13:
  uint64_t v28 = *(int *)(a3 + 20);
  uint64_t v29 = (_OWORD *)((char *)a1 + v28);
  uint64_t v30 = (_OWORD *)((char *)a2 + v28);
  uint64_t v31 = _s11PriceStringOMa(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v29, 1, v31);
  int v33 = __swift_getEnumTagSinglePayload((uint64_t)v30, 1, v31);
  if (EnumTagSinglePayload)
  {
    if (!v33)
    {
      int v34 = swift_getEnumCaseMultiPayload();
      if (v34 == 2)
      {
        uint64_t v67 = sub_22EE7F6E0();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v67 - 8) + 32))(v29, v30, v67);
        uint64_t v68 = _s20LocalizationResourceVMa();
        *(_OWORD *)((char *)v29 + *(int *)(v68 + 20)) = *(_OWORD *)((char *)v30 + *(int *)(v68 + 20));
      }
      else
      {
        if (v34 != 1)
        {
          memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
LABEL_38:
          __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v31);
          return a1;
        }
        *uint64_t v29 = *v30;
        uint64_t v35 = _s22LocalizedPriceResourceVMa(0);
        uint64_t v36 = *(int *)(v35 + 20);
        uint64_t v37 = (char *)v29 + v36;
        uint64_t v38 = (char *)v30 + v36;
        uint64_t v39 = sub_22EE7F6E0();
        uint64_t v40 = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32);
        v40(v37, v38, v39);
        uint64_t v41 = *(int *)(v35 + 24);
        uint64_t v42 = (char *)v29 + v41;
        int v43 = (char *)v30 + v41;
        uint64_t v44 = _s22LocalizedPriceResourceV6FormatOMa(0);
        int v45 = swift_getEnumCaseMultiPayload();
        if (v45 == 3)
        {
          *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
          uint64_t v71 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v72 = v71[5];
          uint64_t v84 = &v43[v72];
          uint64_t v90 = &v42[v72];
          uint64_t v73 = sub_22EE7F5D0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 32))(v90, v84, v73);
          v40(&v42[v71[6]], &v43[v71[6]], v39);
          *(void *)&v42[v71[7]] = *(void *)&v43[v71[7]];
        }
        else
        {
          if (v45 != 2)
          {
            memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
            goto LABEL_37;
          }
          *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
          uint64_t v46 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v47 = v46[5];
          uint64_t v82 = &v43[v47];
          uint64_t v88 = &v42[v47];
          uint64_t v48 = sub_22EE7F5D0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v88, v82, v48);
          v40(&v42[v46[6]], &v43[v46[6]], v39);
          *(void *)&v42[v46[7]] = *(void *)&v43[v46[7]];
          uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
          v42[*(int *)(v49 + 48)] = v43[*(int *)(v49 + 48)];
        }
        swift_storeEnumTagMultiPayload();
      }
LABEL_37:
      swift_storeEnumTagMultiPayload();
      goto LABEL_38;
    }
    goto LABEL_22;
  }
  if (!v33)
  {
    if (a1 == a2) {
      return a1;
    }
    sub_22EDDC230();
    int v51 = swift_getEnumCaseMultiPayload();
    if (v51 == 2)
    {
      uint64_t v69 = sub_22EE7F6E0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v69 - 8) + 32))(v29, v30, v69);
      uint64_t v70 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)v29 + *(int *)(v70 + 20)) = *(_OWORD *)((char *)v30 + *(int *)(v70 + 20));
    }
    else
    {
      if (v51 != 1)
      {
        size_t v50 = *(void *)(*(void *)(v31 - 8) + 64);
        goto LABEL_23;
      }
      *uint64_t v29 = *v30;
      uint64_t v52 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v53 = *(int *)(v52 + 20);
      uint64_t v54 = (char *)v29 + v53;
      uint64_t v55 = (char *)v30 + v53;
      uint64_t v56 = sub_22EE7F6E0();
      uint64_t v57 = *(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32);
      v57(v54, v55, v56);
      uint64_t v58 = *(int *)(v52 + 24);
      uint64_t v59 = (char *)v29 + v58;
      uint64_t v60 = (char *)v30 + v58;
      uint64_t v61 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v62 = swift_getEnumCaseMultiPayload();
      if (v62 == 3)
      {
        *(_OWORD *)uint64_t v59 = *(_OWORD *)v60;
        uint64_t v74 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v75 = v74[5];
        uint64_t v85 = &v60[v75];
        uint64_t v91 = &v59[v75];
        uint64_t v76 = sub_22EE7F5D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 32))(v91, v85, v76);
        v57(&v59[v74[6]], &v60[v74[6]], v56);
        *(void *)&v59[v74[7]] = *(void *)&v60[v74[7]];
      }
      else
      {
        if (v62 != 2)
        {
          memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
          goto LABEL_42;
        }
        *(_OWORD *)uint64_t v59 = *(_OWORD *)v60;
        uint64_t v63 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v64 = v63[5];
        uint64_t v83 = &v60[v64];
        uint64_t v89 = &v59[v64];
        uint64_t v65 = sub_22EE7F5D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 32))(v89, v83, v65);
        v57(&v59[v63[6]], &v60[v63[6]], v56);
        *(void *)&v59[v63[7]] = *(void *)&v60[v63[7]];
        uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v59[*(int *)(v66 + 48)] = v60[*(int *)(v66 + 48)];
      }
      swift_storeEnumTagMultiPayload();
    }
LABEL_42:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  sub_22EDDC230();
LABEL_22:
  size_t v50 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F8) - 8) + 64);
LABEL_23:
  memcpy(v29, v30, v50);
  return a1;
}

uint64_t sub_22EDDD204(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EDDD218);
}

uint64_t sub_22EDDD218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _s11PriceStringOMa(0);
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F8);
    uint64_t v9 = a1 + *(int *)(a3 + 20);
  }

  return __swift_getEnumTagSinglePayload(v9, a2, v8);
}

uint64_t sub_22EDDD298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EDDD2AC);
}

uint64_t sub_22EDDD2AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  _s11PriceStringOMa(0);
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F8);
    uint64_t v11 = a1 + *(int *)(a4 + 20);
  }

  return __swift_storeEnumTagSinglePayload(v11, a2, a2, v10);
}

void sub_22EDDD334()
{
  _s11PriceStringOMa(319);
  if (v0 <= 0x3F)
  {
    sub_22EDDE3F4(319, &qword_26861CA28, (void (*)(uint64_t))_s11PriceStringOMa);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unint64_t sub_22EDDD418(unint64_t a1, uint64_t a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    uint64_t v8 = *(void *)(a2 + 8);
    char v9 = *(unsigned char *)(a2 + 16);
    sub_22EB0E200(*(void *)a2, v8, v9);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(unsigned char *)(a1 + 16) = v9;
    uint64_t v10 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v10;
    uint64_t v11 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v11;
    uint64_t v12 = *(void *)(a2 + 64);
    uint64_t v13 = a3[8];
    uint64_t v14 = (void *)(a1 + v13);
    uint64_t v15 = (const void *)(a2 + v13);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = v12;
    uint64_t v16 = sub_22EE7F6E0();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E620);
      memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
    }
    uint64_t v19 = a3[10];
    *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
    uint64_t v20 = (void *)(a1 + v19);
    uint64_t v21 = (const void *)(a2 + v19);
    uint64_t v22 = sub_22EE7F670();
    if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22))
    {
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
      memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
      __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v22);
    }
  }
  return a1;
}

uint64_t sub_22EDDD654(uint64_t a1, uint64_t a2)
{
  sub_22EADB1A4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_22EE7F6E0();
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 40);
  uint64_t v7 = sub_22EE7F670();
  uint64_t result = __swift_getEnumTagSinglePayload(v6, 1, v7);
  if (!result)
  {
    char v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v9(v6, v7);
  }
  return result;
}

uint64_t sub_22EDDD774(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  char v8 = *(unsigned char *)(a2 + 16);
  sub_22EB0E200(*(void *)a2, v7, v8);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  uint64_t v9 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v9;
  uint64_t v10 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v10;
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v12 = a3[8];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v11;
  uint64_t v15 = sub_22EE7F6E0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E620);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
  }
  uint64_t v17 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (const void *)(a2 + v17);
  uint64_t v20 = sub_22EE7F670();
  if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v20))
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
    memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v20);
  }
  return a1;
}

uint64_t sub_22EDDD960(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  char v8 = *(unsigned char *)(a2 + 16);
  sub_22EB0E200(*(void *)a2, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  char v11 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  sub_22EADB1A4(v9, v10, v11);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[8];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = sub_22EE7F6E0();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v15);
  int v17 = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15);
  if (EnumTagSinglePayload)
  {
    if (!v17)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v18 = *(void *)(v15 - 8);
  if (v17)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v13, v15);
LABEL_6:
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E620);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v18 + 24))(v13, v14, v15);
LABEL_7:
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v20 = a3[10];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (const void *)(a2 + v20);
  uint64_t v23 = sub_22EE7F670();
  int v24 = __swift_getEnumTagSinglePayload((uint64_t)v21, 1, v23);
  int v25 = __swift_getEnumTagSinglePayload((uint64_t)v22, 1, v23);
  if (!v24)
  {
    uint64_t v26 = *(void *)(v23 - 8);
    if (!v25)
    {
      (*(void (**)(void *, const void *, uint64_t))(v26 + 24))(v21, v22, v23);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v26 + 8))(v21, v23);
    goto LABEL_12;
  }
  if (v25)
  {
LABEL_12:
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
    memcpy(v21, v22, *(void *)(*(void *)(v27 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v23);
  return a1;
}

uint64_t sub_22EDDDC84(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v6 = a3[8];
  uint64_t v7 = (void *)(a1 + v6);
  char v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_22EE7F6E0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E620);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = sub_22EE7F670();
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
    memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_22EDDDE38(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  char v9 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v6;
  sub_22EADB1A4(v7, v8, v9);
  uint64_t v10 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[8];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  uint64_t v16 = sub_22EE7F6E0();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v16);
  int v18 = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16);
  if (EnumTagSinglePayload)
  {
    if (!v18)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v19 = *(void *)(v16 - 8);
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v19 + 8))(v14, v16);
LABEL_6:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E620);
    memcpy(v14, v15, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v19 + 40))(v14, v15, v16);
LABEL_7:
  uint64_t v21 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (const void *)(a2 + v21);
  uint64_t v24 = sub_22EE7F670();
  int v25 = __swift_getEnumTagSinglePayload((uint64_t)v22, 1, v24);
  int v26 = __swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24);
  if (!v25)
  {
    uint64_t v27 = *(void *)(v24 - 8);
    if (!v26)
    {
      (*(void (**)(void *, const void *, uint64_t))(v27 + 40))(v22, v23, v24);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v27 + 8))(v22, v24);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
    memcpy(v22, v23, *(void *)(*(void *)(v28 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
  __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v24);
  return a1;
}

uint64_t sub_22EDDE11C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EDDE130);
}

uint64_t sub_22EDDE130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26861E620);
    OUTLINED_FUNCTION_10();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a3 + 32);
    }
    else
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
      uint64_t v11 = *(int *)(a3 + 40);
    }
    return __swift_getEnumTagSinglePayload(a1 + v11, a2, v10);
  }
}

uint64_t sub_22EDDE1E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EDDE1F8);
}

uint64_t sub_22EDDE1F8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 32) = (a2 - 1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26861E620);
    OUTLINED_FUNCTION_10();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a4 + 32);
    }
    else
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
      uint64_t v11 = *(int *)(a4 + 40);
    }
    return __swift_storeEnumTagSinglePayload(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for SubscriptionStoreCopyWriter(uint64_t a1)
{
  return sub_22EAD01C0(a1, (uint64_t *)&unk_268626E90);
}

void sub_22EDDE2C8()
{
  sub_22EDDE3F4(319, &qword_268626EA0, MEMORY[0x263F17F60]);
  if (v0 <= 0x3F)
  {
    sub_22EDDE3F4(319, (unint64_t *)&qword_26861BB70, MEMORY[0x263F17F28]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_22EDDE3F4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_22EE80040();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_22EDDE448@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v7 = sub_22EE7F6E0();
  OUTLINED_FUNCTION_0_2();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_5();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E620);
  uint64_t v12 = OUTLINED_FUNCTION_14(v11);
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_56_3();
  sub_22EADAD08(v2, v5, &qword_26861E620);
  uint64_t v13 = 1;
  uint64_t v14 = OUTLINED_FUNCTION_33_11();
  if (__swift_getEnumTagSinglePayload(v14, v15, v7) != 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v4, v5, v7);
    a1(v4);
    if (v3)
    {
      OUTLINED_FUNCTION_21_24();
      return v16();
    }
    OUTLINED_FUNCTION_21_24();
    v18();
    uint64_t v13 = 0;
  }
  uint64_t v19 = _s22LocalizedPriceResourceVMa(0);
  return __swift_storeEnumTagSinglePayload(a2, v13, 1, v19);
}

uint64_t sub_22EDDE5D0(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) == 0)
  {
    uint64_t v6 = a3;
    a1(&v7, &v6);
    if (!v4) {
      return v7;
    }
  }
  return a3;
}

uint64_t sub_22EDDE630@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v8 = type metadata accessor for SubscriptionOptionGroupAccessorySubview();
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_27_1();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861D9D0);
  uint64_t v11 = OUTLINED_FUNCTION_14(v10);
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_56_3();
  sub_22EADAD08(v2, v5, &qword_26861D9D0);
  uint64_t v12 = 1;
  uint64_t v13 = OUTLINED_FUNCTION_33_11();
  if (__swift_getEnumTagSinglePayload(v13, v14, v8) != 1)
  {
    sub_22EDE2678(v5, v4, (void (*)(void))type metadata accessor for SubscriptionOptionGroupAccessorySubview);
    a1(v4);
    uint64_t result = sub_22EDDC230();
    if (v3) {
      return result;
    }
    uint64_t v12 = 0;
  }
  uint64_t v16 = _s17AccessoryViewHostVMa();
  return __swift_storeEnumTagSinglePayload(a2, v12, 1, v16);
}

void sub_22EDDE79C()
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
  uint64_t v9 = OUTLINED_FUNCTION_14(v8);
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_3_2();
  uint64_t v102 = v10;
  OUTLINED_FUNCTION_8_3();
  sub_22EE7F540();
  OUTLINED_FUNCTION_0_2();
  uint64_t v99 = v12;
  uint64_t v100 = v11;
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_18_0();
  uint64_t v87 = v13;
  OUTLINED_FUNCTION_6_5();
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v85 - v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E620);
  uint64_t v18 = OUTLINED_FUNCTION_14(v17);
  MEMORY[0x270FA5388](v18);
  OUTLINED_FUNCTION_3_2();
  uint64_t v107 = v19;
  OUTLINED_FUNCTION_8_3();
  uint64_t v20 = type metadata accessor for Subscription();
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v21);
  OUTLINED_FUNCTION_18_0();
  uint64_t v101 = v22;
  OUTLINED_FUNCTION_6_5();
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  int v26 = (char *)&v85 - v25;
  MEMORY[0x270FA5388](v24);
  OUTLINED_FUNCTION_19_21();
  MEMORY[0x270FA5388](v27);
  uint64_t v28 = OUTLINED_FUNCTION_36_14();
  uint64_t v97 = type metadata accessor for SubscriptionStoreControlOption(v28);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v29);
  OUTLINED_FUNCTION_1_1();
  uint64_t v106 = type metadata accessor for SubscriptionStoreCopyWriter(0);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v30);
  OUTLINED_FUNCTION_9_1();
  uint64_t v33 = v31 - v32;
  MEMORY[0x270FA5388](v34);
  uint64_t v98 = (uint64_t)&v85 - v35;
  uint64_t v36 = OUTLINED_FUNCTION_35_14();
  sub_22EDE2624(v36, v37, v38);
  uint64_t v39 = sub_22ED2887C(v3, (uint64_t)v110);
  uint64_t v104 = v7;
  uint64_t v105 = v5;
  uint64_t v103 = (uint64_t *)v3;
  if (v110[2] == 1)
  {
    uint64_t v86 = 0;
    int v88 = 1;
  }
  else
  {
    MEMORY[0x270FA5388](v39);
    *(&v85 - 2) = v5;
    *(&v85 - 1) = v3;
    uint64_t v86 = sub_22EE1C5E8((void (*)(uint64_t *__return_ptr, uint64_t *))sub_22EDE2748, (uint64_t)(&v85 - 4), v40, v41);
    int v88 = v42 & 1;
  }
  uint64_t v43 = v107;
  uint64_t v44 = v0 + *(int *)(v20 + 20);
  uint64_t v45 = *(void *)v44;
  int v46 = *(unsigned __int8 *)(v44 + 8);
  uint64_t v47 = OUTLINED_FUNCTION_46_5();
  sub_22EDE2624(v47, v48, v49);
  if (v46 == 2)
  {
    uint64_t v90 = _s17_StoreKit_SwiftUI012SubscriptionA25ControlStyleConfigurationV12PickerOptionV2idSSvg_0();
    uint64_t v89 = v50;
  }
  else
  {
    uint64_t v90 = v45;
    uint64_t v89 = v46 & 1;
  }
  sub_22EDDC230();
  sub_22EDE2624(v0, v1, (void (*)(void))type metadata accessor for Subscription);
  uint64_t v96 = sub_22EE7F2D0();
  uint64_t v95 = v51;
  sub_22EDDC230();
  uint64_t v94 = sub_22EDE0434();
  uint64_t v93 = v52;
  sub_22EDE2624(v0, (uint64_t)v26, (void (*)(void))type metadata accessor for Subscription);
  uint64_t v92 = sub_22EE7F2F0();
  uint64_t v91 = v53;
  sub_22EDDC230();
  sub_22EAD9EA8((uint64_t)v16);
  sub_22EE7F480();
  uint64_t v54 = *(void (**)(void))(v99 + 8);
  OUTLINED_FUNCTION_15_15();
  OUTLINED_FUNCTION_21_24();
  v54();
  uint64_t v55 = sub_22EE7F6E0();
  __swift_storeEnumTagSinglePayload(v43, 0, 1, v55);
  uint64_t v56 = 0;
  uint64_t v57 = v43;
  if ((v88 & 1) == 0)
  {
    uint64_t v58 = v87;
    sub_22EAD9EA8(v87);
    uint64_t v59 = sub_22EE7F410();
    OUTLINED_FUNCTION_21_24();
    v54();
    uint64_t v60 = v86;
    if (v59 >= v86)
    {
      sub_22EAD9EA8(v58);
      uint64_t v61 = sub_22EE7F410();
      OUTLINED_FUNCTION_21_24();
      v54();
      if (v60 == v61) {
        uint64_t v56 = 4;
      }
      else {
        uint64_t v56 = 2;
      }
    }
    else
    {
      uint64_t v56 = 8;
    }
    uint64_t v57 = v107;
  }
  BOOL v62 = v46 == 2;
  uint64_t v63 = v102;
  sub_22EADAD08(v0 + *(int *)(v97 + 20), v102, &qword_26861BB58);
  uint64_t v64 = v106;
  uint64_t v65 = v33 + *(int *)(v106 + 32);
  __swift_storeEnumTagSinglePayload(v65, 1, 1, v55);
  uint64_t v66 = *(int *)(v64 + 36);
  *(void *)(v33 + v66) = 0;
  uint64_t v67 = v33 + *(int *)(v64 + 40);
  sub_22EE7F670();
  uint64_t v68 = OUTLINED_FUNCTION_33_11();
  __swift_storeEnumTagSinglePayload(v68, v69, 1, v70);
  uint64_t v71 = v89;
  *(void *)uint64_t v33 = v90;
  *(void *)(v33 + 8) = v71;
  *(unsigned char *)(v33 + 16) = v62;
  uint64_t v72 = v95;
  *(void *)(v33 + 24) = v96;
  *(void *)(v33 + 32) = v72;
  uint64_t v73 = v93;
  *(void *)(v33 + 40) = v94;
  *(void *)(v33 + 48) = v73;
  uint64_t v74 = v91;
  *(void *)(v33 + 56) = v92;
  *(void *)(v33 + 64) = v74;
  sub_22ED821D8(v57, v65, &qword_26861E620);
  *(void *)(v33 + v66) = v56;
  sub_22ED821D8(v63, v67, &qword_26861BB58);
  uint64_t v75 = v98;
  sub_22EDE2678(v33, v98, (void (*)(void))type metadata accessor for SubscriptionStoreCopyWriter);
  sub_22EDDC230();
  uint64_t v76 = v104;
  sub_22EDE2678(v75, v104, (void (*)(void))type metadata accessor for SubscriptionStoreCopyWriter);
  uint64_t v77 = v101;
  sub_22EDE2624(v105, v101, (void (*)(void))type metadata accessor for Subscription);
  uint64_t v78 = _s17_StoreKit_SwiftUI012SubscriptionA25ControlStyleConfigurationV12PickerOptionV2idSSvg_0();
  uint64_t v80 = v79;
  sub_22EE7F780();
  OUTLINED_FUNCTION_2_0();
  (*(void (**)(uint64_t))(v81 + 8))(v77);
  uint64_t v82 = v103;
  sub_22ED2887C((uint64_t)v103, (uint64_t)v108);
  if (v109 < 2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    if (v78 == v108[1] && v109 == v80)
    {
      sub_22EB16064(v82);
      swift_bridgeObjectRelease();
LABEL_24:
      sub_22EDDC230();
      *(void *)(v76 + *(int *)(v106 + 36)) = 1;
      goto LABEL_25;
    }
    char v84 = sub_22EE80660();
    sub_22EB16064(v82);
    swift_bridgeObjectRelease();
    if (v84) {
      goto LABEL_24;
    }
  }
  sub_22EDDC230();
LABEL_25:
  OUTLINED_FUNCTION_5_0();
}

void sub_22EDDEEFC()
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v2 = sub_22EE7F5D0();
  OUTLINED_FUNCTION_0_2();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_9_1();
  uint64_t v8 = v6 - v7;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v29 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
  uint64_t v13 = OUTLINED_FUNCTION_14(v12);
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_56_3();
  uint64_t v14 = sub_22EE7F670();
  OUTLINED_FUNCTION_0_2();
  v29[1] = v15;
  MEMORY[0x270FA5388](v16);
  uint64_t v17 = type metadata accessor for SubscriptionStoreCopyWriter(0);
  uint64_t v18 = *(int *)(v17 + 40);
  v29[0] = v0;
  sub_22EADAD08(v0 + v18, v1, &qword_26861BB58);
  uint64_t v19 = OUTLINED_FUNCTION_33_11();
  OUTLINED_FUNCTION_7_0(v19, v20, v14);
  if (v21)
  {
    sub_22EADAC74(v1, &qword_26861BB58);
  }
  else
  {
    OUTLINED_FUNCTION_12_29();
    v22();
    sub_22EE7F5E0();
    sub_22EE7F5C0();
    char v23 = sub_22EB14A78((uint64_t)v11, v8);
    uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
    v24(v8, v2);
    v24((uint64_t)v11, v2);
    if (v23)
    {
      OUTLINED_FUNCTION_70();
      sub_22EE7D5A0();
      OUTLINED_FUNCTION_48_6();
      uint64_t v25 = OUTLINED_FUNCTION_32_13();
      v26(v25);
      goto LABEL_10;
    }
    uint64_t v27 = OUTLINED_FUNCTION_32_13();
    v28(v27);
  }
  if ((*(void *)(v29[0] + *(int *)(v17 + 36)) & 8) == 0) {
    OUTLINED_FUNCTION_70();
  }
  sub_22EE7D5A0();
  OUTLINED_FUNCTION_48_6();
LABEL_10:
  OUTLINED_FUNCTION_5_0();
}

void sub_22EDDF1AC()
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v2 = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F8);
  uint64_t v4 = OUTLINED_FUNCTION_14(v3);
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_5();
  uint64_t v6 = sub_22ECE508C(v5);
  uint64_t v8 = v7;
  char v10 = v9 & 1;
  uint64_t v11 = type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0);
  sub_22EADAD08(v2 + *(int *)(v11 + 20), v0, &qword_26861C9F8);
  uint64_t v12 = _s11PriceStringOMa(0);
  uint64_t v13 = OUTLINED_FUNCTION_7_0(v0, 1, v12);
  if (v14)
  {
    sub_22EADAC74(v0, &qword_26861C9F8);
  }
  else
  {
    uint64_t v15 = sub_22ECE508C(v13);
    uint64_t v17 = v16;
    char v19 = v18 & 1;
    sub_22EDDC230();
    sub_22EE7E0C0();
    sub_22EB051EC(v15, v17, v19);
    swift_bridgeObjectRelease();
    sub_22EB051EC(v6, v8, v10);
    swift_bridgeObjectRelease();
  }
  sub_22EDDC230();
  OUTLINED_FUNCTION_5_0();
}

void sub_22EDDF34C()
{
  OUTLINED_FUNCTION_6_0();
  int v3 = v2;
  int v62 = v4;
  int v64 = v5;
  uint64_t v66 = v6;
  uint64_t v60 = _s11PriceStringOMa(0);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_22_22(v8, v53);
  sub_22EE7F5D0();
  OUTLINED_FUNCTION_0_2();
  uint64_t v58 = v10;
  uint64_t v59 = v9;
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_18_0();
  uint64_t v57 = v11;
  OUTLINED_FUNCTION_6_5();
  MEMORY[0x270FA5388](v12);
  uint64_t v56 = (char *)&v53 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E628);
  uint64_t v15 = OUTLINED_FUNCTION_14(v14);
  MEMORY[0x270FA5388](v15);
  uint64_t v61 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_6_5();
  MEMORY[0x270FA5388](v17);
  uint64_t v54 = (char *)&v53 - v18;
  OUTLINED_FUNCTION_6_5();
  MEMORY[0x270FA5388](v19);
  char v21 = (char *)&v53 - v20;
  uint64_t v63 = _s22LocalizedPriceResourceVMa(0);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v22);
  OUTLINED_FUNCTION_18_0();
  uint64_t v55 = v23;
  OUTLINED_FUNCTION_6_5();
  MEMORY[0x270FA5388](v24);
  uint64_t v53 = (uint64_t)&v53 - v25;
  OUTLINED_FUNCTION_6_5();
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)&v53 - v27;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
  uint64_t v30 = OUTLINED_FUNCTION_14(v29);
  MEMORY[0x270FA5388](v30);
  uint64_t v31 = OUTLINED_FUNCTION_25_15();
  OUTLINED_FUNCTION_0_2();
  uint64_t v33 = v32;
  MEMORY[0x270FA5388](v34);
  OUTLINED_FUNCTION_5();
  uint64_t v35 = type metadata accessor for SubscriptionStoreCopyWriter(0);
  sub_22EADAD08(v0 + *(int *)(v35 + 40), v0, &qword_26861BB58);
  OUTLINED_FUNCTION_7_0(v0, 1, v31);
  if (v36)
  {
    uint64_t v37 = &qword_26861BB58;
    uint64_t v38 = v0;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 32))(v1, v0, v31);
    if (v3 == 4)
    {
      sub_22EDE0CCC();
      OUTLINED_FUNCTION_7_0((uint64_t)v21, 1, v63);
      if (!v36)
      {
        uint64_t v46 = OUTLINED_FUNCTION_17_25();
        v47(v46);
        sub_22EDE2678((uint64_t)v21, (uint64_t)v28, (void (*)(void))_s22LocalizedPriceResourceVMa);
        uint64_t v48 = (uint64_t)v28;
LABEL_24:
        sub_22EDE2678(v48, v66, (void (*)(void))_s22LocalizedPriceResourceVMa);
        swift_storeEnumTagMultiPayload();
        goto LABEL_25;
      }
      sub_22EADAC74((uint64_t)v21, &qword_26861E628);
    }
    if (v62)
    {
      int v62 = v3;
      sub_22EE7F5E0();
      sub_22EE7F5C0();
      sub_22EDE26D8(&qword_268623CE0, MEMORY[0x263F17F08]);
      char v39 = sub_22EE7F900();
      uint64_t v40 = *(void (**)(void))(v58 + 8);
      OUTLINED_FUNCTION_15_15();
      OUTLINED_FUNCTION_38_4();
      v40();
      LOBYTE(v3) = v62;
      OUTLINED_FUNCTION_38_4();
      v40();
      if ((v39 & 1) == 0)
      {
        char v41 = v54;
        sub_22EDE0E74(v54);
        OUTLINED_FUNCTION_7_0((uint64_t)v41, 1, v63);
        if (!v36)
        {
          uint64_t v49 = OUTLINED_FUNCTION_17_25();
          v50(v49);
          uint64_t v51 = (uint64_t)v41;
          uint64_t v52 = v53;
LABEL_23:
          sub_22EDE2678(v51, v52, (void (*)(void))_s22LocalizedPriceResourceVMa);
          uint64_t v48 = v52;
          goto LABEL_24;
        }
        sub_22EADAC74((uint64_t)v41, &qword_26861E628);
      }
    }
    uint64_t v42 = (uint64_t)v61;
    sub_22EDE0B28();
    uint64_t v43 = OUTLINED_FUNCTION_17_25();
    v44(v43);
    OUTLINED_FUNCTION_7_0(v42, 1, v63);
    if (!v36)
    {
      uint64_t v51 = v42;
      uint64_t v52 = v55;
      goto LABEL_23;
    }
    uint64_t v37 = &qword_26861E628;
    uint64_t v38 = v42;
  }
  sub_22EADAC74(v38, v37);
  uint64_t v45 = v65;
  if (v3 == 4)
  {
    if (v64) {
      goto LABEL_20;
    }
LABEL_21:
    sub_22EDE09B0();
    goto LABEL_22;
  }
  if ((v64 & 1) == 0) {
    goto LABEL_21;
  }
LABEL_20:
  sub_22EDE0558();
LABEL_22:
  sub_22EDE2678(v45, v66, (void (*)(void))_s11PriceStringOMa);
LABEL_25:
  OUTLINED_FUNCTION_5_0();
}

uint64_t sub_22EDDF87C()
{
  uint64_t v4 = OUTLINED_FUNCTION_51_3();
  uint64_t v5 = type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(v4);
  uint64_t v6 = OUTLINED_FUNCTION_14(v5);
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_27_11();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = OUTLINED_FUNCTION_36_14();
  type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(v8);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_1_1();
  sub_22EDE2624(v0, v3, (void (*)(void))type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = OUTLINED_FUNCTION_46_5();
    sub_22EDE2678(v10, v11, v12);
    sub_22EDE2624(v1, v2, (void (*)(void))type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair);
    sub_22EDDF1AC();
    OUTLINED_FUNCTION_40_8();
    sub_22EDDC230();
  }
  else
  {
    if (qword_26861B690 != -1) {
      swift_once();
    }
    id v13 = (id)qword_26864BFA0;
    sub_22EE7E120();
    OUTLINED_FUNCTION_40_8();
  }
  sub_22EDDC230();
  return OUTLINED_FUNCTION_35_14();
}

void sub_22EDDFA84()
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E628);
  uint64_t v5 = OUTLINED_FUNCTION_14(v4);
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_3_2();
  uint64_t v67 = v6;
  uint64_t v7 = OUTLINED_FUNCTION_8_3();
  uint64_t v65 = _s22LocalizedPriceResourceVMa(v7);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_3_2();
  uint64_t v64 = v9;
  sub_22EE7F6E0();
  OUTLINED_FUNCTION_0_2();
  uint64_t v68 = v11;
  uint64_t v69 = v10;
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_3_2();
  uint64_t v66 = v12;
  uint64_t v13 = sub_22EE7F5D0();
  OUTLINED_FUNCTION_0_2();
  uint64_t v70 = v14;
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_9_1();
  uint64_t v18 = v16 - v17;
  MEMORY[0x270FA5388](v19);
  char v21 = (char *)&v61 - v20;
  uint64_t v22 = type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration(0);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v23);
  OUTLINED_FUNCTION_22_22(v24, v61);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
  uint64_t v26 = OUTLINED_FUNCTION_14(v25);
  MEMORY[0x270FA5388](v26);
  uint64_t v27 = OUTLINED_FUNCTION_25_15();
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x270FA5388](v28);
  OUTLINED_FUNCTION_3_2();
  uint64_t v72 = v29;
  uint64_t v30 = OUTLINED_FUNCTION_8_3();
  uint64_t v31 = type metadata accessor for SubscriptionStoreCopyWriter(v30);
  sub_22EADAD08(v0 + *(int *)(v31 + 40), v0, &qword_26861BB58);
  OUTLINED_FUNCTION_7_0(v0, 1, v27);
  if (v32)
  {
    sub_22EADAC74(v0, &qword_26861BB58);
    sub_22EDE0558();
    uint64_t v34 = *(void *)(v0 + 56);
    uint64_t v33 = *(void *)(v0 + 64);
    uint64_t v35 = type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard(0);
    uint64_t v36 = v3 + *(int *)(v35 + 24);
    swift_bridgeObjectRetain();
    sub_22EDE10D0(v36);
    sub_22EDE0558();
    uint64_t v37 = (void *)(v3 + *(int *)(v35 + 20));
    *uint64_t v37 = v34;
    v37[1] = v33;
    OUTLINED_FUNCTION_41_10();
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    uint64_t v62 = v3;
    uint64_t v63 = v22;
    OUTLINED_FUNCTION_12_29();
    v38();
    sub_22EE7F5E0();
    sub_22EE7F5C0();
    sub_22EDE26D8(&qword_268623CE0, MEMORY[0x263F17F08]);
    char v39 = sub_22EE7F900();
    uint64_t v40 = *(void (**)(uint64_t, uint64_t))(v70 + 8);
    v40(v18, v13);
    v40((uint64_t)v21, v13);
    if (v39)
    {
      uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_268626C70);
      uint64_t v42 = v71;
      uint64_t v43 = v71 + *(int *)(v41 + 48);
      uint64_t v44 = v1;
      sub_22EDE0558();
      uint64_t v45 = *(void *)(v1 + 56);
      uint64_t v46 = *(void *)(v44 + 64);
      uint64_t v47 = type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard(0);
      uint64_t v48 = v42 + *(int *)(v47 + 24);
      swift_bridgeObjectRetain();
      sub_22EDE10D0(v48);
      sub_22EDE0558();
      uint64_t v49 = (void *)(v42 + *(int *)(v47 + 20));
      *uint64_t v49 = v45;
      v49[1] = v46;
      uint64_t v50 = v66;
      sub_22EE7F650();
      OUTLINED_FUNCTION_38_4();
      v51();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 32))(v43, v50, v69);
      *(_OWORD *)(v43 + *(int *)(_s20LocalizationResourceVMa() + 20)) = xmmword_22EE8AB40;
    }
    else
    {
      uint64_t v52 = v67;
      sub_22EDE0E74(v67);
      OUTLINED_FUNCTION_7_0((uint64_t)v52, 1, v65);
      uint64_t v42 = v71;
      if (v32)
      {
        sub_22EADAC74((uint64_t)v52, &qword_26861E628);
        sub_22EDE0558();
        uint64_t v54 = *(void *)(v1 + 56);
        uint64_t v53 = *(void *)(v1 + 64);
        uint64_t v55 = type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard(0);
        uint64_t v56 = v42 + *(int *)(v55 + 24);
        swift_bridgeObjectRetain();
        sub_22EDE10D0(v56);
        sub_22EDE0558();
        uint64_t v57 = (void *)(v42 + *(int *)(v55 + 20));
        *uint64_t v57 = v54;
        v57[1] = v53;
      }
      else
      {
        uint64_t v58 = v64;
        sub_22EDE2678((uint64_t)v52, v64, (void (*)(void))_s22LocalizedPriceResourceVMa);
        __swift_instantiateConcreteTypeFromMangledName(&qword_268626C78);
        sub_22EDE2624(v58, v42, (void (*)(void))_s22LocalizedPriceResourceVMa);
        sub_22EDDF34C();
        sub_22EDDC230();
      }
      OUTLINED_FUNCTION_38_4();
      v59();
    }
    uint64_t v60 = v62;
    swift_storeEnumTagMultiPayload();
    sub_22EDE2678(v42, v60, (void (*)(void))type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration);
  }
  OUTLINED_FUNCTION_5_0();
}

void sub_22EDE0034()
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for Subscription();
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_5();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_26861BAB0);
  uint64_t v6 = OUTLINED_FUNCTION_14(v5);
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_9_1();
  uint64_t v9 = v7 - v8;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v28 - v11;
  uint64_t v13 = sub_22EE04BF0();
  uint64_t v15 = v14;
  char v17 = v16 & 1;
  sub_22EADAD08(v2, (uint64_t)v12, qword_26861BAB0);
  OUTLINED_FUNCTION_7_0((uint64_t)v12, 1, v3);
  if (v18)
  {
    sub_22EADAC74((uint64_t)v12, qword_26861BAB0);
    sub_22EADB1A4(v13, v15, v17);
LABEL_8:
    sub_22EADAD08(v2, v9, qword_26861BAB0);
    OUTLINED_FUNCTION_7_0(v9, 1, v3);
    if (v18)
    {
      sub_22EADAC74(v9, qword_26861BAB0);
    }
    else
    {
      swift_getKeyPath();
      sub_22EC6ADFC();
      swift_release();
      sub_22EDDC230();
    }
    goto LABEL_11;
  }
  uint64_t v28 = v15;
  uint64_t v29 = v2;
  uint64_t v19 = &v12[*(int *)(v3 + 20)];
  uint64_t v20 = *(void *)v19;
  int v21 = v19[8];
  sub_22EDE2624((uint64_t)v12, v0, (void (*)(void))type metadata accessor for Subscription);
  if (v21 == 2)
  {
    uint64_t v20 = _s17_StoreKit_SwiftUI012SubscriptionA25ControlStyleConfigurationV12PickerOptionV2idSSvg_0();
    uint64_t v23 = v22;
  }
  else
  {
    uint64_t v23 = v21 & 1;
  }
  char v24 = v21 == 2;
  sub_22EDDC230();
  sub_22EDDC230();
  char v25 = sub_22EE04E14(v13, v28, v17, v20, v23, v24);
  sub_22EADB1A4(v20, v23, v24);
  uint64_t v26 = OUTLINED_FUNCTION_41_10();
  sub_22EADB1A4(v26, v27, v17);
  uint64_t v2 = v29;
  if ((v25 & 1) == 0) {
    goto LABEL_8;
  }
LABEL_11:
  OUTLINED_FUNCTION_5_0();
}

uint64_t sub_22EDE02B8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for Subscription();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = &v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v11 = *a1;
  sub_22EDE2624(a2, (uint64_t)v10, (void (*)(void))type metadata accessor for Subscription);
  uint64_t v12 = _s17_StoreKit_SwiftUI012SubscriptionA25ControlStyleConfigurationV12PickerOptionV2idSSvg_0();
  uint64_t v14 = v13;
  uint64_t v15 = sub_22EE7F780();
  (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v10, v15);
  sub_22ED2887C(a3, (uint64_t)v21);
  if (v23 < 2)
  {
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    if (v12 == v22 && v23 == v14)
    {
      uint64_t result = swift_bridgeObjectRelease();
LABEL_11:
      uint64_t v11 = 0;
      char v19 = 1;
      goto LABEL_12;
    }
    char v17 = sub_22EE80660();
    uint64_t result = swift_bridgeObjectRelease();
    if (v17) {
      goto LABEL_11;
    }
  }
  char v19 = 0;
LABEL_12:
  *(void *)a4 = v11;
  *(unsigned char *)(a4 + 8) = v19;
  return result;
}

uint64_t sub_22EDE0434()
{
  OUTLINED_FUNCTION_51_3();
  uint64_t v1 = type metadata accessor for Subscription();
  uint64_t v2 = OUTLINED_FUNCTION_14(v1);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22EDE2624(v0, (uint64_t)v4, (void (*)(void))type metadata accessor for Subscription);
  sub_22EE7F2C0();
  sub_22EDDC230();
  uint64_t v5 = OUTLINED_FUNCTION_35_14();
  char v7 = sub_22ED75CF8(v5, v6);
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0)
  {
    sub_22EDE2624(v0, (uint64_t)v4, (void (*)(void))type metadata accessor for Subscription);
    sub_22EE7F2C0();
    sub_22EDDC230();
  }
  return OUTLINED_FUNCTION_35_14();
}

void sub_22EDE0558()
{
  OUTLINED_FUNCTION_6_0();
  char v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E620);
  uint64_t v7 = OUTLINED_FUNCTION_14(v6);
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = OUTLINED_FUNCTION_24_16();
  OUTLINED_FUNCTION_0_2();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  uint64_t v12 = type metadata accessor for SubscriptionStoreCopyWriter(0);
  OUTLINED_FUNCTION_43_7(v12);
  OUTLINED_FUNCTION_7_0(v1, 1, v8);
  if (v13)
  {
    sub_22EADAC74(v1, &qword_26861E620);
    sub_22EDE06D4();
  }
  else
  {
    uint64_t v14 = *(void (**)(void))(v10 + 32);
    OUTLINED_FUNCTION_18_24();
    v14();
    uint64_t v16 = *(void *)(v0 + 56);
    uint64_t v15 = *(void *)(v0 + 64);
    uint64_t v17 = _s22LocalizedPriceResourceVMa(0);
    OUTLINED_FUNCTION_18_24();
    v14();
    char v18 = (char *)v5 + *(int *)(v17 + 24);
    unsigned char *v18 = v3;
    v18[1] = 1;
    _s22LocalizedPriceResourceV6FormatOMa(0);
    swift_storeEnumTagMultiPayload();
    *uint64_t v5 = v16;
    v5[1] = v15;
    _s11PriceStringOMa(0);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
  }
  OUTLINED_FUNCTION_5_0();
}

void sub_22EDE06D4()
{
  OUTLINED_FUNCTION_6_0();
  char v2 = v0;
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for SKLogger();
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_1_1();
  if (qword_26861B778 != -1) {
    swift_once();
  }
  uint64_t v7 = __swift_project_value_buffer(v5, (uint64_t)qword_26864C398);
  sub_22EDE2624(v7, v1, (void (*)(void))type metadata accessor for SKLogger);
  *(void *)&long long v17 = 0;
  *((void *)&v17 + 1) = 0xE000000000000000;
  sub_22EE801C0();
  uint64_t v19 = 0;
  unint64_t v20 = 0xE000000000000000;
  OUTLINED_FUNCTION_70();
  sub_22EE7FAA0();
  char v8 = *((unsigned char *)v2 + 16);
  long long v17 = *v2;
  char v18 = v8;
  sub_22EE80350();
  os_log_type_t v9 = sub_22EE7FFD0();
  swift_bridgeObjectRetain_n();
  uint64_t v10 = sub_22EE7C550();
  os_log_type_t v11 = v9;
  if (os_log_type_enabled(v10, v9))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v16 = v4;
    *(void *)&long long v17 = swift_slowAlloc();
    uint64_t v13 = v17;
    *(_DWORD *)uint64_t v12 = 136446466;
    uint64_t v19 = sub_22EC1FA24(0, 0xE000000000000000, (uint64_t *)&v17);
    sub_22EE800B0();
    *(_WORD *)(v12 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_22EC1FA24(0, 0xE000000000000000, (uint64_t *)&v17);
    sub_22EE800B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_22EAC6000, v10, v11, "%{public}s%{public}s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    uint64_t v14 = v13;
    uint64_t v4 = v16;
    MEMORY[0x230FAE500](v14, -1, -1);
    MEMORY[0x230FAE500](v12, -1, -1);
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_22EDDC230();
  uint64_t v15 = *((void *)v2 + 8);
  *uint64_t v4 = *((void *)v2 + 7);
  v4[1] = v15;
  _s11PriceStringOMa(0);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_5_0();
}

void sub_22EDE09B0()
{
  OUTLINED_FUNCTION_6_0();
  char v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E620);
  uint64_t v7 = OUTLINED_FUNCTION_14(v6);
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = OUTLINED_FUNCTION_24_16();
  OUTLINED_FUNCTION_0_2();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  uint64_t v12 = type metadata accessor for SubscriptionStoreCopyWriter(0);
  OUTLINED_FUNCTION_43_7(v12);
  OUTLINED_FUNCTION_7_0(v1, 1, v8);
  if (v13)
  {
    sub_22EADAC74(v1, &qword_26861E620);
    sub_22EDE06D4();
  }
  else
  {
    uint64_t v14 = *(void (**)(void))(v10 + 32);
    OUTLINED_FUNCTION_18_24();
    v14();
    uint64_t v16 = *(void *)(v0 + 56);
    uint64_t v15 = *(void *)(v0 + 64);
    uint64_t v17 = _s22LocalizedPriceResourceVMa(0);
    OUTLINED_FUNCTION_18_24();
    v14();
    *((unsigned char *)v5 + *(int *)(v17 + 24)) = v3 & 1;
    _s22LocalizedPriceResourceV6FormatOMa(0);
    swift_storeEnumTagMultiPayload();
    *uint64_t v5 = v16;
    v5[1] = v15;
    _s11PriceStringOMa(0);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
  }
  OUTLINED_FUNCTION_5_0();
}

void sub_22EDE0B28()
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E620);
  uint64_t v4 = OUTLINED_FUNCTION_14(v3);
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = OUTLINED_FUNCTION_23_17();
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_27_1();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
  uint64_t v8 = OUTLINED_FUNCTION_14(v7);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SubscriptionStoreCopyWriter(0);
  OUTLINED_FUNCTION_29_16(v11);
  OUTLINED_FUNCTION_7_0((uint64_t)v10, 1, v5);
  if (v12)
  {
    uint64_t v13 = _s22LocalizedPriceResourceVMa(0);
    OUTLINED_FUNCTION_22_18(v13);
  }
  else
  {
    OUTLINED_FUNCTION_12_29();
    v14();
    uint64_t v15 = sub_22EADAD08(v0 + *(int *)(v2 + 32), v1, &qword_26861E620);
    MEMORY[0x270FA5388](v15);
    OUTLINED_FUNCTION_37_15();
    *(unsigned char *)(v16 - 16) = 0;
    OUTLINED_FUNCTION_49_7((void (*)(uint64_t))sub_22EDE2724);
    sub_22EADAC74(v1, &qword_26861E620);
    uint64_t v17 = OUTLINED_FUNCTION_50_5();
    v18(v17);
  }
  OUTLINED_FUNCTION_5_0();
}

void sub_22EDE0CCC()
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E620);
  uint64_t v4 = OUTLINED_FUNCTION_14(v3);
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = OUTLINED_FUNCTION_23_17();
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_27_1();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
  uint64_t v8 = OUTLINED_FUNCTION_14(v7);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SubscriptionStoreCopyWriter(0);
  OUTLINED_FUNCTION_29_16(v11);
  OUTLINED_FUNCTION_7_0((uint64_t)v10, 1, v5);
  if (v12)
  {
    uint64_t v13 = _s22LocalizedPriceResourceVMa(0);
    OUTLINED_FUNCTION_22_18(v13);
  }
  else
  {
    OUTLINED_FUNCTION_12_29();
    v14();
    uint64_t v15 = sub_22EADAD08(v0 + *(int *)(v2 + 32), v1, &qword_26861E620);
    MEMORY[0x270FA5388](v15);
    OUTLINED_FUNCTION_37_15();
    *(unsigned char *)(v16 - 16) = 1;
    OUTLINED_FUNCTION_49_7((void (*)(uint64_t))sub_22EDE2768);
    sub_22EADAC74(v1, &qword_26861E620);
    uint64_t v17 = OUTLINED_FUNCTION_50_5();
    v18(v17);
  }
  OUTLINED_FUNCTION_5_0();
}

uint64_t sub_22EDE0E74@<X0>(char *a1@<X8>)
{
  uint64_t v3 = sub_22EE7F6E0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E620);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SubscriptionStoreCopyWriter(0);
  sub_22EADAD08(v1 + *(int *)(v10 + 32), (uint64_t)v9, &qword_26861E620);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v3) == 1)
  {
    uint64_t v11 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v12 = (uint64_t)a1;
    uint64_t v13 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v9, v3);
    uint64_t v14 = *(void *)(v1 + 56);
    uint64_t v24 = *(void *)(v1 + 64);
    uint64_t v25 = v14;
    uint64_t v15 = _s22LocalizedPriceResourceVMa(0);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(&a1[*(int *)(v15 + 20)], v6, v3);
    uint64_t v16 = (uint64_t *)&a1[*(int *)(v15 + 24)];
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_22EE7F600();
    uint64_t v19 = v18;
    uint64_t v20 = _s15PricePropertiesVMa(0);
    sub_22EE7F5E0();
    sub_22EE7F650();
    uint64_t v21 = sub_22EE7F5F0();
    *uint64_t v16 = v17;
    v16[1] = v19;
    *(uint64_t *)((char *)v16 + *(int *)(v20 + 28)) = v21;
    _s22LocalizedPriceResourceV6FormatOMa(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v22 = v24;
    *(void *)a1 = v25;
    *((void *)a1 + 1) = v22;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v12 = (uint64_t)a1;
    uint64_t v13 = 0;
    uint64_t v11 = v15;
  }
  return __swift_storeEnumTagSinglePayload(v12, v13, 1, v11);
}

uint64_t sub_22EDE10D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_22EE7C400();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v4 = sub_22EE7F990();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v5 = sub_22EE7F6E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E620);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861CA00);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for SubscriptionStoreCopyWriter(0);
  sub_22EADAD08(v1 + *(int *)(v15 + 32), (uint64_t)v11, &qword_26861E620);
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v5) == 1)
  {
    uint64_t v16 = sub_22EE7C220();
    uint64_t v17 = (uint64_t)v14;
    uint64_t v18 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
    sub_22ED905C4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v16 = sub_22EE7C220();
    uint64_t v17 = (uint64_t)v14;
    uint64_t v18 = 0;
  }
  __swift_storeEnumTagSinglePayload(v17, v18, 1, v16);
  sub_22EE7C220();
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v16) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v16 - 8) + 32))(a1, v14, v16);
  }
  sub_22EE7F910();
  sub_22EE7C3F0();
  sub_22ED91694();
  return sub_22EADAC74((uint64_t)v14, &qword_26861CA00);
}

uint64_t sub_22EDE13F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W3>, void *a4@<X8>)
{
  uint64_t v7 = *(void *)(a2 + 64);
  uint64_t v19 = *(void *)(a2 + 56);
  uint64_t v8 = _s22LocalizedPriceResourceVMa(0);
  uint64_t v9 = (char *)a4 + *(int *)(v8 + 20);
  sub_22EE7F6E0();
  OUTLINED_FUNCTION_2_0();
  (*(void (**)(char *, uint64_t))(v10 + 16))(v9, a1);
  uint64_t v11 = (void *)((char *)a4 + *(int *)(v8 + 24));
  uint64_t v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0) + 48);
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_22EE7F600();
  uint64_t v15 = v14;
  uint64_t v16 = _s15PricePropertiesVMa(0);
  sub_22EE7F5E0();
  sub_22EE7F650();
  uint64_t v17 = sub_22EE7F5F0();
  uint64_t *v11 = v13;
  v11[1] = v15;
  *(uint64_t *)((char *)v11 + *(int *)(v16 + 28)) = v17;
  *((unsigned char *)v11 + v12) = a3;
  _s22LocalizedPriceResourceV6FormatOMa(0);
  uint64_t result = swift_storeEnumTagMultiPayload();
  *a4 = v19;
  a4[1] = v7;
  return result;
}

void sub_22EDE1518()
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v84 = sub_22EE7F670();
  OUTLINED_FUNCTION_0_2();
  uint64_t v79 = v8;
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_3_2();
  uint64_t v78 = v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB98);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_3_2();
  uint64_t v83 = v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
  uint64_t v15 = OUTLINED_FUNCTION_14(v14);
  MEMORY[0x270FA5388](v15);
  uint64_t v80 = &v74[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  OUTLINED_FUNCTION_6_5();
  MEMORY[0x270FA5388](v17);
  uint64_t v81 = &v74[-v18];
  OUTLINED_FUNCTION_6_5();
  MEMORY[0x270FA5388](v19);
  uint64_t v82 = &v74[-v20];
  uint64_t v21 = sub_22EE7F6E0();
  OUTLINED_FUNCTION_0_2();
  uint64_t v85 = v22;
  MEMORY[0x270FA5388](v23);
  OUTLINED_FUNCTION_14_0();
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_268626EC0);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v25);
  OUTLINED_FUNCTION_66_1();
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E620);
  uint64_t v27 = OUTLINED_FUNCTION_14(v26);
  MEMORY[0x270FA5388](v27);
  OUTLINED_FUNCTION_84_0();
  MEMORY[0x270FA5388](v28);
  OUTLINED_FUNCTION_19_21();
  MEMORY[0x270FA5388](v29);
  uint64_t v31 = &v74[-v30];
  uint64_t v32 = *v7;
  uint64_t v33 = *v5;
  uint64_t v34 = v5[1];
  if (v7[2])
  {
    if ((v5[2] & 1) == 0) {
      goto LABEL_10;
    }
    BOOL v35 = v32 == v33 && v7[1] == v34;
    if (!v35)
    {
      sub_22EE80660();
      OUTLINED_FUNCTION_38_12();
      if ((v36 & 1) == 0) {
        goto LABEL_10;
      }
    }
  }
  else if ((v5[2] & 1) != 0 || v32 != v33 || ((((v7[1] & 1) == 0) ^ v34) & 1) == 0)
  {
    goto LABEL_10;
  }
  if (v7[3] != v5[3] || v7[4] != v5[4])
  {
    sub_22EE80660();
    OUTLINED_FUNCTION_38_12();
    if ((v38 & 1) == 0) {
      goto LABEL_10;
    }
  }
  uint64_t v39 = v7[6];
  uint64_t v40 = v5[6];
  if (v39)
  {
    if (!v40) {
      goto LABEL_10;
    }
    if (v7[5] != v5[5] || v39 != v40)
    {
      sub_22EE80660();
      OUTLINED_FUNCTION_38_12();
      if ((v42 & 1) == 0) {
        goto LABEL_10;
      }
    }
  }
  else if (v40)
  {
    goto LABEL_10;
  }
  if (v7[7] != v5[7] || v7[8] != v5[8])
  {
    sub_22EE80660();
    OUTLINED_FUNCTION_38_12();
    if ((v44 & 1) == 0) {
      goto LABEL_10;
    }
  }
  uint64_t v77 = v11;
  uint64_t v45 = type metadata accessor for SubscriptionStoreCopyWriter(0);
  sub_22EADAD08((uint64_t)v7 + *(int *)(v45 + 32), (uint64_t)v31, &qword_26861E620);
  uint64_t v76 = v45;
  sub_22EADAD08((uint64_t)v5 + *(int *)(v45 + 32), v3, &qword_26861E620);
  uint64_t v46 = v0 + *(int *)(v24 + 48);
  sub_22EADAD08((uint64_t)v31, v0, &qword_26861E620);
  uint64_t v47 = OUTLINED_FUNCTION_41_10();
  sub_22EADAD08(v47, v48, &qword_26861E620);
  OUTLINED_FUNCTION_7_0(v0, 1, v21);
  if (v35)
  {
    OUTLINED_FUNCTION_31_13();
    OUTLINED_FUNCTION_30_13();
    OUTLINED_FUNCTION_7_0(v46, 1, v21);
    uint64_t v49 = v77;
    if (v35)
    {
      sub_22EADAC74(v0, &qword_26861E620);
LABEL_43:
      uint64_t v58 = v76;
      if (*(uint64_t *)((char *)v7 + *(int *)(v76 + 36)) != *(uint64_t *)((char *)v5 + *(int *)(v76 + 36))) {
        goto LABEL_10;
      }
      uint64_t v59 = (uint64_t)v7 + *(int *)(v76 + 40);
      uint64_t v60 = v82;
      sub_22EADAD08(v59, (uint64_t)v82, &qword_26861BB58);
      uint64_t v61 = v81;
      sub_22EADAD08((uint64_t)v5 + *(int *)(v58 + 40), (uint64_t)v81, &qword_26861BB58);
      uint64_t v62 = v83;
      uint64_t v63 = v83 + *(int *)(v49 + 48);
      sub_22EADAD08((uint64_t)v60, v83, &qword_26861BB58);
      uint64_t v64 = OUTLINED_FUNCTION_15_15();
      sub_22EADAD08(v64, v65, &qword_26861BB58);
      uint64_t v66 = v84;
      OUTLINED_FUNCTION_7_0(v62, 1, v84);
      if (v35)
      {
        sub_22EADAC74((uint64_t)v61, &qword_26861BB58);
        sub_22EADAC74((uint64_t)v60, &qword_26861BB58);
        OUTLINED_FUNCTION_7_0(v63, 1, v66);
        if (v35)
        {
          sub_22EADAC74(v62, &qword_26861BB58);
          goto LABEL_10;
        }
      }
      else
      {
        uint64_t v67 = v80;
        sub_22EADAD08(v62, (uint64_t)v80, &qword_26861BB58);
        OUTLINED_FUNCTION_7_0(v63, 1, v66);
        if (!v68)
        {
          uint64_t v71 = v79;
          OUTLINED_FUNCTION_12_29();
          v72();
          sub_22EDE26D8((unint64_t *)&qword_26861BBA0, MEMORY[0x263F17F28]);
          sub_22EE7F900();
          uint64_t v73 = *(void (**)(void))(v71 + 8);
          OUTLINED_FUNCTION_21_24();
          v73();
          sub_22EADAC74((uint64_t)v61, &qword_26861BB58);
          sub_22EADAC74((uint64_t)v60, &qword_26861BB58);
          OUTLINED_FUNCTION_21_24();
          v73();
          sub_22EADAC74(v62, &qword_26861BB58);
          goto LABEL_10;
        }
        uint64_t v69 = OUTLINED_FUNCTION_15_15();
        sub_22EADAC74(v69, v70);
        sub_22EADAC74((uint64_t)v60, &qword_26861BB58);
        (*(void (**)(unsigned char *, uint64_t))(v79 + 8))(v67, v66);
      }
      uint64_t v53 = &qword_26861BB98;
      uint64_t v54 = v62;
      goto LABEL_41;
    }
LABEL_40:
    uint64_t v53 = &qword_268626EC0;
    uint64_t v54 = v0;
LABEL_41:
    sub_22EADAC74(v54, v53);
    goto LABEL_10;
  }
  sub_22EADAD08(v0, v2, &qword_26861E620);
  OUTLINED_FUNCTION_7_0(v46, 1, v21);
  if (v50)
  {
    OUTLINED_FUNCTION_31_13();
    OUTLINED_FUNCTION_30_13();
    uint64_t v51 = OUTLINED_FUNCTION_46_5();
    v52(v51);
    goto LABEL_40;
  }
  uint64_t v55 = v85;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v85 + 32))(v1, v46, v21);
  sub_22EDE26D8(&qword_268620B38, MEMORY[0x263F17F60]);
  int v75 = sub_22EE7F900();
  uint64_t v56 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
  v56(v1, v21);
  OUTLINED_FUNCTION_31_13();
  OUTLINED_FUNCTION_30_13();
  uint64_t v57 = OUTLINED_FUNCTION_46_5();
  ((void (*)(uint64_t))v56)(v57);
  uint64_t v49 = v77;
  sub_22EADAC74(v0, &qword_26861E620);
  if (v75) {
    goto LABEL_43;
  }
LABEL_10:
  OUTLINED_FUNCTION_5_0();
}

uint64_t sub_22EDE1C10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  char v4 = *(unsigned char *)(v1 + 16);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  return sub_22EB0E200(v2, v3, v4);
}

uint64_t sub_22EDE1C28()
{
  uint64_t v3 = OUTLINED_FUNCTION_51_3();
  uint64_t v4 = _s11PriceStringOMa(v3);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_14_0();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F8);
  uint64_t v7 = OUTLINED_FUNCTION_14(v6);
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_1_1();
  sub_22ECE556C();
  uint64_t v8 = type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0);
  sub_22EADAD08(v0 + *(int *)(v8 + 20), v2, &qword_26861C9F8);
  OUTLINED_FUNCTION_7_0(v2, 1, v4);
  if (v9) {
    return sub_22EE807D0();
  }
  sub_22EDE2678(v2, v1, (void (*)(void))_s11PriceStringOMa);
  sub_22EE807D0();
  sub_22ECE556C();
  return sub_22EDDC230();
}

void sub_22EDE1D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_6_0();
  a19 = v24;
  a20 = v25;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v30 = _s11PriceStringOMa(0);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v31);
  OUTLINED_FUNCTION_14_0();
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_268626EB8);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v33);
  OUTLINED_FUNCTION_66_1();
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F8);
  uint64_t v35 = OUTLINED_FUNCTION_14(v34);
  MEMORY[0x270FA5388](v35);
  OUTLINED_FUNCTION_84_0();
  MEMORY[0x270FA5388](v36);
  OUTLINED_FUNCTION_19_21();
  MEMORY[0x270FA5388](v37);
  uint64_t v39 = (char *)&a9 - v38;
  sub_22ECE5850();
  if (v40)
  {
    uint64_t v41 = type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0);
    sub_22EADAD08(v29 + *(int *)(v41 + 20), (uint64_t)v39, &qword_26861C9F8);
    sub_22EADAD08(v27 + *(int *)(v41 + 20), v23, &qword_26861C9F8);
    uint64_t v42 = v20 + *(int *)(v32 + 48);
    sub_22EADAD08((uint64_t)v39, v20, &qword_26861C9F8);
    uint64_t v43 = OUTLINED_FUNCTION_41_10();
    sub_22EADAD08(v43, v44, &qword_26861C9F8);
    OUTLINED_FUNCTION_7_0(v20, 1, v30);
    if (!v45)
    {
      sub_22EADAD08(v20, v22, &qword_26861C9F8);
      OUTLINED_FUNCTION_7_0(v42, 1, v30);
      if (!v45)
      {
        sub_22EDE2678(v42, v21, (void (*)(void))_s11PriceStringOMa);
        sub_22ECE5850();
        sub_22EDDC230();
        OUTLINED_FUNCTION_31_13();
        OUTLINED_FUNCTION_30_13();
        sub_22EDDC230();
        sub_22EADAC74(v20, &qword_26861C9F8);
        goto LABEL_11;
      }
      sub_22EADAC74(v23, &qword_26861C9F8);
      sub_22EADAC74((uint64_t)v39, &qword_26861C9F8);
      sub_22EDDC230();
LABEL_10:
      sub_22EADAC74(v20, &qword_268626EB8);
      goto LABEL_11;
    }
    OUTLINED_FUNCTION_31_13();
    OUTLINED_FUNCTION_30_13();
    OUTLINED_FUNCTION_7_0(v42, 1, v30);
    if (!v45) {
      goto LABEL_10;
    }
    sub_22EADAC74(v20, &qword_26861C9F8);
  }
LABEL_11:
  OUTLINED_FUNCTION_5_0();
}

uint64_t sub_22EDE2024()
{
  uint64_t v3 = _s11PriceStringOMa(0);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_66_1();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F8);
  uint64_t v6 = OUTLINED_FUNCTION_14(v5);
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_1_1();
  sub_22EE807B0();
  sub_22ECE556C();
  uint64_t v7 = type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0);
  sub_22EADAD08(v1 + *(int *)(v7 + 20), v2, &qword_26861C9F8);
  OUTLINED_FUNCTION_7_0(v2, 1, v3);
  if (v8)
  {
    sub_22EE807D0();
  }
  else
  {
    sub_22EDE2678(v2, v0, (void (*)(void))_s11PriceStringOMa);
    sub_22EE807D0();
    sub_22ECE556C();
    sub_22EDDC230();
  }
  return sub_22EE807F0();
}

#error "22EDE2304: call analysis failed (funcsize=171)"

uint64_t sub_22EDE244C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s11PriceStringOMa(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F8);
  MEMORY[0x270FA5388](v7 - 8);
  char v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22EE807B0();
  sub_22ECE556C();
  sub_22EADAD08(v2 + *(int *)(a2 + 20), (uint64_t)v9, &qword_26861C9F8);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v4) == 1)
  {
    sub_22EE807D0();
  }
  else
  {
    sub_22EDE2678((uint64_t)v9, (uint64_t)v6, (void (*)(void))_s11PriceStringOMa);
    sub_22EE807D0();
    sub_22ECE556C();
    sub_22EDDC230();
  }
  return sub_22EE807F0();
}

uint64_t sub_22EDE25D8()
{
  return sub_22EDE26D8(&qword_268626EA8, (void (*)(uint64_t))type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair);
}

uint64_t sub_22EDE2624(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_2_0();
  uint64_t v4 = OUTLINED_FUNCTION_16_0();
  v5(v4);
  return a2;
}

uint64_t sub_22EDE2678(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_2_0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_22EDE26D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22EDE2724@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22EDE13F0(a1, *(void *)(v2 + 16), *(unsigned char *)(v2 + 32), a2);
}

uint64_t sub_22EDE2748@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22EDE02B8(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_22EDE2768@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_22EDE2724(a1, a2);
}

uint64_t OUTLINED_FUNCTION_17_25()
{
  return v0;
}

void OUTLINED_FUNCTION_22_22(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 96) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_23_17()
{
  return sub_22EE7F670();
}

uint64_t OUTLINED_FUNCTION_24_16()
{
  return sub_22EE7F6E0();
}

uint64_t OUTLINED_FUNCTION_25_15()
{
  return sub_22EE7F670();
}

uint64_t OUTLINED_FUNCTION_29_16(uint64_t a1)
{
  uint64_t v5 = v1 + *(int *)(a1 + 40);
  return sub_22EADAD08(v5, v2, v3);
}

uint64_t OUTLINED_FUNCTION_30_13()
{
  return sub_22EADAC74(v1, v0);
}

uint64_t OUTLINED_FUNCTION_31_13()
{
  return sub_22EADAC74(v1, v0);
}

uint64_t OUTLINED_FUNCTION_32_13()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_33_11()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_35_14()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_36_14()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_38_12()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_41_10()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_43_7(uint64_t a1)
{
  uint64_t v5 = v1 + *(int *)(a1 + 32);
  return sub_22EADAD08(v5, v2, v3);
}

uint64_t OUTLINED_FUNCTION_46_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_49_7(void (*a1)(uint64_t))
{
  return sub_22EDDE448(a1, v1);
}

uint64_t OUTLINED_FUNCTION_50_5()
{
  return v0;
}

uint64_t sub_22EDE29D4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22EC398FC();
  *a1 = result & 1;
  return result;
}

uint64_t sub_22EDE2A04()
{
  return sub_22EC39938();
}

uint64_t sub_22EDE2A2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10 = *a3;
  uint64_t v11 = a3[1];
  char v12 = *((unsigned char *)a3 + 16);
  uint64_t v13 = (int *)type metadata accessor for StorePlaceholderView();
  uint64_t v14 = a6 + v13[12];
  *(unsigned char *)uint64_t v14 = sub_22EB4B794() & 1;
  *(void *)(v14 + 8) = v15;
  uint64_t v16 = a6 + v13[13];
  *(void *)uint64_t v16 = swift_getKeyPath();
  *(_OWORD *)(v16 + 8) = 0u;
  *(_OWORD *)(v16 + 24) = 0u;
  *(unsigned char *)(v16 + 40) = 0;
  uint64_t v17 = a6 + v13[14];
  *(void *)uint64_t v17 = swift_getKeyPath();
  *(unsigned char *)(v17 + 8) = 0;
  uint64_t v18 = a6 + v13[15];
  *(void *)uint64_t v18 = swift_getKeyPath();
  *(unsigned char *)(v18 + 8) = 0;
  uint64_t v19 = *(void *)(a5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(a6, a1, a5);
  uint64_t v20 = sub_22EDE418C(a2);
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(a1, a5);
  *(void *)(a6 + v13[9]) = v20;
  uint64_t v22 = a6 + v13[10];
  *(void *)uint64_t v22 = v10;
  *(void *)(v22 + 8) = v11;
  *(unsigned char *)(v22 + 16) = v12;
  *(unsigned char *)(a6 + v13[11]) = a4;
  return result;
}

uint64_t type metadata accessor for StorePlaceholderView()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_22EDE2BD0@<X0>(char a1@<W0>, char a2@<W1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  *(void *)(a4 + 24) = swift_getKeyPath();
  *(unsigned char *)(a4 + 32) = 0;
  *(void *)(a4 + 40) = swift_getKeyPath();
  *(_OWORD *)(a4 + 48) = 0u;
  *(_OWORD *)(a4 + 64) = 0u;
  *(unsigned char *)(a4 + 80) = 0;
  uint64_t v8 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_268626FD8);
  char v9 = (uint64_t *)(a4 + v8[13]);
  *char v9 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDE0);
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = a4 + v8[14];
  *(void *)uint64_t v10 = swift_getKeyPath();
  *(unsigned char *)(v10 + 8) = 0;
  uint64_t v11 = a4 + v8[15];
  *(void *)uint64_t v11 = swift_getKeyPath();
  *(unsigned char *)(v11 + 8) = 0;
  *(unsigned char *)a4 = a1;
  uint64_t result = a3();
  *(unsigned char *)(a4 + 16) = a2;
  return result;
}

uint64_t sub_22EDE2CD8(uint64_t a1)
{
  return sub_22EDE2CF4(a1, &qword_268626FF8, (uint64_t)&type metadata for AutomaticProductViewStyle, &qword_268627000);
}

uint64_t sub_22EDE2CF4(uint64_t a1, uint64_t *a2, uint64_t a3, unint64_t *a4)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_27_1();
  sub_22EDE5828(a1, v4, (void (*)(void))type metadata accessor for ProductViewStyleConfiguration);
  sub_22EE7DAF0();
  sub_22EADDD7C(a4, a2);
  return sub_22EE7EB20();
}

uint64_t sub_22EDE2DD0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22EC398FC();
  *a1 = result & 1;
  return result;
}

uint64_t sub_22EDE2E00()
{
  return sub_22EC39938();
}

uint64_t sub_22EDE2E30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](a1);
  char v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Product.TaskState(0);
  MEMORY[0x270FA5388](v10 - 8);
  char v12 = (uint64_t *)((char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = *(void *)(a1 + 24);
  sub_22EDE2FD4(v3, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v3, v6);
  LODWORD(v7) = *(unsigned __int8 *)(v3 + *(int *)(a1 + 44));
  uint64_t v14 = v3 + *(int *)(a1 + 60);
  uint64_t v15 = *(void *)v14;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 8);
  sub_22EADDF00(*(void *)v14, *(unsigned char *)(v14 + 8));
  sub_22EB173DC();
  int v18 = v17;
  sub_22EB19E28(v15, v16);
  return sub_22EE25608(0, (uint64_t)v12, 0, (uint64_t)v9, v7, v18, v6, a2, v13);
}

id sub_22EDE2FD4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for SKLogger();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1 + *(int *)(type metadata accessor for StorePlaceholderView() + 40);
  if (*(unsigned char *)(v7 + 16))
  {
    if (*(unsigned char *)(v7 + 16) == 1)
    {
      if (qword_26861B778 != -1) {
        swift_once();
      }
      uint64_t v8 = __swift_project_value_buffer(v4, (uint64_t)qword_26864C398);
      sub_22EDE5828(v8, (uint64_t)v6, (void (*)(void))type metadata accessor for SKLogger);
      os_log_type_t v9 = sub_22EE7FFD0();
      uint64_t v10 = sub_22EE7C550();
      os_log_type_t v11 = v9;
      if (os_log_type_enabled(v10, v9))
      {
        uint64_t v12 = swift_slowAlloc();
        uint64_t v13 = swift_slowAlloc();
        uint64_t v17 = v13;
        *(_DWORD *)uint64_t v12 = 136446466;
        uint64_t v16 = sub_22EC1FA24(0, 0xE000000000000000, &v17);
        sub_22EE800B0();
        *(_WORD *)(v12 + 12) = 2082;
        uint64_t v16 = sub_22EC1FA24(0xD00000000000002FLL, 0x800000022EE85B10, &v17);
        sub_22EE800B0();
        _os_log_impl(&dword_22EAC6000, v10, v11, "%{public}s%{public}s", (uint8_t *)v12, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x230FAE500](v13, -1, -1);
        MEMORY[0x230FAE500](v12, -1, -1);
      }

      sub_22EDE5A70((uint64_t)v6, (void (*)(void))type metadata accessor for SKLogger);
      type metadata accessor for Product.TaskState(0);
      return (id)swift_storeEnumTagMultiPayload();
    }
    else
    {
      type metadata accessor for Product.TaskState(0);
      return (id)swift_storeEnumTagMultiPayload();
    }
  }
  else
  {
    uint64_t v15 = *(void **)v7;
    *a2 = *(void *)v7;
    type metadata accessor for Product.TaskState(0);
    swift_storeEnumTagMultiPayload();
    return v15;
  }
}

uint64_t sub_22EDE32DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2;
  uint64_t v89 = a2;
  uint64_t v84 = a1;
  uint64_t v5 = a1 - 8;
  uint64_t v82 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v79 = v6;
  OUTLINED_FUNCTION_6_4((uint64_t)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_268626F58);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_18_0();
  uint64_t v76 = v8;
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_6_4((uint64_t)&v70 - v10);
  uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_268626F60);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_18_0();
  uint64_t v80 = v12;
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_6_4((uint64_t)&v70 - v14);
  uint64_t v15 = type metadata accessor for ProductViewStyleConfiguration();
  MEMORY[0x270FA5388](v15 - 8);
  OUTLINED_FUNCTION_11_0();
  uint64_t v18 = v17 - v16;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_268624A38);
  MEMORY[0x270FA5388](v19 - 8);
  OUTLINED_FUNCTION_27_1();
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BD58);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v21);
  OUTLINED_FUNCTION_11_0();
  uint64_t v24 = v23 - v22;
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BD60);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (char *)&v70 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v30 = (char *)&v70 - v29;
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_268626F68);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v31);
  OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_6_4(v32);
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_268626F70);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v33);
  OUTLINED_FUNCTION_11_0();
  uint64_t v36 = v35 - v34;
  uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_268626F78);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v37);
  OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_6_4(v38);
  uint64_t v39 = *(void *)(*(void *)(v4 + *(int *)(v5 + 44)) + 16);
  if (v39 == 1)
  {
    uint64_t v71 = v20;
    uint64_t v72 = v27;
    uint64_t v43 = (long long *)(v4 + *(int *)(v84 + 52));
    long long v44 = v43[1];
    long long v93 = *v43;
    v94[0] = v44;
    *(_OWORD *)((char *)v94 + 9) = *(long long *)((char *)v43 + 25);
    sub_22EAEFC48((uint64_t)&v93, (uint64_t)v95, &qword_26861D578);
    sub_22EB37064((uint64_t)v95, (void (*)(void, void, void, void, void, void))sub_22EB336F8);
    sub_22EB17230();
    sub_22EB37064((uint64_t)&v93, (void (*)(void, void, void, void, void, void))sub_22EB19A34);
    char v45 = v90;
    swift_release();
    uint64_t v92 = v91;
    sub_22EB051FC((uint64_t)&v92);
    if (v45 == &type metadata for AutomaticProductViewStyle)
    {
      sub_22EDE2E30(v84, v18);
      ProductView.init<>(_:)();
      unint64_t v62 = sub_22ED1B59C();
      uint64_t v63 = swift_allocObject();
      *(_OWORD *)(v63 + 16) = 0u;
      *(_OWORD *)(v63 + 32) = 0u;
      *(void *)(v63 + 48) = 0;
      sub_22EADAD08(v3, v24, &qword_268624A38);
      uint64_t v64 = (uint64_t (**)(uint64_t))(v24 + *(int *)(v71 + 36));
      *uint64_t v64 = sub_22EDE57B0;
      v64[1] = 0;
      v64[2] = (uint64_t (*)(uint64_t))&type metadata for LargeProductViewStyle;
      v64[3] = (uint64_t (*)(uint64_t))v62;
      v64[4] = (uint64_t (*)(uint64_t))v63;
      sub_22EADAC74(v3, &qword_268624A38);
      uint64_t v65 = sub_22EE7ED70();
      uint64_t v66 = (uint64_t)v72;
      sub_22EADC3C4(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, 1, 0x7FF0000000000000, 0, v65, v67);
      sub_22EADAC74(v24, &qword_26861BD58);
      uint64_t v41 = &qword_26861BD60;
      sub_22EAEFC48(v66, (uint64_t)v30, &qword_26861BD60);
      sub_22EADAD08((uint64_t)v30, v36, &qword_26861BD60);
      swift_storeEnumTagMultiPayload();
      sub_22EDE5584();
      uint64_t v68 = v74;
      sub_22EE7D800();
      sub_22EADAD08(v68, v85, &qword_268626F78);
      swift_storeEnumTagMultiPayload();
      sub_22EDE5508();
      sub_22EDE56EC();
      sub_22EE7D800();
      sub_22EADAC74(v68, &qword_268626F78);
      uint64_t v42 = (uint64_t)v30;
      return sub_22EADAC74(v42, v41);
    }
    goto LABEL_5;
  }
  if (v39)
  {
LABEL_5:
    uint64_t v46 = v76;
    uint64_t v47 = v76 + *(int *)(v77 + 36);
    *(void *)uint64_t v47 = swift_getKeyPath();
    *(_OWORD *)(v47 + 8) = 0u;
    *(_OWORD *)(v47 + 24) = 0u;
    *(unsigned char *)(v47 + 40) = 0;
    uint64_t v48 = v84;
    uint64_t v49 = *(void *)(v84 + 16);
    uint64_t v50 = *(void *)(v84 + 24);
    uint64_t v51 = v4;
    sub_22EDE3BC0(v4, v49, v50, v46);
    uint64_t v52 = v81;
    sub_22EAEFC48(v46, v81, &qword_268626F58);
    uint64_t v53 = v82;
    uint64_t v54 = v78;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v82 + 16))(v78, v51, v48);
    unint64_t v55 = (*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
    uint64_t v56 = swift_allocObject();
    *(void *)(v56 + 16) = v49;
    *(void *)(v56 + 24) = v50;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v53 + 32))(v56 + v55, v54, v48);
    uint64_t v57 = swift_allocObject();
    *(void *)(v57 + 16) = sub_22EDE545C;
    *(void *)(v57 + 24) = v56;
    uint64_t v58 = v80;
    sub_22EADAD08(v52, v80, &qword_268626F58);
    uint64_t v59 = (void *)(v58 + *(int *)(v88 + 36));
    void *v59 = sub_22EDE5500;
    v59[1] = v57;
    sub_22EADAC74(v52, &qword_268626F58);
    uint64_t v41 = &qword_268626F60;
    uint64_t v60 = v58;
    uint64_t v61 = v83;
    sub_22EAEFC48(v60, v83, &qword_268626F60);
    sub_22EADAD08(v61, v85, &qword_268626F60);
    swift_storeEnumTagMultiPayload();
    sub_22EDE5508();
    sub_22EDE56EC();
    sub_22EE7D800();
    uint64_t v42 = v61;
    return sub_22EADAC74(v42, v41);
  }
  swift_storeEnumTagMultiPayload();
  sub_22EDE5584();
  uint64_t v40 = v74;
  sub_22EE7D800();
  uint64_t v41 = &qword_268626F78;
  sub_22EADAD08(v40, v85, &qword_268626F78);
  swift_storeEnumTagMultiPayload();
  sub_22EDE5508();
  sub_22EDE56EC();
  sub_22EE7D800();
  uint64_t v42 = v40;
  return sub_22EADAC74(v42, v41);
}

uint64_t sub_22EDE3BC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v28 = a4;
  uint64_t v7 = type metadata accessor for StorePlaceholderView();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v25 - v9;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_268626FC8);
  uint64_t v11 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(int *)(v7 + 36);
  uint64_t v26 = a1;
  uint64_t v29 = *(void *)(a1 + v14);
  v25[1] = swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  unint64_t v15 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a2;
  *(void *)(v16 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v16 + v15, v10, v7);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268626FD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268626FD8);
  sub_22EADDD7C(&qword_268626FE0, &qword_268626FD0);
  sub_22EADDD7C(&qword_268626FE8, &qword_268626FD8);
  sub_22EE7EBE0();
  uint64_t v17 = (char *)(v26 + *(int *)(v7 + 48));
  char v18 = *v17;
  uint64_t v19 = *((void *)v17 + 1);
  LOBYTE(v29) = v18;
  uint64_t v30 = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861D440);
  sub_22EE7E9E0();
  LOBYTE(v15) = v31;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v22 = v27;
  uint64_t v21 = v28;
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 16))(v28, v13, v27);
  uint64_t v23 = v21 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268626FF0) + 36);
  *(void *)uint64_t v23 = KeyPath;
  *(unsigned char *)(v23 + 8) = v15;
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v22);
}

uint64_t sub_22EDE3EEC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for StorePlaceholderView();
  return sub_22EDE2BD0(*a1 != *(void *)(*(void *)(a2 + *(int *)(v6 + 36)) + 16) - 1, *(unsigned char *)(a2 + *(int *)(v6 + 44)), (uint64_t (*)(void))sub_22EDE5A54, a3);
}

uint64_t sub_22EDE3F94@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ProductViewStyleConfiguration();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StorePlaceholderView();
  uint64_t v8 = (long long *)(a1 + *(int *)(v7 + 52));
  long long v9 = v8[1];
  long long v14 = *v8;
  v15[0] = v9;
  *(_OWORD *)((char *)v15 + 9) = *(long long *)((char *)v8 + 25);
  sub_22EAEFC48((uint64_t)&v14, (uint64_t)v16, &qword_26861D578);
  sub_22EB37064((uint64_t)v16, (void (*)(void, void, void, void, void, void))sub_22EB336F8);
  sub_22EB17230();
  sub_22EB37064((uint64_t)&v14, (void (*)(void, void, void, void, void, void))sub_22EB19A34);
  sub_22EDE2E30(v7, (uint64_t)v6);
  uint64_t v10 = ((uint64_t (*)(char *))v12[0])(v6);
  swift_release();
  uint64_t v13 = v12[4];
  sub_22EB051FC((uint64_t)&v13);
  uint64_t result = sub_22EDE5A70((uint64_t)v6, (void (*)(void))type metadata accessor for ProductViewStyleConfiguration);
  *a2 = v10;
  return result;
}

uint64_t sub_22EDE40FC()
{
  return sub_22EE7E9F0();
}

uint64_t sub_22EDE418C(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  uint64_t v2 = (void *)MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    uint64_t v5 = v2 + 4;
    uint64_t v6 = (uint64_t *)(result + 40);
    while (1)
    {
      uint64_t v7 = *(v6 - 1);
      uint64_t v8 = *v6;
      if (v3)
      {
        uint64_t result = swift_bridgeObjectRetain();
      }
      else
      {
        unint64_t v9 = v2[3];
        if ((uint64_t)((v9 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_28;
        }
        int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
        uint64_t v11 = v10 <= 1 ? 1 : v10;
        __swift_instantiateConcreteTypeFromMangledName(qword_268626EC8);
        uint64_t v12 = (void *)swift_allocObject();
        uint64_t v13 = (uint64_t)(_swift_stdlib_malloc_size_2(v12) - 32) / 24;
        v12[2] = v11;
        v12[3] = 2 * v13;
        long long v14 = v12 + 4;
        uint64_t v15 = v2[3] >> 1;
        uint64_t v5 = &v12[3 * v15 + 4];
        uint64_t v3 = (v13 & 0x7FFFFFFFFFFFFFFFLL) - v15;
        if (v2[2])
        {
          if (v12 != v2 || v14 >= &v2[3 * v15 + 4]) {
            memmove(v14, v2 + 4, 24 * v15);
          }
          swift_bridgeObjectRetain();
          v2[2] = 0;
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        uint64_t result = swift_release();
        uint64_t v2 = v12;
      }
      BOOL v17 = __OFSUB__(v3--, 1);
      if (v17) {
        break;
      }
      v6 += 2;
      *uint64_t v5 = v4;
      v5[1] = v7;
      v5[2] = v8;
      v5 += 3;
      if (v1 == ++v4)
      {
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v3 = 0;
LABEL_23:
  unint64_t v18 = v2[3];
  if (v18 < 2) {
    return (uint64_t)v2;
  }
  unint64_t v19 = v18 >> 1;
  BOOL v17 = __OFSUB__(v19, v3);
  uint64_t v20 = v19 - v3;
  if (!v17)
  {
    v2[2] = v20;
    return (uint64_t)v2;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_22EDE432C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_22EDE43FC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 25) & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8)
     + 9 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    int64_t v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *int64_t v10 = *v11;
    unint64_t v12 = ((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v13 = ((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8;
    long long v14 = *(void **)v13;
    uint64_t v15 = *(void *)(v13 + 8);
    char v16 = *(unsigned char *)(v13 + 16);
    swift_bridgeObjectRetain();
    sub_22EBCBE8C(v14, v15, v16);
    *(void *)unint64_t v12 = v14;
    *(void *)(v12 + 8) = v15;
    *(unsigned char *)(v12 + 16) = v16;
    *(unsigned char *)(v12 + 17) = *(unsigned char *)(v13 + 17);
    unint64_t v17 = (v12 + 25) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v18 = (v13 + 25) & 0xFFFFFFFFFFFFFFF8;
    *(unsigned char *)unint64_t v17 = *(unsigned char *)v18;
    *(void *)(v17 + 8) = *(void *)(v18 + 8);
    unint64_t v19 = (v17 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v20 = (v18 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v21 = *(void *)v20;
    uint64_t v22 = *(void *)(v20 + 8);
    uint64_t v23 = *(void *)(v20 + 16);
    uint64_t v24 = *(void *)(v20 + 24);
    uint64_t v25 = *(void *)(v20 + 32);
    char v26 = *(unsigned char *)(v20 + 40);
    swift_retain();
    sub_22EB336F8(v21, v22, v23, v24, v25, v26);
    *(void *)unint64_t v19 = v21;
    *(void *)(v19 + 8) = v22;
    *(void *)(v19 + 16) = v23;
    *(void *)(v19 + 24) = v24;
    *(void *)(v19 + 32) = v25;
    *(unsigned char *)(v19 + 40) = v26;
    unint64_t v27 = (v17 + 71) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v28 = (v18 + 71) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v29 = *(void *)v28;
    LOBYTE(v22) = *(unsigned char *)(v28 + 8);
    sub_22EADDF00(*(void *)v28, v22);
    *(void *)unint64_t v27 = v29;
    *(unsigned char *)(v27 + 8) = v22;
    unint64_t v30 = (v17 + 87) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v31 = (v18 + 87) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v32 = *(void *)v31;
    LOBYTE(v22) = *(unsigned char *)(v31 + 8);
    sub_22EADDF00(*(void *)v31, v22);
    *(void *)unint64_t v30 = v32;
    *(unsigned char *)(v30 + 8) = v22;
  }
  return v4;
}

double sub_22EDE4620(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  unint64_t v4 = ((a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_bridgeObjectRelease();
  v4 &= 0xFFFFFFFFFFFFFFF8;
  sub_22EBCBEF8(*(void **)v4, *(void *)(v4 + 8), *(unsigned char *)(v4 + 16));
  unint64_t v5 = (v4 + 25) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  unint64_t v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  sub_22EB19A34(*(void *)v6, *(void *)(v6 + 8), *(void *)(v6 + 16), *(void *)(v6 + 24), *(void *)(v6 + 32), *(unsigned char *)(v6 + 40));
  sub_22EB19E28(*(void *)((v5 + 71) & 0xFFFFFFFFFFFFFFF8), *(unsigned __int8 *)(((v5 + 71) & 0xFFFFFFFFFFFFFFF8) + 8));
  unint64_t v7 = (v5 + 87) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)v7;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 8);

  *(void *)&double result = sub_22EB19E28(v8, v9).n128_u64[0];
  return result;
}

uint64_t sub_22EDE46F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v7 = *v8;
  unint64_t v9 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void **)v10;
  uint64_t v12 = *(void *)(v10 + 8);
  char v13 = *(unsigned char *)(v10 + 16);
  swift_bridgeObjectRetain();
  sub_22EBCBE8C(v11, v12, v13);
  *(void *)unint64_t v9 = v11;
  *(void *)(v9 + 8) = v12;
  *(unsigned char *)(v9 + 16) = v13;
  *(unsigned char *)(v9 + 17) = *(unsigned char *)(v10 + 17);
  unint64_t v14 = (v9 + 25) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (v10 + 25) & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)unint64_t v14 = *(unsigned char *)v15;
  *(void *)(v14 + 8) = *(void *)(v15 + 8);
  unint64_t v16 = (v14 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = (v15 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = *(void *)v17;
  uint64_t v19 = *(void *)(v17 + 8);
  uint64_t v20 = *(void *)(v17 + 16);
  uint64_t v21 = *(void *)(v17 + 24);
  uint64_t v22 = *(void *)(v17 + 32);
  char v23 = *(unsigned char *)(v17 + 40);
  swift_retain();
  sub_22EB336F8(v18, v19, v20, v21, v22, v23);
  *(void *)unint64_t v16 = v18;
  *(void *)(v16 + 8) = v19;
  *(void *)(v16 + 16) = v20;
  *(void *)(v16 + 24) = v21;
  *(void *)(v16 + 32) = v22;
  *(unsigned char *)(v16 + 40) = v23;
  unint64_t v24 = (v14 + 71) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (v15 + 71) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v26 = *(void *)v25;
  LOBYTE(v19) = *(unsigned char *)(v25 + 8);
  sub_22EADDF00(*(void *)v25, v19);
  *(void *)unint64_t v24 = v26;
  *(unsigned char *)(v24 + 8) = v19;
  unint64_t v27 = (v14 + 87) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v28 = (v15 + 87) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v29 = *(void *)v28;
  LOBYTE(v19) = *(unsigned char *)(v28 + 8);
  sub_22EADDF00(*(void *)v28, v19);
  *(void *)unint64_t v27 = v29;
  *(unsigned char *)(v27 + 8) = v19;
  return a1;
}

uint64_t sub_22EDE4884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  unint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 15;
  *unint64_t v7 = *(void *)(v8 & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v10 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = *(void **)(v9 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = *(void *)((v9 & 0xFFFFFFFFFFFFFFF8) + 8);
  LOBYTE(v9) = *(unsigned char *)((v9 & 0xFFFFFFFFFFFFFFF8) + 16);
  sub_22EBCBE8C(v12, v13, v9);
  unint64_t v14 = *(void **)v10;
  uint64_t v15 = *(void *)(v10 + 8);
  *(void *)unint64_t v10 = v12;
  *(void *)(v10 + 8) = v13;
  char v16 = *(unsigned char *)(v10 + 16);
  *(unsigned char *)(v10 + 16) = v9;
  sub_22EBCBEF8(v14, v15, v16);
  *(unsigned char *)(v10 + 17) = *(unsigned char *)(v11 + 17);
  unint64_t v17 = (v10 + 25) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (v11 + 25) & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)unint64_t v17 = *(unsigned char *)v18;
  *(void *)(v17 + 8) = *(void *)(v18 + 8);
  swift_retain();
  swift_release();
  unint64_t v19 = (v17 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = (v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = *(void *)v20;
  uint64_t v22 = *(void *)(v20 + 8);
  uint64_t v23 = *(void *)(v20 + 16);
  uint64_t v24 = *(void *)(v20 + 24);
  uint64_t v25 = *(void *)(v20 + 32);
  char v26 = *(unsigned char *)(v20 + 40);
  sub_22EB336F8(*(void *)v20, v22, v23, v24, v25, v26);
  uint64_t v27 = *(void *)v19;
  uint64_t v28 = *(void *)(v19 + 8);
  uint64_t v29 = *(void *)(v19 + 16);
  uint64_t v30 = *(void *)(v19 + 24);
  uint64_t v31 = *(void *)(v19 + 32);
  char v32 = *(unsigned char *)(v19 + 40);
  *(void *)unint64_t v19 = v21;
  *(void *)(v19 + 8) = v22;
  *(void *)(v19 + 16) = v23;
  *(void *)(v19 + 24) = v24;
  *(void *)(v19 + 32) = v25;
  *(unsigned char *)(v19 + 40) = v26;
  sub_22EB19A34(v27, v28, v29, v30, v31, v32);
  unint64_t v33 = (v17 + 71) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v18 + 71) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v35 = *(void *)v34;
  LOBYTE(v22) = *(unsigned char *)(v34 + 8);
  sub_22EADDF00(*(void *)v34, v22);
  uint64_t v36 = *(void *)v33;
  uint64_t v37 = *(unsigned __int8 *)(v33 + 8);
  *(void *)unint64_t v33 = v35;
  *(unsigned char *)(v33 + 8) = v22;
  sub_22EB19E28(v36, v37);
  unint64_t v38 = (v17 + 87) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v39 = (v18 + 87) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v40 = *(void *)v39;
  LOBYTE(v22) = *(unsigned char *)(v39 + 8);
  sub_22EADDF00(*(void *)v39, v22);
  uint64_t v41 = *(void *)v38;
  uint64_t v42 = *(unsigned __int8 *)(v38 + 8);
  *(void *)unint64_t v38 = v40;
  *(unsigned char *)(v38 + 8) = v22;
  sub_22EB19E28(v41, v42);
  return a1;
}

uint64_t sub_22EDE4A64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v7 = *v8;
  unint64_t v9 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  char v11 = *(unsigned char *)(v10 + 16);
  *(_OWORD *)unint64_t v9 = *(_OWORD *)v10;
  *(unsigned char *)(v9 + 16) = v11;
  *(unsigned char *)(v9 + 17) = *(unsigned char *)(v10 + 17);
  uint64_t v12 = (_OWORD *)((v9 + 25) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (_OWORD *)((v10 + 25) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v12 = *v13;
  unint64_t v14 = (_OWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = (long long *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  long long v17 = *v15;
  long long v16 = v15[1];
  *(_OWORD *)((char *)v14 + 25) = *(long long *)((char *)v15 + 25);
  _OWORD *v14 = v17;
  v14[1] = v16;
  unint64_t v18 = ((unint64_t)v12 + 71) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = ((unint64_t)v13 + 71) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = *(void *)v19;
  *(unsigned char *)(v18 + 8) = *(unsigned char *)(v19 + 8);
  *(void *)unint64_t v18 = v20;
  unint64_t v21 = ((unint64_t)v12 + 87) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = ((unint64_t)v13 + 87) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v18) = *(unsigned char *)(v22 + 8);
  *(void *)unint64_t v21 = *(void *)v22;
  *(unsigned char *)(v21 + 8) = v18;
  return a1;
}

uint64_t sub_22EDE4B78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v7 = *v8;
  swift_bridgeObjectRelease();
  unint64_t v9 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  char v11 = *(unsigned char *)(v10 + 16);
  uint64_t v12 = *(void **)v9;
  uint64_t v13 = *(void *)(v9 + 8);
  *(_OWORD *)unint64_t v9 = *(_OWORD *)v10;
  char v14 = *(unsigned char *)(v9 + 16);
  *(unsigned char *)(v9 + 16) = v11;
  sub_22EBCBEF8(v12, v13, v14);
  *(unsigned char *)(v9 + 17) = *(unsigned char *)(v10 + 17);
  unint64_t v15 = (v9 + 25) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v10 + 25) & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)unint64_t v15 = *(unsigned char *)v16;
  *(void *)(v15 + 8) = *(void *)(v16 + 8);
  swift_release();
  unint64_t v17 = (v16 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = *(void *)(v17 + 32);
  char v19 = *(unsigned char *)(v17 + 40);
  unint64_t v20 = (v15 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = *(void *)v20;
  uint64_t v22 = *(void *)(v20 + 8);
  uint64_t v23 = *(void *)(v20 + 16);
  uint64_t v24 = *(void *)(v20 + 24);
  uint64_t v25 = *(void *)(v20 + 32);
  char v26 = *(unsigned char *)(v20 + 40);
  long long v27 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)unint64_t v20 = *(_OWORD *)v17;
  *(_OWORD *)(v20 + 16) = v27;
  *(void *)(v20 + 32) = v18;
  *(unsigned char *)(v20 + 40) = v19;
  sub_22EB19A34(v21, v22, v23, v24, v25, v26);
  unint64_t v28 = (v15 + 71) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v29 = (v16 + 71) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v30 = *(void *)v29;
  LOBYTE(v29) = *(unsigned char *)(v29 + 8);
  uint64_t v31 = *(void *)v28;
  uint64_t v32 = *(unsigned __int8 *)(v28 + 8);
  *(void *)unint64_t v28 = v30;
  *(unsigned char *)(v28 + 8) = v29;
  sub_22EB19E28(v31, v32);
  unint64_t v33 = (v15 + 87) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v16 + 87) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v35 = *(void *)v34;
  LOBYTE(v34) = *(unsigned char *)(v34 + 8);
  uint64_t v36 = *(void *)v33;
  uint64_t v37 = *(unsigned __int8 *)(v33 + 8);
  *(void *)unint64_t v33 = v35;
  *(unsigned char *)(v33 + 8) = v34;
  sub_22EB19E28(v36, v37);
  return a1;
}

uint64_t sub_22EDE4CE4(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 25) & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8)
       + 9;
    unsigned int v9 = (a2 - v7 + 255) >> (8 * v8);
    if (v8 < 4) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      unsigned int v11 = 4;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v10 < 0x100) {
      unsigned int v11 = 1;
    }
    if (v10 >= 2) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    switch(v12)
    {
      case 1:
        int v13 = a1[v8];
        if (!a1[v8]) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v13 = *(unsigned __int16 *)&a1[v8];
        if (*(_WORD *)&a1[v8]) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x22EDE4E54);
      case 4:
        int v13 = *(_DWORD *)&a1[v8];
        if (!v13) {
          break;
        }
LABEL_22:
        int v15 = (v13 - 1) << (8 * v8);
        if (v8 >= 4) {
          int v15 = 0;
        }
        if (((((((((v6 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 25) & 0xFFFFFFF8) + 87) & 0xFFFFFFF8) == 0xFFFFFFF8) {
          int v16 = *a1;
        }
        else {
          int v16 = *(_DWORD *)a1;
        }
        return v7 + (v16 | v15) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return __swift_getEnumTagSinglePayload((uint64_t)a1, v5, v4);
  }
  unint64_t v17 = *(void *)((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_22EDE4E68(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  size_t v10 = ((((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 25) & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8)
      + 9;
  char v11 = 8 * v10;
  if (v8 >= a3)
  {
    int v15 = 0;
  }
  else
  {
    unsigned int v12 = (a3 - v8 + 255) >> v11;
    if (v10 <= 3) {
      unsigned int v13 = v12 + 1;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
  }
  if (v8 < a2)
  {
    unsigned int v16 = ~v8 + a2;
    unsigned int v17 = (~(_BYTE)v8 + a2);
    if (v10 < 4) {
      int v18 = (v16 >> v11) + 1;
    }
    else {
      int v18 = 1;
    }
    if (v10 >= 4) {
      unsigned int v19 = v16;
    }
    else {
      unsigned int v19 = v17;
    }
    bzero(a1, v10);
    if (v10 == 1) {
      *a1 = v19;
    }
    else {
      *(_DWORD *)a1 = v19;
    }
    switch(v15)
    {
      case 1:
        a1[v10] = v18;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v18;
        return;
      case 3:
        goto LABEL_47;
      case 4:
        *(_DWORD *)&a1[v10] = v18;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_34;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_34;
    case 3:
LABEL_47:
      __break(1u);
      JUMPOUT(0x22EDE507CLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_33;
    default:
LABEL_33:
      if (a2)
      {
LABEL_34:
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v20 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0) {
            uint64_t v21 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v21 = (a2 - 1);
          }
          *unint64_t v20 = v21;
        }
        else
        {
          __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v7, v6);
        }
      }
      return;
  }
}

uint64_t sub_22EDE50A4()
{
  return swift_getOpaqueTypeConformance2();
}

size_t sub_22EDE50E8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686247F8);
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_18_0();
  uint64_t v52 = v3;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (void *)((char *)v41 - v5);
  MEMORY[0x270FA5388](v7);
  long long v44 = (char *)v41 - v8;
  uint64_t v53 = v9;
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  unsigned int v12 = (void *)MEMORY[0x263F8EE78];
  uint64_t v51 = v11;
  v41[1] = a1;
  if (v11)
  {
    uint64_t v45 = (v10 + 32) & ~v10;
    uint64_t v13 = MEMORY[0x263F8EE78] + v45;
    uint64_t v14 = 0;
    uint64_t v11 = 0;
    uint64_t v50 = sub_22EE7F780();
    OUTLINED_FUNCTION_2_0();
    unsigned int v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
    uint64_t v48 = v15 + 16;
    uint64_t v49 = v16;
    uint64_t v17 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    uint64_t v46 = *(void *)(v15 + 72);
    uint64_t v47 = (void (**)(char *, uint64_t, uint64_t))(v15 + 32);
    uint64_t v42 = v6;
    uint64_t v43 = v10 | 7;
    int v18 = v12;
    uint64_t v19 = (uint64_t)v44;
    while (1)
    {
      uint64_t v20 = v52 + *(int *)(v2 + 48);
      uint64_t v21 = v50;
      v49(v20, v17, v50);
      uint64_t v22 = (char *)v6 + *(int *)(v2 + 48);
      *uint64_t v6 = v14;
      (*v47)(v22, v20, v21);
      size_t result = sub_22EAEFC48((uint64_t)v6, v19, &qword_2686247F8);
      if (v11)
      {
        unsigned int v12 = v18;
      }
      else
      {
        unint64_t v24 = v18[3];
        if ((uint64_t)((v24 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_32;
        }
        uint64_t v25 = v2;
        int64_t v26 = v24 & 0xFFFFFFFFFFFFFFFELL;
        if (v26 <= 1) {
          uint64_t v27 = 1;
        }
        else {
          uint64_t v27 = v26;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_268626F50);
        uint64_t v28 = *(void *)(v53 + 72);
        uint64_t v29 = v45;
        unsigned int v12 = (void *)swift_allocObject();
        size_t result = _swift_stdlib_malloc_size_2(v12);
        if (!v28) {
          goto LABEL_33;
        }
        int64_t v30 = result - v29;
        if (result - v29 == 0x8000000000000000 && v28 == -1) {
          goto LABEL_34;
        }
        uint64_t v32 = v30 / v28;
        v12[2] = v27;
        v12[3] = 2 * (v30 / v28);
        unint64_t v33 = (char *)v12 + v29;
        unint64_t v34 = v18[3];
        uint64_t v35 = (v34 >> 1) * v28;
        if (v18[2])
        {
          if (v12 < v18 || v33 >= (char *)v18 + v45 + v35)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v12 != v18)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          void v18[2] = 0;
        }
        uint64_t v13 = (uint64_t)&v33[v35];
        uint64_t v11 = (v32 & 0x7FFFFFFFFFFFFFFFLL) - (v34 >> 1);
        size_t result = swift_release();
        uint64_t v2 = v25;
        uint64_t v6 = v42;
        uint64_t v19 = (uint64_t)v44;
      }
      BOOL v37 = __OFSUB__(v11--, 1);
      if (v37) {
        break;
      }
      ++v14;
      sub_22EAEFC48(v19, v13, &qword_2686247F8);
      v13 += *(void *)(v53 + 72);
      v17 += v46;
      int v18 = v12;
      if (v51 == v14) {
        goto LABEL_27;
      }
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
LABEL_27:
  size_t result = swift_bridgeObjectRelease();
  unint64_t v38 = v12[3];
  if (v38 < 2) {
    return (size_t)v12;
  }
  unint64_t v39 = v38 >> 1;
  BOOL v37 = __OFSUB__(v39, v11);
  unint64_t v40 = v39 - v11;
  if (!v37)
  {
    v12[2] = v40;
    return (size_t)v12;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_22EDE545C()
{
  uint64_t v0 = type metadata accessor for StorePlaceholderView();
  OUTLINED_FUNCTION_4_1(v0);

  return sub_22EDE40FC();
}

uint64_t sub_22EDE54C8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_22EDE5500(void *a1)
{
  return sub_22EC3A4E4(a1, *(uint64_t (**)(void))(v1 + 16));
}

unint64_t sub_22EDE5508()
{
  unint64_t result = qword_268626F80;
  if (!qword_268626F80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268626F78);
    sub_22EDE5584();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268626F80);
  }
  return result;
}

unint64_t sub_22EDE5584()
{
  unint64_t result = qword_268626F88;
  if (!qword_268626F88)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861BD60);
    sub_22EDE5600();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268626F88);
  }
  return result;
}

unint64_t sub_22EDE5600()
{
  unint64_t result = qword_268626F90;
  if (!qword_268626F90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861BD58);
    sub_22EADDD7C(&qword_268626F98, &qword_268624A38);
    sub_22EDE56A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268626F90);
  }
  return result;
}

unint64_t sub_22EDE56A0()
{
  unint64_t result = qword_268626FA0;
  if (!qword_268626FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268626FA0);
  }
  return result;
}

unint64_t sub_22EDE56EC()
{
  unint64_t result = qword_268626FA8;
  if (!qword_268626FA8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268626F60);
    sub_22EADDD7C(&qword_268626FB0, &qword_268626F58);
    sub_22EADDD7C(&qword_2686247F0, &qword_2686247E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268626FA8);
  }
  return result;
}

uint64_t sub_22EDE57B0(uint64_t a1)
{
  return sub_22EDE2CF4(a1, &qword_268626FB8, (uint64_t)&type metadata for LargeProductViewStyle, &qword_268626FC0);
}

uint64_t sub_22EDE57E0()
{
  if (*(void *)(v0 + 16))
  {
    swift_release();
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_22EDE5828(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_2_0();
  uint64_t v4 = OUTLINED_FUNCTION_16_0();
  v5(v4);
  return a2;
}

uint64_t objectdestroyTm_13()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int *)(type metadata accessor for StorePlaceholderView() - 8);
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80));
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3, v1);
  swift_bridgeObjectRelease();
  sub_22EBCBEF8(*(void **)(v3 + v2[12]), *(void *)(v3 + v2[12] + 8), *(unsigned char *)(v3 + v2[12] + 16));
  swift_release();
  uint64_t v4 = v3 + v2[15];
  sub_22EB19A34(*(void *)v4, *(void *)(v4 + 8), *(void *)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(unsigned char *)(v4 + 40));
  sub_22EB19E28(*(void *)(v3 + v2[16]), *(unsigned __int8 *)(v3 + v2[16] + 8));
  sub_22EB19E28(*(void *)(v3 + v2[17]), *(unsigned __int8 *)(v3 + v2[17] + 8));

  return swift_deallocObject();
}

uint64_t sub_22EDE59D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for StorePlaceholderView();
  OUTLINED_FUNCTION_4_1(v5);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_22EDE3EEC(a1, v7, a2);
}

uint64_t sub_22EDE5A54@<X0>(uint64_t *a1@<X8>)
{
  return sub_22EDE3F94(*(void *)(v1 + 32), a1);
}

uint64_t sub_22EDE5A70(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_2_0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

unint64_t sub_22EDE5ACC()
{
  unint64_t result = qword_268627008;
  if (!qword_268627008)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268627010);
    sub_22EDE5508();
    sub_22EDE56EC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627008);
  }
  return result;
}

uint64_t sub_22EDE5B48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_22EE7D590();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v4 = (int *)type metadata accessor for SubscriptionOptionButtonModel();
  uint64_t v5 = v1 + v4[7];
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 < 2) {
    goto LABEL_7;
  }
  if (v6 == 2)
  {
    if ((*(unsigned char *)(v1 + v4[5]) & 1) == 0 && *(unsigned char *)(v1 + v4[6]) != 1)
    {
      sub_22EDDEEFC();
LABEL_19:
      OUTLINED_FUNCTION_1_33(v10, v11, v12, v13);
      return swift_storeEnumTagMultiPayload();
    }
LABEL_7:
    uint64_t v8 = *(void *)(v1 + *(int *)(type metadata accessor for SubscriptionStoreCopyWriter(0) + 36));
    if ((v8 & 8) != 0)
    {
      sub_22EE7D580();
      sub_22EE7D570();
      sub_22EE7D560();
      sub_22EE7D570();
      uint64_t v10 = sub_22EE7D5B0();
    }
    else
    {
      uint64_t v9 = unk_26E26ACF0;
      if ((unk_26E26ACF0 & ~qword_26E26ACE8) == 0) {
        uint64_t v9 = 0;
      }
      if (((v9 | qword_26E26ACE8) & v8) != 0)
      {
        uint64_t v10 = sub_22ED92080();
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v10 = sub_22EE7D5A0();
      }
    }
    goto LABEL_19;
  }
  if (v6 == 3)
  {
    sub_22EDDF34C();
    type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0);
    sub_22EDDF34C();
    uint64_t v7 = _s11PriceStringOMa(0);
    OUTLINED_FUNCTION_3_31(v7);
  }
  else
  {
    uint64_t v14 = *(void *)(v5 + 32);
    char v15 = *(unsigned char *)(v5 + 24);
    uint64_t v16 = *(void *)(v5 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v17 = OUTLINED_FUNCTION_2_9();
    sub_22EB19C18(v17, v18);
    uint64_t v19 = OUTLINED_FUNCTION_2_9();
    sub_22EB19D6C(v19, v20);
    *(void *)a1 = v16;
    *(void *)(a1 + 8) = v6;
    *(unsigned char *)(a1 + 16) = v15 & 1;
    *(void *)(a1 + 24) = v14;
    type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(0);
  }

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_22EDE5DC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SubscriptionOptionButtonModel();
  uint64_t v4 = (void *)(v1 + *(int *)(v3 + 28));
  unint64_t v5 = v4[2];
  if (v5 < 4)
  {
    if (*(unsigned char *)(v1 + *(int *)(v3 + 20)) == 1)
    {
      uint64_t v6 = sub_22EE7D5A0();
      uint64_t v10 = OUTLINED_FUNCTION_1_33(v6, v7, v8, v9);
LABEL_10:
      swift_storeEnumTagMultiPayload();
      uint64_t v17 = a1;
      uint64_t v18 = 0;
      uint64_t v19 = v10;
LABEL_12:
      return __swift_storeEnumTagSinglePayload(v17, v18, 1, v19);
    }
    if (v5 <= 2)
    {
      sub_22EDDF34C();
      type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0);
      sub_22EDDF34C();
      uint64_t v16 = _s11PriceStringOMa(0);
      uint64_t v10 = OUTLINED_FUNCTION_3_31(v16);
      goto LABEL_10;
    }
LABEL_11:
    uint64_t v19 = type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(0);
    uint64_t v17 = a1;
    uint64_t v18 = 1;
    goto LABEL_12;
  }
  uint64_t v11 = v4[6];
  if (!v11) {
    goto LABEL_11;
  }
  uint64_t v12 = v4[7];
  uint64_t v13 = v4[8];
  *(void *)a1 = v4[5];
  *(void *)(a1 + 8) = v11;
  *(unsigned char *)(a1 + 16) = v12 & 1;
  *(void *)(a1 + 24) = v13;
  uint64_t v14 = type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(0);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload(a1, 0, 1, v14);
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for SubscriptionOptionButtonModel()
{
  uint64_t result = qword_268627018;
  if (!qword_268627018) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_22EDE5FB0(unint64_t a1, uint64_t a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v19 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    uint64_t v8 = *(void *)(a2 + 8);
    char v9 = *(unsigned char *)(a2 + 16);
    sub_22EB0E200(*(void *)a2, v8, v9);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(unsigned char *)(a1 + 16) = v9;
    uint64_t v10 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v10;
    uint64_t v11 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v11;
    uint64_t v12 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = v12;
    uint64_t v13 = (int *)type metadata accessor for SubscriptionStoreCopyWriter(0);
    uint64_t v14 = v13[8];
    char v15 = (void *)(a1 + v14);
    uint64_t v16 = (const void *)(a2 + v14);
    uint64_t v17 = sub_22EE7F6E0();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E620);
      memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v17);
    }
    *(void *)(a1 + v13[9]) = *(void *)(a2 + v13[9]);
    uint64_t v20 = v13[10];
    uint64_t v21 = (void *)(a1 + v20);
    uint64_t v22 = (const void *)(a2 + v20);
    uint64_t v23 = sub_22EE7F670();
    if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v23))
    {
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
      memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
      __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v23);
    }
    uint64_t v25 = a3[6];
    *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
    *(unsigned char *)(a1 + v25) = *(unsigned char *)(a2 + v25);
    uint64_t v26 = a3[7];
    uint64_t v27 = a1 + v26;
    uint64_t v28 = a2 + v26;
    LOBYTE(v25) = *(unsigned char *)(a2 + v26);
    uint64_t v29 = (unsigned char *)(a1 + v26);
    *uint64_t v29 = v25;
    int64_t v30 = v29 + 8;
    unint64_t v31 = *(void *)(v28 + 16);
    if (v31 >= 4)
    {
      *(void *)(v27 + 8) = *(void *)(v28 + 8);
      *(void *)(v27 + 16) = v31;
      *(unsigned char *)(v27 + 24) = *(unsigned char *)(v28 + 24);
      *(void *)(v27 + 32) = *(void *)(v28 + 32);
      uint64_t v34 = *(void *)(v28 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v34)
      {
        *(void *)(v27 + 40) = *(void *)(v28 + 40);
        *(void *)(v27 + 48) = v34;
        *(unsigned char *)(v27 + 56) = *(unsigned char *)(v28 + 56);
        *(void *)(v27 + 64) = *(void *)(v28 + 64);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v35 = *(_OWORD *)(v28 + 56);
        *(_OWORD *)(v27 + 40) = *(_OWORD *)(v28 + 40);
        *(_OWORD *)(v27 + 56) = v35;
      }
    }
    else
    {
      long long v32 = *(_OWORD *)(v28 + 24);
      _OWORD *v30 = *(_OWORD *)(v28 + 8);
      v30[1] = v32;
      long long v33 = *(_OWORD *)(v28 + 56);
      v30[2] = *(_OWORD *)(v28 + 40);
      v30[3] = v33;
    }
    *(unsigned char *)(v27 + 72) = *(unsigned char *)(v28 + 72);
  }
  return a1;
}

unint64_t sub_22EDE62BC(uint64_t a1, uint64_t a2)
{
  sub_22EADB1A4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for SubscriptionStoreCopyWriter(0);
  uint64_t v5 = a1 + *(int *)(v4 + 32);
  uint64_t v6 = sub_22EE7F6E0();
  if (!__swift_getEnumTagSinglePayload(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  uint64_t v7 = a1 + *(int *)(v4 + 40);
  uint64_t v8 = sub_22EE7F670();
  if (!__swift_getEnumTagSinglePayload(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  uint64_t v9 = a1 + *(int *)(a2 + 28);
  unint64_t result = *(void *)(v9 + 16);
  if (result >= 4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t result = *(void *)(v9 + 48);
    if (result)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_22EDE6428(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  char v8 = *(unsigned char *)(a2 + 16);
  sub_22EB0E200(*(void *)a2, v7, v8);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  uint64_t v9 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v9;
  uint64_t v10 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v10;
  uint64_t v11 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v11;
  uint64_t v12 = (int *)type metadata accessor for SubscriptionStoreCopyWriter(0);
  uint64_t v13 = v12[8];
  uint64_t v14 = (void *)(a1 + v13);
  char v15 = (const void *)(a2 + v13);
  uint64_t v16 = sub_22EE7F6E0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E620);
    memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
  }
  *(void *)(a1 + v12[9]) = *(void *)(a2 + v12[9]);
  uint64_t v18 = v12[10];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (const void *)(a2 + v18);
  uint64_t v21 = sub_22EE7F670();
  if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21))
  {
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
    memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v21);
  }
  uint64_t v23 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v23) = *(unsigned char *)(a2 + v23);
  uint64_t v24 = a3[7];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  LOBYTE(v23) = *(unsigned char *)(a2 + v24);
  uint64_t v27 = (unsigned char *)(a1 + v24);
  *uint64_t v27 = v23;
  uint64_t v28 = v27 + 8;
  unint64_t v29 = *(void *)(v26 + 16);
  if (v29 >= 4)
  {
    *(void *)(v25 + 8) = *(void *)(v26 + 8);
    *(void *)(v25 + 16) = v29;
    *(unsigned char *)(v25 + 24) = *(unsigned char *)(v26 + 24);
    *(void *)(v25 + 32) = *(void *)(v26 + 32);
    uint64_t v32 = *(void *)(v26 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v32)
    {
      *(void *)(v25 + 40) = *(void *)(v26 + 40);
      *(void *)(v25 + 48) = v32;
      *(unsigned char *)(v25 + 56) = *(unsigned char *)(v26 + 56);
      *(void *)(v25 + 64) = *(void *)(v26 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v33 = *(_OWORD *)(v26 + 56);
      *(_OWORD *)(v25 + 40) = *(_OWORD *)(v26 + 40);
      *(_OWORD *)(v25 + 56) = v33;
    }
  }
  else
  {
    long long v30 = *(_OWORD *)(v26 + 24);
    *uint64_t v28 = *(_OWORD *)(v26 + 8);
    v28[1] = v30;
    long long v31 = *(_OWORD *)(v26 + 56);
    v28[2] = *(_OWORD *)(v26 + 40);
    void v28[3] = v31;
  }
  *(unsigned char *)(v25 + 72) = *(unsigned char *)(v26 + 72);
  return a1;
}

uint64_t sub_22EDE66E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  char v8 = *(unsigned char *)(a2 + 16);
  sub_22EB0E200(*(void *)a2, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  char v11 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  sub_22EADB1A4(v9, v10, v11);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = (int *)type metadata accessor for SubscriptionStoreCopyWriter(0);
  uint64_t v13 = v12[8];
  uint64_t v14 = (void *)(a1 + v13);
  char v15 = (const void *)(a2 + v13);
  uint64_t v16 = sub_22EE7F6E0();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v16);
  int v18 = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16);
  if (EnumTagSinglePayload)
  {
    if (!v18)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v19 = *(void *)(v16 - 8);
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v19 + 8))(v14, v16);
LABEL_6:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E620);
    memcpy(v14, v15, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v19 + 24))(v14, v15, v16);
LABEL_7:
  *(void *)(a1 + v12[9]) = *(void *)(a2 + v12[9]);
  uint64_t v21 = v12[10];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (const void *)(a2 + v21);
  uint64_t v24 = sub_22EE7F670();
  int v25 = __swift_getEnumTagSinglePayload((uint64_t)v22, 1, v24);
  int v26 = __swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
      __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v24);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v27 = *(void *)(v24 - 8);
  if (v26)
  {
    (*(void (**)(void *, uint64_t))(v27 + 8))(v22, v24);
LABEL_12:
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
    memcpy(v22, v23, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(v27 + 24))(v22, v23, v24);
LABEL_13:
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v29 = a3[7];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  *(unsigned char *)(a1 + v29) = *(unsigned char *)(a2 + v29);
  uint64_t v32 = (long long *)(a1 + v29 + 8);
  long long v33 = (long long *)(v31 + 8);
  unint64_t v34 = *(void *)(a1 + v29 + 16);
  unint64_t v35 = *(void *)(v31 + 16);
  if (v34 < 4)
  {
    if (v35 < 4)
    {
      long long v36 = *v33;
      long long v37 = *(_OWORD *)(v31 + 24);
      long long v38 = *(_OWORD *)(v31 + 56);
      void v32[2] = *(_OWORD *)(v31 + 40);
      v32[3] = v38;
LABEL_16:
      *uint64_t v32 = v36;
      v32[1] = v37;
      goto LABEL_29;
    }
    *(void *)(v30 + 8) = *(void *)(v31 + 8);
    *(void *)(v30 + 16) = *(void *)(v31 + 16);
    *(unsigned char *)(v30 + 24) = *(unsigned char *)(v31 + 24);
    *(void *)(v30 + 32) = *(void *)(v31 + 32);
    uint64_t v42 = *(void *)(v31 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!v42)
    {
      long long v43 = *(_OWORD *)(v31 + 56);
      *(_OWORD *)(v30 + 40) = *(_OWORD *)(v31 + 40);
      *(_OWORD *)(v30 + 56) = v43;
      goto LABEL_29;
    }
    goto LABEL_27;
  }
  if (v35 < 4)
  {
    sub_22EBE84F4((uint64_t)v32);
    long long v39 = *(_OWORD *)(v31 + 56);
    long long v41 = *v33;
    long long v40 = *(_OWORD *)(v31 + 24);
    void v32[2] = *(_OWORD *)(v31 + 40);
    v32[3] = v39;
    *uint64_t v32 = v41;
    v32[1] = v40;
    goto LABEL_29;
  }
  *(void *)(v30 + 8) = *(void *)(v31 + 8);
  *(void *)(v30 + 16) = *(void *)(v31 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v30 + 24) = *(unsigned char *)(v31 + 24);
  *(void *)(v30 + 32) = *(void *)(v31 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v32 = (long long *)(v30 + 40);
  long long v44 = (long long *)(v31 + 40);
  uint64_t v45 = *(void *)(v31 + 48);
  if (!*(void *)(v30 + 48))
  {
    if (!v45)
    {
      long long v36 = *v44;
      long long v37 = *(_OWORD *)(v31 + 56);
      goto LABEL_16;
    }
LABEL_27:
    *(void *)(v30 + 40) = *(void *)(v31 + 40);
    *(void *)(v30 + 48) = *(void *)(v31 + 48);
    *(unsigned char *)(v30 + 56) = *(unsigned char *)(v31 + 56);
    *(void *)(v30 + 64) = *(void *)(v31 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_29;
  }
  if (v45)
  {
    *(void *)(v30 + 40) = *(void *)(v31 + 40);
    *(void *)(v30 + 48) = *(void *)(v31 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v30 + 56) = *(unsigned char *)(v31 + 56);
    *(void *)(v30 + 64) = *(void *)(v31 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_22EB8B890(v30 + 40);
    long long v46 = *(_OWORD *)(v31 + 56);
    *uint64_t v32 = *v44;
    *(_OWORD *)(v30 + 56) = v46;
  }
LABEL_29:
  *(unsigned char *)(v30 + 72) = *(unsigned char *)(v31 + 72);
  return a1;
}

uint64_t sub_22EDE6BC8(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v6 = (int *)type metadata accessor for SubscriptionStoreCopyWriter(0);
  uint64_t v7 = v6[8];
  char v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_22EE7F6E0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E620);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  *(void *)(a1 + v6[9]) = *(void *)(a2 + v6[9]);
  uint64_t v12 = v6[10];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = sub_22EE7F670();
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
  }
  uint64_t v17 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v17) = *(unsigned char *)(a2 + v17);
  memcpy((void *)(a1 + a3[7]), (const void *)(a2 + a3[7]), 0x49uLL);
  return a1;
}

uint64_t sub_22EDE6DBC(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  char v9 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v6;
  sub_22EADB1A4(v7, v8, v9);
  uint64_t v10 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = (int *)type metadata accessor for SubscriptionStoreCopyWriter(0);
  uint64_t v14 = v13[8];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  uint64_t v17 = sub_22EE7F6E0();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v17);
  int v19 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17);
  if (EnumTagSinglePayload)
  {
    if (!v19)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v20 = *(void *)(v17 - 8);
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v20 + 8))(v15, v17);
LABEL_6:
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E620);
    memcpy(v15, v16, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v20 + 40))(v15, v16, v17);
LABEL_7:
  *(void *)(a1 + v13[9]) = *(void *)(a2 + v13[9]);
  uint64_t v22 = v13[10];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (const void *)(a2 + v22);
  uint64_t v25 = sub_22EE7F670();
  int v26 = __swift_getEnumTagSinglePayload((uint64_t)v23, 1, v25);
  int v27 = __swift_getEnumTagSinglePayload((uint64_t)v24, 1, v25);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
      __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v25);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v28 = *(void *)(v25 - 8);
  if (v27)
  {
    (*(void (**)(void *, uint64_t))(v28 + 8))(v23, v25);
LABEL_12:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
    memcpy(v23, v24, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(v28 + 40))(v23, v24, v25);
LABEL_13:
  uint64_t v30 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v30) = *(unsigned char *)(a2 + v30);
  uint64_t v31 = a3[7];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  *(unsigned char *)(a1 + v31) = *(unsigned char *)(a2 + v31);
  unint64_t v34 = (_OWORD *)(a1 + v31 + 8);
  if (*(void *)(a1 + v31 + 16) >= 4uLL)
  {
    unint64_t v35 = *(void *)(v33 + 16);
    if (v35 >= 4)
    {
      *(void *)(v32 + 8) = *(void *)(v33 + 8);
      *(void *)(v32 + 16) = v35;
      swift_bridgeObjectRelease();
      *(unsigned char *)(v32 + 24) = *(unsigned char *)(v33 + 24);
      *(void *)(v32 + 32) = *(void *)(v33 + 32);
      swift_bridgeObjectRelease();
      if (*(void *)(v32 + 48))
      {
        uint64_t v39 = *(void *)(v33 + 48);
        if (v39)
        {
          *(void *)(v32 + 40) = *(void *)(v33 + 40);
          *(void *)(v32 + 48) = v39;
          swift_bridgeObjectRelease();
          *(unsigned char *)(v32 + 56) = *(unsigned char *)(v33 + 56);
          *(void *)(v32 + 64) = *(void *)(v33 + 64);
          swift_bridgeObjectRelease();
          goto LABEL_17;
        }
        sub_22EB8B890(v32 + 40);
      }
      long long v40 = *(_OWORD *)(v33 + 56);
      *(_OWORD *)(v32 + 40) = *(_OWORD *)(v33 + 40);
      *(_OWORD *)(v32 + 56) = v40;
      goto LABEL_17;
    }
    sub_22EBE84F4((uint64_t)v34);
  }
  long long v36 = *(_OWORD *)(v33 + 24);
  *unint64_t v34 = *(_OWORD *)(v33 + 8);
  v34[1] = v36;
  long long v37 = *(_OWORD *)(v33 + 56);
  v34[2] = *(_OWORD *)(v33 + 40);
  v34[3] = v37;
LABEL_17:
  *(unsigned char *)(v32 + 72) = *(unsigned char *)(v33 + 72);
  return a1;
}

uint64_t sub_22EDE7190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EDE71A4);
}

uint64_t sub_22EDE71A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for SubscriptionStoreCopyWriter(0);
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 28) + 16);
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    int v10 = v9 - 4;
    if (v10 < 0) {
      int v10 = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_22EDE7240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EDE7254);
}

void sub_22EDE7254(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for SubscriptionStoreCopyWriter(0);
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28) + 16) = (a2 + 3);
  }
}

uint64_t sub_22EDE72E0()
{
  uint64_t result = type metadata accessor for SubscriptionStoreCopyWriter(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_33(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  *(void *)uint64_t v4 = a1;
  *(void *)(v4 + 8) = a2;
  *(unsigned char *)(v4 + 16) = a3 & 1;
  *(void *)(v4 + 24) = a4;
  return type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(0);
}

uint64_t OUTLINED_FUNCTION_3_31(uint64_t a1)
{
  __swift_storeEnumTagSinglePayload(v1, 0, 1, a1);
  return type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(0);
}

unint64_t sub_22EDE73DC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_22EADDF00(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v8;
    uint64_t v9 = *(int *)(a3 + 20);
    int v10 = (void *)(a1 + v9);
    uint64_t v11 = (void *)(a2 + v9);
    __swift_instantiateConcreteTypeFromMangledName(qword_26861BEF8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_22EE7C7C0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *int v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = *(int *)(a3 + 24);
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (void *)(a2 + v14);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26861C920);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_22EE7D080();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_22EDE75AC(uint64_t a1, uint64_t a2)
{
  sub_22EADDB08(*(void *)a1, *(unsigned char *)(a1 + 8));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(qword_26861BEF8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_22EE7C7C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861C920);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_22EE7D080();
    char v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v8(v6, v7);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_22EDE76E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_22EADDF00(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  int v10 = (void *)(a2 + v8);
  __swift_instantiateConcreteTypeFromMangledName(qword_26861BEF8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_22EE7C7C0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    *uint64_t v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861C920);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_22EE7D080();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  else
  {
    void *v13 = *v14;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_22EDE7858(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_22EADDF00(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_22EADDB08(v8, v9);
  if (a1 != a2)
  {
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (void *)(a2 + v10);
    sub_22EADAC74(a1 + v10, qword_26861BEF8);
    __swift_instantiateConcreteTypeFromMangledName(qword_26861BEF8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_22EE7C7C0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      void *v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = *(int *)(a3 + 24);
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (void *)(a2 + v14);
    sub_22EADAC74(a1 + v14, &qword_26861C920);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26861C920);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_22EE7D080();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_22EDE7A04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 20);
  char v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_26861BEF8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_22EE7C7C0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C920);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_22EE7D080();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  return a1;
}

uint64_t sub_22EDE7B90(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_22EADDB08(v8, v9);
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (char *)a2 + v10;
    sub_22EADAC74(a1 + v10, qword_26861BEF8);
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(qword_26861BEF8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_22EE7C7C0();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v11, v12, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    uint64_t v15 = *(int *)(a3 + 24);
    uint64_t v16 = (void *)(a1 + v15);
    uint64_t v17 = (char *)a2 + v15;
    sub_22EADAC74(a1 + v15, &qword_26861C920);
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C920);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_22EE7D080();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v16, v17, v19);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_22EDE7D50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EDE7D64);
}

uint64_t sub_22EDE7D64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26861EE88);
    OUTLINED_FUNCTION_10();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a3 + 20);
    }
    else
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621AF0);
      uint64_t v11 = *(int *)(a3 + 24);
    }
    return __swift_getEnumTagSinglePayload(a1 + v11, a2, v10);
  }
}

uint64_t sub_22EDE7E10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EDE7E24);
}

uint64_t sub_22EDE7E24(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 8) = -(char)a2;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26861EE88);
    OUTLINED_FUNCTION_10();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a4 + 20);
    }
    else
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268621AF0);
      uint64_t v11 = *(int *)(a4 + 24);
    }
    return __swift_storeEnumTagSinglePayload(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for StoreKitProminentButtonStyle(uint64_t a1)
{
  return sub_22EAD01C0(a1, (uint64_t *)&unk_268627028);
}

void sub_22EDE7EF0()
{
  sub_22EDE7FFC(319, (unint64_t *)&qword_26861BF80, MEMORY[0x263F18520]);
  if (v0 <= 0x3F)
  {
    sub_22EDE7FFC(319, &qword_268621B08, MEMORY[0x263F19168]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_22EDE7FFC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_22EE7C7E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_22EDE8050()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EDE806C()
{
  uint64_t v0 = sub_22EE7CFF0();
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (_OWORD *)((char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v3 = sub_22EE7D080();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v22 - v8;
  type metadata accessor for StoreKitProminentButtonStyle(0);
  sub_22EB18878();
  sub_22EE7D070();
  char v10 = sub_22EE7D050();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v4 + 8);
  v11(v6, v3);
  v11(v9, v3);
  if ((v10 & 1) != 0
    || (sub_22EB18878(), sub_22EE7D040(), char v12 = sub_22EE7D050(), v11(v6, v3), v11(v9, v3), (v12 & 1) != 0))
  {
    uint64_t v13 = (char *)v2 + *(int *)(v0 + 20);
    uint64_t v14 = *MEMORY[0x263F19860];
    uint64_t v15 = sub_22EE7D5E0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v13, v14, v15);
    __asm { FMOV            V0.2D, #14.0 }
    *uint64_t v2 = _Q0;
    sub_22EDE95D8((uint64_t)&qword_26861C1C8);
  }
  else
  {
    sub_22EB18878();
    sub_22EDE95D8((uint64_t)&unk_268627168);
  }
  return sub_22EE7EC70();
}

uint64_t sub_22EDE8324@<X0>(uint64_t a1@<X8>)
{
  uint64_t v176 = a1;
  uint64_t v175 = sub_22EE7CEB0();
  OUTLINED_FUNCTION_0_2();
  uint64_t v174 = v1;
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_3_2();
  uint64_t v173 = v3;
  OUTLINED_FUNCTION_8_3();
  sub_22EE7D0B0();
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_8_3();
  uint64_t v183 = sub_22EE7CDA0();
  OUTLINED_FUNCTION_0_2();
  uint64_t v171 = v5;
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_6_4(v7);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861D138);
  uint64_t v9 = OUTLINED_FUNCTION_2_31(v8, (uint64_t)&v188);
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_3_2();
  uint64_t v185 = v10;
  OUTLINED_FUNCTION_8_3();
  sub_22EE7E050();
  OUTLINED_FUNCTION_0_2();
  uint64_t v186 = v12;
  uint64_t v187 = v11;
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_3_2();
  uint64_t v184 = v13;
  OUTLINED_FUNCTION_8_3();
  uint64_t v14 = sub_22EE7DB60();
  OUTLINED_FUNCTION_0_2();
  uint64_t v16 = v15;
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_11_0();
  uint64_t v20 = v19 - v18;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686257F0);
  uint64_t v22 = v21 - 8;
  MEMORY[0x270FA5388](v21);
  OUTLINED_FUNCTION_11_0();
  uint64_t v25 = v24 - v23;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627038);
  uint64_t v27 = OUTLINED_FUNCTION_2_31(v26, (uint64_t)&v192);
  MEMORY[0x270FA5388](v27);
  OUTLINED_FUNCTION_11_0();
  uint64_t v30 = v29 - v28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268627040);
  OUTLINED_FUNCTION_0_2();
  uint64_t v181 = v32;
  uint64_t v182 = v31;
  MEMORY[0x270FA5388](v31);
  OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_6_4(v33);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627048);
  uint64_t v35 = v34 - 8;
  MEMORY[0x270FA5388](v34);
  OUTLINED_FUNCTION_11_0();
  uint64_t v38 = v37 - v36;
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627050);
  uint64_t v40 = v39 - 8;
  MEMORY[0x270FA5388](v39);
  OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_6_4(v41);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627058);
  uint64_t v43 = OUTLINED_FUNCTION_2_31(v42, (uint64_t)&v193);
  MEMORY[0x270FA5388](v43);
  OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_6_4(v44);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268627060);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x270FA5388](v45);
  OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_6_4(v46);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627068);
  uint64_t v48 = OUTLINED_FUNCTION_2_31(v47, (uint64_t)&v173);
  MEMORY[0x270FA5388](v48);
  OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_6_4(v49);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627070);
  uint64_t v51 = OUTLINED_FUNCTION_2_31(v50, (uint64_t)&v174);
  MEMORY[0x270FA5388](v51);
  OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_6_4(v52);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627078);
  uint64_t v54 = OUTLINED_FUNCTION_2_31(v53, (uint64_t)&v178);
  MEMORY[0x270FA5388](v54);
  OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_6_4(v55);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627080);
  uint64_t v57 = OUTLINED_FUNCTION_2_31(v56, (uint64_t)v179);
  MEMORY[0x270FA5388](v57);
  OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_6_4(v58);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627088);
  uint64_t v60 = OUTLINED_FUNCTION_2_31(v59, (uint64_t)&v181);
  MEMORY[0x270FA5388](v60);
  OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_6_4(v61);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627090);
  uint64_t v63 = OUTLINED_FUNCTION_2_31(v62, (uint64_t)&v183);
  MEMORY[0x270FA5388](v63);
  OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_6_4(v64);
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627098);
  uint64_t v66 = OUTLINED_FUNCTION_2_31(v65, (uint64_t)&v186);
  MEMORY[0x270FA5388](v66);
  OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_6_4(v67);
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686270A0);
  uint64_t v69 = OUTLINED_FUNCTION_2_31(v68, (uint64_t)&v187);
  MEMORY[0x270FA5388](v69);
  OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_6_4(v70);
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686270A8);
  uint64_t v72 = OUTLINED_FUNCTION_2_31(v71, (uint64_t)v190);
  MEMORY[0x270FA5388](v72);
  OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_6_4(v73);
  uint64_t v169 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686270B0);
  OUTLINED_FUNCTION_0_2();
  uint64_t v167 = v74;
  MEMORY[0x270FA5388](v75);
  OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_6_4(v76);
  sub_22EE7DB70();
  uint64_t KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_10_4();
  v78();
  uint64_t v79 = v25 + *(int *)(v22 + 44);
  *(void *)uint64_t v79 = KeyPath;
  *(void *)(v79 + 8) = 1;
  *(unsigned char *)(v79 + 16) = 0;
  uint64_t v80 = v20;
  uint64_t v81 = v177;
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v80, v14);
  uint64_t v82 = swift_getKeyPath();
  sub_22EAEFF0C(v25, v30, &qword_2686257F0);
  uint64_t v83 = (uint64_t *)(v30 + *(int *)(v179[0] + 36));
  *uint64_t v83 = v82;
  v83[1] = 0x3FB999999999999ALL;
  uint64_t v84 = v25;
  uint64_t v85 = v183;
  sub_22EADAC74(v84, &qword_2686257F0);
  sub_22EE7DF80();
  sub_22EDE9518();
  uint64_t v86 = v178;
  sub_22EE7E1B0();
  sub_22EADAC74(v30, &qword_268627038);
  uint64_t v87 = sub_22EE3C1B8();
  v189[3] = v85;
  v190[0] = MEMORY[0x263F18BD0];
  __swift_allocate_boxed_opaque_existential_1(v189);
  sub_22EE7CD90();
  uint64_t v88 = sub_22EE7E740();
  char v191 = 1;
  v190[1] = v88;
  uint64_t v188 = v87;
  sub_22EAEFF0C((uint64_t)&v188, v38 + *(int *)(v35 + 44), &qword_26861D1F8);
  uint64_t v90 = v181;
  uint64_t v89 = v182;
  OUTLINED_FUNCTION_10_4();
  v91();
  sub_22EADAC74((uint64_t)&v188, &qword_26861D1F8);
  uint64_t v92 = v179[1];
  (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v86, v89);
  LOBYTE(v87) = sub_22EE7DE60();
  sub_22EE7C6E0();
  uint64_t v94 = v93;
  uint64_t v96 = v95;
  uint64_t v98 = v97;
  uint64_t v100 = v99;
  uint64_t v101 = v180;
  sub_22EAEFF0C(v38, v180, &qword_268627048);
  uint64_t v102 = v101 + *(int *)(v40 + 44);
  uint64_t v103 = v101;
  *(unsigned char *)uint64_t v102 = v87;
  *(void *)(v102 + 8) = v94;
  *(void *)(v102 + 16) = v96;
  *(void *)(v102 + 24) = v98;
  *(void *)(v102 + 32) = v100;
  *(unsigned char *)(v102 + 40) = 0;
  uint64_t v104 = v38;
  uint64_t v105 = v185;
  sub_22EADAC74(v104, &qword_268627048);
  uint64_t v106 = v81 + *(int *)(v92 + 36);
  uint64_t v107 = v106 + *(int *)(type metadata accessor for DynamicButtonHeightModifier(0) + 20);
  uint64_t v188 = 0x4049000000000000;
  (*(void (**)(uint64_t, void, uint64_t))(v186 + 104))(v184, *MEMORY[0x263F1A730], v187);
  sub_22EACA830();
  sub_22EE7C8E0();
  *(void *)uint64_t v107 = 0x4049000000000000;
  *(unsigned char *)(v107 + 8) = 0;
  sub_22EAEFC48(v103, v81, &qword_268627050);
  uint64_t v108 = *MEMORY[0x263F18CD8];
  uint64_t v109 = sub_22EE7CE90();
  OUTLINED_FUNCTION_2_0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v110 + 104))(v105, v108, v109);
  sub_22EDE95D8((uint64_t)&qword_26861D180);
  uint64_t result = sub_22EE7F900();
  if (result)
  {
    sub_22EDE961C();
    sub_22EBA3A30((uint64_t)&qword_26861D1A0);
    sub_22EE7E350();
    sub_22EADAC74(v105, &qword_26861D138);
    sub_22EADAC74(v81, &qword_268627058);
    uint64_t v112 = sub_22EE7ED70();
    uint64_t v114 = v113;
    OUTLINED_FUNCTION_10_4();
    v115();
    OUTLINED_FUNCTION_4_3();
    uint64_t v117 = v155 + v116;
    *(_OWORD *)uint64_t v117 = xmmword_22EE881E0;
    *(_OWORD *)(v117 + 16) = xmmword_22EE881E0;
    *(void *)(v117 + 40) = 0;
    *(void *)(v117 + 48) = 0;
    *(void *)(v117 + 32) = 0x4076800000000000;
    *(_OWORD *)(v117 + 56) = xmmword_22EE86A20;
    *(_OWORD *)(v117 + 72) = xmmword_22EE86A20;
    *(_WORD *)(v117 + 88) = 1;
    *(void *)(v117 + 96) = v112;
    *(void *)(v117 + 104) = v114;
    uint64_t v118 = OUTLINED_FUNCTION_9_36();
    v119(v118);
    sub_22EE7CD90();
    uint64_t v120 = sub_22EDE806C();
    OUTLINED_FUNCTION_4_3();
    uint64_t v122 = v156 + v121;
    OUTLINED_FUNCTION_10_4();
    v123();
    uint64_t v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686270F0);
    *(void *)(v122 + *(int *)(v124 + 52)) = v120;
    *(_WORD *)(v122 + *(int *)(v124 + 56)) = 256;
    sub_22EAEFF0C(v155, v156, &qword_268627068);
    (*(void (**)(uint64_t, uint64_t))(v171 + 8))(v170, v85);
    sub_22EADAC74(v155, &qword_268627068);
    if (sub_22EE7DB80()) {
      double v125 = 0.8;
    }
    else {
      double v125 = 1.0;
    }
    sub_22EAEFF0C(v156, v158, &qword_268627070);
    OUTLINED_FUNCTION_4_3();
    *(double *)(v158 + v126) = v125;
    sub_22EADAC74(v156, &qword_268627070);
    if (sub_22EE7DB80()) {
      double v127 = 0.2;
    }
    else {
      double v127 = 0.0;
    }
    sub_22EAEFF0C(v158, v159, &qword_268627078);
    OUTLINED_FUNCTION_4_3();
    *(double *)(v159 + v128) = v127;
    sub_22EADAC74(v158, &qword_268627078);
    if (sub_22EE7DB80()) {
      double v129 = 0.97;
    }
    else {
      double v129 = 1.0;
    }
    sub_22EE7EE80();
    uint64_t v131 = v130;
    uint64_t v133 = v132;
    sub_22EAEFF0C(v159, v160, &qword_268627080);
    uint64_t v134 = v160 + *(int *)(v157 + 36);
    *(double *)uint64_t v134 = v129;
    *(double *)(v134 + 8) = v129;
    *(void *)(v134 + 16) = v131;
    *(void *)(v134 + 24) = v133;
    sub_22EADAC74(v159, &qword_268627080);
    uint64_t v135 = sub_22EE7EDB0();
    char v136 = sub_22EE7DB80();
    sub_22EAEFF0C(v160, v162, &qword_268627088);
    OUTLINED_FUNCTION_4_3();
    uint64_t v138 = v162 + v137;
    *(void *)uint64_t v138 = v135;
    *(unsigned char *)(v138 + 8) = v136 & 1;
    sub_22EADAC74(v160, &qword_268627088);
    uint64_t v139 = sub_22EE7E7A0();
    uint64_t v188 = sub_22EE7E7C0();
    v189[0] = v139;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26861C2D0);
    sub_22EDE97C8((uint64_t)&qword_26861C2D8);
    sub_22EBA3A30((uint64_t)&qword_26861C2F8);
    sub_22EE7E860();
    uint64_t v140 = *(void *)v172;
    char v141 = *(unsigned char *)(v172 + 8);
    sub_22EADDF00(*(void *)v172, v141);
    sub_22EB155AC();
    sub_22EADDB08(v140, v141);
    uint64_t v142 = sub_22EE7E7E0();
    swift_release();
    uint64_t v143 = sub_22EDE806C();
    sub_22EAEFF0C(v162, v163, &qword_268627090);
    uint64_t v144 = v163 + *(int *)(v161 + 36);
    *(void *)uint64_t v144 = v142;
    *(void *)(v144 + 8) = v143;
    *(_WORD *)(v144 + 16) = 256;
    sub_22EADAC74(v162, &qword_268627090);
    uint64_t v145 = sub_22EDE806C();
    sub_22EAEFF0C(v163, v164, &qword_268627098);
    OUTLINED_FUNCTION_4_3();
    uint64_t v147 = v164 + v146;
    *(void *)uint64_t v147 = v145;
    *(unsigned char *)(v147 + 8) = 0;
    sub_22EADAC74(v163, &qword_268627098);
    sub_22EE7D090();
    uint64_t v148 = sub_22EDE806C();
    uint64_t v149 = v168 + *(int *)(v166 + 36);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2686270F8);
    OUTLINED_FUNCTION_10_4();
    v150();
    *(void *)uint64_t v149 = v148;
    *(unsigned char *)(v149 + 8) = 0;
    sub_22EAEFF0C(v164, v168, &qword_2686270A0);
    uint64_t v151 = OUTLINED_FUNCTION_9_36();
    v152(v151);
    sub_22EADAC74(v164, &qword_2686270A0);
    uint64_t v153 = v173;
    sub_22EE7D0C0();
    sub_22EDE9830();
    sub_22EDE95D8((uint64_t)&qword_2686258C8);
    uint64_t v154 = v175;
    sub_22EE7E230();
    (*(void (**)(uint64_t, uint64_t))(v174 + 8))(v153, v154);
    sub_22EADAC74(v168, &qword_2686270A8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v167 + 32))(v176, v165, v169);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_22EDE9320@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BD40);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v1 + *(int *)(type metadata accessor for DynamicButtonHeightModifier(0) + 20);
  double v7 = *(double *)v6;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 8);
  if ((v8 & 1) == 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    sub_22EE7C900();
    double v9 = v14;
    if (v14 < v7) {
      double v9 = v7;
    }
    double v7 = v9;
  }
  uint64_t v10 = sub_22EE7ED70();
  sub_22EADC3FC(0, 1, 0, 1, 0, 1, *(void *)&v7, v8, 0, 1, 0, 1, v10, v11);
  return sub_22EAEFC48((uint64_t)v5, a1, &qword_26861BD40);
}

uint64_t sub_22EDE9458@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_22EE7D430();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_22EDE9490()
{
  return sub_22EE7D440();
}

uint64_t sub_22EDE94C4@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_22EE7D2B0();
  *a1 = v3;
  return result;
}

uint64_t sub_22EDE94F0()
{
  return sub_22EE7D2C0();
}

unint64_t sub_22EDE9518()
{
  unint64_t result = qword_2686270B8;
  if (!qword_2686270B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268627038);
    sub_22ED6C48C();
    sub_22EBA3A30((uint64_t)&qword_26861D010);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686270B8);
  }
  return result;
}

uint64_t type metadata accessor for DynamicButtonHeightModifier(uint64_t a1)
{
  return sub_22EAD01C0(a1, (uint64_t *)&unk_268627170);
}

unint64_t sub_22EDE95D8(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_9_15(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_22EDE961C()
{
  unint64_t result = qword_2686270C0;
  if (!qword_2686270C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268627058);
    sub_22EDE9B3C((uint64_t)&unk_2686270C8);
    sub_22EDE95D8((uint64_t)&unk_2686270E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686270C0);
  }
  return result;
}

unint64_t sub_22EDE96F4()
{
  unint64_t result = qword_2686270D0;
  if (!qword_2686270D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268627048);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268627038);
    sub_22EDE9518();
    swift_getOpaqueTypeConformance2();
    sub_22EBA3A30((uint64_t)&unk_2686270D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686270D0);
  }
  return result;
}

unint64_t sub_22EDE97C8(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_9_15(a1);
  if (!result)
  {
    uint64_t v5 = v4;
    __swift_instantiateConcreteTypeFromMangledNameAbstract(v3);
    v5();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_22EDE9830()
{
  unint64_t result = qword_268627100;
  if (!qword_268627100)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686270A8);
    sub_22EDE98D0();
    sub_22EBA3A30((uint64_t)&unk_268627160);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627100);
  }
  return result;
}

unint64_t sub_22EDE98D0()
{
  unint64_t result = qword_268627108;
  if (!qword_268627108)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686270A0);
    sub_22EDE9970();
    sub_22EBA3A30((uint64_t)&qword_2686258F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627108);
  }
  return result;
}

unint64_t sub_22EDE9970()
{
  unint64_t result = qword_268627110;
  if (!qword_268627110)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268627098);
    sub_22EDE9A10();
    sub_22EBA3A30((uint64_t)&unk_268627150);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627110);
  }
  return result;
}

unint64_t sub_22EDE9A10()
{
  unint64_t result = qword_268627118;
  if (!qword_268627118)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268627090);
    sub_22EDE9B3C((uint64_t)&unk_268627120);
    sub_22EBA3A30((uint64_t)&qword_2686258B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627118);
  }
  return result;
}

unint64_t sub_22EDE9ADC()
{
  return sub_22EDE9B3C((uint64_t)&unk_268627128);
}

unint64_t sub_22EDE9B0C()
{
  return sub_22EDE9B3C((uint64_t)&unk_268627130);
}

unint64_t sub_22EDE9B3C(uint64_t a1)
{
  unint64_t result = OUTLINED_FUNCTION_9_15(a1);
  if (!result)
  {
    uint64_t v5 = v4;
    __swift_instantiateConcreteTypeFromMangledNameAbstract(v3);
    v5();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_22EDE9BB4()
{
  unint64_t result = qword_268627138;
  if (!qword_268627138)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268627070);
    sub_22EDE9C54();
    sub_22EBA3A30((uint64_t)&unk_268627148);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627138);
  }
  return result;
}

unint64_t sub_22EDE9C54()
{
  unint64_t result = qword_268627140;
  if (!qword_268627140)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268627068);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268627058);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861D138);
    sub_22EDE961C();
    sub_22EBA3A30((uint64_t)&qword_26861D1A0);
    swift_getOpaqueTypeConformance2();
    sub_22EB277E4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627140);
  }
  return result;
}

uint64_t *sub_22EDE9D54(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    double v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    *(void *)double v9 = *(void *)v10;
    v9[8] = v10[8];
  }
  return a1;
}

uint64_t sub_22EDE9E34(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_22EDE9E9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = *(unsigned char *)(v9 + 8);
  return a1;
}

uint64_t sub_22EDE9F2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 8);
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = v10;
  return a1;
}

uint64_t sub_22EDE9FBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = *(unsigned char *)(v9 + 8);
  return a1;
}

uint64_t sub_22EDEA04C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = *(unsigned char *)(v9 + 8);
  return a1;
}

uint64_t sub_22EDEA0DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EDEA0F0);
}

uint64_t sub_22EDEA0F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);

  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t sub_22EDEA13C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EDEA150);
}

uint64_t sub_22EDEA150(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BA40);

  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

void sub_22EDEA1A0()
{
  sub_22EBB563C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_22EDEA234()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EDEA2E0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_22EDEA300()
{
  unint64_t result = qword_268627180;
  if (!qword_268627180)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861BD40);
    sub_22EBA3A30((uint64_t)&unk_268627188);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627180);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_31@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 - 256) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_9_36()
{
  return v0;
}

void sub_22EDEA3CC()
{
  type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(319);
  if (v0 <= 0x3F)
  {
    sub_22EC97234();
    if (v1 <= 0x3F)
    {
      swift_checkMetadataState();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_22EDEA50C(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7F6E0();
  uint64_t v209 = *(void *)(v6 - 8);
  uint64_t v210 = v6;
  int v7 = *(_DWORD *)(v209 + 80);
  uint64_t v8 = v7;
  uint64_t v202 = v7 + 16;
  uint64_t v9 = *(void *)(v209 + 64);
  uint64_t v10 = sub_22EE7F5D0();
  int v11 = *(_DWORD *)(*(void *)(v10 - 8) + 80);
  uint64_t v12 = v11;
  unint64_t v13 = v7 | (unint64_t)v11 | 7;
  uint64_t v14 = *(void *)(*(void *)(v10 - 8) + 64) + v7;
  uint64_t v15 = v9 + 7;
  unint64_t v16 = (v9 + 7 + ((v14 + ((v12 + 16) & ~v12)) & ~(unint64_t)v7)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = v16 + 8;
  unint64_t v18 = v16 + 9;
  unint64_t v201 = v17;
  if (v18 <= v17) {
    unint64_t v18 = v17;
  }
  if (v18 <= 2) {
    unint64_t v18 = 2;
  }
  uint64_t v207 = v9 + 7;
  unint64_t v208 = v18;
  unint64_t v19 = v18 + ((v13 + v9 + ((v7 + 16) & ~(unint64_t)v7)) & ~v13);
  if (v19 + 1 > (v15 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v20 = v19 + 1;
  }
  else {
    unint64_t v20 = (v15 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v20 <= 0x10) {
    uint64_t v21 = 16;
  }
  else {
    uint64_t v21 = v20;
  }
  unint64_t v22 = v21 + 1 + v13;
  if ((v22 & ~v13) + v21 + 1 <= 0x20) {
    uint64_t v23 = 32;
  }
  else {
    uint64_t v23 = (v22 & ~v13) + v21 + 1;
  }
  uint64_t v24 = *(void *)(a3 + 16);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(_DWORD *)(v25 + 80);
  if ((v13 | v26) != 7
    || ((v11 | v7 | *(_DWORD *)(v25 + 80)) & 0x100000) != 0
    || (unint64_t v27 = v23 + 1 + v13,
        uint64_t v28 = v26 + 16,
        ((((((v26 + 16 + ((v23 + 8 + (v27 & ~v13)) & 0xFFFFFFFFFFFFFFF8)) & ~v26) + *(void *)(v25 + 64)) & 0xFFFFFFFFFFFFFFF8)
        + 87) & 0xFFFFFFFFFFFFFFF8)
      + 9 > 0x18))
  {
    uint64_t v33 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v33 + (((v13 | v26) + 16) & ~(v13 | v26));
    swift_retain();
    return a1;
  }
  unsigned int v29 = a2[v23];
  unsigned int v30 = v29 - 2;
  if (v29 >= 2)
  {
    if (v23 <= 3) {
      uint64_t v31 = v23;
    }
    else {
      uint64_t v31 = 4;
    }
    switch(v31)
    {
      case 1:
        int v32 = *a2;
        goto LABEL_27;
      case 2:
        int v32 = *(unsigned __int16 *)a2;
        goto LABEL_27;
      case 3:
        int v32 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_27;
      case 4:
        int v32 = *(_DWORD *)a2;
LABEL_27:
        if (v23 < 4) {
          unsigned int v29 = (v32 | (v30 << (8 * v23))) + 2;
        }
        else {
          unsigned int v29 = v32 + 2;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v191 = ~v8;
  unint64_t v204 = ~v13;
  uint64_t v184 = ~v12;
  uint64_t v185 = v14;
  uint64_t v188 = v12 + 16;
  uint64_t v189 = *(void *)(v10 - 8);
  uint64_t v186 = v10;
  uint64_t v187 = v13 + v9;
  unint64_t v192 = v21 + 1 + v13;
  size_t v193 = v21 + 1;
  uint64_t v199 = *(void *)(v24 - 8);
  uint64_t v200 = v24;
  uint64_t v198 = *(void *)(v25 + 64);
  if (v29 != 1)
  {
    uint64_t v38 = *((void *)a2 + 1);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v38;
    *(unsigned char *)(a1 + 16) = a2[16];
    *(void *)(a1 + 24) = *((void *)a2 + 3);
    *(unsigned char *)(a1 + v23) = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v39 = ~v13;
    goto LABEL_93;
  }
  unsigned int v34 = a2[v21];
  unsigned int v35 = v34 - 3;
  if (v34 >= 3)
  {
    if (v21 <= 3) {
      uint64_t v36 = v21;
    }
    else {
      uint64_t v36 = 4;
    }
    switch(v36)
    {
      case 1:
        int v37 = *a2;
        goto LABEL_41;
      case 2:
        int v37 = *(unsigned __int16 *)a2;
        goto LABEL_41;
      case 3:
        int v37 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_41;
      case 4:
        int v37 = *(_DWORD *)a2;
LABEL_41:
        if (v21 < 4) {
          unsigned int v34 = (v37 | (v35 << (8 * v21))) + 3;
        }
        else {
          unsigned int v34 = v37 + 3;
        }
        break;
      default:
        break;
    }
  }
  if (v34 == 2)
  {
    (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v209 + 16))(a1, a2, v210);
    unint64_t v56 = v21 + 1 + v13;
    size_t v55 = v21 + 1;
    *(_OWORD *)((a1 + v9 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&a2[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
    char v57 = 2;
LABEL_67:
    *(unsigned char *)(a1 + v21) = v57;
    goto LABEL_68;
  }
  if (v34 == 1)
  {
    unint64_t v175 = v23 + 1 + v13;
    uint64_t v40 = *((void *)a2 + 1);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v40;
    uint64_t v41 = &a2[v8];
    uint64_t v42 = (a1 + v8 + 16) & v191;
    uint64_t v43 = (unint64_t)(v41 + 16) & v191;
    uint64_t v44 = *(void (**)(unint64_t, uint64_t, uint64_t))(v209 + 16);
    swift_bridgeObjectRetain();
    uint64_t v172 = v44;
    v44(v42, v43, v210);
    uint64_t v45 = v9 + v13;
    unint64_t v46 = (v42 + v9 + v13) & v204;
    uint64_t v47 = (unsigned __int8 *)((v43 + v45) & v204);
    unint64_t v48 = v208;
    unsigned int v49 = v47[v208];
    unsigned int v50 = v49 - 4;
    if (v49 < 4)
    {
      uint64_t v53 = v188;
      uint64_t v52 = v189;
      unint64_t v27 = v175;
    }
    else
    {
      if (v208 <= 3) {
        uint64_t v51 = v208;
      }
      else {
        uint64_t v51 = 4;
      }
      uint64_t v53 = v188;
      uint64_t v52 = v189;
      unint64_t v27 = v175;
      switch(v51)
      {
        case 1:
          int v54 = *v47;
          goto LABEL_58;
        case 2:
          int v54 = *(unsigned __int16 *)v47;
          goto LABEL_58;
        case 3:
          int v54 = *(unsigned __int16 *)v47 | (v47[2] << 16);
          goto LABEL_58;
        case 4:
          int v54 = *(_DWORD *)v47;
LABEL_58:
          if (v208 < 4) {
            unsigned int v49 = (v54 | (v50 << (8 * v208))) + 4;
          }
          else {
            unsigned int v49 = v54 + 4;
          }
          break;
        default:
          break;
      }
    }
    switch(v49)
    {
      case 1u:
        *(unsigned char *)unint64_t v46 = *v47;
        char v59 = 1;
        break;
      case 2u:
        *(void *)unint64_t v46 = *(void *)v47;
        *(void *)(v46 + 8) = *((void *)v47 + 1);
        unint64_t v60 = (v53 + v46) & v184;
        unint64_t v178 = v46;
        unint64_t v61 = (unint64_t)&v47[v53] & v184;
        uint64_t v176 = *(void (**)(unint64_t, unint64_t, uint64_t))(v52 + 16);
        swift_bridgeObjectRetain();
        v176(v60, v61, v186);
        unint64_t v62 = (v185 + v60) & v191;
        uint64_t v63 = v185 + v61;
        unint64_t v46 = v178;
        uint64_t v64 = v63 & v191;
        v172(v62, v63 & v191, v210);
        unint64_t v48 = v208;
        *(void *)((v207 + v62) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v207 + v64) & 0xFFFFFFFFFFFFFFF8);
        *(unsigned char *)(v201 + v178) = v47[v201];
        char v59 = 2;
        break;
      case 3u:
        *(void *)unint64_t v46 = *(void *)v47;
        *(void *)(v46 + 8) = *((void *)v47 + 1);
        unint64_t v65 = (v53 + v46) & v184;
        unint64_t v66 = (unint64_t)&v47[v53] & v184;
        uint64_t v179 = *(void (**)(unint64_t, unint64_t, uint64_t))(v52 + 16);
        swift_bridgeObjectRetain();
        v179(v65, v66, v186);
        unint64_t v67 = (v185 + v65) & v191;
        unint64_t v68 = (v185 + v66) & v191;
        v172(v67, v68, v210);
        unint64_t v48 = v208;
        *(void *)((v207 + v67) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v207 + v68) & 0xFFFFFFFFFFFFFFF8);
        char v59 = 3;
        break;
      default:
        char v59 = 0;
        *(_WORD *)unint64_t v46 = *(_WORD *)v47;
        break;
    }
    unint64_t v56 = v192;
    size_t v55 = v21 + 1;
    *(unsigned char *)(v46 + v48) = v59;
    char v57 = 1;
    goto LABEL_67;
  }
  uint64_t v58 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v58;
  *(unsigned char *)(a1 + v21) = 0;
  swift_bridgeObjectRetain();
  unint64_t v56 = v21 + 1 + v13;
  size_t v55 = v21 + 1;
LABEL_68:
  unint64_t v39 = v204;
  uint64_t v69 = (void *)((v56 + a1) & v204);
  uint64_t v70 = (void *)((unint64_t)&a2[v56] & v204);
  unsigned int v71 = *((unsigned __int8 *)v70 + v21);
  if (v71 > 2)
  {
    memcpy((void *)((v56 + a1) & v204), (const void *)((unint64_t)&a2[v56] & v204), v55);
  }
  else if (v71 == 2)
  {
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v209 + 16))((v56 + a1) & v204, (unint64_t)&a2[v56] & v204, v210);
    *(_OWORD *)(((unint64_t)v69 + v207) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v70 + v207) & 0xFFFFFFFFFFFFFFF8);
    *((unsigned char *)v69 + v21) = 2;
  }
  else if (v71 == 1)
  {
    uint64_t v180 = v21;
    *uint64_t v69 = *v70;
    *(void *)(((v56 + a1) & v204) + 8) = *(void *)(((unint64_t)&a2[v56] & v204) + 8);
    unint64_t v177 = (v56 + a1) & v204;
    unint64_t v72 = ((unint64_t)v69 + v202) & v191;
    unint64_t v73 = ((unint64_t)v70 + v202) & v191;
    uint64_t v74 = *(void (**)(uint64_t, unint64_t, uint64_t))(v209 + 16);
    swift_bridgeObjectRetain();
    uint64_t v173 = v74;
    v74(v72, v73, v210);
    unint64_t v75 = (v187 + v72) & v204;
    uint64_t v76 = (unsigned __int8 *)((v187 + v73) & v204);
    unsigned int v77 = v76[v208];
    unsigned int v78 = v77 - 4;
    if (v77 < 4)
    {
      uint64_t v80 = v188;
      uint64_t v81 = v189;
      uint64_t v21 = v180;
    }
    else
    {
      if (v208 <= 3) {
        uint64_t v79 = v208;
      }
      else {
        uint64_t v79 = 4;
      }
      uint64_t v80 = v188;
      uint64_t v81 = v189;
      uint64_t v21 = v180;
      switch(v79)
      {
        case 1:
          int v82 = *v76;
          goto LABEL_84;
        case 2:
          int v82 = *(unsigned __int16 *)v76;
          goto LABEL_84;
        case 3:
          int v82 = *(unsigned __int16 *)v76 | (v76[2] << 16);
          goto LABEL_84;
        case 4:
          int v82 = *(_DWORD *)v76;
LABEL_84:
          int v83 = (v82 | (v78 << (8 * v208))) + 4;
          unsigned int v77 = v82 + 4;
          if (v208 < 4) {
            unsigned int v77 = v83;
          }
          break;
        default:
          break;
      }
    }
    switch(v77)
    {
      case 1u:
        *(unsigned char *)unint64_t v75 = *v76;
        char v84 = 1;
        break;
      case 2u:
        *(void *)unint64_t v75 = *(void *)v76;
        *(void *)(v75 + 8) = *((void *)v76 + 1);
        unint64_t v85 = (v80 + v75) & v184;
        unint64_t v86 = (unint64_t)&v76[v80] & v184;
        uint64_t v87 = *(void (**)(unint64_t, unint64_t, uint64_t))(v81 + 16);
        unint64_t v181 = v75;
        swift_bridgeObjectRetain();
        v87(v85, v86, v186);
        uint64_t v88 = (v185 + v85) & v191;
        unint64_t v89 = (v185 + v86) & v191;
        v173(v88, v89, v210);
        unint64_t v75 = v181;
        *(void *)((v207 + v88) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v207 + v89) & 0xFFFFFFFFFFFFFFF8);
        *(unsigned char *)(v181 + v201) = v76[v201];
        char v84 = 2;
        break;
      case 3u:
        *(void *)unint64_t v75 = *(void *)v76;
        *(void *)(v75 + 8) = *((void *)v76 + 1);
        unint64_t v90 = (v80 + v75) & v184;
        unint64_t v91 = (unint64_t)&v76[v80] & v184;
        uint64_t v92 = *(void (**)(unint64_t, unint64_t, uint64_t))(v81 + 16);
        unint64_t v182 = v75;
        swift_bridgeObjectRetain();
        v92(v90, v91, v186);
        unint64_t v93 = (v185 + v91) & v191;
        v173((v185 + v90) & v191, v93, v210);
        unint64_t v75 = v182;
        *(void *)((v207 + ((v185 + v90) & v191)) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v207 + v93) & 0xFFFFFFFFFFFFFFF8);
        char v84 = 3;
        break;
      default:
        char v84 = 0;
        *(_WORD *)unint64_t v75 = *(_WORD *)v76;
        break;
    }
    unint64_t v39 = v204;
    *(unsigned char *)(v75 + v208) = v84;
    *(unsigned char *)(v177 + v21) = 1;
  }
  else
  {
    *uint64_t v69 = *v70;
    *(void *)(((v56 + a1) & v204) + 8) = *(void *)(((unint64_t)&a2[v56] & v204) + 8);
    *((unsigned char *)v69 + v21) = 0;
    swift_bridgeObjectRetain();
  }
  uint64_t v28 = v26 + 16;
  *(unsigned char *)(a1 + v23) = 1;
LABEL_93:
  size_t v94 = ~v26;
  uint64_t v95 = (void *)((v27 + a1) & v39);
  uint64_t v96 = (unsigned __int8 *)((unint64_t)&a2[v27] & v39);
  unsigned int v97 = v96[v23];
  if (v97 > 1)
  {
    memcpy((void *)((v27 + a1) & v39), v96, v23 + 1);
    goto LABEL_103;
  }
  if (v97 == 1)
  {
    unsigned int v98 = v96[v21];
    unsigned int v99 = v98 - 3;
    if (v98 >= 3)
    {
      if (v21 <= 3) {
        uint64_t v100 = v21;
      }
      else {
        uint64_t v100 = 4;
      }
      switch(v100)
      {
        case 1:
          int v101 = *v96;
          goto LABEL_107;
        case 2:
          int v101 = *(unsigned __int16 *)v96;
          goto LABEL_107;
        case 3:
          int v101 = *(unsigned __int16 *)v96 | (v96[2] << 16);
          goto LABEL_107;
        case 4:
          int v101 = *(_DWORD *)v96;
LABEL_107:
          int v103 = (v101 | (v99 << (8 * v21))) + 3;
          unsigned int v98 = v101 + 3;
          if (v21 < 4) {
            unsigned int v98 = v103;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v190 = v28;
    if (v98 == 2)
    {
      (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v209 + 16))((v27 + a1) & v39, v96, v210);
      *(_OWORD *)(((unint64_t)v95 + v207) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v96[v207] & 0xFFFFFFFFFFFFFFF8);
      *((unsigned char *)v95 + v21) = 2;
    }
    else
    {
      if (v98 == 1)
      {
        size_t __n = ~v26;
        *uint64_t v95 = *(void *)v96;
        *(void *)(((v27 + a1) & v39) + 8) = *((void *)v96 + 1);
        unint64_t v104 = ((unint64_t)v95 + v202) & v191;
        unint64_t v105 = (unint64_t)&v96[v202] & v191;
        uint64_t v106 = *(void (**)(size_t, unint64_t, uint64_t))(v209 + 16);
        swift_bridgeObjectRetain();
        uint64_t v183 = v106;
        v106(v104, v105, v210);
        size_t v107 = (v187 + v104) & v39;
        uint64_t v108 = (unsigned __int8 *)((v187 + v105) & v39);
        unint64_t v109 = v208;
        unsigned int v110 = v108[v208];
        unsigned int v111 = v110 - 4;
        if (v110 < 4)
        {
          uint64_t v114 = v188;
          uint64_t v113 = v189;
          size_t v94 = __n;
        }
        else
        {
          if (v208 <= 3) {
            uint64_t v112 = v208;
          }
          else {
            uint64_t v112 = 4;
          }
          uint64_t v114 = v188;
          uint64_t v113 = v189;
          size_t v94 = __n;
          switch(v112)
          {
            case 1:
              int v115 = *v108;
              goto LABEL_124;
            case 2:
              int v115 = *(unsigned __int16 *)v108;
              goto LABEL_124;
            case 3:
              int v115 = *(unsigned __int16 *)v108 | (*(unsigned __int8 *)(((v187 + v105) & v39) + 2) << 16);
              goto LABEL_124;
            case 4:
              int v115 = *(_DWORD *)v108;
LABEL_124:
              int v118 = (v115 | (v111 << (8 * v208))) + 4;
              unsigned int v110 = v115 + 4;
              if (v208 < 4) {
                unsigned int v110 = v118;
              }
              break;
            default:
              break;
          }
        }
        switch(v110)
        {
          case 1u:
            *(unsigned char *)size_t v107 = *v108;
            char v119 = 1;
            break;
          case 2u:
            *(void *)size_t v107 = *(void *)v108;
            *(void *)(v107 + 8) = *(void *)(((v187 + v105) & v39) + 8);
            size_t v120 = (v114 + v107) & v184;
            unint64_t v121 = (unint64_t)&v108[v114] & v184;
            uint64_t v174 = *(void (**)(size_t, unint64_t, uint64_t))(v113 + 16);
            size_t __nb = v107;
            swift_bridgeObjectRetain();
            v174(v120, v121, v186);
            size_t v122 = (v185 + v120) & v191;
            v183(v122, (v185 + v121) & v191, v210);
            size_t v107 = __nb;
            unint64_t v109 = v208;
            *(void *)((v207 + v122) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v207 + ((v185 + v121) & v191)) & 0xFFFFFFFFFFFFFFF8);
            *(unsigned char *)(__nb + v201) = v108[v201];
            char v119 = 2;
            break;
          case 3u:
            *(void *)size_t v107 = *(void *)v108;
            *(void *)(v107 + 8) = *(void *)(((v187 + v105) & v39) + 8);
            size_t v123 = (v114 + v107) & v184;
            unint64_t v124 = (unint64_t)&v108[v114] & v184;
            __nc = *(void (**)(size_t, unint64_t, uint64_t))(v113 + 16);
            size_t v125 = v107;
            swift_bridgeObjectRetain();
            __nc(v123, v124, v186);
            unint64_t v126 = (v185 + v124) & v191;
            v183((v185 + v123) & v191, v126, v210);
            size_t v107 = v125;
            unint64_t v109 = v208;
            *(void *)((v207 + ((v185 + v123) & v191)) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v207 + v126) & 0xFFFFFFFFFFFFFFF8);
            char v119 = 3;
            break;
          default:
            char v119 = 0;
            *(_WORD *)size_t v107 = *(_WORD *)v108;
            break;
        }
        unint64_t v117 = v192;
        size_t v116 = v193;
        unint64_t v39 = v204;
        *(unsigned char *)(v107 + v109) = v119;
        *((unsigned char *)v95 + v21) = 1;
LABEL_132:
        double v127 = (void *)(((unint64_t)v95 + v117) & v39);
        uint64_t v128 = (void *)((unint64_t)&v96[v117] & v39);
        unsigned int v129 = *((unsigned __int8 *)v128 + v21);
        if (v129 > 2)
        {
          memcpy((void *)(((unint64_t)v95 + v117) & v39), (const void *)((unint64_t)&v96[v117] & v39), v116);
        }
        else if (v129 == 2)
        {
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v209 + 16))(((unint64_t)v95 + v117) & v39, (unint64_t)&v96[v117] & v39, v210);
          *(_OWORD *)(((unint64_t)v127 + v207) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v128
                                                                                           + v207) & 0xFFFFFFFFFFFFFFF8);
          *((unsigned char *)v127 + v21) = 2;
        }
        else
        {
          if (v129 == 1)
          {
            *double v127 = *v128;
            *(void *)((((unint64_t)v95 + v117) & v39) + 8) = *(void *)(((unint64_t)&v96[v117] & v39)
                                                                                + 8);
            size_t __na = ((unint64_t)v95 + v117) & v39;
            unint64_t v130 = ((unint64_t)v127 + v202) & v191;
            unint64_t v131 = ((unint64_t)v128 + v202) & v191;
            uint64_t v132 = *(void (**)(uint64_t, unint64_t, uint64_t))(v209 + 16);
            swift_bridgeObjectRetain();
            uint64_t v203 = v132;
            v132(v130, v131, v210);
            unint64_t v133 = (v187 + v130) & v204;
            uint64_t v134 = (unsigned __int8 *)((v187 + v131) & v204);
            unsigned int v135 = v134[v208];
            unsigned int v136 = v135 - 4;
            if (v135 < 4)
            {
              uint64_t v139 = v188;
              uint64_t v138 = v189;
            }
            else
            {
              if (v208 <= 3) {
                uint64_t v137 = v208;
              }
              else {
                uint64_t v137 = 4;
              }
              uint64_t v139 = v188;
              uint64_t v138 = v189;
              switch(v137)
              {
                case 1:
                  int v140 = *v134;
                  goto LABEL_158;
                case 2:
                  int v140 = *(unsigned __int16 *)v134;
                  goto LABEL_158;
                case 3:
                  int v140 = *(unsigned __int16 *)v134 | (*(unsigned __int8 *)(((v187 + v131) & v204) + 2) << 16);
                  goto LABEL_158;
                case 4:
                  int v140 = *(_DWORD *)v134;
LABEL_158:
                  int v163 = (v140 | (v136 << (8 * v208))) + 4;
                  unsigned int v135 = v140 + 4;
                  if (v208 < 4) {
                    unsigned int v135 = v163;
                  }
                  break;
                default:
                  break;
              }
            }
            switch(v135)
            {
              case 1u:
                *(unsigned char *)unint64_t v133 = *v134;
                char v164 = 1;
                break;
              case 2u:
                *(void *)unint64_t v133 = *(void *)v134;
                *(void *)(v133 + 8) = *(void *)(((v187 + v131) & v204) + 8);
                unint64_t v165 = (v139 + v133) & v184;
                unint64_t v166 = (unint64_t)&v134[v139] & v184;
                uint64_t v205 = *(void (**)(unint64_t, unint64_t, uint64_t))(v138 + 16);
                swift_bridgeObjectRetain();
                v205(v165, v166, v186);
                uint64_t v167 = (v185 + v165) & v191;
                unint64_t v168 = (v185 + v166) & v191;
                v203(v167, v168, v210);
                *(void *)((v207 + v167) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v207 + v168) & 0xFFFFFFFFFFFFFFF8);
                *(unsigned char *)(v133 + v201) = v134[v201];
                char v164 = 2;
                break;
              case 3u:
                *(void *)unint64_t v133 = *(void *)v134;
                *(void *)(v133 + 8) = *(void *)(((v187 + v131) & v204) + 8);
                unint64_t v169 = (v139 + v133) & v184;
                unint64_t v170 = (unint64_t)&v134[v139] & v184;
                unint64_t v206 = *(void (**)(unint64_t, unint64_t, uint64_t))(v138 + 16);
                swift_bridgeObjectRetain();
                v206(v169, v170, v186);
                uint64_t v171 = (v185 + v169) & v191;
                v203(v171, (v185 + v170) & v191, v210);
                *(void *)((v207 + v171) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v207 + ((v185 + v170) & v191)) & 0xFFFFFFFFFFFFFFF8);
                char v164 = 3;
                break;
              default:
                char v164 = 0;
                *(_WORD *)unint64_t v133 = *(_WORD *)v134;
                break;
            }
            uint64_t v28 = v190;
            *(unsigned char *)(v133 + v208) = v164;
            uint64_t v102 = v23 + 8;
            *(unsigned char *)(__na + v21) = 1;
            goto LABEL_145;
          }
          *double v127 = *v128;
          *(void *)((((unint64_t)v95 + v117) & v39) + 8) = *(void *)(((unint64_t)&v96[v117] & v39) + 8);
          *((unsigned char *)v127 + v21) = 0;
          swift_bridgeObjectRetain();
        }
        uint64_t v28 = v190;
        uint64_t v102 = v23 + 8;
LABEL_145:
        *((unsigned char *)v95 + v23) = 1;
        goto LABEL_146;
      }
      *uint64_t v95 = *(void *)v96;
      *(void *)(((v27 + a1) & v39) + 8) = *((void *)v96 + 1);
      *((unsigned char *)v95 + v21) = 0;
      swift_bridgeObjectRetain();
    }
    unint64_t v117 = v192;
    size_t v116 = v193;
    goto LABEL_132;
  }
  *uint64_t v95 = *(void *)v96;
  *(void *)(((v27 + a1) & v39) + 8) = *((void *)v96 + 1);
  *(unsigned char *)(((v27 + a1) & v39) + 0x10) = v96[16];
  *(void *)(((v27 + a1) & v39) + 0x18) = *((void *)v96 + 3);
  *((unsigned char *)v95 + v23) = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_103:
  uint64_t v102 = v23 + 8;
LABEL_146:
  char v141 = (void *)(((unint64_t)v95 + v102) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v142 = (void *)((unint64_t)&v96[v102] & 0xFFFFFFFFFFFFFFF8);
  uint64_t v143 = v142[1];
  *char v141 = *v142;
  v141[1] = v143;
  unint64_t v144 = ((unint64_t)v141 + v28) & v94;
  unint64_t v145 = ((unint64_t)v142 + v28) & v94;
  uint64_t v146 = *(void (**)(unint64_t, unint64_t, uint64_t))(v199 + 16);
  swift_retain();
  v146(v144, v145, v200);
  unint64_t v147 = v144 + v198;
  *(unsigned char *)unint64_t v147 = *(unsigned char *)(v145 + v198);
  unint64_t v148 = (v144 + v198) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v149 = (v145 + v198) & 0xFFFFFFFFFFFFFFF8;
  *(void *)((v147 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)(v149 + 8);
  unint64_t v150 = (v148 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v151 = (v149 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v152 = *(void *)v151;
  LOBYTE(v144) = *(unsigned char *)(v151 + 8);
  swift_bridgeObjectRetain();
  sub_22EADDF00(v152, v144);
  *(void *)unint64_t v150 = v152;
  *(unsigned char *)(v150 + 8) = v144;
  unint64_t v153 = (v148 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v154 = (v149 + 39) & 0xFFFFFFFFFFFFFFF8;
  if (*(unsigned char *)(v154 + 40))
  {
    unint64_t v155 = *(void *)(v154 + 24);
    if (v155 >= 6)
    {
      *(void *)(v153 + 24) = v155;
      *(void *)(v153 + 32) = *(void *)(v154 + 32);
      (**(void (***)(unint64_t))(v155 - 8))((v148 + 39) & 0xFFFFFFFFFFFFFFF8);
    }
    else
    {
      long long v156 = *(_OWORD *)v154;
      long long v157 = *(_OWORD *)(v154 + 16);
      *(void *)(v153 + 32) = *(void *)(v154 + 32);
      *(_OWORD *)unint64_t v153 = v156;
      *(_OWORD *)(v153 + 16) = v157;
    }
    *(unsigned char *)(v153 + 40) = 1;
  }
  else
  {
    *(void *)unint64_t v153 = *(void *)v154;
    *(unsigned char *)(v153 + 40) = 0;
    swift_retain();
  }
  unint64_t v158 = (v148 + 87) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v159 = (v149 + 87) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v160 = *(void *)v159;
  char v161 = *(unsigned char *)(v159 + 8);
  sub_22EADDF00(*(void *)v159, v161);
  *(void *)unint64_t v158 = v160;
  *(unsigned char *)(v158 + 8) = v161;
  return a1;
}

uint64_t sub_22EDEB8F0(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = sub_22EE7F6E0();
  uint64_t v87 = *(void *)(v3 - 8);
  uint64_t v88 = v3;
  uint64_t v4 = *(unsigned __int8 *)(v87 + 80);
  uint64_t v85 = v4 + 16;
  uint64_t v5 = *(void *)(v87 + 64);
  uint64_t v6 = sub_22EE7F5D0();
  uint64_t v82 = *(void *)(v6 - 8);
  uint64_t v83 = v6;
  uint64_t v7 = *(unsigned __int8 *)(v82 + 80);
  uint64_t v8 = v4 | v7 | 7;
  uint64_t v84 = v8 + v5;
  uint64_t v9 = (v8 + v5 + ((v4 + 16) & ~v4)) & ~v8;
  uint64_t v80 = v7 + 16;
  uint64_t v81 = *(void *)(v82 + 64) + v4;
  unint64_t v10 = (v5 + 7 + ((v81 + ((v7 + 16) & ~v7)) & ~v4)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = v10 + 8;
  unint64_t v12 = v10 + 9;
  if (v12 <= v11) {
    unint64_t v12 = v11;
  }
  if (v12 <= 2) {
    uint64_t v13 = 2;
  }
  else {
    uint64_t v13 = v12;
  }
  if (v13 + v9 + 1 > ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v14 = v13 + v9 + 1;
  }
  else {
    unint64_t v14 = ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v14 <= 0x10) {
    uint64_t v15 = 16;
  }
  else {
    uint64_t v15 = v14;
  }
  uint64_t v16 = v15 + 1 + v8;
  if ((v16 & (unint64_t)~v8) + v15 + 1 <= 0x20) {
    uint64_t v17 = 32;
  }
  else {
    uint64_t v17 = (v16 & ~v8) + v15 + 1;
  }
  unsigned int v18 = a1[v17];
  unsigned int v19 = v18 - 2;
  if (v18 >= 2)
  {
    if (v17 <= 3) {
      uint64_t v20 = v17;
    }
    else {
      uint64_t v20 = 4;
    }
    switch(v20)
    {
      case 1:
        int v21 = *a1;
        goto LABEL_24;
      case 2:
        int v21 = *(unsigned __int16 *)a1;
        goto LABEL_24;
      case 3:
        int v21 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_24;
      case 4:
        int v21 = *(_DWORD *)a1;
LABEL_24:
        if (v17 < 4) {
          unsigned int v18 = (v21 | (v19 << (8 * v17))) + 2;
        }
        else {
          unsigned int v18 = v21 + 2;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v86 = ~v4;
  uint64_t v22 = ~v8;
  uint64_t v79 = ~v7;
  if (v18 != 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  unsigned int v23 = a1[v15];
  unsigned int v24 = v23 - 3;
  if (v23 >= 3)
  {
    if (v15 <= 3) {
      uint64_t v25 = v15;
    }
    else {
      uint64_t v25 = 4;
    }
    switch(v25)
    {
      case 1:
        int v26 = *a1;
        goto LABEL_39;
      case 2:
        int v26 = *(unsigned __int16 *)a1;
        goto LABEL_39;
      case 3:
        int v26 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_39;
      case 4:
        int v26 = *(_DWORD *)a1;
LABEL_39:
        if (v15 < 4) {
          unsigned int v23 = (v26 | (v24 << (8 * v15))) + 3;
        }
        else {
          unsigned int v23 = v26 + 3;
        }
        break;
      default:
        break;
    }
  }
  if (v23 == 2)
  {
    (*(void (**)(unsigned __int8 *, uint64_t))(v87 + 8))(a1, v88);
  }
  else if (v23 == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v27 = (unint64_t)&a1[v4 + 16] & v86;
    unsigned int v78 = *(void (**)(uint64_t, uint64_t))(v87 + 8);
    v78(v27, v88);
    uint64_t v28 = (unsigned __int8 *)((v27 + v5 + v8) & v22);
    unsigned int v29 = v28[v13];
    unsigned int v30 = v29 - 4;
    if (v29 >= 4)
    {
      if (v13 <= 3) {
        uint64_t v31 = v13;
      }
      else {
        uint64_t v31 = 4;
      }
      switch(v31)
      {
        case 1:
          int v32 = *v28;
          goto LABEL_55;
        case 2:
          int v32 = *(unsigned __int16 *)v28;
          goto LABEL_55;
        case 3:
          int v32 = *(unsigned __int16 *)v28 | (v28[2] << 16);
          goto LABEL_55;
        case 4:
          int v32 = *(_DWORD *)v28;
LABEL_55:
          if (v13 < 4) {
            unsigned int v29 = (v32 | (v30 << (8 * v13))) + 4;
          }
          else {
            unsigned int v29 = v32 + 4;
          }
          break;
        default:
          break;
      }
    }
    if (v29 >= 2)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v82 + 8))((unint64_t)&v28[v80] & v79, v83);
      v78((v81 + ((unint64_t)&v28[v80] & v79)) & v86, v88);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  unint64_t v33 = (unint64_t)&a1[v16] & v22;
  unsigned int v34 = *(unsigned __int8 *)(v33 + v15);
  if (v34 <= 2)
  {
    if (v34 == 2)
    {
      (*(void (**)(unint64_t, uint64_t))(v87 + 8))((unint64_t)&a1[v16] & v22, v88);
      goto LABEL_78;
    }
    if (v34 == 1)
    {
      swift_bridgeObjectRelease();
      unint64_t v35 = (v85 + v33) & v86;
      uint64_t v36 = *(void (**)(unint64_t, uint64_t))(v87 + 8);
      v36(v35, v88);
      int v37 = (unsigned __int8 *)((v84 + v35) & v22);
      unsigned int v38 = v37[v13];
      unsigned int v39 = v38 - 4;
      if (v38 >= 4)
      {
        if (v13 <= 3) {
          uint64_t v40 = v13;
        }
        else {
          uint64_t v40 = 4;
        }
        switch(v40)
        {
          case 1:
            int v41 = *v37;
            goto LABEL_74;
          case 2:
            int v41 = *(unsigned __int16 *)v37;
            goto LABEL_74;
          case 3:
            int v41 = *(unsigned __int16 *)v37 | (v37[2] << 16);
            goto LABEL_74;
          case 4:
            int v41 = *(_DWORD *)v37;
LABEL_74:
            int v42 = (v41 | (v39 << (8 * v13))) + 4;
            unsigned int v38 = v41 + 4;
            if (v13 < 4) {
              unsigned int v38 = v42;
            }
            break;
          default:
            break;
        }
      }
      if (v38 >= 2)
      {
        swift_bridgeObjectRelease();
        unint64_t v43 = (unint64_t)&v37[v80] & v79;
        (*(void (**)(unint64_t, uint64_t))(v82 + 8))(v43, v83);
        v36((v81 + v43) & v86, v88);
      }
      goto LABEL_78;
    }
LABEL_35:
    swift_bridgeObjectRelease();
  }
LABEL_78:
  uint64_t v44 = (unsigned __int8 *)((unint64_t)&a1[v8 + 1 + v17] & v22);
  unsigned int v45 = v44[v17];
  if (v45 > 1) {
    goto LABEL_128;
  }
  if (v45 != 1)
  {
    swift_bridgeObjectRelease();
LABEL_87:
    swift_bridgeObjectRelease();
    goto LABEL_128;
  }
  unsigned int v46 = v44[v15];
  unsigned int v47 = v46 - 3;
  if (v46 >= 3)
  {
    if (v15 <= 3) {
      uint64_t v48 = v15;
    }
    else {
      uint64_t v48 = 4;
    }
    switch(v48)
    {
      case 1:
        int v49 = *v44;
        goto LABEL_91;
      case 2:
        int v49 = *(unsigned __int16 *)v44;
        goto LABEL_91;
      case 3:
        int v49 = *(unsigned __int16 *)v44 | (v44[2] << 16);
        goto LABEL_91;
      case 4:
        int v49 = *(_DWORD *)v44;
LABEL_91:
        int v50 = (v49 | (v47 << (8 * v15))) + 3;
        unsigned int v46 = v49 + 3;
        if (v15 < 4) {
          unsigned int v46 = v50;
        }
        break;
      default:
        break;
    }
  }
  if (v46 == 2)
  {
    (*(void (**)(unsigned __int8 *, uint64_t))(v87 + 8))(v44, v88);
  }
  else if (v46 == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v51 = *(void (**)(unint64_t, uint64_t))(v87 + 8);
    v51((unint64_t)&v44[v85] & v86, v88);
    uint64_t v52 = (unsigned __int8 *)((v84 + ((unint64_t)&v44[v85] & v86)) & v22);
    unsigned int v53 = v52[v13];
    unsigned int v54 = v53 - 4;
    if (v53 >= 4)
    {
      if (v13 <= 3) {
        uint64_t v55 = v13;
      }
      else {
        uint64_t v55 = 4;
      }
      switch(v55)
      {
        case 1:
          int v56 = *v52;
          goto LABEL_106;
        case 2:
          int v56 = *(unsigned __int16 *)v52;
          goto LABEL_106;
        case 3:
          int v56 = *(unsigned __int16 *)((v84 + ((unint64_t)&v44[v85] & v86)) & v22) | (*(unsigned __int8 *)(((v84 + ((unint64_t)&v44[v85] & v86)) & v22) + 2) << 16);
          goto LABEL_106;
        case 4:
          int v56 = *(_DWORD *)v52;
LABEL_106:
          int v57 = (v56 | (v54 << (8 * v13))) + 4;
          unsigned int v53 = v56 + 4;
          if (v13 < 4) {
            unsigned int v53 = v57;
          }
          break;
        default:
          break;
      }
    }
    if (v53 >= 2)
    {
      swift_bridgeObjectRelease();
      unint64_t v58 = (unint64_t)&v52[v80] & v79;
      (*(void (**)(unint64_t, uint64_t))(v82 + 8))(v58, v83);
      v51((v81 + v58) & v86, v88);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  unint64_t v59 = (unint64_t)&v44[v16] & v22;
  unsigned int v60 = *(unsigned __int8 *)(v59 + v15);
  if (v60 <= 2)
  {
    if (v60 == 2)
    {
      (*(void (**)(unint64_t, uint64_t))(v87 + 8))((unint64_t)&v44[v16] & v22, v88);
    }
    else
    {
      if (v60 != 1) {
        goto LABEL_87;
      }
      swift_bridgeObjectRelease();
      unint64_t v61 = (v85 + v59) & v86;
      unint64_t v62 = *(void (**)(unint64_t, uint64_t))(v87 + 8);
      v62(v61, v88);
      uint64_t v63 = (unsigned __int8 *)((v84 + v61) & v22);
      unsigned int v64 = v63[v13];
      unsigned int v65 = v64 - 4;
      if (v64 >= 4)
      {
        if (v13 <= 3) {
          uint64_t v66 = v13;
        }
        else {
          uint64_t v66 = 4;
        }
        switch(v66)
        {
          case 1:
            int v67 = *v63;
            goto LABEL_124;
          case 2:
            int v67 = *(unsigned __int16 *)v63;
            goto LABEL_124;
          case 3:
            int v67 = *(unsigned __int16 *)v63 | (v63[2] << 16);
            goto LABEL_124;
          case 4:
            int v67 = *(_DWORD *)v63;
LABEL_124:
            int v68 = (v67 | (v65 << (8 * v13))) + 4;
            unsigned int v64 = v67 + 4;
            if (v13 < 4) {
              unsigned int v64 = v68;
            }
            break;
          default:
            break;
        }
      }
      if (v64 >= 2)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v82 + 8))((unint64_t)&v63[v80] & v79, v83);
        v62((v81 + ((unint64_t)&v63[v80] & v79)) & v86, v88);
      }
    }
  }
LABEL_128:
  swift_release();
  uint64_t v69 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v70 = v69 + 8;
  unint64_t v71 = (((unint64_t)&v44[v17 + 8] & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v69 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
  (*(void (**)(unint64_t))(v69 + 8))(v71);
  unint64_t v72 = (v71 + *(void *)(v70 + 56)) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  sub_22EADDB08(*(void *)((v72 + 23) & 0xFFFFFFFFFFFFFFF8), *(unsigned char *)(((v72 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
  unint64_t v73 = (v72 + 39) & 0xFFFFFFFFFFFFFFF8;
  if (*(unsigned char *)(v73 + 40))
  {
    if (*(void *)(v73 + 24) >= 6uLL) {
      __swift_destroy_boxed_opaque_existential_1(v73);
    }
  }
  else
  {
    swift_release();
  }
  unint64_t v74 = (v72 + 87) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v75 = *(void *)v74;
  char v76 = *(unsigned char *)(v74 + 8);

  return sub_22EADDB08(v75, v76);
}

uint64_t sub_22EDEC2E4(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7F6E0();
  uint64_t v183 = *(void *)(v6 - 8);
  uint64_t v184 = v6;
  uint64_t v7 = *(unsigned __int8 *)(v183 + 80);
  uint64_t v173 = v7 + 16;
  uint64_t v8 = *(void *)(v183 + 64);
  uint64_t v9 = sub_22EE7F5D0();
  uint64_t v170 = *(void *)(v9 - 8);
  uint64_t v171 = v9;
  uint64_t v10 = *(unsigned __int8 *)(v170 + 80);
  uint64_t v11 = v7 | v10 | 7;
  uint64_t v172 = v11 + v8;
  uint64_t v168 = v10 + 16;
  uint64_t v169 = *(void *)(v170 + 64) + v7;
  uint64_t v12 = v8 + 7;
  unint64_t v13 = (v8 + 7 + ((v169 + ((v10 + 16) & ~v10)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v14 = v13 + 8;
  unint64_t v15 = v13 + 9;
  unint64_t v166 = v14;
  if (v15 <= v14) {
    unint64_t v15 = v14;
  }
  if (v15 <= 2) {
    unint64_t v15 = 2;
  }
  unint64_t v182 = v15;
  unint64_t v16 = v15 + ((v11 + v8 + ((v7 + 16) & ~v7)) & ~v11);
  uint64_t v178 = v8 + 7;
  if (v16 + 1 > (v12 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v17 = v16 + 1;
  }
  else {
    unint64_t v17 = (v12 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v17 <= 0x10) {
    uint64_t v18 = 16;
  }
  else {
    uint64_t v18 = v17;
  }
  uint64_t v19 = v18 + 1;
  uint64_t v180 = v18 + 1 + v11;
  if ((v180 & (unint64_t)~v11) + v18 + 1 <= 0x20) {
    uint64_t v20 = 32;
  }
  else {
    uint64_t v20 = (v180 & ~v11) + v18 + 1;
  }
  unsigned int v21 = a2[v20];
  unsigned int v22 = v21 - 2;
  if (v21 >= 2)
  {
    if (v20 <= 3) {
      uint64_t v23 = v20;
    }
    else {
      uint64_t v23 = 4;
    }
    switch(v23)
    {
      case 1:
        int v24 = *a2;
        goto LABEL_23;
      case 2:
        int v24 = *(unsigned __int16 *)a2;
        goto LABEL_23;
      case 3:
        int v24 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_23;
      case 4:
        int v24 = *(_DWORD *)a2;
LABEL_23:
        if (v20 < 4) {
          unsigned int v21 = (v24 | (v22 << (8 * v20))) + 2;
        }
        else {
          unsigned int v21 = v24 + 2;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v179 = ~v7;
  uint64_t v25 = ~v11;
  uint64_t v167 = ~v10;
  if (v21 != 1)
  {
    uint64_t v30 = *((void *)a2 + 1);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v30;
    *(unsigned char *)(a1 + 16) = a2[16];
    *(void *)(a1 + 24) = *((void *)a2 + 3);
    *(unsigned char *)(a1 + v20) = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_91;
  }
  unsigned int v26 = a2[v18];
  unsigned int v27 = v26 - 3;
  if (v26 >= 3)
  {
    if (v18 <= 3) {
      uint64_t v28 = v18;
    }
    else {
      uint64_t v28 = 4;
    }
    switch(v28)
    {
      case 1:
        int v29 = *a2;
        goto LABEL_37;
      case 2:
        int v29 = *(unsigned __int16 *)a2;
        goto LABEL_37;
      case 3:
        int v29 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_37;
      case 4:
        int v29 = *(_DWORD *)a2;
LABEL_37:
        if (v18 < 4) {
          unsigned int v26 = (v29 | (v27 << (8 * v18))) + 3;
        }
        else {
          unsigned int v26 = v29 + 3;
        }
        break;
      default:
        break;
    }
  }
  size_t __n = v18 + 1;
  if (v26 == 2)
  {
    (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v183 + 16))(a1, a2, v184);
    *(_OWORD *)((a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&a2[v8 + 7] & 0xFFFFFFFFFFFFFFF8);
    char v43 = 2;
  }
  else
  {
    if (v26 != 1)
    {
      uint64_t v44 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v44;
      *(unsigned char *)(a1 + v18) = 0;
      swift_bridgeObjectRetain();
      goto LABEL_64;
    }
    uint64_t v157 = v18;
    uint64_t v163 = a3;
    uint64_t v31 = *((void *)a2 + 1);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v31;
    int v32 = &a2[v7];
    uint64_t v33 = (a1 + v7 + 16) & v179;
    uint64_t v34 = (unint64_t)(v32 + 16) & v179;
    unint64_t v35 = *(void (**)(uint64_t, unint64_t, uint64_t))(v183 + 16);
    swift_bridgeObjectRetain();
    unint64_t v153 = v35;
    v35(v33, v34, v184);
    uint64_t v36 = (v33 + v8 + v11) & v25;
    int v37 = (unsigned __int8 *)((v34 + v8 + v11) & v25);
    unint64_t v38 = v182;
    unsigned int v39 = v37[v182];
    unsigned int v40 = v39 - 4;
    if (v39 < 4)
    {
      uint64_t v18 = v157;
    }
    else
    {
      if (v182 <= 3) {
        uint64_t v41 = v182;
      }
      else {
        uint64_t v41 = 4;
      }
      uint64_t v18 = v157;
      switch(v41)
      {
        case 1:
          int v42 = *v37;
          goto LABEL_54;
        case 2:
          int v42 = *(unsigned __int16 *)v37;
          goto LABEL_54;
        case 3:
          int v42 = *(unsigned __int16 *)v37 | (v37[2] << 16);
          goto LABEL_54;
        case 4:
          int v42 = *(_DWORD *)v37;
LABEL_54:
          if (v182 < 4) {
            unsigned int v39 = (v42 | (v40 << (8 * v182))) + 4;
          }
          else {
            unsigned int v39 = v42 + 4;
          }
          break;
        default:
          break;
      }
    }
    switch(v39)
    {
      case 1u:
        *(unsigned char *)uint64_t v36 = *v37;
        char v45 = 1;
        break;
      case 2u:
        *(void *)uint64_t v36 = *(void *)v37;
        *(void *)(v36 + 8) = *((void *)v37 + 1);
        uint64_t v46 = (v168 + v36) & v167;
        unint64_t v47 = (unint64_t)&v37[v168] & v167;
        unint64_t v147 = *(void (**)(uint64_t, unint64_t, uint64_t))(v170 + 16);
        uint64_t v158 = v36;
        swift_bridgeObjectRetain();
        v147(v46, v47, v171);
        uint64_t v48 = (v169 + v46) & v179;
        v153(v48, (v169 + v47) & v179, v184);
        uint64_t v36 = v158;
        unint64_t v38 = v182;
        *(void *)((v178 + v48) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v178 + ((v169 + v47) & v179)) & 0xFFFFFFFFFFFFFFF8);
        *(unsigned char *)(v166 + v158) = v37[v166];
        char v45 = 2;
        break;
      case 3u:
        *(void *)uint64_t v36 = *(void *)v37;
        *(void *)(v36 + 8) = *((void *)v37 + 1);
        uint64_t v49 = (v168 + v36) & v167;
        unint64_t v50 = (unint64_t)&v37[v168] & v167;
        uint64_t v51 = *(void (**)(uint64_t, unint64_t, uint64_t))(v170 + 16);
        uint64_t v159 = v36;
        swift_bridgeObjectRetain();
        v51(v49, v50, v171);
        uint64_t v52 = (v169 + v49) & v179;
        unint64_t v53 = (v169 + v50) & v179;
        v153(v52, v53, v184);
        uint64_t v36 = v159;
        unint64_t v38 = v182;
        *(void *)((v178 + v52) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v178 + v53) & 0xFFFFFFFFFFFFFFF8);
        char v45 = 3;
        break;
      default:
        char v45 = 0;
        *(_WORD *)uint64_t v36 = *(_WORD *)v37;
        break;
    }
    a3 = v163;
    *(unsigned char *)(v36 + v38) = v45;
    char v43 = 1;
  }
  *(unsigned char *)(a1 + v18) = v43;
LABEL_64:
  unsigned int v54 = (void *)((v180 + a1) & v25);
  uint64_t v55 = (void *)((unint64_t)&a2[v180] & v25);
  unsigned int v56 = *((unsigned __int8 *)v55 + v18);
  if (v56 <= 2)
  {
    if (v56 == 2)
    {
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v183 + 16))((v180 + a1) & v25, (unint64_t)&a2[v180] & v25, v184);
      *(_OWORD *)(((unint64_t)v54 + v178) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v55 + v178) & 0xFFFFFFFFFFFFFFF8);
      char v66 = 2;
    }
    else
    {
      if (v56 != 1)
      {
        *unsigned int v54 = *v55;
        *(void *)(((v180 + a1) & v25) + 8) = *(void *)(((unint64_t)&a2[v180] & v25) + 8);
        *((unsigned char *)v54 + v18) = 0;
        swift_bridgeObjectRetain();
LABEL_89:
        uint64_t v19 = __n;
        goto LABEL_90;
      }
      uint64_t v160 = v18;
      uint64_t v164 = a3;
      *unsigned int v54 = *v55;
      *(void *)(((v180 + a1) & v25) + 8) = *(void *)(((unint64_t)&a2[v180] & v25) + 8);
      unint64_t v57 = ((unint64_t)v54 + v173) & v179;
      unint64_t v58 = ((unint64_t)v55 + v173) & v179;
      unint64_t v59 = *(void (**)(unint64_t, unint64_t, uint64_t))(v183 + 16);
      swift_bridgeObjectRetain();
      unint64_t v154 = v59;
      v59(v57, v58, v184);
      unsigned int v60 = (unsigned char *)((v172 + v57) & v25);
      unint64_t v61 = (unsigned __int8 *)((v172 + v58) & v25);
      unsigned int v62 = v61[v182];
      unsigned int v63 = v62 - 4;
      if (v62 < 4)
      {
        uint64_t v18 = v160;
      }
      else
      {
        if (v182 <= 3) {
          uint64_t v64 = v182;
        }
        else {
          uint64_t v64 = 4;
        }
        uint64_t v18 = v160;
        switch(v64)
        {
          case 1:
            int v65 = *v61;
            goto LABEL_80;
          case 2:
            int v65 = *(unsigned __int16 *)v61;
            goto LABEL_80;
          case 3:
            int v65 = *(unsigned __int16 *)v61 | (v61[2] << 16);
            goto LABEL_80;
          case 4:
            int v65 = *(_DWORD *)v61;
LABEL_80:
            int v67 = (v65 | (v63 << (8 * v182))) + 4;
            unsigned int v62 = v65 + 4;
            if (v182 < 4) {
              unsigned int v62 = v67;
            }
            break;
          default:
            break;
        }
      }
      switch(v62)
      {
        case 1u:
          *unsigned int v60 = *v61;
          char v68 = 1;
          break;
        case 2u:
          *(void *)unsigned int v60 = *(void *)v61;
          *(void *)(((v172 + v57) & v25) + 8) = *((void *)v61 + 1);
          unint64_t v69 = (unint64_t)&v60[v168] & v167;
          unint64_t v148 = (unint64_t)&v61[v168] & v167;
          uint64_t v146 = *(void (**)(unint64_t, unint64_t, uint64_t))(v170 + 16);
          swift_bridgeObjectRetain();
          v146(v69, v148, v171);
          unint64_t v70 = (v169 + v69) & v179;
          v154(v70, (v169 + v148) & v179, v184);
          unsigned int v60 = (unsigned char *)((v172 + v57) & v25);
          *(void *)((v178 + v70) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v178 + ((v169 + v148) & v179)) & 0xFFFFFFFFFFFFFFF8);
          v60[v166] = v61[v166];
          char v68 = 2;
          break;
        case 3u:
          *(void *)unsigned int v60 = *(void *)v61;
          *(void *)(((v172 + v57) & v25) + 8) = *((void *)v61 + 1);
          unint64_t v71 = (unint64_t)&v60[v168] & v167;
          unint64_t v72 = (unint64_t)&v61[v168] & v167;
          unint64_t v149 = *(void (**)(unint64_t, unint64_t, uint64_t))(v170 + 16);
          char v161 = v60;
          swift_bridgeObjectRetain();
          v149(v71, v72, v171);
          unint64_t v73 = (v169 + v72) & v179;
          v154((v169 + v71) & v179, v73, v184);
          unsigned int v60 = v161;
          *(void *)((v178 + ((v169 + v71) & v179)) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v178 + v73) & 0xFFFFFFFFFFFFFFF8);
          char v68 = 3;
          break;
        default:
          char v68 = 0;
          *(_WORD *)unsigned int v60 = *(_WORD *)v61;
          break;
      }
      a3 = v164;
      v60[v182] = v68;
      char v66 = 1;
    }
    *((unsigned char *)v54 + v18) = v66;
    goto LABEL_89;
  }
  uint64_t v19 = __n;
  memcpy((void *)((v180 + a1) & v25), (const void *)((unint64_t)&a2[v180] & v25), __n);
LABEL_90:
  *(unsigned char *)(a1 + v20) = 1;
LABEL_91:
  unint64_t v74 = (void *)((v11 + a1 + v20 + 1) & v25);
  uint64_t v75 = (void *)((unint64_t)&a2[v11 + 1 + v20] & v25);
  unsigned int v76 = *((unsigned __int8 *)v75 + v20);
  if (v76 > 1)
  {
    memcpy((void *)((v11 + a1 + v20 + 1) & v25), v75, v20 + 1);
    goto LABEL_152;
  }
  if (v76 != 1)
  {
    *unint64_t v74 = *v75;
    *(void *)(((v11 + a1 + v20 + 1) & v25) + 8) = v75[1];
    *(unsigned char *)(((v11 + a1 + v20 + 1) & v25) + 0x10) = *((unsigned char *)v75 + 16);
    *(void *)(((v11 + a1 + v20 + 1) & v25) + 0x18) = v75[3];
    *((unsigned char *)v74 + v20) = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_152;
  }
  unsigned int v77 = *((unsigned __int8 *)v75 + v18);
  unsigned int v78 = v77 - 3;
  if (v77 >= 3)
  {
    if (v18 <= 3) {
      uint64_t v79 = v18;
    }
    else {
      uint64_t v79 = 4;
    }
    switch(v79)
    {
      case 1:
        int v80 = *(unsigned __int8 *)v75;
        goto LABEL_104;
      case 2:
        int v80 = *(unsigned __int16 *)v75;
        goto LABEL_104;
      case 3:
        int v80 = *(unsigned __int16 *)v75 | (*((unsigned __int8 *)v75 + 2) << 16);
        goto LABEL_104;
      case 4:
        int v80 = *(_DWORD *)v75;
LABEL_104:
        int v81 = (v80 | (v78 << (8 * v18))) + 3;
        unsigned int v77 = v80 + 3;
        if (v18 < 4) {
          unsigned int v77 = v81;
        }
        break;
      default:
        break;
    }
  }
  size_t __na = v19;
  if (v77 == 2)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v183 + 16))((v11 + a1 + v20 + 1) & v25, v75, v184);
    *(_OWORD *)(((unint64_t)v74 + v178) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v75 + v178) & 0xFFFFFFFFFFFFFFF8);
    char v91 = 2;
LABEL_127:
    *((unsigned char *)v74 + v18) = v91;
    goto LABEL_128;
  }
  if (v77 == 1)
  {
    *unint64_t v74 = *v75;
    *(void *)(((v11 + a1 + v20 + 1) & v25) + 8) = v75[1];
    unint64_t v82 = ((unint64_t)v74 + v173) & v179;
    unint64_t v83 = ((unint64_t)v75 + v173) & v179;
    uint64_t v84 = *(void (**)(void))(v183 + 16);
    swift_bridgeObjectRetain();
    uint64_t v162 = v84;
    ((void (*)(unint64_t, unint64_t, uint64_t))v84)(v82, v83, v184);
    unint64_t v85 = (v172 + v82) & v25;
    uint64_t v86 = (unsigned __int8 *)((v172 + v83) & v25);
    unsigned int v87 = v86[v182];
    unsigned int v88 = v87 - 4;
    if (v87 >= 4)
    {
      if (v182 <= 3) {
        uint64_t v89 = v182;
      }
      else {
        uint64_t v89 = 4;
      }
      switch(v89)
      {
        case 1:
          int v90 = *v86;
          goto LABEL_119;
        case 2:
          int v90 = *(unsigned __int16 *)v86;
          goto LABEL_119;
        case 3:
          int v90 = *(unsigned __int16 *)v86 | (*(unsigned __int8 *)(((v172 + v83) & v25) + 2) << 16);
          goto LABEL_119;
        case 4:
          int v90 = *(_DWORD *)v86;
LABEL_119:
          int v92 = (v90 | (v88 << (8 * v182))) + 4;
          unsigned int v87 = v90 + 4;
          if (v182 < 4) {
            unsigned int v87 = v92;
          }
          break;
        default:
          break;
      }
    }
    switch(v87)
    {
      case 1u:
        *(unsigned char *)unint64_t v85 = *v86;
        char v93 = 1;
        break;
      case 2u:
        *(void *)unint64_t v85 = *(void *)v86;
        *(void *)(v85 + 8) = *(void *)(((v172 + v83) & v25) + 8);
        unint64_t v155 = (v168 + v85) & v167;
        unint64_t v151 = (unint64_t)&v86[v168] & v167;
        unint64_t v150 = *(void (**)(unint64_t, unint64_t, uint64_t))(v170 + 16);
        swift_bridgeObjectRetain();
        v150(v155, v151, v171);
        v162();
        *(void *)((v178 + ((v169 + v155) & v179)) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v178 + ((v169 + v151) & v179)) & 0xFFFFFFFFFFFFFFF8);
        *(unsigned char *)(v85 + v166) = v86[v166];
        char v93 = 2;
        break;
      case 3u:
        *(void *)unint64_t v85 = *(void *)v86;
        *(void *)(v85 + 8) = *(void *)(((v172 + v83) & v25) + 8);
        unint64_t v94 = (v168 + v85) & v167;
        unint64_t v156 = v85;
        unint64_t v95 = (unint64_t)&v86[v168] & v167;
        uint64_t v152 = *(void (**)(unint64_t, unint64_t, uint64_t))(v170 + 16);
        swift_bridgeObjectRetain();
        v152(v94, v95, v171);
        uint64_t v96 = (v169 + v94) & v179;
        unint64_t v97 = (v169 + v95) & v179;
        unint64_t v85 = v156;
        ((void (*)(uint64_t, unint64_t, uint64_t))v162)(v96, v97, v184);
        *(void *)((v178 + v96) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v178 + v97) & 0xFFFFFFFFFFFFFFF8);
        char v93 = 3;
        break;
      default:
        char v93 = 0;
        *(_WORD *)unint64_t v85 = *(_WORD *)v86;
        break;
    }
    *(unsigned char *)(v85 + v182) = v93;
    char v91 = 1;
    goto LABEL_127;
  }
  *unint64_t v74 = *v75;
  *(void *)(((v11 + a1 + v20 + 1) & v25) + 8) = v75[1];
  *((unsigned char *)v74 + v18) = 0;
  swift_bridgeObjectRetain();
LABEL_128:
  unsigned int v98 = (void *)(((unint64_t)v74 + v180) & v25);
  unsigned int v99 = (void *)(((unint64_t)v75 + v180) & v25);
  unsigned int v100 = *((unsigned __int8 *)v99 + v18);
  if (v100 > 2)
  {
    memcpy((void *)(((unint64_t)v74 + v180) & v25), (const void *)(((unint64_t)v75 + v180) & v25), __na);
  }
  else if (v100 == 2)
  {
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v183 + 16))(((unint64_t)v74 + v180) & v25, ((unint64_t)v75 + v180) & v25, v184);
    *(_OWORD *)(((unint64_t)v98 + v178) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v99 + v178) & 0xFFFFFFFFFFFFFFF8);
    *((unsigned char *)v98 + v18) = 2;
  }
  else if (v100 == 1)
  {
    uint64_t v165 = a3;
    *unsigned int v98 = *v99;
    *(void *)((((unint64_t)v74 + v180) & v25) + 8) = *(void *)((((unint64_t)v75 + v180) & v25) + 8);
    unint64_t v181 = ((unint64_t)v74 + v180) & v25;
    unint64_t v101 = ((unint64_t)v98 + v173) & v179;
    unint64_t v102 = ((unint64_t)v99 + v173) & v179;
    int v103 = *(void (**)(uint64_t, unint64_t, uint64_t))(v183 + 16);
    swift_bridgeObjectRetain();
    size_t __nb = v103;
    v103(v101, v102, v184);
    unint64_t v104 = (v172 + v101) & v25;
    unint64_t v105 = (unsigned __int8 *)((v172 + v102) & v25);
    unsigned int v106 = v105[v182];
    unsigned int v107 = v106 - 4;
    if (v106 >= 4)
    {
      if (v182 <= 3) {
        uint64_t v108 = v182;
      }
      else {
        uint64_t v108 = 4;
      }
      switch(v108)
      {
        case 1:
          int v109 = *v105;
          goto LABEL_143;
        case 2:
          int v109 = *(unsigned __int16 *)v105;
          goto LABEL_143;
        case 3:
          int v109 = *(unsigned __int16 *)v105 | (v105[2] << 16);
          goto LABEL_143;
        case 4:
          int v109 = *(_DWORD *)v105;
LABEL_143:
          int v110 = (v109 | (v107 << (8 * v182))) + 4;
          unsigned int v106 = v109 + 4;
          if (v182 < 4) {
            unsigned int v106 = v110;
          }
          break;
        default:
          break;
      }
    }
    switch(v106)
    {
      case 1u:
        *(unsigned char *)unint64_t v104 = *v105;
        char v111 = 1;
        break;
      case 2u:
        *(void *)unint64_t v104 = *(void *)v105;
        *(void *)(v104 + 8) = *((void *)v105 + 1);
        unint64_t v112 = (v168 + v104) & v167;
        unint64_t v113 = (unint64_t)&v105[v168] & v167;
        uint64_t v174 = *(void (**)(unint64_t, unint64_t, uint64_t))(v170 + 16);
        swift_bridgeObjectRetain();
        v174(v112, v113, v171);
        uint64_t v114 = (v169 + v112) & v179;
        __nb(v114, (v169 + v113) & v179, v184);
        *(void *)((v178 + v114) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v178 + ((v169 + v113) & v179)) & 0xFFFFFFFFFFFFFFF8);
        *(unsigned char *)(v104 + v166) = v105[v166];
        char v111 = 2;
        break;
      case 3u:
        *(void *)unint64_t v104 = *(void *)v105;
        *(void *)(v104 + 8) = *((void *)v105 + 1);
        unint64_t v115 = (v168 + v104) & v167;
        unint64_t v116 = (unint64_t)&v105[v168] & v167;
        unint64_t v117 = *(void (**)(unint64_t, unint64_t, uint64_t))(v170 + 16);
        swift_bridgeObjectRetain();
        v117(v115, v116, v171);
        uint64_t v118 = (v169 + v115) & v179;
        __nb(v118, (v169 + v116) & v179, v184);
        *(void *)((v178 + v118) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v178 + ((v169 + v116) & v179)) & 0xFFFFFFFFFFFFFFF8);
        char v111 = 3;
        break;
      default:
        char v111 = 0;
        *(_WORD *)unint64_t v104 = *(_WORD *)v105;
        break;
    }
    *(unsigned char *)(v104 + v182) = v111;
    *(unsigned char *)(v181 + v18) = 1;
    a3 = v165;
  }
  else
  {
    *unsigned int v98 = *v99;
    *(void *)((((unint64_t)v74 + v180) & v25) + 8) = *(void *)((((unint64_t)v75 + v180) & v25) + 8);
    *((unsigned char *)v98 + v18) = 0;
    swift_bridgeObjectRetain();
  }
  *((unsigned char *)v74 + v20) = 1;
LABEL_152:
  char v119 = (void *)(((unint64_t)v74 + v20 + 8) & 0xFFFFFFFFFFFFFFF8);
  size_t v120 = (void *)(((unint64_t)v75 + v20 + 8) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v121 = v120[1];
  *char v119 = *v120;
  v119[1] = v121;
  uint64_t v122 = *(void *)(a3 + 16);
  size_t v123 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v122 - 8) + 16);
  uint64_t v124 = *(void *)(v122 - 8) + 16;
  uint64_t v125 = *(unsigned __int8 *)(*(void *)(v122 - 8) + 80);
  uint64_t v126 = ((unint64_t)v119 + v125 + 16) & ~v125;
  uint64_t v127 = ((unint64_t)v120 + v125 + 16) & ~v125;
  swift_retain();
  v123(v126, v127, v122);
  uint64_t v128 = *(void *)(v124 + 48);
  unint64_t v129 = v128 + v126;
  unint64_t v130 = v128 + v127;
  *(unsigned char *)unint64_t v129 = *(unsigned char *)v130;
  unint64_t v131 = v129 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v132 = v130 & 0xFFFFFFFFFFFFFFF8;
  *(void *)((v129 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((v130 & 0xFFFFFFFFFFFFFFF8) + 8);
  unint64_t v133 = ((v129 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v134 = ((v130 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v135 = *(void *)v134;
  LOBYTE(v126) = *(unsigned char *)(v134 + 8);
  swift_bridgeObjectRetain();
  sub_22EADDF00(v135, v126);
  *(void *)unint64_t v133 = v135;
  *(unsigned char *)(v133 + 8) = v126;
  unint64_t v136 = (v131 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v137 = (v132 + 39) & 0xFFFFFFFFFFFFFFF8;
  if (*(unsigned char *)(v137 + 40))
  {
    unint64_t v138 = *(void *)(v137 + 24);
    if (v138 >= 6)
    {
      *(void *)(v136 + 24) = v138;
      *(void *)(v136 + 32) = *(void *)(v137 + 32);
      (**(void (***)(unint64_t))(v138 - 8))((v131 + 39) & 0xFFFFFFFFFFFFFFF8);
    }
    else
    {
      long long v139 = *(_OWORD *)v137;
      long long v140 = *(_OWORD *)(v137 + 16);
      *(void *)(v136 + 32) = *(void *)(v137 + 32);
      *(_OWORD *)unint64_t v136 = v139;
      *(_OWORD *)(v136 + 16) = v140;
    }
    *(unsigned char *)(v136 + 40) = 1;
  }
  else
  {
    *(void *)unint64_t v136 = *(void *)v137;
    *(unsigned char *)(v136 + 40) = 0;
    swift_retain();
  }
  unint64_t v141 = (v131 + 87) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v142 = (v132 + 87) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v143 = *(void *)v142;
  char v144 = *(unsigned char *)(v142 + 8);
  sub_22EADDF00(*(void *)v142, v144);
  *(void *)unint64_t v141 = v143;
  *(unsigned char *)(v141 + 8) = v144;
  return a1;
}

unsigned __int8 *sub_22EDED5F0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  if (a1 != a2)
  {
    uint64_t v6 = sub_22EE7F6E0();
    uint64_t v418 = *(void *)(v6 - 8);
    uint64_t v422 = v6;
    uint64_t v7 = *(unsigned __int8 *)(v418 + 80);
    uint64_t v371 = v7 + 16;
    uint64_t v8 = *(void *)(v418 + 64);
    uint64_t v9 = sub_22EE7F5D0();
    uint64_t v401 = *(void *)(v9 - 8);
    uint64_t v408 = v9;
    uint64_t v10 = *(unsigned __int8 *)(v401 + 80);
    uint64_t v11 = v7 | v10 | 7;
    uint64_t v366 = v11 + v8;
    uint64_t v393 = v10 + 16;
    uint64_t v397 = *(void *)(v401 + 64) + v7;
    uint64_t v12 = v8 + 7;
    unint64_t v13 = (v8 + 7 + ((v397 + ((v10 + 16) & ~v10)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v14 = v13 + 8;
    unint64_t v15 = v13 + 9;
    unint64_t v363 = v14;
    if (v15 <= v14) {
      unint64_t v15 = v14;
    }
    if (v15 <= 2) {
      unint64_t v15 = 2;
    }
    unint64_t v413 = v15;
    unint64_t v16 = v15 + ((v11 + v8 + ((v7 + 16) & ~v7)) & ~v11);
    uint64_t v378 = v8 + 7;
    if (v16 + 1 > (v12 & 0xFFFFFFFFFFFFFFF8) + 16) {
      unint64_t v17 = v16 + 1;
    }
    else {
      unint64_t v17 = (v12 & 0xFFFFFFFFFFFFFFF8) + 16;
    }
    if (v17 <= 0x10) {
      uint64_t v18 = 16;
    }
    else {
      uint64_t v18 = v17;
    }
    uint64_t v19 = v18 + 1 + v11;
    if ((v19 & (unint64_t)~v11) + v18 + 1 <= 0x20) {
      uint64_t v20 = 32;
    }
    else {
      uint64_t v20 = (v19 & ~v11) + v18 + 1;
    }
    unsigned int v21 = a1[v20];
    unsigned int v22 = v21 - 2;
    if (v21 >= 2)
    {
      if (v20 <= 3) {
        uint64_t v23 = v20;
      }
      else {
        uint64_t v23 = 4;
      }
      switch(v23)
      {
        case 1:
          int v24 = *a1;
          goto LABEL_24;
        case 2:
          int v24 = *(unsigned __int16 *)a1;
          goto LABEL_24;
        case 3:
          int v24 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_24;
        case 4:
          int v24 = *(_DWORD *)a1;
LABEL_24:
          if (v20 < 4) {
            unsigned int v21 = (v24 | (v22 << (8 * v20))) + 2;
          }
          else {
            unsigned int v21 = v24 + 2;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v415 = ~v7;
    uint64_t v389 = ~v10;
    uint64_t v424 = ~v11;
    if (v21 == 1)
    {
      unsigned int v25 = a1[v18];
      unsigned int v26 = v25 - 3;
      if (v25 >= 3)
      {
        if (v18 <= 3) {
          uint64_t v27 = v18;
        }
        else {
          uint64_t v27 = 4;
        }
        switch(v27)
        {
          case 1:
            int v28 = *a1;
            goto LABEL_39;
          case 2:
            int v28 = *(unsigned __int16 *)a1;
            goto LABEL_39;
          case 3:
            int v28 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            goto LABEL_39;
          case 4:
            int v28 = *(_DWORD *)a1;
LABEL_39:
            if (v18 < 4) {
              unsigned int v25 = (v28 | (v26 << (8 * v18))) + 3;
            }
            else {
              unsigned int v25 = v28 + 3;
            }
            break;
          default:
            break;
        }
      }
      if (v25 == 2)
      {
        (*(void (**)(unsigned __int8 *, uint64_t))(v418 + 8))(a1, v422);
      }
      else if (v25 == 1)
      {
        swift_bridgeObjectRelease();
        v358 = *(void (**)(unint64_t, uint64_t))(v418 + 8);
        v358((unint64_t)&a1[v7 + 16] & v415, v422);
        int v29 = (unsigned __int8 *)((((unint64_t)&a1[v7 + 16] & v415) + v8 + v11) & v424);
        unsigned int v30 = v29[v413];
        unsigned int v31 = v30 - 4;
        if (v30 >= 4)
        {
          if (v413 <= 3) {
            uint64_t v32 = v413;
          }
          else {
            uint64_t v32 = 4;
          }
          switch(v32)
          {
            case 1:
              int v33 = *v29;
              goto LABEL_55;
            case 2:
              int v33 = *(unsigned __int16 *)v29;
              goto LABEL_55;
            case 3:
              int v33 = *(unsigned __int16 *)v29 | (v29[2] << 16);
              goto LABEL_55;
            case 4:
              int v33 = *(_DWORD *)v29;
LABEL_55:
              if (v413 < 4) {
                unsigned int v30 = (v33 | (v31 << (8 * v413))) + 4;
              }
              else {
                unsigned int v30 = v33 + 4;
              }
              break;
            default:
              break;
          }
        }
        if (v30 >= 2)
        {
          swift_bridgeObjectRelease();
          unint64_t v34 = (unint64_t)&v29[v393] & v389;
          (*(void (**)(unint64_t, uint64_t))(v401 + 8))(v34, v408);
          v358((v397 + v34) & v415, v422);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      unint64_t v35 = (unint64_t)&a1[v19] & v424;
      unsigned int v36 = *(unsigned __int8 *)(v35 + v18);
      if (v36 > 2)
      {
LABEL_79:
        unsigned int v44 = a2[v20];
        unsigned int v45 = v44 - 2;
        if (v44 >= 2)
        {
          if (v20 <= 3) {
            uint64_t v46 = v20;
          }
          else {
            uint64_t v46 = 4;
          }
          switch(v46)
          {
            case 1:
              int v47 = *a2;
              goto LABEL_88;
            case 2:
              int v47 = *(unsigned __int16 *)a2;
              goto LABEL_88;
            case 3:
              int v47 = *(unsigned __int16 *)a2 | (a2[2] << 16);
              goto LABEL_88;
            case 4:
              int v47 = *(_DWORD *)a2;
LABEL_88:
              if (v20 < 4) {
                unsigned int v44 = (v47 | (v45 << (8 * v20))) + 2;
              }
              else {
                unsigned int v44 = v47 + 2;
              }
              break;
            default:
              break;
          }
        }
        if (v44 != 1)
        {
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = *((void *)a2 + 1);
          a1[16] = a2[16];
          *((void *)a1 + 3) = *((void *)a2 + 3);
          a1[v20] = 0;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v3 = a3;
          goto LABEL_155;
        }
        unsigned int v48 = a2[v18];
        unsigned int v49 = v48 - 3;
        if (v48 >= 3)
        {
          if (v18 <= 3) {
            uint64_t v50 = v18;
          }
          else {
            uint64_t v50 = 4;
          }
          switch(v50)
          {
            case 1:
              int v51 = *a2;
              goto LABEL_102;
            case 2:
              int v51 = *(unsigned __int16 *)a2;
              goto LABEL_102;
            case 3:
              int v51 = *(unsigned __int16 *)a2 | (a2[2] << 16);
              goto LABEL_102;
            case 4:
              int v51 = *(_DWORD *)a2;
LABEL_102:
              if (v18 < 4) {
                unsigned int v48 = (v51 | (v49 << (8 * v18))) + 3;
              }
              else {
                unsigned int v48 = v51 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v48 == 2)
        {
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v418 + 16))(a1, a2, v422);
          *(_OWORD *)((unint64_t)&a1[v8 + 7] & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&a2[v8 + 7] & 0xFFFFFFFFFFFFFFF8);
          a1[v18] = 2;
        }
        else
        {
          if (v48 == 1)
          {
            uint64_t v360 = v18 + 1 + v11;
            *(void *)a1 = *(void *)a2;
            *((void *)a1 + 1) = *((void *)a2 + 1);
            uint64_t v52 = (unint64_t)&a1[v7 + 16] & v415;
            uint64_t v53 = (unint64_t)&a2[v7 + 16] & v415;
            unsigned int v54 = *(void (**)(uint64_t, unint64_t, uint64_t))(v418 + 16);
            swift_bridgeObjectRetain();
            v353 = v54;
            v54(v52, v53, v422);
            uint64_t v55 = v8 + v11;
            uint64_t v56 = (v52 + v8 + v11) & v424;
            unint64_t v57 = (unsigned __int8 *)((v53 + v55) & v424);
            unint64_t v58 = v413;
            unsigned int v59 = v57[v413];
            unsigned int v60 = v59 - 4;
            if (v59 < 4)
            {
              uint64_t v19 = v360;
            }
            else
            {
              if (v413 <= 3) {
                uint64_t v61 = v413;
              }
              else {
                uint64_t v61 = 4;
              }
              uint64_t v19 = v360;
              switch(v61)
              {
                case 1:
                  int v62 = *v57;
                  goto LABEL_120;
                case 2:
                  int v62 = *(unsigned __int16 *)v57;
                  goto LABEL_120;
                case 3:
                  int v62 = *(unsigned __int16 *)v57 | (v57[2] << 16);
                  goto LABEL_120;
                case 4:
                  int v62 = *(_DWORD *)v57;
LABEL_120:
                  if (v413 < 4) {
                    unsigned int v59 = (v62 | (v60 << (8 * v413))) + 4;
                  }
                  else {
                    unsigned int v59 = v62 + 4;
                  }
                  break;
                default:
                  break;
              }
            }
            switch(v59)
            {
              case 1u:
                *(unsigned char *)uint64_t v56 = *v57;
                char v64 = 1;
                break;
              case 2u:
                *(void *)uint64_t v56 = *(void *)v57;
                *(void *)(v56 + 8) = *((void *)v57 + 1);
                uint64_t v65 = (v393 + v56) & v389;
                unint64_t v66 = (unint64_t)&v57[v393] & v389;
                v361 = *(void (**)(uint64_t, unint64_t, uint64_t))(v401 + 16);
                swift_bridgeObjectRetain();
                v361(v65, v66, v408);
                unint64_t v67 = (v397 + v66) & v415;
                v353((v397 + v65) & v415, v67, v422);
                unint64_t v58 = v413;
                *(void *)((v378 + ((v397 + v65) & v415)) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v378 + v67) & 0xFFFFFFFFFFFFFFF8);
                *(unsigned char *)(v363 + v56) = v57[v363];
                char v64 = 2;
                break;
              case 3u:
                *(void *)uint64_t v56 = *(void *)v57;
                *(void *)(v56 + 8) = *((void *)v57 + 1);
                uint64_t v68 = (v393 + v56) & v389;
                unint64_t v69 = (unint64_t)&v57[v393] & v389;
                unint64_t v70 = *(void (**)(uint64_t, unint64_t, uint64_t))(v401 + 16);
                swift_bridgeObjectRetain();
                v70(v68, v69, v408);
                uint64_t v71 = (v397 + v68) & v415;
                unint64_t v72 = (v397 + v69) & v415;
                v353(v71, v72, v422);
                unint64_t v58 = v413;
                *(void *)((v378 + v71) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v378 + v72) & 0xFFFFFFFFFFFFFFF8);
                char v64 = 3;
                break;
              default:
                char v64 = 0;
                *(_WORD *)uint64_t v56 = *(_WORD *)v57;
                break;
            }
            uint64_t v63 = v424;
            *(unsigned char *)(v56 + v58) = v64;
            a1[v18] = 1;
LABEL_129:
            unint64_t v73 = (void *)((unint64_t)&a1[v19] & v63);
            unint64_t v74 = (void *)((unint64_t)&a2[v19] & v63);
            unsigned int v75 = *((unsigned __int8 *)v74 + v18);
            if (v75 > 2)
            {
              memcpy((void *)((unint64_t)&a1[v19] & v63), (const void *)((unint64_t)&a2[v19] & v63), v18 + 1);
            }
            else
            {
              if (v75 == 2)
              {
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v418 + 16))((unint64_t)&a1[v19] & v63, (unint64_t)&a2[v19] & v63, v422);
                *(_OWORD *)(((unint64_t)v73 + v378) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v74
                                                                                                + v378) & 0xFFFFFFFFFFFFFFF8);
                char v87 = 2;
LABEL_153:
                *((unsigned char *)v73 + v18) = v87;
                goto LABEL_154;
              }
              if (v75 == 1)
              {
                *unint64_t v73 = *v74;
                *(void *)(((unint64_t)&a1[v19] & v63) + 8) = *(void *)(((unint64_t)&a2[v19] & v63) + 8);
                uint64_t v76 = v63;
                unint64_t v77 = ((unint64_t)v73 + v371) & v415;
                unint64_t v78 = ((unint64_t)v74 + v371) & v415;
                uint64_t v79 = *(void (**)(uint64_t, unint64_t, uint64_t))(v418 + 16);
                swift_bridgeObjectRetain();
                size_t __n = v79;
                v79(v77, v78, v422);
                unint64_t v80 = (v366 + v77) & v76;
                int v81 = (unsigned __int8 *)((v366 + v78) & v76);
                unint64_t v82 = v413;
                unsigned int v83 = v81[v413];
                unsigned int v84 = v83 - 4;
                if (v83 >= 4)
                {
                  if (v413 <= 3) {
                    uint64_t v85 = v413;
                  }
                  else {
                    uint64_t v85 = 4;
                  }
                  switch(v85)
                  {
                    case 1:
                      int v86 = *v81;
                      goto LABEL_144;
                    case 2:
                      int v86 = *(unsigned __int16 *)v81;
                      goto LABEL_144;
                    case 3:
                      int v86 = *(unsigned __int16 *)v81 | (v81[2] << 16);
                      goto LABEL_144;
                    case 4:
                      int v86 = *(_DWORD *)v81;
LABEL_144:
                      if (v413 < 4) {
                        unsigned int v83 = (v86 | (v84 << (8 * v413))) + 4;
                      }
                      else {
                        unsigned int v83 = v86 + 4;
                      }
                      break;
                    default:
                      break;
                  }
                }
                switch(v83)
                {
                  case 1u:
                    *(unsigned char *)unint64_t v80 = *v81;
                    char v88 = 1;
                    break;
                  case 2u:
                    *(void *)unint64_t v80 = *(void *)v81;
                    *(void *)(v80 + 8) = *((void *)v81 + 1);
                    unint64_t v89 = (v393 + v80) & v389;
                    unint64_t v90 = (unint64_t)&v81[v393] & v389;
                    v425 = *(void (**)(unint64_t, unint64_t, uint64_t))(v401 + 16);
                    swift_bridgeObjectRetain();
                    v425(v89, v90, v408);
                    uint64_t v91 = (v397 + v89) & v415;
                    __n(v91, (v397 + v90) & v415, v422);
                    unint64_t v82 = v413;
                    *(void *)((v378 + v91) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v378 + ((v397 + v90) & v415)) & 0xFFFFFFFFFFFFFFF8);
                    *(unsigned char *)(v80 + v363) = v81[v363];
                    char v88 = 2;
                    break;
                  case 3u:
                    *(void *)unint64_t v80 = *(void *)v81;
                    *(void *)(v80 + 8) = *((void *)v81 + 1);
                    unint64_t v92 = (v393 + v80) & v389;
                    unint64_t v93 = (unint64_t)&v81[v393] & v389;
                    v426 = *(void (**)(unint64_t, unint64_t, uint64_t))(v401 + 16);
                    swift_bridgeObjectRetain();
                    v426(v92, v93, v408);
                    uint64_t v94 = (v397 + v92) & v415;
                    __n(v94, (v397 + v93) & v415, v422);
                    unint64_t v82 = v413;
                    *(void *)((v378 + v94) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v378 + ((v397 + v93) & v415)) & 0xFFFFFFFFFFFFFFF8);
                    char v88 = 3;
                    break;
                  default:
                    char v88 = 0;
                    *(_WORD *)unint64_t v80 = *(_WORD *)v81;
                    break;
                }
                *(unsigned char *)(v80 + v82) = v88;
                char v87 = 1;
                goto LABEL_153;
              }
              *unint64_t v73 = *v74;
              *(void *)(((unint64_t)&a1[v19] & v63) + 8) = *(void *)(((unint64_t)&a2[v19] & v63) + 8);
              *((unsigned char *)v73 + v18) = 0;
              swift_bridgeObjectRetain();
            }
LABEL_154:
            uint64_t v3 = a3;
            a1[v20] = 1;
            goto LABEL_155;
          }
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = *((void *)a2 + 1);
          a1[v18] = 0;
          swift_bridgeObjectRetain();
        }
        uint64_t v63 = ~v11;
        goto LABEL_129;
      }
      if (v36 == 2)
      {
        (*(void (**)(unint64_t, uint64_t))(v418 + 8))((unint64_t)&a1[v19] & v424, v422);
        goto LABEL_79;
      }
      if (v36 == 1)
      {
        swift_bridgeObjectRelease();
        unint64_t v37 = (v371 + v35) & v415;
        v359 = *(void (**)(unint64_t, uint64_t))(v418 + 8);
        v359(v37, v422);
        unint64_t v38 = (unsigned __int8 *)((v366 + v37) & v424);
        unsigned int v39 = v38[v413];
        unsigned int v40 = v39 - 4;
        if (v39 >= 4)
        {
          if (v413 <= 3) {
            uint64_t v41 = v413;
          }
          else {
            uint64_t v41 = 4;
          }
          switch(v41)
          {
            case 1:
              int v42 = *v38;
              goto LABEL_74;
            case 2:
              int v42 = *(unsigned __int16 *)v38;
              goto LABEL_74;
            case 3:
              int v42 = *(unsigned __int16 *)v38 | (v38[2] << 16);
              goto LABEL_74;
            case 4:
              int v42 = *(_DWORD *)v38;
LABEL_74:
              if (v413 < 4) {
                unsigned int v39 = (v42 | (v40 << (8 * v413))) + 4;
              }
              else {
                unsigned int v39 = v42 + 4;
              }
              break;
            default:
              break;
          }
        }
        if (v39 >= 2)
        {
          swift_bridgeObjectRelease();
          unint64_t v43 = (unint64_t)&v38[v393] & v389;
          (*(void (**)(unint64_t, uint64_t))(v401 + 8))(v43, v408);
          v359((v397 + v43) & v415, v422);
        }
        goto LABEL_79;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    goto LABEL_79;
  }
LABEL_155:
  uint64_t v95 = sub_22EE7F6E0();
  uint64_t v96 = *(void *)(v95 - 8);
  uint64_t v97 = *(unsigned __int8 *)(v96 + 80);
  uint64_t v423 = ~v97;
  uint64_t v427 = v95;
  uint64_t v419 = v97 + 16;
  uint64_t v98 = *(void *)(v96 + 64);
  uint64_t v99 = sub_22EE7F5D0();
  uint64_t v100 = *(unsigned __int8 *)(*(void *)(v99 - 8) + 80);
  uint64_t v101 = v97 | v100 | 7;
  size_t v102 = v101 + v98;
  uint64_t v103 = (v101 + v98 + ((v97 + 16) & ~v97)) & ~v101;
  uint64_t v104 = ~v100;
  uint64_t v105 = v100 + 16;
  uint64_t v106 = *(void *)(*(void *)(v99 - 8) + 64);
  uint64_t v107 = v106 + v97;
  uint64_t v108 = v98 + 7;
  unint64_t v109 = (v98 + 7 + ((v106 + v97 + ((v100 + 16) & ~v100)) & ~v97)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v110 = v109 + 8;
  unint64_t v111 = v109 + 9;
  if (v111 <= v110) {
    unint64_t v111 = v110;
  }
  if (v111 <= 2) {
    uint64_t v112 = 2;
  }
  else {
    uint64_t v112 = v111;
  }
  if (v112 + v103 + 1 > (v108 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v113 = v112 + v103 + 1;
  }
  else {
    unint64_t v113 = (v108 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v113 <= 0x10) {
    uint64_t v114 = 16;
  }
  else {
    uint64_t v114 = v113;
  }
  size_t v115 = v114 + 1;
  uint64_t v116 = v114 + 1 + v101;
  if ((v116 & (unint64_t)~v101) + v114 + 1 <= 0x20) {
    uint64_t v117 = 32;
  }
  else {
    uint64_t v117 = (v116 & ~v101) + v114 + 1;
  }
  size_t v118 = v117 + 1;
  uint64_t v119 = v117 + 1 + v101;
  unint64_t v120 = (unint64_t)&a1[v119] & ~v101;
  unint64_t v121 = (unint64_t)&a2[v119] & ~v101;
  unsigned int v122 = *(unsigned __int8 *)(v120 + v117);
  unsigned int v123 = *(unsigned __int8 *)(v121 + v117);
  if (v122 <= 1)
  {
    if (v123 <= 1)
    {
      if (v120 == v121) {
        goto LABEL_406;
      }
      uint64_t v414 = v96;
      uint64_t v416 = v112;
      uint64_t v390 = v99;
      uint64_t v394 = v107;
      uint64_t v402 = v104;
      uint64_t v409 = *(void *)(v99 - 8);
      uint64_t v398 = v105;
      uint64_t v362 = v108;
      unint64_t v364 = v110;
      if (v122 == 1)
      {
        unsigned int v124 = *(unsigned __int8 *)(v120 + v114);
        unsigned int v125 = v124 - 3;
        if (v124 >= 3)
        {
          if (v114 <= 3) {
            uint64_t v126 = v114;
          }
          else {
            uint64_t v126 = 4;
          }
          switch(v126)
          {
            case 1:
              int v127 = *(unsigned __int8 *)v120;
              goto LABEL_233;
            case 2:
              int v127 = *(unsigned __int16 *)v120;
              goto LABEL_233;
            case 3:
              int v127 = *(unsigned __int16 *)v120 | (*(unsigned __int8 *)(v120 + 2) << 16);
              goto LABEL_233;
            case 4:
              int v127 = *(_DWORD *)v120;
LABEL_233:
              int v181 = (v127 | (v125 << (8 * v114))) + 3;
              unsigned int v124 = v127 + 3;
              if (v114 < 4) {
                unsigned int v124 = v181;
              }
              break;
            default:
              break;
          }
        }
        uint64_t v368 = v114;
        if (v124 == 2)
        {
          size_t v188 = v102;
          uint64_t v189 = ~v101;
          uint64_t v190 = v114 + 1 + v101;
          (*(void (**)(unint64_t, uint64_t))(v96 + 8))(v120, v427);
          uint64_t v140 = v190;
          uint64_t v141 = v189;
          size_t v102 = v188;
        }
        else if (v124 == 1)
        {
          uint64_t v182 = v114 + 1 + v101;
          uint64_t v381 = ~v101;
          swift_bridgeObjectRelease();
          v350 = *(void (**)(unint64_t, uint64_t))(v414 + 8);
          v350((v419 + v120) & v423, v427);
          uint64_t v141 = v381;
          uint64_t v183 = (unsigned __int8 *)((v102 + ((v419 + v120) & v423)) & v381);
          unsigned int v184 = v183[v416];
          unsigned int v185 = v184 - 4;
          if (v184 < 4)
          {
            uint64_t v140 = v182;
          }
          else
          {
            if (v416 <= 3) {
              uint64_t v186 = v416;
            }
            else {
              uint64_t v186 = 4;
            }
            uint64_t v140 = v182;
            switch(v186)
            {
              case 1:
                int v187 = *v183;
                goto LABEL_288;
              case 2:
                int v187 = *(unsigned __int16 *)v183;
                goto LABEL_288;
              case 3:
                int v187 = *(unsigned __int16 *)((v102 + ((v419 + v120) & v423)) & v381) | (*(unsigned __int8 *)(((v102 + ((v419 + v120) & v423)) & v381) + 2) << 16);
                goto LABEL_288;
              case 4:
                int v187 = *(_DWORD *)v183;
LABEL_288:
                int v227 = (v187 | (v185 << (8 * v416))) + 4;
                unsigned int v184 = v187 + 4;
                if (v416 < 4) {
                  unsigned int v184 = v227;
                }
                break;
              default:
                break;
            }
          }
          if (v184 >= 2)
          {
            if (v184 == 3)
            {
              swift_bridgeObjectRelease();
              unint64_t v228 = (unint64_t)&v183[v398] & v402;
              (*(void (**)(unint64_t, uint64_t))(v409 + 8))(v228, v390);
              v350((v394 + v228) & v423, v427);
              uint64_t v140 = v182;
              uint64_t v141 = v381;
            }
            else
            {
              swift_bridgeObjectRelease();
              unint64_t v229 = (unint64_t)&v183[v398] & v402;
              (*(void (**)(unint64_t, uint64_t))(v409 + 8))(v229, v390);
              v350((v394 + v229) & v423, v427);
              uint64_t v141 = v381;
              uint64_t v140 = v182;
            }
          }
        }
        else
        {
          uint64_t v374 = v114 + 1 + v101;
          size_t v191 = v102;
          uint64_t v192 = ~v101;
          swift_bridgeObjectRelease();
          uint64_t v141 = v192;
          size_t v102 = v191;
          uint64_t v140 = v374;
        }
        unint64_t v230 = (v140 + v120) & v141;
        uint64_t v142 = v368;
        unsigned int v231 = *(unsigned __int8 *)(v230 + v368);
        if (v231 > 2)
        {
LABEL_332:
          unsigned int v257 = *(unsigned __int8 *)(v121 + v117);
          unsigned int v258 = v257 - 2;
          if (v257 < 2)
          {
            uint64_t v3 = a3;
            uint64_t v260 = v414;
          }
          else
          {
            if (v117 <= 3) {
              uint64_t v259 = v117;
            }
            else {
              uint64_t v259 = 4;
            }
            uint64_t v3 = a3;
            uint64_t v260 = v414;
            switch(v259)
            {
              case 1:
                int v261 = *(unsigned __int8 *)v121;
                goto LABEL_342;
              case 2:
                int v261 = *(unsigned __int16 *)v121;
                goto LABEL_342;
              case 3:
                int v261 = *(unsigned __int16 *)v121 | (*(unsigned __int8 *)(v121 + 2) << 16);
                goto LABEL_342;
              case 4:
                int v261 = *(_DWORD *)v121;
LABEL_342:
                int v262 = (v261 | (v258 << (8 * v117))) + 2;
                unsigned int v257 = v261 + 2;
                if (v117 < 4) {
                  unsigned int v257 = v262;
                }
                break;
              default:
                break;
            }
          }
          if (v257 == 1)
          {
            unsigned int v263 = *(unsigned __int8 *)(v121 + v142);
            unsigned int v264 = v263 - 3;
            if (v263 >= 3)
            {
              if (v142 <= 3) {
                uint64_t v265 = v142;
              }
              else {
                uint64_t v265 = 4;
              }
              switch(v265)
              {
                case 1:
                  int v266 = *(unsigned __int8 *)v121;
                  goto LABEL_355;
                case 2:
                  int v266 = *(unsigned __int16 *)v121;
                  goto LABEL_355;
                case 3:
                  int v266 = *(unsigned __int16 *)v121 | (*(unsigned __int8 *)(v121 + 2) << 16);
                  goto LABEL_355;
                case 4:
                  int v266 = *(_DWORD *)v121;
LABEL_355:
                  int v267 = (v266 | (v264 << (8 * v142))) + 3;
                  unsigned int v263 = v266 + 3;
                  if (v142 < 4) {
                    unsigned int v263 = v267;
                  }
                  break;
                default:
                  break;
              }
            }
            size_t __nc = v102;
            if (v263 == 2)
            {
              uint64_t v280 = v141;
              uint64_t v281 = v142;
              uint64_t v282 = v140;
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v260 + 16))(v120, v121, v427);
              uint64_t v283 = v282;
              uint64_t v270 = v280;
              uint64_t v164 = v281;
              uint64_t v108 = v362;
              *(_OWORD *)((v362 + v120) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v362 + v121) & 0xFFFFFFFFFFFFFFF8);
              *(unsigned char *)(v120 + v281) = 2;
            }
            else
            {
              uint64_t v377 = v140;
              uint64_t v384 = v141;
              if (v263 == 1)
              {
                uint64_t v370 = v142;
                *(void *)unint64_t v120 = *(void *)v121;
                *(void *)(v120 + 8) = *(void *)(v121 + 8);
                unint64_t v268 = *(void (**)(unint64_t))(v260 + 16);
                swift_bridgeObjectRetain();
                unint64_t v269 = (v419 + v121) & v423;
                v348 = v268;
                ((void (*)(unint64_t, unint64_t, uint64_t))v268)((v419 + v120) & v423, v269, v427);
                uint64_t v270 = v384;
                uint64_t v271 = (unsigned char *)((v102 + ((v419 + v120) & v423)) & v384);
                uint64_t v272 = (unsigned __int8 *)((v102 + v269) & v384);
                unsigned int v273 = v272[v416];
                unsigned int v274 = v273 - 4;
                uint64_t v108 = v362;
                if (v273 < 4)
                {
                  uint64_t v276 = v402;
                  uint64_t v277 = v409;
                  uint64_t v278 = v398;
                }
                else
                {
                  if (v416 <= 3) {
                    uint64_t v275 = v416;
                  }
                  else {
                    uint64_t v275 = 4;
                  }
                  uint64_t v276 = v402;
                  uint64_t v277 = v409;
                  uint64_t v278 = v398;
                  switch(v275)
                  {
                    case 1:
                      int v279 = *v272;
                      goto LABEL_371;
                    case 2:
                      int v279 = *(unsigned __int16 *)v272;
                      goto LABEL_371;
                    case 3:
                      int v279 = *(unsigned __int16 *)v272 | (v272[2] << 16);
                      goto LABEL_371;
                    case 4:
                      int v279 = *(_DWORD *)v272;
LABEL_371:
                      int v285 = (v279 | (v274 << (8 * v416))) + 4;
                      unsigned int v273 = v279 + 4;
                      if (v416 < 4) {
                        unsigned int v273 = v285;
                      }
                      break;
                    default:
                      break;
                  }
                }
                switch(v273)
                {
                  case 1u:
                    unsigned char *v271 = *v272;
                    char v286 = 1;
                    break;
                  case 2u:
                    *(void *)uint64_t v271 = *(void *)v272;
                    *(void *)(((v102 + ((v419 + v120) & v423)) & v384) + 8) = *((void *)v272 + 1);
                    unint64_t v351 = (unint64_t)&v271[v278] & v276;
                    unint64_t v345 = (unint64_t)&v272[v278] & v276;
                    v342 = *(void (**)(unint64_t, unint64_t, uint64_t))(v277 + 16);
                    swift_bridgeObjectRetain();
                    v342(v351, v345, v390);
                    unint64_t v287 = (v394 + v351) & v423;
                    v348(v287);
                    uint64_t v271 = (unsigned char *)((v102 + ((v419 + v120) & v423)) & v384);
                    uint64_t v270 = v384;
                    *(void *)((v362 + v287) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v362 + ((v394 + v345) & v423)) & 0xFFFFFFFFFFFFFFF8);
                    v271[v364] = v272[v364];
                    char v286 = 2;
                    break;
                  case 3u:
                    *(void *)uint64_t v271 = *(void *)v272;
                    *(void *)(((v102 + ((v419 + v120) & v423)) & v384) + 8) = *((void *)v272 + 1);
                    unint64_t v346 = (unint64_t)&v271[v278] & v276;
                    unint64_t v352 = (unint64_t)&v272[v278] & v276;
                    v343 = *(void (**)(unint64_t, unint64_t, uint64_t))(v277 + 16);
                    swift_bridgeObjectRetain();
                    v343(v346, v352, v390);
                    unint64_t v288 = (v394 + v346) & v423;
                    ((void (*)(unint64_t, unint64_t, uint64_t))v348)(v288, (v394 + v352) & v423, v427);
                    uint64_t v271 = (unsigned char *)((v102 + ((v419 + v120) & v423)) & v384);
                    uint64_t v270 = v384;
                    *(void *)((v362 + v288) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v362 + ((v394 + v352) & v423)) & 0xFFFFFFFFFFFFFFF8);
                    char v286 = 3;
                    break;
                  default:
                    char v286 = 0;
                    *(_WORD *)uint64_t v271 = *(_WORD *)v272;
                    break;
                }
                uint64_t v164 = v370;
                uint64_t v283 = v377;
                v271[v416] = v286;
                *(unsigned char *)(v120 + v370) = 1;
              }
              else
              {
                uint64_t v108 = v362;
                *(void *)unint64_t v120 = *(void *)v121;
                *(void *)(v120 + 8) = *(void *)(v121 + 8);
                *(unsigned char *)(v120 + v142) = 0;
                uint64_t v284 = v142;
                swift_bridgeObjectRetain();
                uint64_t v164 = v284;
                uint64_t v283 = v377;
                uint64_t v270 = v384;
              }
            }
            uint64_t v202 = (void *)((v283 + v120) & v270);
            uint64_t v203 = (void *)((v283 + v121) & v270);
            unsigned int v289 = *((unsigned __int8 *)v203 + v164);
            if (v289 <= 2)
            {
              if (v289 != 2)
              {
                if (v289 == 1)
                {
                  uint64_t v369 = v164;
                  *uint64_t v202 = *v203;
                  *(void *)(((v283 + v120) & v270) + 8) = *(void *)(((v283 + v121) & v270) + 8);
                  unint64_t v375 = (v283 + v120) & v270;
                  unint64_t v290 = ((unint64_t)v202 + v419) & v423;
                  unint64_t v291 = ((unint64_t)v203 + v419) & v423;
                  unint64_t v292 = *(void (**)(unint64_t, unint64_t, uint64_t))(v414 + 16);
                  uint64_t v293 = v270;
                  swift_bridgeObjectRetain();
                  v421 = v292;
                  v292(v290, v291, v427);
                  uint64_t v207 = (void *)((__nc + v290) & v293);
                  unint64_t v208 = (unsigned __int8 *)((__nc + v291) & v293);
                  unsigned int v294 = v208[v416];
                  unsigned int v295 = v294 - 4;
                  if (v294 < 4)
                  {
                    uint64_t v298 = v402;
                    uint64_t v297 = v409;
                    uint64_t v299 = v398;
                    uint64_t v300 = v362;
                  }
                  else
                  {
                    if (v416 <= 3) {
                      uint64_t v296 = v416;
                    }
                    else {
                      uint64_t v296 = 4;
                    }
                    uint64_t v298 = v402;
                    uint64_t v297 = v409;
                    uint64_t v299 = v398;
                    uint64_t v300 = v362;
                    switch(v296)
                    {
                      case 1:
                        int v301 = *v208;
                        goto LABEL_395;
                      case 2:
                        int v301 = *(unsigned __int16 *)v208;
                        goto LABEL_395;
                      case 3:
                        int v301 = *(unsigned __int16 *)v208 | (v208[2] << 16);
                        goto LABEL_395;
                      case 4:
                        int v301 = *(_DWORD *)v208;
LABEL_395:
                        int v303 = (v301 | (v295 << (8 * v416))) + 4;
                        unsigned int v294 = v301 + 4;
                        if (v416 < 4) {
                          unsigned int v294 = v303;
                        }
                        break;
                      default:
                        break;
                    }
                  }
                  switch(v294)
                  {
                    case 1u:
                      goto LABEL_399;
                    case 2u:
                      *uint64_t v207 = *(void *)v208;
                      v207[1] = *((void *)v208 + 1);
                      unint64_t v305 = ((unint64_t)v207 + v299) & v298;
                      unint64_t v306 = (unint64_t)&v208[v299] & v298;
                      v407 = *(void (**)(unint64_t, unint64_t, uint64_t))(v297 + 16);
                      swift_bridgeObjectRetain();
                      v407(v305, v306, v390);
                      unint64_t v307 = (v394 + v305) & v423;
                      unint64_t v308 = (v394 + v306) & v423;
                      v421(v307, v308, v427);
                      unint64_t v246 = (void *)((v300 + v307) & 0xFFFFFFFFFFFFFFF8);
                      uint64_t v247 = v300 + v308;
                      goto LABEL_401;
                    case 3u:
                      *uint64_t v207 = *(void *)v208;
                      v207[1] = *((void *)v208 + 1);
                      unint64_t v309 = ((unint64_t)v207 + v299) & v298;
                      unint64_t v310 = (unint64_t)&v208[v299] & v298;
                      v412 = *(void (**)(unint64_t, unint64_t, uint64_t))(v297 + 16);
                      swift_bridgeObjectRetain();
                      v412(v309, v310, v390);
                      unint64_t v311 = (v394 + v309) & v423;
                      v421(v311, (v394 + v310) & v423, v427);
                      unint64_t v251 = (void *)((v362 + v311) & 0xFFFFFFFFFFFFFFF8);
                      uint64_t v252 = v362 + ((v394 + v310) & v423);
                      goto LABEL_403;
                    default:
                      goto LABEL_398;
                  }
                }
LABEL_390:
                *uint64_t v202 = *v203;
                v202[1] = v203[1];
                *((unsigned char *)v202 + v164) = 0;
                swift_bridgeObjectRetain();
                goto LABEL_405;
              }
LABEL_389:
              uint64_t v302 = v164;
              (*(void (**)(void *, void *, uint64_t))(v414 + 16))(v202, v203, v427);
              *(_OWORD *)(((unint64_t)v202 + v108) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v203
                                                                                               + v108) & 0xFFFFFFFFFFFFFFF8);
              *((unsigned char *)v202 + v302) = 2;
              goto LABEL_405;
            }
            goto LABEL_388;
          }
LABEL_351:
          *(void *)unint64_t v120 = *(void *)v121;
          *(void *)(v120 + 8) = *(void *)(v121 + 8);
          *(unsigned char *)(v120 + 16) = *(unsigned char *)(v121 + 16);
          *(void *)(v120 + 24) = *(void *)(v121 + 24);
          *(unsigned char *)(v120 + v117) = 0;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_406;
        }
        if (v231 != 2)
        {
          if (v231 == 1)
          {
            uint64_t v232 = v140;
            uint64_t v383 = v141;
            swift_bridgeObjectRelease();
            unint64_t v233 = (v419 + v230) & v423;
            v357 = *(void (**)(unint64_t, uint64_t))(v414 + 8);
            v357(v233, v427);
            uint64_t v141 = v383;
            unint64_t v234 = (unsigned __int8 *)((v102 + v233) & v383);
            unsigned int v235 = v234[v416];
            unsigned int v236 = v235 - 4;
            if (v235 < 4)
            {
              uint64_t v142 = v368;
              uint64_t v140 = v232;
            }
            else
            {
              if (v416 <= 3) {
                uint64_t v237 = v416;
              }
              else {
                uint64_t v237 = 4;
              }
              uint64_t v140 = v232;
              uint64_t v142 = v368;
              switch(v237)
              {
                case 1:
                  int v238 = *v234;
                  goto LABEL_325;
                case 2:
                  int v238 = *(unsigned __int16 *)v234;
                  goto LABEL_325;
                case 3:
                  int v238 = *(unsigned __int16 *)v234 | (v234[2] << 16);
                  goto LABEL_325;
                case 4:
                  int v238 = *(_DWORD *)v234;
LABEL_325:
                  int v254 = (v238 | (v236 << (8 * v416))) + 4;
                  unsigned int v235 = v238 + 4;
                  if (v416 < 4) {
                    unsigned int v235 = v254;
                  }
                  uint64_t v142 = v368;
                  break;
                default:
                  break;
              }
            }
            if (v235 >= 2)
            {
              if (v235 == 3)
              {
                swift_bridgeObjectRelease();
                unint64_t v255 = (unint64_t)&v234[v398] & v402;
                (*(void (**)(unint64_t, uint64_t))(v409 + 8))(v255, v390);
                v357((v394 + v255) & v423, v427);
                uint64_t v140 = v232;
                uint64_t v141 = v383;
                uint64_t v142 = v368;
              }
              else
              {
                swift_bridgeObjectRelease();
                unint64_t v256 = (unint64_t)&v234[v398] & v402;
                (*(void (**)(unint64_t, uint64_t))(v409 + 8))(v256, v390);
                v357((v394 + v256) & v423, v427);
                uint64_t v142 = v368;
                uint64_t v141 = v383;
                uint64_t v140 = v232;
              }
            }
          }
          else
          {
            uint64_t v376 = v140;
            size_t v239 = v102;
            uint64_t v240 = v141;
            swift_bridgeObjectRelease();
            uint64_t v142 = v368;
            uint64_t v140 = v376;
            uint64_t v141 = v240;
            size_t v102 = v239;
          }
          goto LABEL_332;
        }
        uint64_t v136 = v368;
        size_t v137 = v102;
        uint64_t v138 = v141;
        uint64_t v139 = v140;
        (*(void (**)(unint64_t, uint64_t))(v414 + 8))((v140 + v120) & v141, v427);
      }
      else
      {
        uint64_t v136 = v114;
        size_t v137 = v102;
        uint64_t v138 = ~v101;
        uint64_t v139 = v114 + 1 + v101;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v140 = v139;
      uint64_t v141 = v138;
      size_t v102 = v137;
      uint64_t v142 = v136;
      goto LABEL_332;
    }
    if (v122 == 1)
    {
      unsigned int v132 = *(unsigned __int8 *)(v120 + v114);
      unsigned int v133 = v132 - 3;
      uint64_t v417 = v112;
      uint64_t v396 = v107;
      if (v132 >= 3)
      {
        if (v114 <= 3) {
          uint64_t v134 = v114;
        }
        else {
          uint64_t v134 = 4;
        }
        switch(v134)
        {
          case 1:
            int v135 = *(unsigned __int8 *)v120;
            goto LABEL_217;
          case 2:
            int v135 = *(unsigned __int16 *)v120;
            goto LABEL_217;
          case 3:
            int v135 = *(unsigned __int16 *)v120 | (*(unsigned __int8 *)(v120 + 2) << 16);
            goto LABEL_217;
          case 4:
            int v135 = *(_DWORD *)v120;
LABEL_217:
            int v167 = (v135 | (v133 << (8 * v114))) + 3;
            unsigned int v132 = v135 + 3;
            if (v114 < 4) {
              unsigned int v132 = v167;
            }
            break;
          default:
            break;
        }
      }
      size_t __nb = v102;
      uint64_t v392 = v99;
      uint64_t v404 = v104;
      uint64_t v411 = *(void *)(v99 - 8);
      uint64_t v400 = v105;
      if (v132 == 2)
      {
        uint64_t v168 = v114;
        uint64_t v177 = ~v101;
        uint64_t v178 = v114 + 1 + v101;
        (*(void (**)(unint64_t, uint64_t))(v96 + 8))(v120, v427);
        uint64_t v175 = v178;
        uint64_t v170 = v177;
      }
      else if (v132 == 1)
      {
        uint64_t v373 = v114 + 1 + v101;
        uint64_t v380 = ~v101;
        uint64_t v168 = v114;
        swift_bridgeObjectRelease();
        unint64_t v169 = (v419 + v120) & v423;
        v365 = *(void (**)(unint64_t, uint64_t))(v96 + 8);
        v365(v169, v427);
        uint64_t v170 = v380;
        uint64_t v171 = (unsigned __int8 *)((__nb + v169) & v380);
        unsigned int v172 = v171[v417];
        unsigned int v173 = v172 - 4;
        if (v172 < 4)
        {
          uint64_t v175 = v373;
        }
        else
        {
          if (v417 <= 3) {
            uint64_t v174 = v417;
          }
          else {
            uint64_t v174 = 4;
          }
          uint64_t v175 = v373;
          switch(v174)
          {
            case 1:
              int v176 = *v171;
              goto LABEL_270;
            case 2:
              int v176 = *(unsigned __int16 *)v171;
              goto LABEL_270;
            case 3:
              int v176 = *(unsigned __int16 *)v171 | (*(unsigned __int8 *)(((__nb + v169) & v380) + 2) << 16);
              goto LABEL_270;
            case 4:
              int v176 = *(_DWORD *)v171;
LABEL_270:
              int v216 = (v176 | (v173 << (8 * v417))) + 4;
              unsigned int v172 = v176 + 4;
              if (v417 < 4) {
                unsigned int v172 = v216;
              }
              break;
            default:
              break;
          }
        }
        if (v172 >= 2)
        {
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v411 + 8))((unint64_t)&v171[v400] & v404, v392);
          v365((v396 + ((unint64_t)&v171[v400] & v404)) & v423, v427);
          uint64_t v175 = v373;
          uint64_t v170 = v380;
        }
      }
      else
      {
        uint64_t v179 = v114 + 1 + v101;
        uint64_t v180 = ~v101;
        uint64_t v168 = v114;
        swift_bridgeObjectRelease();
        uint64_t v170 = v180;
        uint64_t v175 = v179;
      }
      unint64_t v217 = (v175 + v120) & v170;
      unsigned int v218 = *(unsigned __int8 *)(v217 + v168);
      if (v218 > 2) {
        goto LABEL_321;
      }
      if (v218 == 2)
      {
        (*(void (**)(unint64_t, uint64_t))(v96 + 8))((v175 + v120) & v170, v427);
        goto LABEL_321;
      }
      if (v218 == 1)
      {
        uint64_t v219 = v170;
        swift_bridgeObjectRelease();
        unint64_t v220 = (v419 + v217) & v423;
        int v221 = *(void (**)(unint64_t, uint64_t))(v96 + 8);
        v221(v220, v427);
        char v222 = (unsigned __int8 *)((__nb + v220) & v219);
        unsigned int v223 = v222[v417];
        unsigned int v224 = v223 - 4;
        if (v223 >= 4)
        {
          if (v417 <= 3) {
            uint64_t v225 = v417;
          }
          else {
            uint64_t v225 = 4;
          }
          switch(v225)
          {
            case 1:
              int v226 = *v222;
              goto LABEL_317;
            case 2:
              int v226 = *(unsigned __int16 *)v222;
              goto LABEL_317;
            case 3:
              int v226 = *(unsigned __int16 *)((__nb + v220) & v219) | (*(unsigned __int8 *)(((__nb + v220) & v219) + 2) << 16);
              goto LABEL_317;
            case 4:
              int v226 = *(_DWORD *)v222;
LABEL_317:
              int v253 = (v226 | (v224 << (8 * v417))) + 4;
              unsigned int v223 = v226 + 4;
              if (v417 < 4) {
                unsigned int v223 = v253;
              }
              break;
            default:
              break;
          }
        }
        if (v223 >= 2)
        {
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v411 + 8))((unint64_t)&v222[v400] & v404, v392);
          v221((v396 + ((unint64_t)&v222[v400] & v404)) & v423, v427);
        }
        goto LABEL_321;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
LABEL_321:
    memcpy((void *)v120, (const void *)v121, v118);
    goto LABEL_406;
  }
  if (v123 > 1) {
    goto LABEL_321;
  }
  if (v123 != 1) {
    goto LABEL_351;
  }
  unsigned int v128 = *(unsigned __int8 *)(v121 + v114);
  unsigned int v129 = v128 - 3;
  uint64_t v416 = v112;
  uint64_t v395 = v107;
  unint64_t v364 = v110;
  if (v128 >= 3)
  {
    if (v114 <= 3) {
      uint64_t v130 = v114;
    }
    else {
      uint64_t v130 = 4;
    }
    switch(v130)
    {
      case 1:
        int v131 = *(unsigned __int8 *)v121;
        goto LABEL_201;
      case 2:
        int v131 = *(unsigned __int16 *)v121;
        goto LABEL_201;
      case 3:
        int v131 = *(unsigned __int16 *)v121 | (*(unsigned __int8 *)(v121 + 2) << 16);
        goto LABEL_201;
      case 4:
        int v131 = *(_DWORD *)v121;
LABEL_201:
        int v143 = (v131 | (v129 << (8 * v114))) + 3;
        unsigned int v128 = v131 + 3;
        if (v114 < 4) {
          unsigned int v128 = v143;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v410 = *(void *)(v99 - 8);
  uint64_t v414 = v96;
  size_t __na = v102;
  uint64_t v391 = v99;
  uint64_t v399 = v105;
  uint64_t v403 = v104;
  if (v128 == 2)
  {
    uint64_t v158 = *(void (**)(unint64_t, unint64_t, uint64_t))(v96 + 16);
    uint64_t v159 = ~v101;
    uint64_t v160 = v114;
    uint64_t v161 = v108;
    uint64_t v162 = v114 + 1 + v101;
    v158(v120, v121, v427);
    uint64_t v163 = v162;
    uint64_t v108 = v161;
    uint64_t v148 = v159;
    uint64_t v164 = v160;
    *(_OWORD *)((v161 + v120) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v161 + v121) & 0xFFFFFFFFFFFFFFF8);
    *(unsigned char *)(v120 + v160) = 2;
  }
  else
  {
    uint64_t v372 = v114 + 1 + v101;
    if (v128 == 1)
    {
      uint64_t v367 = v114;
      *(void *)unint64_t v120 = *(void *)v121;
      *(void *)(v120 + 8) = *(void *)(v121 + 8);
      unint64_t v144 = (v419 + v120) & v423;
      uint64_t v145 = v96;
      unint64_t v146 = (v419 + v121) & v423;
      unint64_t v147 = *(void (**)(uint64_t, unint64_t, uint64_t))(v145 + 16);
      uint64_t v379 = ~v101;
      swift_bridgeObjectRetain();
      v349 = v147;
      v147(v144, v146, v427);
      uint64_t v148 = v379;
      size_t v149 = (v102 + v144) & v379;
      unint64_t v150 = (unsigned __int8 *)((v102 + v146) & v379);
      unsigned int v151 = v150[v416];
      unsigned int v152 = v151 - 4;
      if (v151 < 4)
      {
        uint64_t v154 = v403;
        uint64_t v155 = v410;
        uint64_t v156 = v399;
        size_t v118 = v117 + 1;
      }
      else
      {
        if (v416 <= 3) {
          uint64_t v153 = v416;
        }
        else {
          uint64_t v153 = 4;
        }
        uint64_t v154 = v403;
        uint64_t v155 = v410;
        uint64_t v156 = v399;
        size_t v118 = v117 + 1;
        switch(v153)
        {
          case 1:
            int v157 = *v150;
            goto LABEL_249;
          case 2:
            int v157 = *(unsigned __int16 *)v150;
            goto LABEL_249;
          case 3:
            int v157 = *(unsigned __int16 *)v150 | (v150[2] << 16);
            goto LABEL_249;
          case 4:
            int v157 = *(_DWORD *)v150;
LABEL_249:
            int v193 = (v157 | (v152 << (8 * v416))) + 4;
            unsigned int v151 = v157 + 4;
            if (v416 < 4) {
              unsigned int v151 = v193;
            }
            break;
          default:
            break;
        }
      }
      switch(v151)
      {
        case 1u:
          *(unsigned char *)size_t v149 = *v150;
          char v194 = 1;
          break;
        case 2u:
          *(void *)size_t v149 = *(void *)v150;
          *(void *)(v149 + 8) = *((void *)v150 + 1);
          size_t v195 = (v156 + v149) & v154;
          unint64_t v347 = (unint64_t)&v150[v156] & v154;
          v344 = *(void (**)(size_t, unint64_t, uint64_t))(v155 + 16);
          size_t v354 = v149;
          swift_bridgeObjectRetain();
          v344(v195, v347, v391);
          uint64_t v196 = (v395 + v195) & v423;
          v349(v196, (v395 + v347) & v423, v427);
          size_t v149 = v354;
          uint64_t v148 = v379;
          *(void *)((v108 + v196) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v108 + ((v395 + v347) & v423)) & 0xFFFFFFFFFFFFFFF8);
          *(unsigned char *)(v354 + v364) = v150[v364];
          char v194 = 2;
          break;
        case 3u:
          *(void *)size_t v149 = *(void *)v150;
          *(void *)(v149 + 8) = *((void *)v150 + 1);
          size_t v197 = (v156 + v149) & v154;
          unint64_t v198 = (unint64_t)&v150[v156] & v154;
          uint64_t v199 = *(void (**)(size_t, unint64_t, uint64_t))(v155 + 16);
          size_t v355 = v149;
          swift_bridgeObjectRetain();
          v199(v197, v198, v391);
          uint64_t v200 = (v395 + v197) & v423;
          unint64_t v201 = (v395 + v198) & v423;
          v349(v200, v201, v427);
          size_t v149 = v355;
          uint64_t v148 = v379;
          *(void *)((v108 + v200) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v108 + v201) & 0xFFFFFFFFFFFFFFF8);
          char v194 = 3;
          break;
        default:
          char v194 = 0;
          *(_WORD *)size_t v149 = *(_WORD *)v150;
          break;
      }
      uint64_t v164 = v367;
      uint64_t v163 = v372;
      *(unsigned char *)(v149 + v416) = v194;
      *(unsigned char *)(v120 + v367) = 1;
    }
    else
    {
      uint64_t v165 = ~v101;
      *(void *)unint64_t v120 = *(void *)v121;
      *(void *)(v120 + 8) = *(void *)(v121 + 8);
      *(unsigned char *)(v120 + v114) = 0;
      uint64_t v166 = v114;
      swift_bridgeObjectRetain();
      uint64_t v164 = v166;
      uint64_t v148 = v165;
      uint64_t v163 = v372;
    }
  }
  uint64_t v202 = (void *)((v163 + v120) & v148);
  uint64_t v203 = (void *)((v163 + v121) & v148);
  unsigned int v204 = *((unsigned __int8 *)v203 + v164);
  if (v204 <= 2)
  {
    if (v204 != 2)
    {
      if (v204 == 1)
      {
        uint64_t v369 = v164;
        *uint64_t v202 = *v203;
        *(void *)(((v163 + v120) & v148) + 8) = *(void *)(((v163 + v121) & v148) + 8);
        unint64_t v375 = (v163 + v120) & v148;
        unint64_t v356 = ((unint64_t)v202 + v419) & v423;
        unint64_t v205 = ((unint64_t)v203 + v419) & v423;
        unint64_t v206 = *(void (**)(unint64_t, unint64_t, uint64_t))(v414 + 16);
        uint64_t v382 = v148;
        swift_bridgeObjectRetain();
        v420 = v206;
        v206(v356, v205, v427);
        uint64_t v207 = (void *)((__na + v356) & v382);
        unint64_t v208 = (unsigned __int8 *)((__na + v205) & v382);
        unsigned int v209 = v208[v416];
        unsigned int v210 = v209 - 4;
        if (v209 < 4)
        {
          uint64_t v213 = v403;
          uint64_t v212 = v410;
          uint64_t v214 = v399;
        }
        else
        {
          if (v416 <= 3) {
            uint64_t v211 = v416;
          }
          else {
            uint64_t v211 = 4;
          }
          uint64_t v213 = v403;
          uint64_t v212 = v410;
          uint64_t v214 = v399;
          switch(v211)
          {
            case 1:
              int v215 = *v208;
              goto LABEL_309;
            case 2:
              int v215 = *(unsigned __int16 *)v208;
              goto LABEL_309;
            case 3:
              int v215 = *(unsigned __int16 *)v208 | (*(unsigned __int8 *)(((__na + v205) & v382) + 2) << 16);
              goto LABEL_309;
            case 4:
              int v215 = *(_DWORD *)v208;
LABEL_309:
              int v241 = (v215 | (v210 << (8 * v416))) + 4;
              unsigned int v209 = v215 + 4;
              if (v416 < 4) {
                unsigned int v209 = v241;
              }
              break;
            default:
              break;
          }
        }
        switch(v209)
        {
          case 1u:
LABEL_399:
            *(unsigned char *)uint64_t v207 = *v208;
            char v304 = 1;
            break;
          case 2u:
            *uint64_t v207 = *(void *)v208;
            *(void *)(((__na + v356) & v382) + 8) = *(void *)(((__na + v205) & v382) + 8);
            unint64_t v242 = ((unint64_t)v207 + v214) & v213;
            unint64_t v243 = (unint64_t)&v208[v214] & v213;
            v405 = *(void (**)(unint64_t, unint64_t, uint64_t))(v212 + 16);
            swift_bridgeObjectRetain();
            v405(v242, v243, v391);
            unint64_t v244 = (v395 + v242) & v423;
            unint64_t v245 = (v395 + v243) & v423;
            v420(v244, v245, v427);
            unint64_t v246 = (void *)((v108 + v244) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v247 = v108 + v245;
LABEL_401:
            *unint64_t v246 = *(void *)(v247 & 0xFFFFFFFFFFFFFFF8);
            *((unsigned char *)v207 + v364) = v208[v364];
            char v304 = 2;
            break;
          case 3u:
            *uint64_t v207 = *(void *)v208;
            *(void *)(((__na + v356) & v382) + 8) = *(void *)(((__na + v205) & v382) + 8);
            unint64_t v248 = ((unint64_t)v207 + v214) & v213;
            unint64_t v249 = (unint64_t)&v208[v214] & v213;
            v406 = *(void (**)(unint64_t, unint64_t, uint64_t))(v212 + 16);
            swift_bridgeObjectRetain();
            v406(v248, v249, v391);
            unint64_t v250 = (v395 + v248) & v423;
            v420(v250, (v395 + v249) & v423, v427);
            unint64_t v251 = (void *)((v108 + v250) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v252 = v108 + ((v395 + v249) & v423);
LABEL_403:
            void *v251 = *(void *)(v252 & 0xFFFFFFFFFFFFFFF8);
            char v304 = 3;
            break;
          default:
LABEL_398:
            char v304 = 0;
            *(_WORD *)uint64_t v207 = *(_WORD *)v208;
            break;
        }
        *((unsigned char *)v207 + v416) = v304;
        *(unsigned char *)(v375 + v369) = 1;
        goto LABEL_405;
      }
      goto LABEL_390;
    }
    goto LABEL_389;
  }
LABEL_388:
  memcpy(v202, v203, v115);
LABEL_405:
  uint64_t v3 = a3;
  *(unsigned char *)(v120 + v117) = 1;
LABEL_406:
  uint64_t v312 = (void *)(((v120 | 7) + v118) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v313 = (void *)(((v121 | 7) + v118) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v314 = v313[1];
  *uint64_t v312 = *v313;
  v312[1] = v314;
  swift_retain();
  swift_release();
  uint64_t v315 = *(void *)(*(void *)(v3 + 16) - 8);
  uint64_t v316 = v315 + 24;
  uint64_t v317 = *(unsigned __int8 *)(v315 + 80);
  uint64_t v318 = ((unint64_t)v312 + v317 + 16) & ~v317;
  uint64_t v319 = ((unint64_t)v313 + v317 + 16) & ~v317;
  (*(void (**)(uint64_t, uint64_t))(v315 + 24))(v318, v319);
  uint64_t v320 = *(void *)(v316 + 40);
  unint64_t v321 = v320 + v318;
  unint64_t v322 = v320 + v319;
  *(unsigned char *)unint64_t v321 = *(unsigned char *)v322;
  unint64_t v323 = v321 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v324 = v322 & 0xFFFFFFFFFFFFFFF8;
  *(void *)((v321 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((v322 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v325 = (v323 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v326 = (v324 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v327 = *(void *)v326;
  LOBYTE(v319) = *(unsigned char *)(v326 + 8);
  sub_22EADDF00(*(void *)v326, v319);
  uint64_t v328 = *(void *)v325;
  char v329 = *(unsigned char *)(v325 + 8);
  *(void *)unint64_t v325 = v327;
  *(unsigned char *)(v325 + 8) = v319;
  sub_22EADDB08(v328, v329);
  unint64_t v330 = (v323 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v331 = (v324 + 39) & 0xFFFFFFFFFFFFFFF8;
  if (v330 != v331)
  {
    sub_22EB0584C((v323 + 39) & 0xFFFFFFFFFFFFFFF8, &qword_26861BC40);
    if (*(unsigned char *)(v331 + 40))
    {
      unint64_t v332 = *(void *)(v331 + 24);
      if (v332 >= 6)
      {
        *(void *)(v330 + 24) = v332;
        *(void *)(v330 + 32) = *(void *)(v331 + 32);
        (**(void (***)(unint64_t, unint64_t))(v332 - 8))((v323 + 39) & 0xFFFFFFFFFFFFFFF8, (v324 + 39) & 0xFFFFFFFFFFFFFFF8);
      }
      else
      {
        long long v333 = *(_OWORD *)v331;
        long long v334 = *(_OWORD *)(v331 + 16);
        *(void *)(v330 + 32) = *(void *)(v331 + 32);
        *(_OWORD *)unint64_t v330 = v333;
        *(_OWORD *)(v330 + 16) = v334;
      }
      *(unsigned char *)(v330 + 40) = 1;
    }
    else
    {
      *(void *)unint64_t v330 = *(void *)v331;
      *(unsigned char *)(v330 + 40) = 0;
      swift_retain();
    }
  }
  unint64_t v335 = (v323 + 87) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v336 = (v324 + 87) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v337 = *(void *)v336;
  char v338 = *(unsigned char *)(v336 + 8);
  sub_22EADDF00(*(void *)v336, v338);
  uint64_t v339 = *(void *)v335;
  char v340 = *(unsigned char *)(v335 + 8);
  *(void *)unint64_t v335 = v337;
  *(unsigned char *)(v335 + 8) = v338;
  sub_22EADDB08(v339, v340);
  return a1;
}

_OWORD *sub_22EDEFFA0(_OWORD *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7F6E0();
  uint64_t v158 = *(void *)(v6 - 8);
  uint64_t v159 = v6;
  uint64_t v7 = *(unsigned __int8 *)(v158 + 80);
  uint64_t v152 = v7 + 16;
  uint64_t v8 = *(void *)(v158 + 64);
  uint64_t v9 = sub_22EE7F5D0();
  uint64_t v149 = *(void *)(v9 - 8);
  uint64_t v150 = v9;
  uint64_t v10 = *(unsigned __int8 *)(v149 + 80);
  uint64_t v11 = v7 | v10 | 7;
  uint64_t v151 = v11 + v8;
  uint64_t v12 = (v11 + v8 + ((v7 + 16) & ~v7)) & ~v11;
  uint64_t v147 = v10 + 16;
  uint64_t v148 = *(void *)(v149 + 64) + v7;
  unint64_t v13 = (v8 + 7 + ((v148 + ((v10 + 16) & ~v10)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v14 = v13 + 8;
  unint64_t v15 = v13 + 9;
  unint64_t v145 = v14;
  if (v15 <= v14) {
    unint64_t v15 = v14;
  }
  if (v15 <= 2) {
    uint64_t v16 = 2;
  }
  else {
    uint64_t v16 = v15;
  }
  uint64_t v154 = v8 + 7;
  if (v16 + v12 + 1 > ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v17 = v16 + v12 + 1;
  }
  else {
    unint64_t v17 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v17 <= 0x10) {
    uint64_t v18 = 16;
  }
  else {
    uint64_t v18 = v17;
  }
  size_t v19 = v18 + 1;
  uint64_t v156 = v18 + 1 + v11;
  if ((v156 & (unint64_t)~v11) + v18 + 1 <= 0x20) {
    uint64_t v20 = 32;
  }
  else {
    uint64_t v20 = (v156 & ~v11) + v18 + 1;
  }
  unsigned int v21 = a2[v20];
  unsigned int v22 = v21 - 2;
  if (v21 >= 2)
  {
    if (v20 <= 3) {
      uint64_t v23 = v20;
    }
    else {
      uint64_t v23 = 4;
    }
    switch(v23)
    {
      case 1:
        int v24 = *a2;
        goto LABEL_24;
      case 2:
        int v24 = *(unsigned __int16 *)a2;
        goto LABEL_24;
      case 3:
        int v24 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_24;
      case 4:
        int v24 = *(_DWORD *)a2;
LABEL_24:
        if (v20 < 4) {
          unsigned int v21 = (v24 | (v22 << (8 * v20))) + 2;
        }
        else {
          unsigned int v21 = v24 + 2;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v155 = ~v7;
  uint64_t v25 = ~v11;
  uint64_t v146 = ~v10;
  if (v21 != 1)
  {
    long long v30 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v30;
    *((unsigned char *)a1 + v20) = 0;
    goto LABEL_90;
  }
  unsigned int v26 = a2[v18];
  unsigned int v27 = v26 - 3;
  if (v26 >= 3)
  {
    if (v18 <= 3) {
      uint64_t v28 = v18;
    }
    else {
      uint64_t v28 = 4;
    }
    switch(v28)
    {
      case 1:
        int v29 = *a2;
        goto LABEL_38;
      case 2:
        int v29 = *(unsigned __int16 *)a2;
        goto LABEL_38;
      case 3:
        int v29 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_38;
      case 4:
        int v29 = *(_DWORD *)a2;
LABEL_38:
        if (v18 < 4) {
          unsigned int v26 = (v29 | (v27 << (8 * v18))) + 3;
        }
        else {
          unsigned int v26 = v29 + 3;
        }
        break;
      default:
        break;
    }
  }
  if (v26 == 2)
  {
    uint64_t v40 = v16;
    (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v158 + 32))(a1, a2, v159);
    uint64_t v16 = v40;
    *(_OWORD *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&a2[v8 + 7] & 0xFFFFFFFFFFFFFFF8);
    char v41 = 2;
  }
  else
  {
    if (v26 != 1)
    {
      *a1 = *(_OWORD *)a2;
      *((unsigned char *)a1 + v18) = 0;
      goto LABEL_64;
    }
    *a1 = *(_OWORD *)a2;
    unsigned int v31 = &a2[v7];
    uint64_t v32 = ((unint64_t)a1 + v7 + 16) & v155;
    uint64_t v33 = (unint64_t)(v31 + 16) & v155;
    uint64_t v141 = v16;
    size_t v137 = *(void (**)(uint64_t, uint64_t, uint64_t))(v158 + 32);
    v137(v32, v33, v159);
    uint64_t v16 = v141;
    unint64_t v34 = (unsigned char *)((v32 + v8 + v11) & v25);
    unint64_t v35 = (unsigned __int8 *)((v33 + v8 + v11) & v25);
    unsigned int v36 = v35[v141];
    unsigned int v37 = v36 - 4;
    if (v36 >= 4)
    {
      if (v141 <= 3) {
        uint64_t v38 = v141;
      }
      else {
        uint64_t v38 = 4;
      }
      switch(v38)
      {
        case 1:
          int v39 = *v35;
          goto LABEL_54;
        case 2:
          int v39 = *(unsigned __int16 *)v35;
          goto LABEL_54;
        case 3:
          int v39 = *(unsigned __int16 *)v35 | (v35[2] << 16);
          goto LABEL_54;
        case 4:
          int v39 = *(_DWORD *)v35;
LABEL_54:
          if (v141 < 4) {
            unsigned int v36 = (v39 | (v37 << (8 * v141))) + 4;
          }
          else {
            unsigned int v36 = v39 + 4;
          }
          break;
        default:
          break;
      }
    }
    switch(v36)
    {
      case 1u:
        *unint64_t v34 = *v35;
        char v42 = 1;
        break;
      case 2u:
        *(_OWORD *)unint64_t v34 = *(_OWORD *)v35;
        unint64_t v43 = (unint64_t)&v34[v147] & v146;
        uint64_t v136 = v34;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v149 + 32))(v43, (unint64_t)&v35[v147] & v146, v150);
        unint64_t v44 = (v148 + v43) & v155;
        unint64_t v45 = (v148 + ((unint64_t)&v35[v147] & v146)) & v155;
        v137(v44, v45, v159);
        unint64_t v34 = v136;
        *(void *)((v154 + v44) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v154 + v45) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v16 = v141;
        v136[v145] = v35[v145];
        char v42 = 2;
        break;
      case 3u:
        *(_OWORD *)unint64_t v34 = *(_OWORD *)v35;
        unint64_t v46 = (unint64_t)&v34[v147] & v146;
        unint64_t v47 = (unint64_t)&v35[v147] & v146;
        unsigned int v48 = v34;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v149 + 32))(v46, v47, v150);
        unint64_t v49 = (v148 + v46) & v155;
        unint64_t v50 = (v148 + v47) & v155;
        v137(v49, v50, v159);
        unint64_t v34 = v48;
        uint64_t v16 = v141;
        *(void *)((v154 + v49) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v154 + v50) & 0xFFFFFFFFFFFFFFF8);
        char v42 = 3;
        break;
      default:
        char v42 = 0;
        *(_WORD *)unint64_t v34 = *(_WORD *)v35;
        break;
    }
    v34[v16] = v42;
    char v41 = 1;
  }
  *((unsigned char *)a1 + v18) = v41;
LABEL_64:
  int v51 = (_OWORD *)(((unint64_t)a1 + v156) & v25);
  uint64_t v52 = (_OWORD *)((unint64_t)&a2[v156] & v25);
  unsigned int v53 = *((unsigned __int8 *)v52 + v18);
  if (v53 <= 2)
  {
    if (v53 == 2)
    {
      uint64_t v62 = v16;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v158 + 32))(((unint64_t)a1 + v156) & v25, (unint64_t)&a2[v156] & v25, v159);
      uint64_t v16 = v62;
      *(_OWORD *)(((unint64_t)v51 + v154) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v52 + v154) & 0xFFFFFFFFFFFFFFF8);
      char v63 = 2;
    }
    else
    {
      if (v53 != 1)
      {
        *int v51 = *v52;
        *((unsigned char *)v51 + v18) = 0;
LABEL_88:
        size_t v19 = v18 + 1;
        goto LABEL_89;
      }
      *int v51 = *v52;
      unint64_t v54 = ((unint64_t)v52 + v152) & v155;
      uint64_t v142 = v16;
      uint64_t v138 = *(void (**)(void))(v158 + 32);
      ((void (*)(unint64_t, unint64_t, uint64_t))v138)(((unint64_t)v51 + v152) & v155, v54, v159);
      uint64_t v16 = v142;
      uint64_t v55 = (unsigned char *)((v151 + (((unint64_t)v51 + v152) & v155)) & v25);
      uint64_t v56 = (unsigned __int8 *)((v151 + v54) & v25);
      unsigned int v57 = v56[v142];
      unsigned int v58 = v57 - 4;
      if (v57 >= 4)
      {
        if (v142 <= 3) {
          uint64_t v59 = v142;
        }
        else {
          uint64_t v59 = 4;
        }
        switch(v59)
        {
          case 1:
            int v60 = *v56;
            goto LABEL_79;
          case 2:
            int v60 = *(unsigned __int16 *)v56;
            goto LABEL_79;
          case 3:
            int v60 = *(unsigned __int16 *)v56 | (v56[2] << 16);
            goto LABEL_79;
          case 4:
            int v60 = *(_DWORD *)v56;
LABEL_79:
            int v64 = (v60 | (v58 << (8 * v142))) + 4;
            unsigned int v57 = v60 + 4;
            if (v142 < 4) {
              unsigned int v57 = v64;
            }
            break;
          default:
            break;
        }
      }
      switch(v57)
      {
        case 1u:
          *uint64_t v55 = *v56;
          char v65 = 1;
          break;
        case 2u:
          *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
          unint64_t v135 = (unint64_t)&v55[v147] & v146;
          (*(void (**)(void))(v149 + 32))();
          v138();
          uint64_t v55 = (unsigned char *)((v151 + (((unint64_t)v51 + v152) & v155)) & v25);
          *(void *)((v154 + ((v148 + v135) & v155)) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v154
                                                                                           + ((v148
                                                                                             + ((unint64_t)&v56[v147] & v146)) & v155)) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v16 = v142;
          v55[v145] = v56[v145];
          char v65 = 2;
          break;
        case 3u:
          *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
          unint64_t v66 = (unint64_t)&v56[v147] & v146;
          unint64_t v67 = (unint64_t)&v55[v147] & v146;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v149 + 32))(v67, v66, v150);
          unint64_t v68 = (v148 + v67) & v155;
          unint64_t v69 = (v148 + v66) & v155;
          ((void (*)(unint64_t, unint64_t, uint64_t))v138)(v68, v69, v159);
          uint64_t v55 = (unsigned char *)((v151 + (((unint64_t)v51 + v152) & v155)) & v25);
          uint64_t v16 = v142;
          *(void *)((v154 + v68) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v154 + v69) & 0xFFFFFFFFFFFFFFF8);
          char v65 = 3;
          break;
        default:
          char v65 = 0;
          *(_WORD *)uint64_t v55 = *(_WORD *)v56;
          break;
      }
      v55[v16] = v65;
      char v63 = 1;
    }
    *((unsigned char *)v51 + v18) = v63;
    goto LABEL_88;
  }
  size_t v19 = v18 + 1;
  uint64_t v61 = v16;
  memcpy((void *)(((unint64_t)a1 + v156) & v25), (const void *)((unint64_t)&a2[v156] & v25), v18 + 1);
  uint64_t v16 = v61;
LABEL_89:
  *((unsigned char *)a1 + v20) = 1;
LABEL_90:
  unint64_t v70 = (_OWORD *)(((unint64_t)a1 + v11 + v20 + 1) & v25);
  uint64_t v71 = (unsigned __int8 *)((unint64_t)&a2[v11 + 1 + v20] & v25);
  unsigned int v72 = v71[v20];
  if (v72 > 1)
  {
    memcpy((void *)(((unint64_t)a1 + v11 + v20 + 1) & v25), v71, v20 + 1);
  }
  else if (v72 == 1)
  {
    unsigned int v73 = v71[v18];
    unsigned int v74 = v73 - 3;
    if (v73 >= 3)
    {
      if (v18 <= 3) {
        uint64_t v75 = v18;
      }
      else {
        uint64_t v75 = 4;
      }
      switch(v75)
      {
        case 1:
          int v76 = *v71;
          goto LABEL_103;
        case 2:
          int v76 = *(unsigned __int16 *)v71;
          goto LABEL_103;
        case 3:
          int v76 = *(unsigned __int16 *)v71 | (v71[2] << 16);
          goto LABEL_103;
        case 4:
          int v76 = *(_DWORD *)v71;
LABEL_103:
          int v78 = (v76 | (v74 << (8 * v18))) + 3;
          unsigned int v73 = v76 + 3;
          if (v18 < 4) {
            unsigned int v73 = v78;
          }
          break;
        default:
          break;
      }
    }
    size_t __n = v19;
    if (v73 == 2)
    {
      uint64_t v86 = ((unint64_t)a1 + v11 + v20 + 1) & v25;
      uint64_t v87 = v16;
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v158 + 32))(v86, v71, v159);
      uint64_t v16 = v87;
      *(_OWORD *)(((unint64_t)v70 + v154) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v71[v154] & 0xFFFFFFFFFFFFFFF8);
      char v88 = 2;
    }
    else if (v73 == 1)
    {
      *unint64_t v70 = *(_OWORD *)v71;
      unint64_t v79 = (unint64_t)&v71[v152] & v155;
      uint64_t v143 = v16;
      uint64_t v139 = *(void (**)(unint64_t, unint64_t, uint64_t))(v158 + 32);
      v139(((unint64_t)v70 + v152) & v155, v79, v159);
      uint64_t v16 = v143;
      unint64_t v80 = (unsigned char *)((v151 + (((unint64_t)v70 + v152) & v155)) & v25);
      int v81 = (unsigned __int8 *)((v151 + v79) & v25);
      unsigned int v82 = v81[v143];
      unsigned int v83 = v82 - 4;
      if (v82 >= 4)
      {
        if (v143 <= 3) {
          uint64_t v84 = v143;
        }
        else {
          uint64_t v84 = 4;
        }
        switch(v84)
        {
          case 1:
            int v85 = *v81;
            goto LABEL_118;
          case 2:
            int v85 = *(unsigned __int16 *)v81;
            goto LABEL_118;
          case 3:
            int v85 = *(unsigned __int16 *)v81 | (*(unsigned __int8 *)(((v151 + v79) & v25) + 2) << 16);
            goto LABEL_118;
          case 4:
            int v85 = *(_DWORD *)v81;
LABEL_118:
            int v89 = (v85 | (v83 << (8 * v143))) + 4;
            unsigned int v82 = v85 + 4;
            if (v143 < 4) {
              unsigned int v82 = v89;
            }
            break;
          default:
            break;
        }
      }
      switch(v82)
      {
        case 1u:
          unsigned char *v80 = *v81;
          char v90 = 1;
          break;
        case 2u:
          *(_OWORD *)unint64_t v80 = *(_OWORD *)v81;
          unint64_t v91 = (unint64_t)&v80[v147] & v146;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v149 + 32))(v91, (unint64_t)&v81[v147] & v146, v150);
          unint64_t v92 = (v148 + v91) & v155;
          unint64_t v93 = (v148 + ((unint64_t)&v81[v147] & v146)) & v155;
          v139(v92, v93, v159);
          unint64_t v80 = (unsigned char *)((v151 + (((unint64_t)v70 + v152) & v155)) & v25);
          *(void *)((v154 + v92) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v154 + v93) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v16 = v143;
          v80[v145] = v81[v145];
          char v90 = 2;
          break;
        case 3u:
          *(_OWORD *)unint64_t v80 = *(_OWORD *)v81;
          unint64_t v94 = (unint64_t)&v80[v147] & v146;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v149 + 32))(v94, (unint64_t)&v81[v147] & v146, v150);
          unint64_t v95 = (v148 + v94) & v155;
          unint64_t v96 = (v148 + ((unint64_t)&v81[v147] & v146)) & v155;
          v139(v95, v96, v159);
          unint64_t v80 = (unsigned char *)((v151 + (((unint64_t)v70 + v152) & v155)) & v25);
          uint64_t v16 = v143;
          *(void *)((v154 + v95) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v154 + v96) & 0xFFFFFFFFFFFFFFF8);
          char v90 = 3;
          break;
        default:
          char v90 = 0;
          *(_WORD *)unint64_t v80 = *(_WORD *)v81;
          break;
      }
      v80[v16] = v90;
      char v88 = 1;
    }
    else
    {
      char v88 = 0;
      *unint64_t v70 = *(_OWORD *)v71;
    }
    *((unsigned char *)v70 + v18) = v88;
    uint64_t v97 = (_OWORD *)(((unint64_t)v70 + v156) & v25);
    uint64_t v98 = (_OWORD *)((unint64_t)&v71[v156] & v25);
    unsigned int v99 = *((unsigned __int8 *)v98 + v18);
    if (v99 > 2)
    {
      memcpy((void *)(((unint64_t)v70 + v156) & v25), (const void *)((unint64_t)&v71[v156] & v25), __n);
    }
    else if (v99 == 2)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v158 + 32))(((unint64_t)v70 + v156) & v25, (unint64_t)&v71[v156] & v25, v159);
      *(_OWORD *)(((unint64_t)v97 + v154) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v98 + v154) & 0xFFFFFFFFFFFFFFF8);
      *((unsigned char *)v97 + v18) = 2;
    }
    else if (v99 == 1)
    {
      uint64_t v140 = a3;
      _OWORD *v97 = *v98;
      unint64_t v100 = ((unint64_t)v98 + v152) & v155;
      uint64_t v144 = v16;
      int v157 = *(void (**)(unint64_t, unint64_t, uint64_t))(v158 + 32);
      v157(((unint64_t)v97 + v152) & v155, v100, v159);
      uint64_t v101 = v144;
      size_t v102 = (unsigned char *)((v151 + (((unint64_t)v97 + v152) & v155)) & v25);
      uint64_t v103 = (unsigned __int8 *)((v151 + v100) & v25);
      unsigned int v104 = v103[v144];
      unsigned int v105 = v104 - 4;
      if (v104 >= 4)
      {
        if (v144 <= 3) {
          uint64_t v106 = v144;
        }
        else {
          uint64_t v106 = 4;
        }
        switch(v106)
        {
          case 1:
            int v107 = *v103;
            goto LABEL_141;
          case 2:
            int v107 = *(unsigned __int16 *)v103;
            goto LABEL_141;
          case 3:
            int v107 = *(unsigned __int16 *)v103 | (v103[2] << 16);
            goto LABEL_141;
          case 4:
            int v107 = *(_DWORD *)v103;
LABEL_141:
            int v108 = (v107 | (v105 << (8 * v144))) + 4;
            unsigned int v104 = v107 + 4;
            if (v144 < 4) {
              unsigned int v104 = v108;
            }
            break;
          default:
            break;
        }
      }
      switch(v104)
      {
        case 1u:
          *size_t v102 = *v103;
          char v109 = 1;
          break;
        case 2u:
          *(_OWORD *)size_t v102 = *(_OWORD *)v103;
          (*(void (**)(unint64_t))(v149 + 32))((unint64_t)&v102[v147] & v146);
          unint64_t v110 = (v148 + ((unint64_t)&v102[v147] & v146)) & v155;
          unint64_t v111 = (v148 + ((unint64_t)&v103[v147] & v146)) & v155;
          v157(v110, v111, v159);
          *(void *)((v154 + v110) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v154 + v111) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v101 = v144;
          v102[v145] = v103[v145];
          char v109 = 2;
          break;
        case 3u:
          *(_OWORD *)size_t v102 = *(_OWORD *)v103;
          unint64_t v112 = (unint64_t)&v103[v147] & v146;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v149 + 32))((unint64_t)&v102[v147] & v146, v112, v150);
          unint64_t v113 = (v148 + ((unint64_t)&v102[v147] & v146)) & v155;
          v157(v113, (v148 + v112) & v155, v159);
          uint64_t v101 = v144;
          *(void *)((v154 + v113) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v154 + ((v148 + v112) & v155)) & 0xFFFFFFFFFFFFFFF8);
          char v109 = 3;
          break;
        default:
          char v109 = 0;
          *(_WORD *)size_t v102 = *(_WORD *)v103;
          break;
      }
      v102[v101] = v109;
      *((unsigned char *)v97 + v18) = 1;
      a3 = v140;
    }
    else
    {
      _OWORD *v97 = *v98;
      *((unsigned char *)v97 + v18) = 0;
    }
    *((unsigned char *)v70 + v20) = 1;
  }
  else
  {
    long long v77 = *((_OWORD *)v71 + 1);
    *unint64_t v70 = *(_OWORD *)v71;
    *(_OWORD *)((((unint64_t)a1 + v11 + v20 + 1) & v25) + 0x10) = v77;
    *((unsigned char *)v70 + v20) = 0;
  }
  uint64_t v114 = (_OWORD *)(((unint64_t)v70 + v20 + 8) & 0xFFFFFFFFFFFFFFF8);
  size_t v115 = (_OWORD *)((unint64_t)&v71[v20 + 8] & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v114 = *v115;
  uint64_t v116 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v117 = v116 + 32;
  uint64_t v118 = *(unsigned __int8 *)(v116 + 80);
  uint64_t v119 = ((unint64_t)v114 + v118 + 16) & ~v118;
  uint64_t v120 = ((unint64_t)v115 + v118 + 16) & ~v118;
  (*(void (**)(uint64_t, uint64_t))(v116 + 32))(v119, v120);
  uint64_t v121 = *(void *)(v117 + 32);
  uint64_t v122 = v121 + v119;
  uint64_t v123 = v121 + v120;
  *(unsigned char *)uint64_t v122 = *(unsigned char *)v123;
  v122 &= 0xFFFFFFFFFFFFFFF8;
  v123 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)(v122 + 8) = *(void *)(v123 + 8);
  unint64_t v124 = (v122 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v125 = (v123 + 23) & 0xFFFFFFFFFFFFFFF8;
  char v126 = *(unsigned char *)(v125 + 8);
  *(void *)unint64_t v124 = *(void *)v125;
  *(unsigned char *)(v124 + 8) = v126;
  int v127 = (_OWORD *)((v122 + 39) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v128 = (long long *)((v123 + 39) & 0xFFFFFFFFFFFFFFF8);
  long long v130 = *v128;
  long long v129 = v128[1];
  *(_OWORD *)((char *)v127 + 25) = *(long long *)((char *)v128 + 25);
  *int v127 = v130;
  v127[1] = v129;
  unint64_t v131 = (v122 + 87) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v132 = (v123 + 87) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v133 = *(void *)v132;
  *(unsigned char *)(v131 + 8) = *(unsigned char *)(v132 + 8);
  *(void *)unint64_t v131 = v133;
  return a1;
}

unsigned __int8 *sub_22EDF10BC(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  if (a1 != a2)
  {
    uint64_t v6 = sub_22EE7F6E0();
    uint64_t v405 = *(void *)(v6 - 8);
    uint64_t v410 = v6;
    uint64_t v7 = *(unsigned __int8 *)(v405 + 80);
    uint64_t v358 = v7 + 16;
    uint64_t v8 = *(void *)(v405 + 64);
    uint64_t v9 = sub_22EE7F5D0();
    uint64_t v387 = *(void *)(v9 - 8);
    uint64_t v391 = v9;
    uint64_t v10 = *(unsigned __int8 *)(v387 + 80);
    uint64_t v11 = v7 | v10 | 7;
    uint64_t v351 = v11 + v8;
    uint64_t v379 = v10 + 16;
    uint64_t v383 = *(void *)(v387 + 64) + v7;
    uint64_t v12 = v8 + 7;
    unint64_t v13 = (v8 + 7 + ((v383 + ((v10 + 16) & ~v10)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v14 = v13 + 8;
    unint64_t v15 = v13 + 9;
    unint64_t v349 = v14;
    if (v15 <= v14) {
      unint64_t v15 = v14;
    }
    if (v15 <= 2) {
      unint64_t v15 = 2;
    }
    unint64_t v395 = v15;
    unint64_t v16 = v15 + ((v11 + v8 + ((v7 + 16) & ~v7)) & ~v11);
    uint64_t v362 = v8 + 7;
    if (v16 + 1 > (v12 & 0xFFFFFFFFFFFFFFF8) + 16) {
      unint64_t v17 = v16 + 1;
    }
    else {
      unint64_t v17 = (v12 & 0xFFFFFFFFFFFFFFF8) + 16;
    }
    if (v17 <= 0x10) {
      uint64_t v18 = 16;
    }
    else {
      uint64_t v18 = v17;
    }
    uint64_t v19 = v18 + 1 + v11;
    if ((v19 & (unint64_t)~v11) + v18 + 1 <= 0x20) {
      uint64_t v20 = 32;
    }
    else {
      uint64_t v20 = (v19 & ~v11) + v18 + 1;
    }
    unsigned int v21 = a1[v20];
    unsigned int v22 = v21 - 2;
    if (v21 >= 2)
    {
      if (v20 <= 3) {
        uint64_t v23 = v20;
      }
      else {
        uint64_t v23 = 4;
      }
      switch(v23)
      {
        case 1:
          int v24 = *a1;
          goto LABEL_24;
        case 2:
          int v24 = *(unsigned __int16 *)a1;
          goto LABEL_24;
        case 3:
          int v24 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_24;
        case 4:
          int v24 = *(_DWORD *)a1;
LABEL_24:
          if (v20 < 4) {
            unsigned int v21 = (v24 | (v22 << (8 * v20))) + 2;
          }
          else {
            unsigned int v21 = v24 + 2;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v398 = ~v7;
    uint64_t v412 = ~v11;
    uint64_t v375 = ~v10;
    if (v21 == 1)
    {
      unsigned int v25 = a1[v18];
      unsigned int v26 = v25 - 3;
      if (v25 >= 3)
      {
        if (v18 <= 3) {
          uint64_t v27 = v18;
        }
        else {
          uint64_t v27 = 4;
        }
        switch(v27)
        {
          case 1:
            int v28 = *a1;
            goto LABEL_39;
          case 2:
            int v28 = *(unsigned __int16 *)a1;
            goto LABEL_39;
          case 3:
            int v28 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            goto LABEL_39;
          case 4:
            int v28 = *(_DWORD *)a1;
LABEL_39:
            if (v18 < 4) {
              unsigned int v25 = (v28 | (v26 << (8 * v18))) + 3;
            }
            else {
              unsigned int v25 = v28 + 3;
            }
            break;
          default:
            break;
        }
      }
      if (v25 == 2)
      {
        (*(void (**)(unsigned __int8 *, uint64_t))(v405 + 8))(a1, v410);
      }
      else if (v25 == 1)
      {
        swift_bridgeObjectRelease();
        unint64_t v346 = *(void (**)(unint64_t, uint64_t))(v405 + 8);
        v346((unint64_t)&a1[v7 + 16] & v398, v410);
        int v29 = (unsigned __int8 *)((((unint64_t)&a1[v7 + 16] & v398) + v8 + v11) & v412);
        unsigned int v30 = v29[v395];
        unsigned int v31 = v30 - 4;
        if (v30 >= 4)
        {
          if (v395 <= 3) {
            uint64_t v32 = v395;
          }
          else {
            uint64_t v32 = 4;
          }
          switch(v32)
          {
            case 1:
              int v33 = *v29;
              goto LABEL_55;
            case 2:
              int v33 = *(unsigned __int16 *)v29;
              goto LABEL_55;
            case 3:
              int v33 = *(unsigned __int16 *)v29 | (v29[2] << 16);
              goto LABEL_55;
            case 4:
              int v33 = *(_DWORD *)v29;
LABEL_55:
              if (v395 < 4) {
                unsigned int v30 = (v33 | (v31 << (8 * v395))) + 4;
              }
              else {
                unsigned int v30 = v33 + 4;
              }
              break;
            default:
              break;
          }
        }
        if (v30 >= 2)
        {
          swift_bridgeObjectRelease();
          unint64_t v34 = (unint64_t)&v29[v379] & v375;
          (*(void (**)(unint64_t, uint64_t))(v387 + 8))(v34, v391);
          v346((v383 + v34) & v398, v410);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      unint64_t v35 = (unint64_t)&a1[v19] & v412;
      unsigned int v36 = *(unsigned __int8 *)(v35 + v18);
      if (v36 > 2)
      {
LABEL_79:
        unsigned int v44 = a2[v20];
        unsigned int v45 = v44 - 2;
        if (v44 >= 2)
        {
          if (v20 <= 3) {
            uint64_t v46 = v20;
          }
          else {
            uint64_t v46 = 4;
          }
          switch(v46)
          {
            case 1:
              int v47 = *a2;
              goto LABEL_88;
            case 2:
              int v47 = *(unsigned __int16 *)a2;
              goto LABEL_88;
            case 3:
              int v47 = *(unsigned __int16 *)a2 | (a2[2] << 16);
              goto LABEL_88;
            case 4:
              int v47 = *(_DWORD *)a2;
LABEL_88:
              if (v20 < 4) {
                unsigned int v44 = (v47 | (v45 << (8 * v20))) + 2;
              }
              else {
                unsigned int v44 = v47 + 2;
              }
              break;
            default:
              break;
          }
        }
        if (v44 != 1)
        {
          char v52 = 0;
          long long v53 = *((_OWORD *)a2 + 1);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *((_OWORD *)a1 + 1) = v53;
          goto LABEL_141;
        }
        unsigned int v48 = a2[v18];
        unsigned int v49 = v48 - 3;
        if (v48 >= 3)
        {
          if (v18 <= 3) {
            uint64_t v50 = v18;
          }
          else {
            uint64_t v50 = 4;
          }
          switch(v50)
          {
            case 1:
              int v51 = *a2;
              goto LABEL_102;
            case 2:
              int v51 = *(unsigned __int16 *)a2;
              goto LABEL_102;
            case 3:
              int v51 = *(unsigned __int16 *)a2 | (a2[2] << 16);
              goto LABEL_102;
            case 4:
              int v51 = *(_DWORD *)a2;
LABEL_102:
              if (v18 < 4) {
                unsigned int v48 = (v51 | (v49 << (8 * v18))) + 3;
              }
              else {
                unsigned int v48 = v51 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v48 == 2)
        {
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v405 + 32))(a1, a2, v410);
          *(_OWORD *)((unint64_t)&a1[v8 + 7] & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&a2[v8 + 7] & 0xFFFFFFFFFFFFFFF8);
          char v64 = 2;
        }
        else
        {
          if (v48 != 1)
          {
            *(_OWORD *)a1 = *(_OWORD *)a2;
            a1[v18] = 0;
LABEL_128:
            unint64_t v70 = (_OWORD *)((unint64_t)&a1[v19] & v412);
            uint64_t v71 = (_OWORD *)((unint64_t)&a2[v19] & v412);
            unsigned int v72 = *((unsigned __int8 *)v71 + v18);
            if (v72 > 2)
            {
              memcpy((void *)((unint64_t)&a1[v19] & v412), (const void *)((unint64_t)&a2[v19] & v412), v18 + 1);
            }
            else if (v72 == 2)
            {
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v405 + 32))((unint64_t)&a1[v19] & v412, (unint64_t)&a2[v19] & v412, v410);
              *(_OWORD *)(((unint64_t)v70 + v362) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v71
                                                                                              + v362) & 0xFFFFFFFFFFFFFFF8);
              *((unsigned char *)v70 + v18) = 2;
            }
            else
            {
              if (v72 == 1)
              {
                *unint64_t v70 = *v71;
                unint64_t v73 = ((unint64_t)v71 + v358) & v398;
                unsigned int v74 = *(void (**)(unint64_t, unint64_t, uint64_t))(v405 + 32);
                v74(((unint64_t)v70 + v358) & v398, v73, v410);
                uint64_t v75 = (unsigned char *)((v351 + (((unint64_t)v70 + v358) & v398)) & v412);
                int v76 = (unsigned __int8 *)((v351 + v73) & v412);
                unint64_t v77 = v395;
                unsigned int v78 = v76[v395];
                unsigned int v79 = v78 - 4;
                if (v78 >= 4)
                {
                  if (v395 <= 3) {
                    uint64_t v80 = v395;
                  }
                  else {
                    uint64_t v80 = 4;
                  }
                  switch(v80)
                  {
                    case 1:
                      int v81 = *v76;
                      goto LABEL_237;
                    case 2:
                      int v81 = *(unsigned __int16 *)v76;
                      goto LABEL_237;
                    case 3:
                      int v81 = *(unsigned __int16 *)((v351 + v73) & v412) | (*(unsigned __int8 *)(((v351 + v73) & v412) + 2) << 16);
                      goto LABEL_237;
                    case 4:
                      int v81 = *(_DWORD *)v76;
LABEL_237:
                      if (v395 < 4) {
                        unsigned int v78 = (v81 | (v79 << (8 * v395))) + 4;
                      }
                      else {
                        unsigned int v78 = v81 + 4;
                      }
                      break;
                    default:
                      break;
                  }
                }
                switch(v78)
                {
                  case 1u:
                    *uint64_t v75 = *v76;
                    char v186 = 1;
                    break;
                  case 2u:
                    *(_OWORD *)uint64_t v75 = *(_OWORD *)v76;
                    (*(void (**)(unint64_t))(v387 + 32))((unint64_t)&v75[v379] & v375);
                    unint64_t v187 = (v383 + ((unint64_t)&v75[v379] & v375)) & v398;
                    unint64_t v188 = (v383 + ((unint64_t)&v76[v379] & v375)) & v398;
                    v74(v187, v188, v410);
                    unint64_t v77 = v395;
                    *(void *)((v362 + v187) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v362 + v188) & 0xFFFFFFFFFFFFFFF8);
                    v75[v349] = v76[v349];
                    char v186 = 2;
                    break;
                  case 3u:
                    *(_OWORD *)uint64_t v75 = *(_OWORD *)v76;
                    unint64_t v189 = (unint64_t)&v76[v379] & v375;
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v387 + 32))((unint64_t)&v75[v379] & v375, v189, v391);
                    unint64_t v190 = (v383 + ((unint64_t)&v75[v379] & v375)) & v398;
                    v74(v190, (v383 + v189) & v398, v410);
                    unint64_t v77 = v395;
                    *(void *)((v362 + v190) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v362 + ((v383 + v189) & v398)) & 0xFFFFFFFFFFFFFFF8);
                    char v186 = 3;
                    break;
                  default:
                    char v186 = 0;
                    *(_WORD *)uint64_t v75 = *(_WORD *)v76;
                    break;
                }
                v75[v77] = v186;
                char v52 = 1;
                *((unsigned char *)v70 + v18) = 1;
                goto LABEL_141;
              }
              *unint64_t v70 = *v71;
              *((unsigned char *)v70 + v18) = 0;
            }
            char v52 = 1;
LABEL_141:
            uint64_t v3 = a3;
            a1[v20] = v52;
            goto LABEL_142;
          }
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v54 = (unint64_t)&a1[v7 + 16] & v398;
          uint64_t v55 = (unint64_t)&a2[v7 + 16] & v398;
          v348 = *(void (**)(uint64_t, uint64_t, uint64_t))(v405 + 32);
          v348(v54, v55, v410);
          uint64_t v56 = v8 + v11;
          unsigned int v57 = (unsigned char *)((v54 + v8 + v11) & v412);
          unsigned int v58 = (unsigned __int8 *)((v55 + v56) & v412);
          unint64_t v59 = v395;
          unsigned int v60 = v58[v395];
          unsigned int v61 = v60 - 4;
          if (v60 >= 4)
          {
            if (v395 <= 3) {
              uint64_t v62 = v395;
            }
            else {
              uint64_t v62 = 4;
            }
            switch(v62)
            {
              case 1:
                int v63 = *v58;
                goto LABEL_118;
              case 2:
                int v63 = *(unsigned __int16 *)v58;
                goto LABEL_118;
              case 3:
                int v63 = *(unsigned __int16 *)v58 | (v58[2] << 16);
                goto LABEL_118;
              case 4:
                int v63 = *(_DWORD *)v58;
LABEL_118:
                if (v395 < 4) {
                  unsigned int v60 = (v63 | (v61 << (8 * v395))) + 4;
                }
                else {
                  unsigned int v60 = v63 + 4;
                }
                break;
              default:
                break;
            }
          }
          switch(v60)
          {
            case 1u:
              *unsigned int v57 = *v58;
              char v65 = 1;
              break;
            case 2u:
              *(_OWORD *)unsigned int v57 = *(_OWORD *)v58;
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v387 + 32))((unint64_t)&v57[v379] & v375, (unint64_t)&v58[v379] & v375, v391);
              unint64_t v66 = (v383 + ((unint64_t)&v57[v379] & v375)) & v398;
              unint64_t v67 = (v383 + ((unint64_t)&v58[v379] & v375)) & v398;
              v348(v66, v67, v410);
              unint64_t v59 = v395;
              *(void *)((v362 + v66) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v362 + v67) & 0xFFFFFFFFFFFFFFF8);
              v57[v349] = v58[v349];
              char v65 = 2;
              break;
            case 3u:
              *(_OWORD *)unsigned int v57 = *(_OWORD *)v58;
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v387 + 32))((unint64_t)&v57[v379] & v375, (unint64_t)&v58[v379] & v375, v391);
              unint64_t v68 = (v383 + ((unint64_t)&v57[v379] & v375)) & v398;
              unint64_t v69 = (v383 + ((unint64_t)&v58[v379] & v375)) & v398;
              v348(v68, v69, v410);
              unint64_t v59 = v395;
              *(void *)((v362 + v68) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v362 + v69) & 0xFFFFFFFFFFFFFFF8);
              char v65 = 3;
              break;
            default:
              char v65 = 0;
              *(_WORD *)unsigned int v57 = *(_WORD *)v58;
              break;
          }
          v57[v59] = v65;
          char v64 = 1;
        }
        a1[v18] = v64;
        goto LABEL_128;
      }
      if (v36 == 2)
      {
        (*(void (**)(unint64_t, uint64_t))(v405 + 8))((unint64_t)&a1[v19] & v412, v410);
        goto LABEL_79;
      }
      if (v36 == 1)
      {
        swift_bridgeObjectRelease();
        unint64_t v37 = (v358 + v35) & v398;
        unint64_t v347 = *(void (**)(unint64_t, uint64_t))(v405 + 8);
        v347(v37, v410);
        uint64_t v38 = (unsigned __int8 *)((v351 + v37) & v412);
        unsigned int v39 = v38[v395];
        unsigned int v40 = v39 - 4;
        if (v39 >= 4)
        {
          if (v395 <= 3) {
            uint64_t v41 = v395;
          }
          else {
            uint64_t v41 = 4;
          }
          switch(v41)
          {
            case 1:
              int v42 = *v38;
              goto LABEL_74;
            case 2:
              int v42 = *(unsigned __int16 *)v38;
              goto LABEL_74;
            case 3:
              int v42 = *(unsigned __int16 *)v38 | (v38[2] << 16);
              goto LABEL_74;
            case 4:
              int v42 = *(_DWORD *)v38;
LABEL_74:
              if (v395 < 4) {
                unsigned int v39 = (v42 | (v40 << (8 * v395))) + 4;
              }
              else {
                unsigned int v39 = v42 + 4;
              }
              break;
            default:
              break;
          }
        }
        if (v39 >= 2)
        {
          swift_bridgeObjectRelease();
          unint64_t v43 = (unint64_t)&v38[v379] & v375;
          (*(void (**)(unint64_t, uint64_t))(v387 + 8))(v43, v391);
          v347((v383 + v43) & v398, v410);
        }
        goto LABEL_79;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    goto LABEL_79;
  }
LABEL_142:
  uint64_t v82 = sub_22EE7F6E0();
  uint64_t v83 = *(void *)(v82 - 8);
  uint64_t v84 = *(unsigned __int8 *)(v83 + 80);
  uint64_t v411 = ~v84;
  uint64_t v413 = v82;
  uint64_t v406 = v84 + 16;
  uint64_t v85 = *(void *)(v83 + 64);
  uint64_t v86 = sub_22EE7F5D0();
  uint64_t v87 = *(unsigned __int8 *)(*(void *)(v86 - 8) + 80);
  uint64_t v88 = v84 | v87 | 7;
  uint64_t v89 = ~v88;
  uint64_t v90 = v88 + v85;
  uint64_t v91 = (v88 + v85 + ((v84 + 16) & ~v84)) & ~v88;
  uint64_t v92 = ~v87;
  uint64_t v93 = v87 + 16;
  uint64_t v94 = *(void *)(*(void *)(v86 - 8) + 64);
  uint64_t v95 = v94 + v84;
  uint64_t v96 = v85 + 7;
  unint64_t v97 = (v85 + 7 + ((v94 + v84 + ((v87 + 16) & ~v87)) & ~v84)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v98 = v97 + 8;
  unint64_t v99 = v97 + 9;
  if (v99 <= v98) {
    unint64_t v99 = v98;
  }
  if (v99 <= 2) {
    uint64_t v100 = 2;
  }
  else {
    uint64_t v100 = v99;
  }
  if (v100 + v91 + 1 > (v96 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v101 = v100 + v91 + 1;
  }
  else {
    unint64_t v101 = (v96 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v101 <= 0x10) {
    uint64_t v102 = 16;
  }
  else {
    uint64_t v102 = v101;
  }
  size_t v103 = v102 + 1;
  uint64_t v104 = v102 + 1 + v88;
  if ((v104 & (unint64_t)~v88) + v102 + 1 <= 0x20) {
    uint64_t v105 = 32;
  }
  else {
    uint64_t v105 = (v104 & ~v88) + v102 + 1;
  }
  size_t v106 = v105 + 1;
  uint64_t v107 = v105 + 1 + v88;
  unint64_t v108 = (unint64_t)&a1[v107] & ~v88;
  unint64_t v109 = (unint64_t)&a2[v107] & ~v88;
  unsigned int v110 = *(unsigned __int8 *)(v108 + v105);
  unsigned int v111 = *(unsigned __int8 *)(v109 + v105);
  if (v110 <= 1)
  {
    if (v111 <= 1)
    {
      if (v108 == v109) {
        goto LABEL_415;
      }
      uint64_t v392 = *(void *)(v86 - 8);
      uint64_t v396 = v83;
      uint64_t v376 = v86;
      uint64_t v380 = v95;
      uint64_t v384 = v93;
      uint64_t v388 = v92;
      uint64_t v350 = v96;
      unint64_t v345 = v98;
      if (v110 != 1)
      {
        uint64_t v124 = v100;
        uint64_t v125 = v102;
        uint64_t v126 = v90;
        uint64_t v127 = ~v88;
        uint64_t v128 = v102 + 1 + v88;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_184;
      }
      unsigned int v112 = *(unsigned __int8 *)(v108 + v102);
      unsigned int v113 = v112 - 3;
      if (v112 >= 3)
      {
        if (v102 <= 3) {
          uint64_t v114 = v102;
        }
        else {
          uint64_t v114 = 4;
        }
        switch(v114)
        {
          case 1:
            int v115 = *(unsigned __int8 *)v108;
            goto LABEL_221;
          case 2:
            int v115 = *(unsigned __int16 *)v108;
            goto LABEL_221;
          case 3:
            int v115 = *(unsigned __int16 *)v108 | (*(unsigned __int8 *)(v108 + 2) << 16);
            goto LABEL_221;
          case 4:
            int v115 = *(_DWORD *)v108;
LABEL_221:
            int v172 = (v115 | (v113 << (8 * v102))) + 3;
            unsigned int v112 = v115 + 3;
            if (v102 < 4) {
              unsigned int v112 = v172;
            }
            break;
          default:
            break;
        }
      }
      size_t __nb = v102;
      if (v112 != 2)
      {
        uint64_t v401 = v102 + 1 + v88;
        if (v112 == 1)
        {
          uint64_t v365 = v100;
          uint64_t v173 = ~v88;
          swift_bridgeObjectRelease();
          v343 = *(void (**)(unint64_t, uint64_t))(v396 + 8);
          v343((v406 + v108) & v411, v413);
          uint64_t v130 = v173;
          uint64_t v132 = v365;
          uint64_t v174 = (unsigned __int8 *)((v90 + ((v406 + v108) & v411)) & v173);
          unsigned int v175 = v174[v365];
          unsigned int v176 = v175 - 4;
          if (v175 < 4)
          {
            size_t v131 = __nb;
            uint64_t v129 = v401;
          }
          else
          {
            if (v365 <= 3) {
              uint64_t v177 = v365;
            }
            else {
              uint64_t v177 = 4;
            }
            size_t v131 = __nb;
            uint64_t v129 = v401;
            switch(v177)
            {
              case 1:
                int v178 = *v174;
                goto LABEL_292;
              case 2:
                int v178 = *(unsigned __int16 *)v174;
                goto LABEL_292;
              case 3:
                int v178 = *(unsigned __int16 *)((v90 + ((v406 + v108) & v411)) & v173) | (*(unsigned __int8 *)(((v90 + ((v406 + v108) & v411)) & v173) + 2) << 16);
                goto LABEL_292;
              case 4:
                int v178 = *(_DWORD *)v174;
LABEL_292:
                int v228 = (v178 | (v176 << (8 * v365))) + 4;
                unsigned int v175 = v178 + 4;
                if (v365 < 4) {
                  unsigned int v175 = v228;
                }
                break;
              default:
                break;
            }
          }
          if (v175 < 2) {
            goto LABEL_299;
          }
          if (v175 == 3)
          {
            swift_bridgeObjectRelease();
            unint64_t v229 = (unint64_t)&v174[v384] & v388;
            (*(void (**)(unint64_t, uint64_t))(v392 + 8))(v229, v376);
            v343((v380 + v229) & v411, v413);
            uint64_t v129 = v401;
            uint64_t v130 = v173;
            uint64_t v132 = v365;
            size_t v131 = __nb;
            goto LABEL_299;
          }
          swift_bridgeObjectRelease();
          unint64_t v230 = (unint64_t)&v174[v384] & v388;
          (*(void (**)(unint64_t, uint64_t))(v392 + 8))(v230, v376);
          v343((v380 + v230) & v411, v413);
          uint64_t v132 = v365;
          size_t v131 = __nb;
          uint64_t v130 = v173;
        }
        else
        {
          uint64_t v354 = ~v88;
          uint64_t v185 = v100;
          swift_bridgeObjectRelease();
          uint64_t v132 = v185;
          size_t v131 = __nb;
          uint64_t v130 = v354;
        }
        uint64_t v129 = v401;
        goto LABEL_299;
      }
      uint64_t v179 = *(void (**)(unint64_t, uint64_t))(v83 + 8);
      uint64_t v180 = v100;
      uint64_t v181 = v102;
      uint64_t v182 = v90;
      uint64_t v183 = ~v88;
      uint64_t v184 = v102 + 1 + v88;
      v179(v108, v413);
      uint64_t v129 = v184;
      uint64_t v130 = v183;
      uint64_t v90 = v182;
      size_t v131 = v181;
      uint64_t v132 = v180;
LABEL_299:
      unint64_t v231 = (v129 + v108) & v130;
      unsigned int v232 = *(unsigned __int8 *)(v231 + v131);
      if (v232 > 2) {
        goto LABEL_337;
      }
      if (v232 != 2)
      {
        if (v232 == 1)
        {
          uint64_t v233 = v129;
          uint64_t v367 = v132;
          uint64_t v234 = v130;
          swift_bridgeObjectRelease();
          unint64_t v235 = (v406 + v231) & v411;
          size_t v355 = *(void (**)(unint64_t, uint64_t))(v396 + 8);
          v355(v235, v413);
          uint64_t v130 = v234;
          uint64_t v132 = v367;
          unsigned int v236 = (unsigned __int8 *)((v90 + v235) & v234);
          unsigned int v237 = v236[v367];
          unsigned int v238 = v237 - 4;
          if (v237 < 4)
          {
            size_t v131 = __nb;
            uint64_t v129 = v233;
          }
          else
          {
            if (v367 <= 3) {
              uint64_t v239 = v367;
            }
            else {
              uint64_t v239 = 4;
            }
            size_t v131 = __nb;
            uint64_t v129 = v233;
            switch(v239)
            {
              case 1:
                int v240 = *v236;
                goto LABEL_330;
              case 2:
                int v240 = *(unsigned __int16 *)v236;
                goto LABEL_330;
              case 3:
                int v240 = *(unsigned __int16 *)v236 | (v236[2] << 16);
                goto LABEL_330;
              case 4:
                int v240 = *(_DWORD *)v236;
LABEL_330:
                int v252 = (v240 | (v238 << (8 * v367))) + 4;
                unsigned int v237 = v240 + 4;
                if (v367 < 4) {
                  unsigned int v237 = v252;
                }
                break;
              default:
                break;
            }
          }
          if (v237 < 2)
          {
LABEL_337:
            unsigned int v255 = *(unsigned __int8 *)(v109 + v105);
            unsigned int v256 = v255 - 2;
            if (v255 < 2)
            {
              uint64_t v3 = a3;
              uint64_t v258 = v396;
              size_t v106 = v105 + 1;
              uint64_t v259 = v350;
            }
            else
            {
              if (v105 <= 3) {
                uint64_t v257 = v105;
              }
              else {
                uint64_t v257 = 4;
              }
              uint64_t v3 = a3;
              uint64_t v258 = v396;
              size_t v106 = v105 + 1;
              uint64_t v259 = v350;
              switch(v257)
              {
                case 1:
                  int v260 = *(unsigned __int8 *)v109;
                  goto LABEL_347;
                case 2:
                  int v260 = *(unsigned __int16 *)v109;
                  goto LABEL_347;
                case 3:
                  int v260 = *(unsigned __int16 *)v109 | (*(unsigned __int8 *)(v109 + 2) << 16);
                  goto LABEL_347;
                case 4:
                  int v260 = *(_DWORD *)v109;
LABEL_347:
                  int v261 = (v260 | (v256 << (8 * v105))) + 2;
                  unsigned int v255 = v260 + 2;
                  if (v105 < 4) {
                    unsigned int v255 = v261;
                  }
                  break;
                default:
                  break;
              }
            }
            if (v255 == 1)
            {
              unsigned int v262 = *(unsigned __int8 *)(v109 + v131);
              unsigned int v263 = v262 - 3;
              if (v262 >= 3)
              {
                if (v131 <= 3) {
                  uint64_t v264 = v131;
                }
                else {
                  uint64_t v264 = 4;
                }
                switch(v264)
                {
                  case 1:
                    int v265 = *(unsigned __int8 *)v109;
                    goto LABEL_360;
                  case 2:
                    int v265 = *(unsigned __int16 *)v109;
                    goto LABEL_360;
                  case 3:
                    int v265 = *(unsigned __int16 *)v109 | (*(unsigned __int8 *)(v109 + 2) << 16);
                    goto LABEL_360;
                  case 4:
                    int v265 = *(_DWORD *)v109;
LABEL_360:
                    int v267 = (v265 | (v263 << (8 * v131))) + 3;
                    unsigned int v262 = v265 + 3;
                    if (v131 < 4) {
                      unsigned int v262 = v267;
                    }
                    break;
                  default:
                    break;
                }
              }
              uint64_t v404 = v129;
              uint64_t v361 = v90;
              if (v262 == 2)
              {
                uint64_t v278 = *(void (**)(unint64_t, unint64_t, uint64_t))(v258 + 32);
                uint64_t v279 = v130;
                uint64_t v280 = v132;
                size_t v281 = v131;
                uint64_t v282 = v259;
                v278(v108, v109, v413);
                uint64_t v259 = v282;
                uint64_t v130 = v279;
                size_t v131 = v281;
                uint64_t v132 = v280;
                *(_OWORD *)((v282 + v108) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v282 + v109) & 0xFFFFFFFFFFFFFFF8);
                char v283 = 2;
              }
              else
              {
                if (v262 == 1)
                {
                  size_t __nd = v131;
                  *(_OWORD *)unint64_t v108 = *(_OWORD *)v109;
                  unint64_t v268 = (v406 + v109) & v411;
                  uint64_t v357 = v130;
                  uint64_t v368 = v132;
                  v344 = *(void (**)(unint64_t, unint64_t, uint64_t))(v258 + 32);
                  v344((v406 + v108) & v411, v268, v413);
                  uint64_t v130 = v357;
                  uint64_t v132 = v368;
                  unint64_t v269 = (unsigned char *)((v90 + ((v406 + v108) & v411)) & v357);
                  uint64_t v270 = (unsigned __int8 *)((v90 + v268) & v357);
                  unsigned int v271 = v270[v368];
                  unsigned int v272 = v271 - 4;
                  if (v271 < 4)
                  {
                    uint64_t v275 = v388;
                    uint64_t v274 = v392;
                    uint64_t v276 = v384;
                  }
                  else
                  {
                    if (v368 <= 3) {
                      uint64_t v273 = v368;
                    }
                    else {
                      uint64_t v273 = 4;
                    }
                    uint64_t v275 = v388;
                    uint64_t v274 = v392;
                    uint64_t v276 = v384;
                    switch(v273)
                    {
                      case 1:
                        int v277 = *v270;
                        goto LABEL_377;
                      case 2:
                        int v277 = *(unsigned __int16 *)v270;
                        goto LABEL_377;
                      case 3:
                        int v277 = *(unsigned __int16 *)v270 | (*(unsigned __int8 *)(((v90 + v268) & v357) + 2) << 16);
                        goto LABEL_377;
                      case 4:
                        int v277 = *(_DWORD *)v270;
LABEL_377:
                        int v285 = (v277 | (v272 << (8 * v368))) + 4;
                        unsigned int v271 = v277 + 4;
                        if (v368 < 4) {
                          unsigned int v271 = v285;
                        }
                        break;
                      default:
                        break;
                    }
                  }
                  switch(v271)
                  {
                    case 1u:
                      *unint64_t v269 = *v270;
                      char v286 = 1;
                      goto LABEL_382;
                    case 2u:
                      *(_OWORD *)unint64_t v269 = *(_OWORD *)v270;
                      unint64_t v287 = (unint64_t)&v270[v276] & v275;
                      unint64_t v288 = (unint64_t)&v269[v276] & v275;
                      (*(void (**)(void))(v274 + 32))();
                      unint64_t v289 = (v380 + v288) & v411;
                      unint64_t v290 = (v380 + v287) & v411;
                      v344(v289, v290, v413);
                      unint64_t v269 = (unsigned char *)((v90 + ((v406 + v108) & v411)) & v357);
                      uint64_t v259 = v350;
                      uint64_t v130 = v357;
                      uint64_t v132 = v368;
                      *(void *)((v350 + v289) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v350 + v290) & 0xFFFFFFFFFFFFFFF8);
                      v269[v345] = v270[v345];
                      char v286 = 2;
                      goto LABEL_385;
                    case 3u:
                      *(_OWORD *)unint64_t v269 = *(_OWORD *)v270;
                      unint64_t v291 = (unint64_t)&v270[v276] & v275;
                      unint64_t v292 = (unint64_t)&v269[v276] & v275;
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v274 + 32))(v292, v291, v376);
                      unint64_t v293 = (v380 + v292) & v411;
                      unint64_t v294 = (v380 + v291) & v411;
                      v344(v293, v294, v413);
                      unint64_t v269 = (unsigned char *)((v90 + ((v406 + v108) & v411)) & v357);
                      uint64_t v259 = v350;
                      uint64_t v130 = v357;
                      uint64_t v132 = v368;
                      *(void *)((v350 + v293) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v350 + v294) & 0xFFFFFFFFFFFFFFF8);
                      char v286 = 3;
LABEL_385:
                      size_t v131 = __nd;
                      uint64_t v284 = v404;
                      break;
                    default:
                      char v286 = 0;
                      *(_WORD *)unint64_t v269 = *(_WORD *)v270;
LABEL_382:
                      size_t v131 = __nd;
                      uint64_t v284 = v404;
                      uint64_t v259 = v350;
                      break;
                  }
                  v269[v132] = v286;
                  char v283 = 1;
LABEL_387:
                  *(unsigned char *)(v108 + v131) = v283;
                  unint64_t v198 = (_OWORD *)((v284 + v108) & v130);
                  uint64_t v199 = (_OWORD *)((v284 + v109) & v130);
                  unsigned int v295 = *((unsigned __int8 *)v199 + v131);
                  if (v295 <= 2)
                  {
                    if (v295 != 2)
                    {
                      if (v295 == 1)
                      {
                        size_t __nc = v131;
                        _OWORD *v198 = *v199;
                        unint64_t v296 = ((unint64_t)v199 + v406) & v411;
                        uint64_t v297 = *(void (**)(unint64_t, unint64_t, uint64_t))(v396 + 32);
                        uint64_t v298 = v130;
                        uint64_t v369 = v132;
                        v297(((unint64_t)v198 + v406) & v411, v296, v413);
                        uint64_t v204 = v369;
                        unint64_t v205 = (_OWORD *)((v361 + (((unint64_t)v198 + v406) & v411)) & v298);
                        unint64_t v206 = (unsigned __int8 *)((v361 + v296) & v298);
                        unsigned int v299 = v206[v369];
                        unsigned int v300 = v299 - 4;
                        if (v299 < 4)
                        {
                          uint64_t v303 = v388;
                          uint64_t v302 = v392;
                          uint64_t v304 = v384;
                        }
                        else
                        {
                          if (v369 <= 3) {
                            uint64_t v301 = v369;
                          }
                          else {
                            uint64_t v301 = 4;
                          }
                          uint64_t v303 = v388;
                          uint64_t v302 = v392;
                          uint64_t v304 = v384;
                          switch(v301)
                          {
                            case 1:
                              int v305 = *v206;
                              goto LABEL_404;
                            case 2:
                              int v305 = *(unsigned __int16 *)v206;
                              goto LABEL_404;
                            case 3:
                              int v305 = *(unsigned __int16 *)v206 | (*(unsigned __int8 *)(((v361 + v296) & v298) + 2) << 16);
                              goto LABEL_404;
                            case 4:
                              int v305 = *(_DWORD *)v206;
LABEL_404:
                              int v308 = (v305 | (v300 << (8 * v369))) + 4;
                              unsigned int v299 = v305 + 4;
                              if (v369 < 4) {
                                unsigned int v299 = v308;
                              }
                              break;
                            default:
                              break;
                          }
                        }
                        switch(v299)
                        {
                          case 1u:
                            goto LABEL_408;
                          case 2u:
                            *unint64_t v205 = *(_OWORD *)v206;
                            unint64_t v310 = ((unint64_t)v205 + v304) & v303;
                            unint64_t v311 = (unint64_t)&v206[v304] & v303;
                            uint64_t v408 = v205;
                            (*(void (**)(unint64_t, unint64_t, uint64_t))(v302 + 32))(v310, v311, v376);
                            unint64_t v245 = (v380 + v310) & v411;
                            unint64_t v246 = (v380 + v311) & v411;
                            v297(v245, v246, v413);
                            unint64_t v205 = v408;
                            uint64_t v204 = v369;
                            uint64_t v96 = v350;
                            goto LABEL_410;
                          case 3u:
                            *unint64_t v205 = *(_OWORD *)v206;
                            unint64_t v312 = ((unint64_t)v205 + v304) & v303;
                            unint64_t v313 = (unint64_t)&v206[v304] & v303;
                            uint64_t v409 = v205;
                            (*(void (**)(unint64_t, unint64_t, uint64_t))(v302 + 32))(v312, v313, v376);
                            unint64_t v249 = (v380 + v312) & v411;
                            unint64_t v250 = (v380 + v313) & v411;
                            v297(v249, v250, v413);
                            unint64_t v205 = v409;
                            uint64_t v204 = v369;
                            uint64_t v96 = v350;
                            goto LABEL_412;
                          default:
                            goto LABEL_407;
                        }
                      }
                      _OWORD *v198 = *v199;
                      *((unsigned char *)v198 + v131) = 0;
                      goto LABEL_414;
                    }
                    unint64_t v306 = (v284 + v108) & v130;
                    unint64_t v307 = (v284 + v109) & v130;
                    uint64_t v214 = v131;
                    uint64_t v96 = v259;
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v396 + 32))(v306, v307, v413);
                    goto LABEL_398;
                  }
                  goto LABEL_396;
                }
                char v283 = 0;
                *(_OWORD *)unint64_t v108 = *(_OWORD *)v109;
              }
              uint64_t v284 = v404;
              goto LABEL_387;
            }
LABEL_356:
            long long v266 = *(_OWORD *)(v109 + 16);
            *(_OWORD *)unint64_t v108 = *(_OWORD *)v109;
            *(_OWORD *)(v108 + 16) = v266;
            *(unsigned char *)(v108 + v105) = 0;
            goto LABEL_415;
          }
          if (v237 == 3)
          {
            swift_bridgeObjectRelease();
            unint64_t v253 = (unint64_t)&v236[v384] & v388;
            (*(void (**)(unint64_t, uint64_t))(v392 + 8))(v253, v376);
            v355((v380 + v253) & v411, v413);
            uint64_t v129 = v233;
            uint64_t v130 = v234;
            uint64_t v132 = v367;
            size_t v131 = __nb;
            goto LABEL_337;
          }
          swift_bridgeObjectRelease();
          unint64_t v254 = (unint64_t)&v236[v384] & v388;
          (*(void (**)(unint64_t, uint64_t))(v392 + 8))(v254, v376);
          v355((v380 + v254) & v411, v413);
          uint64_t v132 = v367;
          size_t v131 = __nb;
          uint64_t v130 = v234;
        }
        else
        {
          uint64_t v356 = v130;
          uint64_t v233 = v129;
          uint64_t v241 = v132;
          swift_bridgeObjectRelease();
          uint64_t v132 = v241;
          size_t v131 = __nb;
          uint64_t v130 = v356;
        }
        uint64_t v129 = v233;
        goto LABEL_337;
      }
      uint64_t v124 = v132;
      uint64_t v125 = v131;
      uint64_t v126 = v90;
      uint64_t v127 = v130;
      uint64_t v128 = v129;
      (*(void (**)(unint64_t, uint64_t))(v396 + 8))((v129 + v108) & v130, v413);
LABEL_184:
      uint64_t v129 = v128;
      uint64_t v130 = v127;
      uint64_t v90 = v126;
      size_t v131 = v125;
      uint64_t v132 = v124;
      goto LABEL_337;
    }
    if (v110 == 1)
    {
      unsigned int v120 = *(unsigned __int8 *)(v108 + v102);
      unsigned int v121 = v120 - 3;
      uint64_t v382 = v95;
      if (v120 >= 3)
      {
        if (v102 <= 3) {
          uint64_t v122 = v102;
        }
        else {
          uint64_t v122 = 4;
        }
        switch(v122)
        {
          case 1:
            int v123 = *(unsigned __int8 *)v108;
            goto LABEL_205;
          case 2:
            int v123 = *(unsigned __int16 *)v108;
            goto LABEL_205;
          case 3:
            int v123 = *(unsigned __int16 *)v108 | (*(unsigned __int8 *)(v108 + 2) << 16);
            goto LABEL_205;
          case 4:
            int v123 = *(_DWORD *)v108;
LABEL_205:
            int v151 = (v123 | (v121 << (8 * v102))) + 3;
            unsigned int v120 = v123 + 3;
            if (v102 < 4) {
              unsigned int v120 = v151;
            }
            break;
          default:
            break;
        }
      }
      uint64_t v378 = v86;
      uint64_t v390 = v92;
      uint64_t v394 = *(void *)(v86 - 8);
      uint64_t v386 = v93;
      uint64_t v360 = v90;
      if (v120 == 2)
      {
        uint64_t v163 = v100;
        uint64_t v164 = v102;
        uint64_t v165 = ~v88;
        size_t v166 = v106;
        uint64_t v167 = v102 + 1 + v88;
        (*(void (**)(unint64_t, uint64_t))(v83 + 8))(v108, v413);
        uint64_t v161 = v167;
        size_t v106 = v166;
        uint64_t v154 = v165;
        size_t v160 = v164;
        uint64_t v155 = v163;
      }
      else if (v120 == 1)
      {
        uint64_t v400 = v102 + 1 + v88;
        uint64_t v364 = v100;
        size_t __na = v102;
        uint64_t v353 = ~v88;
        swift_bridgeObjectRelease();
        unint64_t v152 = (v406 + v108) & v411;
        uint64_t v153 = *(void (**)(unint64_t, uint64_t))(v83 + 8);
        v153(v152, v413);
        uint64_t v154 = v353;
        uint64_t v155 = v364;
        uint64_t v156 = (unsigned __int8 *)((v360 + v152) & v353);
        unsigned int v157 = v156[v364];
        unsigned int v158 = v157 - 4;
        if (v157 < 4)
        {
          size_t v160 = __na;
          uint64_t v161 = v400;
        }
        else
        {
          if (v364 <= 3) {
            uint64_t v159 = v364;
          }
          else {
            uint64_t v159 = 4;
          }
          size_t v160 = __na;
          uint64_t v161 = v400;
          switch(v159)
          {
            case 1:
              int v162 = *v156;
              goto LABEL_272;
            case 2:
              int v162 = *(unsigned __int16 *)v156;
              goto LABEL_272;
            case 3:
              int v162 = *(unsigned __int16 *)v156 | (*(unsigned __int8 *)(((v360 + v152) & v353) + 2) << 16);
              goto LABEL_272;
            case 4:
              int v162 = *(_DWORD *)v156;
LABEL_272:
              int v215 = (v162 | (v158 << (8 * v364))) + 4;
              unsigned int v157 = v162 + 4;
              if (v364 < 4) {
                unsigned int v157 = v215;
              }
              break;
            default:
              break;
          }
        }
        if (v157 >= 2)
        {
          if (v157 == 3)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v394 + 8))((unint64_t)&v156[v386] & v390, v378);
            v153((v382 + ((unint64_t)&v156[v386] & v390)) & v411, v413);
            uint64_t v161 = v400;
            uint64_t v154 = v353;
            uint64_t v155 = v364;
            size_t v160 = __na;
          }
          else
          {
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v394 + 8))((unint64_t)&v156[v386] & v390, v378);
            v153((v382 + ((unint64_t)&v156[v386] & v390)) & v411, v413);
            uint64_t v155 = v364;
            size_t v160 = __na;
            uint64_t v154 = v353;
            uint64_t v161 = v400;
          }
        }
      }
      else
      {
        uint64_t v168 = v102 + 1 + v88;
        uint64_t v169 = ~v88;
        uint64_t v170 = v102;
        uint64_t v171 = v100;
        swift_bridgeObjectRelease();
        uint64_t v155 = v171;
        size_t v160 = v170;
        uint64_t v154 = v169;
        uint64_t v161 = v168;
      }
      unint64_t v216 = (v161 + v108) & v154;
      unsigned int v217 = *(unsigned __int8 *)(v216 + v160);
      if (v217 > 2) {
        goto LABEL_326;
      }
      if (v217 == 2)
      {
        (*(void (**)(unint64_t, uint64_t))(v83 + 8))((v161 + v108) & v154, v413);
        goto LABEL_326;
      }
      if (v217 == 1)
      {
        uint64_t v218 = v155;
        uint64_t v219 = v154;
        swift_bridgeObjectRelease();
        unint64_t v220 = (v406 + v216) & v411;
        int v221 = *(void (**)(unint64_t, uint64_t))(v83 + 8);
        v221(v220, v413);
        uint64_t v222 = v218;
        unsigned int v223 = (unsigned __int8 *)((v360 + v220) & v219);
        unsigned int v224 = v223[v222];
        unsigned int v225 = v224 - 4;
        if (v224 >= 4)
        {
          if (v222 <= 3) {
            uint64_t v226 = v222;
          }
          else {
            uint64_t v226 = 4;
          }
          switch(v226)
          {
            case 1:
              int v227 = *v223;
              goto LABEL_322;
            case 2:
              int v227 = *(unsigned __int16 *)v223;
              goto LABEL_322;
            case 3:
              int v227 = *(unsigned __int16 *)v223 | (*(unsigned __int8 *)(((v360 + v220) & v219) + 2) << 16);
              goto LABEL_322;
            case 4:
              int v227 = *(_DWORD *)v223;
LABEL_322:
              int v251 = (v227 | (v225 << (8 * v222))) + 4;
              unsigned int v224 = v227 + 4;
              if (v222 < 4) {
                unsigned int v224 = v251;
              }
              break;
            default:
              break;
          }
        }
        if (v224 >= 2)
        {
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v394 + 8))((unint64_t)&v223[v386] & v390, v378);
          v221((v382 + ((unint64_t)&v223[v386] & v390)) & v411, v413);
        }
        goto LABEL_326;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
LABEL_326:
    memcpy((void *)v108, (const void *)v109, v106);
    goto LABEL_415;
  }
  if (v111 > 1) {
    goto LABEL_326;
  }
  if (v111 != 1) {
    goto LABEL_356;
  }
  unsigned int v116 = *(unsigned __int8 *)(v109 + v102);
  unsigned int v117 = v116 - 3;
  uint64_t v381 = v95;
  unint64_t v345 = v98;
  if (v116 >= 3)
  {
    if (v102 <= 3) {
      uint64_t v118 = v102;
    }
    else {
      uint64_t v118 = 4;
    }
    switch(v118)
    {
      case 1:
        int v119 = *(unsigned __int8 *)v109;
        goto LABEL_188;
      case 2:
        int v119 = *(unsigned __int16 *)v109;
        goto LABEL_188;
      case 3:
        int v119 = *(unsigned __int16 *)v109 | (*(unsigned __int8 *)(v109 + 2) << 16);
        goto LABEL_188;
      case 4:
        int v119 = *(_DWORD *)v109;
LABEL_188:
        int v133 = (v119 | (v117 << (8 * v102))) + 3;
        unsigned int v116 = v119 + 3;
        if (v102 < 4) {
          unsigned int v116 = v133;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v399 = v102 + 1 + v88;
  uint64_t v393 = *(void *)(v86 - 8);
  uint64_t v397 = v83;
  uint64_t v377 = v86;
  uint64_t v385 = v93;
  uint64_t v389 = v92;
  uint64_t v359 = v90;
  if (v116 == 2)
  {
    unint64_t v145 = *(void (**)(unint64_t, unint64_t, uint64_t))(v83 + 32);
    uint64_t v146 = ~v88;
    uint64_t v147 = v100;
    uint64_t v148 = v102;
    v145(v108, v109, v413);
    uint64_t v89 = v146;
    uint64_t v102 = v148;
    uint64_t v100 = v147;
    *(_OWORD *)((v96 + v108) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v96 + v109) & 0xFFFFFFFFFFFFFFF8);
    char v149 = 2;
LABEL_200:
    uint64_t v150 = v399;
    goto LABEL_257;
  }
  if (v116 != 1)
  {
    char v149 = 0;
    *(_OWORD *)unint64_t v108 = *(_OWORD *)v109;
    goto LABEL_200;
  }
  size_t __n = v102;
  *(_OWORD *)unint64_t v108 = *(_OWORD *)v109;
  uint64_t v134 = v83;
  unint64_t v135 = (v406 + v109) & v411;
  uint64_t v352 = ~v88;
  uint64_t v363 = v100;
  v342 = *(void (**)(void))(v134 + 32);
  ((void (*)(unint64_t, unint64_t, uint64_t))v342)((v406 + v108) & v411, v135, v413);
  uint64_t v89 = v352;
  uint64_t v100 = v363;
  uint64_t v136 = (unsigned char *)((v90 + ((v406 + v108) & v411)) & v352);
  size_t v137 = (unsigned __int8 *)((v90 + v135) & v352);
  unsigned int v138 = v137[v363];
  unsigned int v139 = v138 - 4;
  if (v138 < 4)
  {
    uint64_t v142 = v389;
    uint64_t v141 = v393;
    uint64_t v143 = v385;
  }
  else
  {
    if (v363 <= 3) {
      uint64_t v140 = v363;
    }
    else {
      uint64_t v140 = 4;
    }
    uint64_t v142 = v389;
    uint64_t v141 = v393;
    uint64_t v143 = v385;
    switch(v140)
    {
      case 1:
        int v144 = *v137;
        goto LABEL_249;
      case 2:
        int v144 = *(unsigned __int16 *)v137;
        goto LABEL_249;
      case 3:
        int v144 = *(unsigned __int16 *)v137 | (*(unsigned __int8 *)(((v90 + v135) & v352) + 2) << 16);
        goto LABEL_249;
      case 4:
        int v144 = *(_DWORD *)v137;
LABEL_249:
        int v191 = (v144 | (v139 << (8 * v363))) + 4;
        unsigned int v138 = v144 + 4;
        if (v363 < 4) {
          unsigned int v138 = v191;
        }
        break;
      default:
        break;
    }
  }
  switch(v138)
  {
    case 1u:
      *uint64_t v136 = *v137;
      char v192 = 1;
      break;
    case 2u:
      *(_OWORD *)uint64_t v136 = *(_OWORD *)v137;
      unint64_t v341 = (unint64_t)&v136[v143] & v142;
      unint64_t v193 = (unint64_t)&v137[v143] & v142;
      (*(void (**)(void))(v141 + 32))();
      v342();
      uint64_t v136 = (unsigned char *)((v90 + ((v406 + v108) & v411)) & v352);
      uint64_t v89 = v352;
      uint64_t v100 = v363;
      *(void *)((v96 + ((v381 + v341) & v411)) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v96 + ((v381 + v193) & v411)) & 0xFFFFFFFFFFFFFFF8);
      v136[v345] = v137[v345];
      char v192 = 2;
      break;
    case 3u:
      *(_OWORD *)uint64_t v136 = *(_OWORD *)v137;
      unint64_t v194 = (unint64_t)&v137[v143] & v142;
      unint64_t v195 = (unint64_t)&v136[v143] & v142;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v141 + 32))(v195, v194, v377);
      unint64_t v196 = (v381 + v195) & v411;
      unint64_t v197 = (v381 + v194) & v411;
      ((void (*)(unint64_t, unint64_t, uint64_t))v342)(v196, v197, v413);
      uint64_t v136 = (unsigned char *)((v90 + ((v406 + v108) & v411)) & v352);
      uint64_t v89 = v352;
      uint64_t v100 = v363;
      *(void *)((v96 + v196) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v96 + v197) & 0xFFFFFFFFFFFFFFF8);
      char v192 = 3;
      break;
    default:
      char v192 = 0;
      *(_WORD *)uint64_t v136 = *(_WORD *)v137;
      break;
  }
  uint64_t v102 = __n;
  uint64_t v150 = v399;
  v136[v100] = v192;
  char v149 = 1;
LABEL_257:
  *(unsigned char *)(v108 + v102) = v149;
  unint64_t v198 = (_OWORD *)((v150 + v108) & v89);
  uint64_t v199 = (_OWORD *)((v150 + v109) & v89);
  unsigned int v200 = *((unsigned __int8 *)v199 + v102);
  if (v200 <= 2)
  {
    if (v200 != 2)
    {
      if (v200 == 1)
      {
        size_t __nc = v102;
        _OWORD *v198 = *v199;
        unint64_t v201 = ((unint64_t)v198 + v406) & v411;
        unint64_t v202 = ((unint64_t)v199 + v406) & v411;
        uint64_t v203 = v89;
        uint64_t v366 = v100;
        v407 = *(void (**)(unint64_t, unint64_t, uint64_t))(v397 + 32);
        v407(v201, v202, v413);
        uint64_t v204 = v366;
        unint64_t v205 = (_OWORD *)((v359 + v201) & v203);
        unint64_t v206 = (unsigned __int8 *)((v359 + v202) & v203);
        unsigned int v207 = v206[v366];
        unsigned int v208 = v207 - 4;
        if (v207 < 4)
        {
          uint64_t v211 = v389;
          uint64_t v210 = v393;
          uint64_t v212 = v385;
        }
        else
        {
          if (v366 <= 3) {
            uint64_t v209 = v366;
          }
          else {
            uint64_t v209 = 4;
          }
          uint64_t v211 = v389;
          uint64_t v210 = v393;
          uint64_t v212 = v385;
          switch(v209)
          {
            case 1:
              int v213 = *v206;
              goto LABEL_314;
            case 2:
              int v213 = *(unsigned __int16 *)v206;
              goto LABEL_314;
            case 3:
              int v213 = *(unsigned __int16 *)v206 | (*(unsigned __int8 *)(((v359 + v202) & v203) + 2) << 16);
              goto LABEL_314;
            case 4:
              int v213 = *(_DWORD *)v206;
LABEL_314:
              int v242 = (v213 | (v208 << (8 * v366))) + 4;
              unsigned int v207 = v213 + 4;
              if (v366 < 4) {
                unsigned int v207 = v242;
              }
              break;
            default:
              break;
          }
        }
        switch(v207)
        {
          case 1u:
LABEL_408:
            *(unsigned char *)unint64_t v205 = *v206;
            char v309 = 1;
            break;
          case 2u:
            *unint64_t v205 = *(_OWORD *)v206;
            unint64_t v243 = ((unint64_t)v205 + v212) & v211;
            unint64_t v244 = (unint64_t)&v206[v212] & v211;
            uint64_t v402 = v205;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v210 + 32))(v243, v244, v377);
            unint64_t v245 = (v381 + v243) & v411;
            unint64_t v246 = (v381 + v244) & v411;
            v407(v245, v246, v413);
            unint64_t v205 = v402;
            uint64_t v204 = v366;
LABEL_410:
            *(void *)((v96 + v245) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v96 + v246) & 0xFFFFFFFFFFFFFFF8);
            *((unsigned char *)v205 + v345) = v206[v345];
            char v309 = 2;
            break;
          case 3u:
            *unint64_t v205 = *(_OWORD *)v206;
            unint64_t v247 = ((unint64_t)v205 + v212) & v211;
            unint64_t v248 = (unint64_t)&v206[v212] & v211;
            uint64_t v403 = v205;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v210 + 32))(v247, v248, v377);
            unint64_t v249 = (v381 + v247) & v411;
            unint64_t v250 = (v381 + v248) & v411;
            v407(v249, v250, v413);
            unint64_t v205 = v403;
            uint64_t v204 = v366;
LABEL_412:
            *(void *)((v96 + v249) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v96 + v250) & 0xFFFFFFFFFFFFFFF8);
            char v309 = 3;
            break;
          default:
LABEL_407:
            char v309 = 0;
            *(_WORD *)unint64_t v205 = *(_WORD *)v206;
            break;
        }
        *((unsigned char *)v205 + v204) = v309;
        *((unsigned char *)v198 + __nc) = 1;
      }
      else
      {
        _OWORD *v198 = *v199;
        *((unsigned char *)v198 + v102) = 0;
      }
      goto LABEL_414;
    }
    uint64_t v214 = v102;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v397 + 32))((v150 + v108) & v89, (v150 + v109) & v89, v413);
LABEL_398:
    *(_OWORD *)(((unint64_t)v198 + v96) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v199 + v96) & 0xFFFFFFFFFFFFFFF8);
    *((unsigned char *)v198 + v214) = 2;
    goto LABEL_414;
  }
LABEL_396:
  memcpy(v198, v199, v103);
LABEL_414:
  uint64_t v3 = a3;
  *(unsigned char *)(v108 + v105) = 1;
LABEL_415:
  uint64_t v314 = (_OWORD *)(((v108 | 7) + v106) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v315 = (_OWORD *)(((v109 | 7) + v106) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v314 = *v315;
  swift_release();
  uint64_t v316 = *(void *)(*(void *)(v3 + 16) - 8);
  uint64_t v317 = v316 + 40;
  uint64_t v318 = *(unsigned __int8 *)(v316 + 80);
  uint64_t v319 = ((unint64_t)v314 + v318 + 16) & ~v318;
  uint64_t v320 = ((unint64_t)v315 + v318 + 16) & ~v318;
  (*(void (**)(uint64_t, uint64_t))(v316 + 40))(v319, v320);
  uint64_t v321 = *(void *)(v317 + 24);
  unint64_t v322 = v321 + v319;
  unint64_t v323 = v321 + v320;
  *(unsigned char *)unint64_t v322 = *(unsigned char *)v323;
  unint64_t v324 = v322 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v325 = v323 & 0xFFFFFFFFFFFFFFF8;
  *(void *)((v322 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((v323 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRelease();
  unint64_t v326 = (v324 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v327 = (v325 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v328 = *(void *)v327;
  LOBYTE(v327) = *(unsigned char *)(v327 + 8);
  uint64_t v329 = *(void *)v326;
  char v330 = *(unsigned char *)(v326 + 8);
  *(void *)unint64_t v326 = v328;
  *(unsigned char *)(v326 + 8) = v327;
  sub_22EADDB08(v329, v330);
  unint64_t v331 = (_OWORD *)((v324 + 39) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v332 = (_OWORD *)((v325 + 39) & 0xFFFFFFFFFFFFFFF8);
  if (v331 != v332)
  {
    sub_22EB0584C((v324 + 39) & 0xFFFFFFFFFFFFFFF8, &qword_26861BC40);
    long long v333 = *(_OWORD *)((char *)v332 + 25);
    long long v334 = v332[1];
    *unint64_t v331 = *v332;
    v331[1] = v334;
    *(_OWORD *)((char *)v331 + 25) = v333;
  }
  unint64_t v335 = (v324 + 87) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v336 = (v325 + 87) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v337 = *(void *)v336;
  LOBYTE(v336) = *(unsigned char *)(v336 + 8);
  uint64_t v338 = *(void *)v335;
  char v339 = *(unsigned char *)(v335 + 8);
  *(void *)unint64_t v335 = v337;
  *(unsigned char *)(v335 + 8) = v336;
  sub_22EADDB08(v338, v339);
  return a1;
}

uint64_t sub_22EDF388C(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(sub_22EE7F6E0() - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(void *)(sub_22EE7F5D0() - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v7 | v10 | 7;
  unint64_t v12 = (v8 + 7 + ((*(void *)(v9 + 64) + v7 + ((v10 + 16) & ~v10)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = v12 + 8;
  unint64_t v14 = v12 + 9;
  if (v14 <= v13) {
    unint64_t v14 = v13;
  }
  if (v14 <= 2) {
    unint64_t v14 = 2;
  }
  unint64_t v15 = v14 + ((((v7 + 16) & ~v7) + v8 + v11) & ~v11);
  if (v15 + 1 > ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v16 = v15 + 1;
  }
  else {
    unint64_t v16 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v16 <= 0x10) {
    unint64_t v16 = 16;
  }
  unint64_t v17 = v16 + 1;
  uint64_t v18 = (v16 + 1 + v11) & ~v11;
  uint64_t v19 = *(void *)(a3 + 16);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(unsigned int *)(v20 + 84);
  if (v21 <= 0x7FFFFFFF) {
    unsigned int v22 = 0x7FFFFFFF;
  }
  else {
    unsigned int v22 = *(_DWORD *)(v20 + 84);
  }
  unint64_t v23 = v18 + v17;
  uint64_t v24 = 32;
  if (v23 > 0x20) {
    uint64_t v24 = v23;
  }
  uint64_t v25 = *(unsigned __int8 *)(v20 + 80);
  uint64_t v26 = *(void *)(v20 + 64);
  if (!a2) {
    return 0;
  }
  uint64_t v27 = v24 + v11 + 1;
  uint64_t v28 = v24 + 8;
  uint64_t v29 = v25 + 16;
  if (v22 < a2)
  {
    unint64_t v30 = ((((((v29 + ((v28 + (v27 & ~v11)) & 0xFFFFFFFFFFFFFFF8)) & ~v25) + v26) & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8)
        + 9;
    if (v30 < 4) {
      unsigned int v31 = ((a2 - v22 + 255) >> (8 * v30)) + 1;
    }
    else {
      unsigned int v31 = 2;
    }
    if (v31 >= 0x10000) {
      unsigned int v32 = 4;
    }
    else {
      unsigned int v32 = 2;
    }
    if (v31 < 0x100) {
      unsigned int v32 = 1;
    }
    if (v31 >= 2) {
      uint64_t v33 = v32;
    }
    else {
      uint64_t v33 = 0;
    }
    switch(v33)
    {
      case 1:
        int v34 = a1[v30];
        if (!a1[v30]) {
          break;
        }
        goto LABEL_33;
      case 2:
        int v34 = *(unsigned __int16 *)&a1[v30];
        if (*(_WORD *)&a1[v30]) {
          goto LABEL_33;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x22EDF3BA0);
      case 4:
        int v34 = *(_DWORD *)&a1[v30];
        if (!v34) {
          break;
        }
LABEL_33:
        int v36 = (v34 - 1) << (8 * v30);
        if (v30 >= 4) {
          int v36 = 0;
        }
        if (v30 == 1) {
          int v37 = *a1;
        }
        else {
          int v37 = *(_DWORD *)a1;
        }
        return v22 + (v37 | v36) + 1;
      default:
        break;
    }
  }
  uint64_t v38 = (uint64_t *)((v28 + ((unint64_t)&a1[v27] & ~v11)) & 0xFFFFFFFFFFFFFFF8);
  if ((v21 & 0x80000000) != 0)
  {
    return __swift_getEnumTagSinglePayload(((unint64_t)v38 + v29) & ~v25, v21, v19);
  }
  else
  {
    uint64_t v39 = *v38;
    if ((unint64_t)*v38 >= 0xFFFFFFFF) {
      LODWORD(v39) = -1;
    }
    return (v39 + 1);
  }
}

void sub_22EDF3BB4(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(sub_22EE7F6E0() - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 64);
  uint64_t v11 = *(void *)(sub_22EE7F5D0() - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = v9 | v12 | 7;
  unint64_t v14 = (v10 + 7 + ((*(void *)(v11 + 64) + v9 + ((v12 + 16) & ~v12)) & ~v9)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = v14 + 8;
  unint64_t v16 = v14 + 9;
  if (v16 <= v15) {
    unint64_t v16 = v15;
  }
  if (v16 <= 2) {
    unint64_t v16 = 2;
  }
  unint64_t v17 = v16 + ((((v9 + 16) & ~v9) + v10 + v13) & ~v13);
  if (v17 + 1 > ((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v18 = v17 + 1;
  }
  else {
    unint64_t v18 = ((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v18 <= 0x10) {
    unint64_t v18 = 16;
  }
  unint64_t v19 = v18 + 1;
  uint64_t v20 = (v18 + 1 + v13) & ~v13;
  uint64_t v21 = *(void *)(a4 + 16);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(unsigned int *)(v22 + 84);
  if (v23 <= 0x7FFFFFFF) {
    unsigned int v24 = 0x7FFFFFFF;
  }
  else {
    unsigned int v24 = *(_DWORD *)(v22 + 84);
  }
  unint64_t v25 = v20 + v19;
  uint64_t v26 = 32;
  if (v25 > 0x20) {
    uint64_t v26 = v25;
  }
  uint64_t v27 = v26 + v13 + 1;
  uint64_t v28 = v26 + 8;
  uint64_t v29 = *(unsigned __int8 *)(v22 + 80);
  size_t v30 = ((((((v29 + 16 + ((v28 + (v27 & ~v13)) & 0xFFFFFFFFFFFFFFF8)) & ~v29) + *(void *)(v22 + 64)) & 0xFFFFFFFFFFFFFFF8)
        + 87) & 0xFFFFFFFFFFFFFFF8)
      + 9;
  char v31 = 8 * v30;
  if (v24 >= a3)
  {
    int v34 = 0;
  }
  else
  {
    if (v30 <= 3) {
      unsigned int v32 = ((a3 - v24 + 255) >> v31) + 1;
    }
    else {
      unsigned int v32 = 2;
    }
    if (v32 >= 0x10000) {
      int v33 = 4;
    }
    else {
      int v33 = 2;
    }
    if (v32 < 0x100) {
      int v33 = 1;
    }
    if (v32 >= 2) {
      int v34 = v33;
    }
    else {
      int v34 = 0;
    }
  }
  if (v24 < a2)
  {
    unsigned int v35 = ~v24 + a2;
    unsigned int v36 = v35 >> v31;
    unsigned int v37 = (~(_BYTE)v24 + a2);
    if (v30 < 4) {
      int v38 = v36 + 1;
    }
    else {
      int v38 = 1;
    }
    if (v30 >= 4) {
      unsigned int v39 = v35;
    }
    else {
      unsigned int v39 = v37;
    }
    bzero(a1, v30);
    if (v30 == 1) {
      *a1 = v39;
    }
    else {
      *(_DWORD *)a1 = v39;
    }
    switch(v34)
    {
      case 1:
        a1[v30] = v38;
        return;
      case 2:
        *(_WORD *)&a1[v30] = v38;
        return;
      case 3:
        goto LABEL_58;
      case 4:
        *(_DWORD *)&a1[v30] = v38;
        return;
      default:
        return;
    }
  }
  uint64_t v40 = ~v13;
  switch(v34)
  {
    case 1:
      a1[v30] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_45;
    case 2:
      *(_WORD *)&a1[v30] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_45;
    case 3:
LABEL_58:
      __break(1u);
      JUMPOUT(0x22EDF3F30);
    case 4:
      *(_DWORD *)&a1[v30] = 0;
      goto LABEL_44;
    default:
LABEL_44:
      if (a2)
      {
LABEL_45:
        uint64_t v41 = (void *)((v28 + ((unint64_t)&a1[v27] & v40)) & 0xFFFFFFFFFFFFFFF8);
        if ((v23 & 0x80000000) != 0)
        {
          __swift_storeEnumTagSinglePayload(((unint64_t)v41 + v29 + 16) & ~v29, a2, v23, v21);
        }
        else
        {
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v42 = a2 ^ 0x80000000;
            v41[1] = 0;
          }
          else
          {
            uint64_t v42 = (a2 - 1);
          }
          void *v41 = v42;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for SubscriptionStoreButtonInternal()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_22EDF3F70()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EDF3FB4(uint64_t a1)
{
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861DAC8);
  uint64_t v3 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v32 = (uint64_t)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v28 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E618);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0);
  uint64_t v30 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v34 = (uint64_t)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v29 = (uint64_t)v28 - v13;
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14) {
    return MEMORY[0x263F8EE78];
  }
  v28[0] = a1;
  v28[1] = v1;
  uint64_t v15 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v31 = *(void *)(v3 + 72);
  swift_bridgeObjectRetain();
  uint64_t v16 = MEMORY[0x263F8EE78];
  do
  {
    uint64_t v17 = v33;
    uint64_t v18 = *(int *)(v33 + 48);
    uint64_t v19 = (uint64_t)&v7[v18];
    uint64_t v20 = v15 + v18;
    sub_22EDF6FA0(v15, (uint64_t)v7);
    sub_22EAEFF0C(v20, v19, &qword_26861E618);
    uint64_t v21 = *(int *)(v17 + 48);
    uint64_t v22 = v32;
    uint64_t v23 = v32 + v21;
    sub_22EDF79C4((uint64_t)v7, v32, (void (*)(void))type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource);
    sub_22EDF795C(v19, v23);
    sub_22EAEFF0C(v23, (uint64_t)v10, &qword_26861E618);
    sub_22EB0584C(v22, &qword_26861DAC8);
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v35) == 1)
    {
      sub_22EB0584C((uint64_t)v10, &qword_26861E618);
    }
    else
    {
      uint64_t v24 = v29;
      sub_22EDF79C4((uint64_t)v10, v29, (void (*)(void))type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair);
      sub_22EDF79C4(v24, v34, (void (*)(void))type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v16 = sub_22EC6DA4C(0, *(void *)(v16 + 16) + 1, 1, v16);
      }
      unint64_t v26 = *(void *)(v16 + 16);
      unint64_t v25 = *(void *)(v16 + 24);
      if (v26 >= v25 >> 1) {
        uint64_t v16 = sub_22EC6DA4C(v25 > 1, v26 + 1, 1, v16);
      }
      *(void *)(v16 + 16) = v26 + 1;
      sub_22EDF79C4(v34, v16+ ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(void *)(v30 + 72) * v26, (void (*)(void))type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair);
    }
    v15 += v31;
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_22EDF4374@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  v21[1] = a2;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  v21[15] = MEMORY[0x263F1A830];
  v21[16] = v5;
  v21[17] = MEMORY[0x263F1A820];
  v21[18] = v4;
  uint64_t v6 = sub_22EE7E920();
  v21[0] = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v21 - v7;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861C3F0);
  uint64_t v9 = sub_22EE7CEE0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v21 - v14;
  v21[10] = v5;
  v21[11] = v4;
  v21[12] = v3;
  v21[4] = v5;
  v21[5] = v4;
  v21[6] = v3;
  sub_22EE7E910();
  sub_22EE7DF10();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_22EE7E560();
  swift_release();
  (*(void (**)(char *, uint64_t))(v21[0] + 8))(v8, v6);
  uint64_t v17 = sub_22EADDD7C(&qword_26861C3E8, &qword_26861C3F0);
  v21[13] = WitnessTable;
  v21[14] = v17;
  uint64_t v18 = swift_getWitnessTable();
  sub_22EB69440(v12, v9, v18);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v10 + 8);
  v19(v12, v9);
  sub_22EB69440(v15, v9, v18);
  return ((uint64_t (*)(char *, uint64_t))v19)(v15, v9);
}

uint64_t sub_22EDF4660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(0);
  MEMORY[0x270FA5388](v4 - 8);
  sub_22EDF6FA0(a1, (uint64_t)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = sub_22EDDF87C();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v7;
  *(unsigned char *)(a2 + 16) = v8 & 1;
  *(void *)(a2 + 24) = v9;
  return result;
}

uint64_t sub_22EDF46F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  char v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SubscriptionStoreButtonInternal.SingleLineLabel();
  sub_22EB69440(a1 + *(int *)(v9 + 36), a2, a3);
  sub_22EB69440(v8, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a2);
}

uint64_t sub_22EDF47F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_22EDF79C4(a1, a4, (void (*)(void))type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource);
  uint64_t v7 = a4 + *(int *)(type metadata accessor for SubscriptionStoreButtonInternal.SingleLineLabel() + 36);
  char v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32);

  return v8(v7, a2, a3);
}

uint64_t sub_22EDF4898(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*(unsigned char *)(v1 + *(int *)(v7 + 56)) == 2) {
    return 0;
  }
  uint64_t v9 = v1 + *(int *)(a1 + 56);
  uint64_t v10 = *(void *)v9;
  char v11 = *(unsigned char *)(v9 + 8);
  sub_22EADDF00(*(void *)v9, v11);
  sub_22EB17770();
  unsigned __int8 v13 = v12;
  int v14 = v12;
  sub_22EADDB08(v10, v11);
  if (v14 == 2)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, a1);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, a1);
    if (v13)
    {
      sub_22EB15420();
      sub_22EB57DC8((uint64_t)v22, (uint64_t)v20);
      if ((unint64_t)(v21 - 1) < 2)
      {
        sub_22EADD8B0((uint64_t)v22);
        (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, a1);
        return 1;
      }
      sub_22EB57E24((uint64_t)v20);
      sub_22EADD8B0((uint64_t)v22);
    }
  }
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, a1);
  uint64_t v15 = v2 + *(int *)(a1 + 64);
  uint64_t v16 = *(void *)v15;
  char v17 = *(unsigned char *)(v15 + 8);
  sub_22EADDF00(*(void *)v15, v17);
  sub_22EB155AC();
  char v19 = v18;
  sub_22EADDB08(v16, v17);
  if (v19) {
    return 1;
  }
  else {
    return 2;
  }
}

uint64_t sub_22EDF4AA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v60 = a2;
  sub_22EE7D660();
  OUTLINED_FUNCTION_0_2();
  uint64_t v58 = v4;
  uint64_t v59 = v3;
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_3_2();
  uint64_t v57 = v5;
  sub_22EE7DC20();
  OUTLINED_FUNCTION_0_2();
  uint64_t v55 = v7;
  uint64_t v56 = v6;
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_3_2();
  uint64_t v53 = v8;
  type metadata accessor for MultilineButtonLabel();
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v52 = *(void *)(a1 + 16);
  uint64_t v51 = v9;
  type metadata accessor for SubscriptionStoreButtonInternal.SingleLineLabel();
  OUTLINED_FUNCTION_7_28();
  sub_22EE7D810();
  uint64_t v70 = sub_22EDFC8A0(&qword_268627210, (void (*)(uint64_t))type metadata accessor for MultilineButtonLabel);
  uint64_t WitnessTable = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_22EE7EB10();
  swift_getWitnessTable();
  sub_22EE7EA40();
  sub_22EE7CEE0();
  type metadata accessor for SubscribeButtonTopCaptionModifier();
  OUTLINED_FUNCTION_6_21();
  sub_22EE7DD90();
  sub_22EE7CEE0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268627218);
  swift_getTupleTypeMetadata2();
  sub_22EE7EE20();
  uint64_t v43 = swift_getWitnessTable();
  sub_22EE7EAF0();
  OUTLINED_FUNCTION_0_2();
  uint64_t v48 = v10;
  MEMORY[0x270FA5388](v11);
  uint64_t v12 = sub_22EE7CEE0();
  OUTLINED_FUNCTION_0_2();
  uint64_t v49 = v13;
  MEMORY[0x270FA5388](v14);
  uint64_t v40 = swift_getWitnessTable();
  uint64_t v68 = v40;
  uint64_t v69 = MEMORY[0x263F19CA0];
  uint64_t v50 = MEMORY[0x263F18E48];
  uint64_t v41 = swift_getWitnessTable();
  uint64_t v66 = v12;
  uint64_t v67 = v41;
  uint64_t v44 = MEMORY[0x263F1AE68];
  swift_getOpaqueTypeMetadata2();
  OUTLINED_FUNCTION_0_2();
  uint64_t v45 = v15;
  MEMORY[0x270FA5388](v16);
  uint64_t v17 = sub_22EE7CEE0();
  OUTLINED_FUNCTION_0_2();
  uint64_t v46 = v18;
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v42 = (char *)&v39 - v23;
  MEMORY[0x270FA5388](v24);
  int v47 = (char *)&v39 - v25;
  uint64_t v61 = v52;
  uint64_t v62 = v51;
  uint64_t v63 = v54;
  sub_22EB51934();
  sub_22EE7EAE0();
  sub_22EE7E290();
  OUTLINED_FUNCTION_5_2();
  v26();
  sub_22EE7DC00();
  uint64_t v27 = v41;
  sub_22EE7E410();
  OUTLINED_FUNCTION_5_2();
  v28();
  OUTLINED_FUNCTION_5_2();
  v29();
  swift_getKeyPath();
  uint64_t v66 = v12;
  uint64_t v67 = v27;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_22EB00CB8();
  swift_release();
  OUTLINED_FUNCTION_5_2();
  v31();
  sub_22EE7D650();
  uint64_t v32 = v42;
  sub_22EE7CED0();
  OUTLINED_FUNCTION_5_2();
  v33();
  uint64_t v34 = *(void (**)(char *, uint64_t))(v46 + 8);
  v34(v21, v17);
  uint64_t v35 = sub_22EDFC8A0((unint64_t *)&qword_26861C3C0, MEMORY[0x263F1A470]);
  uint64_t v64 = OpaqueTypeConformance2;
  uint64_t v65 = v35;
  uint64_t v36 = swift_getWitnessTable();
  unsigned int v37 = v47;
  sub_22EB69440(v32, v17, v36);
  v34(v32, v17);
  sub_22EB69440(v37, v17, v36);
  return ((uint64_t (*)(char *, uint64_t))v34)(v37, v17);
}

uint64_t sub_22EDF51C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v83 = a3;
  uint64_t v85 = a1;
  uint64_t v94 = a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E5C8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v92 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(0);
  MEMORY[0x270FA5388](v93);
  uint64_t v70 = (uint64_t)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v71 = (uint64_t)&v70 - v9;
  uint64_t v10 = sub_22EE7D660();
  uint64_t v89 = *(void *)(v10 - 8);
  uint64_t v90 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v88 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for SubscriptionStoreButtonInternal();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v70 - v14;
  type metadata accessor for MultilineButtonLabel();
  type metadata accessor for SubscriptionStoreButtonInternal.SingleLineLabel();
  sub_22EE7D810();
  uint64_t v16 = sub_22EDFC8A0(&qword_268627210, (void (*)(uint64_t))type metadata accessor for MultilineButtonLabel);
  uint64_t WitnessTable = swift_getWitnessTable();
  v103[8] = v16;
  v103[9] = WitnessTable;
  swift_getWitnessTable();
  uint64_t v79 = sub_22EE7EB10();
  uint64_t v78 = swift_getWitnessTable();
  uint64_t v18 = sub_22EE7EA40();
  uint64_t v81 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  unsigned int v74 = (char *)&v70 - v19;
  uint64_t v80 = sub_22EE7CEE0();
  uint64_t v84 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  unint64_t v73 = (char *)&v70 - v20;
  type metadata accessor for SubscribeButtonTopCaptionModifier();
  uint64_t v82 = sub_22EE7CEE0();
  uint64_t v86 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  int v76 = (char *)&v70 - v21;
  sub_22EE7DD90();
  uint64_t v75 = sub_22EE7CEE0();
  uint64_t v87 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  uint64_t v91 = (char *)&v70 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  unint64_t v77 = (char *)&v70 - v24;
  __n128 v26 = MEMORY[0x270FA5388](v25);
  uint64_t v95 = (char *)&v70 - v27;
  uint64_t v28 = v13;
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16);
  uint64_t v30 = v15;
  uint64_t v31 = v85;
  v29(v15, v85, v12, v26);
  unint64_t v32 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v33 = swift_allocObject();
  uint64_t v34 = a2;
  *(void *)(v33 + 16) = a2;
  uint64_t v35 = v83;
  *(void *)(v33 + 24) = v83;
  uint64_t v36 = *(void (**)(unint64_t, char *, uint64_t))(v28 + 32);
  uint64_t v72 = v12;
  v36(v33 + v32, v30, v12);
  v97[8] = v34;
  v97[9] = v35;
  v97[10] = v31;
  unsigned int v37 = v74;
  sub_22EE7EA20();
  uint64_t v38 = swift_getWitnessTable();
  uint64_t v39 = v73;
  MEMORY[0x230FAB9D0](v38, v18, &type metadata for PrimaryButtonViewModifier, v38);
  (*(void (**)(char *, uint64_t))(v81 + 8))(v37, v18);
  v97[2] = v34;
  v97[3] = v35;
  v97[4] = v31;
  v96[2] = v34;
  v96[3] = v35;
  v96[4] = v31;
  LOBYTE(v30) = sub_22EDF4898(v12) == 1;
  unint64_t v40 = sub_22EDF6E18();
  v103[6] = v38;
  v103[7] = v40;
  uint64_t v41 = v80;
  uint64_t v42 = swift_getWitnessTable();
  uint64_t v43 = v76;
  sub_22EC93534((uint64_t (*)(__n128))sub_22EDF6E00, (uint64_t)v97, (uint64_t (*)(uint64_t))sub_22EDF6E0C, (uint64_t)v96, (char)v30, v41, v42);
  uint64_t v44 = v75;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v39, v41);
  uint64_t v45 = v88;
  sub_22EE7D650();
  uint64_t v46 = sub_22EDFC8A0(&qword_268627228, (void (*)(uint64_t))type metadata accessor for SubscribeButtonTopCaptionModifier);
  v103[4] = v42;
  v103[5] = v46;
  uint64_t v47 = v82;
  uint64_t v48 = swift_getWitnessTable();
  uint64_t v49 = v77;
  uint64_t v50 = v45;
  sub_22EE7E4F0();
  uint64_t v51 = v31;
  (*(void (**)(char *, uint64_t))(v89 + 8))(v50, v90);
  uint64_t v52 = v43;
  uint64_t v53 = v72;
  (*(void (**)(char *, uint64_t))(v86 + 8))(v52, v47);
  uint64_t v54 = sub_22EDFC8A0((unint64_t *)&qword_26861C3C0, MEMORY[0x263F1A470]);
  v103[2] = v48;
  v103[3] = v54;
  uint64_t v55 = (uint64_t)v92;
  uint64_t v90 = swift_getWitnessTable();
  sub_22EB69440(v49, v44, v90);
  uint64_t v56 = v87;
  uint64_t v57 = *(void (**)(char *, uint64_t))(v87 + 8);
  v57(v49, v44);
  sub_22EAEFF0C(v51 + *(int *)(v53 + 36), v55, &qword_26861E5C8);
  if (__swift_getEnumTagSinglePayload(v55, 1, v93) == 1)
  {
    sub_22EB0584C(v55, &qword_26861E5C8);
LABEL_6:
    uint64_t v59 = 0;
    uint64_t v61 = 0;
    uint64_t v65 = 0;
    uint64_t v63 = 0;
    goto LABEL_7;
  }
  uint64_t v58 = v71;
  sub_22EDF79C4(v55, v71, (void (*)(void))type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource);
  if (sub_22EDF4898(v53) != 2)
  {
    sub_22EDFC8E8(v58, (void (*)(void))type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource);
    goto LABEL_6;
  }
  sub_22EDF6FA0(v58, v70);
  uint64_t v59 = sub_22EDDF87C();
  uint64_t v61 = v60;
  uint64_t v63 = v62;
  uint64_t v65 = v64 & 1;
  sub_22EDFC8E8(v58, (void (*)(void))type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource);
LABEL_7:
  uint64_t v66 = *(void (**)(char *, char *, uint64_t))(v56 + 16);
  uint64_t v67 = v91;
  uint64_t v68 = v95;
  v66(v91, v95, v44);
  uint64_t v99 = v59;
  uint64_t v100 = v61;
  uint64_t v101 = v65;
  uint64_t v102 = v63;
  v103[0] = v67;
  v103[1] = &v99;
  sub_22EC4DF80(v59, v61, v65, v63);
  v98[0] = v44;
  v98[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_268627218);
  v97[11] = v90;
  v97[12] = sub_22EDF6E64();
  sub_22ED82348((uint64_t)v103, 2, (uint64_t)v98);
  sub_22EC425D4(v59, v61, v65, v63);
  v57(v68, v44);
  sub_22EC425D4(v99, v100, v101, v102);
  return ((uint64_t (*)(char *, uint64_t))v57)(v67, v44);
}

uint64_t sub_22EDF5C0C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SubscriptionStoreButtonInternal();
  return (*(uint64_t (**)(void))(a1 + *(int *)(v2 + 40)))();
}

uint64_t sub_22EDF5C48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for MultilineButtonLabel();
  type metadata accessor for SubscriptionStoreButtonInternal.SingleLineLabel();
  sub_22EE7D810();
  uint64_t v20 = sub_22EDFC8A0(&qword_268627210, (void (*)(uint64_t))type metadata accessor for MultilineButtonLabel);
  uint64_t WitnessTable = swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v6 = sub_22EE7EB10();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = &v16[-v11];
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  uint64_t v19 = a1;
  sub_22EB24CF8();
  sub_22EE7EB00();
  uint64_t v13 = swift_getWitnessTable();
  sub_22EB69440(v9, v6, v13);
  uint64_t v14 = *(void (**)(unsigned char *, uint64_t))(v7 + 8);
  v14(v9, v6);
  sub_22EB69440(v12, v6, v13);
  return ((uint64_t (*)(unsigned char *, uint64_t))v14)(v12, v6);
}

uint64_t sub_22EDF5E9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v47 = a4;
  uint64_t v40 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v39 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SubscriptionStoreButtonInternal.SingleLineLabel();
  uint64_t v43 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v42 = (char *)&v38 - v12;
  uint64_t v13 = type metadata accessor for MultilineButtonLabel();
  MEMORY[0x270FA5388](v13);
  uint64_t v38 = (uint64_t)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E5C8);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(0);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v38 - v22;
  uint64_t v44 = v13;
  uint64_t v24 = sub_22EE7D810();
  uint64_t v45 = *(void *)(v24 - 8);
  uint64_t v46 = v24;
  MEMORY[0x270FA5388](v24);
  __n128 v26 = (char *)&v38 - v25;
  uint64_t v41 = a3;
  uint64_t v27 = type metadata accessor for SubscriptionStoreButtonInternal();
  sub_22EAEFF0C(a1 + *(int *)(v27 + 36), (uint64_t)v17, &qword_26861E5C8);
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18) == 1)
  {
    sub_22EB0584C((uint64_t)v17, &qword_26861E5C8);
  }
  else
  {
    sub_22EDF79C4((uint64_t)v17, (uint64_t)v23, (void (*)(void))type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource);
    if (!sub_22EDF4898(v27))
    {
      uint64_t v32 = v38;
      sub_22EDF6FA0(a1, v38);
      sub_22EDF6FA0((uint64_t)v23, v32 + *(int *)(v44 + 20));
      sub_22EDFC8A0(&qword_268627210, (void (*)(uint64_t))type metadata accessor for MultilineButtonLabel);
      swift_getWitnessTable();
      sub_22EC4F278();
      sub_22EDFC8E8(v32, (void (*)(void))type metadata accessor for MultilineButtonLabel);
      sub_22EDFC8E8((uint64_t)v23, (void (*)(void))type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource);
      goto LABEL_7;
    }
    sub_22EDFC8E8((uint64_t)v23, (void (*)(void))type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource);
  }
  sub_22EDF6FA0(a1, (uint64_t)v20);
  uint64_t v28 = (uint64_t)v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v39, a1 + *(int *)(v27 + 44), a2);
  sub_22EDF47F0((uint64_t)v20, v28, a2, (uint64_t)v10);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v30 = v42;
  sub_22EB69440(v10, v8, WitnessTable);
  uint64_t v31 = *(void (**)(char *, uint64_t))(v43 + 8);
  v31(v10, v8);
  sub_22EB69440(v30, v8, WitnessTable);
  sub_22EDFC8A0(&qword_268627210, (void (*)(uint64_t))type metadata accessor for MultilineButtonLabel);
  sub_22EC4F330();
  v31(v10, v8);
  v31(v30, v8);
LABEL_7:
  uint64_t v33 = sub_22EDFC8A0(&qword_268627210, (void (*)(uint64_t))type metadata accessor for MultilineButtonLabel);
  uint64_t v34 = swift_getWitnessTable();
  uint64_t v48 = v33;
  uint64_t v49 = v34;
  uint64_t v35 = v46;
  uint64_t v36 = swift_getWitnessTable();
  sub_22EB69440(v26, v35, v36);
  return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v26, v35);
}

uint64_t sub_22EDF64C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for SubscriptionStoreButtonInternal();
  return sub_22EAEFF0C(a1 + *(int *)(v4 + 36), a2, &qword_26861E5C8);
}

uint64_t sub_22EDF650C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SubscriptionStoreButtonInternal();
  return sub_22EDF3FB4(*(void *)(a1 + *(int *)(v2 + 52)));
}

uint64_t sub_22EDF6554()
{
  sub_22EBAC4EC();
  uint64_t result = sub_22EE7C880();
  if (v1) {
    return sub_22EE7C870();
  }
  return result;
}

uint64_t type metadata accessor for SubscriptionStoreButtonInternal.SingleLineLabel()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_22EDF65CC@<X0>(uint64_t a1@<X8>)
{
  return sub_22EDF51C0(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_22EDF65D8()
{
  char v1 = (int *)type metadata accessor for SubscriptionStoreButtonInternal();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v0 + v3;
  uint64_t v5 = type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(0);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  uint64_t v6 = _s11PriceStringOMa(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v8 = (v2 + 32) & ~v2;
  switch(EnumCaseMultiPayload)
  {
    case 2:
      sub_22EE7F6E0();
      OUTLINED_FUNCTION_2_0();
      (*(void (**)(uint64_t))(v9 + 8))(v0 + v3);
      break;
    case 1:
      swift_bridgeObjectRelease();
      uint64_t v10 = v4 + *(int *)(_s22LocalizedPriceResourceVMa(0) + 20);
      uint64_t v11 = sub_22EE7F6E0();
      OUTLINED_FUNCTION_2_0();
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
      _s22LocalizedPriceResourceV6FormatOMa(0);
      int v13 = swift_getEnumCaseMultiPayload();
      if (v13 == 3 || v13 == 2)
      {
        swift_bridgeObjectRelease();
        _s15PricePropertiesVMa(0);
        OUTLINED_FUNCTION_4_36();
        OUTLINED_FUNCTION_2_0();
        OUTLINED_FUNCTION_5_2();
        v14();
        uint64_t v15 = OUTLINED_FUNCTION_9_37();
        v16(v15);
      }
      break;
    case 0:
      swift_bridgeObjectRelease();
      break;
  }
  uint64_t v17 = v4 + *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
  if (!__swift_getEnumTagSinglePayload(v17, 1, v6))
  {
    int v21 = swift_getEnumCaseMultiPayload();
    if (v21 == 2)
    {
      sub_22EE7F6E0();
      OUTLINED_FUNCTION_2_0();
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v17, v36);
      goto LABEL_13;
    }
    if (v21 == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v37 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v38 = v17 + *(int *)(v37 + 20);
      uint64_t v39 = sub_22EE7F6E0();
      OUTLINED_FUNCTION_2_0();
      uint64_t v51 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
      v51(v38, v39);
      uint64_t v41 = v17 + *(int *)(v37 + 24);
      _s22LocalizedPriceResourceV6FormatOMa(0);
      int v42 = swift_getEnumCaseMultiPayload();
      if (v42 == 3)
      {
        swift_bridgeObjectRelease();
        _s15PricePropertiesVMa(0);
        OUTLINED_FUNCTION_6_38();
        OUTLINED_FUNCTION_2_0();
        OUTLINED_FUNCTION_5_2();
        v49();
        OUTLINED_FUNCTION_5_2();
        v50();
      }
      else if (v42 == 2)
      {
        swift_bridgeObjectRelease();
        _s15PricePropertiesVMa(0);
        OUTLINED_FUNCTION_6_38();
        OUTLINED_FUNCTION_2_0();
        OUTLINED_FUNCTION_5_2();
        v43();
        v51(v41 + *(int *)(v8 + 24), v39);
      }
      goto LABEL_13;
    }
    if (v21) {
      goto LABEL_13;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
LABEL_13:
  uint64_t v18 = v4 + v1[9];
  if (__swift_getEnumTagSinglePayload(v18, 1, v5)) {
    goto LABEL_30;
  }
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  uint64_t v19 = _s11PriceStringOMa(0);
  int v20 = swift_getEnumCaseMultiPayload();
  switch(v20)
  {
    case 2:
      sub_22EE7F6E0();
      OUTLINED_FUNCTION_2_0();
      (*(void (**)(uint64_t))(v22 + 8))(v18);
      break;
    case 1:
      swift_bridgeObjectRelease();
      uint64_t v23 = v18 + *(int *)(_s22LocalizedPriceResourceVMa(0) + 20);
      uint64_t v24 = sub_22EE7F6E0();
      OUTLINED_FUNCTION_2_0();
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
      _s22LocalizedPriceResourceV6FormatOMa(0);
      int v26 = swift_getEnumCaseMultiPayload();
      if (v26 == 3 || v26 == 2)
      {
        swift_bridgeObjectRelease();
        _s15PricePropertiesVMa(0);
        OUTLINED_FUNCTION_4_36();
        OUTLINED_FUNCTION_2_0();
        OUTLINED_FUNCTION_5_2();
        v27();
        uint64_t v28 = OUTLINED_FUNCTION_9_37();
        v29(v28);
      }
      break;
    case 0:
      swift_bridgeObjectRelease();
      break;
  }
  uint64_t v30 = type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0);
  if (!__swift_getEnumTagSinglePayload(v18 + *(int *)(v30 + 20), 1, v19))
  {
    int v34 = swift_getEnumCaseMultiPayload();
    if (v34 == 2)
    {
      sub_22EE7F6E0();
      OUTLINED_FUNCTION_2_0();
      OUTLINED_FUNCTION_5_2();
      v44();
      goto LABEL_30;
    }
    if (v34 == 1)
    {
      swift_bridgeObjectRelease();
      _s22LocalizedPriceResourceVMa(0);
      sub_22EE7F6E0();
      OUTLINED_FUNCTION_2_0();
      uint64_t v46 = *(void (**)(void))(v45 + 8);
      OUTLINED_FUNCTION_42_6();
      v46();
      _s22LocalizedPriceResourceV6FormatOMa(0);
      int v47 = swift_getEnumCaseMultiPayload();
      if (v47 == 3 || v47 == 2)
      {
        swift_bridgeObjectRelease();
        _s15PricePropertiesVMa(0);
        OUTLINED_FUNCTION_8_34();
        OUTLINED_FUNCTION_2_0();
        OUTLINED_FUNCTION_5_2();
        v48();
        OUTLINED_FUNCTION_42_6();
        v46();
      }
      goto LABEL_30;
    }
    if (v34) {
      goto LABEL_30;
    }
LABEL_24:
    swift_bridgeObjectRelease();
  }
LABEL_30:
  swift_release();
  OUTLINED_FUNCTION_5_2();
  v31();
  swift_bridgeObjectRelease();
  sub_22EADDB08(*(void *)(v4 + v1[14]), *(unsigned char *)(v4 + v1[14] + 8));
  uint64_t v32 = v4 + v1[15];
  if (*(unsigned char *)(v32 + 40))
  {
    if (*(void *)(v32 + 24) >= 6uLL) {
      __swift_destroy_boxed_opaque_existential_1(v32);
    }
  }
  else
  {
    swift_release();
  }
  sub_22EADDB08(*(void *)(v4 + v1[16]), *(unsigned char *)(v4 + v1[16] + 8));

  return swift_deallocObject();
}

uint64_t sub_22EDF6D70()
{
  uint64_t v1 = *(void *)(type metadata accessor for SubscriptionStoreButtonInternal() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_22EDF5C0C(v2);
}

uint64_t sub_22EDF6DF4()
{
  return sub_22EDF5C48(v0[4], v0[2], v0[3]);
}

uint64_t sub_22EDF6E00@<X0>(uint64_t a1@<X8>)
{
  return sub_22EDF64C8(*(void *)(v1 + 32), a1);
}

uint64_t sub_22EDF6E0C()
{
  return sub_22EDF650C(*(void *)(v0 + 32));
}

unint64_t sub_22EDF6E18()
{
  unint64_t result = qword_268627220;
  if (!qword_268627220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627220);
  }
  return result;
}

unint64_t sub_22EDF6E64()
{
  unint64_t result = qword_268627230;
  if (!qword_268627230)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268627218);
    sub_22EDF6ED8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627230);
  }
  return result;
}

unint64_t sub_22EDF6ED8()
{
  unint64_t result = qword_268627238;
  if (!qword_268627238)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268627240);
    sub_22EDF6F54();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627238);
  }
  return result;
}

unint64_t sub_22EDF6F54()
{
  unint64_t result = qword_268627248[0];
  if (!qword_268627248[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_268627248);
  }
  return result;
}

uint64_t sub_22EDF6FA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22EDF7004@<X0>(uint64_t a1@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v1 = sub_22EE7DC20();
  uint64_t v36 = *(void *)(v1 - 8);
  uint64_t v37 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v33 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for StoreKitProminentButtonStyle(0);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686272D0);
  uint64_t v31 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686272D8);
  uint64_t v32 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v27 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686272E0);
  uint64_t v34 = *(void *)(v9 - 8);
  uint64_t v35 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v28 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v5 = swift_getKeyPath();
  v5[8] = 0;
  uint64_t v11 = (uint64_t *)&v5[*(int *)(v3 + 20)];
  uint64_t *v11 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(qword_26861BEF8);
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = (uint64_t *)&v5[*(int *)(v3 + 24)];
  *uint64_t v12 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861C920);
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686272E8);
  uint64_t v14 = sub_22EADDD7C(&qword_2686272F0, &qword_2686272E8);
  uint64_t v15 = sub_22EDFC8A0((unint64_t *)&qword_26861CE18, (void (*)(uint64_t))type metadata accessor for StoreKitProminentButtonStyle);
  sub_22EE7E430();
  sub_22EDFC8E8((uint64_t)v5, (void (*)(void))type metadata accessor for StoreKitProminentButtonStyle);
  *(void *)uint64_t v5 = swift_getKeyPath();
  v5[8] = 0;
  uint64_t v16 = (uint64_t *)&v5[*(int *)(v3 + 20)];
  *uint64_t v16 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = (uint64_t *)&v5[*(int *)(v3 + 24)];
  *uint64_t v17 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  uint64_t v39 = v13;
  uint64_t v40 = v3;
  uint64_t v41 = v14;
  uint64_t v42 = v15;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v19 = v27;
  uint64_t v20 = v29;
  sub_22EE7E4E0();
  sub_22EDFC8E8((uint64_t)v5, (void (*)(void))type metadata accessor for StoreKitProminentButtonStyle);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v20);
  int v21 = v33;
  sub_22EE7DC00();
  uint64_t v39 = v20;
  uint64_t v40 = v3;
  uint64_t v41 = OpaqueTypeConformance2;
  uint64_t v42 = v15;
  uint64_t v22 = v30;
  uint64_t v23 = v28;
  uint64_t v24 = swift_getOpaqueTypeConformance2();
  sub_22EE7E410();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v21, v37);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v22);
  if (qword_26861B6B8 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  uint64_t v39 = v22;
  uint64_t v40 = v24;
  swift_getOpaqueTypeConformance2();
  uint64_t v25 = v35;
  sub_22EE7E4C0();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v23, v25);
}

uint64_t sub_22EDF75DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v27 = a2;
  uint64_t v25 = sub_22EE7DC20();
  uint64_t v2 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686272F8);
  uint64_t v6 = v5 - 8;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627300);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627308);
  uint64_t v12 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_22EE7DF00();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627310);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v8, v24, v17);
  uint64_t v18 = (uint64_t *)&v8[*(int *)(v6 + 44)];
  uint64_t *v18 = KeyPath;
  v18[1] = v15;
  uint64_t v19 = swift_getKeyPath();
  sub_22EAEFF0C((uint64_t)v8, (uint64_t)v11, &qword_2686272F8);
  uint64_t v20 = &v11[*(int *)(v9 + 36)];
  *(void *)uint64_t v20 = v19;
  v20[8] = 1;
  sub_22EB0584C((uint64_t)v8, &qword_2686272F8);
  sub_22EE7DC00();
  unint64_t v21 = sub_22EDFC94C();
  sub_22EE7E410();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v25);
  sub_22EB0584C((uint64_t)v11, &qword_268627300);
  if (qword_26861B6B8 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  uint64_t v28 = v9;
  unint64_t v29 = v21;
  swift_getOpaqueTypeConformance2();
  uint64_t v22 = v26;
  sub_22EE7E4C0();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v22);
}

uint64_t sub_22EDF795C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E618);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22EDF79C4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_2_0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_22EDF7A24@<X0>(uint64_t a1@<X8>)
{
  return sub_22EDF5E9C(v1[4], v1[2], v1[3], a1);
}

ValueMetadata *type metadata accessor for BottomCaptionViewModifier()
{
  return &type metadata for BottomCaptionViewModifier;
}

ValueMetadata *type metadata accessor for PrimaryButtonViewModifier()
{
  return &type metadata for PrimaryButtonViewModifier;
}

uint64_t sub_22EDF7A50()
{
  uint64_t result = type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_22EDF7B1C(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7F6E0();
  uint64_t v131 = *(void *)(v6 - 8);
  uint64_t v132 = v6;
  int v7 = *(_DWORD *)(v131 + 80);
  uint64_t v8 = v7;
  uint64_t v129 = v7 + 16;
  uint64_t v9 = *(void *)(v131 + 64);
  uint64_t v10 = sub_22EE7F5D0();
  int v11 = *(_DWORD *)(*(void *)(v10 - 8) + 80);
  uint64_t v12 = v11;
  unint64_t v13 = v7 | (unint64_t)v11 | 7;
  uint64_t v14 = *(void *)(*(void *)(v10 - 8) + 64) + v7;
  uint64_t v15 = v9 + 7;
  unint64_t v16 = (v9 + 7 + ((v14 + ((v12 + 16) & ~v12)) & ~(unint64_t)v7)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = v16 + 8;
  unint64_t v18 = v16 + 9;
  if (v18 <= v17) {
    unint64_t v18 = v17;
  }
  if (v18 <= 2) {
    uint64_t v19 = 2;
  }
  else {
    uint64_t v19 = v18;
  }
  unint64_t v20 = v19 + ((v13 + v9 + ((v7 + 16) & ~(unint64_t)v7)) & ~v13);
  if (v20 + 1 > (v15 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v21 = v20 + 1;
  }
  else {
    unint64_t v21 = (v15 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v21 <= 0x10) {
    uint64_t v22 = 16;
  }
  else {
    uint64_t v22 = v21;
  }
  size_t v23 = v22 + 1;
  unint64_t v24 = v22 + 1 + v13;
  if ((v24 & ~v13) + v22 + 1 <= 0x20) {
    uint64_t v25 = 32;
  }
  else {
    uint64_t v25 = (v24 & ~v13) + v22 + 1;
  }
  uint64_t v26 = *(void *)(a3 + 16);
  uint64_t v27 = *(void *)(v26 - 8);
  int v28 = *(_DWORD *)(v27 + 80);
  uint64_t v29 = v28;
  if ((v13 | v28) == 7 && ((v11 | v7 | v28) & 0x100000) == 0)
  {
    uint64_t v30 = v25 + v28 + 1;
    if ((v30 & ~(unint64_t)v28) + *(void *)(v27 + 64) <= 0x18)
    {
      unsigned int v31 = a2[v25];
      unsigned int v32 = v31 - 2;
      if (v31 >= 2)
      {
        if (v25 <= 3) {
          uint64_t v33 = v25;
        }
        else {
          uint64_t v33 = 4;
        }
        switch(v33)
        {
          case 1:
            int v34 = *a2;
            goto LABEL_28;
          case 2:
            int v34 = *(unsigned __int16 *)a2;
            goto LABEL_28;
          case 3:
            int v34 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_28;
          case 4:
            int v34 = *(_DWORD *)a2;
LABEL_28:
            if (v25 < 4) {
              unsigned int v31 = (v34 | (v32 << (8 * v25))) + 2;
            }
            else {
              unsigned int v31 = v34 + 2;
            }
            break;
          default:
            break;
        }
      }
      unint64_t v36 = ~(unint64_t)v28;
      if (v31 != 1)
      {
        uint64_t v41 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v41;
        *(unsigned char *)(a1 + 16) = a2[16];
        *(void *)(a1 + 24) = *((void *)a2 + 3);
        *(unsigned char *)(a1 + v25) = 0;
        uint64_t v42 = v26;
        unint64_t v43 = ~v29;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v44 = v43;
        uint64_t v45 = v42;
LABEL_85:
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v27 + 16))((v30 + a1) & v44, (unint64_t)&a2[v30] & v44, v45);
        return a1;
      }
      unsigned int v37 = a2[v22];
      unsigned int v38 = v37 - 3;
      unint64_t v123 = v36;
      if (v37 >= 3)
      {
        if (v22 <= 3) {
          uint64_t v39 = v22;
        }
        else {
          uint64_t v39 = 4;
        }
        switch(v39)
        {
          case 1:
            int v40 = *a2;
            goto LABEL_42;
          case 2:
            int v40 = *(unsigned __int16 *)a2;
            goto LABEL_42;
          case 3:
            int v40 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_42;
          case 4:
            int v40 = *(_DWORD *)a2;
LABEL_42:
            if (v22 < 4) {
              unsigned int v37 = (v40 | (v38 << (8 * v22))) + 3;
            }
            else {
              unsigned int v37 = v40 + 3;
            }
            break;
          default:
            break;
        }
      }
      uint64_t v121 = ~v8;
      unint64_t v127 = ~v13;
      uint64_t v116 = ~v12;
      uint64_t v117 = v14;
      uint64_t v122 = v19;
      uint64_t v119 = v12 + 16;
      uint64_t v120 = *(void *)(v10 - 8);
      uint64_t v126 = v26;
      uint64_t v124 = v30;
      uint64_t v125 = v25;
      uint64_t v118 = v10;
      uint64_t v115 = v13 + v9;
      if (v37 == 2)
      {
        uint64_t v62 = v22;
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v131 + 16))(a1, a2, v132);
        uint64_t v63 = v9 + 7;
        uint64_t v64 = v62;
        *(_OWORD *)((a1 + v9 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&a2[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
        *(unsigned char *)(a1 + v62) = 2;
      }
      else
      {
        if (v37 == 1)
        {
          unint64_t v107 = v17;
          uint64_t v111 = v9 + 7;
          uint64_t v113 = v22;
          uint64_t v46 = *((void *)a2 + 1);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v46;
          int v47 = &a2[v8];
          uint64_t v48 = (a1 + v8 + 16) & v121;
          uint64_t v49 = (unint64_t)(v47 + 16) & v121;
          uint64_t v50 = *(void (**)(unint64_t, uint64_t, uint64_t))(v131 + 16);
          swift_bridgeObjectRetain();
          size_t v106 = v50;
          v50(v48, v49, v132);
          uint64_t v51 = v122;
          uint64_t v52 = v9 + v13;
          unint64_t v53 = ~v13;
          unint64_t v54 = (v48 + v9 + v13) & v127;
          uint64_t v55 = (unsigned __int8 *)((v49 + v52) & v127);
          unsigned int v56 = v55[v122];
          unsigned int v57 = v56 - 4;
          if (v56 < 4)
          {
            uint64_t v60 = v119;
            uint64_t v59 = v120;
            unint64_t v17 = v107;
          }
          else
          {
            if (v122 <= 3) {
              uint64_t v58 = v122;
            }
            else {
              uint64_t v58 = 4;
            }
            uint64_t v60 = v119;
            uint64_t v59 = v120;
            unint64_t v17 = v107;
            switch(v58)
            {
              case 1:
                int v61 = *v55;
                goto LABEL_60;
              case 2:
                int v61 = *(unsigned __int16 *)v55;
                goto LABEL_60;
              case 3:
                int v61 = *(unsigned __int16 *)v55 | (v55[2] << 16);
                goto LABEL_60;
              case 4:
                int v61 = *(_DWORD *)v55;
LABEL_60:
                if (v122 < 4) {
                  unsigned int v56 = (v61 | (v57 << (8 * v122))) + 4;
                }
                else {
                  unsigned int v56 = v61 + 4;
                }
                break;
              default:
                break;
            }
          }
          switch(v56)
          {
            case 1u:
              *(unsigned char *)unint64_t v54 = *v55;
              char v67 = 1;
              goto LABEL_66;
            case 2u:
              *(void *)unint64_t v54 = *(void *)v55;
              *(void *)(v54 + 8) = *((void *)v55 + 1);
              unint64_t v68 = (v60 + v54) & v116;
              unint64_t v109 = v54;
              unint64_t v69 = (unint64_t)&v55[v60] & v116;
              unint64_t v108 = *(void (**)(unint64_t, unint64_t, uint64_t))(v59 + 16);
              swift_bridgeObjectRetain();
              v108(v68, v69, v118);
              unint64_t v70 = (v117 + v68) & v121;
              uint64_t v71 = v117 + v69;
              unint64_t v54 = v109;
              uint64_t v72 = v71 & v121;
              v106(v70, v71 & v121, v132);
              unint64_t v53 = v127;
              uint64_t v51 = v122;
              uint64_t v63 = v111;
              *(void *)((v111 + v70) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v111 + v72) & 0xFFFFFFFFFFFFFFF8);
              *(unsigned char *)(v17 + v109) = v55[v17];
              char v67 = 2;
              goto LABEL_69;
            case 3u:
              *(void *)unint64_t v54 = *(void *)v55;
              *(void *)(v54 + 8) = *((void *)v55 + 1);
              unint64_t v73 = (v60 + v54) & v116;
              unint64_t v74 = (unint64_t)&v55[v60] & v116;
              unsigned int v110 = *(void (**)(unint64_t, unint64_t, uint64_t))(v59 + 16);
              swift_bridgeObjectRetain();
              v110(v73, v74, v118);
              unint64_t v75 = (v117 + v73) & v121;
              unint64_t v76 = (v117 + v74) & v121;
              v106(v75, v76, v132);
              unint64_t v53 = v127;
              uint64_t v51 = v122;
              uint64_t v63 = v111;
              *(void *)((v111 + v75) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v111 + v76) & 0xFFFFFFFFFFFFFFF8);
              char v67 = 3;
LABEL_69:
              uint64_t v64 = v113;
              break;
            default:
              char v67 = 0;
              *(_WORD *)unint64_t v54 = *(_WORD *)v55;
LABEL_66:
              uint64_t v63 = v111;
              uint64_t v64 = v113;
              break;
          }
          *(unsigned char *)(v54 + v51) = v67;
          *(unsigned char *)(a1 + v64) = 1;
LABEL_71:
          unint64_t v77 = (void *)((v24 + a1) & v53);
          uint64_t v78 = (void *)((unint64_t)&a2[v24] & v53);
          unsigned int v79 = *((unsigned __int8 *)v78 + v64);
          if (v79 > 2)
          {
            memcpy((void *)((v24 + a1) & v53), (const void *)((unint64_t)&a2[v24] & v53), v23);
          }
          else if (v79 == 2)
          {
            uint64_t v93 = v64;
            uint64_t v94 = v63;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v131 + 16))((v24 + a1) & v53, (unint64_t)&a2[v24] & v53, v132);
            *(_OWORD *)(((unint64_t)v77 + v94) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v78 + v94) & 0xFFFFFFFFFFFFFFF8);
            *((unsigned char *)v77 + v93) = 2;
          }
          else
          {
            if (v79 == 1)
            {
              uint64_t v112 = v63;
              uint64_t v114 = v64;
              *unint64_t v77 = *v78;
              *(void *)(((v24 + a1) & v53) + 8) = *(void *)(((unint64_t)&a2[v24] & v53) + 8);
              unint64_t v80 = ((unint64_t)v77 + v129) & v121;
              unint64_t v81 = ((unint64_t)v78 + v129) & v121;
              uint64_t v82 = *(void (**)(unint64_t, unint64_t, uint64_t))(v131 + 16);
              unint64_t v83 = v53;
              swift_bridgeObjectRetain();
              v82(v80, v81, v132);
              uint64_t v84 = v122;
              unint64_t v85 = (v115 + v80) & v83;
              uint64_t v86 = (unsigned __int8 *)((v115 + v81) & v83);
              unsigned int v87 = v86[v122];
              unsigned int v88 = v87 - 4;
              if (v87 < 4)
              {
                uint64_t v90 = v119;
                uint64_t v91 = v120;
              }
              else
              {
                if (v122 <= 3) {
                  uint64_t v89 = v122;
                }
                else {
                  uint64_t v89 = 4;
                }
                uint64_t v90 = v119;
                uint64_t v91 = v120;
                switch(v89)
                {
                  case 1:
                    int v92 = *v86;
                    goto LABEL_91;
                  case 2:
                    int v92 = *(unsigned __int16 *)v86;
                    goto LABEL_91;
                  case 3:
                    int v92 = *(unsigned __int16 *)v86 | (v86[2] << 16);
                    goto LABEL_91;
                  case 4:
                    int v92 = *(_DWORD *)v86;
LABEL_91:
                    int v97 = (v92 | (v88 << (8 * v122))) + 4;
                    unsigned int v87 = v92 + 4;
                    if (v122 < 4) {
                      unsigned int v87 = v97;
                    }
                    break;
                  default:
                    break;
                }
              }
              switch(v87)
              {
                case 1u:
                  *(unsigned char *)unint64_t v85 = *v86;
                  char v98 = 1;
                  break;
                case 2u:
                  *(void *)unint64_t v85 = *(void *)v86;
                  *(void *)(v85 + 8) = *((void *)v86 + 1);
                  unint64_t v99 = (v90 + v85) & v116;
                  uint64_t v130 = (void (*)(uint64_t, unint64_t, uint64_t))v82;
                  unint64_t v100 = (unint64_t)&v86[v90] & v116;
                  uint64_t v128 = *(void (**)(unint64_t, unint64_t, uint64_t))(v91 + 16);
                  swift_bridgeObjectRetain();
                  v128(v99, v100, v118);
                  uint64_t v101 = (v117 + v99) & v121;
                  v130(v101, (v117 + v100) & v121, v132);
                  uint64_t v84 = v122;
                  *(void *)((v112 + v101) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v112 + ((v117 + v100) & v121)) & 0xFFFFFFFFFFFFFFF8);
                  *(unsigned char *)(v85 + v17) = v86[v17];
                  char v98 = 2;
                  break;
                case 3u:
                  *(void *)unint64_t v85 = *(void *)v86;
                  *(void *)(v85 + 8) = *((void *)v86 + 1);
                  unint64_t v102 = (v90 + v85) & v116;
                  unint64_t v103 = (unint64_t)&v86[v90] & v116;
                  uint64_t v104 = *(void (**)(unint64_t, unint64_t, uint64_t))(v91 + 16);
                  swift_bridgeObjectRetain();
                  v104(v102, v103, v118);
                  uint64_t v105 = (v117 + v102) & v121;
                  v82(v105, (v117 + v103) & v121, v132);
                  uint64_t v84 = v122;
                  *(void *)((v112 + v105) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v112 + ((v117 + v103) & v121)) & 0xFFFFFFFFFFFFFFF8);
                  char v98 = 3;
                  break;
                default:
                  char v98 = 0;
                  *(_WORD *)unint64_t v85 = *(_WORD *)v86;
                  break;
              }
              uint64_t v45 = v126;
              uint64_t v30 = v124;
              uint64_t v95 = v125;
              unint64_t v44 = v123;
              *(unsigned char *)(v85 + v84) = v98;
              *((unsigned char *)v77 + v114) = 1;
              goto LABEL_84;
            }
            *unint64_t v77 = *v78;
            *(void *)(((v24 + a1) & v53) + 8) = *(void *)(((unint64_t)&a2[v24] & v53) + 8);
            *((unsigned char *)v77 + v64) = 0;
            swift_bridgeObjectRetain();
          }
          uint64_t v45 = v126;
          uint64_t v30 = v124;
          uint64_t v95 = v125;
          unint64_t v44 = v123;
LABEL_84:
          *(unsigned char *)(a1 + v95) = 1;
          goto LABEL_85;
        }
        uint64_t v65 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v65;
        *(unsigned char *)(a1 + v22) = 0;
        uint64_t v66 = v22;
        swift_bridgeObjectRetain();
        uint64_t v64 = v66;
        uint64_t v63 = v9 + 7;
      }
      unint64_t v53 = v127;
      goto LABEL_71;
    }
  }
  uint64_t v35 = *(void *)a2;
  *(void *)a1 = *(void *)a2;
  a1 = v35 + (((v13 | v28) + 16) & ~(v13 | v28));
  swift_retain();
  return a1;
}

uint64_t sub_22EDF8600(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v58 = sub_22EE7F6E0();
  uint64_t v3 = *(void *)(v58 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = sub_22EE7F5D0();
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v8 = v4 | v7 | 7;
  uint64_t v9 = (v8 + v5 + ((v4 + 16) & ~v4)) & ~v8;
  unint64_t v10 = (v5 + 7 + ((*(void *)(*(void *)(v6 - 8) + 64) + v4 + ((v7 + 16) & ~v7)) & ~v4)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = v10 + 8;
  unint64_t v12 = v10 + 9;
  if (v12 <= v11) {
    unint64_t v12 = v11;
  }
  if (v12 <= 2) {
    uint64_t v13 = 2;
  }
  else {
    uint64_t v13 = v12;
  }
  if (v13 + v9 + 1 > ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v14 = v13 + v9 + 1;
  }
  else {
    unint64_t v14 = ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v14 <= 0x10) {
    uint64_t v15 = 16;
  }
  else {
    uint64_t v15 = v14;
  }
  uint64_t v16 = v15 + 1 + v8;
  if ((v16 & (unint64_t)~v8) + v15 + 1 <= 0x20) {
    uint64_t v17 = 32;
  }
  else {
    uint64_t v17 = (v16 & ~v8) + v15 + 1;
  }
  unsigned int v18 = a1[v17];
  unsigned int v19 = v18 - 2;
  if (v18 >= 2)
  {
    if (v17 <= 3) {
      uint64_t v20 = v17;
    }
    else {
      uint64_t v20 = 4;
    }
    switch(v20)
    {
      case 1:
        int v21 = *a1;
        goto LABEL_24;
      case 2:
        int v21 = *(unsigned __int16 *)a1;
        goto LABEL_24;
      case 3:
        int v21 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_24;
      case 4:
        int v21 = *(_DWORD *)a1;
LABEL_24:
        if (v17 < 4) {
          unsigned int v18 = (v21 | (v19 << (8 * v17))) + 2;
        }
        else {
          unsigned int v18 = v21 + 2;
        }
        break;
      default:
        break;
    }
  }
  if (v18 == 1)
  {
    unsigned int v22 = a1[v15];
    unsigned int v23 = v22 - 3;
    if (v22 >= 3)
    {
      if (v15 <= 3) {
        uint64_t v24 = v15;
      }
      else {
        uint64_t v24 = 4;
      }
      switch(v24)
      {
        case 1:
          int v25 = *a1;
          goto LABEL_38;
        case 2:
          int v25 = *(unsigned __int16 *)a1;
          goto LABEL_38;
        case 3:
          int v25 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_38;
        case 4:
          int v25 = *(_DWORD *)a1;
LABEL_38:
          if (v15 < 4) {
            unsigned int v22 = (v25 | (v23 << (8 * v15))) + 3;
          }
          else {
            unsigned int v22 = v25 + 3;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v50 = v8 + v5;
    uint64_t v51 = v4 + 16;
    uint64_t v56 = v6;
    uint64_t v57 = ~v4;
    uint64_t v27 = ~v8;
    uint64_t v52 = ~v7;
    uint64_t v53 = v7 + 16;
    uint64_t v54 = *(void *)(*(void *)(v6 - 8) + 64) + v4;
    uint64_t v55 = *(void *)(v6 - 8);
    if (v22 == 2)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v3 + 8))(a1, v58);
    }
    else if (v22 == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v28 = (unint64_t)&a1[v4 + 16] & v57;
      uint64_t v49 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
      v49(v28, v58);
      uint64_t v29 = (unsigned __int8 *)((v28 + v5 + v8) & v27);
      unsigned int v30 = v29[v13];
      unsigned int v31 = v30 - 4;
      if (v30 >= 4)
      {
        if (v13 <= 3) {
          uint64_t v32 = v13;
        }
        else {
          uint64_t v32 = 4;
        }
        switch(v32)
        {
          case 1:
            int v33 = *v29;
            goto LABEL_54;
          case 2:
            int v33 = *(unsigned __int16 *)v29;
            goto LABEL_54;
          case 3:
            int v33 = *(unsigned __int16 *)v29 | (v29[2] << 16);
            goto LABEL_54;
          case 4:
            int v33 = *(_DWORD *)v29;
LABEL_54:
            int v34 = (v33 | (v31 << (8 * v13))) + 4;
            unsigned int v30 = v33 + 4;
            if (v13 < 4) {
              unsigned int v30 = v34;
            }
            break;
          default:
            break;
        }
      }
      if (v30 >= 2)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v55 + 8))((unint64_t)&v29[v53] & v52, v56);
        v49((v54 + ((unint64_t)&v29[v53] & v52)) & v57, v58);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    unint64_t v35 = (unint64_t)&a1[v16] & v27;
    unsigned int v36 = *(unsigned __int8 *)(v35 + v15);
    uint64_t v26 = a2;
    if (v36 <= 2)
    {
      if (v36 == 2)
      {
        (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v35, v58);
      }
      else if (v36 == 1)
      {
        swift_bridgeObjectRelease();
        unint64_t v37 = (v51 + v35) & v57;
        unsigned int v38 = *(void (**)(unint64_t, uint64_t))(v3 + 8);
        v38(v37, v58);
        uint64_t v39 = (unsigned __int8 *)((v50 + v37) & v27);
        unsigned int v40 = v39[v13];
        unsigned int v41 = v40 - 4;
        if (v40 >= 4)
        {
          if (v13 <= 3) {
            uint64_t v42 = v13;
          }
          else {
            uint64_t v42 = 4;
          }
          switch(v42)
          {
            case 1:
              int v43 = *v39;
              goto LABEL_72;
            case 2:
              int v43 = *(unsigned __int16 *)v39;
              goto LABEL_72;
            case 3:
              int v43 = *(unsigned __int16 *)v39 | (*(unsigned __int8 *)(((v50 + v37) & v27) + 2) << 16);
              goto LABEL_72;
            case 4:
              int v43 = *(_DWORD *)v39;
LABEL_72:
              int v44 = (v43 | (v41 << (8 * v13))) + 4;
              unsigned int v40 = v43 + 4;
              if (v13 < 4) {
                unsigned int v40 = v44;
              }
              break;
            default:
              break;
          }
        }
        if (v40 >= 2)
        {
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v55 + 8))((unint64_t)&v39[v53] & v52, v56);
          v38((v54 + ((unint64_t)&v39[v53] & v52)) & v57, v58);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v26 = a2;
  }
  uint64_t v45 = *(void *)(*(void *)(v26 + 16) - 8);
  uint64_t v46 = *(uint64_t (**)(unint64_t))(v45 + 8);
  unint64_t v47 = (unint64_t)&a1[v17 + 1 + *(unsigned __int8 *)(v45 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);

  return v46(v47);
}

uint64_t sub_22EDF8BE8(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7F6E0();
  uint64_t v105 = *(void *)(v6 - 8);
  uint64_t v106 = v6;
  uint64_t v7 = *(unsigned __int8 *)(v105 + 80);
  uint64_t v101 = v7 + 16;
  uint64_t v8 = *(void *)(v105 + 64);
  uint64_t v9 = sub_22EE7F5D0();
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(v9 - 8) + 80);
  uint64_t v11 = v7 | v10 | 7;
  uint64_t v12 = (v11 + v8 + ((v7 + 16) & ~v7)) & ~v11;
  uint64_t v13 = v8 + 7;
  unint64_t v14 = (v8 + 7 + ((*(void *)(*(void *)(v9 - 8) + 64) + v7 + ((v10 + 16) & ~v10)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = v14 + 8;
  unint64_t v16 = v14 + 9;
  unint64_t v98 = v15;
  if (v16 <= v15) {
    unint64_t v16 = v15;
  }
  if (v16 <= 2) {
    uint64_t v17 = 2;
  }
  else {
    uint64_t v17 = v16;
  }
  uint64_t v104 = v8 + 7;
  if (v17 + v12 + 1 > (v13 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v18 = v17 + v12 + 1;
  }
  else {
    unint64_t v18 = (v13 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v18 <= 0x10) {
    uint64_t v19 = 16;
  }
  else {
    uint64_t v19 = v18;
  }
  uint64_t v20 = v19 + 1 + v11;
  if ((v20 & (unint64_t)~v11) + v19 + 1 <= 0x20) {
    uint64_t v21 = 32;
  }
  else {
    uint64_t v21 = (v20 & ~v11) + v19 + 1;
  }
  unsigned int v22 = a2[v21];
  unsigned int v23 = v22 - 2;
  if (v22 >= 2)
  {
    if (v21 <= 3) {
      uint64_t v24 = v21;
    }
    else {
      uint64_t v24 = 4;
    }
    switch(v24)
    {
      case 1:
        int v25 = *a2;
        goto LABEL_24;
      case 2:
        int v25 = *(unsigned __int16 *)a2;
        goto LABEL_24;
      case 3:
        int v25 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_24;
      case 4:
        int v25 = *(_DWORD *)a2;
LABEL_24:
        if (v21 < 4) {
          unsigned int v22 = (v25 | (v23 << (8 * v21))) + 2;
        }
        else {
          unsigned int v22 = v25 + 2;
        }
        break;
      default:
        break;
    }
  }
  if (v22 == 1)
  {
    unsigned int v26 = a2[v19];
    unsigned int v27 = v26 - 3;
    if (v26 >= 3)
    {
      if (v19 <= 3) {
        uint64_t v28 = v19;
      }
      else {
        uint64_t v28 = 4;
      }
      switch(v28)
      {
        case 1:
          int v29 = *a2;
          goto LABEL_38;
        case 2:
          int v29 = *(unsigned __int16 *)a2;
          goto LABEL_38;
        case 3:
          int v29 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_38;
        case 4:
          int v29 = *(_DWORD *)a2;
LABEL_38:
          if (v19 < 4) {
            unsigned int v26 = (v29 | (v27 << (8 * v19))) + 3;
          }
          else {
            unsigned int v26 = v29 + 3;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v95 = ~v7;
    uint64_t v96 = v17;
    uint64_t v99 = ~v11;
    uint64_t v90 = ~v10;
    uint64_t v91 = *(void *)(*(void *)(v9 - 8) + 64) + v7;
    uint64_t v93 = v10 + 16;
    uint64_t v94 = *(void *)(v9 - 8);
    uint64_t v97 = a3;
    uint64_t v92 = v9;
    uint64_t v89 = v11 + v8;
    if (v26 == 2)
    {
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v105 + 16))(a1, a2, v106);
      *(_OWORD *)((a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&a2[v8 + 7] & 0xFFFFFFFFFFFFFFF8);
      *(unsigned char *)(a1 + v19) = 2;
    }
    else
    {
      if (v26 == 1)
      {
        uint64_t v85 = v19 + 1 + v11;
        uint64_t v31 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v31;
        uint64_t v32 = &a2[v7];
        uint64_t v33 = (a1 + v7 + 16) & v95;
        uint64_t v34 = (unint64_t)(v32 + 16) & v95;
        unint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v105 + 16);
        swift_bridgeObjectRetain();
        uint64_t v84 = v35;
        v35(v33, v34, v106);
        uint64_t v36 = v96;
        uint64_t v37 = v8 + v11;
        uint64_t v38 = ~v11;
        uint64_t v39 = (v33 + v8 + v11) & v99;
        unsigned int v40 = (unsigned __int8 *)((v34 + v37) & v99);
        unsigned int v41 = v40[v96];
        unsigned int v42 = v41 - 4;
        if (v41 < 4)
        {
          uint64_t v45 = v93;
          uint64_t v44 = v94;
          uint64_t v20 = v85;
        }
        else
        {
          if (v96 <= 3) {
            uint64_t v43 = v96;
          }
          else {
            uint64_t v43 = 4;
          }
          uint64_t v45 = v93;
          uint64_t v44 = v94;
          uint64_t v20 = v85;
          switch(v43)
          {
            case 1:
              int v46 = *v40;
              goto LABEL_56;
            case 2:
              int v46 = *(unsigned __int16 *)v40;
              goto LABEL_56;
            case 3:
              int v46 = *(unsigned __int16 *)v40 | (v40[2] << 16);
              goto LABEL_56;
            case 4:
              int v46 = *(_DWORD *)v40;
LABEL_56:
              if (v96 < 4) {
                unsigned int v41 = (v46 | (v42 << (8 * v96))) + 4;
              }
              else {
                unsigned int v41 = v46 + 4;
              }
              break;
            default:
              break;
          }
        }
        switch(v41)
        {
          case 1u:
            *(unsigned char *)uint64_t v39 = *v40;
            char v48 = 1;
            break;
          case 2u:
            *(void *)uint64_t v39 = *(void *)v40;
            *(void *)(v39 + 8) = *((void *)v40 + 1);
            uint64_t v49 = (v45 + v39) & v90;
            uint64_t v87 = v39;
            unint64_t v50 = (unint64_t)&v40[v45] & v90;
            uint64_t v86 = *(void (**)(uint64_t, unint64_t, uint64_t))(v44 + 16);
            swift_bridgeObjectRetain();
            v86(v49, v50, v92);
            uint64_t v51 = (v91 + v49) & v95;
            uint64_t v52 = v91 + v50;
            uint64_t v39 = v87;
            uint64_t v53 = v52 & v95;
            v84(v51, v52 & v95, v106);
            uint64_t v36 = v96;
            *(void *)((v104 + v51) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v104 + v53) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v38 = v99;
            *(unsigned char *)(v98 + v87) = v40[v98];
            char v48 = 2;
            break;
          case 3u:
            *(void *)uint64_t v39 = *(void *)v40;
            *(void *)(v39 + 8) = *((void *)v40 + 1);
            uint64_t v54 = (v45 + v39) & v90;
            unint64_t v55 = (unint64_t)&v40[v45] & v90;
            unsigned int v88 = *(void (**)(uint64_t, unint64_t, uint64_t))(v44 + 16);
            swift_bridgeObjectRetain();
            v88(v54, v55, v92);
            uint64_t v56 = (v91 + v54) & v95;
            unint64_t v57 = (v91 + v55) & v95;
            v84(v56, v57, v106);
            uint64_t v38 = v99;
            uint64_t v36 = v96;
            *(void *)((v104 + v56) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v104 + v57) & 0xFFFFFFFFFFFFFFF8);
            char v48 = 3;
            break;
          default:
            char v48 = 0;
            *(_WORD *)uint64_t v39 = *(_WORD *)v40;
            break;
        }
        *(unsigned char *)(v39 + v36) = v48;
        *(unsigned char *)(a1 + v19) = 1;
LABEL_65:
        uint64_t v58 = (void *)((v20 + a1) & v38);
        uint64_t v59 = (void *)((unint64_t)&a2[v20] & v38);
        unsigned int v60 = *((unsigned __int8 *)v59 + v19);
        if (v60 > 2)
        {
          memcpy((void *)((v20 + a1) & v38), (const void *)((unint64_t)&a2[v20] & v38), v19 + 1);
        }
        else if (v60 == 2)
        {
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v105 + 16))((v20 + a1) & v38, (unint64_t)&a2[v20] & v38, v106);
          *(_OWORD *)(((unint64_t)v58 + v104) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v59 + v104) & 0xFFFFFFFFFFFFFFF8);
          *((unsigned char *)v58 + v19) = 2;
        }
        else
        {
          if (v60 == 1)
          {
            void *v58 = *v59;
            *(void *)(((v20 + a1) & v38) + 8) = *(void *)(((unint64_t)&a2[v20] & v38) + 8);
            unint64_t v61 = ((unint64_t)v58 + v101) & v95;
            unint64_t v62 = ((unint64_t)v59 + v101) & v95;
            uint64_t v63 = *(void (**)(unint64_t, unint64_t, uint64_t))(v105 + 16);
            uint64_t v64 = v38;
            swift_bridgeObjectRetain();
            v63(v61, v62, v106);
            uint64_t v65 = v96;
            unint64_t v66 = (v89 + v61) & v64;
            char v67 = (unsigned __int8 *)((v89 + v62) & v64);
            unsigned int v68 = v67[v96];
            unsigned int v69 = v68 - 4;
            if (v68 < 4)
            {
              uint64_t v71 = v93;
              uint64_t v72 = v94;
            }
            else
            {
              if (v96 <= 3) {
                uint64_t v70 = v96;
              }
              else {
                uint64_t v70 = 4;
              }
              uint64_t v71 = v93;
              uint64_t v72 = v94;
              switch(v70)
              {
                case 1:
                  int v73 = *v67;
                  goto LABEL_84;
                case 2:
                  int v73 = *(unsigned __int16 *)v67;
                  goto LABEL_84;
                case 3:
                  int v73 = *(unsigned __int16 *)v67 | (v67[2] << 16);
                  goto LABEL_84;
                case 4:
                  int v73 = *(_DWORD *)v67;
LABEL_84:
                  int v76 = (v73 | (v69 << (8 * v96))) + 4;
                  unsigned int v68 = v73 + 4;
                  if (v96 < 4) {
                    unsigned int v68 = v76;
                  }
                  break;
                default:
                  break;
              }
            }
            switch(v68)
            {
              case 1u:
                *(unsigned char *)unint64_t v66 = *v67;
                char v77 = 1;
                break;
              case 2u:
                *(void *)unint64_t v66 = *(void *)v67;
                *(void *)(v66 + 8) = *((void *)v67 + 1);
                unint64_t v78 = (v71 + v66) & v90;
                unint64_t v102 = (void (*)(uint64_t, unint64_t, uint64_t))v63;
                unint64_t v79 = (unint64_t)&v67[v71] & v90;
                unint64_t v100 = *(void (**)(unint64_t, unint64_t, uint64_t))(v72 + 16);
                swift_bridgeObjectRetain();
                v100(v78, v79, v92);
                uint64_t v80 = (v91 + v78) & v95;
                v102(v80, (v91 + v79) & v95, v106);
                uint64_t v65 = v96;
                *(void *)((v104 + v80) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v104 + ((v91 + v79) & v95)) & 0xFFFFFFFFFFFFFFF8);
                *(unsigned char *)(v66 + v98) = v67[v98];
                char v77 = 2;
                break;
              case 3u:
                *(void *)unint64_t v66 = *(void *)v67;
                *(void *)(v66 + 8) = *((void *)v67 + 1);
                unint64_t v81 = (v71 + v66) & v90;
                unint64_t v82 = (unint64_t)&v67[v71] & v90;
                unint64_t v103 = *(void (**)(unint64_t, unint64_t, uint64_t))(v72 + 16);
                swift_bridgeObjectRetain();
                v103(v81, v82, v92);
                uint64_t v83 = (v91 + v81) & v95;
                v63(v83, (v91 + v82) & v95, v106);
                uint64_t v65 = v96;
                *(void *)((v104 + v83) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v104 + ((v91 + v82) & v95)) & 0xFFFFFFFFFFFFFFF8);
                char v77 = 3;
                break;
              default:
                char v77 = 0;
                *(_WORD *)unint64_t v66 = *(_WORD *)v67;
                break;
            }
            a3 = v97;
            *(unsigned char *)(v66 + v65) = v77;
            *((unsigned char *)v58 + v19) = 1;
            goto LABEL_78;
          }
          void *v58 = *v59;
          *(void *)(((v20 + a1) & v38) + 8) = *(void *)(((unint64_t)&a2[v20] & v38) + 8);
          *((unsigned char *)v58 + v19) = 0;
          swift_bridgeObjectRetain();
        }
        a3 = v97;
LABEL_78:
        *(unsigned char *)(a1 + v21) = 1;
        goto LABEL_79;
      }
      uint64_t v47 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v47;
      *(unsigned char *)(a1 + v19) = 0;
      swift_bridgeObjectRetain();
    }
    uint64_t v38 = ~v11;
    goto LABEL_65;
  }
  uint64_t v30 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v30;
  *(unsigned char *)(a1 + 16) = a2[16];
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  *(unsigned char *)(a1 + v21) = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_79:
  uint64_t v74 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v74 + 16))((v21 + *(unsigned __int8 *)(v74 + 80) + 1 + a1) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80), (unint64_t)&a2[v21 + 1 + *(unsigned __int8 *)(v74 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v74 + 80));
  return a1;
}

unsigned __int8 *sub_22EDF95FC(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  if (a1 != a2)
  {
    uint64_t v6 = sub_22EE7F6E0();
    uint64_t v128 = *(void *)(v6 - 8);
    uint64_t v129 = v6;
    uint64_t v7 = *(unsigned __int8 *)(v128 + 80);
    uint64_t v117 = v7 + 16;
    uint64_t v8 = *(void *)(v128 + 64);
    uint64_t v9 = sub_22EE7F5D0();
    uint64_t v122 = *(void *)(v9 - 8);
    uint64_t v124 = v9;
    uint64_t v10 = *(unsigned __int8 *)(v122 + 80);
    uint64_t v11 = v7 | v10 | 7;
    uint64_t v116 = v11 + v8;
    uint64_t v120 = v10 + 16;
    uint64_t v121 = *(void *)(v122 + 64) + v7;
    uint64_t v12 = v8 + 7;
    unint64_t v13 = (v8 + 7 + ((v121 + ((v10 + 16) & ~v10)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v14 = v13 + 8;
    unint64_t v15 = v13 + 9;
    unint64_t v115 = v14;
    if (v15 <= v14) {
      unint64_t v15 = v14;
    }
    if (v15 <= 2) {
      unint64_t v15 = 2;
    }
    unint64_t v126 = v15;
    unint64_t v16 = v15 + ((v11 + v8 + ((v7 + 16) & ~v7)) & ~v11);
    uint64_t v118 = v8 + 7;
    if (v16 + 1 > (v12 & 0xFFFFFFFFFFFFFFF8) + 16) {
      unint64_t v17 = v16 + 1;
    }
    else {
      unint64_t v17 = (v12 & 0xFFFFFFFFFFFFFFF8) + 16;
    }
    if (v17 <= 0x10) {
      uint64_t v18 = 16;
    }
    else {
      uint64_t v18 = v17;
    }
    uint64_t v19 = v18 + 1 + v11;
    if ((v19 & (unint64_t)~v11) + v18 + 1 <= 0x20) {
      uint64_t v20 = 32;
    }
    else {
      uint64_t v20 = (v19 & ~v11) + v18 + 1;
    }
    unsigned int v21 = a1[v20];
    unsigned int v22 = v21 - 2;
    if (v21 >= 2)
    {
      if (v20 <= 3) {
        uint64_t v23 = v20;
      }
      else {
        uint64_t v23 = 4;
      }
      switch(v23)
      {
        case 1:
          int v24 = *a1;
          goto LABEL_24;
        case 2:
          int v24 = *(unsigned __int16 *)a1;
          goto LABEL_24;
        case 3:
          int v24 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_24;
        case 4:
          int v24 = *(_DWORD *)a1;
LABEL_24:
          if (v20 < 4) {
            unsigned int v21 = (v24 | (v22 << (8 * v20))) + 2;
          }
          else {
            unsigned int v21 = v24 + 2;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v125 = ~v7;
    uint64_t v119 = ~v10;
    uint64_t v130 = ~v11;
    if (v21 == 1)
    {
      unsigned int v25 = a1[v18];
      unsigned int v26 = v25 - 3;
      if (v25 >= 3)
      {
        if (v18 <= 3) {
          uint64_t v27 = v18;
        }
        else {
          uint64_t v27 = 4;
        }
        switch(v27)
        {
          case 1:
            int v28 = *a1;
            goto LABEL_39;
          case 2:
            int v28 = *(unsigned __int16 *)a1;
            goto LABEL_39;
          case 3:
            int v28 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            goto LABEL_39;
          case 4:
            int v28 = *(_DWORD *)a1;
LABEL_39:
            if (v18 < 4) {
              unsigned int v25 = (v28 | (v26 << (8 * v18))) + 3;
            }
            else {
              unsigned int v25 = v28 + 3;
            }
            break;
          default:
            break;
        }
      }
      if (v25 == 2)
      {
        (*(void (**)(unsigned __int8 *, uint64_t))(v128 + 8))(a1, v129);
      }
      else if (v25 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v111 = *(void (**)(unint64_t, uint64_t))(v128 + 8);
        v111((unint64_t)&a1[v7 + 16] & v125, v129);
        int v29 = (unsigned __int8 *)((((unint64_t)&a1[v7 + 16] & v125) + v8 + v11) & v130);
        unsigned int v30 = v29[v126];
        unsigned int v31 = v30 - 4;
        if (v30 >= 4)
        {
          if (v126 <= 3) {
            uint64_t v32 = v126;
          }
          else {
            uint64_t v32 = 4;
          }
          switch(v32)
          {
            case 1:
              int v33 = *v29;
              goto LABEL_55;
            case 2:
              int v33 = *(unsigned __int16 *)v29;
              goto LABEL_55;
            case 3:
              int v33 = *(unsigned __int16 *)v29 | (v29[2] << 16);
              goto LABEL_55;
            case 4:
              int v33 = *(_DWORD *)v29;
LABEL_55:
              if (v126 < 4) {
                unsigned int v30 = (v33 | (v31 << (8 * v126))) + 4;
              }
              else {
                unsigned int v30 = v33 + 4;
              }
              break;
            default:
              break;
          }
        }
        if (v30 >= 2)
        {
          swift_bridgeObjectRelease();
          unint64_t v34 = (unint64_t)&v29[v120] & v119;
          (*(void (**)(unint64_t, uint64_t))(v122 + 8))(v34, v124);
          v111((v121 + v34) & v125, v129);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      unint64_t v35 = (unint64_t)&a1[v19] & v130;
      unsigned int v36 = *(unsigned __int8 *)(v35 + v18);
      if (v36 > 2)
      {
LABEL_78:
        unsigned int v45 = a2[v20];
        unsigned int v46 = v45 - 2;
        if (v45 >= 2)
        {
          if (v20 <= 3) {
            uint64_t v47 = v20;
          }
          else {
            uint64_t v47 = 4;
          }
          switch(v47)
          {
            case 1:
              int v48 = *a2;
              goto LABEL_87;
            case 2:
              int v48 = *(unsigned __int16 *)a2;
              goto LABEL_87;
            case 3:
              int v48 = *(unsigned __int16 *)a2 | (a2[2] << 16);
              goto LABEL_87;
            case 4:
              int v48 = *(_DWORD *)a2;
LABEL_87:
              if (v20 < 4) {
                unsigned int v45 = (v48 | (v46 << (8 * v20))) + 2;
              }
              else {
                unsigned int v45 = v48 + 2;
              }
              break;
            default:
              break;
          }
        }
        if (v45 != 1)
        {
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = *((void *)a2 + 1);
          a1[16] = a2[16];
          *((void *)a1 + 3) = *((void *)a2 + 3);
          a1[v20] = 0;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v3 = a3;
          goto LABEL_142;
        }
        unsigned int v49 = a2[v18];
        unsigned int v50 = v49 - 3;
        if (v49 >= 3)
        {
          if (v18 <= 3) {
            uint64_t v51 = v18;
          }
          else {
            uint64_t v51 = 4;
          }
          switch(v51)
          {
            case 1:
              int v52 = *a2;
              goto LABEL_101;
            case 2:
              int v52 = *(unsigned __int16 *)a2;
              goto LABEL_101;
            case 3:
              int v52 = *(unsigned __int16 *)a2 | (a2[2] << 16);
              goto LABEL_101;
            case 4:
              int v52 = *(_DWORD *)a2;
LABEL_101:
              if (v18 < 4) {
                unsigned int v49 = (v52 | (v50 << (8 * v18))) + 3;
              }
              else {
                unsigned int v49 = v52 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v49 == 2)
        {
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v128 + 16))(a1, a2, v129);
          *(_OWORD *)((unint64_t)&a1[v8 + 7] & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&a2[v8 + 7] & 0xFFFFFFFFFFFFFFF8);
          a1[v18] = 2;
        }
        else
        {
          if (v49 == 1)
          {
            uint64_t v113 = v18 + 1 + v11;
            *(void *)a1 = *(void *)a2;
            *((void *)a1 + 1) = *((void *)a2 + 1);
            uint64_t v53 = (unint64_t)&a1[v7 + 16] & v125;
            uint64_t v54 = (unint64_t)&a2[v7 + 16] & v125;
            unint64_t v55 = *(void (**)(uint64_t, unint64_t, uint64_t))(v128 + 16);
            swift_bridgeObjectRetain();
            unsigned int v110 = v55;
            v55(v53, v54, v129);
            uint64_t v56 = v8 + v11;
            uint64_t v57 = (v53 + v8 + v11) & v130;
            uint64_t v58 = (unsigned __int8 *)((v54 + v56) & v130);
            unint64_t v59 = v126;
            unsigned int v60 = v58[v126];
            unsigned int v61 = v60 - 4;
            if (v60 < 4)
            {
              uint64_t v19 = v113;
            }
            else
            {
              if (v126 <= 3) {
                uint64_t v62 = v126;
              }
              else {
                uint64_t v62 = 4;
              }
              uint64_t v19 = v113;
              switch(v62)
              {
                case 1:
                  int v63 = *v58;
                  goto LABEL_119;
                case 2:
                  int v63 = *(unsigned __int16 *)v58;
                  goto LABEL_119;
                case 3:
                  int v63 = *(unsigned __int16 *)v58 | (v58[2] << 16);
                  goto LABEL_119;
                case 4:
                  int v63 = *(_DWORD *)v58;
LABEL_119:
                  if (v126 < 4) {
                    unsigned int v60 = (v63 | (v61 << (8 * v126))) + 4;
                  }
                  else {
                    unsigned int v60 = v63 + 4;
                  }
                  break;
                default:
                  break;
              }
            }
            switch(v60)
            {
              case 1u:
                *(unsigned char *)uint64_t v57 = *v58;
                char v65 = 1;
                break;
              case 2u:
                *(void *)uint64_t v57 = *(void *)v58;
                *(void *)(v57 + 8) = *((void *)v58 + 1);
                uint64_t v66 = (v120 + v57) & v119;
                unint64_t v67 = (unint64_t)&v58[v120] & v119;
                uint64_t v114 = *(void (**)(uint64_t, unint64_t, uint64_t))(v122 + 16);
                swift_bridgeObjectRetain();
                v114(v66, v67, v124);
                unint64_t v68 = (v121 + v67) & v125;
                v110((v121 + v66) & v125, v68, v129);
                unint64_t v59 = v126;
                *(void *)((v118 + ((v121 + v66) & v125)) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v118 + v68) & 0xFFFFFFFFFFFFFFF8);
                *(unsigned char *)(v115 + v57) = v58[v115];
                char v65 = 2;
                break;
              case 3u:
                *(void *)uint64_t v57 = *(void *)v58;
                *(void *)(v57 + 8) = *((void *)v58 + 1);
                uint64_t v69 = (v120 + v57) & v119;
                unint64_t v70 = (unint64_t)&v58[v120] & v119;
                uint64_t v71 = *(void (**)(uint64_t, unint64_t, uint64_t))(v122 + 16);
                swift_bridgeObjectRetain();
                v71(v69, v70, v124);
                uint64_t v72 = (v121 + v69) & v125;
                unint64_t v73 = (v121 + v70) & v125;
                v110(v72, v73, v129);
                unint64_t v59 = v126;
                *(void *)((v118 + v72) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v118 + v73) & 0xFFFFFFFFFFFFFFF8);
                char v65 = 3;
                break;
              default:
                char v65 = 0;
                *(_WORD *)uint64_t v57 = *(_WORD *)v58;
                break;
            }
            uint64_t v64 = v130;
            *(unsigned char *)(v57 + v59) = v65;
            a1[v18] = 1;
LABEL_128:
            uint64_t v74 = (void *)((unint64_t)&a1[v19] & v64);
            unint64_t v75 = (void *)((unint64_t)&a2[v19] & v64);
            unsigned int v76 = *((unsigned __int8 *)v75 + v18);
            if (v76 > 2)
            {
              memcpy((void *)((unint64_t)&a1[v19] & v64), (const void *)((unint64_t)&a2[v19] & v64), v18 + 1);
            }
            else if (v76 == 2)
            {
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v128 + 16))((unint64_t)&a1[v19] & v64, (unint64_t)&a2[v19] & v64, v129);
              *(_OWORD *)(((unint64_t)v74 + v118) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v75
                                                                                              + v118) & 0xFFFFFFFFFFFFFFF8);
              *((unsigned char *)v74 + v18) = 2;
            }
            else
            {
              if (v76 == 1)
              {
                *uint64_t v74 = *v75;
                *(void *)(((unint64_t)&a1[v19] & v64) + 8) = *(void *)(((unint64_t)&a2[v19] & v64) + 8);
                uint64_t v77 = v64;
                unint64_t v78 = ((unint64_t)v74 + v117) & v125;
                unint64_t v79 = ((unint64_t)v75 + v117) & v125;
                uint64_t v80 = *(void (**)(unint64_t, unint64_t, uint64_t))(v128 + 16);
                swift_bridgeObjectRetain();
                v80(v78, v79, v129);
                unint64_t v81 = (v116 + v78) & v77;
                unint64_t v82 = (unsigned __int8 *)((v116 + v79) & v77);
                unsigned int v83 = v82[v126];
                unsigned int v84 = v83 - 4;
                if (v83 >= 4)
                {
                  if (v126 <= 3) {
                    uint64_t v85 = v126;
                  }
                  else {
                    uint64_t v85 = 4;
                  }
                  switch(v85)
                  {
                    case 1:
                      int v86 = *v82;
                      goto LABEL_157;
                    case 2:
                      int v86 = *(unsigned __int16 *)v82;
                      goto LABEL_157;
                    case 3:
                      int v86 = *(unsigned __int16 *)v82 | (v82[2] << 16);
                      goto LABEL_157;
                    case 4:
                      int v86 = *(_DWORD *)v82;
LABEL_157:
                      int v102 = (v86 | (v84 << (8 * v126))) + 4;
                      unsigned int v83 = v86 + 4;
                      if (v126 < 4) {
                        unsigned int v83 = v102;
                      }
                      break;
                    default:
                      break;
                  }
                }
                switch(v83)
                {
                  case 1u:
                    *(unsigned char *)unint64_t v81 = *v82;
                    char v103 = 1;
                    break;
                  case 2u:
                    *(void *)unint64_t v81 = *(void *)v82;
                    *(void *)(v81 + 8) = *((void *)v82 + 1);
                    unint64_t v104 = (v120 + v81) & v119;
                    uint64_t v131 = (void (*)(uint64_t, unint64_t, uint64_t))v80;
                    unint64_t v105 = (unint64_t)&v82[v120] & v119;
                    unint64_t v123 = *(void (**)(unint64_t, unint64_t, uint64_t))(v122 + 16);
                    swift_bridgeObjectRetain();
                    v123(v104, v105, v124);
                    uint64_t v106 = (v121 + v104) & v125;
                    v131(v106, (v121 + v105) & v125, v129);
                    *(void *)((v118 + v106) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v118 + ((v121 + v105) & v125)) & 0xFFFFFFFFFFFFFFF8);
                    *(unsigned char *)(v81 + v115) = v82[v115];
                    char v103 = 2;
                    break;
                  case 3u:
                    *(void *)unint64_t v81 = *(void *)v82;
                    *(void *)(v81 + 8) = *((void *)v82 + 1);
                    unint64_t v107 = (v120 + v81) & v119;
                    unint64_t v108 = (unint64_t)&v82[v120] & v119;
                    uint64_t v132 = *(void (**)(unint64_t, unint64_t, uint64_t))(v122 + 16);
                    swift_bridgeObjectRetain();
                    v132(v107, v108, v124);
                    uint64_t v109 = (v121 + v107) & v125;
                    v80(v109, (v121 + v108) & v125, v129);
                    *(void *)((v118 + v109) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v118 + ((v121 + v108) & v125)) & 0xFFFFFFFFFFFFFFF8);
                    char v103 = 3;
                    break;
                  default:
                    char v103 = 0;
                    *(_WORD *)unint64_t v81 = *(_WORD *)v82;
                    break;
                }
                uint64_t v3 = a3;
                *(unsigned char *)(v81 + v126) = v103;
                *((unsigned char *)v74 + v18) = 1;
                goto LABEL_141;
              }
              *uint64_t v74 = *v75;
              *(void *)(((unint64_t)&a1[v19] & v64) + 8) = *(void *)(((unint64_t)&a2[v19] & v64) + 8);
              *((unsigned char *)v74 + v18) = 0;
              swift_bridgeObjectRetain();
            }
            uint64_t v3 = a3;
LABEL_141:
            a1[v20] = 1;
            goto LABEL_142;
          }
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = *((void *)a2 + 1);
          a1[v18] = 0;
          swift_bridgeObjectRetain();
        }
        uint64_t v64 = ~v11;
        goto LABEL_128;
      }
      if (v36 == 2)
      {
        (*(void (**)(unint64_t, uint64_t))(v128 + 8))((unint64_t)&a1[v19] & v130, v129);
        goto LABEL_78;
      }
      if (v36 == 1)
      {
        swift_bridgeObjectRelease();
        unint64_t v37 = (v117 + v35) & v125;
        uint64_t v112 = *(void (**)(unint64_t, uint64_t))(v128 + 8);
        v112(v37, v129);
        uint64_t v38 = (unsigned __int8 *)((v116 + v37) & v130);
        unsigned int v39 = v38[v126];
        unsigned int v40 = v39 - 4;
        if (v39 >= 4)
        {
          if (v126 <= 3) {
            uint64_t v41 = v126;
          }
          else {
            uint64_t v41 = 4;
          }
          switch(v41)
          {
            case 1:
              int v42 = *v38;
              goto LABEL_74;
            case 2:
              int v42 = *(unsigned __int16 *)v38;
              goto LABEL_74;
            case 3:
              int v42 = *(unsigned __int16 *)v38 | (v38[2] << 16);
              goto LABEL_74;
            case 4:
              int v42 = *(_DWORD *)v38;
LABEL_74:
              int v43 = (v42 | (v40 << (8 * v126))) + 4;
              unsigned int v39 = v42 + 4;
              if (v126 < 4) {
                unsigned int v39 = v43;
              }
              break;
            default:
              break;
          }
        }
        if (v39 >= 2)
        {
          swift_bridgeObjectRelease();
          unint64_t v44 = (unint64_t)&v38[v120] & v119;
          (*(void (**)(unint64_t, uint64_t))(v122 + 8))(v44, v124);
          v112((v121 + v44) & v125, v129);
        }
        goto LABEL_78;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    goto LABEL_78;
  }
LABEL_142:
  uint64_t v87 = *(void *)(sub_22EE7F6E0() - 8);
  uint64_t v88 = *(void *)(sub_22EE7F5D0() - 8);
  uint64_t v89 = *(unsigned __int8 *)(v87 + 80);
  uint64_t v90 = *(void *)(v87 + 64);
  uint64_t v91 = *(unsigned __int8 *)(v88 + 80);
  uint64_t v92 = v89 | v91 | 7;
  uint64_t v93 = (((v89 + 16) & ~v89) + v90 + v92) & ~v92;
  unint64_t v94 = (v90 + 7 + ((*(void *)(v88 + 64) + v89 + ((v91 + 16) & ~v91)) & ~v89)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v95 = v94 + 9;
  unint64_t v96 = v94 + 8;
  if (v95 > v96) {
    unint64_t v96 = v95;
  }
  if (v96 <= 2) {
    unint64_t v96 = 2;
  }
  unint64_t v97 = v96 + v93;
  if (v97 + 1 > ((v90 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v98 = v97 + 1;
  }
  else {
    unint64_t v98 = ((v90 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v98 <= 0x10) {
    unint64_t v98 = 16;
  }
  unint64_t v99 = ((v98 + 1 + v92) & ~v92) + v98 + 1;
  if (v99 <= 0x20) {
    unint64_t v99 = 32;
  }
  uint64_t v100 = *(void *)(*(void *)(v3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v100 + 24))((unint64_t)&a1[v99 + 1 + *(unsigned __int8 *)(v100 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v100 + 80), (unint64_t)&a2[v99 + 1 + *(unsigned __int8 *)(v100 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v100 + 80));
  return a1;
}

_OWORD *sub_22EDFA570(_OWORD *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7F6E0();
  uint64_t v110 = *(void *)(v6 - 8);
  uint64_t v111 = v6;
  uint64_t v7 = *(unsigned __int8 *)(v110 + 80);
  uint64_t v108 = v7 + 16;
  uint64_t v8 = *(void *)(v110 + 64);
  uint64_t v9 = sub_22EE7F5D0();
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(v9 - 8) + 80);
  uint64_t v11 = v7 | v10 | 7;
  uint64_t v12 = (v11 + v8 + ((v7 + 16) & ~v7)) & ~v11;
  uint64_t v13 = v8 + 7;
  unint64_t v14 = (v8 + 7 + ((*(void *)(*(void *)(v9 - 8) + 64) + v7 + ((v10 + 16) & ~v10)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = v14 + 8;
  unint64_t v16 = v14 + 9;
  if (v16 <= v15) {
    unint64_t v16 = v15;
  }
  if (v16 <= 2) {
    uint64_t v17 = 2;
  }
  else {
    uint64_t v17 = v16;
  }
  if (v17 + v12 + 1 > (v13 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v18 = v17 + v12 + 1;
  }
  else {
    unint64_t v18 = (v13 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v18 <= 0x10) {
    uint64_t v19 = 16;
  }
  else {
    uint64_t v19 = v18;
  }
  size_t v20 = v19 + 1;
  uint64_t v21 = v19 + 1 + v11;
  if ((v21 & (unint64_t)~v11) + v19 + 1 <= 0x20) {
    uint64_t v22 = 32;
  }
  else {
    uint64_t v22 = (v21 & ~v11) + v19 + 1;
  }
  unsigned int v23 = a2[v22];
  unsigned int v24 = v23 - 2;
  if (v23 >= 2)
  {
    if (v22 <= 3) {
      uint64_t v25 = v22;
    }
    else {
      uint64_t v25 = 4;
    }
    switch(v25)
    {
      case 1:
        int v26 = *a2;
        goto LABEL_24;
      case 2:
        int v26 = *(unsigned __int16 *)a2;
        goto LABEL_24;
      case 3:
        int v26 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_24;
      case 4:
        int v26 = *(_DWORD *)a2;
LABEL_24:
        if (v22 < 4) {
          unsigned int v23 = (v26 | (v24 << (8 * v22))) + 2;
        }
        else {
          unsigned int v23 = v26 + 2;
        }
        break;
      default:
        break;
    }
  }
  if (v23 == 1)
  {
    unsigned int v27 = a2[v19];
    unsigned int v28 = v27 - 3;
    if (v27 >= 3)
    {
      if (v19 <= 3) {
        uint64_t v29 = v19;
      }
      else {
        uint64_t v29 = 4;
      }
      switch(v29)
      {
        case 1:
          int v30 = *a2;
          goto LABEL_38;
        case 2:
          int v30 = *(unsigned __int16 *)a2;
          goto LABEL_38;
        case 3:
          int v30 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_38;
        case 4:
          int v30 = *(_DWORD *)a2;
LABEL_38:
          if (v19 < 4) {
            unsigned int v27 = (v30 | (v28 << (8 * v19))) + 3;
          }
          else {
            unsigned int v27 = v30 + 3;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v104 = *(void *)(v9 - 8);
    uint64_t v106 = ~v7;
    uint64_t v32 = ~v11;
    uint64_t v100 = ~v10;
    uint64_t v101 = *(void *)(v104 + 64) + v7;
    uint64_t v102 = v9;
    uint64_t v103 = v10 + 16;
    uint64_t v107 = a3;
    uint64_t v99 = v11 + v8;
    if (v27 == 2)
    {
      unsigned int v45 = a1;
      unint64_t v46 = v15;
      uint64_t v47 = a2;
      uint64_t v48 = v17;
      unint64_t v97 = a1;
      unsigned int v49 = a2;
      uint64_t v50 = v22;
      size_t v51 = v19 + 1;
      uint64_t v52 = v21;
      uint64_t v53 = v19;
      uint64_t v54 = v32;
      (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v110 + 32))(v45, v47, v111);
      uint64_t v32 = v54;
      uint64_t v19 = v53;
      uint64_t v21 = v52;
      size_t v20 = v51;
      uint64_t v22 = v50;
      a2 = v49;
      a1 = v97;
      unint64_t v15 = v46;
      uint64_t v13 = v8 + 7;
      uint64_t v17 = v48;
      *(_OWORD *)(((unint64_t)v97 + v8 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&a2[v8 + 7] & 0xFFFFFFFFFFFFFFF8);
      char v55 = 2;
    }
    else
    {
      if (v27 != 1)
      {
        *a1 = *(_OWORD *)a2;
        *((unsigned char *)a1 + v19) = 0;
        goto LABEL_67;
      }
      unint64_t v94 = v15;
      uint64_t v96 = v8 + 7;
      *a1 = *(_OWORD *)a2;
      int v33 = &a2[v7];
      uint64_t v34 = ((unint64_t)a1 + v7 + 16) & v106;
      uint64_t v35 = (unint64_t)(v33 + 16) & v106;
      uint64_t v92 = ~v11;
      uint64_t v93 = v17;
      uint64_t v91 = *(void (**)(uint64_t, uint64_t, uint64_t))(v110 + 32);
      v91(v34, v35, v111);
      uint64_t v32 = v92;
      uint64_t v17 = v93;
      uint64_t v36 = v8 + v11;
      unint64_t v37 = (unsigned char *)((v34 + v8 + v11) & ~v11);
      uint64_t v38 = (unsigned __int8 *)((v35 + v36) & v92);
      unsigned int v39 = v38[v93];
      unsigned int v40 = v39 - 4;
      if (v39 < 4)
      {
        uint64_t v43 = v103;
        uint64_t v42 = v104;
      }
      else
      {
        if (v93 <= 3) {
          uint64_t v41 = v93;
        }
        else {
          uint64_t v41 = 4;
        }
        uint64_t v43 = v103;
        uint64_t v42 = v104;
        switch(v41)
        {
          case 1:
            int v44 = *v38;
            goto LABEL_55;
          case 2:
            int v44 = *(unsigned __int16 *)v38;
            goto LABEL_55;
          case 3:
            int v44 = *(unsigned __int16 *)v38 | (v38[2] << 16);
            goto LABEL_55;
          case 4:
            int v44 = *(_DWORD *)v38;
LABEL_55:
            if (v93 < 4) {
              unsigned int v39 = (v44 | (v40 << (8 * v93))) + 4;
            }
            else {
              unsigned int v39 = v44 + 4;
            }
            break;
          default:
            break;
        }
      }
      switch(v39)
      {
        case 1u:
          *unint64_t v37 = *v38;
          char v56 = 1;
          goto LABEL_61;
        case 2u:
          *(_OWORD *)unint64_t v37 = *(_OWORD *)v38;
          unint64_t v57 = (unint64_t)&v37[v43] & v100;
          unint64_t v58 = (unint64_t)&v38[v43] & v100;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v42 + 32))(v57, v58, v102);
          unint64_t v59 = (v101 + v57) & v106;
          unint64_t v60 = (v101 + v58) & v106;
          v91(v59, v60, v111);
          uint64_t v32 = v92;
          uint64_t v17 = v93;
          unint64_t v15 = v94;
          uint64_t v13 = v96;
          *(void *)((v96 + v59) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v96 + v60) & 0xFFFFFFFFFFFFFFF8);
          v37[v94] = v38[v94];
          char v56 = 2;
          goto LABEL_65;
        case 3u:
          *(_OWORD *)unint64_t v37 = *(_OWORD *)v38;
          unint64_t v61 = (unint64_t)&v37[v43] & v100;
          unint64_t v62 = (unint64_t)&v38[v43] & v100;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v42 + 32))(v61, v62, v102);
          unint64_t v63 = (v101 + v61) & v106;
          unint64_t v64 = (v101 + v62) & v106;
          v91(v63, v64, v111);
          uint64_t v32 = v92;
          uint64_t v17 = v93;
          uint64_t v13 = v96;
          *(void *)((v96 + v63) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v96 + v64) & 0xFFFFFFFFFFFFFFF8);
          char v56 = 3;
          goto LABEL_64;
        default:
          char v56 = 0;
          *(_WORD *)unint64_t v37 = *(_WORD *)v38;
LABEL_61:
          uint64_t v13 = v96;
LABEL_64:
          unint64_t v15 = v94;
LABEL_65:
          v37[v17] = v56;
          char v55 = 1;
          break;
      }
    }
    *((unsigned char *)a1 + v19) = v55;
LABEL_67:
    char v65 = (_OWORD *)(((unint64_t)a1 + v21) & v32);
    uint64_t v66 = (_OWORD *)((unint64_t)&a2[v21] & v32);
    unsigned int v67 = *((unsigned __int8 *)v66 + v19);
    if (v67 > 2)
    {
      memcpy((void *)(((unint64_t)a1 + v21) & v32), (const void *)((unint64_t)&a2[v21] & v32), v20);
    }
    else if (v67 == 2)
    {
      uint64_t v81 = v13;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v110 + 32))(((unint64_t)a1 + v21) & v32, (unint64_t)&a2[v21] & v32, v111);
      *(_OWORD *)(((unint64_t)v65 + v81) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v66 + v81) & 0xFFFFFFFFFFFFFFF8);
      *((unsigned char *)v65 + v19) = 2;
    }
    else
    {
      if (v67 == 1)
      {
        unint64_t v95 = v15;
        uint64_t v98 = v13;
        *char v65 = *v66;
        unint64_t v68 = ((unint64_t)v65 + v108) & v106;
        unint64_t v69 = ((unint64_t)v66 + v108) & v106;
        uint64_t v109 = *(void (**)(unint64_t, unint64_t, uint64_t))(v110 + 32);
        uint64_t v70 = v17;
        uint64_t v71 = v32;
        v109(v68, v69, v111);
        uint64_t v72 = v70;
        unint64_t v73 = (unsigned char *)((v99 + v68) & v71);
        uint64_t v74 = (unsigned __int8 *)((v99 + v69) & v71);
        unsigned int v75 = v74[v70];
        unsigned int v76 = v75 - 4;
        if (v75 < 4)
        {
          uint64_t v79 = v103;
          uint64_t v78 = v104;
        }
        else
        {
          if (v70 <= 3) {
            uint64_t v77 = v70;
          }
          else {
            uint64_t v77 = 4;
          }
          uint64_t v79 = v103;
          uint64_t v78 = v104;
          switch(v77)
          {
            case 1:
              int v80 = *v74;
              goto LABEL_86;
            case 2:
              int v80 = *(unsigned __int16 *)v74;
              goto LABEL_86;
            case 3:
              int v80 = *(unsigned __int16 *)v74 | (v74[2] << 16);
              goto LABEL_86;
            case 4:
              int v80 = *(_DWORD *)v74;
LABEL_86:
              int v84 = (v80 | (v76 << (8 * v70))) + 4;
              unsigned int v75 = v80 + 4;
              if (v70 < 4) {
                unsigned int v75 = v84;
              }
              break;
            default:
              break;
          }
        }
        switch(v75)
        {
          case 1u:
            *unint64_t v73 = *v74;
            char v85 = 1;
            break;
          case 2u:
            *(_OWORD *)unint64_t v73 = *(_OWORD *)v74;
            unint64_t v86 = (unint64_t)&v73[v79] & v100;
            unint64_t v105 = (unint64_t)&v74[v79] & v100;
            (*(void (**)(unint64_t))(v78 + 32))(v86);
            unint64_t v87 = (v101 + v86) & v106;
            v109(v87, (v101 + v105) & v106, v111);
            uint64_t v72 = v70;
            *(void *)((v98 + v87) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v98 + ((v101 + v105) & v106)) & 0xFFFFFFFFFFFFFFF8);
            v73[v95] = v74[v95];
            char v85 = 2;
            break;
          case 3u:
            *(_OWORD *)unint64_t v73 = *(_OWORD *)v74;
            unint64_t v88 = (unint64_t)&v73[v79] & v100;
            unint64_t v89 = (unint64_t)&v74[v79] & v100;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v78 + 32))(v88, v89, v102);
            unint64_t v90 = (v101 + v88) & v106;
            v109(v90, (v101 + v89) & v106, v111);
            uint64_t v72 = v70;
            *(void *)((v98 + v90) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v98 + ((v101 + v89) & v106)) & 0xFFFFFFFFFFFFFFF8);
            char v85 = 3;
            break;
          default:
            char v85 = 0;
            *(_WORD *)unint64_t v73 = *(_WORD *)v74;
            break;
        }
        a3 = v107;
        v73[v72] = v85;
        *((unsigned char *)v65 + v19) = 1;
        goto LABEL_80;
      }
      *char v65 = *v66;
      *((unsigned char *)v65 + v19) = 0;
    }
    a3 = v107;
LABEL_80:
    *((unsigned char *)a1 + v22) = 1;
    goto LABEL_81;
  }
  long long v31 = *((_OWORD *)a2 + 1);
  *a1 = *(_OWORD *)a2;
  a1[1] = v31;
  *((unsigned char *)a1 + v22) = 0;
LABEL_81:
  uint64_t v82 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v82 + 32))(((unint64_t)a1 + v22 + *(unsigned __int8 *)(v82 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80), (unint64_t)&a2[v22 + 1 + *(unsigned __int8 *)(v82 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v82 + 80));
  return a1;
}

unsigned __int8 *sub_22EDFAF24(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  if (a1 != a2)
  {
    uint64_t v6 = sub_22EE7F6E0();
    uint64_t v118 = *(void *)(v6 - 8);
    uint64_t v119 = v6;
    uint64_t v7 = *(unsigned __int8 *)(v118 + 80);
    uint64_t v108 = v7 + 16;
    uint64_t v8 = *(void *)(v118 + 64);
    uint64_t v9 = sub_22EE7F5D0();
    uint64_t v113 = *(void *)(v9 - 8);
    uint64_t v114 = v9;
    uint64_t v10 = *(unsigned __int8 *)(v113 + 80);
    uint64_t v11 = v7 | v10 | 7;
    uint64_t v107 = v11 + v8;
    uint64_t v111 = v10 + 16;
    uint64_t v112 = *(void *)(v113 + 64) + v7;
    uint64_t v12 = v8 + 7;
    unint64_t v13 = (v8 + 7 + ((v112 + ((v10 + 16) & ~v10)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v14 = v13 + 8;
    unint64_t v15 = v13 + 9;
    unint64_t v106 = v14;
    if (v15 <= v14) {
      unint64_t v15 = v14;
    }
    if (v15 <= 2) {
      unint64_t v15 = 2;
    }
    unint64_t v116 = v15;
    unint64_t v16 = v15 + ((v11 + v8 + ((v7 + 16) & ~v7)) & ~v11);
    uint64_t v109 = v8 + 7;
    if (v16 + 1 > (v12 & 0xFFFFFFFFFFFFFFF8) + 16) {
      unint64_t v17 = v16 + 1;
    }
    else {
      unint64_t v17 = (v12 & 0xFFFFFFFFFFFFFFF8) + 16;
    }
    if (v17 <= 0x10) {
      uint64_t v18 = 16;
    }
    else {
      uint64_t v18 = v17;
    }
    uint64_t v19 = v18 + 1 + v11;
    if ((v19 & (unint64_t)~v11) + v18 + 1 <= 0x20) {
      uint64_t v20 = 32;
    }
    else {
      uint64_t v20 = (v19 & ~v11) + v18 + 1;
    }
    unsigned int v21 = a1[v20];
    unsigned int v22 = v21 - 2;
    if (v21 >= 2)
    {
      if (v20 <= 3) {
        uint64_t v23 = v20;
      }
      else {
        uint64_t v23 = 4;
      }
      switch(v23)
      {
        case 1:
          int v24 = *a1;
          goto LABEL_24;
        case 2:
          int v24 = *(unsigned __int16 *)a1;
          goto LABEL_24;
        case 3:
          int v24 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_24;
        case 4:
          int v24 = *(_DWORD *)a1;
LABEL_24:
          if (v20 < 4) {
            unsigned int v21 = (v24 | (v22 << (8 * v20))) + 2;
          }
          else {
            unsigned int v21 = v24 + 2;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v115 = ~v7;
    uint64_t v120 = ~v11;
    uint64_t v110 = ~v10;
    if (v21 == 1)
    {
      unsigned int v25 = a1[v18];
      unsigned int v26 = v25 - 3;
      if (v25 >= 3)
      {
        if (v18 <= 3) {
          uint64_t v27 = v18;
        }
        else {
          uint64_t v27 = 4;
        }
        switch(v27)
        {
          case 1:
            int v28 = *a1;
            goto LABEL_39;
          case 2:
            int v28 = *(unsigned __int16 *)a1;
            goto LABEL_39;
          case 3:
            int v28 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            goto LABEL_39;
          case 4:
            int v28 = *(_DWORD *)a1;
LABEL_39:
            if (v18 < 4) {
              unsigned int v25 = (v28 | (v26 << (8 * v18))) + 3;
            }
            else {
              unsigned int v25 = v28 + 3;
            }
            break;
          default:
            break;
        }
      }
      if (v25 == 2)
      {
        (*(void (**)(unsigned __int8 *, uint64_t))(v118 + 8))(a1, v119);
      }
      else if (v25 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v103 = *(void (**)(unint64_t, uint64_t))(v118 + 8);
        v103((unint64_t)&a1[v7 + 16] & v115, v119);
        uint64_t v29 = (unsigned __int8 *)((((unint64_t)&a1[v7 + 16] & v115) + v8 + v11) & v120);
        unsigned int v30 = v29[v116];
        unsigned int v31 = v30 - 4;
        if (v30 >= 4)
        {
          if (v116 <= 3) {
            uint64_t v32 = v116;
          }
          else {
            uint64_t v32 = 4;
          }
          switch(v32)
          {
            case 1:
              int v33 = *v29;
              goto LABEL_55;
            case 2:
              int v33 = *(unsigned __int16 *)v29;
              goto LABEL_55;
            case 3:
              int v33 = *(unsigned __int16 *)v29 | (v29[2] << 16);
              goto LABEL_55;
            case 4:
              int v33 = *(_DWORD *)v29;
LABEL_55:
              if (v116 < 4) {
                unsigned int v30 = (v33 | (v31 << (8 * v116))) + 4;
              }
              else {
                unsigned int v30 = v33 + 4;
              }
              break;
            default:
              break;
          }
        }
        if (v30 >= 2)
        {
          swift_bridgeObjectRelease();
          unint64_t v34 = (unint64_t)&v29[v111] & v110;
          (*(void (**)(unint64_t, uint64_t))(v113 + 8))(v34, v114);
          v103((v112 + v34) & v115, v119);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      unint64_t v35 = (unint64_t)&a1[v19] & v120;
      unsigned int v36 = *(unsigned __int8 *)(v35 + v18);
      if (v36 > 2)
      {
LABEL_78:
        unsigned int v45 = a2[v20];
        unsigned int v46 = v45 - 2;
        if (v45 >= 2)
        {
          if (v20 <= 3) {
            uint64_t v47 = v20;
          }
          else {
            uint64_t v47 = 4;
          }
          switch(v47)
          {
            case 1:
              int v48 = *a2;
              goto LABEL_87;
            case 2:
              int v48 = *(unsigned __int16 *)a2;
              goto LABEL_87;
            case 3:
              int v48 = *(unsigned __int16 *)a2 | (a2[2] << 16);
              goto LABEL_87;
            case 4:
              int v48 = *(_DWORD *)a2;
LABEL_87:
              if (v20 < 4) {
                unsigned int v45 = (v48 | (v46 << (8 * v20))) + 2;
              }
              else {
                unsigned int v45 = v48 + 2;
              }
              break;
            default:
              break;
          }
        }
        if (v45 != 1)
        {
          char v53 = 0;
          long long v54 = *((_OWORD *)a2 + 1);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *((_OWORD *)a1 + 1) = v54;
          goto LABEL_140;
        }
        unsigned int v49 = a2[v18];
        unsigned int v50 = v49 - 3;
        if (v49 >= 3)
        {
          if (v18 <= 3) {
            uint64_t v51 = v18;
          }
          else {
            uint64_t v51 = 4;
          }
          switch(v51)
          {
            case 1:
              int v52 = *a2;
              goto LABEL_101;
            case 2:
              int v52 = *(unsigned __int16 *)a2;
              goto LABEL_101;
            case 3:
              int v52 = *(unsigned __int16 *)a2 | (a2[2] << 16);
              goto LABEL_101;
            case 4:
              int v52 = *(_DWORD *)a2;
LABEL_101:
              if (v18 < 4) {
                unsigned int v49 = (v52 | (v50 << (8 * v18))) + 3;
              }
              else {
                unsigned int v49 = v52 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v49 == 2)
        {
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v118 + 32))(a1, a2, v119);
          *(_OWORD *)((unint64_t)&a1[v8 + 7] & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&a2[v8 + 7] & 0xFFFFFFFFFFFFFFF8);
          char v65 = 2;
        }
        else
        {
          if (v49 != 1)
          {
            *(_OWORD *)a1 = *(_OWORD *)a2;
            a1[v18] = 0;
LABEL_127:
            uint64_t v71 = (_OWORD *)((unint64_t)&a1[v19] & v120);
            uint64_t v72 = (_OWORD *)((unint64_t)&a2[v19] & v120);
            unsigned int v73 = *((unsigned __int8 *)v72 + v18);
            if (v73 > 2)
            {
              memcpy((void *)((unint64_t)&a1[v19] & v120), (const void *)((unint64_t)&a2[v19] & v120), v18 + 1);
            }
            else if (v73 == 2)
            {
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v118 + 32))((unint64_t)&a1[v19] & v120, (unint64_t)&a2[v19] & v120, v119);
              *(_OWORD *)(((unint64_t)v71 + v109) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v72
                                                                                              + v109) & 0xFFFFFFFFFFFFFFF8);
              *((unsigned char *)v71 + v18) = 2;
            }
            else
            {
              if (v73 == 1)
              {
                *uint64_t v71 = *v72;
                unint64_t v74 = ((unint64_t)v72 + v108) & v115;
                unsigned int v75 = *(void (**)(unint64_t, unint64_t, uint64_t))(v118 + 32);
                v75(((unint64_t)v71 + v108) & v115, v74, v119);
                unsigned int v76 = (unsigned char *)((v107 + (((unint64_t)v71 + v108) & v115)) & v120);
                uint64_t v77 = (unsigned __int8 *)((v107 + v74) & v120);
                unsigned int v78 = v77[v116];
                unsigned int v79 = v78 - 4;
                if (v78 >= 4)
                {
                  if (v116 <= 3) {
                    uint64_t v80 = v116;
                  }
                  else {
                    uint64_t v80 = 4;
                  }
                  switch(v80)
                  {
                    case 1:
                      int v81 = *v77;
                      goto LABEL_157;
                    case 2:
                      int v81 = *(unsigned __int16 *)v77;
                      goto LABEL_157;
                    case 3:
                      int v81 = *(unsigned __int16 *)((v107 + v74) & v120) | (*(unsigned __int8 *)(((v107 + v74) & v120) + 2) << 16);
                      goto LABEL_157;
                    case 4:
                      int v81 = *(_DWORD *)v77;
LABEL_157:
                      int v97 = (v81 | (v79 << (8 * v116))) + 4;
                      unsigned int v78 = v81 + 4;
                      if (v116 < 4) {
                        unsigned int v78 = v97;
                      }
                      break;
                    default:
                      break;
                  }
                }
                switch(v78)
                {
                  case 1u:
                    *unsigned int v76 = *v77;
                    char v98 = 1;
                    break;
                  case 2u:
                    *(_OWORD *)unsigned int v76 = *(_OWORD *)v77;
                    (*(void (**)(unint64_t))(v113 + 32))((unint64_t)&v76[v111] & v110);
                    unint64_t v99 = (v112 + ((unint64_t)&v76[v111] & v110)) & v115;
                    unint64_t v100 = (v112 + ((unint64_t)&v77[v111] & v110)) & v115;
                    v75(v99, v100, v119);
                    *(void *)((v109 + v99) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v109 + v100) & 0xFFFFFFFFFFFFFFF8);
                    v76[v106] = v77[v106];
                    char v98 = 2;
                    break;
                  case 3u:
                    *(_OWORD *)unsigned int v76 = *(_OWORD *)v77;
                    unint64_t v101 = (unint64_t)&v77[v111] & v110;
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v113 + 32))((unint64_t)&v76[v111] & v110, v101, v114);
                    unint64_t v102 = (v112 + ((unint64_t)&v76[v111] & v110)) & v115;
                    v75(v102, (v112 + v101) & v115, v119);
                    *(void *)((v109 + v102) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v109 + ((v112 + v101) & v115)) & 0xFFFFFFFFFFFFFFF8);
                    char v98 = 3;
                    break;
                  default:
                    char v98 = 0;
                    *(_WORD *)unsigned int v76 = *(_WORD *)v77;
                    break;
                }
                uint64_t v3 = a3;
                v76[v116] = v98;
                char v53 = 1;
                *((unsigned char *)v71 + v18) = 1;
                goto LABEL_141;
              }
              *uint64_t v71 = *v72;
              *((unsigned char *)v71 + v18) = 0;
            }
            char v53 = 1;
LABEL_140:
            uint64_t v3 = a3;
LABEL_141:
            a1[v20] = v53;
            goto LABEL_142;
          }
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v55 = (unint64_t)&a1[v7 + 16] & v115;
          uint64_t v56 = (unint64_t)&a2[v7 + 16] & v115;
          unint64_t v105 = *(void (**)(uint64_t, uint64_t, uint64_t))(v118 + 32);
          v105(v55, v56, v119);
          uint64_t v57 = v8 + v11;
          unint64_t v58 = (unsigned char *)((v55 + v8 + v11) & v120);
          unint64_t v59 = (unsigned __int8 *)((v56 + v57) & v120);
          unint64_t v60 = v116;
          unsigned int v61 = v59[v116];
          unsigned int v62 = v61 - 4;
          if (v61 >= 4)
          {
            if (v116 <= 3) {
              uint64_t v63 = v116;
            }
            else {
              uint64_t v63 = 4;
            }
            switch(v63)
            {
              case 1:
                int v64 = *v59;
                goto LABEL_117;
              case 2:
                int v64 = *(unsigned __int16 *)v59;
                goto LABEL_117;
              case 3:
                int v64 = *(unsigned __int16 *)v59 | (v59[2] << 16);
                goto LABEL_117;
              case 4:
                int v64 = *(_DWORD *)v59;
LABEL_117:
                if (v116 < 4) {
                  unsigned int v61 = (v64 | (v62 << (8 * v116))) + 4;
                }
                else {
                  unsigned int v61 = v64 + 4;
                }
                break;
              default:
                break;
            }
          }
          switch(v61)
          {
            case 1u:
              unsigned char *v58 = *v59;
              char v66 = 1;
              break;
            case 2u:
              *(_OWORD *)unint64_t v58 = *(_OWORD *)v59;
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v113 + 32))((unint64_t)&v58[v111] & v110, (unint64_t)&v59[v111] & v110, v114);
              unint64_t v67 = (v112 + ((unint64_t)&v58[v111] & v110)) & v115;
              unint64_t v68 = (v112 + ((unint64_t)&v59[v111] & v110)) & v115;
              v105(v67, v68, v119);
              unint64_t v60 = v116;
              *(void *)((v109 + v67) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v109 + v68) & 0xFFFFFFFFFFFFFFF8);
              v58[v106] = v59[v106];
              char v66 = 2;
              break;
            case 3u:
              *(_OWORD *)unint64_t v58 = *(_OWORD *)v59;
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v113 + 32))((unint64_t)&v58[v111] & v110, (unint64_t)&v59[v111] & v110, v114);
              unint64_t v69 = (v112 + ((unint64_t)&v58[v111] & v110)) & v115;
              unint64_t v70 = (v112 + ((unint64_t)&v59[v111] & v110)) & v115;
              v105(v69, v70, v119);
              unint64_t v60 = v116;
              *(void *)((v109 + v69) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v109 + v70) & 0xFFFFFFFFFFFFFFF8);
              char v66 = 3;
              break;
            default:
              char v66 = 0;
              *(_WORD *)unint64_t v58 = *(_WORD *)v59;
              break;
          }
          v58[v60] = v66;
          char v65 = 1;
        }
        a1[v18] = v65;
        goto LABEL_127;
      }
      if (v36 == 2)
      {
        (*(void (**)(unint64_t, uint64_t))(v118 + 8))((unint64_t)&a1[v19] & v120, v119);
        goto LABEL_78;
      }
      if (v36 == 1)
      {
        swift_bridgeObjectRelease();
        unint64_t v37 = (v108 + v35) & v115;
        uint64_t v104 = *(void (**)(unint64_t, uint64_t))(v118 + 8);
        v104(v37, v119);
        uint64_t v38 = (unsigned __int8 *)((v107 + v37) & v120);
        unsigned int v39 = v38[v116];
        unsigned int v40 = v39 - 4;
        if (v39 >= 4)
        {
          if (v116 <= 3) {
            uint64_t v41 = v116;
          }
          else {
            uint64_t v41 = 4;
          }
          switch(v41)
          {
            case 1:
              int v42 = *v38;
              goto LABEL_74;
            case 2:
              int v42 = *(unsigned __int16 *)v38;
              goto LABEL_74;
            case 3:
              int v42 = *(unsigned __int16 *)v38 | (v38[2] << 16);
              goto LABEL_74;
            case 4:
              int v42 = *(_DWORD *)v38;
LABEL_74:
              int v43 = (v42 | (v40 << (8 * v116))) + 4;
              unsigned int v39 = v42 + 4;
              if (v116 < 4) {
                unsigned int v39 = v43;
              }
              break;
            default:
              break;
          }
        }
        if (v39 >= 2)
        {
          swift_bridgeObjectRelease();
          unint64_t v44 = (unint64_t)&v38[v111] & v110;
          (*(void (**)(unint64_t, uint64_t))(v113 + 8))(v44, v114);
          v104((v112 + v44) & v115, v119);
        }
        goto LABEL_78;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    goto LABEL_78;
  }
LABEL_142:
  uint64_t v82 = *(void *)(sub_22EE7F6E0() - 8);
  uint64_t v83 = *(void *)(sub_22EE7F5D0() - 8);
  uint64_t v84 = *(unsigned __int8 *)(v82 + 80);
  uint64_t v85 = *(void *)(v82 + 64);
  uint64_t v86 = *(unsigned __int8 *)(v83 + 80);
  uint64_t v87 = v84 | v86 | 7;
  uint64_t v88 = (((v84 + 16) & ~v84) + v85 + v87) & ~v87;
  unint64_t v89 = (v85 + 7 + ((*(void *)(v83 + 64) + v84 + ((v86 + 16) & ~v86)) & ~v84)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v90 = v89 + 9;
  unint64_t v91 = v89 + 8;
  if (v90 > v91) {
    unint64_t v91 = v90;
  }
  if (v91 <= 2) {
    unint64_t v91 = 2;
  }
  unint64_t v92 = v91 + v88;
  if (v92 + 1 > ((v85 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v93 = v92 + 1;
  }
  else {
    unint64_t v93 = ((v85 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v93 <= 0x10) {
    unint64_t v93 = 16;
  }
  unint64_t v94 = ((v93 + 1 + v87) & ~v87) + v93 + 1;
  if (v94 <= 0x20) {
    unint64_t v94 = 32;
  }
  uint64_t v95 = *(void *)(*(void *)(v3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v95 + 40))((unint64_t)&a1[v94 + 1 + *(unsigned __int8 *)(v95 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v95 + 80), (unint64_t)&a2[v94 + 1 + *(unsigned __int8 *)(v95 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v95 + 80));
  return a1;
}

uint64_t sub_22EDFBDC8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(sub_22EE7F6E0() - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(void *)(sub_22EE7F5D0() - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v7 | v10 | 7;
  unint64_t v12 = (v8 + 7 + ((*(void *)(v9 + 64) + v7 + ((v10 + 16) & ~v10)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = v12 + 8;
  unint64_t v14 = v12 + 9;
  if (v14 <= v13) {
    unint64_t v14 = v13;
  }
  if (v14 <= 2) {
    unint64_t v14 = 2;
  }
  unint64_t v15 = v14 + ((((v7 + 16) & ~v7) + v8 + v11) & ~v11);
  if (v15 + 1 > ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v16 = v15 + 1;
  }
  else {
    unint64_t v16 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v16 <= 0x10) {
    unint64_t v16 = 16;
  }
  unint64_t v17 = v16 + 1;
  uint64_t v18 = (v16 + 1 + v11) & ~v11;
  uint64_t v19 = *(void *)(a3 + 16);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(unsigned int *)(v20 + 84);
  if (v21 <= 0xFE) {
    unsigned int v22 = 254;
  }
  else {
    unsigned int v22 = *(_DWORD *)(v20 + 84);
  }
  unint64_t v23 = v18 + v17;
  if (v23 <= 0x20) {
    unint64_t v23 = 32;
  }
  uint64_t v24 = *(unsigned __int8 *)(v20 + 80);
  uint64_t v25 = *(void *)(v20 + 64);
  if (!a2) {
    return 0;
  }
  uint64_t v26 = v23 + v24 + 1;
  if (a2 <= v22) {
    goto LABEL_36;
  }
  uint64_t v27 = (v26 & ~v24) + v25;
  char v28 = 8 * v27;
  if (v27 <= 3)
  {
    unsigned int v31 = ((a2 - v22 + ~(-1 << v28)) >> v28) + 1;
    if (HIWORD(v31))
    {
      int v29 = *(_DWORD *)((char *)a1 + v27);
      if (!v29) {
        goto LABEL_36;
      }
      goto LABEL_26;
    }
    if (v31 > 0xFF)
    {
      int v29 = *(unsigned __int16 *)((char *)a1 + v27);
      if (!*(unsigned __int16 *)((char *)a1 + v27)) {
        goto LABEL_36;
      }
      goto LABEL_26;
    }
    if (v31 < 2)
    {
LABEL_36:
      if (v21 > 0xFE)
      {
        return __swift_getEnumTagSinglePayload(((unint64_t)a1 + v26) & ~v24, v21, v19);
      }
      else
      {
        unsigned int v35 = *((unsigned __int8 *)a1 + v23);
        if (v35 >= 2) {
          return (v35 ^ 0xFF) + 1;
        }
        else {
          return 0;
        }
      }
    }
  }
  int v29 = *((unsigned __int8 *)a1 + v27);
  if (!*((unsigned char *)a1 + v27)) {
    goto LABEL_36;
  }
LABEL_26:
  int v32 = (v29 - 1) << v28;
  if (v27 > 3) {
    int v32 = 0;
  }
  if (v27)
  {
    if (v27 <= 3) {
      int v33 = v27;
    }
    else {
      int v33 = 4;
    }
    switch(v33)
    {
      case 2:
        int v34 = *a1;
        break;
      case 3:
        int v34 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v34 = *(_DWORD *)a1;
        break;
      default:
        int v34 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v34 = 0;
  }
  return v22 + (v34 | v32) + 1;
}

void sub_22EDFC0E0(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(sub_22EE7F6E0() - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 64);
  uint64_t v11 = *(void *)(sub_22EE7F5D0() - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = v9 | v12 | 7;
  unint64_t v14 = (v10 + 7 + ((*(void *)(v11 + 64) + v9 + ((v12 + 16) & ~v12)) & ~v9)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = v14 + 8;
  unint64_t v16 = v14 + 9;
  if (v16 <= v15) {
    unint64_t v16 = v15;
  }
  if (v16 <= 2) {
    unint64_t v16 = 2;
  }
  unint64_t v17 = v16 + ((((v9 + 16) & ~v9) + v10 + v13) & ~v13);
  if (v17 + 1 > ((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v18 = v17 + 1;
  }
  else {
    unint64_t v18 = ((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v18 <= 0x10) {
    unint64_t v18 = 16;
  }
  unint64_t v19 = v18 + 1;
  uint64_t v20 = (v18 + 1 + v13) & ~v13;
  uint64_t v21 = *(void *)(a4 + 16);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(unsigned int *)(v22 + 84);
  if (v23 <= 0xFE) {
    unsigned int v24 = 254;
  }
  else {
    unsigned int v24 = *(_DWORD *)(v22 + 84);
  }
  unint64_t v25 = v20 + v19;
  if (v25 <= 0x20) {
    unint64_t v25 = 32;
  }
  uint64_t v26 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v27 = v25 + v26 + 1;
  size_t v28 = (v27 & ~v26) + *(void *)(v22 + 64);
  char v29 = 8 * v28;
  if (a3 <= v24)
  {
    int v30 = 0;
  }
  else if (v28 <= 3)
  {
    unsigned int v33 = ((a3 - v24 + ~(-1 << v29)) >> v29) + 1;
    if (HIWORD(v33))
    {
      int v30 = 4;
    }
    else if (v33 >= 0x100)
    {
      int v30 = 2;
    }
    else
    {
      int v30 = v33 > 1;
    }
  }
  else
  {
    int v30 = 1;
  }
  if (v24 < a2)
  {
    unsigned int v31 = ~v24 + a2;
    if (v28 < 4)
    {
      int v32 = (v31 >> v29) + 1;
      if (v28)
      {
        int v34 = v31 & ~(-1 << v29);
        bzero(a1, v28);
        if (v28 == 3)
        {
          *(_WORD *)a1 = v34;
          a1[2] = BYTE2(v34);
        }
        else if (v28 == 2)
        {
          *(_WORD *)a1 = v34;
        }
        else
        {
          *a1 = v34;
        }
      }
    }
    else
    {
      bzero(a1, v28);
      *(_DWORD *)a1 = v31;
      int v32 = 1;
    }
    switch(v30)
    {
      case 1:
        a1[v28] = v32;
        return;
      case 2:
        *(_WORD *)&a1[v28] = v32;
        return;
      case 3:
        goto LABEL_63;
      case 4:
        *(_DWORD *)&a1[v28] = v32;
        return;
      default:
        return;
    }
  }
  switch(v30)
  {
    case 1:
      a1[v28] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_35;
    case 2:
      *(_WORD *)&a1[v28] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_35;
    case 3:
LABEL_63:
      __break(1u);
      JUMPOUT(0x22EDFC4F4);
    case 4:
      *(_DWORD *)&a1[v28] = 0;
      goto LABEL_34;
    default:
LABEL_34:
      if (a2)
      {
LABEL_35:
        if (v23 > 0xFE)
        {
          __swift_storeEnumTagSinglePayload((unint64_t)&a1[v27] & ~v26, a2, v23, v21);
        }
        else if (a2 > 0xFE)
        {
          size_t v35 = (v25 + 1);
          if (v35 <= 3) {
            int v36 = ~(-1 << (8 * (v25 + 1)));
          }
          else {
            int v36 = -1;
          }
          if (v25 != -1)
          {
            int v37 = v36 & (a2 - 255);
            if (v35 <= 3) {
              int v38 = v25 + 1;
            }
            else {
              int v38 = 4;
            }
            bzero(a1, v35);
            switch(v38)
            {
              case 2:
                *(_WORD *)a1 = v37;
                break;
              case 3:
                *(_WORD *)a1 = v37;
                a1[2] = BYTE2(v37);
                break;
              case 4:
                *(_DWORD *)a1 = v37;
                break;
              default:
                *a1 = v37;
                break;
            }
          }
        }
        else
        {
          a1[v25] = -(char)a2;
        }
      }
      return;
  }
}

uint64_t sub_22EDFC52C()
{
  return swift_getWitnessTable();
}

uint64_t sub_22EDFC7F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EDFC814()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EDFC830()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EDFC874@<X0>(uint64_t a1@<X8>)
{
  return sub_22EDF4660(*(void *)(v1 + 32), a1);
}

uint64_t sub_22EDFC880()
{
  return sub_22EDF46F8(v0[4], v0[2], v0[3]);
}

uint64_t sub_22EDFC8A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22EDFC8E8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_5_2();
  v3();
  return a1;
}

unint64_t sub_22EDFC94C()
{
  unint64_t result = qword_268627318;
  if (!qword_268627318)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268627300);
    sub_22EDFC9EC();
    sub_22EADDD7C(&qword_26861D020, &qword_26861D028);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627318);
  }
  return result;
}

unint64_t sub_22EDFC9EC()
{
  unint64_t result = qword_268627320;
  if (!qword_268627320)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686272F8);
    sub_22EADDD7C(&qword_268627328, &qword_268627310);
    sub_22EADDD7C(&qword_26861C3E8, &qword_26861C3F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627320);
  }
  return result;
}

uint64_t sub_22EDFCAB0()
{
  return swift_getWitnessTable();
}

unint64_t sub_22EDFCB8C()
{
  unint64_t result = qword_268627330;
  if (!qword_268627330)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268627338);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686272D8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686272D0);
    type metadata accessor for StoreKitProminentButtonStyle(255);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686272E8);
    sub_22EADDD7C(&qword_2686272F0, &qword_2686272E8);
    sub_22EDFC8A0((unint64_t *)&qword_26861CE18, (void (*)(uint64_t))type metadata accessor for StoreKitProminentButtonStyle);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_22EDFC8A0((unint64_t *)&qword_26861C3C0, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627330);
  }
  return result;
}

unint64_t sub_22EDFCD64()
{
  unint64_t result = qword_268627340;
  if (!qword_268627340)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268627348);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268627300);
    sub_22EDFC94C();
    swift_getOpaqueTypeConformance2();
    sub_22EDFC8A0((unint64_t *)&qword_26861C3C0, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627340);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_4_36()
{
  return sub_22EE7F5D0();
}

uint64_t OUTLINED_FUNCTION_6_38()
{
  return sub_22EE7F5D0();
}

uint64_t OUTLINED_FUNCTION_7_28()
{
  return 255;
}

uint64_t OUTLINED_FUNCTION_8_34()
{
  return sub_22EE7F5D0();
}

uint64_t OUTLINED_FUNCTION_9_37()
{
  return v0 + *(int *)(v1 + 24);
}

uint64_t sub_22EDFCED0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(a1 + 48);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 48);
  if (v5)
  {
    if (v6)
    {
      uint64_t v7 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = v6;
      *(void *)(a1 + 56) = v7;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v6)
  {
    uint64_t v8 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = v6;
    *(void *)(a1 + 56) = v8;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
LABEL_8:
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BBC8);
  uint64_t v10 = *(int *)(v9 + 60);
  uint64_t v11 = (char *)(a1 + v10);
  uint64_t v12 = (char *)(a2 + v10);
  uint64_t v13 = type metadata accessor for Subscription();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v13);
  int v15 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (!EnumTagSinglePayload)
  {
    if (!v15)
    {
      uint64_t v27 = sub_22EE7F780();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 24))(v11, v12, v27);
      uint64_t v28 = *(int *)(v13 + 20);
      char v29 = &v11[v28];
      int v30 = &v12[v28];
      char v31 = v30[8];
      *(void *)char v29 = *(void *)v30;
      v29[8] = v31;
      uint64_t v32 = *(int *)(v13 + 24);
      unsigned int v33 = &v11[v32];
      int v34 = &v12[v32];
      char v35 = v34[8];
      *(void *)unsigned int v33 = *(void *)v34;
      v33[8] = v35;
      goto LABEL_14;
    }
    sub_22EB327AC((uint64_t)v11);
    goto LABEL_13;
  }
  if (v15)
  {
LABEL_13:
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(qword_26861BAB0);
    memcpy(v11, v12, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_14;
  }
  uint64_t v16 = sub_22EE7F780();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v11, v12, v16);
  uint64_t v17 = *(int *)(v13 + 20);
  unint64_t v18 = &v11[v17];
  unint64_t v19 = &v12[v17];
  char v20 = v19[8];
  *(void *)unint64_t v18 = *(void *)v19;
  v18[8] = v20;
  uint64_t v21 = *(int *)(v13 + 24);
  uint64_t v22 = &v11[v21];
  uint64_t v23 = &v12[v21];
  char v24 = v23[8];
  *(void *)uint64_t v22 = *(void *)v23;
  v22[8] = v24;
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
LABEL_14:
  *(unsigned char *)(a1 + *(int *)(v9 + 64)) = *(unsigned char *)(a2 + *(int *)(v9 + 64));
  return a1;
}

uint64_t sub_22EDFD17C(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  uint64_t v4 = *(void *)(a2 + 48);
  uint64_t v5 = *(void *)(a1 + 48);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  if (v5)
  {
    if (v4)
    {
      uint64_t v6 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = v4;
      *(void *)(a1 + 56) = v6;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v7 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = v4;
    *(void *)(a1 + 56) = v7;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
LABEL_8:
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BBC8);
  uint64_t v10 = *(int *)(v9 + 60);
  uint64_t v11 = (char *)(a1 + v10);
  uint64_t v12 = (char *)(a2 + v10);
  uint64_t v13 = type metadata accessor for Subscription();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v13);
  int v15 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (!EnumTagSinglePayload)
  {
    if (!v15)
    {
      uint64_t v25 = sub_22EE7F780();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 40))(v11, v12, v25);
      uint64_t v26 = *(int *)(v13 + 20);
      uint64_t v27 = &v11[v26];
      uint64_t v28 = &v12[v26];
      *(void *)uint64_t v27 = *(void *)v28;
      v27[8] = v28[8];
      uint64_t v29 = *(int *)(v13 + 24);
      int v30 = &v11[v29];
      char v31 = &v12[v29];
      *(void *)int v30 = *(void *)v31;
      v30[8] = v31[8];
      goto LABEL_14;
    }
    sub_22EB327AC((uint64_t)v11);
    goto LABEL_13;
  }
  if (v15)
  {
LABEL_13:
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(qword_26861BAB0);
    memcpy(v11, v12, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_14;
  }
  uint64_t v16 = sub_22EE7F780();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v11, v12, v16);
  uint64_t v17 = *(int *)(v13 + 20);
  unint64_t v18 = &v11[v17];
  unint64_t v19 = &v12[v17];
  *(void *)unint64_t v18 = *(void *)v19;
  v18[8] = v19[8];
  uint64_t v20 = *(int *)(v13 + 24);
  uint64_t v21 = &v11[v20];
  uint64_t v22 = &v12[v20];
  *(void *)uint64_t v21 = *(void *)v22;
  unsigned char v21[8] = v22[8];
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
LABEL_14:
  *(unsigned char *)(a1 + *(int *)(v9 + 64)) = *(unsigned char *)(a2 + *(int *)(v9 + 64));
  return a1;
}

uint64_t sub_22EDFD3F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EDFD408);
}

uint64_t sub_22EDFD408(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SubscriptionStoreControlStyleConfiguration(0);

  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t sub_22EDFD450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EDFD464);
}

uint64_t sub_22EDFD464(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SubscriptionStoreControlStyleConfiguration(0);

  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t type metadata accessor for SubscriptionStoreButtonsView()
{
  uint64_t result = qword_268627350;
  if (!qword_268627350) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_22EDFD4F8()
{
  sub_22EC64998();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_22EDFD584()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EDFD5A0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627360);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = &v16[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BD08);
  uint64_t v5 = v4 - 8;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(void *)uint64_t v3 = sub_22EE7D670();
  *((void *)v3 + 1) = 0x4044000000000000;
  v3[16] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268627368);
  uint64_t v17 = v0;
  swift_bridgeObjectRetain();
  sub_22EC5B938();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  uint64_t v18 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2686252A0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268627370);
  sub_22EADDD7C(&qword_2686252A8, &qword_2686252A0);
  sub_22EADDD7C(&qword_268627378, &qword_268627370);
  sub_22EDFDE30(&qword_2686252D0, (void (*)(uint64_t))type metadata accessor for SubscriptionStoreControlStyleConfiguration.Section);
  sub_22EE7EBF0();
  LOBYTE(v9) = sub_22EE7DE60();
  sub_22EB31AAC((uint64_t)v3, (uint64_t)v7, &qword_268627360);
  uint64_t v10 = &v7[*(int *)(v5 + 44)];
  *uint64_t v10 = v9;
  *(_OWORD *)(v10 + 8) = 0u;
  *(_OWORD *)(v10 + 24) = 0u;
  v10[40] = 1;
  sub_22EADD81C((uint64_t)v3, &qword_268627360);
  uint64_t v11 = sub_22EE7ED70();
  char v15 = 1;
  char v14 = 1;
  sub_22EADC5B4(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, v14, 0, v15, v11, v12);
  return sub_22EADD81C((uint64_t)v7, &qword_26861BD08);
}

uint64_t sub_22EDFD87C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = sub_22EE7D670();
  *(void *)(a2 + 8) = 0x4020000000000000;
  *(unsigned char *)(a2 + 16) = 0;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627380);
  return sub_22EDFD8CC(a1, a2 + *(int *)(v4 + 44));
}

uint64_t sub_22EDFD8CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627388);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v33 = (uint64_t)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v31 = (uint64_t)&v29 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627390);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v30 = (uint64_t)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v29 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627398);
  MEMORY[0x270FA5388](v12 - 8);
  char v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v29 - v16;
  uint64_t v18 = (int *)type metadata accessor for SubscriptionStoreControlStyleConfiguration.Section(0);
  uint64_t v19 = (uint64_t)v17;
  sub_22EB31AAC(a1 + v18[5], (uint64_t)v17, &qword_268621EC8);
  if (qword_26861B7C8 != -1) {
    swift_once();
  }
  uint64_t v20 = qword_26864C3E0;
  *(void *)uint64_t v11 = sub_22EE7D670();
  *((void *)v11 + 1) = v20;
  v11[16] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2686273A0);
  uint64_t v34 = *(void *)(a1 + v18[6]);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268620398);
  type metadata accessor for SubscriptionStoreButton();
  sub_22EADDD7C(&qword_2686203A0, &qword_268620398);
  sub_22EDFDE30(&qword_26861CAA0, (void (*)(uint64_t))type metadata accessor for SubscriptionStoreButton);
  sub_22EDFDE30(&qword_2686203B0, (void (*)(uint64_t))type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option);
  sub_22EE7EBF0();
  uint64_t v21 = a1 + v18[7];
  uint64_t v22 = v31;
  sub_22EB31AAC(v21, v31, &qword_268621ED0);
  uint64_t v23 = v19;
  sub_22EB31AAC(v19, (uint64_t)v14, &qword_268627398);
  uint64_t v24 = v30;
  sub_22EB31AAC((uint64_t)v11, v30, &qword_268627390);
  uint64_t v25 = v33;
  sub_22EB31AAC(v22, v33, &qword_268627388);
  uint64_t v26 = v32;
  sub_22EB31AAC((uint64_t)v14, v32, &qword_268627398);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686273A8);
  sub_22EB31AAC(v24, v26 + *(int *)(v27 + 48), &qword_268627390);
  sub_22EB31AAC(v25, v26 + *(int *)(v27 + 64), &qword_268627388);
  sub_22EADD81C(v22, &qword_268627388);
  sub_22EADD81C((uint64_t)v11, &qword_268627390);
  sub_22EADD81C(v23, &qword_268627398);
  sub_22EADD81C(v25, &qword_268627388);
  sub_22EADD81C(v24, &qword_268627390);
  return sub_22EADD81C((uint64_t)v14, &qword_268627398);
}

uint64_t sub_22EDFDCF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22EDFDE78(a1, (uint64_t)v6);
  uint64_t v7 = (int *)type metadata accessor for SubscriptionStoreButton();
  uint64_t v8 = a2 + v7[5];
  *(unsigned char *)(v8 + 48) = 0;
  *(_OWORD *)(v8 + 16) = 0u;
  *(_OWORD *)(v8 + 32) = 0u;
  *(_OWORD *)uint64_t v8 = 0u;
  uint64_t v9 = a2 + v7[6];
  *(void *)uint64_t v9 = swift_getKeyPath();
  *(void *)(v9 + 8) = 0;
  *(void *)(v9 + 16) = 0;
  *(void *)(v9 + 24) = 0;
  *(_WORD *)(v9 + 32) = 0;
  uint64_t v10 = a2 + v7[7];
  *(void *)uint64_t v10 = swift_getKeyPath();
  *(_OWORD *)(v10 + 8) = 0u;
  *(_OWORD *)(v10 + 24) = 0u;
  *(_OWORD *)(v10 + 40) = 0u;
  *(_OWORD *)(v10 + 56) = 0u;
  *(_WORD *)(v10 + 72) = 0;
  uint64_t v11 = a2 + v7[8];
  *(void *)uint64_t v11 = swift_getKeyPath();
  *(unsigned char *)(v11 + 8) = 0;
  uint64_t v12 = a2 + v7[9];
  *(void *)uint64_t v12 = swift_getKeyPath();
  *(unsigned char *)(v12 + 8) = 0;
  return sub_22EDFDEF8((uint64_t)v6, a2);
}

uint64_t sub_22EDFDE30(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22EDFDE78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22EDFDEF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for AccessoryViewModifier()
{
  return &type metadata for AccessoryViewModifier;
}

unint64_t sub_22EDFDF70()
{
  unint64_t result = qword_2686273B0;
  if (!qword_2686273B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861BD10);
    sub_22EDFDFEC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686273B0);
  }
  return result;
}

unint64_t sub_22EDFDFEC()
{
  unint64_t result = qword_2686273B8;
  if (!qword_2686273B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861BD08);
    sub_22EADDD7C(&qword_2686273C0, &qword_268627360);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686273B8);
  }
  return result;
}

uint64_t sub_22EDFE08C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EDFE0A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686273C8);
  uint64_t v5 = v4 - 8;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686273D0);
  uint64_t v9 = v8 - 8;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_22EE7E000();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686273D8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v7, a1, v14);
  uint64_t v15 = (uint64_t *)&v7[*(int *)(v5 + 44)];
  *uint64_t v15 = KeyPath;
  v15[1] = v12;
  LODWORD(a1) = sub_22EE7DA20();
  sub_22EB31AAC((uint64_t)v7, (uint64_t)v11, &qword_2686273C8);
  *(_DWORD *)&v11[*(int *)(v9 + 44)] = a1;
  sub_22EADD81C((uint64_t)v7, &qword_2686273C8);
  sub_22EB31AAC((uint64_t)v11, a2, &qword_2686273D0);
  return sub_22EADD81C((uint64_t)v11, &qword_2686273D0);
}

unint64_t sub_22EDFE24C()
{
  unint64_t result = qword_2686273E0;
  if (!qword_2686273E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686273E8);
    sub_22EDFE2C8();
    sub_22EC383AC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686273E0);
  }
  return result;
}

unint64_t sub_22EDFE2C8()
{
  unint64_t result = qword_2686273F0;
  if (!qword_2686273F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686273D0);
    sub_22EDFE368();
    sub_22EADDD7C(&qword_268620A90, &qword_268620A98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686273F0);
  }
  return result;
}

unint64_t sub_22EDFE368()
{
  unint64_t result = qword_2686273F8;
  if (!qword_2686273F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686273C8);
    sub_22EADDD7C(&qword_268627400, &qword_2686273D8);
    sub_22EADDD7C(&qword_26861C3E8, &qword_26861C3F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686273F8);
  }
  return result;
}

uint64_t sub_22EDFE42C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(0);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      uint64_t v28 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v28;
      *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
      *(void *)(a1 + 24) = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_29;
    }
    uint64_t v7 = _s11PriceStringOMa(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v29 = sub_22EE7F6E0();
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v29 - 8) + 16))(a1, a2, v29);
      uint64_t v30 = _s20LocalizationResourceVMa();
      *(_OWORD *)(a1 + *(int *)(v30 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v30 + 20));
      goto LABEL_16;
    }
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v31 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v31;
      swift_bridgeObjectRetain();
      goto LABEL_16;
    }
    uint64_t v155 = v7;
    uint64_t v9 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v9;
    uint64_t v10 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v11 = *(int *)(v10 + 20);
    uint64_t v12 = a1 + v11;
    uint64_t v13 = (uint64_t)a2 + v11;
    uint64_t v14 = sub_22EE7F6E0();
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    v15(v12, v13, v14);
    uint64_t v16 = *(int *)(v10 + 24);
    uint64_t v17 = (char *)(a1 + v16);
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = _s22LocalizedPriceResourceV6FormatOMa(0);
    int v20 = swift_getEnumCaseMultiPayload();
    if (v20 == 3)
    {
      uint64_t v32 = *((void *)v18 + 1);
      *(void *)uint64_t v17 = *(void *)v18;
      *((void *)v17 + 1) = v32;
      uint64_t v33 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v34 = v33[5];
      size_t v137 = &v18[v34];
      unint64_t v145 = &v17[v34];
      char v35 = (void (*)(char *, char *, uint64_t))v15;
      uint64_t v36 = sub_22EE7F5D0();
      uint64_t v129 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
      swift_bridgeObjectRetain();
      v129(v145, v137, v36);
      v35(&v17[v33[6]], &v18[v33[6]], v14);
      *(void *)&v17[v33[7]] = *(void *)&v18[v33[7]];
    }
    else
    {
      if (v20 != 2)
      {
        memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
        goto LABEL_15;
      }
      uint64_t v21 = *((void *)v18 + 1);
      *(void *)uint64_t v17 = *(void *)v18;
      *((void *)v17 + 1) = v21;
      uint64_t v22 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v23 = v22[5];
      uint64_t v136 = &v18[v23];
      int v144 = &v17[v23];
      uint64_t v24 = (void (*)(char *, char *, uint64_t))v15;
      uint64_t v25 = sub_22EE7F5D0();
      uint64_t v128 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
      swift_bridgeObjectRetain();
      v128(v144, v136, v25);
      v24(&v17[v22[6]], &v18[v22[6]], v14);
      *(void *)&v17[v22[7]] = *(void *)&v18[v22[7]];
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
      v17[*(int *)(v26 + 48)] = v18[*(int *)(v26 + 48)];
    }
    swift_storeEnumTagMultiPayload();
LABEL_15:
    uint64_t v7 = v155;
LABEL_16:
    swift_storeEnumTagMultiPayload();
    uint64_t v37 = *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
    int v38 = (void *)(a1 + v37);
    unsigned int v39 = (uint64_t *)((char *)a2 + v37);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v37, 1, v7))
    {
      uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F8);
      memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
      goto LABEL_29;
    }
    int v41 = swift_getEnumCaseMultiPayload();
    if (v41 == 2)
    {
      uint64_t v56 = sub_22EE7F6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v56 - 8) + 16))(v38, v39, v56);
      uint64_t v57 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)v38 + *(int *)(v57 + 20)) = *(_OWORD *)((char *)v39 + *(int *)(v57 + 20));
    }
    else if (v41 == 1)
    {
      uint64_t v42 = v39[1];
      *int v38 = *v39;
      v38[1] = v42;
      uint64_t v160 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v43 = *(int *)(v160 + 20);
      uint64_t v150 = (char *)v39 + v43;
      int v151 = (char *)v38 + v43;
      uint64_t v44 = sub_22EE7F6E0();
      unsigned int v45 = *(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16);
      swift_bridgeObjectRetain();
      unsigned int v46 = v151;
      unint64_t v152 = v45;
      uint64_t v156 = v44;
      v45(v46, v150, v44);
      uint64_t v47 = *(int *)(v160 + 24);
      int v48 = (char *)v38 + v47;
      unsigned int v49 = (char *)v39 + v47;
      uint64_t v50 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v51 = swift_getEnumCaseMultiPayload();
      if (v51 == 3)
      {
        uint64_t v59 = *((void *)v49 + 1);
        *(void *)int v48 = *(void *)v49;
        *((void *)v48 + 1) = v59;
        int v162 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v60 = v162[5];
        uint64_t v131 = &v49[v60];
        unsigned int v139 = &v48[v60];
        uint64_t v61 = sub_22EE7F5D0();
        unint64_t v127 = *(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16);
        swift_bridgeObjectRetain();
        v127(v139, v131, v61);
        v152(&v48[v162[6]], &v49[v162[6]], v156);
        *(void *)&v48[v162[7]] = *(void *)&v49[v162[7]];
      }
      else
      {
        if (v51 != 2)
        {
          memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
          goto LABEL_28;
        }
        uint64_t v52 = *((void *)v49 + 1);
        *(void *)int v48 = *(void *)v49;
        *((void *)v48 + 1) = v52;
        uint64_t v161 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v53 = v161[5];
        uint64_t v130 = &v49[v53];
        unsigned int v138 = &v48[v53];
        uint64_t v54 = sub_22EE7F5D0();
        unint64_t v126 = *(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16);
        swift_bridgeObjectRetain();
        v126(v138, v130, v54);
        v152(&v48[v161[6]], &v49[v161[6]], v156);
        *(void *)&v48[v161[7]] = *(void *)&v49[v161[7]];
        uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v48[*(int *)(v55 + 48)] = v49[*(int *)(v55 + 48)];
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      uint64_t v58 = v39[1];
      *int v38 = *v39;
      v38[1] = v58;
      swift_bridgeObjectRetain();
    }
LABEL_28:
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v38, 0, 1, v7);
LABEL_29:
    swift_storeEnumTagMultiPayload();
    uint64_t v62 = *(int *)(a3 + 20);
    uint64_t v63 = a1 + v62;
    uint64_t v64 = (uint64_t)a2 + v62;
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      uint64_t v86 = *(void *)(v64 + 8);
      *(void *)uint64_t v63 = *(void *)v64;
      *(void *)(v63 + 8) = v86;
      *(unsigned char *)(v63 + 16) = *(unsigned char *)(v64 + 16);
      *(void *)(v63 + 24) = *(void *)(v64 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_55:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    uint64_t v65 = _s11PriceStringOMa(0);
    int v66 = swift_getEnumCaseMultiPayload();
    if (v66 == 2)
    {
      uint64_t v87 = sub_22EE7F6E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 16))(v63, v64, v87);
      uint64_t v88 = _s20LocalizationResourceVMa();
      *(_OWORD *)(v63 + *(int *)(v88 + 20)) = *(_OWORD *)(v64 + *(int *)(v88 + 20));
      goto LABEL_42;
    }
    if (v66 != 1)
    {
      uint64_t v89 = *(void *)(v64 + 8);
      *(void *)uint64_t v63 = *(void *)v64;
      *(void *)(v63 + 8) = v89;
      swift_bridgeObjectRetain();
      goto LABEL_42;
    }
    uint64_t v157 = v65;
    uint64_t v67 = *(void *)(v64 + 8);
    *(void *)uint64_t v63 = *(void *)v64;
    *(void *)(v63 + 8) = v67;
    uint64_t v68 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v69 = *(int *)(v68 + 20);
    uint64_t v70 = v63 + v69;
    uint64_t v71 = v64 + v69;
    uint64_t v72 = sub_22EE7F6E0();
    unsigned int v73 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 16);
    swift_bridgeObjectRetain();
    v73(v70, v71, v72);
    uint64_t v74 = *(int *)(v68 + 24);
    unsigned int v75 = (char *)(v63 + v74);
    unsigned int v76 = (char *)(v64 + v74);
    uint64_t v77 = _s22LocalizedPriceResourceV6FormatOMa(0);
    int v78 = swift_getEnumCaseMultiPayload();
    if (v78 == 3)
    {
      uint64_t v90 = *((void *)v76 + 1);
      *(void *)unsigned int v75 = *(void *)v76;
      *((void *)v75 + 1) = v90;
      unint64_t v91 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v92 = v91[5];
      uint64_t v141 = &v76[v92];
      uint64_t v147 = &v75[v92];
      uint64_t v93 = v72;
      unint64_t v94 = (void (*)(char *, char *, uint64_t))v73;
      uint64_t v95 = sub_22EE7F5D0();
      int v133 = *(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 16);
      swift_bridgeObjectRetain();
      v133(v147, v141, v95);
      v94(&v75[v91[6]], &v76[v91[6]], v93);
      *(void *)&v75[v91[7]] = *(void *)&v76[v91[7]];
    }
    else
    {
      if (v78 != 2)
      {
        memcpy(v75, v76, *(void *)(*(void *)(v77 - 8) + 64));
        goto LABEL_41;
      }
      uint64_t v79 = *((void *)v76 + 1);
      *(void *)unsigned int v75 = *(void *)v76;
      *((void *)v75 + 1) = v79;
      uint64_t v80 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v81 = v80[5];
      uint64_t v140 = &v76[v81];
      uint64_t v146 = &v75[v81];
      uint64_t v82 = v72;
      uint64_t v83 = (void (*)(char *, char *, uint64_t))v73;
      uint64_t v84 = sub_22EE7F5D0();
      uint64_t v132 = *(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 16);
      swift_bridgeObjectRetain();
      v132(v146, v140, v84);
      v83(&v75[v80[6]], &v76[v80[6]], v82);
      *(void *)&v75[v80[7]] = *(void *)&v76[v80[7]];
      uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
      v75[*(int *)(v85 + 48)] = v76[*(int *)(v85 + 48)];
    }
    swift_storeEnumTagMultiPayload();
LABEL_41:
    uint64_t v65 = v157;
LABEL_42:
    swift_storeEnumTagMultiPayload();
    uint64_t v96 = *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
    int v97 = (void *)(v63 + v96);
    char v98 = (void *)(v64 + v96);
    if (__swift_getEnumTagSinglePayload(v64 + v96, 1, v65))
    {
      uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F8);
      memcpy(v97, v98, *(void *)(*(void *)(v99 - 8) + 64));
      goto LABEL_55;
    }
    int v100 = swift_getEnumCaseMultiPayload();
    if (v100 == 2)
    {
      uint64_t v118 = sub_22EE7F6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v118 - 8) + 16))(v97, v98, v118);
      uint64_t v119 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)v97 + *(int *)(v119 + 20)) = *(_OWORD *)((char *)v98 + *(int *)(v119 + 20));
    }
    else if (v100 == 1)
    {
      uint64_t v101 = v98[1];
      void *v97 = *v98;
      v97[1] = v101;
      uint64_t v102 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v103 = *(int *)(v102 + 20);
      unsigned int v158 = (char *)v97 + v103;
      uint64_t v163 = v102;
      uint64_t v153 = (char *)v98 + v103;
      uint64_t v104 = sub_22EE7F6E0();
      unint64_t v105 = *(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v107 = v153;
      unint64_t v106 = v158;
      uint64_t v154 = v105;
      uint64_t v159 = v104;
      v105(v106, v107, v104);
      uint64_t v108 = *(int *)(v163 + 24);
      uint64_t v109 = (char *)v97 + v108;
      uint64_t v110 = (char *)v98 + v108;
      uint64_t v111 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v112 = swift_getEnumCaseMultiPayload();
      if (v112 == 3)
      {
        uint64_t v121 = *((void *)v110 + 1);
        *(void *)uint64_t v109 = *(void *)v110;
        *((void *)v109 + 1) = v121;
        uint64_t v122 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v123 = v122[5];
        uint64_t v143 = &v110[v123];
        char v149 = &v109[v123];
        uint64_t v124 = sub_22EE7F5D0();
        unint64_t v135 = *(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 16);
        swift_bridgeObjectRetain();
        v135(v149, v143, v124);
        v154(&v109[v122[6]], &v110[v122[6]], v159);
        *(void *)&v109[v122[7]] = *(void *)&v110[v122[7]];
      }
      else
      {
        if (v112 != 2)
        {
          memcpy(v109, v110, *(void *)(*(void *)(v111 - 8) + 64));
          goto LABEL_54;
        }
        uint64_t v113 = *((void *)v110 + 1);
        *(void *)uint64_t v109 = *(void *)v110;
        *((void *)v109 + 1) = v113;
        uint64_t v114 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v115 = v114[5];
        uint64_t v142 = &v110[v115];
        uint64_t v148 = &v109[v115];
        uint64_t v116 = sub_22EE7F5D0();
        uint64_t v134 = *(void (**)(char *, char *, uint64_t))(*(void *)(v116 - 8) + 16);
        swift_bridgeObjectRetain();
        v134(v148, v142, v116);
        v154(&v109[v114[6]], &v110[v114[6]], v159);
        *(void *)&v109[v114[7]] = *(void *)&v110[v114[7]];
        uint64_t v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v109[*(int *)(v117 + 48)] = v110[*(int *)(v117 + 48)];
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      uint64_t v120 = v98[1];
      void *v97 = *v98;
      v97[1] = v120;
      swift_bridgeObjectRetain();
    }
LABEL_54:
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v97, 0, 1, v65);
    goto LABEL_55;
  }
  uint64_t v27 = *a2;
  *(void *)a1 = *a2;
  a1 = v27 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return a1;
}

uint64_t sub_22EDFF23C(uint64_t a1, uint64_t a2)
{
  type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(0);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  uint64_t v4 = _s11PriceStringOMa(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v15 = sub_22EE7F6E0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(a1, v15);
      break;
    case 1:
      swift_bridgeObjectRelease();
      uint64_t v6 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v7 = a1 + *(int *)(v6 + 20);
      uint64_t v8 = sub_22EE7F6E0();
      uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
      v9(v7, v8);
      uint64_t v10 = a1 + *(int *)(v6 + 24);
      _s22LocalizedPriceResourceV6FormatOMa(0);
      int v11 = swift_getEnumCaseMultiPayload();
      if (v11 == 3 || v11 == 2)
      {
        swift_bridgeObjectRelease();
        uint64_t v12 = _s15PricePropertiesVMa(0);
        uint64_t v13 = v10 + *(int *)(v12 + 20);
        uint64_t v14 = sub_22EE7F5D0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
        v9(v10 + *(int *)(v12 + 24), v8);
      }
      break;
    case 0:
      swift_bridgeObjectRelease();
      break;
  }
  uint64_t v16 = a1 + *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
  if (!__swift_getEnumTagSinglePayload(v16, 1, v4))
  {
    int v21 = swift_getEnumCaseMultiPayload();
    if (v21 == 2)
    {
      uint64_t v52 = sub_22EE7F6E0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v52 - 8) + 8))(v16, v52);
      goto LABEL_13;
    }
    if (v21 == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v33 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v34 = v16 + *(int *)(v33 + 20);
      uint64_t v35 = sub_22EE7F6E0();
      uint64_t v36 = *(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8);
      v36(v34, v35);
      uint64_t v37 = v16 + *(int *)(v33 + 24);
      _s22LocalizedPriceResourceV6FormatOMa(0);
      int v38 = swift_getEnumCaseMultiPayload();
      if (v38 == 3 || v38 == 2)
      {
        swift_bridgeObjectRelease();
        uint64_t v39 = _s15PricePropertiesVMa(0);
        uint64_t v40 = v37 + *(int *)(v39 + 20);
        uint64_t v41 = sub_22EE7F5D0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v41 - 8) + 8))(v40, v41);
        v36(v37 + *(int *)(v39 + 24), v35);
      }
      goto LABEL_13;
    }
    if (v21) {
      goto LABEL_13;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
LABEL_13:
  uint64_t v17 = a1 + *(int *)(a2 + 20);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    swift_bridgeObjectRelease();
LABEL_19:
    return swift_bridgeObjectRelease();
  }
  uint64_t v18 = _s11PriceStringOMa(0);
  int v19 = swift_getEnumCaseMultiPayload();
  switch(v19)
  {
    case 2:
      uint64_t v31 = sub_22EE7F6E0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8))(v17, v31);
      break;
    case 1:
      swift_bridgeObjectRelease();
      uint64_t v22 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v23 = v17 + *(int *)(v22 + 20);
      uint64_t v24 = sub_22EE7F6E0();
      uint64_t v25 = *(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8);
      v25(v23, v24);
      uint64_t v26 = v17 + *(int *)(v22 + 24);
      _s22LocalizedPriceResourceV6FormatOMa(0);
      int v27 = swift_getEnumCaseMultiPayload();
      if (v27 == 3 || v27 == 2)
      {
        swift_bridgeObjectRelease();
        uint64_t v28 = _s15PricePropertiesVMa(0);
        uint64_t v29 = v26 + *(int *)(v28 + 20);
        uint64_t v30 = sub_22EE7F5D0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v29, v30);
        v25(v26 + *(int *)(v28 + 24), v24);
      }
      break;
    case 0:
      swift_bridgeObjectRelease();
      break;
  }
  uint64_t v32 = v17 + *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
  uint64_t result = __swift_getEnumTagSinglePayload(v32, 1, v18);
  if (!result)
  {
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result == 2)
    {
      uint64_t v53 = sub_22EE7F6E0();
      int v51 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v53 - 8) + 8);
      uint64_t v50 = v53;
      uint64_t v49 = v32;
    }
    else
    {
      if (result != 1)
      {
        if (result) {
          return result;
        }
        goto LABEL_19;
      }
      swift_bridgeObjectRelease();
      uint64_t v42 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v43 = v32 + *(int *)(v42 + 20);
      uint64_t v44 = sub_22EE7F6E0();
      uint64_t v54 = *(void (**)(uint64_t, uint64_t))(*(void *)(v44 - 8) + 8);
      v54(v43, v44);
      uint64_t v45 = v32 + *(int *)(v42 + 24);
      _s22LocalizedPriceResourceV6FormatOMa(0);
      uint64_t result = swift_getEnumCaseMultiPayload();
      if (result != 3 && result != 2) {
        return result;
      }
      swift_bridgeObjectRelease();
      uint64_t v46 = _s15PricePropertiesVMa(0);
      uint64_t v47 = v45 + *(int *)(v46 + 20);
      uint64_t v48 = sub_22EE7F5D0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v48 - 8) + 8))(v47, v48);
      uint64_t v49 = v45 + *(int *)(v46 + 24);
      uint64_t v50 = v44;
      int v51 = (uint64_t (*)(uint64_t, uint64_t))v54;
    }
    return v51(v49, v50);
  }
  return result;
}

uint64_t sub_22EDFF8F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(0);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v27 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v27;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_28;
  }
  uint64_t v6 = _s11PriceStringOMa(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v28 = sub_22EE7F6E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16))(a1, a2, v28);
    uint64_t v29 = _s20LocalizationResourceVMa();
    *(_OWORD *)(a1 + *(int *)(v29 + 20)) = *(_OWORD *)(a2 + *(int *)(v29 + 20));
    goto LABEL_14;
  }
  if (EnumCaseMultiPayload != 1)
  {
    uint64_t v30 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v30;
    swift_bridgeObjectRetain();
    goto LABEL_14;
  }
  uint64_t v155 = v6;
  uint64_t v8 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v8;
  uint64_t v9 = _s22LocalizedPriceResourceVMa(0);
  uint64_t v10 = *(int *)(v9 + 20);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_22EE7F6E0();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
  swift_bridgeObjectRetain();
  v14(v11, v12, v13);
  uint64_t v15 = *(int *)(v9 + 24);
  uint64_t v16 = (char *)(a1 + v15);
  uint64_t v17 = (char *)(a2 + v15);
  uint64_t v18 = _s22LocalizedPriceResourceV6FormatOMa(0);
  int v19 = swift_getEnumCaseMultiPayload();
  if (v19 == 3)
  {
    uint64_t v31 = *((void *)v17 + 1);
    *(void *)uint64_t v16 = *(void *)v17;
    *((void *)v16 + 1) = v31;
    uint64_t v32 = (void (*)(char *, char *, uint64_t))v14;
    uint64_t v33 = (int *)_s15PricePropertiesVMa(0);
    uint64_t v34 = v33[5];
    uint64_t v140 = &v17[v34];
    uint64_t v148 = &v16[v34];
    uint64_t v161 = a3;
    uint64_t v35 = sub_22EE7F5D0();
    uint64_t v132 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16);
    swift_bridgeObjectRetain();
    uint64_t v36 = v35;
    a3 = v161;
    v132(v148, v140, v36);
    v32(&v16[v33[6]], &v17[v33[6]], v13);
    *(void *)&v16[v33[7]] = *(void *)&v17[v33[7]];
  }
  else
  {
    if (v19 != 2)
    {
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
      goto LABEL_13;
    }
    uint64_t v20 = *((void *)v17 + 1);
    *(void *)uint64_t v16 = *(void *)v17;
    *((void *)v16 + 1) = v20;
    uint64_t v160 = a3;
    int v21 = (int *)_s15PricePropertiesVMa(0);
    uint64_t v22 = v21[5];
    unsigned int v139 = &v17[v22];
    uint64_t v147 = &v16[v22];
    uint64_t v23 = (void (*)(char *, char *, uint64_t))v14;
    uint64_t v24 = sub_22EE7F5D0();
    uint64_t v131 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
    swift_bridgeObjectRetain();
    v131(v147, v139, v24);
    v23(&v16[v21[6]], &v17[v21[6]], v13);
    uint64_t v25 = v21[7];
    a3 = v160;
    *(void *)&v16[v25] = *(void *)&v17[v25];
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
    v16[*(int *)(v26 + 48)] = v17[*(int *)(v26 + 48)];
  }
  swift_storeEnumTagMultiPayload();
LABEL_13:
  uint64_t v6 = v155;
LABEL_14:
  swift_storeEnumTagMultiPayload();
  uint64_t v37 = *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
  int v38 = (void *)(a1 + v37);
  uint64_t v39 = (void *)(a2 + v37);
  if (__swift_getEnumTagSinglePayload(a2 + v37, 1, v6))
  {
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F8);
    memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
    goto LABEL_28;
  }
  int v41 = swift_getEnumCaseMultiPayload();
  if (v41 == 2)
  {
    uint64_t v58 = sub_22EE7F6E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v58 - 8) + 16))(v38, v39, v58);
    uint64_t v59 = _s20LocalizationResourceVMa();
    *(_OWORD *)((char *)v38 + *(int *)(v59 + 20)) = *(_OWORD *)((char *)v39 + *(int *)(v59 + 20));
  }
  else
  {
    if (v41 == 1)
    {
      uint64_t v162 = a3;
      uint64_t v42 = v39[1];
      *int v38 = *v39;
      v38[1] = v42;
      uint64_t v166 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v43 = *(int *)(v166 + 20);
      uint64_t v153 = (char *)v39 + v43;
      uint64_t v156 = (char *)v38 + v43;
      uint64_t v44 = sub_22EE7F6E0();
      uint64_t v45 = *(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v47 = v153;
      uint64_t v46 = v156;
      uint64_t v154 = v45;
      uint64_t v157 = v44;
      v45(v46, v47, v44);
      uint64_t v48 = *(int *)(v166 + 24);
      uint64_t v49 = (char *)v38 + v48;
      uint64_t v50 = (char *)v39 + v48;
      uint64_t v51 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v52 = swift_getEnumCaseMultiPayload();
      if (v52 == 3)
      {
        uint64_t v61 = *((void *)v50 + 1);
        *(void *)uint64_t v49 = *(void *)v50;
        *((void *)v49 + 1) = v61;
        uint64_t v62 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v63 = v62[5];
        uint64_t v134 = &v50[v63];
        uint64_t v142 = &v49[v63];
        uint64_t v64 = sub_22EE7F5D0();
        uint64_t v130 = *(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16);
        swift_bridgeObjectRetain();
        v130(v142, v134, v64);
        v154(&v49[v62[6]], &v50[v62[6]], v157);
        *(void *)&v49[v62[7]] = *(void *)&v50[v62[7]];
      }
      else
      {
        if (v52 != 2)
        {
          memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
          goto LABEL_26;
        }
        uint64_t v53 = *((void *)v50 + 1);
        *(void *)uint64_t v49 = *(void *)v50;
        *((void *)v49 + 1) = v53;
        uint64_t v54 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v55 = v54[5];
        int v133 = &v50[v55];
        uint64_t v141 = &v49[v55];
        uint64_t v56 = sub_22EE7F5D0();
        uint64_t v129 = *(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16);
        swift_bridgeObjectRetain();
        v129(v141, v133, v56);
        v154(&v49[v54[6]], &v50[v54[6]], v157);
        *(void *)&v49[v54[7]] = *(void *)&v50[v54[7]];
        uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v49[*(int *)(v57 + 48)] = v50[*(int *)(v57 + 48)];
      }
      swift_storeEnumTagMultiPayload();
LABEL_26:
      a3 = v162;
      goto LABEL_27;
    }
    uint64_t v60 = v39[1];
    *int v38 = *v39;
    v38[1] = v60;
    swift_bridgeObjectRetain();
  }
LABEL_27:
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload((uint64_t)v38, 0, 1, v6);
LABEL_28:
  swift_storeEnumTagMultiPayload();
  uint64_t v65 = *(int *)(a3 + 20);
  uint64_t v66 = a1 + v65;
  uint64_t v67 = a2 + v65;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v68 = _s11PriceStringOMa(0);
    int v69 = swift_getEnumCaseMultiPayload();
    if (v69 == 2)
    {
      uint64_t v90 = sub_22EE7F6E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 16))(v66, v67, v90);
      uint64_t v91 = _s20LocalizationResourceVMa();
      *(_OWORD *)(v66 + *(int *)(v91 + 20)) = *(_OWORD *)(v67 + *(int *)(v91 + 20));
      goto LABEL_41;
    }
    if (v69 != 1)
    {
      uint64_t v92 = *(void *)(v67 + 8);
      *(void *)uint64_t v66 = *(void *)v67;
      *(void *)(v66 + 8) = v92;
      swift_bridgeObjectRetain();
      goto LABEL_41;
    }
    uint64_t v163 = v68;
    uint64_t v70 = *(void *)(v67 + 8);
    *(void *)uint64_t v66 = *(void *)v67;
    *(void *)(v66 + 8) = v70;
    uint64_t v71 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v72 = *(int *)(v71 + 20);
    uint64_t v73 = v66 + v72;
    uint64_t v74 = v67 + v72;
    uint64_t v75 = sub_22EE7F6E0();
    unsigned int v76 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 16);
    swift_bridgeObjectRetain();
    v76(v73, v74, v75);
    uint64_t v77 = *(int *)(v71 + 24);
    int v78 = (char *)(v66 + v77);
    uint64_t v79 = (char *)(v67 + v77);
    uint64_t v80 = _s22LocalizedPriceResourceV6FormatOMa(0);
    int v81 = swift_getEnumCaseMultiPayload();
    if (v81 == 3)
    {
      uint64_t v93 = *((void *)v79 + 1);
      *(void *)int v78 = *(void *)v79;
      *((void *)v78 + 1) = v93;
      unint64_t v94 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v95 = v94[5];
      int v144 = &v79[v95];
      uint64_t v150 = &v78[v95];
      uint64_t v96 = v75;
      int v97 = (void (*)(char *, char *, uint64_t))v76;
      uint64_t v98 = sub_22EE7F5D0();
      uint64_t v136 = *(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 16);
      swift_bridgeObjectRetain();
      v136(v150, v144, v98);
      v97(&v78[v94[6]], &v79[v94[6]], v96);
      *(void *)&v78[v94[7]] = *(void *)&v79[v94[7]];
    }
    else
    {
      if (v81 != 2)
      {
        memcpy(v78, v79, *(void *)(*(void *)(v80 - 8) + 64));
        goto LABEL_40;
      }
      uint64_t v82 = *((void *)v79 + 1);
      *(void *)int v78 = *(void *)v79;
      *((void *)v78 + 1) = v82;
      uint64_t v83 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v84 = v83[5];
      uint64_t v143 = &v79[v84];
      char v149 = &v78[v84];
      uint64_t v85 = v75;
      uint64_t v86 = (void (*)(char *, char *, uint64_t))v76;
      uint64_t v87 = sub_22EE7F5D0();
      unint64_t v135 = *(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16);
      swift_bridgeObjectRetain();
      v135(v149, v143, v87);
      v86(&v78[v83[6]], &v79[v83[6]], v85);
      *(void *)&v78[v83[7]] = *(void *)&v79[v83[7]];
      uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
      v78[*(int *)(v88 + 48)] = v79[*(int *)(v88 + 48)];
    }
    swift_storeEnumTagMultiPayload();
LABEL_40:
    uint64_t v68 = v163;
LABEL_41:
    swift_storeEnumTagMultiPayload();
    uint64_t v99 = *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
    int v100 = (void *)(v66 + v99);
    uint64_t v101 = (void *)(v67 + v99);
    if (__swift_getEnumTagSinglePayload(v67 + v99, 1, v68))
    {
      uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F8);
      memcpy(v100, v101, *(void *)(*(void *)(v102 - 8) + 64));
      goto LABEL_54;
    }
    int v103 = swift_getEnumCaseMultiPayload();
    if (v103 == 2)
    {
      uint64_t v121 = sub_22EE7F6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v121 - 8) + 16))(v100, v101, v121);
      uint64_t v122 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)v100 + *(int *)(v122 + 20)) = *(_OWORD *)((char *)v101 + *(int *)(v122 + 20));
    }
    else if (v103 == 1)
    {
      uint64_t v104 = v101[1];
      *int v100 = *v101;
      v100[1] = v104;
      uint64_t v105 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v106 = *(int *)(v105 + 20);
      uint64_t v164 = (char *)v100 + v106;
      uint64_t v167 = v105;
      unsigned int v158 = (char *)v101 + v106;
      uint64_t v107 = sub_22EE7F6E0();
      uint64_t v108 = *(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v110 = v158;
      uint64_t v109 = v164;
      uint64_t v159 = v108;
      uint64_t v165 = v107;
      v108(v109, v110, v107);
      uint64_t v111 = *(int *)(v167 + 24);
      int v112 = (char *)v100 + v111;
      uint64_t v113 = (char *)v101 + v111;
      uint64_t v114 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v115 = swift_getEnumCaseMultiPayload();
      if (v115 == 3)
      {
        uint64_t v124 = *((void *)v113 + 1);
        *(void *)int v112 = *(void *)v113;
        *((void *)v112 + 1) = v124;
        uint64_t v125 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v126 = v125[5];
        uint64_t v146 = &v113[v126];
        unint64_t v152 = &v112[v126];
        uint64_t v127 = sub_22EE7F5D0();
        unsigned int v138 = *(void (**)(char *, char *, uint64_t))(*(void *)(v127 - 8) + 16);
        swift_bridgeObjectRetain();
        v138(v152, v146, v127);
        v159(&v112[v125[6]], &v113[v125[6]], v165);
        *(void *)&v112[v125[7]] = *(void *)&v113[v125[7]];
      }
      else
      {
        if (v115 != 2)
        {
          memcpy(v112, v113, *(void *)(*(void *)(v114 - 8) + 64));
          goto LABEL_53;
        }
        uint64_t v116 = *((void *)v113 + 1);
        *(void *)int v112 = *(void *)v113;
        *((void *)v112 + 1) = v116;
        uint64_t v117 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v118 = v117[5];
        unint64_t v145 = &v113[v118];
        int v151 = &v112[v118];
        uint64_t v119 = sub_22EE7F5D0();
        size_t v137 = *(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 16);
        swift_bridgeObjectRetain();
        v137(v151, v145, v119);
        v159(&v112[v117[6]], &v113[v117[6]], v165);
        *(void *)&v112[v117[7]] = *(void *)&v113[v117[7]];
        uint64_t v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v112[*(int *)(v120 + 48)] = v113[*(int *)(v120 + 48)];
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      uint64_t v123 = v101[1];
      *int v100 = *v101;
      v100[1] = v123;
      swift_bridgeObjectRetain();
    }
LABEL_53:
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v100, 0, 1, v68);
    goto LABEL_54;
  }
  uint64_t v89 = *(void *)(v67 + 8);
  *(void *)uint64_t v66 = *(void *)v67;
  *(void *)(v66 + 8) = v89;
  *(unsigned char *)(v66 + 16) = *(unsigned char *)(v67 + 16);
  *(void *)(v66 + 24) = *(void *)(v67 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_54:
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_22EE006CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_22EE0152C(a1);
    type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(0);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_28;
    }
    uint64_t v6 = _s11PriceStringOMa(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v24 = sub_22EE7F6E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(a1, a2, v24);
      uint64_t v25 = _s20LocalizationResourceVMa();
      *(_OWORD *)(a1 + *(int *)(v25 + 20)) = *(_OWORD *)(a2 + *(int *)(v25 + 20));
      goto LABEL_15;
    }
    if (EnumCaseMultiPayload != 1)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      swift_bridgeObjectRetain();
      goto LABEL_15;
    }
    uint64_t v133 = v6;
    uint64_t v138 = a3;
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    uint64_t v8 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v9 = *(int *)(v8 + 20);
    uint64_t v10 = a1 + v9;
    uint64_t v11 = a2 + v9;
    uint64_t v12 = sub_22EE7F6E0();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    uint64_t v14 = *(int *)(v8 + 24);
    uint64_t v15 = (char *)(a1 + v14);
    uint64_t v16 = (char *)(a2 + v14);
    uint64_t v17 = _s22LocalizedPriceResourceV6FormatOMa(0);
    int v18 = swift_getEnumCaseMultiPayload();
    if (v18 == 3)
    {
      *(void *)uint64_t v15 = *(void *)v16;
      *((void *)v15 + 1) = *((void *)v16 + 1);
      uint64_t v26 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v27 = v26[5];
      int v115 = &v16[v27];
      uint64_t v123 = &v15[v27];
      uint64_t v28 = (void (*)(char *, char *, uint64_t))v13;
      uint64_t v29 = sub_22EE7F5D0();
      uint64_t v107 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16);
      swift_bridgeObjectRetain();
      v107(v123, v115, v29);
      v28(&v15[v26[6]], &v16[v26[6]], v12);
      *(void *)&v15[v26[7]] = *(void *)&v16[v26[7]];
    }
    else
    {
      if (v18 != 2)
      {
        memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
        goto LABEL_14;
      }
      *(void *)uint64_t v15 = *(void *)v16;
      *((void *)v15 + 1) = *((void *)v16 + 1);
      int v19 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v20 = v19[5];
      uint64_t v114 = &v16[v20];
      uint64_t v122 = &v15[v20];
      int v21 = (void (*)(char *, char *, uint64_t))v13;
      uint64_t v22 = sub_22EE7F5D0();
      uint64_t v106 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
      swift_bridgeObjectRetain();
      v106(v122, v114, v22);
      v21(&v15[v19[6]], &v16[v19[6]], v12);
      *(void *)&v15[v19[7]] = *(void *)&v16[v19[7]];
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
      v15[*(int *)(v23 + 48)] = v16[*(int *)(v23 + 48)];
    }
    swift_storeEnumTagMultiPayload();
LABEL_14:
    uint64_t v6 = v133;
    a3 = v138;
LABEL_15:
    swift_storeEnumTagMultiPayload();
    uint64_t v30 = *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
    uint64_t v31 = (void *)(a1 + v30);
    uint64_t v32 = (void *)(a2 + v30);
    if (__swift_getEnumTagSinglePayload(a2 + v30, 1, v6))
    {
      uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F8);
      memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
      goto LABEL_28;
    }
    int v34 = swift_getEnumCaseMultiPayload();
    if (v34 == 2)
    {
      uint64_t v47 = sub_22EE7F6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v47 - 8) + 16))(v31, v32, v47);
      uint64_t v48 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)v31 + *(int *)(v48 + 20)) = *(_OWORD *)((char *)v32 + *(int *)(v48 + 20));
    }
    else if (v34 == 1)
    {
      void *v31 = *v32;
      v31[1] = v32[1];
      uint64_t v139 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v35 = *(int *)(v139 + 20);
      uint64_t v128 = (char *)v32 + v35;
      uint64_t v129 = (char *)v31 + v35;
      uint64_t v36 = sub_22EE7F6E0();
      uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
      swift_bridgeObjectRetain();
      int v38 = v129;
      uint64_t v130 = v37;
      uint64_t v134 = v36;
      v37(v38, v128, v36);
      uint64_t v39 = *(int *)(v139 + 24);
      uint64_t v40 = (char *)v31 + v39;
      int v41 = (char *)v32 + v39;
      uint64_t v42 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v43 = swift_getEnumCaseMultiPayload();
      if (v43 == 3)
      {
        *(void *)uint64_t v40 = *(void *)v41;
        *((void *)v40 + 1) = *((void *)v41 + 1);
        uint64_t v141 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v49 = v141[5];
        uint64_t v109 = &v41[v49];
        uint64_t v117 = &v40[v49];
        uint64_t v50 = sub_22EE7F5D0();
        uint64_t v105 = *(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16);
        swift_bridgeObjectRetain();
        v105(v117, v109, v50);
        v130(&v40[v141[6]], &v41[v141[6]], v134);
        *(void *)&v40[v141[7]] = *(void *)&v41[v141[7]];
      }
      else
      {
        if (v43 != 2)
        {
          memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
          goto LABEL_27;
        }
        *(void *)uint64_t v40 = *(void *)v41;
        *((void *)v40 + 1) = *((void *)v41 + 1);
        uint64_t v140 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v44 = v140[5];
        uint64_t v108 = &v41[v44];
        uint64_t v116 = &v40[v44];
        uint64_t v45 = sub_22EE7F5D0();
        uint64_t v104 = *(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16);
        swift_bridgeObjectRetain();
        v104(v116, v108, v45);
        v130(&v40[v140[6]], &v41[v140[6]], v134);
        *(void *)&v40[v140[7]] = *(void *)&v41[v140[7]];
        uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v40[*(int *)(v46 + 48)] = v41[*(int *)(v46 + 48)];
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      void *v31 = *v32;
      v31[1] = v32[1];
      swift_bridgeObjectRetain();
    }
LABEL_27:
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v6);
LABEL_28:
    swift_storeEnumTagMultiPayload();
    uint64_t v51 = *(int *)(a3 + 20);
    uint64_t v52 = a1 + v51;
    uint64_t v53 = a2 + v51;
    sub_22EE0152C(a1 + v51);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      *(void *)uint64_t v52 = *(void *)v53;
      *(void *)(v52 + 8) = *(void *)(v53 + 8);
      *(unsigned char *)(v52 + 16) = *(unsigned char *)(v53 + 16);
      *(void *)(v52 + 24) = *(void *)(v53 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_54:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    uint64_t v54 = _s11PriceStringOMa(0);
    int v55 = swift_getEnumCaseMultiPayload();
    if (v55 == 2)
    {
      uint64_t v72 = sub_22EE7F6E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 16))(v52, v53, v72);
      uint64_t v73 = _s20LocalizationResourceVMa();
      *(_OWORD *)(v52 + *(int *)(v73 + 20)) = *(_OWORD *)(v53 + *(int *)(v73 + 20));
      goto LABEL_41;
    }
    if (v55 != 1)
    {
      *(void *)uint64_t v52 = *(void *)v53;
      *(void *)(v52 + 8) = *(void *)(v53 + 8);
      swift_bridgeObjectRetain();
      goto LABEL_41;
    }
    uint64_t v135 = v54;
    *(void *)uint64_t v52 = *(void *)v53;
    *(void *)(v52 + 8) = *(void *)(v53 + 8);
    uint64_t v56 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v57 = *(int *)(v56 + 20);
    uint64_t v58 = v52 + v57;
    uint64_t v59 = v53 + v57;
    uint64_t v60 = sub_22EE7F6E0();
    uint64_t v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 16);
    swift_bridgeObjectRetain();
    v61(v58, v59, v60);
    uint64_t v62 = *(int *)(v56 + 24);
    uint64_t v63 = (char *)(v52 + v62);
    uint64_t v64 = (char *)(v53 + v62);
    uint64_t v65 = _s22LocalizedPriceResourceV6FormatOMa(0);
    int v66 = swift_getEnumCaseMultiPayload();
    if (v66 == 3)
    {
      *(void *)uint64_t v63 = *(void *)v64;
      *((void *)v63 + 1) = *((void *)v64 + 1);
      uint64_t v74 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v75 = v74[5];
      uint64_t v119 = &v64[v75];
      uint64_t v125 = &v63[v75];
      unsigned int v76 = (void (*)(char *, char *, uint64_t))v61;
      uint64_t v77 = sub_22EE7F5D0();
      uint64_t v111 = *(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16);
      swift_bridgeObjectRetain();
      v111(v125, v119, v77);
      v76(&v63[v74[6]], &v64[v74[6]], v60);
      *(void *)&v63[v74[7]] = *(void *)&v64[v74[7]];
    }
    else
    {
      if (v66 != 2)
      {
        memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
        goto LABEL_40;
      }
      *(void *)uint64_t v63 = *(void *)v64;
      *((void *)v63 + 1) = *((void *)v64 + 1);
      uint64_t v67 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v68 = v67[5];
      uint64_t v118 = &v64[v68];
      uint64_t v124 = &v63[v68];
      int v69 = (void (*)(char *, char *, uint64_t))v61;
      uint64_t v70 = sub_22EE7F5D0();
      uint64_t v110 = *(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16);
      swift_bridgeObjectRetain();
      v110(v124, v118, v70);
      v69(&v63[v67[6]], &v64[v67[6]], v60);
      *(void *)&v63[v67[7]] = *(void *)&v64[v67[7]];
      uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
      v63[*(int *)(v71 + 48)] = v64[*(int *)(v71 + 48)];
    }
    swift_storeEnumTagMultiPayload();
LABEL_40:
    uint64_t v54 = v135;
LABEL_41:
    swift_storeEnumTagMultiPayload();
    uint64_t v78 = *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
    uint64_t v79 = (void *)(v52 + v78);
    uint64_t v80 = (void *)(v53 + v78);
    if (__swift_getEnumTagSinglePayload(v53 + v78, 1, v54))
    {
      uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F8);
      memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
      goto LABEL_54;
    }
    int v82 = swift_getEnumCaseMultiPayload();
    if (v82 == 2)
    {
      uint64_t v98 = sub_22EE7F6E0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v98 - 8) + 16))(v79, v80, v98);
      uint64_t v99 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)v79 + *(int *)(v99 + 20)) = *(_OWORD *)((char *)v80 + *(int *)(v99 + 20));
    }
    else if (v82 == 1)
    {
      *uint64_t v79 = *v80;
      v79[1] = v80[1];
      uint64_t v83 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v84 = *(int *)(v83 + 20);
      uint64_t v136 = (char *)v79 + v84;
      uint64_t v142 = v83;
      uint64_t v131 = (char *)v80 + v84;
      uint64_t v85 = sub_22EE7F6E0();
      uint64_t v86 = *(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v88 = v131;
      uint64_t v87 = v136;
      uint64_t v132 = v86;
      uint64_t v137 = v85;
      v86(v87, v88, v85);
      uint64_t v89 = *(int *)(v142 + 24);
      uint64_t v90 = (char *)v79 + v89;
      uint64_t v91 = (char *)v80 + v89;
      uint64_t v92 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v93 = swift_getEnumCaseMultiPayload();
      if (v93 == 3)
      {
        *(void *)uint64_t v90 = *(void *)v91;
        *((void *)v90 + 1) = *((void *)v91 + 1);
        int v100 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v101 = v100[5];
        uint64_t v121 = &v91[v101];
        uint64_t v127 = &v90[v101];
        uint64_t v102 = sub_22EE7F5D0();
        uint64_t v113 = *(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 16);
        swift_bridgeObjectRetain();
        v113(v127, v121, v102);
        v132(&v90[v100[6]], &v91[v100[6]], v137);
        *(void *)&v90[v100[7]] = *(void *)&v91[v100[7]];
      }
      else
      {
        if (v93 != 2)
        {
          memcpy(v90, v91, *(void *)(*(void *)(v92 - 8) + 64));
          goto LABEL_53;
        }
        *(void *)uint64_t v90 = *(void *)v91;
        *((void *)v90 + 1) = *((void *)v91 + 1);
        unint64_t v94 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v95 = v94[5];
        uint64_t v120 = &v91[v95];
        uint64_t v126 = &v90[v95];
        uint64_t v96 = sub_22EE7F5D0();
        int v112 = *(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 16);
        swift_bridgeObjectRetain();
        v112(v126, v120, v96);
        v132(&v90[v94[6]], &v91[v94[6]], v137);
        *(void *)&v90[v94[7]] = *(void *)&v91[v94[7]];
        uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v90[*(int *)(v97 + 48)] = v91[*(int *)(v97 + 48)];
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      *uint64_t v79 = *v80;
      v79[1] = v80[1];
      swift_bridgeObjectRetain();
    }
LABEL_53:
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v79, 0, 1, v54);
    goto LABEL_54;
  }
  return a1;
}

uint64_t sub_22EE0152C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_22EE01588(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(0);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    goto LABEL_31;
  }
  uint64_t v7 = _s11PriceStringOMa(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 2)
  {
    if (EnumCaseMultiPayload != 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      goto LABEL_15;
    }
    uint64_t v123 = v7;
    *a1 = *a2;
    uint64_t v9 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v10 = *(int *)(v9 + 20);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_22EE7F6E0();
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32);
    v14(v11, v12, v13);
    uint64_t v15 = *(int *)(v9 + 24);
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = _s22LocalizedPriceResourceV6FormatOMa(0);
    int v19 = swift_getEnumCaseMultiPayload();
    if (v19 == 3)
    {
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
      uint64_t v128 = a3;
      uint64_t v27 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v28 = v27[5];
      uint64_t v109 = &v17[v28];
      uint64_t v117 = &v16[v28];
      uint64_t v29 = sub_22EE7F5D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v117, v109, v29);
      v14(&v16[v27[6]], &v17[v27[6]], v13);
      uint64_t v30 = v27[7];
      a3 = v128;
      *(void *)&v16[v30] = *(void *)&v17[v30];
    }
    else
    {
      if (v19 != 2)
      {
        memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
        goto LABEL_13;
      }
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
      uint64_t v127 = a3;
      uint64_t v20 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v21 = v20[5];
      uint64_t v108 = &v17[v21];
      uint64_t v116 = &v16[v21];
      uint64_t v22 = sub_22EE7F5D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v116, v108, v22);
      v14(&v16[v20[6]], &v17[v20[6]], v13);
      uint64_t v23 = v20[7];
      a3 = v127;
      *(void *)&v16[v23] = *(void *)&v17[v23];
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
      v16[*(int *)(v24 + 48)] = v17[*(int *)(v24 + 48)];
    }
    swift_storeEnumTagMultiPayload();
LABEL_13:
    uint64_t v7 = v123;
    goto LABEL_14;
  }
  uint64_t v25 = sub_22EE7F6E0();
  (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v25 - 8) + 32))(a1, a2, v25);
  uint64_t v26 = _s20LocalizationResourceVMa();
  *(_OWORD *)((char *)a1 + *(int *)(v26 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v26 + 20));
LABEL_14:
  swift_storeEnumTagMultiPayload();
LABEL_15:
  uint64_t v31 = *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
  uint64_t v32 = (_OWORD *)((char *)a1 + v31);
  uint64_t v33 = (_OWORD *)((char *)a2 + v31);
  if (!__swift_getEnumTagSinglePayload((uint64_t)a2 + v31, 1, v7))
  {
    int v35 = swift_getEnumCaseMultiPayload();
    if (v35 == 2)
    {
      uint64_t v51 = sub_22EE7F6E0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v51 - 8) + 32))(v32, v33, v51);
      uint64_t v52 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)v32 + *(int *)(v52 + 20)) = *(_OWORD *)((char *)v33 + *(int *)(v52 + 20));
LABEL_28:
      swift_storeEnumTagMultiPayload();
      goto LABEL_29;
    }
    if (v35 != 1)
    {
      memcpy(v32, v33, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_29:
      __swift_storeEnumTagSinglePayload((uint64_t)v32, 0, 1, v7);
      goto LABEL_30;
    }
    uint64_t v129 = a3;
    *uint64_t v32 = *v33;
    uint64_t v36 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v37 = *(int *)(v36 + 20);
    int v38 = (char *)v32 + v37;
    uint64_t v39 = (char *)v33 + v37;
    uint64_t v40 = sub_22EE7F6E0();
    int v41 = (void (**)(char *, char *))(*(void *)(v40 - 8) + 32);
    uint64_t v118 = *v41;
    uint64_t v124 = v40;
    (*v41)(v38, v39);
    uint64_t v42 = *(int *)(v36 + 24);
    int v43 = (_OWORD *)((char *)v32 + v42);
    uint64_t v44 = (_OWORD *)((char *)v33 + v42);
    uint64_t v45 = _s22LocalizedPriceResourceV6FormatOMa(0);
    int v46 = swift_getEnumCaseMultiPayload();
    if (v46 == 3)
    {
      *int v43 = *v44;
      uint64_t v53 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v54 = v53[5];
      uint64_t v107 = (char *)v44 + v54;
      uint64_t v111 = (char *)v43 + v54;
      uint64_t v55 = sub_22EE7F5D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v111, v107, v55);
      ((void (*)(char *, char *, uint64_t))v118)((char *)v43 + v53[6], (char *)v44 + v53[6], v124);
      *(void *)((char *)v43 + v53[7]) = *(void *)((char *)v44 + v53[7]);
    }
    else
    {
      if (v46 != 2)
      {
        memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
        goto LABEL_27;
      }
      *int v43 = *v44;
      uint64_t v47 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v48 = v47[5];
      uint64_t v106 = (char *)v44 + v48;
      uint64_t v110 = (char *)v43 + v48;
      uint64_t v49 = sub_22EE7F5D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v110, v106, v49);
      ((void (*)(char *, char *, uint64_t))v118)((char *)v43 + v47[6], (char *)v44 + v47[6], v124);
      *(void *)((char *)v43 + v47[7]) = *(void *)((char *)v44 + v47[7]);
      uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
      *((unsigned char *)v43 + *(int *)(v50 + 48)) = *((unsigned char *)v44 + *(int *)(v50 + 48));
    }
    swift_storeEnumTagMultiPayload();
LABEL_27:
    a3 = v129;
    goto LABEL_28;
  }
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F8);
  memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
LABEL_30:
  swift_storeEnumTagMultiPayload();
LABEL_31:
  uint64_t v56 = *(int *)(a3 + 20);
  uint64_t v57 = (_OWORD *)((char *)a1 + v56);
  uint64_t v58 = (_OWORD *)((char *)a2 + v56);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v59 = _s11PriceStringOMa(0);
    int v60 = swift_getEnumCaseMultiPayload();
    if (v60 == 2)
    {
      uint64_t v76 = sub_22EE7F6E0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v76 - 8) + 32))(v57, v58, v76);
      uint64_t v77 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)v57 + *(int *)(v77 + 20)) = *(_OWORD *)((char *)v58 + *(int *)(v77 + 20));
LABEL_44:
      swift_storeEnumTagMultiPayload();
LABEL_45:
      uint64_t v81 = *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
      int v82 = (_OWORD *)((char *)v57 + v81);
      uint64_t v83 = (_OWORD *)((char *)v58 + v81);
      if (__swift_getEnumTagSinglePayload((uint64_t)v58 + v81, 1, v59))
      {
        uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F8);
        memcpy(v82, v83, *(void *)(*(void *)(v84 - 8) + 64));
LABEL_59:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      int v85 = swift_getEnumCaseMultiPayload();
      if (v85 == 2)
      {
        uint64_t v100 = sub_22EE7F6E0();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v100 - 8) + 32))(v82, v83, v100);
        uint64_t v101 = _s20LocalizationResourceVMa();
        *(_OWORD *)((char *)v82 + *(int *)(v101 + 20)) = *(_OWORD *)((char *)v83 + *(int *)(v101 + 20));
      }
      else
      {
        if (v85 != 1)
        {
          memcpy(v82, v83, *(void *)(*(void *)(v59 - 8) + 64));
LABEL_58:
          __swift_storeEnumTagSinglePayload((uint64_t)v82, 0, 1, v59);
          goto LABEL_59;
        }
        *int v82 = *v83;
        uint64_t v86 = _s22LocalizedPriceResourceVMa(0);
        uint64_t v87 = *(int *)(v86 + 20);
        uint64_t v88 = (char *)v82 + v87;
        uint64_t v89 = (char *)v83 + v87;
        uint64_t v90 = sub_22EE7F6E0();
        uint64_t v131 = *(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 32);
        v131(v88, v89, v90);
        uint64_t v91 = *(int *)(v86 + 24);
        uint64_t v92 = (char *)v82 + v91;
        int v93 = (char *)v83 + v91;
        uint64_t v94 = _s22LocalizedPriceResourceV6FormatOMa(0);
        int v95 = swift_getEnumCaseMultiPayload();
        if (v95 == 3)
        {
          *(_OWORD *)uint64_t v92 = *(_OWORD *)v93;
          uint64_t v102 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v103 = v102[5];
          int v115 = &v93[v103];
          uint64_t v122 = &v92[v103];
          uint64_t v104 = sub_22EE7F5D0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 32))(v122, v115, v104);
          v131(&v92[v102[6]], &v93[v102[6]], v90);
          *(void *)&v92[v102[7]] = *(void *)&v93[v102[7]];
        }
        else
        {
          if (v95 != 2)
          {
            memcpy(v92, v93, *(void *)(*(void *)(v94 - 8) + 64));
            goto LABEL_57;
          }
          *(_OWORD *)uint64_t v92 = *(_OWORD *)v93;
          uint64_t v96 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v97 = v96[5];
          uint64_t v114 = &v93[v97];
          uint64_t v121 = &v92[v97];
          uint64_t v98 = sub_22EE7F5D0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 32))(v121, v114, v98);
          v131(&v92[v96[6]], &v93[v96[6]], v90);
          *(void *)&v92[v96[7]] = *(void *)&v93[v96[7]];
          uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
          v92[*(int *)(v99 + 48)] = v93[*(int *)(v99 + 48)];
        }
        swift_storeEnumTagMultiPayload();
      }
LABEL_57:
      swift_storeEnumTagMultiPayload();
      goto LABEL_58;
    }
    if (v60 != 1)
    {
      memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
      goto LABEL_45;
    }
    uint64_t v130 = v59;
    *uint64_t v57 = *v58;
    uint64_t v61 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v62 = *(int *)(v61 + 20);
    uint64_t v63 = (char *)v57 + v62;
    uint64_t v64 = (char *)v58 + v62;
    uint64_t v65 = sub_22EE7F6E0();
    int v66 = *(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 32);
    v66(v63, v64, v65);
    uint64_t v67 = *(int *)(v61 + 24);
    uint64_t v68 = (char *)v57 + v67;
    int v69 = (char *)v58 + v67;
    uint64_t v70 = _s22LocalizedPriceResourceV6FormatOMa(0);
    int v71 = swift_getEnumCaseMultiPayload();
    if (v71 == 3)
    {
      *(_OWORD *)uint64_t v68 = *(_OWORD *)v69;
      uint64_t v126 = v66;
      uint64_t v78 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v79 = v78[5];
      uint64_t v113 = &v69[v79];
      uint64_t v120 = &v68[v79];
      uint64_t v80 = sub_22EE7F5D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 32))(v120, v113, v80);
      v126(&v68[v78[6]], &v69[v78[6]], v65);
      *(void *)&v68[v78[7]] = *(void *)&v69[v78[7]];
    }
    else
    {
      if (v71 != 2)
      {
        memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
        goto LABEL_43;
      }
      *(_OWORD *)uint64_t v68 = *(_OWORD *)v69;
      uint64_t v125 = v66;
      uint64_t v72 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v73 = v72[5];
      int v112 = &v69[v73];
      uint64_t v119 = &v68[v73];
      uint64_t v74 = sub_22EE7F5D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 32))(v119, v112, v74);
      v125(&v68[v72[6]], &v69[v72[6]], v65);
      *(void *)&v68[v72[7]] = *(void *)&v69[v72[7]];
      uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
      v68[*(int *)(v75 + 48)] = v69[*(int *)(v75 + 48)];
    }
    swift_storeEnumTagMultiPayload();
LABEL_43:
    uint64_t v59 = v130;
    goto LABEL_44;
  }
  memcpy(v57, v58, *(void *)(*(void *)(v6 - 8) + 64));
  return a1;
}

_OWORD *sub_22EE0226C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  sub_22EE0152C((uint64_t)a1);
  uint64_t v6 = type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = _s11PriceStringOMa(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v24 = sub_22EE7F6E0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v24 - 8) + 32))(a1, a2, v24);
      uint64_t v25 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)a1 + *(int *)(v25 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v25 + 20));
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        goto LABEL_15;
      }
      *a1 = *a2;
      uint64_t v9 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v10 = *(int *)(v9 + 20);
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = sub_22EE7F6E0();
      uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32);
      v14(v11, v12, v13);
      uint64_t v15 = *(int *)(v9 + 24);
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v19 = swift_getEnumCaseMultiPayload();
      if (v19 == 3)
      {
        *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
        uint64_t v120 = v14;
        uint64_t v26 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v27 = v26[5];
        uint64_t v106 = &v17[v27];
        uint64_t v114 = &v16[v27];
        uint64_t v28 = sub_22EE7F5D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v114, v106, v28);
        v120(&v16[v26[6]], &v17[v26[6]], v13);
        *(void *)&v16[v26[7]] = *(void *)&v17[v26[7]];
      }
      else
      {
        if (v19 != 2)
        {
          memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
          goto LABEL_14;
        }
        *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
        uint64_t v119 = v14;
        uint64_t v20 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v21 = v20[5];
        uint64_t v105 = &v17[v21];
        uint64_t v113 = &v16[v21];
        uint64_t v22 = sub_22EE7F5D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v113, v105, v22);
        v119(&v16[v20[6]], &v17[v20[6]], v13);
        *(void *)&v16[v20[7]] = *(void *)&v17[v20[7]];
        uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        v16[*(int *)(v23 + 48)] = v17[*(int *)(v23 + 48)];
      }
      swift_storeEnumTagMultiPayload();
    }
LABEL_14:
    swift_storeEnumTagMultiPayload();
LABEL_15:
    uint64_t v29 = *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
    uint64_t v30 = (_OWORD *)((char *)a1 + v29);
    uint64_t v31 = (_OWORD *)((char *)a2 + v29);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v29, 1, v7))
    {
      uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F8);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
LABEL_29:
      swift_storeEnumTagMultiPayload();
      goto LABEL_30;
    }
    int v33 = swift_getEnumCaseMultiPayload();
    if (v33 == 2)
    {
      uint64_t v48 = sub_22EE7F6E0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v48 - 8) + 32))(v30, v31, v48);
      uint64_t v49 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)v30 + *(int *)(v49 + 20)) = *(_OWORD *)((char *)v31 + *(int *)(v49 + 20));
    }
    else
    {
      if (v33 != 1)
      {
        memcpy(v30, v31, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_28:
        __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v7);
        goto LABEL_29;
      }
      _OWORD *v30 = *v31;
      uint64_t v34 = _s22LocalizedPriceResourceVMa(0);
      uint64_t v35 = *(int *)(v34 + 20);
      uint64_t v36 = (char *)v30 + v35;
      uint64_t v37 = (char *)v31 + v35;
      uint64_t v38 = sub_22EE7F6E0();
      uint64_t v121 = *(void (**)(char *, char *))(*(void *)(v38 - 8) + 32);
      uint64_t v124 = v38;
      v121(v36, v37);
      uint64_t v39 = *(int *)(v34 + 24);
      uint64_t v40 = (_OWORD *)((char *)v30 + v39);
      int v41 = (_OWORD *)((char *)v31 + v39);
      uint64_t v42 = _s22LocalizedPriceResourceV6FormatOMa(0);
      int v43 = swift_getEnumCaseMultiPayload();
      if (v43 == 3)
      {
        _OWORD *v40 = *v41;
        uint64_t v50 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v51 = v50[5];
        uint64_t v104 = (char *)v41 + v51;
        uint64_t v108 = (char *)v40 + v51;
        uint64_t v52 = sub_22EE7F5D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v108, v104, v52);
        ((void (*)(char *, char *, uint64_t))v121)((char *)v40 + v50[6], (char *)v41 + v50[6], v124);
        *(void *)((char *)v40 + v50[7]) = *(void *)((char *)v41 + v50[7]);
      }
      else
      {
        if (v43 != 2)
        {
          memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
          goto LABEL_27;
        }
        _OWORD *v40 = *v41;
        uint64_t v44 = (int *)_s15PricePropertiesVMa(0);
        uint64_t v45 = v44[5];
        uint64_t v103 = (char *)v41 + v45;
        uint64_t v107 = (char *)v40 + v45;
        uint64_t v46 = sub_22EE7F5D0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v107, v103, v46);
        ((void (*)(char *, char *, uint64_t))v121)((char *)v40 + v44[6], (char *)v41 + v44[6], v124);
        *(void *)((char *)v40 + v44[7]) = *(void *)((char *)v41 + v44[7]);
        uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
        *((unsigned char *)v40 + *(int *)(v47 + 48)) = *((unsigned char *)v41 + *(int *)(v47 + 48));
      }
      swift_storeEnumTagMultiPayload();
    }
LABEL_27:
    swift_storeEnumTagMultiPayload();
    goto LABEL_28;
  }
  memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_30:
  uint64_t v53 = *(int *)(a3 + 20);
  uint64_t v54 = (_OWORD *)((char *)a1 + v53);
  uint64_t v55 = (_OWORD *)((char *)a2 + v53);
  sub_22EE0152C((uint64_t)a1 + v53);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v56 = _s11PriceStringOMa(0);
    int v57 = swift_getEnumCaseMultiPayload();
    if (v57 == 2)
    {
      uint64_t v73 = sub_22EE7F6E0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v73 - 8) + 32))(v54, v55, v73);
      uint64_t v74 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)v54 + *(int *)(v74 + 20)) = *(_OWORD *)((char *)v55 + *(int *)(v74 + 20));
LABEL_43:
      swift_storeEnumTagMultiPayload();
LABEL_44:
      uint64_t v78 = *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
      uint64_t v79 = (_OWORD *)((char *)v54 + v78);
      uint64_t v80 = (_OWORD *)((char *)v55 + v78);
      if (__swift_getEnumTagSinglePayload((uint64_t)v55 + v78, 1, v56))
      {
        uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F8);
        memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
LABEL_58:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      int v82 = swift_getEnumCaseMultiPayload();
      if (v82 == 2)
      {
        uint64_t v97 = sub_22EE7F6E0();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v97 - 8) + 32))(v79, v80, v97);
        uint64_t v98 = _s20LocalizationResourceVMa();
        *(_OWORD *)((char *)v79 + *(int *)(v98 + 20)) = *(_OWORD *)((char *)v80 + *(int *)(v98 + 20));
      }
      else
      {
        if (v82 != 1)
        {
          memcpy(v79, v80, *(void *)(*(void *)(v56 - 8) + 64));
LABEL_57:
          __swift_storeEnumTagSinglePayload((uint64_t)v79, 0, 1, v56);
          goto LABEL_58;
        }
        *uint64_t v79 = *v80;
        uint64_t v83 = _s22LocalizedPriceResourceVMa(0);
        uint64_t v84 = *(int *)(v83 + 20);
        int v85 = (char *)v79 + v84;
        uint64_t v86 = (char *)v80 + v84;
        uint64_t v87 = sub_22EE7F6E0();
        uint64_t v126 = *(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 32);
        v126(v85, v86, v87);
        uint64_t v88 = *(int *)(v83 + 24);
        uint64_t v89 = (char *)v79 + v88;
        uint64_t v90 = (char *)v80 + v88;
        uint64_t v91 = _s22LocalizedPriceResourceV6FormatOMa(0);
        int v92 = swift_getEnumCaseMultiPayload();
        if (v92 == 3)
        {
          *(_OWORD *)uint64_t v89 = *(_OWORD *)v90;
          uint64_t v99 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v100 = v99[5];
          int v112 = &v90[v100];
          uint64_t v118 = &v89[v100];
          uint64_t v101 = sub_22EE7F5D0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 32))(v118, v112, v101);
          v126(&v89[v99[6]], &v90[v99[6]], v87);
          *(void *)&v89[v99[7]] = *(void *)&v90[v99[7]];
        }
        else
        {
          if (v92 != 2)
          {
            memcpy(v89, v90, *(void *)(*(void *)(v91 - 8) + 64));
            goto LABEL_56;
          }
          *(_OWORD *)uint64_t v89 = *(_OWORD *)v90;
          int v93 = (int *)_s15PricePropertiesVMa(0);
          uint64_t v94 = v93[5];
          uint64_t v111 = &v90[v94];
          uint64_t v117 = &v89[v94];
          uint64_t v95 = sub_22EE7F5D0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 32))(v117, v111, v95);
          v126(&v89[v93[6]], &v90[v93[6]], v87);
          *(void *)&v89[v93[7]] = *(void *)&v90[v93[7]];
          uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
          v89[*(int *)(v96 + 48)] = v90[*(int *)(v96 + 48)];
        }
        swift_storeEnumTagMultiPayload();
      }
LABEL_56:
      swift_storeEnumTagMultiPayload();
      goto LABEL_57;
    }
    if (v57 != 1)
    {
      memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
      goto LABEL_44;
    }
    uint64_t v125 = v56;
    *uint64_t v54 = *v55;
    uint64_t v58 = _s22LocalizedPriceResourceVMa(0);
    uint64_t v59 = *(int *)(v58 + 20);
    int v60 = (char *)v54 + v59;
    uint64_t v61 = (char *)v55 + v59;
    uint64_t v62 = sub_22EE7F6E0();
    uint64_t v63 = *(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32);
    v63(v60, v61, v62);
    uint64_t v64 = *(int *)(v58 + 24);
    uint64_t v65 = (char *)v54 + v64;
    int v66 = (char *)v55 + v64;
    uint64_t v67 = _s22LocalizedPriceResourceV6FormatOMa(0);
    int v68 = swift_getEnumCaseMultiPayload();
    if (v68 == 3)
    {
      *(_OWORD *)uint64_t v65 = *(_OWORD *)v66;
      uint64_t v123 = v63;
      uint64_t v75 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v76 = v75[5];
      uint64_t v110 = &v66[v76];
      uint64_t v116 = &v65[v76];
      uint64_t v77 = sub_22EE7F5D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 32))(v116, v110, v77);
      v123(&v65[v75[6]], &v66[v75[6]], v62);
      *(void *)&v65[v75[7]] = *(void *)&v66[v75[7]];
    }
    else
    {
      if (v68 != 2)
      {
        memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
        goto LABEL_42;
      }
      *(_OWORD *)uint64_t v65 = *(_OWORD *)v66;
      uint64_t v122 = v63;
      int v69 = (int *)_s15PricePropertiesVMa(0);
      uint64_t v70 = v69[5];
      uint64_t v109 = &v66[v70];
      int v115 = &v65[v70];
      uint64_t v71 = sub_22EE7F5D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(v115, v109, v71);
      v122(&v65[v69[6]], &v66[v69[6]], v62);
      *(void *)&v65[v69[7]] = *(void *)&v66[v69[7]];
      uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C9F0);
      v65[*(int *)(v72 + 48)] = v66[*(int *)(v72 + 48)];
    }
    swift_storeEnumTagMultiPayload();
LABEL_42:
    uint64_t v56 = v125;
    goto LABEL_43;
  }
  memcpy(v54, v55, *(void *)(*(void *)(v6 - 8) + 64));
  return a1;
}

uint64_t sub_22EE02F6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EE02F80);
}

uint64_t sub_22EE02F80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(0);

  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t sub_22EE02FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EE02FDC);
}

uint64_t sub_22EE02FDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(0);

  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MultilineButtonLabel()
{
  uint64_t result = qword_268627408;
  if (!qword_268627408) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_22EE03070()
{
  uint64_t result = type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_22EE030FC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EE03118@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_22EE7D670();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627418);
  return sub_22EE03164(v1, a1 + *(int *)(v3 + 44));
}

uint64_t sub_22EE03164@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v46 = a1;
  uint64_t v49 = a2;
  uint64_t v3 = type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(0);
  MEMORY[0x270FA5388](v3 - 8);
  int v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627420);
  uint64_t v47 = *(void *)(v6 - 8);
  uint64_t v48 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627428);
  uint64_t v10 = v9 - 8;
  MEMORY[0x270FA5388](v9);
  int v43 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v44 = (uint64_t)&v43 - v13;
  uint64_t v45 = v5;
  sub_22EDF6FA0(a1, (uint64_t)v5);
  uint64_t v14 = sub_22EDDF87C();
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  char v20 = v19 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v50 = v14;
  uint64_t v51 = v16;
  char v52 = v20;
  uint64_t v53 = v18;
  uint64_t v54 = KeyPath;
  uint64_t v55 = 1;
  char v56 = 0;
  sub_22EE7DF80();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268627430);
  sub_22EE03524();
  sub_22EE7E1B0();
  sub_22EB051EC(v14, v16, v20);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v22 = sub_22EE7DF10();
  uint64_t v23 = swift_getKeyPath();
  uint64_t v25 = v47;
  uint64_t v24 = v48;
  uint64_t v26 = (uint64_t)v43;
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v43, v8, v48);
  uint64_t v27 = (uint64_t *)(v26 + *(int *)(v10 + 44));
  *uint64_t v27 = v23;
  v27[1] = v22;
  (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v24);
  uint64_t v28 = v44;
  sub_22EE035CC(v26, v44);
  uint64_t v29 = type metadata accessor for MultilineButtonLabel();
  sub_22EDF6FA0(v46 + *(int *)(v29 + 20), (uint64_t)v45);
  uint64_t v30 = sub_22EDDF87C();
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  LOBYTE(v8) = v35 & 1;
  uint64_t v36 = swift_getKeyPath();
  uint64_t v37 = sub_22EE7E000();
  uint64_t v38 = swift_getKeyPath();
  uint64_t v39 = v28;
  sub_22EE03634(v28, v26);
  uint64_t v40 = v49;
  sub_22EE03634(v26, v49);
  uint64_t v41 = v40 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268627440) + 48);
  *(void *)uint64_t v41 = v30;
  *(void *)(v41 + 8) = v32;
  *(unsigned char *)(v41 + 16) = (_BYTE)v8;
  *(void *)(v41 + 24) = v34;
  *(void *)(v41 + 32) = v36;
  *(void *)(v41 + 40) = 1;
  *(unsigned char *)(v41 + 48) = 0;
  *(void *)(v41 + 56) = v38;
  *(void *)(v41 + 64) = v37;
  sub_22EADDF0C(v30, v32, (char)v8);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_22EE0369C(v39);
  sub_22EB051EC(v30, v32, (char)v8);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return sub_22EE0369C(v26);
}

unint64_t sub_22EE03524()
{
  unint64_t result = qword_268627438;
  if (!qword_268627438)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268627430);
    sub_22EADDD7C(&qword_268620C20, &qword_268620C28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627438);
  }
  return result;
}

uint64_t sub_22EE035CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627428);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22EE03634(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627428);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22EE0369C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627428);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22EE036FC()
{
  return sub_22EADDD7C(&qword_268627448, qword_268627450);
}

void sub_22EE03738()
{
  qword_26864C648 = (uint64_t)&unk_26E26AE58;
}

uint64_t sub_22EE0374C()
{
  unint64_t v2 = *(void *)v0;
  unint64_t v1 = *(void *)(v0 + 8);
  int v3 = *(unsigned __int8 *)(v0 + 16);
  int v4 = *(unsigned __int8 *)(v0 + 17);
  int v5 = *(unsigned __int8 *)(v0 + 18);
  uint64_t v6 = self;
  swift_bridgeObjectRetain();
  id v7 = objc_msgSend(v6, sel_mainBundle);
  id v8 = objc_msgSend(v7, sel_bundleIdentifier);

  if (v8)
  {
    unint64_t v9 = sub_22EE7F9E0();
    unint64_t v11 = v10;

    int v12 = v3;
    uint64_t v13 = sub_22EB70E58(v9, v11);
    unint64_t v36 = v1;
    int v14 = v4;
    unint64_t v16 = v15;
    swift_bridgeObjectRelease();
    uint64_t v17 = sub_22EE7C360();
    unint64_t v19 = v18;
    uint64_t v20 = v13;
    int v3 = v12;
    unint64_t v21 = v16;
    int v4 = v14;
    unint64_t v1 = v36;
    sub_22EB2AC74(v20, v21);
  }
  else
  {
    uint64_t v17 = 0;
    unint64_t v19 = 0xE000000000000000;
  }
  char v22 = sub_22ED75CF8(v17, v19);
  swift_bridgeObjectRelease();
  sub_22EC2AFD8(v0);
  if (v22) {
    return 0;
  }
  uint64_t v23 = sub_22EE2F164(v2, v1, v3 | (v4 << 8) | (v5 << 16));
  if (!v23) {
    return 0;
  }
  uint64_t v24 = (uint64_t)v23;
  uint64_t v25 = sub_22EE2F39C();
  if (!v25)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v26 = sub_22ED0DAE0((uint64_t)v25, v24, 1);
  if (qword_26861B920 != -1) {
    swift_once();
  }
  uint64_t v27 = *(void *)(qword_26864C648 + 16);
  if (v27)
  {
    uint64_t v28 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    do
    {
      uint64_t v30 = *(v28 - 1);
      uint64_t v29 = *v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v31 = sub_22ED0E9D8(v30, v29);
      char v33 = v32;
      swift_bridgeObjectRelease();
      if (v33)
      {
        swift_isUniquelyReferenced_nonNull_native();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26861D218);
        sub_22EE80370();
        swift_bridgeObjectRelease();
        uint64_t v34 = *(void **)(*(void *)(v26 + 56) + 8 * v31);
        sub_22EB2AC34();
        sub_22EE80390();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      v28 += 2;
      --v27;
    }
    while (v27);
    swift_bridgeObjectRelease();
  }
  return v26;
}

uint64_t initializeWithCopy for StoreViewAppearanceEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 55) = *(_DWORD *)(a2 + 55);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StoreViewAppearanceEvent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  uint64_t v4 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  return a1;
}

__n128 __swift_memcpy59_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 43) = *(_OWORD *)(a2 + 43);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for StoreViewAppearanceEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  return a1;
}

uint64_t getEnumTagSinglePayload for StoreViewAppearanceEvent(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 59))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StoreViewAppearanceEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 58) = 0;
    *(_WORD *)(result + 56) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 59) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 59) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StoreViewAppearanceEvent()
{
  return &type metadata for StoreViewAppearanceEvent;
}

uint64_t sub_22EE03CA0()
{
  return swift_getWitnessTable();
}

uint64_t sub_22EE03CEC()
{
  if ((sub_22EE7F900() & 1) == 0) {
    return 0;
  }
  type metadata accessor for Pair();
  return sub_22EE7F900() & 1;
}

uint64_t sub_22EE03D70()
{
  return sub_22EE7F830();
}

uint64_t sub_22EE03DC0()
{
  return sub_22EE807F0();
}

uint64_t sub_22EE03E20()
{
  return sub_22EE03CEC();
}

uint64_t sub_22EE03E30()
{
  return sub_22EE03DC0();
}

uint64_t sub_22EE03E3C()
{
  return sub_22EE03D70();
}

uint64_t sub_22EE03E48()
{
  return sub_22EE807F0();
}

uint64_t type metadata accessor for Pair()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_22EE03EB8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_22EE03F88(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v7 = *(unsigned int *)(*(void *)(v5 - 8) + 84);
  uint64_t v8 = *(void *)(v6 - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  if (v9 <= v7) {
    unsigned int v11 = *(_DWORD *)(*(void *)(v5 - 8) + 84);
  }
  else {
    unsigned int v11 = *(_DWORD *)(v8 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v12 = *(void *)(*(void *)(v5 - 8) + 64) + v10;
  unsigned int v13 = a2 - v11;
  if (a2 <= v11) {
    goto LABEL_24;
  }
  uint64_t v14 = (v12 & ~v10) + *(void *)(*(void *)(v6 - 8) + 64);
  char v15 = 8 * v14;
  if (v14 <= 3)
  {
    unsigned int v17 = ((v13 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v17))
    {
      int v16 = *(_DWORD *)((char *)a1 + v14);
      if (!v16) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 > 0xFF)
    {
      int v16 = *(unsigned __int16 *)((char *)a1 + v14);
      if (!*(unsigned __int16 *)((char *)a1 + v14)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 < 2)
    {
LABEL_24:
      if (v11)
      {
        if (v7 < v9)
        {
          a1 = (unsigned __int16 *)(((unint64_t)a1 + v12) & ~v10);
          uint64_t v7 = *(unsigned int *)(v8 + 84);
          uint64_t v5 = v6;
        }
        return __swift_getEnumTagSinglePayload((uint64_t)a1, v7, v5);
      }
      return 0;
    }
  }
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_24;
  }
LABEL_14:
  int v18 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v18 = 0;
  }
  if (v14)
  {
    if (v14 <= 3) {
      int v19 = v14;
    }
    else {
      int v19 = 4;
    }
    switch(v19)
    {
      case 2:
        int v20 = *a1;
        break;
      case 3:
        int v20 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v20 = *(_DWORD *)a1;
        break;
      default:
        int v20 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v20 = 0;
  }
  return v11 + (v20 | v18) + 1;
}

void sub_22EE04160(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = a1;
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(unsigned int *)(*(void *)(v7 - 8) + 84);
  uint64_t v9 = *(void *)(a4 + 24);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v8) {
    unsigned int v12 = *(_DWORD *)(*(void *)(v7 - 8) + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v13 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = *(void *)(*(void *)(v7 - 8) + 64) + v13;
  size_t v15 = (v14 & ~v13) + *(void *)(*(void *)(v9 - 8) + 64);
  char v16 = 8 * v15;
  BOOL v17 = a3 >= v12;
  unsigned int v18 = a3 - v12;
  if (v18 != 0 && v17)
  {
    if (v15 <= 3)
    {
      unsigned int v22 = ((v18 + ~(-1 << v16)) >> v16) + 1;
      if (HIWORD(v22))
      {
        int v19 = 4;
      }
      else if (v22 >= 0x100)
      {
        int v19 = 2;
      }
      else
      {
        int v19 = v22 > 1;
      }
    }
    else
    {
      int v19 = 1;
    }
  }
  else
  {
    int v19 = 0;
  }
  if (v12 < a2)
  {
    unsigned int v20 = ~v12 + a2;
    if (v15 < 4)
    {
      int v21 = (v20 >> v16) + 1;
      if (v15)
      {
        int v23 = v20 & ~(-1 << v16);
        bzero(a1, v15);
        if (v15 == 3)
        {
          *(_WORD *)uint64_t v6 = v23;
          v6[2] = BYTE2(v23);
        }
        else if (v15 == 2)
        {
          *(_WORD *)uint64_t v6 = v23;
        }
        else
        {
          *uint64_t v6 = v23;
        }
      }
    }
    else
    {
      bzero(a1, v15);
      *(_DWORD *)uint64_t v6 = v20;
      int v21 = 1;
    }
    switch(v19)
    {
      case 1:
        v6[v15] = v21;
        return;
      case 2:
        *(_WORD *)&v6[v15] = v21;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&v6[v15] = v21;
        return;
      default:
        return;
    }
  }
  switch(v19)
  {
    case 1:
      a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x22EE043ECLL);
    case 4:
      *(_DWORD *)&a1[v15] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v8 < v11)
        {
          a1 = (char *)((unint64_t)&a1[v14] & ~v13);
          uint64_t v8 = v11;
          uint64_t v7 = v9;
        }
        __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v8, v7);
      }
      return;
  }
}

uint64_t *sub_22EE04414(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_22EE7F780();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(void *)uint64_t v10 = *(void *)v11;
    v10[8] = v11[8];
    unsigned int v12 = (char *)a1 + v9;
    uint64_t v13 = (char *)a2 + v9;
    *(void *)unsigned int v12 = *(void *)v13;
    v12[8] = v13[8];
  }
  return a1;
}

uint64_t sub_22EE04508(uint64_t a1)
{
  uint64_t v2 = sub_22EE7F780();
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_22EE0456C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7F780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(void *)uint64_t v11 = *(void *)v12;
  *(unsigned char *)(v11 + 8) = *(unsigned char *)(v12 + 8);
  return a1;
}

uint64_t sub_22EE04610(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7F780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 8);
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = v10;
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  char v14 = *(unsigned char *)(v13 + 8);
  *(void *)uint64_t v12 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = v14;
  return a1;
}

uint64_t sub_22EE046B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7F780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(void *)uint64_t v11 = *(void *)v12;
  *(unsigned char *)(v11 + 8) = *(unsigned char *)(v12 + 8);
  return a1;
}

uint64_t sub_22EE0475C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7F780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(void *)uint64_t v11 = *(void *)v12;
  *(unsigned char *)(v11 + 8) = *(unsigned char *)(v12 + 8);
  return a1;
}

uint64_t sub_22EE04800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EE04814);
}

uint64_t sub_22EE04814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_22EE7F780();
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  else
  {
    unsigned int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 8);
    if (v9 >= 2) {
      int v10 = ((v9 + 2147483646) & 0x7FFFFFFF) - 1;
    }
    else {
      int v10 = -2;
    }
    if (v10 < 0) {
      int v10 = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_22EE048C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EE048D4);
}

void sub_22EE048D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_22EE7F780();
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20) + 8) = a2 + 2;
  }
}

uint64_t type metadata accessor for Subscription()
{
  uint64_t result = qword_2686274D8;
  if (!qword_2686274D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_22EE049A8()
{
  uint64_t result = sub_22EE7F780();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for Subscription.ID(uint64_t a1)
{
  return sub_22EADB1A4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s17_StoreKit_SwiftUI12SubscriptionV2IDOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_22EB0E200(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for Subscription.ID(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_22EB0E200(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_22EADB1A4(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for Subscription.ID(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_22EADB1A4(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for Subscription.ID(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Subscription.ID(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_22EE04BCC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_22EE04BD4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for Subscription.ID()
{
  return &type metadata for Subscription.ID;
}

uint64_t sub_22EE04BF0()
{
  uint64_t v1 = type metadata accessor for Subscription();
  uint64_t v2 = OUTLINED_FUNCTION_14(v1);
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_12();
  int v4 = *(unsigned __int8 *)(v0 + *(int *)(v3 + 28) + 8);
  sub_22ECC5704(v0, v0);
  if (v4 == 2) {
    _s17_StoreKit_SwiftUI012SubscriptionA25ControlStyleConfigurationV12PickerOptionV2idSSvg_0();
  }
  sub_22EB327AC(v0);
  return OUTLINED_FUNCTION_2_32();
}

uint64_t sub_22EE04C98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_22EE7F780();
  OUTLINED_FUNCTION_0_2();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_11_0();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BBA8);
  uint64_t v16 = OUTLINED_FUNCTION_14(v15);
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_11_0();
  uint64_t v19 = v18 - v17;
  sub_22EE7F300();
  uint64_t v20 = sub_22EE7F540();
  if (__swift_getEnumTagSinglePayload(v19, 1, v20) == 1)
  {
    sub_22ED8C31C(v19);
    uint64_t v21 = 1;
  }
  else
  {
    sub_22ED8C31C(v19);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v14, a1, v8);
    sub_22EE04E6C(v14, a2, a3 & 1, a4);
    uint64_t v21 = 0;
  }
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v8);
  uint64_t v22 = type metadata accessor for Subscription();
  return __swift_storeEnumTagSinglePayload(a4, v21, 1, v22);
}

uint64_t sub_22EE04E14(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a3)
  {
    if (a6)
    {
      if (a1 == a4 && a2 == a5) {
        return 1;
      }
      else {
        return sub_22EE80660();
      }
    }
    else
    {
      return 0;
    }
  }
  else if (a6)
  {
    return 0;
  }
  else
  {
    return (a1 == a4) & (((a2 & 1) == 0) ^ a5);
  }
}

uint64_t sub_22EE04E6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BBA8);
  uint64_t v8 = OUTLINED_FUNCTION_14(v7);
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_11_0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_22EE7F780();
  OUTLINED_FUNCTION_0_2();
  uint64_t v14 = v13;
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_12();
  uint64_t v29 = type metadata accessor for Subscription();
  uint64_t v16 = a4;
  uint64_t v17 = a4 + *(int *)(v29 + 24);
  *(void *)uint64_t v17 = 0;
  *(unsigned char *)(v17 + 8) = 1;
  uint64_t v18 = *(void (**)(void))(v14 + 16);
  OUTLINED_FUNCTION_6_39();
  v18();
  sub_22EE7F300();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v19(v4, v12);
  uint64_t v20 = sub_22EE7F540();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v11, 1, v20);
  uint64_t result = sub_22ED8C31C(v11);
  if (EnumTagSinglePayload == 1)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_6_39();
    v18();
    uint64_t v23 = sub_22EE7F750();
    unint64_t v25 = sub_22EC6D004(v23, v24);
    char v27 = v26;
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v19)(a1, v12);
    uint64_t v28 = v16 + *(int *)(v29 + 20);
    *(void *)uint64_t v28 = v25;
    *(unsigned char *)(v28 + 8) = v27;
    *(void *)uint64_t v17 = a2;
    *(unsigned char *)(v17 + 8) = a3 & 1;
  }
  return result;
}

uint64_t sub_22EE05020()
{
  return sub_22EE807D0();
}

uint64_t sub_22EE05054(uint64_t a1, int a2, uint64_t a3, int a4)
{
  return (a1 == a3) & (a2 ^ a4 ^ 1u);
}

uint64_t sub_22EE0506C()
{
  return sub_22EE807F0();
}

uint64_t sub_22EE050CC()
{
  return sub_22EE0506C();
}

uint64_t sub_22EE050D8()
{
  return sub_22EE05020();
}

uint64_t sub_22EE050E4()
{
  return sub_22EE807F0();
}

uint64_t sub_22EE05140(uint64_t a1, uint64_t a2)
{
  return sub_22EE05054(*(void *)a1, *(unsigned __int8 *)(a1 + 8), *(void *)a2, *(unsigned __int8 *)(a2 + 8));
}

uint64_t sub_22EE0515C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22EE7F540();
  OUTLINED_FUNCTION_0_2();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v65 - v11;
  MEMORY[0x270FA5388](v13);
  uint64_t v72 = (char *)&v65 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BBA8);
  uint64_t v16 = OUTLINED_FUNCTION_14(v15);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v65 - v20;
  MEMORY[0x270FA5388](v22);
  unint64_t v24 = (char *)&v65 - v23;
  MEMORY[0x270FA5388](v25);
  char v27 = (char *)&v65 - v26;
  uint64_t v28 = *(int *)(type metadata accessor for Subscription() + 24);
  uint64_t v29 = (void *)(a1 + v28);
  if ((*(unsigned char *)(a1 + v28 + 8) & 1) == 0)
  {
    uint64_t v30 = a2 + v28;
    if ((*(unsigned char *)(v30 + 8) & 1) == 0 && *v29 == *(void *)v30)
    {
      sub_22EE04BF0();
      uint64_t v31 = sub_22EE04BF0();
      uint64_t v33 = v32;
      char v35 = v34 & 1;
      uint64_t v36 = OUTLINED_FUNCTION_2_32();
      char v39 = sub_22EE04E14(v36, v37, v38, v31, v33, v35);
      sub_22EADB1A4(v31, v33, v35);
      uint64_t v40 = OUTLINED_FUNCTION_2_32();
      sub_22EADB1A4(v40, v41, v42);
      return v39 & 1;
    }
  }
  uint64_t v65 = v21;
  int v66 = v18;
  int v68 = v12;
  int v69 = v9;
  uint64_t v70 = v6;
  uint64_t v71 = v4;
  uint64_t v44 = sub_22EE04BF0();
  uint64_t v46 = v45;
  char v48 = v47 & 1;
  uint64_t v67 = a2;
  uint64_t v49 = sub_22EE04BF0();
  uint64_t v51 = v50;
  char v53 = v52 & 1;
  char v54 = sub_22EE04E14(v44, v46, v48, v49, v50, v52 & 1);
  sub_22EADB1A4(v49, v51, v53);
  sub_22EADB1A4(v44, v46, v48);
  if ((v54 & 1) == 0)
  {
    char v62 = 0;
    return v62 & 1;
  }
  sub_22EE7F300();
  sub_22EC6D3A0((uint64_t)v27, (uint64_t)v24);
  uint64_t v55 = v71;
  if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, v71) == 1)
  {
    uint64_t v64 = (uint64_t)v24;
LABEL_14:
    uint64_t result = sub_22ED8C31C(v64);
    __break(1u);
    return result;
  }
  uint64_t v56 = v70;
  int v57 = *(void (**)(void))(v70 + 32);
  OUTLINED_FUNCTION_3_32();
  v57();
  sub_22ED8C31C((uint64_t)v27);
  uint64_t v58 = v68;
  OUTLINED_FUNCTION_3_32();
  v57();
  uint64_t v59 = (uint64_t)v65;
  sub_22EE7F300();
  uint64_t v60 = (uint64_t)v66;
  sub_22EC6D3A0(v59, (uint64_t)v66);
  if (__swift_getEnumTagSinglePayload(v60, 1, v55) == 1)
  {
    uint64_t v64 = v60;
    goto LABEL_14;
  }
  uint64_t v61 = v69;
  OUTLINED_FUNCTION_3_32();
  v57();
  sub_22ED8C31C(v59);
  char v62 = sub_22EE7F4B0();
  uint64_t v63 = *(void (**)(char *, uint64_t))(v56 + 8);
  v63(v61, v55);
  v63(v58, v55);
  return v62 & 1;
}

uint64_t sub_22EE05510()
{
  sub_22EE7F780();
  sub_22EE05890((unint64_t *)&qword_2686241F8, MEMORY[0x263F17F80]);
  sub_22EE7F830();
  uint64_t v1 = type metadata accessor for Subscription();
  if (*(unsigned char *)(v0 + *(int *)(v1 + 20) + 8) != 2)
  {
    sub_22EE807D0();
    sub_22EE807E0();
  }
  sub_22EE807D0();
  if (*(unsigned char *)(v0 + *(int *)(v1 + 24) + 8) == 1) {
    return sub_22EE807D0();
  }
  sub_22EE807D0();
  return sub_22EE807C0();
}

uint64_t sub_22EE05620()
{
  return sub_22EE807F0();
}

uint64_t sub_22EE05660(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4)
  {
    sub_22EE807C0();
    return sub_22EE7FA60();
  }
  else
  {
    sub_22EE807C0();
    sub_22EE807E0();
    return sub_22EE807D0();
  }
}

uint64_t sub_22EE056E0(uint64_t a1, uint64_t a2, char a3)
{
  char v5 = a3 & 1;
  sub_22EE807B0();
  sub_22EE05660((uint64_t)v7, a1, a2, v5);
  return sub_22EE807F0();
}

uint64_t sub_22EE0574C()
{
  return sub_22EE807F0();
}

uint64_t sub_22EE05788()
{
  return sub_22EE056E0(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t sub_22EE05794(uint64_t a1)
{
  return sub_22EE05660(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
}

uint64_t sub_22EE057A0()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 16);
  sub_22EE807B0();
  sub_22EE05660((uint64_t)v5, v1, v2, v3);
  return sub_22EE807F0();
}

uint64_t sub_22EE057F8(uint64_t a1, uint64_t a2)
{
  return sub_22EE04E14(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t sub_22EE05818@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_22EE04BF0();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  return result;
}

uint64_t sub_22EE05848()
{
  return sub_22EE05890((unint64_t *)&qword_2686235E0, (void (*)(uint64_t))type metadata accessor for Subscription);
}

uint64_t sub_22EE05890(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Subscription.CompactID(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 9))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
      BOOL v4 = v3 >= 2;
      int v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Subscription.CompactID(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Subscription.CompactID()
{
  return &type metadata for Subscription.CompactID;
}

unint64_t sub_22EE0597C()
{
  unint64_t result = qword_2686274E8[0];
  if (!qword_2686274E8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2686274E8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_32()
{
  return v0;
}

uint64_t sub_22EE059FC()
{
  uint64_t result = sub_22EE7C910();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_22EE7F8F0();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      swift_initEnumMetadataSinglePayload();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_22EE05AE8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = *(void *)(a3 + 16);
    uint64_t v8 = sub_22EE7C910();
    uint64_t v9 = sub_22EE7F8F0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, TupleTypeMetadata2))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t v12 = *(int *)(TupleTypeMetadata2 + 48);
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
      v15((char *)a1 + v12, v14, v7);
      v15(&v13[*(int *)(v9 + 36)], &v14[*(int *)(v9 + 36)], v7);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, TupleTypeMetadata2);
    }
  }
  return a1;
}

char *sub_22EE05CA0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = sub_22EE7C910();
  uint64_t v8 = sub_22EE7F8F0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, TupleTypeMetadata2))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v10 = *(int *)(TupleTypeMetadata2 + 48);
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16);
    v13(&a1[v10], v12, v6);
    v13(&v11[*(int *)(v8 + 36)], &v12[*(int *)(v8 + 36)], v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, TupleTypeMetadata2);
  }
  return a1;
}

char *sub_22EE05E14(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = sub_22EE7C910();
  uint64_t v8 = sub_22EE7F8F0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, TupleTypeMetadata2);
  int v11 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, TupleTypeMetadata2);
  if (!EnumTagSinglePayload)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(a1, a2, v7);
      uint64_t v17 = *(int *)(TupleTypeMetadata2 + 48);
      uint64_t v18 = &a1[v17];
      uint64_t v19 = &a2[v17];
      uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 24);
      v20(&a1[v17], v19, v6);
      v20(&v18[*(int *)(v8 + 36)], &v19[*(int *)(v8 + 36)], v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 8))(a1, TupleTypeMetadata2);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
  uint64_t v12 = *(int *)(TupleTypeMetadata2 + 48);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16);
  v15(&a1[v12], v14, v6);
  v15(&v13[*(int *)(v8 + 36)], &v14[*(int *)(v8 + 36)], v6);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, TupleTypeMetadata2);
  return a1;
}

char *sub_22EE06068(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = sub_22EE7C910();
  uint64_t v8 = sub_22EE7F8F0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, TupleTypeMetadata2))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    uint64_t v10 = *(int *)(TupleTypeMetadata2 + 48);
    int v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
    v13(&a1[v10], v12, v6);
    v13(&v11[*(int *)(v8 + 36)], &v12[*(int *)(v8 + 36)], v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, TupleTypeMetadata2);
  }
  return a1;
}

char *sub_22EE061DC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = sub_22EE7C910();
  uint64_t v8 = sub_22EE7F8F0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, TupleTypeMetadata2);
  int v11 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, TupleTypeMetadata2);
  if (!EnumTagSinglePayload)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(a1, a2, v7);
      uint64_t v17 = *(int *)(TupleTypeMetadata2 + 48);
      uint64_t v18 = &a1[v17];
      uint64_t v19 = &a2[v17];
      uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 40);
      v20(&a1[v17], v19, v6);
      v20(&v18[*(int *)(v8 + 36)], &v19[*(int *)(v8 + 36)], v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 8))(a1, TupleTypeMetadata2);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
  uint64_t v12 = *(int *)(TupleTypeMetadata2 + 48);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
  v15(&a1[v12], v14, v6);
  v15(&v13[*(int *)(v8 + 36)], &v14[*(int *)(v8 + 36)], v6);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, TupleTypeMetadata2);
  return a1;
}

uint64_t sub_22EE06430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EE06444);
}

uint64_t sub_22EE06444(uint64_t a1, uint64_t a2)
{
  sub_22EE7C910();
  OUTLINED_FUNCTION_0_26();
  sub_22EE7F8F0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  unsigned int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, a2, TupleTypeMetadata2);
  if (EnumTagSinglePayload >= 2) {
    return EnumTagSinglePayload - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_22EE064D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EE064EC);
}

uint64_t sub_22EE064EC(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  sub_22EE7C910();
  OUTLINED_FUNCTION_0_26();
  sub_22EE7F8F0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();

  return __swift_storeEnumTagSinglePayload(a1, v5, a3, TupleTypeMetadata2);
}

uint64_t sub_22EE0658C(uint64_t a1)
{
  sub_22EE7C910();
  sub_22EE7F8F0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();

  return __swift_getEnumTagSinglePayload(a1, 1, TupleTypeMetadata2);
}

uint64_t sub_22EE0661C(uint64_t a1, uint64_t a2)
{
  sub_22EE7C910();
  sub_22EE7F8F0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, TupleTypeMetadata2);
}

uint64_t type metadata accessor for OptionalScaledMetric.Storage()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_22EE066D4()
{
  uint64_t result = type metadata accessor for OptionalScaledMetric.Storage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_22EE06764(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(type metadata accessor for OptionalScaledMetric.Storage() - 8);
  int v7 = *(_DWORD *)(v6 + 80);
  if ((v7 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v7 + 16) & ~(unint64_t)v7));
    swift_retain();
  }
  else
  {
    uint64_t v8 = v6;
    uint64_t v9 = sub_22EE7C910();
    uint64_t v10 = sub_22EE7F8F0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, TupleTypeMetadata2))
    {
      memcpy(a1, a2, *(void *)(v8 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      uint64_t v13 = *(int *)(TupleTypeMetadata2 + 48);
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v5 - 8) + 16);
      v16((char *)a1 + v13, v15, v5);
      v16(&v14[*(int *)(v10 + 36)], &v15[*(int *)(v10 + 36)], v5);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, TupleTypeMetadata2);
    }
  }
  return a1;
}

uint64_t sub_22EE06924(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = sub_22EE7C910();
  OUTLINED_FUNCTION_0_26();
  uint64_t v5 = sub_22EE7F8F0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t result = __swift_getEnumTagSinglePayload(a1, 1, TupleTypeMetadata2);
  if (!result)
  {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
    uint64_t v8 = a1 + *(int *)(TupleTypeMetadata2 + 48);
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    v10(v8, v3);
    uint64_t v9 = v8 + *(int *)(v5 + 36);
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(v9, v3);
  }
  return result;
}

char *sub_22EE06A6C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = sub_22EE7C910();
  uint64_t v7 = sub_22EE7F8F0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, TupleTypeMetadata2))
  {
    uint64_t v9 = type metadata accessor for OptionalScaledMetric.Storage();
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    uint64_t v10 = *(int *)(TupleTypeMetadata2 + 48);
    int v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v5 - 8) + 16);
    v13(&a1[v10], v12, v5);
    v13(&v11[*(int *)(v7 + 36)], &v12[*(int *)(v7 + 36)], v5);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, TupleTypeMetadata2);
  }
  return a1;
}

char *sub_22EE06BEC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = sub_22EE7C910();
  uint64_t v7 = sub_22EE7F8F0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, TupleTypeMetadata2);
  int v10 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, TupleTypeMetadata2);
  if (!EnumTagSinglePayload)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
      uint64_t v17 = *(int *)(TupleTypeMetadata2 + 48);
      uint64_t v18 = &a1[v17];
      uint64_t v19 = &a2[v17];
      uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v5 - 8) + 24);
      v20(&a1[v17], v19, v5);
      v20(&v18[*(int *)(v7 + 36)], &v19[*(int *)(v7 + 36)], v5);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 8))(a1, TupleTypeMetadata2);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v15 = type metadata accessor for OptionalScaledMetric.Storage();
    memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v11 = *(int *)(TupleTypeMetadata2 + 48);
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v5 - 8) + 16);
  v14(&a1[v11], v13, v5);
  v14(&v12[*(int *)(v7 + 36)], &v13[*(int *)(v7 + 36)], v5);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, TupleTypeMetadata2);
  return a1;
}

char *sub_22EE06E4C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = sub_22EE7C910();
  uint64_t v7 = sub_22EE7F8F0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, TupleTypeMetadata2))
  {
    uint64_t v9 = type metadata accessor for OptionalScaledMetric.Storage();
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v10 = *(int *)(TupleTypeMetadata2 + 48);
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v5 - 8) + 32);
    v13(&a1[v10], v12, v5);
    v13(&v11[*(int *)(v7 + 36)], &v12[*(int *)(v7 + 36)], v5);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, TupleTypeMetadata2);
  }
  return a1;
}

char *sub_22EE06FCC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = sub_22EE7C910();
  uint64_t v7 = sub_22EE7F8F0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, TupleTypeMetadata2);
  int v10 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, TupleTypeMetadata2);
  if (!EnumTagSinglePayload)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
      uint64_t v17 = *(int *)(TupleTypeMetadata2 + 48);
      uint64_t v18 = &a1[v17];
      uint64_t v19 = &a2[v17];
      uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v5 - 8) + 40);
      v20(&a1[v17], v19, v5);
      v20(&v18[*(int *)(v7 + 36)], &v19[*(int *)(v7 + 36)], v5);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 8))(a1, TupleTypeMetadata2);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v15 = type metadata accessor for OptionalScaledMetric.Storage();
    memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v11 = *(int *)(TupleTypeMetadata2 + 48);
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v5 - 8) + 32);
  v14(&a1[v11], v13, v5);
  v14(&v12[*(int *)(v7 + 36)], &v13[*(int *)(v7 + 36)], v5);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, TupleTypeMetadata2);
  return a1;
}

uint64_t sub_22EE0722C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EE07240);
}

uint64_t sub_22EE07240(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for OptionalScaledMetric.Storage();

  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t sub_22EE0728C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EE072A0);
}

uint64_t sub_22EE072A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for OptionalScaledMetric.Storage();

  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t type metadata accessor for OptionalScaledMetric()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t OUTLINED_FUNCTION_0_26()
{
  return 255;
}

uint64_t sub_22EE07318(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_0_0();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_11_0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v8 - v7, a1, a2);
  uint64_t v9 = sub_22EE7EB20();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, a2);
  return v9;
}

void sub_22EE073E4()
{
}

void sub_22EE07418()
{
}

void sub_22EE0744C()
{
  uint64_t v0 = sub_22EE7C400();
  uint64_t v1 = OUTLINED_FUNCTION_14(v0);
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_11_0();
  uint64_t v2 = sub_22EE7F990();
  uint64_t v3 = OUTLINED_FUNCTION_14(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_11_0();
  sub_22EE7F910();
  sub_22EE7C3F0();
  sub_22ED91694();
}

uint64_t sub_22EE07544()
{
  sub_22ED3A518();

  return sub_22EE7D4B0();
}

uint64_t sub_22EE0758C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SubscriptionStorePolicyConfiguration(0);
  uint64_t v3 = OUTLINED_FUNCTION_14(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_14_0();
  sub_22EE0B920();
  sub_22ED3A518();
  sub_22EE7D4C0();
  return sub_22EE0B8CC(a1, (void (*)(void))type metadata accessor for SubscriptionStorePolicyConfiguration);
}

void sub_22EE07640()
{
  uint64_t v0 = sub_22EE7C400();
  uint64_t v1 = OUTLINED_FUNCTION_14(v0);
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_11_0();
  uint64_t v2 = sub_22EE7F990();
  uint64_t v3 = OUTLINED_FUNCTION_14(v2);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_14_0();
  sub_22EE7F910();
  sub_22EE7C3F0();
  sub_22ED91694();
}

uint64_t sub_22EE07740()
{
  type metadata accessor for SubscriptionStorePolicyConfiguration.Destination(0);
  OUTLINED_FUNCTION_2_0();
  uint64_t v1 = MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v9 - v4;
  sub_22EE0B920();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  sub_22EE0B8CC((uint64_t)v5, (void (*)(void))type metadata accessor for SubscriptionStorePolicyConfiguration.Destination);
  if (EnumCaseMultiPayload != 2) {
    return 1;
  }
  type metadata accessor for SubscriptionStorePolicyConfiguration(0);
  sub_22EE0B920();
  BOOL v7 = swift_getEnumCaseMultiPayload() != 2;
  sub_22EE0B8CC((uint64_t)v3, (void (*)(void))type metadata accessor for SubscriptionStorePolicyConfiguration.Destination);
  return v7;
}

void static SubscriptionStorePolicyKind.termsOfService.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void static SubscriptionStorePolicyKind.privacyPolicy.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

void View.subscriptionStorePolicyDestination(url:for:)()
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627608);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_11_0();
  int v10 = (uint64_t (**)())(v9 - v8);
  if (*v5) {
    uint64_t v11 = sub_22EE08DDC;
  }
  else {
    uint64_t v11 = sub_22EE08BFC;
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(void *)(v12 + 24) = 0;
  sub_22EE7C2B0();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_12_12();
  v13();
  type metadata accessor for SubscriptionStorePolicyConfiguration.Destination(0);
  swift_storeEnumTagMultiPayload();
  *int v10 = sub_22EE08F28;
  v10[1] = (uint64_t (*)())v12;
  MEMORY[0x230FAB9D0](v10, v3, v6, v1);
  sub_22EE08F70((uint64_t)v10);
  OUTLINED_FUNCTION_5_0();
}

uint64_t sub_22EE079FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = a1;
  a5[1] = a2;
  uint64_t v7 = (char *)a5 + *(int *)(type metadata accessor for PolicyConfigurationModifier() + 28);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32);

  return v8(v7, a3, a4);
}

void View.subscriptionStorePolicyDestination<A>(for:destination:)()
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v17 = v2;
  uint64_t v4 = v3;
  uint64_t v16 = v5;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  OUTLINED_FUNCTION_4_2();
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_14_0();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627608);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_26_9();
  if (*v9) {
    uint64_t v13 = sub_22EE08DDC;
  }
  else {
    uint64_t v13 = sub_22EE08BFC;
  }
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v13;
  *(void *)(v14 + 24) = 0;
  uint64_t v15 = (uint64_t *)((char *)v1 + *(int *)(v11 + 28));
  v7();
  *uint64_t v15 = sub_22EE07318(v0, v4);
  type metadata accessor for SubscriptionStorePolicyConfiguration.Destination(0);
  swift_storeEnumTagMultiPayload();
  *uint64_t v1 = sub_22EE0C238;
  v1[1] = (uint64_t (*)())v14;
  MEMORY[0x230FAB9D0](v1, v16, v11, v17);
  sub_22EE08F70((uint64_t)v1);
  OUTLINED_FUNCTION_5_0();
}

void View.subscriptionStorePolicyForegroundStyle<A>(_:)()
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v23 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v22 = v10;
  OUTLINED_FUNCTION_0_0();
  uint64_t v12 = v11;
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_26_9();
  uint64_t v14 = type metadata accessor for PolicyConfigurationModifier();
  OUTLINED_FUNCTION_0_0();
  uint64_t v16 = v15;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (uint64_t *)((char *)&v21 - v18);
  uint64_t v20 = (void *)swift_allocObject();
  void v20[2] = v9;
  v20[3] = v7;
  v20[4] = v5;
  v20[5] = v3;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v0, v22, v7);
  sub_22EE079FC((uint64_t)sub_22EE08FF4, (uint64_t)v20, v0, v7, v19);
  MEMORY[0x230FAB9D0](v19, v9, v14, v5);
  (*(void (**)(void *, uint64_t))(v16 + 8))(v19, v14);
  OUTLINED_FUNCTION_5_0();
}

uint64_t (*sub_22EE07D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v9 = type metadata accessor for SubscriptionStorePolicyConfiguration(0);
  MEMORY[0x270FA5388](v9 - 8);
  sub_22EE0B920();
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  sub_22EE0BCB8();
  return sub_22EE0BE94;
}

uint64_t sub_22EE07EA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = type metadata accessor for SubscriptionStorePolicyConfiguration.Destination(0);
  MEMORY[0x270FA5388](v9 - 8);
  MEMORY[0x270FA5388](v10);
  sub_22EE0B920();
  uint64_t v11 = type metadata accessor for SubscriptionStorePolicyConfiguration(0);
  sub_22EE0B920();
  v17[3] = a2;
  v17[4] = a3;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v17);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(boxed_opaque_existential_1, a1, a2);
  sub_22EE0BF00(v4 + *(int *)(v11 + 28), (uint64_t)v16);
  uint64_t v13 = a4 + *(int *)(v11 + 24);
  *(void *)(v13 + 32) = 0;
  *(_OWORD *)uint64_t v13 = 0u;
  *(_OWORD *)(v13 + 16) = 0u;
  uint64_t v14 = a4 + *(int *)(v11 + 28);
  *(void *)(v14 + 32) = 0;
  *(_OWORD *)uint64_t v14 = 0u;
  *(_OWORD *)(v14 + 16) = 0u;
  sub_22EE0BCB8();
  sub_22EE0BCB8();
  sub_22EE0BD0C((uint64_t)v17, v13);
  return sub_22EE0BD0C((uint64_t)v16, v14);
}

void View.subscriptionStorePolicyForegroundStyle<A, B>(_:_:)()
{
  OUTLINED_FUNCTION_6_0();
  uint64_t v35 = v0;
  uint64_t v30 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v33 = v12;
  uint64_t v34 = v13;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  OUTLINED_FUNCTION_4_2();
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&TupleTypeMetadata2 - v15;
  type metadata accessor for PolicyConfigurationModifier();
  OUTLINED_FUNCTION_0_0();
  uint64_t v31 = v18;
  uint64_t v32 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (uint64_t *)((char *)&TupleTypeMetadata2 - v19);
  uint64_t v21 = (void *)swift_allocObject();
  void v21[2] = v11;
  v21[3] = v9;
  v21[4] = v7;
  v21[5] = v5;
  uint64_t v22 = v5;
  uint64_t v23 = v30;
  v21[6] = v3;
  v21[7] = v23;
  unint64_t v24 = (void *)swift_allocObject();
  void v24[2] = v11;
  v24[3] = v9;
  v24[4] = v7;
  v24[5] = v22;
  v24[6] = v3;
  v24[7] = v23;
  v24[8] = sub_22EE0900C;
  v24[9] = v21;
  uint64_t v25 = TupleTypeMetadata2;
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_12_12();
  v26();
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_12_12();
  v27();
  sub_22EE079FC((uint64_t)sub_22EE09054, (uint64_t)v24, (uint64_t)v16, v25, v20);
  MEMORY[0x230FAB9D0](v20, v11, v32, v22);
  OUTLINED_FUNCTION_5_2();
  v28();
  OUTLINED_FUNCTION_5_0();
}

uint64_t (*sub_22EE08268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7))@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v12 = type metadata accessor for SubscriptionStorePolicyConfiguration(0);
  MEMORY[0x270FA5388](v12 - 8);
  sub_22EE0B920();
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = a2;
  v13[3] = a3;
  v13[4] = a4;
  v13[5] = a5;
  uint64_t v13[6] = a6;
  v13[7] = a7;
  sub_22EE0BCB8();
  return sub_22EE0BC18;
}

uint64_t sub_22EE083B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X7>, uint64_t a7@<X8>, uint64_t a8)
{
  uint64_t v33 = a3;
  uint64_t v34 = a6;
  uint64_t v29 = a2;
  uint64_t v31 = a7;
  uint64_t v32 = a8;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v30 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v25 - v16;
  uint64_t v26 = (char *)&v25 + *(int *)(v18 + 48) - v16;
  uint64_t v19 = v26;
  uint64_t v27 = v18;
  uint64_t v28 = *(void *)(a4 - 8);
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v28 + 16);
  v20((char *)&v25 - v16, a1, a4, v15);
  uint64_t v21 = *(void *)(a5 - 8);
  uint64_t v22 = *(void (**)(char *, uint64_t))(v21 + 16);
  v22(v19, v29);
  uint64_t v23 = (uint64_t)&v13[*(int *)(TupleTypeMetadata2 + 48)];
  ((void (*)(char *, char *, uint64_t))v20)(v13, v17, a4);
  ((void (*)(uint64_t, char *, uint64_t))v22)(v23, v26, a5);
  sub_22EE08614((uint64_t)v13, v23, a4, a5, v34, v32, v31);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v27);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v23, a5);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v13, a4);
}

uint64_t sub_22EE08614@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v56 = a6;
  uint64_t v57 = a7;
  uint64_t v53 = a5;
  uint64_t v50 = type metadata accessor for SubscriptionStorePolicyConfiguration(0) - 8;
  MEMORY[0x270FA5388](v50);
  char v54 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for SubscriptionStorePolicyConfiguration.Destination(0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v63 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  char v62 = (char *)&v45 - v15;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v55 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v60 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v45 - v18;
  __n128 v21 = MEMORY[0x270FA5388](v20);
  uint64_t v46 = (char *)&v45 + *(int *)(v23 + 48) - v22;
  unint64_t v24 = v46;
  uint64_t v25 = a3;
  uint64_t v59 = a3;
  uint64_t v61 = *(void *)(a3 - 8);
  char v47 = *(void (**)(void))(v61 + 16);
  uint64_t v26 = (char *)&v45 - v22;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v47)((char *)&v45 - v22, a1, v25, v21);
  uint64_t v51 = *(void *)(a4 - 8);
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v51 + 16);
  uint64_t v28 = v24;
  uint64_t v29 = a4;
  v27(v28, a2, a4);
  char v48 = type metadata accessor for SubscriptionStorePolicyConfiguration.Destination;
  sub_22EE0B920();
  sub_22EE0B920();
  uint64_t v30 = TupleTypeMetadata2;
  char v52 = &v19[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v31 = v52;
  uint64_t v49 = v26;
  uint64_t v32 = v59;
  uint64_t v33 = v47;
  ((void (*)(char *, char *, uint64_t))v47)(v19, v26, v59);
  uint64_t v34 = v31;
  uint64_t v35 = v46;
  v27(v34, (uint64_t)v46, v29);
  v65[3] = v32;
  v65[4] = v53;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v65);
  (*(void (**)(uint64_t *, char *, uint64_t))(v61 + 32))(boxed_opaque_existential_1, v19, v32);
  uint64_t v37 = &v60[*(int *)(v30 + 48)];
  v33();
  v27(v37, (uint64_t)v35, v29);
  v64[3] = v29;
  v64[4] = v56;
  char v38 = __swift_allocate_boxed_opaque_existential_1(v64);
  uint64_t v39 = v51;
  (*(void (**)(uint64_t *, char *, uint64_t))(v51 + 32))(v38, v37, v29);
  uint64_t v40 = v50;
  uint64_t v41 = v54;
  uint64_t v42 = (uint64_t)&v54[*(int *)(v50 + 32)];
  *(void *)(v42 + 32) = 0;
  *(_OWORD *)uint64_t v42 = 0u;
  *(_OWORD *)(v42 + 16) = 0u;
  uint64_t v43 = (uint64_t)&v41[*(int *)(v40 + 36)];
  *(void *)(v43 + 32) = 0;
  *(_OWORD *)uint64_t v43 = 0u;
  *(_OWORD *)(v43 + 16) = 0u;
  sub_22EE0BCB8();
  sub_22EE0BCB8();
  sub_22EE0BD0C((uint64_t)v65, v42);
  sub_22EE0BD0C((uint64_t)v64, v43);
  sub_22EE0BCB8();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v49, TupleTypeMetadata2);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v60, v59);
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v52, v29);
}

uint64_t (*sub_22EE08AFC(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9))(uint64_t a1)
{
  uint64_t v14 = a2();
  uint64_t v16 = v15;
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = a4;
  v17[3] = a5;
  v17[4] = a6;
  uint64_t v17[5] = a7;
  v17[6] = a8;
  v17[7] = a9;
  v17[8] = v14;
  v17[9] = v16;
  return sub_22EE0BAC4;
}

uint64_t sub_22EE08B98(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
}

uint64_t (*sub_22EE08BFC())(uint64_t a1)
{
  uint64_t v0 = type metadata accessor for SubscriptionStorePolicyConfiguration(0);
  MEMORY[0x270FA5388](v0 - 8);
  sub_22EE0B920();
  swift_allocObject();
  sub_22EE0BCB8();
  return sub_22EE0BF6C;
}

uint64_t sub_22EE08D10@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  sub_22EE0B920();
  uint64_t v4 = type metadata accessor for SubscriptionStorePolicyConfiguration(0);
  sub_22EE0B920();
  sub_22EE0BF00(a1 + *(int *)(v4 + 24), (uint64_t)v9);
  sub_22EE0BF00(a1 + *(int *)(v4 + 28), (uint64_t)v8);
  uint64_t v5 = a2 + *(int *)(v4 + 24);
  *(void *)(v5 + 32) = 0;
  *(_OWORD *)uint64_t v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  uint64_t v6 = a2 + *(int *)(v4 + 28);
  *(void *)(v6 + 32) = 0;
  *(_OWORD *)uint64_t v6 = 0u;
  *(_OWORD *)(v6 + 16) = 0u;
  sub_22EE0BD0C((uint64_t)v9, v5);
  return sub_22EE0BD0C((uint64_t)v8, v6);
}

uint64_t (*sub_22EE08DDC())(uint64_t a1)
{
  uint64_t v0 = type metadata accessor for SubscriptionStorePolicyConfiguration(0);
  MEMORY[0x270FA5388](v0 - 8);
  sub_22EE0B920();
  swift_allocObject();
  sub_22EE0BCB8();
  return sub_22EE0C0A8;
}

uint64_t sub_22EE08EF0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_22EE08F28()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t type metadata accessor for SubscriptionStorePolicyConfiguration.Destination(uint64_t a1)
{
  return sub_22EAD01C0(a1, qword_268627630);
}

uint64_t sub_22EE08F70(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627608);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for PolicyConfigurationModifier()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_22EE08FE8()
{
  return OUTLINED_FUNCTION_7_7();
}

uint64_t (*sub_22EE08FF4(uint64_t a1))@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22EE07D64(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_22EE09000()
{
  return OUTLINED_FUNCTION_7_7();
}

uint64_t (*sub_22EE0900C(uint64_t a1))@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_22EE08268(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t sub_22EE0901C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t (*sub_22EE09054(uint64_t a1))(uint64_t a1)
{
  return sub_22EE08AFC(a1, *(uint64_t (**)(void))(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_22EE09088@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  sub_22EE0B920();
  uint64_t v4 = type metadata accessor for SubscriptionStorePolicyConfiguration(0);
  sub_22EE0B920();
  sub_22EE0BF00(a1 + *(int *)(v4 + 24), (uint64_t)v9);
  sub_22EE0BF00(a1 + *(int *)(v4 + 28), (uint64_t)v8);
  uint64_t v5 = a2 + *(int *)(v4 + 24);
  *(void *)(v5 + 32) = 0;
  *(_OWORD *)uint64_t v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  uint64_t v6 = a2 + *(int *)(v4 + 28);
  *(void *)(v6 + 32) = 0;
  *(_OWORD *)uint64_t v6 = 0u;
  *(_OWORD *)(v6 + 16) = 0u;
  sub_22EE0BD0C((uint64_t)v9, v5);
  return sub_22EE0BD0C((uint64_t)v8, v6);
}

uint64_t SubscriptionStorePolicyKind.hash(into:)()
{
  return sub_22EE807C0();
}

BOOL static SubscriptionStorePolicyKind.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t SubscriptionStorePolicyKind.hashValue.getter()
{
  return sub_22EE807F0();
}

unint64_t sub_22EE091FC()
{
  unint64_t result = qword_268627610;
  if (!qword_268627610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627610);
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionStorePolicyKind()
{
  return &type metadata for SubscriptionStorePolicyKind;
}

uint64_t sub_22EE09260()
{
  return OUTLINED_FUNCTION_14_19();
}

uint64_t sub_22EE092E8()
{
  return OUTLINED_FUNCTION_14_19();
}

uint64_t sub_22EE09374()
{
  return OUTLINED_FUNCTION_14_19();
}

uint64_t sub_22EE093E8()
{
  return OUTLINED_FUNCTION_14_19();
}

unsigned char *_s17_StoreKit_SwiftUI27SubscriptionStorePolicyKindVwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22EE0953CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionStorePolicyKind.Internal()
{
  return &type metadata for SubscriptionStorePolicyKind.Internal;
}

uint64_t *sub_22EE09574(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v7 = type metadata accessor for SubscriptionStorePolicyConfiguration.Destination(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    swift_retain();
    goto LABEL_7;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v9 = sub_22EE7C2B0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
LABEL_7:
    swift_storeEnumTagMultiPayload();
    goto LABEL_9;
  }
  memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_9:
  uint64_t v11 = a3[5];
  uint64_t v12 = (uint64_t *)((char *)a1 + v11);
  uint64_t v13 = (uint64_t *)((char *)a2 + v11);
  int v14 = swift_getEnumCaseMultiPayload();
  if (v14 == 1)
  {
    *uint64_t v12 = *v13;
    swift_retain();
  }
  else
  {
    if (v14)
    {
      memcpy(v12, v13, *(void *)(*(void *)(v7 - 8) + 64));
      goto LABEL_15;
    }
    uint64_t v15 = sub_22EE7C2B0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v12, v13, v15);
  }
  swift_storeEnumTagMultiPayload();
LABEL_15:
  uint64_t v16 = a3[6];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = *(uint64_t *)((char *)a2 + v16 + 24);
  if (v19)
  {
    uint64_t v20 = *((void *)v18 + 4);
    *((void *)v17 + 3) = v19;
    *((void *)v17 + 4) = v20;
    (**(void (***)(void))(v19 - 8))();
  }
  else
  {
    long long v21 = *((_OWORD *)v18 + 1);
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    *((_OWORD *)v17 + 1) = v21;
    *((void *)v17 + 4) = *((void *)v18 + 4);
  }
  uint64_t v22 = a3[7];
  uint64_t v23 = (char *)a1 + v22;
  unint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = *(uint64_t *)((char *)a2 + v22 + 24);
  if (v25)
  {
    uint64_t v26 = *((void *)v24 + 4);
    *((void *)v23 + 3) = v25;
    *((void *)v23 + 4) = v26;
    (**(void (***)(void))(v25 - 8))();
  }
  else
  {
    long long v27 = *((_OWORD *)v24 + 1);
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    *((_OWORD *)v23 + 1) = v27;
    *((void *)v23 + 4) = *((void *)v24 + 4);
  }
  return a1;
}

uint64_t sub_22EE09814(uint64_t a1, int *a2)
{
  type metadata accessor for SubscriptionStorePolicyConfiguration.Destination(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
  }
  else if (!EnumCaseMultiPayload)
  {
    uint64_t v5 = sub_22EE7C2B0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  }
  uint64_t v6 = a1 + a2[5];
  int v7 = swift_getEnumCaseMultiPayload();
  if (v7 == 1)
  {
    swift_release();
  }
  else if (!v7)
  {
    uint64_t v8 = sub_22EE7C2B0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);
  }
  uint64_t v9 = a1 + a2[6];
  if (*(void *)(v9 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v9);
  }
  uint64_t result = a1 + a2[7];
  if (*(void *)(result + 24))
  {
    return __swift_destroy_boxed_opaque_existential_1(result);
  }
  return result;
}

void *sub_22EE09950(void *a1, void *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SubscriptionStorePolicyConfiguration.Destination(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    swift_retain();
    goto LABEL_5;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v8 = sub_22EE7C2B0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
LABEL_5:
    swift_storeEnumTagMultiPayload();
    goto LABEL_7;
  }
  memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_7:
  uint64_t v9 = a3[5];
  uint64_t v10 = (void *)((char *)a1 + v9);
  uint64_t v11 = (void *)((char *)a2 + v9);
  int v12 = swift_getEnumCaseMultiPayload();
  if (v12 == 1)
  {
    *uint64_t v10 = *v11;
    swift_retain();
    goto LABEL_11;
  }
  if (!v12)
  {
    uint64_t v13 = sub_22EE7C2B0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v10, v11, v13);
LABEL_11:
    swift_storeEnumTagMultiPayload();
    goto LABEL_13;
  }
  memcpy(v10, v11, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_13:
  uint64_t v14 = a3[6];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = *(void *)((char *)a2 + v14 + 24);
  if (v17)
  {
    uint64_t v18 = *((void *)v16 + 4);
    *((void *)v15 + 3) = v17;
    *((void *)v15 + 4) = v18;
    (**(void (***)(void))(v17 - 8))();
  }
  else
  {
    long long v19 = *((_OWORD *)v16 + 1);
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v19;
    *((void *)v15 + 4) = *((void *)v16 + 4);
  }
  uint64_t v20 = a3[7];
  long long v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = *(void *)((char *)a2 + v20 + 24);
  if (v23)
  {
    uint64_t v24 = *((void *)v22 + 4);
    *((void *)v21 + 3) = v23;
    *((void *)v21 + 4) = v24;
    (**(void (***)(void))(v23 - 8))();
  }
  else
  {
    long long v25 = *((_OWORD *)v22 + 1);
    *(_OWORD *)long long v21 = *(_OWORD *)v22;
    *((_OWORD *)v21 + 1) = v25;
    *((void *)v21 + 4) = *((void *)v22 + 4);
  }
  return a1;
}

void *sub_22EE09BA0(void *a1, void *a2, int *a3)
{
  if (a1 == a2) {
    goto LABEL_14;
  }
  sub_22EE0B8CC((uint64_t)a1, (void (*)(void))type metadata accessor for SubscriptionStorePolicyConfiguration.Destination);
  uint64_t v6 = type metadata accessor for SubscriptionStorePolicyConfiguration.Destination(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    swift_retain();
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_8;
    }
    uint64_t v8 = sub_22EE7C2B0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
  }
  swift_storeEnumTagMultiPayload();
LABEL_8:
  uint64_t v9 = a3[5];
  uint64_t v10 = (void *)((char *)a1 + v9);
  uint64_t v11 = (void *)((char *)a2 + v9);
  sub_22EE0B8CC((uint64_t)a1 + v9, (void (*)(void))type metadata accessor for SubscriptionStorePolicyConfiguration.Destination);
  int v12 = swift_getEnumCaseMultiPayload();
  if (v12 == 1)
  {
    *uint64_t v10 = *v11;
    swift_retain();
    goto LABEL_12;
  }
  if (!v12)
  {
    uint64_t v13 = sub_22EE7C2B0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v10, v11, v13);
LABEL_12:
    swift_storeEnumTagMultiPayload();
    goto LABEL_14;
  }
  memcpy(v10, v11, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_14:
  uint64_t v14 = a3[6];
  uint64_t v15 = (uint64_t)a1 + v14;
  uint64_t v16 = (void *)((char *)a2 + v14);
  uint64_t v17 = *(void *)((char *)a2 + v14 + 24);
  if (*(void *)((char *)a1 + v14 + 24))
  {
    if (v17)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)v15, v16);
      goto LABEL_21;
    }
    __swift_destroy_boxed_opaque_existential_1(v15);
  }
  else if (v17)
  {
    *(void *)(v15 + 24) = v17;
    *(void *)(v15 + 32) = v16[4];
    (**(void (***)(uint64_t, char *))(v17 - 8))(v15, (char *)v16);
    goto LABEL_21;
  }
  long long v18 = *(_OWORD *)v16;
  long long v19 = *((_OWORD *)v16 + 1);
  *(void *)(v15 + 32) = v16[4];
  *(_OWORD *)uint64_t v15 = v18;
  *(_OWORD *)(v15 + 16) = v19;
LABEL_21:
  uint64_t v20 = a3[7];
  uint64_t v21 = (uint64_t)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = *((void *)v22 + 3);
  if (!*(void *)((char *)a1 + v20 + 24))
  {
    if (v23)
    {
      *(void *)(v21 + 24) = v23;
      *(void *)(v21 + 32) = *((void *)v22 + 4);
      (**(void (***)(uint64_t, char *))(v23 - 8))(v21, v22);
      return a1;
    }
LABEL_27:
    long long v24 = *(_OWORD *)v22;
    long long v25 = *((_OWORD *)v22 + 1);
    *(void *)(v21 + 32) = *((void *)v22 + 4);
    *(_OWORD *)uint64_t v21 = v24;
    *(_OWORD *)(v21 + 16) = v25;
    return a1;
  }
  if (!v23)
  {
    __swift_destroy_boxed_opaque_existential_1(v21);
    goto LABEL_27;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v21, (uint64_t *)v22);
  return a1;
}

char *sub_22EE09E90(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SubscriptionStorePolicyConfiguration.Destination(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_22EE7C2B0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v9, v10, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    uint64_t v11 = sub_22EE7C2B0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = &a1[v12];
  uint64_t v15 = &a2[v12];
  long long v16 = *((_OWORD *)v15 + 1);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *((_OWORD *)v14 + 1) = v16;
  *((void *)v14 + 4) = *((void *)v15 + 4);
  uint64_t v17 = &a1[v13];
  long long v18 = &a2[v13];
  *((void *)v17 + 4) = *((void *)v18 + 4);
  long long v19 = *((_OWORD *)v18 + 1);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v19;
  return a1;
}

char *sub_22EE0A01C(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_22EE0B8CC((uint64_t)a1, (void (*)(void))type metadata accessor for SubscriptionStorePolicyConfiguration.Destination);
    uint64_t v6 = type metadata accessor for SubscriptionStorePolicyConfiguration.Destination(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_22EE7C2B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_22EE0B8CC((uint64_t)&a1[v8], (void (*)(void))type metadata accessor for SubscriptionStorePolicyConfiguration.Destination);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v9, v10, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      uint64_t v11 = sub_22EE7C2B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = (uint64_t)&a1[v12];
  uint64_t v14 = &a2[v12];
  if (*(void *)&a1[v12 + 24]) {
    __swift_destroy_boxed_opaque_existential_1(v13);
  }
  long long v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(void *)(v13 + 32) = *((void *)v14 + 4);
  uint64_t v16 = a3[7];
  uint64_t v17 = &a1[v16];
  if (*(void *)&a1[v16 + 24]) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&a1[v16]);
  }
  long long v18 = *(_OWORD *)&a2[v16 + 16];
  *(_OWORD *)uint64_t v17 = *(_OWORD *)&a2[v16];
  *((_OWORD *)v17 + 1) = v18;
  *((void *)v17 + 4) = *(void *)&a2[v16 + 32];
  return a1;
}

uint64_t sub_22EE0A20C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EE0A220);
}

uint64_t sub_22EE0A220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for SubscriptionStorePolicyConfiguration.Destination(0);
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 24) + 24);
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    int v10 = v9 - 1;
    if (v10 < 0) {
      int v10 = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_22EE0A2BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EE0A2D0);
}

void sub_22EE0A2D0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for SubscriptionStorePolicyConfiguration.Destination(0);
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 24) = a2;
  }
}

uint64_t type metadata accessor for SubscriptionStorePolicyConfiguration(uint64_t a1)
{
  return sub_22EAD01C0(a1, (uint64_t *)&unk_268627620);
}

uint64_t sub_22EE0A37C()
{
  uint64_t result = type metadata accessor for SubscriptionStorePolicyConfiguration.Destination(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_22EE0A414(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      swift_retain();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(v6 + 64));
        return a1;
      }
      uint64_t v8 = sub_22EE7C2B0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_22EE0A530(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    return swift_release();
  }
  else if (!result)
  {
    uint64_t v3 = sub_22EE7C2B0();
    unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *sub_22EE0A5D0(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    swift_retain();
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
    }
    uint64_t v7 = sub_22EE7C2B0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_22EE0A6A8(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_22EE0B8CC((uint64_t)a1, (void (*)(void))type metadata accessor for SubscriptionStorePolicyConfiguration.Destination);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      swift_retain();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
      }
      uint64_t v7 = sub_22EE7C2B0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_22EE0A7A4(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_22EE7C2B0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_22EE0A858(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_22EE0B8CC((uint64_t)a1, (void (*)(void))type metadata accessor for SubscriptionStorePolicyConfiguration.Destination);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_22EE7C2B0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_22EE0A930()
{
  uint64_t result = sub_22EE7C2B0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_22EE0A9C4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_22EE0AA64(void *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = *a2;
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 16) & (unint64_t)~v6) + *(void *)(v5 + 64) > 0x18)
  {
    *a1 = v7;
    a1 = (void *)(v7 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v10 = a2[1];
    *a1 = v7;
    a1[1] = v10;
    uint64_t v11 = ((unint64_t)a1 + v6 + 16) & ~v6;
    uint64_t v12 = ((unint64_t)a2 + v6 + 16) & ~v6;
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    v13(v11, v12, v4);
  }
  return a1;
}

uint64_t sub_22EE0AB70(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);

  return v5(v6);
}

void *sub_22EE0ABE4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a3 + 16);
  unint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  uint64_t v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  swift_retain();
  v6(v8, v9, v5);
  return a1;
}

void *sub_22EE0AC74(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

_OWORD *sub_22EE0AD04(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_OWORD *sub_22EE0AD74(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

uint64_t sub_22EE0ADFC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v5 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v9 = a2 - v8;
  if (a2 <= v8) {
    goto LABEL_23;
  }
  uint64_t v10 = ((v7 + 16) & ~v7) + *(void *)(*(void *)(v4 - 8) + 64);
  char v11 = 8 * v10;
  if (v10 <= 3)
  {
    unsigned int v14 = ((v9 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v14))
    {
      int v12 = *(_DWORD *)((char *)a1 + v10);
      if (!v12) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 > 0xFF)
    {
      int v12 = *(unsigned __int16 *)((char *)a1 + v10);
      if (!*(unsigned __int16 *)((char *)a1 + v10)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 < 2)
    {
LABEL_23:
      if ((v6 & 0x80000000) != 0) {
        return __swift_getEnumTagSinglePayload(((unint64_t)a1 + v7 + 16) & ~v7, v6, v4);
      }
      uint64_t v16 = *(void *)a1;
      if (*(void *)a1 >= 0xFFFFFFFFuLL) {
        LODWORD(v16) = -1;
      }
      return (v16 + 1);
    }
  }
  int v12 = *((unsigned __int8 *)a1 + v10);
  if (!*((unsigned char *)a1 + v10)) {
    goto LABEL_23;
  }
LABEL_15:
  int v15 = (v12 - 1) << v11;
  if (v10 > 3) {
    int v15 = 0;
  }
  if (v10)
  {
    if (v10 > 3) {
      LODWORD(v10) = 4;
    }
    switch((int)v10)
    {
      case 2:
        LODWORD(v10) = *a1;
        break;
      case 3:
        LODWORD(v10) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v10) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v10) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v8 + (v10 | v15) + 1;
}

void sub_22EE0AF8C(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  size_t v11 = ((v10 + 16) & ~v10) + *(void *)(*(void *)(v6 - 8) + 64);
  char v12 = 8 * v11;
  BOOL v13 = a3 >= v9;
  unsigned int v14 = a3 - v9;
  if (v14 != 0 && v13)
  {
    if (v11 <= 3)
    {
      unsigned int v18 = ((v14 + ~(-1 << v12)) >> v12) + 1;
      if (HIWORD(v18))
      {
        int v15 = 4;
      }
      else if (v18 >= 0x100)
      {
        int v15 = 2;
      }
      else
      {
        int v15 = v18 > 1;
      }
    }
    else
    {
      int v15 = 1;
    }
  }
  else
  {
    int v15 = 0;
  }
  if (v9 < a2)
  {
    unsigned int v16 = ~v9 + a2;
    if (v11 < 4)
    {
      int v17 = (v16 >> v12) + 1;
      if (v11)
      {
        int v19 = v16 & ~(-1 << v12);
        bzero(a1, v11);
        if (v11 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if (v11 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v16;
      int v17 = 1;
    }
    switch(v15)
    {
      case 1:
        a1[v11] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v11] = v17;
        return;
      case 3:
        goto LABEL_42;
      case 4:
        *(_DWORD *)&a1[v11] = v17;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x22EE0B1D8);
    case 4:
      *(_DWORD *)&a1[v11] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v8 & 0x80000000) != 0)
        {
          unint64_t v21 = (unint64_t)&a1[v10 + 16] & ~v10;
          __swift_storeEnumTagSinglePayload(v21, a2, v8, v6);
        }
        else
        {
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v20 = a2 ^ 0x80000000;
            *((void *)a1 + 1) = 0;
          }
          else
          {
            uint64_t v20 = (a2 - 1);
          }
          *(void *)a1 = v20;
        }
      }
      return;
  }
}

unint64_t sub_22EE0B204()
{
  unint64_t result = qword_2686276C0;
  if (!qword_2686276C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686276C0);
  }
  return result;
}

uint64_t sub_22EE0B250()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EE0B294()
{
  uint64_t v0 = type metadata accessor for SubscriptionStorePolicyConfiguration(0);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for SubscriptionStorePolicyConfiguration.Destination(0);
  MEMORY[0x270FA5388](v3);
  MEMORY[0x270FA5388](v4);
  __swift_allocate_value_buffer(v0, qword_2686275F0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2686275F0);
  uint64_t v11 = 0;
  memset(v10, 0, sizeof(v10));
  uint64_t v9 = 0;
  memset(v8, 0, sizeof(v8));
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v5 = (uint64_t)&v2[*(int *)(v0 + 24)];
  *(void *)(v5 + 32) = 0;
  *(_OWORD *)uint64_t v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  uint64_t v6 = (uint64_t)&v2[*(int *)(v0 + 28)];
  *(void *)(v6 + 32) = 0;
  *(_OWORD *)uint64_t v6 = 0u;
  *(_OWORD *)(v6 + 16) = 0u;
  sub_22EE0BCB8();
  sub_22EE0BCB8();
  sub_22EE0BD0C((uint64_t)v10, v5);
  sub_22EE0BD0C((uint64_t)v8, v6);
  return sub_22EE0BCB8();
}

uint64_t sub_22EE0B474()
{
  if (qword_26861B928 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for SubscriptionStorePolicyConfiguration(0);

  return __swift_project_value_buffer(v0, (uint64_t)qword_2686275F0);
}

uint64_t sub_22EE0B4D8()
{
  return sub_22EE0B920();
}

uint64_t sub_22EE0B518@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v23 = a1;
  uint64_t v24 = a3;
  uint64_t v6 = *(void *)(a2 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](a1);
  swift_getWitnessTable();
  sub_22EE7D9A0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268626360);
  uint64_t v8 = sub_22EE7CEE0();
  uint64_t v22 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  BOOL v13 = (char *)&v21 - v12;
  swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v4, a2);
  unint64_t v14 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = *(void *)(a2 + 16);
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v15 + v14, (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_22EE7E460();
  swift_release();
  swift_release();
  uint64_t v17 = sub_22EADDD7C(&qword_268626358, &qword_268626360);
  uint64_t v25 = WitnessTable;
  uint64_t v26 = v17;
  uint64_t v18 = swift_getWitnessTable();
  sub_22EB69440(v10, v8, v18);
  int v19 = *(void (**)(char *, uint64_t))(v22 + 8);
  v19(v10, v8);
  sub_22EB69440(v13, v8, v18);
  return ((uint64_t (*)(char *, uint64_t))v19)(v13, v8);
}

uint64_t sub_22EE0B82C(uint64_t a1, uint64_t (**a2)(void))
{
  uint64_t v4 = (void (*)(char *))(*a2)();
  sub_22EE0B8CC(a1, (void (*)(void))type metadata accessor for SubscriptionStorePolicyConfiguration);
  uint64_t v5 = type metadata accessor for PolicyConfigurationModifier();
  v4((char *)a2 + *(int *)(v5 + 28));

  return swift_release();
}

uint64_t sub_22EE0B8CC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_5_2();
  v3();
  return a1;
}

uint64_t sub_22EE0B920()
{
  uint64_t v1 = OUTLINED_FUNCTION_21_25();
  v2(v1);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_12_12();
  v3();
  return v0;
}

uint64_t sub_22EE0B978()
{
  type metadata accessor for PolicyConfigurationModifier();
  swift_release();
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_5_2();
  v0();

  return swift_deallocObject();
}

uint64_t sub_22EE0BA60(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for PolicyConfigurationModifier();
  OUTLINED_FUNCTION_4_1(v3);
  uint64_t v5 = (uint64_t (**)(void))(v1
                          + ((*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)));

  return sub_22EE0B82C(a1, v5);
}

uint64_t sub_22EE0BAC4(uint64_t a1)
{
  return sub_22EE08B98(a1, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 64));
}

uint64_t sub_22EE0BAF8()
{
  OUTLINED_FUNCTION_3_33();
  int v1 = OUTLINED_FUNCTION_6_40();
  if (v1 == 1)
  {
    swift_release();
  }
  else if (!v1)
  {
    sub_22EE7C2B0();
    OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_5_2();
    v2();
  }
  int v3 = OUTLINED_FUNCTION_10_31();
  if (v3 == 1)
  {
    swift_release();
  }
  else if (!v3)
  {
    sub_22EE7C2B0();
    OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_5_2();
    v4();
  }
  uint64_t v5 = OUTLINED_FUNCTION_17_20(*(int *)(v0 + 24));
  if (v6) {
    __swift_destroy_boxed_opaque_existential_1(v5);
  }
  uint64_t v7 = OUTLINED_FUNCTION_17_20(*(int *)(v0 + 28));
  if (v8) {
    __swift_destroy_boxed_opaque_existential_1(v7);
  }
  OUTLINED_FUNCTION_16_28();

  return swift_deallocObject();
}

uint64_t sub_22EE0BC18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[6];
  uint64_t v10 = v3[7];
  uint64_t v11 = type metadata accessor for SubscriptionStorePolicyConfiguration(0);
  OUTLINED_FUNCTION_4_1(v11);
  return sub_22EE083B8(a1, a2, (uint64_t)v3 + ((*(unsigned __int8 *)(v12 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), v7, v8, v9, a3, v10);
}

uint64_t sub_22EE0BCB8()
{
  uint64_t v2 = OUTLINED_FUNCTION_21_25();
  v3(v2);
  OUTLINED_FUNCTION_2_0();
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v0, v1);
  return v0;
}

uint64_t sub_22EE0BD0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686239F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_22EE0BD74()
{
  OUTLINED_FUNCTION_3_33();
  int v1 = OUTLINED_FUNCTION_6_40();
  if (v1 == 1)
  {
    swift_release();
  }
  else if (!v1)
  {
    sub_22EE7C2B0();
    OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_5_2();
    v2();
  }
  int v3 = OUTLINED_FUNCTION_10_31();
  if (v3 == 1)
  {
    swift_release();
  }
  else if (!v3)
  {
    sub_22EE7C2B0();
    OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_5_2();
    v4();
  }
  uint64_t v5 = OUTLINED_FUNCTION_17_20(*(int *)(v0 + 24));
  if (v6) {
    __swift_destroy_boxed_opaque_existential_1(v5);
  }
  uint64_t v7 = OUTLINED_FUNCTION_17_20(*(int *)(v0 + 28));
  if (v8) {
    __swift_destroy_boxed_opaque_existential_1(v7);
  }
  OUTLINED_FUNCTION_16_28();

  return swift_deallocObject();
}

uint64_t sub_22EE0BE94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v6 = *(void *)(v2 + 40);
  uint64_t v7 = type metadata accessor for SubscriptionStorePolicyConfiguration(0);
  OUTLINED_FUNCTION_4_1(v7);
  return sub_22EE07EA0(a1, v5, v6, a2);
}

uint64_t sub_22EE0BF00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686239F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22EE0BF6C(uint64_t a1)
{
  return sub_22EE0C0C0(a1, (uint64_t (*)(uint64_t, uint64_t))sub_22EE08D10);
}

uint64_t objectdestroy_43Tm()
{
  OUTLINED_FUNCTION_3_33();
  int v1 = OUTLINED_FUNCTION_6_40();
  if (v1 == 1)
  {
    swift_release();
  }
  else if (!v1)
  {
    sub_22EE7C2B0();
    OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_5_2();
    v2();
  }
  int v3 = OUTLINED_FUNCTION_10_31();
  if (v3 == 1)
  {
    swift_release();
  }
  else if (!v3)
  {
    sub_22EE7C2B0();
    OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_5_2();
    v4();
  }
  uint64_t v5 = OUTLINED_FUNCTION_17_20(*(int *)(v0 + 24));
  if (v6) {
    __swift_destroy_boxed_opaque_existential_1(v5);
  }
  uint64_t v7 = OUTLINED_FUNCTION_17_20(*(int *)(v0 + 28));
  if (v8) {
    __swift_destroy_boxed_opaque_existential_1(v7);
  }
  OUTLINED_FUNCTION_16_28();

  return swift_deallocObject();
}

uint64_t sub_22EE0C0A8(uint64_t a1)
{
  return sub_22EE0C0C0(a1, (uint64_t (*)(uint64_t, uint64_t))sub_22EE09088);
}

uint64_t sub_22EE0C0C0(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = type metadata accessor for SubscriptionStorePolicyConfiguration(0);
  OUTLINED_FUNCTION_4_1(v4);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return a2(a1, v6);
}

ValueMetadata *_s33PolicyConfigurationEnvironmentKeyOMa()
{
  return &_s33PolicyConfigurationEnvironmentKeyON;
}

uint64_t sub_22EE0C144()
{
  return swift_getWitnessTable();
}

uint64_t OUTLINED_FUNCTION_3_33()
{
  return type metadata accessor for SubscriptionStorePolicyConfiguration(0);
}

uint64_t OUTLINED_FUNCTION_6_40()
{
  type metadata accessor for SubscriptionStorePolicyConfiguration.Destination(0);
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_10_31()
{
  return swift_getEnumCaseMultiPayload();
}

void OUTLINED_FUNCTION_11_27()
{
}

uint64_t OUTLINED_FUNCTION_16_28()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_21_25()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_22_23()
{
  type metadata accessor for PolicyConfigurationModifier();
  return sub_22EE7CEE0();
}

ValueMetadata *type metadata accessor for SubscriptionPickerOptionEffectiveTint()
{
  return &type metadata for SubscriptionPickerOptionEffectiveTint;
}

uint64_t sub_22EE0C33C()
{
  uint64_t v0 = sub_22EE7CDA0();
  MEMORY[0x270FA5388](v0);
  if (qword_26861B8C0 != -1) {
    swift_once();
  }
  if (byte_2686241F1 == 1
    || byte_2686241F1 == 3 && (storekit_dyld_fall_2024_os_versions(), dyld_program_minos_at_least()))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2686276C8);
    uint64_t v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_22EE89390;
    uint64_t v2 = MEMORY[0x263F18BD0];
    *(void *)(v1 + 56) = v0;
    *(void *)(v1 + 64) = v2;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v1 + 32));
    sub_22EE7CD90();
    *(void *)(v1 + 72) = sub_22EE7E740();
    *(unsigned char *)(v1 + 80) = 1;
    *(void *)(v1 + 88) = sub_22EE7E740();
    *(unsigned char *)(v1 + 136) = 0;
    *(void *)(v1 + 144) = sub_22EE7E780();
    *(unsigned char *)(v1 + 192) = 0;
    sub_22EE7E7F0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2686276D0);
    sub_22EE0C5F8();
    sub_22EADDD7C((unint64_t *)&qword_2686276E0, &qword_2686276D0);
    sub_22EE7E860();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26861D1F8);
    sub_22EADDD7C(&qword_2686276E8, &qword_26861D1F8);
    return sub_22EE7C9C0();
  }
  if (!sub_22EE7D100())
  {
LABEL_11:
    sub_22EE7CD90();
    return sub_22EE7C9C0();
  }
  sub_22EE7E7C0();
  char v3 = sub_22EE7E760();
  swift_release();
  if ((v3 & 1) == 0)
  {
    swift_release();
    goto LABEL_11;
  }
  sub_22EE7E740();
  uint64_t v4 = sub_22EE7C9C0();
  swift_release();
  return v4;
}

uint64_t sub_22EE0C5D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_22EE0C33C();
  *a1 = result;
  return result;
}

unint64_t sub_22EE0C5F8()
{
  unint64_t result = qword_2686276D8;
  if (!qword_2686276D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686276D0);
    sub_22EAEE5F8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686276D8);
  }
  return result;
}

uint64_t PurchaseAction.callAsFunction(_:options:)()
{
  OUTLINED_FUNCTION_9_12();
  v1[5] = v2;
  v1[6] = v0;
  v1[3] = v3;
  v1[4] = v4;
  v1[7] = type metadata accessor for SKLogger();
  v1[8] = swift_task_alloc();
  uint64_t v5 = sub_22EE7DE00();
  v1[9] = v5;
  v1[10] = *(void *)(v5 - 8);
  v1[11] = swift_task_alloc();
  OUTLINED_FUNCTION_16_10();
  return MEMORY[0x270FA2498](v6, v7, v8);
}

uint64_t sub_22EE0C758()
{
  v0[2] = 0;
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = v0[9];
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 16))(v1, v0[6], v3);
  *(void *)(swift_task_alloc() + 16) = v0 + 2;
  sub_22EE7DDF0();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = (void *)v0[2];
  if (v4)
  {
    v0[19] = v4;
    id v5 = v4;
    uint64_t v6 = (void *)swift_task_alloc();
    v0[20] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_22EE0D008;
    uint64_t v7 = OUTLINED_FUNCTION_13_31();
    return MEMORY[0x270EFE728](v7);
  }
  else
  {
    uint64_t v8 = v0[6];
    uint64_t v9 = *(void *)(v8 + *(int *)(type metadata accessor for PurchaseAction() + 20));
    v0[12] = v9;
    if (v9)
    {
      v0[13] = sub_22EE7FD30();
      v0[14] = sub_22EE7FD20();
      uint64_t v11 = sub_22EE7FD00();
      return MEMORY[0x270FA2498](sub_22EE0CA70, v11, v10);
    }
    else
    {
      v0[2] = 0;
      if (qword_26861B778 != -1) {
        swift_once();
      }
      uint64_t v12 = v0[8];
      uint64_t v13 = __swift_project_value_buffer(v0[7], (uint64_t)qword_26864C398);
      sub_22EB107F0(v13, v12);
      unint64_t v14 = (void *)sub_22EE7C550();
      sub_22EE7C570();
      OUTLINED_FUNCTION_7_2();
      uint64_t v15 = OUTLINED_FUNCTION_8_16();
      v16(v15);
      os_log_type_t v17 = sub_22EE7FFD0();
      if (OUTLINED_FUNCTION_6_41(v17))
      {
        *(_WORD *)swift_slowAlloc() = 0;
        OUTLINED_FUNCTION_18_9(&dword_22EAC6000, v18, v19, "Could not get UI anchor for in-app purchase.");
        OUTLINED_FUNCTION_4_37();
      }

      sub_22EE7F020();
      sub_22ED8AFD4();
      OUTLINED_FUNCTION_1_34();
      OUTLINED_FUNCTION_9_38();
      OUTLINED_FUNCTION_8_35();
      v20();
      swift_willThrow();
      OUTLINED_FUNCTION_7_29();
      swift_task_dealloc();
      swift_task_dealloc();
      OUTLINED_FUNCTION_5_29();
      return v21();
    }
  }
}

uint64_t sub_22EE0CA70()
{
  OUTLINED_FUNCTION_9_12();
  uint64_t v1 = *(void **)(v0 + 96);
  swift_release();
  *(void *)(v0 + 120) = objc_msgSend(v1, sel__visibleWindows);
  OUTLINED_FUNCTION_16_10();
  return MEMORY[0x270FA2498](v2, v3, v4);
}

uint64_t sub_22EE0CAF0()
{
  uint64_t v1 = *(void **)(v0 + 120);
  sub_22EE0D310();
  unint64_t v2 = sub_22EE7FC60();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_22EE803E0();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    if ((v2 & 0xC000000000000001) != 0)
    {
      id v3 = (id)MEMORY[0x230FAD550](0, v2);
      goto LABEL_6;
    }
    if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v3 = *(id *)(v2 + 32);
LABEL_6:
      *(void *)(v0 + 128) = v3;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 136) = sub_22EE7FD20();
      uint64_t v5 = sub_22EE7FD00();
      return MEMORY[0x270FA2498](sub_22EE0CD7C, v5, v4);
    }
    __break(1u);
    goto LABEL_18;
  }
  swift_bridgeObjectRelease();

  *(void *)(v0 + 16) = 0;
  if (qword_26861B778 != -1) {
LABEL_18:
  }
    swift_once();
  uint64_t v7 = *(void *)(v0 + 64);
  uint64_t v8 = __swift_project_value_buffer(*(void *)(v0 + 56), (uint64_t)qword_26864C398);
  sub_22EB107F0(v8, v7);
  uint64_t v9 = (void *)sub_22EE7C550();
  sub_22EE7C570();
  OUTLINED_FUNCTION_7_2();
  uint64_t v10 = OUTLINED_FUNCTION_8_16();
  v11(v10);
  os_log_type_t v12 = sub_22EE7FFD0();
  if (OUTLINED_FUNCTION_6_41(v12))
  {
    *(_WORD *)swift_slowAlloc() = 0;
    OUTLINED_FUNCTION_18_9(&dword_22EAC6000, v13, v14, "Could not get UI anchor for in-app purchase.");
    OUTLINED_FUNCTION_4_37();
  }

  sub_22EE7F020();
  sub_22ED8AFD4();
  OUTLINED_FUNCTION_1_34();
  OUTLINED_FUNCTION_9_38();
  OUTLINED_FUNCTION_8_35();
  v15();
  swift_willThrow();
  OUTLINED_FUNCTION_7_29();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_5_29();
  return v16();
}

uint64_t sub_22EE0CD7C()
{
  OUTLINED_FUNCTION_9_12();
  uint64_t v1 = *(void **)(v0 + 128);
  swift_release();
  *(void *)(v0 + 144) = objc_msgSend(v1, sel_rootViewController);

  OUTLINED_FUNCTION_16_10();
  return MEMORY[0x270FA2498](v2, v3, v4);
}

uint64_t sub_22EE0CDFC()
{
  uint64_t v1 = *(void *)(v0 + 144);

  *(void *)(v0 + 16) = v1;
  if (v1)
  {
    uint64_t v2 = *(void **)(v0 + 144);
    *(void *)(v0 + 152) = v2;
    id v3 = v2;
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_22EE0D008;
    uint64_t v5 = OUTLINED_FUNCTION_13_31();
    return MEMORY[0x270EFE728](v5);
  }
  else
  {
    if (qword_26861B778 != -1) {
      swift_once();
    }
    uint64_t v6 = *(void *)(v0 + 64);
    uint64_t v7 = __swift_project_value_buffer(*(void *)(v0 + 56), (uint64_t)qword_26864C398);
    sub_22EB107F0(v7, v6);
    uint64_t v8 = (void *)sub_22EE7C550();
    sub_22EE7C570();
    OUTLINED_FUNCTION_7_2();
    uint64_t v9 = OUTLINED_FUNCTION_8_16();
    v10(v9);
    os_log_type_t v11 = sub_22EE7FFD0();
    if (OUTLINED_FUNCTION_6_41(v11))
    {
      *(_WORD *)swift_slowAlloc() = 0;
      OUTLINED_FUNCTION_18_9(&dword_22EAC6000, v12, v13, "Could not get UI anchor for in-app purchase.");
      OUTLINED_FUNCTION_4_37();
    }

    sub_22EE7F020();
    sub_22ED8AFD4();
    OUTLINED_FUNCTION_1_34();
    OUTLINED_FUNCTION_9_38();
    OUTLINED_FUNCTION_8_35();
    v14();
    swift_willThrow();
    OUTLINED_FUNCTION_7_29();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_5_29();
    return v15();
  }
}

uint64_t sub_22EE0D008()
{
  OUTLINED_FUNCTION_9_12();
  *(void *)(*(void *)v1 + 168) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_16_10();
  return MEMORY[0x270FA2498](v2, v3, v4);
}

uint64_t sub_22EE0D114()
{
  OUTLINED_FUNCTION_9_12();

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_22EE0D194()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t EnvironmentValues.purchase.getter@<X0>(uint64_t a1@<X8>)
{
  sub_22EE7D330();
  uint64_t v2 = (void *)sub_22EE7D1C0();
  id v3 = objc_msgSend(v2, sel_scene);

  uint64_t result = type metadata accessor for PurchaseAction();
  *(void *)(a1 + *(int *)(result + 20)) = v3;
  return result;
}

void sub_22EE0D280(void *a1, id *a2)
{
  id v3 = *a2;
  *a2 = a1;
  id v2 = a1;
}

void sub_22EE0D2C0(void *a1)
{
  sub_22EE0D280(a1, *(id **)(v1 + 16));
}

uint64_t type metadata accessor for PurchaseAction()
{
  uint64_t result = qword_268627700;
  if (!qword_268627700) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_22EE0D310()
{
  unint64_t result = qword_2686276F8;
  if (!qword_2686276F8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2686276F8);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for PurchaseAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_22EE7DE00();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v9;
    id v10 = v9;
  }
  return a1;
}

void destroy for PurchaseAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22EE7DE00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = *(void **)(a1 + *(int *)(a2 + 20));
}

uint64_t initializeWithCopy for PurchaseAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7DE00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v8;
  id v9 = v8;
  return a1;
}

uint64_t assignWithCopy for PurchaseAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7DE00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a1 + v7);
  id v9 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v9;
  id v10 = v9;

  return a1;
}

uint64_t initializeWithTake for PurchaseAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7DE00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for PurchaseAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7DE00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  return a1;
}

uint64_t getEnumTagSinglePayload for PurchaseAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EE0D6B0);
}

uint64_t sub_22EE0D6B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_22EE7DE00();
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    int v10 = v9 - 1;
    if (v10 < 0) {
      int v10 = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for PurchaseAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EE0D75C);
}

void sub_22EE0D75C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_22EE7DE00();
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = a2;
  }
}

uint64_t sub_22EE0D7E4()
{
  uint64_t result = sub_22EE7DE00();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_34()
{
  return swift_allocError();
}

void OUTLINED_FUNCTION_4_37()
{
  JUMPOUT(0x230FAE500);
}

uint64_t OUTLINED_FUNCTION_5_29()
{
  return v0 + 8;
}

BOOL OUTLINED_FUNCTION_6_41(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

void OUTLINED_FUNCTION_7_29()
{
  uint64_t v2 = *(void **)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_13_31()
{
  return *(void *)(v0 + 24);
}

void sub_22EE0D934(float *a1@<X0>, float *a2@<X1>, float *a3@<X8>)
{
  *a3 = j__powf(*a1, *a2);
}

unint64_t sub_22EE0D964(uint64_t a1)
{
  unint64_t result = sub_22EE0D98C();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_22EE0D98C()
{
  unint64_t result = qword_268627710;
  if (!qword_268627710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627710);
  }
  return result;
}

void sub_22EE0D9D8(long double *a1@<X0>, long double *a2@<X1>, long double *a3@<X8>)
{
  *a3 = j__pow(*a1, *a2);
}

unint64_t sub_22EE0DA08(uint64_t a1)
{
  unint64_t result = sub_22EE0DA30();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_22EE0DA30()
{
  unint64_t result = qword_268627718;
  if (!qword_268627718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627718);
  }
  return result;
}

unint64_t sub_22EE0DA80(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_22EE0DAB0();
  unint64_t result = sub_22EE0DAFC();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_22EE0DAB0()
{
  unint64_t result = qword_268627720;
  if (!qword_268627720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627720);
  }
  return result;
}

unint64_t sub_22EE0DAFC()
{
  unint64_t result = qword_268627728;
  if (!qword_268627728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627728);
  }
  return result;
}

unint64_t sub_22EE0DB4C()
{
  unint64_t result = qword_268627730;
  if (!qword_268627730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627730);
  }
  return result;
}

double sub_22EE0DB98()
{
  sub_22EBE9C08();
  swift_retain();
  uint64_t v0 = (void *)sub_22EE80000();
  double v1 = sub_22EE0DC0C();

  return v1;
}

double sub_22EE0DC0C()
{
  v5[1] = *MEMORY[0x263EF8340];
  v5[0] = 0;
  uint64_t v3 = 0;
  uint64_t v4 = 0;
  uint64_t v2 = 0;
  objc_msgSend(v0, sel_getRed_green_blue_alpha_, v5, &v4, &v3, &v2);
  return *(double *)v5;
}

void sub_22EE0DC8C(double *a1, void *a2, void *a3, void *a4)
{
  *a1 = sub_22EE0DB98();
  *a2 = v7;
  *a3 = v8;
  *a4 = v9;
}

unint64_t sub_22EE0DCE4()
{
  unint64_t result = qword_268627738[0];
  if (!qword_268627738[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_268627738);
  }
  return result;
}

float sub_22EE0DD30()
{
  sub_22EE7E810();
  float v1 = v0;
  OUTLINED_FUNCTION_0_27();
  sub_22EE7E830();
  OUTLINED_FUNCTION_0_27();
  sub_22EE7E820();
  return v1;
}

void sub_22EE0DD98(float *a1, _DWORD *a2, _DWORD *a3, _DWORD *a4)
{
  *a1 = sub_22EE0DD30();
  *a2 = v7;
  *a3 = v8;
  *a4 = v9;
}

double sub_22EE0DDF0()
{
  float v1 = v0;
  uint64_t v2 = CGColorGetColorSpace(v0);
  if (v2 && (uint64_t v3 = v2, Model = CGColorSpaceGetModel(v2), v3, Model == kCGColorSpaceModelRGB))
  {
    CGColorRef CopyByMatchingToColorSpace = v1;
  }
  else
  {
    DeviceRGB = CGColorSpaceCreateDeviceRGB();
    CGColorRef CopyByMatchingToColorSpace = CGColorCreateCopyByMatchingToColorSpace(DeviceRGB, kCGRenderingIntentDefault, v1, 0);

    if (!CopyByMatchingToColorSpace)
    {
LABEL_9:
      CGColorGetAlpha(v1);
      double v8 = 0.0;
      goto LABEL_10;
    }
  }
  CGColorRef CopyByMatchingToColorSpace = CopyByMatchingToColorSpace;
  uint64_t v7 = sub_22EE7FF90();

  if (!v7) {
    goto LABEL_9;
  }
  if (*(void *)(v7 + 16) != 4)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  double v8 = *(double *)(v7 + 32);
  swift_bridgeObjectRelease();
LABEL_10:

  return v8;
}

void sub_22EE0DEF0(double *a1, void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
}

void sub_22EE0DF08(double *a1, void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
}

void sub_22EE0DF20(double *a1, void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6, double (*a7)(void))
{
  *a1 = a7();
  *a2 = v10;
  *a3 = v11;
  *a4 = v12;
}

uint64_t sub_22EE0DF78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t sub_22EE0DF8C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_22EE0DFA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

float OUTLINED_FUNCTION_0_27()
{
  return v0;
}

ValueMetadata *type metadata accessor for AnySubscriptionOfferViewStyle()
{
  return &type metadata for AnySubscriptionOfferViewStyle;
}

uint64_t sub_22EE0DFDC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EE0DFF8@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_22EE0E028@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v19[1] = a2;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v7 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v19 - v14;
  sub_22ED89954();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v2, v3, v8);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_22EB69440(v12, AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v17 = *(void (**)(char *, uint64_t))(v10 + 8);
  v17(v12, AssociatedTypeWitness);
  sub_22EB69440(v15, AssociatedTypeWitness, AssociatedConformanceWitness);
  return ((uint64_t (*)(char *, uint64_t))v17)(v15, AssociatedTypeWitness);
}

uint64_t sub_22EE0E260@<X0>(uint64_t *a1@<X8>)
{
  return sub_22EE0DFF8(*v1, a1);
}

uint64_t sub_22EE0E268()
{
  uint64_t result = type metadata accessor for SubscriptionOfferViewStyleProtocolConfiguration();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_22EE7DB10();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void *sub_22EE0E334(_OWORD *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    if (*a2)
    {
      uint64_t v7 = a2[1];
      *uint64_t v4 = *a2;
      v4[1] = v7;
      swift_retain();
    }
    else
    {
      *a1 = *(_OWORD *)a2;
    }
    int v9 = (int *)type metadata accessor for SubscriptionOfferViewStyleProtocolConfiguration();
    uint64_t v10 = v9[5];
    uint64_t v11 = (void *)((char *)v4 + v10);
    uint64_t v12 = (void **)((char *)a2 + v10);
    uint64_t v13 = type metadata accessor for Product.TaskState(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v17 = sub_22EE7F780();
      (*(void (**)(void *, void **, uint64_t))(*(void *)(v17 - 8) + 16))(v11, v12, v17);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
        goto LABEL_12;
      }
      uint64_t v15 = *v12;
      id v16 = v15;
      void *v11 = v15;
    }
    swift_storeEnumTagMultiPayload();
LABEL_12:
    *(void *)((char *)v4 + v9[6]) = *(void *)((char *)a2 + v9[6]);
    *(void *)((char *)v4 + v9[7]) = *(void *)((char *)a2 + v9[7]);
    *((unsigned char *)v4 + v9[8]) = *((unsigned char *)a2 + v9[8]);
    uint64_t v18 = *(int *)(a3 + 36);
    uint64_t v19 = (char *)v4 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = sub_22EE7DB10();
    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
    swift_retain();
    swift_retain();
    v22(v19, v20, v21);
    return v4;
  }
  uint64_t v8 = *a2;
  *uint64_t v4 = *a2;
  uint64_t v4 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return v4;
}

uint64_t sub_22EE0E538(void *a1, uint64_t a2)
{
  if (*a1) {
    swift_release();
  }
  uint64_t v4 = (id *)((char *)a1 + *(int *)(type metadata accessor for SubscriptionOfferViewStyleProtocolConfiguration() + 20));
  type metadata accessor for Product.TaskState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v6 = sub_22EE7F780();
    (*(void (**)(id *, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
  }
  else if (!EnumCaseMultiPayload)
  {
  }
  swift_release();
  swift_release();
  uint64_t v7 = (char *)a1 + *(int *)(a2 + 36);
  uint64_t v8 = sub_22EE7DB10();
  int v9 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

void *sub_22EE0E654(void *a1, void *a2, uint64_t a3)
{
  if (*a2)
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  uint64_t v7 = (int *)type metadata accessor for SubscriptionOfferViewStyleProtocolConfiguration();
  uint64_t v8 = v7[5];
  int v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (void **)((char *)a2 + v8);
  uint64_t v11 = type metadata accessor for Product.TaskState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v15 = sub_22EE7F780();
    (*(void (**)(void *, void **, uint64_t))(*(void *)(v15 - 8) + 16))(v9, v10, v15);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
      goto LABEL_10;
    }
    uint64_t v13 = *v10;
    id v14 = v13;
    *int v9 = v13;
  }
  swift_storeEnumTagMultiPayload();
LABEL_10:
  *(void *)((char *)a1 + v7[6]) = *(void *)((char *)a2 + v7[6]);
  *(void *)((char *)a1 + v7[7]) = *(void *)((char *)a2 + v7[7]);
  *((unsigned char *)a1 + v7[8]) = *((unsigned char *)a2 + v7[8]);
  uint64_t v16 = *(int *)(a3 + 36);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_22EE7DB10();
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
  swift_retain();
  swift_retain();
  v20(v17, v18, v19);
  return a1;
}

void *sub_22EE0E808(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  if (*a1)
  {
    if (v6)
    {
      uint64_t v7 = a2[1];
      *a1 = v6;
      a1[1] = v7;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v6)
  {
    uint64_t v8 = a2[1];
    *a1 = v6;
    a1[1] = v8;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v9 = type metadata accessor for SubscriptionOfferViewStyleProtocolConfiguration();
  uint64_t v10 = (int *)v9;
  if (a1 != a2)
  {
    uint64_t v11 = *(int *)(v9 + 20);
    uint64_t v12 = (void *)((char *)a1 + v11);
    uint64_t v13 = (void **)((char *)a2 + v11);
    sub_22EC40DD8((uint64_t)a1 + v11);
    uint64_t v14 = type metadata accessor for Product.TaskState(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v18 = sub_22EE7F780();
      (*(void (**)(void *, void **, uint64_t))(*(void *)(v18 - 8) + 16))(v12, v13, v18);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
        goto LABEL_15;
      }
      uint64_t v16 = *v13;
      id v17 = v16;
      *uint64_t v12 = v16;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  *(void *)((char *)a1 + v10[6]) = *(void *)((char *)a2 + v10[6]);
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + v10[7]) = *(void *)((char *)a2 + v10[7]);
  swift_retain();
  swift_release();
  *((unsigned char *)a1 + v10[8]) = *((unsigned char *)a2 + v10[8]);
  uint64_t v19 = *(int *)(a3 + 36);
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = sub_22EE7DB10();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

void *sub_22EE0EA08(void *a1, void *a2, uint64_t a3)
{
  if (*a2)
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  uint64_t v7 = (int *)type metadata accessor for SubscriptionOfferViewStyleProtocolConfiguration();
  uint64_t v8 = v7[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for Product.TaskState(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_22EE7F780();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  *(void *)((char *)a1 + v7[6]) = *(void *)((char *)a2 + v7[6]);
  *(void *)((char *)a1 + v7[7]) = *(void *)((char *)a2 + v7[7]);
  *((unsigned char *)a1 + v7[8]) = *((unsigned char *)a2 + v7[8]);
  uint64_t v13 = *(int *)(a3 + 36);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_22EE7DB10();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  return a1;
}

void *sub_22EE0EB80(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  if (*a1)
  {
    if (v6)
    {
      uint64_t v7 = a2[1];
      *a1 = v6;
      a1[1] = v7;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v6)
  {
    uint64_t v8 = a2[1];
    *a1 = v6;
    a1[1] = v8;
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v9 = type metadata accessor for SubscriptionOfferViewStyleProtocolConfiguration();
  uint64_t v10 = (int *)v9;
  if (a1 != a2)
  {
    uint64_t v11 = *(int *)(v9 + 20);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    sub_22EC40DD8((uint64_t)a1 + v11);
    uint64_t v14 = type metadata accessor for Product.TaskState(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = sub_22EE7F780();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
    }
  }
  *(void *)((char *)a1 + v10[6]) = *(void *)((char *)a2 + v10[6]);
  swift_release();
  *(void *)((char *)a1 + v10[7]) = *(void *)((char *)a2 + v10[7]);
  swift_release();
  *((unsigned char *)a1 + v10[8]) = *((unsigned char *)a2 + v10[8]);
  uint64_t v16 = *(int *)(a3 + 36);
  id v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_22EE7DB10();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  return a1;
}

uint64_t sub_22EE0ED40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EE0ED54);
}

uint64_t sub_22EE0ED54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for SubscriptionOfferViewStyleProtocolConfiguration();
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    uint64_t v8 = sub_22EE7DB10();
    uint64_t v9 = a1 + *(int *)(a3 + 36);
  }

  return __swift_getEnumTagSinglePayload(v9, a2, v8);
}

uint64_t sub_22EE0EDD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EE0EDE8);
}

uint64_t sub_22EE0EDE8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for SubscriptionOfferViewStyleProtocolConfiguration();
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    uint64_t v10 = sub_22EE7DB10();
    uint64_t v11 = a1 + *(int *)(a4 + 36);
  }

  return __swift_storeEnumTagSinglePayload(v11, a2, a2, v10);
}

uint64_t type metadata accessor for AnySubscriptionOfferViewStyle.WrapperView()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_22EE0EE88()
{
  return MEMORY[0x263F1B718];
}

uint64_t sub_22EE0EE94()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EE0EED8()
{
  swift_getAssociatedTypeWitness();

  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_22EE0EF4C(double a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (v4)
  {
    uint64_t v6 = 0;
    uint64_t v7 = (unsigned __int8 *)(a3 + 32);
    while (1)
    {
      uint64_t v8 = *(unsigned __int8 *)(a3 + v6 + 32);
      OUTLINED_FUNCTION_0_28();
      if (v11 <= a1 && v12 > a1) {
        break;
      }
      if (v4 == ++v6)
      {
        if (!*(void *)(a3 + 16)) {
          goto LABEL_11;
        }
        uint64_t v8 = *v7;
        OUTLINED_FUNCTION_0_28();
        if (v11 <= a1)
        {
          uint64_t v9 = *(void *)(a3 + 16);
          if (!v9) {
            goto LABEL_11;
          }
          uint64_t v8 = v7[v9 - 1];
        }
        break;
      }
    }
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return 8;
  }
  return v8;
}

BOOL sub_22EE0F01C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861CDF0);
  MEMORY[0x270FA5388](v0 - 8);
  unint64_t v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22EE7D290();
  uint64_t v3 = sub_22EE7DA60();
  if (__swift_getEnumTagSinglePayload((uint64_t)v2, 1, v3) == 1)
  {
    sub_22ED70BA0((uint64_t)v2);
  }
  else
  {
    uint64_t v4 = *(void *)(v3 - 8);
    int v5 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v2, v3);
    int v6 = *MEMORY[0x263F19F00];
    (*(void (**)(char *, uint64_t))(v4 + 8))(v2, v3);
    if (v5 == v6) {
      return 0;
    }
  }
  id v7 = objc_msgSend(self, sel_currentDevice);
  id v8 = objc_msgSend(v7, sel_userInterfaceIdiom);

  if (v8 != (id)1) {
    return 0;
  }
  uint64_t v9 = (void *)sub_22EE7D1C0();
  if (!v9) {
    goto LABEL_11;
  }
  uint64_t v10 = v9;
  id v11 = objc_msgSend(v9, sel_scene);

  if (!v11) {
    goto LABEL_11;
  }
  self;
  double v12 = (void *)swift_dynamicCastObjCClass();
  if (!v12)
  {

LABEL_11:
    id v13 = objc_msgSend(self, sel_mainScreen);
    goto LABEL_12;
  }
  id v13 = objc_msgSend(v12, sel_screen);

LABEL_12:
  objc_msgSend(v13, sel_bounds);
  double Height = CGRectGetHeight(v19);
  uint64_t v16 = sub_22ED708D4();
  uint64_t KeyPath = swift_getKeyPath();
  LODWORD(v16) = sub_22EE0EF4C(Height, KeyPath, (uint64_t)v16);

  swift_release();
  return v16 > 2;
}

void sub_22EE0F28C(char *a1@<X0>, uint64_t a2@<X8>)
{
  *(double *)a2 = sub_22ED70924(*a1);
  *(void *)(a2 + 8) = v3;
}

void sub_22EE0F2B8(char *a1@<X0>, uint64_t a2@<X8>)
{
  *(double *)a2 = sub_22ED70924(*a1);
  *(void *)(a2 + 8) = v3;
}

uint64_t OUTLINED_FUNCTION_0_28()
{
  return swift_getAtKeyPath();
}

uint64_t View.productIconBorder()(uint64_t a1, uint64_t a2)
{
  v6[0] = 0;
  uint64_t v7 = sub_22EE7ED70();
  uint64_t v8 = v4;
  return MEMORY[0x230FAB9D0](v6, a1, &type metadata for InAppPurchaseIconFrameViewModifier, a2);
}

uint64_t View.productIconBorder(showAppIcon:alignment:)(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[0] = a1;
  uint64_t v7 = a2;
  uint64_t v8 = a3;
  return MEMORY[0x230FAB9D0](v6, a4, &type metadata for InAppPurchaseIconFrameViewModifier, a5);
}

uint64_t sub_22EE0F3A0()
{
  return swift_getWitnessTable();
}

unint64_t sub_22EE0F404()
{
  unint64_t result = qword_2686277C0;
  if (!qword_2686277C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686277C0);
  }
  return result;
}

uint64_t sub_22EE0F450()
{
  sub_22EBC519C();
  sub_22EE7D4B0();
  return v1;
}

BOOL sub_22EE0F48C()
{
  return (sub_22EE7C7A0() & 1) == 0;
}

uint64_t sub_22EE0F4D8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22EE0F450();
  *a1 = result;
  return result;
}

uint64_t sub_22EE0F504()
{
  return sub_22EE0F52C();
}

uint64_t sub_22EE0F52C()
{
  return sub_22EE7D4C0();
}

uint64_t View.productDescriptionHidden(_:)(char a1)
{
  swift_getKeyPath();
  *(unsigned char *)(swift_allocObject() + 16) = a1;
  sub_22EE7E460();
  swift_release();

  return swift_release();
}

uint64_t sub_22EE0F620@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22EE0F450();
  *a1 = result;
  return result;
}

uint64_t sub_22EE0F64C()
{
  return sub_22EE0F52C();
}

uint64_t sub_22EE0F674(char *a1, char a2)
{
  uint64_t result = sub_22EE7C7A0();
  if ((result & 1) == 0)
  {
    if (a2) {
      char v5 = 2;
    }
    else {
      char v5 = 1;
    }
    *a1 = v5;
  }
  return result;
}

uint64_t sub_22EE0F6B8()
{
  return swift_deallocObject();
}

uint64_t sub_22EE0F6C8(char *a1)
{
  return sub_22EE0F674(a1, *(unsigned char *)(v1 + 16));
}

uint64_t View._productDescription(_:)(char a1, uint64_t a2, uint64_t a3)
{
  char v4 = a1;
  return MEMORY[0x230FAB9D0](&v4, a2, &type metadata for ProductDescriptionVisibilityModifier, a3);
}

unint64_t sub_22EE0F708()
{
  unint64_t result = qword_2686277C8;
  if (!qword_2686277C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686277C8);
  }
  return result;
}

unsigned char *sub_22EE0F754(unsigned char *result, char a2)
{
  if (a2 != 3) {
    *unint64_t result = a2;
  }
  return result;
}

uint64_t sub_22EE0F768@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686277D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a3, a1, v7);
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_2686277D8);
  uint64_t v9 = a3 + *(int *)(result + 36);
  *(void *)uint64_t v9 = KeyPath;
  *(unsigned char *)(v9 + 8) = a2;
  return result;
}

uint64_t sub_22EE0F804@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_22EE0F768(a1, *v2, a2);
}

uint64_t StoreContent.productDescription(_:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v6 = a1;
  sub_22EE0F708();
  return sub_22ED872C4((uint64_t)&v6, a2, (uint64_t)&type metadata for ProductDescriptionVisibilityModifier, a3);
}

uint64_t sub_22EE0F86C()
{
  return swift_getWitnessTable();
}

uint64_t sub_22EE0F908()
{
  return swift_getWitnessTable();
}

uint64_t sub_22EE0F96C()
{
  return swift_getWitnessTable();
}

unsigned char *storeEnumTagSinglePayload for ProductDescriptionVisibilityModifier(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x22EE0FA9CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ProductDescriptionVisibilityModifier()
{
  return &type metadata for ProductDescriptionVisibilityModifier;
}

uint64_t sub_22EE0FAD4()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *_s42ProductDescriptionVisibilityEnvironmentKeyOMa()
{
  return &_s42ProductDescriptionVisibilityEnvironmentKeyON;
}

unint64_t sub_22EE0FB04()
{
  unint64_t result = qword_2686277E0;
  if (!qword_2686277E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686277D8);
    sub_22EADDD7C(&qword_2686277E8, &qword_2686277D0);
    sub_22EADDD7C(&qword_2686277F0, &qword_2686277F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2686277E0);
  }
  return result;
}

uint64_t sub_22EE0FBC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_22EE0FC2C();

  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

unint64_t sub_22EE0FC2C()
{
  unint64_t result = qword_268627800[0];
  if (!qword_268627800[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_268627800);
  }
  return result;
}

void sub_22EE0FC78()
{
  sub_22EE11FE4();
  if (v0 <= 0x3F)
  {
    type metadata accessor for PromotionalIconLoadingView.IconType();
    sub_22EE80040();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_22EE0FD60(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7C2B0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84)) {
    size_t v8 = *(void *)(v7 + 64);
  }
  else {
    size_t v8 = *(void *)(v7 + 64) + 1;
  }
  uint64_t v10 = *(void *)(a3 + 16);
  uint64_t v9 = *(void *)(a3 + 24);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v9 - 8);
  int v13 = *(_DWORD *)(v12 + 80);
  uint64_t v14 = v13;
  int v15 = v13 | *(_DWORD *)(v11 + 80);
  uint64_t v16 = v15 & 0xF8 | 7u;
  size_t v17 = v8 + v16;
  unint64_t v18 = *(void *)(v11 + 64);
  if (*(_DWORD *)(v11 + 84)) {
    size_t v19 = *(void *)(*(void *)(v10 - 8) + 64);
  }
  else {
    size_t v19 = v18 + 1;
  }
  size_t v20 = v19 + v13;
  unint64_t v21 = v20 & ~(unint64_t)v13;
  if (*(_DWORD *)(v12 + 84)) {
    uint64_t v22 = *(void *)(*(void *)(v9 - 8) + 64);
  }
  else {
    uint64_t v22 = *(void *)(*(void *)(v9 - 8) + 64) + 1;
  }
  if (v21 + v22 > v18) {
    unint64_t v18 = v21 + v22;
  }
  if (v18 <= 0x10) {
    uint64_t v23 = 16;
  }
  else {
    uint64_t v23 = v18;
  }
  int v24 = v15 | *(_DWORD *)(v7 + 80);
  if ((v24 & 0x1000F8) != 0 || ((v23 + ((v8 + v16) & ~v16) + 8) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    uint64_t v26 = *a2;
    *a1 = *a2;
    long long v27 = (uint64_t *)(v26 + (((v24 & 0xF8 | 7u) + 16) & ~(unint64_t)(v24 & 0xF8 | 7u)));
    swift_retain();
  }
  else
  {
    size_t __n = v22;
    size_t v46 = v20;
    uint64_t v47 = v9;
    uint64_t v48 = v10;
    uint64_t v44 = *(void *)(v9 - 8);
    uint64_t v49 = v23;
    __dst = a1;
    uint64_t v28 = ~v16;
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
    {
      memcpy(__dst, a2, v8);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(__dst, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v6);
    }
    uint64_t v30 = v49 + 1;
    uint64_t v31 = ((unint64_t)__dst + v17) & v28;
    uint64_t v32 = ((unint64_t)a2 + v17) & v28;
    uint64_t v33 = ~v14;
    long long v27 = __dst;
    switch(*(unsigned char *)(v32 + v49))
    {
      case 0:
        uint64_t v34 = *(void *)(v32 + 8);
        *(void *)uint64_t v31 = *(void *)v32;
        *(void *)(v31 + 8) = v34;
        *(unsigned char *)(v31 + v49) = 0;
        swift_retain();
        break;
      case 1:
        if (__swift_getEnumTagSinglePayload(v32, 1, v48))
        {
          memcpy((void *)v31, (const void *)v32, v19);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v31, v32, v48);
          __swift_storeEnumTagSinglePayload(v31, 0, 1, v48);
        }
        uint64_t v37 = (void *)((v46 + v31) & v33);
        char v38 = (const void *)((v46 + v32) & v33);
        if (__swift_getEnumTagSinglePayload((uint64_t)v38, 1, v47))
        {
          memcpy(v37, v38, __n);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v44 + 16))(v37, v38, v47);
          __swift_storeEnumTagSinglePayload((uint64_t)v37, 0, 1, v47);
        }
        *(unsigned char *)(v31 + v49) = 1;
        break;
      case 2:
        uint64_t v35 = v49;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v31, v32, v48);
        char v36 = 2;
        goto LABEL_31;
      case 3:
        uint64_t v35 = v49;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v31, v32, v48);
        char v36 = 3;
LABEL_31:
        *(unsigned char *)(v31 + v35) = v36;
        break;
      default:
        memcpy((void *)v31, (const void *)v32, v49 + 1);
        long long v27 = __dst;
        break;
    }
    unint64_t v39 = ((v31 | 7) + v30) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v40 = ((v32 | 7) + v30) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v41 = *(void *)v40;
    char v42 = *(unsigned char *)(v40 + 8);
    j__swift_retain(*(void *)v40);
    *(void *)unint64_t v39 = v41;
    *(unsigned char *)(v39 + 8) = v42;
  }
  return v27;
}

uint64_t sub_22EE101A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22EE7C2B0();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, 1, v4);
  uint64_t v6 = *(void *)(v4 - 8);
  if (!EnumTagSinglePayload) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v4);
  }
  int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v9 - 8);
  uint64_t v13 = v12;
  int v14 = *(_DWORD *)(v12 + 80);
  uint64_t v15 = v8 + a1;
  if (!v7) {
    ++v15;
  }
  uint64_t v16 = (v14 | *(_DWORD *)(v11 + 80)) & 0xF8 | 7u;
  uint64_t v17 = (v15 + v16) & ~v16;
  unint64_t v18 = *(void *)(*(void *)(v10 - 8) + 64);
  uint64_t v19 = *(void *)(*(void *)(v9 - 8) + 64);
  if (*(_DWORD *)(v11 + 84)) {
    unint64_t v20 = *(void *)(*(void *)(v10 - 8) + 64);
  }
  else {
    unint64_t v20 = v18 + 1;
  }
  unint64_t v21 = v20 + v14;
  if (!*(_DWORD *)(v12 + 84)) {
    ++v19;
  }
  unint64_t v22 = v19 + (v21 & ~(unint64_t)v14);
  if (v22 > v18) {
    unint64_t v18 = v22;
  }
  if (v18 <= 0x10) {
    uint64_t v23 = 16;
  }
  else {
    uint64_t v23 = v18;
  }
  unint64_t v24 = ~(unint64_t)v14;
  switch(*(unsigned char *)(v17 + v23))
  {
    case 0:
      swift_release();
      break;
    case 1:
      if (!__swift_getEnumTagSinglePayload(v17, 1, v10)) {
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v17, v10);
      }
      if (!__swift_getEnumTagSinglePayload((v21 + v17) & v24, 1, v9)) {
        (*(void (**)(unint64_t, uint64_t))(v13 + 8))((v21 + v17) & v24, v9);
      }
      break;
    case 2:
    case 3:
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v17, v10);
      break;
    default:
      break;
  }
  uint64_t v25 = *(void *)((v17 + v23 + 8) & 0xFFFFFFFFFFFFFFF8);

  return j_j__swift_release(v25);
}

void *sub_22EE1044C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7C2B0();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = v8;
  if (EnumTagSinglePayload)
  {
    if (*(_DWORD *)(v8 + 84)) {
      size_t v10 = *(void *)(v8 + 64);
    }
    else {
      size_t v10 = *(void *)(v8 + 64) + 1;
    }
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  if (*(_DWORD *)(v9 + 84)) {
    uint64_t v11 = *(void *)(v9 + 64);
  }
  else {
    uint64_t v11 = *(void *)(v9 + 64) + 1;
  }
  uint64_t v13 = *(void *)(a3 + 16);
  uint64_t v12 = *(void *)(a3 + 24);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v12 - 8);
  int v16 = *(_DWORD *)(v15 + 80);
  uint64_t v17 = (v16 | *(_DWORD *)(v14 + 80)) & 0xF8 | 7u;
  uint64_t v18 = v11 + v17;
  uint64_t v19 = ((unint64_t)a1 + v18) & ~v17;
  uint64_t v20 = ((unint64_t)a2 + v18) & ~v17;
  unint64_t v21 = *(void *)(v14 + 64);
  if (*(_DWORD *)(v14 + 84)) {
    size_t v22 = *(void *)(*(void *)(v13 - 8) + 64);
  }
  else {
    size_t v22 = v21 + 1;
  }
  size_t v23 = v22 + v16;
  unint64_t v24 = v23 & ~(unint64_t)v16;
  if (*(_DWORD *)(v15 + 84)) {
    size_t v25 = *(void *)(*(void *)(v12 - 8) + 64);
  }
  else {
    size_t v25 = *(void *)(*(void *)(v12 - 8) + 64) + 1;
  }
  if (v24 + v25 > v21) {
    unint64_t v21 = v24 + v25;
  }
  if (v21 <= 0x10) {
    uint64_t v26 = 16;
  }
  else {
    uint64_t v26 = v21;
  }
  switch(*(unsigned char *)(v20 + v26))
  {
    case 0:
      uint64_t v27 = *(void *)(v20 + 8);
      *(void *)uint64_t v19 = *(void *)v20;
      *(void *)(v19 + 8) = v27;
      *(unsigned char *)(v19 + v26) = 0;
      swift_retain();
      break;
    case 1:
      unint64_t v36 = ~(unint64_t)v16;
      uint64_t v37 = v12;
      if (__swift_getEnumTagSinglePayload(v20, 1, v13))
      {
        memcpy((void *)v19, (const void *)v20, v22);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v19, v20, v13);
        __swift_storeEnumTagSinglePayload(v19, 0, 1, v13);
      }
      uint64_t v29 = (void *)((v23 + v19) & v36);
      uint64_t v30 = (const void *)((v23 + v20) & v36);
      if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v37))
      {
        memcpy(v29, v30, v25);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v29, v30, v37);
        __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v37);
      }
      char v28 = 1;
      goto LABEL_33;
    case 2:
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v19, v20, v13);
      char v28 = 2;
      goto LABEL_33;
    case 3:
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v19, v20, v13);
      char v28 = 3;
LABEL_33:
      *(unsigned char *)(v19 + v26) = v28;
      break;
    default:
      memcpy((void *)v19, (const void *)v20, v26 + 1);
      break;
  }
  unint64_t v31 = ((v19 | 7) + v26 + 1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = ((v20 | 7) + v26 + 1) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v33 = *(void *)v32;
  char v34 = *(unsigned char *)(v32 + 8);
  j__swift_retain(*(void *)v32);
  *(void *)unint64_t v31 = v33;
  *(unsigned char *)(v31 + 8) = v34;
  return a1;
}

void *sub_22EE107FC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7C2B0();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  uint64_t v9 = *(void *)(v6 - 8);
  uint64_t v10 = v9;
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_12;
    }
    int v11 = *(_DWORD *)(v9 + 84);
    size_t v12 = *(void *)(v9 + 64);
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 24))(a1, a2, v6);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    int v11 = *(_DWORD *)(v10 + 84);
    size_t v12 = *(void *)(v10 + 64);
  }
  if (v11) {
    size_t v13 = v12;
  }
  else {
    size_t v13 = v12 + 1;
  }
  memcpy(a1, a2, v13);
LABEL_12:
  if (*(_DWORD *)(v10 + 84)) {
    uint64_t v14 = *(void *)(v10 + 64);
  }
  else {
    uint64_t v14 = *(void *)(v10 + 64) + 1;
  }
  uint64_t v16 = *(void *)(a3 + 16);
  uint64_t v15 = *(void *)(a3 + 24);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v15 - 8);
  int v19 = *(_DWORD *)(v18 + 80);
  uint64_t v20 = (v19 | *(_DWORD *)(v17 + 80)) & 0xF8 | 7u;
  uint64_t v21 = v14 + v20;
  uint64_t v22 = ((unint64_t)a1 + v21) & ~v20;
  uint64_t v23 = ((unint64_t)a2 + v21) & ~v20;
  unint64_t v24 = *(void *)(v17 + 64);
  if (*(_DWORD *)(v17 + 84)) {
    size_t v25 = *(void *)(*(void *)(v16 - 8) + 64);
  }
  else {
    size_t v25 = v24 + 1;
  }
  size_t v26 = v25 + v19;
  unint64_t v27 = v26 & ~(unint64_t)v19;
  if (*(_DWORD *)(v18 + 84)) {
    size_t v28 = *(void *)(*(void *)(v15 - 8) + 64);
  }
  else {
    size_t v28 = *(void *)(*(void *)(v15 - 8) + 64) + 1;
  }
  if (v27 + v28 > v24) {
    unint64_t v24 = v27 + v28;
  }
  if (v24 <= 0x10) {
    uint64_t v29 = 16;
  }
  else {
    uint64_t v29 = v24;
  }
  if (*(unsigned __int8 *)(v23 + v29) > 3u)
  {
    switch(*(unsigned char *)(v22 + v29))
    {
      case 0:
        swift_release();
        break;
      case 1:
        unint64_t v30 = ~(unint64_t)v19;
        uint64_t v31 = v15;
        if (!__swift_getEnumTagSinglePayload(v22, 1, v16)) {
          (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v22, v16);
        }
        if (!__swift_getEnumTagSinglePayload((v26 + v22) & v30, 1, v31)) {
          (*(void (**)(size_t, uint64_t))(v18 + 8))((v26 + v22) & v30, v31);
        }
        break;
      case 2:
      case 3:
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v22, v16);
        break;
      default:
        goto LABEL_30;
    }
LABEL_40:
    memcpy((void *)v22, (const void *)v23, v29 + 1);
  }
  else if (v22 != v23)
  {
    unint64_t v49 = ~(unint64_t)v19;
    uint64_t v51 = v15;
    switch(*(unsigned char *)(v22 + v29))
    {
      case 0:
        swift_release();
        goto LABEL_46;
      case 1:
        if (!__swift_getEnumTagSinglePayload(v22, 1, v16)) {
          (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v22, v16);
        }
        if (!__swift_getEnumTagSinglePayload((v26 + v22) & v49, 1, v51)) {
          (*(void (**)(size_t, uint64_t))(v18 + 8))((v26 + v22) & v49, v51);
        }
        goto LABEL_46;
      case 2:
      case 3:
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v22, v16);
LABEL_46:
        unsigned int v32 = *(unsigned __int8 *)(v23 + v29);
        unsigned int v33 = v32 - 4;
        if (v32 >= 4)
        {
          if (v29 <= 3) {
            uint64_t v34 = v29;
          }
          else {
            uint64_t v34 = 4;
          }
          switch(v34)
          {
            case 1:
              int v35 = *(unsigned __int8 *)v23;
              goto LABEL_57;
            case 2:
              int v35 = *(unsigned __int16 *)v23;
              goto LABEL_57;
            case 3:
              int v35 = *(unsigned __int16 *)v23 | (*(unsigned __int8 *)(v23 + 2) << 16);
              goto LABEL_57;
            case 4:
              int v35 = *(_DWORD *)v23;
LABEL_57:
              int v38 = (v35 | (v33 << (8 * v29))) + 4;
              unsigned int v32 = v35 + 4;
              if (v29 < 4) {
                unsigned int v32 = v38;
              }
              break;
            default:
              break;
          }
        }
        switch(v32)
        {
          case 1u:
            if (__swift_getEnumTagSinglePayload(v23, 1, v16))
            {
              memcpy((void *)v22, (const void *)v23, v25);
            }
            else
            {
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v22, v23, v16);
              __swift_storeEnumTagSinglePayload(v22, 0, 1, v16);
            }
            size_t v37 = v26 + v22;
            unint64_t v36 = v49;
            goto LABEL_67;
          case 2u:
            goto LABEL_61;
          case 3u:
            goto LABEL_62;
          default:
            goto LABEL_60;
        }
      default:
        break;
    }
LABEL_30:
    switch(*(unsigned char *)(v23 + v29))
    {
      case 0:
LABEL_60:
        uint64_t v39 = *(void *)(v23 + 8);
        *(void *)uint64_t v22 = *(void *)v23;
        *(void *)(v22 + 8) = v39;
        *(unsigned char *)(v22 + v29) = 0;
        swift_retain();
        break;
      case 1:
        unint64_t v50 = ~(unint64_t)v19;
        uint64_t v51 = v15;
        if (__swift_getEnumTagSinglePayload(v23, 1, v16))
        {
          memcpy((void *)v22, (const void *)v23, v25);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v22, v23, v16);
          __swift_storeEnumTagSinglePayload(v22, 0, 1, v16);
        }
        unint64_t v36 = v50;
        size_t v37 = v26 + v22;
LABEL_67:
        uint64_t v41 = (void *)(v37 & v36);
        char v42 = (const void *)((v26 + v23) & v36);
        if (__swift_getEnumTagSinglePayload((uint64_t)v42, 1, v51))
        {
          memcpy(v41, v42, v28);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v41, v42, v51);
          __swift_storeEnumTagSinglePayload((uint64_t)v41, 0, 1, v51);
        }
        char v40 = 1;
        goto LABEL_71;
      case 2:
LABEL_61:
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v22, v23, v16);
        char v40 = 2;
        goto LABEL_71;
      case 3:
LABEL_62:
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v22, v23, v16);
        char v40 = 3;
LABEL_71:
        *(unsigned char *)(v22 + v29) = v40;
        break;
      default:
        goto LABEL_40;
    }
  }
  unint64_t v43 = ((v22 | 7) + v29 + 1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v44 = ((v23 | 7) + v29 + 1) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v45 = *(void *)v44;
  char v46 = *(unsigned char *)(v44 + 8);
  j__swift_retain(*(void *)v44);
  uint64_t v47 = *(void *)v43;
  *(void *)unint64_t v43 = v45;
  *(unsigned char *)(v43 + 8) = v46;
  j_j__swift_release(v47);
  return a1;
}

void *sub_22EE10EE8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7C2B0();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = v8;
  if (EnumTagSinglePayload)
  {
    if (*(_DWORD *)(v8 + 84)) {
      size_t v10 = *(void *)(v8 + 64);
    }
    else {
      size_t v10 = *(void *)(v8 + 64) + 1;
    }
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  if (*(_DWORD *)(v9 + 84)) {
    uint64_t v11 = *(void *)(v9 + 64);
  }
  else {
    uint64_t v11 = *(void *)(v9 + 64) + 1;
  }
  uint64_t v13 = *(void *)(a3 + 16);
  uint64_t v12 = *(void *)(a3 + 24);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v12 - 8);
  int v16 = *(_DWORD *)(v15 + 80);
  uint64_t v17 = (v16 | *(_DWORD *)(v14 + 80)) & 0xF8 | 7u;
  uint64_t v18 = v11 + v17;
  uint64_t v19 = ((unint64_t)a1 + v18) & ~v17;
  uint64_t v20 = ((unint64_t)a2 + v18) & ~v17;
  unint64_t v21 = *(void *)(v14 + 64);
  if (*(_DWORD *)(v14 + 84)) {
    size_t v22 = *(void *)(*(void *)(v13 - 8) + 64);
  }
  else {
    size_t v22 = v21 + 1;
  }
  size_t v23 = v22 + v16;
  unint64_t v24 = v23 & ~(unint64_t)v16;
  if (*(_DWORD *)(v15 + 84)) {
    size_t v25 = *(void *)(*(void *)(v12 - 8) + 64);
  }
  else {
    size_t v25 = *(void *)(*(void *)(v12 - 8) + 64) + 1;
  }
  if (v24 + v25 > v21) {
    unint64_t v21 = v24 + v25;
  }
  if (v21 <= 0x10) {
    uint64_t v26 = 16;
  }
  else {
    uint64_t v26 = v21;
  }
  switch(*(unsigned char *)(v20 + v26))
  {
    case 0:
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      *(unsigned char *)(v19 + v26) = 0;
      break;
    case 1:
      unint64_t v34 = ~(unint64_t)v16;
      uint64_t v35 = v12;
      if (__swift_getEnumTagSinglePayload(v20, 1, v13))
      {
        memcpy((void *)v19, (const void *)v20, v22);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v19, v20, v13);
        __swift_storeEnumTagSinglePayload(v19, 0, 1, v13);
      }
      size_t v28 = (void *)((v23 + v19) & v34);
      uint64_t v29 = (const void *)((v23 + v20) & v34);
      if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, v35))
      {
        memcpy(v28, v29, v25);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v28, v29, v35);
        __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v35);
      }
      char v27 = 1;
      goto LABEL_33;
    case 2:
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v19, v20, v13);
      char v27 = 2;
      goto LABEL_33;
    case 3:
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v19, v20, v13);
      char v27 = 3;
LABEL_33:
      *(unsigned char *)(v19 + v26) = v27;
      break;
    default:
      memcpy((void *)v19, (const void *)v20, v26 + 1);
      break;
  }
  unint64_t v30 = ((v20 | 7) + v26 + 1) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v31 = *(void *)v30;
  unint64_t v32 = ((v19 | 7) + v26 + 1) & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)(v32 + 8) = *(unsigned char *)(v30 + 8);
  *(void *)unint64_t v32 = v31;
  return a1;
}

void *sub_22EE11288(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7C2B0();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  uint64_t v9 = *(void *)(v6 - 8);
  uint64_t v10 = v9;
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_12;
    }
    int v11 = *(_DWORD *)(v9 + 84);
    size_t v12 = *(void *)(v9 + 64);
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 40))(a1, a2, v6);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    int v11 = *(_DWORD *)(v10 + 84);
    size_t v12 = *(void *)(v10 + 64);
  }
  if (v11) {
    size_t v13 = v12;
  }
  else {
    size_t v13 = v12 + 1;
  }
  memcpy(a1, a2, v13);
LABEL_12:
  if (*(_DWORD *)(v10 + 84)) {
    uint64_t v14 = *(void *)(v10 + 64);
  }
  else {
    uint64_t v14 = *(void *)(v10 + 64) + 1;
  }
  uint64_t v16 = *(void *)(a3 + 16);
  uint64_t v15 = *(void *)(a3 + 24);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v15 - 8);
  int v19 = *(_DWORD *)(v18 + 80);
  uint64_t v20 = (v19 | *(_DWORD *)(v17 + 80)) & 0xF8 | 7u;
  uint64_t v21 = v14 + v20;
  uint64_t v22 = ((unint64_t)a1 + v21) & ~v20;
  size_t v23 = (unsigned __int8 *)(((unint64_t)a2 + v21) & ~v20);
  unint64_t v24 = *(void *)(v17 + 64);
  if (*(_DWORD *)(v17 + 84)) {
    size_t v25 = *(void *)(*(void *)(v16 - 8) + 64);
  }
  else {
    size_t v25 = v24 + 1;
  }
  size_t v26 = v25 + v19;
  unint64_t v27 = v26 & ~(unint64_t)v19;
  if (*(_DWORD *)(v18 + 84)) {
    size_t v28 = *(void *)(*(void *)(v15 - 8) + 64);
  }
  else {
    size_t v28 = *(void *)(*(void *)(v15 - 8) + 64) + 1;
  }
  if (v27 + v28 > v24) {
    unint64_t v24 = v27 + v28;
  }
  if (v24 <= 0x10) {
    uint64_t v29 = 16;
  }
  else {
    uint64_t v29 = v24;
  }
  if (v23[v29] > 3u)
  {
    switch(*(unsigned char *)(v22 + v29))
    {
      case 0:
        swift_release();
        break;
      case 1:
        unint64_t v30 = ~(unint64_t)v19;
        uint64_t v31 = v15;
        if (!__swift_getEnumTagSinglePayload(v22, 1, v16)) {
          (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v22, v16);
        }
        if (!__swift_getEnumTagSinglePayload((v26 + v22) & v30, 1, v31)) {
          (*(void (**)(size_t, uint64_t))(v18 + 8))((v26 + v22) & v30, v31);
        }
        break;
      case 2:
      case 3:
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v22, v16);
        break;
      default:
        goto LABEL_30;
    }
LABEL_40:
    memcpy((void *)v22, v23, v29 + 1);
  }
  else if ((unsigned __int8 *)v22 != v23)
  {
    unint64_t v47 = ~(unint64_t)v19;
    uint64_t v49 = v15;
    switch(*(unsigned char *)(v22 + v29))
    {
      case 0:
        swift_release();
        goto LABEL_46;
      case 1:
        if (!__swift_getEnumTagSinglePayload(v22, 1, v16)) {
          (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v22, v16);
        }
        if (!__swift_getEnumTagSinglePayload((v26 + v22) & v47, 1, v49)) {
          (*(void (**)(size_t, uint64_t))(v18 + 8))((v26 + v22) & v47, v49);
        }
        goto LABEL_46;
      case 2:
      case 3:
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v22, v16);
LABEL_46:
        unsigned int v32 = v23[v29];
        unsigned int v33 = v32 - 4;
        if (v32 >= 4)
        {
          if (v29 <= 3) {
            uint64_t v34 = v29;
          }
          else {
            uint64_t v34 = 4;
          }
          switch(v34)
          {
            case 1:
              int v35 = *v23;
              goto LABEL_57;
            case 2:
              int v35 = *(unsigned __int16 *)v23;
              goto LABEL_57;
            case 3:
              int v35 = *(unsigned __int16 *)v23 | (v23[2] << 16);
              goto LABEL_57;
            case 4:
              int v35 = *(_DWORD *)v23;
LABEL_57:
              int v38 = (v35 | (v33 << (8 * v29))) + 4;
              unsigned int v32 = v35 + 4;
              if (v29 < 4) {
                unsigned int v32 = v38;
              }
              break;
            default:
              break;
          }
        }
        switch(v32)
        {
          case 1u:
            if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v16))
            {
              memcpy((void *)v22, v23, v25);
            }
            else
            {
              (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v17 + 32))(v22, v23, v16);
              __swift_storeEnumTagSinglePayload(v22, 0, 1, v16);
            }
            size_t v37 = v26 + v22;
            unint64_t v36 = v47;
            goto LABEL_67;
          case 2u:
            goto LABEL_61;
          case 3u:
            goto LABEL_62;
          default:
            goto LABEL_60;
        }
      default:
        break;
    }
LABEL_30:
    switch(v23[v29])
    {
      case 0u:
LABEL_60:
        *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
        *(unsigned char *)(v22 + v29) = 0;
        break;
      case 1u:
        unint64_t v48 = ~(unint64_t)v19;
        uint64_t v49 = v15;
        if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v16))
        {
          memcpy((void *)v22, v23, v25);
        }
        else
        {
          (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v17 + 32))(v22, v23, v16);
          __swift_storeEnumTagSinglePayload(v22, 0, 1, v16);
        }
        unint64_t v36 = v48;
        size_t v37 = v26 + v22;
LABEL_67:
        char v40 = (void *)(v37 & v36);
        uint64_t v41 = (const void *)((unint64_t)&v23[v26] & v36);
        if (__swift_getEnumTagSinglePayload((uint64_t)v41, 1, v49))
        {
          memcpy(v40, v41, v28);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v40, v41, v49);
          __swift_storeEnumTagSinglePayload((uint64_t)v40, 0, 1, v49);
        }
        char v39 = 1;
        goto LABEL_71;
      case 2u:
LABEL_61:
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v17 + 32))(v22, v23, v16);
        char v39 = 2;
        goto LABEL_71;
      case 3u:
LABEL_62:
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v17 + 32))(v22, v23, v16);
        char v39 = 3;
LABEL_71:
        *(unsigned char *)(v22 + v29) = v39;
        break;
      default:
        goto LABEL_40;
    }
  }
  unint64_t v42 = ((v22 | 7) + v29 + 1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v43 = (((unint64_t)v23 | 7) + v29 + 1) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v44 = *(void *)v43;
  LOBYTE(v43) = *(unsigned char *)(v43 + 8);
  uint64_t v45 = *(void *)v42;
  *(void *)unint64_t v42 = v44;
  *(unsigned char *)(v42 + 8) = v43;
  j_j__swift_release(v45);
  return a1;
}

uint64_t sub_22EE11964(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7C2B0();
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7) {
    unsigned int v8 = v7 - 1;
  }
  else {
    unsigned int v8 = 0;
  }
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v10 = *(void *)(*(void *)(a3 + 24) - 8);
  if (v8 <= 0xFE) {
    unsigned int v11 = 254;
  }
  else {
    unsigned int v11 = v8;
  }
  unint64_t v12 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  uint64_t v13 = *(void *)(*(void *)(v6 - 8) + 64);
  if (!v7) {
    ++v13;
  }
  int v14 = *(_DWORD *)(v10 + 80);
  int v15 = *(_DWORD *)(v10 + 84);
  uint64_t v16 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  if (*(_DWORD *)(v9 + 84)) {
    unint64_t v17 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    unint64_t v17 = v12 + 1;
  }
  if (!v15) {
    ++v16;
  }
  unint64_t v18 = v16 + ((v17 + v14) & ~(unint64_t)v14);
  if (v18 <= v12) {
    unint64_t v18 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (v18 <= 0x10) {
    unint64_t v18 = 16;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v19 = (*(_DWORD *)(v9 + 80) | v14) & 0xF8 | 7u;
  uint64_t v20 = v13 + v19;
  unint64_t v21 = v18 + 8;
  if (v11 < a2)
  {
    unint64_t v22 = ((v21 + (v20 & ~v19)) & 0xFFFFFFFFFFFFFFF8) + 9;
    if (v22 < 4) {
      unsigned int v23 = ((a2 - v11 + 255) >> (8 * v22)) + 1;
    }
    else {
      unsigned int v23 = 2;
    }
    if (v23 >= 0x10000) {
      LODWORD(v24) = 4;
    }
    else {
      LODWORD(v24) = 2;
    }
    if (v23 < 0x100) {
      LODWORD(v24) = 1;
    }
    if (v23 >= 2) {
      uint64_t v24 = v24;
    }
    else {
      uint64_t v24 = 0;
    }
    switch(v24)
    {
      case 1:
        int v25 = a1[v22];
        if (!a1[v22]) {
          break;
        }
        goto LABEL_36;
      case 2:
        int v25 = *(unsigned __int16 *)&a1[v22];
        if (*(_WORD *)&a1[v22]) {
          goto LABEL_36;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x22EE11BECLL);
      case 4:
        int v25 = *(_DWORD *)&a1[v22];
        if (!v25) {
          break;
        }
LABEL_36:
        int v27 = (v25 - 1) << (8 * v22);
        if (v22 >= 4) {
          int v27 = 0;
        }
        if (v22 == 1) {
          int v28 = *a1;
        }
        else {
          int v28 = *(_DWORD *)a1;
        }
        return v11 + (v28 | v27) + 1;
      default:
        break;
    }
  }
  if (v8 < 0xFE)
  {
    unsigned int v30 = *(unsigned __int8 *)(((v21 + ((unint64_t)&a1[v20] & ~v19)) & 0xFFFFFFFFFFFFFFF8) + 8);
    if (v30 > 1) {
      return (v30 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    unsigned int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, v7, v6);
    if (EnumTagSinglePayload >= 2) {
      return EnumTagSinglePayload - 1;
    }
    else {
      return 0;
    }
  }
}

void sub_22EE11C00(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = sub_22EE7C2B0();
  int v9 = 0;
  uint64_t v10 = *(unsigned int *)(*(void *)(v8 - 8) + 84);
  if (v10) {
    unsigned int v11 = v10 - 1;
  }
  else {
    unsigned int v11 = 0;
  }
  uint64_t v12 = *(void *)(*(void *)(a4 + 16) - 8);
  uint64_t v13 = *(void *)(*(void *)(a4 + 24) - 8);
  if (v11 <= 0xFE) {
    unsigned int v14 = 254;
  }
  else {
    unsigned int v14 = v11;
  }
  unint64_t v15 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v10) {
    size_t v16 = *(void *)(*(void *)(v8 - 8) + 64);
  }
  else {
    size_t v16 = *(void *)(*(void *)(v8 - 8) + 64) + 1;
  }
  int v17 = *(_DWORD *)(v13 + 80);
  uint64_t v18 = *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64);
  if (*(_DWORD *)(v12 + 84)) {
    unint64_t v19 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  }
  else {
    unint64_t v19 = v15 + 1;
  }
  uint64_t v20 = (*(_DWORD *)(v12 + 80) | v17) & 0xF8 | 7u;
  size_t v21 = v16 + v20;
  if (!*(_DWORD *)(v13 + 84)) {
    ++v18;
  }
  unint64_t v22 = v18 + ((v19 + v17) & ~(unint64_t)v17);
  if (v22 > v15) {
    unint64_t v15 = v22;
  }
  if (v15 <= 0x10) {
    unint64_t v15 = 16;
  }
  unint64_t v23 = v15 + 8;
  size_t v24 = ((v23 + ((v16 + v20) & ~v20)) & 0xFFFFFFFFFFFFFFF8) + 9;
  char v25 = 8 * v24;
  if (v14 < a3)
  {
    if (v24 <= 3) {
      unsigned int v26 = ((a3 - v14 + 255) >> v25) + 1;
    }
    else {
      unsigned int v26 = 2;
    }
    if (v26 >= 0x10000) {
      int v27 = 4;
    }
    else {
      int v27 = 2;
    }
    if (v26 < 0x100) {
      int v27 = 1;
    }
    if (v26 >= 2) {
      int v9 = v27;
    }
    else {
      int v9 = 0;
    }
  }
  if (v14 < a2)
  {
    unsigned int v28 = ~v14 + a2;
    unsigned int v29 = (~(_BYTE)v14 + a2);
    if (v24 < 4) {
      int v30 = (v28 >> v25) + 1;
    }
    else {
      int v30 = 1;
    }
    if (v24 >= 4) {
      unsigned int v31 = v28;
    }
    else {
      unsigned int v31 = v29;
    }
    bzero(a1, v24);
    if (v24 == 1) {
      *a1 = v31;
    }
    else {
      *(_DWORD *)a1 = v31;
    }
    switch(v9)
    {
      case 1:
        a1[v24] = v30;
        return;
      case 2:
        *(_WORD *)&a1[v24] = v30;
        return;
      case 3:
        goto LABEL_73;
      case 4:
        *(_DWORD *)&a1[v24] = v30;
        return;
      default:
        return;
    }
  }
  uint64_t v32 = ~v20;
  switch(v9)
  {
    case 1:
      a1[v24] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_48;
    case 2:
      *(_WORD *)&a1[v24] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_48;
    case 3:
LABEL_73:
      __break(1u);
      JUMPOUT(0x22EE11F94);
    case 4:
      *(_DWORD *)&a1[v24] = 0;
      goto LABEL_47;
    default:
LABEL_47:
      if (a2)
      {
LABEL_48:
        if (v11 < 0xFE)
        {
          unint64_t v36 = (v23 + ((unint64_t)&a1[v21] & v32)) & 0xFFFFFFFFFFFFFFF8;
          if (a2 > 0xFE)
          {
            *(unsigned char *)(v36 + 8) = 0;
            *(void *)unint64_t v36 = a2 - 255;
          }
          else
          {
            *(unsigned char *)(v36 + 8) = -(char)a2;
          }
        }
        else if (v11 >= a2)
        {
          __swift_storeEnumTagSinglePayload((uint64_t)a1, a2 + 1, v10, v8);
        }
        else
        {
          if (v16 <= 3) {
            int v33 = ~(-1 << (8 * v16));
          }
          else {
            int v33 = -1;
          }
          if (v16)
          {
            int v34 = v33 & (~v11 + a2);
            if (v16 <= 3) {
              int v35 = v16;
            }
            else {
              int v35 = 4;
            }
            bzero(a1, v16);
            switch(v35)
            {
              case 2:
                *(_WORD *)a1 = v34;
                break;
              case 3:
                *(_WORD *)a1 = v34;
                a1[2] = BYTE2(v34);
                break;
              case 4:
                *(_DWORD *)a1 = v34;
                break;
              default:
                *a1 = v34;
                break;
            }
          }
        }
      }
      return;
  }
}

uint64_t type metadata accessor for PromotionalIconLoadingView()
{
  return swift_getGenericMetadata();
}

void sub_22EE11FE4()
{
  if (!qword_268627888[0])
  {
    sub_22EE7C2B0();
    unint64_t v0 = sub_22EE80040();
    if (!v1) {
      atomic_store(v0, qword_268627888);
    }
  }
}

uint64_t type metadata accessor for PromotionalIconLoadingView.IconType()
{
  return swift_getGenericMetadata();
}

uint64_t sub_22EE12054()
{
  v4[4] = MEMORY[0x263F8EE70] + 64;
  uint64_t result = sub_22EE80040();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_22EE80040();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      v4[5] = v4;
      uint64_t result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        uint64_t v5 = *(void *)(result - 8) + 64;
        uint64_t v6 = v5;
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_22EE12188(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(a3 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = *(void *)(v7 + 64);
  if (*(_DWORD *)(v7 + 84)) {
    size_t v9 = *(void *)(v7 + 64);
  }
  else {
    size_t v9 = v8 + 1;
  }
  uint64_t v10 = *(void *)(v5 - 8);
  int v11 = *(_DWORD *)(v10 + 80);
  size_t v12 = v9 + v11;
  unint64_t v13 = v12 & ~(unint64_t)v11;
  if (*(_DWORD *)(v10 + 84)) {
    size_t v14 = *(void *)(*(void *)(v5 - 8) + 64);
  }
  else {
    size_t v14 = *(void *)(*(void *)(v5 - 8) + 64) + 1;
  }
  unint64_t v15 = v13 + v14;
  if (v13 + v14 <= v8) {
    unint64_t v15 = *(void *)(v7 + 64);
  }
  if (v15 <= 0x10) {
    uint64_t v16 = 16;
  }
  else {
    uint64_t v16 = v15;
  }
  int v17 = *(_DWORD *)(v7 + 80) | v11;
  if ((v17 & 0x1000F8) != 0 || (unint64_t)(v16 + 1) > 0x18)
  {
    uint64_t v19 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v19 + (((v17 & 0xF8 | 7u) + 16) & ~(unint64_t)(v17 & 0xF8 | 7u)));
LABEL_18:
    swift_retain();
  }
  else
  {
    unsigned int v20 = *((unsigned __int8 *)a2 + v16);
    unsigned int v21 = v20 - 4;
    if (v20 >= 4)
    {
      if (v16 <= 3) {
        uint64_t v22 = v16;
      }
      else {
        uint64_t v22 = 4;
      }
      switch(v22)
      {
        case 1:
          int v23 = *(unsigned __int8 *)a2;
          goto LABEL_28;
        case 2:
          int v23 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v23 = *(unsigned __int16 *)a2 | (*((unsigned __int8 *)a2 + 2) << 16);
          goto LABEL_28;
        case 4:
          int v23 = *(_DWORD *)a2;
LABEL_28:
          int v24 = (v23 | (v21 << (8 * v16))) + 4;
          unsigned int v20 = v23 + 4;
          if (v16 < 4) {
            unsigned int v20 = v24;
          }
          break;
        default:
          break;
      }
    }
    switch(v20)
    {
      case 1u:
        unint64_t v30 = ~(unint64_t)v11;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
        {
          memcpy(v4, a2, v9);
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v4, a2, v6);
          __swift_storeEnumTagSinglePayload((uint64_t)v4, 0, 1, v6);
        }
        int v27 = (void *)(((unint64_t)v4 + v12) & v30);
        unsigned int v28 = (const void *)(((unint64_t)a2 + v12) & v30);
        if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, v5))
        {
          memcpy(v27, v28, v14);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v27, v28, v5);
          __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v5);
        }
        char v26 = 1;
        break;
      case 2u:
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
        char v26 = 2;
        break;
      case 3u:
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
        char v26 = 3;
        break;
      default:
        uint64_t v25 = a2[1];
        *uint64_t v4 = *a2;
        v4[1] = v25;
        *((unsigned char *)v4 + v16) = 0;
        goto LABEL_18;
    }
    *((unsigned char *)v4 + v16) = v26;
  }
  return v4;
}

uint64_t sub_22EE124D0(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v3 = *(void *)(a2 + 24);
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  if (*(_DWORD *)(v5 + 84)) {
    unint64_t v7 = *(void *)(v5 + 64);
  }
  else {
    unint64_t v7 = v6 + 1;
  }
  uint64_t v8 = *(void *)(v3 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 64);
  uint64_t v11 = v7 + v9;
  unint64_t v12 = (v7 + v9) & ~v9;
  if (!*(_DWORD *)(v8 + 84)) {
    ++v10;
  }
  unint64_t v13 = v10 + v12;
  if (v13 <= v6) {
    unint64_t v13 = *(void *)(v5 + 64);
  }
  if (v13 <= 0x10) {
    unint64_t v13 = 16;
  }
  unsigned int v14 = a1[v13];
  unsigned int v15 = v14 - 4;
  if (v14 >= 4)
  {
    if (v13 <= 3) {
      uint64_t v16 = v13;
    }
    else {
      uint64_t v16 = 4;
    }
    switch(v16)
    {
      case 1:
        int v17 = *a1;
        goto LABEL_19;
      case 2:
        int v17 = *(unsigned __int16 *)a1;
        goto LABEL_19;
      case 3:
        int v17 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_19;
      case 4:
        int v17 = *(_DWORD *)a1;
LABEL_19:
        int v18 = (v17 | (v15 << (8 * v13))) + 4;
        unsigned int v14 = v17 + 4;
        if (v13 < 4) {
          unsigned int v14 = v18;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v19 = ~v9;
  switch(v14)
  {
    case 1u:
      uint64_t v25 = *(void *)(*(void *)(a2 + 16) - 8);
      uint64_t v26 = *(void *)(v3 - 8);
      if (!__swift_getEnumTagSinglePayload((uint64_t)a1, 1, v4)) {
        (*(void (**)(unsigned __int8 *, uint64_t))(v25 + 8))(a1, v4);
      }
      uint64_t v24 = (unint64_t)&a1[v11] & v19;
      uint64_t result = __swift_getEnumTagSinglePayload(v24, 1, v3);
      if (!result)
      {
        unsigned int v20 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(v26 + 8);
        unsigned int v21 = (unsigned __int8 *)v24;
        uint64_t v22 = v3;
        goto LABEL_23;
      }
      break;
    case 2u:
    case 3u:
      unsigned int v20 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(v5 + 8);
      unsigned int v21 = a1;
      uint64_t v22 = *(void *)(a2 + 16);
LABEL_23:
      uint64_t result = v20(v21, v22);
      break;
    default:
      uint64_t result = swift_release();
      break;
  }
  return result;
}

void *sub_22EE12760(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(a3 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  if (*(_DWORD *)(v7 + 84)) {
    size_t v9 = *(void *)(v7 + 64);
  }
  else {
    size_t v9 = v8 + 1;
  }
  uint64_t v10 = *(void *)(v5 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  size_t v12 = v9 + v11;
  size_t v13 = (v9 + v11) & ~v11;
  if (*(_DWORD *)(v10 + 84)) {
    size_t v14 = *(void *)(*(void *)(v5 - 8) + 64);
  }
  else {
    size_t v14 = *(void *)(*(void *)(v5 - 8) + 64) + 1;
  }
  unint64_t v15 = v13 + v14;
  if (v13 + v14 <= v8) {
    unint64_t v15 = *(void *)(v7 + 64);
  }
  if (v15 <= 0x10) {
    uint64_t v16 = 16;
  }
  else {
    uint64_t v16 = v15;
  }
  unsigned int v17 = *((unsigned __int8 *)a2 + v16);
  unsigned int v18 = v17 - 4;
  if (v17 >= 4)
  {
    if (v16 <= 3) {
      uint64_t v19 = v16;
    }
    else {
      uint64_t v19 = 4;
    }
    switch(v19)
    {
      case 1:
        int v20 = *(unsigned __int8 *)a2;
        goto LABEL_21;
      case 2:
        int v20 = *(unsigned __int16 *)a2;
        goto LABEL_21;
      case 3:
        int v20 = *(unsigned __int16 *)a2 | (*((unsigned __int8 *)a2 + 2) << 16);
        goto LABEL_21;
      case 4:
        int v20 = *(_DWORD *)a2;
LABEL_21:
        int v21 = (v20 | (v18 << (8 * v16))) + 4;
        unsigned int v17 = v20 + 4;
        if (v16 < 4) {
          unsigned int v17 = v21;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v22 = ~v11;
  switch(v17)
  {
    case 1u:
      uint64_t v28 = *(void *)(a3 + 24);
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
      {
        memcpy(a1, a2, v9);
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      }
      uint64_t v25 = (void *)(((unint64_t)a1 + v12) & v22);
      uint64_t v26 = (const void *)(((unint64_t)a2 + v12) & v22);
      if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, v28))
      {
        memcpy(v25, v26, v14);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v25, v26, v28);
        __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v28);
      }
      char v24 = 1;
      goto LABEL_34;
    case 2u:
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
      char v24 = 2;
      goto LABEL_34;
    case 3u:
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
      char v24 = 3;
LABEL_34:
      *((unsigned char *)a1 + v16) = v24;
      break;
    default:
      uint64_t v23 = a2[1];
      *a1 = *a2;
      a1[1] = v23;
      *((unsigned char *)a1 + v16) = 0;
      swift_retain();
      break;
  }
  return a1;
}

void *sub_22EE12A68(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = *(void *)(a3 + 16);
    uint64_t v5 = *(void *)(a3 + 24);
    uint64_t v7 = *(void *)(v6 - 8);
    unint64_t v8 = *(void *)(v7 + 64);
    if (*(_DWORD *)(v7 + 84)) {
      size_t v9 = *(void *)(v7 + 64);
    }
    else {
      size_t v9 = v8 + 1;
    }
    uint64_t v10 = *(void *)(v5 - 8);
    uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
    size_t v12 = v9 + v11;
    size_t v13 = (v9 + v11) & ~v11;
    if (*(_DWORD *)(v10 + 84)) {
      uint64_t v14 = *(void *)(*(void *)(v5 - 8) + 64);
    }
    else {
      uint64_t v14 = *(void *)(*(void *)(v5 - 8) + 64) + 1;
    }
    unint64_t v15 = v13 + v14;
    if (v13 + v14 <= v8) {
      unint64_t v15 = *(void *)(v7 + 64);
    }
    if (v15 <= 0x10) {
      uint64_t v16 = 16;
    }
    else {
      uint64_t v16 = v15;
    }
    unsigned int v17 = *((unsigned __int8 *)a1 + v16);
    unsigned int v18 = v17 - 4;
    if (v17 >= 4)
    {
      if (v16 <= 3) {
        uint64_t v19 = v16;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *(unsigned __int8 *)a1;
          goto LABEL_22;
        case 2:
          int v20 = *(unsigned __int16 *)a1;
          goto LABEL_22;
        case 3:
          int v20 = *(unsigned __int16 *)a1 | (*((unsigned __int8 *)a1 + 2) << 16);
          goto LABEL_22;
        case 4:
          int v20 = *(_DWORD *)a1;
LABEL_22:
          int v21 = (v20 | (v18 << (8 * v16))) + 4;
          unsigned int v17 = v20 + 4;
          if (v16 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v22 = ~v11;
    size_t __n = v9;
    size_t v33 = v14;
    switch(v17)
    {
      case 1u:
        if (!__swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6)) {
          (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
        }
        if (!__swift_getEnumTagSinglePayload(((unint64_t)a1 + v12) & v22, 1, v5)) {
          (*(void (**)(unint64_t, uint64_t))(v10 + 8))(((unint64_t)a1 + v12) & v22, v5);
        }
        break;
      case 2u:
      case 3u:
        (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
        break;
      default:
        swift_release();
        break;
    }
    unsigned int v23 = *((unsigned __int8 *)a2 + v16);
    unsigned int v24 = v23 - 4;
    if (v23 >= 4)
    {
      if (v16 <= 3) {
        uint64_t v25 = v16;
      }
      else {
        uint64_t v25 = 4;
      }
      switch(v25)
      {
        case 1:
          int v26 = *(unsigned __int8 *)a2;
          goto LABEL_40;
        case 2:
          int v26 = *(unsigned __int16 *)a2;
          goto LABEL_40;
        case 3:
          int v26 = *(unsigned __int16 *)a2 | (*((unsigned __int8 *)a2 + 2) << 16);
          goto LABEL_40;
        case 4:
          int v26 = *(_DWORD *)a2;
LABEL_40:
          int v27 = (v26 | (v24 << (8 * v16))) + 4;
          unsigned int v23 = v26 + 4;
          if (v16 < 4) {
            unsigned int v23 = v27;
          }
          break;
        default:
          break;
      }
    }
    switch(v23)
    {
      case 1u:
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
        {
          memcpy(a1, a2, __n);
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
        }
        unint64_t v30 = (const void *)(((unint64_t)a2 + v12) & v22);
        if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v5))
        {
          memcpy((void *)(((unint64_t)a1 + v12) & v22), v30, v33);
        }
        else
        {
          (*(void (**)(unint64_t, const void *, uint64_t))(v10 + 16))(((unint64_t)a1 + v12) & v22, v30, v5);
          __swift_storeEnumTagSinglePayload(((unint64_t)a1 + v12) & v22, 0, 1, v5);
        }
        char v29 = 1;
        goto LABEL_53;
      case 2u:
        (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
        char v29 = 2;
        goto LABEL_53;
      case 3u:
        (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
        char v29 = 3;
LABEL_53:
        *((unsigned char *)a1 + v16) = v29;
        break;
      default:
        uint64_t v28 = a2[1];
        *a1 = *a2;
        a1[1] = v28;
        *((unsigned char *)a1 + v16) = 0;
        swift_retain();
        break;
    }
  }
  return a1;
}

_OWORD *sub_22EE12EC0(_OWORD *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(a3 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  if (*(_DWORD *)(v7 + 84)) {
    size_t v9 = *(void *)(v7 + 64);
  }
  else {
    size_t v9 = v8 + 1;
  }
  uint64_t v10 = *(void *)(v5 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  size_t v12 = v9 + v11;
  size_t v13 = (v9 + v11) & ~v11;
  if (*(_DWORD *)(v10 + 84)) {
    size_t v14 = *(void *)(*(void *)(v5 - 8) + 64);
  }
  else {
    size_t v14 = *(void *)(*(void *)(v5 - 8) + 64) + 1;
  }
  unint64_t v15 = v13 + v14;
  if (v13 + v14 <= v8) {
    unint64_t v15 = *(void *)(v7 + 64);
  }
  if (v15 <= 0x10) {
    uint64_t v16 = 16;
  }
  else {
    uint64_t v16 = v15;
  }
  unsigned int v17 = a2[v16];
  unsigned int v18 = v17 - 4;
  if (v17 >= 4)
  {
    if (v16 <= 3) {
      uint64_t v19 = v16;
    }
    else {
      uint64_t v19 = 4;
    }
    switch(v19)
    {
      case 1:
        int v20 = *a2;
        goto LABEL_21;
      case 2:
        int v20 = *(unsigned __int16 *)a2;
        goto LABEL_21;
      case 3:
        int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_21;
      case 4:
        int v20 = *(_DWORD *)a2;
LABEL_21:
        int v21 = (v20 | (v18 << (8 * v16))) + 4;
        unsigned int v17 = v20 + 4;
        if (v16 < 4) {
          unsigned int v17 = v21;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v22 = ~v11;
  switch(v17)
  {
    case 1u:
      uint64_t v27 = *(void *)(a3 + 24);
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
      {
        memcpy(a1, a2, v9);
      }
      else
      {
        (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v6);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      }
      uint64_t v24 = ((unint64_t)a1 + v12) & v22;
      uint64_t v25 = (const void *)((unint64_t)&a2[v12] & v22);
      if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v27))
      {
        memcpy((void *)(((unint64_t)a1 + v12) & v22), v25, v14);
        char v23 = 1;
      }
      else
      {
        (*(void (**)(unint64_t, const void *, uint64_t))(v10 + 32))(((unint64_t)a1 + v12) & v22, v25, v27);
        char v23 = 1;
        __swift_storeEnumTagSinglePayload(v24, 0, 1, v27);
      }
      break;
    case 2u:
      (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v6);
      char v23 = 2;
      break;
    case 3u:
      (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v6);
      char v23 = 3;
      break;
    default:
      char v23 = 0;
      *a1 = *(_OWORD *)a2;
      break;
  }
  *((unsigned char *)a1 + v16) = v23;
  return a1;
}

unsigned __int8 *sub_22EE131C8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = *(void *)(a3 + 16);
    uint64_t v5 = *(void *)(a3 + 24);
    uint64_t v7 = *(void *)(v6 - 8);
    unint64_t v8 = *(void *)(v7 + 64);
    if (*(_DWORD *)(v7 + 84)) {
      size_t v9 = *(void *)(v7 + 64);
    }
    else {
      size_t v9 = v8 + 1;
    }
    uint64_t v10 = *(void *)(v5 - 8);
    uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
    size_t v12 = v9 + v11;
    size_t v13 = (v9 + v11) & ~v11;
    if (*(_DWORD *)(v10 + 84)) {
      uint64_t v14 = *(void *)(*(void *)(v5 - 8) + 64);
    }
    else {
      uint64_t v14 = *(void *)(*(void *)(v5 - 8) + 64) + 1;
    }
    unint64_t v15 = v13 + v14;
    if (v13 + v14 <= v8) {
      unint64_t v15 = *(void *)(v7 + 64);
    }
    if (v15 <= 0x10) {
      uint64_t v16 = 16;
    }
    else {
      uint64_t v16 = v15;
    }
    unsigned int v17 = a1[v16];
    unsigned int v18 = v17 - 4;
    if (v17 >= 4)
    {
      if (v16 <= 3) {
        uint64_t v19 = v16;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *a1;
          goto LABEL_22;
        case 2:
          int v20 = *(unsigned __int16 *)a1;
          goto LABEL_22;
        case 3:
          int v20 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_22;
        case 4:
          int v20 = *(_DWORD *)a1;
LABEL_22:
          int v21 = (v20 | (v18 << (8 * v16))) + 4;
          unsigned int v17 = v20 + 4;
          if (v16 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v22 = ~v11;
    size_t __n = v9;
    size_t v33 = v14;
    switch(v17)
    {
      case 1u:
        if (!__swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6)) {
          (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
        }
        if (!__swift_getEnumTagSinglePayload((unint64_t)&a1[v12] & v22, 1, v5)) {
          (*(void (**)(unint64_t, uint64_t))(v10 + 8))((unint64_t)&a1[v12] & v22, v5);
        }
        break;
      case 2u:
      case 3u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
        break;
      default:
        swift_release();
        break;
    }
    unsigned int v23 = a2[v16];
    unsigned int v24 = v23 - 4;
    if (v23 >= 4)
    {
      if (v16 <= 3) {
        uint64_t v25 = v16;
      }
      else {
        uint64_t v25 = 4;
      }
      switch(v25)
      {
        case 1:
          int v26 = *a2;
          goto LABEL_40;
        case 2:
          int v26 = *(unsigned __int16 *)a2;
          goto LABEL_40;
        case 3:
          int v26 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_40;
        case 4:
          int v26 = *(_DWORD *)a2;
LABEL_40:
          int v27 = (v26 | (v24 << (8 * v16))) + 4;
          unsigned int v23 = v26 + 4;
          if (v16 < 4) {
            unsigned int v23 = v27;
          }
          break;
        default:
          break;
      }
    }
    switch(v23)
    {
      case 1u:
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
        {
          memcpy(a1, a2, __n);
        }
        else
        {
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v6);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
        }
        uint64_t v29 = (unint64_t)&a1[v12] & v22;
        unint64_t v30 = (const void *)((unint64_t)&a2[v12] & v22);
        if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v5))
        {
          memcpy((void *)((unint64_t)&a1[v12] & v22), v30, v33);
          char v28 = 1;
        }
        else
        {
          (*(void (**)(unint64_t, const void *, uint64_t))(v10 + 32))((unint64_t)&a1[v12] & v22, v30, v5);
          char v28 = 1;
          __swift_storeEnumTagSinglePayload(v29, 0, 1, v5);
        }
        break;
      case 2u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v6);
        char v28 = 2;
        break;
      case 3u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v6);
        char v28 = 3;
        break;
      default:
        char v28 = 0;
        *(_OWORD *)a1 = *(_OWORD *)a2;
        break;
    }
    a1[v16] = v28;
  }
  return a1;
}

uint64_t sub_22EE13620(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  if (*(_DWORD *)(*(void *)(*(void *)(a3 + 16) - 8) + 84)) {
    unint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    unint64_t v5 = v3 + 1;
  }
  if (*(_DWORD *)(v4 + 84)) {
    uint64_t v6 = *(void *)(v4 + 64);
  }
  else {
    uint64_t v6 = *(void *)(v4 + 64) + 1;
  }
  unint64_t v7 = v6 + ((v5 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  if (v7 <= v3) {
    unint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  uint64_t v8 = 16;
  if (v7 > 0x10) {
    uint64_t v8 = v7;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_30;
  }
  uint64_t v9 = v8 + 1;
  char v10 = 8 * (v8 + 1);
  if ((v8 + 1) <= 3)
  {
    unsigned int v13 = ((a2 + ~(-1 << v10) - 252) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_30;
      }
      goto LABEL_22;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_30;
      }
      goto LABEL_22;
    }
    if (v13 < 2)
    {
LABEL_30:
      unsigned int v15 = *((unsigned __int8 *)a1 + v8);
      if (v15 >= 4) {
        return (v15 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_30;
  }
LABEL_22:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v9 | v14) + 253;
}

void sub_22EE137F0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  uint64_t v6 = *(void *)(*(void *)(a4 + 24) - 8);
  if (*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 84)) {
    unint64_t v7 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  }
  else {
    unint64_t v7 = v5 + 1;
  }
  if (*(_DWORD *)(v6 + 84)) {
    uint64_t v8 = *(void *)(v6 + 64);
  }
  else {
    uint64_t v8 = *(void *)(v6 + 64) + 1;
  }
  unint64_t v9 = v8 + ((v7 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  if (v9 <= v5) {
    unint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  }
  if (v9 <= 0x10) {
    unint64_t v9 = 16;
  }
  size_t v10 = v9 + 1;
  char v11 = 8 * (v9 + 1);
  if (a3 < 0xFD)
  {
    int v12 = 0;
  }
  else if (v10 <= 3)
  {
    unsigned int v15 = ((a3 + ~(-1 << v11) - 252) >> v11) + 1;
    if (HIWORD(v15))
    {
      int v12 = 4;
    }
    else if (v15 >= 0x100)
    {
      int v12 = 2;
    }
    else
    {
      int v12 = v15 > 1;
    }
  }
  else
  {
    int v12 = 1;
  }
  if (a2 > 0xFC)
  {
    unsigned int v13 = a2 - 253;
    if (v10 < 4)
    {
      int v14 = (v13 >> v11) + 1;
      if (v9 != -1)
      {
        int v16 = v13 & ~(-1 << v11);
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v9 + 1);
      *(_DWORD *)a1 = v13;
      int v14 = 1;
    }
    switch(v12)
    {
      case 1:
        a1[v10] = v14;
        break;
      case 2:
        *(_WORD *)&a1[v10] = v14;
        break;
      case 3:
LABEL_42:
        __break(1u);
        JUMPOUT(0x22EE13A50);
      case 4:
        *(_DWORD *)&a1[v10] = v14;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v12)
    {
      case 1:
        a1[v10] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_31;
      case 2:
        *(_WORD *)&a1[v10] = 0;
        goto LABEL_30;
      case 3:
        goto LABEL_42;
      case 4:
        *(_DWORD *)&a1[v10] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_31;
      default:
LABEL_30:
        if (a2) {
LABEL_31:
        }
          a1[v9] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_22EE13A78(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  unint64_t v3 = *(void *)(v2 + 64);
  if (*(_DWORD *)(v2 + 84)) {
    unint64_t v4 = *(void *)(v2 + 64);
  }
  else {
    unint64_t v4 = v3 + 1;
  }
  uint64_t v5 = *(void *)(*(void *)(a2 + 24) - 8);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  if (!*(_DWORD *)(v5 + 84)) {
    ++v7;
  }
  unint64_t v8 = v7 + v6;
  if (v8 <= v3) {
    unint64_t v8 = *(void *)(v2 + 64);
  }
  uint64_t v9 = 16;
  if (v8 > 0x10) {
    uint64_t v9 = v8;
  }
  uint64_t v10 = a1[v9];
  int v11 = v10 - 4;
  if (v10 >= 4)
  {
    if (v9 <= 3) {
      uint64_t v12 = v9;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *a1;
        goto LABEL_19;
      case 2:
        int v13 = *(unsigned __int16 *)a1;
        goto LABEL_19;
      case 3:
        int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_19;
      case 4:
        int v13 = *(_DWORD *)a1;
LABEL_19:
        unsigned int v14 = (v13 | (v11 << (8 * v9))) + 4;
        LODWORD(v10) = v13 + 4;
        if (v9 >= 4) {
          uint64_t v10 = v10;
        }
        else {
          uint64_t v10 = v14;
        }
        break;
      default:
        return v10;
    }
  }
  return v10;
}

void sub_22EE13BC8(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  size_t v5 = *(void *)(v4 + 64);
  if (*(_DWORD *)(v4 + 84)) {
    size_t v6 = *(void *)(v4 + 64);
  }
  else {
    size_t v6 = v5 + 1;
  }
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  unint64_t v8 = (v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  if (!*(_DWORD *)(v7 + 84)) {
    ++v9;
  }
  size_t v10 = v9 + v8;
  if (v10 <= v5) {
    size_t v10 = *(void *)(v4 + 64);
  }
  if (v10 <= 0x10) {
    size_t v10 = 16;
  }
  if (a2 > 3)
  {
    unsigned int v11 = ((a2 - 4) >> (8 * v10)) + 4;
    if (v10 <= 3)
    {
      int v12 = (a2 - 4) & ~(-1 << (8 * v10));
    }
    else
    {
      LOBYTE(v11) = 4;
      int v12 = a2 - 4;
    }
    a1[v10] = v11;
    if (v10 >= 4) {
      int v13 = 4;
    }
    else {
      int v13 = v10;
    }
    bzero(a1, v10);
    switch(v13)
    {
      case 2:
        *(_WORD *)a1 = v12;
        break;
      case 3:
        *(_WORD *)a1 = v12;
        a1[2] = BYTE2(v12);
        break;
      case 4:
        *(_DWORD *)a1 = v12;
        break;
      default:
        *a1 = v12;
        break;
    }
  }
  else
  {
    a1[v10] = a2;
  }
}

uint64_t sub_22EE13D58()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EE13D9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for PromotionalIconLoadingView();
  uint64_t v9 = a4 + *(int *)(v8 + 56);
  *(void *)uint64_t v9 = swift_getKeyPath();
  *(unsigned char *)(v9 + 8) = 0;
  size_t v10 = (void *)(a4 + *(int *)(v8 + 52));
  *size_t v10 = a2;
  v10[1] = a3;
  uint64_t v11 = type metadata accessor for PromotionalIconLoadingView.IconType();
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v11);
  return sub_22EBE06F0(a1, a4);
}

uint64_t sub_22EE13E88@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v48 = a4;
  uint64_t v49 = a2;
  uint64_t v46 = a3;
  uint64_t v15 = sub_22EE80040();
  OUTLINED_FUNCTION_0_0();
  uint64_t v17 = v16;
  OUTLINED_FUNCTION_9_7();
  MEMORY[0x270FA5388](v18);
  int v20 = (char *)v44 - v19;
  OUTLINED_FUNCTION_0_0();
  uint64_t v45 = v21;
  MEMORY[0x270FA5388](v22);
  OUTLINED_FUNCTION_11_0();
  uint64_t v25 = (char *)(v24 - v23);
  uint64_t v50 = a6;
  uint64_t v51 = a5;
  uint64_t v52 = a6;
  uint64_t v53 = a7;
  uint64_t v47 = a7;
  uint64_t v26 = a8;
  uint64_t v54 = a8;
  uint64_t v27 = type metadata accessor for PromotionalIconLoadingView();
  uint64_t v28 = a9 + *(int *)(v27 + 56);
  *(void *)uint64_t v28 = swift_getKeyPath();
  *(unsigned char *)(v28 + 8) = 0;
  if (a1)
  {
    uint64_t v29 = a9 + *(int *)(v27 + 52);
    uint64_t v30 = v50;
    uint64_t v31 = sub_22EE80040();
    uint64_t v32 = v29 + *(int *)(swift_getTupleTypeMetadata2() + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v29, v46, v15);
    OUTLINED_FUNCTION_4_2();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 32))(v32, v48, v31);
    uint64_t v51 = a5;
    uint64_t v52 = v30;
    uint64_t v53 = v47;
    uint64_t v54 = v26;
    uint64_t v34 = type metadata accessor for PromotionalIconLoadingView.IconType();
    swift_storeEnumTagMultiPayload();
    uint64_t v35 = v29;
    uint64_t v36 = 0;
    uint64_t v37 = v34;
  }
  else
  {
    v44[1] = v26;
    sub_22EE80040();
    OUTLINED_FUNCTION_4_2();
    OUTLINED_FUNCTION_5_2();
    v38();
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 32))(v20, v46, v15);
    if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, a5) == 1)
    {
      (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v15);
      uint64_t v39 = a9 + *(int *)(v27 + 52);
      uint64_t v37 = OUTLINED_FUNCTION_3_34();
      uint64_t v35 = v39;
      uint64_t v36 = 1;
    }
    else
    {
      char v40 = *(void (**)(uint64_t, char *, uint64_t))(v45 + 32);
      v40((uint64_t)v25, v20, a5);
      uint64_t v41 = a9 + *(int *)(v27 + 52);
      v40(v41, v25, a5);
      uint64_t v42 = OUTLINED_FUNCTION_3_34();
      swift_storeEnumTagMultiPayload();
      uint64_t v35 = v41;
      uint64_t v36 = 0;
      uint64_t v37 = v42;
    }
  }
  __swift_storeEnumTagSinglePayload(v35, v36, 1, v37);
  return sub_22EBE06F0(v49, a9);
}

uint64_t sub_22EE141AC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v111 = a2;
  unint64_t v3 = a1[2];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268627910);
  uint64_t v113 = a1[3];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268627918);
  OUTLINED_FUNCTION_15_9();
  sub_22EE7D810();
  OUTLINED_FUNCTION_10_2();
  sub_22EE7E8A0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861D580);
  OUTLINED_FUNCTION_15_9();
  uint64_t v4 = sub_22EE7CEE0();
  uint64_t v112 = a1[5];
  uint64_t v141 = v112;
  uint64_t v142 = sub_22EE17CDC(&qword_268627920, &qword_268627918, (void (*)(void))sub_22EB37198);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v138 = swift_getWitnessTable();
  unint64_t v139 = sub_22EB37144();
  uint64_t v5 = swift_getWitnessTable();
  unint64_t v120 = v4;
  uint64_t v121 = v5;
  uint64_t v108 = MEMORY[0x263F1AE68];
  swift_getOpaqueTypeMetadata2();
  sub_22EE7D810();
  sub_22EE7D810();
  sub_22EE7D810();
  sub_22EE7D810();
  unint64_t v114 = v3;
  uint64_t v110 = sub_22EE7D810();
  uint64_t v115 = sub_22EE7D810();
  uint64_t v6 = sub_22EE7D810();
  OUTLINED_FUNCTION_0_0();
  uint64_t v104 = v7;
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_1_18();
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_6_4((uint64_t)&v88 - v10);
  uint64_t v100 = sub_22EE7DC20();
  OUTLINED_FUNCTION_0_0();
  uint64_t v99 = v11;
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_6_4(v14 - v13);
  uint64_t v117 = a1;
  uint64_t v98 = *(a1 - 1);
  MEMORY[0x270FA5388](v15);
  uint64_t v95 = v16;
  OUTLINED_FUNCTION_6_4((uint64_t)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = a1[4];
  uint64_t v18 = sub_22EE17CDC(&qword_268627928, &qword_268627910, (void (*)(void))sub_22EE17D5C);
  unint64_t v120 = v4;
  uint64_t v121 = v5;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v136 = v17;
  uint64_t v137 = OpaqueTypeConformance2;
  uint64_t v20 = swift_getWitnessTable();
  uint64_t v134 = v18;
  uint64_t v135 = v20;
  uint64_t v132 = swift_getWitnessTable();
  uint64_t v133 = OpaqueTypeConformance2;
  uint64_t v21 = swift_getWitnessTable();
  uint64_t v130 = v17;
  uint64_t v131 = v21;
  uint64_t v22 = swift_getWitnessTable();
  uint64_t v128 = v17;
  uint64_t v129 = v17;
  uint64_t v23 = swift_getWitnessTable();
  uint64_t v126 = v22;
  uint64_t v127 = v23;
  uint64_t v124 = swift_getWitnessTable();
  uint64_t v125 = MEMORY[0x263F1BA00];
  uint64_t v110 = swift_getWitnessTable();
  uint64_t v24 = sub_22EE7C6D0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v93 = v25;
  OUTLINED_FUNCTION_9_7();
  MEMORY[0x270FA5388](v26);
  OUTLINED_FUNCTION_6_4((uint64_t)&v88 - v27);
  uint64_t v28 = swift_getWitnessTable();
  uint64_t v106 = v24;
  unint64_t v120 = v24;
  uint64_t v109 = v28;
  uint64_t v121 = v28;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  OUTLINED_FUNCTION_0_0();
  uint64_t v94 = v30;
  MEMORY[0x270FA5388](v31);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_1_18();
  MEMORY[0x270FA5388](v32);
  OUTLINED_FUNCTION_6_4((uint64_t)&v88 - v33);
  unint64_t v120 = v114;
  uint64_t v121 = v113;
  uint64_t v96 = v17;
  uint64_t v122 = v17;
  uint64_t v123 = v112;
  uint64_t v34 = type metadata accessor for PromotionalIconLoadingView.IconType();
  uint64_t v35 = sub_22EE80040();
  OUTLINED_FUNCTION_0_0();
  uint64_t v37 = v36;
  OUTLINED_FUNCTION_9_7();
  MEMORY[0x270FA5388](v38);
  char v40 = (char *)&v88 - v39;
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861FFA0);
  MEMORY[0x270FA5388](v41 - 8);
  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_1_18();
  MEMORY[0x270FA5388](v42);
  uint64_t v44 = (char *)&v88 - v43;
  uint64_t v45 = sub_22EE7C2B0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v47 = v46;
  MEMORY[0x270FA5388](v48);
  OUTLINED_FUNCTION_11_0();
  uint64_t v51 = v50 - v49;
  uint64_t v108 = OpaqueTypeMetadata2;
  uint64_t v115 = v6;
  uint64_t v105 = sub_22EE7D810();
  OUTLINED_FUNCTION_0_0();
  uint64_t v107 = v52;
  OUTLINED_FUNCTION_9_7();
  MEMORY[0x270FA5388](v53);
  uint64_t v55 = (char *)&v88 - v54;
  uint64_t v56 = v116;
  sub_22EE17DD8(v116, (uint64_t)v44);
  if (__swift_getEnumTagSinglePayload((uint64_t)v44, 1, v45) == 1)
  {
    sub_22EB56E1C((uint64_t)v44, &qword_26861FFA0);
    OUTLINED_FUNCTION_12_30();
LABEL_8:
    unint64_t v120 = 0x8000000000000000;
    uint64_t v78 = v103;
    sub_22EE155B8(&v120, v57, v103);
    uint64_t v79 = v102;
    uint64_t v80 = v115;
    sub_22EB69440(v78, v115, v37);
    uint64_t v81 = *(void (**)(uint64_t))(v104 + 8);
    uint64_t v82 = OUTLINED_FUNCTION_11_28();
    v81(v82);
    sub_22EB69440(v79, v80, v37);
    OUTLINED_FUNCTION_4_38();
    swift_getOpaqueTypeConformance2();
    sub_22EC4F330();
    uint64_t v83 = OUTLINED_FUNCTION_11_28();
    v81(v83);
    ((void (*)(uint64_t, uint64_t))v81)(v79, v80);
    goto LABEL_9;
  }
  uint64_t v91 = v47;
  uint64_t v58 = *(void (**)(uint64_t, char *, uint64_t))(v47 + 32);
  uint64_t v90 = v51;
  v58(v51, v44, v45);
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v40, v56 + *((int *)v117 + 13), v35);
  if (__swift_getEnumTagSinglePayload((uint64_t)v40, 1, v34) == 1)
  {
    uint64_t v59 = *(void (**)(char *, uint64_t))(v37 + 8);
    v37 += 8;
    v59(v40, v35);
LABEL_7:
    OUTLINED_FUNCTION_5_2();
    v77();
    OUTLINED_FUNCTION_12_30();
    goto LABEL_8;
  }
  char v60 = sub_22EE14E34(v34);
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_5_2();
  v61();
  if ((v60 & 1) == 0) {
    goto LABEL_7;
  }
  uint64_t v62 = v89;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v91 + 16))(v89, v90, v45);
  __swift_storeEnumTagSinglePayload(v62, 0, 1, v45);
  uint64_t v63 = v98;
  uint64_t v64 = v97;
  uint64_t v65 = v117;
  (*(void (**)(uint64_t, uint64_t, void *))(v98 + 16))(v97, v116, v117);
  unint64_t v66 = (*(unsigned __int8 *)(v63 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
  uint64_t v67 = (char *)swift_allocObject();
  uint64_t v68 = v113;
  *((void *)v67 + 2) = v114;
  *((void *)v67 + 3) = v68;
  uint64_t v69 = v112;
  *((void *)v67 + 4) = v96;
  *((void *)v67 + 5) = v69;
  (*(void (**)(char *, uint64_t, void *))(v63 + 32))(&v67[v66], v64, v65);
  uint64_t v37 = v110;
  sub_22EE7C6C0();
  sub_22EE7DC00();
  uint64_t v70 = v92;
  sub_22EE7E410();
  OUTLINED_FUNCTION_5_2();
  v71();
  OUTLINED_FUNCTION_5_2();
  v72();
  OUTLINED_FUNCTION_4_38();
  uint64_t v73 = swift_getOpaqueTypeConformance2();
  uint64_t v74 = v108;
  sub_22EB69440(v70, v108, v73);
  uint64_t v75 = *(void (**)(void))(v94 + 8);
  OUTLINED_FUNCTION_7_30();
  v75();
  sub_22EB69440(v101, v74, v73);
  sub_22EC4F278();
  OUTLINED_FUNCTION_7_30();
  v75();
  OUTLINED_FUNCTION_7_30();
  v75();
  OUTLINED_FUNCTION_5_2();
  v76();
LABEL_9:
  OUTLINED_FUNCTION_4_38();
  uint64_t v118 = swift_getOpaqueTypeConformance2();
  uint64_t v119 = v37;
  uint64_t v84 = v105;
  uint64_t v85 = swift_getWitnessTable();
  sub_22EB69440(v55, v84, v85);
  OUTLINED_FUNCTION_5_2();
  return v86();
}

uint64_t sub_22EE14E34(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  __n128 v3 = MEMORY[0x270FA5388](a1);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v2 + 16))(v5, v3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 2) >= 2)
  {
    if (EnumCaseMultiPayload)
    {
      uint64_t v8 = sub_22EE80040();
      uint64_t v9 = sub_22EE80040();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(&v5[*(int *)(TupleTypeMetadata2 + 48)], v9);
      (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v5, v8);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v2 + 8))(v5, a1);
    }
    return 1;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, a1);
    return 0;
  }
}

uint64_t sub_22EE14FE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v50 = a5;
  uint64_t v46 = a4;
  uint64_t v51 = a2;
  uint64_t v49 = a1;
  uint64_t v52 = a7;
  uint64_t v9 = sub_22EE7CE10();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v47 = (void *)((char *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268627910);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268627918);
  sub_22EE7D810();
  sub_22EE7E8A0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861D580);
  uint64_t v12 = sub_22EE7CEE0();
  uint64_t v13 = sub_22EE17CDC(&qword_268627920, &qword_268627918, (void (*)(void))sub_22EB37198);
  uint64_t v75 = a6;
  uint64_t v76 = v13;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v14 = swift_getWitnessTable();
  unint64_t v15 = sub_22EB37144();
  uint64_t v72 = v14;
  unint64_t v73 = v15;
  uint64_t v42 = v12;
  uint64_t v41 = swift_getWitnessTable();
  unint64_t v68 = v12;
  uint64_t v69 = v41;
  void v39[2] = MEMORY[0x263F1AE68];
  swift_getOpaqueTypeMetadata2();
  v39[0] = sub_22EE7D810();
  v39[3] = sub_22EE7D810();
  uint64_t v43 = sub_22EE7D810();
  v39[1] = sub_22EE7D810();
  uint64_t v44 = sub_22EE7D810();
  uint64_t v45 = sub_22EE7D810();
  uint64_t v16 = sub_22EE7D810();
  uint64_t v48 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v20 = MEMORY[0x270FA5388](v19);
  char v40 = (char *)v39 - v21;
  uint64_t v22 = v47;
  (*(void (**)(uint64_t *, uint64_t, uint64_t, __n128))(v10 + 16))(v47, v49, v9, v20);
  unint64_t v68 = a3;
  uint64_t v69 = v46;
  uint64_t v23 = v50;
  uint64_t v70 = v50;
  uint64_t v71 = a6;
  uint64_t v24 = type metadata accessor for PromotionalIconLoadingView();
  uint64_t v25 = *(void *)(v51 + *(int *)(v24 + 56));
  j__swift_retain(v25);
  sub_22EB1740C();
  uint64_t v27 = v26;
  j_j__swift_release(v25);
  sub_22ED334A4(v22, 1, v27, (uint64_t *)&v68);
  unint64_t v28 = v68;
  unint64_t v67 = v68;
  sub_22EE155B8(&v67, v24, (uint64_t)v18);
  sub_22ED336F0(v28);
  uint64_t v29 = sub_22EE17CDC(&qword_268627928, &qword_268627910, (void (*)(void))sub_22EE17D5C);
  unint64_t v68 = v42;
  uint64_t v69 = v41;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v65 = v23;
  uint64_t v66 = OpaqueTypeConformance2;
  uint64_t v31 = swift_getWitnessTable();
  uint64_t v63 = v29;
  uint64_t v64 = v31;
  uint64_t v61 = swift_getWitnessTable();
  uint64_t v62 = OpaqueTypeConformance2;
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v59 = v23;
  uint64_t v60 = v32;
  uint64_t v33 = swift_getWitnessTable();
  uint64_t v57 = v23;
  uint64_t v58 = v23;
  uint64_t v34 = swift_getWitnessTable();
  uint64_t v55 = v33;
  uint64_t v56 = v34;
  uint64_t v53 = swift_getWitnessTable();
  uint64_t v54 = MEMORY[0x263F1BA00];
  uint64_t v35 = swift_getWitnessTable();
  uint64_t v36 = v40;
  sub_22EB69440(v18, v16, v35);
  uint64_t v37 = *(void (**)(char *, uint64_t))(v48 + 8);
  v37(v18, v16);
  sub_22EB69440(v36, v16, v35);
  return ((uint64_t (*)(char *, uint64_t))v37)(v36, v16);
}

uint64_t sub_22EE155B8@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v234 = a3;
  unint64_t v230 = a1;
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = sub_22EE7D810();
  uint64_t v213 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v212 = (char *)&v193 - v6;
  uint64_t v7 = *(void *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268627918);
  sub_22EE7D810();
  sub_22EE7E8A0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861D580);
  uint64_t v8 = sub_22EE7CEE0();
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = sub_22EE17CDC(&qword_268627920, &qword_268627918, (void (*)(void))sub_22EB37198);
  uint64_t v336 = v9;
  uint64_t v337 = v10;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v11 = swift_getWitnessTable();
  unint64_t v12 = sub_22EB37144();
  uint64_t v333 = v11;
  unint64_t v334 = v12;
  uint64_t v13 = swift_getWitnessTable();
  uint64_t v242 = v8;
  uint64_t v329 = v8;
  uint64_t v330 = v13;
  uint64_t v238 = v13;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v201 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v200 = (uint64_t)&v193 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v204 = (char *)&v193 - v17;
  uint64_t v18 = sub_22EE7D810();
  uint64_t v203 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  unint64_t v202 = (char *)&v193 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v209 = (char *)&v193 - v21;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268627910);
  uint64_t v23 = sub_22EE7D810();
  uint64_t v208 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  unsigned int v207 = (char *)&v193 - v24;
  uint64_t v25 = sub_22EE7E8C0();
  uint64_t v197 = *(void *)(v25 - 8);
  uint64_t v198 = v25;
  MEMORY[0x270FA5388](v25);
  unint64_t v196 = (char *)&v193 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v206 = v22;
  MEMORY[0x270FA5388](v27);
  uint64_t v199 = (char *)&v193 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v237 = v23;
  uint64_t v224 = OpaqueTypeMetadata2;
  uint64_t v29 = sub_22EE7D810();
  uint64_t v211 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v210 = (char *)&v193 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  int v227 = (char *)&v193 - v32;
  uint64_t v33 = sub_22EE80040();
  uint64_t v214 = *(void *)(v33 - 8);
  uint64_t v215 = v33;
  MEMORY[0x270FA5388](v33);
  uint64_t v218 = (uint64_t)&v193 - v34;
  uint64_t v35 = sub_22EE80040();
  uint64_t v220 = *(void *)(v35 - 8);
  uint64_t v221 = v35;
  MEMORY[0x270FA5388](v35);
  unint64_t v205 = (char *)&v193 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v37);
  uint64_t v219 = (char *)&v193 - v38;
  uint64_t v236 = v29;
  uint64_t v39 = sub_22EE7D810();
  uint64_t v217 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  unint64_t v216 = (char *)&v193 - v40;
  uint64_t v233 = v41;
  uint64_t v240 = v5;
  uint64_t v42 = sub_22EE7D810();
  uint64_t v223 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v222 = (char *)&v193 - v43;
  uint64_t v229 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v46 = (char *)&v193 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v47);
  unint64_t v195 = (char *)&v193 - v48;
  MEMORY[0x270FA5388](v49);
  uint64_t v226 = (char *)&v193 - v50;
  MEMORY[0x270FA5388](v51);
  int v228 = (char *)&v193 - v52;
  uint64_t v53 = *(void *)(a2 + 32);
  uint64_t v225 = v4;
  uint64_t v329 = v4;
  uint64_t v330 = v7;
  uint64_t v241 = v53;
  uint64_t v331 = v53;
  uint64_t v332 = v9;
  uint64_t v54 = type metadata accessor for PromotionalIconLoadingView.IconType();
  uint64_t v55 = sub_22EE80040();
  uint64_t v56 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v58 = (uint64_t *)((char *)&v193 - v57);
  uint64_t v239 = v42;
  uint64_t v59 = sub_22EE7D810();
  uint64_t v231 = *(void *)(v59 - 8);
  uint64_t v232 = v59;
  __n128 v60 = MEMORY[0x270FA5388](v59);
  uint64_t v62 = (char *)&v193 - v61;
  unint64_t v63 = *v230;
  (*(void (**)(void *, unint64_t, uint64_t, __n128))(v56 + 16))(v58, (unint64_t)v235 + *(int *)(a2 + 52), v55, v60);
  if (__swift_getEnumTagSinglePayload((uint64_t)v58, 1, v54) == 1)
  {
    uint64_t v64 = sub_22EE17CDC(&qword_268627928, &qword_268627910, (void (*)(void))sub_22EE17D5C);
    uint64_t v65 = v238;
    uint64_t v329 = v242;
    uint64_t v330 = v238;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v67 = v241;
    uint64_t v327 = v241;
    uint64_t v328 = OpaqueTypeConformance2;
    uint64_t v68 = swift_getWitnessTable();
    uint64_t v325 = v64;
    uint64_t v326 = v68;
    uint64_t v323 = swift_getWitnessTable();
    uint64_t v324 = OpaqueTypeConformance2;
    uint64_t v69 = swift_getWitnessTable();
    uint64_t v321 = v67;
    uint64_t v322 = v69;
    uint64_t v70 = swift_getWitnessTable();
    uint64_t v319 = v67;
    uint64_t v320 = v67;
    uint64_t v71 = swift_getWitnessTable();
    uint64_t v317 = v70;
    uint64_t v318 = v71;
    swift_getWitnessTable();
    sub_22EC4F330();
    uint64_t v72 = v65;
  }
  else
  {
    unint64_t v194 = v62;
    unint64_t v230 = (unint64_t *)v18;
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v74 = v238;
    uint64_t v75 = v227;
    uint64_t v76 = v224;
    switch(EnumCaseMultiPayload)
    {
      case 1:
        uint64_t v93 = v221;
        uint64_t v94 = v215;
        uint64_t v95 = (char *)v58 + *(int *)(swift_getTupleTypeMetadata2() + 48);
        (*(void (**)(char *, void *, uint64_t))(v220 + 32))(v219, v58, v93);
        (*(void (**)(uint64_t, char *, uint64_t))(v214 + 32))(v218, v95, v94);
        uint64_t v96 = (void (*)(void, void))v63;
        if (v63 >> 62)
        {
          uint64_t v97 = v225;
          uint64_t v98 = v220;
          uint64_t v99 = (uint64_t)v205;
          if (v63 >> 62 == 1 || v63 == 0x8000000000000000)
          {
            uint64_t v100 = v221;
            (*(void (**)(char *, char *))(v220 + 16))(v205, v219);
            if (__swift_getEnumTagSinglePayload(v99, 1, v97) == 1)
            {
              (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v99, v100);
              uint64_t v101 = v200;
              sub_22EE172A8(v218, a2, v200);
              uint64_t v329 = v242;
              uint64_t v330 = v238;
              uint64_t v102 = swift_getOpaqueTypeConformance2();
              uint64_t v103 = v204;
              sub_22EB69440(v101, v76, v102);
              uint64_t v104 = *(void (**)(uint64_t, uint64_t))(v201 + 8);
              v104(v101, v76);
              sub_22EB69440(v103, v76, v102);
              uint64_t v105 = v209;
              uint64_t v106 = v241;
              sub_22EC4F330();
              v104(v101, v76);
              v104((uint64_t)v103, v76);
            }
            else
            {
              uint64_t v151 = v229;
              unint64_t v152 = v195;
              (*(void (**)(char *, uint64_t, uint64_t))(v229 + 32))(v195, v99, v97);
              uint64_t v153 = v228;
              uint64_t v106 = v241;
              sub_22EB69440(v152, v97, v241);
              uint64_t v154 = v226;
              sub_22EB69440(v153, v97, v106);
              uint64_t v329 = v242;
              uint64_t v330 = v238;
              swift_getOpaqueTypeConformance2();
              uint64_t v105 = v209;
              sub_22EC4F278();
              uint64_t v155 = *(void (**)(char *, uint64_t))(v151 + 8);
              v155(v154, v97);
              v155(v153, v97);
              v155(v152, v97);
            }
            uint64_t v156 = v230;
            uint64_t v329 = v242;
            uint64_t v330 = v238;
            unint64_t v235 = (void (*)(void, void))swift_getOpaqueTypeConformance2();
            uint64_t v261 = v106;
            unsigned int v262 = v235;
            uint64_t v157 = swift_getWitnessTable();
            unsigned int v158 = v202;
            sub_22EB69440(v105, v156, v157);
            uint64_t v159 = sub_22EE17CDC(&qword_268627928, &qword_268627910, (void (*)(void))sub_22EE17D5C);
            uint64_t v160 = v207;
            sub_22EC4F330();
            uint64_t v161 = *(void (**)(char *, unint64_t *))(v203 + 8);
            v161(v158, v230);
            uint64_t v259 = v159;
            uint64_t v162 = v230;
            uint64_t v260 = v157;
            uint64_t v163 = v237;
            swift_getWitnessTable();
            uint64_t v75 = v227;
            sub_22EC4F278();
            (*(void (**)(char *, uint64_t))(v208 + 8))(v160, v163);
            v161(v209, v162);
            uint64_t v146 = v238;
          }
          else
          {
            uint64_t v164 = v200;
            sub_22EE172A8(v218, a2, v200);
            uint64_t v329 = v242;
            uint64_t v330 = v238;
            uint64_t v165 = swift_getOpaqueTypeConformance2();
            uint64_t v166 = v204;
            sub_22EB69440(v164, v76, v165);
            uint64_t v167 = *(void (**)(uint64_t, uint64_t))(v201 + 8);
            v167(v164, v76);
            sub_22EB69440(v166, v76, v165);
            uint64_t v168 = sub_22EE17CDC(&qword_268627928, &qword_268627910, (void (*)(void))sub_22EE17D5C);
            uint64_t v277 = v241;
            uint64_t v278 = v165;
            uint64_t v169 = swift_getWitnessTable();
            uint64_t v275 = v168;
            uint64_t v276 = v169;
            swift_getWitnessTable();
            sub_22EC4F330();
            v167(v164, v76);
            uint64_t v146 = v238;
            v167((uint64_t)v204, v76);
          }
        }
        else
        {
          uint64_t v138 = v196;
          uint64_t v137 = v197;
          uint64_t v139 = v198;
          (*(void (**)(char *, void, uint64_t))(v197 + 104))(v196, *MEMORY[0x263F1B4B8], v198);
          swift_retain();
          uint64_t v140 = sub_22EE7E8E0();
          unint64_t v235 = v96;
          uint64_t v141 = v140;
          (*(void (**)(char *, uint64_t))(v137 + 8))(v138, v139);
          uint64_t v142 = sub_22EE7ED70();
          uint64_t v329 = v141;
          LOBYTE(v330) = 0;
          uint64_t v331 = v142;
          uint64_t v332 = v143;
          if (qword_26861B6B8 != -1) {
            swift_once();
          }
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(qword_268627938);
          sub_22EE17D5C();
          uint64_t v144 = (uint64_t)v199;
          sub_22EE7E4C0();
          swift_release();
          swift_bridgeObjectRelease();
          uint64_t v145 = sub_22EE17CDC(&qword_268627928, &qword_268627910, (void (*)(void))sub_22EE17D5C);
          uint64_t v146 = v238;
          uint64_t v329 = v242;
          uint64_t v330 = v238;
          uint64_t v147 = swift_getOpaqueTypeConformance2();
          uint64_t v257 = v241;
          uint64_t v258 = v147;
          uint64_t v148 = swift_getWitnessTable();
          char v149 = v207;
          sub_22EC4F278();
          uint64_t v255 = v145;
          uint64_t v256 = v148;
          uint64_t v150 = v237;
          swift_getWitnessTable();
          uint64_t v75 = v227;
          sub_22EC4F278();
          sub_22ED336F0((unint64_t)v235);
          (*(void (**)(char *, uint64_t))(v208 + 8))(v149, v150);
          sub_22EB56E1C(v144, &qword_268627910);
        }
        uint64_t v170 = sub_22EE17CDC(&qword_268627928, &qword_268627910, (void (*)(void))sub_22EE17D5C);
        uint64_t v329 = v242;
        uint64_t v330 = v146;
        uint64_t v171 = swift_getOpaqueTypeConformance2();
        uint64_t v172 = v241;
        uint64_t v273 = v241;
        uint64_t v274 = v171;
        uint64_t v173 = swift_getWitnessTable();
        uint64_t v271 = v170;
        uint64_t v272 = v173;
        uint64_t v269 = swift_getWitnessTable();
        uint64_t v270 = v171;
        uint64_t v174 = v236;
        uint64_t v175 = swift_getWitnessTable();
        unsigned int v176 = v210;
        sub_22EB69440(v75, v174, v175);
        uint64_t v177 = v216;
        sub_22EC4F330();
        unint64_t v235 = *(void (**)(void, void))(v211 + 8);
        v235(v176, v174);
        uint64_t v267 = v172;
        uint64_t v268 = v175;
        uint64_t v178 = v233;
        uint64_t v179 = swift_getWitnessTable();
        uint64_t v265 = v172;
        uint64_t v266 = v172;
        uint64_t v180 = swift_getWitnessTable();
        uint64_t v181 = v222;
        sub_22EC4F278();
        (*(void (**)(char *, uint64_t))(v217 + 8))(v177, v178);
        uint64_t v263 = v179;
        uint64_t v264 = v180;
        uint64_t v182 = v239;
        swift_getWitnessTable();
        uint64_t v62 = v194;
        sub_22EC4F278();
        (*(void (**)(char *, uint64_t))(v223 + 8))(v181, v182);
        v235(v227, v174);
        uint64_t v72 = v238;
        (*(void (**)(uint64_t, uint64_t))(v214 + 8))(v218, v215);
        (*(void (**)(char *, uint64_t))(v220 + 8))(v219, v221);
        break;
      case 2:
        uint64_t v107 = v228;
        uint64_t v108 = v229;
        uint64_t v109 = v58;
        uint64_t v110 = v225;
        (*(void (**)(char *, void *, uint64_t))(v229 + 32))(v228, v109, v225);
        uint64_t v111 = v226;
        uint64_t v112 = v241;
        sub_22EB69440(v107, v110, v241);
        sub_22EB69440(v111, v110, v112);
        uint64_t v113 = v212;
        sub_22EC4F278();
        unint64_t v235 = *(void (**)(void, void))(v108 + 8);
        v235(v46, v110);
        uint64_t v114 = sub_22EE17CDC(&qword_268627928, &qword_268627910, (void (*)(void))sub_22EE17D5C);
        uint64_t v329 = v242;
        uint64_t v330 = v74;
        uint64_t v115 = swift_getOpaqueTypeConformance2();
        uint64_t v289 = v112;
        uint64_t v290 = v115;
        uint64_t v116 = swift_getWitnessTable();
        uint64_t v287 = v114;
        uint64_t v288 = v116;
        uint64_t v285 = swift_getWitnessTable();
        uint64_t v286 = v115;
        uint64_t v117 = swift_getWitnessTable();
        uint64_t v283 = v112;
        uint64_t v284 = v117;
        uint64_t v118 = swift_getWitnessTable();
        uint64_t v281 = v112;
        uint64_t v282 = v112;
        uint64_t v119 = v240;
        uint64_t v120 = swift_getWitnessTable();
        uint64_t v121 = v222;
        sub_22EC4F330();
        (*(void (**)(char *, uint64_t))(v213 + 8))(v113, v119);
        uint64_t v279 = v118;
        uint64_t v280 = v120;
        goto LABEL_12;
      case 3:
        uint64_t v122 = v228;
        uint64_t v123 = v229;
        uint64_t v124 = v58;
        uint64_t v110 = v225;
        (*(void (**)(char *, void *, uint64_t))(v229 + 32))(v228, v124, v225);
        uint64_t v125 = v226;
        uint64_t v126 = v241;
        sub_22EB69440(v122, v110, v241);
        sub_22EB69440(v125, v110, v126);
        uint64_t v127 = v212;
        sub_22EC4F330();
        unint64_t v235 = *(void (**)(void, void))(v123 + 8);
        v235(v46, v110);
        uint64_t v128 = sub_22EE17CDC(&qword_268627928, &qword_268627910, (void (*)(void))sub_22EE17D5C);
        uint64_t v329 = v242;
        uint64_t v330 = v74;
        uint64_t v129 = swift_getOpaqueTypeConformance2();
        uint64_t v301 = v126;
        uint64_t v302 = v129;
        uint64_t v130 = swift_getWitnessTable();
        uint64_t v299 = v128;
        uint64_t v300 = v130;
        uint64_t v297 = swift_getWitnessTable();
        uint64_t v298 = v129;
        uint64_t v131 = swift_getWitnessTable();
        uint64_t v295 = v126;
        uint64_t v296 = v131;
        uint64_t v132 = swift_getWitnessTable();
        uint64_t v293 = v126;
        uint64_t v294 = v126;
        uint64_t v133 = v240;
        uint64_t v134 = swift_getWitnessTable();
        uint64_t v121 = v222;
        sub_22EC4F330();
        (*(void (**)(char *, uint64_t))(v213 + 8))(v127, v133);
        uint64_t v291 = v132;
        uint64_t v292 = v134;
LABEL_12:
        uint64_t v135 = v239;
        swift_getWitnessTable();
        uint64_t v62 = v194;
        sub_22EC4F278();
        (*(void (**)(char *, uint64_t))(v223 + 8))(v121, v135);
        uint64_t v136 = (void (*)(char *, uint64_t))v235;
        v235(v226, v110);
        v136(v228, v110);
        goto LABEL_13;
      default:
        uint64_t v77 = (void (*)(uint64_t *))*v58;
        int v227 = (char *)v58[1];
        uint64_t v329 = v63;
        uint64_t v78 = v226;
        v77(&v329);
        uint64_t v79 = v228;
        uint64_t v80 = v225;
        uint64_t v81 = v241;
        sub_22EB69440(v78, v225, v241);
        uint64_t v82 = *(void (**)(void, void))(v229 + 8);
        v229 += 8;
        unint64_t v235 = v82;
        v82(v78, v80);
        sub_22EB69440(v79, v80, v81);
        uint64_t v83 = sub_22EE17CDC(&qword_268627928, &qword_268627910, (void (*)(void))sub_22EE17D5C);
        uint64_t v329 = v242;
        uint64_t v330 = v238;
        uint64_t v84 = swift_getOpaqueTypeConformance2();
        uint64_t v253 = v81;
        uint64_t v254 = v84;
        uint64_t v85 = swift_getWitnessTable();
        uint64_t v251 = v83;
        uint64_t v252 = v85;
        uint64_t v249 = swift_getWitnessTable();
        uint64_t v250 = v84;
        uint64_t v86 = swift_getWitnessTable();
        uint64_t v87 = v216;
        sub_22EC4F278();
        v235(v78, v80);
        uint64_t v247 = v81;
        uint64_t v248 = v86;
        uint64_t v88 = v233;
        uint64_t v89 = swift_getWitnessTable();
        uint64_t v245 = v81;
        uint64_t v246 = v81;
        uint64_t v90 = swift_getWitnessTable();
        uint64_t v91 = v222;
        sub_22EC4F278();
        (*(void (**)(char *, uint64_t))(v217 + 8))(v87, v88);
        uint64_t v243 = v89;
        uint64_t v244 = v90;
        uint64_t v92 = v239;
        swift_getWitnessTable();
        uint64_t v62 = v194;
        sub_22EC4F278();
        swift_release();
        (*(void (**)(char *, uint64_t))(v223 + 8))(v91, v92);
        v235(v228, v80);
LABEL_13:
        uint64_t v72 = v238;
        break;
    }
  }
  uint64_t v183 = sub_22EE17CDC(&qword_268627928, &qword_268627910, (void (*)(void))sub_22EE17D5C);
  uint64_t v329 = v242;
  uint64_t v330 = v72;
  uint64_t v184 = swift_getOpaqueTypeConformance2();
  uint64_t v185 = v241;
  uint64_t v315 = v241;
  uint64_t v316 = v184;
  uint64_t v186 = swift_getWitnessTable();
  uint64_t v313 = v183;
  uint64_t v314 = v186;
  uint64_t v311 = swift_getWitnessTable();
  uint64_t v312 = v184;
  uint64_t v187 = swift_getWitnessTable();
  uint64_t v309 = v185;
  uint64_t v310 = v187;
  uint64_t v188 = swift_getWitnessTable();
  uint64_t v307 = v185;
  uint64_t v308 = v185;
  uint64_t v189 = swift_getWitnessTable();
  uint64_t v305 = v188;
  uint64_t v306 = v189;
  uint64_t v303 = swift_getWitnessTable();
  uint64_t v304 = MEMORY[0x263F1BA00];
  uint64_t v190 = v232;
  uint64_t v191 = swift_getWitnessTable();
  sub_22EB69440(v62, v190, v191);
  return (*(uint64_t (**)(char *, uint64_t))(v231 + 8))(v62, v190);
}

uint64_t sub_22EE172A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v40 = a3;
  uint64_t v4 = sub_22EE7DC20();
  uint64_t v38 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v37 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = *(void *)(a2 + 24);
  uint64_t v6 = a2;
  uint64_t v30 = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268627918);
  void v29[2] = sub_22EE7D810();
  uint64_t v7 = sub_22EE7E8A0();
  uint64_t v35 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v32 = (char *)v29 - v8;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861D580);
  uint64_t v9 = sub_22EE7CEE0();
  uint64_t v34 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v29 - v10;
  uint64_t v12 = *(void *)(v6 + 40);
  uint64_t v13 = sub_22EE17CDC(&qword_268627920, &qword_268627918, (void (*)(void))sub_22EB37198);
  uint64_t v51 = v12;
  uint64_t v52 = v13;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v14 = swift_getWitnessTable();
  v29[1] = v14;
  unint64_t v15 = sub_22EB37144();
  uint64_t v48 = v14;
  unint64_t v49 = v15;
  uint64_t v16 = swift_getWitnessTable();
  uint64_t v46 = v9;
  uint64_t v47 = v16;
  uint64_t v31 = MEMORY[0x263F1AE68];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v18 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v20 = (char *)v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)v29 - v22;
  uint64_t v41 = *(void *)(v30 + 16);
  uint64_t v42 = v33;
  uint64_t v43 = *(void *)(v30 + 32);
  uint64_t v44 = v12;
  uint64_t v45 = v36;
  uint64_t v24 = v32;
  sub_22EE7E890();
  sub_22EB370F8();
  sub_22EE7E360();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v24, v7);
  uint64_t v25 = v37;
  sub_22EE7DC00();
  sub_22EE7E410();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v25, v39);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v9);
  uint64_t v46 = v9;
  uint64_t v47 = v16;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_22EB69440(v20, OpaqueTypeMetadata2, OpaqueTypeConformance2);
  uint64_t v27 = *(void (**)(char *, uint64_t))(v18 + 8);
  v27(v20, OpaqueTypeMetadata2);
  sub_22EB69440(v23, OpaqueTypeMetadata2, OpaqueTypeConformance2);
  return ((uint64_t (*)(char *, uint64_t))v27)(v23, OpaqueTypeMetadata2);
}

uint64_t sub_22EE17798@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v39 = a3;
  uint64_t v40 = a4;
  uint64_t v36 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627918);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_22EE80040();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v34 - v10;
  uint64_t v12 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v35 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v34 = (char *)&v34 - v16;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v34 - v18;
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v34 - v21;
  uint64_t v38 = v5;
  uint64_t v23 = sub_22EE7D810();
  uint64_t v37 = *(void *)(v23 - 8);
  __n128 v24 = MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v34 - v25;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))(v11, v36, v8, v24);
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, a2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v22, v11, a2);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v19, v22, a2);
    if ((swift_dynamicCast() & 1) == 0)
    {
      uint64_t v28 = v34;
      uint64_t v27 = v39;
      sub_22EB69440(v22, a2, v39);
      uint64_t v29 = v35;
      sub_22EB69440(v28, a2, v27);
      sub_22EE17CDC(&qword_268627920, &qword_268627918, (void (*)(void))sub_22EB37198);
      sub_22EC4F278();
      uint64_t v30 = *(void (**)(char *, uint64_t))(v12 + 8);
      v30(v29, a2);
      v30(v28, a2);
      v30(v22, a2);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v22, a2);
  }
  char v43 = 1;
  if (qword_26861B6B8 != -1) {
    swift_once();
  }
  sub_22EB37198();
  swift_bridgeObjectRetain();
  sub_22EE7E4C0();
  swift_bridgeObjectRelease();
  sub_22EE17CDC(&qword_268627920, &qword_268627918, (void (*)(void))sub_22EB37198);
  uint64_t v27 = v39;
  sub_22EC4F330();
  sub_22EB56E1C((uint64_t)v7, &qword_268627918);
LABEL_9:
  uint64_t v31 = sub_22EE17CDC(&qword_268627920, &qword_268627918, (void (*)(void))sub_22EB37198);
  uint64_t v41 = v27;
  uint64_t v42 = v31;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_22EB69440(v26, v23, WitnessTable);
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v26, v23);
}

uint64_t sub_22EE17CDC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    sub_22EBDE744();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22EE17D5C()
{
  unint64_t result = qword_268627930;
  if (!qword_268627930)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_268627938);
    sub_22EE0F404();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627930);
  }
  return result;
}

uint64_t sub_22EE17DD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861FFA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22EE17E40()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  OUTLINED_FUNCTION_13_32();
  uint64_t v3 = type metadata accessor for PromotionalIconLoadingView();
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  uint64_t v5 = v0 + v4;
  uint64_t v6 = sub_22EE7C2B0();
  if (!__swift_getEnumTagSinglePayload(v0 + v4, 1, v6))
  {
    OUTLINED_FUNCTION_4_2();
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v0 + v4, v6);
  }
  uint64_t v8 = v5 + *(int *)(v3 + 52);
  OUTLINED_FUNCTION_13_32();
  uint64_t v9 = type metadata accessor for PromotionalIconLoadingView.IconType();
  if (!__swift_getEnumTagSinglePayload(v8, 1, v9))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_release();
        break;
      case 1u:
        if (!__swift_getEnumTagSinglePayload(v8, 1, v2))
        {
          OUTLINED_FUNCTION_4_2();
          (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v8, v2);
        }
        sub_22EE80040();
        OUTLINED_FUNCTION_10_2();
        sub_22EE80040();
        uint64_t v12 = v8 + *(int *)(swift_getTupleTypeMetadata2() + 48);
        if (!__swift_getEnumTagSinglePayload(v12, 1, v1))
        {
          OUTLINED_FUNCTION_4_2();
          (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v1);
        }
        break;
      case 2u:
      case 3u:
        OUTLINED_FUNCTION_4_2();
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v2);
        break;
      default:
        break;
    }
  }
  j_j__swift_release(*(void *)(v5 + *(int *)(v3 + 56)));
  return swift_deallocObject();
}

uint64_t sub_22EE180CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v9 = *(void *)(type metadata accessor for PromotionalIconLoadingView() - 8);
  uint64_t v10 = (uint64_t)v2 + ((*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));

  return sub_22EE14FE8(a1, v10, v5, v6, v7, v8, a2);
}

uint64_t sub_22EE18188@<X0>(uint64_t a1@<X8>)
{
  return sub_22EE17798(v1[6], v1[3], v1[5], a1);
}

uint64_t sub_22EE181A0()
{
  return swift_getWitnessTable();
}

uint64_t OUTLINED_FUNCTION_3_34()
{
  uint64_t v3 = *(void *)(v1 - 120);
  *(void *)(v1 - 112) = v0;
  *(void *)(v1 - 104) = v3;
  uint64_t v4 = *(void *)(v1 - 168);
  *(void *)(v1 - 96) = *(void *)(v1 - 144);
  *(void *)(v1 - 88) = v4;
  return type metadata accessor for PromotionalIconLoadingView.IconType();
}

void OUTLINED_FUNCTION_4_38()
{
  *(void *)(v2 - 272) = v1;
  *(void *)(v2 - 264) = v0;
}

uint64_t OUTLINED_FUNCTION_11_28()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_13_32()
{
  return 0;
}

uint64_t sub_22EE185A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 88);
}

void sub_22EE185AC()
{
  sub_22EE7F780();
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F)
    {
      sub_22EBAF038();
      if (v2 <= 0x3F)
      {
        sub_22EE1C554(319, &qword_2686279C0, &qword_26861CAF8);
        if (v3 <= 0x3F)
        {
          sub_22EE1C554(319, &qword_2686279C8, &qword_268625BE0);
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

uint64_t *sub_22EE1879C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v117 = sub_22EE7F780();
  uint64_t v4 = *(void *)(v117 - 8);
  uint64_t v113 = *(void *)(a3 + 16);
  uint64_t v114 = *(void *)(v4 + 64);
  uint64_t v112 = *(void *)(v113 - 8);
  int v5 = *(_DWORD *)(v112 + 80);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v112 + 64);
  uint64_t v8 = sub_22EE7DE00();
  uint64_t v109 = *(void *)(v8 - 8);
  uint64_t v110 = v8;
  int v9 = *(_DWORD *)(v109 + 80);
  unint64_t v10 = v9 & 0xF8;
  uint64_t v108 = *(void *)(v109 + 64) + 7;
  unint64_t v11 = (v108 & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v11 == 8 || (v108 & 0xFFFFFFFFFFFFFFF8) >= 0xFFFFFFFFFFFFFFF8) {
    unint64_t v11 = 8;
  }
  unint64_t v119 = v11;
  uint64_t v111 = sub_22EE7C3C0();
  uint64_t v12 = *(void *)(v111 - 8);
  int v13 = *(_DWORD *)(v12 + 80);
  uint64_t v107 = v12;
  uint64_t v14 = v13 & 0xF8 | 7;
  if (*(_DWORD *)(v12 + 84)) {
    uint64_t v15 = *(void *)(v12 + 64);
  }
  else {
    uint64_t v15 = *(void *)(v12 + 64) + 1;
  }
  size_t v116 = v15;
  int v16 = *(_DWORD *)(v4 + 80);
  uint64_t v17 = sub_22EE7F540();
  uint64_t v18 = *(void *)(v17 - 8);
  int v19 = *(_DWORD *)(v18 + 80);
  uint64_t v20 = v16 & 0xF8 | v19 | 7u;
  if (*(_DWORD *)(v18 + 84) <= *(_DWORD *)(v4 + 84)) {
    unsigned int v21 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v21 = *(_DWORD *)(v18 + 84);
  }
  if (v21 <= 0x7FFFFFFF) {
    int v22 = 0x7FFFFFFF;
  }
  else {
    int v22 = v21;
  }
  uint64_t v23 = *(void *)(*(void *)(v17 - 8) + 64);
  uint64_t v24 = v20 | v5 | v10 | v14;
  if (v24 != 7
    || ((v9 | v13 | v16 | v19 | v5) & 0x100000) != 0
    || (uint64_t v25 = v114 + v5,
        uint64_t v26 = v10 | 7,
        uint64_t v27 = v114 + v19,
        ((v20
        + 16
        + ((((((((v14 + v119 + 1 + (((v10 | 7) + (((v25 & ~v6) + v7) & 0xFFFFFFFFFFFFFFF8) + 225) & ~(v10 | 7))) & ~v14)
              + ((v116 + 7) & 0xFFFFFFFFFFFFFFF8)
              + 8
              + 23) & 0xFFFFFFFFFFFFFFF8)
            + 55) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v20)
      + ((((((v23 + (v27 & ~(unint64_t)v19) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8 > 0x18))
  {
    uint64_t v60 = *a2;
    *a1 = *a2;
    uint64_t v29 = (uint64_t *)(v60 + ((v24 + 16) & ~v24));
  }
  else
  {
    uint64_t v98 = v14 + v119 + 1;
    uint64_t v99 = v13 & 0xF8 | 7;
    uint64_t v101 = v16 & 0xF8 | v19 | 7u;
    uint64_t v102 = v20 + 16;
    uint64_t v103 = *(_DWORD *)(v18 + 80);
    int v104 = v22;
    unsigned int v105 = *(_DWORD *)(v4 + 84);
    unint64_t v100 = (((v23 + (v27 & ~(unint64_t)v19) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
    unsigned int v96 = *(_DWORD *)(v18 + 84);
    uint64_t v106 = v114 + v19;
    uint64_t v115 = *(void *)(*(void *)(v17 - 8) + 64);
    uint64_t v95 = *(void *)(v17 - 8);
    uint64_t v97 = v17;
    uint64_t v28 = ~v6;
    uint64_t v29 = a1;
    uint64_t v94 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v4 + 16);
    v94(a1, a2, v117);
    unint64_t v30 = ((unint64_t)a1 + v25) & ~v6;
    unint64_t v31 = ((unint64_t)a2 + v25) & v28;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v112 + 16))(((unint64_t)a1 + v25) & v28, v31, v113);
    *(unsigned char *)(v30 + v7) = *(unsigned char *)(v31 + v7);
    unint64_t v32 = (v30 + v7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v33 = (v31 + v7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v34 = *(void *)(v33 + 8);
    uint64_t v35 = *(void *)(v33 + 16);
    uint64_t v37 = *(void *)(v33 + 24);
    uint64_t v36 = *(void *)(v33 + 32);
    uint64_t v38 = *(void *)(v33 + 40);
    char v39 = *(unsigned char *)(v33 + 48);
    sub_22EB336F8(v34, v35, v37, v36, v38, v39);
    *(void *)(v32 + 8) = v34;
    *(void *)(v32 + 16) = v35;
    *(void *)(v32 + 24) = v37;
    *(void *)(v32 + 32) = v36;
    *(void *)(v32 + 40) = v38;
    *(unsigned char *)(v32 + 48) = v39;
    uint64_t v40 = *(void *)(v33 + 56);
    LOBYTE(v36) = *(unsigned char *)(v33 + 64);
    j__swift_retain(v40);
    *(void *)(v32 + 56) = v40;
    *(unsigned char *)(v32 + 64) = v36;
    uint64_t v41 = *(void *)(v33 + 72);
    LOBYTE(v36) = *(unsigned char *)(v33 + 80);
    j__swift_retain(v41);
    *(void *)(v32 + 72) = v41;
    *(unsigned char *)(v32 + 80) = v36;
    uint64_t v42 = *(void *)(v33 + 88);
    LOBYTE(v36) = *(unsigned char *)(v33 + 96);
    j__swift_retain(v42);
    *(void *)(v32 + 88) = v42;
    *(unsigned char *)(v32 + 96) = v36;
    uint64_t v43 = *(void *)(v33 + 104);
    LOBYTE(v36) = *(unsigned char *)(v33 + 112);
    sub_22EADDF00(v43, v36);
    *(void *)(v32 + 104) = v43;
    *(unsigned char *)(v32 + 112) = v36;
    uint64_t v44 = *(void *)(v33 + 120);
    LOBYTE(v36) = *(unsigned char *)(v33 + 128);
    sub_22EADDF00(v44, v36);
    *(void *)(v32 + 120) = v44;
    *(unsigned char *)(v32 + 128) = v36;
    uint64_t v45 = *(void *)(v33 + 136);
    uint64_t v46 = *(void *)(v33 + 144);
    LOBYTE(v34) = *(unsigned char *)(v33 + 152);
    sub_22EBAD648(v45, v46, v34);
    *(void *)(v32 + 136) = v45;
    *(void *)(v32 + 144) = v46;
    *(unsigned char *)(v32 + 152) = v34;
    uint64_t v47 = *(void *)(v33 + 160);
    LOBYTE(v46) = *(unsigned char *)(v33 + 168);
    j__swift_retain(v47);
    *(void *)(v32 + 160) = v47;
    *(unsigned char *)(v32 + 168) = v46;
    uint64_t v48 = *(void *)(v33 + 176);
    LOBYTE(v46) = *(unsigned char *)(v33 + 184);
    j__swift_retain(v48);
    *(void *)(v32 + 176) = v48;
    *(unsigned char *)(v32 + 184) = v46;
    uint64_t v49 = *(void *)(v33 + 192);
    LOBYTE(v46) = *(unsigned char *)(v33 + 200);
    j__swift_retain(v49);
    *(void *)(v32 + 192) = v49;
    *(unsigned char *)(v32 + 200) = v46;
    uint64_t v50 = *(void *)(v33 + 208);
    uint64_t v51 = *(void *)(v33 + 216);
    LOBYTE(v34) = *(unsigned char *)(v33 + 224);
    sub_22EBAD648(v50, v51, v34);
    *(void *)(v32 + 208) = v50;
    *(void *)(v32 + 216) = v51;
    *(unsigned char *)(v32 + 224) = v34;
    uint64_t v52 = (void *)((v32 + v26 + 225) & ~v26);
    uint64_t v53 = (_DWORD *)((v33 + v26 + 225) & ~v26);
    unsigned int v54 = *((unsigned __int8 *)v53 + v119);
    if (v54 < 2)
    {
      uint64_t v55 = v111;
      size_t v57 = v116 + 7;
      unint64_t v56 = ((v116 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
      uint64_t v59 = v98;
      uint64_t v58 = v99;
    }
    else
    {
      uint64_t v55 = v111;
      size_t v57 = v116 + 7;
      unint64_t v56 = ((v116 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
      uint64_t v59 = v98;
      uint64_t v58 = v99;
      if ((v119 & 0xFFFFFFF8) != 0) {
        unsigned int v54 = *v53 + 2;
      }
    }
    uint64_t v61 = ~v58;
    if (v54 == 1)
    {
      (*(void (**)(void *, _DWORD *, uint64_t))(v109 + 16))(v52, v53, v110);
      uint64_t v62 = *(void **)(((unint64_t)v53 + v108) & 0xFFFFFFFFFFFFFFF8);
      *(void *)(((unint64_t)v52 + v108) & 0xFFFFFFFFFFFFFFF8) = v62;
      id v63 = v62;
      char v64 = 1;
    }
    else
    {
      *uint64_t v52 = *(void *)v53;
      swift_retain();
      char v64 = 0;
    }
    *((unsigned char *)v52 + v119) = v64;
    unint64_t v65 = ((unint64_t)v52 + v59) & v61;
    uint64_t v66 = (char *)(((unint64_t)v53 + v59) & v61);
    if (__swift_getEnumTagSinglePayload((uint64_t)v66, 1, v55))
    {
      memcpy((void *)(((unint64_t)v52 + v59) & v61), v66, v116);
    }
    else
    {
      (*(void (**)(unint64_t, char *, uint64_t))(v107 + 16))(((unint64_t)v52 + v59) & v61, v66, v55);
      __swift_storeEnumTagSinglePayload(((unint64_t)v52 + v59) & v61, 0, 1, v55);
    }
    uint64_t v67 = ~v101;
    *(void *)((v57 + v65) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v66[v57] & 0xFFFFFFFFFFFFFFF8);
    uint64_t v68 = (void *)(v56 + v65);
    uint64_t v69 = &v66[v56];
    *uint64_t v68 = *(void *)&v66[v56];
    v68[1] = *(void *)&v66[v56 + 8];
    unint64_t v70 = (v56 + v65 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v71 = (unint64_t)(v69 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v72 = *(void *)(v71 + 24);
    swift_retain();
    swift_retain();
    swift_retain();
    if (v72)
    {
      *(void *)(v70 + 24) = v72;
      *(void *)(v70 + 32) = *(void *)(v71 + 32);
      (**(void (***)(unint64_t, unint64_t, uint64_t))(v72 - 8))(v70, v71, v72);
    }
    else
    {
      long long v73 = *(_OWORD *)v71;
      long long v74 = *(_OWORD *)(v71 + 16);
      *(void *)(v70 + 32) = *(void *)(v71 + 32);
      *(_OWORD *)unint64_t v70 = v73;
      *(_OWORD *)(v70 + 16) = v74;
    }
    uint64_t v75 = ~v103;
    *(void *)(v70 + 40) = *(void *)(v71 + 40);
    unint64_t v76 = (v70 + 55) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v77 = (v71 + 55) & 0xFFFFFFFFFFFFFFF8;
    *(unsigned char *)unint64_t v76 = *(unsigned char *)v77;
    *(void *)(v76 + 8) = *(void *)(v77 + 8);
    unint64_t v78 = (v76 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v79 = (v77 + 23) & 0xFFFFFFFFFFFFFFF8;
    *(unsigned char *)unint64_t v78 = *(unsigned char *)v79;
    *(void *)(v78 + 8) = *(void *)(v79 + 8);
    uint64_t v80 = (void *)((v102 + v78) & v67);
    uint64_t v81 = (void *)((v102 + v79) & v67);
    swift_retain();
    swift_retain();
    swift_retain();
    if (v105 == v104)
    {
      int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v81, v105, v117);
      uint64_t v83 = v106;
    }
    else
    {
      uint64_t v83 = v106;
      uint64_t v84 = ((unint64_t)v81 + v106) & v75;
      if (v96 == v104)
      {
        int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v84, v96, v97);
      }
      else
      {
        unint64_t v85 = *(void *)((v115 + v84 + 7) & 0xFFFFFFFFFFFFFFF8);
        if (v85 >= 0xFFFFFFFF) {
          LODWORD(v85) = -1;
        }
        int EnumTagSinglePayload = v85 + 1;
      }
    }
    if (EnumTagSinglePayload)
    {
      memcpy(v80, v81, v100 + 8);
    }
    else
    {
      v94((uint64_t *)v80, (uint64_t *)v81, v117);
      unint64_t v86 = ((unint64_t)v80 + v83) & v75;
      unint64_t v87 = ((unint64_t)v81 + v83) & v75;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v95 + 16))(v86, v87, v97);
      unint64_t v88 = (v86 + v115 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v89 = (v87 + v115 + 7) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v88 = *(void *)v89;
      *(unsigned char *)(v88 + 8) = *(unsigned char *)(v89 + 8);
      unint64_t v90 = (v86 + v115 + 23) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v91 = (unint64_t *)((v87 + v115 + 23) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v92 = *v91;
      swift_bridgeObjectRetain();
      if (v92 < 0xFFFFFFFF)
      {
        *(_OWORD *)unint64_t v90 = *(_OWORD *)v91;
      }
      else
      {
        *(void *)unint64_t v90 = v92;
        *(void *)(v90 + 8) = v91[1];
        swift_retain();
        swift_retain();
      }
      *(void *)((v90 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v91 + 23) & 0xFFFFFFFFFFFFFFF8);
      swift_retain();
      uint64_t v29 = a1;
    }
    *(void *)(((unint64_t)v80 + v100 + 8) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v81
                                                                                        + v100
                                                                                        + 8) & 0xFFFFFFFFFFFFFFF8);
  }
  swift_retain();
  return v29;
}

uint64_t sub_22EE190C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_22EE7F780();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v7(a1, v4);
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t v9 = v8 + a1;
  uint64_t v10 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v11 = v10 + 8;
  unint64_t v12 = (v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  (*(void (**)(unint64_t))(v10 + 8))(v12);
  unint64_t v13 = (v12 + *(void *)(v11 + 56)) & 0xFFFFFFFFFFFFFFF8;
  sub_22EB19A34(*(void *)(v13 + 8), *(void *)(v13 + 16), *(void *)(v13 + 24), *(void *)(v13 + 32), *(void *)(v13 + 40), *(unsigned char *)(v13 + 48));
  j_j__swift_release(*(void *)(v13 + 56));
  j_j__swift_release(*(void *)(v13 + 72));
  j_j__swift_release(*(void *)(v13 + 88));
  sub_22EB19E28(*(void *)(v13 + 104), *(unsigned __int8 *)(v13 + 112));
  sub_22EB19E28(*(void *)(v13 + 120), *(unsigned __int8 *)(v13 + 128));
  sub_22EBAD8D0(*(void *)(v13 + 136), *(void *)(v13 + 144), *(unsigned char *)(v13 + 152));
  j_j__swift_release(*(void *)(v13 + 160));
  j_j__swift_release(*(void *)(v13 + 176));
  j_j__swift_release(*(void *)(v13 + 192));
  sub_22EBAD8D0(*(void *)(v13 + 208), *(void *)(v13 + 216), *(unsigned char *)(v13 + 224));
  uint64_t v14 = sub_22EE7DE00();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(_DWORD *)(v15 + 80) & 0xF8 | 7;
  uint64_t v17 = (_DWORD *)((v13 + v16 + 225) & ~v16);
  uint64_t v18 = *(void *)(v15 + 64) + 7;
  if ((v18 & 0xFFFFFFFFFFFFFFF8) != 0 && (v18 & 0xFFFFFFFFFFFFFFF8) < 0xFFFFFFFFFFFFFFF8) {
    unint64_t v19 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  else {
    unint64_t v19 = 8;
  }
  unsigned int v20 = *((unsigned __int8 *)v17 + v19);
  if (v20 >= 2 && (v19 & 0xFFFFFFF8) != 0) {
    unsigned int v20 = *v17 + 2;
  }
  if (v20 == 1)
  {
    (*(void (**)(_DWORD *, uint64_t))(v15 + 8))(v17, v14);
  }
  else
  {
    swift_release();
  }
  uint64_t v22 = v19 | 1;
  uint64_t v23 = sub_22EE7C3C0();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(_DWORD *)(v24 + 80) & 0xF8 | 7;
  uint64_t v26 = ((unint64_t)v17 + v22 + v25) & ~v25;
  if (!__swift_getEnumTagSinglePayload(v26, 1, v23)) {
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v26, v23);
  }
  if (*(_DWORD *)(v24 + 84)) {
    uint64_t v27 = *(void *)(v24 + 64);
  }
  else {
    uint64_t v27 = *(void *)(v24 + 64) + 1;
  }
  swift_release();
  swift_release();
  swift_release();
  unint64_t v28 = (v26 + ((v27 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v28 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v28);
  }
  swift_release();
  swift_release();
  swift_release();
  int v29 = *(_DWORD *)(v6 + 80) & 0xF8;
  uint64_t v30 = sub_22EE7F540();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = *(unsigned __int8 *)(v31 + 80);
  unint64_t v33 = (((((v28 + 55) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + (v29 | v32 | 7) + 16) & ~(unint64_t)(v29 | v32 | 7);
  uint64_t v34 = *(unsigned int *)(v6 + 84);
  uint64_t v35 = *(unsigned int *)(v31 + 84);
  if (v35 <= v34) {
    unsigned int v36 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v36 = *(_DWORD *)(v31 + 84);
  }
  if (v36 <= 0x7FFFFFFF) {
    unsigned int v36 = 0x7FFFFFFF;
  }
  uint64_t v37 = ~v32;
  uint64_t v38 = *(void *)(*(void *)(v30 - 8) + 64);
  if (v34 == v36)
  {
    uint64_t v39 = v33;
    uint64_t v35 = v34;
    uint64_t v40 = v4;
    goto LABEL_28;
  }
  uint64_t v39 = (v8 + v32 + v33) & v37;
  if (v35 == v36)
  {
    uint64_t v40 = v30;
LABEL_28:
    if (__swift_getEnumTagSinglePayload(v39, v35, v40)) {
      goto LABEL_36;
    }
    goto LABEL_33;
  }
  unint64_t v41 = *(void *)((v38 + v39 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v41 >= 0xFFFFFFFF) {
    LODWORD(v41) = -1;
  }
  if (v41 == -1)
  {
LABEL_33:
    v7(v33, v4);
    (*(void (**)(unint64_t, uint64_t))(v31 + 8))((v8 + v32 + v33) & v37, v30);
    swift_bridgeObjectRelease();
    if (*(void *)((((v8 + v32 + v33) & v37) + v38 + 23) & 0xFFFFFFFFFFFFFFF8) >= 0xFFFFFFFFuLL)
    {
      swift_release();
      swift_release();
    }
    swift_release();
  }
LABEL_36:

  return swift_release();
}

uint64_t sub_22EE195E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7F780();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  uint64_t v103 = v6;
  unint64_t v100 = *(void (**)(uint64_t, uint64_t))(v7 + 16);
  v100(a1, a2);
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v10 = v9 + 16;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v105 = a1;
  uint64_t v106 = *(void *)(v7 + 64);
  uint64_t v12 = (v106 + v11 + a1) & ~v11;
  uint64_t v13 = (v106 + v11 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v12, v13);
  uint64_t v14 = *(void *)(v10 + 48);
  unint64_t v15 = v14 + v12;
  unint64_t v16 = v14 + v13;
  *(unsigned char *)unint64_t v15 = *(unsigned char *)v16;
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = *(void *)((v16 & 0xFFFFFFFFFFFFFFF8) + 8);
  uint64_t v20 = *(void *)((v16 & 0xFFFFFFFFFFFFFFF8) + 16);
  uint64_t v21 = *(void *)((v16 & 0xFFFFFFFFFFFFFFF8) + 24);
  uint64_t v22 = *(void *)((v16 & 0xFFFFFFFFFFFFFFF8) + 32);
  uint64_t v23 = *(void *)((v16 & 0xFFFFFFFFFFFFFFF8) + 40);
  char v24 = *(unsigned char *)((v16 & 0xFFFFFFFFFFFFFFF8) + 48);
  sub_22EB336F8(v19, v20, v21, v22, v23, v24);
  *(void *)(v17 + 8) = v19;
  *(void *)(v17 + 16) = v20;
  *(void *)(v17 + 24) = v21;
  *(void *)(v17 + 32) = v22;
  *(void *)(v17 + 40) = v23;
  *(unsigned char *)(v17 + 48) = v24;
  uint64_t v25 = *(void *)(v18 + 56);
  LOBYTE(v20) = *(unsigned char *)(v18 + 64);
  j__swift_retain(v25);
  *(void *)(v17 + 56) = v25;
  *(unsigned char *)(v17 + 64) = v20;
  uint64_t v26 = *(void *)(v18 + 72);
  LOBYTE(v20) = *(unsigned char *)(v18 + 80);
  j__swift_retain(v26);
  *(void *)(v17 + 72) = v26;
  *(unsigned char *)(v17 + 80) = v20;
  uint64_t v27 = *(void *)(v18 + 88);
  LOBYTE(v20) = *(unsigned char *)(v18 + 96);
  j__swift_retain(v27);
  *(void *)(v17 + 88) = v27;
  *(unsigned char *)(v17 + 96) = v20;
  uint64_t v28 = *(void *)(v18 + 104);
  LOBYTE(v20) = *(unsigned char *)(v18 + 112);
  sub_22EADDF00(v28, v20);
  *(void *)(v17 + 104) = v28;
  *(unsigned char *)(v17 + 112) = v20;
  uint64_t v29 = *(void *)(v18 + 120);
  LOBYTE(v20) = *(unsigned char *)(v18 + 128);
  sub_22EADDF00(v29, v20);
  *(void *)(v17 + 120) = v29;
  *(unsigned char *)(v17 + 128) = v20;
  uint64_t v30 = *(void *)(v18 + 136);
  uint64_t v31 = *(void *)(v18 + 144);
  LOBYTE(v21) = *(unsigned char *)(v18 + 152);
  sub_22EBAD648(v30, v31, v21);
  *(void *)(v17 + 136) = v30;
  *(void *)(v17 + 144) = v31;
  *(unsigned char *)(v17 + 152) = v21;
  uint64_t v32 = *(void *)(v18 + 160);
  LOBYTE(v31) = *(unsigned char *)(v18 + 168);
  j__swift_retain(v32);
  *(void *)(v17 + 160) = v32;
  *(unsigned char *)(v17 + 168) = v31;
  uint64_t v33 = *(void *)(v18 + 176);
  LOBYTE(v31) = *(unsigned char *)(v18 + 184);
  j__swift_retain(v33);
  *(void *)(v17 + 176) = v33;
  *(unsigned char *)(v17 + 184) = v31;
  uint64_t v34 = *(void *)(v18 + 192);
  LOBYTE(v31) = *(unsigned char *)(v18 + 200);
  j__swift_retain(v34);
  *(void *)(v17 + 192) = v34;
  *(unsigned char *)(v17 + 200) = v31;
  uint64_t v35 = *(void *)(v18 + 208);
  uint64_t v36 = *(void *)(v18 + 216);
  LOBYTE(v21) = *(unsigned char *)(v18 + 224);
  sub_22EBAD648(v35, v36, v21);
  *(void *)(v17 + 208) = v35;
  *(void *)(v17 + 216) = v36;
  *(unsigned char *)(v17 + 224) = v21;
  uint64_t v37 = sub_22EE7DE00();
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v39 = *(_DWORD *)(v38 + 80) & 0xF8;
  uint64_t v40 = v39 + 232;
  unint64_t v41 = v39 + 232 + v17;
  unint64_t v42 = ~v39 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v43 = (void *)(v41 & v42);
  uint64_t v44 = v40 + v18;
  uint64_t v45 = (_DWORD *)(v44 & v42);
  uint64_t v46 = *(void *)(v38 + 64) + 7;
  if ((v46 & 0xFFFFFFFFFFFFFFF8) != 0 && (v46 & 0xFFFFFFFFFFFFFFF8) < 0xFFFFFFFFFFFFFFF8) {
    unint64_t v47 = (v46 & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  else {
    unint64_t v47 = 8;
  }
  unsigned int v48 = *((unsigned __int8 *)v45 + v47);
  if (v48 >= 2 && (v47 & 0xFFFFFFF8) != 0) {
    unsigned int v48 = *v45 + 2;
  }
  if (v48 == 1)
  {
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v38 + 16))(v41 & v42, v44 & v42, v37);
    uint64_t v49 = *(void **)(((unint64_t)v45 + v46) & 0xFFFFFFFFFFFFFFF8);
    *(void *)(((unint64_t)v43 + v46) & 0xFFFFFFFFFFFFFFF8) = v49;
    id v50 = v49;
    char v51 = 1;
  }
  else
  {
    *uint64_t v43 = *(void *)v45;
    swift_retain();
    char v51 = 0;
  }
  *((unsigned char *)v43 + v47) = v51;
  uint64_t v52 = v47 | 1;
  uint64_t v53 = sub_22EE7C3C0();
  uint64_t v54 = *(void *)(v53 - 8);
  uint64_t v55 = *(_DWORD *)(v54 + 80) & 0xF8 | 7;
  uint64_t v56 = ((unint64_t)v43 + v52 + v55) & ~v55;
  uint64_t v57 = ((unint64_t)v45 + v52 + v55) & ~v55;
  if (__swift_getEnumTagSinglePayload(v57, 1, v53))
  {
    int v58 = *(_DWORD *)(v54 + 84);
    size_t v59 = *(void *)(v54 + 64);
    if (v58) {
      size_t v60 = v59;
    }
    else {
      size_t v60 = v59 + 1;
    }
    memcpy((void *)v56, (const void *)v57, v60);
  }
  else
  {
    uint64_t v62 = *(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16);
    uint64_t v61 = v54 + 16;
    v62(v56, v57, v53);
    __swift_storeEnumTagSinglePayload(v56, 0, 1, v53);
    int v58 = *(_DWORD *)(v61 + 68);
    size_t v59 = *(void *)(v61 + 48);
  }
  if (v58) {
    size_t v63 = v59;
  }
  else {
    size_t v63 = v59 + 1;
  }
  *(void *)(((v56 | 7) + v63) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v57 | 7) + v63) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v64 = ((v63 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v65 = (void *)(v64 + v56);
  uint64_t v66 = (void *)(v64 + v57);
  *unint64_t v65 = *v66;
  v65[1] = v66[1];
  unint64_t v67 = ((unint64_t)v65 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v68 = ((unint64_t)v66 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v69 = *(void *)(v68 + 24);
  swift_retain();
  swift_retain();
  swift_retain();
  if (v69)
  {
    *(void *)(v67 + 24) = v69;
    *(void *)(v67 + 32) = *(void *)(v68 + 32);
    (**(void (***)(unint64_t, unint64_t, uint64_t))(v69 - 8))(v67, v68, v69);
  }
  else
  {
    long long v70 = *(_OWORD *)v68;
    long long v71 = *(_OWORD *)(v68 + 16);
    *(void *)(v67 + 32) = *(void *)(v68 + 32);
    *(_OWORD *)unint64_t v67 = v70;
    *(_OWORD *)(v67 + 16) = v71;
  }
  *(void *)(v67 + 40) = *(void *)(v68 + 40);
  unint64_t v72 = (v67 + 55) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v73 = (v68 + 55) & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)unint64_t v72 = *(unsigned char *)v73;
  *(void *)(v72 + 8) = *(void *)(v73 + 8);
  unint64_t v74 = (v72 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v75 = (v73 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)unint64_t v74 = *(unsigned char *)v75;
  *(void *)(v74 + 8) = *(void *)(v75 + 8);
  int v76 = *(_DWORD *)(v8 + 80) & 0xF8;
  uint64_t v102 = sub_22EE7F540();
  uint64_t v77 = *(void *)(v102 - 8);
  uint64_t v78 = *(unsigned __int8 *)(v77 + 80);
  uint64_t v79 = v76 | v78 | 7;
  __dst = (char *)((v79 + 16 + v74) & ~v79);
  uint64_t v80 = (v79 + 16 + v75) & ~v79;
  uint64_t v81 = *(unsigned int *)(v8 + 84);
  uint64_t v82 = *(unsigned int *)(v77 + 84);
  if (v82 <= v81) {
    unsigned int v83 = v81;
  }
  else {
    unsigned int v83 = *(_DWORD *)(v77 + 84);
  }
  if (v83 <= 0x7FFFFFFF) {
    int v84 = 0x7FFFFFFF;
  }
  else {
    int v84 = v83;
  }
  uint64_t v85 = ~v78;
  uint64_t v86 = v106 + v78;
  uint64_t v101 = *(void *)(*(void *)(v102 - 8) + 64);
  unint64_t v107 = (((v101 + ((v106 + v78) & ~v78) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_retain();
  swift_retain();
  swift_retain();
  if (v81 == v84)
  {
    int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v80, v81, v103);
    unint64_t v88 = __dst;
    unint64_t v89 = (char *)v80;
  }
  else
  {
    uint64_t v90 = (v86 + v80) & v85;
    unint64_t v89 = (char *)v80;
    if (v82 == v84)
    {
      int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v90, v82, v102);
    }
    else
    {
      unint64_t v91 = *(void *)((v101 + v90 + 7) & 0xFFFFFFFFFFFFFFF8);
      if (v91 >= 0xFFFFFFFF) {
        LODWORD(v91) = -1;
      }
      int EnumTagSinglePayload = v91 + 1;
    }
    unint64_t v88 = __dst;
  }
  if (EnumTagSinglePayload)
  {
    memcpy(v88, v89, v107 + 8);
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v100)(v88, v89, v103);
    unint64_t v92 = (unint64_t)&v88[v86] & v85;
    unint64_t v93 = (unint64_t)&v89[v86] & v85;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v77 + 16))(v92, v93, v102);
    unint64_t v94 = (v92 + v101 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v95 = (v93 + v101 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v94 = *(void *)v95;
    *(unsigned char *)(v94 + 8) = *(unsigned char *)(v95 + 8);
    unint64_t v96 = (v92 + v101 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v97 = (unint64_t *)((v93 + v101 + 23) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v98 = *v97;
    swift_bridgeObjectRetain();
    if (v98 < 0xFFFFFFFF)
    {
      *(_OWORD *)unint64_t v96 = *(_OWORD *)v97;
    }
    else
    {
      *(void *)unint64_t v96 = v98;
      *(void *)(v96 + 8) = v97[1];
      swift_retain();
      swift_retain();
    }
    *(void *)((v96 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v97 + 23) & 0xFFFFFFFFFFFFFFF8);
    swift_retain();
  }
  *(void *)&v88[v107 + 8] = *(void *)&v89[v107 + 8];
  swift_retain();
  return v105;
}

uint64_t sub_22EE19DB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7F780();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v143 = v7;
  uint64_t v142 = v6;
  uint64_t v139 = *(void (**)(uint64_t, uint64_t))(v7 + 24);
  v139(a1, a2);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  __src = *(char **)(v7 + 64);
  unint64_t v11 = (unint64_t)&__src[v10 + a1] & ~v10;
  unint64_t v12 = (unint64_t)&__src[v10 + a2] & ~v10;
  (*(void (**)(unint64_t, unint64_t))(v8 + 24))(v11, v12);
  uint64_t v13 = *(void *)(v9 + 40);
  unint64_t v14 = v13 + v11;
  unint64_t v15 = v13 + v12;
  *(unsigned char *)unint64_t v14 = *(unsigned char *)v15;
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = *(void *)((v15 & 0xFFFFFFFFFFFFFFF8) + 8);
  uint64_t v19 = *(void *)((v15 & 0xFFFFFFFFFFFFFFF8) + 16);
  uint64_t v20 = *(void *)((v15 & 0xFFFFFFFFFFFFFFF8) + 24);
  uint64_t v21 = *(void *)((v15 & 0xFFFFFFFFFFFFFFF8) + 32);
  uint64_t v22 = *(void *)((v15 & 0xFFFFFFFFFFFFFFF8) + 40);
  char v23 = *(unsigned char *)((v15 & 0xFFFFFFFFFFFFFFF8) + 48);
  sub_22EB336F8(v18, v19, v20, v21, v22, v23);
  uint64_t v24 = *(void *)(v16 + 8);
  uint64_t v25 = *(void *)(v16 + 16);
  uint64_t v26 = *(void *)(v16 + 24);
  uint64_t v27 = *(void *)(v16 + 32);
  uint64_t v28 = *(void *)(v16 + 40);
  char v29 = *(unsigned char *)(v16 + 48);
  *(void *)(v16 + 8) = v18;
  *(void *)(v16 + 16) = v19;
  *(void *)(v16 + 24) = v20;
  *(void *)(v16 + 32) = v21;
  *(void *)(v16 + 40) = v22;
  *(unsigned char *)(v16 + 48) = v23;
  sub_22EB19A34(v24, v25, v26, v27, v28, v29);
  uint64_t v30 = *(void *)(v17 + 56);
  LOBYTE(v19) = *(unsigned char *)(v17 + 64);
  j__swift_retain(v30);
  uint64_t v31 = *(void *)(v16 + 56);
  *(void *)(v16 + 56) = v30;
  *(unsigned char *)(v16 + 64) = v19;
  j_j__swift_release(v31);
  uint64_t v32 = *(void *)(v17 + 72);
  LOBYTE(v19) = *(unsigned char *)(v17 + 80);
  j__swift_retain(v32);
  uint64_t v33 = *(void *)(v16 + 72);
  *(void *)(v16 + 72) = v32;
  *(unsigned char *)(v16 + 80) = v19;
  j_j__swift_release(v33);
  uint64_t v34 = *(void *)(v17 + 88);
  LOBYTE(v19) = *(unsigned char *)(v17 + 96);
  j__swift_retain(v34);
  uint64_t v35 = *(void *)(v16 + 88);
  *(void *)(v16 + 88) = v34;
  *(unsigned char *)(v16 + 96) = v19;
  j_j__swift_release(v35);
  uint64_t v36 = *(void *)(v17 + 104);
  LOBYTE(v19) = *(unsigned char *)(v17 + 112);
  sub_22EADDF00(v36, v19);
  uint64_t v37 = *(void *)(v16 + 104);
  uint64_t v38 = *(unsigned __int8 *)(v16 + 112);
  *(void *)(v16 + 104) = v36;
  *(unsigned char *)(v16 + 112) = v19;
  sub_22EB19E28(v37, v38);
  uint64_t v39 = *(void *)(v17 + 120);
  LOBYTE(v19) = *(unsigned char *)(v17 + 128);
  sub_22EADDF00(v39, v19);
  uint64_t v40 = *(void *)(v16 + 120);
  uint64_t v41 = *(unsigned __int8 *)(v16 + 128);
  *(void *)(v16 + 120) = v39;
  *(unsigned char *)(v16 + 128) = v19;
  sub_22EB19E28(v40, v41);
  uint64_t v42 = *(void *)(v17 + 136);
  uint64_t v43 = *(void *)(v17 + 144);
  LOBYTE(v20) = *(unsigned char *)(v17 + 152);
  sub_22EBAD648(v42, v43, v20);
  uint64_t v44 = *(void *)(v16 + 136);
  uint64_t v45 = *(void *)(v16 + 144);
  char v46 = *(unsigned char *)(v16 + 152);
  *(void *)(v16 + 136) = v42;
  *(void *)(v16 + 144) = v43;
  *(unsigned char *)(v16 + 152) = v20;
  sub_22EBAD8D0(v44, v45, v46);
  uint64_t v47 = *(void *)(v17 + 160);
  LOBYTE(v43) = *(unsigned char *)(v17 + 168);
  j__swift_retain(v47);
  uint64_t v48 = *(void *)(v16 + 160);
  *(void *)(v16 + 160) = v47;
  *(unsigned char *)(v16 + 168) = v43;
  j_j__swift_release(v48);
  uint64_t v49 = *(void *)(v17 + 176);
  LOBYTE(v43) = *(unsigned char *)(v17 + 184);
  j__swift_retain(v49);
  uint64_t v50 = *(void *)(v16 + 176);
  *(void *)(v16 + 176) = v49;
  *(unsigned char *)(v16 + 184) = v43;
  j_j__swift_release(v50);
  uint64_t v51 = *(void *)(v17 + 192);
  LOBYTE(v43) = *(unsigned char *)(v17 + 200);
  j__swift_retain(v51);
  uint64_t v52 = *(void *)(v16 + 192);
  *(void *)(v16 + 192) = v51;
  *(unsigned char *)(v16 + 200) = v43;
  j_j__swift_release(v52);
  uint64_t v53 = *(void *)(v17 + 208);
  uint64_t v54 = *(void *)(v17 + 216);
  LOBYTE(v20) = *(unsigned char *)(v17 + 224);
  sub_22EBAD648(v53, v54, v20);
  uint64_t v55 = *(void *)(v16 + 208);
  uint64_t v56 = *(void *)(v16 + 216);
  char v57 = *(unsigned char *)(v16 + 224);
  *(void *)(v16 + 208) = v53;
  *(void *)(v16 + 216) = v54;
  *(unsigned char *)(v16 + 224) = v20;
  sub_22EBAD8D0(v55, v56, v57);
  uint64_t v58 = sub_22EE7DE00();
  uint64_t v59 = *(void *)(v58 - 8);
  uint64_t v60 = *(_DWORD *)(v59 + 80) & 0xF8;
  uint64_t v61 = v60 + 232;
  unint64_t v62 = v60 + 232 + v16;
  unint64_t v63 = ~v60 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v64 = v62 & v63;
  unint64_t v65 = (v61 + v17) & v63;
  uint64_t v66 = *(void *)(v59 + 64);
  if (((v66 + 7) & 0xFFFFFFFFFFFFFFF8) != 0 && ((v66 + 7) & 0xFFFFFFFFFFFFFFF8) < 0xFFFFFFFFFFFFFFF8) {
    unint64_t v67 = ((v66 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  else {
    unint64_t v67 = 8;
  }
  if (v64 != v65)
  {
    uint64_t v68 = v58;
    unsigned int v69 = *(unsigned __int8 *)(v64 + v67);
    if (v69 >= 2 && (v67 & 0xFFFFFFF8) != 0) {
      unsigned int v69 = *(_DWORD *)v64 + 2;
    }
    if (v69 == 1)
    {
      (*(void (**)(unint64_t, uint64_t))(v59 + 8))(v62 & v63, v58);
    }
    else
    {
      swift_release();
    }
    unsigned int v70 = *(unsigned __int8 *)(v65 + v67);
    if ((v67 & 0xFFFFFFF8) != 0 && v70 >= 2) {
      unsigned int v70 = *(_DWORD *)v65 + 2;
    }
    if (v70 == 1)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v59 + 16))(v64, v65, v68);
      long long v71 = *(void **)(((v65 | 7) + v66) & 0xFFFFFFFFFFFFFFF8);
      *(void *)(((v64 | 7) + v66) & 0xFFFFFFFFFFFFFFF8) = v71;
      *(unsigned char *)(v64 + v67) = 1;
      id v72 = v71;
    }
    else
    {
      *(void *)unint64_t v64 = *(void *)v65;
      *(unsigned char *)(v64 + v67) = 0;
      swift_retain();
    }
  }
  uint64_t v73 = v67 | 1;
  uint64_t v74 = sub_22EE7C3C0();
  uint64_t v75 = *(void *)(v74 - 8);
  uint64_t v76 = *(_DWORD *)(v75 + 80) & 0xF8 | 7;
  uint64_t v77 = (v73 + v76 + v64) & ~v76;
  uint64_t v78 = (v73 + v76 + v65) & ~v76;
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v77, 1, v74);
  int v80 = __swift_getEnumTagSinglePayload(v78, 1, v74);
  if (EnumTagSinglePayload)
  {
    if (!v80)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 16))(v77, v78, v74);
      __swift_storeEnumTagSinglePayload(v77, 0, 1, v74);
      goto LABEL_28;
    }
    int v81 = *(_DWORD *)(v75 + 84);
    size_t v82 = *(void *)(v75 + 64);
  }
  else
  {
    if (!v80)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 24))(v77, v78, v74);
      goto LABEL_28;
    }
    (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v77, v74);
    int v81 = *(_DWORD *)(v75 + 84);
    size_t v82 = *(void *)(v75 + 64);
  }
  if (v81) {
    size_t v83 = v82;
  }
  else {
    size_t v83 = v82 + 1;
  }
  memcpy((void *)v77, (const void *)v78, v83);
LABEL_28:
  if (*(_DWORD *)(v75 + 84)) {
    uint64_t v84 = *(void *)(v75 + 64);
  }
  else {
    uint64_t v84 = *(void *)(v75 + 64) + 1;
  }
  *(void *)(((v77 | 7) + v84) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v78 | 7) + v84) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  unint64_t v85 = ((v84 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v86 = (void *)(v85 + v77);
  unint64_t v87 = v85 + v78;
  *uint64_t v86 = *(void *)(v85 + v78);
  swift_retain();
  swift_release();
  v86[1] = *(void *)(v87 + 8);
  swift_retain();
  swift_release();
  unint64_t v88 = ((unint64_t)v86 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v89 = (v87 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v90 = *(void *)(v89 + 24);
  uint64_t v141 = a1;
  if (*(void *)(v88 + 24))
  {
    unint64_t v91 = (uint64_t *)(((unint64_t)v86 + 23) & 0xFFFFFFFFFFFFFFF8);
    if (v90)
    {
      __swift_assign_boxed_opaque_existential_1(v91, (uint64_t *)v89);
      goto LABEL_38;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v91);
  }
  else if (v90)
  {
    *(void *)(v88 + 24) = v90;
    *(void *)(v88 + 32) = *(void *)(v89 + 32);
    (**(void (***)(unint64_t, unint64_t))(v90 - 8))(((unint64_t)v86 + 23) & 0xFFFFFFFFFFFFFFF8, v89);
    goto LABEL_38;
  }
  long long v92 = *(_OWORD *)v89;
  long long v93 = *(_OWORD *)(v89 + 16);
  *(void *)(v88 + 32) = *(void *)(v89 + 32);
  *(_OWORD *)unint64_t v88 = v92;
  *(_OWORD *)(v88 + 16) = v93;
LABEL_38:
  *(void *)(v88 + 40) = *(void *)(v89 + 40);
  swift_retain();
  swift_release();
  unint64_t v94 = (v88 + 55) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v95 = (v89 + 55) & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)unint64_t v94 = *(unsigned char *)v95;
  *(void *)(v94 + 8) = *(void *)(v95 + 8);
  swift_retain();
  swift_release();
  unint64_t v96 = (v94 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v97 = (v95 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)unint64_t v96 = *(unsigned char *)v97;
  *(void *)(v96 + 8) = *(void *)(v97 + 8);
  swift_retain();
  swift_release();
  int v98 = *(_DWORD *)(v143 + 80) & 0xF8;
  uint64_t v99 = sub_22EE7F540();
  uint64_t v100 = *(void *)(v99 - 8);
  uint64_t v101 = *(unsigned __int8 *)(v100 + 80);
  uint64_t v102 = v98 | v101 | 7;
  uint64_t v103 = (v102 + 16 + v96) & ~v102;
  int v104 = (char *)((v102 + 16 + v97) & ~v102);
  uint64_t v105 = *(unsigned int *)(v143 + 84);
  uint64_t v106 = *(unsigned int *)(v100 + 84);
  if (v106 <= v105) {
    unsigned int v107 = *(_DWORD *)(v143 + 84);
  }
  else {
    unsigned int v107 = *(_DWORD *)(v100 + 84);
  }
  if (v107 <= 0x7FFFFFFF) {
    unsigned int v107 = 0x7FFFFFFF;
  }
  uint64_t v108 = ~v101;
  uint64_t v109 = &__src[v101];
  unint64_t v110 = (unint64_t)&__src[v101] & ~v101;
  uint64_t v111 = *(void *)(*(void *)(v99 - 8) + 64);
  __srca = v104;
  unint64_t __n = ((((v111 + v110 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v105 == v107)
  {
    uint64_t v112 = (char *)v103;
    int v113 = __swift_getEnumTagSinglePayload(v103, v105, v142);
    int v114 = __swift_getEnumTagSinglePayload((uint64_t)v104, v105, v142);
    if (v113) {
      goto LABEL_45;
    }
LABEL_53:
    if (v114)
    {
      uint64_t v115 = v112;
      (*(void (**)(char *, uint64_t))(v143 + 8))(v112, v142);
      (*(void (**)(uint64_t, uint64_t))(v100 + 8))((uint64_t)&v112[(void)v109] & v108, v99);
      swift_bridgeObjectRelease();
      if (*(void *)((((uint64_t)&v112[(void)v109] & v108) + v111 + 23) & 0xFFFFFFFFFFFFFFF8) >= 0xFFFFFFFFuLL)
      {
        swift_release();
        swift_release();
      }
      swift_release();
      size_t v116 = v112;
      goto LABEL_57;
    }
    uint64_t v115 = v112;
    uint64_t v121 = v104;
    ((void (*)(char *, char *, uint64_t))v139)(v112, v104, v142);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v100 + 24))((uint64_t)&v112[(void)v109] & v108, (uint64_t)&v104[(void)v109] & v108, v99);
    uint64_t v131 = ((uint64_t)&v112[(void)v109] & v108) + v111;
    uint64_t v132 = ((uint64_t)&v104[(void)v109] & v108) + v111;
    unint64_t v133 = (v131 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v134 = (v132 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v133 = *(void *)v134;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v133 + 8) = *(unsigned char *)(v134 + 8);
    uint64_t v135 = (void *)((v131 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v136 = (unint64_t *)((v132 + 23) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v137 = *v136;
    if (*v135 < 0xFFFFFFFFuLL)
    {
      unint64_t v122 = __n;
      uint64_t v123 = v141;
      if (v137 >= 0xFFFFFFFF)
      {
        void *v135 = v137;
        v135[1] = v136[1];
        swift_retain();
        swift_retain();
        goto LABEL_69;
      }
    }
    else
    {
      unint64_t v122 = __n;
      uint64_t v123 = v141;
      if (v137 >= 0xFFFFFFFF)
      {
        void *v135 = v137;
        swift_retain();
        swift_release();
        v135[1] = v136[1];
        swift_retain();
        swift_release();
LABEL_69:
        *(void *)(((unint64_t)v135 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v136 + 23) & 0xFFFFFFFFFFFFFFF8);
        swift_retain();
        swift_release();
        goto LABEL_70;
      }
      swift_release();
      swift_release();
    }
    *(_OWORD *)uint64_t v135 = *(_OWORD *)v136;
    goto LABEL_69;
  }
  uint64_t v117 = (unint64_t)&v109[v103] & v108;
  uint64_t v112 = (char *)v103;
  if (v106 == v107)
  {
    int v118 = __swift_getEnumTagSinglePayload(v117, v106, v99);
    int v114 = __swift_getEnumTagSinglePayload((uint64_t)&v104[(void)v109] & v108, v106, v99);
    if (!v118) {
      goto LABEL_53;
    }
  }
  else
  {
    unint64_t v119 = *(void *)((v111 + 7 + v117) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v120 = *(void *)((v111 + 7 + ((uint64_t)&v104[(void)v109] & v108)) & 0xFFFFFFFFFFFFFFF8);
    if (v120 >= 0xFFFFFFFF) {
      LODWORD(v120) = -1;
    }
    int v114 = v120 + 1;
    if (v119 > 0xFFFFFFFE) {
      goto LABEL_53;
    }
  }
LABEL_45:
  if (v114)
  {
    uint64_t v115 = v112;
    size_t v116 = v112;
LABEL_57:
    uint64_t v121 = v104;
    unint64_t v122 = __n;
    memcpy(v116, v104, __n);
    uint64_t v123 = v141;
    goto LABEL_70;
  }
  uint64_t v121 = v104;
  uint64_t v115 = v112;
  (*(void (**)(char *, char *, uint64_t))(v143 + 16))(v112, v104, v142);
  uint64_t v124 = (uint64_t)&v112[(void)v109] & v108;
  unint64_t v125 = (uint64_t)&__srca[(void)v109] & v108;
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v100 + 16))(v124, v125, v99);
  unint64_t v126 = (v124 + v111 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v127 = (v125 + v111 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v126 = *(void *)v127;
  *(unsigned char *)(v126 + 8) = *(unsigned char *)(v127 + 8);
  unint64_t v128 = (v124 + v111 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v129 = (unint64_t *)((v125 + v111 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v130 = *v129;
  swift_bridgeObjectRetain();
  if (v130 < 0xFFFFFFFF)
  {
    *(_OWORD *)unint64_t v128 = *(_OWORD *)v129;
  }
  else
  {
    *(void *)unint64_t v128 = v130;
    *(void *)(v128 + 8) = v129[1];
    swift_retain();
    swift_retain();
  }
  unint64_t v122 = __n;
  uint64_t v123 = v141;
  *(void *)((v128 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v129 + 23) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
LABEL_70:
  *(void *)&v115[v122] = *(void *)&v121[v122];
  swift_retain();
  swift_release();
  return v123;
}

uint64_t sub_22EE1A99C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7F780();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  unint64_t v89 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v89(a1, a2, v6);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v11 = v10 + 32;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (v9 + v12 + a1) & ~v12;
  uint64_t v14 = (v9 + v12 + a2) & ~v12;
  (*(void (**)(uint64_t, uint64_t))(v10 + 32))(v13, v14);
  uint64_t v15 = *(void *)(v11 + 32);
  unint64_t v16 = v15 + v13;
  unint64_t v17 = v15 + v14;
  *(unsigned char *)unint64_t v16 = *(unsigned char *)v17;
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFF8;
  long long v20 = *(_OWORD *)((v17 & 0xFFFFFFFFFFFFFFF8) + 24);
  long long v21 = *(_OWORD *)((v17 & 0xFFFFFFFFFFFFFFF8) + 33);
  *(_OWORD *)(v18 + 8) = *(_OWORD *)((v17 & 0xFFFFFFFFFFFFFFF8) + 8);
  *(_OWORD *)(v18 + 33) = v21;
  *(_OWORD *)(v18 + 24) = v20;
  uint64_t v22 = *(void *)((v17 & 0xFFFFFFFFFFFFFFF8) + 56);
  *(unsigned char *)(v18 + 64) = *(unsigned char *)(v19 + 64);
  *(void *)(v18 + 56) = v22;
  LOBYTE(v22) = *(unsigned char *)(v19 + 80);
  *(void *)(v18 + 72) = *(void *)(v19 + 72);
  *(unsigned char *)(v18 + 80) = v22;
  LOBYTE(v22) = *(unsigned char *)(v19 + 96);
  *(void *)(v18 + 88) = *(void *)(v19 + 88);
  *(unsigned char *)(v18 + 96) = v22;
  LOBYTE(v22) = *(unsigned char *)(v19 + 112);
  *(void *)(v18 + 104) = *(void *)(v19 + 104);
  *(unsigned char *)(v18 + 112) = v22;
  LOBYTE(v22) = *(unsigned char *)(v19 + 128);
  *(void *)(v18 + 120) = *(void *)(v19 + 120);
  *(unsigned char *)(v18 + 128) = v22;
  LOBYTE(v22) = *(unsigned char *)(v19 + 152);
  *(_OWORD *)(v18 + 136) = *(_OWORD *)(v19 + 136);
  *(unsigned char *)(v18 + 152) = v22;
  memcpy((void *)((v16 & 0xFFFFFFFFFFFFFFF8) + 160), (const void *)(v19 + 160), 0x41uLL);
  uint64_t v23 = sub_22EE7DE00();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(_DWORD *)(v24 + 80) & 0xF8;
  uint64_t v26 = v25 + 232;
  unint64_t v27 = v25 + 232 + v18;
  unint64_t v28 = ~v25 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v29 = v27 & v28;
  uint64_t v30 = v26 + v19;
  uint64_t v31 = (_DWORD *)(v30 & v28);
  uint64_t v32 = *(void *)(v24 + 64) + 7;
  if ((v32 & 0xFFFFFFFFFFFFFFF8) != 0 && (v32 & 0xFFFFFFFFFFFFFFF8) < 0xFFFFFFFFFFFFFFF8) {
    unint64_t v33 = (v32 & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  else {
    unint64_t v33 = 8;
  }
  unsigned int v34 = *((unsigned __int8 *)v31 + v33);
  if (v34 >= 2 && (v33 & 0xFFFFFFF8) != 0) {
    unsigned int v34 = *v31 + 2;
  }
  if (v34 == 1)
  {
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v24 + 32))(v27 & v28, v30 & v28, v23);
    uint64_t v36 = (void *)((v32 + v29) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v37 = (void *)(((unint64_t)v31 + v32) & 0xFFFFFFFFFFFFFFF8);
    char v38 = 1;
  }
  else
  {
    char v38 = 0;
    uint64_t v37 = (void *)(v30 & v28);
    uint64_t v36 = (void *)(v27 & v28);
  }
  void *v36 = *v37;
  *(unsigned char *)(v29 + v33) = v38;
  uint64_t v39 = v33 | 1;
  uint64_t v40 = sub_22EE7C3C0();
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v42 = *(_DWORD *)(v41 + 80) & 0xF8 | 7;
  uint64_t v43 = (v39 + v42 + v29) & ~v42;
  uint64_t v44 = ((unint64_t)v31 + v39 + v42) & ~v42;
  if (__swift_getEnumTagSinglePayload(v44, 1, v40))
  {
    int v45 = *(_DWORD *)(v41 + 84);
    size_t v46 = *(void *)(v41 + 64);
    if (v45) {
      size_t v47 = v46;
    }
    else {
      size_t v47 = v46 + 1;
    }
    memcpy((void *)v43, (const void *)v44, v47);
  }
  else
  {
    uint64_t v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 32);
    uint64_t v48 = v41 + 32;
    v49(v43, v44, v40);
    __swift_storeEnumTagSinglePayload(v43, 0, 1, v40);
    int v45 = *(_DWORD *)(v48 + 52);
    size_t v46 = *(void *)(v48 + 32);
  }
  if (v45) {
    size_t v50 = v46;
  }
  else {
    size_t v50 = v46 + 1;
  }
  *(void *)(((v43 | 7) + v50) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v44 | 7) + v50) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v51 = ((v50 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v52 = (_OWORD *)(v51 + v43);
  uint64_t v53 = (_OWORD *)(v51 + v44);
  *uint64_t v52 = *v53;
  uint64_t v54 = (_OWORD *)(((unint64_t)v52 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v55 = (long long *)(((unint64_t)v53 + 23) & 0xFFFFFFFFFFFFFFF8);
  long long v56 = *v55;
  long long v57 = v55[2];
  v54[1] = v55[1];
  v54[2] = v57;
  *uint64_t v54 = v56;
  uint64_t v58 = (_OWORD *)(((unint64_t)v54 + 55) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v59 = (_OWORD *)(((unint64_t)v55 + 55) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v58 = *v59;
  uint64_t v60 = (_OWORD *)(((unint64_t)v58 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v61 = (_OWORD *)(((unint64_t)v59 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v60 = *v61;
  int v62 = *(_DWORD *)(v8 + 80) & 0xF8;
  uint64_t v63 = sub_22EE7F540();
  uint64_t v64 = *(void *)(v63 - 8);
  uint64_t v65 = *(unsigned __int8 *)(v64 + 80);
  uint64_t v66 = v62 | v65 | 7;
  unint64_t v67 = (char *)(((unint64_t)v60 + v66 + 16) & ~v66);
  uint64_t v68 = (char *)(((unint64_t)v61 + v66 + 16) & ~v66);
  uint64_t v69 = *(unsigned int *)(v8 + 84);
  uint64_t v70 = *(unsigned int *)(v64 + 84);
  if (v70 <= v69) {
    unsigned int v71 = *(_DWORD *)(v8 + 84);
  }
  else {
    unsigned int v71 = *(_DWORD *)(v64 + 84);
  }
  if (v71 <= 0x7FFFFFFF) {
    unsigned int v71 = 0x7FFFFFFF;
  }
  uint64_t v72 = ~v65;
  uint64_t v73 = v9 + v65;
  uint64_t v74 = (v9 + v65) & ~v65;
  uint64_t v75 = *(void *)(*(void *)(v63 - 8) + 64);
  unint64_t v76 = (((v75 + v74 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  if (v69 == v71)
  {
    uint64_t v77 = (uint64_t)v68;
    uint64_t v70 = v69;
    uint64_t v78 = v6;
LABEL_30:
    int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v77, v70, v78);
    goto LABEL_34;
  }
  uint64_t v77 = (unint64_t)&v68[v73] & v72;
  if (v70 == v71)
  {
    uint64_t v78 = v63;
    goto LABEL_30;
  }
  unint64_t v80 = *(void *)((v75 + v77 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v80 >= 0xFFFFFFFF) {
    LODWORD(v80) = -1;
  }
  int EnumTagSinglePayload = v80 + 1;
LABEL_34:
  size_t v81 = v76 + 8;
  if (EnumTagSinglePayload)
  {
    memcpy(v67, v68, v81);
  }
  else
  {
    v89((uint64_t)v67, (uint64_t)v68, v6);
    unint64_t v82 = (unint64_t)&v67[v73] & v72;
    unint64_t v83 = (unint64_t)&v68[v73] & v72;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v64 + 32))(v82, v83, v63);
    unint64_t v84 = (v82 + v75 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v85 = (v83 + v75 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v84 = *(void *)v85;
    *(unsigned char *)(v84 + 8) = *(unsigned char *)(v85 + 8);
    uint64_t v86 = (_OWORD *)((v82 + v75 + 23) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v87 = (_OWORD *)((v83 + v75 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v86 = *v87;
    *(void *)(((unint64_t)v86 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v87 + 23) & 0xFFFFFFFFFFFFFFF8);
  }
  *(void *)&v67[v81] = *(void *)&v68[v81];
  return a1;
}

uint64_t sub_22EE1AF68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_22EE7F780();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v7 + 40);
  uint64_t v133 = v6;
  v9(a1, a2);
  uint64_t v10 = *(void *)(v7 + 64);
  uint64_t v11 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v12 = v11 + 40;
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v132 = a1;
  uint64_t v14 = (v10 + v13 + a1) & ~v13;
  uint64_t v15 = (v10 + v13 + a2) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v11 + 40))(v14, v15);
  uint64_t v16 = *(void *)(v12 + 24);
  unint64_t v17 = v16 + v14;
  unint64_t v18 = v16 + v15;
  *(unsigned char *)unint64_t v17 = *(unsigned char *)v18;
  unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = *(void *)((v18 & 0xFFFFFFFFFFFFFFF8) + 40);
  LOBYTE(v17) = *(unsigned char *)(v20 + 48);
  uint64_t v22 = *(void *)(v19 + 8);
  uint64_t v23 = *(void *)(v19 + 16);
  uint64_t v24 = *(void *)(v19 + 24);
  uint64_t v25 = *(void *)(v19 + 32);
  uint64_t v26 = *(void *)(v19 + 40);
  char v27 = *(unsigned char *)(v19 + 48);
  long long v28 = *(_OWORD *)(v20 + 24);
  *(_OWORD *)(v19 + 8) = *(_OWORD *)(v20 + 8);
  *(_OWORD *)(v19 + 24) = v28;
  *(void *)(v19 + 40) = v21;
  *(unsigned char *)(v19 + 48) = v17;
  sub_22EB19A34(v22, v23, v24, v25, v26, v27);
  char v29 = *(unsigned char *)(v20 + 64);
  uint64_t v30 = *(void *)(v19 + 56);
  *(void *)(v19 + 56) = *(void *)(v20 + 56);
  *(unsigned char *)(v19 + 64) = v29;
  j_j__swift_release(v30);
  char v31 = *(unsigned char *)(v20 + 80);
  uint64_t v32 = *(void *)(v19 + 72);
  *(void *)(v19 + 72) = *(void *)(v20 + 72);
  *(unsigned char *)(v19 + 80) = v31;
  j_j__swift_release(v32);
  char v33 = *(unsigned char *)(v20 + 96);
  uint64_t v34 = *(void *)(v19 + 88);
  *(void *)(v19 + 88) = *(void *)(v20 + 88);
  *(unsigned char *)(v19 + 96) = v33;
  j_j__swift_release(v34);
  char v35 = *(unsigned char *)(v20 + 112);
  uint64_t v36 = *(void *)(v19 + 104);
  uint64_t v37 = *(unsigned __int8 *)(v19 + 112);
  *(void *)(v19 + 104) = *(void *)(v20 + 104);
  *(unsigned char *)(v19 + 112) = v35;
  sub_22EB19E28(v36, v37);
  char v38 = *(unsigned char *)(v20 + 128);
  uint64_t v39 = *(void *)(v19 + 120);
  uint64_t v40 = *(unsigned __int8 *)(v19 + 128);
  *(void *)(v19 + 120) = *(void *)(v20 + 120);
  *(unsigned char *)(v19 + 128) = v38;
  sub_22EB19E28(v39, v40);
  char v41 = *(unsigned char *)(v20 + 152);
  uint64_t v42 = *(void *)(v19 + 136);
  uint64_t v43 = *(void *)(v19 + 144);
  char v44 = *(unsigned char *)(v19 + 152);
  *(_OWORD *)(v19 + 136) = *(_OWORD *)(v20 + 136);
  *(unsigned char *)(v19 + 152) = v41;
  sub_22EBAD8D0(v42, v43, v44);
  char v45 = *(unsigned char *)(v20 + 168);
  uint64_t v46 = *(void *)(v19 + 160);
  *(void *)(v19 + 160) = *(void *)(v20 + 160);
  *(unsigned char *)(v19 + 168) = v45;
  j_j__swift_release(v46);
  char v47 = *(unsigned char *)(v20 + 184);
  uint64_t v48 = *(void *)(v19 + 176);
  *(void *)(v19 + 176) = *(void *)(v20 + 176);
  *(unsigned char *)(v19 + 184) = v47;
  j_j__swift_release(v48);
  char v49 = *(unsigned char *)(v20 + 200);
  uint64_t v50 = *(void *)(v19 + 192);
  *(void *)(v19 + 192) = *(void *)(v20 + 192);
  *(unsigned char *)(v19 + 200) = v49;
  j_j__swift_release(v50);
  char v51 = *(unsigned char *)(v20 + 224);
  uint64_t v52 = *(void *)(v19 + 208);
  uint64_t v53 = *(void *)(v19 + 216);
  char v54 = *(unsigned char *)(v19 + 224);
  *(_OWORD *)(v19 + 208) = *(_OWORD *)(v20 + 208);
  *(unsigned char *)(v19 + 224) = v51;
  sub_22EBAD8D0(v52, v53, v54);
  uint64_t v55 = sub_22EE7DE00();
  uint64_t v56 = *(void *)(v55 - 8);
  uint64_t v57 = *(_DWORD *)(v56 + 80) & 0xF8;
  uint64_t v58 = v57 + 232;
  unint64_t v59 = v57 + 232 + v19;
  unint64_t v60 = ~v57 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v61 = v59 & v60;
  unint64_t v62 = (v58 + v20) & v60;
  uint64_t v63 = *(void *)(v56 + 64);
  if (((v63 + 7) & 0xFFFFFFFFFFFFFFF8) != 0 && ((v63 + 7) & 0xFFFFFFFFFFFFFFF8) < 0xFFFFFFFFFFFFFFF8) {
    unint64_t v64 = ((v63 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  else {
    unint64_t v64 = 8;
  }
  if (v61 != v62)
  {
    uint64_t v65 = v55;
    unsigned int v66 = *(unsigned __int8 *)(v61 + v64);
    if (v66 >= 2 && (v64 & 0xFFFFFFF8) != 0) {
      unsigned int v66 = *(_DWORD *)v61 + 2;
    }
    if (v66 == 1)
    {
      (*(void (**)(unint64_t, uint64_t))(v56 + 8))(v59 & v60, v55);
    }
    else
    {
      swift_release();
    }
    unsigned int v67 = *(unsigned __int8 *)(v62 + v64);
    if ((v64 & 0xFFFFFFF8) != 0 && v67 >= 2) {
      unsigned int v67 = *(_DWORD *)v62 + 2;
    }
    if (v67 == 1)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v56 + 32))(v61, v62, v65);
      uint64_t v68 = (void *)(((v61 | 7) + v63) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v69 = (void *)(((v62 | 7) + v63) & 0xFFFFFFFFFFFFFFF8);
      char v70 = 1;
    }
    else
    {
      char v70 = 0;
      uint64_t v69 = (void *)v62;
      uint64_t v68 = (void *)v61;
    }
    *uint64_t v68 = *v69;
    *(unsigned char *)(v61 + v64) = v70;
  }
  uint64_t v71 = v64 | 1;
  uint64_t v72 = sub_22EE7C3C0();
  uint64_t v73 = *(void *)(v72 - 8);
  uint64_t v74 = *(_DWORD *)(v73 + 80) & 0xF8 | 7;
  uint64_t v75 = (v71 + v74 + v61) & ~v74;
  uint64_t v76 = (v71 + v74 + v62) & ~v74;
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v75, 1, v72);
  int v78 = __swift_getEnumTagSinglePayload(v76, 1, v72);
  if (EnumTagSinglePayload)
  {
    if (!v78)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 32))(v75, v76, v72);
      __swift_storeEnumTagSinglePayload(v75, 0, 1, v72);
      goto LABEL_29;
    }
    int v79 = *(_DWORD *)(v73 + 84);
    size_t v80 = *(void *)(v73 + 64);
  }
  else
  {
    if (!v78)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 40))(v75, v76, v72);
      goto LABEL_29;
    }
    (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v75, v72);
    int v79 = *(_DWORD *)(v73 + 84);
    size_t v80 = *(void *)(v73 + 64);
  }
  if (v79) {
    size_t v81 = v80;
  }
  else {
    size_t v81 = v80 + 1;
  }
  memcpy((void *)v75, (const void *)v76, v81);
LABEL_29:
  if (*(_DWORD *)(v73 + 84)) {
    uint64_t v82 = *(void *)(v73 + 64);
  }
  else {
    uint64_t v82 = *(void *)(v73 + 64) + 1;
  }
  *(void *)(((v75 | 7) + v82) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v76 | 7) + v82) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  unint64_t v83 = ((v82 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v84 = (void *)(v83 + v75);
  unint64_t v85 = v83 + v76;
  *unint64_t v84 = *(void *)(v83 + v76);
  swift_release();
  v84[1] = *(void *)(v85 + 8);
  swift_release();
  unint64_t v86 = ((unint64_t)v84 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v87 = (v85 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v86 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v86);
  }
  long long v88 = *(_OWORD *)v87;
  long long v89 = *(_OWORD *)(v87 + 16);
  *(void *)(v86 + 32) = *(void *)(v87 + 32);
  *(_OWORD *)unint64_t v86 = v88;
  *(_OWORD *)(v86 + 16) = v89;
  *(void *)(v86 + 40) = *(void *)(v87 + 40);
  swift_release();
  unint64_t v90 = (v86 + 55) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v91 = (v87 + 55) & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)unint64_t v90 = *(unsigned char *)v91;
  *(void *)(v90 + 8) = *(void *)(v91 + 8);
  swift_release();
  unint64_t v92 = (v90 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v93 = (v91 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)unint64_t v92 = *(unsigned char *)v93;
  *(void *)(v92 + 8) = *(void *)(v93 + 8);
  swift_release();
  int v94 = *(_DWORD *)(v8 + 80) & 0xF8;
  uint64_t v95 = sub_22EE7F540();
  uint64_t v96 = *(void *)(v95 - 8);
  uint64_t v97 = *(unsigned __int8 *)(v96 + 80);
  uint64_t v98 = v94 | v97 | 7;
  uint64_t v99 = (char *)((v98 + 16 + v92) & ~v98);
  uint64_t v100 = (v98 + 16 + v93) & ~v98;
  uint64_t v130 = v8;
  uint64_t v101 = *(unsigned int *)(v8 + 84);
  uint64_t v102 = *(unsigned int *)(v96 + 84);
  if (v102 <= v101) {
    unsigned int v103 = *(_DWORD *)(v8 + 84);
  }
  else {
    unsigned int v103 = *(_DWORD *)(v96 + 84);
  }
  if (v103 <= 0x7FFFFFFF) {
    unsigned int v103 = 0x7FFFFFFF;
  }
  uint64_t v104 = ~v97;
  uint64_t v105 = v10 + v97;
  uint64_t v106 = (v10 + v97) & ~v97;
  uint64_t v107 = *(void *)(*(void *)(v95 - 8) + 64);
  unint64_t __n = ((((v107 + v106 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  __src = (void *)v100;
  if (v101 != v103)
  {
    uint64_t v119 = (unint64_t)&v99[v105] & v104;
    if (v102 == v103)
    {
      int v120 = __swift_getEnumTagSinglePayload(v119, v102, v95);
      int v109 = __swift_getEnumTagSinglePayload((v105 + v100) & v104, v102, v95);
      if (!v120) {
        goto LABEL_49;
      }
    }
    else
    {
      unint64_t v121 = *(void *)((v107 + 7 + v119) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v122 = *(void *)((v107 + 7 + ((v105 + v100) & v104)) & 0xFFFFFFFFFFFFFFF8);
      if (v122 >= 0xFFFFFFFF) {
        LODWORD(v122) = -1;
      }
      int v109 = v122 + 1;
      if (v121 > 0xFFFFFFFE) {
        goto LABEL_49;
      }
    }
LABEL_41:
    if (!v109)
    {
      uint64_t v110 = v100;
      (*(void (**)(char *, uint64_t, uint64_t))(v130 + 32))(v99, v100, v133);
      unint64_t v111 = (unint64_t)&v99[v105] & v104;
      uint64_t v112 = (v105 + v100) & v104;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v96 + 32))(v111, v112, v95);
      unint64_t v113 = (v111 + v107 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v114 = (v112 + v107 + 7) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v113 = *(void *)v114;
      *(unsigned char *)(v113 + 8) = *(unsigned char *)(v114 + 8);
      uint64_t v115 = (_OWORD *)((v111 + v107 + 23) & 0xFFFFFFFFFFFFFFF8);
      size_t v116 = (_OWORD *)((v112 + v107 + 23) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v115 = *v116;
      *(void *)(((unint64_t)v115 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v116 + 23) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v118 = __n;
      uint64_t v117 = v132;
      goto LABEL_54;
    }
LABEL_53:
    uint64_t v110 = v100;
    unint64_t v118 = __n;
    memcpy(v99, __src, __n);
    uint64_t v117 = v132;
    goto LABEL_54;
  }
  int v108 = __swift_getEnumTagSinglePayload((uint64_t)v99, v101, v133);
  int v109 = __swift_getEnumTagSinglePayload(v100, v101, v133);
  if (v108) {
    goto LABEL_41;
  }
LABEL_49:
  if (v109)
  {
    (*(void (**)(char *, uint64_t))(v130 + 8))(v99, v133);
    (*(void (**)(unint64_t, uint64_t))(v96 + 8))((unint64_t)&v99[v105] & v104, v95);
    swift_bridgeObjectRelease();
    if (*(void *)((((unint64_t)&v99[v105] & v104) + v107 + 23) & 0xFFFFFFFFFFFFFFF8) >= 0xFFFFFFFFuLL)
    {
      swift_release();
      swift_release();
    }
    swift_release();
    goto LABEL_53;
  }
  uint64_t v110 = v100;
  ((void (*)(char *, uint64_t, uint64_t))v9)(v99, v100, v133);
  unint64_t v124 = (unint64_t)&v99[v105] & v104;
  uint64_t v125 = (v105 + v100) & v104;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v96 + 40))(v124, v125, v95);
  unint64_t v126 = (v124 + v107 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v127 = (v125 + v107 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v126 = *(void *)v127;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v126 + 8) = *(unsigned char *)(v127 + 8);
  unint64_t v128 = (v124 + v107 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v129 = (v125 + v107 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)v128 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)unint64_t v128 = *(_OWORD *)v129;
    unint64_t v118 = __n;
    uint64_t v117 = v132;
  }
  else
  {
    unint64_t v118 = __n;
    uint64_t v117 = v132;
    if (*(void *)v129 < 0xFFFFFFFFuLL)
    {
      swift_release();
      swift_release();
      *(_OWORD *)unint64_t v128 = *(_OWORD *)v129;
    }
    else
    {
      *(void *)unint64_t v128 = *(void *)v129;
      swift_release();
      *(void *)(v128 + 8) = *(void *)(v129 + 8);
      swift_release();
    }
  }
  *(void *)((v128 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v129 + 23) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
LABEL_54:
  *(void *)&v99[v118] = *(void *)(v118 + v110);
  swift_release();
  return v117;
}

uint64_t sub_22EE1B974(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v53 = sub_22EE7F780();
  uint64_t v57 = *(void *)(v53 - 8);
  uint64_t v4 = *(unsigned int *)(v57 + 84);
  uint64_t v51 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v51 - 8);
  unsigned int v52 = *(_DWORD *)(v5 + 84);
  if (v52 <= v4) {
    unsigned int v6 = *(_DWORD *)(v57 + 84);
  }
  else {
    unsigned int v6 = *(_DWORD *)(v5 + 84);
  }
  uint64_t v56 = *(void *)(sub_22EE7DE00() - 8);
  unint64_t v7 = ((*(void *)(v56 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v7 <= 8) {
    unint64_t v7 = 8;
  }
  unint64_t v54 = v7;
  uint64_t v48 = sub_22EE7C3C0();
  uint64_t v8 = *(void *)(v48 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v9) {
    unsigned int v10 = v9 - 1;
  }
  else {
    unsigned int v10 = 0;
  }
  if (v10 <= 0x7FFFFFFE) {
    unsigned int v11 = 2147483646;
  }
  else {
    unsigned int v11 = v10;
  }
  unsigned int v49 = v10;
  unsigned int v50 = v11;
  if (v6 <= v11) {
    unsigned int v6 = v11;
  }
  uint64_t v12 = sub_22EE7F540();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int *)(v13 + 84);
  if (v14 <= v4) {
    unsigned int v15 = v4;
  }
  else {
    unsigned int v15 = *(_DWORD *)(v13 + 84);
  }
  if (v15 <= 0x7FFFFFFF) {
    unsigned int v15 = 0x7FFFFFFF;
  }
  unsigned int v16 = v15 - 1;
  if (v6 > v15 - 1) {
    unsigned int v16 = v6;
  }
  uint64_t v17 = *(void *)(v57 + 64);
  uint64_t v18 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v19 = *(void *)(v5 + 64);
  uint64_t v20 = *(void *)(v8 + 64);
  if (!v9) {
    ++v20;
  }
  uint64_t v21 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v22 = *(void *)(*(void *)(v12 - 8) + 64);
  uint64_t result = a2;
  if (!a2) {
    return result;
  }
  uint64_t v24 = v17 + v18;
  uint64_t v25 = *(_DWORD *)(v56 + 80) & 0xF8 | 7;
  uint64_t v26 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  uint64_t v27 = v26 + v54 + 1;
  uint64_t v28 = *(_DWORD *)(v57 + 80) & 0xF8 | v21 | 7;
  uint64_t v29 = v17 + v21;
  uint64_t v30 = v20 + 7;
  unint64_t v31 = (v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v32 = v28 + 16;
  uint64_t v33 = (uint64_t)a1;
  if (a2 > v16)
  {
    unint64_t v34 = ((((((v22 + (v29 & ~v21) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + ((v32
          + ((((((v31 + ((v27 + ((v25 + (((v24 & ~v18) + v19) & 0xFFFFFFFFFFFFFFF8) + 225) & ~v25)) & ~v26) + 31) & 0xFFFFFFFFFFFFFFF8)
              + 55) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v28)
        + 8;
    if ((v34 & 0xFFFFFFF8) != 0) {
      goto LABEL_26;
    }
    unsigned int v36 = a2 - v16 + 1;
    if (HIWORD(v36))
    {
      int v35 = *(_DWORD *)((char *)a1 + v34);
      if (!v35) {
        goto LABEL_39;
      }
      goto LABEL_33;
    }
    if (v36 > 0xFF)
    {
      int v35 = *(unsigned __int16 *)((char *)a1 + v34);
      if (!*(_WORD *)((char *)a1 + v34)) {
        goto LABEL_39;
      }
      goto LABEL_33;
    }
    if (v36 >= 2)
    {
LABEL_26:
      int v35 = *((unsigned __int8 *)a1 + v34);
      if (!*((unsigned char *)a1 + v34)) {
        goto LABEL_39;
      }
LABEL_33:
      int v37 = v35 - 1;
      if ((v34 & 0xFFFFFFF8) != 0)
      {
        int v37 = 0;
        int v38 = *a1;
      }
      else
      {
        int v38 = 0;
      }
      int v39 = v16 + (v38 | v37);
      return (v39 + 1);
    }
  }
LABEL_39:
  if (v4 == v16)
  {
    uint64_t v40 = v4;
    uint64_t v41 = v53;
LABEL_43:
    return __swift_getEnumTagSinglePayload(v33, v40, v41);
  }
  uint64_t v33 = ((unint64_t)a1 + v24) & ~v18;
  if (v52 == v16)
  {
    uint64_t v40 = v52;
    uint64_t v41 = v51;
    goto LABEL_43;
  }
  unint64_t v42 = (v27 + ((((v33 + v19) & 0xFFFFFFFFFFFFFFF8) + v25 + 225) & ~v25)) & ~v26;
  if (v50 != v16)
  {
    uint64_t v43 = (uint64_t *)(v42 + v31 + 8);
    if (v16 > 0x7FFFFFFE)
    {
      unint64_t v42 = (v32
           + (((((((unint64_t)v43 + 23) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v28;
      if (v4 == v15)
      {
        uint64_t v14 = v4;
        uint64_t v12 = v53;
      }
      else
      {
        unint64_t v42 = (v29 + v42) & ~v21;
        if (v14 != v15)
        {
          unint64_t v47 = *(void *)((v22 + v42 + 7) & 0xFFFFFFFFFFFFFFF8);
          if (v47 >= 0xFFFFFFFF) {
            LODWORD(v47) = -1;
          }
          unsigned int EnumTagSinglePayload = v47 + 1;
          goto LABEL_63;
        }
      }
LABEL_62:
      unsigned int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v42, v14, v12);
LABEL_63:
      if (EnumTagSinglePayload >= 2) {
        return EnumTagSinglePayload - 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v44 = *v43;
    if ((unint64_t)*v43 >= 0xFFFFFFFF) {
      LODWORD(v44) = -1;
    }
    int v39 = v44 - 1;
    if (v39 < 0) {
      int v39 = -1;
    }
    return (v39 + 1);
  }
  if (v49 >= 0x7FFFFFFE)
  {
    uint64_t v14 = v9;
    uint64_t v12 = v48;
    goto LABEL_62;
  }
  unint64_t v45 = *(void *)((v30 + v42) & 0xFFFFFFFFFFFFFFF8);
  if (v45 >= 0xFFFFFFFF) {
    LODWORD(v45) = -1;
  }
  if ((v45 + 1) >= 2) {
    return v45;
  }
  else {
    return 0;
  }
}

void sub_22EE1BE90(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v65 = sub_22EE7F780();
  uint64_t v68 = *(void *)(v65 - 8);
  uint64_t v5 = *(unsigned int *)(v68 + 84);
  uint64_t v63 = *(void *)(a4 + 16);
  uint64_t v6 = *(void *)(v63 - 8);
  unsigned int v64 = *(_DWORD *)(v6 + 84);
  if (v64 <= v5) {
    unsigned int v7 = *(_DWORD *)(v68 + 84);
  }
  else {
    unsigned int v7 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v66 = *(void *)(sub_22EE7DE00() - 8);
  unint64_t v8 = ((*(void *)(v66 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 <= 8) {
    unint64_t v8 = 8;
  }
  unint64_t v67 = v8;
  uint64_t v60 = sub_22EE7C3C0();
  uint64_t v9 = *(void *)(v60 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  if (v10) {
    unsigned int v11 = v10 - 1;
  }
  else {
    unsigned int v11 = 0;
  }
  if (v11 <= 0x7FFFFFFE) {
    unsigned int v12 = 2147483646;
  }
  else {
    unsigned int v12 = v11;
  }
  unsigned int v61 = v11;
  unsigned int v62 = v12;
  if (v7 <= v12) {
    unsigned int v7 = v12;
  }
  uint64_t v13 = v5;
  uint64_t v14 = sub_22EE7F540();
  int v72 = 0;
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned int *)(v15 + 84);
  if (v16 <= v5) {
    unsigned int v17 = v5;
  }
  else {
    unsigned int v17 = *(_DWORD *)(v15 + 84);
  }
  if (v17 <= 0x7FFFFFFF) {
    unsigned int v17 = 0x7FFFFFFF;
  }
  if (v7 <= v17 - 1) {
    unsigned int v18 = v17 - 1;
  }
  else {
    unsigned int v18 = v7;
  }
  unsigned int v59 = v10;
  BOOL v19 = v10 == 0;
  uint64_t v20 = *(void *)(v68 + 64);
  uint64_t v21 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v22 = v20 + v21;
  uint64_t v23 = *(void *)(v6 + 64);
  uint64_t v24 = *(_DWORD *)(v66 + 80) & 0xF8 | 7;
  uint64_t v25 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  uint64_t v26 = v25 + v67 + 1;
  unint64_t v27 = (v26 + ((v24 + ((((v20 + v21) & ~v21) + v23) & 0xFFFFFFFFFFFFFFF8) + 225) & ~v24)) & ~v25;
  size_t v28 = *(void *)(v9 + 64);
  if (v19) {
    ++v28;
  }
  uint64_t v29 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v30 = *(_DWORD *)(v68 + 80) & 0xF8 | v29 | 7;
  uint64_t v31 = v20 + v29;
  uint64_t v32 = *(void *)(*(void *)(v14 - 8) + 64);
  unint64_t v33 = (((v32 + (v31 & ~v29) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (((((v34 + v27 + 31) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = v30 + 16;
  size_t v37 = ((v33 + 15) & 0xFFFFFFFFFFFFFFF8) + ((v30 + 16 + v35) & ~v30) + 8;
  if (a3 > v18)
  {
    if (((v33 + 15) & 0xFFFFFFF8) + ((v30 + 16 + v35) & ~v30) == -8)
    {
      unsigned int v39 = a3 - v18 + 1;
      unsigned int v40 = HIWORD(v39);
      if (v39 >= 0x100) {
        int v38 = 2;
      }
      else {
        int v38 = v39 > 1;
      }
      if (v40) {
        int v38 = 4;
      }
    }
    else
    {
      int v38 = 1;
    }
    int v72 = v38;
  }
  int v41 = a2 - v18;
  if (a2 > v18)
  {
    if (v37)
    {
      unsigned int v42 = ~v18 + a2;
      bzero(a1, v37);
      *a1 = v42;
      int v41 = 1;
    }
    switch(v72)
    {
      case 1:
        *((unsigned char *)a1 + v37) = v41;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v37) = v41;
        return;
      case 3:
        goto LABEL_91;
      case 4:
        *(unsigned int *)((char *)a1 + v37) = v41;
        return;
      default:
        return;
    }
  }
  uint64_t v43 = ~v21;
  uint64_t v44 = ~v25;
  uint64_t v45 = ~v30;
  uint64_t v46 = ~v29;
  unint64_t v47 = (unint64_t)a1;
  switch(v72)
  {
    case 1:
      *((unsigned char *)a1 + v37) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_45;
    case 2:
      *(_WORD *)((char *)a1 + v37) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_45;
    case 3:
LABEL_91:
      __break(1u);
      JUMPOUT(0x22EE1C504);
    case 4:
      *(unsigned int *)((char *)a1 + v37) = 0;
      goto LABEL_44;
    default:
LABEL_44:
      if (!a2) {
        return;
      }
LABEL_45:
      if (v13 == v18)
      {
        uint64_t v48 = a2;
LABEL_47:
        uint64_t v16 = v13;
        uint64_t v14 = v65;
LABEL_50:
        __swift_storeEnumTagSinglePayload(v47, v48, v16, v14);
        return;
      }
      unint64_t v47 = ((unint64_t)a1 + v22) & v43;
      if (v64 == v18)
      {
        uint64_t v48 = a2;
        uint64_t v16 = v64;
        uint64_t v14 = v63;
        goto LABEL_50;
      }
      unsigned int v49 = (unsigned char *)((v26 + ((((v47 + v23) & 0xFFFFFFFFFFFFFFF8) + v24 + 225) & ~v24)) & v44);
      if (v62 != v18)
      {
        uint64_t v53 = &v49[v34 + 8];
        if (v18 <= 0x7FFFFFFE)
        {
          void *v53 = a2;
          return;
        }
        unsigned int v49 = (unsigned char *)((v36
                       + (((((((unint64_t)v53 + 23) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v45);
        if (v17 - 1 >= a2)
        {
          uint64_t v48 = a2 + 1;
          if (v48 <= v17)
          {
            if (a2 == -1) {
              return;
            }
            if (v13 == v17)
            {
              unint64_t v47 = (v36
                   + (((((((unint64_t)v53 + 23) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v45;
              goto LABEL_47;
            }
            unint64_t v47 = (unint64_t)&v49[v31] & v46;
            if (v16 == v17) {
              goto LABEL_50;
            }
            unint64_t v54 = (void *)((v32 + v47 + 7) & 0xFFFFFFFFFFFFFFF8);
            if ((v48 & 0x80000000) != 0)
            {
              uint64_t v55 = a2 - 0x7FFFFFFF;
              goto LABEL_71;
            }
LABEL_70:
            uint64_t v55 = a2;
LABEL_71:
            *unint64_t v54 = v55;
            return;
          }
          if (v33 == -8) {
            return;
          }
          int v51 = a2 - v17;
          uint64_t v58 = v49;
          size_t v57 = (v33 + 8);
        }
        else
        {
          int v56 = (v33 + 15) & 0xFFFFFFF8;
          size_t v57 = (v56 + 8);
          if (v56 == -8) {
            return;
          }
          int v51 = a2 - v17;
          uint64_t v58 = v49;
        }
        bzero(v58, v57);
LABEL_81:
        *(_DWORD *)unsigned int v49 = v51;
        return;
      }
      if (v61 < 0x7FFFFFFE)
      {
        unint64_t v54 = (void *)((unint64_t)&v49[v28 + 7] & 0xFFFFFFFFFFFFFFF8);
        if (a2 > 0x7FFFFFFE)
        {
          *unint64_t v54 = 0;
          *(_DWORD *)unint64_t v54 = a2 - 0x7FFFFFFF;
          return;
        }
        goto LABEL_70;
      }
      if (v61 >= a2)
      {
        uint64_t v48 = a2 + 1;
        unint64_t v47 = (unint64_t)v49;
        uint64_t v16 = v59;
        uint64_t v14 = v60;
        goto LABEL_50;
      }
      if (v28 <= 3) {
        int v50 = ~(-1 << (8 * v28));
      }
      else {
        int v50 = -1;
      }
      if (v28)
      {
        int v51 = v50 & (~v61 + a2);
        if (v28 <= 3) {
          int v52 = v28;
        }
        else {
          int v52 = 4;
        }
        bzero(v49, v28);
        switch(v52)
        {
          case 2:
            *(_WORD *)unsigned int v49 = v51;
            break;
          case 3:
            *(_WORD *)unsigned int v49 = v51;
            v49[2] = BYTE2(v51);
            break;
          case 4:
            goto LABEL_81;
          default:
            *unsigned int v49 = v51;
            break;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for StaticProductView()
{
  return __swift_instantiateGenericMetadata();
}

void sub_22EE1C554(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    unint64_t v4 = sub_22EE7EA10();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_22EE1C5A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EE1C5E8(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) == 0)
  {
    uint64_t v7 = a3;
    a1(&v6, &v7);
    if (!v4) {
      return v6;
    }
  }
  return a3;
}

uint64_t sub_22EE1C64C@<X0>(void (*a1)(_OWORD *)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  sub_22EADAD08(v3, (uint64_t)&v10, &qword_268622CC0);
  if (*((void *)&v11 + 1))
  {
    v8[0] = v10;
    v8[1] = v11;
    uint64_t v9 = v12;
    a1(v8);
    return sub_22EC9101C((uint64_t)v8);
  }
  else
  {
    uint64_t v7 = type metadata accessor for SubscriptionStoreContentConfiguration(0);
    return __swift_storeEnumTagSinglePayload(a2, 1, 1, v7);
  }
}

uint64_t sub_22EE1C70C(void (*a1)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861CA48);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_13_0();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_268625060);
  uint64_t v9 = OUTLINED_FUNCTION_14(v8);
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_27_1();
  sub_22EADAD08(v1, v4, qword_268625060);
  if (__swift_getEnumTagSinglePayload(v4, 1, v6) == 1) {
    return 0;
  }
  sub_22EBB0FA8(v4, v3, &qword_26861CA48);
  a1(&v11, v3);
  uint64_t result = sub_22EB0584C(v3, &qword_26861CA48);
  if (!v2) {
    return v11;
  }
  return result;
}

uint64_t sub_22EE1C854@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v15 = a1;
  uint64_t v5 = sub_22EE7F540();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BBA8);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22EADAD08(v3, (uint64_t)v11, &qword_26861BBA8);
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v5) == 1)
  {
    uint64_t v12 = sub_22EE7F670();
    return __swift_storeEnumTagSinglePayload(a2, 1, 1, v12);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
    v15(v8);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

void sub_22EE1CA34(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627A50);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for StoreViewPurchaseEvent();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_retain();
    sub_22EB0FB44();
    if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
    {
      swift_release();
      sub_22EB0584C((uint64_t)v4, &qword_268627A50);
    }
    else
    {
      sub_22EE21E54((uint64_t)v4, (uint64_t)v7, (void (*)(void))type metadata accessor for StoreViewPurchaseEvent);
      if (qword_26861B878 != -1) {
        swift_once();
      }
      uint64_t v8 = type metadata accessor for SKLogger();
      __swift_project_value_buffer(v8, (uint64_t)qword_26864C4F8);
      sub_22ED1EBB8();
      swift_release();
      sub_22EE21F04((uint64_t)v7, (void (*)(void))type metadata accessor for StoreViewPurchaseEvent);
    }
  }
}

uint64_t sub_22EE1CBDC@<X0>(char a1@<W2>, uint64_t a2@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268625BE0);
  uint64_t v7 = OUTLINED_FUNCTION_14(v6);
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_14_0();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861CAF8);
  uint64_t v9 = OUTLINED_FUNCTION_14(v8);
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_27_1();
  sub_22EE7F780();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_12_11();
  v10();
  uint64_t v11 = (int *)type metadata accessor for StaticProductView();
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_12_11();
  v12();
  *(unsigned char *)(a2 + v11[10]) = a1;
  uint64_t v13 = a2 + v11[11];
  *(void *)uint64_t v13 = swift_getKeyPath();
  *(_OWORD *)(v13 + 8) = 0u;
  *(_OWORD *)(v13 + 24) = 0u;
  *(unsigned char *)(v13 + 40) = 0;
  uint64_t KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_32_14(KeyPath);
  uint64_t v15 = swift_getKeyPath();
  OUTLINED_FUNCTION_32_14(v15);
  uint64_t v16 = swift_getKeyPath();
  OUTLINED_FUNCTION_32_14(v16);
  uint64_t v17 = swift_getKeyPath();
  OUTLINED_FUNCTION_32_14(v17);
  uint64_t v18 = swift_getKeyPath();
  OUTLINED_FUNCTION_32_14(v18);
  uint64_t v19 = a2 + v11[17];
  *(void *)uint64_t v19 = swift_getKeyPath();
  *(void *)(v19 + 8) = 0;
  *(unsigned char *)(v19 + 16) = 0;
  uint64_t v20 = a2 + v11[18];
  uint64_t v21 = swift_getKeyPath();
  uint64_t v22 = swift_getKeyPath();
  uint64_t v23 = swift_getKeyPath();
  uint64_t v24 = swift_getKeyPath();
  *(void *)uint64_t v20 = v21;
  *(unsigned char *)(v20 + 8) = 0;
  *(void *)(v20 + 16) = v22;
  *(unsigned char *)(v20 + 24) = 0;
  *(void *)(v20 + 32) = v23;
  *(unsigned char *)(v20 + 40) = 0;
  *(void *)(v20 + 48) = v24;
  *(void *)(v20 + 56) = 0;
  *(unsigned char *)(v20 + 64) = 0;
  uint64_t v25 = (uint64_t *)(a2 + v11[19]);
  uint64_t *v25 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861CD60);
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = sub_22EE7C3C0();
  __swift_storeEnumTagSinglePayload(v3, 1, 1, v26);
  sub_22EE1D258(v3, v27, v28, &qword_26861CAF8);
  uint64_t v29 = (uint64_t *)(a2 + v11[21]);
  *uint64_t v29 = sub_22EBAF124();
  v29[1] = v30;
  uint64_t v40 = 0;
  memset(v39, 0, sizeof(v39));
  sub_22EE1D1DC((uint64_t)v39);
  uint64_t v31 = a2 + v11[23];
  *(unsigned char *)uint64_t v31 = sub_22EB4B794() & 1;
  *(void *)(v31 + 8) = v32;
  uint64_t v33 = a2 + v11[24];
  *(unsigned char *)uint64_t v33 = sub_22EB4B794() & 1;
  *(void *)(v33 + 8) = v34;
  uint64_t v35 = type metadata accessor for SubscriptionOfferManager();
  __swift_storeEnumTagSinglePayload(v2, 1, 1, v35);
  return sub_22EE1D258(v2, v36, v37, &qword_268625BE0);
}

uint64_t sub_22EE1CF48@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_22EB5767C();
  *a1 = result;
  return result;
}

uint64_t sub_22EE1CF74()
{
  return sub_22EB576B8();
}

uint64_t sub_22EE1CFA0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22ED29260();
  *a1 = result & 1;
  return result;
}

uint64_t sub_22EE1CFD0()
{
  return sub_22ED2929C();
}

uint64_t sub_22EE1CFF8()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627A58);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for ProductViewPurchaseEvent();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22ED818D8((uint64_t)v2);
  if (__swift_getEnumTagSinglePayload((uint64_t)v2, 1, v3) == 1) {
    return sub_22EB0584C((uint64_t)v2, &qword_268627A58);
  }
  sub_22EE21E54((uint64_t)v2, (uint64_t)v5, (void (*)(void))type metadata accessor for ProductViewPurchaseEvent);
  if (qword_26861B878 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for SKLogger();
  __swift_project_value_buffer(v7, (uint64_t)qword_26864C4F8);
  sub_22ED1F630();
  return sub_22EE21F04((uint64_t)v5, (void (*)(void))type metadata accessor for ProductViewPurchaseEvent);
}

uint64_t sub_22EE1D178@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_22ED82000();
  *a1 = result;
  return result;
}

uint64_t sub_22EE1D1A4()
{
  return sub_22ED8203C();
}

uint64_t sub_22EE1D1D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22EE1D258(a1, a2, a3, &qword_26861CAF8);
}

uint64_t sub_22EE1D1DC(uint64_t a1)
{
  sub_22EADAD08(a1, (uint64_t)v3, &qword_26861EC80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861EC80);
  sub_22EE7E9D0();
  return sub_22EB0584C(a1, &qword_26861EC80);
}

uint64_t sub_22EE1D24C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22EE1D258(a1, a2, a3, &qword_268625BE0);
}

uint64_t sub_22EE1D258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  __swift_instantiateConcreteTypeFromMangledName(a4);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_13_0();
  sub_22EADAD08(a1, v4, a4);
  sub_22EE7E9D0();
  return sub_22EB0584C(a1, a4);
}

uint64_t sub_22EE1D2F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Product.TaskState(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_22EE1D584(v2, v5, *(void *)(v3 + 24));
  uint64_t v28 = v13;
  uint64_t v29 = v12;
  uint64_t v14 = sub_22EE7F780();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v11, v2, v14);
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = v2 + *(int *)(v3 + 96);
  char v16 = *(unsigned char *)v15;
  uint64_t v17 = *(void *)(v15 + 8);
  LOBYTE(v30[0]) = v16;
  v30[1] = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861D440);
  sub_22EE7E9E0();
  char v18 = v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v2 + *(int *)(v3 + 36), v5);
  sub_22EE25538((uint64_t)v8, v5, v30);
  uint64_t v19 = v30[0];
  LOBYTE(v8) = *(unsigned char *)(v2 + *(int *)(v3 + 40));
  uint64_t v20 = v2 + *(int *)(v3 + 64);
  uint64_t v21 = *(void *)v20;
  uint64_t v22 = *(unsigned __int8 *)(v20 + 8);
  sub_22EADDF00(*(void *)v20, *(unsigned char *)(v20 + 8));
  sub_22EB173DC();
  LOBYTE(v3) = v23;
  sub_22EB19E28(v21, v22);
  uint64_t v24 = v28;
  *(void *)a2 = v29;
  *(void *)(a2 + 8) = v24;
  uint64_t v25 = (int *)type metadata accessor for ProductViewStyleConfiguration();
  sub_22EE21EB0((uint64_t)v11, a2 + v25[6], (void (*)(void))type metadata accessor for Product.TaskState);
  *(unsigned char *)(a2 + v25[8]) = v18;
  uint64_t result = sub_22EE21F04((uint64_t)v11, (void (*)(void))type metadata accessor for Product.TaskState);
  *(void *)(a2 + v25[7]) = v19;
  *(unsigned char *)(a2 + 16) = (_BYTE)v8;
  *(unsigned char *)(a2 + v25[9]) = v3;
  return result;
}

uint64_t (*sub_22EE1D584(uint64_t a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v6 = type metadata accessor for StaticProductView();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v14 - v9;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))((char *)&v14 - v9, a1, v6, v8);
  unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v12 + v11, v10, v6);
  return sub_22EE219E4;
}

uint64_t sub_22EE1D6BC()
{
  uint64_t v0 = type metadata accessor for StaticProductView();
  return sub_22EE1D6E8(v0);
}

uint64_t sub_22EE1D6E8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1 - 8;
  uint64_t v5 = *(void *)(a1 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v21[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C390);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v21[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(int *)(v4 + 92);
  v22[0] = *(_OWORD *)(v2 + v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861F2C0);
  sub_22EE7E9E0();
  uint64_t v12 = v21[0];
  uint64_t result = swift_release();
  if (!v12)
  {
    uint64_t v23 = 0;
    memset(v22, 0, sizeof(v22));
    sub_22EADAD08((uint64_t)v22, (uint64_t)v21, &qword_26861EC80);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26861F2C8);
    sub_22EE7E9F0();
    sub_22EB0584C((uint64_t)v22, &qword_26861EC80);
    sub_22EE7FD50();
    uint64_t v14 = sub_22EE7FD90();
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v14);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v21[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a1);
    sub_22EE7FD30();
    uint64_t v15 = sub_22EE7FD20();
    unint64_t v16 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v17 = swift_allocObject();
    uint64_t v18 = MEMORY[0x263F8F500];
    *(void *)(v17 + 16) = v15;
    *(void *)(v17 + 24) = v18;
    *(_OWORD *)(v17 + 32) = *(_OWORD *)(a1 + 16);
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v17 + v16, v7, a1);
    uint64_t v19 = sub_22EBEC0F0((uint64_t)v10, (uint64_t)&unk_268627A40, v17);
    v22[0] = *(_OWORD *)(v2 + v11);
    v21[0] = v19;
    return sub_22EE7E9F0();
  }
  return result;
}

uint64_t sub_22EE1D958@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v147 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861CAF8);
  uint64_t v6 = OUTLINED_FUNCTION_14(v5);
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_18_15(v7);
  uint64_t v145 = sub_22EE7C400();
  OUTLINED_FUNCTION_0_0();
  uint64_t v144 = v8;
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_18_15(v10);
  uint64_t v156 = sub_22EE7FD90();
  OUTLINED_FUNCTION_0_0();
  uint64_t v157 = v11;
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_6_4(v13);
  OUTLINED_FUNCTION_0_0();
  uint64_t v158 = v14;
  MEMORY[0x270FA5388](v15);
  uint64_t v152 = v16;
  OUTLINED_FUNCTION_18_15((uint64_t)&v128 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = type metadata accessor for InAppStoreButtonStyle();
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v18);
  OUTLINED_FUNCTION_14_0();
  uint64_t v19 = type metadata accessor for ProductViewStyleConfiguration();
  uint64_t v20 = OUTLINED_FUNCTION_14(v19);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v128 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861F290);
  OUTLINED_FUNCTION_0_0();
  uint64_t v132 = v23;
  MEMORY[0x270FA5388](v24);
  uint64_t v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686279D0);
  OUTLINED_FUNCTION_0_0();
  uint64_t v148 = v25;
  MEMORY[0x270FA5388](v26);
  OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_6_4(v27);
  uint64_t v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686279D8);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v28);
  OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_6_4(v29);
  uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861F300);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v30);
  OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_6_4(v31);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861F2F8);
  uint64_t v33 = OUTLINED_FUNCTION_14(v32);
  MEMORY[0x270FA5388](v33);
  OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_6_4(v34);
  uint64_t v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686279E0);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v35);
  OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_6_4(v36);
  uint64_t v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686279E8);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v37);
  OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_6_4(v38);
  uint64_t v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686279F0);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v39);
  OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_6_4(v40);
  uint64_t v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_2686279F8);
  OUTLINED_FUNCTION_2_0();
  MEMORY[0x270FA5388](v41);
  OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_6_4(v42);
  uint64_t v129 = a1;
  uint64_t v43 = *(int *)(a1 + 44);
  uint64_t v153 = v2;
  uint64_t v44 = (long long *)(v2 + v43);
  long long v45 = v44[1];
  long long v168 = *v44;
  *(_OWORD *)uint64_t v169 = v45;
  *(_OWORD *)&v169[9] = *(long long *)((char *)v44 + 25);
  sub_22EBB0FA8((uint64_t)&v168, (uint64_t)v170, &qword_26861D578);
  sub_22EB37064((uint64_t)v170, (void (*)(void, void, void, void, void, void))sub_22EB336F8);
  sub_22EB17230();
  sub_22EB37064((uint64_t)&v168, (void (*)(void, void, void, void, void, void))sub_22EB19A34);
  sub_22EE1D2F4(a1, (uint64_t)v22);
  uint64_t v46 = v165;
  uint64_t v47 = v164(v22);
  swift_release();
  uint64_t v167 = v166;
  sub_22EB051FC((uint64_t)&v167);
  sub_22EE21F04((uint64_t)v22, (void (*)(void))type metadata accessor for ProductViewStyleConfiguration);
  *(void *)&long long v159 = v47;
  *(void *)uint64_t v3 = swift_getKeyPath();
  *(unsigned char *)(v3 + 8) = 0;
  uint64_t KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_46_6(KeyPath);
  *uint64_t v46 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(qword_26861BEF8);
  swift_storeEnumTagMultiPayload();
  unsigned int v49 = (uint64_t *)(v3 + *(int *)(v17 + 28));
  *unsigned int v49 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDE0);
  swift_storeEnumTagMultiPayload();
  int v50 = (uint64_t *)(v3 + *(int *)(v17 + 32));
  *int v50 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861C920);
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_13_33();
  uint64_t v51 = sub_22EE22538((unint64_t *)&qword_26861C958, (void (*)(uint64_t))type metadata accessor for InAppStoreButtonStyle);
  uint64_t v52 = MEMORY[0x263F1B720];
  sub_22EE7E430();
  sub_22EE21F04(v3, (void (*)(void))type metadata accessor for InAppStoreButtonStyle);
  swift_release();
  *(void *)uint64_t v3 = swift_getKeyPath();
  *(unsigned char *)(v3 + 8) = 0;
  uint64_t v53 = swift_getKeyPath();
  OUTLINED_FUNCTION_46_6(v53);
  *(void *)&long long v159 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  unint64_t v54 = (uint64_t *)(v3 + *(int *)(v17 + 28));
  *unint64_t v54 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  uint64_t v55 = (uint64_t *)(v3 + *(int *)(v17 + 32));
  *uint64_t v55 = swift_getKeyPath();
  uint64_t v56 = v130;
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_13_33();
  *(void *)&long long v159 = v52;
  *((void *)&v159 + 1) = v17;
  uint64_t v160 = MEMORY[0x263F1B718];
  uint64_t v161 = v51;
  swift_getOpaqueTypeConformance2();
  sub_22EE7E4E0();
  sub_22EE21F04(v3, (void (*)(void))type metadata accessor for InAppStoreButtonStyle);
  OUTLINED_FUNCTION_5_2();
  v57();
  uint64_t v58 = v129;
  uint64_t v59 = v153;
  long long v159 = *(_OWORD *)(v153 + *(int *)(v129 + 84));
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861F2C0);
  sub_22EE7E9E0();
  uint64_t v60 = v162;
  if (v162) {
    swift_release();
  }
  BOOL v61 = v60 != 0;
  uint64_t v62 = swift_getKeyPath();
  uint64_t v63 = swift_allocObject();
  *(unsigned char *)(v63 + 16) = v61;
  unsigned int v64 = v148;
  uint64_t v65 = v150;
  uint64_t v66 = v149;
  OUTLINED_FUNCTION_10_4();
  v67();
  OUTLINED_FUNCTION_4_3();
  uint64_t v69 = (uint64_t *)(v65 + v68);
  *uint64_t v69 = v62;
  v69[1] = (uint64_t)sub_22EAEF9B0;
  v69[2] = v63;
  v64[1](v56, v66);
  uint64_t v70 = *(int *)(v133 + 36);
  if (qword_26861B830 != -1) {
    swift_once();
  }
  uint64_t v71 = v151;
  int v72 = (uint64_t *)(v151 + v70);
  type metadata accessor for CanMakePaymentsCache(0);
  sub_22EE22538(&qword_26861C348, (void (*)(uint64_t))type metadata accessor for CanMakePaymentsCache);
  swift_retain();
  *int v72 = sub_22EE7CCB0();
  v72[1] = v73;
  uint64_t v74 = (uint64_t *)((char *)v72
                  + *(int *)(type metadata accessor for DisabledWhenInAppPurchaseIsDisabledModifier(0) + 20));
  *uint64_t v74 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861C350);
  swift_storeEnumTagMultiPayload();
  sub_22EBB0FA8(v65, v71, &qword_2686279D8);
  uint64_t v75 = v58;
  uint64_t v76 = (char *)(v59 + *(int *)(v58 + 92));
  char v77 = *v76;
  uint64_t v78 = *((void *)v76 + 1);
  LOBYTE(v162) = v77;
  uint64_t v163 = v78;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861D440);
  sub_22EE7EA00();
  long long v79 = v159;
  char v80 = v160;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861F2C8);
  sub_22EE7E9E0();
  uint64_t v81 = v137;
  sub_22EBB0080(v79, *((uint64_t *)&v79 + 1), v80, (uint64_t)&v159, v137);
  swift_release();
  swift_release();
  sub_22EB0584C((uint64_t)&v159, &qword_26861EC80);
  sub_22EB0584C(v71, &qword_26861F300);
  uint64_t v133 = _s17_StoreKit_SwiftUI012SubscriptionA25ControlStyleConfigurationV12PickerOptionV2idSSvg_0();
  uint64_t v128 = v82;
  uint64_t v83 = v158;
  unint64_t v84 = *(void (**)(uint64_t, uint64_t, uint64_t))(v158 + 16);
  uint64_t v131 = v158 + 16;
  uint64_t v132 = v84;
  uint64_t v85 = v154;
  v84(v154, v59, v75);
  uint64_t v86 = *(unsigned __int8 *)(v83 + 80);
  uint64_t v130 = ((v86 + 32) & ~v86) + v152;
  uint64_t v87 = (v86 + 32) & ~v86;
  uint64_t v151 = v87;
  uint64_t v152 = v86 | 7;
  uint64_t v88 = swift_allocObject();
  uint64_t v149 = *(void *)(v75 + 16);
  uint64_t v150 = *(void *)(v75 + 24);
  uint64_t v89 = v150;
  *(void *)(v88 + 16) = v149;
  *(void *)(v88 + 24) = v89;
  uint64_t v148 = *(void (***)(void, uint64_t))(v83 + 32);
  uint64_t v158 = v83 + 32;
  ((void (*)(uint64_t, uint64_t, uint64_t))v148)(v88 + v87, v85, v75);
  uint64_t v90 = v155;
  sub_22EE7FD70();
  OUTLINED_FUNCTION_4_3();
  uint64_t v91 = v138;
  uint64_t v93 = v138 + v92;
  uint64_t v94 = v157;
  uint64_t v134 = *(void *)(v157 + 16);
  uint64_t v135 = v157 + 16;
  uint64_t v95 = v156;
  OUTLINED_FUNCTION_10_4();
  v96();
  uint64_t v97 = type metadata accessor for CurrentEntitlementViewModifier();
  uint64_t v98 = (uint64_t *)(v93 + *(int *)(v97 + 20));
  uint64_t v99 = v128;
  *uint64_t v98 = v133;
  v98[1] = v99;
  uint64_t v100 = (void *)(v93 + *(int *)(v97 + 24));
  *uint64_t v100 = &unk_268627A18;
  v100[1] = v88;
  sub_22EADAD08(v81, v91, &qword_26861F2F8);
  uint64_t v101 = *(void (**)(uint64_t, uint64_t))(v94 + 8);
  uint64_t v157 = v94 + 8;
  uint64_t v133 = (uint64_t)v101;
  v101(v90, v95);
  sub_22EB0584C(v81, &qword_26861F2F8);
  uint64_t v102 = swift_getKeyPath();
  sub_22EE7F2E0();
  OUTLINED_FUNCTION_4_3();
  uint64_t v103 = v140;
  uint64_t v105 = (uint64_t *)(v140 + v104);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861DF88);
  OUTLINED_FUNCTION_10_4();
  v106();
  *uint64_t v105 = v102;
  sub_22EADAD08(v91, v103, &qword_2686279E0);
  OUTLINED_FUNCTION_21_24();
  v107();
  sub_22EB0584C(v91, &qword_2686279E0);
  uint64_t v108 = v154;
  int v109 = v132;
  v132(v154, v59, v75);
  uint64_t v110 = swift_allocObject();
  uint64_t v111 = OUTLINED_FUNCTION_7_31(v110);
  v112(v111);
  uint64_t v113 = v143;
  sub_22EADAD08(v103, v143, &qword_2686279E8);
  OUTLINED_FUNCTION_4_3();
  uint64_t v115 = (uint64_t (**)())(v113 + v114);
  *uint64_t v115 = sub_22EE21648;
  v115[1] = (uint64_t (*)())v110;
  v115[2] = 0;
  v115[3] = 0;
  sub_22EB0584C(v103, &qword_2686279E8);
  uint64_t v116 = v153;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268627A08);
  uint64_t v117 = v146;
  sub_22EE7E9E0();
  v109(v108, v116, v75);
  uint64_t v118 = swift_allocObject();
  uint64_t v119 = OUTLINED_FUNCTION_7_31(v118);
  v120(v119);
  sub_22EE7FD50();
  OUTLINED_FUNCTION_4_3();
  uint64_t v121 = v142;
  uint64_t v123 = (void *)(v142 + v122);
  uint64_t v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627A30);
  sub_22EADAD08(v117, (uint64_t)v123 + *(int *)(v124 + 40), &qword_26861CAF8);
  OUTLINED_FUNCTION_10_4();
  v125();
  *uint64_t v123 = &unk_268627A28;
  v123[1] = v118;
  sub_22EADAD08(v113, v121, &qword_2686279F0);
  OUTLINED_FUNCTION_5_2();
  v126();
  sub_22EB0584C(v117, &qword_26861CAF8);
  sub_22EB0584C(v113, &qword_2686279F0);
  return sub_22EBB0FA8(v121, v147, &qword_2686279F8);
}

uint64_t sub_22EE1E890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[6] = a3;
  v4[7] = a4;
  v4[4] = a1;
  v4[5] = a2;
  uint64_t v5 = sub_22EE7F170();
  v4[8] = v5;
  v4[9] = *(void *)(v5 - 8);
  v4[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861CAF8);
  v4[11] = swift_task_alloc();
  v4[12] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861E850);
  v4[13] = swift_task_alloc();
  v4[14] = swift_task_alloc();
  sub_22EE7FD30();
  v4[15] = sub_22EE7FD20();
  uint64_t v7 = sub_22EE7FD00();
  return MEMORY[0x270FA2498](sub_22EE1EA08, v7, v6);
}

void sub_22EE1EA08()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 40);
  swift_release();
  EntitlementTaskState<A>.transaction.getter(v1);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E038);
  BOOL v5 = __swift_getEnumTagSinglePayload(v1, 1, v4) != 1;
  sub_22EB0584C(v1, &qword_26861E850);
  uint64_t v6 = (char *)(v3 + *(int *)(type metadata accessor for StaticProductView() + 96));
  char v7 = *v6;
  uint64_t v8 = *((void *)v6 + 1);
  *(unsigned char *)(v0 + 128) = v5;
  *(unsigned char *)(v0 + 16) = v7;
  *(void *)(v0 + 24) = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861D440);
  sub_22EE7E9F0();
  EntitlementTaskState<A>.transaction.getter(v2);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v2, 1, v4);
  uint64_t v10 = *(void *)(v0 + 104);
  uint64_t v11 = *(void *)(v0 + 96);
  if (EnumTagSinglePayload == 1)
  {
    sub_22EB0584C(*(void *)(v0 + 104), &qword_26861E850);
    uint64_t v12 = sub_22EE7C3C0();
    __swift_storeEnumTagSinglePayload(v11, 1, 1, v12);
  }
  else
  {
    uint64_t v14 = *(void *)(v0 + 72);
    uint64_t v13 = *(void *)(v0 + 80);
    uint64_t v15 = *(void *)(v0 + 64);
    sub_22EE7F1B0();
    sub_22EB0584C(v10, &qword_26861E038);
    sub_22EE7F0E0();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  uint64_t v16 = *(void *)(v0 + 96);
  sub_22EADAD08(v16, *(void *)(v0 + 88), &qword_26861CAF8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268627A08);
  sub_22EE7E9F0();
  sub_22EB0584C(v16, &qword_26861CAF8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_18_5();
  OUTLINED_FUNCTION_31_4();
  __asm { BRAA            X1, X16 }
}

uint64_t sub_22EE1EC34(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + *(int *)(type metadata accessor for StaticProductView() + 52));
  j__swift_retain(v1);
  sub_22EB1740C();
  uint64_t v3 = v2;
  uint64_t result = j_j__swift_release(v1);
  if (v3)
  {
    sub_22ED8155C();
    return swift_release();
  }
  return result;
}

uint64_t sub_22EE1ECC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[10] = a2;
  v3[11] = a3;
  v3[9] = a1;
  uint64_t v4 = sub_22EE80320();
  v3[12] = v4;
  v3[13] = *(void *)(v4 - 8);
  v3[14] = swift_task_alloc();
  uint64_t v5 = sub_22EE80300();
  v3[15] = v5;
  v3[16] = *(void *)(v5 - 8);
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861CAF8);
  v3[19] = swift_task_alloc();
  uint64_t v6 = sub_22EE7C3C0();
  v3[20] = v6;
  v3[21] = *(void *)(v6 - 8);
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  sub_22EE7FD30();
  unsigned char v3[24] = sub_22EE7FD20();
  uint64_t v8 = sub_22EE7FD00();
  v3[25] = v8;
  v3[26] = v7;
  return MEMORY[0x270FA2498](sub_22EE1EEC8, v8, v7);
}

uint64_t sub_22EE1EEC8()
{
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v3 = type metadata accessor for StaticProductView();
  *(void *)(v0 + 216) = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268627A08);
  sub_22EE7E9E0();
  if (__swift_getEnumTagSinglePayload(v2, 1, v1) == 1)
  {
    uint64_t v4 = *(void *)(v0 + 152);
    swift_release();
    sub_22EB0584C(v4, &qword_26861CAF8);
LABEL_8:
    OUTLINED_FUNCTION_16_29();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_18_5();
    return v27();
  }
  uint64_t v5 = *(void *)(v0 + 168);
  (*(void (**)(void, void, void))(v5 + 32))(*(void *)(v0 + 184), *(void *)(v0 + 152), *(void *)(v0 + 160));
  sub_22EE7C3A0();
  sub_22EE7C390();
  double v7 = v6;
  uint64_t v8 = *(void (**)(uint64_t))(v5 + 8);
  *(void *)(v0 + 224) = v8;
  *(void *)(v0 + 232) = (v5 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v9 = OUTLINED_FUNCTION_45_1();
  v8(v9);
  uint64_t v10 = *(void *)(v0 + 160);
  if (v7 <= 0.0)
  {
    uint64_t v22 = *(void *)(v0 + 184);
    uint64_t v23 = *(void *)(v0 + 72);
    swift_release();
    uint64_t v24 = (char *)(v23 + *(int *)(v3 + 96));
    char v25 = *v24;
    uint64_t v26 = *((void *)v24 + 1);
    *(unsigned char *)(v0 + 40) = v25;
    *(void *)(v0 + 48) = v26;
    *(unsigned char *)(v0 + 33) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26861D440);
    sub_22EE7E9F0();
    ((void (*)(uint64_t, uint64_t))v8)(v22, v10);
    goto LABEL_8;
  }
  uint64_t v11 = *(void *)(v0 + 176);
  uint64_t v12 = *(void *)(v0 + 136);
  uint64_t v13 = *(void *)(v0 + 120);
  uint64_t v14 = *(void *)(v0 + 128);
  sub_22EE802E0();
  sub_22EE7C3A0();
  sub_22EE7C390();
  ((void (*)(uint64_t, uint64_t))v8)(v11, v10);
  uint64_t v15 = sub_22EE80840();
  MEMORY[0x230FAD630](v15);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  *(void *)(v0 + 240) = v16;
  *(void *)(v0 + 248) = (v14 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v16(v12, v13);
  *(void *)(v0 + 24) = 0;
  *(void *)(v0 + 16) = 0;
  *(unsigned char *)(v0 + 32) = 1;
  sub_22EE80310();
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v0 + 256) = v17;
  uint64_t v18 = sub_22EE22538(&qword_26861E020, MEMORY[0x263F8F710]);
  *uint64_t v17 = v0;
  v17[1] = sub_22EE1F204;
  uint64_t v19 = *(void *)(v0 + 144);
  uint64_t v20 = *(void *)(v0 + 112);
  uint64_t v21 = *(void *)(v0 + 96);
  return MEMORY[0x270FA1FF8](v19, v0 + 16, v20, v21, v18);
}

uint64_t sub_22EE1F204()
{
  OUTLINED_FUNCTION_1_5();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_12_8();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_12_8();
  *double v6 = v5;
  swift_task_dealloc();
  if (v0)
  {
    double v7 = (void (*)(uint64_t))v3[30];
    uint64_t v8 = v3[14];
    uint64_t v9 = v3[12];
    uint64_t v10 = v3[13];

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    uint64_t v11 = OUTLINED_FUNCTION_45_1();
    v7(v11);
  }
  else
  {
    uint64_t v14 = (void (*)(uint64_t, uint64_t))v3[30];
    uint64_t v15 = v3[18];
    uint64_t v16 = v3[15];
    (*(void (**)(void, void))(v3[13] + 8))(v3[14], v3[12]);
    v14(v15, v16);
  }
  uint64_t v12 = v3[25];
  uint64_t v13 = v3[26];
  return MEMORY[0x270FA2498](sub_22EE1F36C, v12, v13);
}

uint64_t sub_22EE1F36C()
{
  swift_release();
  OUTLINED_FUNCTION_24_17();
  sub_22EE7C390();
  uint64_t v3 = OUTLINED_FUNCTION_45_1();
  v2(v3);
  OUTLINED_FUNCTION_10_32();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861D440);
  sub_22EE7E9F0();
  ((void (*)(uint64_t, uint64_t))v2)(v0, v1);
  OUTLINED_FUNCTION_16_29();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_18_5();
  return v4();
}

uint64_t sub_22EE1F458()
{
  v1[6] = v0;
  uint64_t v2 = sub_22EE7F400();
  v1[7] = v2;
  v1[8] = *(void *)(v2 - 8);
  v1[9] = swift_task_alloc();
  v1[10] = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E030);
  v1[11] = swift_task_alloc();
  uint64_t v3 = sub_22EE7F0C0();
  v1[12] = v3;
  v1[13] = *(void *)(v3 - 8);
  v1[14] = swift_task_alloc();
  v1[15] = swift_task_alloc();
  uint64_t v4 = sub_22EE7F170();
  v1[16] = v4;
  v1[17] = *(void *)(v4 - 8);
  v1[18] = swift_task_alloc();
  v1[19] = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E038);
  v1[20] = swift_task_alloc();
  uint64_t v5 = sub_22EE7F520();
  v1[21] = v5;
  v1[22] = *(void *)(v5 - 8);
  v1[23] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861E048);
  v1[24] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861BBA8);
  v1[25] = swift_task_alloc();
  sub_22EE7FD30();
  v1[26] = sub_22EE7FD20();
  uint64_t v7 = sub_22EE7FD00();
  v1[27] = v7;
  v1[28] = v6;
  return MEMORY[0x270FA2498](sub_22EE1F738, v7, v6);
}

uint64_t sub_22EE1F738()
{
  uint64_t v1 = *(void *)(v0 + 200);
  sub_22EE7F300();
  uint64_t v2 = sub_22EE7F540();
  *(void *)(v0 + 232) = v2;
  if (__swift_getEnumTagSinglePayload(v1, 1, v2) == 1)
  {
    uint64_t v3 = *(void *)(v0 + 200);
    swift_release();
    sub_22EB0584C(v3, &qword_26861BBA8);
    OUTLINED_FUNCTION_17_26();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_31_4();
    __asm { BRAA            X2, X16 }
  }
  OUTLINED_FUNCTION_16_10();
  OUTLINED_FUNCTION_31_4();
  return MEMORY[0x270FA2498](v6, v7, v8);
}

uint64_t sub_22EE1F870()
{
  OUTLINED_FUNCTION_9_12();
  sub_22EE7F490();
  *(void *)(v0 + 240) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 248) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_22EE1F910;
  uint64_t v3 = OUTLINED_FUNCTION_30_14();
  return MEMORY[0x270EFE608](v3, v4);
}

uint64_t sub_22EE1F910()
{
  OUTLINED_FUNCTION_9_12();
  OUTLINED_FUNCTION_1_5();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_12_8();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  v3[32] = v5;
  v3[33] = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_16_10();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = v3[27];
    uint64_t v8 = v3[28];
    uint64_t v6 = sub_22EE1FA04;
  }
  return MEMORY[0x270FA2498](v6, v7, v8);
}

void sub_22EE1FA04()
{
  uint64_t v1 = v0[32];
  swift_release();
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_5_2();
  v2();
  uint64_t v3 = *(void *)(v1 + 16);
  if (v3)
  {
    uint64_t v4 = v0[22];
    unint64_t v5 = v0[32] + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v35 = (void (**)(void))(v0[13] + 8);
    uint64_t v34 = *(void *)(v4 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v36 = v3;
      uint64_t v6 = v0[20];
      OUTLINED_FUNCTION_10_4();
      v7();
      sub_22EE7F4D0();
      sub_22EE7F1B0();
      sub_22EB0584C(v6, &qword_26861E038);
      sub_22EE7F0D0();
      OUTLINED_FUNCTION_5_2();
      v8();
      sub_22EE7F0B0();
      sub_22EE22538(&qword_26861E050, MEMORY[0x263F17D80]);
      sub_22EE7FC10();
      sub_22EE7FC10();
      uint64_t v10 = v0[14];
      uint64_t v9 = v0[15];
      uint64_t v11 = v0[12];
      if (v0[2] == v0[4] && v0[3] == v0[5]) {
        break;
      }
      char v13 = sub_22EE80660();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = *v35;
      OUTLINED_FUNCTION_21_24();
      v14();
      OUTLINED_FUNCTION_21_24();
      v14();
      if (v13) {
        goto LABEL_12;
      }
      OUTLINED_FUNCTION_5_2();
      v15();
      v5 += v34;
      uint64_t v3 = v36 - 1;
      if (v36 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease_n();
    uint64_t v17 = *v35;
    ((void (*)(uint64_t, uint64_t))*v35)(v10, v11);
    ((void (*)(uint64_t, uint64_t))v17)(v9, v11);
LABEL_12:
    uint64_t v18 = v0[23];
    uint64_t v19 = v0[24];
    uint64_t v20 = v0[21];
    uint64_t v21 = v0[22];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32))(v19, v18, v20);
    uint64_t v16 = 0;
  }
  else
  {
LABEL_10:
    uint64_t v16 = 1;
  }
  uint64_t v22 = v0[24];
  uint64_t v23 = v0[21];
  __swift_storeEnumTagSinglePayload(v22, v16, 1, v23);
  swift_bridgeObjectRelease();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v22, 1, v23);
  uint64_t v25 = v0[24];
  if (EnumTagSinglePayload == 1)
  {
    sub_22EB0584C(v0[24], &qword_26861E048);
  }
  else
  {
    uint64_t v26 = v0[21];
    uint64_t v27 = v0[22];
    uint64_t v28 = v0[11];
    uint64_t v30 = v0[8];
    uint64_t v29 = v0[9];
    uint64_t v31 = v0[7];
    sub_22EE7F4C0();
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
    sub_22EE7F1B0();
    sub_22EB0584C(v28, &qword_26861E030);
    sub_22EE7F3F0();
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_80_0();
  __asm { BRAA            X2, X16 }
}

uint64_t sub_22EE1FE30()
{
  OUTLINED_FUNCTION_9_12();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 216);
  uint64_t v2 = *(void *)(v0 + 224);
  return MEMORY[0x270FA2498](sub_22EE1FE90, v1, v2);
}

void sub_22EE1FE90()
{
  uint64_t v1 = *(void **)(v0 + 264);
  swift_release();
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_5_2();
  v2();

  OUTLINED_FUNCTION_17_26();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_31_4();
  __asm { BRAA            X2, X16 }
}

uint64_t sub_22EE1FF84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[31] = a5;
  v6[32] = a6;
  v6[30] = a4;
  uint64_t v7 = sub_22EE7F010();
  v6[33] = v7;
  v6[34] = *(void *)(v7 - 8);
  v6[35] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861BB58);
  v6[36] = swift_task_alloc();
  type metadata accessor for PurchaseAction();
  v6[37] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861F2E8);
  v6[38] = swift_task_alloc();
  uint64_t v8 = sub_22EE7F780();
  v6[39] = v8;
  v6[40] = *(void *)(v8 - 8);
  v6[41] = swift_task_alloc();
  v6[42] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268625BE0);
  v6[43] = swift_task_alloc();
  v6[44] = swift_task_alloc();
  v6[45] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861BBA8);
  v6[46] = swift_task_alloc();
  v6[47] = swift_task_alloc();
  uint64_t v9 = sub_22EE7F540();
  v6[48] = v9;
  v6[49] = *(void *)(v9 - 8);
  v6[50] = swift_task_alloc();
  sub_22EE7FD30();
  v6[51] = sub_22EE7FD20();
  uint64_t v11 = sub_22EE7FD00();
  v6[52] = v11;
  v6[53] = v10;
  return MEMORY[0x270FA2498](sub_22EE2025C, v11, v10);
}

uint64_t sub_22EE2025C()
{
  uint64_t v2 = *(void *)(v0 + 376);
  uint64_t v1 = *(void *)(v0 + 384);
  sub_22EE7F300();
  if (__swift_getEnumTagSinglePayload(v2, 1, v1) == 1)
  {
    sub_22EB0584C(*(void *)(v0 + 376), &qword_26861BBA8);
LABEL_8:
    uint64_t v11 = *(void *)(v0 + 368);
    uint64_t v12 = *(void *)(v0 + 320);
    uint64_t v13 = *(_DWORD **)(v0 + 304);
    uint64_t v31 = *(void *)(v0 + 312);
    uint64_t v32 = *(void *)(v0 + 328);
    uint64_t v33 = *(void *)(v0 + 288);
    uint64_t v34 = *(void *)(v0 + 272);
    uint64_t v14 = *(void *)(v0 + 256);
    uint64_t v35 = *(void *)(v0 + 264);
    uint64_t v36 = *(void *)(v0 + 280);
    uint64_t v16 = *(void *)(v0 + 240);
    uint64_t v15 = *(void *)(v0 + 248);
    sub_22EE30258(v13);
    uint64_t v17 = type metadata accessor for PurchaseConfigurationEvent(0);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v17);
    uint64_t v18 = type metadata accessor for StaticProductView();
    *(void *)(v0 + 480) = v18;
    memcpy((void *)(v0 + 16), (const void *)(v16 + *(int *)(v18 + 72)), 0x41uLL);
    sub_22EC21028((void *)(v0 + 88));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v32, v16, v31);
    sub_22EB181D4();
    sub_22EE7F300();
    uint64_t v19 = (void *)swift_task_alloc();
    void v19[2] = v15;
    v19[3] = v14;
    v19[4] = v16;
    sub_22EE1C854((void (*)(char *))sub_22EE21E24, v33);
    sub_22EB0584C(v11, &qword_26861BBA8);
    swift_task_dealloc();
    uint64_t v20 = v16 + *(int *)(v18 + 60);
    uint64_t v21 = *(void *)v20;
    uint64_t v22 = *(unsigned __int8 *)(v20 + 8);
    sub_22EADDF00(*(void *)v20, *(unsigned char *)(v20 + 8));
    sub_22EB155AC();
    LOBYTE(v18) = v23;
    __n128 v24 = sub_22EB19E28(v21, v22);
    uint64_t v25 = (unsigned int *)MEMORY[0x263F17D20];
    if ((v18 & 1) == 0) {
      uint64_t v25 = (unsigned int *)MEMORY[0x263F17D28];
    }
    (*(void (**)(uint64_t, void, uint64_t, __n128))(v34 + 104))(v36, *v25, v35, v24);
    uint64_t v26 = (void *)swift_task_alloc();
    *(void *)(v0 + 488) = v26;
    void v26[2] = v15;
    v26[3] = v14;
    v26[4] = v16;
    OUTLINED_FUNCTION_31_14();
    OUTLINED_FUNCTION_16_10();
    OUTLINED_FUNCTION_80_0();
    return MEMORY[0x270FA2498](v27, v28, v29);
  }
  uint64_t v3 = *(void *)(v0 + 360);
  (*(void (**)(void, void, void))(*(void *)(v0 + 392) + 32))(*(void *)(v0 + 400), *(void *)(v0 + 376), *(void *)(v0 + 384));
  uint64_t v4 = type metadata accessor for StaticProductView();
  *(void *)(v0 + 432) = v4;
  *(_DWORD *)(v0 + 84) = *(_DWORD *)(v4 + 100);
  *(void *)(v0 + 440) = __swift_instantiateConcreteTypeFromMangledName(&qword_268627A10);
  sub_22EE7E9E0();
  uint64_t v5 = type metadata accessor for SubscriptionOfferManager();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v3, 1, v5);
  sub_22EB0584C(v3, &qword_268625BE0);
  if (EnumTagSinglePayload != 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 392) + 8))(*(void *)(v0 + 400), *(void *)(v0 + 384));
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_10_4();
  v7();
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 448) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_22EE205E8;
  OUTLINED_FUNCTION_80_0();
  return sub_22EE1F458();
}

uint64_t sub_22EE205E8()
{
  OUTLINED_FUNCTION_9_12();
  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_12_8();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 456) = v3;
  swift_task_dealloc();
  OUTLINED_FUNCTION_16_10();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_22EE206B8()
{
  OUTLINED_FUNCTION_9_12();
  sub_22EE7F490();
  *(void *)(v0 + 464) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 472) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_22EE20758;
  uint64_t v3 = OUTLINED_FUNCTION_30_14();
  return MEMORY[0x270EFE5C0](v3);
}

uint64_t sub_22EE20758()
{
  OUTLINED_FUNCTION_28_2();
  OUTLINED_FUNCTION_4_9();
  OUTLINED_FUNCTION_12_8();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_12_8();
  *uint64_t v5 = v4;
  *(unsigned char *)(v7 + 81) = v6;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_30_3();
  uint64_t v9 = *(void *)(v8 + 424);
  uint64_t v10 = *(void *)(v0 + 416);
  return MEMORY[0x270FA2498](sub_22EE20870, v10, v9);
}

uint64_t sub_22EE20870()
{
  char v43 = *(unsigned char *)(v0 + 81);
  uint64_t v1 = *(void *)(v0 + 432);
  uint64_t v2 = *(void *)(v0 + 392);
  uint64_t v48 = *(void *)(v0 + 400);
  uint64_t v46 = *(void *)(v0 + 384);
  uint64_t v3 = *(void *)(v0 + 352);
  uint64_t v41 = *(void *)(v0 + 456);
  uint64_t v42 = *(void *)(v0 + 344);
  uint64_t v40 = *(void *)(v0 + 336);
  uint64_t v4 = *(void *)(v0 + 240);
  uint64_t v5 = OUTLINED_FUNCTION_35_15();
  sub_22EBAD648(v5, v6, v7);
  OUTLINED_FUNCTION_35_15();
  sub_22EB18194();
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v12 = OUTLINED_FUNCTION_35_15();
  sub_22EBAD8D0(v12, v13, v14);
  uint64_t v15 = *(void *)(v4 + *(int *)(v1 + 48));
  j__swift_retain(v15);
  sub_22EB18950();
  uint64_t v17 = v16;
  j_j__swift_release(v15);
  sub_22ECDC8A4(v40, v41, v43, v9, v11, v17, v3);
  sub_22EADAD08(v3, v42, &qword_268625BE0);
  sub_22EE7E9F0();
  sub_22EB0584C(v3, &qword_268625BE0);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v48, v46);
  uint64_t v18 = *(void *)(v0 + 368);
  uint64_t v19 = *(void *)(v0 + 320);
  uint64_t v20 = *(_DWORD **)(v0 + 304);
  uint64_t v21 = *(void *)(v0 + 312);
  uint64_t v44 = *(void *)(v0 + 328);
  uint64_t v22 = *(void *)(v0 + 272);
  uint64_t v49 = *(void *)(v0 + 280);
  uint64_t v23 = *(void *)(v0 + 256);
  uint64_t v45 = *(void *)(v0 + 288);
  uint64_t v47 = *(void *)(v0 + 264);
  uint64_t v24 = *(void *)(v0 + 240);
  uint64_t v25 = *(void *)(v0 + 248);
  sub_22EE30258(v20);
  uint64_t v26 = type metadata accessor for PurchaseConfigurationEvent(0);
  __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v26);
  uint64_t v27 = type metadata accessor for StaticProductView();
  *(void *)(v0 + 480) = v27;
  memcpy((void *)(v0 + 16), (const void *)(v24 + *(int *)(v27 + 72)), 0x41uLL);
  sub_22EC21028((void *)(v0 + 88));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v44, v24, v21);
  sub_22EB181D4();
  sub_22EE7F300();
  uint64_t v28 = (void *)swift_task_alloc();
  void v28[2] = v25;
  void v28[3] = v23;
  v28[4] = v24;
  sub_22EE1C854((void (*)(char *))sub_22EE21E24, v45);
  sub_22EB0584C(v18, &qword_26861BBA8);
  swift_task_dealloc();
  uint64_t v29 = v24 + *(int *)(v27 + 60);
  uint64_t v30 = *(void *)v29;
  uint64_t v31 = *(unsigned __int8 *)(v29 + 8);
  sub_22EADDF00(*(void *)v29, *(unsigned char *)(v29 + 8));
  sub_22EB155AC();
  LOBYTE(v19) = v32;
  __n128 v33 = sub_22EB19E28(v30, v31);
  uint64_t v34 = (unsigned int *)MEMORY[0x263F17D20];
  if ((v19 & 1) == 0) {
    uint64_t v34 = (unsigned int *)MEMORY[0x263F17D28];
  }
  (*(void (**)(uint64_t, void, uint64_t, __n128))(v22 + 104))(v49, *v34, v47, v33);
  uint64_t v35 = (void *)swift_task_alloc();
  *(void *)(v0 + 488) = v35;
  void v35[2] = v25;
  v35[3] = v23;
  v35[4] = v24;
  OUTLINED_FUNCTION_31_14();
  OUTLINED_FUNCTION_16_10();
  return MEMORY[0x270FA2498](v36, v37, v38);
}

uint64_t sub_22EE20BA4()
{
  OUTLINED_FUNCTION_28_2();
  *(void *)(v0 + 496) = sub_22EC21AFC();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 504) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_22EE20C7C;
  return sub_22EC21C98();
}

uint64_t sub_22EE20C7C()
{
  OUTLINED_FUNCTION_4_9();
  uint64_t v19 = v0[41];
  OUTLINED_FUNCTION_30_3();
  uint64_t v3 = *(void *)(v2 + 320);
  uint64_t v18 = v0[39];
  OUTLINED_FUNCTION_30_3();
  uint64_t v17 = *(void *)(v4 + 296);
  OUTLINED_FUNCTION_30_3();
  uint64_t v6 = *(void *)(v5 + 288);
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_12_8();
  *uint64_t v8 = v7;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  OUTLINED_FUNCTION_30_3();
  sub_22EADACF8(*(void *)(v9 + 88));
  OUTLINED_FUNCTION_30_3();
  sub_22EADACF8(*(void *)(v10 + 104));
  OUTLINED_FUNCTION_30_3();
  sub_22EADACF8(*(void *)(v11 + 120));
  OUTLINED_FUNCTION_30_3();
  sub_22EADACF8(*(void *)(v12 + 136));
  OUTLINED_FUNCTION_21_24();
  v13();
  sub_22EB0584C(v6, &qword_26861BB58);
  sub_22EE21F04(v17, (void (*)(void))type metadata accessor for PurchaseAction);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v19, v18);
  uint64_t v14 = v0[53];
  uint64_t v15 = v0[52];
  return MEMORY[0x270FA2498](sub_22EE20F60, v15, v14);
}

uint64_t sub_22EE20F60()
{
  uint64_t v1 = *(void *)(v0 + 480);
  uint64_t v2 = *(void *)(v0 + 240);
  swift_release();
  OUTLINED_FUNCTION_39_12((uint64_t *)(v2 + *(int *)(v1 + 52)));
  sub_22EB1740C();
  uint64_t v4 = v3;
  j_j__swift_release(v2);
  if (v4)
  {
    sub_22ED78200();
    swift_release();
  }
  OUTLINED_FUNCTION_39_12((uint64_t *)(*(void *)(v0 + 240) + *(int *)(*(void *)(v0 + 480) + 56)));
  sub_22EB18F44();
  uint64_t v6 = v5;
  j_j__swift_release(v2);
  if (v6)
  {
    sub_22ED78520();
    swift_release();
  }
  uint64_t v7 = *(void *)(v0 + 480);
  uint64_t v8 = *(void *)(v0 + 304);
  uint64_t v9 = *(void *)(v0 + 240);
  sub_22EE213B8(0, 0, v7);
  *(_OWORD *)(v0 + 208) = *(_OWORD *)(v9 + *(int *)(v7 + 84));
  *(void *)(v0 + 232) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861F2C0);
  sub_22EE7E9F0();
  sub_22EB0584C(v8, &qword_26861F2E8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_18_5();
  return v10();
}

uint64_t sub_22EE21138@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SubscriptionOfferManager();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268625BE0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for StaticProductView();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268627A10);
  sub_22EE7E9E0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v2))
  {
    sub_22EB0584C((uint64_t)v7, &qword_268625BE0);
    uint64_t v8 = sub_22EE7F670();
    return __swift_storeEnumTagSinglePayload(a1, 1, 1, v8);
  }
  else
  {
    sub_22EE21EB0((uint64_t)v7, (uint64_t)v4, (void (*)(void))type metadata accessor for SubscriptionOfferManager);
    sub_22EB0584C((uint64_t)v7, &qword_268625BE0);
    sub_22ECDCB3C(a1);
    return sub_22EE21F04((uint64_t)v4, (void (*)(void))type metadata accessor for SubscriptionOfferManager);
  }
}

uint64_t sub_22EE212E4(uint64_t a1, uint64_t a2)
{
  sub_22EBB1000(a1, (uint64_t)v9);
  uint64_t v3 = type metadata accessor for StaticProductView();
  sub_22EADAD08((uint64_t)v9, (uint64_t)v8, &qword_26861EC80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861F2C8);
  sub_22EE7E9F0();
  sub_22EB0584C((uint64_t)v9, &qword_26861EC80);
  uint64_t v4 = (char *)(a2 + *(int *)(v3 + 92));
  char v5 = *v4;
  uint64_t v6 = *((void *)v4 + 1);
  v9[0] = v5;
  uint64_t v10 = v6;
  v8[0] = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861D440);
  return sub_22EE7E9F0();
}

uint64_t sub_22EE213B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(v3 + *(int *)(a3 + 52));
  j__swift_retain(v5);
  sub_22EB1740C();
  uint64_t v7 = v6;
  uint64_t result = j_j__swift_release(v5);
  if (v7)
  {
    if (*(unsigned char *)(v7 + OBJC_IVAR____TtC17_StoreKit_SwiftUI29ProductViewEventConfiguration_isEmbeddedInStoreView) == 1)
    {
      uint64_t v9 = *(void *)(v3 + *(int *)(a3 + 56));
      j__swift_retain(v9);
      sub_22EB18F44();
      uint64_t v11 = v10;
      j_j__swift_release(v9);
      if (v11)
      {
        j__swift_retain(v5);
        sub_22EB1740C();
        uint64_t v13 = v12;
        j_j__swift_release(v5);
        sub_22EE1CA34(v13);
        swift_release();
        swift_release();
      }
    }
    else
    {
      j__swift_retain(v5);
      sub_22EB1740C();
      uint64_t v15 = v14;
      j_j__swift_release(v5);
      if (v15)
      {
        sub_22EE1CFF8();
        swift_release();
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_22EE21554()
{
  return swift_deallocObject();
}

uint64_t sub_22EE21570()
{
  OUTLINED_FUNCTION_28_2();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = *(void *)(v0 + 24);
  uint64_t v6 = type metadata accessor for StaticProductView();
  OUTLINED_FUNCTION_4_1(v6);
  uint64_t v8 = v0 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v9;
  *uint64_t v9 = v1;
  v9[1] = sub_22EB67854;
  return sub_22EE1E890(v3, v8, v4, v5);
}

uint64_t sub_22EE21648()
{
  return sub_22EE219FC((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_22EE1EC34);
}

uint64_t sub_22EE21664()
{
  OUTLINED_FUNCTION_28_2();
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = type metadata accessor for StaticProductView();
  OUTLINED_FUNCTION_4_1(v3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_22EB67854;
  uint64_t v5 = OUTLINED_FUNCTION_30_14();
  return sub_22EE1ECC8(v5, v6, v2);
}

uint64_t objectdestroy_26Tm_0()
{
  uint64_t v3 = *(void *)(v0 + 16);
  type metadata accessor for StaticProductView();
  OUTLINED_FUNCTION_9_39();
  uint64_t v5 = v0 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  sub_22EE7F780();
  OUTLINED_FUNCTION_2_0();
  uint64_t v7 = *(void (**)(void))(v6 + 8);
  OUTLINED_FUNCTION_18_25();
  v7();
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_5_2();
  v8();
  OUTLINED_FUNCTION_20_24();
  OUTLINED_FUNCTION_1_35();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861CD60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_22EE7DE00();
    OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_5_2();
    v9();
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = v5 + v1[20];
  uint64_t v11 = sub_22EE7C3C0();
  if (!OUTLINED_FUNCTION_41_11(v11))
  {
    OUTLINED_FUNCTION_4_2();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v2);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_268627A08);
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(v5 + v1[22] + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v5 + v1[22]);
  }
  swift_release();
  OUTLINED_FUNCTION_38_13();
  OUTLINED_FUNCTION_38_13();
  uint64_t v13 = v5 + v1[25];
  uint64_t v14 = type metadata accessor for SubscriptionOfferManager();
  if (!OUTLINED_FUNCTION_40_4(v14))
  {
    OUTLINED_FUNCTION_18_25();
    v7();
    sub_22EE7F540();
    OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_5_2();
    v15();
    swift_bridgeObjectRelease();
    if (*(void *)(v13 + *(int *)(v5 + 32)))
    {
      swift_release();
      swift_release();
    }
    swift_release();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_268627A10);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_22EE219E4()
{
  return sub_22EE219FC((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_22EE1D6BC);
}

uint64_t sub_22EE219FC(uint64_t (*a1)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = type metadata accessor for StaticProductView();
  OUTLINED_FUNCTION_4_1(v4);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return a1(v6, v2, v3);
}

uint64_t sub_22EE21A74()
{
  uint64_t v3 = *(void *)(v0 + 32);
  type metadata accessor for StaticProductView();
  OUTLINED_FUNCTION_9_39();
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  swift_unknownObjectRelease();
  uint64_t v6 = v0 + v5;
  sub_22EE7F780();
  OUTLINED_FUNCTION_2_0();
  uint64_t v8 = *(void (**)(void))(v7 + 8);
  OUTLINED_FUNCTION_18_25();
  v8();
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_5_2();
  v9();
  OUTLINED_FUNCTION_20_24();
  OUTLINED_FUNCTION_1_35();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861CD60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_22EE7DE00();
    OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_5_2();
    v10();
  }
  else
  {
    swift_release();
  }
  uint64_t v11 = v6 + v1[20];
  uint64_t v12 = sub_22EE7C3C0();
  if (!OUTLINED_FUNCTION_41_11(v12))
  {
    OUTLINED_FUNCTION_4_2();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v2);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_268627A08);
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(v6 + v1[22] + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v6 + v1[22]);
  }
  swift_release();
  OUTLINED_FUNCTION_38_13();
  OUTLINED_FUNCTION_38_13();
  uint64_t v14 = v6 + v1[25];
  uint64_t v15 = type metadata accessor for SubscriptionOfferManager();
  if (!OUTLINED_FUNCTION_40_4(v15))
  {
    OUTLINED_FUNCTION_18_25();
    v8();
    sub_22EE7F540();
    OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_5_2();
    v16();
    swift_bridgeObjectRelease();
    if (*(void *)(v14 + *(int *)(v6 + 32)))
    {
      swift_release();
      swift_release();
    }
    swift_release();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_268627A10);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_22EE21D3C(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = type metadata accessor for StaticProductView();
  OUTLINED_FUNCTION_4_1(v6);
  uint64_t v8 = v1[2];
  uint64_t v9 = v1[3];
  uint64_t v10 = (uint64_t)v1 + ((*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_22EB659B8;
  return sub_22EE1FF84(a1, v8, v9, v10, v4, v5);
}

uint64_t sub_22EE21E24@<X0>(uint64_t a1@<X8>)
{
  return sub_22EE21138(a1);
}

uint64_t sub_22EE21E48(uint64_t a1)
{
  return sub_22EE212E4(a1, *(void *)(v1 + 32));
}

uint64_t sub_22EE21E54(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_12_11();
  v4();
  return a2;
}

uint64_t sub_22EE21EB0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_2_0();
  uint64_t v4 = OUTLINED_FUNCTION_16_0();
  v5(v4);
  return a2;
}

uint64_t sub_22EE21F04(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_5_2();
  v3();
  return a1;
}

uint64_t sub_22EE21F60@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_22EB5767C();
  *a1 = result;
  return result;
}

uint64_t sub_22EE21F90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_22ED82000();
  *a1 = result;
  return result;
}

uint64_t sub_22EE21FC8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22ED29260();
  *a1 = result & 1;
  return result;
}

uint64_t sub_22EE21FF8()
{
  return sub_22ED2929C();
}

unint64_t sub_22EE22050()
{
  unint64_t result = qword_268627A60;
  if (!qword_268627A60)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686279F8);
    sub_22EE220F0();
    sub_22EADDD7C(&qword_268627A98, &qword_268627A30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627A60);
  }
  return result;
}

unint64_t sub_22EE220F0()
{
  unint64_t result = qword_268627A68;
  if (!qword_268627A68)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686279F0);
    sub_22EE2216C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627A68);
  }
  return result;
}

unint64_t sub_22EE2216C()
{
  unint64_t result = qword_268627A70;
  if (!qword_268627A70)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686279E8);
    sub_22EE2220C();
    sub_22EADDD7C(&qword_26861DFD8, &qword_26861DF88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627A70);
  }
  return result;
}

unint64_t sub_22EE2220C()
{
  unint64_t result = qword_268627A78;
  if (!qword_268627A78)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686279E0);
    sub_22EE222B8();
    sub_22EE22538(&qword_26861E8E8, (void (*)(uint64_t))type metadata accessor for CurrentEntitlementViewModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627A78);
  }
  return result;
}

unint64_t sub_22EE222B8()
{
  unint64_t result = qword_268627A80;
  if (!qword_268627A80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861F2F8);
    sub_22EE22334();
    sub_22EBB198C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627A80);
  }
  return result;
}

unint64_t sub_22EE22334()
{
  unint64_t result = qword_268627A88;
  if (!qword_268627A88)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861F300);
    sub_22EE223E0();
    sub_22EE22538(&qword_26861C388, (void (*)(uint64_t))type metadata accessor for DisabledWhenInAppPurchaseIsDisabledModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627A88);
  }
  return result;
}

unint64_t sub_22EE223E0()
{
  unint64_t result = qword_268627A90;
  if (!qword_268627A90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2686279D8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861F290);
    type metadata accessor for InAppStoreButtonStyle();
    sub_22EE22538((unint64_t *)&qword_26861C958, (void (*)(uint64_t))type metadata accessor for InAppStoreButtonStyle);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_22EADDD7C((unint64_t *)&qword_26861C378, &qword_26861C380);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627A90);
  }
  return result;
}

uint64_t sub_22EE22538(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_35()
{
  j_j__swift_release(*(void *)(v1 + v0[12]));
  j_j__swift_release(*(void *)(v1 + v0[13]));
  j_j__swift_release(*(void *)(v1 + v0[14]));
  sub_22EB19E28(*(void *)(v1 + v0[15]), *(unsigned __int8 *)(v1 + v0[15] + 8));
  sub_22EB19E28(*(void *)(v1 + v0[16]), *(unsigned __int8 *)(v1 + v0[16] + 8));
  sub_22EBAD8D0(*(void *)(v1 + v0[17]), *(void *)(v1 + v0[17] + 8), *(unsigned char *)(v1 + v0[17] + 16));
  uint64_t v2 = v1 + v0[18];
  j_j__swift_release(*(void *)v2);
  j_j__swift_release(*(void *)(v2 + 16));
  j_j__swift_release(*(void *)(v2 + 32));
  return sub_22EBAD8D0(*(void *)(v2 + 48), *(void *)(v2 + 56), *(unsigned char *)(v2 + 64));
}

uint64_t OUTLINED_FUNCTION_7_31(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 - 376);
  *(void *)(a1 + 16) = *(void *)(v1 - 384);
  *(void *)(a1 + 24) = v2;
  return a1 + *(void *)(v1 - 368);
}

void OUTLINED_FUNCTION_10_32()
{
  uint64_t v4 = (char *)(v2 + *(int *)(v1 + 96));
  char v5 = *v4;
  uint64_t v6 = *((void *)v4 + 1);
  *(unsigned char *)(v0 + 56) = v5;
  *(void *)(v0 + 64) = v6;
  *(unsigned char *)(v0 + 34) = v3 > 0.0;
}

double OUTLINED_FUNCTION_13_33()
{
  uint64_t v2 = v0 + *(int *)(v1 + 36);
  double result = 0.0;
  *(_OWORD *)(v2 + 73) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)uint64_t v2 = 0u;
  *(unsigned char *)(v2 + 89) = 1;
  return result;
}

uint64_t OUTLINED_FUNCTION_16_29()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_17_26()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_20_24()
{
  uint64_t v3 = v1 + *(int *)(v0 + 44);
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = *(void *)(v3 + 32);
  char v9 = *(unsigned char *)(v3 + 40);
  return sub_22EB19A34(v4, v5, v6, v7, v8, v9);
}

uint64_t OUTLINED_FUNCTION_24_17()
{
  return sub_22EE7C3A0();
}

uint64_t OUTLINED_FUNCTION_30_14()
{
  return v0;
}

double OUTLINED_FUNCTION_31_14()
{
  double result = 0.0;
  *(_OWORD *)(v0 + 184) = 0u;
  *(_OWORD *)(v0 + 168) = 0u;
  *(_OWORD *)(v0 + 152) = 0u;
  *(unsigned char *)(v0 + 200) = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_32_14(uint64_t result)
{
  *(void *)uint64_t v1 = result;
  *(unsigned char *)(v1 + 8) = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_35_15()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_38_13()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_39_12@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1 = *a1;
  j__swift_retain(*a1, *((unsigned __int8 *)a1 + 8));
  return v1;
}

uint64_t OUTLINED_FUNCTION_41_11(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_46_6(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  *(unsigned char *)(v1 + 24) = 0;
  return result;
}

_OWORD *sub_22EE2286C(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = (_OWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return v4;
  }
  if (*a2)
  {
    uint64_t v7 = a2[1];
    *(void *)uint64_t v4 = *a2;
    *((void *)v4 + 1) = v7;
    swift_retain();
  }
  else
  {
    *a1 = *(_OWORD *)a2;
  }
  *((unsigned char *)v4 + 16) = *((unsigned char *)a2 + 16);
  char v9 = (int *)type metadata accessor for ProductViewStyleConfiguration();
  uint64_t v10 = v9[6];
  uint64_t v11 = (void *)((char *)v4 + v10);
  uint64_t v12 = (void **)((char *)a2 + v10);
  uint64_t v13 = type metadata accessor for Product.TaskState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v17 = sub_22EE7F780();
    (*(void (**)(void *, void **, uint64_t))(*(void *)(v17 - 8) + 16))(v11, v12, v17);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
      goto LABEL_12;
    }
    uint64_t v15 = *v12;
    id v16 = v15;
    void *v11 = v15;
  }
  swift_storeEnumTagMultiPayload();
LABEL_12:
  *(void *)((char *)v4 + v9[7]) = *(uint64_t *)((char *)a2 + v9[7]);
  *((unsigned char *)v4 + v9[8]) = *((unsigned char *)a2 + v9[8]);
  *((unsigned char *)v4 + v9[9]) = *((unsigned char *)a2 + v9[9]);
  uint64_t v18 = *(int *)(a3 + 20);
  uint64_t v19 = (void *)((char *)v4 + v18);
  uint64_t v20 = (uint64_t *)((char *)a2 + v18);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = sub_22EE7CFC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  }
  else
  {
    void *v19 = *v20;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return v4;
}

uint64_t sub_22EE22AB4(void *a1, uint64_t a2)
{
  if (*a1) {
    swift_release();
  }
  uint64_t v4 = (id *)((char *)a1 + *(int *)(type metadata accessor for ProductViewStyleConfiguration() + 24));
  type metadata accessor for Product.TaskState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v6 = sub_22EE7F780();
    (*(void (**)(id *, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
  }
  else if (!EnumCaseMultiPayload)
  {
  }
  swift_release();
  uint64_t v7 = (char *)a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_22EE7CFC0();
    char v9 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8);
    return v9(v7, v8);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_22EE22C04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)a2)
  {
    uint64_t v6 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = (int *)type metadata accessor for ProductViewStyleConfiguration();
  uint64_t v8 = v7[6];
  char v9 = (void *)(a1 + v8);
  uint64_t v10 = (void **)(a2 + v8);
  uint64_t v11 = type metadata accessor for Product.TaskState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v15 = sub_22EE7F780();
    (*(void (**)(void *, void **, uint64_t))(*(void *)(v15 - 8) + 16))(v9, v10, v15);
    goto LABEL_8;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v13 = *v10;
    id v14 = v13;
    *char v9 = v13;
LABEL_8:
    swift_storeEnumTagMultiPayload();
    goto LABEL_10;
  }
  memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
LABEL_10:
  *(void *)(a1 + v7[7]) = *(void *)(a2 + v7[7]);
  *(unsigned char *)(a1 + v7[8]) = *(unsigned char *)(a2 + v7[8]);
  *(unsigned char *)(a1 + v7[9]) = *(unsigned char *)(a2 + v7[9]);
  uint64_t v16 = *(int *)(a3 + 20);
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = sub_22EE7CFC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  else
  {
    *uint64_t v17 = *v18;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_22EE22DF4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  if (*(void *)a1)
  {
    if (v6)
    {
      uint64_t v7 = a2[1];
      *(void *)a1 = v6;
      *(void *)(a1 + 8) = v7;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v6)
  {
    uint64_t v8 = a2[1];
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v8;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  uint64_t v9 = type metadata accessor for ProductViewStyleConfiguration();
  uint64_t v10 = (int *)v9;
  if ((uint64_t *)a1 == a2) {
    goto LABEL_15;
  }
  uint64_t v11 = *(int *)(v9 + 24);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void **)((char *)a2 + v11);
  sub_22EC40DD8(a1 + v11);
  uint64_t v14 = type metadata accessor for Product.TaskState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v18 = sub_22EE7F780();
    (*(void (**)(void *, void **, uint64_t))(*(void *)(v18 - 8) + 16))(v12, v13, v18);
    goto LABEL_13;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v16 = *v13;
    id v17 = v16;
    *uint64_t v12 = v16;
LABEL_13:
    swift_storeEnumTagMultiPayload();
    goto LABEL_15;
  }
  memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
LABEL_15:
  *(void *)(a1 + v10[7]) = *(uint64_t *)((char *)a2 + v10[7]);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + v10[8]) = *((unsigned char *)a2 + v10[8]);
  *(unsigned char *)(a1 + v10[9]) = *((unsigned char *)a2 + v10[9]);
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v19 = *(int *)(a3 + 20);
    uint64_t v20 = (void *)(a1 + v19);
    uint64_t v21 = (uint64_t *)((char *)a2 + v19);
    sub_22EADD81C(a1 + v19, &qword_26861BDD8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = sub_22EE7CFC0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    }
    else
    {
      *uint64_t v20 = *v21;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_22EE23048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)a2)
  {
    uint64_t v6 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v6;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = (int *)type metadata accessor for ProductViewStyleConfiguration();
  uint64_t v8 = v7[6];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = type metadata accessor for Product.TaskState(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_22EE7F780();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  *(void *)(a1 + v7[7]) = *(void *)(a2 + v7[7]);
  *(unsigned char *)(a1 + v7[8]) = *(unsigned char *)(a2 + v7[8]);
  *(unsigned char *)(a1 + v7[9]) = *(unsigned char *)(a2 + v7[9]);
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = sub_22EE7CFC0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  return a1;
}

uint64_t sub_22EE2321C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  if (*(void *)a1)
  {
    if (v6)
    {
      uint64_t v7 = a2[1];
      *(void *)a1 = v6;
      *(void *)(a1 + 8) = v7;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v6)
  {
    uint64_t v8 = a2[1];
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v8;
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  uint64_t v9 = type metadata accessor for ProductViewStyleConfiguration();
  uint64_t v10 = (int *)v9;
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v11 = *(int *)(v9 + 24);
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = (char *)a2 + v11;
    sub_22EC40DD8(a1 + v11);
    uint64_t v14 = type metadata accessor for Product.TaskState(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = sub_22EE7F780();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
    }
  }
  *(void *)(a1 + v10[7]) = *(uint64_t *)((char *)a2 + v10[7]);
  swift_release();
  *(unsigned char *)(a1 + v10[8]) = *((unsigned char *)a2 + v10[8]);
  *(unsigned char *)(a1 + v10[9]) = *((unsigned char *)a2 + v10[9]);
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v16 = *(int *)(a3 + 20);
    uint64_t v17 = (void *)(a1 + v16);
    uint64_t v18 = (char *)a2 + v16;
    sub_22EADD81C(a1 + v16, &qword_26861BDD8);
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = sub_22EE7CFC0();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v17, v18, v20);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_22EE23448(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EE2345C);
}

uint64_t sub_22EE2345C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for ProductViewStyleConfiguration();
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C7F0);
    uint64_t v9 = a1 + *(int *)(a3 + 20);
  }

  return __swift_getEnumTagSinglePayload(v9, a2, v8);
}

uint64_t sub_22EE234DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EE234F0);
}

uint64_t sub_22EE234F0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for ProductViewStyleConfiguration();
  OUTLINED_FUNCTION_10();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C7F0);
    uint64_t v11 = a1 + *(int *)(a4 + 20);
  }

  return __swift_storeEnumTagSinglePayload(v11, a2, a2, v10);
}

uint64_t type metadata accessor for ConfigureProductViewEnvironmentViewModifier()
{
  uint64_t result = qword_268627AA0;
  if (!qword_268627AA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_22EE235C0()
{
  type metadata accessor for ProductViewStyleConfiguration();
  if (v0 <= 0x3F)
  {
    sub_22EBDBB10();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_22EE23688()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22EE236A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a1;
  uint64_t v40 = a2;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C968);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_22EE7CFC0();
  uint64_t v39 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v38 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861CDC0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627AB8);
  uint64_t v10 = v9 - 8;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627AC0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627AC8);
  uint64_t v36 = *(void *)(v16 - 8);
  uint64_t v37 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v35 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v18 = sub_22EE259FC();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v20 = swift_allocObject();
  *(unsigned char *)(v20 + 16) = v18 & 1;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627AD0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v12, v34, v21);
  uint64_t v22 = *(int *)(v10 + 44);
  uint64_t v23 = v33;
  uint64_t v24 = (uint64_t *)&v12[v22];
  uint64_t *v24 = KeyPath;
  v24[1] = (uint64_t)sub_22EAEF9B0;
  void v24[2] = v20;
  uint64_t v25 = swift_getKeyPath();
  type metadata accessor for ConfigureProductViewEnvironmentViewModifier();
  sub_22EB183A4();
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v23);
  uint64_t v26 = (uint64_t *)&v15[*(int *)(v13 + 36)];
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_268627AD8);
  sub_22EB31AAC((uint64_t)v8, (uint64_t)v26 + *(int *)(v27 + 28), &qword_26861CDC0);
  *uint64_t v26 = v25;
  sub_22EB31AAC((uint64_t)v12, (uint64_t)v15, &qword_268627AB8);
  sub_22EADD81C((uint64_t)v8, &qword_26861CDC0);
  sub_22EADD81C((uint64_t)v12, &qword_268627AB8);
  ProductViewStyleConfiguration.product.getter((uint64_t)v4);
  uint64_t v28 = sub_22EE7F780();
  LODWORD(v8) = __swift_getEnumTagSinglePayload((uint64_t)v4, 1, v28);
  sub_22EADD81C((uint64_t)v4, &qword_26861C968);
  if (v8 == 1)
  {
    uint64_t v29 = v38;
    sub_22EE7CFB0();
  }
  else
  {
    uint64_t v41 = MEMORY[0x263F8EE78];
    sub_22EE240D8((unint64_t *)&qword_26861D078);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26861D080);
    sub_22EADDD7C(&qword_26861D088, &qword_26861D080);
    uint64_t v29 = v38;
    sub_22EE80110();
  }
  sub_22EE23E78();
  uint64_t v30 = v35;
  sub_22EE7E6E0();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v29, v23);
  sub_22EADD81C((uint64_t)v15, &qword_268627AC0);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v36 + 32))(v40, v30, v37);
}

uint64_t sub_22EE23B9C()
{
  sub_22EE23C98();

  return sub_22EE7D4B0();
}

uint64_t sub_22EE23BE4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861CDC0);
  MEMORY[0x270FA5388](v2 - 8);
  sub_22EB31AAC(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_26861CDC0);
  sub_22EE23C98();
  sub_22EE7D4C0();
  return sub_22EADD81C(a1, &qword_26861CDC0);
}

unint64_t sub_22EE23C98()
{
  unint64_t result = qword_268627AB0;
  if (!qword_268627AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627AB0);
  }
  return result;
}

uint64_t sub_22EE23CE4()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861CDC0);
  __swift_allocate_value_buffer(v0, qword_26864C690);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_26864C690);
  uint64_t v2 = sub_22EE7CFC0();

  return __swift_storeEnumTagSinglePayload(v1, 1, 1, v2);
}

uint64_t sub_22EE23D58()
{
  if (qword_26861B930 != -1) {
    swift_once();
  }
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861CDC0);

  return __swift_project_value_buffer(v0, (uint64_t)qword_26864C690);
}

uint64_t sub_22EE23DC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_22EE23D58();
  return sub_22EB31AAC(v2, a1, &qword_26861CDC0);
}

uint64_t sub_22EE23DF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_22EE24048();

  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

uint64_t sub_22EE23E60()
{
  return swift_deallocObject();
}

unint64_t sub_22EE23E78()
{
  unint64_t result = qword_268627AE0;
  if (!qword_268627AE0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268627AC0);
    sub_22EE23F18();
    sub_22EADDD7C(&qword_268627AF8, &qword_268627AD8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627AE0);
  }
  return result;
}

unint64_t sub_22EE23F18()
{
  unint64_t result = qword_268627AE8;
  if (!qword_268627AE8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268627AB8);
    sub_22EADDD7C(&qword_268627AF0, &qword_268627AD0);
    sub_22EADDD7C((unint64_t *)&qword_26861C378, &qword_26861C380);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627AE8);
  }
  return result;
}

ValueMetadata *_s27AncestorRedactionReasonsKeyVMa()
{
  return &_s27AncestorRedactionReasonsKeyVN;
}

uint64_t sub_22EE23FEC()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_22EE24048()
{
  unint64_t result = qword_268627B00;
  if (!qword_268627B00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26861CDC0);
    sub_22EE240D8(&qword_268627B08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268627B00);
  }
  return result;
}

uint64_t sub_22EE240D8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_22EE7CFC0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22EE2411C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22ED6BE74();
  *a1 = result;
  return result;
}

uint64_t sub_22EE24148()
{
  return sub_22ED6BEB0();
}

uint64_t StoreButtonStyle.makeBody(configuration:)(uint64_t a1)
{
  uint64_t v2 = (int *)type metadata accessor for InAppStoreButtonStyle();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_11_0();
  uint64_t v5 = v4 - v3;
  uint64_t v6 = sub_22EE7DDE0();
  OUTLINED_FUNCTION_0_2();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_11_0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861CE08);
  OUTLINED_FUNCTION_0_2();
  uint64_t v15 = v14;
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_11_0();
  uint64_t v19 = v18 - v17;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v12, a1, v6);
  sub_22EE7EA30();
  *(void *)uint64_t v5 = swift_getKeyPath();
  *(unsigned char *)(v5 + 8) = 0;
  *(void *)(v5 + 16) = swift_getKeyPath();
  *(unsigned char *)(v5 + 24) = 0;
  uint64_t v20 = (uint64_t *)(v5 + v2[6]);
  *uint64_t v20 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(qword_26861BEF8);
  OUTLINED_FUNCTION_1_36();
  uint64_t v21 = (uint64_t *)(v5 + v2[7]);
  *uint64_t v21 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861BDE0);
  OUTLINED_FUNCTION_1_36();
  uint64_t v22 = (uint64_t *)(v5 + v2[8]);
  *uint64_t v22 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26861C920);
  OUTLINED_FUNCTION_1_36();
  uint64_t v23 = v5 + v2[9];
  *(_OWORD *)(v23 + 73) = 0u;
  *(_OWORD *)(v23 + 48) = 0u;
  *(_OWORD *)(v23 + 64) = 0u;
  *(_OWORD *)(v23 + 16) = 0u;
  *(_OWORD *)(v23 + 32) = 0u;
  *(_OWORD *)uint64_t v23 = 0u;
  *(unsigned char *)(v23 + 89) = 1;
  sub_22EB1A8A8();
  sub_22EB057A8();
  sub_22EE7E210();
  sub_22ED6C60C(v5);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v19, v13);
}

uint64_t sub_22EE243CC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_22ED6BE74();
  *a1 = result;
  return result;
}

uint64_t sub_22EE243F8()
{
  return sub_22ED6BEB0();
}

uint64_t sub_22EE2443C(uint64_t a1)
{
  return StoreButtonStyle.makeBody(configuration:)(a1);
}

uint64_t sub_22EE24458()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for StoreButtonStyle()
{
  return &type metadata for StoreButtonStyle;
}

uint64_t sub_22EE24484()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t OUTLINED_FUNCTION_1_36()
{
  return swift_storeEnumTagMultiPayload();
}

void *sub_22EE2451C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(_WORD *)(a1 + 17) = *(_WORD *)((char *)a2 + 17);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    *(_WORD *)(a1 + v8) = *(_WORD *)((char *)a2 + v8);
    uint64_t v11 = (int *)type metadata accessor for ProductViewBaseEvent(0);
    uint64_t v12 = v11[6];
    uint64_t v13 = (void *)(v9 + v12);
    uint64_t v14 = (const void *)(v10 + v12);
    uint64_t v15 = sub_22EE7F2B0();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E4E0);
      memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
    }
    *(unsigned char *)(v9 + v11[7]) = *(unsigned char *)(v10 + v11[7]);
    *(unsigned char *)(v9 + v11[8]) = *(unsigned char *)(v10 + v11[8]);
    *(unsigned char *)(v9 + v11[9]) = *(unsigned char *)(v10 + v11[9]);
    *(unsigned char *)(v9 + v11[10]) = *(unsigned char *)(v10 + v11[10]);
    uint64_t v18 = *(int *)(a3 + 24);
    uint64_t v19 = (char *)v4 + v18;
    uint64_t v20 = (uint64_t)a2 + v18;
    uint64_t v21 = sub_22EE7C3C0();
    uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16);
    v22(v19, v20, v21);
    uint64_t v23 = (int *)type metadata accessor for MintDisappearBaseEvent(0);
    v22(&v19[v23[5]], v20 + v23[5], v21);
    v19[v23[6]] = *(unsigned char *)(v20 + v23[6]);
    v19[v23[7]] = *(unsigned char *)(v20 + v23[7]);
  }
  return v4;
}

uint64_t sub_22EE24758(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = v4 + *(int *)(type metadata accessor for ProductViewBaseEvent(0) + 24);
  uint64_t v6 = sub_22EE7F2B0();
  if (!__swift_getEnumTagSinglePayload(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_22EE7C3C0();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v11)((void *)(v8 - 8), v7, v8);
  uint64_t v9 = v7 + *(int *)(type metadata accessor for MintDisappearBaseEvent(0) + 20);

  return v11(v9, v8);
}

uint64_t sub_22EE24878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_WORD *)(a1 + v7) = *(_WORD *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for ProductViewBaseEvent(0);
  uint64_t v11 = v10[6];
  uint64_t v12 = (void *)(v8 + v11);
  uint64_t v13 = (const void *)(v9 + v11);
  uint64_t v14 = sub_22EE7F2B0();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E4E0);
    memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
  }
  *(unsigned char *)(v8 + v10[7]) = *(unsigned char *)(v9 + v10[7]);
  *(unsigned char *)(v8 + v10[8]) = *(unsigned char *)(v9 + v10[8]);
  *(unsigned char *)(v8 + v10[9]) = *(unsigned char *)(v9 + v10[9]);
  *(unsigned char *)(v8 + v10[10]) = *(unsigned char *)(v9 + v10[10]);
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_22EE7C3C0();
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16);
  v20(v17, v18, v19);
  uint64_t v21 = (int *)type metadata accessor for MintDisappearBaseEvent(0);
  v20(v17 + v21[5], v18 + v21[5], v19);
  *(unsigned char *)(v17 + v21[6]) = *(unsigned char *)(v18 + v21[6]);
  *(unsigned char *)(v17 + v21[7]) = *(unsigned char *)(v18 + v21[7]);
  return a1;
}

uint64_t sub_22EE24A64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (unsigned char *)(a1 + v6);
  uint64_t v8 = a2 + v6;
  *uint64_t v7 = *(unsigned char *)(a2 + v6);
  v7[1] = *(unsigned char *)(a2 + v6 + 1);
  uint64_t v9 = (int *)type metadata accessor for ProductViewBaseEvent(0);
  uint64_t v10 = v9[6];
  uint64_t v11 = &v7[v10];
  uint64_t v12 = (const void *)(v8 + v10);
  uint64_t v13 = sub_22EE7F2B0();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v13);
  int v15 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (!EnumTagSinglePayload)
  {
    uint64_t v16 = *(void *)(v13 - 8);
    if (!v15)
    {
      (*(void (**)(unsigned char *, const void *, uint64_t))(v16 + 24))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(unsigned char *, uint64_t))(v16 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E4E0);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, const void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
LABEL_7:
  v7[v9[7]] = *(unsigned char *)(v8 + v9[7]);
  v7[v9[8]] = *(unsigned char *)(v8 + v9[8]);
  v7[v9[9]] = *(unsigned char *)(v8 + v9[9]);
  v7[v9[10]] = *(unsigned char *)(v8 + v9[10]);
  uint64_t v18 = *(int *)(a3 + 24);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = sub_22EE7C3C0();
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 24);
  v22(v19, v20, v21);
  uint64_t v23 = (int *)type metadata accessor for MintDisappearBaseEvent(0);
  v22(v19 + v23[5], v20 + v23[5], v21);
  *(unsigned char *)(v19 + v23[6]) = *(unsigned char *)(v20 + v23[6]);
  *(unsigned char *)(v19 + v23[7]) = *(unsigned char *)(v20 + v23[7]);
  return a1;
}

uint64_t sub_22EE24CF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 15) = *(_DWORD *)(a2 + 15);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(_WORD *)(a1 + v6) = *(_WORD *)(a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for ProductViewBaseEvent(0);
  uint64_t v10 = v9[6];
  uint64_t v11 = (void *)(v7 + v10);
  uint64_t v12 = (const void *)(v8 + v10);
  uint64_t v13 = sub_22EE7F2B0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E4E0);
    memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
  }
  *(unsigned char *)(v7 + v9[7]) = *(unsigned char *)(v8 + v9[7]);
  *(unsigned char *)(v7 + v9[8]) = *(unsigned char *)(v8 + v9[8]);
  *(unsigned char *)(v7 + v9[9]) = *(unsigned char *)(v8 + v9[9]);
  *(unsigned char *)(v7 + v9[10]) = *(unsigned char *)(v8 + v9[10]);
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_22EE7C3C0();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32);
  v19(v16, v17, v18);
  uint64_t v20 = (int *)type metadata accessor for MintDisappearBaseEvent(0);
  v19(v16 + v20[5], v17 + v20[5], v18);
  *(unsigned char *)(v16 + v20[6]) = *(unsigned char *)(v17 + v20[6]);
  *(unsigned char *)(v16 + v20[7]) = *(unsigned char *)(v17 + v20[7]);
  return a1;
}

uint64_t sub_22EE24ECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_WORD *)(a1 + v7) = *(_WORD *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for ProductViewBaseEvent(0);
  uint64_t v11 = v10[6];
  uint64_t v12 = (void *)(v8 + v11);
  uint64_t v13 = (const void *)(v9 + v11);
  uint64_t v14 = sub_22EE7F2B0();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v14);
  int v16 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14);
  if (!EnumTagSinglePayload)
  {
    uint64_t v17 = *(void *)(v14 - 8);
    if (!v16)
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 40))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861E4E0);
    memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
LABEL_7:
  *(unsigned char *)(v8 + v10[7]) = *(unsigned char *)(v9 + v10[7]);
  *(unsigned char *)(v8 + v10[8]) = *(unsigned char *)(v9 + v10[8]);
  *(unsigned char *)(v8 + v10[9]) = *(unsigned char *)(v9 + v10[9]);
  *(unsigned char *)(v8 + v10[10]) = *(unsigned char *)(v9 + v10[10]);
  uint64_t v19 = *(int *)(a3 + 24);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_22EE7C3C0();
  uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40);
  v23(v20, v21, v22);
  uint64_t v24 = (int *)type metadata accessor for MintDisappearBaseEvent(0);
  v23(v20 + v24[5], v21 + v24[5], v22);
  *(unsigned char *)(v20 + v24[6]) = *(unsigned char *)(v21 + v24[6]);
  *(unsigned char *)(v20 + v24[7]) = *(unsigned char *)(v21 + v24[7]);
  return a1;
}

uint64_t sub_22EE25138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_22EE2514C);
}

uint64_t sub_22EE2514C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    type metadata accessor for ProductViewBaseEvent(0);
    OUTLINED_FUNCTION_10();
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = *(int *)(a3 + 20);
    }
    else
    {
      uint64_t v11 = type metadata accessor for MintDisappearBaseEvent(0);
      uint64_t v12 = *(int *)(a3 + 24);
    }
    return __swift_getEnumTagSinglePayload(a1 + v12, a2, v11);
  }
}

uint64_t sub_22EE25204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_22EE25218);
}

uint64_t sub_22EE25218(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    type metadata accessor for ProductViewBaseEvent(0);
    OUTLINED_FUNCTION_10();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a4 + 20);
    }
    else
    {
      uint64_t v10 = type metadata accessor for MintDisappearBaseEvent(0);
      uint64_t v11 = *(int *)(a4 + 24);
    }
    return __swift_storeEnumTagSinglePayload(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for ProductViewDisappearEvent()
{
  uint64_t result = qword_268627B10;
  if (!qword_268627B10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_22EE25308()
{
  uint64_t result = type metadata accessor for ProductViewBaseEvent(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for MintDisappearBaseEvent(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t ProductViewStyleConfiguration.product.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Product.TaskState(0);
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_11_0();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = type metadata accessor for ProductViewStyleConfiguration();
  sub_22EB36F38(v1 + *(int *)(v7 + 24), v6);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v9 = sub_22EE7F780();
  uint64_t v10 = v9;
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(a1, v6, v9);
    return __swift_storeEnumTagSinglePayload(a1, 0, 1, v10);
  }
  else
  {
    __swift_storeEnumTagSinglePayload(a1, 1, 1, v9);
    return sub_22EC40DD8(v6);
  }
}

uint64_t type metadata accessor for ProductViewStyleConfiguration()
{
  uint64_t result = qword_268627B48;
  if (!qword_268627B48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_22EE25538@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  OUTLINED_FUNCTION_0_0();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_11_0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v10 - v9, a1, a2);
  uint64_t v11 = sub_22EE7EB20();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, a2);
  *a3 = v11;
  return result;
}

uint64_t sub_22EE25608@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, char a3@<W3>, uint64_t a4@<X4>, int a5@<W5>, int a6@<W6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9)
{
  int v34 = a5;
  int v35 = a6;
  OUTLINED_FUNCTION_0_0();
  uint64_t v16 = v15;
  MEMORY[0x270FA5388](v17);
  uint64_t v31 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  *(void *)a8 = v20;
  *(void *)(a8 + 8) = v21;
  uint64_t v22 = (int *)type metadata accessor for ProductViewStyleConfiguration();
  uint64_t v23 = a8 + v22[6];
  uint64_t v33 = a2;
  sub_22EB36F38(a2, v23);
  *(unsigned char *)(a8 + v22[8]) = a3;
  uint64_t v24 = *(void (**)(void))(v16 + 16);
  uint64_t v32 = a4;
  OUTLINED_FUNCTION_5_30();
  v24();
  sub_22EADACE8(a1);
  if (swift_dynamicCast())
  {
    sub_22EADACF8(a1);
    uint64_t v25 = v36;
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v32, a7);
    uint64_t result = sub_22EC40DD8(v33);
    *(void *)(a8 + v22[7]) = v25;
  }
  else
  {
    uint64_t v30 = a9;
    uint64_t v27 = (uint64_t)v31;
    uint64_t v28 = v32;
    OUTLINED_FUNCTION_5_30();
    v24();
    sub_22EE25538(v27, a7, &v36);
    sub_22EADACF8(a1);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v28, a7);
    uint64_t result = sub_22EC40DD8(v33);
    *(void *)(a8 + v22[7]) = v36;
  }
  char v29 = v35;
  *(unsigned char *)(a8 + 16) = v34 & 1;
  *(unsigned char *)(a8 + v22[9]) = v29;
  return result;
}

uint64_t View.productViewStyle<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v20 = a4;
  OUTLINED_FUNCTION_0_0();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_56_3();
  uint64_t v11 = type metadata accessor for ProductViewStyleModifier();
  OUTLINED_FUNCTION_0_0();
  uint64_t v13 = v12;
  __n128 v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v20 - v16;
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v9 + 16))(v4, a1, a3, v15);
  double v18 = sub_22EE25F20(v4, a3, (uint64_t)v17);
  MEMORY[0x230FAB9D0](v17, a2, v11, v20, v18);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v17, v11);
}

uint64_t type metadata accessor for ProductViewStyleModifier()
{
  return __swift_instantiateGenericMetadata();
}

double sub_22EE25960@<D0>(uint64_t a1@<X8>)
{
  sub_22EE27344();
  sub_22EE7D4B0();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_22EE259B4()
{
  return sub_22EE7D4C0();
}

uint64_t sub_22EE259FC()
{
  sub_22EE7F2B0();
  OUTLINED_FUNCTION_0_0();
  uint64_t v31 = v3;
  uint64_t v32 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v31 - v7;
  uint64_t v9 = type metadata accessor for Product.TaskState(0);
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_56_3();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26861C968);
  MEMORY[0x270FA5388](v10 - 8);
  OUTLINED_FUNCTION_11_0();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = sub_22EE7F780();
  OUTLINED_FUNCTION_0_0();
  uint64_t v16 = v15;
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_11_0();
  uint64_t v20 = v19 - v18;
  uint64_t v21 = type metadata accessor for ProductViewStyleConfiguration();
  sub_22EB36F38((uint64_t)v0 + *(int *)(v21 + 24), v1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v13, v1, v14);
    __swift_storeEnumTagSinglePayload(v13, 0, 1, v14);
  }
  else
  {
    __swift_storeEnumTagSinglePayload(v13, 1, 1, v14);
    sub_22EC40DD8(v1);
  }
  if (__swift_getEnumTagSinglePayload(v13, 1, v14) == 1)
  {
    sub_22EB36F9C(v13);
LABEL_10:
    char v27 = 1;
    return v27 & 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v20, v13, v14);
  if (!*v0)
  {
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v20, v14);
    goto LABEL_10;
  }
  if (*((unsigned char *)v0 + *(int *)(v21 + 32)))
  {
    sub_22EE7F700();
    sub_22EE7F270();
    sub_22EB0D27C();
    uint64_t v22 = v32;
    char v23 = sub_22EE7F900();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v31 + 8);
    v24(v5, v22);
    v24(v8, v22);
    uint64_t v25 = OUTLINED_FUNCTION_4_39();
    v26(v25);
    char v27 = v23 ^ 1;
  }
  else
  {
    uint64_t v28 = OUTLINED_FUNCTION_4_39();
    v29(v28);
    char v27 = 0;
  }
  return v27 & 1;
}