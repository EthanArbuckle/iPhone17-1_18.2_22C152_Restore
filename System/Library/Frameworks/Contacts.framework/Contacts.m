uint64_t comparePhoneNumberStrings(void *a1, id a2)
{
  id v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  int v18;
  void *v19;
  char v20;
  uint64_t v21;
  void *v22;
  char v23;
  uint64_t v24;
  unsigned int v25;
  int v26;
  int v28;
  int v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;

  v3 = a1;
  v34 = *MEMORY[0x1E4F143B8];
  if ((unint64_t)[a1 length] >> 5 >= 0xC35) {
    v3 = (id)objc_msgSend(v3, "_cn_take:", 100000);
  }
  if ((unint64_t)[a2 length] >= 0x186A0) {
    a2 = (id)objc_msgSend(a2, "_cn_take:", 100000);
  }
  if (comparePhoneNumberStrings_onceTokendecimalDigits != -1) {
    dispatch_once(&comparePhoneNumberStrings_onceTokendecimalDigits, &__block_literal_global_703);
  }
  if (comparePhoneNumberStrings_onceTokenextCharacters != -1) {
    dispatch_once(&comparePhoneNumberStrings_onceTokenextCharacters, &__block_literal_global_709);
  }
  v4 = [v3 length];
  v5 = [a2 length];
  if (v4 <= 0x64) {
    [v3 length];
  }
  MEMORY[0x1F4188790]();
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v5 <= 0x64) {
    [a2 length];
  }
  MEMORY[0x1F4188790]();
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v4 >= 0x65)
  {
    v7 = (char *)malloc_type_malloc(2 * [v3 length], 0x1000040BDFB0063uLL);
    v10 = v7;
  }
  else
  {
    v10 = 0;
  }
  v32 = v10;
  if (v5 >= 0x65)
  {
    v9 = (char *)malloc_type_malloc(2 * [a2 length], 0x1000040BDFB0063uLL);
    v33 = v9;
  }
  else
  {
    v33 = 0;
  }
  v11 = [v3 length] - 1;
  objc_msgSend(v3, "getCharacters:range:", v7, 0, objc_msgSend(v3, "length"));
  v12 = [a2 length] - 1;
  objc_msgSend(a2, "getCharacters:range:", v9, 0, objc_msgSend(a2, "length"));
  v13 = 0;
  v14 = &singleValueContactProperties_cn_once_object_14;
  while (2)
  {
    if (v14[25] != -1) {
      dispatch_once(&nextValidChar_onceToken, &__block_literal_global_714);
    }
    while ((v11 & 0x8000000000000000) == 0)
    {
      v15 = *(unsigned __int16 *)&v7[2 * v11--];
      if (([(id)nextValidChar_charactersToSkip characterIsMember:v15] & 1) == 0)
      {
        v16 = v15 | 0x10000;
        goto LABEL_26;
      }
    }
    v16 = 0;
LABEL_26:
    if (v14[25] != -1) {
      dispatch_once(&nextValidChar_onceToken, &__block_literal_global_714);
    }
    do
    {
      if (v12 < 0)
      {
        v18 = 0;
        if ((v16 & 0x10000) == 0) {
          goto LABEL_45;
        }
        goto LABEL_44;
      }
      v17 = *(unsigned __int16 *)&v9[2 * v12--];
    }
    while (([(id)nextValidChar_charactersToSkip characterIsMember:v17] & 1) != 0);
    if (v16 >= 0x10000 && v13 <= 6)
    {
      if ((v16 & 0x10000) == 0)
      {
        if ([(id)comparePhoneNumberStrings_decimalDigits characterIsMember:v17]) {
          goto LABEL_39;
        }
LABEL_38:
        if ([(id)comparePhoneNumberStrings_extCharacters characterIsMember:v17]) {
          goto LABEL_39;
        }
LABEL_62:
        v25 = 0;
        v26 = 0;
        v30 = v32;
        goto LABEL_63;
      }
      if (([(id)comparePhoneNumberStrings_decimalDigits characterIsMember:(unsigned __int16)v16] & 1) == 0
        || ([(id)comparePhoneNumberStrings_decimalDigits characterIsMember:v17] & 1) == 0)
      {
        if ([(id)comparePhoneNumberStrings_extCharacters characterIsMember:(unsigned __int16)v16])goto LABEL_38; {
        goto LABEL_62;
        }
      }
LABEL_39:
      if (v17 == (unsigned __int16)v16) {
        ++v13;
      }
      v14 = &singleValueContactProperties_cn_once_object_14;
      if (v17 != (unsigned __int16)v16)
      {
        v29 = 1;
        v30 = v32;
LABEL_71:
        if (v13) {
          v28 = v29;
        }
        else {
          v28 = 1;
        }
        if (v13 > 6) {
          v26 = 1;
        }
        else {
          v26 = v28;
        }
        v25 = v29;
        goto LABEL_63;
      }
      continue;
    }
    break;
  }
  v18 = v17 | 0x10000;
  if ((v16 & 0x10000) == 0) {
    goto LABEL_45;
  }
LABEL_44:
  if (![(id)comparePhoneNumberStrings_decimalDigits characterIsMember:(unsigned __int16)v16])goto LABEL_62; {
LABEL_45:
  }
  v19 = (void *)comparePhoneNumberStrings_decimalDigits;
  v20 = 1;
LABEL_46:
  if (nextValidChar_onceToken != -1) {
    dispatch_once(&nextValidChar_onceToken, &__block_literal_global_714);
  }
  while ((v11 & 0x8000000000000000) == 0)
  {
    v21 = *(unsigned __int16 *)&v7[2 * v11--];
    if (([(id)nextValidChar_charactersToSkip characterIsMember:v21] & 1) == 0)
    {
      if ((v20 & 1) == 0) {
        goto LABEL_62;
      }
      v20 = [v19 characterIsMember:v21];
      goto LABEL_46;
    }
  }
  if ((v20 & 1) == 0
    || (v18 & 0x10000) != 0
    && ![(id)comparePhoneNumberStrings_decimalDigits characterIsMember:(unsigned __int16)v18])
  {
    goto LABEL_62;
  }
  v22 = (void *)comparePhoneNumberStrings_decimalDigits;
  v23 = 1;
LABEL_56:
  if (nextValidChar_onceToken != -1) {
    dispatch_once(&nextValidChar_onceToken, &__block_literal_global_714);
  }
  while ((v12 & 0x8000000000000000) == 0)
  {
    v24 = *(unsigned __int16 *)&v9[2 * v12--];
    if (([(id)nextValidChar_charactersToSkip characterIsMember:v24] & 1) == 0)
    {
      if ((v23 & 1) == 0) {
        goto LABEL_62;
      }
      v23 = [v22 characterIsMember:v24];
      goto LABEL_56;
    }
  }
  v29 = 0;
  v25 = 0;
  v26 = 0;
  v30 = v32;
  if (v23) {
    goto LABEL_71;
  }
LABEL_63:
  if (v30) {
    free(v30);
  }
  if (v33) {
    free(v33);
  }
  if (v26) {
    return v25;
  }
  else {
    return 2;
  }
}

uint64_t sIsPreferredForName_block_invoke(uint64_t a1, void *a2)
{
  return [a2 isPreferredForName];
}

void __Block_byref_object_dispose_(uint64_t a1)
{
}

void __Block_byref_object_dispose__0(uint64_t a1)
{
}

void __Block_byref_object_dispose__1(uint64_t a1)
{
}

void __Block_byref_object_dispose__2(uint64_t a1)
{
}

void __Block_byref_object_dispose__3(uint64_t a1)
{
}

void __Block_byref_object_dispose__4(uint64_t a1)
{
}

void __Block_byref_object_dispose__5(uint64_t a1)
{
}

void __Block_byref_object_dispose__6(uint64_t a1)
{
}

void __Block_byref_object_dispose__7(uint64_t a1)
{
}

void __Block_byref_object_dispose__8(uint64_t a1)
{
}

void __Block_byref_object_dispose__9(uint64_t a1)
{
}

void __Block_byref_object_dispose__10(uint64_t a1)
{
}

void __Block_byref_object_dispose__11(uint64_t a1)
{
}

void __Block_byref_object_dispose__12(uint64_t a1)
{
}

void __Block_byref_object_dispose__13(uint64_t a1)
{
}

void __Block_byref_object_dispose__14(uint64_t a1)
{
}

void __Block_byref_object_dispose__15(uint64_t a1)
{
}

void __Block_byref_object_dispose__16(uint64_t a1)
{
}

void __Block_byref_object_dispose__17(uint64_t a1)
{
}

void __Block_byref_object_dispose__18(uint64_t a1)
{
}

void __Block_byref_object_dispose__19(uint64_t a1)
{
}

void __Block_byref_object_dispose__20(uint64_t a1)
{
}

void __Block_byref_object_dispose__21(uint64_t a1)
{
}

void __Block_byref_object_dispose__22(uint64_t a1)
{
}

void __Block_byref_object_dispose__23(uint64_t a1)
{
}

void __Block_byref_object_dispose__24(uint64_t a1)
{
}

void __Block_byref_object_dispose__25(uint64_t a1)
{
}

void __Block_byref_object_dispose__26(uint64_t a1)
{
}

void __Block_byref_object_dispose__27(uint64_t a1)
{
}

void __Block_byref_object_dispose__28(uint64_t a1)
{
}

void __Block_byref_object_dispose__29(uint64_t a1)
{
}

void __Block_byref_object_dispose__30(uint64_t a1)
{
}

void __Block_byref_object_dispose__31(uint64_t a1)
{
}

void __Block_byref_object_dispose__32(uint64_t a1)
{
}

void __Block_byref_object_dispose__33(uint64_t a1)
{
}

void __Block_byref_object_dispose__34(uint64_t a1)
{
}

void __Block_byref_object_dispose__35(uint64_t a1)
{
}

void __Block_byref_object_dispose__36(uint64_t a1)
{
}

uint64_t canUnifyLabeledValuePairs(void *a1, void *a2, void *a3)
{
  unint64_t v5 = a1;
  unint64_t v6 = a2;
  id v7 = a3;
  if (v5 | v6 && ([(id)v5 isEqual:v6] & 1) == 0)
  {
    v9 = [(id)v5 value];
    v10 = [(id)v6 value];
    uint64_t v8 = [v7 canUnifyValue:v9 withValue:v10];
  }
  else
  {
    uint64_t v8 = 1;
  }

  return v8;
}

void sub_1909EC45C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1909ED12C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
}

void sub_1909ED6C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va1, a10);
  va_start(va, a10);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__1(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__2(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__3(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__5(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__6(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__7(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__9(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__10(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__11(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__12(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__13(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__14(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__15(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__16(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__17(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__18(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__19(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__20(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void *__Block_byref_object_copy__21(uint64_t a1, uint64_t a2)
{
  result = _Block_copy(*(const void **)(a2 + 40));
  *(void *)(a1 + 40) = result;
  return result;
}

uint64_t __Block_byref_object_copy__22(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__23(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__24(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__25(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__26(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__27(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__28(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__29(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__30(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__31(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__32(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__33(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__34(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__35(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__36(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __CNContactKeyVectorPropertyKeysToIndicesByPointer_block_invoke_2(uint64_t a1, void *a2, uint64_t a3)
{
  v4 = *(__CFDictionary **)(a1 + 32);
  id v5 = a2;
  id v6 = [v5 key];
  CFDictionarySetValue(v4, v6, (const void *)(a3 + 1));
}

void sub_1909F1858(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

uint64_t _CNIsObject_CNKeyDescriptorPrivate(void *a1)
{
  id v1 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0
    || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)
    || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)
    || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    uint64_t v2 = 1;
  }
  else
  {
    uint64_t v2 = [v1 conformsToProtocol:&unk_1EE097850];
  }

  return v2;
}

void sub_1909F8FE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1909F92BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1909F9658(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1909F9D20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va1, a8);
  va_start(va, a8);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1909F9F9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1909FC044(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sPostalAddressKeyForFormatPropertyKey_block_invoke(uint64_t a1, uint64_t a2)
{
  return +[CNPostalAddressFormatter postalAddressPropertyKeyForFormatPropertyKey:a2];
}

void sub_1909FE874(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getCRRecentContactsLibraryClass_block_invoke(uint64_t a1)
{
  CoreRecentsLibrary();
  Class result = objc_getClass("CRRecentContactsLibrary");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getCRRecentContactsLibraryClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = __getCRRecentContactsLibraryClass_block_invoke_cold_1();
    return (Class)__getCRRecentContactsLibraryClass_block_invoke_0(v3);
  }
  return result;
}

Class __getCRRecentContactsLibraryClass_block_invoke_0(uint64_t a1)
{
  CoreRecentsLibrary_0();
  Class result = objc_getClass("CRRecentContactsLibrary");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getCRRecentContactsLibraryClass_softClass_0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    __getCRRecentContactsLibraryClass_block_invoke_cold_1();
    return (Class)CoreRecentsLibrary();
  }
  return result;
}

uint64_t CoreRecentsLibrary()
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  if (!CoreRecentsLibraryCore_frameworkLibrary)
  {
    v3[1] = MEMORY[0x1E4F143A8];
    v3[2] = 3221225472;
    v3[3] = __CoreRecentsLibraryCore_block_invoke;
    v3[4] = &__block_descriptor_40_e5_v8__0l;
    v3[5] = v3;
    long long v4 = xmmword_1E56B8710;
    uint64_t v5 = 0;
    CoreRecentsLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  uint64_t v0 = CoreRecentsLibraryCore_frameworkLibrary;
  uint64_t v1 = (void *)v3[0];
  if (!CoreRecentsLibraryCore_frameworkLibrary)
  {
    uint64_t v1 = (void *)abort_report_np();
    goto LABEL_7;
  }
  if (v3[0]) {
LABEL_7:
  }
    free(v1);
  return v0;
}

uint64_t CoreRecentsLibrary_0()
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  if (!CoreRecentsLibraryCore_frameworkLibrary_0)
  {
    v3[1] = MEMORY[0x1E4F143A8];
    v3[2] = 3221225472;
    v3[3] = __CoreRecentsLibraryCore_block_invoke_0;
    v3[4] = &__block_descriptor_40_e5_v8__0l;
    v3[5] = v3;
    long long v4 = xmmword_1E56B8A38;
    uint64_t v5 = 0;
    CoreRecentsLibraryCore_frameworkLibrary_0 = _sl_dlopen();
  }
  uint64_t v0 = CoreRecentsLibraryCore_frameworkLibrary_0;
  uint64_t v1 = (void *)v3[0];
  if (!CoreRecentsLibraryCore_frameworkLibrary_0)
  {
    uint64_t v1 = (void *)abort_report_np();
    goto LABEL_7;
  }
  if (v3[0]) {
LABEL_7:
  }
    free(v1);
  return v0;
}

void sub_1909FEE88(_Unwind_Exception *a1)
{
}

void sub_1909FEEB4(void *a1)
{
}

void sub_1909FF8EC(void *a1)
{
  _Block_object_dispose((const void *)(v1 - 176), 8);
  objc_begin_catch(a1);
  JUMPOUT(0x1909FF880);
}

void sub_1909FFE98(_Unwind_Exception *a1)
{
}

void sub_1909FFEB8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  objc_begin_catch(a1);
  JUMPOUT(0x1909FFE38);
}

void sub_190A00440(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190A01668(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190A0298C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190A030BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t CNIsErrorWithCode(void *a1, uint64_t a2)
{
  id v3 = a1;
  if ([v3 code] == a2)
  {
    long long v4 = [v3 domain];
    uint64_t v5 = [v4 isEqual:@"CNErrorDomain"];
  }
  else
  {
    uint64_t v5 = 0;
  }

  return v5;
}

id _block_invoke_9(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_opt_class();
  id v3 = v2;
  if (v3 && ((objc_opt_isKindOfClass() & 1) == 0 ? (v4 = 0) : (v4 = v3), id v5 = v4, v3, v5))
  {
    uint64_t v6 = objc_alloc_init(CNMutablePostalAddress);
    id v7 = objc_msgSend(v5, "_cn_objectForKey:ofClass:", @"street", objc_opt_class());
    [(CNPostalAddress *)v6 setStreet:v7];

    uint64_t v8 = objc_msgSend(v5, "_cn_objectForKey:ofClass:", @"subLocality", objc_opt_class());
    [(CNPostalAddress *)v6 setSubLocality:v8];

    uint64_t v9 = objc_msgSend(v5, "_cn_objectForKey:ofClass:", @"city", objc_opt_class());
    [(CNPostalAddress *)v6 setCity:v9];

    v10 = objc_msgSend(v5, "_cn_objectForKey:ofClass:", @"subAdministrativeArea", objc_opt_class());
    [(CNPostalAddress *)v6 setSubAdministrativeArea:v10];

    uint64_t v11 = objc_msgSend(v5, "_cn_objectForKey:ofClass:", @"state", objc_opt_class());
    [(CNPostalAddress *)v6 setState:v11];

    uint64_t v12 = objc_msgSend(v5, "_cn_objectForKey:ofClass:", @"postalCode", objc_opt_class());
    [(CNPostalAddress *)v6 setPostalCode:v12];

    uint64_t v13 = objc_msgSend(v5, "_cn_objectForKey:ofClass:", @"country", objc_opt_class());
    [(CNPostalAddress *)v6 setCountry:v13];

    uint64_t v14 = objc_msgSend(v5, "_cn_objectForKey:ofClass:", @"ISOCountryCode", objc_opt_class());
    [(CNPostalAddress *)v6 setISOCountryCode:v14];

    uint64_t v15 = objc_msgSend(v5, "_cn_objectForKey:ofClass:", @"formattedAddress", objc_opt_class());
    [(CNPostalAddress *)v6 setFormattedAddress:v15];

    uint64_t v16 = (void *)[(CNMutablePostalAddress *)v6 copy];
  }
  else
  {
    uint64_t v16 = [MEMORY[0x1E4F1CA98] null];
  }

  return v16;
}

void sub_190A04678(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190A053A8(_Unwind_Exception *a1)
{
}

void sub_190A07178(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_190A079B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190A080B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_190A083B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void __CNContactKeyVectorPropertyKeysToIndicesByValue_block_invoke_2(uint64_t a1, void *a2, uint64_t a3)
{
  long long v4 = *(__CFDictionary **)(a1 + 32);
  id v5 = a2;
  id v6 = [v5 key];
  CFDictionarySetValue(v4, v6, (const void *)(a3 + 1));
}

void sub_190A08C18(void *a1)
{
}

void sub_190A08DA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190A0922C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v9 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_190A09ECC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_190A0A0B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190A0A5B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_190A0BB34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190A0C024(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_190A0C14C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getCNDonationStoreClass_block_invoke(uint64_t a1)
{
  ContactsDonationLibrary();
  Class result = objc_getClass("CNDonationStore");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getCNDonationStoreClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    __getCNDonationStoreClass_block_invoke_cold_1();
    return (Class)ContactsDonationLibrary();
  }
  return result;
}

uint64_t ContactsDonationLibrary()
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  if (!ContactsDonationLibraryCore_frameworkLibrary)
  {
    v3[1] = MEMORY[0x1E4F143A8];
    v3[2] = 3221225472;
    v3[3] = __ContactsDonationLibraryCore_block_invoke;
    v3[4] = &__block_descriptor_40_e5_v8__0l;
    v3[5] = v3;
    long long v4 = xmmword_1E56B8CC8;
    uint64_t v5 = 0;
    ContactsDonationLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  uint64_t v0 = ContactsDonationLibraryCore_frameworkLibrary;
  uint64_t v1 = (void *)v3[0];
  if (!ContactsDonationLibraryCore_frameworkLibrary)
  {
    uint64_t v1 = (void *)abort_report_np();
    goto LABEL_7;
  }
  if (v3[0]) {
LABEL_7:
  }
    free(v1);
  return v0;
}

void sub_190A0DC54(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_190A0FF38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getIMNicknameProviderClass()
{
  uint64_t v3 = 0;
  long long v4 = &v3;
  uint64_t v5 = 0x2050000000;
  uint64_t v0 = (void *)getIMNicknameProviderClass_softClass;
  uint64_t v6 = getIMNicknameProviderClass_softClass;
  if (!getIMNicknameProviderClass_softClass)
  {
    IMCoreLibraryCore_0();
    v4[3] = (uint64_t)objc_getClass("IMNicknameProvider");
    getIMNicknameProviderClass_softClass = v4[3];
    uint64_t v0 = (void *)v4[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v3, 8);

  return v1;
}

void sub_190A124F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t IMCoreLibraryCore()
{
  if (!IMCoreLibraryCore_frameworkLibrary) {
    IMCoreLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  return IMCoreLibraryCore_frameworkLibrary;
}

uint64_t IMCoreLibraryCore_0()
{
  if (!IMCoreLibraryCore_frameworkLibrary_0) {
    IMCoreLibraryCore_frameworkLibrary_0 = _sl_dlopen();
  }
  return IMCoreLibraryCore_frameworkLibrary_0;
}

id getIMMeCardSharingStateControllerClass()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  uint64_t v0 = (void *)getIMMeCardSharingStateControllerClass_softClass;
  uint64_t v7 = getIMMeCardSharingStateControllerClass_softClass;
  if (!getIMMeCardSharingStateControllerClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getIMMeCardSharingStateControllerClass_block_invoke;
    v3[3] = &unk_1E56B45C0;
    v3[4] = &v4;
    __getIMMeCardSharingStateControllerClass_block_invoke((uint64_t)v3);
    uint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_190A12808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getIMMeCardSharingStateControllerClass_block_invoke(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!IMSharedUtilitiesLibraryCore_frameworkLibrary)
  {
    v4[1] = MEMORY[0x1E4F143A8];
    v4[2] = 3221225472;
    v4[3] = __IMSharedUtilitiesLibraryCore_block_invoke;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    v4[5] = v4;
    long long v5 = xmmword_1E56B8658;
    uint64_t v6 = 0;
    IMSharedUtilitiesLibraryCore_frameworkLibrary = _sl_dlopen();
    id v2 = (void *)v4[0];
    if (!IMSharedUtilitiesLibraryCore_frameworkLibrary)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("IMMeCardSharingStateController");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    id v2 = (void *)__getIMMeCardSharingStateControllerClass_block_invoke_cold_1();
LABEL_8:
    free(v2);
  }
  getIMMeCardSharingStateControllerClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_190A12BE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *__getIMNicknameCurrentSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  v5[0] = 0;
  if (!IMCoreLibraryCore_frameworkLibrary_1)
  {
    v5[1] = MEMORY[0x1E4F143A8];
    v5[2] = 3221225472;
    v5[3] = __IMCoreLibraryCore_block_invoke_1;
    v5[4] = &__block_descriptor_40_e5_v8__0l;
    v5[5] = v5;
    long long v6 = xmmword_1E56B88A0;
    uint64_t v7 = 0;
    IMCoreLibraryCore_frameworkLibrary_1 = _sl_dlopen();
    uint64_t v3 = (void *)v5[0];
    id v2 = (void *)IMCoreLibraryCore_frameworkLibrary_1;
    if (IMCoreLibraryCore_frameworkLibrary_1)
    {
      if (!v5[0]) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v3 = (void *)abort_report_np();
    }
    free(v3);
    goto LABEL_5;
  }
  id v2 = (void *)IMCoreLibraryCore_frameworkLibrary_1;
LABEL_5:
  Class result = dlsym(v2, "IMNicknameCurrent");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getIMNicknameCurrentSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t kCTFontAttributeNameFunction()
{
  return constantkCTFontAttributeName;
}

uint64_t initkCTFontAttributeName()
{
  if (LoadCoreText_loadPredicate != -1) {
    dispatch_once(&LoadCoreText_loadPredicate, &__block_literal_global_154);
  }
  uint64_t result = *(void *)dlsym((void *)LoadCoreText_frameworkLibrary, "kCTFontAttributeName");
  constantkCTFontAttributeName = result;
  getkCTFontAttributeName = kCTFontAttributeNameFunction;
  return result;
}

id TUSenderIdentityFunction()
{
  return (id)classTUSenderIdentity;
}

id TUSenderIdentityFunction_0()
{
  return (id)classTUSenderIdentity_0;
}

id PABridgedTCCIdentityFunction()
{
  return (id)classPABridgedTCCIdentity;
}

Class initTUSenderIdentity()
{
  if (LoadTelephonyUtilities_loadPredicate != -1) {
    dispatch_once(&LoadTelephonyUtilities_loadPredicate, &__block_literal_global_355);
  }
  Class result = objc_getClass("TUSenderIdentity");
  classTUSenderIdentity = (uint64_t)result;
  getTUSenderIdentityClass = (uint64_t (*)())TUSenderIdentityFunction;
  return result;
}

Class initTUSenderIdentity_0()
{
  if (LoadTelephonyUtilities_loadPredicate_0 != -1) {
    dispatch_once(&LoadTelephonyUtilities_loadPredicate_0, &__block_literal_global_479);
  }
  Class result = objc_getClass("TUSenderIdentity");
  classTUSenderIdentity_0 = (uint64_t)result;
  getTUSenderIdentityClass_0 = (uint64_t (*)())TUSenderIdentityFunction_0;
  return result;
}

Class initPABridgedTCCIdentity()
{
  if (LoadPrivacyAccounting_loadPredicate != -1) {
    dispatch_once(&LoadPrivacyAccounting_loadPredicate, &__block_literal_global_475);
  }
  Class result = objc_getClass("PABridgedTCCIdentity");
  classPABridgedTCCIdentity = (uint64_t)result;
  getPABridgedTCCIdentityClass = (uint64_t (*)())PABridgedTCCIdentityFunction;
  return result;
}

void sub_190A1AB9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_190A1F8F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
}

void __CNContactKeyVectorPropertyKeysToIndicesByPointer_block_invoke()
{
  CFDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, 0, 0);
  id v1 = +[CN allContactProperties];
  v2[0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = __CNContactKeyVectorPropertyKeysToIndicesByPointer_block_invoke_2;
  v2[3] = &__block_descriptor_40_e38_v32__0__CNPropertyDescription_8Q16_B24l;
  v2[4] = Mutable;
  [v1 enumerateObjectsUsingBlock:v2];
  CNContactKeyVectorPropertyKeysToIndicesByPointer_map = (uint64_t)CFDictionaryCreateCopy(0, Mutable);
  CFRelease(Mutable);
}

void sub_190A20848(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v12 - 120), 8);
  _Unwind_Resume(a1);
}

void sub_190A20BF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
  _Block_object_dispose(&a32, 8);
  _Block_object_dispose(&a36, 8);
  _Block_object_dispose((const void *)(v36 - 216), 8);
  _Block_object_dispose((const void *)(v36 - 184), 8);
  _Block_object_dispose((const void *)(v36 - 136), 8);
  _Unwind_Resume(a1);
}

void ensureFetchRequestHasKeyboardState(void *a1, void *a2)
{
  id v6 = a1;
  id v3 = a2;
  uint64_t v4 = [v6 keyboardState];

  if (!v4)
  {
    long long v5 = objc_msgSend(NSNumber, "numberWithInteger:", objc_msgSend(v3, "keyboardState"));
    [v6 setKeyboardState:v5];
  }
}

void sub_190A21000(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __comparePhoneNumberStrings_block_invoke()
{
  comparePhoneNumberStrings_decimalDigits = [MEMORY[0x1E4F28B88] characterSetWithCharactersInString:@"0123456789"];

  return MEMORY[0x1F41817F8]();
}

uint64_t __comparePhoneNumberStrings_block_invoke_2()
{
  comparePhoneNumberStrings_extCharacters = [MEMORY[0x1E4F28B88] characterSetWithCharactersInString:@"ext"];

  return MEMORY[0x1F41817F8]();
}

uint64_t __nextValidChar_block_invoke()
{
  nextValidChar_charactersToSkip = [MEMORY[0x1E4F28B88] characterSetWithCharactersInString:@"+() - "];

  return MEMORY[0x1F41817F8]();
}

void sub_190A2144C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __LoadTelephonyUtilities_block_invoke()
{
  LoadTelephonyUtilities_frameworkLibrary = (uint64_t)dlopen("/System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities", 1);
  if (!LoadTelephonyUtilities_frameworkLibrary && os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR)) {
    __LoadTelephonyUtilities_block_invoke_cold_1();
  }
}

void __LoadTelephonyUtilities_block_invoke_0()
{
  LoadTelephonyUtilities_frameworkLibrary_0 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities", 1);
  if (!LoadTelephonyUtilities_frameworkLibrary_0 && os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR)) {
    __LoadTelephonyUtilities_block_invoke_cold_1_0();
  }
}

void __LoadPrivacyAccounting_block_invoke()
{
  LoadPrivacyAccounting_frameworkLibrary = (uint64_t)dlopen("/System/Library/PrivateFrameworks/PrivacyAccounting.framework/PrivacyAccounting", 1);
  if (!LoadPrivacyAccounting_frameworkLibrary && os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR)) {
    __LoadPrivacyAccounting_block_invoke_cold_1();
  }
}

__CFData *CNImageUtilsCroppedImageDataFromFullSizeImageData(void *a1, void *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  uint64_t v64 = *MEMORY[0x1E4F143B8];
  CFDataRef v11 = a1;
  CFDataRef v12 = v11;
  if (!v11)
  {
LABEL_28:
    v22 = 0;
    goto LABEL_29;
  }
  uint64_t v13 = CGImageSourceCreateWithData(v11, 0);
  if (!v13)
  {
    v67.origin.x = a3;
    v67.origin.y = a4;
    v67.size.width = a5;
    v67.size.height = a6;
    CGRectIsEmpty(v67);
    v23 = +[CNContactsLoggerProvider defaultProvider];
    v24 = [v23 imageUtilitiesLogger];
    v25 = [v24 log];

    if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
      CNImageUtilsCroppedImageDataFromFullSizeImageData_cold_1(v25);
    }
    goto LABEL_25;
  }
  uint64_t v14 = v13;
  CFDictionaryRef v15 = CGImageSourceCopyPropertiesAtIndex(v13, 0, 0);
  uint64_t v16 = [(__CFDictionary *)v15 objectForKeyedSubscript:*MEMORY[0x1E4F2FD00]];
  [v16 doubleValue];
  double v18 = v17;

  v19 = [(__CFDictionary *)v15 objectForKeyedSubscript:*MEMORY[0x1E4F2FCE8]];
  [v19 doubleValue];
  double v21 = v20;

  v66.origin.x = a3;
  v66.origin.y = a4;
  v66.size.width = a5;
  v66.size.height = a6;
  if (CGRectIsEmpty(v66) && vabdd_f64(v18, v21) <= 1.0)
  {
    CFRelease(v14);
    v22 = v12;
    goto LABEL_29;
  }
  ImageAtIndex = CGImageSourceCreateImageAtIndex(v14, 0, 0);
  CFRelease(v14);
  if (!ImageAtIndex)
  {
    v45 = +[CNContactsLoggerProvider defaultProvider];
    v46 = [v45 imageUtilitiesLogger];
    v25 = [v46 log];

    if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
      CNImageUtilsCroppedImageDataFromFullSizeImageData_cold_2(v25);
    }
    goto LABEL_25;
  }
  v68.origin.x = a3;
  v68.origin.y = a4;
  v68.size.width = a5;
  v68.size.height = a6;
  if (CGRectIsEmpty(v68))
  {
    objc_msgSend(MEMORY[0x1E4F5A420], "centeredSquareCropRectInRect:", 0.0, 0.0, v18, v21);
    a3 = v27;
    a4 = v28;
    a5 = v29;
    a6 = v30;
  }
  if ((objc_msgSend(MEMORY[0x1E4F5A420], "cropRect:fitsWithinSize:", a3, a4, a5, a6, v18, v21) & 1) == 0)
  {
    v31 = +[CNContactsLoggerProvider defaultProvider];
    v32 = [v31 imageUtilitiesLogger];
    v33 = [v32 log];

    if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
    {
      int v52 = 134219264;
      CGFloat v53 = a3;
      __int16 v54 = 2048;
      CGFloat v55 = a4;
      __int16 v56 = 2048;
      CGFloat v57 = a5;
      __int16 v58 = 2048;
      CGFloat v59 = a6;
      __int16 v60 = 2048;
      double v61 = v18;
      __int16 v62 = 2048;
      double v63 = v21;
      _os_log_error_impl(&dword_1909E3000, v33, OS_LOG_TYPE_ERROR, "[LikenessResolver] Attempting to crop image with cropRect (%.2f, %.2f, %.2f, %.2f) extending beyond image of size (%.2f x %.2f). Displaying with a centered square cropRect instead.", (uint8_t *)&v52, 0x3Eu);
    }

    objc_msgSend(MEMORY[0x1E4F5A420], "centeredSquareCropRectInRect:", 0.0, 0.0, v18, v21);
    a3 = v34;
    a4 = v35;
    a5 = v36;
    a6 = v37;
  }
  v38 = +[CNContactsLoggerProvider defaultProvider];
  v39 = [v38 imageUtilitiesLogger];
  v40 = [v39 log];

  if (os_log_type_enabled(v40, OS_LOG_TYPE_DEBUG))
  {
    int v52 = 134219264;
    CGFloat v53 = a3;
    __int16 v54 = 2048;
    CGFloat v55 = a4;
    __int16 v56 = 2048;
    CGFloat v57 = a5;
    __int16 v58 = 2048;
    CGFloat v59 = a6;
    __int16 v60 = 2048;
    double v61 = v18;
    __int16 v62 = 2048;
    double v63 = v21;
    _os_log_debug_impl(&dword_1909E3000, v40, OS_LOG_TYPE_DEBUG, "[LikenessResolver] Taking rect (%f, %f, %f, %f) within image of size %.2f x %.2f", (uint8_t *)&v52, 0x3Eu);
  }

  v69.origin.x = a3;
  v69.origin.y = a4;
  v69.size.width = a5;
  v69.size.height = a6;
  v41 = CGImageCreateWithImageInRect(ImageAtIndex, v69);
  CGImageRelease(ImageAtIndex);
  if (!v41)
  {
    v47 = +[CNContactsLoggerProvider defaultProvider];
    v48 = [v47 imageUtilitiesLogger];
    v25 = [v48 log];

    if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
    {
      int v52 = 134219264;
      CGFloat v53 = a3;
      __int16 v54 = 2048;
      CGFloat v55 = a4;
      __int16 v56 = 2048;
      CGFloat v57 = a5;
      __int16 v58 = 2048;
      CGFloat v59 = a6;
      __int16 v60 = 2048;
      double v61 = v18;
      __int16 v62 = 2048;
      double v63 = v21;
      _os_log_error_impl(&dword_1909E3000, v25, OS_LOG_TYPE_ERROR, "[LikenessResolver] can't create CROPPED image! With cropRect (%.2f, %.2f, %.2f, %.2f) and image of size %.2f x %.2f)", (uint8_t *)&v52, 0x3Eu);
    }
LABEL_25:

    v49 = [MEMORY[0x1E4F28C58] errorWithDomain:@"CNErrorDomain" code:302 userInfo:0];
    v50 = v49;
    if (a2) {
      *a2 = v49;
    }

    goto LABEL_28;
  }
  v22 = (__CFData *)objc_opt_new();
  CGImageDestinationRef v42 = CGImageDestinationCreateWithData(v22, @"public.jpeg", 1uLL, 0);
  if (v42)
  {
    v43 = v42;
    v44 = [MEMORY[0x1E4F1CA60] dictionary];
    [v44 setObject:&unk_1EE089668 forKeyedSubscript:*MEMORY[0x1E4F2F430]];
    CGImageDestinationAddImage(v43, v41, (CFDictionaryRef)v44);
    CGImageDestinationFinalize(v43);
    CFRelease(v43);
  }
  CGImageRelease(v41);
LABEL_29:

  return v22;
}

void __CNContactKeyVectorBitBucketsForAllProperties_block_invoke()
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = +[CN allContactProperties];
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  uint64_t v1 = [v0 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = *(void *)v8;
    do
    {
      uint64_t v4 = 0;
      do
      {
        if (*(void *)v8 != v3) {
          objc_enumerationMutation(v0);
        }
        id v5 = [*(id *)(*((void *)&v7 + 1) + 8 * v4) key];
        if (v5)
        {
          if (CNContactKeyVectorPropertyKeysToIndicesByPointer_onceToken != -1) {
            dispatch_once(&CNContactKeyVectorPropertyKeysToIndicesByPointer_onceToken, &__block_literal_global_140_0);
          }
          Value = CFDictionaryGetValue((CFDictionaryRef)CNContactKeyVectorPropertyKeysToIndicesByPointer_map, v5);
          if (Value) {
            goto LABEL_13;
          }
          if (CNContactKeyVectorPropertyKeysToIndicesByValue_onceToken != -1) {
            dispatch_once(&CNContactKeyVectorPropertyKeysToIndicesByValue_onceToken, &__block_literal_global_144);
          }
          Value = CFDictionaryGetValue((CFDictionaryRef)CNContactKeyVectorPropertyKeysToIndicesByValue_map, v5);
          if (Value) {
LABEL_13:
          }
            *(void *)((char *)&CNContactKeyVectorBitBucketsForAllProperties_referenceBuckets
                      + ((((unint64_t)Value - 1) >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << ~(Value
                                                                                                 - 1);
        }

        ++v4;
      }
      while (v2 != v4);
      uint64_t v2 = [v0 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v2);
  }
}

void sub_190A2233C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190A22538(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_190A23228(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_3_0(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

void OUTLINED_FUNCTION_2(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void OUTLINED_FUNCTION_2_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

uint64_t OUTLINED_FUNCTION_2_1()
{
  return objc_opt_class();
}

uint64_t initCPSharedResourcesDirectory()
{
  if (LoadAppSupport_loadPredicate_0 != -1) {
    dispatch_once(&LoadAppSupport_loadPredicate_0, &__block_literal_global_143_1);
  }
  uint64_t v0 = (uint64_t (*)())dlsym((void *)LoadAppSupport_frameworkLibrary_0, "CPSharedResourcesDirectory");
  softLinkCPSharedResourcesDirectory = v0;

  return v0();
}

void __LoadCoreText_block_invoke()
{
  LoadCoreText_frameworkLibrary = (uint64_t)dlopen("/System/Library/Frameworks/CoreText.framework/CoreText", 1);
  if (!LoadCoreText_frameworkLibrary && os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR)) {
    __LoadCoreText_block_invoke_cold_1();
  }
}

void __LoadAppSupport_block_invoke()
{
  LoadAppSupport_frameworkLibrary = (uint64_t)dlopen("/System/Library/PrivateFrameworks/AppSupport.framework/AppSupport", 1);
  if (!LoadAppSupport_frameworkLibrary && os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR)) {
    __LoadAppSupport_block_invoke_cold_1();
  }
}

void __LoadAppSupport_block_invoke_0()
{
  LoadAppSupport_frameworkLibrary_0 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/AppSupport.framework/AppSupport", 1);
  if (!LoadAppSupport_frameworkLibrary_0 && os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR)) {
    __LoadAppSupport_block_invoke_cold_1();
  }
}

void sub_190A24050(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __CNContactKeyVectorPropertyKeysToIndicesByValue_block_invoke()
{
  CFDictionaryRef Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x1E4F1D048], 0);
  uint64_t v1 = +[CN allContactProperties];
  v2[0] = MEMORY[0x1E4F143A8];
  v2[1] = 3221225472;
  v2[2] = __CNContactKeyVectorPropertyKeysToIndicesByValue_block_invoke_2;
  v2[3] = &__block_descriptor_40_e38_v32__0__CNPropertyDescription_8Q16_B24l;
  v2[4] = Mutable;
  [v1 enumerateObjectsUsingBlock:v2];
  CNContactKeyVectorPropertyKeysToIndicesByValue_map = (uint64_t)CFDictionaryCreateCopy(0, Mutable);
  CFRelease(Mutable);
}

void sub_190A257F0(_Unwind_Exception *a1)
{
}

void sub_190A25E34(_Unwind_Exception *a1)
{
}

void sub_190A26284(_Unwind_Exception *a1)
{
}

void sub_190A26610(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_190A277F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_190A27B74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a33, 8);
  _Block_object_dispose((const void *)(v33 - 160), 8);
  _Block_object_dispose((const void *)(v33 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_190A28EAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

Class initCSSearchableIndex()
{
  if (LoadCoreSpotlight_loadPredicate != -1) {
    dispatch_once(&LoadCoreSpotlight_loadPredicate, &__block_literal_global_107);
  }
  Class result = objc_getClass("CSSearchableIndex");
  classCSSearchableIndex = (uint64_t)result;
  getCSSearchableIndexClass = (uint64_t (*)())CSSearchableIndexFunction;
  return result;
}

id CSSearchableIndexFunction()
{
  return (id)classCSSearchableIndex;
}

void __LoadCoreSpotlight_block_invoke()
{
  LoadCoreSpotlight_frameworkLibrary = (uint64_t)dlopen("/System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight", 1);
  if (!LoadCoreSpotlight_frameworkLibrary && os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR)) {
    __LoadCoreSpotlight_block_invoke_cold_1();
  }
}

id initMDItemUniqueIdentifier()
{
  if (LoadCoreSpotlight_loadPredicate != -1) {
    dispatch_once(&LoadCoreSpotlight_loadPredicate, &__block_literal_global_107);
  }
  uint64_t v0 = (id *)dlsym((void *)LoadCoreSpotlight_frameworkLibrary, "MDItemUniqueIdentifier");
  objc_storeStrong((id *)&constantMDItemUniqueIdentifier, *v0);
  getMDItemUniqueIdentifier = (uint64_t (*)())MDItemUniqueIdentifierFunction;
  uint64_t v1 = (void *)constantMDItemUniqueIdentifier;

  return v1;
}

id MDItemUniqueIdentifierFunction()
{
  return (id)constantMDItemUniqueIdentifier;
}

id initMDItemIndexOID()
{
  if (LoadCoreSpotlight_loadPredicate != -1) {
    dispatch_once(&LoadCoreSpotlight_loadPredicate, &__block_literal_global_107);
  }
  uint64_t v0 = (id *)dlsym((void *)LoadCoreSpotlight_frameworkLibrary, "MDItemIndexOID");
  objc_storeStrong((id *)&constantMDItemIndexOID, *v0);
  getMDItemIndexOID = (uint64_t (*)())MDItemIndexOIDFunction;
  uint64_t v1 = (void *)constantMDItemIndexOID;

  return v1;
}

id MDItemIndexOIDFunction()
{
  return (id)constantMDItemIndexOID;
}

id initMDItemDisplayName()
{
  if (LoadCoreSpotlight_loadPredicate != -1) {
    dispatch_once(&LoadCoreSpotlight_loadPredicate, &__block_literal_global_107);
  }
  uint64_t v0 = (id *)dlsym((void *)LoadCoreSpotlight_frameworkLibrary, "MDItemDisplayName");
  objc_storeStrong((id *)&constantMDItemDisplayName, *v0);
  getMDItemDisplayName = (uint64_t (*)())MDItemDisplayNameFunction;
  uint64_t v1 = (void *)constantMDItemDisplayName;

  return v1;
}

id MDItemDisplayNameFunction()
{
  return (id)constantMDItemDisplayName;
}

void OUTLINED_FUNCTION_0(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_190A3108C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_190A3249C(_Unwind_Exception *exc_buf, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55)
{
  if (a2)
  {
    objc_begin_catch(exc_buf);
    JUMPOUT(0x190A323A4);
  }
  _Unwind_Resume(exc_buf);
}

uint64_t __CNGuardOSLog_block_invoke()
{
  CNGuardOSLog_cn_once_object_0 = (uint64_t)os_log_create("com.apple.contacts", "api");

  return MEMORY[0x1F41817F8]();
}

void OUTLINED_FUNCTION_1_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

id sMeIdentifiersEither_block_invoke(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = (void *)MEMORY[0x1E4F5A3B8];
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = sMeIdentifiersEither_block_invoke_2;
  v7[3] = &unk_1E56B4188;
  id v8 = v2;
  id v4 = v2;
  id v5 = [v3 eitherWithBlock:v7];

  return v5;
}

uint64_t sMeIdentifiersEither_block_invoke_2(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) meContactIdentifiers:a2];
}

void sub_190A372F0(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
  {
    objc_begin_catch(exception_object);
    JUMPOUT(0x190A37250);
  }
  _Unwind_Resume(exception_object);
}

void sub_190A3785C(_Unwind_Exception *a1)
{
}

void sub_190A3A284(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_190A3B3A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va1, a7);
  va_start(va, a7);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_190A3B76C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va1, a7);
  va_start(va, a7);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_190A3D36C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __CNGuardOSLog_block_invoke_0()
{
  CNGuardOSLog_cn_once_object_0_0 = (uint64_t)os_log_create("com.apple.contacts", "api");

  return MEMORY[0x1F41817F8]();
}

Class initCoreTelephonyClient()
{
  if (LoadCoreTelephony_loadPredicate != -1) {
    dispatch_once(&LoadCoreTelephony_loadPredicate, &__block_literal_global_363);
  }
  Class result = objc_getClass("CoreTelephonyClient");
  classCoreTelephonyClient = (uint64_t)result;
  getCoreTelephonyClientClass = (uint64_t (*)())CoreTelephonyClientFunction;
  return result;
}

id CoreTelephonyClientFunction()
{
  return (id)classCoreTelephonyClient;
}

void __LoadCoreTelephony_block_invoke()
{
  LoadCoreTelephony_frameworkLibrary = (uint64_t)dlopen("/System/Library/Frameworks/CoreTelephony.framework/CoreTelephony", 1);
  if (!LoadCoreTelephony_frameworkLibrary && os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR)) {
    __LoadCoreTelephony_block_invoke_cold_1();
  }
}

Class initTUCallProviderManager()
{
  if (LoadTelephonyUtilities_loadPredicate != -1) {
    dispatch_once(&LoadTelephonyUtilities_loadPredicate, &__block_literal_global_355);
  }
  Class result = objc_getClass("TUCallProviderManager");
  classTUCallProviderManager = (uint64_t)result;
  getTUCallProviderManagerClass = (uint64_t (*)())TUCallProviderManagerFunction;
  return result;
}

id TUCallProviderManagerFunction()
{
  return (id)classTUCallProviderManager;
}

Class initCHManager()
{
  if (LoadCallHistory_loadPredicate != -1) {
    dispatch_once(&LoadCallHistory_loadPredicate, &__block_literal_global_368);
  }
  Class result = objc_getClass("CHManager");
  classCHManager = (uint64_t)result;
  getCHManagerClass = (uint64_t (*)())CHManagerFunction;
  return result;
}

id CHManagerFunction()
{
  return (id)classCHManager;
}

void __LoadCallHistory_block_invoke()
{
  LoadCallHistory_frameworkLibrary = (uint64_t)dlopen("/System/Library/PrivateFrameworks/CallHistory.framework/CallHistory", 1);
  if (!LoadCallHistory_frameworkLibrary && os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR)) {
    __LoadCallHistory_block_invoke_cold_1();
  }
}

uint64_t getIMSPIGetMostRecentIMEventForContactHandlesAndLocalLabelIDsSymbolLoc()
{
  uint64_t v3 = 0;
  id v4 = &v3;
  uint64_t v5 = 0x2020000000;
  uint64_t v0 = getIMSPIGetMostRecentIMEventForContactHandlesAndLocalLabelIDsSymbolLoc_ptr;
  uint64_t v6 = getIMSPIGetMostRecentIMEventForContactHandlesAndLocalLabelIDsSymbolLoc_ptr;
  if (!getIMSPIGetMostRecentIMEventForContactHandlesAndLocalLabelIDsSymbolLoc_ptr)
  {
    uint64_t v1 = (void *)IMCoreLibrary();
    v4[3] = (uint64_t)dlsym(v1, "IMSPIGetMostRecentIMEventForContactHandlesAndLocalLabelIDs");
    getIMSPIGetMostRecentIMEventForContactHandlesAndLocalLabelIDsSymbolLoc_ptr = v4[3];
    uint64_t v0 = v4[3];
  }
  _Block_object_dispose(&v3, 8);
  return v0;
}

void sub_190A3DF20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __IMCoreLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  IMCoreLibraryCore_frameworkLibrary = result;
  return result;
}

void *__getIMSPIGetMostRecentIMEventForContactHandlesAndLocalLabelIDsSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = (void *)IMCoreLibrary();
  uint64_t result = dlsym(v2, "IMSPIGetMostRecentIMEventForContactHandlesAndLocalLabelIDs");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getIMSPIGetMostRecentIMEventForContactHandlesAndLocalLabelIDsSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8)
                                                                                         + 24);
  return result;
}

uint64_t IMCoreLibrary()
{
  uint64_t v0 = IMCoreLibraryCore();
  if (!v0)
  {
    id v2 = (void *)abort_report_np();
    free(v2);
  }
  return v0;
}

Class initTUCallHistoryManager()
{
  if (LoadTelephonyUtilities_loadPredicate != -1) {
    dispatch_once(&LoadTelephonyUtilities_loadPredicate, &__block_literal_global_355);
  }
  Class result = objc_getClass("TUCallHistoryManager");
  classTUCallHistoryManager = (uint64_t)result;
  getTUCallHistoryManagerClass = (uint64_t (*)())TUCallHistoryManagerFunction;
  return result;
}

id TUCallHistoryManagerFunction()
{
  return (id)classTUCallHistoryManager;
}

uint64_t getIMSPIRemapChatsWithLastAddressedLabelIDToNewLabelIDSymbolLoc()
{
  uint64_t v3 = 0;
  id v4 = &v3;
  uint64_t v5 = 0x2020000000;
  uint64_t v0 = getIMSPIRemapChatsWithLastAddressedLabelIDToNewLabelIDSymbolLoc_ptr;
  uint64_t v6 = getIMSPIRemapChatsWithLastAddressedLabelIDToNewLabelIDSymbolLoc_ptr;
  if (!getIMSPIRemapChatsWithLastAddressedLabelIDToNewLabelIDSymbolLoc_ptr)
  {
    uint64_t v1 = (void *)IMCoreLibrary();
    v4[3] = (uint64_t)dlsym(v1, "IMSPIRemapChatsWithLastAddressedLabelIDToNewLabelID");
    getIMSPIRemapChatsWithLastAddressedLabelIDToNewLabelIDSymbolLoc_ptr = v4[3];
    uint64_t v0 = v4[3];
  }
  _Block_object_dispose(&v3, 8);
  return v0;
}

void sub_190A3E1A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getIMSPIRemapChatsWithLastAddressedLabelIDToNewLabelIDSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = (void *)IMCoreLibrary();
  Class result = dlsym(v2, "IMSPIRemapChatsWithLastAddressedLabelIDToNewLabelID");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getIMSPIRemapChatsWithLastAddressedLabelIDToNewLabelIDSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32)
                                                                                              + 8)
                                                                                  + 24);
  return result;
}

Class initTUHandle()
{
  if (LoadTelephonyUtilities_loadPredicate != -1) {
    dispatch_once(&LoadTelephonyUtilities_loadPredicate, &__block_literal_global_355);
  }
  Class result = objc_getClass("TUHandle");
  classTUHandle = (uint64_t)result;
  getTUHandleClass = (uint64_t (*)())TUHandleFunction;
  return result;
}

id TUHandleFunction()
{
  return (id)classTUHandle;
}

void OUTLINED_FUNCTION_0_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 8u);
}

CNMutableContact *CLSPersonToCNContactTransform_block_invoke(uint64_t a1, void *a2)
{
  v14[1] = *MEMORY[0x1E4F143B8];
  id v2 = a2;
  uint64_t v3 = objc_alloc_init(CNMutableContact);
  id v4 = [v2 givenName];
  [(CNMutableContact *)v3 setGivenName:v4];

  uint64_t v5 = [v2 middleName];
  [(CNMutableContact *)v3 setMiddleName:v5];

  uint64_t v6 = [v2 familyName];
  [(CNMutableContact *)v3 setFamilyName:v6];

  long long v7 = [v2 phoneticGivenName];
  [(CNMutableContact *)v3 setPhoneticGivenName:v7];

  uint64_t v8 = [v2 phoneticMiddleName];
  [(CNMutableContact *)v3 setPhoneticMiddleName:v8];

  uint64_t v9 = [v2 phoneticFamilyName];
  [(CNMutableContact *)v3 setPhoneticFamilyName:v9];

  uint64_t v10 = [v2 emailAddress];

  if ((*(unsigned int (**)(void))(*MEMORY[0x1E4F5A2A0] + 16))())
  {
    uint64_t v11 = +[CNLabeledValue labeledValueWithLabel:@"_$!<Other>!$_" value:v10];
    v14[0] = v11;
    uint64_t v12 = [MEMORY[0x1E4F1C978] arrayWithObjects:v14 count:1];
    [(CNMutableContact *)v3 setEmailAddresses:v12];
  }

  return v3;
}

uint64_t CLSObjectIsPerson_block_invoke_2(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  return isKindOfClass & 1;
}

uint64_t CNLabeledValueToIdentifier_block_invoke(uint64_t a1, void *a2)
{
  return [a2 identifier];
}

uint64_t CNLabeledValueToValue_block_invoke_3(uint64_t a1, void *a2)
{
  return [a2 value];
}

uint64_t __CNGuardOSLog_block_invoke_1()
{
  CNGuardOSLog_cn_once_object_0_1 = (uint64_t)os_log_create("com.apple.contacts", "api");

  return MEMORY[0x1F41817F8]();
}

uint64_t __CNGuardOSLog_block_invoke_2()
{
  CNGuardOSLog_cn_once_object_0_2 = (uint64_t)os_log_create("com.apple.contacts", "api");

  return MEMORY[0x1F41817F8]();
}

void OUTLINED_FUNCTION_0_1(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, v9, OS_LOG_TYPE_FAULT, a4, &a9, 0xCu);
}

Class initAVTAvatarPhysicalizedPose()
{
  if (LoadAvatarKit_loadPredicate != -1) {
    dispatch_once(&LoadAvatarKit_loadPredicate, &__block_literal_global_56);
  }
  Class result = objc_getClass("AVTAvatarPhysicalizedPose");
  classAVTAvatarPhysicalizedPose = (uint64_t)result;
  getAVTAvatarPhysicalizedPoseClass = (uint64_t (*)())AVTAvatarPhysicalizedPoseFunction;
  return result;
}

id AVTAvatarPhysicalizedPoseFunction()
{
  return (id)classAVTAvatarPhysicalizedPose;
}

void __LoadAvatarKit_block_invoke()
{
  LoadAvatarKit_frameworkLibrary = (uint64_t)dlopen("/System/Library/PrivateFrameworks/AvatarKit.framework/AvatarKit", 1);
  if (!LoadAvatarKit_frameworkLibrary && os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR)) {
    __LoadAvatarKit_block_invoke_cold_1();
  }
}

id sPostalAddressTransform_block_invoke(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_opt_class();
  id v3 = v2;
  if (v3 && ((objc_opt_isKindOfClass() & 1) == 0 ? (v4 = 0) : (v4 = v3), id v5 = v4, v3, v5))
  {
    uint64_t v6 = objc_alloc_init(CNMutablePostalAddress);
    long long v7 = [v5 objectForKey:*MEMORY[0x1E4FB8B70]];
    [(CNPostalAddress *)v6 setStreet:v7];

    uint64_t v8 = [v5 objectForKey:*MEMORY[0x1E4FB8B80]];
    [(CNPostalAddress *)v6 setSubLocality:v8];

    uint64_t v9 = [v5 objectForKey:*MEMORY[0x1E4FB8B48]];
    [(CNPostalAddress *)v6 setCity:v9];

    uint64_t v10 = [v5 objectForKey:*MEMORY[0x1E4FB8B78]];
    [(CNPostalAddress *)v6 setSubAdministrativeArea:v10];

    uint64_t v11 = [v5 objectForKey:*MEMORY[0x1E4FB8B68]];
    [(CNPostalAddress *)v6 setState:v11];

    uint64_t v12 = [v5 objectForKey:*MEMORY[0x1E4FB8B60]];
    [(CNPostalAddress *)v6 setPostalCode:v12];

    uint64_t v13 = [v5 objectForKey:*MEMORY[0x1E4FB8B50]];
    [(CNPostalAddress *)v6 setCountry:v13];

    uint64_t v14 = [v5 objectForKey:*MEMORY[0x1E4FB8B58]];
    [(CNPostalAddress *)v6 setISOCountryCode:v14];

    uint64_t v15 = (void *)[(CNMutablePostalAddress *)v6 copy];
  }
  else
  {
    uint64_t v15 = [MEMORY[0x1E4F1CA98] null];
  }

  return v15;
}

id sSocialProfileTransform_block_invoke_2(uint64_t a1, void *a2)
{
  id v2 = (void *)[a2 mutableCopy];
  id v3 = +[CNVCardConstantsMapping vCardToCNSocialProfileConstantsMapping];
  id v4 = [v2 objectForKeyedSubscript:@"service"];
  id v5 = [v3 mappedConstant:v4];

  if (v5) {
    [v2 setObject:v5 forKeyedSubscript:@"service"];
  }
  uint64_t v6 = +[CN socialProfileFromDictionaryTransform];
  long long v7 = ((void (**)(void, void *))v6)[2](v6, v2);

  return v7;
}

id sInstantMessageAddressTransform_block_invoke_3(uint64_t a1, void *a2)
{
  id v2 = (void *)[a2 mutableCopy];
  id v3 = +[CNVCardConstantsMapping vCardToCNInstantMessageConstantsMapping];
  id v4 = [v2 objectForKeyedSubscript:@"service"];
  id v5 = [v3 mappedConstant:v4];

  if (v5) {
    [v2 setObject:v5 forKeyedSubscript:@"service"];
  }
  uint64_t v6 = +[CN instantMessageAddressFromDictionaryTransform];
  long long v7 = ((void (**)(void, void *))v6)[2](v6, v2);

  return v7;
}

Class initCSSearchableItemAttributeSet()
{
  if (LoadCoreSpotlight_loadPredicate_0 != -1) {
    dispatch_once(&LoadCoreSpotlight_loadPredicate_0, &__block_literal_global_17);
  }
  Class result = objc_getClass("CSSearchableItemAttributeSet");
  classCSSearchableItemAttributeSet = (uint64_t)result;
  getCSSearchableItemAttributeSetClass = (uint64_t (*)())CSSearchableItemAttributeSetFunction;
  return result;
}

id CSSearchableItemAttributeSetFunction()
{
  return (id)classCSSearchableItemAttributeSet;
}

void __LoadCoreSpotlight_block_invoke_0()
{
  LoadCoreSpotlight_frameworkLibrary_0 = (uint64_t)dlopen("/System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight", 1);
  if (!LoadCoreSpotlight_frameworkLibrary_0 && os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR)) {
    __LoadCoreSpotlight_block_invoke_cold_1();
  }
}

Class initCSSearchableItem()
{
  if (LoadCoreSpotlight_loadPredicate_0 != -1) {
    dispatch_once(&LoadCoreSpotlight_loadPredicate_0, &__block_literal_global_17);
  }
  Class result = objc_getClass("CSSearchableItem");
  classCSSearchableItem = (uint64_t)result;
  getCSSearchableItemClass = (uint64_t (*)())CSSearchableItemFunction;
  return result;
}

id CSSearchableItemFunction()
{
  return (id)classCSSearchableItem;
}

uint64_t CNLinkedOnOrAfter()
{
  if (__CNLinkedOnOrAfterSimulateLinkedBefore) {
    return 0;
  }
  else {
    return MEMORY[0x1F40D8DB8]();
  }
}

uint64_t CNLinkedOnOrAfterSimulateLinkedBefore(uint64_t result)
{
  __CNLinkedOnOrAfterSimulateLinkedBefore = result;
  return result;
}

void sub_190A4DC48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
}

void sub_190A4E2F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
}

void sub_190A50114(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va1, a7);
  va_start(va, a7);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_190A50384(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_190A507F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v9 - 112), 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_190A50B60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190A51020(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190A51184(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190A5A8D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190A5F748(_Unwind_Exception *a1)
{
}

Class initDADConnection()
{
  if (LoadDataAccessExpress_loadPredicate != -1) {
    dispatch_once(&LoadDataAccessExpress_loadPredicate, &__block_literal_global_89);
  }
  Class result = objc_getClass("DADConnection");
  classDADConnection = (uint64_t)result;
  getDADConnectionClass = (uint64_t (*)(void))DADConnectionFunction;
  return result;
}

id DADConnectionFunction()
{
  return (id)classDADConnection;
}

void __LoadDataAccessExpress_block_invoke()
{
  LoadDataAccessExpress_frameworkLibrary = (uint64_t)dlopen("/System/Library/PrivateFrameworks/DataAccessExpress.framework/DataAccessExpress", 1);
  if (!LoadDataAccessExpress_frameworkLibrary && os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR)) {
    __LoadDataAccessExpress_block_invoke_cold_1();
  }
}

id meCardSharingLogger()
{
  if (meCardSharingLogger_cn_once_token_0 != -1) {
    dispatch_once(&meCardSharingLogger_cn_once_token_0, &__block_literal_global_30);
  }
  uint64_t v0 = (void *)meCardSharingLogger_cn_once_object_0;

  return v0;
}

uint64_t __meCardSharingLogger_block_invoke()
{
  meCardSharingLogger_cn_once_object_0 = (uint64_t)os_log_create("com.apple.contacts", "contactimagesharing");

  return MEMORY[0x1F41817F8]();
}

void sub_190A68C50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a14, 8);
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 112), 8);
  _Unwind_Resume(a1);
}

BOOL sIsCurated_block_invoke_2(uint64_t a1, void *a2)
{
  id v2 = [a2 storeIdentifier];
  BOOL v3 = v2 == 0;

  return v3;
}

void sub_190A69BBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t ___contactTestMatchingLabeledValueID_block_invoke(uint64_t a1, uint64_t a2)
{
  BOOL v3 = [*(id *)(a1 + 32) CNValueForContact:a2];
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 3221225472;
  v6[2] = ___contactTestMatchingLabeledValueID_block_invoke_2;
  v6[3] = &unk_1E56B4F90;
  id v7 = *(id *)(a1 + 40);
  uint64_t v4 = objc_msgSend(v3, "_cn_any:", v6);

  return v4;
}

uint64_t ___contactTestMatchingLabeledValueID_block_invoke_2(uint64_t a1, void *a2)
{
  BOOL v3 = [a2 identifier];
  uint64_t v4 = [v3 isEqual:*(void *)(a1 + 32)];

  return v4;
}

uint64_t ___contactTestMatchingValue_block_invoke(uint64_t a1, uint64_t a2)
{
  BOOL v3 = [*(id *)(a1 + 32) CNValueForContact:a2];
  uint64_t v4 = [v3 isEqual:*(void *)(a1 + 40)];

  return v4;
}

id CNBridgeABCFResultAndErrorFromBlock(void *a1, uint64_t a2)
{
  CFTypeRef cf = 0;
  if (a1) {
    p_CFTypeRef cf = &cf;
  }
  else {
    p_CFTypeRef cf = 0;
  }
  id v5 = (void *)(*(uint64_t (**)(uint64_t, CFTypeRef *))(a2 + 16))(a2, p_cf);
  if (v5) {
    id v5 = (void *)CFAutorelease(v5);
  }
  id v6 = v5;
  id v7 = v6;
  if (a1)
  {
    if (!v6)
    {
      *a1 = +[CNErrorFactory errorForiOSABError:cf];
      if (cf) {
        CFRelease(cf);
      }
    }
  }

  return v7;
}

uint64_t CNBridgeBoolResultAndErrorFromBlock(void *a1, uint64_t a2)
{
  CFTypeRef cf = 0;
  if (a1) {
    p_CFTypeRef cf = &cf;
  }
  else {
    p_CFTypeRef cf = 0;
  }
  uint64_t v5 = (*(uint64_t (**)(uint64_t, CFTypeRef *))(a2 + 16))(a2, p_cf);
  uint64_t v6 = v5;
  if (a1)
  {
    if ((v5 & 1) == 0)
    {
      *a1 = +[CNErrorFactory errorForiOSABError:cf];
      if (cf) {
        CFRelease(cf);
      }
    }
  }
  return v6;
}

void sub_190A6BF80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190A6CC98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _block_invoke()
{
  BOOL v0 = ABRecordGetIntValue() != 0;
  int IntValue = ABRecordGetIntValue();
  if (IntValue) {
    int v2 = v0;
  }
  else {
    int v2 = 1;
  }
  uint64_t v3 = v2 ^ 1u;
  if (v0 && IntValue == 0) {
    return -1;
  }
  else {
    return v3;
  }
}

CFComparisonResult _block_invoke_2(int a1, ABRecordRef record, const void *a3)
{
  ABPropertyID v4 = *MEMORY[0x1E4F49A78];
  CFDateRef v5 = (const __CFDate *)ABRecordCopyValue(record, *MEMORY[0x1E4F49A78]);
  CFDateRef v6 = (const __CFDate *)ABRecordCopyValue(a3, v4);
  CFComparisonResult v7 = CFDateCompare(v5, v6, 0);
  if (v5) {
    CFRelease(v5);
  }
  if (v6) {
    CFRelease(v6);
  }
  return v7;
}

void __PreferencesChanged(uint64_t a1, void *a2)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  id v2 = a2;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  uint64_t v3 = [v2 observerCountPerKey];
  ABPropertyID v4 = [v3 allKeys];

  uint64_t v5 = [v4 countByEnumeratingWithState:&v21 objects:v26 count:16];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)v22;
    do
    {
      uint64_t v8 = 0;
      do
      {
        if (*(void *)v22 != v7) {
          objc_enumerationMutation(v4);
        }
        [v2 willChangeValueForKey:*(void *)(*((void *)&v21 + 1) + 8 * v8++)];
      }
      while (v6 != v8);
      uint64_t v6 = [v4 countByEnumeratingWithState:&v21 objects:v26 count:16];
    }
    while (v6);
  }

  [v2 flushCache];
  CFStringRef v9 = (const __CFString *)ABPeoplePickerPrefs();
  CFPreferencesAppSynchronize(v9);
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  uint64_t v10 = objc_msgSend(v2, "observerCountPerKey", 0);
  uint64_t v11 = [v10 allKeys];

  uint64_t v12 = [v11 countByEnumeratingWithState:&v17 objects:v25 count:16];
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = *(void *)v18;
    do
    {
      uint64_t v15 = 0;
      do
      {
        if (*(void *)v18 != v14) {
          objc_enumerationMutation(v11);
        }
        [v2 didChangeValueForKey:*(void *)(*((void *)&v17 + 1) + 8 * v15++)];
      }
      while (v13 != v15);
      uint64_t v13 = [v11 countByEnumeratingWithState:&v17 objects:v25 count:16];
    }
    while (v13);
  }

  uint64_t v16 = [MEMORY[0x1E4F28EB8] defaultCenter];
  [v16 postNotificationName:@"CNContactsUserDefaultsDidChangeNotification" object:v2];
}

Class initECEmailAddress()
{
  if (LoadEmailCore_loadPredicate != -1) {
    dispatch_once(&LoadEmailCore_loadPredicate, &__block_literal_global_36);
  }
  Class result = objc_getClass("ECEmailAddress");
  classECEmailAddress = (uint64_t)result;
  getECEmailAddressClass = (uint64_t (*)())ECEmailAddressFunction;
  return result;
}

id ECEmailAddressFunction()
{
  return (id)classECEmailAddress;
}

void __LoadEmailCore_block_invoke()
{
  LoadEmailCore_frameworkLibrary = (uint64_t)dlopen("/System/Library/PrivateFrameworks/EmailCore.framework/EmailCore", 1);
  if (!LoadEmailCore_frameworkLibrary && os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR)) {
    __LoadEmailCore_block_invoke_cold_1();
  }
}

void sub_190A76910(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_190A77410(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_190A776B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_190A77914(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 80), 8);
  _Unwind_Resume(a1);
}

CNAccount *sABCDContainerToCNAccount_block_invoke(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = [CNAccount alloc];
  ABPropertyID v4 = [v2 identifier];
  uint64_t v5 = [v2 identifier];

  uint64_t v6 = [v5 componentsSeparatedByString:@":"];
  uint64_t v7 = [v6 firstObject];
  uint64_t v8 = [(CNAccount *)v3 initWithIdentifier:v4 externalIdentifier:v7];

  return v8;
}

void sub_190A794B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getABSPublicABCNCompatibilityClass()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  BOOL v0 = (void *)getABSPublicABCNCompatibilityClass_softClass;
  uint64_t v7 = getABSPublicABCNCompatibilityClass_softClass;
  if (!getABSPublicABCNCompatibilityClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getABSPublicABCNCompatibilityClass_block_invoke;
    v3[3] = &unk_1E56B45C0;
    v3[4] = &v4;
    __getABSPublicABCNCompatibilityClass_block_invoke((uint64_t)v3);
    BOOL v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_190A79C8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getABSPublicABCNCompatibilityClass_block_invoke(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!AddressBookLibraryCore_frameworkLibrary)
  {
    v4[1] = MEMORY[0x1E4F143A8];
    v4[2] = 3221225472;
    v4[3] = __AddressBookLibraryCore_block_invoke;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    v4[5] = v4;
    long long v5 = xmmword_1E56B5650;
    uint64_t v6 = 0;
    AddressBookLibraryCore_frameworkLibrary = _sl_dlopen();
    id v2 = (void *)v4[0];
    if (!AddressBookLibraryCore_frameworkLibrary)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("ABSPublicABCNCompatibility");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    __getABSPublicABCNCompatibilityClass_block_invoke_cold_1();
LABEL_8:
    free(v2);
  }
  getABSPublicABCNCompatibilityClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __AddressBookLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  AddressBookLibraryCore_frameworkLibrary = result;
  return result;
}

uint64_t __CNGuardOSLog_block_invoke_3()
{
  CNGuardOSLog_cn_once_object_0_3 = (uint64_t)os_log_create("com.apple.contacts", "api");

  return MEMORY[0x1F41817F8]();
}

uint64_t sUsername_block_invoke(uint64_t a1, void *a2)
{
  return [a2 username];
}

void sub_190A8070C(_Unwind_Exception *a1)
{
}

void sub_190A8072C(void *a1)
{
}

void sub_190A81210(_Unwind_Exception *a1)
{
}

void sub_190A81234(void *a1)
{
}

void sub_190A815BC(void *a1)
{
}

void sub_190A81AAC(void *a1)
{
}

void sub_190A85F48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190A8885C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  _Block_object_dispose((const void *)(v33 - 160), 8);
  _Block_object_dispose(&a33, 8);
  _Unwind_Resume(a1);
}

void populateMatchInfoFromMap_block_invoke(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v6 = a2;
  id v7 = a3;
  uint64_t v8 = v7;
  if (v6)
  {
    v9[0] = MEMORY[0x1E4F143A8];
    v9[1] = 3221225472;
    v9[2] = populateMatchInfoFromMap_block_invoke_2;
    v9[3] = &unk_1E56B5AD0;
    id v10 = v7;
    id v11 = v6;
    [a4 enumerateObjectsUsingBlock:v9];
  }
}

void populateMatchInfoFromMap_block_invoke_2(uint64_t a1, void *a2)
{
  ABPropertyID v3 = *MEMORY[0x1E4F49BB8];
  id v4 = a2;
  id v11 = (id)ABRecordCopyValue(v4, v3);
  ABRecordID RecordID = ABRecordGetRecordID(v4);
  id v6 = NSMapGet(*(NSMapTable **)(a1 + 32), (const void *)RecordID);

  id v7 = [*(id *)(a1 + 40) objectForKey:v11];
  if (!v7)
  {
    id v7 = [MEMORY[0x1E4F1CA60] dictionary];
    [*(id *)(a1 + 40) setObject:v7 forKey:v11];
  }
  uint64_t v8 = *MEMORY[0x1E4F49870];
  uint64_t v9 = [v7 objectForKey:*MEMORY[0x1E4F49870]];
  if (v9)
  {
    id v10 = v9;
    [v9 unionSet:v6];
  }
  else
  {
    id v10 = (void *)[v6 mutableCopy];
    [v7 setObject:v10 forKey:v8];
  }
}

void sWarnIgnoredHandle_block_invoke_3(uint64_t a1, void *a2)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  id v2 = a2;
  ABPropertyID v3 = +[CNContact os_log];
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    int v4 = 138412290;
    id v5 = v2;
    _os_log_impl(&dword_1909E3000, v3, OS_LOG_TYPE_INFO, "Ignoring handle for batch fetch: %@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_190A89CE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190A89E04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190A89FC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190A8A414(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190A8A808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  uint64_t v19 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v11 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_190A8AAC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_190A8AD98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_190A8B134(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_190A8BB10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_190A8CD24(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_190A8D084(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_190A8D3DC(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_190A8E080(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190A9137C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_190A9318C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_190A93468(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_190A940A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190A943A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_190A949A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_190A94D88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190A950FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_190A956D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_190A95F60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190A961E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190A963A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190A96594(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190A96768(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190A96CD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_190A97D8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

BOOL sIsSourceEligible_block_invoke()
{
  int IntValue = ABRecordGetIntValue();
  return (ABRecordGetIntValue() & 0x1000000) == 0 && IntValue == 1;
}

void sub_190A9858C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_190A987BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190A988F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190A98B10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190A98D7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190A98FD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190A99270(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190A994CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190A996E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190A998C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190A99A80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190A99C90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190A99ED0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190A9A12C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190A9A63C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190A9A7EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190A9A97C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190A9AC78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t initCTFontCreateCopyWithSymbolicTraits(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  if (LoadCoreText_loadPredicate != -1) {
    dispatch_once(&LoadCoreText_loadPredicate, &__block_literal_global_154);
  }
  id v10 = (uint64_t (*)())dlsym((void *)LoadCoreText_frameworkLibrary, "CTFontCreateCopyWithSymbolicTraits");
  softLinkCTFontCreateCopyWithSymbolicTraits = v10;
  v11.n128_f64[0] = a5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))v10)(a1, a2, a3, a4, v11);
}

uint64_t initCTFontCreateUIFontForLanguage(uint64_t a1, uint64_t a2, double a3)
{
  if (LoadCoreText_loadPredicate != -1) {
    dispatch_once(&LoadCoreText_loadPredicate, &__block_literal_global_154);
  }
  uint64_t v6 = (uint64_t (*)())dlsym((void *)LoadCoreText_frameworkLibrary, "CTFontCreateUIFontForLanguage");
  softLinkCTFontCreateUIFontForLanguage = v6;
  v7.n128_f64[0] = a3;

  return ((uint64_t (*)(uint64_t, uint64_t, __n128))v6)(a1, a2, v7);
}

void sub_190A9ED5C(_Unwind_Exception *a1)
{
}

void sub_190A9ED80(void *a1)
{
}

id sTrustIfNonEmptyArray_block_invoke()
{
  int v0 = (*(uint64_t (**)(void))(*MEMORY[0x1E4F5A258] + 16))();
  uint64_t v1 = (void *)MEMORY[0x1E4F5A408];
  if (v0)
  {
    id v2 = +[CNErrorFactory errorWithCode:200 userInfo:0];
    ABPropertyID v3 = [v1 futureWithError:v2];
  }
  else
  {
    ABPropertyID v3 = [MEMORY[0x1E4F5A408] futureWithResult:&unk_1EE089320];
  }

  return v3;
}

uint64_t sContactHasData_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v2 = sContactHasData_block_invoke_cn_once_token_3;
  id v3 = a2;
  if (v2 != -1) {
    dispatch_once(&sContactHasData_block_invoke_cn_once_token_3, &__block_literal_global_54_0);
  }
  int v4 = [v3 isEqualIgnoringIdentifiers:sContactHasData_block_invoke_cn_once_object_3];

  return v4 ^ 1u;
}

uint64_t sContactHasData_block_invoke_2()
{
  sContactHasData_block_invoke_cn_once_object_3 = objc_alloc_init(CNContact);

  return MEMORY[0x1F41817F8]();
}

uint64_t sPairContactWithNoMatchInfo_block_invoke_3(uint64_t a1, uint64_t a2)
{
  return [MEMORY[0x1E4F5A490] pairWithFirst:a2 second:0];
}

void sub_190AA1BA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class initCSSearchQueryContext()
{
  if (LoadCoreSpotlight_loadPredicate_1 != -1) {
    dispatch_once(&LoadCoreSpotlight_loadPredicate_1, &__block_literal_global_67);
  }
  Class result = objc_getClass("CSSearchQueryContext");
  classCSSearchQueryContext = (uint64_t)result;
  getCSSearchQueryContextClass = (uint64_t (*)())CSSearchQueryContextFunction;
  return result;
}

id CSSearchQueryContextFunction()
{
  return (id)classCSSearchQueryContext;
}

void __LoadCoreSpotlight_block_invoke_1()
{
  LoadCoreSpotlight_frameworkLibrary_1 = (uint64_t)dlopen("/System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight", 1);
  if (!LoadCoreSpotlight_frameworkLibrary_1 && os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR)) {
    __LoadCoreSpotlight_block_invoke_cold_1();
  }
}

Class initCSSearchQuery()
{
  if (LoadCoreSpotlight_loadPredicate_1 != -1) {
    dispatch_once(&LoadCoreSpotlight_loadPredicate_1, &__block_literal_global_67);
  }
  Class result = objc_getClass("CSSearchQuery");
  classCSSearchQuery = (uint64_t)result;
  getCSSearchQueryClass = (uint64_t (*)())CSSearchQueryFunction;
  return result;
}

id CSSearchQueryFunction()
{
  return (id)classCSSearchQuery;
}

uint64_t sEmailHandle_block_invoke(uint64_t a1, void *a2)
{
  return [a2 value];
}

id sPhoneHandle_block_invoke_2(uint64_t a1, void *a2)
{
  uint64_t v2 = [a2 value];
  id v3 = [v2 formattedStringValue];

  return v3;
}

void sub_190AA6F14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_190AA71A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_190AA761C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_190AA796C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_190AA7CE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_190AA8098(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_190AA8328(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_190AA88A4(_Unwind_Exception *a1)
{
}

void sub_190AA88C4(void *a1)
{
}

void sub_190AA8DF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_190AA9070(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_190AA944C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_190AA9704(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_190AA9984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_190AA9BFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_190AA9E74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_190AAA4E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a21, 8);
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_190AAA924(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190AAAC38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190AAB0E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190AAB2F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190AAB5F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190AAB8E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_190AABB6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_190AABF94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_190AAC20C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_190AAC604(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_190AAF174(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va1, a8);
  va_start(va, a8);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_190AAFC44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190AB0120(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190AB0590(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190AB0AE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void CNChangesNotifierCFNotificationCenterCallback(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  __n128 v7 = (void *)MEMORY[0x192FD3A40]();
  id v8 = a2;
  if (([v8 forwardsSelfGeneratedDistributedSaveNotifications] & 1) != 0
    || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0)
    || ([(id)ABGetProcessDistributedNotificationIdentifier() isEqualToString:a4] & 1) == 0)
  {
    [v8 receiveExternalNotificationName:a3];
  }
}

Class initAVTAvatarRecordRendering()
{
  if (LoadAvatarPersistence_loadPredicate != -1) {
    dispatch_once(&LoadAvatarPersistence_loadPredicate, &__block_literal_global_115);
  }
  Class result = objc_getClass("AVTAvatarRecordRendering");
  classAVTAvatarRecordRendering = (uint64_t)result;
  getAVTAvatarRecordRenderingClass = (uint64_t (*)())AVTAvatarRecordRenderingFunction;
  return result;
}

id AVTAvatarRecordRenderingFunction()
{
  return (id)classAVTAvatarRecordRendering;
}

void __LoadAvatarPersistence_block_invoke()
{
  LoadAvatarPersistence_frameworkLibrary = (uint64_t)dlopen("/System/Library/PrivateFrameworks/AvatarPersistence.framework/AvatarPersistence", 1);
  if (!LoadAvatarPersistence_frameworkLibrary && os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR)) {
    __LoadAvatarPersistence_block_invoke_cold_1();
  }
}

Class initAVTAvatarRecordSerializer()
{
  if (LoadAvatarPersistence_loadPredicate != -1) {
    dispatch_once(&LoadAvatarPersistence_loadPredicate, &__block_literal_global_115);
  }
  Class result = objc_getClass("AVTAvatarRecordSerializer");
  classAVTAvatarRecordSerializer = (uint64_t)result;
  getAVTAvatarRecordSerializerClass = (uint64_t (*)())AVTAvatarRecordSerializerFunction;
  return result;
}

id AVTAvatarRecordSerializerFunction()
{
  return (id)classAVTAvatarRecordSerializer;
}

Class initAVTAvatarPhysicalizedPose_0()
{
  if (LoadAvatarKit_loadPredicate_0 != -1) {
    dispatch_once(&LoadAvatarKit_loadPredicate_0, &__block_literal_global_120);
  }
  Class result = objc_getClass("AVTAvatarPhysicalizedPose");
  classAVTAvatarPhysicalizedPose_0 = (uint64_t)result;
  getAVTAvatarPhysicalizedPoseClass_0 = (uint64_t (*)())AVTAvatarPhysicalizedPoseFunction_0;
  return result;
}

id AVTAvatarPhysicalizedPoseFunction_0()
{
  return (id)classAVTAvatarPhysicalizedPose_0;
}

void __LoadAvatarKit_block_invoke_0()
{
  LoadAvatarKit_frameworkLibrary_0 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/AvatarKit.framework/AvatarKit", 1);
  if (!LoadAvatarKit_frameworkLibrary_0 && os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR)) {
    __LoadAvatarKit_block_invoke_cold_1();
  }
}

id sPostalAddressTransform_block_invoke_0(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_opt_class();
  id v3 = v2;
  if (v3)
  {
    if (objc_opt_isKindOfClass()) {
      int v4 = v3;
    }
    else {
      int v4 = 0;
    }
    id v5 = v4;
  }
  else
  {
    id v5 = 0;
  }

  uint64_t v6 = [MEMORY[0x1E4F1CA60] dictionary];
  __n128 v7 = [v5 street];
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v7, *MEMORY[0x1E4FB8B70]);

  id v8 = [v5 subLocality];
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v8, *MEMORY[0x1E4FB8B80]);

  uint64_t v9 = [v5 city];
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v9, *MEMORY[0x1E4FB8B48]);

  uint64_t v10 = [v5 subAdministrativeArea];
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v10, *MEMORY[0x1E4FB8B78]);

  uint64_t v11 = [v5 state];
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v11, *MEMORY[0x1E4FB8B68]);

  uint64_t v12 = [v5 postalCode];
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v12, *MEMORY[0x1E4FB8B60]);

  uint64_t v13 = [v5 country];
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v13, *MEMORY[0x1E4FB8B50]);

  uint64_t v14 = [v5 ISOCountryCode];
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v14, *MEMORY[0x1E4FB8B58]);

  return v6;
}

id sActivityAlertKeyTransform_block_invoke_2(uint64_t a1, void *a2)
{
  id v2 = a2;
  if ([@"callAlert" isEqualToString:v2])
  {
    id v3 = (void *)*MEMORY[0x1E4FB89A0];
  }
  else if ([@"textAlert" isEqualToString:v2])
  {
    id v3 = (void *)*MEMORY[0x1E4FB89B8];
  }
  else
  {
    id v3 = v2;
  }
  id v4 = v3;

  return v4;
}

id sActivityAlertValueTransform_block_invoke_3(uint64_t a1, void *a2)
{
  id v2 = a2;
  id v3 = [MEMORY[0x1E4F1CA60] dictionary];
  id v4 = [v2 sound];
  objc_msgSend(v3, "_cn_setNonNilObject:forKey:", v4, *MEMORY[0x1E4FB89B0]);

  id v5 = [v2 vibration];
  objc_msgSend(v3, "_cn_setNonNilObject:forKey:", v5, *MEMORY[0x1E4FB89C0]);

  if ([v2 ignoreMute]) {
    objc_msgSend(v3, "_cn_setNonNilObject:forKey:", @"YES", *MEMORY[0x1E4FB89A8]);
  }
  uint64_t v6 = [v2 userInfo];
  if (v6) {
    [v3 addEntriesFromDictionary:v6];
  }

  return v3;
}

void sub_190AB9E40(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_190ABA814(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak(v2);
  objc_destroyWeak((id *)(v3 - 112));
  _Unwind_Resume(a1);
}

uint64_t __CNGuardOSLog_block_invoke_4()
{
  CNGuardOSLog_cn_once_object_0_4 = (uint64_t)os_log_create("com.apple.contacts", "api");

  return MEMORY[0x1F41817F8]();
}

Class initAVTStickerConfiguration()
{
  if (LoadAvatarKit_loadPredicate_1 != -1) {
    dispatch_once(&LoadAvatarKit_loadPredicate_1, &__block_literal_global_30);
  }
  Class result = objc_getClass("AVTStickerConfiguration");
  classAVTStickerConfiguration = (uint64_t)result;
  getAVTStickerConfigurationClass = (uint64_t (*)())AVTStickerConfigurationFunction;
  return result;
}

id AVTStickerConfigurationFunction()
{
  return (id)classAVTStickerConfiguration;
}

void __LoadAvatarKit_block_invoke_1()
{
  LoadAvatarKit_frameworkLibrary_1 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/AvatarKit.framework/AvatarKit", 1);
  if (!LoadAvatarKit_frameworkLibrary_1 && os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR)) {
    __LoadAvatarKit_block_invoke_cold_1();
  }
}

id initkAVTStickerPackPoses()
{
  if (LoadAvatarKit_loadPredicate_1 != -1) {
    dispatch_once(&LoadAvatarKit_loadPredicate_1, &__block_literal_global_30);
  }
  int v0 = (id *)dlsym((void *)LoadAvatarKit_frameworkLibrary_1, "kAVTStickerPackPoses");
  objc_storeStrong((id *)&constantkAVTStickerPackPoses, *v0);
  getkAVTStickerPackPoses = (uint64_t (*)())kAVTStickerPackPosesFunction;
  uint64_t v1 = (void *)constantkAVTStickerPackPoses;

  return v1;
}

id kAVTStickerPackPosesFunction()
{
  return (id)constantkAVTStickerPackPoses;
}

uint64_t initAVTUIShowPrereleaseStickerPack_once()
{
  if (LoadAvatarPersistence_loadPredicate_0 != -1) {
    dispatch_once(&LoadAvatarPersistence_loadPredicate_0, &__block_literal_global_35_3);
  }
  int v0 = (uint64_t (*)())dlsym((void *)LoadAvatarPersistence_frameworkLibrary_0, "AVTUIShowPrereleaseStickerPack_once");
  softLinkAVTUIShowPrereleaseStickerPack_once = v0;

  return v0();
}

void __LoadAvatarPersistence_block_invoke_0()
{
  LoadAvatarPersistence_frameworkLibrary_0 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/AvatarPersistence.framework/AvatarPersistence", 1);
  if (!LoadAvatarPersistence_frameworkLibrary_0 && os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR)) {
    __LoadAvatarPersistence_block_invoke_cold_1();
  }
}

id initkAVTStickerPackPosesPrerelease()
{
  if (LoadAvatarKit_loadPredicate_1 != -1) {
    dispatch_once(&LoadAvatarKit_loadPredicate_1, &__block_literal_global_30);
  }
  int v0 = (id *)dlsym((void *)LoadAvatarKit_frameworkLibrary_1, "kAVTStickerPackPosesPrerelease");
  objc_storeStrong((id *)&constantkAVTStickerPackPosesPrerelease, *v0);
  getkAVTStickerPackPosesPrerelease = (uint64_t (*)())kAVTStickerPackPosesPrereleaseFunction;
  uint64_t v1 = (void *)constantkAVTStickerPackPosesPrerelease;

  return v1;
}

id kAVTStickerPackPosesPrereleaseFunction()
{
  return (id)constantkAVTStickerPackPosesPrerelease;
}

Class initAVTPAvatarStore()
{
  if (LoadAvatarPersistence_loadPredicate_0 != -1) {
    dispatch_once(&LoadAvatarPersistence_loadPredicate_0, &__block_literal_global_35_3);
  }
  Class result = objc_getClass("AVTPAvatarStore");
  classAVTPAvatarStore = (uint64_t)result;
  getAVTPAvatarStoreClass = (uint64_t (*)())AVTPAvatarStoreFunction;
  return result;
}

id AVTPAvatarStoreFunction()
{
  return (id)classAVTPAvatarStore;
}

Class initAVTAvatarFetchRequest()
{
  if (LoadAvatarPersistence_loadPredicate_0 != -1) {
    dispatch_once(&LoadAvatarPersistence_loadPredicate_0, &__block_literal_global_35_3);
  }
  Class result = objc_getClass("AVTAvatarFetchRequest");
  classAVTAvatarFetchRequest = (uint64_t)result;
  getAVTAvatarFetchRequestClass = (uint64_t (*)())AVTAvatarFetchRequestFunction;
  return result;
}

id AVTAvatarFetchRequestFunction()
{
  return (id)classAVTAvatarFetchRequest;
}

void sub_190ABC7F8(_Unwind_Exception *a1)
{
}

void sub_190ABD040(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_190ABD2A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t __CNGuardOSLog_block_invoke_5()
{
  CNGuardOSLog_cn_once_object_0_5 = (uint64_t)os_log_create("com.apple.contacts", "api");

  return MEMORY[0x1F41817F8]();
}

void sub_190AC488C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190AC92F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sIsMultiValueContactProperty_block_invoke(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = +[CN contactPropertiesByKey];
  id v4 = [v3 objectForKeyedSubscript:v2];

  uint64_t v5 = [v4 isMultiValue];
  return v5;
}

void sub_190ACF3EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0_2(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 2u);
}

void sub_190AD0F2C(_Unwind_Exception *a1)
{
}

uint64_t _block_invoke_0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  id v4 = a2;
  uint64_t v5 = a3;
  uint64_t v6 = v5;
  if (v5) {
    uint64_t v5 = (void *)v5[4];
  }
  __n128 v7 = [v5 identifier];
  id v8 = [v4 identifier];
  char v9 = [v7 isEqual:v8];

  if (v9)
  {
    uint64_t v10 = 1;
  }
  else if (v6 && *((unsigned char *)v6 + 8) || ![v4 isUnified])
  {
    uint64_t v10 = 0;
  }
  else
  {
    long long v23 = 0u;
    long long v24 = 0u;
    long long v21 = 0u;
    long long v22 = 0u;
    uint64_t v11 = objc_msgSend(v4, "linkedContacts", 0);
    uint64_t v10 = [v11 countByEnumeratingWithState:&v21 objects:v25 count:16];
    if (v10)
    {
      uint64_t v12 = *(void *)v22;
      do
      {
        uint64_t v13 = 0;
        do
        {
          if (*(void *)v22 != v12) {
            objc_enumerationMutation(v11);
          }
          uint64_t v14 = *(void **)(*((void *)&v21 + 1) + 8 * v13);
          if (v6) {
            uint64_t v15 = (void *)v6[4];
          }
          else {
            uint64_t v15 = 0;
          }
          id v16 = v15;
          uint64_t v17 = [v16 identifier];
          uint64_t v18 = [v14 identifier];

          LOBYTE(v16) = [v17 isEqual:v18];
          if (v16)
          {
            uint64_t v10 = 1;
            goto LABEL_24;
          }
          ++v13;
        }
        while (v10 != v13);
        uint64_t v19 = [v11 countByEnumeratingWithState:&v21 objects:v25 count:16];
        uint64_t v10 = v19;
      }
      while (v19);
    }
LABEL_24:
  }
  return v10;
}

void sub_190AD15F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190AD1764(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190AD4AD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sPreferredForImage_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v4 = a3;
  int v5 = [a2 isPreferredForImage];
  int v6 = [v4 isPreferredForImage];

  if (v6 | v5 ^ 1) {
    return v6 & (v5 ^ 1u);
  }
  else {
    return -1;
  }
}

uint64_t CNContactToIdentifier_block_invoke_3(uint64_t a1, void *a2)
{
  return [a2 identifier];
}

uint64_t CNContactIsUnified_block_invoke_4(uint64_t a1, void *a2)
{
  return [a2 isUnified];
}

uint64_t __CNGuardOSLog_block_invoke_6()
{
  CNGuardOSLog_cn_once_object_0_6 = (uint64_t)os_log_create("com.apple.contacts", "api");

  return MEMORY[0x1F41817F8]();
}

void sub_190AD5690(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getLNSpotlightAppEntityMapperClass_block_invoke(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!LinkServicesLibraryCore_frameworkLibrary)
  {
    v4[1] = MEMORY[0x1E4F143A8];
    v4[2] = 3221225472;
    v4[3] = __LinkServicesLibraryCore_block_invoke;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    v4[5] = v4;
    long long v5 = xmmword_1E56B82F8;
    uint64_t v6 = 0;
    LinkServicesLibraryCore_frameworkLibrary = _sl_dlopen();
    id v2 = (void *)v4[0];
    if (!LinkServicesLibraryCore_frameworkLibrary)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("LNSpotlightAppEntityMapper");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    id v2 = (void *)__getLNSpotlightAppEntityMapperClass_block_invoke_cold_1();
LABEL_8:
    free(v2);
  }
  getLNSpotlightAppEntityMapperClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __LinkServicesLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  LinkServicesLibraryCore_frameworkLibrary = result;
  return result;
}

void sub_190AD6844(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190AD7030(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sUsername_block_invoke_0(uint64_t a1, void *a2)
{
  return [a2 username];
}

void sub_190ADA318(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190ADA464(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190ADA9A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getIMNicknameProviderClass_block_invoke(uint64_t a1)
{
  IMCoreLibraryCore_0();
  Class result = objc_getClass("IMNicknameProvider");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getIMNicknameProviderClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __IMCoreLibraryCore_block_invoke_0()
{
  uint64_t result = _sl_dlopen();
  IMCoreLibraryCore_frameworkLibrary_0 = result;
  return result;
}

uint64_t __IMSharedUtilitiesLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  IMSharedUtilitiesLibraryCore_frameworkLibrary = result;
  return result;
}

CNiOSContactPredicate *__getIMNicknameControllerClass_block_invoke(uint64_t a1)
{
  if (!IMCoreLibraryCore_0())
  {
    uint64_t v3 = (void *)abort_report_np();
    free(v3);
  }
  uint64_t result = objc_getClass("IMNicknameController");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getIMNicknameControllerClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    id v4 = (CNiOSPersonFetchRequest *)__getIMNicknameControllerClass_block_invoke_cold_1();
    return [(CNiOSPersonFetchRequest *)v4 predicate];
  }
  return result;
}

void sub_190ADC214(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_190ADD800(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __CoreRecentsLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  CoreRecentsLibraryCore_frameworkLibrary = result;
  return result;
}

Class __getCRSearchQueryClass_block_invoke(uint64_t a1)
{
  CoreRecentsLibrary();
  Class result = objc_getClass("CRSearchQuery");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getCRSearchQueryClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = __getCRSearchQueryClass_block_invoke_cold_1();
    return (Class)__getCRSearchPredicateClass_block_invoke(v3);
  }
  return result;
}

Class __getCRSearchPredicateClass_block_invoke(uint64_t a1)
{
  CoreRecentsLibrary();
  Class result = objc_getClass("CRSearchPredicate");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getCRSearchPredicateClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    __getCRSearchPredicateClass_block_invoke_cold_1();
    return (Class)__getCRRecentContactKeyAddressSymbolLoc_block_invoke();
  }
  return result;
}

void *__getCRRecentContactKeyAddressSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = (void *)CoreRecentsLibrary();
  Class result = dlsym(v2, "CRRecentContactKeyAddress");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCRRecentContactKeyAddressSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getCRRecentsDomainCalendarSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = (void *)CoreRecentsLibrary();
  Class result = dlsym(v2, "CRRecentsDomainCalendar");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCRRecentsDomainCalendarSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getCRRecentsDomainMailSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = (void *)CoreRecentsLibrary();
  Class result = dlsym(v2, "CRRecentsDomainMail");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCRRecentsDomainMailSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getCRRecentsDomainMessagesSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = (void *)CoreRecentsLibrary();
  Class result = dlsym(v2, "CRRecentsDomainMessages");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCRRecentsDomainMessagesSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

id sOrganizationWithPerson_block_invoke(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = [v2 contact];
  uint64_t v4 = [v3 contactType];

  if (v4 == 1)
  {
    SEL v5 = [v2 contact];
    uint64_t v6 = [v5 organizationName];

    uint64_t v7 = +[CNContactVCardSummary defaultNameFormatter];
    id v8 = [v2 contact];
    char v9 = [v7 stringFromContact:v8];

    if (((*(uint64_t (**)(void))(*MEMORY[0x1E4F5A298] + 16))() & 1) == 0
      && [(__CFString *)v9 isEqualToString:v6])
    {

      char v9 = &stru_1EE052B80;
    }
    uint64_t v10 = [MEMORY[0x1E4F5A490] pairWithFirst:v6 second:v9];
  }
  else
  {
    uint64_t v10 = 0;
  }

  return v10;
}

id sPersonWithOrganization_block_invoke_2(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = +[CNContactVCardSummary defaultNameFormatter];
  uint64_t v4 = [v2 contact];
  SEL v5 = [v3 stringFromContact:v4];

  uint64_t v6 = [v2 contact];

  uint64_t v7 = [v6 organizationName];

  if (((*(uint64_t (**)(void))(*MEMORY[0x1E4F5A298] + 16))() & 1) == 0
    && [(__CFString *)v7 isEqualToString:v5])
  {

    uint64_t v7 = &stru_1EE052B80;
  }
  id v8 = [MEMORY[0x1E4F5A490] pairWithFirst:v5 second:v7];

  return v8;
}

void sub_190AE25D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190AE28F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id _block_invoke_1(uint64_t a1, void *a2)
{
  id v2 = a2;

  return v2;
}

id _block_invoke_2_0(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_opt_class();
  id v3 = v2;
  if (objc_opt_isKindOfClass()) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0;
  }
  id v5 = v4;

  if (v5)
  {
    uint64_t v6 = +[CNPhoneNumber phoneNumberWithStringValue:v5];
  }
  else
  {
    uint64_t v6 = 0;
  }

  return v6;
}

id _block_invoke_3(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_opt_class();
  id v3 = v2;
  if (v3)
  {
    if (objc_opt_isKindOfClass()) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    id v5 = v4;
  }
  else
  {
    id v5 = 0;
  }

  uint64_t v6 = [v5 stringValue];

  return v6;
}

CNSocialProfile *_block_invoke_4(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_opt_class();
  id v3 = v2;
  if (v3)
  {
    if (objc_opt_isKindOfClass()) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    id v5 = v4;
  }
  else
  {
    id v5 = 0;
  }

  uint64_t v6 = [CNSocialProfile alloc];
  uint64_t v7 = [v5 objectForKey:@"urlString"];
  id v8 = [v5 objectForKey:@"username"];
  char v9 = [v5 objectForKey:@"userIdentifier"];
  uint64_t v10 = [v5 objectForKey:@"service"];
  uint64_t v11 = [v5 objectForKey:@"displayname"];
  uint64_t v12 = [v5 objectForKey:@"teamIdentifier"];
  uint64_t v13 = [v5 objectForKey:@"bundleIdentifiers"];
  uint64_t v14 = [(CNSocialProfile *)v6 initWithUrlString:v7 username:v8 userIdentifier:v9 service:v10 displayname:v11 teamIdentifier:v12 bundleIdentifiers:v13];

  return v14;
}

id _block_invoke_5(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_opt_class();
  id v3 = v2;
  if (v3)
  {
    if (objc_opt_isKindOfClass()) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    id v5 = v4;
  }
  else
  {
    id v5 = 0;
  }

  uint64_t v6 = [MEMORY[0x1E4F1CA60] dictionary];
  uint64_t v7 = [v5 urlString];
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v7, @"urlString");

  id v8 = [v5 username];
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v8, @"username");

  char v9 = [v5 userIdentifier];
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v9, @"userIdentifier");

  uint64_t v10 = [v5 service];
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v10, @"service");

  uint64_t v11 = [v5 displayname];
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v11, @"displayname");

  uint64_t v12 = [v5 teamIdentifier];
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v12, @"teamIdentifier");

  uint64_t v13 = [v5 bundleIdentifiers];
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v13, @"bundleIdentifiers");

  return v6;
}

id _block_invoke_6(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_opt_class();
  id v3 = v2;
  if (v3)
  {
    if (objc_opt_isKindOfClass()) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    id v5 = v4;
  }
  else
  {
    id v5 = 0;
  }

  id v6 = objc_alloc(MEMORY[0x1E4F5A3F8]);
  uint64_t v7 = [v5 urlString];
  id v8 = [v5 username];
  char v9 = [v5 userIdentifier];
  uint64_t v10 = [v5 service];
  uint64_t v11 = [v5 displayname];
  uint64_t v12 = (void *)[v6 initWithUrlString:v7 username:v8 userIdentifier:v9 service:v10 displayName:v11];

  return v12;
}

CNInstantMessageAddress *_block_invoke_7(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_opt_class();
  id v3 = v2;
  if (objc_opt_isKindOfClass()) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0;
  }
  id v5 = v4;

  if (v5)
  {
    id v6 = [CNInstantMessageAddress alloc];
    uint64_t v7 = [v5 objectForKey:@"username"];
    id v8 = [v5 objectForKey:@"userIdentifier"];
    char v9 = [v5 objectForKey:@"service"];
    uint64_t v10 = [v5 objectForKey:@"teamIdentifier"];
    uint64_t v11 = [v5 objectForKey:@"bundleIdentifiers"];
    uint64_t v12 = [(CNInstantMessageAddress *)v6 initWithUsername:v7 userIdentifier:v8 service:v9 teamIdentifier:v10 bundleIdentifiers:v11];
  }
  else
  {
    uint64_t v12 = [MEMORY[0x1E4F1CA98] null];
  }

  return v12;
}

id _block_invoke_8(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_opt_class();
  id v3 = v2;
  if (v3)
  {
    if (objc_opt_isKindOfClass()) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    id v5 = v4;
  }
  else
  {
    id v5 = 0;
  }

  id v6 = [MEMORY[0x1E4F1CA60] dictionary];
  uint64_t v7 = [v5 username];
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v7, @"username");

  id v8 = [v5 userIdentifier];
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v8, @"userIdentifier");

  char v9 = [v5 service];
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v9, @"service");

  uint64_t v10 = [v5 teamIdentifier];
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v10, @"teamIdentifier");

  uint64_t v11 = [v5 bundleIdentifiers];
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v11, @"bundleIdentifiers");

  return v6;
}

id _block_invoke_10(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_opt_class();
  id v3 = v2;
  if (v3)
  {
    if (objc_opt_isKindOfClass()) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    id v5 = v4;
  }
  else
  {
    id v5 = 0;
  }

  id v6 = [MEMORY[0x1E4F1CA60] dictionary];
  uint64_t v7 = [v5 street];
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v7, @"street");

  id v8 = [v5 subLocality];
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v8, @"subLocality");

  char v9 = [v5 city];
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v9, @"city");

  uint64_t v10 = [v5 subAdministrativeArea];
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v10, @"subAdministrativeArea");

  uint64_t v11 = [v5 state];
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v11, @"state");

  uint64_t v12 = [v5 postalCode];
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v12, @"postalCode");

  uint64_t v13 = [v5 country];
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v13, @"country");

  uint64_t v14 = [v5 ISOCountryCode];
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v14, @"ISOCountryCode");

  uint64_t v15 = [v5 formattedAddress];
  objc_msgSend(v6, "_cn_setNonNilObject:forKey:", v15, @"formattedAddress");

  return v6;
}

id _block_invoke_11(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_opt_class();
  id v3 = v2;
  if (objc_opt_isKindOfClass()) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0;
  }
  id v5 = v4;

  if (v5)
  {
    id v6 = +[CNContactRelation contactRelationWithName:v5];
  }
  else
  {
    id v6 = 0;
  }

  return v6;
}

id _block_invoke_12(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_opt_class();
  id v3 = v2;
  if (v3)
  {
    if (objc_opt_isKindOfClass()) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    id v5 = v4;
  }
  else
  {
    id v5 = 0;
  }

  id v6 = [v5 name];

  return v6;
}

id _block_invoke_13(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_opt_class();
  id v3 = v2;
  if (v3 && ((objc_opt_isKindOfClass() & 1) == 0 ? (v4 = 0) : (v4 = v3), id v5 = v4, v3, v5))
  {
    id v6 = objc_alloc_init(MEMORY[0x1E4F1C9D8]);
    v9[0] = MEMORY[0x1E4F143A8];
    v9[1] = 3221225472;
    v9[2] = _block_invoke_14;
    v9[3] = &unk_1E56B8808;
    id v7 = v6;
    id v10 = v7;
    [v5 enumerateKeysAndObjectsUsingBlock:v9];
  }
  else
  {
    id v7 = [MEMORY[0x1E4F1CA98] null];
  }

  return v7;
}

uint64_t _block_invoke_14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return [*(id *)(a1 + 32) setValue:a3 forKey:a2];
}

id _block_invoke_15(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_opt_class();
  id v3 = v2;
  if (objc_opt_isKindOfClass()) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0;
  }
  id v5 = v4;

  id v6 = [MEMORY[0x1E4F29040] termOfAddressFromStringRepresentation:v5];
  if (!v6)
  {
    id v6 = [MEMORY[0x1E4F5A3C8] decryptAddressingGrammarString:v5];
  }

  return v6;
}

id _block_invoke_16(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_opt_class();
  id v3 = v2;
  if (v3)
  {
    if (objc_opt_isKindOfClass()) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    id v5 = v4;
  }
  else
  {
    id v5 = 0;
  }

  id v6 = [v5 stringRepresentation];

  return v6;
}

id _block_invoke_17(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_opt_class();
  id v3 = v2;
  if (objc_opt_isKindOfClass()) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0;
  }
  id v5 = v4;

  id v6 = [MEMORY[0x1E4F5A3C8] decryptAddressingGrammarString:v5];

  return v6;
}

id _block_invoke_18(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_opt_class();
  id v3 = v2;
  if (v3)
  {
    if (objc_opt_isKindOfClass()) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    id v5 = v4;
  }
  else
  {
    id v5 = 0;
  }

  id v6 = [MEMORY[0x1E4F5A3C8] encryptAddressingGrammarAsString:v5];

  return v6;
}

CNWallpaper *_block_invoke_19(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_opt_class();
  id v3 = v2;
  if (objc_opt_isKindOfClass()) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0;
  }
  id v5 = v4;

  id v6 = [[CNWallpaper alloc] initWithDataRepresentation:v5];

  return v6;
}

CNSensitiveContentConfiguration *_block_invoke_20(uint64_t a1, void *a2)
{
  id v2 = a2;
  objc_opt_class();
  id v3 = v2;
  if (objc_opt_isKindOfClass()) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0;
  }
  id v5 = v4;

  id v6 = [[CNSensitiveContentConfiguration alloc] initWithDataRepresentation:v5];

  return v6;
}

uint64_t __CNGuardOSLog_block_invoke_7()
{
  CNGuardOSLog_cn_once_object_0_7 = (uint64_t)os_log_create("com.apple.contacts", "api");

  return MEMORY[0x1F41817F8]();
}

void OUTLINED_FUNCTION_0_3(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 2u);
}

uint64_t __IMCoreLibraryCore_block_invoke_1()
{
  uint64_t result = _sl_dlopen();
  IMCoreLibraryCore_frameworkLibrary_1 = result;
  return result;
}

uint64_t ABMultiValueGetIndexForGUID(const void *a1, const void *a2)
{
  if (ABMultiValueGetCount(a1) < 1) {
    return -1;
  }
  uint64_t v4 = 0;
  while (1)
  {
    id v5 = (const void *)ABMultiValueCopyUUIDAtIndex();
    id v6 = v5;
    if (v5) {
      CFAutorelease(v5);
    }
    if (CFEqual(v6, a2)) {
      break;
    }
    if (++v4 >= ABMultiValueGetCount(a1)) {
      return -1;
    }
  }
  return v4;
}

void sub_190AEE19C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190AEE690(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getCRSearchQueryClass()
{
  uint64_t v4 = 0;
  id v5 = &v4;
  uint64_t v6 = 0x2050000000;
  int v0 = (void *)getCRSearchQueryClass_softClass_0;
  uint64_t v7 = getCRSearchQueryClass_softClass_0;
  if (!getCRSearchQueryClass_softClass_0)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getCRSearchQueryClass_block_invoke_0;
    v3[3] = &unk_1E56B45C0;
    v3[4] = &v4;
    __getCRSearchQueryClass_block_invoke_0((uint64_t)v3);
    int v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_190AEE788(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getCRSearchPredicateClass()
{
  uint64_t v4 = 0;
  id v5 = &v4;
  uint64_t v6 = 0x2050000000;
  int v0 = (void *)getCRSearchPredicateClass_softClass_0;
  uint64_t v7 = getCRSearchPredicateClass_softClass_0;
  if (!getCRSearchPredicateClass_softClass_0)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getCRSearchPredicateClass_block_invoke_0;
    v3[3] = &unk_1E56B45C0;
    v3[4] = &v4;
    __getCRSearchPredicateClass_block_invoke_0((uint64_t)v3);
    int v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_190AEE86C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class initECEmailAddress_0()
{
  if (LoadEmailCore_loadPredicate_0 != -1) {
    dispatch_once(&LoadEmailCore_loadPredicate_0, &__block_literal_global_53_1);
  }
  Class result = objc_getClass("ECEmailAddress");
  classECEmailAddress_0 = (uint64_t)result;
  getECEmailAddressClass_0 = (uint64_t (*)())ECEmailAddressFunction_0;
  return result;
}

id ECEmailAddressFunction_0()
{
  return (id)classECEmailAddress_0;
}

void __LoadEmailCore_block_invoke_0()
{
  LoadEmailCore_frameworkLibrary_0 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/EmailCore.framework/EmailCore", 1);
  if (!LoadEmailCore_frameworkLibrary_0 && os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR)) {
    __LoadEmailCore_block_invoke_cold_1();
  }
}

uint64_t __CoreRecentsLibraryCore_block_invoke_0()
{
  uint64_t result = _sl_dlopen();
  CoreRecentsLibraryCore_frameworkLibrary_0 = result;
  return result;
}

Class __getCRSearchQueryClass_block_invoke_0(uint64_t a1)
{
  CoreRecentsLibrary_0();
  Class result = objc_getClass("CRSearchQuery");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getCRSearchQueryClass_softClass_0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = __getCRSearchQueryClass_block_invoke_cold_1();
    return (Class)__getCRSearchPredicateClass_block_invoke_0(v3);
  }
  return result;
}

Class __getCRSearchPredicateClass_block_invoke_0(uint64_t a1)
{
  CoreRecentsLibrary_0();
  Class result = objc_getClass("CRSearchPredicate");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    getCRSearchPredicateClass_softClass_0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    __getCRSearchPredicateClass_block_invoke_cold_1();
    return (Class)__getCRRecentContactKeyKindSymbolLoc_block_invoke();
  }
  return result;
}

void *__getCRRecentContactKeyKindSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = (void *)CoreRecentsLibrary_0();
  Class result = dlsym(v2, "CRRecentContactKeyKind");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCRRecentContactKeyKindSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getCRAddressKindEmailSymbolLoc_block_invoke(uint64_t a1)
{
  id v2 = (void *)CoreRecentsLibrary_0();
  Class result = dlsym(v2, "CRAddressKindEmail");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCRAddressKindEmailSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getCRRecentContactKeyAddressSymbolLoc_block_invoke_0(uint64_t a1)
{
  id v2 = (void *)CoreRecentsLibrary_0();
  Class result = dlsym(v2, "CRRecentContactKeyAddress");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCRRecentContactKeyAddressSymbolLoc_ptr_0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getCRRecentsDomainMailSymbolLoc_block_invoke_0(uint64_t a1)
{
  id v2 = (void *)CoreRecentsLibrary_0();
  Class result = dlsym(v2, "CRRecentsDomainMail");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCRRecentsDomainMailSymbolLoc_ptr_0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *CNSetError(void *result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    uint64_t v3 = result;
    Class result = +[CNErrorFactory errorWithCode:a2 userInfo:a3];
    *uint64_t v3 = result;
  }
  return result;
}

uint64_t CNSuggestionsReloadForSelectedRecipientsEnabled()
{
  return MEMORY[0x1F40C9FB0]("Contacts", "suggestions_reload_for_selected_recipients");
}

uint64_t CNSharedNamePhotoEnabled()
{
  return MEMORY[0x1F40C9FB0]("TelephonyUtilities", "NamePhoto");
}

uint64_t CNSharedNamePhotoC3Enabled()
{
  return MEMORY[0x1F40C9FB0]("TelephonyUtilities", "NamePhotoC3");
}

uint64_t CNSNaPWallpaperEnabled()
{
  return MEMORY[0x1F40C9FB0]("TelephonyUtilities", "Wallpaper");
}

uint64_t CNAPIQueryMetricsEnabled()
{
  return MEMORY[0x1F40C9FB0]("Contacts", "api_query_metrics");
}

uint64_t CNDSDSUnknownNumberSIMLinePickerEnabled()
{
  return MEMORY[0x1F40C9FB0]("Contacts", "dsds_unknown_number_SIM_line_picker");
}

uint64_t CNBackgroundColorsCachingEnabled()
{
  return MEMORY[0x1F40C9FB0]("Contacts", "image_metadata_caching");
}

uint64_t CNLimitedAccessEnabled()
{
  return MEMORY[0x1F40C9FB0]("Contacts", "LimitedAccess");
}

id fetchContactMatchingLegacyIdentifier(void *a1, uint64_t a2, void *a3)
{
  id v5 = a1;
  id v6 = a3;
  uint64_t v7 = [[CNContactFetchRequest alloc] initWithKeysToFetch:v6];
  [(CNContactFetchRequest *)v7 setUnifyResults:0];
  id v8 = +[CNContact predicateForLegacyIdentifier:a2];
  [(CNContactFetchRequest *)v7 setPredicate:v8];

  uint64_t v12 = 0;
  uint64_t v13 = &v12;
  uint64_t v14 = 0x3032000000;
  uint64_t v15 = __Block_byref_object_copy__29;
  id v16 = __Block_byref_object_dispose__29;
  id v17 = 0;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 3221225472;
  v11[2] = __fetchContactMatchingLegacyIdentifier_block_invoke;
  v11[3] = &unk_1E56B4118;
  v11[4] = &v12;
  [v5 enumerateContactsWithFetchRequest:v7 error:0 usingBlock:v11];
  id v9 = (id)v13[5];
  _Block_object_dispose(&v12, 8);

  return v9;
}

void sub_190AF1CD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t CNFavoritesPhoneNumbersEqual(void *a1, void *a2)
{
  uint64_t v3 = softLinkCPPhoneNumberCopyHomeCountryCode;
  id v4 = a2;
  id v5 = a1;
  id v6 = (const void *)v3();
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))softLinkCPPhoneNumbersEqual;
  id v8 = v5;
  uint64_t v9 = [v8 UTF8String];

  id v10 = v4;
  uint64_t v11 = [v10 UTF8String];

  uint64_t v12 = v7(v9, v11, (uint64_t)v6);
  if (v6) {
    CFRelease(v6);
  }
  return v12;
}

void sub_190AF3950(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,char a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,char a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _Block_object_dispose(&a48, 8);
  _Block_object_dispose(&a54, 8);
  _Block_object_dispose(&a60, 8);
  _Block_object_dispose(&a66, 8);
  _Unwind_Resume(a1);
}

void __fetchContactMatchingLegacyIdentifier_block_invoke(uint64_t a1, void *a2)
{
}

uint64_t initCPPhoneNumberCopyHomeCountryCode()
{
  if (LoadAppSupport_loadPredicate != -1) {
    dispatch_once(&LoadAppSupport_loadPredicate, &__block_literal_global_204);
  }
  int v0 = (uint64_t (*)())dlsym((void *)LoadAppSupport_frameworkLibrary, "CPPhoneNumberCopyHomeCountryCode");
  softLinkCPPhoneNumberCopyHomeCountryCode = v0;

  return v0();
}

uint64_t initCPPhoneNumbersEqual(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (LoadAppSupport_loadPredicate != -1) {
    dispatch_once(&LoadAppSupport_loadPredicate, &__block_literal_global_204);
  }
  id v6 = (uint64_t (*)())dlsym((void *)LoadAppSupport_frameworkLibrary, "CPPhoneNumbersEqual");
  softLinkCPPhoneNumbersEqual = v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(a1, a2, a3);
}

void ___findBestCandidateForFavorite_block_invoke(uint64_t a1, void *a2, unsigned char *a3)
{
  uint64_t v119 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v8 = *(void *)(v6 + 40);
  uint64_t v7 = (id *)(v6 + 40);
  if (!v8) {
    objc_storeStrong(v7, a2);
  }
  uint64_t v9 = +[CNContactFormatter stringFromContact:v5 style:0];
  if (v9)
  {
    uint64_t v10 = [*(id *)(a1 + 32) name];
    if (v10)
    {
      uint64_t v11 = (void *)v10;
      uint64_t v12 = [*(id *)(a1 + 32) name];
      uint64_t v13 = [v9 localizedCaseInsensitiveCompare:v12];

      if (!v13)
      {
        objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), a2);
        *a3 = 1;
      }
    }
  }
  uint64_t v14 = *(void *)(a1 + 32);
  if (v14) {
    uint64_t v15 = *(void **)(v14 + 80);
  }
  else {
    uint64_t v15 = 0;
  }
  if ([v15 isEqualToString:@"phoneNumbers"])
  {
    long long v113 = 0u;
    long long v114 = 0u;
    long long v111 = 0u;
    long long v112 = 0u;
    id v16 = [v5 phoneNumbers];
    uint64_t v17 = [v16 countByEnumeratingWithState:&v111 objects:v118 count:16];
    if (v17)
    {
      uint64_t v18 = v17;
      v96 = v9;
      id v97 = v5;
      uint64_t v19 = *(void *)v112;
      while (1)
      {
        uint64_t v20 = 0;
        do
        {
          if (*(void *)v112 != v19) {
            objc_enumerationMutation(v16);
          }
          long long v21 = *(void **)(*((void *)&v111 + 1) + 8 * v20);
          long long v22 = [v21 label];
          if (![v22 length]) {
            goto LABEL_21;
          }
          long long v23 = [v21 label];
          long long v24 = v23;
          uint64_t v25 = *(void *)(a1 + 32);
          if (v25) {
            uint64_t v26 = *(void *)(v25 + 72);
          }
          else {
            uint64_t v26 = 0;
          }
          uint64_t v27 = [v23 localizedCaseInsensitiveCompare:v26];

          if (!v27)
          {
            double v28 = [v21 value];
            uint64_t v29 = [v28 stringValue];
            double v30 = [*(id *)(a1 + 32) value];
            int v31 = CNFavoritesPhoneNumbersEqual(v29, v30);

            if (v31)
            {
              objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), a2);
              uint64_t v32 = *(void *)(*(void *)(a1 + 64) + 8);
              id v33 = v21;
              long long v22 = *(void **)(v32 + 40);
              *(void *)(v32 + 40) = v33;
LABEL_21:
            }
          }
          ++v20;
        }
        while (v18 != v20);
        uint64_t v34 = [v16 countByEnumeratingWithState:&v111 objects:v118 count:16];
        uint64_t v18 = v34;
        if (!v34) {
          goto LABEL_95;
        }
      }
    }
    goto LABEL_96;
  }
  uint64_t v35 = *(void *)(a1 + 32);
  if (v35) {
    double v36 = *(void **)(v35 + 80);
  }
  else {
    double v36 = 0;
  }
  if ([v36 isEqualToString:@"emailAddresses"])
  {
    long long v109 = 0u;
    long long v110 = 0u;
    long long v107 = 0u;
    long long v108 = 0u;
    id v16 = [v5 emailAddresses];
    uint64_t v37 = [v16 countByEnumeratingWithState:&v107 objects:v117 count:16];
    if (v37)
    {
      uint64_t v38 = v37;
      v96 = v9;
      id v97 = v5;
      uint64_t v39 = *(void *)v108;
      while (1)
      {
        uint64_t v40 = 0;
        do
        {
          if (*(void *)v108 != v39) {
            objc_enumerationMutation(v16);
          }
          v41 = *(void **)(*((void *)&v107 + 1) + 8 * v40);
          CGImageDestinationRef v42 = [v41 label];
          if (![v42 length]) {
            goto LABEL_42;
          }
          v43 = [v41 label];
          v44 = v43;
          uint64_t v45 = *(void *)(a1 + 32);
          if (v45) {
            uint64_t v46 = *(void *)(v45 + 72);
          }
          else {
            uint64_t v46 = 0;
          }
          uint64_t v47 = [v43 localizedCaseInsensitiveCompare:v46];

          if (!v47)
          {
            CGImageDestinationRef v42 = [v41 value];
            if ([v42 length])
            {
              v48 = [v41 value];
              v49 = [*(id *)(a1 + 32) value];
              uint64_t v50 = [v48 localizedCaseInsensitiveCompare:v49];

              if (v50) {
                goto LABEL_43;
              }
              objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), a2);
              uint64_t v51 = *(void *)(*(void *)(a1 + 64) + 8);
              id v52 = v41;
              CGImageDestinationRef v42 = *(void **)(v51 + 40);
              *(void *)(v51 + 40) = v52;
            }
LABEL_42:
          }
LABEL_43:
          ++v40;
        }
        while (v38 != v40);
        uint64_t v53 = [v16 countByEnumeratingWithState:&v107 objects:v117 count:16];
        uint64_t v38 = v53;
        if (!v53) {
          goto LABEL_95;
        }
      }
    }
LABEL_96:

    goto LABEL_97;
  }
  uint64_t v54 = *(void *)(a1 + 32);
  if (v54) {
    CGFloat v55 = *(void **)(v54 + 80);
  }
  else {
    CGFloat v55 = 0;
  }
  if ([v55 isEqualToString:@"socialProfiles"])
  {
    long long v105 = 0u;
    long long v106 = 0u;
    long long v103 = 0u;
    long long v104 = 0u;
    id v16 = [v5 socialProfiles];
    uint64_t v56 = [v16 countByEnumeratingWithState:&v103 objects:v116 count:16];
    if (!v56) {
      goto LABEL_96;
    }
    uint64_t v57 = v56;
    v96 = v9;
    id v97 = v5;
    uint64_t v58 = *(void *)v104;
    do
    {
      uint64_t v59 = 0;
      do
      {
        if (*(void *)v104 != v58) {
          objc_enumerationMutation(v16);
        }
        __int16 v60 = *(void **)(*((void *)&v103 + 1) + 8 * v59);
        uint64_t v61 = [v60 label];
        if (!v61) {
          goto LABEL_60;
        }
        __int16 v62 = (void *)v61;
        double v63 = [v60 label];
        uint64_t v64 = v63;
        uint64_t v65 = *(void *)(a1 + 32);
        uint64_t v66 = v65 ? *(void *)(v65 + 72) : 0;
        uint64_t v67 = [v63 localizedCaseInsensitiveCompare:v66];

        if (!v67)
        {
LABEL_60:
          objc_opt_class();
          CGRect v68 = [v60 value];
          if (objc_opt_isKindOfClass()) {
            CGRect v69 = v68;
          }
          else {
            CGRect v69 = 0;
          }
          id v70 = v69;
          v71 = +[CNFavoritesEntry valueStringFromSocialProfile:]((uint64_t)CNFavoritesEntry, v70);

          if ([v71 length])
          {
            v72 = [*(id *)(a1 + 32) value];
            int v73 = [v71 isEqualToString:v72];

            if (v73)
            {
              objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), a2);
              objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40), v60);
            }
          }
        }
        ++v59;
      }
      while (v57 != v59);
      uint64_t v74 = [v16 countByEnumeratingWithState:&v103 objects:v116 count:16];
      uint64_t v57 = v74;
    }
    while (v74);
LABEL_95:
    uint64_t v9 = v96;
    id v5 = v97;
    goto LABEL_96;
  }
  uint64_t v75 = *(void *)(a1 + 32);
  if (v75) {
    v76 = *(void **)(v75 + 80);
  }
  else {
    v76 = 0;
  }
  if ([v76 isEqualToString:@"instantMessageAddresses"])
  {
    long long v101 = 0u;
    long long v102 = 0u;
    long long v99 = 0u;
    long long v100 = 0u;
    id v16 = [v5 instantMessageAddresses];
    uint64_t v77 = [v16 countByEnumeratingWithState:&v99 objects:v115 count:16];
    if (!v77) {
      goto LABEL_96;
    }
    uint64_t v78 = v77;
    v96 = v9;
    id v97 = v5;
    uint64_t v79 = *(void *)v100;
    do
    {
      uint64_t v80 = 0;
      do
      {
        if (*(void *)v100 != v79) {
          objc_enumerationMutation(v16);
        }
        v81 = *(void **)(*((void *)&v99 + 1) + 8 * v80);
        uint64_t v82 = [v81 label];
        if (!v82) {
          goto LABEL_84;
        }
        v83 = (void *)v82;
        v84 = [v81 label];
        v85 = v84;
        uint64_t v86 = *(void *)(a1 + 32);
        uint64_t v87 = v86 ? *(void *)(v86 + 72) : 0;
        uint64_t v88 = [v84 localizedCaseInsensitiveCompare:v87];

        if (!v88)
        {
LABEL_84:
          objc_opt_class();
          v89 = [v81 value];
          if (objc_opt_isKindOfClass()) {
            v90 = v89;
          }
          else {
            v90 = 0;
          }
          id v91 = v90;
          v92 = +[CNFavoritesEntry valueStringFromSocialProfile:]((uint64_t)CNFavoritesEntry, v91);

          if ([v92 length])
          {
            v93 = [*(id *)(a1 + 32) value];
            int v94 = [v92 isEqualToString:v93];

            if (v94)
            {
              objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), a2);
              objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40), v81);
            }
          }
        }
        ++v80;
      }
      while (v78 != v80);
      uint64_t v95 = [v16 countByEnumeratingWithState:&v99 objects:v115 count:16];
      uint64_t v78 = v95;
    }
    while (v95);
    goto LABEL_95;
  }
LABEL_97:
}

void sub_190AF5830(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

void sub_190AF59D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v7 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_190AF5D38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t __CNGuardOSLog_block_invoke_8()
{
  os_log_t v0 = os_log_create("com.apple.contacts", "api");
  uint64_t v1 = CNGuardOSLog_cn_once_object_0_8;
  CNGuardOSLog_cn_once_object_0_8 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

BOOL sIsChangeDelete_block_invoke(uint64_t a1, void *a2)
{
  id v2 = a2;
  BOOL v3 = [v2 changeType] == 2 || objc_msgSend(v2, "changeType") == 5;

  return v3;
}

uint64_t sChangeContactIdentifier_block_invoke_2(uint64_t a1, void *a2)
{
  return [a2 contactIdentifier];
}

BOOL sIsGroupInsertOrUpdate_block_invoke_3(uint64_t a1, void *a2)
{
  id v2 = a2;
  BOOL v3 = [v2 changeType] != 2 && objc_msgSend(v2, "changeType") != 5;

  return v3;
}

uint64_t sGroupChangeIdentifier_block_invoke_4(uint64_t a1, void *a2)
{
  return [a2 groupIdentifier];
}

uint64_t sGroupIdentifier_block_invoke_5(uint64_t a1, void *a2)
{
  return [a2 identifier];
}

uint64_t sContactHasData_block_invoke_0(uint64_t a1, void *a2)
{
  uint64_t v2 = sContactHasData_block_invoke_cn_once_token_2;
  id v3 = a2;
  if (v2 != -1) {
    dispatch_once(&sContactHasData_block_invoke_cn_once_token_2, &__block_literal_global_54_2);
  }
  int v4 = [v3 isEqualIgnoringIdentifiers:sContactHasData_block_invoke_cn_once_object_2];

  return v4 ^ 1u;
}

uint64_t sContactHasData_block_invoke_2_0()
{
  os_log_t v0 = objc_alloc_init(CNContact);
  uint64_t v1 = sContactHasData_block_invoke_cn_once_object_2;
  sContactHasData_block_invoke_cn_once_object_2 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

uint64_t sPairContactWithNoMatchInfo_block_invoke_3_0(uint64_t a1, uint64_t a2)
{
  return [MEMORY[0x1E4F5A490] pairWithFirst:a2 second:0];
}

uint64_t __ContactsDonationLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  ContactsDonationLibraryCore_frameworkLibrary = result;
  return result;
}

void *__getCNDonationErrorDomainSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)ContactsDonationLibrary();
  uint64_t result = dlsym(v2, "CNDonationErrorDomain");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCNDonationErrorDomainSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t CNCountryInformationISOCountryCodeAscendingComparator_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v4 = a3;
  id v5 = [a2 isoCountryCode];
  uint64_t v6 = [v4 isoCountryCode];

  uint64_t v7 = [v5 compare:v6];
  return v7;
}

id getABSPublicABCNCompatibilityClass_0()
{
  uint64_t v4 = 0;
  id v5 = &v4;
  uint64_t v6 = 0x2050000000;
  os_log_t v0 = (void *)getABSPublicABCNCompatibilityClass_softClass_0;
  uint64_t v7 = getABSPublicABCNCompatibilityClass_softClass_0;
  if (!getABSPublicABCNCompatibilityClass_softClass_0)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __getABSPublicABCNCompatibilityClass_block_invoke_0;
    v3[3] = &unk_1E56B45C0;
    v3[4] = &v4;
    __getABSPublicABCNCompatibilityClass_block_invoke_0((uint64_t)v3);
    os_log_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_190AFB6B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getABSPublicABCNCompatibilityClass_block_invoke_0(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!AddressBookLibraryCore_frameworkLibrary_0)
  {
    v4[1] = MEMORY[0x1E4F143A8];
    v4[2] = 3221225472;
    v4[3] = __AddressBookLibraryCore_block_invoke_0;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    v4[5] = v4;
    long long v5 = xmmword_1E56B8D00;
    uint64_t v6 = 0;
    AddressBookLibraryCore_frameworkLibrary_0 = _sl_dlopen();
    uint64_t v2 = (void *)v4[0];
    if (!AddressBookLibraryCore_frameworkLibrary_0)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("ABSPublicABCNCompatibility");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    __getABSPublicABCNCompatibilityClass_block_invoke_cold_1();
LABEL_8:
    free(v2);
  }
  getABSPublicABCNCompatibilityClass_softClass_0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __AddressBookLibraryCore_block_invoke_0()
{
  uint64_t result = _sl_dlopen();
  AddressBookLibraryCore_frameworkLibrary_0 = result;
  return result;
}

void sub_190B00274(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190B00DE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 144), 8);
  _Unwind_Resume(a1);
}

uint64_t sStringValue_block_invoke(uint64_t a1, void *a2)
{
  return [a2 stringValue];
}

void sub_190B03D08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190B05CB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0_4(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

uint64_t CNiOSABEKParticipantMatchingCopyPersonByURL(uint64_t a1, void *a2)
{
  id v3 = (void *)MEMORY[0x1E4F1C9E8];
  uint64_t v4 = *MEMORY[0x1E4F49D38];
  uint64_t v5 = *MEMORY[0x1E4F49D50];
  uint64_t v6 = [a2 absoluteString];
  uint64_t v7 = objc_msgSend(v3, "dictionaryWithObjectsAndKeys:", v4, v5, v6, *MEMORY[0x1E4F49D78], 0);

  uint64_t v8 = [MEMORY[0x1E4F498B8] personPredicateWithValue:v7 comparison:0 forProperty:*MEMORY[0x1E4F49D30] addressBook:a1];
  uint64_t v9 = CNiOSABEKParticipantMatchingCopyPersonWithABPredicate(a1, v8);

  return v9;
}

uint64_t CNiOSABEKParticipantMatchingCopyPersonByName(uint64_t a1, uint64_t a2)
{
  id v3 = [MEMORY[0x1E4F498A8] personPredicateWithNameOnly:a2 account:0 addressBook:a1];
  uint64_t v4 = CNiOSABEKParticipantMatchingCopyPersonWithABPredicate(a1, v3);

  return v4;
}

uint64_t CNiOSABEKParticipantMatchingCopyPersonWithABPredicate(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v8 = 0;
  uint64_t v9 = &v8;
  uint64_t v10 = 0x2020000000;
  uint64_t v11 = 0;
  uint64_t v4 = objc_alloc_init(CNiOSABEKParticipantMatchingSearchOperationDelegate);
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = __CNiOSABEKParticipantMatchingCopyPersonWithABPredicate_block_invoke;
  v7[3] = &unk_1E56B5B18;
  void v7[4] = &v8;
  [(CNiOSABEKParticipantMatchingSearchOperationDelegate *)v4 setCompletionHandler:v7];
  [MEMORY[0x1E4F498A8] searchPeopleWithPredicate:v3 sortOrder:0xFFFFFFFFLL inAddressBook:a1 withDelegate:v4];
  uint64_t v5 = v9[3];

  _Block_object_dispose(&v8, 8);
  return v5;
}

void sub_190B080B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

CFTypeRef __CNiOSABEKParticipantMatchingCopyPersonWithABPredicate_block_invoke(CFTypeRef result, CFTypeRef cf)
{
  if (cf)
  {
    uint64_t v2 = (uint64_t)result;
    uint64_t result = CFRetain(cf);
    *(void *)(*(void *)(*(void *)(v2 + 32) + 8) + 24) = result;
  }
  return result;
}

void sub_190B0AD70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190B0C218(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __CNGuardOSLog_block_invoke_9()
{
  os_log_t v0 = os_log_create("com.apple.contacts", "api");
  uint64_t v1 = CNGuardOSLog_cn_once_object_0_9;
  CNGuardOSLog_cn_once_object_0_9 = (uint64_t)v0;

  return MEMORY[0x1F41817F8](v0, v1);
}

id OUTLINED_FUNCTION_1_2(id a1)
{
  return a1;
}

void sub_190B0EB54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getIMNicknameClass_block_invoke(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!IMSharedUtilitiesLibraryCore_frameworkLibrary_0)
  {
    v4[1] = MEMORY[0x1E4F143A8];
    v4[2] = 3221225472;
    v4[3] = __IMSharedUtilitiesLibraryCore_block_invoke_0;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    v4[5] = v4;
    long long v5 = xmmword_1E56B9070;
    uint64_t v6 = 0;
    IMSharedUtilitiesLibraryCore_frameworkLibrary_0 = _sl_dlopen();
    uint64_t v2 = (void *)v4[0];
    if (!IMSharedUtilitiesLibraryCore_frameworkLibrary_0)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("IMNickname");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    uint64_t v2 = (void *)__getIMNicknameClass_block_invoke_cold_1();
LABEL_8:
    free(v2);
  }
  getIMNicknameClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __IMSharedUtilitiesLibraryCore_block_invoke_0()
{
  uint64_t result = _sl_dlopen();
  IMSharedUtilitiesLibraryCore_frameworkLibrary_0 = result;
  return result;
}

id sNilStringIfEmpty_block_invoke(uint64_t a1, void *a2)
{
  id v2 = a2;
  id v3 = v2;
  if (v2 && [v2 length]) {
    id v4 = v3;
  }
  else {
    id v4 = 0;
  }

  return v4;
}

id sContactServerUUID_block_invoke_2(uint64_t a1, void *a2)
{
  id v2 = [a2 externalUUID];
  if ((*(unsigned int (**)(void))(*MEMORY[0x1E4F5A298] + 16))()) {
    id v3 = 0;
  }
  else {
    id v3 = v2;
  }
  id v4 = v3;

  return v4;
}

CNCountryInformation *sCountryInformationFromCountryCode_block_invoke(uint64_t a1, void *a2)
{
  id v2 = a2;
  id v3 = +[CNAddressFormats addressFormatForCountryCode:v2];
  id v4 = [CNCountryInformation alloc];
  long long v5 = [v3 objectForKeyedSubscript:@"COUNTRY"];
  uint64_t v6 = [v3 objectForKeyedSubscript:@"PHONETIC_COUNTRY"];
  uint64_t v7 = [(CNCountryInformation *)v4 initWithISOCountryCode:v2 name:v5 phoneticName:v6];

  return v7;
}

void sub_190B10D24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sIsContactWhitelisted_block_invoke(uint64_t a1, void *a2)
{
  id v2 = [a2 downtimeWhitelist];
  uint64_t v3 = [v2 isEqualToString:*MEMORY[0x1E4F5A1B0]];

  return v3;
}

uint64_t sLabeledValueStringValue_block_invoke_2(uint64_t a1, void *a2)
{
  return [a2 value];
}

id sLabeledValuePhoneNumberStringValue_block_invoke_3(uint64_t a1, void *a2)
{
  id v2 = [a2 value];
  uint64_t v3 = [v2 stringValue];

  return v3;
}

id sAllHandleStringsForContact_block_invoke_4(uint64_t a1, void *a2)
{
  v10[2] = *MEMORY[0x1E4F143B8];
  id v2 = a2;
  uint64_t v3 = [v2 emailAddresses];
  id v4 = objc_msgSend(v3, "_cn_map:", &__block_literal_global_27_2);
  v10[0] = v4;
  long long v5 = [v2 phoneNumbers];

  uint64_t v6 = objc_msgSend(v5, "_cn_map:", &__block_literal_global_29_2);
  v10[1] = v6;
  uint64_t v7 = [MEMORY[0x1E4F1C978] arrayWithObjects:v10 count:2];
  uint64_t v8 = objc_msgSend(v7, "_cn_flatten");

  return v8;
}

void sub_190B128B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_190B129A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_190B12AB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_190B12B4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_190B12C48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_190B131D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_190B134AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Block_object_dispose((const void *)(v2 - 80), 8);
  _Unwind_Resume(a1);
}

void _handleFavoritesChangedExternally(uint64_t a1, void *a2)
{
  objc_opt_class();
  id v3 = a2;
  if (objc_opt_isKindOfClass()) {
    id v4 = v3;
  }
  else {
    id v4 = 0;
  }
  id v6 = v4;

  long long v5 = v6;
  if (v6)
  {
    [v6 _entriesChangedExternally];
    long long v5 = v6;
  }
}

void sub_190B138B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id CNContactFromSGContact(void *a1, void *a2)
{
  v32[1] = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  long long v5 = [v3 recordId];
  id v6 = CNSuggestedContactFoundInBundle_block_invoke((uint64_t)v5, (uint64_t)v5);

  uint64_t v7 = [(CNContact *)[CNMutableContact alloc] initWithIdentifier:v6];
  uint64_t v8 = [v3 name];
  uint64_t v9 = [v8 prefix];
  [(CNMutableContact *)v7 setNamePrefix:v9];

  uint64_t v10 = [v8 firstName];
  [(CNMutableContact *)v7 setGivenName:v10];

  uint64_t v11 = [v8 middleName];
  [(CNMutableContact *)v7 setMiddleName:v11];

  uint64_t v12 = [v8 lastName];
  [(CNMutableContact *)v7 setFamilyName:v12];

  uint64_t v13 = [v8 suffix];
  [(CNMutableContact *)v7 setNameSuffix:v13];

  [(CNMutableContact *)v7 setPreferredForName:0];
  uint64_t v14 = [v3 emailAddresses];
  uint64_t v15 = CNLabeledValuesFromSGLabeledValues(v14, @"emailAddress", 0);
  [(CNMutableContact *)v7 setEmailAddresses:v15];

  id v16 = [v3 phones];
  uint64_t v17 = +[CN phoneNumberFromStringTransform];
  uint64_t v18 = CNLabeledValuesFromSGLabeledValues(v16, @"phoneNumber", v17);
  [(CNMutableContact *)v7 setPhoneNumbers:v18];

  uint64_t v19 = [v3 postalAddresses];
  uint64_t v20 = CNLabeledValuesFromSGLabeledValues(v19, @"self", &__block_literal_global_111);
  [(CNMutableContact *)v7 setPostalAddresses:v20];

  long long v21 = [v3 socialProfiles];
  long long v22 = CNLabeledValuesFromSGLabeledValues(v21, @"self", &__block_literal_global_114_1);
  [(CNMutableContact *)v7 setSocialProfiles:v22];

  long long v23 = [v3 birthday];

  if (v23)
  {
    long long v24 = [v3 birthday];
    v32[0] = v24;
    uint64_t v25 = [MEMORY[0x1E4F1C978] arrayWithObjects:v32 count:1];
    uint64_t v26 = CNLabeledValuesFromSGLabeledValues(v25, @"dateComponents", 0);
    [(CNMutableContact *)v7 setDates:v26];
  }
  uint64_t v27 = +[CNSuggestedContactStore storeIdentifier];
  [(CNMutableContact *)v7 setStoreIdentifier:v27];

  double v28 = [MEMORY[0x1E4F1CA60] dictionary];
  uint64_t v29 = [v3 recordId];
  [v28 setObject:v29 forKeyedSubscript:CNSuggestedContactRecordIdKey];

  if (v4) {
    [v28 addEntriesFromDictionary:v4];
  }
  [(CNMutableContact *)v7 setStoreInfo:v28];
  double v30 = (void *)[(CNMutableContact *)v7 copy];

  return v30;
}

void *SGRecordIDFromIdentifier()
{
  return &__block_literal_global_95_0;
}

id CNSuggestedContactFoundInBundle_block_invoke(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = [MEMORY[0x1E4F5A328] encodeObject:a2 error:0];
  id v3 = [v2 base64EncodedStringWithOptions:0];

  return v3;
}

id CNSuggestedContactFoundInBundle_block_invoke_2(uint64_t a1, void *a2)
{
  uint64_t v2 = (objc_class *)MEMORY[0x1E4F1C9B8];
  id v3 = a2;
  id v4 = (void *)[[v2 alloc] initWithBase64EncodedString:v3 options:0];

  if (v4)
  {
    long long v5 = [MEMORY[0x1E4F5A328] decodeObjectOfClass:objc_opt_class() data:v4 error:0];
  }
  else
  {
    long long v5 = 0;
  }

  return v5;
}

id CNLabeledValuesFromSGLabeledValues(void *a1, void *a2, void *a3)
{
  uint64_t v46 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a2;
  uint64_t v7 = a3;
  if (v5)
  {
    objc_msgSend(MEMORY[0x1E4F1CA48], "arrayWithCapacity:", objc_msgSend(v5, "count"));
    id v35 = v5;
    id v36 = (id)objc_claimAutoreleasedReturnValue();
    long long v41 = 0u;
    long long v42 = 0u;
    long long v43 = 0u;
    long long v44 = 0u;
    id obj = v5;
    uint64_t v8 = [obj countByEnumeratingWithState:&v41 objects:v45 count:16];
    if (!v8) {
      goto LABEL_21;
    }
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v42;
    uint64_t v38 = v7;
    uint64_t v37 = *(void *)v42;
    while (1)
    {
      uint64_t v11 = 0;
      uint64_t v39 = v9;
      do
      {
        if (*(void *)v42 != v10) {
          objc_enumerationMutation(obj);
        }
        uint64_t v12 = *(void **)(*((void *)&v41 + 1) + 8 * v11);
        uint64_t v13 = [v12 extractionInfo];
        if ([v13 extractionType] == 16)
        {
          uint64_t v14 = [v12 origin];
          uint64_t v15 = [v14 bundleId];
          char v16 = objc_msgSend(v15, "_cn_hasPrefix:options:", @"com.apple.", 129);

          if (v16) {
            goto LABEL_19;
          }
        }
        else
        {
        }
        uint64_t v17 = [v12 valueForKey:v6];
        if (v17)
        {
          uint64_t v18 = (void *)v17;
          if (!v7
            || (v7[2](v7, v17), v19 = objc_claimAutoreleasedReturnValue(), v18, (uint64_t v18 = (void *)v19) != 0))
          {
            id v20 = v6;
            long long v21 = [v12 recordId];
            long long v22 = CNSuggestedContactFoundInBundle_block_invoke((uint64_t)v21, (uint64_t)v21);

            long long v23 = [CNLabeledValue alloc];
            long long v24 = [v12 label];
            uint64_t v25 = [(CNLabeledValue *)v23 initWithIdentifier:v22 label:v24 value:v18];

            uint64_t v26 = +[CNSuggestedContactStore storeIdentifier];
            [(CNLabeledValue *)v25 setStoreIdentifier:v26];

            uint64_t v27 = [MEMORY[0x1E4F1CA60] dictionary];
            double v28 = [v12 recordId];
            [v27 setObject:v28 forKey:CNSuggestedContactRecordIdKey];

            uint64_t v29 = [v12 origin];
            double v30 = [v29 bundleId];
            uint64_t v31 = [v30 length];

            if (v31)
            {
              uint64_t v32 = [v12 origin];
              id v33 = [v32 bundleId];
              [v27 setObject:v33 forKey:CNSuggestedContactFoundInBundle];
            }
            [(CNLabeledValue *)v25 setStoreInfo:v27];
            if (v25) {
              [v36 addObject:v25];
            }

            id v6 = v20;
            uint64_t v7 = v38;
            uint64_t v9 = v39;
            uint64_t v10 = v37;
          }
        }
LABEL_19:
        ++v11;
      }
      while (v9 != v11);
      uint64_t v9 = [obj countByEnumeratingWithState:&v41 objects:v45 count:16];
      if (!v9)
      {
LABEL_21:

        id v5 = v35;
        goto LABEL_23;
      }
    }
  }
  id v36 = 0;
LABEL_23:

  return v36;
}

CNMutablePostalAddress *__CNContactFromSGContact_block_invoke(uint64_t a1, void *a2)
{
  id v2 = a2;
  if (v2)
  {
    id v3 = objc_alloc_init(CNMutablePostalAddress);
    id v4 = [v2 components];
    id v5 = v4;
    if (v4)
    {
      id v6 = [v4 street];
      [(CNPostalAddress *)v3 setStreet:v6];

      uint64_t v7 = [v5 subLocality];
      [(CNPostalAddress *)v3 setSubLocality:v7];

      uint64_t v8 = [v5 city];
      [(CNPostalAddress *)v3 setCity:v8];

      uint64_t v9 = [v5 subAdministrativeArea];
      [(CNPostalAddress *)v3 setSubAdministrativeArea:v9];

      uint64_t v10 = [v5 state];
      [(CNPostalAddress *)v3 setState:v10];

      uint64_t v11 = [v5 postalCode];
      [(CNPostalAddress *)v3 setPostalCode:v11];

      uint64_t v12 = [v5 country];
      [(CNPostalAddress *)v3 setCountry:v12];

      uint64_t v13 = [v5 isoCountryCode];
      [(CNPostalAddress *)v3 setISOCountryCode:v13];
    }
    else
    {
      uint64_t v14 = [v2 rawAddress];

      if (v14)
      {
        id v29 = 0;
        uint64_t v15 = (void *)[objc_alloc(MEMORY[0x1E4F28BE8]) initWithTypes:16 error:&v29];
        id v16 = v29;
        uint64_t v17 = v16;
        if (v15)
        {
          uint64_t v18 = [v2 rawAddress];
          uint64_t v19 = objc_msgSend(v15, "firstMatchInString:options:range:", v18, 0, 0, -[CNMutablePostalAddress length](v18, "length"));
          id v20 = [v19 addressComponents];
          long long v21 = v20;
          if (v19 && v20)
          {
            long long v22 = [v20 objectForKeyedSubscript:*MEMORY[0x1E4F28958]];
            [(CNPostalAddress *)v3 setStreet:v22];

            long long v23 = [v21 objectForKeyedSubscript:*MEMORY[0x1E4F28920]];
            [(CNPostalAddress *)v3 setCity:v23];

            long long v24 = [v21 objectForKeyedSubscript:*MEMORY[0x1E4F28950]];
            [(CNPostalAddress *)v3 setState:v24];

            uint64_t v25 = [v21 objectForKeyedSubscript:*MEMORY[0x1E4F28960]];
            [(CNPostalAddress *)v3 setPostalCode:v25];

            uint64_t v26 = [v21 objectForKeyedSubscript:*MEMORY[0x1E4F28928]];
            [(CNPostalAddress *)v3 setCountry:v26];
          }
          else
          {
            uint64_t v26 = v3;
            id v3 = 0;
          }
          uint64_t v27 = v3;

          id v3 = v18;
        }
        else
        {
          NSLog(&cfstr_ErrorCreatingD.isa, v16);
          uint64_t v27 = 0;
        }

        id v3 = v27;
      }
      else
      {

        id v3 = 0;
      }
    }
  }
  else
  {
    id v3 = 0;
  }

  return v3;
}

CNMutableSocialProfile *__CNContactFromSGContact_block_invoke_2(uint64_t a1, void *a2)
{
  v13[1] = *MEMORY[0x1E4F143B8];
  id v2 = a2;
  if (v2)
  {
    id v3 = objc_alloc_init(CNMutableSocialProfile);
    id v4 = [v2 displayName];
    [(CNSocialProfile *)v3 setDisplayname:v4];

    id v5 = [v2 username];
    [(CNSocialProfile *)v3 setUsername:v5];

    id v6 = [v2 userIdentifier];
    [(CNSocialProfile *)v3 setUserIdentifier:v6];

    uint64_t v7 = [v2 bundleIdentifier];
    if (v7)
    {
      uint64_t v8 = [v2 bundleIdentifier];
      v13[0] = v8;
      uint64_t v9 = [MEMORY[0x1E4F1C978] arrayWithObjects:v13 count:1];
      [(CNSocialProfile *)v3 setBundleIdentifiers:v9];
    }
    else
    {
      [(CNSocialProfile *)v3 setBundleIdentifiers:0];
    }

    uint64_t v10 = [v2 teamIdentifier];
    [(CNSocialProfile *)v3 setTeamIdentifier:v10];

    uint64_t v11 = [v2 service];
    [(CNSocialProfile *)v3 setService:v11];
  }
  else
  {
    id v3 = 0;
  }

  return v3;
}

__CFData *CNImageUtilsImageDataByScalingImageData(const __CFData *a1, int a2, unint64_t a3, double *a4, double a5, double a6, double a7)
{
  if (a5 >= a6) {
    double v9 = a5;
  }
  else {
    double v9 = a6;
  }
  if (v9 <= (double)a3)
  {
    long long v23 = 0;
    goto LABEL_35;
  }
  if (a5 >= a6) {
    a5 = a6;
  }
  double v12 = (double)(unint64_t)(a5 / v9 * (double)a3);
  if (v9 == a6) {
    double v13 = v12;
  }
  else {
    double v13 = (double)a3;
  }
  if (v9 == a6) {
    double v14 = (double)a3;
  }
  else {
    double v14 = v12;
  }
  uint64_t v15 = CGImageSourceCreateWithData(a1, 0);
  if (v15)
  {
    id v16 = v15;
    if (CGImageSourceGetCount(v15))
    {
      CFDictionaryRef v17 = CGImageSourceCopyPropertiesAtIndex(v16, 0, 0);
      CGImageRef ImageAtIndex = CGImageSourceCreateImageAtIndex(v16, 0, 0);
      if (ImageAtIndex)
      {
        uint64_t v19 = ImageAtIndex;
        if ((unint64_t)v13) {
          BOOL v20 = (unint64_t)v14 == 0;
        }
        else {
          BOOL v20 = 1;
        }
        if (!v20)
        {
          uint64_t v21 = CGImageCreateByScaling();
          CFRelease(v19);
          uint64_t v19 = (void *)v21;
        }
        long long v22 = (__CFData *)objc_opt_new();
        long long v23 = v22;
        if (a2) {
          CFStringRef v24 = @"public.png";
        }
        else {
          CFStringRef v24 = @"public.jpeg";
        }
        CGImageDestinationRef v25 = CGImageDestinationCreateWithData(v22, v24, 1uLL, 0);
        if (v25)
        {
          uint64_t v26 = v25;
          uint64_t v27 = [MEMORY[0x1E4F1CA60] dictionaryWithDictionary:v17];
          double v28 = [NSNumber numberWithDouble:a7];
          [v27 setObject:v28 forKeyedSubscript:*MEMORY[0x1E4F2F430]];

          CGImageDestinationAddImage(v26, (CGImageRef)v19, (CFDictionaryRef)v27);
          CGImageDestinationFinalize(v26);
          CFRelease(v26);
        }
        CGImageRelease((CGImageRef)v19);
      }
      else
      {
        long long v23 = 0;
      }
    }
    else
    {
      long long v23 = 0;
    }
    CFRelease(v16);
    if (a4) {
      goto LABEL_34;
    }
  }
  else
  {
    long long v23 = 0;
    if (a4) {
LABEL_34:
    }
      *a4 = v14 / a6;
  }
LABEL_35:

  return v23;
}

BOOL CNImageUtilsCopyImageSourceAndGetSizeFromData(void *a1, CGImageSource **a2, void *a3, void *a4)
{
  CFDataRef v7 = a1;
  CFDataRef v8 = v7;
  if (a3) {
    *a3 = 0;
  }
  if (a4) {
    *a4 = 0;
  }
  if (v7)
  {
    double v9 = CGImageSourceCreateWithData(v7, 0);
    if (!v9)
    {
      int v16 = 0;
LABEL_32:
      BOOL v15 = v16 != 0;
      goto LABEL_33;
    }
    uint64_t v10 = v9;
    CFDictionaryRef v11 = CGImageSourceCopyPropertiesAtIndex(v9, 0, 0);
    if (!v11)
    {
      int v16 = 0;
      goto LABEL_31;
    }
    CFDictionaryRef v12 = v11;
    int valuePtr = 0;
    CFNumberRef Value = (const __CFNumber *)CFDictionaryGetValue(v11, (const void *)*MEMORY[0x1E4F2FCA0]);
    if (Value)
    {
      CFNumberGetValue(Value, kCFNumberIntType, &valuePtr);
      BOOL v14 = valuePtr > 4;
    }
    else
    {
      BOOL v14 = 0;
    }
    CFNumberRef v17 = (const __CFNumber *)CFDictionaryGetValue(v12, (const void *)*MEMORY[0x1E4F2FD00]);
    if (v17 && CFNumberGetValue(v17, kCFNumberIntType, &valuePtr))
    {
      if (v14)
      {
        uint64_t v18 = a4;
        if (!a4) {
          goto LABEL_21;
        }
        goto LABEL_20;
      }
      uint64_t v18 = a3;
      if (a3) {
LABEL_20:
      }
        *uint64_t v18 = valuePtr;
    }
LABEL_21:
    CFNumberRef v19 = (const __CFNumber *)CFDictionaryGetValue(v12, (const void *)*MEMORY[0x1E4F2FCE8]);
    if (!v19 || !CFNumberGetValue(v19, kCFNumberIntType, &valuePtr)) {
      goto LABEL_28;
    }
    if (v14)
    {
      if (!a3) {
        goto LABEL_28;
      }
    }
    else
    {
      a3 = a4;
      if (!a4)
      {
LABEL_28:
        CFRelease(v12);
        if (a2)
        {
          *a2 = v10;
          int v16 = 1;
          goto LABEL_32;
        }
        int v16 = 1;
LABEL_31:
        CFRelease(v10);
        goto LABEL_32;
      }
    }
    *a3 = valuePtr;
    goto LABEL_28;
  }
  BOOL v15 = 0;
LABEL_33:

  return v15;
}

CGContextRef CNImageUtilsCreateMmappedBitmapContext(unsigned int a1, double a2, double a3)
{
  if (a1 != 5 && a1 != 8) {
    CNImageUtilsCreateMmappedBitmapContext_cold_1();
  }
  DeviceRGB = CGColorSpaceCreateDeviceRGB();
  CGColorSpaceGetNumberOfComponents(DeviceRGB);
  size_t AlignedBytesPerRow = CGBitmapGetAlignedBytesPerRow();
  CFDataRef v8 = mmap(0, (*MEMORY[0x1E4F14B00] + AlignedBytesPerRow * (int)a3 - 1) & -*MEMORY[0x1E4F14B00], 3, 4097, -1, 0);
  if (a1 == 5) {
    uint32_t v9 = 4102;
  }
  else {
    uint32_t v9 = 8198;
  }
  CGContextRef v10 = CGBitmapContextCreate(v8, (unint64_t)a2, (unint64_t)a3, a1, AlignedBytesPerRow, DeviceRGB, v9);
  CGColorSpaceRelease(DeviceRGB);
  return v10;
}

uint64_t _AppExtensionIdentity.appBundleIdentifier.getter()
{
  uint64_t v0 = 0xD000000000000016;
  if (_s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0() == 0xD00000000000002BLL
    && v1 == 0x8000000190B9F210)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v2 = sub_190B77998();
    swift_bridgeObjectRelease();
    if ((v2 & 1) == 0)
    {
      uint64_t v0 = 0x6E776F6E6B6E75;
      id v4 = (void *)sub_190B76F88();
      if (v4)
      {
        id v5 = v4;
        id v6 = objc_msgSend(v4, sel_bundleIdentifier);

        if (v6)
        {
          uint64_t v0 = sub_190B77168();
        }
      }
    }
  }
  return v0;
}

uint64_t _AppExtensionIdentity.appDisplayName.getter()
{
  uint64_t v0 = 0x73746361746E6F63;
  if (_s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0() == 0xD00000000000002BLL
    && v1 == 0x8000000190B9F210)
  {
    swift_bridgeObjectRelease();
    return v0;
  }
  char v2 = sub_190B77998();
  swift_bridgeObjectRelease();
  if (v2) {
    return v0;
  }
  id v3 = (void *)sub_190B76F88();
  if (!v3) {
    return sub_190B76F68();
  }
  id v4 = v3;
  id v5 = objc_msgSend(v3, sel_localizedName);

  uint64_t v0 = sub_190B77168();
  unint64_t v7 = v6;

  uint64_t v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0) {
    uint64_t v8 = v0 & 0xFFFFFFFFFFFFLL;
  }
  if (!v8)
  {
    swift_bridgeObjectRelease();
    return sub_190B76F68();
  }
  return v0;
}

uint64_t _AppExtensionIdentity.containerProviderIdentifier.getter()
{
  uint64_t v0 = 0xD000000000000016;
  if (_s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0() == 0xD00000000000002BLL
    && v1 == 0x8000000190B9F210)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v2 = sub_190B77998();
    swift_bridgeObjectRelease();
    if ((v2 & 1) == 0)
    {
      uint64_t v0 = 0x6E776F6E6B6E75;
      id v4 = (void *)sub_190B76F88();
      if (v4)
      {
        id v5 = v4;
        id v6 = objc_msgSend(v4, sel_bundleIdentifier);

        if (v6)
        {
          uint64_t v0 = sub_190B77168();
        }
      }
    }
  }
  return v0;
}

uint64_t initializeBufferWithCopyOfBuffer for ManagedDuplicate.SelectedImageData(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_190B194A8(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_190B194C8(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + _Block_object_dispose(&STACK[0x228], 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

void type metadata accessor for CNError(uint64_t a1)
{
}

id sub_190B1951C()
{
  return *v0;
}

uint64_t sub_190B19524@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_190B1952C(uint64_t a1)
{
  uint64_t v2 = sub_190B19A30(&qword_1E92A5888, type metadata accessor for CNError);

  return MEMORY[0x1F40E6E20](a1, v2);
}

uint64_t sub_190B19598(uint64_t a1)
{
  uint64_t v2 = sub_190B19A30(&qword_1E92A5888, type metadata accessor for CNError);

  return MEMORY[0x1F40E6E10](a1, v2);
}

uint64_t sub_190B19608(uint64_t a1)
{
  uint64_t v2 = sub_190B19A30((unint64_t *)&qword_1E92A58C0, type metadata accessor for CNError);

  return MEMORY[0x1F40E4480](a1, v2);
}

uint64_t sub_190B19674()
{
  return sub_190B77168();
}

uint64_t sub_190B19684(uint64_t a1)
{
  uint64_t v2 = sub_190B19A30((unint64_t *)&qword_1E92A58C0, type metadata accessor for CNError);

  return MEMORY[0x1F40E44F0](a1, v2);
}

uint64_t sub_190B196F0(uint64_t a1)
{
  uint64_t v2 = sub_190B19A30((unint64_t *)&qword_1E92A58C0, type metadata accessor for CNError);

  return MEMORY[0x1F40E44A8](a1, v2);
}

uint64_t sub_190B1975C(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_190B19A30((unint64_t *)&qword_1E92A58C0, type metadata accessor for CNError);
  id v5 = a1;

  return MEMORY[0x1F40E4498](v5, a2, v4);
}

uint64_t sub_190B197EC()
{
  id v1 = *v0;
  uint64_t v2 = sub_190B77618();

  return v2;
}

uint64_t sub_190B19824(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_190B19A30((unint64_t *)&qword_1E92A58C0, type metadata accessor for CNError);

  return MEMORY[0x1F40E44D8](a1, a2, v4);
}

uint64_t sub_190B198A0()
{
  return sub_190B77A68();
}

void *sub_190B19900@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + _Block_object_dispose(&STACK[0x228], 8) = 0;
  return result;
}

void sub_190B19910(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_190B1991C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_190B19A30((unint64_t *)&qword_1E92A58C0, type metadata accessor for CNError);

  return MEMORY[0x1F40E44B8](a1, a2, a3, v6);
}

uint64_t sub_190B199A0()
{
  return sub_190B19A30(&qword_1E92A5878, type metadata accessor for CNError);
}

uint64_t sub_190B199E8()
{
  return sub_190B19A30(&qword_1E92A5880, type metadata accessor for CNError);
}

uint64_t sub_190B19A30(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_190B19A78()
{
  return sub_190B19A30(&qword_1E92A5888, type metadata accessor for CNError);
}

uint64_t sub_190B19AC0()
{
  return sub_190B19A30(&qword_1E92A5890, type metadata accessor for CNError);
}

uint64_t sub_190B19B08()
{
  return sub_190B19A30(&qword_1E92A5898, type metadata accessor for CNError);
}

uint64_t sub_190B19B50()
{
  return sub_190B19A30(&qword_1E92A58A0, type metadata accessor for Code);
}

void type metadata accessor for Code(uint64_t a1)
{
}

uint64_t sub_190B19BAC()
{
  return sub_190B19A30(&qword_1E92A58A8, type metadata accessor for Code);
}

unint64_t sub_190B19BF8()
{
  unint64_t result = qword_1E92A58B0;
  if (!qword_1E92A58B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92A58B0);
  }
  return result;
}

uint64_t sub_190B19C4C()
{
  return sub_190B19A30(&qword_1E92A58B8, type metadata accessor for Code);
}

uint64_t sub_190B19C94()
{
  return sub_190B19A30((unint64_t *)&qword_1E92A58C0, type metadata accessor for CNError);
}

BOOL sub_190B19CDC(void *a1, void *a2)
{
  return *a1 == *a2;
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_190B19D10(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_190B19D30(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + _Block_object_dispose(&STACK[0x228], 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

void sub_190B19D80(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

id CNContactPosterNameComponents.emphasizedNameComponentIndex.getter()
{
  id v1 = objc_msgSend(v0, sel_emphasizedNameComponentIndex);
  if (v1 == (id)sub_190B76B18()) {
    return 0;
  }
  else {
    return v1;
  }
}

id sub_190B19E14(id result, id a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      __n128 result = (id)swift_bridgeObjectRetain();
      break;
    case 7:
      __n128 result = result;
      break;
    default:
      return result;
  }
  return result;
}

void destroy for ManagedDuplicateError(uint64_t a1)
{
}

void sub_190B19E84(void *a1, id a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      swift_bridgeObjectRelease();
      break;
    case 7:

      break;
    default:
      return;
  }
}

uint64_t _s8Contacts21ManagedDuplicateErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_190B19E14(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x228], 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ManagedDuplicateError(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_190B19E14(*(id *)a2, v4, v5);
  uint64_t v6 = *(void **)a1;
  unint64_t v7 = *(void **)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x228], 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_190B19E84(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ManagedDuplicateError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  char v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_190B19E84(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ManagedDuplicateError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF8 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 248);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 8) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ManagedDuplicateError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF7)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 248;
    *(void *)(result + _Block_object_dispose(&STACK[0x228], 8) = 0;
    if (a3 >= 0xF8) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF8) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_190B1A070(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 7u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 8);
  }
}

uint64_t sub_190B1A08C(uint64_t result, unsigned int a2)
{
  if (a2 >= 8)
  {
    *(void *)__n128 result = a2 - 8;
    *(void *)(result + _Block_object_dispose(&STACK[0x228], 8) = 0;
    LOBYTE(a2) = 8;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ManagedDuplicateError()
{
  return &type metadata for ManagedDuplicateError;
}

unint64_t sub_190B1A0B8()
{
  unint64_t result = qword_1E92A5A10;
  if (!qword_1E92A5A10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92A3E08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92A5A10);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_190B1A178(id a1, void *a2, char a3)
{
  switch(a3)
  {
    case 1:
      sub_190B77788();
      swift_bridgeObjectRelease();
      unint64_t v5 = 0xD00000000000002ALL;
      goto LABEL_8;
    case 2:
      sub_190B77788();
      swift_bridgeObjectRelease();
      unint64_t v5 = 0xD000000000000022;
      goto LABEL_8;
    case 3:
      sub_190B77788();
      swift_bridgeObjectRelease();
      unint64_t v5 = 0xD000000000000023;
      goto LABEL_8;
    case 4:
    case 5:
      unint64_t v8 = 0;
      sub_190B77788();
      sub_190B771F8();
      goto LABEL_9;
    case 6:
      sub_190B77788();
      swift_bridgeObjectRelease();
      unint64_t v5 = 0xD000000000000026;
      goto LABEL_8;
    case 7:
      id v7 = a1;
      sub_190B77788();
      swift_bridgeObjectRelease();
      unint64_t v8 = 0xD00000000000001BLL;
      swift_getErrorValue();
      sub_190B77A08();
      sub_190B771F8();
      swift_bridgeObjectRelease();
      sub_190B19E84(a1, a2, 7);
      return v8;
    case 8:
      uint64_t result = 0xD000000000000028;
      switch((unint64_t)a1)
      {
        case 1uLL:
          uint64_t result = 0xD000000000000040;
          break;
        case 2uLL:
          uint64_t result = 0xD00000000000003ALL;
          break;
        case 3uLL:
          uint64_t result = 0xD000000000000047;
          break;
        default:
          return result;
      }
      return result;
    default:
      sub_190B77788();
      swift_bridgeObjectRelease();
      unint64_t v5 = 0xD000000000000030;
LABEL_8:
      unint64_t v8 = v5;
LABEL_9:
      sub_190B771F8();
      return v8;
  }
}

uint64_t sub_190B1A48C()
{
  return sub_190B1A178(*(id *)v0, *(void **)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t sub_190B1A4A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_190B1A178(*(id *)v1, *(void **)(v1 + 8), *(unsigned char *)(v1 + 16));
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_190B1A4D8()
{
  unint64_t result = qword_1E92A61B0;
  if (!qword_1E92A61B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92A61B0);
  }
  return result;
}

void sub_190B1A52C()
{
  *(_WORD *)&algn_1E92A3C50[6] = -4864;
}

uint64_t static CNContactEntityIdentifierProvider.EntityTypeIdentifier.getter()
{
  if (qword_1E92A3C40 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1E92A3C48;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static CNContactEntityIdentifierProvider.entityIdentifier(for:)(void *a1)
{
  id v1 = objc_msgSend(a1, sel_identifier);
  uint64_t v2 = sub_190B77168();

  return v2;
}

id CNContactEntityIdentifierProvider.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id CNContactEntityIdentifierProvider.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CNContactEntityIdentifierProvider();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for CNContactEntityIdentifierProvider()
{
  return self;
}

id CNContactEntityIdentifierProvider.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CNContactEntityIdentifierProvider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_190B1A7A8()
{
  uint64_t v0 = sub_190B76FC8();
  __swift_allocate_value_buffer(v0, qword_1E92A8460);
  __swift_project_value_buffer(v0, (uint64_t)qword_1E92A8460);
  return sub_190B76FB8();
}

void sub_190B1A82C()
{
  unk_1E92A8447 = -18;
}

uint64_t sub_190B1A85C()
{
  type metadata accessor for ManagedDuplicateStore();
  uint64_t v0 = swift_allocObject();
  uint64_t result = ManagedDuplicateStore.init(inMemory:)(0);
  qword_1E92A3D10 = v0;
  return result;
}

uint64_t ManagedDuplicateStore.__allocating_init(inMemory:)(char a1)
{
  uint64_t v2 = swift_allocObject();
  ManagedDuplicateStore.init(inMemory:)(a1);
  return v2;
}

uint64_t static ManagedDuplicateStore.shared.getter()
{
  if (qword_1E92A3C78 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t ManagedDuplicateStore.init(inMemory:)(char a1)
{
  *(void *)(v1 + 24) = 0;
  *(void *)(v1 + 32) = 0;
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E08]), sel_init);
  *(void *)(v1 + 4_Block_object_dispose(&STACK[0x228], 8) = 0;
  *(void *)(v1 + 56) = 0;
  *(void *)(v1 + 40) = v3;
  uint64_t v4 = v1 + OBJC_IVAR____TtC8Contacts21ManagedDuplicateStore____lazy_storage___persistentStoreURL;
  uint64_t v5 = sub_190B76DD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *(unsigned char *)(v1 + 16) = a1;
  return v1;
}

uint64_t ManagedDuplicateStore.deinit()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if (v1)
  {
    uint64_t v2 = self;
    swift_unknownObjectRetain();
    id v3 = objc_msgSend(v2, sel_defaultCenter);
    objc_msgSend(v3, sel_removeObserver_, v1);
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRelease();

  sub_190B23144(v0 + OBJC_IVAR____TtC8Contacts21ManagedDuplicateStore____lazy_storage___persistentStoreURL, &qword_1E92A3C90);
  return v0;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t ManagedDuplicateStore.__deallocating_deinit()
{
  ManagedDuplicateStore.deinit();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x1F4186488](v0, v1, v2);
}

id sub_190B1AB40()
{
  uint64_t v1 = *(void **)(v0 + 40);
  objc_msgSend(v1, sel_lock);
  id v2 = *(id *)(v0 + 48);
  if (v2)
  {
    id v3 = v2;
  }
  else
  {
    id v2 = sub_190B1B660();
    uint64_t v4 = *(void **)(v0 + 48);
    *(void *)(v0 + 4_Block_object_dispose(&STACK[0x228], 8) = v2;
    id v5 = v2;
  }
  objc_msgSend(v1, sel_unlock);
  return v2;
}

id sub_190B1AC90()
{
  uint64_t v1 = *(void **)(v0 + 56);
  if (v1)
  {
    id v2 = *(id *)(v0 + 56);
  }
  else
  {
    sub_190B1ACEC();
    id v3 = *(void **)(v0 + 56);
    *(void *)(v0 + 56) = v4;
    id v2 = v4;

    uint64_t v1 = 0;
  }
  id v5 = v1;
  return v2;
}

void sub_190B1ACEC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3C90);
  ((void (*)(void))MEMORY[0x1F4188790])();
  uint64_t v1 = (char *)&v18 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_190B76DD8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = ((uint64_t (*)(void))MEMORY[0x1F4188790])();
  char v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)&v18 - v7;
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v10 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  CFDictionaryRef v11 = (void *)sub_190B77158();
  CFDictionaryRef v12 = (void *)sub_190B77158();
  id v13 = objc_msgSend(v10, sel_URLForResource_withExtension_, v11, v12);

  if (!v13)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v1, 1, 1, v2);
    goto LABEL_6;
  }
  sub_190B76DC8();

  BOOL v14 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
  v14(v1, v6, v2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v1, 0, 1, v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v14(v8, v1, v2);
  id v15 = objc_allocWithZone(MEMORY[0x1E4F1C120]);
  int v16 = (void *)sub_190B76D98();
  id v17 = objc_msgSend(v15, sel_initWithContentsOfURL_, v16);

  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);

    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_190B1AFE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3C90);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  char v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  unint64_t v8 = &v13[-v7];
  uint64_t v9 = v1 + OBJC_IVAR____TtC8Contacts21ManagedDuplicateStore____lazy_storage___persistentStoreURL;
  swift_beginAccess();
  sub_190B21E40(v9, (uint64_t)v8);
  uint64_t v10 = sub_190B76DD8();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1) {
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v11 + 32))(a1, v8, v10);
  }
  sub_190B23144((uint64_t)v8, &qword_1E92A3C90);
  sub_190B1B1BC(v1);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16))(v6, a1, v10);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  swift_beginAccess();
  sub_190B21EA8((uint64_t)v6, v9);
  return swift_endAccess();
}

uint64_t sub_190B1B1BC(uint64_t a1)
{
  v31[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = sub_190B76DD8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  char v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)v27 - v7;
  if (*(unsigned char *)(a1 + 16))
  {
    return sub_190B76D88();
  }
  else
  {
    sub_190B76D88();
    id v10 = objc_msgSend(self, sel_defaultManager);
    v31[0] = 0;
    id v11 = objc_msgSend(v10, sel_URLForDirectory_inDomain_appropriateForURL_create_error_, 14, 1, 0, 1, v31);

    id v12 = v31[0];
    if (v11)
    {
      sub_190B76DC8();
      id v13 = v12;

      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v6, v2);
    }
    else
    {
      id v14 = v31[0];
      id v15 = (void *)sub_190B76D68();

      swift_willThrow();
      if (qword_1E92A3D08 != -1) {
        swift_once();
      }
      uint64_t v16 = sub_190B76FC8();
      __swift_project_value_buffer(v16, (uint64_t)qword_1E92A8460);
      id v17 = v15;
      id v18 = v15;
      CFNumberRef v19 = sub_190B76FA8();
      os_log_type_t v20 = sub_190B77578();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v21 = (uint8_t *)swift_slowAlloc();
        id v29 = (void *)swift_slowAlloc();
        v31[0] = v29;
        double v28 = v21;
        *(_DWORD *)uint64_t v21 = 136315138;
        v27[1] = v21 + 4;
        swift_getErrorValue();
        uint64_t v22 = sub_190B77A08();
        uint64_t v30 = sub_190B21150(v22, v23, (uint64_t *)v31);
        sub_190B77648();
        swift_bridgeObjectRelease();

        CFStringRef v24 = v28;
        _os_log_impl(&dword_1909E3000, v19, v20, "Could not get URL for ManagedDuplicateStore %s", v28, 0xCu);
        CGImageDestinationRef v25 = v29;
        swift_arrayDestroy();
        MEMORY[0x192FD42A0](v25, -1, -1);
        MEMORY[0x192FD42A0](v24, -1, -1);
      }
      else
      {
      }
    }
    if (qword_1E92A3D00 != -1) {
      swift_once();
    }
    sub_190B76DA8();
    sub_190B76DB8();
    uint64_t v26 = *(void (**)(char *, uint64_t))(v3 + 8);
    v26(v6, v2);
    return ((uint64_t (*)(char *, uint64_t))v26)(v8, v2);
  }
}

id sub_190B1B660()
{
  uint64_t v1 = sub_190B76DD8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = sub_190B1AC90();
  id v6 = objc_allocWithZone(MEMORY[0x1E4F1C150]);
  uint64_t v7 = (void *)sub_190B77158();
  id v8 = objc_msgSend(v6, sel_initWithName_managedObjectModel_, v7, v5);

  id v9 = objc_msgSend(v8, sel_persistentStoreDescriptions);
  sub_190B23474(0, (unint64_t *)&unk_1E92A3D70);
  unint64_t v10 = sub_190B772C8();

  if (!(v10 >> 62))
  {
    if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    sub_190B1A4D8();
    swift_allocError();
    *(void *)uint64_t v42 = 0xD000000000000032;
    *(void *)(v42 + _Block_object_dispose(&STACK[0x228], 8) = 0x8000000190B9FCE0;
    *(unsigned char *)(v42 + 16) = 0;
    swift_willThrow();

    return v8;
  }
  swift_bridgeObjectRetain();
  uint64_t v41 = sub_190B778A8();
  swift_bridgeObjectRelease();
  if (!v41) {
    goto LABEL_14;
  }
LABEL_3:
  if ((v10 & 0xC000000000000001) != 0)
  {
    id v11 = (id)MEMORY[0x192FD1FB0](0, v10);
  }
  else
  {
    if (!*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_18;
    }
    id v11 = *(id *)(v10 + 32);
  }
  id v12 = v11;
  swift_bridgeObjectRelease();
  sub_190B1AFE4((uint64_t)v4);
  id v13 = (void *)sub_190B76D98();
  uint64_t v14 = v2 + 8;
  id v15 = *(void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v2 = v1;
  v48 = v15;
  uint64_t v49 = v14;
  v15(v4, v1);
  id v50 = v12;
  objc_msgSend(v12, sel_setURL_, v13);

  if (qword_1E92A3D08 != -1) {
LABEL_18:
  }
    swift_once();
  uint64_t v16 = sub_190B76FC8();
  __swift_project_value_buffer(v16, (uint64_t)qword_1E92A8460);
  swift_retain_n();
  id v17 = sub_190B76FA8();
  os_log_type_t v18 = sub_190B77568();
  if (os_log_type_enabled(v17, v18))
  {
    CFNumberRef v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v45 = swift_slowAlloc();
    aBlock[0] = v45;
    uint64_t v46 = v0;
    *(_DWORD *)CFNumberRef v19 = 136315138;
    v44[1] = v19 + 4;
    sub_190B1AFE4((uint64_t)v4);
    sub_190B234F0(&qword_1E92A5A50, MEMORY[0x1E4F276F0]);
    uint64_t v20 = sub_190B77968();
    id v47 = v8;
    unint64_t v22 = v21;
    v48(v4, v2);
    aBlock[7] = sub_190B21150(v20, v22, aBlock);
    sub_190B77648();
    swift_release_n();
    id v8 = v47;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1909E3000, v17, v18, "Will attempt to use ManagedDuplicateStore at %s", v19, 0xCu);
    uint64_t v23 = v45;
    swift_arrayDestroy();
    MEMORY[0x192FD42A0](v23, -1, -1);
    MEMORY[0x192FD42A0](v19, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  sub_190B23474(0, &qword_1E92A3E48);
  CFStringRef v24 = (void *)sub_190B775D8();
  id v25 = v50;
  objc_msgSend(v50, sel_setOption_forKey_, v24, *MEMORY[0x1E4F1BEF8]);

  uint64_t v26 = (void *)sub_190B775D8();
  objc_msgSend(v25, sel_setOption_forKey_, v26, *MEMORY[0x1E4F1BE80]);

  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = 0;
  double v28 = (id *)(v27 + 16);
  aBlock[4] = (uint64_t)sub_190B234E8;
  aBlock[5] = v27;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_190B1BE64;
  aBlock[3] = (uint64_t)&block_descriptor_65;
  id v29 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_loadPersistentStoresWithCompletionHandler_, v29);
  _Block_release(v29);
  swift_beginAccess();
  if (*v28)
  {
    id v30 = objc_msgSend(*v28, sel_localizedDescription);
    uint64_t v31 = sub_190B77168();
    uint64_t v33 = v32;

    sub_190B1A4D8();
    swift_allocError();
    *(void *)uint64_t v34 = v31;
    *(void *)(v34 + _Block_object_dispose(&STACK[0x228], 8) = v33;
    *(unsigned char *)(v34 + 16) = 0;
    swift_willThrow();

    swift_release();
  }
  else
  {
    id v35 = objc_msgSend(v8, sel_viewContext);
    objc_msgSend(v35, sel_setAutomaticallyMergesChangesFromParent_, 1);

    id v36 = objc_msgSend(v8, sel_viewContext);
    uint64_t v37 = (void *)sub_190B77158();
    objc_msgSend(v36, sel_setName_, v37);

    id v38 = objc_msgSend(v8, sel_viewContext);
    objc_msgSend(v38, sel_setMergePolicy_, *MEMORY[0x1E4F1BE40]);

    id v39 = objc_msgSend(v8, sel_viewContext);
    objc_msgSend(v39, sel_setUndoManager_, 0);

    id v40 = objc_msgSend(v8, sel_viewContext);
    objc_msgSend(v40, sel_setShouldDeleteInaccessibleFaults_, 1);

    swift_release();
  }
  return v8;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

void sub_190B1BDFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    uint64_t v4 = sub_190B76D58();
    swift_beginAccess();
    id v5 = *(void **)(a3 + 16);
    *(void *)(a3 + 16) = v4;
  }
}

void sub_190B1BE64(uint64_t a1, void *a2, void *a3)
{
  id v5 = *(void (**)(id, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(v7, a3);
  swift_release();
}

id sub_190B1BEF0()
{
  id v0 = sub_190B1AB40();
  if (v0)
  {
    uint64_t v1 = v0;
    id v2 = objc_msgSend(v0, sel_newBackgroundContext);
    objc_msgSend(v2, sel_setMergePolicy_, *MEMORY[0x1E4F1BE40]);
    objc_msgSend(v2, sel_setUndoManager_, 0);
  }
  else
  {
    if (qword_1E92A3D08 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_190B76FC8();
    __swift_project_value_buffer(v3, (uint64_t)qword_1E92A8460);
    uint64_t v4 = sub_190B76FA8();
    os_log_type_t v5 = sub_190B77578();
    if (os_log_type_enabled(v4, v5))
    {
      id v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v6 = 0;
      _os_log_impl(&dword_1909E3000, v4, v5, "Could not make task context ManagedDuplicateStore", v6, 2u);
      MEMORY[0x192FD42A0](v6, -1, -1);
    }

    return 0;
  }
  return v2;
}

void sub_190B1C020()
{
  id v1 = sub_190B1BEF0();
  if (v1)
  {
    id v2 = v1;
    uint64_t v3 = (void *)sub_190B77158();
    objc_msgSend(v2, sel_setName_, v3);

    uint64_t v4 = (void *)sub_190B77158();
    objc_msgSend(v2, sel_setTransactionAuthor_, v4);

    MEMORY[0x1F4188790](v5);
    sub_190B77598();
    if (v0)
    {
      swift_getErrorValue();
      uint64_t v6 = sub_190B77A08();
      uint64_t v8 = v7;
      sub_190B1A4D8();
      swift_allocError();
      *(void *)uint64_t v9 = v6;
      *(void *)(v9 + _Block_object_dispose(&STACK[0x228], 8) = v8;
      *(unsigned char *)(v9 + 16) = 3;
      swift_willThrow();
    }
  }
  else
  {
    if (qword_1E92A3D08 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_190B76FC8();
    __swift_project_value_buffer(v10, (uint64_t)qword_1E92A8460);
    id v11 = sub_190B76FA8();
    os_log_type_t v12 = sub_190B77578();
    if (os_log_type_enabled(v11, v12))
    {
      id v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v13 = 0;
      _os_log_impl(&dword_1909E3000, v11, v12, "Could not save duplicates", v13, 2u);
      MEMORY[0x192FD42A0](v13, -1, -1);
    }
  }
}

uint64_t sub_190B1C278()
{
  return sub_190B77598();
}

void sub_190B1C2CC(unint64_t a1, void *a2)
{
  v34[1] = *(id *)MEMORY[0x1E4F143B8];
  if (qword_1E92A3D08 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_190B76FC8();
  __swift_project_value_buffer(v5, (uint64_t)qword_1E92A8460);
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_190B76FA8();
  LOBYTE(v7) = sub_190B77568();
  unint64_t v8 = a1 >> 62;
  if (!os_log_type_enabled(v6, (os_log_type_t)v7))
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_8;
  }
  id v2 = (uint8_t *)swift_slowAlloc();
  *(_DWORD *)id v2 = 134217984;
  if (v8) {
    goto LABEL_26;
  }
  uint64_t v9 = *(void **)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease();
    v34[0] = v9;
    sub_190B77648();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1909E3000, v6, (os_log_type_t)v7, "Will save %ld managed duplicates", v2, 0xCu);
    MEMORY[0x192FD42A0](v2, -1, -1);

LABEL_8:
    if (v8)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_190B778A8();
      if (!v7) {
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v7) {
        goto LABEL_17;
      }
    }
    type metadata accessor for CNDuplicateSet();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    if (v7 >= 1) {
      break;
    }
    __break(1u);
LABEL_26:
    swift_bridgeObjectRetain();
    uint64_t v9 = (void *)sub_190B778A8();
    swift_bridgeObjectRelease();
  }
  id v11 = (objc_class *)ObjCClassFromMetadata;
  uint64_t v12 = 0;
  do
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v13 = (id)MEMORY[0x192FD1FB0](v12, a1);
    }
    else {
      id v13 = *(id *)(a1 + 8 * v12 + 32);
    }
    uint64_t v14 = v13;
    ++v12;
    id v15 = objc_msgSend(objc_allocWithZone(v11), sel_initWithContext_, a2);
    sub_190B4E8FC((uint64_t)v14, a2);
  }
  while (v7 != v12);
LABEL_17:
  swift_bridgeObjectRelease();
  v34[0] = 0;
  if (objc_msgSend(a2, sel_save_, v34))
  {
    id v16 = v34[0];
    id v17 = sub_190B76FA8();
    os_log_type_t v18 = sub_190B77568();
    if (os_log_type_enabled(v17, v18))
    {
      CFNumberRef v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)CFNumberRef v19 = 0;
      _os_log_impl(&dword_1909E3000, v17, v18, "Did save managed duplicates", v19, 2u);
      MEMORY[0x192FD42A0](v19, -1, -1);
    }
  }
  else
  {
    id v20 = v34[0];
    unint64_t v21 = (void *)sub_190B76D68();

    swift_willThrow();
    id v22 = v21;
    id v23 = v21;
    CFStringRef v24 = sub_190B76FA8();
    os_log_type_t v25 = sub_190B77578();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = (void *)swift_slowAlloc();
      v34[0] = v27;
      *(_DWORD *)uint64_t v26 = 136315138;
      swift_getErrorValue();
      uint64_t v28 = sub_190B77A08();
      sub_190B21150(v28, v29, (uint64_t *)v34);
      sub_190B77648();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1909E3000, v24, v25, "Could not save managed duplicates %s", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FD42A0](v27, -1, -1);
      MEMORY[0x192FD42A0](v26, -1, -1);
    }
    else
    {
    }
    swift_getErrorValue();
    uint64_t v30 = sub_190B77A08();
    uint64_t v32 = v31;
    sub_190B1A4D8();
    swift_allocError();
    *(void *)uint64_t v33 = v30;
    *(void *)(v33 + _Block_object_dispose(&STACK[0x228], 8) = v32;
    *(unsigned char *)(v33 + 16) = 3;
    swift_willThrow();
  }
}

void sub_190B1C7B8(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    id v1 = sub_190B1BEF0();
    if (v1)
    {
      id v2 = v1;
      uint64_t v3 = (void *)sub_190B77158();
      objc_msgSend(v2, sel_setName_, v3);

      uint64_t v4 = (void *)sub_190B77158();
      objc_msgSend(v2, sel_setTransactionAuthor_, v4);

      MEMORY[0x1F4188790](v5);
      sub_190B77598();
    }
    else
    {
      if (qword_1E92A3D08 != -1) {
        swift_once();
      }
      uint64_t v6 = sub_190B76FC8();
      __swift_project_value_buffer(v6, (uint64_t)qword_1E92A8460);
      uint64_t v7 = sub_190B76FA8();
      os_log_type_t v8 = sub_190B77578();
      if (os_log_type_enabled(v7, v8))
      {
        uint64_t v9 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v9 = 0;
        _os_log_impl(&dword_1909E3000, v7, v8, "Could not batch insert duplicates", v9, 2u);
        MEMORY[0x192FD42A0](v9, -1, -1);
      }
    }
  }
}

void sub_190B1C9A0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  id v5 = sub_190B22F28(a2);
  if (qword_1E92A3D08 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_190B76FC8();
  __swift_project_value_buffer(v6, (uint64_t)qword_1E92A8460);
  uint64_t v7 = sub_190B76FA8();
  os_log_type_t v8 = sub_190B77568();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_1909E3000, v7, v8, "Will batch insert duplicates", v9, 2u);
    MEMORY[0x192FD42A0](v9, -1, -1);
  }

  id v30 = 0;
  id v10 = objc_msgSend(a3, sel_executeRequest_error_, v5, &v30);
  id v11 = v30;
  if (!v10)
  {
    id v17 = v30;
    os_log_type_t v18 = (void *)sub_190B76D68();

    swift_willThrow();
    swift_getErrorValue();
    id v30 = (id)sub_190B77A08();
    uint64_t v31 = v19;
    sub_190B771F8();
    MEMORY[0x192FD1AC0](a2, &type metadata for DuplicateSetProperties);
    sub_190B771F8();
    swift_bridgeObjectRelease();
    id v20 = v30;
    uint64_t v21 = v31;
    sub_190B1A4D8();
    swift_allocError();
    *(void *)uint64_t v22 = v20;
    *(void *)(v22 + _Block_object_dispose(&STACK[0x228], 8) = v21;
    *(unsigned char *)(v22 + 16) = 4;
    swift_willThrow();

LABEL_20:
    return;
  }
  uint64_t v12 = v10;
  self;
  uint64_t v13 = swift_dynamicCastObjCClass();
  if (!v13)
  {
    id v23 = v11;

LABEL_19:
    sub_190B1A4D8();
    swift_allocError();
    *(void *)uint64_t v27 = 0xD000000000000023;
    *(void *)(v27 + _Block_object_dispose(&STACK[0x228], 8) = 0x8000000190B9FC20;
    *(unsigned char *)(v27 + 16) = 4;
    swift_willThrow();
    goto LABEL_20;
  }
  uint64_t v14 = (void *)v13;
  id v15 = v11;
  id v16 = v12;
  if (objc_msgSend(v14, sel_result))
  {
    sub_190B77698();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v29, 0, sizeof(v29));
  }
  sub_190B23344((uint64_t)v29, (uint64_t)&v30);
  if (!v32)
  {

    sub_190B23144((uint64_t)&v30, &qword_1E92A3DD8);
    goto LABEL_19;
  }
  if ((swift_dynamicCast() & 1) == 0 || v28 != 1)
  {

    goto LABEL_19;
  }
  CFStringRef v24 = sub_190B76FA8();
  os_log_type_t v25 = sub_190B77568();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v26 = 0;
    _os_log_impl(&dword_1909E3000, v24, v25, "Successfully insert duplicates", v26, 2u);
    MEMORY[0x192FD42A0](v26, -1, -1);
  }
  else
  {
  }
}

uint64_t sub_190B1CD7C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  os_log_type_t v8 = (void *)(a2 + 16);
  uint64_t result = swift_beginAccess();
  int64_t v10 = *(void *)(a2 + 16);
  if (v10 >= a3) {
    return v10 >= a3;
  }
  if (v10 < 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if ((unint64_t)v10 >= *(void *)(a4 + 16))
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  unint64_t v11 = DuplicateSetProperties.dictionaryValue.getter();
  sub_190B1CEC0(v11);
  swift_bridgeObjectRelease();
  uint64_t v12 = (void *)sub_190B77048();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_addEntriesFromDictionary_, v12);

  uint64_t result = swift_beginAccess();
  if (!__OFADD__(*v8, 1))
  {
    ++*v8;
    return v10 >= a3;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_190B1CEC0(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3D98);
    uint64_t v2 = sub_190B778E8();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    id v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_190B23088(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(void *)&long long v39 = v19;
    *((void *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(void *)&v37[0] = v19;
    *((void *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_190B23134(v38, v32);
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_190B23134(v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_190B23134(v36, v37);
    sub_190B23134(v37, &v33);
    uint64_t result = sub_190B77718();
    uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = *(void *)(v2 + 48) + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_190B23134(&v33, (_OWORD *)(*(void *)(v2 + 56) + 32 * v9));
    ++*(void *)(v2 + 16);
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_190B23408();
    return v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_190B1D288()
{
  id v1 = sub_190B1BEF0();
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = (void *)sub_190B77158();
    [v2 setName:v3];

    uint64_t v4 = (void *)sub_190B77158();
    [v2 setTransactionAuthor:v4];

    MEMORY[0x1F4188790](v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3DE0);
    sub_190B77598();
    if (v0) {
  }
    }
  else
  {
    if (qword_1E92A3D08 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_190B76FC8();
    __swift_project_value_buffer(v6, (uint64_t)qword_1E92A8460);
    uint64_t v2 = sub_190B76FA8();
    os_log_type_t v7 = sub_190B77578();
    if (os_log_type_enabled(v2, v7))
    {
      int64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int64_t v8 = 0;
      _os_log_impl(&dword_1909E3000, v2, v7, "Could not update duplicate availability", v8, 2u);
      MEMORY[0x192FD42A0](v8, -1, -1);
    }
  }
}

void sub_190B1D480(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  v36[17] = *(id *)MEMORY[0x1E4F143B8];
  type metadata accessor for CNDuplicateSet();
  id v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_entity);
  os_log_type_t v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C038]), sel_initWithEntity_, v6);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92A3DB0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_190B908E0;
  v36[0] = (id)0x616C696176417369;
  v36[1] = (id)0xEB00000000656C62;
  sub_190B77738();
  id v9 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, 0);
  *(void *)(inited + 96) = sub_190B23474(0, &qword_1E92A3E48);
  *(void *)(inited + 72) = v9;
  sub_190B612E8(inited);
  uint64_t v10 = (void *)sub_190B77048();
  swift_bridgeObjectRelease();
  [v7 setPropertiesToUpdate:v10];

  sub_190B23474(0, (unint64_t *)&unk_1E92A3D50);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92A3DC0);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_190B908E0;
  *(void *)(v11 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3D30);
  *(void *)(v11 + 64) = sub_190B21814();
  *(void *)(v11 + 32) = a1;
  swift_bridgeObjectRetain();
  unint64_t v12 = (void *)sub_190B77548();
  [v7 setPredicate:v12];

  if (qword_1E92A3D08 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_190B76FC8();
  __swift_project_value_buffer(v13, (uint64_t)qword_1E92A8460);
  unint64_t v14 = sub_190B76FA8();
  os_log_type_t v15 = sub_190B77568();
  if (os_log_type_enabled(v14, v15))
  {
    int64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int64_t v16 = 0;
    _os_log_impl(&dword_1909E3000, v14, v15, "Will batch update duplicate availability", v16, 2u);
    MEMORY[0x192FD42A0](v16, -1, -1);
  }

  v36[0] = 0;
  id v17 = objc_msgSend(a2, sel_executeRequest_error_, v7, v36);
  id v18 = v36[0];
  if (!v17)
  {
    id v23 = v36[0];
    unint64_t v24 = (void *)sub_190B76D68();

    swift_willThrow();
    swift_getErrorValue();
    uint64_t v25 = sub_190B77A08();
    uint64_t v27 = v26;
    sub_190B1A4D8();
    swift_allocError();
    *(void *)uint64_t v28 = v25;
    *(void *)(v28 + _Block_object_dispose(&STACK[0x228], 8) = v27;
    *(unsigned char *)(v28 + 16) = 5;
    swift_willThrow();

    return;
  }
  id v19 = v17;
  self;
  uint64_t v20 = swift_dynamicCastObjCClass();
  if (!v20)
  {
    id v29 = v18;

LABEL_22:
    goto LABEL_23;
  }
  unint64_t v21 = (void *)v20;
  id v22 = v18;
  id v19 = v19;
  if (objc_msgSend(v21, sel_result))
  {
    sub_190B77698();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v35, 0, sizeof(v35));
  }
  sub_190B23344((uint64_t)v35, (uint64_t)v36);
  if (v36[3])
  {
    if ((swift_dynamicCast() & 1) != 0 && v34 == 1)
    {
      long long v30 = sub_190B76FA8();
      os_log_type_t v31 = sub_190B77568();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v32 = 0;
        _os_log_impl(&dword_1909E3000, v30, v31, "Successfully updated duplicate availability", v32, 2u);
        MEMORY[0x192FD42A0](v32, -1, -1);
        long long v33 = v7;
      }
      else
      {
        long long v33 = v30;
        long long v30 = v7;
      }
    }
    else
    {
    }
    goto LABEL_22;
  }

  sub_190B23144((uint64_t)v36, &qword_1E92A3DD8);
LABEL_23:
  *a3 = 0;
}

void sub_190B1D9B8()
{
  id v0 = sub_190B1BEF0();
  if (v0)
  {
    id v1 = v0;
    uint64_t v2 = (void *)sub_190B77158();
    objc_msgSend(v1, sel_setName_, v2);

    uint64_t v3 = (void *)sub_190B77158();
    objc_msgSend(v1, sel_setTransactionAuthor_, v3);

    MEMORY[0x1F4188790](v4);
    sub_190B77598();
  }
  else
  {
    if (qword_1E92A3D08 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_190B76FC8();
    __swift_project_value_buffer(v5, (uint64_t)qword_1E92A8460);
    id v6 = sub_190B76FA8();
    os_log_type_t v7 = sub_190B77578();
    if (os_log_type_enabled(v6, v7))
    {
      int64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int64_t v8 = 0;
      _os_log_impl(&dword_1909E3000, v6, v7, "Could not update cohort availability", v8, 2u);
      MEMORY[0x192FD42A0](v8, -1, -1);
    }
  }
}

void sub_190B1DB88(uint64_t a1, void *a2)
{
  v36[4] = *(id *)MEMORY[0x1E4F143B8];
  if (qword_1E92A3CF8 != -1) {
    swift_once();
  }
  id v4 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)sub_190B77158();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, sel_initWithEntityName_, v5);

  sub_190B23474(0, (unint64_t *)&unk_1E92A3D50);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92A3DC0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_190B908E0;
  *(void *)(v7 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3D30);
  *(void *)(v7 + 64) = sub_190B21814();
  *(void *)(v7 + 32) = a1;
  swift_bridgeObjectRetain();
  int64_t v8 = (void *)sub_190B77548();
  objc_msgSend(v6, sel_setPredicate_, v8);

  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C018]), sel_initWithFetchRequest_, v6);
  objc_msgSend(v9, sel_setResultType_, 2);
  if (qword_1E92A3D08 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_190B76FC8();
  __swift_project_value_buffer(v10, (uint64_t)qword_1E92A8460);
  uint64_t v11 = sub_190B76FA8();
  os_log_type_t v12 = sub_190B77568();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_1909E3000, v11, v12, "Will batch update duplicate cohort availability", v13, 2u);
    MEMORY[0x192FD42A0](v13, -1, -1);
  }

  v36[0] = 0;
  id v14 = objc_msgSend(a2, sel_executeRequest_error_, v9, v36);
  id v15 = v36[0];
  if (!v14)
  {
    id v21 = v36[0];
    id v22 = (void *)sub_190B76D68();

    swift_willThrow();
    swift_getErrorValue();
    uint64_t v23 = sub_190B77A08();
    uint64_t v25 = v24;
    sub_190B1A4D8();
    swift_allocError();
    *(void *)uint64_t v26 = v23;
    *(void *)(v26 + _Block_object_dispose(&STACK[0x228], 8) = v25;
    *(unsigned char *)(v26 + 16) = 6;
    swift_willThrow();

    return;
  }
  int64_t v16 = v14;
  self;
  uint64_t v17 = swift_dynamicCastObjCClass();
  if (v17)
  {
    id v18 = (void *)v17;
    id v19 = v15;
    id v20 = v16;
    if (objc_msgSend(v18, sel_result))
    {
      sub_190B77698();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v35, 0, sizeof(v35));
    }
    sub_190B23344((uint64_t)v35, (uint64_t)v36);
    if (v36[3])
    {
      if (swift_dynamicCast())
      {
        uint64_t v28 = sub_190B76FA8();
        os_log_type_t v29 = sub_190B77568();
        if (os_log_type_enabled(v28, v29))
        {
          long long v30 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)long long v30 = 134217984;
          v36[0] = v34;
          sub_190B77648();
          _os_log_impl(&dword_1909E3000, v28, v29, "Removed %ld unavailable cohorts.", v30, 0xCu);
          MEMORY[0x192FD42A0](v30, -1, -1);

          return;
        }

        goto LABEL_23;
      }
    }
    else
    {

      sub_190B23144((uint64_t)v36, &qword_1E92A3DD8);
    }
  }
  else
  {
    id v27 = v15;
  }
  os_log_type_t v31 = sub_190B76FA8();
  os_log_type_t v32 = sub_190B77578();
  if (os_log_type_enabled(v31, v32))
  {
    long long v33 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v33 = 0;
    _os_log_impl(&dword_1909E3000, v31, v32, "There was an unknown problem updating cohort availability.", v33, 2u);
    MEMORY[0x192FD42A0](v33, -1, -1);

    return;
  }

LABEL_23:
}

uint64_t sub_190B1E0EC(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = MEMORY[0x1E4FBC860];
  id v3 = sub_190B1BEF0();
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = (void *)sub_190B77158();
    objc_msgSend(v4, sel_setName_, v5);

    id v6 = (void *)sub_190B77158();
    objc_msgSend(v4, sel_setTransactionAuthor_, v6);

    id v7 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
    int64_t v8 = (void *)sub_190B77158();
    id v9 = objc_msgSend(v7, sel_initWithEntityName_, v8);

    objc_msgSend(v9, sel_setPredicate_, a1);
    uint64_t v10 = (void *)swift_allocObject();
    v10[2] = v4;
    void v10[3] = v9;
    v10[4] = v2;
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = sub_190B20FE8;
    *(void *)(v11 + 24) = v10;
    v22[4] = sub_190B21004;
    v22[5] = v11;
    v22[0] = MEMORY[0x1E4F143A8];
    v22[1] = 1107296256;
    v22[2] = sub_190B1E968;
    v22[3] = &block_descriptor_0;
    os_log_type_t v12 = _Block_copy(v22);
    id v13 = v4;
    id v14 = v9;
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v13, sel_performBlockAndWait_, v12);

    _Block_release(v12);
    LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v13 & 1) == 0)
    {
      swift_beginAccess();
      uint64_t v15 = *(void *)(v2 + 16);
      swift_bridgeObjectRetain();
      swift_release();
      int64_t v16 = sub_190B20FE8;
      goto LABEL_8;
    }
    __break(1u);
    goto LABEL_10;
  }
  if (qword_1E92A3D08 != -1) {
LABEL_10:
  }
    swift_once();
  uint64_t v17 = sub_190B76FC8();
  __swift_project_value_buffer(v17, (uint64_t)qword_1E92A8460);
  id v18 = sub_190B76FA8();
  os_log_type_t v19 = sub_190B77578();
  if (os_log_type_enabled(v18, v19))
  {
    id v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v20 = 0;
    _os_log_impl(&dword_1909E3000, v18, v19, "Could not load managed duplicates", v20, 2u);
    MEMORY[0x192FD42A0](v20, -1, -1);
  }

  uint64_t v15 = *(void *)(v2 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  int64_t v16 = 0;
LABEL_8:
  sub_190B20FD4((uint64_t)v16);
  return v15;
}

void sub_190B1E48C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_1E92A3D08 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_190B76FC8();
  uint64_t v5 = (uint8_t *)__swift_project_value_buffer(v4, (uint64_t)qword_1E92A8460);
  id v6 = sub_190B76FA8();
  os_log_type_t v7 = sub_190B77568();
  if (os_log_type_enabled(v6, v7))
  {
    int64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int64_t v8 = 0;
    _os_log_impl(&dword_1909E3000, v6, v7, "Will fetch managed duplicates from store", v8, 2u);
    MEMORY[0x192FD42A0](v8, -1, -1);
  }

  type metadata accessor for CNDuplicateSet();
  unint64_t v9 = sub_190B775B8();
  unint64_t v10 = v9;
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_190B778A8();
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_7;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t v17 = MEMORY[0x1E4FBC860];
    goto LABEL_16;
  }
  uint64_t v11 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v11) {
    goto LABEL_15;
  }
LABEL_7:
  uint64_t v18 = MEMORY[0x1E4FBC860];
  os_log_type_t v12 = &v18;
  sub_190B77838();
  if (v11 < 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v13 = 0;
  do
  {
    if ((v10 & 0xC000000000000001) != 0) {
      id v14 = (id)MEMORY[0x192FD1FB0](v13, v10);
    }
    else {
      id v14 = *(id *)(v10 + 8 * v13 + 32);
    }
    uint64_t v15 = v14;
    ++v13;
    id v16 = objc_allocWithZone((Class)type metadata accessor for ManagedDuplicate());
    sub_190B4A8BC(v15);

    sub_190B77808();
    sub_190B77848();
    sub_190B77858();
    sub_190B77818();
  }
  while (v11 != v13);
  uint64_t v17 = v18;
  swift_bridgeObjectRelease();
LABEL_16:
  swift_beginAccess();
  *(void *)(a3 + 16) = v17;
  swift_bridgeObjectRelease();
  swift_retain();
  os_log_type_t v12 = sub_190B76FA8();
  LOBYTE(v11) = sub_190B77568();
  if (os_log_type_enabled(v12, (os_log_type_t)v11))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 134217984;
    swift_beginAccess();
    if (!(*(void *)(a3 + 16) >> 62))
    {
LABEL_18:
      sub_190B77648();
      swift_release();
      _os_log_impl(&dword_1909E3000, v12, (os_log_type_t)v11, "Did fetch %ld managed duplicates from store", v5, 0xCu);
      MEMORY[0x192FD42A0](v5, -1, -1);

      return;
    }
LABEL_21:
    swift_bridgeObjectRetain();
    sub_190B778A8();
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }

  swift_release();
}

uint64_t sub_190B1E968(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_190B1E990(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = MEMORY[0x1E4FBC860];
  id v3 = sub_190B1BEF0();
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = (void *)sub_190B77158();
    objc_msgSend(v4, sel_setName_, v5);

    id v6 = (void *)sub_190B77158();
    objc_msgSend(v4, sel_setTransactionAuthor_, v6);

    if (qword_1E92A3CF8 != -1) {
      swift_once();
    }
    id v7 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
    swift_bridgeObjectRetain();
    int64_t v8 = (void *)sub_190B77158();
    swift_bridgeObjectRelease();
    id v9 = objc_msgSend(v7, sel_initWithEntityName_, v8);

    objc_msgSend(v9, sel_setPredicate_, a1);
    unint64_t v10 = (void *)swift_allocObject();
    v10[2] = v4;
    void v10[3] = v9;
    v10[4] = v2;
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = sub_190B21090;
    *(void *)(v11 + 24) = v10;
    v22[4] = sub_190B23538;
    v22[5] = v11;
    v22[0] = MEMORY[0x1E4F143A8];
    v22[1] = 1107296256;
    v22[2] = sub_190B1E968;
    v22[3] = &block_descriptor_20;
    os_log_type_t v12 = _Block_copy(v22);
    id v13 = v4;
    id v14 = v9;
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v13, sel_performBlockAndWait_, v12);

    _Block_release(v12);
    LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v13 & 1) == 0)
    {
      swift_beginAccess();
      uint64_t v15 = *(void *)(v2 + 16);
      swift_bridgeObjectRetain();
      swift_release();
      id v16 = sub_190B21090;
      goto LABEL_10;
    }
    __break(1u);
    goto LABEL_12;
  }
  if (qword_1E92A3D08 != -1) {
LABEL_12:
  }
    swift_once();
  uint64_t v17 = sub_190B76FC8();
  __swift_project_value_buffer(v17, (uint64_t)qword_1E92A8460);
  uint64_t v18 = sub_190B76FA8();
  os_log_type_t v19 = sub_190B77578();
  if (os_log_type_enabled(v18, v19))
  {
    id v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v20 = 0;
    _os_log_impl(&dword_1909E3000, v18, v19, "Could not load managed cohorts", v20, 2u);
    MEMORY[0x192FD42A0](v20, -1, -1);
  }

  uint64_t v15 = *(void *)(v2 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  id v16 = 0;
LABEL_10:
  sub_190B20FD4((uint64_t)v16);
  return v15;
}

void sub_190B1ED64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_1E92A3D08 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_190B76FC8();
  uint64_t v5 = (uint8_t *)__swift_project_value_buffer(v4, (uint64_t)qword_1E92A8460);
  id v6 = sub_190B76FA8();
  os_log_type_t v7 = sub_190B77568();
  if (os_log_type_enabled(v6, v7))
  {
    int64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int64_t v8 = 0;
    _os_log_impl(&dword_1909E3000, v6, v7, "Will fetch managed cohorts from store", v8, 2u);
    MEMORY[0x192FD42A0](v8, -1, -1);
  }

  type metadata accessor for CNDuplicateCohort();
  unint64_t v9 = sub_190B775B8();
  unint64_t v10 = v9;
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_190B778A8();
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_7;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t v17 = MEMORY[0x1E4FBC860];
    goto LABEL_16;
  }
  uint64_t v11 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v11) {
    goto LABEL_15;
  }
LABEL_7:
  uint64_t v18 = MEMORY[0x1E4FBC860];
  os_log_type_t v12 = &v18;
  sub_190B77838();
  if (v11 < 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v13 = 0;
  do
  {
    if ((v10 & 0xC000000000000001) != 0) {
      id v14 = (id)MEMORY[0x192FD1FB0](v13, v10);
    }
    else {
      id v14 = *(id *)(v10 + 8 * v13 + 32);
    }
    uint64_t v15 = v14;
    ++v13;
    id v16 = objc_allocWithZone((Class)type metadata accessor for ManagedCohort());
    sub_190B525F8(v15);

    sub_190B77808();
    sub_190B77848();
    sub_190B77858();
    sub_190B77818();
  }
  while (v11 != v13);
  uint64_t v17 = v18;
  swift_bridgeObjectRelease();
LABEL_16:
  swift_beginAccess();
  *(void *)(a3 + 16) = v17;
  swift_bridgeObjectRelease();
  swift_retain();
  os_log_type_t v12 = sub_190B76FA8();
  LOBYTE(v11) = sub_190B77568();
  if (os_log_type_enabled(v12, (os_log_type_t)v11))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 134217984;
    swift_beginAccess();
    if (!(*(void *)(a3 + 16) >> 62))
    {
LABEL_18:
      sub_190B77648();
      swift_release();
      _os_log_impl(&dword_1909E3000, v12, (os_log_type_t)v11, "Did fetch %ld managed cohorts from store", v5, 0xCu);
      MEMORY[0x192FD42A0](v5, -1, -1);

      return;
    }
LABEL_21:
    swift_bridgeObjectRetain();
    sub_190B778A8();
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }

  swift_release();
}

uint64_t sub_190B1F240(void *a1)
{
  if (a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3DD0);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_190B908F0;
    *(void *)(v2 + 32) = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3DD0);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_190B908F0;
    *(void *)(v3 + 32) = objc_msgSend(self, sel_predicateWithValue_, 1);
  }
  sub_190B772E8();
  id v4 = a1;
  sub_190B1F364();
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  if (*(void *)(v6 + 16))
  {
    uint64_t v7 = *(void *)(v6 + 32);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v7;
}

void sub_190B1F364()
{
  id v0 = sub_190B1BEF0();
  if (v0)
  {
    id v1 = v0;
    uint64_t v2 = (void *)sub_190B77158();
    objc_msgSend(v1, sel_setName_, v2);

    uint64_t v3 = (void *)sub_190B77158();
    objc_msgSend(v1, sel_setTransactionAuthor_, v3);

    uint64_t v5 = MEMORY[0x1F4188790](v4);
    MEMORY[0x1F4188790](v5);
    id v6 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3D38);
    sub_190B77598();
  }
  else
  {
    if (qword_1E92A3D08 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_190B76FC8();
    __swift_project_value_buffer(v7, (uint64_t)qword_1E92A8460);
    int64_t v8 = sub_190B76FA8();
    os_log_type_t v9 = sub_190B77578();
    if (os_log_type_enabled(v8, v9))
    {
      unint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v10 = 0;
      _os_log_impl(&dword_1909E3000, v8, v9, "Could not count managed duplicates", v10, 2u);
      MEMORY[0x192FD42A0](v10, -1, -1);
    }
  }
}

uint64_t sub_190B1F5A4(unint64_t a1, void *a2)
{
  if (qword_1E92A3D08 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_190B76FC8();
  __swift_project_value_buffer(v5, (uint64_t)qword_1E92A8460);
  id v6 = sub_190B76FA8();
  os_log_type_t v7 = sub_190B77568();
  if (os_log_type_enabled(v6, v7))
  {
    int64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int64_t v8 = 0;
    _os_log_impl(&dword_1909E3000, v6, v7, "Will count managed duplicates in store", v8, 2u);
    MEMORY[0x192FD42A0](v8, -1, -1);
  }

  id v9 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  unint64_t v10 = (void *)sub_190B77158();
  id v11 = objc_msgSend(v9, sel_initWithEntityName_, v10);

  id v12 = v11;
  id v13 = a2;
  uint64_t v14 = sub_190B231A0(a1, v12);
  if (v2)
  {

    id v15 = v2;
    id v16 = v2;
    uint64_t v17 = sub_190B76FA8();
    os_log_type_t v18 = sub_190B77568();
    if (os_log_type_enabled(v17, v18))
    {
      os_log_type_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      uint64_t v33 = v20;
      *(_DWORD *)os_log_type_t v19 = 136315138;
      swift_getErrorValue();
      uint64_t v21 = sub_190B77A08();
      sub_190B21150(v21, v22, &v33);
      sub_190B77648();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1909E3000, v17, v18, "Failed to count managed duplicates. %s", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FD42A0](v20, -1, -1);
      MEMORY[0x192FD42A0](v19, -1, -1);
    }
    else
    {
    }
    return MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v23 = v14;

    swift_bridgeObjectRetain_n();
    uint64_t v24 = sub_190B76FA8();
    os_log_type_t v25 = sub_190B77568();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      uint64_t v33 = v32;
      *(_DWORD *)uint64_t v26 = 136315138;
      uint64_t v27 = swift_bridgeObjectRetain();
      uint64_t v28 = MEMORY[0x192FD1AC0](v27, MEMORY[0x1E4FBB550]);
      unint64_t v30 = v29;
      swift_bridgeObjectRelease();
      sub_190B21150(v28, v30, &v33);
      sub_190B77648();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1909E3000, v24, v25, "Counted %s managed duplicates in store", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FD42A0](v32, -1, -1);
      MEMORY[0x192FD42A0](v26, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  return v23;
}

uint64_t sub_190B1F9E8(void *a1)
{
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = MEMORY[0x1E4FBC860];
  if (qword_1E92A3CF8 != -1) {
    swift_once();
  }
  id v2 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)sub_190B77158();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v2, sel_initWithEntityName_, v3);

  sub_190B23474(0, (unint64_t *)&unk_1E92A3D50);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92A3DC0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_190B908E0;
  uint64_t isEscapingClosureAtFileLocation = (uint64_t)&selRef_finishEncoding;
  id v7 = objc_msgSend(a1, sel_identifier);
  uint64_t v8 = sub_190B77168();
  uint64_t v10 = v9;

  *(void *)(v5 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v5 + 64) = sub_190B210FC();
  *(void *)(v5 + 32) = v8;
  *(void *)(v5 + 40) = v10;
  id v11 = v4;
  id v12 = (void *)sub_190B77548();
  objc_msgSend(v4, sel_setPredicate_, v12);

  id v13 = sub_190B1BEF0();
  if (v13)
  {
    uint64_t v14 = v13;
    id v15 = (void *)sub_190B77158();
    objc_msgSend(v14, sel_setName_, v15);

    id v16 = (void *)sub_190B77158();
    objc_msgSend(v14, sel_setTransactionAuthor_, v16);

    uint64_t v17 = (void *)swift_allocObject();
    v17[2] = v14;
    v17[3] = v4;
    v17[4] = v38;
    v17[5] = a1;
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = sub_190B217F8;
    *(void *)(v18 + 24) = v17;
    aBlock[4] = (uint64_t)sub_190B23538;
    aBlock[5] = v18;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_190B1E968;
    aBlock[3] = (uint64_t)&block_descriptor_31;
    os_log_type_t v19 = _Block_copy(aBlock);
    id v20 = v14;
    id v21 = v4;
    swift_retain();
    id v22 = a1;
    swift_retain();
    swift_release();
    objc_msgSend(v20, sel_performBlockAndWait_, v19);

    _Block_release(v19);
    uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      swift_beginAccess();
      uint64_t v23 = *(void *)(v38 + 16);
      swift_bridgeObjectRetain();
      swift_release();
      uint64_t v24 = sub_190B217F8;
      goto LABEL_11;
    }
    __break(1u);
    goto LABEL_13;
  }
  if (qword_1E92A3D08 != -1) {
LABEL_13:
  }
    swift_once();
  uint64_t v25 = sub_190B76FC8();
  __swift_project_value_buffer(v25, (uint64_t)qword_1E92A8460);
  id v26 = a1;
  uint64_t v27 = sub_190B76FA8();
  os_log_type_t v28 = sub_190B77578();
  if (os_log_type_enabled(v27, v28))
  {
    unint64_t v29 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    aBlock[0] = v30;
    *(_DWORD *)unint64_t v29 = 136315138;
    id v31 = [v26 *(SEL *)(isEscapingClosureAtFileLocation + 992)];
    uint64_t v32 = v11;
    id v33 = v31;
    uint64_t v34 = sub_190B77168();
    unint64_t v36 = v35;

    aBlock[6] = sub_190B21150(v34, v36, aBlock);
    sub_190B77648();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1909E3000, v27, v28, "Could not load managed duplicates for contact (%s", v29, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FD42A0](v30, -1, -1);
    MEMORY[0x192FD42A0](v29, -1, -1);
  }
  else
  {
  }
  uint64_t v23 = *(void *)(v38 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v24 = 0;
LABEL_11:
  sub_190B20FD4((uint64_t)v24);
  return v23;
}

void sub_190B1FF78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_1E92A3D08 != -1) {
LABEL_18:
  }
    swift_once();
  uint64_t v4 = sub_190B76FC8();
  __swift_project_value_buffer(v4, (uint64_t)qword_1E92A8460);
  uint64_t v5 = sub_190B76FA8();
  os_log_type_t v6 = sub_190B77568();
  if (os_log_type_enabled(v5, v6))
  {
    id v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v7 = 0;
    _os_log_impl(&dword_1909E3000, v5, v6, "Will fetch duplicates for contact from store", v7, 2u);
    MEMORY[0x192FD42A0](v7, -1, -1);
  }
  uint64_t v8 = (void *)(a3 + 16);

  type metadata accessor for CNDuplicateCohort();
  unint64_t v9 = sub_190B775B8();
  unint64_t v10 = v9;
  uint64_t v11 = MEMORY[0x1E4FBC860];
  v32[0] = MEMORY[0x1E4FBC860];
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_190B778A8();
    uint64_t v28 = a3;
    if (v12)
    {
LABEL_6:
      unint64_t v29 = (void *)(a3 + 16);
      uint64_t v13 = 4;
      do
      {
        if ((v10 & 0xC000000000000001) != 0) {
          id v14 = (id)MEMORY[0x192FD1FB0](v13 - 4, v10);
        }
        else {
          id v14 = *(id *)(v10 + 8 * v13);
        }
        id v15 = v14;
        a3 = v13 - 3;
        if (__OFADD__(v13 - 4, 1))
        {
          __break(1u);
          goto LABEL_18;
        }
        id v16 = objc_msgSend(v14, sel_duplicates);
        if (!v16)
        {
          __break(1u);
          return;
        }
        uint64_t v17 = v16;
        sub_190B22BC0(v16);
        uint64_t v19 = v18;

        sub_190B5ADE8(v19);
        ++v13;
      }
      while (a3 != v12);
      swift_bridgeObjectRelease_n();
      uint64_t v20 = v32[0];
      a3 = v28;
      uint64_t v8 = v29;
      uint64_t v11 = MEMORY[0x1E4FBC860];
      uint64_t v21 = *(void *)(v32[0] + 16);
      if (!v21) {
        goto LABEL_21;
      }
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v12 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v28 = a3;
    if (v12) {
      goto LABEL_6;
    }
  }
  swift_bridgeObjectRelease_n();
  uint64_t v20 = MEMORY[0x1E4FBC860];
  uint64_t v21 = *(void *)(MEMORY[0x1E4FBC860] + 16);
  if (!v21)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
LABEL_14:
  uint64_t v33 = v11;
  sub_190B77838();
  uint64_t v22 = v20 + 32;
  do
  {
    sub_190B23088(v22, (uint64_t)v32);
    sub_190B23088((uint64_t)v32, (uint64_t)v31);
    type metadata accessor for CNDuplicateSet();
    swift_dynamicCast();
    id v23 = objc_allocWithZone((Class)type metadata accessor for ManagedDuplicate());
    sub_190B4A8BC(v30);

    __swift_destroy_boxed_opaque_existential_0((uint64_t)v32);
    sub_190B77808();
    sub_190B77848();
    sub_190B77858();
    sub_190B77818();
    v22 += 32;
    --v21;
  }
  while (v21);
  uint64_t v11 = v33;
  swift_bridgeObjectRelease();
  a3 = v28;
LABEL_22:
  swift_beginAccess();
  *(void *)(a3 + 16) = v11;
  swift_bridgeObjectRelease();
  swift_retain();
  uint64_t v24 = sub_190B76FA8();
  os_log_type_t v25 = sub_190B77568();
  if (os_log_type_enabled(v24, v25))
  {
    id v26 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v26 = 134217984;
    swift_beginAccess();
    if (*v8 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_190B778A8();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v27 = *(void *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v33 = v27;
    sub_190B77648();
    swift_release();
    _os_log_impl(&dword_1909E3000, v24, v25, "Did fetch %ld duplicates for contact from store", v26, 0xCu);
    MEMORY[0x192FD42A0](v26, -1, -1);
  }
  else
  {

    swift_release();
  }
}

uint64_t sub_190B205D8(uint64_t a1)
{
  sub_190B23474(0, (unint64_t *)&unk_1E92A3D50);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92A3DC0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_190B908E0;
  *(void *)(v2 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3D30);
  *(void *)(v2 + 64) = sub_190B21814();
  *(void *)(v2 + 32) = a1;
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)sub_190B77548();
  uint64_t v4 = sub_190B1E0EC((uint64_t)v3);

  return v4;
}

uint64_t sub_190B206A8()
{
  return sub_190B20A78();
}

uint64_t static ManagedDuplicateStore.predicateForAvailableDuplicates.getter()
{
  return sub_190B77548();
}

uint64_t sub_190B20720()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3DD0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_190B90900;
  sub_190B23474(0, (unint64_t *)&unk_1E92A3D50);
  *(void *)(inited + 32) = sub_190B77548();
  *(void *)(inited + 40) = sub_190B77548();
  sub_190B772E8();
  sub_190B1F364();
  uint64_t v2 = v1;
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v2 + 16);
  if (v4)
  {
    if (v4 != 1)
    {
      uint64_t v5 = *(void *)(v2 + 32);
      swift_bridgeObjectRelease();
      return v5;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t static ManagedDuplicateStore.predicateForAnnouncedDuplicates.getter()
{
  return sub_190B77548();
}

uint64_t sub_190B20A40()
{
  return sub_190B20B84();
}

uint64_t sub_190B20A5C()
{
  return sub_190B20A78();
}

uint64_t sub_190B20A78()
{
  sub_190B23474(0, (unint64_t *)&unk_1E92A3D50);
  id v0 = (void *)sub_190B77548();
  uint64_t v1 = sub_190B1E0EC((uint64_t)v0);

  return v1;
}

uint64_t static ManagedDuplicateStore.predicateForIgnoredDuplicates.getter()
{
  return sub_190B77548();
}

uint64_t sub_190B20B4C()
{
  return sub_190B20A78();
}

uint64_t sub_190B20B68()
{
  return sub_190B20B84();
}

uint64_t sub_190B20B84()
{
  sub_190B23474(0, (unint64_t *)&unk_1E92A3D50);
  id v0 = (void *)sub_190B77548();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3DD0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_190B908F0;
  *(void *)(inited + 32) = v0;
  sub_190B772E8();
  id v2 = v0;
  sub_190B1F364();
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  if (*(void *)(v4 + 16))
  {
    uint64_t v5 = *(void *)(v4 + 32);

    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease();
    return 0;
  }
  return v5;
}

uint64_t sub_190B20C9C(uint64_t a1)
{
  sub_190B23474(0, (unint64_t *)&unk_1E92A3D50);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92A3DC0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_190B908E0;
  *(void *)(v2 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3D30);
  *(void *)(v2 + 64) = sub_190B21814();
  *(void *)(v2 + 32) = a1;
  swift_bridgeObjectRetain();
  unint64_t v3 = sub_190B77548();
  unint64_t v4 = sub_190B1E0EC(v3);
  unint64_t v5 = v4;
  if (v4 >> 62) {
    goto LABEL_15;
  }
  uint64_t v6 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v6)
  {
    while (1)
    {
      uint64_t v18 = MEMORY[0x1E4FBC860];
      uint64_t result = sub_190B218B0(0, v6 & ~(v6 >> 63), 0);
      if (v6 < 0) {
        break;
      }
      uint64_t v17 = (void *)v3;
      uint64_t v8 = 0;
      uint64_t v9 = v18;
      while (v6 != v8)
      {
        if ((v5 & 0xC000000000000001) != 0) {
          unint64_t v10 = (char *)MEMORY[0x192FD1FB0](v8, v5);
        }
        else {
          unint64_t v10 = (char *)*(id *)(v5 + 8 * v8 + 32);
        }
        uint64_t v11 = v10;
        uint64_t v12 = &v10[OBJC_IVAR___CNManagedDuplicate_signature];
        uint64_t result = swift_beginAccess();
        uint64_t v13 = *((void *)v12 + 1);
        if (!v13) {
          goto LABEL_19;
        }
        uint64_t v14 = *(void *)v12;
        swift_bridgeObjectRetain();

        unint64_t v3 = *(void *)(v18 + 16);
        unint64_t v15 = *(void *)(v18 + 24);
        if (v3 >= v15 >> 1) {
          sub_190B218B0(v15 > 1, v3 + 1, 1);
        }
        ++v8;
        *(void *)(v18 + 16) = v3 + 1;
        uint64_t v16 = v18 + 16 * v3;
        *(void *)(v16 + 32) = v14;
        *(void *)(v16 + 40) = v13;
        if (v6 == v8)
        {
          swift_bridgeObjectRelease();

          return v9;
        }
      }
      __break(1u);
LABEL_15:
      uint64_t v6 = sub_190B778A8();
      if (!v6) {
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
  }
  else
  {
LABEL_16:
    swift_bridgeObjectRelease();

    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_190B20ED0(uint64_t a1, void *a2)
{
  unint64_t v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  LOBYTE(v3) = v3();
  swift_release();

  return v3 & 1;
}

void sub_190B20F28()
{
  sub_190B1C2CC(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_190B20F44()
{
  sub_190B1C9A0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

void sub_190B20F64(unsigned char *a1@<X8>)
{
  sub_190B1D480(*(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

void sub_190B20F80()
{
  sub_190B1DB88(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_190B20F9C()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_190B20FD4(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

void sub_190B20FE8()
{
  sub_190B1E48C(v0[2], v0[3], v0[4]);
}

uint64_t sub_190B20FF4()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_190B21004()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t objectdestroy_3Tm()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_190B21090()
{
  sub_190B1ED64(v0[2], v0[3], v0[4]);
}

uint64_t sub_190B2109C()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_190B210AC()
{
  return sub_190B1F5A4(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_190B210C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

unint64_t sub_190B210FC()
{
  unint64_t result = qword_1E92A5A18;
  if (!qword_1E92A5A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92A5A18);
  }
  return result;
}

uint64_t sub_190B21150(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_190B21224(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_190B23088((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x1E4FBB9B0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_190B23088((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_190B21224(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_190B77658();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_190B213E0(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_190B777E8();
  if (!v8)
  {
    sub_190B77898();
    __break(1u);
LABEL_17:
    uint64_t result = sub_190B778F8();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_190B213E0(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_190B21478(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_190B21658(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_190B21658(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_190B21478(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_190B215F0(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_190B77798();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_190B77898();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_190B77208();
      if (!v2) {
        return MEMORY[0x1E4FBC860];
      }
    }
    sub_190B778F8();
    __break(1u);
LABEL_14:
    uint64_t result = sub_190B77898();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

void *sub_190B215F0(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3BE0);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_190B21658(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3BE0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_190B778F8();
  __break(1u);
  return result;
}

uint64_t sub_190B217A8()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_190B217F8()
{
  sub_190B1FF78(v0[2], v0[3], v0[4]);
}

uint64_t sub_190B21804()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

unint64_t sub_190B21814()
{
  unint64_t result = qword_1E92A3C80;
  if (!qword_1E92A3C80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92A3D30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92A3C80);
  }
  return result;
}

uint64_t sub_190B21870(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_190B21FB0(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_190B21890(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_190B22120(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_190B218B0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_190B22280(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_190B218D0()
{
  return type metadata accessor for ManagedDuplicateStore();
}

uint64_t type metadata accessor for ManagedDuplicateStore()
{
  uint64_t result = qword_1E92A3E70;
  if (!qword_1E92A3E70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_190B21924()
{
  sub_190B21DE8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for ManagedDuplicateStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ManagedDuplicateStore);
}

uint64_t dispatch thunk of ManagedDuplicateStore.__allocating_init(inMemory:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of ManagedDuplicateStore.container.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of ManagedDuplicateStore.newTaskContext()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of ManagedDuplicateStore.saveDuplicates(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of ManagedDuplicateStore.saveDuplicates(_:context:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of ManagedDuplicateStore.batchInsert(with:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of ManagedDuplicateStore.updateAvailability(availableSignatures:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of ManagedDuplicateStore.updateCohortAvailability(availableContactIdentifiers:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t dispatch thunk of ManagedDuplicateStore.managedDuplicates(with:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 368))();
}

uint64_t dispatch thunk of ManagedDuplicateStore.managedCohorts(with:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 376))();
}

uint64_t dispatch thunk of ManagedDuplicateStore.countOfManagedDuplicates(with:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 384))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 392))();
}

uint64_t dispatch thunk of ManagedDuplicateStore.managedDuplicates(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 400))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t dispatch thunk of ManagedDuplicateStore.availableDuplicates()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 416))();
}

uint64_t dispatch thunk of ManagedDuplicateStore.countNewAndAvailableDuplicates()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 424))();
}

uint64_t dispatch thunk of ManagedDuplicateStore.countOfAvailableDuplicates()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 432))();
}

uint64_t dispatch thunk of ManagedDuplicateStore.ignoredDuplicates()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 440))();
}

uint64_t dispatch thunk of ManagedDuplicateStore.newDuplicatesToAnnounce()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 448))();
}

uint64_t dispatch thunk of ManagedDuplicateStore.countOfNewDuplicatesToAnnounce()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 456))();
}

uint64_t dispatch thunk of ManagedDuplicateStore.ignoredSignatures(in:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 464))();
}

void sub_190B21DE8()
{
  if (!qword_1E92A3E80)
  {
    sub_190B76DD8();
    unint64_t v0 = sub_190B77628();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E92A3E80);
    }
  }
}

uint64_t sub_190B21E40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3C90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_190B21EA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3C90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_190B21F10(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_190B223EC(a1, a2, a3, (void *)*v3);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_190B21F30(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_190B22578(a1, a2, a3, (void *)*v3);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_190B21F50(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_190B22708(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_190B21F70(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_190B22890(a1, a2, a3, (void *)*v3);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_190B21F90(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_190B22A34(a1, a2, a3, (void *)*v3);
  *unint64_t v3 = result;
  return result;
}

uint64_t sub_190B21FB0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5A30);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_190B778F8();
  __break(1u);
  return result;
}

uint64_t sub_190B22120(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3DA8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_190B778F8();
  __break(1u);
  return result;
}

uint64_t sub_190B22280(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92A3C30);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_190B778F8();
  __break(1u);
  return result;
}

uint64_t sub_190B223EC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3E38);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    void v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3E08);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_190B778F8();
  __break(1u);
  return result;
}

uint64_t sub_190B22578(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92A5D90);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    void v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3D40);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_190B778F8();
  __break(1u);
  return result;
}

uint64_t sub_190B22708(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5A38);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_190B778F8();
  __break(1u);
  return result;
}

uint64_t sub_190B22890(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5A40);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    void v10[3] = 2 * ((uint64_t)(v11 - 32) / 136);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 136 * v8) {
      memmove(v10 + 4, a4 + 4, 136 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 136 * v8 || v12 >= v13 + 136 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5A48);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_190B778F8();
  __break(1u);
  return result;
}

uint64_t sub_190B22A34(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92A5DB0);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    void v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5A28);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_190B778F8();
  __break(1u);
  return result;
}

void sub_190B22BC0(void *a1)
{
  uint64_t v2 = sub_190B76D78();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  size_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t)objc_msgSend(a1, sel_count);
  if (v6 <= 0)
  {
    int64_t v7 = (void *)MEMORY[0x1E4FBC860];
    unint64_t v10 = *(void *)(MEMORY[0x1E4FBC860] + 24);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5A30);
    int64_t v7 = (void *)swift_allocObject();
    int64_t v8 = _swift_stdlib_malloc_size(v7);
    uint64_t v9 = v8 - 32;
    if (v8 < 32) {
      uint64_t v9 = v8 - 1;
    }
    unint64_t v10 = 2 * (v9 >> 5);
    v7[2] = v6;
    v7[3] = v10;
  }
  id v11 = a1;
  sub_190B775C8();

  if (v6 < 0)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  unint64_t v12 = v10 >> 1;
  unint64_t v13 = v7 + 4;
  if (v6)
  {
    v12 -= v6;
    sub_190B234F0((unint64_t *)&unk_1E92A5E20, MEMORY[0x1E4F27660]);
    do
    {
      sub_190B77638();
      if (!v33) {
        goto LABEL_38;
      }
      sub_190B23134(&v32, v13);
      v13 += 2;
    }
    while (--v6);
  }
  uint64_t v29 = v3;
  sub_190B234F0((unint64_t *)&unk_1E92A5E20, MEMORY[0x1E4F27660]);
  sub_190B77638();
  if (v31)
  {
    while (1)
    {
      sub_190B23134(&v30, &v32);
      if (!v12)
      {
        unint64_t v14 = v7[3];
        if ((uint64_t)((v14 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_35;
        }
        int64_t v15 = v14 & 0xFFFFFFFFFFFFFFFELL;
        if (v15 <= 1) {
          uint64_t v16 = 1;
        }
        else {
          uint64_t v16 = v15;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5A30);
        uint64_t v17 = (void *)swift_allocObject();
        int64_t v18 = _swift_stdlib_malloc_size(v17);
        uint64_t v19 = v18 - 32;
        if (v18 < 32) {
          uint64_t v19 = v18 - 1;
        }
        uint64_t v20 = v19 >> 5;
        v17[2] = v16;
        v17[3] = 2 * (v19 >> 5);
        unint64_t v21 = (unint64_t)(v17 + 4);
        uint64_t v22 = v7[3] >> 1;
        if (v7[2])
        {
          if (v17 != v7 || v21 >= (unint64_t)&v7[4 * v22 + 4]) {
            memmove(v17 + 4, v7 + 4, 32 * v22);
          }
          v7[2] = 0;
        }
        unint64_t v13 = (_OWORD *)(v21 + 32 * v22);
        unint64_t v12 = (v20 & 0x7FFFFFFFFFFFFFFFLL) - v22;
        swift_release();
        int64_t v7 = v17;
      }
      BOOL v24 = __OFSUB__(v12--, 1);
      if (v24) {
        break;
      }
      sub_190B23134(&v32, v13);
      v13 += 2;
      sub_190B77638();
      if (!v31) {
        goto LABEL_30;
      }
    }
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
LABEL_30:
  (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v2);
  sub_190B23144((uint64_t)&v30, &qword_1E92A3DD8);
  unint64_t v25 = v7[3];
  if (v25 >= 2)
  {
    unint64_t v26 = v25 >> 1;
    BOOL v24 = __OFSUB__(v26, v12);
    unint64_t v27 = v26 - v12;
    if (v24)
    {
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
      return;
    }
    v7[2] = v27;
  }
}

id sub_190B22F28(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 0;
  uint64_t v3 = *(void *)(a1 + 16);
  type metadata accessor for CNDuplicateSet();
  id v4 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_entity);
  size_t v5 = (void *)swift_allocObject();
  v5[2] = v2;
  v5[3] = v3;
  v5[4] = a1;
  id v6 = objc_allocWithZone(MEMORY[0x1E4F1C028]);
  v10[4] = sub_190B233FC;
  v10[5] = v5;
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 1107296256;
  v10[2] = sub_190B20ED0;
  void v10[3] = &block_descriptor_59;
  int64_t v7 = _Block_copy(v10);
  swift_retain();
  swift_bridgeObjectRetain();
  id v8 = objc_msgSend(v6, sel_initWithEntity_dictionaryHandler_, v4, v7);

  _Block_release(v7);
  swift_release();
  swift_release();
  return v8;
}

uint64_t sub_190B23088(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

_OWORD *sub_190B23134(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_190B23144(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_190B231A0(unint64_t a1, void *a2)
{
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v5 = MEMORY[0x1E4FBC860];
    if (!v4) {
      return v5;
    }
    uint64_t v15 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_190B21890(0, v4 & ~(v4 >> 63), 0);
    if (v4 < 0) {
      break;
    }
    uint64_t v7 = 0;
    uint64_t v5 = v15;
    while (v4 != v7)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v8 = (id)MEMORY[0x192FD1FB0](v7, a1);
      }
      else {
        id v8 = *(id *)(a1 + 8 * v7 + 32);
      }
      uint64_t v9 = v8;
      objc_msgSend(a2, sel_setPredicate_, v8);
      type metadata accessor for CNDuplicateSet();
      uint64_t v10 = sub_190B775A8();
      if (v2)
      {
        swift_release();

        return v5;
      }
      uint64_t v11 = v10;

      unint64_t v13 = *(void *)(v15 + 16);
      unint64_t v12 = *(void *)(v15 + 24);
      if (v13 >= v12 >> 1) {
        sub_190B21890(v12 > 1, v13 + 1, 1);
      }
      ++v7;
      *(void *)(v15 + 16) = v13 + 1;
      *(void *)(v15 + 8 * v13 + 32) = v11;
      if (v4 == v7) {
        return v5;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_190B778A8();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_190B23344(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3DD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_190B233AC()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_190B233BC()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_190B233FC(void *a1)
{
  return sub_190B1CD7C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_190B23408()
{
  return swift_release();
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_190B23474(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_190B234B0()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_190B234E8(uint64_t a1, uint64_t a2)
{
  sub_190B1BDFC(a1, a2, v2);
}

uint64_t sub_190B234F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_190B23560()
{
}

uint64_t related decl 'e' for CNErrorCode.affectedRecords.getter(uint64_t a1)
{
  return sub_190B235A0(a1, (uint64_t)&CNErrorUserInfoAffectedRecordsKey, &qword_1E92A5A58);
}

uint64_t related decl 'e' for CNErrorCode.affectedRecordIdentifiers.getter(uint64_t a1)
{
  return sub_190B235A0(a1, (uint64_t)&CNErrorUserInfoAffectedRecordIdentifiersKey, &qword_1E92A3D30);
}

uint64_t sub_190B235A0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  *(void *)&long long v11 = a1;
  type metadata accessor for CNError(0);
  sub_190B23CA8((unint64_t *)&qword_1E92A58C0, type metadata accessor for CNError);
  uint64_t v4 = sub_190B76D28();
  uint64_t v5 = sub_190B77168();
  if (*(void *)(v4 + 16) && (unint64_t v7 = sub_190B236D8(v5, v6), (v8 & 1) != 0))
  {
    sub_190B23088(*(void *)(v4 + 56) + 32 * v7, (uint64_t)&v11);
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((void *)&v12 + 1))
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    if (swift_dynamicCast()) {
      return v10;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_190B23750((uint64_t)&v11);
    return 0;
  }
}

uint64_t related decl 'e' for CNErrorCode.keyPaths.getter(uint64_t a1)
{
  return sub_190B235A0(a1, (uint64_t)&CNErrorUserInfoKeyPathsKey, &qword_1E92A3D30);
}

unint64_t sub_190B236D8(uint64_t a1, uint64_t a2)
{
  sub_190B77A58();
  sub_190B771D8();
  uint64_t v4 = sub_190B77A68();

  return sub_190B2388C(a1, a2, v4);
}

uint64_t sub_190B23750(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3DD8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_190B237B0(uint64_t a1)
{
  uint64_t v2 = sub_190B77718();

  return sub_190B23970(a1, v2);
}

unint64_t sub_190B237F4(uint64_t a1)
{
  sub_190B76CC8();
  sub_190B23CA8((unint64_t *)&qword_1E92A3DE8, MEMORY[0x1E4F27510]);
  uint64_t v2 = sub_190B770A8();

  return sub_190B23AE8(a1, v2);
}

unint64_t sub_190B2388C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_190B77998() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        unint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_190B77998() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_190B23970(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_190B23A38(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x192FD1F10](v9, a1);
      sub_190B23A94((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_190B23A38(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_190B23A94(uint64_t a1)
{
  return a1;
}

unint64_t sub_190B23AE8(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = sub_190B76CC8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    unint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    BOOL v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_190B23CA8(&qword_1E92A3DF0, MEMORY[0x1E4F27510]);
      char v15 = sub_190B770D8();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

uint64_t sub_190B23CA8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_190B23CF0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v35 = MEMORY[0x1E4FBC860];
    sub_190B21F50(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = v35;
    for (int64_t i = v1 - 1; ; --i)
    {
      long long v6 = *(_OWORD *)(v4 + 80);
      long long v7 = *(_OWORD *)(v4 + 112);
      long long v32 = *(_OWORD *)(v4 + 96);
      long long v33 = v7;
      long long v8 = *(_OWORD *)(v4 + 16);
      long long v9 = *(_OWORD *)(v4 + 48);
      long long v28 = *(_OWORD *)(v4 + 32);
      long long v29 = v9;
      long long v10 = *(_OWORD *)(v4 + 48);
      long long v11 = *(_OWORD *)(v4 + 80);
      long long v30 = *(_OWORD *)(v4 + 64);
      long long v31 = v11;
      long long v12 = *(_OWORD *)(v4 + 16);
      v27[0] = *(_OWORD *)v4;
      v27[1] = v12;
      long long v13 = *(_OWORD *)(v4 + 112);
      void v22[6] = v32;
      long long v23 = v13;
      v22[2] = v28;
      v22[3] = v10;
      v22[4] = v30;
      v22[5] = v6;
      uint64_t v34 = *(void *)(v4 + 128);
      uint64_t v14 = *(void *)&v27[0];
      uint64_t v24 = *(void *)(v4 + 128);
      *((void *)&v22[0] + 1) = *((void *)&v27[0] + 1);
      v22[1] = v8;
      sub_190B2E774((uint64_t)v27);
      sub_190B27AEC(v14, (uint64_t *)v22 + 1, (uint64_t)&v23 + 8, &v25);
      sub_190B2E984((uint64_t)v27);
      long long v15 = v25;
      uint64_t v16 = v26;
      uint64_t v35 = v2;
      unint64_t v18 = *(void *)(v2 + 16);
      unint64_t v17 = *(void *)(v2 + 24);
      if (v18 >= v17 >> 1)
      {
        long long v21 = v25;
        sub_190B21F50(v17 > 1, v18 + 1, 1);
        long long v15 = v21;
        uint64_t v2 = v35;
      }
      *(void *)(v2 + 16) = v18 + 1;
      uint64_t v19 = v2 + 24 * v18;
      *(_OWORD *)(v19 + 32) = v15;
      *(void *)(v19 + 4_Block_object_dispose(&STACK[0x228], 8) = v16;
      if (!i) {
        break;
      }
      v4 += 136;
    }
  }
  return v2;
}

uint64_t sub_190B23E68(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v28 = a5;
  uint64_t v29 = a8;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v27 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](a1);
  id v40 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  long long v33 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v10 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  long long v12 = (char *)&v26 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(v15 - 8);
  uint64_t v31 = v15;
  MEMORY[0x1F4188790](v15);
  unint64_t v17 = (char *)&v26 - v16;
  uint64_t v18 = sub_190B774F8();
  if (!v18) {
    return sub_190B77348();
  }
  uint64_t v19 = v18;
  uint64_t v43 = sub_190B77028();
  uint64_t v32 = sub_190B77888();
  sub_190B77828();
  uint64_t v36 = v8;
  uint64_t result = sub_190B774E8();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v34 = (void (**)(char *))(v33 + 2);
    uint64_t v35 = v14;
    ++v33;
    while (1)
    {
      long long v21 = (void (*)(char *, void))sub_190B77538();
      uint64_t v22 = v12;
      long long v23 = v12;
      uint64_t v24 = AssociatedTypeWitness;
      (*v34)(v22);
      v21(v42, 0);
      uint64_t v25 = v41;
      v38(v23, v40);
      if (v25) {
        break;
      }
      uint64_t v41 = 0;
      (*v33)(v23, v24);
      sub_190B77868();
      sub_190B77508();
      --v19;
      long long v12 = v23;
      if (!v19)
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
        return v43;
      }
    }
    (*v33)(v23, v24);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v29, v40, v28);
  }
  return result;
}

uint64_t sub_190B24268()
{
  if (qword_1E92A3CA8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1E92A3C98;
  if (qword_1E92A3CD8 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  unint64_t v1 = swift_bridgeObjectRetain();
  uint64_t result = sub_190B5AF40(v1);
  qword_1E92A3CB0 = v0;
  return result;
}

uint64_t static DuplicateContacts.descriptorForRequiredKeys.getter()
{
  return sub_190B24A1C(&qword_1E92A3C60);
}

uint64_t sub_190B24350()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3DD0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_190B909C0;
  *(void *)(v0 + 32) = objc_msgSend(self, sel_descriptorForRequiredKeysForStyle_, 0);
  *(void *)(v0 + 40) = @"nickname";
  *(void *)(v0 + 4_Block_object_dispose(&STACK[0x228], 8) = @"imageData";
  *(void *)(v0 + 56) = @"imageType";
  *(void *)(v0 + 64) = @"cropRect";
  *(void *)(v0 + 72) = @"memojiMetadata";
  *(void *)(v0 + 80) = @"wallpaper";
  *(void *)(v0 + 8_Block_object_dispose(&STACK[0x228], 8) = @"imageDataAvailable";
  *(void *)(v0 + 96) = @"organizationName";
  *(void *)(v0 + 104) = @"departmentName";
  *(void *)(v0 + 112) = @"jobTitle";
  *(void *)(v0 + 120) = @"previousFamilyName";
  *(void *)(v0 + 12_Block_object_dispose(&STACK[0x228], 8) = @"phoneticGivenName";
  *(void *)(v0 + 136) = @"phoneticMiddleName";
  *(void *)(v0 + 144) = @"phoneticFamilyName";
  *(void *)(v0 + 152) = @"phoneticOrganizationName";
  *(void *)(v0 + 160) = @"note";
  *(void *)(v0 + 16_Block_object_dispose(&STACK[0x228], 8) = @"birthday";
  *(void *)(v0 + 176) = @"nonGregorianBirthday";
  *(void *)(v0 + 184) = @"callAlert";
  *(void *)(v0 + 192) = @"textAlert";
  *(void *)(v0 + 200) = @"phoneNumbers";
  *(void *)(v0 + 20_Block_object_dispose(&STACK[0x228], 8) = @"emailAddresses";
  *(void *)(v0 + 216) = @"urlAddresses";
  *(void *)(v0 + 224) = @"dates";
  *(void *)(v0 + 232) = @"instantMessageAddresses";
  *(void *)(v0 + 240) = @"contactRelations";
  *(void *)(v0 + 24_Block_object_dispose(&STACK[0x228], 8) = @"socialProfiles";
  *(void *)(v0 + 256) = @"postalAddresses";
  *(void *)(v0 + 264) = @"phonemeData";
  *(void *)(v0 + 272) = @"explicitDisplayName";
  *(void *)(v0 + 280) = @"mapsData";
  *(void *)(v0 + 28_Block_object_dispose(&STACK[0x228], 8) = @"sortingGivenName";
  *(void *)(v0 + 296) = @"sortingFamilyName";
  *(void *)(v0 + 304) = @"externalIdentifier";
  *(void *)(v0 + 312) = @"externalUUID";
  *(void *)(v0 + 320) = @"identifier";
  *(void *)(v0 + 32_Block_object_dispose(&STACK[0x228], 8) = @"linkIdentifier";
  *(void *)(v0 + 336) = @"downtimeWhitelist";
  sub_190B772E8();
  uint64_t v1 = qword_1E92A3CC0;
  uint64_t v2 = @"nickname";
  uint64_t v3 = @"imageData";
  uint64_t v4 = @"imageType";
  uint64_t v5 = @"cropRect";
  long long v6 = @"memojiMetadata";
  long long v7 = @"wallpaper";
  uint64_t v8 = @"imageDataAvailable";
  uint64_t v9 = @"organizationName";
  uint64_t v10 = @"departmentName";
  uint64_t v11 = @"jobTitle";
  long long v12 = @"previousFamilyName";
  uint64_t v13 = @"phoneticGivenName";
  uint64_t v14 = @"phoneticMiddleName";
  uint64_t v15 = @"phoneticFamilyName";
  uint64_t v16 = @"phoneticOrganizationName";
  unint64_t v17 = @"note";
  uint64_t v18 = @"birthday";
  uint64_t v19 = @"nonGregorianBirthday";
  uint64_t v20 = @"callAlert";
  long long v21 = @"textAlert";
  uint64_t v22 = @"phoneNumbers";
  long long v23 = @"emailAddresses";
  uint64_t v24 = @"urlAddresses";
  uint64_t v25 = @"dates";
  uint64_t v26 = @"instantMessageAddresses";
  uint64_t v27 = @"contactRelations";
  uint64_t v28 = @"socialProfiles";
  uint64_t v29 = @"postalAddresses";
  uint64_t v30 = @"phonemeData";
  uint64_t v31 = @"explicitDisplayName";
  uint64_t v32 = @"mapsData";
  long long v33 = @"sortingGivenName";
  uint64_t v34 = @"sortingFamilyName";
  uint64_t v35 = @"externalIdentifier";
  uint64_t v36 = @"externalUUID";
  uint64_t v37 = @"identifier";
  uint64_t v38 = @"linkIdentifier";
  uint64_t v39 = @"downtimeWhitelist";
  if (v1 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  unint64_t v40 = swift_bridgeObjectRetain();
  sub_190B5AF40(v40);
  uint64_t result = swift_bridgeObjectRelease();
  qword_1E92A3C98 = v0;
  return result;
}

uint64_t static DuplicateContacts.descriptorForRequiredKeysForListView.getter()
{
  return sub_190B24A1C(&qword_1E92A3CA8);
}

__CFString *sub_190B2481C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3DD0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_190B909D0;
  *(void *)(v0 + 32) = @"pronunciationGivenName";
  *(void *)(v0 + 40) = @"pronunciationFamilyName";
  uint64_t v4 = v0;
  *(void *)(v0 + 4_Block_object_dispose(&STACK[0x228], 8) = @"preferredChannel";
  sub_190B772E8();
  qword_1E92A3CB8 = v4;
  uint64_t v1 = @"pronunciationGivenName";
  uint64_t v2 = @"pronunciationFamilyName";

  return @"preferredChannel";
}

uint64_t static DuplicateContacts.descriptorForRequiredPlatformKeys.getter()
{
  return sub_190B24A1C(&qword_1E92A3CC0);
}

__CFString *sub_190B248F0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3DD0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_190B909E0;
  *(void *)(v0 + 32) = @"imageHash";
  *(void *)(v0 + 40) = @"thumbnailImageData";
  *(void *)(v0 + 4_Block_object_dispose(&STACK[0x228], 8) = @"fullscreenImageData";
  *(void *)(v0 + 56) = @"preferredLikenessSource";
  *(void *)(v0 + 64) = @"preferredApplePersonaIdentifier";
  *(void *)(v0 + 72) = @"contactType";
  uint64_t v8 = v0;
  *(void *)(v0 + 80) = @"wallpaper";
  sub_190B772E8();
  qword_1E92A3CC8 = v8;
  uint64_t v1 = @"imageHash";
  uint64_t v2 = @"thumbnailImageData";
  uint64_t v3 = @"fullscreenImageData";
  uint64_t v4 = @"preferredLikenessSource";
  uint64_t v5 = @"preferredApplePersonaIdentifier";
  long long v6 = @"contactType";

  return @"wallpaper";
}

uint64_t static DuplicateContacts.descriptorForRequiredPlatformImageEditingKeys.getter()
{
  return sub_190B24A1C(&qword_1E92A3CD8);
}

uint64_t sub_190B24A1C(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t static DuplicateContacts.minimumNamesToMatch.getter()
{
  return 1;
}

uint64_t DuplicateContacts.FindResult.duplicates.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DuplicateContacts.FindResult.debugDescription.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = sub_190B773A8();
  MEMORY[0x192FD1B60](v1, v2);
  uint64_t v4 = sub_190B77968();
  sub_190B771F8();
  return v4;
}

uint64_t sub_190B24B00@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v2;
  uint64_t v29 = a1;
  uint64_t v30 = sub_190B24F50;
  uint64_t v31 = v4;
  uint64_t v5 = sub_190B773A8();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_190B777F8();
  swift_release();
  uint64_t v26 = a1;
  uint64_t v27 = sub_190B25DF4;
  uint64_t v28 = 0;
  sub_190B76CC8();
  sub_190B25FC8();
  swift_getWitnessTable();
  sub_190B77098();
  uint64_t v25 = a1;
  sub_190B77088();
  uint64_t v24 = a1;
  swift_bridgeObjectRetain();
  uint64_t v34 = sub_190B77088();
  uint64_t v23 = a1;
  uint64_t v6 = sub_190B77078();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_190B23E68((void (*)(char *, char *))sub_190B2E24C, (uint64_t)v22, v6, v5, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v7);
  swift_bridgeObjectRelease();
  type metadata accessor for DuplicateContactsModerator();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v15;
  uint64_t v19 = a1;
  uint64_t v20 = sub_190B2E27C;
  uint64_t v21 = v8;
  static DuplicateContactsModerator.combinePotentialDuplicatesWithCommonHandles<A>(potentialDuplicates:groupedBy:)();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v18 = a1;
  uint64_t v34 = sub_190B77088();
  uint64_t v17 = a1;
  uint64_t v10 = sub_190B23E68((void (*)(char *, char *))sub_190B30918, (uint64_t)v16, v6, v5, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v9);
  swift_bridgeObjectRelease();
  uint64_t v33 = v10;
  uint64_t v32 = sub_190B77028();
  sub_190B773A8();
  swift_getWitnessTable();
  sub_190B77268();
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_190B77328();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v34 = v11;
  swift_getWitnessTable();
  uint64_t result = sub_190B777F8();
  *a2 = result;
  return result;
}

uint64_t sub_190B24F40()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_190B24F54(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 24))(*a1) & 1;
}

BOOL sub_190B24F8C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v20 = a3;
  uint64_t v5 = sub_190B76CC8();
  sub_190B773A8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v19 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v19 - v10;
  uint64_t v12 = *a2;
  uint64_t v13 = *(void *)(v5 - 8);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v14((char *)&v19 - v10, a1, v5);
  *(void *)&v11[*(int *)(TupleTypeMetadata2 + 48)] = v12;
  uint64_t v15 = *(int *)(TupleTypeMetadata2 + 48);
  v14(v9, (uint64_t)v11, v5);
  *(void *)&v9[v15] = v12;
  uint64_t v16 = swift_bridgeObjectRetain();
  uint64_t v17 = MEMORY[0x192FD1B60](v16, v20);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v11, TupleTypeMetadata2);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v5);
  return v17 > 1;
}

BOOL sub_190B25178(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_190B76CC8();
  sub_190B773A8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v18 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v17 - v9;
  uint64_t v11 = *a2;
  uint64_t v12 = *(void *)(v4 - 8);
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v13((char *)&v17 - v9, a1, v4);
  *(void *)&v10[*(int *)(TupleTypeMetadata2 + 48)] = v11;
  uint64_t v14 = *(int *)(TupleTypeMetadata2 + 48);
  v13(v8, (uint64_t)v10, v4);
  *(void *)&v8[v14] = v11;
  swift_bridgeObjectRetain();
  int64_t v15 = sub_190B25358();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v10, TupleTypeMetadata2);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v4);
  return v15 > 1;
}

unint64_t sub_190B25358()
{
  uint64_t v14 = sub_190B76C18();
  uint64_t v15 = v0;
  uint64_t v16 = sub_190B76C58();
  uint64_t v17 = v1;
  uint64_t v18 = sub_190B76C38();
  uint64_t v19 = v2;
  uint64_t v20 = sub_190B76C98();
  uint64_t v21 = v3;
  uint64_t v4 = MEMORY[0x1E4FBC860];
  uint64_t v5 = 32;
  while (1)
  {
    unint64_t result = *(void *)&v13[v5 + 8];
    if (!result) {
      break;
    }
    uint64_t v10 = HIBYTE(result) & 0xF;
    if ((result & 0x2000000000000000) == 0) {
      uint64_t v10 = *(void *)&v13[v5] & 0xFFFFFFFFFFFFLL;
    }
    if (v10)
    {
      long long v12 = *(_OWORD *)&v13[v5];
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_190B21F10(0, *(void *)(v4 + 16) + 1, 1);
      }
      unint64_t v7 = *(void *)(v4 + 16);
      unint64_t v6 = *(void *)(v4 + 24);
      long long v8 = v12;
      if (v7 >= v6 >> 1)
      {
        sub_190B21F10(v6 > 1, v7 + 1, 1);
        long long v8 = v12;
      }
      *(void *)(v4 + 16) = v7 + 1;
      *(_OWORD *)(v4 + 16 * v7 + 32) = v8;
    }
    v5 += 16;
    if (v5 == 96)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3E08);
      swift_arrayDestroy();
      uint64_t v11 = *(void *)(v4 + 16);
      swift_release();
      return v11;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_190B254A0(void *a1)
{
  sub_190B76CB8();
  id v2 = objc_msgSend(a1, sel_namePrefix);
  uint64_t v3 = sub_190B77168();
  uint64_t v5 = v4;

  sub_190B26060(257, v3, v5);
  swift_bridgeObjectRelease();
  sub_190B76C88();
  id v6 = objc_msgSend(a1, sel_givenName);
  uint64_t v7 = sub_190B77168();
  uint64_t v9 = v8;

  sub_190B26060(257, v7, v9);
  swift_bridgeObjectRelease();
  sub_190B76C28();
  id v10 = objc_msgSend(a1, sel_middleName);
  uint64_t v11 = sub_190B77168();
  uint64_t v13 = v12;

  sub_190B26060(257, v11, v13);
  swift_bridgeObjectRelease();
  sub_190B76C68();
  id v14 = objc_msgSend(a1, sel_familyName);
  uint64_t v15 = sub_190B77168();
  uint64_t v17 = v16;

  sub_190B26060(257, v15, v17);
  swift_bridgeObjectRelease();
  sub_190B76C48();
  id v18 = objc_msgSend(a1, sel_nameSuffix);
  uint64_t v19 = sub_190B77168();
  uint64_t v21 = v20;

  sub_190B26060(257, v19, v21);
  swift_bridgeObjectRelease();
  return sub_190B76CA8();
}

uint64_t static DuplicateContacts.prefixAndDiacriticsComparator(_:)(void *a1)
{
  sub_190B76CB8();
  id v2 = objc_msgSend(a1, sel_namePrefix);
  uint64_t v3 = sub_190B77168();
  uint64_t v5 = v4;

  sub_190B26060(257, v3, v5);
  swift_bridgeObjectRelease();
  sub_190B76C88();
  id v6 = objc_msgSend(a1, sel_givenName);
  uint64_t v7 = sub_190B77168();
  uint64_t v9 = v8;

  sub_190B26060(257, v7, v9);
  swift_bridgeObjectRelease();
  sub_190B76C28();
  id v10 = objc_msgSend(a1, sel_middleName);
  uint64_t v11 = sub_190B77168();
  uint64_t v13 = v12;

  sub_190B26060(257, v11, v13);
  swift_bridgeObjectRelease();
  sub_190B76C68();
  id v14 = objc_msgSend(a1, sel_familyName);
  uint64_t v15 = sub_190B77168();
  uint64_t v17 = v16;

  sub_190B26060(257, v15, v17);
  swift_bridgeObjectRelease();
  sub_190B76C48();
  id v18 = objc_msgSend(a1, sel_nameSuffix);
  uint64_t v19 = sub_190B77168();
  uint64_t v21 = v20;

  sub_190B26060(257, v19, v21);
  swift_bridgeObjectRelease();
  return sub_190B76CA8();
}

uint64_t sub_190B25880(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = sub_190B76CC8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  id v10 = (char *)&v12 - v9;
  a2(a1);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
  sub_190B25FC8();
  sub_190B77738();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
}

BOOL sub_190B259C0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_190B76CC8();
  sub_190B773A8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v18 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  id v10 = (char *)&v17 - v9;
  uint64_t v11 = *a2;
  uint64_t v12 = *(void *)(v4 - 8);
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v13((char *)&v17 - v9, a1, v4);
  *(void *)&v10[*(int *)(TupleTypeMetadata2 + 48)] = v11;
  uint64_t v14 = *(int *)(TupleTypeMetadata2 + 48);
  v13(v8, (uint64_t)v10, v4);
  *(void *)&v8[v14] = v11;
  swift_bridgeObjectRetain();
  unint64_t v15 = sub_190B25358();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v10, TupleTypeMetadata2);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v4);
  return v15 == 1;
}

uint64_t sub_190B25BA0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *a2;
  type metadata accessor for DuplicateContactsModerator();
  static DuplicateContactsModerator.groupByCommonHandles<A>(contacts:)(v4, a3);
  sub_190B773A8();
  sub_190B773A8();
  swift_getWitnessTable();
  return sub_190B77388();
}

void sub_190B25C50()
{
  sub_190B773A8();
  swift_getWitnessTable();
  sub_190B77528();
  if (v5)
  {
    id v0 = objc_msgSend(v5, sel_linkIdentifier);

    if (v0)
    {
      sub_190B77168();

      uint64_t v1 = *MEMORY[0x1E4F5A2A0];
      if (*MEMORY[0x1E4F5A2A0])
      {
        id v2 = (void *)sub_190B77158();
        char v3 = (*(uint64_t (**)(uint64_t, void *))(v1 + 16))(v1, v2);

        if (v3)
        {
          MEMORY[0x1F4188790](v4);
          swift_getWitnessTable();
          sub_190B77288();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        __break(1u);
      }
    }
  }
}

int64_t sub_190B25DF4(void *a1)
{
  sub_190B76CB8();
  id v2 = objc_msgSend(a1, sel_givenName);
  uint64_t v3 = sub_190B77168();
  uint64_t v5 = v4;

  sub_190B26060(385, v3, v5);
  swift_bridgeObjectRelease();
  sub_190B76C28();
  id v6 = objc_msgSend(a1, sel_middleName);
  uint64_t v7 = sub_190B77168();
  uint64_t v9 = v8;

  sub_190B26060(385, v7, v9);
  swift_bridgeObjectRelease();
  sub_190B76C68();
  id v10 = objc_msgSend(a1, sel_familyName);
  uint64_t v11 = sub_190B77168();
  uint64_t v13 = v12;

  sub_190B26060(385, v11, v13);
  swift_bridgeObjectRelease();
  sub_190B76C48();
  id v14 = objc_msgSend(a1, sel_nameSuffix);
  uint64_t v15 = sub_190B77168();
  uint64_t v17 = v16;

  sub_190B26060(385, v15, v17);
  swift_bridgeObjectRelease();
  sub_190B76CA8();
  int64_t result = sub_190B25358();
  if (result <= 0) {
    return sub_190B2C208();
  }
  return result;
}

uint64_t sub_190B25F9C(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 24))(*a1);
}

unint64_t sub_190B25FC8()
{
  unint64_t result = qword_1E92A3DE8;
  if (!qword_1E92A3DE8)
  {
    sub_190B76CC8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92A3DE8);
  }
  return result;
}

BOOL sub_190B26020(uint64_t a1, uint64_t *a2)
{
  return sub_190B24F8C(a1, a2, *(void *)(v2 + 16));
}

BOOL sub_190B26040(uint64_t a1, uint64_t *a2)
{
  return sub_190B25178(a1, a2);
}

uint64_t sub_190B26060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_190B76B38();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3DF8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = a2;
  uint64_t v23 = a3;
  sub_190B76E98();
  uint64_t v12 = sub_190B76EA8();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 0, 1, v12);
  sub_190B30760();
  uint64_t v13 = sub_190B77688();
  uint64_t v15 = v14;
  sub_190B23144((uint64_t)v11, &qword_1E92A3DF8);
  uint64_t v22 = v13;
  uint64_t v23 = v15;
  v21[2] = 0x2B5D0A735C5BLL;
  v21[3] = 0xE600000000000000;
  v21[0] = 32;
  v21[1] = 0xE100000000000000;
  uint64_t v16 = sub_190B77678();
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  uint64_t v22 = v16;
  uint64_t v23 = v18;
  sub_190B76B28();
  uint64_t v19 = sub_190B77668();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_190B262B8(id *a1, uint64_t a2, uint64_t a3)
{
  id v5 = objc_msgSend(*a1, sel_linkIdentifier);
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = sub_190B77168();
    uint64_t v9 = v8;

    if (v7 == a2 && v9 == a3)
    {
      swift_bridgeObjectRelease();
      char v12 = 0;
    }
    else
    {
      char v11 = sub_190B77998();
      swift_bridgeObjectRelease();
      char v12 = v11 ^ 1;
    }
  }
  else
  {
    char v12 = 1;
  }
  return v12 & 1;
}

void sub_190B26374()
{
  qword_1E92A5A60 = MEMORY[0x1E4FBC860];
  *(void *)algn_1E92A5A68 = MEMORY[0x1E4FBC860];
  qword_1E92A5A70 = MEMORY[0x1E4FBC860];
}

uint64_t sub_190B26390@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *a1;
  unint64_t v4 = a1[1];
  unint64_t v6 = a1[2];
  uint64_t v7 = *a2;
  unint64_t v19 = a2[1];
  unint64_t v20 = a2[2];
  uint64_t v8 = *(void *)(*a2 + 16);
  if (!v8)
  {
    uint64_t v16 = MEMORY[0x1E4FBC860];
    uint64_t v10 = MEMORY[0x1E4FBC860];
    goto LABEL_16;
  }
  unint64_t v18 = a1[2];
  swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  uint64_t v10 = MEMORY[0x1E4FBC860];
  do
  {
    unint64_t v11 = *(void *)(v7 + 8 * v9 + 32);
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v15 = sub_190B778A8();
      swift_bridgeObjectRelease();
      if (v15 < 1)
      {
LABEL_3:
        swift_bridgeObjectRelease();
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v12 < 1) {
        goto LABEL_3;
      }
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_190B21F30(0, *(void *)(v10 + 16) + 1, 1);
    }
    unint64_t v14 = *(void *)(v10 + 16);
    unint64_t v13 = *(void *)(v10 + 24);
    if (v14 >= v13 >> 1) {
      sub_190B21F30(v13 > 1, v14 + 1, 1);
    }
    *(void *)(v10 + 16) = v14 + 1;
    *(void *)(v10 + 8 * v14 + 32) = v11;
LABEL_4:
    ++v9;
  }
  while (v8 != v9);
  swift_bridgeObjectRelease();
  unint64_t v6 = v18;
  uint64_t v16 = MEMORY[0x1E4FBC860];
LABEL_16:
  swift_bridgeObjectRetain();
  sub_190B5B10C(v10);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_190B5B27C(v4);
  sub_190B5B27C(v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_190B5B27C(v6);
  sub_190B5B27C(v20);
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v5;
  a3[1] = v16;
  a3[2] = v16;
  return result;
}

Contacts::DuplicateContacts::MergeResult::UndoResult __swiftcall DuplicateContacts.MergeResult.undo(for:)(Swift::OpaquePointer a1)
{
  unint64_t v4 = v1;
  uint64_t v5 = *v2;
  uint64_t v6 = v2[2];
  swift_bridgeObjectRetain();
  unint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = sub_190B2E3E0(v7, (unint64_t)a1._rawValue);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  void *v4 = v5;
  v4[1] = v8;
  v4[2] = v6;
  swift_bridgeObjectRetain();

  uint64_t v9 = (void *)swift_bridgeObjectRetain();
  result.needAdded._rawCFNumberRef Value = v11;
  result.wereModified._rawCFNumberRef Value = v10;
  result.needUnlinked._rawCFNumberRef Value = v9;
  return result;
}

uint64_t DuplicateContacts.MergeResult.UndoResult.needUnlinked.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DuplicateContacts.MergeResult.UndoResult.wereModified.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DuplicateContacts.MergeResult.UndoResult.needAdded.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_190B26668@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (v4)
  {
    unint64_t v13 = a2;
    uint64_t v14 = MEMORY[0x1E4FBC860];
    sub_190B21F70(0, v4, 0);
    uint64_t v5 = v14;
    unint64_t v7 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v8 = *v7;
      unint64_t v10 = *(void *)(v14 + 16);
      unint64_t v9 = *(void *)(v14 + 24);
      swift_bridgeObjectRetain();
      if (v10 >= v9 >> 1) {
        sub_190B21F70(v9 > 1, v10 + 1, 1);
      }
      *(void *)(v14 + 16) = v10 + 1;
      unint64_t v11 = v14 + 136 * v10;
      *(void *)(v11 + 32) = v8;
      *(_OWORD *)(v11 + 40) = xmmword_190B909F0;
      *(_OWORD *)(v11 + 56) = 0u;
      *(_OWORD *)(v11 + 72) = 0u;
      *(_OWORD *)(v11 + 8_Block_object_dispose(&STACK[0x228], 8) = 0u;
      *(_OWORD *)(v11 + 104) = 0u;
      *(_OWORD *)(v11 + 120) = 0u;
      *(_OWORD *)(v11 + 136) = 0u;
      *(void *)(v11 + 152) = 0;
      *(void *)(v11 + 160) = 0xB000000000000000;
      ++v7;
      --v4;
    }
    while (v4);
    a2 = v13;
  }
  sub_190B267A4(v5, a2, a3);

  return swift_bridgeObjectRelease();
}

uint64_t sub_190B267A4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3 = a3;
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v43 = (void *)MEMORY[0x1E4FBC860];
    sub_190B21F50(0, v4, 0);
    uint64_t v5 = v43;
    for (uint64_t i = a1 + 32; ; i += 136)
    {
      --v4;
      long long v9 = *(_OWORD *)(i + 112);
      *(_OWORD *)&v42[96] = *(_OWORD *)(i + 96);
      *(_OWORD *)&v42[112] = v9;
      *(void *)&v42[128] = *(void *)(i + 128);
      long long v10 = *(_OWORD *)(i + 48);
      *(_OWORD *)&char v42[32] = *(_OWORD *)(i + 32);
      *(_OWORD *)&v42[48] = v10;
      long long v11 = *(_OWORD *)(i + 80);
      *(_OWORD *)&v42[64] = *(_OWORD *)(i + 64);
      *(_OWORD *)&v42[80] = v11;
      long long v12 = *(_OWORD *)(i + 16);
      *(_OWORD *)uint64_t v42 = *(_OWORD *)i;
      *(_OWORD *)&v42[16] = v12;
      unint64_t v13 = *(void *)v42;
      long long v33 = *(_OWORD *)&v42[8];
      long long v34 = *(_OWORD *)&v42[24];
      long long v35 = *(_OWORD *)&v42[40];
      long long v36 = *(_OWORD *)&v42[56];
      long long v37 = *(_OWORD *)&v42[72];
      long long v38 = *(_OWORD *)&v42[88];
      long long v39 = *(_OWORD *)&v42[104];
      long long v32 = *(_OWORD *)&v42[120];
      sub_190B2E774((uint64_t)v42);
      sub_190B26A58(v13, (uint64_t)&v33, (uint64_t *)&v32, a2, &v40);
      sub_190B2E984((uint64_t)v42);
      long long v14 = v40;
      uint64_t v15 = v41;
      uint64_t v43 = v5;
      unint64_t v17 = v5[2];
      unint64_t v16 = v5[3];
      if (v17 >= v16 >> 1)
      {
        long long v30 = v40;
        sub_190B21F50(v16 > 1, v17 + 1, 1);
        long long v14 = v30;
        uint64_t v5 = v43;
      }
      v5[2] = v17 + 1;
      unint64_t v18 = &v5[3 * v17];
      *((_OWORD *)v18 + 2) = v14;
      v18[6] = v15;
      if (!v4) {
        break;
      }
    }
    uint64_t v3 = a3;
  }
  if (qword_1E92A5830 != -1) {
    swift_once();
  }
  uint64_t v19 = qword_1E92A5A60;
  uint64_t v20 = *(void *)algn_1E92A5A68;
  uint64_t v21 = qword_1E92A5A70;
  uint64_t v22 = v5[2];
  if (v22)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v23 = v5 + 6;
    uint64_t v24 = v19;
    uint64_t v25 = v20;
    uint64_t v26 = v21;
    do
    {
      uint64_t v27 = *v23;
      long long v28 = *((_OWORD *)v23 - 1);
      *(void *)&long long v33 = v24;
      *((void *)&v33 + 1) = v25;
      *(void *)&long long v34 = v26;
      long long v40 = v28;
      uint64_t v41 = v27;
      sub_190B26390((uint64_t *)&v33, &v40, v42);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v25 = *(void *)&v42[8];
      uint64_t v24 = *(void *)v42;
      v23 += 3;
      uint64_t v26 = *(void *)&v42[16];
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v19 = v24;
    uint64_t v20 = v25;
    uint64_t v21 = v26;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v3 = v19;
  v3[1] = v20;
  v3[2] = v21;
  return result;
}

uint64_t sub_190B26A58@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, void *a4@<X3>, void *a5@<X8>)
{
  sub_190B30878(a2, (uint64_t)v108, &qword_1E92A5B20);
  uint64_t v92 = *a3;
  unint64_t v93 = a3[1];
  *(void *)&long long v109 = MEMORY[0x1E4FBC868];
  if (a1 >> 62) {
    goto LABEL_22;
  }
  uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v8; uint64_t v8 = sub_190B778A8())
  {
    long long v9 = (void *)MEMORY[0x1E4FBC868];
    uint64_t v10 = 4;
    while (1)
    {
      unint64_t v13 = (a1 & 0xC000000000000001) != 0
          ? (void *)MEMORY[0x192FD1FB0](v10 - 4, a1)
          : *(id *)(a1 + 8 * v10);
      uint64_t v5 = v13;
      uint64_t v14 = v10 - 3;
      if (__OFADD__(v10 - 4, 1)) {
        break;
      }
      uint64_t v15 = v8;
      uint64_t v16 = sub_190B2EFA0(v13, a4);
      uint64_t v18 = v17;
      unint64_t v20 = sub_190B236D8(v16, v17);
      uint64_t v21 = v9;
      uint64_t v22 = v9[2];
      BOOL v23 = (v19 & 1) == 0;
      uint64_t v24 = v22 + v23;
      if (__OFADD__(v22, v23)) {
        goto LABEL_20;
      }
      char v25 = v19;
      v96 = v5;
      uint64_t v5 = v21;
      if (v21[3] < v24)
      {
        sub_190B56828(v24, 1);
        uint64_t v5 = (void *)v109;
        unint64_t v26 = sub_190B236D8(v16, v18);
        if ((v25 & 1) != (v27 & 1)) {
          goto LABEL_118;
        }
        unint64_t v20 = v26;
      }
      if (v25)
      {
        uint64_t v11 = swift_bridgeObjectRelease();
        long long v9 = v5;
        long long v12 = (void *)(v5[7] + 8 * v20);
        MEMORY[0x192FD1A90](v11);
        uint64_t v8 = v15;
        if (*(void *)((*v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_190B77308();
        }
        sub_190B77368();
        sub_190B772E8();
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3DD0);
        uint64_t v28 = swift_allocObject();
        *(_OWORD *)(v28 + 16) = xmmword_190B908F0;
        *(void *)(v28 + 32) = v96;
        *(void *)&long long v101 = v28;
        sub_190B772E8();
        uint64_t v29 = v101;
        v5[(v20 >> 6) + 8] |= 1 << v20;
        long long v30 = (uint64_t *)(v5[6] + 16 * v20);
        *long long v30 = v16;
        v30[1] = v18;
        *(void *)(v5[7] + 8 * v20) = v29;
        uint64_t v31 = v5[2];
        BOOL v32 = __OFADD__(v31, 1);
        uint64_t v33 = v31 + 1;
        if (v32) {
          goto LABEL_21;
        }
        long long v9 = v5;
        v5[2] = v33;
        uint64_t v8 = v15;
      }
      ++v10;
      if (v14 == v8) {
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    swift_bridgeObjectRetain();
  }
LABEL_23:
  swift_bridgeObjectRelease();
  uint64_t v34 = swift_retain();
  uint64_t v35 = sub_190B2767C(v34);
  *(void *)&long long v109 = MEMORY[0x1E4FBC860];
  unint64_t v36 = *(void *)(v35 + 16);
  if (v36)
  {
    swift_bridgeObjectRetain();
    uint64_t v37 = 0;
    while (1)
    {
      unint64_t v38 = *(void *)(v35 + 8 * v37 + 32);
      if (v38 >> 62)
      {
        swift_bridgeObjectRetain();
        if (!sub_190B778A8())
        {
LABEL_25:
          swift_bridgeObjectRelease();
          goto LABEL_26;
        }
      }
      else
      {
        uint64_t v39 = *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v39) {
          goto LABEL_25;
        }
      }
      if ((v38 & 0xC000000000000001) != 0)
      {
        MEMORY[0x192FD1FB0](0, v38);
      }
      else
      {
        if (!*(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_79:
          __break(1u);
          goto LABEL_80;
        }
        id v40 = *(id *)(v38 + 32);
      }
      uint64_t v41 = swift_bridgeObjectRelease();
      MEMORY[0x192FD1A90](v41);
      if (*(void *)((v109 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v109 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_190B77308();
      }
      sub_190B77368();
      sub_190B772E8();
LABEL_26:
      if (v36 == ++v37)
      {
        swift_bridgeObjectRelease();
        unint64_t v36 = v109;
        goto LABEL_40;
      }
    }
  }
  unint64_t v36 = MEMORY[0x1E4FBC860];
LABEL_40:
  swift_bridgeObjectRelease();
  uint64_t v42 = swift_retain();
  uint64_t v43 = sub_190B278B4(v42);
  sub_190B3081C(v108, sub_190B2E834);
  sub_190B2E970(v92, v93);
  uint64_t v44 = sub_190B2DF54(v43, v108, v92, v93);
  sub_190B2EB80(v92, v93);
  sub_190B3081C(v108, sub_190B2EA44);
  swift_bridgeObjectRelease();
  uint64_t v35 = sub_190B23CF0(v44);
  swift_bridgeObjectRelease();
  if (qword_1E92A5830 != -1) {
LABEL_80:
  }
    swift_once();
  uint64_t v45 = qword_1E92A5A60;
  unint64_t v46 = *(void *)algn_1E92A5A68;
  uint64_t v47 = qword_1E92A5A70;
  uint64_t v48 = *(void *)(v35 + 16);
  if (v48)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v49 = (void *)(v35 + 48);
    uint64_t v5 = (void *)v46;
    unint64_t v50 = v46;
    do
    {
      uint64_t v51 = *v49;
      *(void *)&long long v101 = v45;
      *((void *)&v101 + 1) = v50;
      *(void *)&long long v102 = v47;
      long long v99 = *((_OWORD *)v49 - 1);
      uint64_t v100 = v51;
      sub_190B26390((uint64_t *)&v101, &v99, &v109);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v50 = *((void *)&v109 + 1);
      uint64_t v45 = v109;
      v49 += 3;
      uint64_t v47 = v110;
      --v48;
    }
    while (v48);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v46 = v50;
    uint64_t v90 = v47;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v90 = v47;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  unint64_t v52 = v36 >> 62;
  if (v36 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_190B778A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v35 = *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!(v46 >> 62))
  {
    uint64_t v53 = *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v54 = v35 + v53;
    if (!__OFADD__(v35, v53)) {
      goto LABEL_50;
    }
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  swift_bridgeObjectRetain();
  uint64_t v75 = sub_190B778A8();
  swift_bridgeObjectRelease();
  uint64_t v54 = v35 + v75;
  if (__OFADD__(v35, v75)) {
    goto LABEL_84;
  }
LABEL_50:
  uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v55 = MEMORY[0x1E4FBC860];
  if (v54 > 1)
  {
    swift_bridgeObjectRetain();
    unint64_t v55 = v46;
  }
  *(void *)&long long v109 = v36;
  swift_bridgeObjectRetain();
  sub_190B5B27C(v55);
  uint64_t v35 = v109;
  if ((unint64_t)v109 >> 62)
  {
LABEL_85:
    swift_bridgeObjectRetain_n();
    uint64_t v56 = sub_190B778A8();
    unint64_t v97 = v46;
    if (v56) {
      goto LABEL_54;
    }
LABEL_86:
    swift_bridgeObjectRelease();
    goto LABEL_87;
  }
  uint64_t v56 = *(void *)((v109 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  unint64_t v97 = v46;
  if (!v56) {
    goto LABEL_86;
  }
LABEL_54:
  if ((v35 & 0xC000000000000001) != 0)
  {
    id v57 = (id)MEMORY[0x192FD1FB0](0, v35);
  }
  else
  {
    if (!*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_116:
      __break(1u);
      goto LABEL_117;
    }
    id v57 = *(id *)(v35 + 32);
  }
  uint64_t v58 = v57;
  swift_bridgeObjectRelease();
  id v59 = objc_msgSend(v58, sel_linkIdentifier);

  if (v59)
  {
    unint64_t v88 = v36 >> 62;
    unint64_t v89 = v36;
    uint64_t v5 = (void *)sub_190B77168();
    unint64_t v36 = v60;

    uint64_t v61 = *MEMORY[0x1E4F5A2A0];
    if (*MEMORY[0x1E4F5A2A0])
    {
      __int16 v62 = (void *)sub_190B77158();
      int v63 = (*(uint64_t (**)(uint64_t, void *))(v61 + 16))(v61, v62);

      if (v63)
      {
        swift_bridgeObjectRetain();
        uint64_t v64 = 4;
        while (1)
        {
          if ((v35 & 0xC000000000000001) != 0) {
            id v65 = (id)MEMORY[0x192FD1FB0](v64 - 4, v35);
          }
          else {
            id v65 = *(id *)(v35 + 8 * v64);
          }
          uint64_t v66 = v65;
          uint64_t v67 = v64 - 3;
          if (__OFADD__(v64 - 4, 1)) {
            goto LABEL_79;
          }
          id v68 = objc_msgSend(v65, sel_linkIdentifier);
          if (!v68) {
            break;
          }
          CGRect v69 = v68;
          uint64_t v70 = sub_190B77168();
          uint64_t v72 = v71;

          if ((void *)v70 == v5 && v72 == v36)
          {

            swift_bridgeObjectRelease();
            unint64_t v46 = v97;
          }
          else
          {
            char v74 = sub_190B77998();

            swift_bridgeObjectRelease();
            unint64_t v46 = v97;
            if ((v74 & 1) == 0)
            {
              swift_bridgeObjectRelease();
              goto LABEL_74;
            }
          }
          ++v64;
          if (v67 == v56)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            int v94 = (void *)MEMORY[0x1E4FBC860];
            unint64_t v52 = v88;
            unint64_t v36 = v89;
            uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
            goto LABEL_91;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_74:
        swift_bridgeObjectRelease();
      }
      unint64_t v52 = v88;
      unint64_t v36 = v89;
      uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
      goto LABEL_87;
    }
LABEL_117:
    __break(1u);
LABEL_118:
    uint64_t result = sub_190B779D8();
    __break(1u);
    return result;
  }
LABEL_87:
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v109 = v5;
  uint64_t v77 = v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_190B21F30(0, v5[2] + 1, 1);
    uint64_t v77 = (void *)v109;
  }
  unint64_t v79 = v77[2];
  unint64_t v78 = v77[3];
  uint64_t v66 = (void *)(v79 + 1);
  if (v79 >= v78 >> 1) {
    goto LABEL_113;
  }
  while (1)
  {
    v77[2] = v66;
    int v94 = v77;
    v77[v79 + 4] = v35;
LABEL_91:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3D40);
    swift_arrayDestroy();
    *(void *)&long long v99 = v46;
    sub_190B30878((uint64_t)v108, (uint64_t)&v109, &qword_1E92A5B20);
    if (*((void *)&v109 + 1) == 1)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v105 = v113;
      long long v106 = v114;
      long long v107 = v115;
      long long v101 = v109;
      long long v102 = v110;
      long long v103 = v111;
      long long v104 = v112;
      sub_190B3081C(v108, sub_190B2E834);
      swift_bridgeObjectRetain();
      unint64_t v80 = sub_190B2E0F0(v36);
      sub_190B3081C(v108, sub_190B2EA44);
      sub_190B5B27C(v80);
    }
    if (v93 >> 60 == 11)
    {
      swift_bridgeObjectRelease();
      goto LABEL_111;
    }
    if (v52) {
      break;
    }
    uint64_t v35 = *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
    sub_190B2E970(v92, v93);
    if (!v35) {
      goto LABEL_109;
    }
LABEL_98:
    v98 = v5;
    sub_190B77838();
    if (v35 < 0) {
      goto LABEL_116;
    }
    unint64_t v79 = 0;
    unint64_t v46 = v36 & 0xC000000000000001;
    unint64_t v52 = v93;
    while (v35 != v79)
    {
      if (v46) {
        id v81 = (id)MEMORY[0x192FD1FB0](v79, v36);
      }
      else {
        id v81 = *(id *)(v36 + 8 * v79 + 32);
      }
      uint64_t v66 = v81;
      if (v93 >> 60 != 15)
      {
        id v82 = objc_allocWithZone((Class)CNWallpaper);
        uint64_t v5 = (void *)v36;
        sub_190B2E918(v92, v93);
        v83 = (void *)sub_190B76DE8();
        id v84 = objc_msgSend(v82, sel_initWithPosterArchiveData_, v83);

        objc_msgSend(v66, sel_setWallpaper_, v84);
        sub_190B2EB80(v92, v93);
      }
      ++v79;
      sub_190B77808();
      sub_190B77848();
      sub_190B77858();
      sub_190B77818();
      if (v35 == v79)
      {
        unint64_t v85 = (unint64_t)v98;
        sub_190B2EB80(v92, v93);
        swift_bridgeObjectRelease();
        goto LABEL_110;
      }
    }
    __break(1u);
LABEL_113:
    sub_190B21F30(v78 > 1, (int64_t)v66, 1);
    uint64_t v77 = (void *)v109;
  }
  sub_190B2E970(v92, v93);
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_190B778A8();
  swift_bridgeObjectRelease();
  if (v35) {
    goto LABEL_98;
  }
LABEL_109:
  sub_190B2EB80(v92, v93);
  swift_bridgeObjectRelease();
  unint64_t v85 = MEMORY[0x1E4FBC860];
LABEL_110:
  sub_190B5B27C(v85);
LABEL_111:
  swift_release();
  uint64_t v86 = v99;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a5 = v94;
  a5[1] = v86;
  a5[2] = v90;
  return result;
}

uint64_t sub_190B2767C(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 64;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  if (v6) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v11 = v2 + 1;
  if (!__OFADD__(v2, 1))
  {
    if (v11 < v7)
    {
      unint64_t v12 = *(void *)(v3 + 8 * v11);
      ++v2;
      if (v12) {
        goto LABEL_22;
      }
      int64_t v2 = v11 + 1;
      if (v11 + 1 >= v7) {
        goto LABEL_33;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v2);
      if (v12) {
        goto LABEL_22;
      }
      int64_t v2 = v11 + 2;
      if (v11 + 2 >= v7) {
        goto LABEL_33;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v2);
      if (v12) {
        goto LABEL_22;
      }
      int64_t v2 = v11 + 3;
      if (v11 + 3 >= v7) {
        goto LABEL_33;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v2);
      if (v12)
      {
LABEL_22:
        unint64_t v6 = (v12 - 1) & v12;
        for (unint64_t i = __clz(__rbit64(v12)) + (v2 << 6); ; unint64_t i = v9 | (v2 << 6))
        {
          unint64_t v14 = *(void *)(*(void *)(v1 + 56) + 8 * i);
          if (v14 >> 62)
          {
            swift_bridgeObjectRetain_n();
            uint64_t v18 = sub_190B778A8();
            swift_bridgeObjectRelease();
            if (v18 != 1)
            {
LABEL_5:
              uint64_t result = swift_bridgeObjectRelease();
              if (!v6) {
                goto LABEL_7;
              }
              goto LABEL_6;
            }
          }
          else
          {
            uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            if (v15 != 1) {
              goto LABEL_5;
            }
          }
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0) {
            uint64_t result = sub_190B21F30(0, *(void *)(v8 + 16) + 1, 1);
          }
          unint64_t v17 = *(void *)(v8 + 16);
          unint64_t v16 = *(void *)(v8 + 24);
          if (v17 >= v16 >> 1) {
            uint64_t result = sub_190B21F30(v16 > 1, v17 + 1, 1);
          }
          *(void *)(v8 + 16) = v17 + 1;
          *(void *)(v8 + 8 * v17 + 32) = v14;
          if (!v6) {
            goto LABEL_7;
          }
LABEL_6:
          unint64_t v9 = __clz(__rbit64(v6));
          v6 &= v6 - 1;
        }
      }
      int64_t v13 = v11 + 4;
      if (v13 < v7)
      {
        unint64_t v12 = *(void *)(v3 + 8 * v13);
        if (v12)
        {
          int64_t v2 = v13;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v2 = v13 + 1;
          if (__OFADD__(v13, 1)) {
            goto LABEL_35;
          }
          if (v2 >= v7) {
            break;
          }
          unint64_t v12 = *(void *)(v3 + 8 * v2);
          ++v13;
          if (v12) {
            goto LABEL_22;
          }
        }
      }
    }
LABEL_33:
    swift_release();
    return v8;
  }
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_190B278B4(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 64;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  if (v6) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v11 = v2 + 1;
  if (!__OFADD__(v2, 1))
  {
    if (v11 < v7)
    {
      unint64_t v12 = *(void *)(v3 + 8 * v11);
      ++v2;
      if (v12) {
        goto LABEL_22;
      }
      int64_t v2 = v11 + 1;
      if (v11 + 1 >= v7) {
        goto LABEL_33;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v2);
      if (v12) {
        goto LABEL_22;
      }
      int64_t v2 = v11 + 2;
      if (v11 + 2 >= v7) {
        goto LABEL_33;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v2);
      if (v12) {
        goto LABEL_22;
      }
      int64_t v2 = v11 + 3;
      if (v11 + 3 >= v7) {
        goto LABEL_33;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v2);
      if (v12)
      {
LABEL_22:
        unint64_t v6 = (v12 - 1) & v12;
        for (unint64_t i = __clz(__rbit64(v12)) + (v2 << 6); ; unint64_t i = v9 | (v2 << 6))
        {
          unint64_t v14 = *(void *)(*(void *)(v1 + 56) + 8 * i);
          if (v14 >> 62)
          {
            swift_bridgeObjectRetain_n();
            uint64_t v18 = sub_190B778A8();
            swift_bridgeObjectRelease();
            if (v18 < 2)
            {
LABEL_5:
              uint64_t result = swift_bridgeObjectRelease();
              if (!v6) {
                goto LABEL_7;
              }
              goto LABEL_6;
            }
          }
          else
          {
            uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            if (v15 < 2) {
              goto LABEL_5;
            }
          }
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0) {
            uint64_t result = sub_190B21F30(0, *(void *)(v8 + 16) + 1, 1);
          }
          unint64_t v17 = *(void *)(v8 + 16);
          unint64_t v16 = *(void *)(v8 + 24);
          if (v17 >= v16 >> 1) {
            uint64_t result = sub_190B21F30(v16 > 1, v17 + 1, 1);
          }
          *(void *)(v8 + 16) = v17 + 1;
          *(void *)(v8 + 8 * v17 + 32) = v14;
          if (!v6) {
            goto LABEL_7;
          }
LABEL_6:
          unint64_t v9 = __clz(__rbit64(v6));
          v6 &= v6 - 1;
        }
      }
      int64_t v13 = v11 + 4;
      if (v13 < v7)
      {
        unint64_t v12 = *(void *)(v3 + 8 * v13);
        if (v12)
        {
          int64_t v2 = v13;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v2 = v13 + 1;
          if (__OFADD__(v13, 1)) {
            goto LABEL_35;
          }
          if (v2 >= v7) {
            break;
          }
          unint64_t v12 = *(void *)(v3 + 8 * v2);
          ++v13;
          if (v12) {
            goto LABEL_22;
          }
        }
      }
    }
LABEL_33:
    swift_release();
    return v8;
  }
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_190B27AEC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[2];
  unint64_t v47 = a2[3];
  uint64_t v48 = a2[1];
  unint64_t v45 = a2[5];
  uint64_t v46 = a2[4];
  unint64_t v9 = a2[7];
  uint64_t v10 = a2[8];
  uint64_t v43 = a2[9];
  uint64_t v44 = a2[6];
  unint64_t v41 = a2[11];
  uint64_t v42 = a2[10];
  unint64_t v39 = a2[13];
  uint64_t v40 = a2[12];
  uint64_t v11 = (unint64_t)a1 >> 62;
  unint64_t v12 = *(void **)a3;
  unint64_t v49 = *(void *)(a3 + 8);
  if (!((unint64_t)a1 >> 62))
  {
    int64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_3;
    }
LABEL_41:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v29 = MEMORY[0x1E4FBC860];
    int64_t v13 = MEMORY[0x1E4FBC860];
    goto LABEL_54;
  }
  swift_bridgeObjectRetain();
  int64_t v13 = sub_190B778A8();
  if (!v13) {
    goto LABEL_41;
  }
LABEL_3:
  uint64_t v38 = v8;
  unint64_t v14 = a1 & 0xC000000000000001;
  uint64_t v35 = (uint64_t)v12;
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v15 = (id)MEMORY[0x192FD1FB0](0, a1);
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_44;
    }
    id v15 = *(id *)(a1 + 32);
  }
  unint64_t v12 = v15;
  swift_bridgeObjectRelease();
  if (v13 < 1)
  {
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  uint64_t v37 = v7;
  if (v11)
  {
    if (a1 < 0) {
      uint64_t v16 = a1;
    }
    else {
      uint64_t v16 = a1 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    if (sub_190B778A8() < 1) {
      goto LABEL_57;
    }
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_190B778A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v16) {
      goto LABEL_56;
    }
    swift_bridgeObjectRetain();
  }
  if (v16 < v13) {
    goto LABEL_45;
  }
  if (v14 && v13 != 1)
  {
    sub_190B23474(0, (unint64_t *)&qword_1E92A3E20);
    uint64_t v17 = 1;
    do
    {
      uint64_t v18 = v17 + 1;
      sub_190B777B8();
      uint64_t v17 = v18;
    }
    while (v13 != v18);
  }
  if (v11)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_190B778B8();
    uint64_t v11 = v19;
    unint64_t v14 = v20;
    int64_t v13 = v21;
    swift_bridgeObjectRelease_n();
    if ((v13 & 1) == 0) {
      goto LABEL_24;
    }
  }
  else
  {
    uint64_t v16 = a1 & 0xFFFFFFFFFFFFFF8;
    uint64_t v11 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
    unint64_t v14 = 1;
    int64_t v13 = (2 * v13) | 1;
    if ((v13 & 1) == 0) {
      goto LABEL_24;
    }
  }
  uint64_t v4 = v10;
  uint64_t v10 = v9;
  unint64_t v9 = (unint64_t)a4;
  sub_190B779A8();
  swift_unknownObjectRetain_n();
  uint64_t v22 = swift_dynamicCastClass();
  if (!v22)
  {
    swift_unknownObjectRelease();
    uint64_t v22 = MEMORY[0x1E4FBC860];
  }
  uint64_t v23 = *(void *)(v22 + 16);
  swift_release();
  if (__OFSUB__((unint64_t)v13 >> 1, v14)) {
    goto LABEL_58;
  }
  if (v23 != ((unint64_t)v13 >> 1) - v14) {
    goto LABEL_59;
  }
  int64_t v13 = swift_dynamicCastClass();
  a4 = (void *)v9;
  unint64_t v9 = v10;
  uint64_t v10 = v4;
  if (!v13)
  {
    swift_unknownObjectRelease();
    int64_t v13 = MEMORY[0x1E4FBC860];
  }
  while (1)
  {
    unint64_t v36 = a4;
    swift_unknownObjectRelease();
    if (v13 < 0 || (v13 & 0x4000000000000000) != 0)
    {
LABEL_46:
      id v30 = v12;
      swift_retain();
      uint64_t v16 = sub_190B778A8();
      if (!v16) {
        goto LABEL_47;
      }
    }
    else
    {
      uint64_t v16 = *(void *)(v13 + 16);
      id v24 = v12;
      swift_retain();
      if (!v16) {
        goto LABEL_47;
      }
    }
    if (v16 >= 1) {
      break;
    }
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    swift_unknownObjectRelease();
    a4 = (void *)v9;
    unint64_t v9 = v10;
    uint64_t v10 = v4;
LABEL_24:
    int64_t v13 = sub_190B2C3F8(v16, v11, v14, v13);
  }
  for (uint64_t i = 0; i != v16; ++i)
  {
    if ((v13 & 0xC000000000000001) != 0) {
      id v26 = (id)MEMORY[0x192FD1FB0](i, v13);
    }
    else {
      id v26 = *(id *)(v13 + 8 * i + 32);
    }
    char v27 = v26;
    sub_190B28048(v26);
  }
LABEL_47:
  swift_release();

  if (v48 != 1)
  {
    sub_190B2E834(v37, v48, v38, v47, v46, v45, v44, v9, v10, v43, v42, v41, v40, v39);
    sub_190B4AEF0(v12);
    sub_190B2EA44(v37, v48, v38, v47, v46, v45, v44, v9, v10, v43, v42, v41, v40, v39);
  }
  a4 = v36;
  if (v49 >> 60 != 11)
  {
    if (v49 >> 60 != 15)
    {
      id v31 = objc_allocWithZone((Class)CNWallpaper);
      sub_190B2E904(v35, v49);
      sub_190B2E918(v35, v49);
      BOOL v32 = (void *)sub_190B76DE8();
      id v33 = objc_msgSend(v31, sel_initWithPosterArchiveData_, v32);

      objc_msgSend(v12, sel_setWallpaper_, v33);
      sub_190B2EB80(v35, v49);
    }
    sub_190B2EB80(v35, v49);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3DD0);
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_190B908F0;
  *(void *)(v34 + 32) = v12;
  uint64_t v50 = v34;
  uint64_t result = sub_190B772E8();
  uint64_t v29 = v50;
LABEL_54:
  *a4 = MEMORY[0x1E4FBC860];
  a4[1] = v29;
  a4[2] = v13;
  return result;
}

void sub_190B28048(void *a1)
{
  int64_t v2 = v1;
  uint64_t v4 = sub_190B76BD8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  v331 = (char *)&v311 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5B28);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  v327 = (char *)&v311 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  v329 = (char *)&v311 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  v314 = (char *)&v311 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  v315 = (char *)&v311 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  v312 = (char *)&v311 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  v313 = (char *)&v311 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  v317 = (char *)&v311 - v21;
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  v318 = (char *)&v311 - v23;
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  v316 = (char *)&v311 - v25;
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v319 = (uint64_t)&v311 - v27;
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  v321 = (char *)&v311 - v29;
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  v322 = (char *)&v311 - v31;
  uint64_t v32 = MEMORY[0x1F4188790](v30);
  v320 = (char *)&v311 - v33;
  uint64_t v34 = MEMORY[0x1F4188790](v32);
  uint64_t v323 = (uint64_t)&v311 - v35;
  uint64_t v36 = MEMORY[0x1F4188790](v34);
  v324 = (char *)&v311 - v37;
  uint64_t v38 = MEMORY[0x1F4188790](v36);
  v325 = (char *)&v311 - v39;
  uint64_t v40 = MEMORY[0x1F4188790](v38);
  v326 = (void (*)(uint64_t, uint64_t))((char *)&v311 - v41);
  uint64_t v42 = MEMORY[0x1F4188790](v40);
  v330 = (char *)&v311 - v43;
  uint64_t v44 = MEMORY[0x1F4188790](v42);
  v328 = (char *)&v311 - v45;
  MEMORY[0x1F4188790](v44);
  unint64_t v47 = (char *)&v311 - v46;
  sub_190B2ACFC(a1);
  id v48 = objc_msgSend(v1, sel_organizationName);
  uint64_t v49 = sub_190B77168();
  uint64_t v51 = v50;

  id v52 = objc_msgSend(a1, sel_organizationName);
  uint64_t v53 = sub_190B77168();
  uint64_t v55 = v54;

  sub_190B2BDC4(v53, v55, v49, v51);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v56 = (void *)sub_190B77158();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setOrganizationName_, v56);

  id v57 = objc_msgSend(v2, sel_departmentName);
  uint64_t v58 = sub_190B77168();
  uint64_t v60 = v59;

  id v61 = objc_msgSend(a1, sel_departmentName);
  uint64_t v62 = sub_190B77168();
  uint64_t v64 = v63;

  sub_190B2BDC4(v62, v64, v58, v60);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v65 = (void *)sub_190B77158();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setDepartmentName_, v65);

  id v66 = objc_msgSend(v2, sel_jobTitle);
  uint64_t v67 = sub_190B77168();
  uint64_t v69 = v68;

  id v70 = objc_msgSend(a1, sel_jobTitle);
  uint64_t v71 = sub_190B77168();
  uint64_t v73 = v72;

  sub_190B2BDC4(v71, v73, v67, v69);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v74 = (void *)sub_190B77158();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setJobTitle_, v74);

  id v75 = objc_msgSend(v2, sel_previousFamilyName);
  uint64_t v76 = sub_190B77168();
  unint64_t v78 = v77;

  swift_bridgeObjectRelease();
  uint64_t v79 = HIBYTE(v78) & 0xF;
  if ((v78 & 0x2000000000000000) == 0) {
    uint64_t v79 = v76 & 0xFFFFFFFFFFFFLL;
  }
  if (!v79)
  {
    id v80 = objc_msgSend(a1, sel_previousFamilyName);
    if (!v80)
    {
      sub_190B77168();
      id v80 = (id)sub_190B77158();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v2, sel_setPreviousFamilyName_, v80);
  }
  id v81 = objc_msgSend(v2, sel_phoneticGivenName);
  uint64_t v82 = sub_190B77168();
  unint64_t v84 = v83;

  swift_bridgeObjectRelease();
  uint64_t v85 = HIBYTE(v84) & 0xF;
  if ((v84 & 0x2000000000000000) == 0) {
    uint64_t v85 = v82 & 0xFFFFFFFFFFFFLL;
  }
  if (!v85)
  {
    id v86 = objc_msgSend(a1, sel_phoneticGivenName);
    if (!v86)
    {
      sub_190B77168();
      id v86 = (id)sub_190B77158();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v2, sel_setPhoneticGivenName_, v86);
  }
  id v87 = objc_msgSend(v2, sel_phoneticMiddleName);
  uint64_t v88 = sub_190B77168();
  unint64_t v90 = v89;

  swift_bridgeObjectRelease();
  uint64_t v91 = HIBYTE(v90) & 0xF;
  if ((v90 & 0x2000000000000000) == 0) {
    uint64_t v91 = v88 & 0xFFFFFFFFFFFFLL;
  }
  if (!v91)
  {
    id v92 = objc_msgSend(a1, sel_phoneticMiddleName);
    if (!v92)
    {
      sub_190B77168();
      id v92 = (id)sub_190B77158();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v2, sel_setPhoneticMiddleName_, v92);
  }
  id v93 = objc_msgSend(v2, sel_phoneticFamilyName);
  uint64_t v94 = sub_190B77168();
  unint64_t v96 = v95;

  swift_bridgeObjectRelease();
  uint64_t v97 = HIBYTE(v96) & 0xF;
  if ((v96 & 0x2000000000000000) == 0) {
    uint64_t v97 = v94 & 0xFFFFFFFFFFFFLL;
  }
  if (!v97)
  {
    id v98 = objc_msgSend(a1, sel_phoneticFamilyName);
    if (!v98)
    {
      sub_190B77168();
      id v98 = (id)sub_190B77158();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v2, sel_setPhoneticFamilyName_, v98);
  }
  id v99 = objc_msgSend(v2, sel_phoneticOrganizationName);
  uint64_t v100 = sub_190B77168();
  unint64_t v102 = v101;

  swift_bridgeObjectRelease();
  uint64_t v103 = HIBYTE(v102) & 0xF;
  if ((v102 & 0x2000000000000000) == 0) {
    uint64_t v103 = v100 & 0xFFFFFFFFFFFFLL;
  }
  if (!v103)
  {
    id v104 = objc_msgSend(a1, sel_phoneticOrganizationName);
    if (!v104)
    {
      sub_190B77168();
      id v104 = (id)sub_190B77158();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v2, sel_setPhoneticOrganizationName_, v104);
  }
  id v105 = objc_msgSend(v2, sel_callAlert);

  if (!v105)
  {
    id v106 = objc_msgSend(a1, sel_callAlert);
    objc_msgSend(v2, sel_setCallAlert_, v106);
  }
  id v107 = objc_msgSend(v2, sel_textAlert);

  if (!v107)
  {
    id v108 = objc_msgSend(a1, sel_textAlert);
    objc_msgSend(v2, sel_setTextAlert_, v108);
  }
  id v109 = objc_msgSend(v2, sel_phonemeData);
  if (!v109) {
    goto LABEL_39;
  }
  long long v110 = v109;
  uint64_t v111 = sub_190B77168();
  unint64_t v113 = v112;

  swift_bridgeObjectRelease();
  uint64_t v114 = HIBYTE(v113) & 0xF;
  if ((v113 & 0x2000000000000000) == 0) {
    uint64_t v114 = v111 & 0xFFFFFFFFFFFFLL;
  }
  if (!v114)
  {
LABEL_39:
    id v115 = objc_msgSend(a1, sel_phonemeData);
    objc_msgSend(v2, sel_setPhonemeData_, v115);
  }
  id v116 = objc_msgSend(v2, sel_explicitDisplayName);
  if (!v116) {
    goto LABEL_44;
  }
  v117 = v116;
  uint64_t v118 = sub_190B77168();
  unint64_t v120 = v119;

  swift_bridgeObjectRelease();
  uint64_t v121 = HIBYTE(v120) & 0xF;
  if ((v120 & 0x2000000000000000) == 0) {
    uint64_t v121 = v118 & 0xFFFFFFFFFFFFLL;
  }
  if (!v121)
  {
LABEL_44:
    id v122 = objc_msgSend(a1, sel_explicitDisplayName);
    objc_msgSend(v2, sel_setExplicitDisplayName_, v122);
  }
  id v123 = objc_msgSend(v2, sel_mapsData);
  if (!v123) {
    goto LABEL_49;
  }
  v124 = v123;
  uint64_t v125 = sub_190B77168();
  unint64_t v127 = v126;

  swift_bridgeObjectRelease();
  uint64_t v128 = HIBYTE(v127) & 0xF;
  if ((v127 & 0x2000000000000000) == 0) {
    uint64_t v128 = v125 & 0xFFFFFFFFFFFFLL;
  }
  if (!v128)
  {
LABEL_49:
    id v129 = objc_msgSend(a1, sel_mapsData);
    objc_msgSend(v2, sel_setMapsData_, v129);
  }
  id v130 = objc_msgSend(v2, sel_birthday);
  if (v130)
  {
    v131 = v130;
    v132 = v331;
    sub_190B76B88();

    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v47, v132, v4);
    v133 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v133(v47, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v47, 1, v4) != 1)
    {
      sub_190B23144((uint64_t)v47, &qword_1E92A5B28);
      goto LABEL_60;
    }
  }
  else
  {
    v133 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v133(v47, 1, 1, v4);
  }
  sub_190B23144((uint64_t)v47, &qword_1E92A5B28);
  id v134 = objc_msgSend(a1, sel_birthday);
  if (v134)
  {
    v135 = v331;
    sub_190B76B88();

    v136 = v328;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v328, v135, v4);
    v133(v136, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v136, 1, v4) == 1)
    {
      id v134 = 0;
    }
    else
    {
      id v134 = (id)sub_190B76B78();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v136, v4);
    }
  }
  else
  {
    v133(v328, 1, 1, v4);
  }
  objc_msgSend(v2, sel_setBirthday_, v134);

LABEL_60:
  id v137 = objc_msgSend(v2, sel_birthday);
  if (!v137)
  {
    uint64_t v141 = (uint64_t)v330;
    v149 = v330;
    uint64_t v150 = v4;
LABEL_65:
    v133(v149, 1, 1, v150);
    goto LABEL_66;
  }
  v138 = v137;
  v139 = v331;
  sub_190B76B88();

  v140 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  uint64_t v141 = (uint64_t)v330;
  v140(v330, v139, v4);
  v328 = (char *)(v5 + 56);
  v133((char *)v141, 0, 1, v4);
  v142 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v142(v141, 1, v4) == 1)
  {
LABEL_66:
    sub_190B23144(v141, &qword_1E92A5B28);
    goto LABEL_67;
  }
  v311 = v142;
  sub_190B23144(v141, &qword_1E92A5B28);
  id v143 = objc_msgSend(v2, sel_birthday);
  if (v143)
  {
    v144 = v143;
    v145 = v325;
    sub_190B76B88();

    uint64_t v146 = (uint64_t)v145;
    uint64_t v147 = 0;
  }
  else
  {
    uint64_t v147 = 1;
    uint64_t v146 = (uint64_t)v325;
  }
  uint64_t v148 = (uint64_t)v326;
  v133((char *)v146, v147, 1, v4);
  sub_190B30878(v146, v148, &qword_1E92A5B28);
  if (v311(v148, 1, v4) == 1)
  {
    __break(1u);
    goto LABEL_173;
  }
  sub_190B76BA8();
  char v258 = v257;
  v259 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v330 = (char *)(v5 + 8);
  v326 = v259;
  v259(v148, v4);
  if ((v258 & 1) == 0) {
    goto LABEL_67;
  }
  id v260 = objc_msgSend(a1, sel_birthday);
  if (!v260)
  {
    uint64_t v141 = (uint64_t)v324;
    v149 = v324;
    uint64_t v150 = v4;
    goto LABEL_65;
  }
  v261 = v260;
  v262 = v331;
  sub_190B76B88();

  uint64_t v141 = (uint64_t)v324;
  v140(v324, v262, v4);
  v133((char *)v141, 0, 1, v4);
  if (v311(v141, 1, v4) == 1) {
    goto LABEL_66;
  }
  sub_190B23144(v141, &qword_1E92A5B28);
  id v263 = objc_msgSend(v2, sel_birthday);
  if (v263)
  {
    v264 = v263;
    v265 = v320;
    sub_190B76B88();

    v266 = v265;
    uint64_t v267 = 0;
    uint64_t v269 = (uint64_t)v321;
    uint64_t v268 = (uint64_t)v322;
  }
  else
  {
    uint64_t v267 = 1;
    uint64_t v269 = (uint64_t)v321;
    uint64_t v268 = (uint64_t)v322;
    v266 = v320;
  }
  char v270 = 1;
  v133(v266, v267, 1, v4);
  uint64_t v271 = (uint64_t)v266;
  uint64_t v272 = v323;
  sub_190B30878(v271, v323, &qword_1E92A5B28);
  if (v311(v272, 1, v4))
  {
    v325 = 0;
  }
  else
  {
    uint64_t v273 = sub_190B76BC8();
    uint64_t v272 = v323;
    v325 = (char *)v273;
    char v270 = v274 & 1;
  }
  sub_190B23144(v272, &qword_1E92A5B28);
  id v275 = objc_msgSend(a1, sel_birthday);
  if (v275)
  {
    v276 = v275;
    sub_190B76B88();

    uint64_t v277 = 0;
  }
  else
  {
    uint64_t v277 = 1;
  }
  v133((char *)v269, v277, 1, v4);
  sub_190B30878(v269, v268, &qword_1E92A5B28);
  if (v311(v268, 1, v4) == 1)
  {
    sub_190B23144(v268, &qword_1E92A5B28);
    if ((v270 & 1) == 0) {
      goto LABEL_67;
    }
  }
  else
  {
    uint64_t v278 = sub_190B76BC8();
    char v280 = v279;
    v326(v268, v4);
    if (v270)
    {
      if ((v280 & 1) == 0) {
        goto LABEL_67;
      }
    }
    else if ((v280 & 1) != 0 || v325 != (char *)v278)
    {
      goto LABEL_67;
    }
  }
  id v281 = objc_msgSend(v2, sel_birthday);
  if (v281)
  {
    v282 = v281;
    v283 = v316;
    sub_190B76B88();

    v284 = v283;
    uint64_t v285 = 0;
    uint64_t v287 = (uint64_t)v317;
    uint64_t v286 = (uint64_t)v318;
  }
  else
  {
    uint64_t v285 = 1;
    uint64_t v287 = (uint64_t)v317;
    uint64_t v286 = (uint64_t)v318;
    v284 = v316;
  }
  char v288 = 1;
  v133(v284, v285, 1, v4);
  uint64_t v289 = (uint64_t)v284;
  uint64_t v290 = v319;
  sub_190B30878(v289, v319, &qword_1E92A5B28);
  if (v311(v290, 1, v4))
  {
    v325 = 0;
  }
  else
  {
    uint64_t v291 = sub_190B76B98();
    uint64_t v290 = v319;
    v325 = (char *)v291;
    char v288 = v292 & 1;
  }
  sub_190B23144(v290, &qword_1E92A5B28);
  id v293 = objc_msgSend(a1, sel_birthday);
  if (v293)
  {
    v294 = v293;
    sub_190B76B88();

    uint64_t v295 = 0;
  }
  else
  {
    uint64_t v295 = 1;
  }
  v133((char *)v287, v295, 1, v4);
  sub_190B30878(v287, v286, &qword_1E92A5B28);
  if (v311(v286, 1, v4) == 1)
  {
    sub_190B23144(v286, &qword_1E92A5B28);
    if ((v288 & 1) == 0) {
      goto LABEL_67;
    }
  }
  else
  {
    uint64_t v296 = sub_190B76B98();
    char v298 = v297;
    v326(v286, v4);
    if (v288)
    {
      if ((v298 & 1) == 0) {
        goto LABEL_67;
      }
    }
    else if ((v298 & 1) != 0 || v325 != (char *)v296)
    {
      goto LABEL_67;
    }
  }
  id v299 = objc_msgSend(a1, sel_birthday);
  if (v299)
  {
    v300 = v299;
    uint64_t v301 = (uint64_t)v312;
    sub_190B76B88();

    uint64_t v302 = 0;
    uint64_t v303 = (uint64_t)v315;
    uint64_t v304 = (uint64_t)v313;
  }
  else
  {
    uint64_t v302 = 1;
    uint64_t v303 = (uint64_t)v315;
    uint64_t v304 = (uint64_t)v313;
    uint64_t v301 = (uint64_t)v312;
  }
  v133((char *)v301, v302, 1, v4);
  sub_190B30878(v301, v304, &qword_1E92A5B28);
  if (v311(v304, 1, v4) == 1)
  {
    sub_190B23144(v304, &qword_1E92A5B28);
    v325 = 0;
  }
  else
  {
    v325 = (char *)sub_190B76BA8();
    v326(v304, v4);
  }
  id v305 = objc_msgSend(v2, sel_birthday);
  if (v305)
  {
    v306 = v305;
    uint64_t v307 = (uint64_t)v314;
    sub_190B76B88();

    uint64_t v308 = 0;
  }
  else
  {
    uint64_t v308 = 1;
    uint64_t v307 = (uint64_t)v314;
  }
  v133((char *)v307, v308, 1, v4);
  sub_190B30878(v307, v303, &qword_1E92A5B28);
  v309 = v311;
  if (v311(v303, 1, v4) == 1)
  {
LABEL_173:
    __break(1u);
    return;
  }
  sub_190B76BB8();
  if (v309(v303, 1, v4) == 1)
  {
    v310 = 0;
  }
  else
  {
    v310 = (void *)sub_190B76B78();
    v326(v303, v4);
  }
  objc_msgSend(v2, sel_setBirthday_, v310);

LABEL_67:
  id v151 = objc_msgSend(v2, sel_nonGregorianBirthday);
  if (!v151)
  {
    uint64_t v154 = (uint64_t)v329;
    v133(v329, 1, 1, v4);
    goto LABEL_71;
  }
  v152 = v151;
  v153 = v331;
  sub_190B76B88();

  uint64_t v154 = (uint64_t)v329;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v329, v153, v4);
  v133((char *)v154, 0, 1, v4);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v154, 1, v4) == 1)
  {
LABEL_71:
    sub_190B23144(v154, &qword_1E92A5B28);
    id v155 = objc_msgSend(a1, sel_nonGregorianBirthday);
    if (v155)
    {
      v156 = v331;
      sub_190B76B88();

      v157 = v327;
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v327, v156, v4);
      v133(v157, 0, 1, v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v157, 1, v4) == 1)
      {
        id v155 = 0;
      }
      else
      {
        id v155 = (id)sub_190B76B78();
        (*(void (**)(char *, uint64_t))(v5 + 8))(v157, v4);
      }
    }
    else
    {
      v133(v327, 1, 1, v4);
    }
    objc_msgSend(v2, sel_setNonGregorianBirthday_, v155);

    goto LABEL_77;
  }
  sub_190B23144(v154, &qword_1E92A5B28);
LABEL_77:
  id v158 = objc_msgSend(v2, sel_note);
  uint64_t v159 = sub_190B77168();
  unint64_t v161 = v160;

  swift_bridgeObjectRelease();
  if ((v161 & 0x2000000000000000) != 0) {
    uint64_t v162 = HIBYTE(v161) & 0xF;
  }
  else {
    uint64_t v162 = v159 & 0xFFFFFFFFFFFFLL;
  }
  id v163 = objc_msgSend(a1, sel_note);
  v164 = v163;
  if (v162)
  {
    uint64_t v165 = sub_190B77168();
    unint64_t v167 = v166;

    swift_bridgeObjectRelease();
    uint64_t v168 = HIBYTE(v167) & 0xF;
    if ((v167 & 0x2000000000000000) == 0) {
      uint64_t v168 = v165 & 0xFFFFFFFFFFFFLL;
    }
    if (v168)
    {
      id v169 = objc_msgSend(v2, sel_note);
      uint64_t v170 = sub_190B77168();
      uint64_t v172 = v171;

      id v173 = objc_msgSend(a1, sel_note);
      uint64_t v174 = sub_190B77168();
      uint64_t v176 = v175;

      if (v170 == v174 && v172 == v176)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v177 = sub_190B77998();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v177 & 1) == 0)
        {
          id v178 = objc_msgSend(v2, sel_note);
          uint64_t v179 = sub_190B77168();
          uint64_t v181 = v180;

          uint64_t v332 = v179;
          uint64_t v333 = v181;
          sub_190B771F8();
          id v182 = objc_msgSend(a1, sel_note);
          sub_190B77168();

          sub_190B771F8();
          swift_bridgeObjectRelease();
          v183 = (void *)sub_190B77158();
          swift_bridgeObjectRelease();
          objc_msgSend(v2, sel_setNote_, v183);
        }
      }
    }
  }
  else
  {
    if (!v163)
    {
      sub_190B77168();
      v164 = (void *)sub_190B77158();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v2, sel_setNote_, v164);
  }
  if ((objc_msgSend(v2, sel_imageDataAvailable) & 1) == 0
    && objc_msgSend(a1, sel_imageDataAvailable))
  {
    id v184 = objc_msgSend(a1, sel_imageData);
    if (v184)
    {
      uint64_t v185 = sub_190B76E08();
      unint64_t v187 = v186;

      id v184 = (id)sub_190B76DE8();
      sub_190B2EB28(v185, v187);
    }
    objc_msgSend(v2, sel_setImageData_, v184);

    objc_msgSend(a1, sel_cropRect);
    objc_msgSend(v2, sel_setCropRect_);
    id v188 = objc_msgSend(a1, sel_imageType);
    objc_msgSend(v2, sel_setImageType_, v188);

    id v189 = objc_msgSend(a1, sel_memojiMetadata);
    if (v189)
    {
      uint64_t v190 = sub_190B76E08();
      unint64_t v192 = v191;

      id v189 = (id)sub_190B76DE8();
      sub_190B2EB28(v190, v192);
    }
    objc_msgSend(v2, sel_setMemojiMetadata_, v189);
  }
  id v193 = objc_msgSend(v2, sel_wallpaper);

  if (!v193)
  {
    id v194 = objc_msgSend(a1, sel_wallpaper);

    if (v194)
    {
      id v195 = objc_msgSend(a1, sel_wallpaper);
      objc_msgSend(v2, sel_setWallpaper_, v195);
    }
  }
  id v196 = objc_msgSend(v2, sel_pronunciationGivenName);
  if (!v196) {
    goto LABEL_106;
  }
  v197 = v196;
  uint64_t v198 = sub_190B77168();
  unint64_t v200 = v199;

  swift_bridgeObjectRelease();
  uint64_t v201 = HIBYTE(v200) & 0xF;
  if ((v200 & 0x2000000000000000) == 0) {
    uint64_t v201 = v198 & 0xFFFFFFFFFFFFLL;
  }
  if (!v201)
  {
LABEL_106:
    id v202 = objc_msgSend(a1, sel_pronunciationGivenName);
    objc_msgSend(v2, sel_setPronunciationGivenName_, v202);
  }
  id v203 = objc_msgSend(v2, sel_pronunciationFamilyName);
  if (!v203) {
    goto LABEL_111;
  }
  v204 = v203;
  uint64_t v205 = sub_190B77168();
  unint64_t v207 = v206;

  swift_bridgeObjectRelease();
  uint64_t v208 = HIBYTE(v207) & 0xF;
  if ((v207 & 0x2000000000000000) == 0) {
    uint64_t v208 = v205 & 0xFFFFFFFFFFFFLL;
  }
  if (!v208)
  {
LABEL_111:
    id v209 = objc_msgSend(a1, sel_pronunciationFamilyName);
    objc_msgSend(v2, sel_setPronunciationFamilyName_, v209);
  }
  id v210 = objc_msgSend(v2, sel_preferredChannel);
  if (!v210) {
    goto LABEL_116;
  }
  v211 = v210;
  uint64_t v212 = sub_190B77168();
  unint64_t v214 = v213;

  swift_bridgeObjectRelease();
  uint64_t v215 = HIBYTE(v214) & 0xF;
  if ((v214 & 0x2000000000000000) == 0) {
    uint64_t v215 = v212 & 0xFFFFFFFFFFFFLL;
  }
  if (!v215)
  {
LABEL_116:
    id v216 = objc_msgSend(a1, sel_preferredChannel);
    objc_msgSend(v2, sel_setPreferredChannel_, v216);
  }
  id v217 = objc_msgSend(v2, sel_emailAddresses);
  __swift_instantiateConcreteTypeFromMangledName(qword_1E92A5A78);
  unint64_t v218 = sub_190B772C8();

  id v219 = objc_msgSend(a1, sel_emailAddresses);
  unint64_t v220 = sub_190B772C8();

  sub_190B2DB34(v218, v220, (uint64_t (*)(uint64_t))sub_190B6A164, (unint64_t *)&unk_1E92A61E0, 0x1E4F29018, (void (*)(id *, id))sub_190B6884C);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v221 = (void *)sub_190B772B8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setEmailAddresses_, v221);

  id v222 = objc_msgSend(v2, sel_phoneNumbers);
  unint64_t v223 = sub_190B772C8();

  id v224 = objc_msgSend(a1, sel_phoneNumbers);
  unint64_t v225 = sub_190B772C8();

  sub_190B2D280(v223, v225);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v226 = (void *)sub_190B772B8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setPhoneNumbers_, v226);

  id v227 = objc_msgSend(v2, sel_urlAddresses);
  unint64_t v228 = sub_190B772C8();

  id v229 = objc_msgSend(a1, sel_urlAddresses);
  unint64_t v230 = sub_190B772C8();

  sub_190B2DB34(v228, v230, (uint64_t (*)(uint64_t))sub_190B6A164, (unint64_t *)&unk_1E92A61E0, 0x1E4F29018, (void (*)(id *, id))sub_190B6884C);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v231 = (void *)sub_190B772B8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setUrlAddresses_, v231);

  id v232 = objc_msgSend(v2, sel_dates);
  unint64_t v233 = sub_190B772C8();

  id v234 = objc_msgSend(a1, sel_dates);
  unint64_t v235 = sub_190B772C8();

  sub_190B2DB34(v233, v235, (uint64_t (*)(uint64_t))sub_190B6A33C, &qword_1E92A6250, 0x1E4F1C9D8, (void (*)(id *, id))sub_190B68814);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v236 = (void *)sub_190B772B8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setDates_, v236);

  id v237 = objc_msgSend(v2, sel_instantMessageAddresses);
  unint64_t v238 = sub_190B772C8();

  id v239 = objc_msgSend(a1, sel_instantMessageAddresses);
  unint64_t v240 = sub_190B772C8();

  sub_190B2DB34(v238, v240, (uint64_t (*)(uint64_t))sub_190B6A360, &qword_1E92A5B38, (uint64_t)off_1E56B2D70, (void (*)(id *, id))sub_190B687F8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v241 = (void *)sub_190B772B8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setInstantMessageAddresses_, v241);

  id v242 = objc_msgSend(v2, sel_contactRelations);
  unint64_t v243 = sub_190B772C8();

  id v244 = objc_msgSend(a1, sel_contactRelations);
  unint64_t v245 = sub_190B772C8();

  sub_190B2DB34(v243, v245, (uint64_t (*)(uint64_t))sub_190B6A384, &qword_1E92A6220, (uint64_t)off_1E56B2B30, (void (*)(id *, id))sub_190B687DC);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v246 = (void *)sub_190B772B8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setContactRelations_, v246);

  id v247 = objc_msgSend(v2, sel_socialProfiles);
  unint64_t v248 = sub_190B772C8();

  id v249 = objc_msgSend(a1, sel_socialProfiles);
  unint64_t v250 = sub_190B772C8();

  sub_190B2DB34(v248, v250, (uint64_t (*)(uint64_t))sub_190B6A3A8, &qword_1E92A5B30, (uint64_t)off_1E56B3040, (void (*)(id *, id))sub_190B687C0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v251 = (void *)sub_190B772B8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setSocialProfiles_, v251);

  id v252 = objc_msgSend(v2, sel_postalAddresses);
  unint64_t v253 = sub_190B772C8();

  id v254 = objc_msgSend(a1, sel_postalAddresses);
  unint64_t v255 = sub_190B772C8();

  sub_190B2DB34(v253, v255, (uint64_t (*)(uint64_t))sub_190B6A3CC, &qword_1E92A61F0, (uint64_t)&off_1E56B2F18, (void (*)(id *, id))sub_190B687A4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v256 = (void *)sub_190B772B8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setPostalAddresses_, v256);
}

uint64_t sub_190B2A2F8(unint64_t a1)
{
  return sub_190B2A3C0(a1, (SEL *)&selRef_emailAddresses, (uint64_t (*)(uint64_t))sub_190B2B16C, (SEL *)&selRef_setEmailAddresses_);
}

BOOL sub_190B2A320(void *a1)
{
  return sub_190B2A670(a1, (SEL *)&selRef_emailAddresses, (uint64_t (*)(uint64_t))sub_190B2B16C, (SEL *)&selRef_setEmailAddresses_);
}

uint64_t sub_190B2A348(unint64_t a1)
{
  return sub_190B2A3C0(a1, (SEL *)&selRef_phoneNumbers, (uint64_t (*)(uint64_t))sub_190B2B4DC, (SEL *)&selRef_setPhoneNumbers_);
}

BOOL sub_190B2A370(void *a1)
{
  return sub_190B2A670(a1, (SEL *)&selRef_phoneNumbers, (uint64_t (*)(uint64_t))sub_190B2B4DC, (SEL *)&selRef_setPhoneNumbers_);
}

uint64_t sub_190B2A398(unint64_t a1)
{
  return sub_190B2A3C0(a1, (SEL *)&selRef_urlAddresses, (uint64_t (*)(uint64_t))sub_190B2B16C, (SEL *)&selRef_setUrlAddresses_);
}

uint64_t sub_190B2A3C0(unint64_t a1, SEL *a2, uint64_t (*a3)(uint64_t), SEL *a4)
{
  uint64_t v19 = a4;
  uint64_t v21 = MEMORY[0x1E4FBC860];
  if (!(a1 >> 62))
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v6) {
      goto LABEL_3;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_190B778A8();
  uint64_t v6 = result;
  if (!result) {
    goto LABEL_20;
  }
LABEL_3:
  if (v6 < 1)
  {
    __break(1u);
  }
  else
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v9 = (id)MEMORY[0x192FD1FB0](i, a1);
      }
      else {
        id v9 = *(id *)(a1 + 8 * i + 32);
      }
      uint64_t v10 = v9;
      id v11 = objc_msgSend(v9, *a2, v19);
      __swift_instantiateConcreteTypeFromMangledName(qword_1E92A5A78);
      uint64_t v12 = sub_190B772C8();

      unint64_t v13 = a3(v12);
      swift_bridgeObjectRelease();
      if (v13 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v14 = sub_190B778A8();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      id v15 = [v10 *a2];
      unint64_t v16 = sub_190B772C8();

      if (v16 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v17 = sub_190B778A8();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v14 >= v17)
      {

        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v18 = (void *)sub_190B772B8();
        swift_bridgeObjectRelease();
        objc_msgSend(v10, *v19, v18);

        sub_190B77808();
        sub_190B77848();
        sub_190B77858();
        sub_190B77818();
      }
    }
    swift_bridgeObjectRelease();
    return v21;
  }
  return result;
}

BOOL sub_190B2A648(void *a1)
{
  return sub_190B2A670(a1, (SEL *)&selRef_urlAddresses, (uint64_t (*)(uint64_t))sub_190B2B16C, (SEL *)&selRef_setUrlAddresses_);
}

BOOL sub_190B2A670(void *a1, SEL *a2, uint64_t (*a3)(uint64_t), SEL *a4)
{
  id v8 = [a1 *a2];
  __swift_instantiateConcreteTypeFromMangledName(qword_1E92A5A78);
  uint64_t v9 = sub_190B772C8();

  unint64_t v10 = a3(v9);
  swift_bridgeObjectRelease();
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_190B778A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  id v12 = [a1 *a2];
  unint64_t v13 = sub_190B772C8();

  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_190B778A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v11 >= v14)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    id v15 = (void *)sub_190B772B8();
    swift_bridgeObjectRelease();
    objc_msgSend(a1, *a4, v15);
  }
  return v11 < v14;
}

void sub_190B2A7F4(uint64_t a1)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92A5DA0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = (unint64_t)a1 >> 62;
  if (!((unint64_t)a1 >> 62))
  {
    uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_3;
    }
LABEL_40:
    swift_bridgeObjectRelease();
    sub_190B76CB8();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_190B778A8();
  if (!v9) {
    goto LABEL_40;
  }
LABEL_3:
  uint64_t v10 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v11 = (id)MEMORY[0x192FD1FB0](0, a1);
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_45;
    }
    id v11 = *(id *)(a1 + 32);
  }
  uint64_t v1 = v11;
  swift_bridgeObjectRelease();
  if (v9 < 1)
  {
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  if (v8)
  {
    if (a1 < 0) {
      int64_t v12 = a1;
    }
    else {
      int64_t v12 = a1 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    if (sub_190B778A8() < 1) {
      goto LABEL_51;
    }
    swift_bridgeObjectRetain();
    int64_t v12 = sub_190B778A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    int64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v12) {
      goto LABEL_50;
    }
    swift_bridgeObjectRetain();
  }
  if (v12 < v9) {
    goto LABEL_46;
  }
  if (v10 && v9 != 1)
  {
    sub_190B23474(0, (unint64_t *)&qword_1E92A3E20);
    uint64_t v13 = 1;
    do
    {
      uint64_t v14 = v13 + 1;
      sub_190B777B8();
      uint64_t v13 = v14;
    }
    while (v9 != v14);
  }
  if (v8)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_190B778B8();
    uint64_t v2 = v15;
    uint64_t v3 = v16;
    int64_t v12 = v17;
    swift_bridgeObjectRelease_n();
    if ((v12 & 1) == 0) {
      goto LABEL_23;
    }
  }
  else
  {
    uint64_t v10 = a1 & 0xFFFFFFFFFFFFFF8;
    uint64_t v2 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
    uint64_t v3 = 1;
    int64_t v12 = (2 * v9) | 1;
  }
  sub_190B779A8();
  swift_unknownObjectRetain_n();
  uint64_t v18 = swift_dynamicCastClass();
  if (!v18)
  {
    swift_unknownObjectRelease();
    uint64_t v18 = MEMORY[0x1E4FBC860];
  }
  uint64_t v19 = *(void *)(v18 + 16);
  swift_release();
  if (__OFSUB__((unint64_t)v12 >> 1, v3)) {
    goto LABEL_52;
  }
  if (v19 != ((unint64_t)v12 >> 1) - v3) {
    goto LABEL_53;
  }
  a1 = swift_dynamicCastClass();
  if (!a1)
  {
    swift_unknownObjectRelease();
    a1 = MEMORY[0x1E4FBC860];
  }
  while (1)
  {
    swift_unknownObjectRelease();
    if (a1 < 0 || (a1 & 0x4000000000000000) != 0)
    {
LABEL_47:
      swift_bridgeObjectRetain();
      int64_t v12 = sub_190B778A8();
      if (!v12) {
        goto LABEL_48;
      }
    }
    else
    {
      int64_t v12 = *(void *)(a1 + 16);
      swift_bridgeObjectRetain();
      if (!v12) {
        goto LABEL_48;
      }
    }
    if (v12 >= 1) {
      break;
    }
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    swift_unknownObjectRelease();
LABEL_23:
    a1 = sub_190B2C3F8(v10, v2, v3, v12);
  }
  for (uint64_t i = 0; i != v12; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v21 = (id)MEMORY[0x192FD1FB0](i, a1);
    }
    else {
      id v21 = *(id *)(a1 + 8 * i + 32);
    }
    uint64_t v22 = v21;
    sub_190B2ACFC(v21);
  }
LABEL_48:
  swift_release_n();
  id v23 = objc_msgSend(v1, sel_namePrefix);
  uint64_t v24 = sub_190B77168();
  v36[4] = v25;
  id v36[5] = v24;

  id v26 = objc_msgSend(v1, sel_givenName);
  uint64_t v27 = sub_190B77168();
  _OWORD v36[2] = v28;
  v36[3] = v27;

  id v29 = objc_msgSend(v1, sel_middleName);
  uint64_t v30 = sub_190B77168();
  v36[0] = v31;
  v36[1] = v30;

  id v32 = objc_msgSend(v1, sel_familyName);
  sub_190B77168();

  id v33 = objc_msgSend(v1, sel_nameSuffix);
  sub_190B77168();

  id v34 = objc_msgSend(v1, sel_nickname);
  sub_190B77168();

  uint64_t v35 = sub_190B76CC8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v7, 1, 1, v35);
  sub_190B76C78();
}

void sub_190B2ACFC(void *a1)
{
  id v3 = objc_msgSend(v1, sel_namePrefix);
  uint64_t v4 = sub_190B77168();
  uint64_t v6 = v5;

  id v7 = objc_msgSend(a1, sel_namePrefix);
  uint64_t v8 = sub_190B77168();
  uint64_t v10 = v9;

  sub_190B2BDC4(v8, v10, v4, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v11 = (void *)sub_190B77158();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setNamePrefix_, v11);

  id v12 = objc_msgSend(v1, sel_givenName);
  uint64_t v13 = sub_190B77168();
  uint64_t v15 = v14;

  id v16 = objc_msgSend(a1, sel_givenName);
  uint64_t v17 = sub_190B77168();
  uint64_t v19 = v18;

  sub_190B2BDC4(v17, v19, v13, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v20 = (void *)sub_190B77158();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setGivenName_, v20);

  id v21 = objc_msgSend(v1, sel_middleName);
  uint64_t v22 = sub_190B77168();
  uint64_t v24 = v23;

  id v25 = objc_msgSend(a1, sel_middleName);
  uint64_t v26 = sub_190B77168();
  uint64_t v28 = v27;

  sub_190B2BDC4(v26, v28, v22, v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v29 = (void *)sub_190B77158();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setMiddleName_, v29);

  id v30 = objc_msgSend(v1, sel_familyName);
  uint64_t v31 = sub_190B77168();
  uint64_t v33 = v32;

  id v34 = objc_msgSend(a1, sel_familyName);
  uint64_t v35 = sub_190B77168();
  uint64_t v37 = v36;

  sub_190B2BDC4(v35, v37, v31, v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v38 = (void *)sub_190B77158();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setFamilyName_, v38);

  id v39 = objc_msgSend(v1, sel_nameSuffix);
  uint64_t v40 = sub_190B77168();
  uint64_t v42 = v41;

  id v43 = objc_msgSend(a1, sel_nameSuffix);
  uint64_t v44 = sub_190B77168();
  uint64_t v46 = v45;

  sub_190B2BDC4(v44, v46, v40, v42);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v47 = (void *)sub_190B77158();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setNameSuffix_, v47);

  id v48 = objc_msgSend(v1, sel_nickname);
  uint64_t v49 = sub_190B77168();
  uint64_t v51 = v50;

  id v52 = objc_msgSend(a1, sel_nickname);
  uint64_t v53 = sub_190B77168();
  uint64_t v55 = v54;

  sub_190B2BDC4(v53, v55, v49, v51);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v56 = (id)sub_190B77158();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setNickname_, v56);
}

uint64_t sub_190B2B16C(unint64_t a1)
{
  uint64_t v30 = MEMORY[0x1E4FBC860];
  if ((MEMORY[0x1E4FBC860] & 0xC000000000000000) != 0) {
    goto LABEL_32;
  }
LABEL_2:
  uint64_t v2 = MEMORY[0x1E4FBC870];
LABEL_3:
  uint64_t v29 = v2;
  if (!(a1 >> 62))
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v3) {
      goto LABEL_35;
    }
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_190B778A8();
  if (v3)
  {
LABEL_5:
    unint64_t v4 = 0;
    unint64_t v5 = a1 & 0xC000000000000001;
    sub_190B23474(0, (unint64_t *)&unk_1E92A61E0);
    uint64_t v27 = v3;
    uint64_t v6 = &selRef_unificationOptions;
    while (1)
    {
      if (v5)
      {
        id v7 = (id)MEMORY[0x192FD1FB0](v4, a1);
      }
      else
      {
        if (v4 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_31;
        }
        id v7 = *(id *)(a1 + 32 + 8 * v4);
      }
      uint64_t v8 = v7;
      if (__OFADD__(v4++, 1))
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        if (!sub_190B778A8()) {
          goto LABEL_2;
        }
        sub_190B2F1DC(MEMORY[0x1E4FBC860]);
        uint64_t v2 = v25;
        goto LABEL_3;
      }
      uint64_t v10 = v29;
      swift_bridgeObjectRetain();
      id v11 = [v8 v6[106]];
      id v12 = v11;
      if ((v10 & 0xC000000000000001) == 0) {
        break;
      }
      id v13 = v11;
      char v14 = sub_190B77708();
      swift_bridgeObjectRelease();

      if ((v14 & 1) == 0) {
        goto LABEL_26;
      }

LABEL_7:
      if (v4 == v3)
      {
        swift_bridgeObjectRelease();
        uint64_t v24 = v30;
        goto LABEL_36;
      }
    }
    if (*(void *)(v10 + 16))
    {
      uint64_t v15 = sub_190B775F8();
      uint64_t v16 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v17 = v15 & ~v16;
      if ((*(void *)(v10 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17))
      {
        id v18 = *(id *)(*(void *)(v10 + 48) + 8 * v17);
        char v19 = sub_190B77608();

        if (v19)
        {

          swift_bridgeObjectRelease();
LABEL_24:
          unint64_t v5 = a1 & 0xC000000000000001;
          uint64_t v3 = v27;
          uint64_t v6 = &selRef_unificationOptions;
          goto LABEL_7;
        }
        uint64_t v20 = ~v16;
        while (1)
        {
          unint64_t v17 = (v17 + 1) & v20;
          if (((*(void *)(v10 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
            break;
          }
          id v21 = *(id *)(*(void *)(v10 + 48) + 8 * v17);
          char v22 = sub_190B77608();

          if (v22)
          {

            swift_bridgeObjectRelease();
            goto LABEL_24;
          }
        }
      }
    }

    swift_bridgeObjectRelease();
    unint64_t v5 = a1 & 0xC000000000000001;
    uint64_t v3 = v27;
    uint64_t v6 = &selRef_unificationOptions;
LABEL_26:
    id v23 = v8;
    MEMORY[0x192FD1A90]();
    if (*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_190B77308();
    }
    sub_190B77368();
    sub_190B772E8();
    sub_190B6884C(&v28, [v23 v6[106]]);

    goto LABEL_7;
  }
LABEL_35:
  swift_bridgeObjectRelease();
  uint64_t v24 = MEMORY[0x1E4FBC860];
LABEL_36:
  swift_bridgeObjectRelease();
  return v24;
}

unint64_t sub_190B2B4DC(unint64_t a1)
{
  unint64_t v77 = MEMORY[0x1E4FBC860];
  if ((MEMORY[0x1E4FBC860] & 0xC000000000000000) != 0) {
    goto LABEL_97;
  }
LABEL_2:
  uint64_t v2 = (void *)MEMORY[0x1E4FBC870];
LABEL_3:
  v76[2] = v2;
  if (!(a1 >> 62))
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v3) {
      goto LABEL_100;
    }
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_190B778A8();
  if (v3)
  {
LABEL_5:
    unint64_t v4 = 0;
    unint64_t v70 = a1 & 0xC000000000000001;
    unint64_t v67 = a1 + 32;
    uint64_t v68 = a1 & 0xFFFFFFFFFFFFFF8;
    unint64_t v5 = &selRef_unificationOptions;
    uint64_t v6 = &selRef_setIncludeGroupChanges_;
    uint64_t v65 = v3;
    unint64_t v66 = a1;
    while (1)
    {
      while (1)
      {
        if (v70)
        {
          id v7 = (id)MEMORY[0x192FD1FB0](v4, a1);
          BOOL v8 = __OFADD__(v4++, 1);
          if (v8) {
            goto LABEL_86;
          }
        }
        else
        {
          if (v4 >= *(void *)(v68 + 16)) {
            goto LABEL_87;
          }
          id v7 = *(id *)(v67 + 8 * v4);
          BOOL v8 = __OFADD__(v4++, 1);
          if (v8) {
            goto LABEL_86;
          }
        }
        id v9 = v7;
        uint64_t v10 = swift_bridgeObjectRetain();
        sub_190B2EB94(v10, v9);
        id v12 = v11;
        swift_bridgeObjectRelease();

        if (v12) {
          break;
        }
LABEL_74:
        id v59 = v9;
        MEMORY[0x192FD1A90]();
        if (*(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_190B77308();
        }
        sub_190B77368();
        sub_190B772E8();
        sub_190B68830(v76, [v59 v5[106]]);

        if (v4 == v3)
        {
LABEL_82:
          swift_bridgeObjectRelease();
          unint64_t v61 = v77;
          goto LABEL_101;
        }
      }
      uint64_t v72 = v9;
      id v13 = [v9 v5[106]];
      unsigned int v14 = [v12 v6[459]];
      if (v14 == [v13 v6[459]])
      {
        id v16 = objc_msgSend(v12, sel_stringValue);
        sub_190B77168();

        uint64_t v17 = sub_190B771E8();
        swift_bridgeObjectRelease();
        id v18 = objc_msgSend(v13, sel_stringValue);
        sub_190B77168();

        uint64_t v6 = &selRef_setIncludeGroupChanges_;
        uint64_t v19 = sub_190B771E8();

        unint64_t v5 = &selRef_unificationOptions;
        swift_bridgeObjectRelease();
        if (v17 < v19)
        {
LABEL_18:
          uint64_t v69 = v12;
          unint64_t v20 = v77;
          id v21 = v72;
          unint64_t v22 = swift_bridgeObjectRetain();
          a1 = sub_190B2F894(v22, v21);
          char v24 = v23;
          swift_bridgeObjectRelease();
          id v74 = v21;

          if (v24)
          {
            if (v20 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v26 = sub_190B778A8();
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v26 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
            }
            goto LABEL_70;
          }
          unint64_t v25 = a1 + 1;
          if (__OFADD__(a1, 1)) {
            goto LABEL_89;
          }
          uint64_t v26 = a1;
          if (!(v20 >> 62))
          {
            if (v25 != *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_22;
            }
            goto LABEL_70;
          }
          swift_bridgeObjectRetain();
          uint64_t v60 = sub_190B778A8();
          swift_bridgeObjectRelease();
          if (v25 == v60)
          {
LABEL_70:
            if (v20 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v57 = sub_190B778A8();
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v57 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
            }
            uint64_t v3 = v65;
            a1 = v66;
            if (v57 < v26) {
              goto LABEL_88;
            }
            sub_190B5DAA8(v26, v57);
            uint64_t v58 = (void *)sub_190B2CA54(v69);

            id v9 = v72;
            goto LABEL_74;
          }
LABEL_22:
          uint64_t v64 = v4;
          a1 = sub_190B23474(0, &qword_1E92A5B00);
          uint64_t v27 = v26 + 5;
          unint64_t v71 = a1;
          while (2)
          {
            unint64_t v28 = v27 - 4;
            unint64_t v75 = v27 - 4;
            if ((v20 & 0xC000000000000001) != 0)
            {
              id v29 = (id)MEMORY[0x192FD1FB0]();
            }
            else
            {
              if ((v28 & 0x8000000000000000) != 0)
              {
                __break(1u);
LABEL_84:
                __break(1u);
LABEL_85:
                __break(1u);
LABEL_86:
                __break(1u);
LABEL_87:
                __break(1u);
LABEL_88:
                __break(1u);
LABEL_89:
                __break(1u);
LABEL_90:
                __break(1u);
LABEL_91:
                __break(1u);
LABEL_92:
                __break(1u);
LABEL_93:
                __break(1u);
LABEL_94:
                __break(1u);
LABEL_95:
                __break(1u);
LABEL_96:
                __break(1u);
LABEL_97:
                if (!sub_190B778A8()) {
                  goto LABEL_2;
                }
                sub_190B2F538(MEMORY[0x1E4FBC860]);
                uint64_t v2 = v62;
                goto LABEL_3;
              }
              if (v28 >= *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_84;
              }
              id v29 = *(id *)(v20 + 8 * v27);
            }
            uint64_t v30 = v29;
            id v31 = objc_msgSend(v29, v5[106], v64);
            id v32 = [v74 v5[106]];
            if (sub_190B77608())
            {

              goto LABEL_38;
            }
            unint64_t v73 = v26;
            id v33 = objc_msgSend(v31, sel_stringValue);
            uint64_t v34 = sub_190B77168();
            uint64_t v36 = v35;

            id v37 = objc_msgSend(v32, sel_stringValue);
            uint64_t v38 = sub_190B77168();
            uint64_t v40 = v39;

            if (v34 != v38 || v36 != v40)
            {
              char v42 = sub_190B77998();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              a1 = v71;
              if (v42)
              {

                unint64_t v5 = &selRef_unificationOptions;
                uint64_t v6 = &selRef_setIncludeGroupChanges_;
                goto LABEL_37;
              }
              unsigned __int8 v43 = objc_msgSend(v31, sel_isLikePhoneNumber_, v32);

              unint64_t v5 = &selRef_unificationOptions;
              uint64_t v6 = &selRef_setIncludeGroupChanges_;
              if (v43)
              {
LABEL_37:
                uint64_t v26 = v73;
LABEL_38:
                uint64_t v44 = v27 - 4;
              }
              else
              {
                uint64_t v44 = v27 - 4;
                if (v75 != v73)
                {
                  if ((v20 & 0xC000000000000001) != 0)
                  {
                    uint64_t v48 = MEMORY[0x192FD1FB0](v73, v20);
                    id v49 = (id)MEMORY[0x192FD1FB0](v75, v20);
                  }
                  else
                  {
                    if ((v73 & 0x8000000000000000) != 0) {
                      goto LABEL_91;
                    }
                    unint64_t v46 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
                    if (v73 >= v46) {
                      goto LABEL_92;
                    }
                    id v47 = *(id *)(v20 + 8 * v73 + 32);
                    if ((v75 & 0x8000000000000000) != 0) {
                      goto LABEL_93;
                    }
                    if (v75 >= v46) {
                      goto LABEL_94;
                    }
                    uint64_t v48 = (uint64_t)v47;
                    id v49 = *(id *)(v20 + 8 * v27);
                  }
                  id v50 = v49;
                  if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
                    || (v20 & 0x8000000000000000) != 0
                    || (v20 & 0x4000000000000000) != 0)
                  {
                    sub_190B58CD0(v20);
                    unint64_t v20 = v51;
                    unint64_t v77 = v51;
                  }
                  id v52 = *(void **)((v20 & 0xFFFFFFFFFFFFFF8) + 8 * v73 + 0x20);
                  *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 8 * v73 + 0x20) = v50;

                  sub_190B772E8();
                  unint64_t v53 = v77;
                  if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
                    || (v53 & 0x8000000000000000) != 0
                    || (v53 & 0x4000000000000000) != 0)
                  {
                    sub_190B58CD0(v53);
                    unint64_t v53 = v54;
                    unint64_t v77 = v54;
                  }
                  if ((v75 & 0x8000000000000000) != 0) {
                    goto LABEL_95;
                  }
                  uint64_t v55 = v53 & 0xFFFFFFFFFFFFFF8;
                  if (v75 >= *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                    goto LABEL_96;
                  }
                  id v56 = *(void **)(v55 + 8 * v27);
                  *(void *)(v55 + 8 * v27) = v48;

                  sub_190B772E8();
                }
                uint64_t v26 = v73 + 1;
                if (__OFADD__(v73, 1)) {
                  goto LABEL_90;
                }
              }
              if (__OFADD__(v44, 1)) {
                goto LABEL_85;
              }
              unint64_t v20 = v77;
              if (v77 >> 62)
              {
                swift_bridgeObjectRetain();
                uint64_t v45 = sub_190B778A8();
                swift_bridgeObjectRelease();
              }
              else
              {
                uint64_t v45 = *(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10);
              }
              ++v27;
              if (v44 + 1 == v45)
              {
                unint64_t v4 = v64;
                goto LABEL_70;
              }
              continue;
            }
            break;
          }

          swift_bridgeObjectRelease_n();
          unint64_t v5 = &selRef_unificationOptions;
          uint64_t v6 = &selRef_setIncludeGroupChanges_;
          uint64_t v26 = v73;
          a1 = v71;
          goto LABEL_38;
        }
      }
      else
      {
        unsigned int v15 = [v12 v6[459]];

        if (!v15) {
          goto LABEL_18;
        }
      }

      if (v4 == v3) {
        goto LABEL_82;
      }
    }
  }
LABEL_100:
  swift_bridgeObjectRelease();
  unint64_t v61 = MEMORY[0x1E4FBC860];
LABEL_101:
  swift_bridgeObjectRelease();
  return v61;
}

id DuplicateContacts.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id DuplicateContacts.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DuplicateContacts();
  return objc_msgSendSuper2(&v2, sel_init);
}

id DuplicateContacts.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DuplicateContacts();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_190B2BDC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3DF8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2) {
    goto LABEL_33;
  }
  swift_bridgeObjectRetain();
  sub_190B26060(385, a1, a2);
  uint64_t v11 = sub_190B771E8();
  swift_bridgeObjectRelease();
  sub_190B26060(385, a3, a4);
  uint64_t v12 = sub_190B771E8();
  swift_bridgeObjectRelease();
  if (v11 != v12)
  {
    if (v12 >= v11)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a3;
    }
    return a1;
  }
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  sub_190B76E98();
  uint64_t v13 = sub_190B76EA8();
  id v37 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
  v37(v10, 0, 1, v13);
  sub_190B30760();
  uint64_t v14 = sub_190B77688();
  uint64_t v16 = v15;
  sub_190B23144((uint64_t)v10, &qword_1E92A3DF8);
  if (v14 == a1 && v16 == a2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  char v18 = sub_190B77998();
  swift_bridgeObjectRelease();
  if (v18)
  {
LABEL_12:
    uint64_t v36 = 0;
    goto LABEL_13;
  }
  uint64_t v36 = 3;
LABEL_13:
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  sub_190B76E98();
  v37(v10, 0, 1, v13);
  uint64_t v19 = sub_190B77688();
  uint64_t v21 = v20;
  sub_190B23144((uint64_t)v10, &qword_1E92A3DF8);
  if (v19 == a1 && v21 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v22 = sub_190B77998();
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0)
    {
      uint64_t v34 = 1;
      goto LABEL_19;
    }
  }
  uint64_t v34 = 0;
LABEL_19:
  uint64_t v38 = a3;
  uint64_t v39 = a4;
  sub_190B76E98();
  v37(v10, 0, 1, v13);
  uint64_t v23 = sub_190B77688();
  uint64_t v25 = v24;
  sub_190B23144((uint64_t)v10, &qword_1E92A3DF8);
  if (v23 == a3 && v25 == a4)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v26 = sub_190B77998();
    swift_bridgeObjectRelease();
    if ((v26 & 1) == 0)
    {
      uint64_t v35 = 3;
      goto LABEL_25;
    }
  }
  uint64_t v35 = 0;
LABEL_25:
  unint64_t v27 = v34 + v36;
  uint64_t v38 = a3;
  uint64_t v39 = a4;
  sub_190B76E98();
  v37(v10, 0, 1, v13);
  uint64_t v28 = sub_190B77688();
  uint64_t v30 = v29;
  sub_190B23144((uint64_t)v10, &qword_1E92A3DF8);
  if (v28 == a3 && v30 == a4)
  {
    swift_bridgeObjectRelease();
LABEL_29:
    uint64_t v32 = 0;
    goto LABEL_31;
  }
  char v31 = sub_190B77998();
  swift_bridgeObjectRelease();
  if (v31) {
    goto LABEL_29;
  }
  uint64_t v32 = 1;
LABEL_31:
  if (v32 + v35 >= v27)
  {
    swift_bridgeObjectRelease();
LABEL_33:
    swift_bridgeObjectRetain();
    return a3;
  }
  return a1;
}

uint64_t sub_190B2C208()
{
  uint64_t v0 = sub_190B76E88();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190B76E78();
  sub_190B76E48();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v4 = sub_190B76C18();
  if (!v5) {
    return sub_190B76C28();
  }
  uint64_t v6 = v4;
  unint64_t v7 = v5;
  swift_bridgeObjectRelease();
  uint64_t v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0) {
    uint64_t v8 = v6 & 0xFFFFFFFFFFFFLL;
  }
  if (!v8) {
    return sub_190B76C28();
  }
  uint64_t v9 = sub_190B76C58();
  if (!v10) {
    return sub_190B76C68();
  }
  uint64_t v11 = v9;
  unint64_t v12 = v10;
  swift_bridgeObjectRelease();
  uint64_t v13 = HIBYTE(v12) & 0xF;
  if ((v12 & 0x2000000000000000) == 0) {
    uint64_t v13 = v11 & 0xFFFFFFFFFFFFLL;
  }
  if (!v13) {
    return sub_190B76C68();
  }
  uint64_t v14 = sub_190B76C38();
  if (!v15) {
    return sub_190B76C48();
  }
  uint64_t v16 = v14;
  unint64_t v17 = v15;
  swift_bridgeObjectRelease();
  uint64_t v18 = HIBYTE(v17) & 0xF;
  if ((v17 & 0x2000000000000000) == 0) {
    uint64_t v18 = v16 & 0xFFFFFFFFFFFFLL;
  }
  if (!v18) {
    return sub_190B76C48();
  }
  uint64_t v19 = sub_190B76C98();
  if (!v20) {
    return sub_190B76CA8();
  }
  uint64_t v21 = v19;
  unint64_t v22 = v20;
  swift_bridgeObjectRelease();
  uint64_t v23 = HIBYTE(v22) & 0xF;
  if ((v22 & 0x2000000000000000) == 0) {
    uint64_t v23 = v21 & 0xFFFFFFFFFFFFLL;
  }
  if (v23) {
    return swift_bridgeObjectRelease();
  }
  else {
    return sub_190B76CA8();
  }
}

uint64_t sub_190B2C3F8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x1E4FBC860];
    }
    uint64_t v8 = v5;
    if (v5 <= 0)
    {
      uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        unint64_t v12 = a2 + 8 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8) {
          goto LABEL_19;
        }
        sub_190B23474(0, (unint64_t *)&qword_1E92A3E20);
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3DD0);
      uint64_t v9 = (void *)swift_allocObject();
      int64_t v10 = _swift_stdlib_malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 25;
      }
      v9[2] = v5;
      v9[3] = (2 * (v11 >> 3)) | 1;
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_190B778F8();
  __break(1u);
  return result;
}

void *sub_190B2C58C(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  while (1)
  {
    if (v2 <= 0)
    {
      uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3DD0);
      uint64_t v3 = (void *)swift_allocObject();
      int64_t v4 = _swift_stdlib_malloc_size(v3);
      uint64_t v5 = v4 - 32;
      if (v4 < 32) {
        uint64_t v5 = v4 - 25;
      }
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_190B5CF6C((unint64_t)(v3 + 4), v2, v1);
    unint64_t v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_190B778A8();
    swift_bridgeObjectRelease();
    if (!v2) {
      return (void *)MEMORY[0x1E4FBC860];
    }
  }
  return v3;
}

uint64_t sub_190B2C684(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x1E4FBC860];
    }
    uint64_t v8 = 4 * v5;
    if (v5 <= 0)
    {
      uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        unint64_t v12 = a2 + 32 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8) {
          goto LABEL_19;
        }
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92A5DE0);
      uint64_t v9 = (void *)swift_allocObject();
      int64_t v10 = _swift_stdlib_malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 1;
      }
      v9[2] = v5;
      v9[3] = 2 * (v11 >> 5);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_190B778F8();
  __break(1u);
  return result;
}

uint64_t sub_190B2C7F8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x1E4FBC860];
    }
    uint64_t v8 = 2 * v5;
    if (v5 <= 0)
    {
      uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        unint64_t v12 = a2 + 16 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8) {
          goto LABEL_19;
        }
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A61A0);
      uint64_t v9 = (void *)swift_allocObject();
      int64_t v10 = _swift_stdlib_malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 17;
      }
      v9[2] = v5;
      v9[3] = 2 * (v11 >> 4);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_190B778F8();
  __break(1u);
  return result;
}

void *sub_190B2C96C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92A3C30);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_190B5C62C((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_190B23408();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

uint64_t sub_190B2CA54(void *a1)
{
  uint64_t v3 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v4 = a1;
    char v5 = sub_190B77708();

    if (v5)
    {
      uint64_t v6 = sub_190B2CC2C();
      swift_bridgeObjectRelease();
      return v6;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_190B775F8();
  uint64_t v8 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
    goto LABEL_12;
  }
  sub_190B23474(0, &qword_1E92A5B08);
  id v10 = *(id *)(*(void *)(v3 + 48) + 8 * v9);
  char v11 = sub_190B77608();

  if ((v11 & 1) == 0)
  {
    uint64_t v12 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v12;
      if (((*(void *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_12;
      }
      id v13 = *(id *)(*(void *)(v3 + 48) + 8 * v9);
      char v14 = sub_190B77608();
    }
    while ((v14 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v16 = *v1;
  uint64_t v18 = *v1;
  *uint64_t v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_190B69850();
    uint64_t v16 = v18;
  }
  uint64_t v6 = *(void *)(*(void *)(v16 + 48) + 8 * v9);
  sub_190B2CDC8(v9);
  *uint64_t v1 = v18;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_190B2CC2C()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_190B776D8();
  uint64_t v3 = swift_unknownObjectRetain();
  uint64_t v4 = sub_190B68F04(v3, v2);
  uint64_t v15 = v4;
  swift_retain();
  uint64_t v5 = sub_190B775F8();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if ((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    sub_190B23474(0, &qword_1E92A5B08);
    id v8 = *(id *)(*(void *)(v4 + 48) + 8 * v7);
    char v9 = sub_190B77608();

    if (v9)
    {
LABEL_6:
      swift_release();
      uint64_t v13 = *(void *)(*(void *)(v4 + 48) + 8 * v7);
      sub_190B2CDC8(v7);
      if (sub_190B77608())
      {
        *uint64_t v1 = v15;
        return v13;
      }
      __break(1u);
    }
    else
    {
      uint64_t v10 = ~v6;
      while (1)
      {
        unint64_t v7 = (v7 + 1) & v10;
        if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
          break;
        }
        id v11 = *(id *)(*(void *)(v4 + 48) + 8 * v7);
        char v12 = sub_190B77608();

        if (v12) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_190B2CDC8(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_190B776A8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        id v10 = *(id *)(*(void *)(v3 + 48) + 8 * v6);
        uint64_t v11 = sub_190B775F8();

        unint64_t v12 = v11 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= (uint64_t)v12)
          {
LABEL_16:
            uint64_t v15 = *(void *)(v3 + 48);
            uint64_t v16 = (void *)(v15 + 8 * v2);
            unint64_t v17 = (void *)(v15 + 8 * v6);
            if (v2 != v6 || (int64_t v2 = v6, v16 >= v17 + 1))
            {
              *uint64_t v16 = *v17;
              int64_t v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v18 = *(void *)(v3 + 16);
  BOOL v19 = __OFSUB__(v18, 1);
  uint64_t v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t (*sub_190B2CF6C(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_190B2D0F0(v6, a2, a3);
  return sub_190B2CFD4;
}

uint64_t (*sub_190B2CFD8(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_190B2D170(v6, a2, a3);
  return sub_190B2CFD4;
}

uint64_t (*sub_190B2D040(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_190B2D1F8(v6, a2, a3);
  return sub_190B2CFD4;
}

void sub_190B2D0A8(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t (*sub_190B2D0F0(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x192FD1FB0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_190B30930;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_190B2D170(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x192FD1FB0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_unknownObjectRetain();
LABEL_5:
    *uint64_t v3 = v4;
    return sub_190B2D1F0;
  }
  __break(1u);
  return result;
}

uint64_t sub_190B2D1F0()
{
  return swift_unknownObjectRelease();
}

void (*sub_190B2D1F8(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x192FD1FB0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_190B2D278;
  }
  __break(1u);
  return result;
}

void sub_190B2D278(id *a1)
{
}

uint64_t sub_190B2D280(unint64_t a1, unint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v78 = a1;
  if (a1 >> 62) {
    goto LABEL_107;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_3:
  unint64_t v5 = MEMORY[0x1E4FBC860];
  unint64_t v6 = &selRef_unificationOptions;
  unint64_t v65 = a2;
  if (!v4)
  {
LABEL_11:
    uint64_t v12 = sub_190B6A188(v5);
    swift_bridgeObjectRelease();
    unint64_t v77 = v12;
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_190B778A8();
      if (v13) {
        goto LABEL_13;
      }
    }
    else
    {
      uint64_t v13 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v13)
      {
LABEL_13:
        unint64_t v14 = 0;
        uint64_t v15 = 0;
        uint64_t v67 = a2 & 0xFFFFFFFFFFFFFF8;
        unint64_t v68 = a2 & 0xC000000000000001;
        unint64_t v66 = a2 + 32;
        uint64_t v64 = v13;
        while (1)
        {
          if (v68)
          {
            id v16 = (id)MEMORY[0x192FD1FB0](v14, a2);
            BOOL v17 = __OFADD__(v14++, 1);
            if (v17) {
              goto LABEL_96;
            }
          }
          else
          {
            if (v14 >= *(void *)(v67 + 16)) {
              goto LABEL_97;
            }
            id v16 = *(id *)(v66 + 8 * v14);
            BOOL v17 = __OFADD__(v14++, 1);
            if (v17) {
              goto LABEL_96;
            }
          }
          id v18 = v16;
          uint64_t v19 = swift_bridgeObjectRetain();
          sub_190B2EB94(v19, v18);
          uint64_t v21 = v20;
          uint64_t v73 = v15;
          swift_bridgeObjectRelease();

          if (!v21) {
            goto LABEL_85;
          }
          id v22 = v21;
          uint64_t v3 = (uint64_t)[v18 v6[106]];
          unsigned int v23 = objc_msgSend(v22, sel_isFullyQualified);
          id v70 = v18;
          if (v23 == objc_msgSend((id)v3, sel_isFullyQualified))
          {
            id v25 = objc_msgSend(v22, sel_stringValue);
            sub_190B77168();

            uint64_t v26 = sub_190B771E8();
            swift_bridgeObjectRelease();
            id v27 = objc_msgSend((id)v3, sel_stringValue);
            sub_190B77168();

            uint64_t v28 = sub_190B771E8();
            swift_bridgeObjectRelease();
            if (v26 < v28)
            {
LABEL_27:
              unint64_t v29 = v78;
              id v30 = v18;
              unint64_t v31 = swift_bridgeObjectRetain();
              a2 = sub_190B2F894(v31, v30);
              uint64_t v3 = v32;
              swift_bridgeObjectRelease();
              id v74 = v30;

              if (v3)
              {
                if (v29 >> 62)
                {
                  swift_bridgeObjectRetain();
                  uint64_t v34 = sub_190B778A8();
                  swift_bridgeObjectRelease();
                }
                else
                {
                  uint64_t v34 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
                }
                goto LABEL_81;
              }
              unint64_t v33 = a2 + 1;
              if (__OFADD__(a2, 1)) {
                goto LABEL_99;
              }
              uint64_t v34 = a2;
              if (!(v29 >> 62))
              {
                uint64_t v3 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
                if (v33 != v3) {
                  goto LABEL_31;
                }
                goto LABEL_81;
              }
              swift_bridgeObjectRetain();
              uint64_t v3 = sub_190B778A8();
              swift_bridgeObjectRelease();
              if (v33 == v3)
              {
LABEL_81:
                if (v29 >> 62)
                {
                  swift_bridgeObjectRetain();
                  uint64_t v3 = sub_190B778A8();
                  swift_bridgeObjectRelease();
                }
                else
                {
                  uint64_t v3 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
                }
                uint64_t v13 = v64;
                a2 = v65;
                if (v3 < v34) {
                  goto LABEL_98;
                }
                sub_190B5DAA8(v34, v3);
                uint64_t v62 = (void *)sub_190B2CA54(v22);

LABEL_85:
                uint64_t v3 = (uint64_t)v18;
                MEMORY[0x192FD1A90]();
                if (*(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                  sub_190B77308();
                }
                sub_190B77368();
                sub_190B772E8();
                sub_190B68830(v76, [(id)v3 v6[106]]);

                goto LABEL_15;
              }
LABEL_31:
              uint64_t v63 = v14;
              a2 = sub_190B23474(0, &qword_1E92A5B00);
              uint64_t v35 = v34 + 5;
              id v72 = v22;
              unint64_t v69 = a2;
              while (2)
              {
                unint64_t v36 = v35 - 4;
                unint64_t v75 = v35 - 4;
                if ((v29 & 0xC000000000000001) != 0)
                {
                  id v37 = (id)MEMORY[0x192FD1FB0]();
                }
                else
                {
                  if ((v36 & 0x8000000000000000) != 0)
                  {
                    __break(1u);
LABEL_94:
                    __break(1u);
LABEL_95:
                    __break(1u);
LABEL_96:
                    __break(1u);
LABEL_97:
                    __break(1u);
LABEL_98:
                    __break(1u);
LABEL_99:
                    __break(1u);
LABEL_100:
                    __break(1u);
LABEL_101:
                    __break(1u);
LABEL_102:
                    __break(1u);
LABEL_103:
                    __break(1u);
LABEL_104:
                    __break(1u);
LABEL_105:
                    __break(1u);
LABEL_106:
                    __break(1u);
LABEL_107:
                    swift_bridgeObjectRetain();
                    uint64_t v4 = sub_190B778A8();
                    goto LABEL_3;
                  }
                  if (v36 >= *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                    goto LABEL_94;
                  }
                  id v37 = *(id *)(v29 + 8 * v35);
                }
                uint64_t v38 = v37;
                uint64_t v3 = (uint64_t)objc_msgSend(v37, v6[106], v63);
                id v39 = [v74 v6[106]];
                if (sub_190B77608())
                {

                  goto LABEL_46;
                }
                unint64_t v71 = v34;
                id v40 = objc_msgSend((id)v3, sel_stringValue);
                uint64_t v41 = sub_190B77168();
                uint64_t v43 = v42;

                id v44 = objc_msgSend(v39, sel_stringValue);
                uint64_t v45 = sub_190B77168();
                uint64_t v47 = v46;

                if (v41 == v45 && v43 == v47)
                {

                  swift_bridgeObjectRelease_n();
                  goto LABEL_45;
                }
                char v49 = sub_190B77998();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v49)
                {

LABEL_45:
                  id v39 = v38;
                  unint64_t v6 = &selRef_unificationOptions;
                  id v18 = v70;
                  uint64_t v34 = v71;
                  a2 = v69;
LABEL_46:

                  id v22 = v72;
LABEL_47:
                  uint64_t v50 = v35 - 4;
                }
                else
                {
                  unsigned __int8 v51 = objc_msgSend((id)v3, sel_isLikePhoneNumber_, v39);

                  unint64_t v6 = &selRef_unificationOptions;
                  id v18 = v70;
                  if (v51)
                  {
                    id v22 = v72;
                    uint64_t v34 = v71;
                    a2 = v69;
                    goto LABEL_47;
                  }
                  uint64_t v50 = v35 - 4;
                  id v22 = v72;
                  a2 = v69;
                  if (v75 != v71)
                  {
                    if ((v29 & 0xC000000000000001) != 0)
                    {
                      uint64_t v3 = MEMORY[0x192FD1FB0](v71, v29);
                      id v54 = (id)MEMORY[0x192FD1FB0](v75, v29);
                    }
                    else
                    {
                      if ((v71 & 0x8000000000000000) != 0) {
                        goto LABEL_101;
                      }
                      unint64_t v52 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
                      if (v71 >= v52) {
                        goto LABEL_102;
                      }
                      id v53 = *(id *)(v29 + 8 * v71 + 32);
                      if ((v75 & 0x8000000000000000) != 0) {
                        goto LABEL_103;
                      }
                      if (v75 >= v52) {
                        goto LABEL_104;
                      }
                      uint64_t v3 = (uint64_t)v53;
                      id v54 = *(id *)(v29 + 8 * v35);
                    }
                    id v55 = v54;
                    if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
                      || (v29 & 0x8000000000000000) != 0
                      || (v29 & 0x4000000000000000) != 0)
                    {
                      sub_190B58CD0(v29);
                      unint64_t v29 = v56;
                      unint64_t v78 = v56;
                    }
                    uint64_t v57 = *(void **)((v29 & 0xFFFFFFFFFFFFFF8) + 8 * v71 + 0x20);
                    *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 8 * v71 + 0x20) = v55;

                    sub_190B772E8();
                    unint64_t v58 = v78;
                    if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
                      || (v58 & 0x8000000000000000) != 0
                      || (v58 & 0x4000000000000000) != 0)
                    {
                      sub_190B58CD0(v58);
                      unint64_t v58 = v59;
                      unint64_t v78 = v59;
                    }
                    if ((v75 & 0x8000000000000000) != 0) {
                      goto LABEL_105;
                    }
                    uint64_t v60 = v58 & 0xFFFFFFFFFFFFFF8;
                    if (v75 >= *(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                      goto LABEL_106;
                    }
                    unint64_t v61 = *(void **)(v60 + 8 * v35);
                    *(void *)(v60 + 8 * v35) = v3;

                    sub_190B772E8();
                  }
                  uint64_t v34 = v71 + 1;
                  if (__OFADD__(v71, 1)) {
                    goto LABEL_100;
                  }
                }
                if (__OFADD__(v50, 1)) {
                  goto LABEL_95;
                }
                unint64_t v29 = v78;
                if (v78 >> 62)
                {
                  swift_bridgeObjectRetain();
                  uint64_t v3 = sub_190B778A8();
                  swift_bridgeObjectRelease();
                }
                else
                {
                  uint64_t v3 = *(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10);
                }
                ++v35;
                if (v50 + 1 == v3)
                {
                  unint64_t v14 = v63;
                  goto LABEL_81;
                }
                continue;
              }
            }
          }
          else
          {
            unsigned int v24 = objc_msgSend(v22, sel_isFullyQualified);

            if (!v24) {
              goto LABEL_27;
            }
          }

LABEL_15:
          uint64_t v15 = v73;
          if (v14 == v13)
          {
            swift_bridgeObjectRelease();
            uint64_t v3 = v78;
LABEL_110:
            swift_bridgeObjectRelease();
            return v3;
          }
        }
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_110;
  }
  unint64_t v77 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_190B77838();
  if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = 0;
    do
    {
      if ((v3 & 0xC000000000000001) != 0) {
        id v9 = (id)MEMORY[0x192FD1FB0](v8, v3);
      }
      else {
        id v9 = *(id *)(v3 + 8 * v8 + 32);
      }
      id v10 = v9;
      ++v8;
      id v11 = objc_msgSend(v9, sel_value, v63);

      sub_190B77808();
      sub_190B77848();
      sub_190B77858();
      sub_190B77818();
    }
    while (v4 != v8);
    unint64_t v5 = v77;
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_190B2DB34(unint64_t a1, unint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5, void (*a6)(id *, id))
{
  unint64_t v9 = a1;
  unint64_t v42 = a1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_190B778A8();
  }
  else
  {
    uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v11 = MEMORY[0x1E4FBC860];
  id v39 = a4;
  if (v10)
  {
    uint64_t v41 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_190B77838();
    if (v10 < 0)
    {
      __break(1u);
LABEL_40:
      __break(1u);
      return result;
    }
    uint64_t v13 = 0;
    do
    {
      if ((v9 & 0xC000000000000001) != 0) {
        id v14 = (id)MEMORY[0x192FD1FB0](v13, v9);
      }
      else {
        id v14 = *(id *)(v9 + 8 * v13 + 32);
      }
      uint64_t v15 = v14;
      ++v13;
      id v16 = objc_msgSend(v14, sel_value);

      sub_190B77808();
      sub_190B77848();
      sub_190B77858();
      sub_190B77818();
    }
    while (v10 != v13);
    uint64_t v11 = v41;
  }
  uint64_t v17 = a3(v11);
  swift_bridgeObjectRelease();
  uint64_t v41 = v17;
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_190B778A8();
    uint64_t v18 = result;
    if (result)
    {
LABEL_13:
      if (v18 >= 1)
      {
        unint64_t v19 = a2 & 0xC000000000000001;
        sub_190B23474(0, v39);
        uint64_t v20 = 0;
        uint64_t v37 = v18;
        while (1)
        {
          if (v19) {
            id v21 = (id)MEMORY[0x192FD1FB0](v20, a2);
          }
          else {
            id v21 = *(id *)(a2 + 32 + 8 * v20);
          }
          id v22 = v21;
          uint64_t v23 = v41;
          swift_bridgeObjectRetain();
          id v24 = objc_msgSend(v22, sel_value);
          id v25 = v24;
          if ((v23 & 0xC000000000000001) != 0)
          {
            id v26 = v24;
            char v27 = sub_190B77708();
            swift_bridgeObjectRelease();

            if ((v27 & 1) == 0) {
              goto LABEL_31;
            }
          }
          else
          {
            if (!*(void *)(v23 + 16)) {
              goto LABEL_30;
            }
            uint64_t v28 = sub_190B775F8();
            uint64_t v29 = -1 << *(unsigned char *)(v23 + 32);
            unint64_t v30 = v28 & ~v29;
            if (((*(void *)(v23 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30) & 1) == 0) {
              goto LABEL_30;
            }
            id v31 = *(id *)(*(void *)(v23 + 48) + 8 * v30);
            char v32 = sub_190B77608();

            if ((v32 & 1) == 0)
            {
              uint64_t v33 = ~v29;
              while (1)
              {
                unint64_t v30 = (v30 + 1) & v33;
                if (((*(void *)(v23 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30) & 1) == 0) {
                  break;
                }
                id v34 = *(id *)(*(void *)(v23 + 48) + 8 * v30);
                char v35 = sub_190B77608();

                if (v35) {
                  goto LABEL_29;
                }
              }
LABEL_30:

              swift_bridgeObjectRelease();
              unint64_t v19 = a2 & 0xC000000000000001;
              uint64_t v18 = v37;
LABEL_31:
              id v36 = v22;
              MEMORY[0x192FD1A90]();
              if (*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                sub_190B77308();
              }
              sub_190B77368();
              sub_190B772E8();
              a6(&v40, objc_msgSend(v36, sel_value));

              goto LABEL_16;
            }
LABEL_29:

            swift_bridgeObjectRelease();
            unint64_t v19 = a2 & 0xC000000000000001;
            uint64_t v18 = v37;
          }
LABEL_16:
          if (++v20 == v18)
          {
            swift_bridgeObjectRelease();
            unint64_t v9 = v42;
            goto LABEL_38;
          }
        }
      }
      goto LABEL_40;
    }
  }
  else
  {
    uint64_t v18 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v18) {
      goto LABEL_13;
    }
  }
  swift_bridgeObjectRelease();
LABEL_38:
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_190B2DF54(uint64_t a1, void *a2, uint64_t a3, unint64_t a4)
{
  sub_190B30878((uint64_t)a2, (uint64_t)v23, &qword_1E92A5B20);
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (v8)
  {
    long long v21 = v23[1];
    long long v22 = v23[0];
    long long v19 = v23[3];
    long long v20 = v23[2];
    long long v17 = v23[5];
    long long v18 = v23[4];
    long long v16 = v23[6];
    uint64_t v24 = MEMORY[0x1E4FBC860];
    sub_190B21F70(0, v8, 0);
    uint64_t v9 = v24;
    uint64_t v10 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v11 = *v10;
      swift_bridgeObjectRetain();
      sub_190B3081C(a2, sub_190B2E834);
      sub_190B2E970(a3, a4);
      uint64_t v24 = v9;
      unint64_t v13 = *(void *)(v9 + 16);
      unint64_t v12 = *(void *)(v9 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_190B21F70(v12 > 1, v13 + 1, 1);
        uint64_t v9 = v24;
      }
      *(void *)(v9 + 16) = v13 + 1;
      uint64_t v14 = v9 + 136 * v13;
      *(void *)(v14 + 32) = v11;
      *(_OWORD *)(v14 + 40) = v22;
      *(_OWORD *)(v14 + 56) = v21;
      *(_OWORD *)(v14 + 72) = v20;
      *(_OWORD *)(v14 + 8_Block_object_dispose(&STACK[0x228], 8) = v19;
      *(_OWORD *)(v14 + 104) = v18;
      *(_OWORD *)(v14 + 120) = v17;
      *(_OWORD *)(v14 + 136) = v16;
      *(void *)(v14 + 152) = a3;
      *(void *)(v14 + 160) = a4;
      ++v10;
      --v8;
    }
    while (v8);
  }
  return v9;
}

uint64_t sub_190B2E0F0(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x1E4FBC860];
    if (!v2) {
      break;
    }
    uint64_t v8 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_190B77838();
    if (v2 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v5 = (id)MEMORY[0x192FD1FB0](v4, a1);
      }
      else {
        id v5 = *(id *)(a1 + 8 * v4 + 32);
      }
      unint64_t v6 = v5;
      ++v4;
      id v7 = sub_190B4AEF0(v5);

      sub_190B77808();
      sub_190B77848();
      sub_190B77858();
      sub_190B77818();
      if (v2 == v4) {
        return v8;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_190B778A8();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_190B2E24C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_190B2E26C()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_190B2E27C(void *a1)
{
  return sub_190B254A0(a1);
}

uint64_t sub_190B2E284(uint64_t a1)
{
  return sub_190B25880(a1, *(void (**)(uint64_t))(v1 + 24));
}

BOOL sub_190B2E290(uint64_t a1, uint64_t *a2)
{
  return sub_190B259C0(a1, a2);
}

uint64_t sub_190B2E2B0(uint64_t a1, uint64_t *a2)
{
  return sub_190B25BA0(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_190B2E2CC()
{
  sub_190B25C50();
  return v0 & 1;
}

uint64_t sub_190B2E300(void *a1)
{
  id v1 = objc_msgSend(a1, sel_downtimeWhitelist);
  if (!v1)
  {
    sub_190B77168();
    goto LABEL_9;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_190B77168();
  uint64_t v5 = v4;

  uint64_t v6 = sub_190B77168();
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    char v10 = 1;
    return v10 & 1;
  }
  if (v3 == v6 && v5 == v7)
  {
    swift_bridgeObjectRelease_n();
    char v10 = 0;
  }
  else
  {
    char v9 = sub_190B77998();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v10 = v9 ^ 1;
  }
  return v10 & 1;
}

uint64_t sub_190B2E3E0(unint64_t a1, unint64_t a2)
{
  uint64_t v2 = a1;
  uint64_t v32 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_190B778A8();
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      uint64_t v4 = 0;
      uint64_t v25 = v2 + 32;
      unint64_t v27 = v2 & 0xC000000000000001;
      uint64_t v26 = v2;
      while (1)
      {
        if (v27) {
          id v5 = (id)MEMORY[0x192FD1FB0](v4, v2);
        }
        else {
          id v5 = *(id *)(v25 + 8 * v4);
        }
        id v30 = v5;
        BOOL v6 = __OFADD__(v4, 1);
        uint64_t v7 = v4 + 1;
        if (v6)
        {
LABEL_35:
          __break(1u);
          goto LABEL_36;
        }
        uint64_t v28 = v7;
        if (a2 >> 62)
        {
          id v10 = v5;
          swift_bridgeObjectRetain();
          uint64_t v8 = sub_190B778A8();
          if (v8)
          {
LABEL_14:
            uint64_t v2 = 4;
            while (1)
            {
              if ((a2 & 0xC000000000000001) != 0) {
                id v11 = (id)MEMORY[0x192FD1FB0](v2 - 4, a2);
              }
              else {
                id v11 = *(id *)(a2 + 8 * v2);
              }
              unint64_t v12 = v11;
              uint64_t v13 = v2 - 3;
              if (__OFADD__(v2 - 4, 1))
              {
                __break(1u);
                goto LABEL_35;
              }
              id v14 = objc_msgSend(v11, sel_identifier);
              uint64_t v15 = sub_190B77168();
              uint64_t v17 = v16;

              id v18 = objc_msgSend(v30, sel_identifier);
              uint64_t v19 = sub_190B77168();
              uint64_t v21 = v20;

              if (v15 == v19 && v17 == v21)
              {

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_28;
              }
              char v23 = sub_190B77998();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v23) {
                break;
              }

              ++v2;
              if (v13 == v8) {
                goto LABEL_4;
              }
            }

LABEL_28:
            swift_bridgeObjectRelease();
            objc_msgSend(v12, sel_mutableCopy);

            sub_190B77698();
            swift_unknownObjectRelease();
            sub_190B23474(0, (unint64_t *)&qword_1E92A3E20);
            if (swift_dynamicCast())
            {
              objc_msgSend(v31, sel_setSnapshot_, v30);

              MEMORY[0x192FD1A90]();
              if (*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                sub_190B77308();
              }
              sub_190B77368();
              sub_190B772E8();
            }
            else
            {
            }
            goto LABEL_5;
          }
        }
        else
        {
          uint64_t v8 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
          id v9 = v5;
          swift_bridgeObjectRetain();
          if (v8) {
            goto LABEL_14;
          }
        }
LABEL_4:

        swift_bridgeObjectRelease();
LABEL_5:
        uint64_t v2 = v26;
        uint64_t v4 = v28;
        if (v28 == v3)
        {
          swift_bridgeObjectRelease();
          return v32;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_190B2E774(uint64_t a1)
{
  uint64_t v16 = *(void *)(a1 + 8);
  unint64_t v2 = *(void *)(a1 + 32);
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v15 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 40);
  unint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);
  unint64_t v6 = *(void *)(a1 + 64);
  long long v12 = *(_OWORD *)(a1 + 88);
  long long v13 = *(_OWORD *)(a1 + 72);
  uint64_t v7 = *(void *)(a1 + 104);
  unint64_t v8 = *(void *)(a1 + 112);
  uint64_t v10 = *(void *)(a1 + 120);
  unint64_t v9 = *(void *)(a1 + 128);
  swift_bridgeObjectRetain();
  sub_190B2E834(v16, v15, v14, v2, v3, v4, v5, v6, v13, *((uint64_t *)&v13 + 1), v12, *((unint64_t *)&v12 + 1), v7, v8);
  sub_190B2E970(v10, v9);
  return a1;
}

void sub_190B2E834(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, unint64_t a14)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    sub_190B2E904(a3, a4);
    sub_190B2E904(a5, a6);
    sub_190B2E904(a7, a8);
    swift_bridgeObjectRetain();
    sub_190B2E904(a11, a12);
    sub_190B2E904(a13, a14);
  }
}

uint64_t sub_190B2E904(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_190B2E918(a1, a2);
  }
  return a1;
}

uint64_t sub_190B2E918(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_190B2E970(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 11) {
    return sub_190B2E904(a1, a2);
  }
  return a1;
}

uint64_t sub_190B2E984(uint64_t a1)
{
  uint64_t v16 = *(void *)(a1 + 8);
  unint64_t v2 = *(void *)(a1 + 32);
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v15 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 40);
  unint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);
  unint64_t v6 = *(void *)(a1 + 64);
  long long v12 = *(_OWORD *)(a1 + 88);
  long long v13 = *(_OWORD *)(a1 + 72);
  uint64_t v7 = *(void *)(a1 + 104);
  unint64_t v8 = *(void *)(a1 + 112);
  uint64_t v10 = *(void *)(a1 + 120);
  unint64_t v9 = *(void *)(a1 + 128);
  swift_bridgeObjectRelease();
  sub_190B2EA44(v16, v15, v14, v2, v3, v4, v5, v6, v13, *((uint64_t *)&v13 + 1), v12, *((unint64_t *)&v12 + 1), v7, v8);
  sub_190B2EB80(v10, v9);
  return a1;
}

void sub_190B2EA44(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, unint64_t a14)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    sub_190B2EB14(a3, a4);
    sub_190B2EB14(a5, a6);
    sub_190B2EB14(a7, a8);
    swift_bridgeObjectRelease();
    sub_190B2EB14(a11, a12);
    sub_190B2EB14(a13, a14);
  }
}

uint64_t sub_190B2EB14(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_190B2EB28(a1, a2);
  }
  return a1;
}

uint64_t sub_190B2EB28(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_190B2EB80(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 11) {
    return sub_190B2EB14(a1, a2);
  }
  return a1;
}

void sub_190B2EB94(uint64_t a1, void *a2)
{
  uint64_t v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_190B776C8();
    sub_190B23474(0, &qword_1E92A5B08);
    sub_190B307B4();
    sub_190B77498();
    uint64_t v2 = v33;
    uint64_t v30 = v34;
    uint64_t v3 = v35;
    uint64_t v4 = v36;
    unint64_t v5 = v37;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v30 = a1 + 56;
    uint64_t v7 = ~v6;
    uint64_t v8 = -v6;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v5 = v9 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v3 = v7;
    uint64_t v4 = 0;
  }
  uint64_t v28 = v3;
  int64_t v29 = (unint64_t)(v3 + 64) >> 6;
  uint64_t v31 = v2;
  if ((v2 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
LABEL_8:
  if (!sub_190B776F8()) {
    goto LABEL_40;
  }
  sub_190B23474(0, &qword_1E92A5B08);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  id v10 = v38;
  swift_unknownObjectRelease();
  uint64_t v11 = v4;
  uint64_t v12 = v5;
  if (!v38) {
    goto LABEL_40;
  }
  while (1)
  {
    id v17 = objc_msgSend(a2, sel_value, v28);
    sub_190B23474(0, &qword_1E92A5B00);
    if (sub_190B77608()) {
      goto LABEL_39;
    }
    id v18 = objc_msgSend(v10, sel_stringValue);
    uint64_t v19 = sub_190B77168();
    uint64_t v21 = v20;

    id v22 = objc_msgSend(v17, sel_stringValue);
    uint64_t v23 = sub_190B77168();
    uint64_t v25 = v24;

    if (v19 == v23 && v21 == v25)
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_40;
    }
    char v26 = sub_190B77998();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v26)
    {
LABEL_39:

      goto LABEL_40;
    }
    unsigned int v27 = objc_msgSend(v10, sel_isLikePhoneNumber_, v17);

    if (v27) {
      goto LABEL_40;
    }

    uint64_t v4 = v11;
    unint64_t v5 = v12;
    uint64_t v2 = v31;
    if (v31 < 0) {
      goto LABEL_8;
    }
LABEL_11:
    if (!v5) {
      break;
    }
    uint64_t v12 = (v5 - 1) & v5;
    unint64_t v13 = __clz(__rbit64(v5)) | (v4 << 6);
    uint64_t v11 = v4;
LABEL_29:
    id v10 = *(id *)(*(void *)(v2 + 48) + 8 * v13);
    if (!v10) {
      goto LABEL_40;
    }
  }
  int64_t v14 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    return;
  }
  if (v14 >= v29) {
    goto LABEL_40;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v14);
  uint64_t v11 = v4 + 1;
  if (v15) {
    goto LABEL_28;
  }
  uint64_t v11 = v4 + 2;
  if (v4 + 2 >= v29) {
    goto LABEL_40;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v11);
  if (v15) {
    goto LABEL_28;
  }
  uint64_t v11 = v4 + 3;
  if (v4 + 3 >= v29) {
    goto LABEL_40;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v11);
  if (v15) {
    goto LABEL_28;
  }
  uint64_t v11 = v4 + 4;
  if (v4 + 4 >= v29) {
    goto LABEL_40;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v11);
  if (v15) {
    goto LABEL_28;
  }
  uint64_t v11 = v4 + 5;
  if (v4 + 5 >= v29) {
    goto LABEL_40;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v11);
  if (v15)
  {
LABEL_28:
    uint64_t v12 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
    goto LABEL_29;
  }
  uint64_t v16 = v4 + 6;
  while (v29 != v16)
  {
    unint64_t v15 = *(void *)(v30 + 8 * v16++);
    if (v15)
    {
      uint64_t v11 = v16 - 1;
      goto LABEL_28;
    }
  }
LABEL_40:
  sub_190B23408();
}

uint64_t sub_190B2EFA0(void *a1, void *a2)
{
  v19[1] = *(id *)MEMORY[0x1E4F143B8];
  id v3 = objc_msgSend(a1, sel_identifier);
  if (!v3)
  {
    sub_190B77168();
    id v3 = (id)sub_190B77158();
    swift_bridgeObjectRelease();
  }
  id v4 = objc_msgSend(self, sel_predicateForContainerOfContactWithIdentifier_, v3);

  v19[0] = 0;
  id v5 = objc_msgSend(a2, sel_containersMatchingPredicate_error_, v4, v19);
  id v6 = v19[0];
  if (!v5)
  {
    id v16 = v19[0];
    id v17 = (void *)sub_190B76D68();

    swift_willThrow();
    return 0;
  }
  uint64_t v7 = v5;
  sub_190B23474(0, &qword_1E92A3D48);
  unint64_t v8 = sub_190B772C8();
  id v9 = v6;

  if (!(v8 >> 62))
  {
    uint64_t v10 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v10) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_190B778A8();
  swift_bridgeObjectRelease();
  if (!v10)
  {
LABEL_14:

    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_6:
  unint64_t v11 = v10 - 1;
  if (__OFSUB__(v10, 1))
  {
    __break(1u);
    goto LABEL_18;
  }
  if ((v8 & 0xC000000000000001) != 0)
  {
LABEL_18:
    id v12 = (id)MEMORY[0x192FD1FB0](v11, v8);
    goto LABEL_11;
  }
  if ((v11 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_20:
    __break(1u);
  }
  if (v11 >= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_20;
  }
  id v12 = *(id *)(v8 + 8 * v11 + 32);
LABEL_11:
  unint64_t v13 = v12;
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v13, sel_identifier);

  uint64_t v15 = sub_190B77168();
  return v15;
}

void sub_190B2F1DC(unint64_t a1)
{
  unint64_t v1 = a1;
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_190B778A8();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5B18);
      uint64_t v3 = sub_190B77778();
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_190B778A8();
      swift_bridgeObjectRelease();
      if (!v5) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = MEMORY[0x1E4FBC870];
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return;
  }
LABEL_9:
  uint64_t v7 = v3 + 56;
  uint64_t v43 = v5;
  if ((v1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = 0;
    unint64_t v41 = v1;
    while (1)
    {
      while (1)
      {
        uint64_t v9 = MEMORY[0x192FD1FB0](v8, v1);
        BOOL v10 = __OFADD__(v8++, 1);
        if (v10)
        {
          __break(1u);
          goto LABEL_36;
        }
        uint64_t v11 = v9;
        uint64_t v12 = sub_190B775F8();
        uint64_t v13 = -1 << *(unsigned char *)(v3 + 32);
        unint64_t v14 = v12 & ~v13;
        unint64_t v15 = v14 >> 6;
        uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
        uint64_t v17 = 1 << v14;
        if (((1 << v14) & v16) != 0) {
          break;
        }
LABEL_20:
        *(void *)(v7 + 8 * v15) = v17 | v16;
        *(void *)(*(void *)(v3 + 48) + 8 * v14) = v11;
        uint64_t v23 = *(void *)(v3 + 16);
        BOOL v10 = __OFADD__(v23, 1);
        uint64_t v24 = v23 + 1;
        if (v10) {
          goto LABEL_37;
        }
        *(void *)(v3 + 16) = v24;
        if (v8 == v5) {
          return;
        }
      }
      sub_190B23474(0, (unint64_t *)&unk_1E92A61E0);
      id v18 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
      char v19 = sub_190B77608();

      if ((v19 & 1) == 0)
      {
        uint64_t v20 = ~v13;
        while (1)
        {
          unint64_t v14 = (v14 + 1) & v20;
          unint64_t v15 = v14 >> 6;
          uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
          uint64_t v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0) {
            break;
          }
          id v21 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
          char v22 = sub_190B77608();

          if (v22) {
            goto LABEL_11;
          }
        }
        unint64_t v1 = v41;
        uint64_t v5 = v43;
        goto LABEL_20;
      }
LABEL_11:
      swift_unknownObjectRelease();
      unint64_t v1 = v41;
      uint64_t v5 = v43;
      if (v8 == v43) {
        return;
      }
    }
  }
  uint64_t v25 = 0;
  unint64_t v40 = v1 + 32;
  uint64_t v42 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v25 != v42)
  {
    id v26 = *(id *)(v40 + 8 * v25);
    uint64_t v27 = sub_190B775F8();
    uint64_t v28 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v29 = v27 & ~v28;
    unint64_t v30 = v29 >> 6;
    uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
    uint64_t v32 = 1 << v29;
    if (((1 << v29) & v31) != 0)
    {
      sub_190B23474(0, (unint64_t *)&unk_1E92A61E0);
      id v33 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
      char v34 = sub_190B77608();

      if (v34)
      {
LABEL_24:

        goto LABEL_25;
      }
      uint64_t v35 = ~v28;
      while (1)
      {
        unint64_t v29 = (v29 + 1) & v35;
        unint64_t v30 = v29 >> 6;
        uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
        uint64_t v32 = 1 << v29;
        if ((v31 & (1 << v29)) == 0) {
          break;
        }
        id v36 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
        char v37 = sub_190B77608();

        if (v37) {
          goto LABEL_24;
        }
      }
    }
    *(void *)(v7 + 8 * v30) = v32 | v31;
    *(void *)(*(void *)(v3 + 48) + 8 * v29) = v26;
    uint64_t v38 = *(void *)(v3 + 16);
    BOOL v10 = __OFADD__(v38, 1);
    uint64_t v39 = v38 + 1;
    if (v10) {
      goto LABEL_38;
    }
    *(void *)(v3 + 16) = v39;
LABEL_25:
    if (++v25 == v43) {
      return;
    }
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

void sub_190B2F538(unint64_t a1)
{
  unint64_t v1 = a1;
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_190B778A8();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92A61D0);
      uint64_t v3 = sub_190B77778();
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_190B778A8();
      swift_bridgeObjectRelease();
      if (!v5) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = MEMORY[0x1E4FBC870];
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return;
  }
LABEL_9:
  uint64_t v7 = v3 + 56;
  uint64_t v43 = v5;
  if ((v1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = 0;
    unint64_t v41 = v1;
    while (1)
    {
      while (1)
      {
        uint64_t v9 = MEMORY[0x192FD1FB0](v8, v1);
        BOOL v10 = __OFADD__(v8++, 1);
        if (v10)
        {
          __break(1u);
          goto LABEL_36;
        }
        uint64_t v11 = v9;
        uint64_t v12 = sub_190B775F8();
        uint64_t v13 = -1 << *(unsigned char *)(v3 + 32);
        unint64_t v14 = v12 & ~v13;
        unint64_t v15 = v14 >> 6;
        uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
        uint64_t v17 = 1 << v14;
        if (((1 << v14) & v16) != 0) {
          break;
        }
LABEL_20:
        *(void *)(v7 + 8 * v15) = v17 | v16;
        *(void *)(*(void *)(v3 + 48) + 8 * v14) = v11;
        uint64_t v23 = *(void *)(v3 + 16);
        BOOL v10 = __OFADD__(v23, 1);
        uint64_t v24 = v23 + 1;
        if (v10) {
          goto LABEL_37;
        }
        *(void *)(v3 + 16) = v24;
        if (v8 == v5) {
          return;
        }
      }
      sub_190B23474(0, &qword_1E92A5B08);
      id v18 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
      char v19 = sub_190B77608();

      if ((v19 & 1) == 0)
      {
        uint64_t v20 = ~v13;
        while (1)
        {
          unint64_t v14 = (v14 + 1) & v20;
          unint64_t v15 = v14 >> 6;
          uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
          uint64_t v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0) {
            break;
          }
          id v21 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
          char v22 = sub_190B77608();

          if (v22) {
            goto LABEL_11;
          }
        }
        unint64_t v1 = v41;
        uint64_t v5 = v43;
        goto LABEL_20;
      }
LABEL_11:
      swift_unknownObjectRelease();
      unint64_t v1 = v41;
      uint64_t v5 = v43;
      if (v8 == v43) {
        return;
      }
    }
  }
  uint64_t v25 = 0;
  unint64_t v40 = v1 + 32;
  uint64_t v42 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v25 != v42)
  {
    id v26 = *(id *)(v40 + 8 * v25);
    uint64_t v27 = sub_190B775F8();
    uint64_t v28 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v29 = v27 & ~v28;
    unint64_t v30 = v29 >> 6;
    uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
    uint64_t v32 = 1 << v29;
    if (((1 << v29) & v31) != 0)
    {
      sub_190B23474(0, &qword_1E92A5B08);
      id v33 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
      char v34 = sub_190B77608();

      if (v34)
      {
LABEL_24:

        goto LABEL_25;
      }
      uint64_t v35 = ~v28;
      while (1)
      {
        unint64_t v29 = (v29 + 1) & v35;
        unint64_t v30 = v29 >> 6;
        uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
        uint64_t v32 = 1 << v29;
        if ((v31 & (1 << v29)) == 0) {
          break;
        }
        id v36 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
        char v37 = sub_190B77608();

        if (v37) {
          goto LABEL_24;
        }
      }
    }
    *(void *)(v7 + 8 * v30) = v32 | v31;
    *(void *)(*(void *)(v3 + 48) + 8 * v29) = v26;
    uint64_t v38 = *(void *)(v3 + 16);
    BOOL v10 = __OFADD__(v38, 1);
    uint64_t v39 = v38 + 1;
    if (v10) {
      goto LABEL_38;
    }
    *(void *)(v3 + 16) = v39;
LABEL_25:
    if (++v25 == v43) {
      return;
    }
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

uint64_t sub_190B2F894(unint64_t a1, void *a2)
{
  uint64_t v2 = a1;
  if (a1 >> 62)
  {
LABEL_23:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_190B778A8();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3)
    {
LABEL_3:
      unint64_t v22 = v2 & 0xC000000000000001;
      uint64_t v21 = v2;
      sub_190B23474(0, &qword_1E92A5B00);
      uint64_t v4 = 0;
      while (1)
      {
        if (v22) {
          id v5 = (id)MEMORY[0x192FD1FB0](v4, v2);
        }
        else {
          id v5 = *(id *)(v2 + 8 * v4 + 32);
        }
        uint64_t v6 = v5;
        id v7 = objc_msgSend(v5, sel_value);
        id v8 = objc_msgSend(a2, sel_value);
        if (sub_190B77608())
        {

          return v4;
        }
        uint64_t v9 = v3;
        uint64_t v24 = v4;
        id v10 = objc_msgSend(v7, sel_stringValue);
        uint64_t v11 = sub_190B77168();
        uint64_t v13 = v12;

        id v14 = objc_msgSend(v8, sel_stringValue);
        uint64_t v15 = sub_190B77168();
        uint64_t v17 = v16;

        if (v11 == v15 && v13 == v17) {
          break;
        }
        uint64_t v2 = sub_190B77998();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v2)
        {

          return v24;
        }
        unsigned __int8 v19 = objc_msgSend(v7, sel_isLikePhoneNumber_, v8);

        uint64_t v4 = v24;
        if (v19) {
          return v4;
        }
        if (__OFADD__(v24, 1))
        {
          __break(1u);
          goto LABEL_23;
        }
        uint64_t v4 = v24 + 1;
        uint64_t v3 = v9;
        uint64_t v2 = v21;
        if (v24 + 1 == v9) {
          return 0;
        }
      }

      swift_bridgeObjectRelease_n();
      return v24;
    }
  }
  return 0;
}

void sub_190B2FB0C(uint64_t *a1, void *a2)
{
  unint64_t v3 = a1[1];
  uint64_t v74 = *a1;
  unint64_t v4 = a1[2];
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain_n();
    id v10 = a2;
    uint64_t v5 = sub_190B778A8();
    if (!v5) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    id v6 = a2;
    if (!v5) {
      goto LABEL_10;
    }
  }
  if (v5 < 1) {
    goto LABEL_122;
  }
  for (uint64_t i = 0; i != v5; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0) {
      id v8 = (id)MEMORY[0x192FD1FB0](i, v3);
    }
    else {
      id v8 = *(id *)(v3 + 8 * i + 32);
    }
    uint64_t v9 = v8;
    objc_msgSend(a2, sel_updateContact_, v8);
  }
LABEL_10:

  swift_bridgeObjectRelease_n();
  if (v4 >> 62)
  {
    id v17 = a2;
    swift_bridgeObjectRetain_n();
    id v18 = v17;
    uint64_t v11 = sub_190B778A8();
    if (!v11) {
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v12 = a2;
    swift_bridgeObjectRetain_n();
    id v13 = v12;
    if (!v11) {
      goto LABEL_19;
    }
  }
  if (v11 < 1) {
    goto LABEL_123;
  }
  for (uint64_t j = 0; j != v11; ++j)
  {
    if ((v4 & 0xC000000000000001) != 0) {
      id v15 = (id)MEMORY[0x192FD1FB0](j, v4);
    }
    else {
      id v15 = *(id *)(v4 + 8 * j + 32);
    }
    uint64_t v16 = v15;
    objc_msgSend(a2, sel_deleteContact_, v15);
  }
LABEL_19:

  id v70 = a2;
  swift_bridgeObjectRelease_n();
  uint64_t v19 = v74;
  uint64_t v20 = *(void *)(v74 + 16);
  if (v20)
  {
    uint64_t v21 = v74 + 32;
    uint64_t v72 = *MEMORY[0x1E4F5A2A0];
    swift_bridgeObjectRetain();
    unint64_t v22 = 0;
    uint64_t v23 = MEMORY[0x1E4FBC860];
    uint64_t v71 = v20;
    while (1)
    {
      if (v22 >= *(void *)(v19 + 16)) {
        goto LABEL_113;
      }
      unint64_t v24 = *(void *)(v21 + 8 * v22);
      if (v24 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v25 = sub_190B778A8();
        if (!v25)
        {
LABEL_50:
          swift_bridgeObjectRelease();
          goto LABEL_51;
        }
      }
      else
      {
        uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        if (!v25) {
          goto LABEL_50;
        }
      }
      if ((v24 & 0xC000000000000001) != 0)
      {
        id v26 = (id)MEMORY[0x192FD1FB0](0, v24);
      }
      else
      {
        if (!*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_114;
        }
        id v26 = *(id *)(v24 + 32);
      }
      uint64_t v27 = v26;
      swift_bridgeObjectRelease();
      id v28 = objc_msgSend(v27, sel_linkIdentifier, v70);

      if (!v28) {
        goto LABEL_51;
      }
      uint64_t v29 = sub_190B77168();
      uint64_t v31 = v30;

      if (!v72) {
        goto LABEL_124;
      }
      uint64_t v32 = (void *)sub_190B77158();
      int v33 = (*(uint64_t (**)(uint64_t, void *))(v72 + 16))(v72, v32);

      if (!v33)
      {
        swift_bridgeObjectRelease();
        goto LABEL_47;
      }
      uint64_t v73 = v23;
      swift_bridgeObjectRetain();
      uint64_t v34 = 4;
      uint64_t v75 = v25;
      while (1)
      {
        if ((v24 & 0xC000000000000001) != 0) {
          id v35 = (id)MEMORY[0x192FD1FB0](v34 - 4, v24);
        }
        else {
          id v35 = *(id *)(v24 + 8 * v34);
        }
        id v36 = v35;
        uint64_t v37 = v34 - 3;
        if (__OFADD__(v34 - 4, 1))
        {
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
          return;
        }
        id v38 = objc_msgSend(v35, sel_linkIdentifier);
        if (!v38) {
          break;
        }
        uint64_t v39 = v38;
        uint64_t v40 = sub_190B77168();
        uint64_t v42 = v41;

        if (v40 == v29 && v42 == v31)
        {

          swift_bridgeObjectRelease();
        }
        else
        {
          char v44 = sub_190B77998();

          swift_bridgeObjectRelease();
          if ((v44 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_46;
          }
        }
        ++v34;
        if (v37 == v75)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          uint64_t v23 = v73;
          uint64_t v19 = v74;
          uint64_t v21 = v74 + 32;
          uint64_t v20 = v71;
          goto LABEL_56;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

LABEL_46:
      uint64_t v23 = v73;
LABEL_47:
      uint64_t v19 = v74;
      uint64_t v21 = v74 + 32;
      uint64_t v20 = v71;
LABEL_51:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_190B21F30(0, *(void *)(v23 + 16) + 1, 1);
      }
      unint64_t v46 = *(void *)(v23 + 16);
      unint64_t v45 = *(void *)(v23 + 24);
      if (v46 >= v45 >> 1) {
        sub_190B21F30(v45 > 1, v46 + 1, 1);
      }
      *(void *)(v23 + 16) = v46 + 1;
      *(void *)(v23 + 8 * v46 + 32) = v24;
LABEL_56:
      if (++v22 == v20)
      {
        swift_bridgeObjectRelease();
        goto LABEL_60;
      }
    }
  }
  uint64_t v23 = MEMORY[0x1E4FBC860];
LABEL_60:
  uint64_t v76 = *(void *)(v23 + 16);
  if (v76)
  {
    id v77 = v70;
    swift_retain();
    uint64_t v47 = 0;
    while (1)
    {
      unint64_t v48 = *(void *)(v23 + 32 + 8 * v47);
      unint64_t v49 = v48 >> 62;
      if (v48 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v50 = sub_190B778A8();
        if (!v50)
        {
LABEL_101:
          swift_bridgeObjectRelease_n();
          goto LABEL_63;
        }
      }
      else
      {
        uint64_t v50 = *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        if (!v50) {
          goto LABEL_101;
        }
      }
      if ((v48 & 0xC000000000000001) != 0)
      {
        id v51 = (id)MEMORY[0x192FD1FB0](0, v48);
      }
      else
      {
        if (!*(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_115;
        }
        id v51 = *(id *)(v48 + 32);
      }
      unint64_t v52 = v51;
      swift_bridgeObjectRelease();
      if (v50 < 1) {
        goto LABEL_116;
      }
      if (v49)
      {
        swift_bridgeObjectRetain();
        if (sub_190B778A8() < 1) {
          goto LABEL_120;
        }
        swift_bridgeObjectRetain();
        uint64_t v53 = sub_190B778A8();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v53 = *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v53) {
          goto LABEL_119;
        }
        swift_bridgeObjectRetain();
      }
      if (v53 < v50) {
        goto LABEL_117;
      }
      if ((v48 & 0xC000000000000001) != 0 && v50 != 1)
      {
        sub_190B23474(0, (unint64_t *)&qword_1E92A3E20);
        uint64_t v54 = 1;
        do
        {
          uint64_t v55 = v54 + 1;
          sub_190B777B8();
          uint64_t v54 = v55;
        }
        while (v50 != v55);
      }
      if (v49)
      {
        swift_bridgeObjectRetain();
        uint64_t v56 = sub_190B778B8();
        uint64_t v57 = v60;
        uint64_t v59 = v61;
        unint64_t v58 = v62;
        swift_bridgeObjectRelease_n();
        if ((v58 & 1) == 0) {
          goto LABEL_84;
        }
      }
      else
      {
        uint64_t v56 = v48 & 0xFFFFFFFFFFFFFF8;
        uint64_t v57 = (v48 & 0xFFFFFFFFFFFFFF8) + 32;
        unint64_t v58 = (2 * v50) | 1;
        uint64_t v59 = 1;
        if ((v58 & 1) == 0) {
          goto LABEL_84;
        }
      }
      sub_190B779A8();
      swift_unknownObjectRetain_n();
      uint64_t v64 = swift_dynamicCastClass();
      if (!v64)
      {
        swift_unknownObjectRelease();
        uint64_t v64 = MEMORY[0x1E4FBC860];
      }
      uint64_t v65 = *(void *)(v64 + 16);
      swift_release();
      if (__OFSUB__(v58 >> 1, v59)) {
        goto LABEL_121;
      }
      if (v65 != (v58 >> 1) - v59)
      {
        swift_unknownObjectRelease();
LABEL_84:
        uint64_t v63 = sub_190B2C3F8(v56, v57, v59, v58);
        goto LABEL_91;
      }
      uint64_t v63 = swift_dynamicCastClass();
      if (!v63)
      {
        swift_unknownObjectRelease();
        uint64_t v63 = MEMORY[0x1E4FBC860];
      }
LABEL_91:
      swift_unknownObjectRelease();
      if (v63 < 0 || (v63 & 0x4000000000000000) != 0)
      {
        swift_retain();
        uint64_t v66 = sub_190B778A8();
        if (v66)
        {
LABEL_94:
          if (v66 < 1) {
            goto LABEL_118;
          }
          for (uint64_t k = 0; k != v66; ++k)
          {
            if ((v63 & 0xC000000000000001) != 0) {
              id v68 = (id)MEMORY[0x192FD1FB0](k, v63);
            }
            else {
              id v68 = *(id *)(v63 + 8 * k + 32);
            }
            unint64_t v69 = v68;
            objc_msgSend(v77, sel_linkContact_toContact_, v52, v68, v70);
          }
        }
      }
      else
      {
        uint64_t v66 = *(void *)(v63 + 16);
        swift_retain();
        if (v66) {
          goto LABEL_94;
        }
      }

      swift_bridgeObjectRelease();
      swift_release_n();
LABEL_63:
      if (++v47 == v76)
      {
        swift_release_n();

        return;
      }
    }
  }

  swift_release();
}

uint64_t type metadata accessor for DuplicateContacts()
{
  return self;
}

uint64_t method lookup function for DuplicateContacts(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DuplicateContacts);
}

uint64_t dispatch thunk of static DuplicateContacts.findDuplicates<A>(in:)()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of static DuplicateContacts.mergeDuplicates(_:store:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of static DuplicateContacts.mergeDuplicates(cohortsWithUserSelectedImageAndPoster:store:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of static DuplicateContacts.mergeDuplicateEmailAddresses(in:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of static DuplicateContacts.mergeDuplicatePhoneNumbers(in:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of static DuplicateContacts.mergeDuplicateUrlAddresses(in:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of static DuplicateContacts.mergedNameComponents(for:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of static DuplicateContacts.applyMergeResult(_:to:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t sub_190B304EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 16);
}

uint64_t type metadata accessor for DuplicateContacts.FindResult()
{
  return __swift_instantiateGenericMetadata();
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for DuplicateContacts.MergeResult()
{
  return &type metadata for DuplicateContacts.MergeResult;
}

uint64_t _s8Contacts17DuplicateContactsC11MergeResultVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s8Contacts17DuplicateContactsC11MergeResultVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s8Contacts17DuplicateContactsC11MergeResultVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s8Contacts17DuplicateContactsC11MergeResultVwta_0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s8Contacts17DuplicateContactsC11MergeResultVwet_0(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_190B306EC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + _Block_object_dispose(&STACK[0x228], 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DuplicateContacts.MergeResult.UndoResult()
{
  return &type metadata for DuplicateContacts.MergeResult.UndoResult;
}

uint64_t sub_190B3073C(id *a1)
{
  return sub_190B262B8(a1, *(void *)(v1 + 24), *(void *)(v1 + 32)) & 1;
}

unint64_t sub_190B30760()
{
  unint64_t result = qword_1E92A3E00;
  if (!qword_1E92A3E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92A3E00);
  }
  return result;
}

unint64_t sub_190B307B4()
{
  unint64_t result = qword_1E92A5B10;
  if (!qword_1E92A5B10)
  {
    sub_190B23474(255, &qword_1E92A5B08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92A5B10);
  }
  return result;
}

void *sub_190B3081C(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_190B30878(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t sub_190B30918@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_190B2E24C(a1, a2);
}

uint64_t sub_190B30934()
{
  uint64_t v0 = sub_190B76FC8();
  __swift_allocate_value_buffer(v0, qword_1E92A8498);
  __swift_project_value_buffer(v0, (uint64_t)qword_1E92A8498);
  return sub_190B76FB8();
}

id sub_190B309A4()
{
  uint64_t v1 = OBJC_IVAR____TtC8Contacts28CNContactProviderSupportHost____lazy_storage___contactStore;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8Contacts28CNContactProviderSupportHost____lazy_storage___contactStore);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC8Contacts28CNContactProviderSupportHost____lazy_storage___contactStore);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), sel_init);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_190B30A18(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3BB8);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  char v44 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v40 - v7;
  uint64_t v46 = sub_190B76F98();
  uint64_t v9 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  uint64_t v43 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_190B76FC8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  id v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E92A5838 != -1) {
    swift_once();
  }
  uint64_t v15 = __swift_project_value_buffer(v11, (uint64_t)qword_1E92A8498);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  if (qword_1E92A3BD0 != -1) {
    swift_once();
  }
  uint64_t v45 = v9;
  uint64_t v16 = qword_1E92A3BC0;
  swift_bridgeObjectRetain_n();
  id v17 = sub_190B76FA8();
  os_log_type_t v18 = sub_190B77588();
  BOOL v19 = os_log_type_enabled(v17, v18);
  uint64_t v47 = a1;
  if (v19)
  {
    uint64_t v41 = v14;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v42 = v11;
    uint64_t v21 = (uint8_t *)v20;
    uint64_t v22 = swift_slowAlloc();
    v49[0] = v22;
    *(_DWORD *)uint64_t v21 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v48 = sub_190B21150(v47, a2, v49);
    id v14 = v41;
    sub_190B77648();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1909E3000, v17, v18, "providerContainer(for: %{public}s)", v21, 0xCu);
    swift_arrayDestroy();
    uint64_t v23 = v22;
    a1 = v47;
    MEMORY[0x192FD42A0](v23, -1, -1);
    unint64_t v24 = v21;
    uint64_t v11 = v42;
    MEMORY[0x192FD42A0](v24, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v26 = MEMORY[0x1F4188790](v25);
  *(&v40 - 4) = v16;
  *(&v40 - 3) = a1;
  *(&v40 - 2) = a2;
  MEMORY[0x1F4188790](v26);
  *(&v40 - 2) = (uint64_t)sub_190B41238;
  *(&v40 - 1) = v27;
  uint64_t v29 = v28 + 4;
  os_unfair_lock_lock(v28 + 4);
  uint64_t v30 = (uint64_t)v44;
  sub_190B4156C();
  os_unfair_lock_unlock(v29);
  sub_190B41594(v30, (uint64_t)v8);
  uint64_t v32 = v45;
  uint64_t v31 = v46;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v8, 1, v46) == 1)
  {
    sub_190B23144((uint64_t)v8, &qword_1E92A3BB8);
    swift_bridgeObjectRetain_n();
    int v33 = sub_190B76FA8();
    os_log_type_t v34 = sub_190B77578();
    if (os_log_type_enabled(v33, v34))
    {
      id v35 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      v49[0] = v36;
      *(_DWORD *)id v35 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v48 = sub_190B21150(v47, a2, v49);
      sub_190B77648();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1909E3000, v33, v34, "providerContainer() did not find extension for %{public}s", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FD42A0](v36, -1, -1);
      MEMORY[0x192FD42A0](v35, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    return 0;
  }
  else
  {
    uint64_t v37 = v43;
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v43, v8, v31);
    uint64_t v38 = sub_190B3E5FC();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v37, v31);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  return v38;
}

uint64_t sub_190B310B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  void v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = sub_190B76F58();
  v4[7] = v5;
  v4[8] = *(void *)(v5 - 8);
  v4[9] = swift_task_alloc();
  uint64_t v6 = sub_190B76FC8();
  v4[10] = v6;
  v4[11] = *(void *)(v6 - 8);
  v4[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_190B311D8, 0, 0);
}

uint64_t sub_190B311D8()
{
  os_log_type_t v18 = v0;
  if (qword_1E92A5838 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[10];
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1E92A8498);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_190B76FA8();
  os_log_type_t v6 = sub_190B77588();
  BOOL v7 = os_log_type_enabled(v5, v6);
  unint64_t v8 = v0[5];
  if (v7)
  {
    uint64_t v9 = v0[4];
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v17 = v11;
    *(_DWORD *)uint64_t v10 = 136446210;
    swift_bridgeObjectRetain();
    v0[2] = sub_190B21150(v9, v8, &v17);
    sub_190B77648();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1909E3000, v5, v6, "synchronize(using session:, bundleIdentifier: %{public}s)", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FD42A0](v11, -1, -1);
    MEMORY[0x192FD42A0](v10, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v12 = (void *)swift_task_alloc();
  v0[13] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_190B3141C;
  uint64_t v13 = v0[9];
  uint64_t v14 = v0[5];
  uint64_t v15 = v0[4];
  return sub_190B3C330(v13, v15, v14);
}

uint64_t sub_190B3141C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  os_log_type_t v6 = (void *)*v5;
  v6[14] = a1;
  v6[15] = a2;
  v6[16] = a3;
  v6[17] = a4;
  v6[18] = v4;
  swift_task_dealloc();
  if (v4) {
    BOOL v7 = sub_190B31978;
  }
  else {
    BOOL v7 = sub_190B31538;
  }
  return MEMORY[0x1F4188298](v7, 0, 0);
}

uint64_t sub_190B31538()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = sub_190B76F48();
  *(void *)(v0 + 152) = v2;
  if (v1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 64) + 8))(*(void *)(v0 + 72), *(void *)(v0 + 56));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(void, void))(*(void *)(v0 + 88) + 8))(*(void *)(v0 + 96), *(void *)(v0 + 80));
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  else
  {
    uint64_t v5 = (void *)v2;
    long long v16 = *(_OWORD *)(v0 + 128);
    uint64_t v7 = *(void *)(v0 + 112);
    uint64_t v6 = *(void *)(v0 + 120);
    uint64_t v8 = *(void *)(v0 + 96);
    uint64_t v9 = *(void *)(v0 + 40);
    uint64_t v10 = *(void *)(v0 + 48);
    uint64_t v12 = *(void *)(v0 + 24);
    uint64_t v11 = *(void *)(v0 + 32);
    id v13 = objc_msgSend(self, sel_interfaceWithProtocol_, &unk_1EE0B8580);
    objc_msgSend(v5, sel_setRemoteObjectInterface_, v13);

    objc_msgSend(v5, sel_resume);
    uint64_t v14 = swift_task_alloc();
    *(void *)(v0 + 160) = v14;
    *(void *)(v14 + 16) = v5;
    *(void *)(v14 + 24) = v8;
    *(void *)(v14 + 32) = v7;
    *(void *)(v14 + 40) = v6;
    *(_OWORD *)(v14 + 4_Block_object_dispose(&STACK[0x228], 8) = v16;
    *(void *)(v14 + 64) = v12;
    *(void *)(v14 + 72) = v10;
    *(void *)(v14 + 80) = v11;
    *(void *)(v14 + 8_Block_object_dispose(&STACK[0x228], 8) = v9;
    uint64_t v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 16_Block_object_dispose(&STACK[0x228], 8) = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_190B3177C;
    return MEMORY[0x1F4188160]();
  }
}

uint64_t sub_190B3177C()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_190B31A08;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v2 = sub_190B318B8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_190B318B8()
{
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v6 = *(void *)(v0 + 64);

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_190B31978()
{
  (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_190B31A08()
{
  uint64_t v1 = v0[6];
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v2 = (void *)sub_190B76D58();
  id v3 = objc_msgSend(v2, sel_domain);
  uint64_t v4 = sub_190B77168();
  uint64_t v6 = v5;

  if (v4 == *(void *)(v1 + OBJC_IVAR____TtC8Contacts28CNContactProviderSupportHost_ContactProviderErrorDomain)
    && v6 == *(void *)(v1 + OBJC_IVAR____TtC8Contacts28CNContactProviderSupportHost_ContactProviderErrorDomain + 8))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v8 = sub_190B77998();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
    {

LABEL_12:
      swift_bridgeObjectRelease();
      if (sub_190B32D00(v0[22], v0[6])) {
        sub_190B35970(v0[4], v0[5]);
      }
      uint64_t v14 = (void *)v0[19];
      uint64_t v16 = v0[8];
      uint64_t v15 = v0[9];
      uint64_t v17 = v0[7];
      swift_willThrow();

      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
      (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
      swift_task_dealloc();
      swift_task_dealloc();
      os_log_type_t v18 = (uint64_t (*)(void))v0[1];
      return v18();
    }
  }
  id v9 = objc_msgSend(v2, sel_code);

  if (v9 != (id)1007) {
    goto LABEL_12;
  }
  uint64_t v10 = (void *)swift_task_alloc();
  v0[23] = v10;
  void *v10 = v0;
  v10[1] = sub_190B31C68;
  uint64_t v12 = v0[14];
  uint64_t v11 = v0[15];
  return sub_190B418B8(v12, v11);
}

uint64_t sub_190B31C68()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_190B31D80, 0, 0);
}

uint64_t sub_190B31D80()
{
  if (sub_190B32D00(v0[22], v0[6])) {
    sub_190B35970(v0[4], v0[5]);
  }
  uint64_t v1 = (void *)v0[19];
  uint64_t v3 = v0[8];
  uint64_t v2 = v0[9];
  uint64_t v4 = v0[7];
  swift_willThrow();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_190B31EA0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, void *a9, uint64_t a10, void *a11)
{
  uint64_t v95 = a8;
  id v96 = a2;
  unint64_t v103 = a7;
  unint64_t v104 = a5;
  uint64_t v100 = a4;
  uint64_t v101 = a6;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5D00);
  uint64_t v102 = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](v13);
  id v99 = (char *)&v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_190B76FC8();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v75 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v97 = a3;
  uint64_t v89 = v17 + 16;
  uint64_t v88 = v20;
  v20(v19, a3, v16);
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v98 = a1;
  uint64_t v87 = v14 + 16;
  id v86 = v21;
  v21((char *)&v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v13);
  uint64_t v22 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v23 = (v22 + 16) & ~v22;
  uint64_t v85 = v18 + 7;
  unint64_t v24 = (v23 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (v24 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v82 = (char *)(v26 + 16);
  uint64_t v27 = (v25 + v26 + 16) & ~v26;
  uint64_t v92 = v15;
  uint64_t v28 = v22;
  unint64_t v81 = v26;
  uint64_t v83 = v22 | v26 | 7;
  uint64_t v29 = swift_allocObject();
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  unint64_t v90 = v19;
  uint64_t v93 = v16;
  uint64_t v91 = v17 + 32;
  unint64_t v84 = v30;
  v30((char *)(v29 + v23), v19, v16);
  uint64_t v31 = (uint64_t *)(v29 + v24);
  uint64_t v32 = v99;
  uint64_t v33 = v100;
  unint64_t v35 = v103;
  unint64_t v34 = v104;
  uint64_t *v31 = v100;
  v31[1] = v34;
  uint64_t v36 = (void *)(v29 + v25);
  uint64_t v37 = v102;
  *uint64_t v36 = v101;
  v36[1] = v35;
  uint64_t v38 = *(void (**)(uint64_t, char *, uint64_t))(v14 + 32);
  uint64_t v94 = v14 + 32;
  v38(v29 + v27, v32, v37);
  long long v110 = sub_190B44170;
  uint64_t v111 = (void *)v29;
  aBlocuint64_t k = MEMORY[0x1E4F143A8];
  uint64_t v107 = 1107296256;
  id v108 = sub_190B327F4;
  id v109 = &block_descriptor_190;
  uint64_t v39 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  id v40 = objc_msgSend(v96, sel_remoteObjectProxyWithErrorHandler_, v39);
  _Block_release(v39);
  sub_190B77698();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5D08);
  if (swift_dynamicCast())
  {
    id v80 = (void (*)(char *, char *, uint64_t))v38;
    id v96 = a11;
    uint64_t v79 = a10;
    uint64_t v77 = ~v28;
    unint64_t v78 = ~v81;
    unint64_t v41 = v105;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    unint64_t v81 = v41;
    swift_unknownObjectRetain();
    uint64_t v42 = v97;
    uint64_t v43 = sub_190B76FA8();
    os_log_type_t v44 = sub_190B77588();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = swift_slowAlloc();
      uint64_t v76 = v28;
      uint64_t v46 = v45;
      uint64_t v47 = swift_slowAlloc();
      aBlocuint64_t k = v47;
      *(_DWORD *)uint64_t v46 = 136446466;
      unint64_t v48 = v104;
      swift_bridgeObjectRetain();
      uint64_t v105 = sub_190B21150(v33, v48, &aBlock);
      sub_190B77648();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v46 + 12) = 2082;
      LOBYTE(v4_Block_object_dispose(&STACK[0x228], 8) = v44;
      unint64_t v49 = v103;
      swift_bridgeObjectRetain();
      uint64_t v105 = sub_190B21150(v101, v49, &aBlock);
      sub_190B77648();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1909E3000, v43, (os_log_type_t)v48, "synchronize() will synchronize extension %{public}s for %{public}s app", (uint8_t *)v46, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x192FD42A0](v47, -1, -1);
      uint64_t v50 = v46;
      uint64_t v28 = v76;
      MEMORY[0x192FD42A0](v50, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    unint64_t v58 = v90;
    uint64_t v59 = v93;
    v88(v90, v42, v93);
    uint64_t v60 = v99;
    uint64_t v61 = v102;
    v86(v99, v98, v102);
    uint64_t v62 = (v28 + 40) & v77;
    unint64_t v63 = (v62 + v85) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v64 = (v63 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v65 = (unint64_t)&v82[v64] & v78;
    uint64_t v66 = (char *)swift_allocObject();
    uint64_t v67 = v79;
    *((void *)v66 + 2) = a9;
    *((void *)v66 + 3) = v67;
    *((void *)v66 + 4) = v96;
    v84(&v66[v62], v58, v59);
    id v68 = (uint64_t *)&v66[v63];
    unint64_t v69 = v103;
    unint64_t v70 = v104;
    *id v68 = v100;
    v68[1] = v70;
    uint64_t v71 = &v66[v64];
    *(void *)uint64_t v71 = v101;
    *((void *)v71 + 1) = v69;
    v80(&v66[v65], v60, v61);
    long long v110 = sub_190B4441C;
    uint64_t v111 = v66;
    aBlocuint64_t k = MEMORY[0x1E4F143A8];
    uint64_t v107 = 1107296256;
    id v108 = sub_190B32C94;
    id v109 = &block_descriptor_196;
    uint64_t v72 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v73 = a9;
    swift_bridgeObjectRetain();
    swift_release();
    objc_msgSend((id)v81, sel_synchronizeUsing_reply_, v95, v72);
    _Block_release(v72);
    return swift_unknownObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    id v51 = sub_190B76FA8();
    os_log_type_t v52 = sub_190B77578();
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v53 = swift_slowAlloc();
      unint64_t v54 = v103;
      uint64_t v55 = v53;
      uint64_t v56 = swift_slowAlloc();
      aBlocuint64_t k = v56;
      *(_DWORD *)uint64_t v55 = 136446466;
      unint64_t v57 = v104;
      swift_bridgeObjectRetain();
      uint64_t v105 = sub_190B21150(v33, v57, &aBlock);
      sub_190B77648();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v55 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v105 = sub_190B21150(v101, v54, &aBlock);
      sub_190B77648();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1909E3000, v51, v52, "synchronize() failed due to some XPC connection error with extension %{public}s for %{public}s app, extension proxy might not conform to CNContactProviderExtensionXPCProtocol.", (uint8_t *)v55, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x192FD42A0](v56, -1, -1);
      MEMORY[0x192FD42A0](v55, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    type metadata accessor for CNError(0);
    uint64_t v105 = 1;
    sub_190B41258(MEMORY[0x1E4FBC860]);
    sub_190B43A10();
    sub_190B76D48();
    uint64_t v105 = aBlock;
    return sub_190B773F8();
  }
}

void sub_190B327F4(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_190B3285C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, unint64_t a9)
{
  sub_190B43A84(a3, a4);
  if (a1)
  {
    id v13 = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v14 = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v15 = a1;
    uint64_t v16 = sub_190B76FA8();
    os_log_type_t v17 = sub_190B77578();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v28 = v19;
      *(_DWORD *)uint64_t v18 = 136446722;
      swift_bridgeObjectRetain();
      sub_190B21150(a6, a7, &v28);
      sub_190B77648();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v18 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_190B21150(a8, a9, &v28);
      sub_190B77648();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v18 + 22) = 2082;
      id v20 = a1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5B78);
      uint64_t v21 = sub_190B771C8();
      sub_190B21150(v21, v22, &v28);
      sub_190B77648();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1909E3000, v16, v17, "synchronize() failed to synchronize extension %{public}s for %{public}s app, error = %{public}s", (uint8_t *)v18, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x192FD42A0](v19, -1, -1);
      MEMORY[0x192FD42A0](v18, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    uint64_t v28 = (uint64_t)a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5D00);
    return sub_190B773F8();
  }
  else
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v23 = sub_190B76FA8();
    os_log_type_t v24 = sub_190B77588();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v28 = v26;
      *(_DWORD *)uint64_t v25 = 136446466;
      swift_bridgeObjectRetain();
      sub_190B21150(a6, a7, &v28);
      sub_190B77648();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v25 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_190B21150(a8, a9, &v28);
      sub_190B77648();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1909E3000, v23, v24, "synchronize() did synchronize extension %{public}s for %{public}s app", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x192FD42A0](v26, -1, -1);
      MEMORY[0x192FD42A0](v25, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5D00);
    return sub_190B77408();
  }
}

void sub_190B32C94(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

BOOL sub_190B32D00(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)sub_190B76D58();
  id v4 = objc_msgSend(v3, sel_domain);
  uint64_t v5 = sub_190B77168();
  uint64_t v7 = v6;

  if (v5 == *(void *)(a2 + OBJC_IVAR____TtC8Contacts28CNContactProviderSupportHost_ContactProviderErrorDomain)
    && v7 == *(void *)(a2 + OBJC_IVAR____TtC8Contacts28CNContactProviderSupportHost_ContactProviderErrorDomain + 8))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = sub_190B77998();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0)
    {

      return 0;
    }
  }
  if (objc_msgSend(v3, sel_code) == (id)1003)
  {

    return 1;
  }
  else
  {
    id v11 = objc_msgSend(v3, sel_code);

    return v11 == (id)1004;
  }
}

uint64_t sub_190B32F74(void *a1, int a2, void *aBlock, void *a4)
{
  v4[2] = a1;
  v4[3] = a4;
  v4[4] = _Block_copy(aBlock);
  uint64_t v7 = sub_190B77168();
  uint64_t v9 = v8;
  v4[5] = v8;
  id v10 = a1;
  a4;
  id v11 = (void *)swift_task_alloc();
  void v4[6] = v11;
  *id v11 = v4;
  v11[1] = sub_190B33060;
  return sub_190B310B8((uint64_t)v10, v7, v9);
}

uint64_t sub_190B33060()
{
  uint64_t v2 = v0;
  uint64_t v4 = *v1;
  uint64_t v3 = *v1;
  uint64_t v5 = *(void **)(*v1 + 24);
  uint64_t v6 = *(void **)(*v1 + 16);
  uint64_t v7 = *v1;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(v3 + 32);
  if (v2)
  {
    uint64_t v9 = (void *)sub_190B76D58();

    (*(void (**)(uint64_t, void *))(v8 + 16))(v8, v9);
  }
  else
  {
    (*(void (**)(uint64_t, void))(v8 + 16))(v8, 0);
  }
  _Block_release(*(const void **)(v4 + 32));
  id v10 = *(uint64_t (**)(void))(v7 + 8);
  return v10();
}

uint64_t sub_190B33220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[12] = a4;
  v5[13] = v4;
  v5[10] = a2;
  v5[11] = a3;
  v5[9] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3BB8);
  v5[14] = swift_task_alloc();
  v5[15] = swift_task_alloc();
  uint64_t v6 = sub_190B76F98();
  v5[16] = v6;
  v5[17] = *(void *)(v6 - 8);
  v5[18] = swift_task_alloc();
  uint64_t v7 = sub_190B76FC8();
  v5[19] = v7;
  v5[20] = *(void *)(v7 - 8);
  v5[21] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_190B33384, 0, 0);
}

id sub_190B33384()
{
  uint64_t v60 = v0;
  if (qword_1E92A5838 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[21];
  uint64_t v3 = v0[19];
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1E92A8498);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v2, v4, v3);
  if (qword_1E92A3BD0 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_1E92A3BC0;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_190B76FA8();
  os_log_type_t v7 = sub_190B77588();
  BOOL v8 = os_log_type_enabled(v6, v7);
  unint64_t v9 = v0[12];
  if (v8)
  {
    uint64_t v10 = v0[9];
    unint64_t v11 = v0[10];
    uint64_t v56 = v0[11];
    uint64_t v12 = swift_slowAlloc();
    uint64_t v57 = swift_slowAlloc();
    v59[0] = v57;
    *(_DWORD *)uint64_t v12 = 136315394;
    swift_bridgeObjectRetain();
    v0[7] = sub_190B21150(v10, v11, v59);
    sub_190B77648();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 12) = 2082;
    swift_bridgeObjectRetain();
    v0[8] = sub_190B21150(v56, v9, v59);
    sub_190B77648();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1909E3000, v6, v7, "invalidateExtension(for: %s, bundleIdentifier: %{public}s)", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x192FD42A0](v57, -1, -1);
    MEMORY[0x192FD42A0](v12, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v14 = v0[11];
  uint64_t v13 = v0[12];
  id v15 = *(os_unfair_lock_s **)(v5 + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_lock);
  uint64_t v16 = (void *)swift_task_alloc();
  v16[2] = v5;
  v16[3] = v14;
  v16[4] = v13;
  uint64_t v17 = swift_task_alloc();
  *(void *)(v17 + 16) = sub_190B446F0;
  *(void *)(v17 + 24) = v16;
  v15 += 4;
  os_unfair_lock_lock(v15);
  sub_190B446C0();
  os_unfair_lock_unlock(v15);
  swift_task_dealloc();
  uint64_t v18 = v0[16];
  uint64_t v19 = v0[17];
  uint64_t v21 = v0[14];
  uint64_t v20 = v0[15];
  swift_task_dealloc();
  sub_190B41594(v21, v20);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v20, 1, v18) == 1)
  {
    sub_190B23144(v0[15], &qword_1E92A3BB8);
    swift_bridgeObjectRetain_n();
    unint64_t v22 = sub_190B76FA8();
    os_log_type_t v23 = sub_190B77578();
    BOOL v24 = os_log_type_enabled(v22, v23);
    unint64_t v25 = v0[12];
    if (v24)
    {
      uint64_t v26 = v0[11];
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      v59[0] = v28;
      *(_DWORD *)uint64_t v27 = 136446210;
      swift_bridgeObjectRetain();
      v0[2] = sub_190B21150(v26, v25, v59);
      sub_190B77648();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1909E3000, v22, v23, "invalidateExtension() did not find extension for %{public}s", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FD42A0](v28, -1, -1);
      MEMORY[0x192FD42A0](v27, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    id result = objc_msgSend(self, sel_errorWithCode_, 106);
    if (!result)
    {
      __break(1u);
      return result;
    }
    swift_willThrow();
    (*(void (**)(void, void))(v0[20] + 8))(v0[21], v0[19]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v39 = (uint64_t (*)(void))v0[1];
    goto LABEL_25;
  }
  (*(void (**)(void, void, void))(v0[17] + 32))(v0[18], v0[15], v0[16]);
  uint64_t v29 = _s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0();
  unint64_t v31 = v30;
  v0[22] = v29;
  v0[23] = v30;
  uint64_t v32 = _AppExtensionIdentity.appDisplayName.getter();
  unint64_t v34 = v33;
  v0[24] = v32;
  v0[25] = v33;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  unint64_t v35 = sub_190B76FA8();
  os_log_type_t v36 = sub_190B77588();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = swift_slowAlloc();
    uint64_t v58 = swift_slowAlloc();
    v59[0] = v58;
    *(_DWORD *)uint64_t v37 = 136446466;
    swift_bridgeObjectRetain();
    v0[5] = sub_190B21150(v29, v31, v59);
    sub_190B77648();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v37 + 12) = 2082;
    swift_bridgeObjectRetain();
    v0[6] = sub_190B21150(v32, v34, v59);
    sub_190B77648();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1909E3000, v35, v36, "invalidateExtension() will invalidate extension %{public}s for %{public}s app", (uint8_t *)v37, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x192FD42A0](v58, -1, -1);
    MEMORY[0x192FD42A0](v37, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  id v40 = (void *)sub_190B3E5FC();
  if (!v40 || (v41 = v40, unsigned int v42 = objc_msgSend(v40, sel_isEnabled), v41, !v42))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v46 = sub_190B76FA8();
    os_log_type_t v47 = sub_190B77588();
    BOOL v48 = os_log_type_enabled(v46, v47);
    uint64_t v50 = v0[20];
    uint64_t v49 = v0[21];
    uint64_t v52 = v0[18];
    uint64_t v51 = v0[19];
    uint64_t v53 = v0[16];
    uint64_t v54 = v0[17];
    if (v48)
    {
      uint64_t v55 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v55 = 0;
      _os_log_impl(&dword_1909E3000, v46, v47, "invalidateExtension() did not invalidate as extension is disabled", v55, 2u);
      MEMORY[0x192FD42A0](v55, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v52, v53);
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v49, v51);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v39 = (uint64_t (*)(void))v0[1];
LABEL_25:
    return (id)v39();
  }
  uint64_t v43 = (void *)swift_task_alloc();
  v0[26] = v43;
  void *v43 = v0;
  v43[1] = sub_190B33C30;
  uint64_t v45 = v0[9];
  uint64_t v44 = v0[10];
  return (id)sub_190B3F5F8(v45, v44, v29, v31);
}

uint64_t sub_190B33C30()
{
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_190B34008;
  }
  else
  {
    uint64_t v2 = sub_190B33D58;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_190B33D58()
{
  BOOL v24 = v0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_190B76FA8();
  os_log_type_t v2 = sub_190B77588();
  if (os_log_type_enabled(v1, v2))
  {
    unint64_t v3 = v0[25];
    uint64_t v5 = v0[22];
    unint64_t v4 = v0[23];
    uint64_t v21 = v0[19];
    uint64_t v22 = v0[21];
    uint64_t v6 = v0[17];
    uint64_t v19 = v0[18];
    uint64_t v20 = v0[20];
    uint64_t v17 = v0[24];
    uint64_t v18 = v0[16];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v23 = v8;
    *(_DWORD *)uint64_t v7 = 136446466;
    swift_bridgeObjectRetain();
    v0[3] = sub_190B21150(v5, v4, &v23);
    sub_190B77648();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v7 + 12) = 2082;
    swift_bridgeObjectRetain();
    v0[4] = sub_190B21150(v17, v3, &v23);
    sub_190B77648();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1909E3000, v1, v2, "invalidateExtension() did invalidate extension %{public}s for %{public}s app", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x192FD42A0](v8, -1, -1);
    MEMORY[0x192FD42A0](v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v19, v18);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v21);
  }
  else
  {
    uint64_t v10 = v0[20];
    uint64_t v9 = v0[21];
    uint64_t v12 = v0[18];
    uint64_t v11 = v0[19];
    uint64_t v13 = v0[16];
    uint64_t v14 = v0[17];

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_190B34008()
{
  (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
  (*(void (**)(void, void))(v0[20] + 8))(v0[21], v0[19]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_190B34250(int a1, int a2, void *aBlock, void *a4)
{
  v4[2] = a4;
  v4[3] = _Block_copy(aBlock);
  uint64_t v6 = sub_190B77168();
  uint64_t v8 = v7;
  v4[4] = v7;
  uint64_t v9 = sub_190B77168();
  uint64_t v11 = v10;
  v4[5] = v10;
  a4;
  uint64_t v12 = (void *)swift_task_alloc();
  void v4[6] = v12;
  *uint64_t v12 = v4;
  v12[1] = sub_190B446E8;
  return sub_190B33220(v6, v8, v9, v11);
}

uint64_t sub_190B3434C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[15] = a4;
  v5[16] = v4;
  v5[13] = a2;
  v5[14] = a3;
  v5[12] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3BB8);
  v5[17] = swift_task_alloc();
  v5[18] = swift_task_alloc();
  uint64_t v6 = sub_190B76F98();
  v5[19] = v6;
  v5[20] = *(void *)(v6 - 8);
  v5[21] = swift_task_alloc();
  uint64_t v7 = sub_190B76FC8();
  v5[22] = v7;
  v5[23] = *(void *)(v7 - 8);
  v5[24] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_190B344B0, 0, 0);
}

id sub_190B344B0()
{
  uint64_t v60 = v0;
  if (qword_1E92A5838 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[24];
  uint64_t v3 = v0[22];
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1E92A8498);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v2, v4, v3);
  if (qword_1E92A3BD0 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_1E92A3BC0;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_190B76FA8();
  os_log_type_t v7 = sub_190B77588();
  BOOL v8 = os_log_type_enabled(v6, v7);
  unint64_t v9 = v0[15];
  if (v8)
  {
    uint64_t v10 = v0[12];
    unint64_t v11 = v0[13];
    uint64_t v56 = v0[14];
    uint64_t v12 = swift_slowAlloc();
    uint64_t v57 = swift_slowAlloc();
    v59[0] = v57;
    *(_DWORD *)uint64_t v12 = 136315394;
    swift_bridgeObjectRetain();
    v0[10] = sub_190B21150(v10, v11, v59);
    sub_190B77648();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 12) = 2082;
    swift_bridgeObjectRetain();
    v0[11] = sub_190B21150(v56, v9, v59);
    sub_190B77648();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1909E3000, v6, v7, "resetEnumeration(for: %s, bundleIdentifier: %{public}s)", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x192FD42A0](v57, -1, -1);
    MEMORY[0x192FD42A0](v12, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v14 = v0[14];
  uint64_t v13 = v0[15];
  id v15 = *(os_unfair_lock_s **)(v5 + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_lock);
  uint64_t v16 = (void *)swift_task_alloc();
  v16[2] = v5;
  v16[3] = v14;
  v16[4] = v13;
  uint64_t v17 = swift_task_alloc();
  *(void *)(v17 + 16) = sub_190B446F0;
  *(void *)(v17 + 24) = v16;
  v15 += 4;
  os_unfair_lock_lock(v15);
  sub_190B446C0();
  os_unfair_lock_unlock(v15);
  swift_task_dealloc();
  uint64_t v18 = v0[19];
  uint64_t v19 = v0[20];
  uint64_t v21 = v0[17];
  uint64_t v20 = v0[18];
  swift_task_dealloc();
  sub_190B41594(v21, v20);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v20, 1, v18) == 1)
  {
    sub_190B23144(v0[18], &qword_1E92A3BB8);
    swift_bridgeObjectRetain_n();
    uint64_t v22 = sub_190B76FA8();
    os_log_type_t v23 = sub_190B77578();
    BOOL v24 = os_log_type_enabled(v22, v23);
    unint64_t v25 = v0[15];
    if (v24)
    {
      uint64_t v26 = v0[14];
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      v59[0] = v28;
      *(_DWORD *)uint64_t v27 = 136446210;
      swift_bridgeObjectRetain();
      v0[2] = sub_190B21150(v26, v25, v59);
      sub_190B77648();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1909E3000, v22, v23, "resetEnumeration() did not find extension for %{public}s", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FD42A0](v28, -1, -1);
      MEMORY[0x192FD42A0](v27, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    id result = objc_msgSend(self, sel_errorWithCode_, 106);
    if (!result)
    {
      __break(1u);
      return result;
    }
    swift_willThrow();
    (*(void (**)(void, void))(v0[23] + 8))(v0[24], v0[22]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v39 = (uint64_t (*)(void))v0[1];
    goto LABEL_25;
  }
  (*(void (**)(void, void, void))(v0[20] + 32))(v0[21], v0[18], v0[19]);
  uint64_t v29 = _s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0();
  unint64_t v31 = v30;
  v0[25] = v29;
  v0[26] = v30;
  uint64_t v32 = _AppExtensionIdentity.appDisplayName.getter();
  unint64_t v34 = v33;
  v0[27] = v32;
  v0[28] = v33;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  unint64_t v35 = sub_190B76FA8();
  os_log_type_t v36 = sub_190B77588();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = swift_slowAlloc();
    uint64_t v58 = swift_slowAlloc();
    v59[0] = v58;
    *(_DWORD *)uint64_t v37 = 136446466;
    swift_bridgeObjectRetain();
    v0[8] = sub_190B21150(v29, v31, v59);
    sub_190B77648();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v37 + 12) = 2082;
    swift_bridgeObjectRetain();
    v0[9] = sub_190B21150(v32, v34, v59);
    sub_190B77648();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1909E3000, v35, v36, "resetEnumeration() will reset extension %{public}s for %{public}s app", (uint8_t *)v37, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x192FD42A0](v58, -1, -1);
    MEMORY[0x192FD42A0](v37, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  id v40 = (void *)sub_190B3E5FC();
  if (!v40 || (v41 = v40, unsigned int v42 = objc_msgSend(v40, sel_isEnabled), v41, !v42))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v46 = sub_190B76FA8();
    os_log_type_t v47 = sub_190B77588();
    BOOL v48 = os_log_type_enabled(v46, v47);
    uint64_t v50 = v0[23];
    uint64_t v49 = v0[24];
    uint64_t v52 = v0[21];
    uint64_t v51 = v0[22];
    uint64_t v53 = v0[19];
    uint64_t v54 = v0[20];
    if (v48)
    {
      uint64_t v55 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v55 = 0;
      _os_log_impl(&dword_1909E3000, v46, v47, "resetEnumeration() did not reset as extension is disabled", v55, 2u);
      MEMORY[0x192FD42A0](v55, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v52, v53);
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v49, v51);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v39 = (uint64_t (*)(void))v0[1];
LABEL_25:
    return (id)v39();
  }
  uint64_t v43 = (void *)swift_task_alloc();
  v0[29] = v43;
  void *v43 = v0;
  v43[1] = sub_190B34D5C;
  uint64_t v45 = v0[12];
  uint64_t v44 = v0[13];
  return (id)sub_190B3F5F8(v45, v44, v29, v31);
}

uint64_t sub_190B34D5C()
{
  *(void *)(*(void *)v1 + 240) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_190B351C4;
  }
  else {
    uint64_t v2 = sub_190B34E70;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_190B34E70()
{
  uint64_t v29 = v0;
  uint64_t v1 = v0[30];
  sub_190B35970(v0[14], v0[15]);
  if (v1)
  {
    uint64_t v3 = v0[20];
    uint64_t v2 = v0[21];
    uint64_t v4 = v0[19];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    (*(void (**)(void, void))(v0[23] + 8))(v0[24], v0[22]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_190B76FA8();
    os_log_type_t v7 = sub_190B77588();
    BOOL v8 = os_log_type_enabled(v6, v7);
    unint64_t v9 = v0[28];
    if (v8)
    {
      unint64_t v10 = v0[26];
      uint64_t v21 = v0[27];
      uint64_t v11 = v0[25];
      uint64_t v26 = v0[22];
      uint64_t v27 = v0[24];
      uint64_t v24 = v0[21];
      uint64_t v25 = v0[23];
      uint64_t v22 = v0[20];
      uint64_t v23 = v0[19];
      uint64_t v12 = swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      v28[0] = v13;
      *(_DWORD *)uint64_t v12 = 136446466;
      swift_bridgeObjectRetain();
      v0[3] = sub_190B21150(v11, v10, v28);
      sub_190B77648();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v12 + 12) = 2082;
      swift_bridgeObjectRetain();
      v0[4] = sub_190B21150(v21, v9, v28);
      sub_190B77648();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1909E3000, v6, v7, "resetEnumeration() did reset extension %{public}s for %{public}s app", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x192FD42A0](v13, -1, -1);
      MEMORY[0x192FD42A0](v12, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v23);
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v27, v26);
    }
    else
    {
      uint64_t v15 = v0[23];
      uint64_t v14 = v0[24];
      uint64_t v17 = v0[21];
      uint64_t v16 = v0[22];
      uint64_t v18 = v0[19];
      uint64_t v19 = v0[20];

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
  }
  return v5();
}

uint64_t sub_190B351C4()
{
  uint64_t v39 = v0;
  uint64_t v1 = (void *)v0[30];
  swift_bridgeObjectRetain();
  id v2 = v1;
  swift_bridgeObjectRetain();
  id v3 = v1;
  uint64_t v4 = sub_190B76FA8();
  os_log_type_t v5 = sub_190B77578();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[30];
    uint64_t v8 = v0[27];
    unint64_t v7 = v0[28];
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    v38[0] = v10;
    *(_DWORD *)uint64_t v9 = 136446466;
    swift_bridgeObjectRetain();
    v0[5] = sub_190B21150(v8, v7, v38);
    sub_190B77648();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2082;
    v0[6] = v6;
    id v11 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5B78);
    uint64_t v12 = sub_190B771C8();
    v0[7] = sub_190B21150(v12, v13, v38);
    sub_190B77648();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1909E3000, v4, v5, "resetEnumeration() continuing to reset although failed to invalidate %{public}s app, error = %{public}s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x192FD42A0](v10, -1, -1);
    MEMORY[0x192FD42A0](v9, -1, -1);
  }
  else
  {
    uint64_t v14 = (void *)v0[30];

    swift_bridgeObjectRelease_n();
  }
  sub_190B35970(v0[14], v0[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_190B76FA8();
  os_log_type_t v16 = sub_190B77588();
  BOOL v17 = os_log_type_enabled(v15, v16);
  unint64_t v18 = v0[28];
  if (v17)
  {
    unint64_t v19 = v0[26];
    uint64_t v31 = v0[27];
    uint64_t v20 = v0[25];
    uint64_t v36 = v0[22];
    uint64_t v37 = v0[24];
    uint64_t v34 = v0[21];
    uint64_t v35 = v0[23];
    uint64_t v32 = v0[20];
    uint64_t v33 = v0[19];
    uint64_t v21 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    v38[0] = v22;
    *(_DWORD *)uint64_t v21 = 136446466;
    swift_bridgeObjectRetain();
    v0[3] = sub_190B21150(v20, v19, v38);
    sub_190B77648();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v21 + 12) = 2082;
    swift_bridgeObjectRetain();
    v0[4] = sub_190B21150(v31, v18, v38);
    sub_190B77648();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1909E3000, v15, v16, "resetEnumeration() did reset extension %{public}s for %{public}s app", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x192FD42A0](v22, -1, -1);
    MEMORY[0x192FD42A0](v21, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v34, v33);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v37, v36);
  }
  else
  {
    uint64_t v24 = v0[23];
    uint64_t v23 = v0[24];
    uint64_t v26 = v0[21];
    uint64_t v25 = v0[22];
    uint64_t v27 = v0[19];
    uint64_t v28 = v0[20];

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v29 = (uint64_t (*)(void))v0[1];
  return v29();
}

uint64_t sub_190B35874(int a1, int a2, void *aBlock, void *a4)
{
  v4[2] = a4;
  v4[3] = _Block_copy(aBlock);
  uint64_t v6 = sub_190B77168();
  uint64_t v8 = v7;
  v4[4] = v7;
  uint64_t v9 = sub_190B77168();
  uint64_t v11 = v10;
  v4[5] = v10;
  a4;
  uint64_t v12 = (void *)swift_task_alloc();
  void v4[6] = v12;
  *uint64_t v12 = v4;
  v12[1] = sub_190B446E8;
  return sub_190B3434C(v6, v8, v9, v11);
}

void sub_190B35970(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3BB8);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v56 - v9;
  uint64_t v11 = sub_190B76F98();
  uint64_t v64 = *(void *)(v11 - 8);
  uint64_t v65 = v11;
  MEMORY[0x1F4188790](v11);
  unint64_t v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_190B76FC8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  BOOL v17 = (os_unfair_lock_s *)((char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1E92A5838 != -1) {
    swift_once();
  }
  uint64_t v18 = __swift_project_value_buffer(v14, (uint64_t)qword_1E92A8498);
  uint64_t v62 = v14;
  uint64_t v63 = v15;
  unint64_t v19 = *(uint64_t (**)(os_unfair_lock_s *, uint64_t, uint64_t))(v15 + 16);
  uint64_t v66 = v17;
  uint64_t v20 = v19(v17, v18, v14);
  if (qword_1E92A3BD0 != -1) {
    uint64_t v20 = swift_once();
  }
  uint64_t v21 = MEMORY[0x1F4188790](v20);
  *(&v56 - 4) = v22;
  *(&v56 - 3) = (char *)a1;
  *(&v56 - 2) = (char *)a2;
  MEMORY[0x1F4188790](v21);
  *(&v56 - 2) = (char *)sub_190B446F0;
  *(&v56 - 1) = v23;
  uint64_t v25 = v24 + 4;
  os_unfair_lock_lock(v24 + 4);
  sub_190B446C0();
  if (v2)
  {
LABEL_22:
    os_unfair_lock_unlock(v25);
    __break(1u);
    return;
  }
  os_unfair_lock_unlock(v25);
  sub_190B41594((uint64_t)v8, (uint64_t)v10);
  uint64_t v27 = v64;
  uint64_t v26 = v65;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v10, 1, v65) == 1)
  {
    sub_190B23144((uint64_t)v10, &qword_1E92A3BB8);
    swift_bridgeObjectRetain_n();
    uint64_t v28 = sub_190B76FA8();
    os_log_type_t v29 = sub_190B77578();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      uint64_t v68 = v31;
      *(_DWORD *)uint64_t v30 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v67 = sub_190B21150(a1, a2, &v68);
      sub_190B77648();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1909E3000, v28, v29, "resetProviderContainer() did not find extension for %{public}s", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FD42A0](v31, -1, -1);
      MEMORY[0x192FD42A0](v30, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v39 = v62;
    uint64_t v40 = v63;
    id v41 = objc_msgSend(self, sel_errorWithCode_, 106);
    uint64_t v25 = v66;
    if (v41)
    {
      swift_willThrow();
      (*(void (**)(os_unfair_lock_s *, uint64_t))(v40 + 8))(v25, v39);
      return;
    }
    __break(1u);
    goto LABEL_22;
  }
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v13, v10, v26);
  uint64_t v58 = _s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0();
  unint64_t v33 = v32;
  uint64_t v59 = _AppExtensionIdentity.appDisplayName.getter();
  unint64_t v35 = v34;
  uint64_t v36 = (void *)sub_190B3E5FC();
  uint64_t v37 = v66;
  if (v36)
  {
    uint64_t v38 = v36;
    unsigned int v57 = objc_msgSend(v36, sel_isEnabled);
  }
  else
  {
    unsigned int v57 = 0;
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  unsigned int v42 = sub_190B76FA8();
  os_log_type_t v43 = sub_190B77588();
  BOOL v44 = os_log_type_enabled(v42, v43);
  unint64_t v60 = v35;
  if (v44)
  {
    uint64_t v45 = swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    uint64_t v68 = v46;
    *(_DWORD *)uint64_t v45 = 136446466;
    uint64_t v56 = v13;
    swift_bridgeObjectRetain();
    uint64_t v67 = sub_190B21150(v58, v33, &v68);
    sub_190B77648();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v45 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v67 = sub_190B21150(v59, v35, &v68);
    sub_190B77648();
    unint64_t v13 = v56;
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1909E3000, v42, v43, "resetProviderContainer() will reset provider container for %{public}s for %{public}s app", (uint8_t *)v45, 0x16u);
    swift_arrayDestroy();
    uint64_t v47 = v46;
    uint64_t v37 = v66;
    MEMORY[0x192FD42A0](v47, -1, -1);
    MEMORY[0x192FD42A0](v45, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v48 = v63;
  sub_190B3DCDC();
  sub_190B3D470((uint64_t)v13, v57);
  swift_bridgeObjectRetain();
  unint64_t v49 = v60;
  swift_bridgeObjectRetain();
  uint64_t v50 = sub_190B76FA8();
  os_log_type_t v51 = sub_190B77588();
  if (os_log_type_enabled(v50, v51))
  {
    uint64_t v52 = swift_slowAlloc();
    os_log_t v61 = v50;
    uint64_t v53 = v52;
    uint64_t v54 = swift_slowAlloc();
    uint64_t v68 = v54;
    *(_DWORD *)uint64_t v53 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v67 = sub_190B21150(v58, v33, &v68);
    sub_190B77648();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v53 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v67 = sub_190B21150(v59, v49, &v68);
    sub_190B77648();
    swift_bridgeObjectRelease_n();
    os_log_t v55 = v61;
    _os_log_impl(&dword_1909E3000, v61, v51, "resetProviderContainer() did reset provider container for %{public}s for %{public}s app", (uint8_t *)v53, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x192FD42A0](v54, -1, -1);
    MEMORY[0x192FD42A0](v53, -1, -1);

    (*(void (**)(char *, uint64_t))(v64 + 8))(v13, v65);
    (*(void (**)(os_unfair_lock_s *, uint64_t))(v63 + 8))(v66, v62);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    (*(void (**)(char *, uint64_t))(v64 + 8))(v13, v65);
    (*(void (**)(os_unfair_lock_s *, uint64_t))(v48 + 8))(v37, v62);
  }
}

uint64_t sub_190B36268(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3BB8);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v46 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v42 - v7;
  uint64_t v48 = sub_190B76F98();
  uint64_t v9 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  uint64_t v45 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_190B76FC8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E92A5838 != -1) {
    swift_once();
  }
  uint64_t v47 = v9;
  uint64_t v15 = __swift_project_value_buffer(v11, (uint64_t)qword_1E92A8498);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  if (qword_1E92A3BD0 != -1) {
    swift_once();
  }
  uint64_t v16 = qword_1E92A3BC0;
  swift_bridgeObjectRetain_n();
  BOOL v17 = sub_190B76FA8();
  os_log_type_t v18 = sub_190B77588();
  BOOL v19 = os_log_type_enabled(v17, v18);
  uint64_t v49 = a1;
  if (v19)
  {
    os_log_type_t v43 = v14;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v44 = v11;
    uint64_t v21 = (uint8_t *)v20;
    uint64_t v22 = swift_slowAlloc();
    v51[0] = v22;
    *(_DWORD *)uint64_t v21 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_190B21150(v49, a2, v51);
    uint64_t v14 = v43;
    sub_190B77648();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1909E3000, v17, v18, "isExtensionEnabled(with: %{public}s)", v21, 0xCu);
    swift_arrayDestroy();
    uint64_t v23 = v22;
    a1 = v49;
    MEMORY[0x192FD42A0](v23, -1, -1);
    uint64_t v24 = v21;
    uint64_t v11 = v44;
    MEMORY[0x192FD42A0](v24, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v26 = MEMORY[0x1F4188790](v25);
  *(&v42 - 4) = v16;
  *(&v42 - 3) = a1;
  *(&v42 - 2) = a2;
  MEMORY[0x1F4188790](v26);
  *(&v42 - 2) = (uint64_t)sub_190B446F0;
  *(&v42 - 1) = v27;
  os_log_type_t v29 = v28 + 4;
  os_unfair_lock_lock(v28 + 4);
  uint64_t v30 = (uint64_t)v46;
  sub_190B446C0();
  os_unfair_lock_unlock(v29);
  sub_190B41594(v30, (uint64_t)v8);
  uint64_t v32 = v47;
  uint64_t v31 = v48;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v8, 1, v48) == 1)
  {
    sub_190B23144((uint64_t)v8, &qword_1E92A3BB8);
    swift_bridgeObjectRetain_n();
    unint64_t v33 = sub_190B76FA8();
    os_log_type_t v34 = sub_190B77578();
    if (os_log_type_enabled(v33, v34))
    {
      unint64_t v35 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      v51[0] = v36;
      *(_DWORD *)unint64_t v35 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v50 = sub_190B21150(v49, a2, v51);
      sub_190B77648();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1909E3000, v33, v34, "isExtensionEnabled() did not find extension for %{public}s", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FD42A0](v36, -1, -1);
      MEMORY[0x192FD42A0](v35, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    sub_190B23474(0, &qword_1E92A3E48);
    uint64_t v40 = sub_190B775D8();
  }
  else
  {
    uint64_t v37 = v45;
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v45, v8, v31);
    uint64_t v38 = (void *)sub_190B3E5FC();
    if (v38)
    {
      uint64_t v39 = v38;
      objc_msgSend(v38, sel_isEnabled);
    }
    uint64_t v40 = sub_190B773D8();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v37, v31);
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return v40;
}

uint64_t sub_190B3692C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[10] = a3;
  v4[11] = v3;
  v4[8] = a1;
  v4[9] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3BB8);
  v4[12] = swift_task_alloc();
  v4[13] = swift_task_alloc();
  uint64_t v5 = sub_190B76F98();
  v4[14] = v5;
  v4[15] = *(void *)(v5 - 8);
  v4[16] = swift_task_alloc();
  uint64_t v6 = sub_190B76FC8();
  v4[17] = v6;
  v4[18] = *(void *)(v6 - 8);
  v4[19] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_190B36A8C, 0, 0);
}

void sub_190B36A8C()
{
  uint64_t v83 = v0;
  if (qword_1E92A5838 != -1) {
    swift_once();
  }
  id v1 = (id)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v4 = *(void *)(v0 + 136);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_1E92A8498);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  if (qword_1E92A3BD0 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_1E92A3BC0;
  id v7 = *(id *)(v0 + 64);
  swift_bridgeObjectRetain_n();
  id v8 = v7;
  uint64_t v9 = sub_190B76FA8();
  os_log_type_t v10 = sub_190B77588();
  BOOL v11 = os_log_type_enabled(v9, v10);
  unint64_t v12 = *(void *)(v0 + 80);
  if (v11)
  {
    uint64_t v76 = *(void *)(v0 + 72);
    os_log_type_t typea = v10;
    uint64_t v13 = *(void **)(v0 + 64);
    uint64_t v81 = v6;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v78 = swift_slowAlloc();
    v82[0] = v78;
    *(_DWORD *)uint64_t v14 = 136446466;
    id v15 = objc_msgSend(v13, sel_domainIdentifier);
    uint64_t v16 = sub_190B77168();
    unint64_t v18 = v17;

    uint64_t v19 = v16;
    id v1 = (id)(v0 + 48);
    *(void *)(v0 + 4_Block_object_dispose(&STACK[0x228], 8) = sub_190B21150(v19, v18, v82);
    sub_190B77648();
    swift_bridgeObjectRelease();

    *(_WORD *)(v14 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 56) = sub_190B21150(v76, v12, v82);
    sub_190B77648();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1909E3000, v9, typea, "addDomain(domain: %{public}s, bundleIdentifier: %{public}s)", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x192FD42A0](v78, -1, -1);
    uint64_t v20 = v14;
    uint64_t v6 = v81;
    MEMORY[0x192FD42A0](v20, -1, -1);
  }
  else
  {
    uint64_t v21 = *(void **)(v0 + 64);

    swift_bridgeObjectRelease_n();
  }
  uint64_t v23 = *(void *)(v0 + 72);
  uint64_t v22 = *(void *)(v0 + 80);
  uint64_t v24 = *(os_unfair_lock_s **)(v6 + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_lock);
  uint64_t v25 = (void *)swift_task_alloc();
  v25[2] = v6;
  v25[3] = v23;
  v25[4] = v22;
  uint64_t v26 = swift_task_alloc();
  *(void *)(v26 + 16) = sub_190B446F0;
  *(void *)(v26 + 24) = v25;
  v24 += 4;
  os_unfair_lock_lock(v24);
  sub_190B446C0();
  os_unfair_lock_unlock(v24);
  swift_task_dealloc();
  uint64_t v27 = *(void *)(v0 + 112);
  uint64_t v28 = *(void *)(v0 + 120);
  uint64_t v30 = *(void *)(v0 + 96);
  uint64_t v29 = *(void *)(v0 + 104);
  swift_task_dealloc();
  sub_190B41594(v30, v29);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v29, 1, v27) != 1)
  {
    unint64_t v37 = 0xD000000000000016;
    (*(void (**)(void, void, void))(*(void *)(v0 + 120) + 32))(*(void *)(v0 + 128), *(void *)(v0 + 104), *(void *)(v0 + 112));
    uint64_t v38 = _AppExtensionIdentity.appDisplayName.getter();
    unint64_t v40 = v39;
    if (_s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0() == 0xD00000000000002BLL
      && v41 == 0x8000000190B9F210)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v43 = sub_190B77998();
      swift_bridgeObjectRelease();
      if ((v43 & 1) == 0)
      {
        unint64_t v37 = 0x6E776F6E6B6E75;
        uint64_t v62 = (void *)sub_190B76F88();
        if (v62
          && (uint64_t v63 = v62,
              id v64 = objc_msgSend(v62, sel_bundleIdentifier),
              v63,
              v64))
        {
          unint64_t v37 = sub_190B77168();
          unint64_t v44 = v65;
        }
        else
        {
          unint64_t v44 = 0xE700000000000000;
        }
LABEL_19:
        uint64_t v45 = (void *)sub_190B3E5FC();
        if (v45)
        {
          id v1 = v45;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v46 = sub_190B76FA8();
          os_log_type_t v47 = sub_190B77588();
          if (os_log_type_enabled(v46, v47))
          {
            uint64_t v77 = v38;
            unint64_t type = v40;
            uint64_t v48 = swift_slowAlloc();
            uint64_t v75 = swift_slowAlloc();
            v82[0] = v75;
            *(_DWORD *)uint64_t v48 = 136446722;
            id v49 = objc_msgSend(v1, sel_identifier);
            if (!v49)
            {
LABEL_34:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              __break(1u);
              return;
            }
            uint64_t v50 = v49;
            uint64_t v73 = *(void *)(v0 + 136);
            uint64_t v74 = *(void *)(v0 + 152);
            uint64_t v71 = *(void *)(v0 + 128);
            uint64_t v72 = *(void *)(v0 + 144);
            uint64_t v69 = *(void *)(v0 + 120);
            uint64_t v70 = *(void *)(v0 + 112);
            uint64_t v51 = sub_190B77168();
            unint64_t v53 = v52;

            *(void *)(v0 + 24) = sub_190B21150(v51, v53, v82);
            sub_190B77648();
            swift_bridgeObjectRelease();

            *(_WORD *)(v48 + 12) = 2082;
            swift_bridgeObjectRetain();
            *(void *)(v0 + 32) = sub_190B21150(v37, v44, v82);
            sub_190B77648();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v48 + 22) = 2082;
            swift_bridgeObjectRetain();
            *(void *)(v0 + 40) = sub_190B21150(v77, type, v82);
            sub_190B77648();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_1909E3000, v46, v47, "addDomain() found container already exists with identifier %{public}s and provider identifier %{public}s for %{public}s app", (uint8_t *)v48, 0x20u);
            swift_arrayDestroy();
            MEMORY[0x192FD42A0](v75, -1, -1);
            MEMORY[0x192FD42A0](v48, -1, -1);

            (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v71, v70);
            (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v74, v73);
          }
          else
          {
            os_log_t v55 = v46;
            uint64_t v57 = *(void *)(v0 + 144);
            uint64_t v56 = *(void *)(v0 + 152);
            uint64_t v58 = *(void *)(v0 + 128);
            uint64_t v59 = *(void *)(v0 + 136);
            uint64_t v60 = *(void *)(v0 + 112);
            uint64_t v61 = *(void *)(v0 + 120);

            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();

            (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v58, v60);
            (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v56, v59);
          }
        }
        else
        {
          uint64_t v54 = *(void *)(v0 + 128);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_190B3D470(v54, 0);
          uint64_t v67 = *(void *)(v0 + 144);
          uint64_t v66 = *(void *)(v0 + 152);
          uint64_t v68 = *(void *)(v0 + 136);
          (*(void (**)(void, void))(*(void *)(v0 + 120) + 8))(*(void *)(v0 + 128), *(void *)(v0 + 112));
          (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v66, v68);
        }
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v42 = *(void (**)(void))(v0 + 8);
        goto LABEL_30;
      }
    }
    unint64_t v44 = 0x8000000190B9F2B0;
    goto LABEL_19;
  }
  sub_190B23144(*(void *)(v0 + 104), &qword_1E92A3BB8);
  swift_bridgeObjectRetain_n();
  uint64_t v31 = sub_190B76FA8();
  os_log_type_t v32 = sub_190B77578();
  BOOL v33 = os_log_type_enabled(v31, v32);
  unint64_t v34 = *(void *)(v0 + 80);
  if (v33)
  {
    uint64_t v35 = *(void *)(v0 + 72);
    uint64_t v36 = (uint8_t *)swift_slowAlloc();
    id v1 = (id)swift_slowAlloc();
    v82[0] = (uint64_t)v1;
    *(_DWORD *)uint64_t v36 = 136446210;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 16) = sub_190B21150(v35, v34, v82);
    sub_190B77648();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1909E3000, v31, v32, "addDomain() did not find extension for %{public}s", v36, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FD42A0](v1, -1, -1);
    MEMORY[0x192FD42A0](v36, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (!objc_msgSend(self, sel_errorWithCode_, 106))
  {
    __break(1u);
    goto LABEL_34;
  }
  swift_willThrow();
  (*(void (**)(void, void))(*(void *)(v0 + 144) + 8))(*(void *)(v0 + 152), *(void *)(v0 + 136));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v42 = *(void (**)(void))(v0 + 8);
LABEL_30:
  v42();
}

uint64_t sub_190B37630(void *a1, int a2, void *aBlock, void *a4)
{
  v4[2] = a1;
  v4[3] = a4;
  v4[4] = _Block_copy(aBlock);
  uint64_t v7 = sub_190B77168();
  uint64_t v9 = v8;
  v4[5] = v8;
  id v10 = a1;
  a4;
  BOOL v11 = (void *)swift_task_alloc();
  void v4[6] = v11;
  *BOOL v11 = v4;
  v11[1] = sub_190B446EC;
  return sub_190B3692C((uint64_t)v10, v7, v9);
}

uint64_t sub_190B3771C()
{
  return sub_190B4227C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_190B378D8(int a1, int a2, void *aBlock)
{
  uint64_t v4 = (void (**)(void *, void))_Block_copy(aBlock);
  v4[2](v4, 0);
  _Block_release(v4);
  uint64_t v5 = *(uint64_t (**)(void))(v3 + 8);
  return sub_190B435E0(v5);
}

uint64_t sub_190B37974(uint64_t a1, uint64_t a2)
{
  void v3[5] = a2;
  void v3[6] = v2;
  v3[4] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3BB8);
  v3[7] = swift_task_alloc();
  v3[8] = swift_task_alloc();
  uint64_t v4 = sub_190B76F98();
  v3[9] = v4;
  v3[10] = *(void *)(v4 - 8);
  v3[11] = swift_task_alloc();
  uint64_t v5 = sub_190B76FC8();
  v3[12] = v5;
  v3[13] = *(void *)(v5 - 8);
  v3[14] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_190B37AD4, 0, 0);
}

id sub_190B37AD4()
{
  uint64_t v50 = v0;
  if (qword_1E92A5838 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[12];
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1E92A8498);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v2, v4, v3);
  if (qword_1E92A3BD0 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_1E92A3BC0;
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_190B76FA8();
  os_log_type_t v7 = sub_190B77588();
  BOOL v8 = os_log_type_enabled(v6, v7);
  unint64_t v9 = v0[5];
  if (v8)
  {
    uint64_t v48 = v0[4];
    id v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    v49[0] = v11;
    *(_DWORD *)id v10 = 136446210;
    swift_bridgeObjectRetain();
    v0[3] = sub_190B21150(v48, v9, v49);
    sub_190B77648();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1909E3000, v6, v7, "registeredDomains(for: %{public}s)", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FD42A0](v11, -1, -1);
    MEMORY[0x192FD42A0](v10, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v13 = v0[4];
  uint64_t v12 = v0[5];
  uint64_t v14 = *(os_unfair_lock_s **)(v5 + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_lock);
  id v15 = (void *)swift_task_alloc();
  v15[2] = v5;
  v15[3] = v13;
  v15[4] = v12;
  uint64_t v16 = swift_task_alloc();
  *(void *)(v16 + 16) = sub_190B446F0;
  *(void *)(v16 + 24) = v15;
  v14 += 4;
  os_unfair_lock_lock(v14);
  sub_190B446C0();
  os_unfair_lock_unlock(v14);
  swift_task_dealloc();
  uint64_t v17 = v0[9];
  uint64_t v18 = v0[10];
  uint64_t v20 = v0[7];
  uint64_t v19 = v0[8];
  swift_task_dealloc();
  sub_190B41594(v20, v19);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v19, 1, v17) == 1)
  {
    sub_190B23144(v0[8], &qword_1E92A3BB8);
    swift_bridgeObjectRetain_n();
    uint64_t v21 = sub_190B76FA8();
    os_log_type_t v22 = sub_190B77578();
    BOOL v23 = os_log_type_enabled(v21, v22);
    unint64_t v24 = v0[5];
    if (v23)
    {
      uint64_t v25 = v0[4];
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      v49[0] = v27;
      *(_DWORD *)uint64_t v26 = 136446210;
      swift_bridgeObjectRetain();
      v0[2] = sub_190B21150(v25, v24, v49);
      sub_190B77648();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1909E3000, v21, v22, "registeredDomains() did not find extension for %{public}s", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FD42A0](v27, -1, -1);
      MEMORY[0x192FD42A0](v26, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    id result = objc_msgSend(self, sel_errorWithCode_, 106);
    if (result)
    {
      uint64_t v41 = v0[13];
      uint64_t v40 = v0[14];
      uint64_t v42 = v0[12];
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, v42);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      char v43 = (uint64_t (*)(void))v0[1];
      return (id)v43();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    (*(void (**)(void, void, void))(v0[10] + 32))(v0[11], v0[8], v0[9]);
    uint64_t v28 = sub_190B3E5FC();
    if (v28)
    {
      uint64_t v29 = (void *)v28;
      _AppExtensionIdentity.appDisplayName.getter();
      _s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0();
      id v30 = objc_msgSend(v29, sel_isEnabled);
      id v31 = objc_allocWithZone((Class)CNContactProviderSupportDomain);
      os_log_type_t v32 = (void *)sub_190B77158();
      BOOL v33 = (void *)sub_190B77158();
      swift_bridgeObjectRelease();
      unint64_t v34 = (void *)sub_190B77048();
      uint64_t v35 = (void *)sub_190B77158();
      swift_bridgeObjectRelease();
      id v36 = objc_msgSend(v31, sel_initWithDomainIdentifer_displayName_userInfo_bundleIdentifier_registered_enabled_, v32, v33, v34, v35, 1, v30);

      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3DD0);
      uint64_t v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = xmmword_190B908F0;
      *(void *)(v37 + 32) = v36;
      v49[0] = v37;
      sub_190B772E8();
      uint64_t v38 = v49[0];
    }
    else
    {
      uint64_t v38 = MEMORY[0x1E4FBC860];
    }
    uint64_t v45 = v0[13];
    uint64_t v44 = v0[14];
    uint64_t v46 = v0[12];
    (*(void (**)(void, void))(v0[10] + 8))(v0[11], v0[9]);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v44, v46);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v47 = (uint64_t (*)(uint64_t))v0[1];
    return (id)v47(v38);
  }
  return result;
}

uint64_t sub_190B38344(int a1, void *aBlock, void *a3)
{
  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  uint64_t v5 = sub_190B77168();
  uint64_t v7 = v6;
  v3[4] = v6;
  a3;
  BOOL v8 = (void *)swift_task_alloc();
  void v3[5] = v8;
  *BOOL v8 = v3;
  v8[1] = sub_190B38418;
  return sub_190B37974(v5, v7);
}

uint64_t sub_190B38418()
{
  uint64_t v2 = v0;
  uint64_t v3 = *v1;
  uint64_t v4 = *(void **)(*v1 + 16);
  uint64_t v5 = *v1;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  if (v2)
  {
    uint64_t v6 = sub_190B76D58();

    uint64_t v7 = 0;
    BOOL v8 = (void *)v6;
  }
  else
  {
    sub_190B23474(0, (unint64_t *)&qword_1E92A5C08);
    uint64_t v7 = sub_190B772B8();
    swift_bridgeObjectRelease();
    uint64_t v6 = 0;
    BOOL v8 = (void *)v7;
  }
  unint64_t v9 = *(void (***)(void, void, void))(v3 + 24);
  v9[2](v9, v7, v6);

  _Block_release(v9);
  uint64_t v10 = *(uint64_t (**)(void))(v5 + 8);
  return v10();
}

uint64_t sub_190B385DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  *(void *)(v7 + 96) = a4;
  *(void *)(v7 + 104) = v6;
  *(unsigned char *)(v7 + 193) = a6;
  *(unsigned char *)(v7 + 192) = a5;
  *(void *)(v7 + 80) = a2;
  *(void *)(v7 + 8_Block_object_dispose(&STACK[0x228], 8) = a3;
  *(void *)(v7 + 72) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3E40);
  *(void *)(v7 + 112) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3BB8);
  *(void *)(v7 + 120) = swift_task_alloc();
  *(void *)(v7 + 12_Block_object_dispose(&STACK[0x228], 8) = swift_task_alloc();
  uint64_t v8 = sub_190B76F98();
  *(void *)(v7 + 136) = v8;
  *(void *)(v7 + 144) = *(void *)(v8 - 8);
  *(void *)(v7 + 152) = swift_task_alloc();
  uint64_t v9 = sub_190B76FC8();
  *(void *)(v7 + 160) = v9;
  *(void *)(v7 + 16_Block_object_dispose(&STACK[0x228], 8) = *(void *)(v9 - 8);
  *(void *)(v7 + 176) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_190B38778, 0, 0);
}

id sub_190B38778()
{
  uint64_t v90 = v0;
  if (qword_1E92A5838 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v3 = *(void *)(v0 + 160);
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1E92A8498);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  if (qword_1E92A3BD0 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_1E92A3BC0;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_190B76FA8();
  os_log_type_t v7 = sub_190B77588();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = *(void *)(v0 + 72);
    int v85 = *(unsigned __int8 *)(v0 + 193);
    *(_DWORD *)id v80 = *(unsigned __int8 *)(v0 + 192);
    unint64_t v9 = *(void *)(v0 + 96);
    uint64_t v77 = *(void *)(v0 + 88);
    os_log_type_t type = v7;
    unint64_t v10 = *(void *)(v0 + 80);
    uint64_t v11 = swift_slowAlloc();
    uint64_t v84 = swift_slowAlloc();
    v89[0] = v84;
    *(_DWORD *)uint64_t v11 = 136446978;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 56) = sub_190B21150(v8, v10, v89);
    sub_190B77648();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 64) = sub_190B21150(v77, v9, v89);
    sub_190B77648();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 22) = 1026;
    *(_DWORD *)(v0 + 184) = *(_DWORD *)v80;
    sub_190B77648();
    *(_WORD *)(v11 + 2_Block_object_dispose(&STACK[0x228], 8) = 1026;
    *(_DWORD *)(v0 + 18_Block_object_dispose(&STACK[0x228], 8) = v85;
    sub_190B77648();
    _os_log_impl(&dword_1909E3000, v6, type, "enableDomain(for: %{public}s, bundleIdentifier: %{public}s, showPrompt: %{BOOL,public}d, shouldSynchronize: %{BOOL,public}d)", (uint8_t *)v11, 0x22u);
    swift_arrayDestroy();
    MEMORY[0x192FD42A0](v84, -1, -1);
    MEMORY[0x192FD42A0](v11, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v13 = *(void *)(v0 + 88);
  uint64_t v12 = *(void *)(v0 + 96);
  uint64_t v14 = *(os_unfair_lock_s **)(v5 + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_lock);
  id v15 = (void *)swift_task_alloc();
  v15[2] = v5;
  v15[3] = v13;
  v15[4] = v12;
  uint64_t v16 = swift_task_alloc();
  *(void *)(v16 + 16) = sub_190B446F0;
  *(void *)(v16 + 24) = v15;
  v14 += 4;
  os_unfair_lock_lock(v14);
  sub_190B446C0();
  os_unfair_lock_unlock(v14);
  swift_task_dealloc();
  uint64_t v17 = *(void *)(v0 + 136);
  uint64_t v18 = *(void *)(v0 + 144);
  uint64_t v20 = *(void *)(v0 + 120);
  uint64_t v19 = *(void *)(v0 + 128);
  swift_task_dealloc();
  sub_190B41594(v20, v19);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v19, 1, v17) == 1)
  {
    sub_190B23144(*(void *)(v0 + 128), &qword_1E92A3BB8);
    swift_bridgeObjectRetain_n();
    uint64_t v21 = sub_190B76FA8();
    os_log_type_t v22 = sub_190B77578();
    BOOL v23 = os_log_type_enabled(v21, v22);
    unint64_t v24 = *(void *)(v0 + 96);
    if (v23)
    {
      uint64_t v25 = *(void *)(v0 + 88);
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      v89[0] = v27;
      *(_DWORD *)uint64_t v26 = 136446210;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 16) = sub_190B21150(v25, v24, v89);
      sub_190B77648();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1909E3000, v21, v22, "enableDomain() did not find extension for %{public}s", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FD42A0](v27, -1, -1);
      MEMORY[0x192FD42A0](v26, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    id result = objc_msgSend(self, sel_errorWithCode_, 106);
    if (!result)
    {
      __break(1u);
      return result;
    }
    swift_willThrow();
    goto LABEL_32;
  }
  unint64_t v28 = 0xD000000000000016;
  (*(void (**)(void, void, void))(*(void *)(v0 + 144) + 32))(*(void *)(v0 + 152), *(void *)(v0 + 128), *(void *)(v0 + 136));
  uint64_t v29 = _s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0();
  unint64_t v31 = v30;
  uint64_t v88 = _AppExtensionIdentity.appDisplayName.getter();
  unint64_t v33 = v32;
  if (_s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0() == 0xD00000000000002BLL
    && v34 == 0x8000000190B9F210)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v35 = sub_190B77998();
    swift_bridgeObjectRelease();
    if ((v35 & 1) == 0)
    {
      unint64_t v28 = 0x6E776F6E6B6E75;
      os_log_t v55 = (void *)sub_190B76F88();
      if (v55
        && (uint64_t v56 = v55,
            id v57 = objc_msgSend(v55, sel_bundleIdentifier),
            v56,
            v57))
      {
        unint64_t v28 = sub_190B77168();
        unint64_t v36 = v58;
      }
      else
      {
        unint64_t v36 = 0xE700000000000000;
      }
      goto LABEL_16;
    }
  }
  unint64_t v36 = 0x8000000190B9F2B0;
LABEL_16:
  uint64_t v37 = sub_190B3E5FC();
  if (v37)
  {
    uint64_t v87 = (void *)v37;
    uint64_t v38 = (void *)sub_190B3E5FC();
    if (v38 && (unint64_t v39 = v38, v40 = objc_msgSend(v38, sel_isEnabled), v39, (v40 & 1) != 0))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v41 = sub_190B76FA8();
      os_log_type_t v81 = sub_190B77588();
      BOOL v42 = os_log_type_enabled(v41, v81);
      uint64_t v43 = *(void *)(v0 + 176);
      uint64_t v45 = *(void *)(v0 + 160);
      uint64_t v44 = *(void *)(v0 + 168);
      uint64_t v46 = *(void *)(v0 + 144);
      uint64_t v82 = *(void *)(v0 + 136);
      uint64_t v83 = *(void *)(v0 + 152);
      if (v42)
      {
        uint64_t v78 = *(void *)(v0 + 176);
        uint64_t v47 = swift_slowAlloc();
        v89[0] = swift_slowAlloc();
        uint64_t v48 = v89[0];
        *(_DWORD *)uint64_t v47 = 136446466;
        swift_bridgeObjectRetain();
        *(void *)(v0 + 40) = sub_190B21150(v28, v36, v89);
        sub_190B77648();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v47 + 12) = 2082;
        swift_bridgeObjectRetain();
        *(void *)(v0 + 4_Block_object_dispose(&STACK[0x228], 8) = sub_190B21150(v88, v33, v89);
        sub_190B77648();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1909E3000, v41, v81, "enableDomain() found container already enabled with provider identifier %{public}s for %{public}s app", (uint8_t *)v47, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x192FD42A0](v48, -1, -1);
        MEMORY[0x192FD42A0](v47, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v83, v82);
        (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v78, v45);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();

        (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v83, v82);
        (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v45);
      }
    }
    else
    {
      uint64_t v50 = *(void *)(v0 + 176);
      char v51 = *(unsigned char *)(v0 + 192);
      swift_bridgeObjectRelease();
      sub_190B394E0(v51, v88, v33, v50, v29, v31);
      uint64_t v64 = *(void *)(v0 + 152);
      swift_bridgeObjectRelease();
      sub_190B39B44(v64, v87);
      if (*(unsigned char *)(v0 + 193) == 1)
      {
        uint64_t v67 = *(void **)(v0 + 104);
        uint64_t v66 = *(void *)(v0 + 112);
        unint64_t v68 = v33;
        uint64_t v70 = *(void *)(v0 + 88);
        uint64_t v69 = *(void *)(v0 + 96);
        uint64_t v71 = sub_190B77448();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v66, 1, 1, v71);
        uint64_t v72 = (void *)swift_allocObject();
        v72[2] = 0;
        v72[3] = 0;
        v72[4] = v70;
        v72[5] = v69;
        v72[6] = v67;
        v72[7] = v88;
        v72[8] = v68;
        swift_bridgeObjectRetain();
        id v73 = v67;
        swift_bridgeObjectRetain();
        sub_190B3A69C(v66, (uint64_t)&unk_1E92A5BA8, (uint64_t)v72);
        swift_release();
      }
      swift_bridgeObjectRelease();

      uint64_t v75 = *(void *)(v0 + 168);
      uint64_t v74 = *(void *)(v0 + 176);
      uint64_t v76 = *(void *)(v0 + 160);
      (*(void (**)(void, void))(*(void *)(v0 + 144) + 8))(*(void *)(v0 + 152), *(void *)(v0 + 136));
      (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v74, v76);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v65 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_33;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v52 = sub_190B76FA8();
  os_log_type_t v53 = sub_190B77578();
  if (os_log_type_enabled(v52, v53))
  {
    uint64_t v54 = swift_slowAlloc();
    uint64_t v86 = swift_slowAlloc();
    v89[0] = v86;
    *(_DWORD *)uint64_t v54 = 136446466;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 24) = sub_190B21150(v28, v36, v89);
    sub_190B77648();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v54 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 32) = sub_190B21150(v88, v33, v89);
    sub_190B77648();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1909E3000, v52, v53, "enableDomain() did not find container with provider identifier %{public}s for %{public}s app", (uint8_t *)v54, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x192FD42A0](v86, -1, -1);
    MEMORY[0x192FD42A0](v54, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v60 = *(void *)(v0 + 144);
  uint64_t v59 = *(void *)(v0 + 152);
  uint64_t v61 = *(void *)(v0 + 136);
  id v62 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
  swift_bridgeObjectRetain();
  uint64_t v63 = (void *)sub_190B77158();
  swift_bridgeObjectRelease();
  objc_msgSend(v62, sel_initWithDomain_code_userInfo_, v63, 1010, 0);

  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v61);
LABEL_32:
  (*(void (**)(void, void))(*(void *)(v0 + 168) + 8))(*(void *)(v0 + 176), *(void *)(v0 + 160));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v65 = *(uint64_t (**)(void))(v0 + 8);
LABEL_33:
  return (id)v65();
}

void sub_190B394E0(char a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  v34[1] = *MEMORY[0x1E4F143B8];
  uint64_t v11 = sub_190B76EA8();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v12 = sub_190B77148();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v13 = sub_190B77128();
  MEMORY[0x1F4188790](v13 - 8);
  if (a1)
  {
    uint64_t v30 = a5;
    type metadata accessor for CNContactProviderSupportHost();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v15 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_190B77118();
    sub_190B77108();
    sub_190B770F8();
    sub_190B77108();
    sub_190B77138();
    id v16 = v15;
    sub_190B76E98();
    sub_190B771B8();
    uint64_t v17 = sub_190B77158();
    swift_bridgeObjectRelease();
    sub_190B77118();
    sub_190B77108();
    uint64_t v31 = a2;
    unint64_t v32 = a3;
    sub_190B770F8();
    sub_190B77108();
    sub_190B77138();
    id v18 = v16;
    sub_190B76E98();
    sub_190B771B8();
    uint64_t v19 = (__CFString *)sub_190B77158();
    swift_bridgeObjectRelease();
    sub_190B770E8();
    id v20 = v18;
    sub_190B76E98();
    sub_190B771B8();
    uint64_t v21 = (__CFString *)sub_190B77158();
    os_log_type_t v22 = (__CFString *)v17;
    swift_bridgeObjectRelease();
    sub_190B770E8();
    id v23 = v20;
    sub_190B76E98();
    sub_190B771B8();
    unint64_t v24 = (__CFString *)sub_190B77158();
    swift_bridgeObjectRelease();
    CFOptionFlags v33 = 3;
    CFUserNotificationDisplayAlert(0.0, 0, 0, 0, 0, v22, v19, v21, v24, 0, &v33);
    if (v33)
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v25 = sub_190B76FA8();
      os_log_type_t v26 = sub_190B77588();
      uint64_t v29 = v23;
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = swift_slowAlloc();
        uint64_t v28 = swift_slowAlloc();
        v34[0] = v28;
        *(_DWORD *)uint64_t v27 = 136446466;
        swift_bridgeObjectRetain();
        sub_190B21150(v30, a6, v34);
        sub_190B77648();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v27 + 12) = 2082;
        swift_bridgeObjectRetain();
        sub_190B21150(v31, v32, v34);
        sub_190B77648();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1909E3000, v25, v26, "askUserToEnable() user did not enable extension %{public}s for %{public}s app", (uint8_t *)v27, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x192FD42A0](v28, -1, -1);
        MEMORY[0x192FD42A0](v27, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      if (objc_msgSend(self, sel_errorWithCode_, 105))
      {
        swift_willThrow();
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
    }
  }
}

void sub_190B39B44(uint64_t a1, id a2)
{
  v50[1] = *(id *)MEMORY[0x1E4F143B8];
  unint64_t v4 = 0xD000000000000016;
  uint64_t v46 = _AppExtensionIdentity.appDisplayName.getter();
  unint64_t v6 = v5;
  if (_s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0() == 0xD00000000000002BLL
    && v7 == 0x8000000190B9F210)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    unint64_t v9 = 0x8000000190B9F2B0;
    goto LABEL_6;
  }
  char v8 = sub_190B77998();
  swift_bridgeObjectRelease();
  if (v8) {
    goto LABEL_5;
  }
  unint64_t v4 = 0x6E776F6E6B6E75;
  unint64_t v39 = (void *)sub_190B76F88();
  if (v39
    && (unsigned __int8 v40 = v39,
        id v41 = objc_msgSend(v39, sel_bundleIdentifier),
        v40,
        v41))
  {
    unint64_t v4 = sub_190B77168();
    unint64_t v9 = v42;
  }
  else
  {
    unint64_t v9 = 0xE700000000000000;
  }
LABEL_6:
  id v10 = objc_msgSend(objc_allocWithZone((Class)CNSaveRequest), sel_init);
  objc_msgSend(a2, sel_setEnabled_, 1);
  objc_msgSend(v10, sel_updateContainer_, a2);
  objc_msgSend(v10, sel_setIgnoresContactProviderRestrictions_, 1);
  id v11 = sub_190B309A4();
  v50[0] = 0;
  unsigned __int8 v12 = objc_msgSend(v11, sel_executeSaveRequest_error_, v10, v50);

  if (v12)
  {
    id v13 = v50[0];
    swift_bridgeObjectRelease();
    sub_190B55FD4();
    id v14 = a2;
    swift_bridgeObjectRetain();
    id v15 = sub_190B76FA8();
    os_log_type_t v16 = sub_190B77588();
    if (!os_log_type_enabled(v15, v16))
    {
      swift_bridgeObjectRelease_n();

      return;
    }
    unint64_t v47 = v6;
    id v49 = v2;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v44 = (void *)swift_slowAlloc();
    v50[0] = v44;
    *(_DWORD *)uint64_t v17 = 136446466;
    id v18 = objc_msgSend(v14, sel_identifier);
    if (v18)
    {
      uint64_t v19 = v18;
      uint64_t v20 = sub_190B77168();
      unint64_t v22 = v21;

      sub_190B21150(v20, v22, (uint64_t *)v50);
      sub_190B77648();

      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_190B21150(v46, v47, (uint64_t *)v50);
      sub_190B77648();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1909E3000, v15, v16, "enableProviderContainer() enabled container with identifier %{public}s for %{public}s app", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x192FD42A0](v44, -1, -1);
      MEMORY[0x192FD42A0](v17, -1, -1);

      return;
    }

    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_21;
  }
  unint64_t v48 = v6;
  id v23 = v50[0];
  unint64_t v24 = (void *)sub_190B76D68();

  swift_willThrow();
  id v25 = a2;
  id v26 = v24;
  a2 = v25;
  swift_bridgeObjectRetain();
  id v27 = v24;
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_190B76FA8();
  os_log_type_t v29 = sub_190B77578();
  if (!os_log_type_enabled(v28, v29))
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    goto LABEL_18;
  }
  os_log_type_t v45 = v29;
  id v49 = v24;
  uint64_t v30 = swift_slowAlloc();
  uint64_t v43 = (void *)swift_slowAlloc();
  v50[0] = v43;
  *(_DWORD *)uint64_t v30 = 136446978;
  id v31 = objc_msgSend(a2, sel_identifier);
  if (v31)
  {
    unint64_t v32 = v31;
    uint64_t v33 = sub_190B77168();
    unint64_t v35 = v34;

    sub_190B21150(v33, v35, (uint64_t *)v50);
    sub_190B77648();

    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 12) = 2082;
    swift_bridgeObjectRetain();
    sub_190B21150(v4, v9, (uint64_t *)v50);
    sub_190B77648();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v30 + 22) = 2082;
    swift_bridgeObjectRetain();
    sub_190B21150(v46, v48, (uint64_t *)v50);
    sub_190B77648();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v30 + 32) = 2082;
    id v36 = v49;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5B78);
    uint64_t v37 = sub_190B771C8();
    sub_190B21150(v37, v38, (uint64_t *)v50);
    sub_190B77648();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1909E3000, v28, v45, "enableProviderContainer() failed to enable container with identifier %{public}s and provider identifier %{public}s for %{public}s app, error = %{public}s", (uint8_t *)v30, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x192FD42A0](v43, -1, -1);
    MEMORY[0x192FD42A0](v30, -1, -1);

LABEL_18:
    swift_willThrow();
    return;
  }
LABEL_21:

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __break(1u);
}

uint64_t sub_190B3A220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[6] = a7;
  v8[7] = a8;
  v8[4] = a5;
  v8[5] = a6;
  v8[3] = a4;
  return MEMORY[0x1F4188298](sub_190B3A2B8, 0, 0);
}

uint64_t sub_190B3A2B8()
{
  id v27 = v0;
  v26[1] = *MEMORY[0x1E4F143B8];
  uint64_t v1 = v0[5];
  id v2 = objc_msgSend(self, sel_sharedInstance);
  id v3 = objc_msgSend(objc_allocWithZone((Class)CNContactProviderSupportSession), sel_init);
  objc_msgSend(v3, sel_setSynchronizationReason_, @"Extension was enabled");
  unint64_t v4 = (void *)sub_190B77158();
  id v5 = objc_msgSend(v2, sel_synchronizeProviderDomainUsingSession_bundleIdentifier_providerHost_, v3, v4, v1);

  v0[2] = 0;
  id v6 = objc_msgSend(v5, sel_result_, v0 + 2);
  uint64_t v7 = (void *)v0[2];
  if (v6)
  {
    id v8 = v7;
    swift_unknownObjectRelease();

    unint64_t v9 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    id v10 = v7;
    id v11 = (void *)sub_190B76D68();

    swift_willThrow();
    if (qword_1E92A5838 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_190B76FC8();
    __swift_project_value_buffer(v12, (uint64_t)qword_1E92A8498);
    swift_bridgeObjectRetain();
    id v13 = v11;
    swift_bridgeObjectRetain();
    id v14 = v11;
    id v15 = sub_190B76FA8();
    os_log_type_t v16 = sub_190B77578();
    BOOL v17 = os_log_type_enabled(v15, v16);
    unint64_t v18 = v0[7];
    if (v17)
    {
      uint64_t v19 = v0[6];
      uint64_t v20 = swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      v26[0] = v25;
      *(_DWORD *)uint64_t v20 = 136446466;
      swift_bridgeObjectRetain();
      v0[2] = sub_190B21150(v19, v18, v26);
      sub_190B77648();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v20 + 12) = 2082;
      v0[2] = v11;
      id v21 = v11;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5B78);
      uint64_t v22 = sub_190B771C8();
      v0[2] = sub_190B21150(v22, v23, v26);
      sub_190B77648();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1909E3000, v15, v16, "scheduleFirstSynchronization() failed to schedule synchronization for %{public}s app, error = %{public}s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x192FD42A0](v25, -1, -1);
      MEMORY[0x192FD42A0](v20, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
    swift_willThrow();
    unint64_t v9 = (uint64_t (*)(void))v0[1];
  }
  return v9();
}

uint64_t sub_190B3A69C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_190B77448();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_190B77438();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_190B23144(a1, &qword_1E92A3E40);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_190B773E8();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_190B3A9C0(int a1, int a2, char a3, char a4, void *aBlock, void *a6)
{
  v6[2] = a6;
  v6[3] = _Block_copy(aBlock);
  uint64_t v10 = sub_190B77168();
  uint64_t v12 = v11;
  void v6[4] = v11;
  uint64_t v13 = sub_190B77168();
  uint64_t v15 = v14;
  v6[5] = v14;
  a6;
  os_log_type_t v16 = (void *)swift_task_alloc();
  v6[6] = v16;
  *os_log_type_t v16 = v6;
  v16[1] = sub_190B3AAD4;
  return sub_190B385DC(v10, v12, v13, v15, a3, a4);
}

uint64_t sub_190B3AAD4()
{
  id v2 = v0;
  uint64_t v4 = *v1;
  uint64_t v3 = *v1;
  uint64_t v5 = *(void **)(*v1 + 16);
  uint64_t v6 = *v1;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(v3 + 24);
  if (v2)
  {
    id v8 = (void *)sub_190B76D58();

    (*(void (**)(uint64_t, void *))(v7 + 16))(v7, v8);
  }
  else
  {
    (*(void (**)(uint64_t, void))(v7 + 16))(v7, 0);
  }
  _Block_release(*(const void **)(v4 + 24));
  unint64_t v9 = *(uint64_t (**)(void))(v6 + 8);
  return v9();
}

uint64_t sub_190B3AC98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[13] = a4;
  v5[14] = v4;
  v5[11] = a2;
  v5[12] = a3;
  v5[10] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3BB8);
  v5[15] = swift_task_alloc();
  v5[16] = swift_task_alloc();
  uint64_t v6 = sub_190B76F98();
  v5[17] = v6;
  v5[18] = *(void *)(v6 - 8);
  v5[19] = swift_task_alloc();
  uint64_t v7 = sub_190B76FC8();
  v5[20] = v7;
  v5[21] = *(void *)(v7 - 8);
  v5[22] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_190B3ADFC, 0, 0);
}

id sub_190B3ADFC()
{
  uint64_t v67 = v0;
  if (qword_1E92A5838 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[21];
  uint64_t v1 = v0[22];
  uint64_t v3 = v0[20];
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1E92A8498);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  if (qword_1E92A3BD0 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_1E92A3BC0;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_190B76FA8();
  os_log_type_t v7 = sub_190B77588();
  BOOL v8 = os_log_type_enabled(v6, v7);
  unint64_t v9 = v0[13];
  if (v8)
  {
    uint64_t v10 = v0[10];
    unint64_t v11 = v0[11];
    uint64_t v63 = v0[12];
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136446466;
    v66[0] = v13;
    swift_bridgeObjectRetain();
    v0[8] = sub_190B21150(v10, v11, v66);
    sub_190B77648();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 12) = 2082;
    swift_bridgeObjectRetain();
    v0[9] = sub_190B21150(v63, v9, v66);
    sub_190B77648();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1909E3000, v6, v7, "disableDomain(for: %{public}s, bundleIdentifier: %{public}s)", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x192FD42A0](v13, -1, -1);
    MEMORY[0x192FD42A0](v12, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v15 = v0[12];
  uint64_t v14 = v0[13];
  os_log_type_t v16 = *(os_unfair_lock_s **)(v5 + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_lock);
  BOOL v17 = (void *)swift_task_alloc();
  v17[2] = v5;
  v17[3] = v15;
  v17[4] = v14;
  uint64_t v18 = swift_task_alloc();
  *(void *)(v18 + 16) = sub_190B446F0;
  *(void *)(v18 + 24) = v17;
  v16 += 4;
  os_unfair_lock_lock(v16);
  sub_190B446C0();
  os_unfair_lock_unlock(v16);
  swift_task_dealloc();
  uint64_t v19 = v0[17];
  uint64_t v20 = v0[18];
  uint64_t v22 = v0[15];
  uint64_t v21 = v0[16];
  swift_task_dealloc();
  sub_190B41594(v22, v21);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v21, 1, v19) == 1)
  {
    sub_190B23144(v0[16], &qword_1E92A3BB8);
    swift_bridgeObjectRetain_n();
    unint64_t v23 = sub_190B76FA8();
    os_log_type_t v24 = sub_190B77578();
    BOOL v25 = os_log_type_enabled(v23, v24);
    unint64_t v26 = v0[13];
    if (v25)
    {
      uint64_t v27 = v0[12];
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      v66[0] = v29;
      *(_DWORD *)uint64_t v28 = 136446210;
      swift_bridgeObjectRetain();
      v0[2] = sub_190B21150(v27, v26, v66);
      sub_190B77648();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1909E3000, v23, v24, "disableDomain() did not find extension for %{public}s", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FD42A0](v29, -1, -1);
      MEMORY[0x192FD42A0](v28, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    id result = objc_msgSend(self, sel_errorWithCode_, 106);
    if (!result)
    {
      __break(1u);
      return result;
    }
    swift_willThrow();
    (*(void (**)(void, void))(v0[21] + 8))(v0[22], v0[20]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v54 = (uint64_t (*)(void))v0[1];
    goto LABEL_28;
  }
  uint64_t v30 = 0xD000000000000016;
  (*(void (**)(void, void, void))(v0[18] + 32))(v0[19], v0[16], v0[17]);
  uint64_t v31 = _s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0();
  uint64_t v33 = v32;
  v0[23] = v32;
  uint64_t v34 = _AppExtensionIdentity.appDisplayName.getter();
  unint64_t v36 = v35;
  v0[24] = v34;
  v0[25] = v35;
  if (_s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0() == 0xD00000000000002BLL
    && v37 == 0x8000000190B9F210)
  {
    swift_bridgeObjectRelease();
LABEL_15:
    unint64_t v39 = 0x8000000190B9F2B0;
    goto LABEL_16;
  }
  char v38 = sub_190B77998();
  swift_bridgeObjectRelease();
  if (v38) {
    goto LABEL_15;
  }
  uint64_t v30 = 0x6E776F6E6B6E75;
  os_log_t v55 = (void *)sub_190B76F88();
  if (v55
    && (uint64_t v56 = v55,
        id v57 = objc_msgSend(v55, sel_bundleIdentifier),
        v56,
        v57))
  {
    uint64_t v30 = sub_190B77168();
    unint64_t v39 = v58;
  }
  else
  {
    unint64_t v39 = 0xE700000000000000;
  }
LABEL_16:
  unsigned __int8 v40 = (void *)sub_190B3E5FC();
  if (!v40 || (v41 = v40, unsigned __int8 v42 = objc_msgSend(v40, sel_isEnabled), v41, (v42 & 1) == 0))
  {
    uint64_t v61 = v30;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v47 = sub_190B76FA8();
    os_log_type_t v48 = sub_190B77588();
    BOOL v49 = os_log_type_enabled(v47, v48);
    uint64_t v51 = v0[21];
    uint64_t v50 = v0[22];
    uint64_t v52 = v0[18];
    uint64_t v64 = v0[19];
    uint64_t v65 = v0[20];
    uint64_t v62 = v0[17];
    if (v49)
    {
      uint64_t v60 = v0[22];
      uint64_t v53 = swift_slowAlloc();
      uint64_t v59 = swift_slowAlloc();
      v66[0] = v59;
      *(_DWORD *)uint64_t v53 = 136446466;
      swift_bridgeObjectRetain();
      v0[3] = sub_190B21150(v61, v39, v66);
      sub_190B77648();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v53 + 12) = 2082;
      swift_bridgeObjectRetain();
      v0[4] = sub_190B21150(v34, v36, v66);
      sub_190B77648();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1909E3000, v47, v48, "disableDomain() found container already disabled with provider identifier %{public}s for %{public}s app", (uint8_t *)v53, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x192FD42A0](v59, -1, -1);
      MEMORY[0x192FD42A0](v53, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v64, v62);
      (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v60, v65);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v64, v62);
      (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v50, v65);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v54 = (uint64_t (*)(void))v0[1];
LABEL_28:
    return (id)v54();
  }
  swift_bridgeObjectRelease();
  uint64_t v43 = (void *)swift_task_alloc();
  v0[26] = v43;
  void *v43 = v0;
  v43[1] = sub_190B3B734;
  uint64_t v45 = v0[10];
  uint64_t v44 = v0[11];
  return (id)sub_190B3F5F8(v45, v44, v31, v33);
}

uint64_t sub_190B3B734()
{
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
  {
    uint64_t v2 = sub_190B3B9BC;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_190B3B864;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_190B3B864()
{
  uint64_t v1 = v0[27];
  sub_190B3DCDC();
  uint64_t v2 = v0[19];
  if (v1)
  {
    (*(void (**)(uint64_t, void))(v0[18] + 8))(v2, v0[17]);
    (*(void (**)(void, void))(v0[21] + 8))(v0[22], v0[20]);
  }
  else
  {
    sub_190B3D470(v2, 0);
    uint64_t v5 = v0[21];
    uint64_t v4 = v0[22];
    uint64_t v6 = v0[20];
    (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_190B3B9BC()
{
  uint64_t v21 = v0;
  uint64_t v1 = (void *)v0[27];
  id v2 = v1;
  swift_bridgeObjectRetain();
  id v3 = v1;
  uint64_t v4 = sub_190B76FA8();
  os_log_type_t v5 = sub_190B77578();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[27];
    uint64_t v8 = v0[24];
    unint64_t v7 = v0[25];
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    v20[0] = v10;
    *(_DWORD *)uint64_t v9 = 136446466;
    swift_bridgeObjectRetain();
    v0[5] = sub_190B21150(v8, v7, v20);
    sub_190B77648();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2082;
    v0[6] = v6;
    id v11 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5B78);
    uint64_t v12 = sub_190B771C8();
    v0[7] = sub_190B21150(v12, v13, v20);
    sub_190B77648();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1909E3000, v4, v5, "disableDomain() continuing to disable although failed to invalidate %{public}s app, error = %{public}s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x192FD42A0](v10, -1, -1);
    MEMORY[0x192FD42A0](v9, -1, -1);
  }
  else
  {
    uint64_t v14 = (void *)v0[27];

    swift_bridgeObjectRelease_n();
  }
  sub_190B3DCDC();
  sub_190B3D470(v0[19], 0);
  uint64_t v17 = v0[21];
  uint64_t v16 = v0[22];
  uint64_t v18 = v0[20];
  (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t sub_190B3BE78(int a1, int a2, void *aBlock, void *a4)
{
  v4[2] = a4;
  v4[3] = _Block_copy(aBlock);
  uint64_t v6 = sub_190B77168();
  uint64_t v8 = v7;
  v4[4] = v7;
  uint64_t v9 = sub_190B77168();
  uint64_t v11 = v10;
  v4[5] = v10;
  a4;
  uint64_t v12 = (void *)swift_task_alloc();
  void v4[6] = v12;
  *uint64_t v12 = v4;
  v12[1] = sub_190B446E8;
  return sub_190B3AC98(v6, v8, v9, v11);
}

uint64_t sub_190B3BF74(uint64_t a1)
{
  sub_190B3C098(a1);
  if (v1 >> 62) {
    sub_190B778A8();
  }
  swift_bridgeObjectRelease();
  sub_190B23474(0, &qword_1E92A3E48);
  return sub_190B775E8();
}

void sub_190B3C098(uint64_t a1)
{
  id v2 = v1;
  if (qword_1E92A3BD0 != -1) {
    a1 = swift_once();
  }
  uint64_t v3 = MEMORY[0x1F4188790](a1);
  MEMORY[0x1F4188790](v3);
  os_log_type_t v5 = v4 + 4;
  os_unfair_lock_lock(v4 + 4);
  sub_190B423B8(&v13);
  os_unfair_lock_unlock(v5);
  uint64_t v6 = v13;
  id v7 = v2;
  unint64_t v8 = sub_190B41680(v6);
  swift_bridgeObjectRelease();

  uint64_t v13 = MEMORY[0x1E4FBC860];
  if (!(v8 >> 62))
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v9) {
      goto LABEL_5;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_190B778A8();
  swift_bridgeObjectRelease();
  if (!v9) {
    goto LABEL_16;
  }
LABEL_5:
  if (v9 >= 1)
  {
    for (uint64_t i = 0; i != v9; ++i)
    {
      if ((v8 & 0xC000000000000001) != 0) {
        id v11 = (id)MEMORY[0x192FD1FB0](i, v8);
      }
      else {
        id v11 = *(id *)(v8 + 8 * i + 32);
      }
      uint64_t v12 = v11;
      if (objc_msgSend(v11, sel_isRegistered))
      {
        sub_190B77808();
        sub_190B77848();
        sub_190B77858();
        sub_190B77818();
      }
      else
      {
      }
    }
    goto LABEL_16;
  }
  __break(1u);
}

uint64_t sub_190B3C330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[9] = a3;
  v4[10] = v3;
  v4[7] = a1;
  v4[8] = a2;
  uint64_t v5 = sub_190B76F28();
  v4[11] = v5;
  v4[12] = *(void *)(v5 - 8);
  v4[13] = swift_task_alloc();
  v4[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3BB8);
  v4[15] = swift_task_alloc();
  v4[16] = swift_task_alloc();
  uint64_t v6 = sub_190B76F98();
  v4[17] = v6;
  v4[18] = *(void *)(v6 - 8);
  v4[19] = swift_task_alloc();
  v4[20] = swift_task_alloc();
  uint64_t v7 = sub_190B76FC8();
  v4[21] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v4[22] = v8;
  v4[23] = *(void *)(v8 + 64);
  v4[24] = swift_task_alloc();
  v4[25] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_190B3C524, 0, 0);
}

uint64_t sub_190B3C524()
{
  id v73 = v0;
  if (qword_1E92A5838 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[21];
  uint64_t v3 = v0[22];
  uint64_t v4 = __swift_project_value_buffer(v2, (uint64_t)qword_1E92A8498);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v5(v1, v4, v2);
  if (qword_1E92A3BD0 != -1) {
    swift_once();
  }
  uint64_t v7 = v0[8];
  uint64_t v6 = v0[9];
  uint64_t v8 = qword_1E92A3BC0;
  uint64_t v9 = *(os_unfair_lock_s **)(qword_1E92A3BC0 + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_lock);
  uint64_t v10 = (void *)swift_task_alloc();
  v10[2] = v8;
  void v10[3] = v7;
  v10[4] = v6;
  uint64_t v11 = swift_task_alloc();
  *(void *)(v11 + 16) = sub_190B446F0;
  *(void *)(v11 + 24) = v10;
  os_unfair_lock_lock(v9 + 4);
  sub_190B446C0();
  os_unfair_lock_unlock(v9 + 4);
  swift_task_dealloc();
  uint64_t v12 = v0[17];
  uint64_t v13 = v0[18];
  uint64_t v15 = v0[15];
  uint64_t v14 = v0[16];
  swift_task_dealloc();
  sub_190B41594(v15, v14);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v14, 1, v12) != 1)
  {
    (*(void (**)(void, void, void))(v0[18] + 32))(v0[20], v0[16], v0[17]);
    uint64_t v23 = _s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0();
    unint64_t v25 = v24;
    v0[26] = v23;
    v0[27] = v24;
    uint64_t v26 = _AppExtensionIdentity.appDisplayName.getter();
    unint64_t v28 = v27;
    v0[28] = v26;
    v0[29] = v27;
    if (_s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0() == 0xD00000000000002BLL
      && v29 == 0x8000000190B9F210)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v32 = sub_190B77998();
      swift_bridgeObjectRelease();
      if ((v32 & 1) == 0)
      {
        uint64_t v33 = (void *)sub_190B76F88();
        if (v33)
        {
          uint64_t v34 = v33;
          id v35 = objc_msgSend(v33, sel_bundleIdentifier);
        }
      }
    }
    unint64_t v36 = (void *)sub_190B3E5FC();
    if (v36)
    {
      uint64_t v37 = v36;
      unsigned int v38 = objc_msgSend(v36, sel_isEnabled);

      if (v38)
      {
        uint64_t v39 = v23;
        uint64_t v70 = v26;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        unsigned __int8 v40 = sub_190B76FA8();
        os_log_type_t v41 = sub_190B77588();
        unint64_t v66 = v28;
        uint64_t v67 = v39;
        if (os_log_type_enabled(v40, v41))
        {
          uint64_t v42 = swift_slowAlloc();
          uint64_t v68 = swift_slowAlloc();
          v72[0] = v68;
          *(_DWORD *)uint64_t v42 = 136446466;
          swift_bridgeObjectRetain();
          v0[5] = sub_190B21150(v39, v25, v72);
          sub_190B77648();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v42 + 12) = 2082;
          swift_bridgeObjectRetain();
          v0[6] = sub_190B21150(v70, v28, v72);
          sub_190B77648();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1909E3000, v40, v41, "appExtensionProcess() if needed will launch extension %{public}s for %{public}s app", (uint8_t *)v42, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x192FD42A0](v68, -1, -1);
          MEMORY[0x192FD42A0](v42, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }
        uint64_t v54 = v0[24];
        uint64_t v53 = v0[25];
        uint64_t v56 = v0[22];
        uint64_t v55 = v0[23];
        uint64_t v57 = v0[21];
        uint64_t v65 = v0[14];
        uint64_t v58 = v0[12];
        uint64_t v71 = v0[13];
        uint64_t v69 = v0[11];
        (*(void (**)(void))(v0[18] + 16))();
        v5(v54, v53, v57);
        unint64_t v59 = (*(unsigned __int8 *)(v56 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
        unint64_t v60 = (v55 + v59 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v61 = swift_allocObject();
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v56 + 32))(v61 + v59, v54, v57);
        uint64_t v62 = (uint64_t *)(v61 + v60);
        *uint64_t v62 = v67;
        v62[1] = v25;
        uint64_t v63 = (uint64_t *)(v61 + ((v60 + 23) & 0xFFFFFFFFFFFFFFF8));
        *uint64_t v63 = v70;
        v63[1] = v66;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_190B76F18();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 16))(v71, v65, v69);
        uint64_t v64 = (void *)swift_task_alloc();
        v0[30] = v64;
        *uint64_t v64 = v0;
        v64[1] = sub_190B3CF08;
        uint64_t v31 = v0[13];
        id v30 = (id)v0[7];
        return MEMORY[0x1F40E0958](v30, v31);
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_190B76FA8();
    os_log_type_t v44 = sub_190B77588();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = v23;
      uint64_t v46 = swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      v72[0] = v47;
      *(_DWORD *)uint64_t v46 = 136446466;
      swift_bridgeObjectRetain();
      v0[3] = sub_190B21150(v45, v25, v72);
      sub_190B77648();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v46 + 12) = 2082;
      swift_bridgeObjectRetain();
      v0[4] = sub_190B21150(v26, v28, v72);
      sub_190B77648();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1909E3000, v43, v44, "appExtensionProcess() will not launch extension %{public}s for %{public}s app", (uint8_t *)v46, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x192FD42A0](v47, -1, -1);
      MEMORY[0x192FD42A0](v46, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    id v30 = objc_msgSend(self, sel_errorWithCode_, 105);
    if (v30)
    {
      uint64_t v48 = v0[20];
      uint64_t v49 = v0[17];
      uint64_t v50 = v0[18];
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v49);
      goto LABEL_26;
    }
LABEL_34:
    __break(1u);
    return MEMORY[0x1F40E0958](v30, v31);
  }
  sub_190B23144(v0[16], &qword_1E92A3BB8);
  swift_bridgeObjectRetain_n();
  uint64_t v16 = sub_190B76FA8();
  os_log_type_t v17 = sub_190B77578();
  BOOL v18 = os_log_type_enabled(v16, v17);
  unint64_t v19 = v0[9];
  if (v18)
  {
    uint64_t v20 = v0[8];
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    v72[0] = v22;
    *(_DWORD *)uint64_t v21 = 136446210;
    swift_bridgeObjectRetain();
    v0[2] = sub_190B21150(v20, v19, v72);
    sub_190B77648();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1909E3000, v16, v17, "appExtensionProcess() did not find extension for %{public}s", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FD42A0](v22, -1, -1);
    MEMORY[0x192FD42A0](v21, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  id v30 = objc_msgSend(self, sel_errorWithCode_, 106);
  if (!v30)
  {
    __break(1u);
    goto LABEL_34;
  }
  swift_willThrow();
LABEL_26:
  (*(void (**)(void, void))(v0[22] + 8))(v0[25], v0[21]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v51 = (uint64_t (*)(void))v0[1];
  return v51();
}

uint64_t sub_190B3CF08()
{
  *(void *)(*(void *)v1 + 24_Block_object_dispose(&STACK[0x228], 8) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_190B3D160;
  }
  else
  {
    uint64_t v2 = sub_190B3D030;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_190B3D030()
{
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[21];
  uint64_t v3 = v0[22];
  uint64_t v4 = v0[20];
  uint64_t v5 = v0[17];
  uint64_t v6 = v0[18];
  (*(void (**)(void, void))(v0[12] + 8))(v0[14], v0[11]);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v0[1];
  uint64_t v8 = v0[28];
  uint64_t v9 = v0[29];
  uint64_t v10 = v0[26];
  uint64_t v11 = v0[27];
  return v7(v10, v11, v8, v9);
}

uint64_t sub_190B3D160()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[18];
  (*(void (**)(void, void))(v0[12] + 8))(v0[14], v0[11]);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  (*(void (**)(void, void))(v0[22] + 8))(v0[25], v0[21]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

void sub_190B3D27C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  oslog = sub_190B76FA8();
  os_log_type_t v9 = sub_190B77578();
  if (os_log_type_enabled(oslog, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v13 = v11;
    *(_DWORD *)uint64_t v10 = 136446466;
    swift_bridgeObjectRetain();
    sub_190B21150(a2, a3, &v13);
    sub_190B77648();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v10 + 12) = 2082;
    swift_bridgeObjectRetain();
    sub_190B21150(a4, a5, &v13);
    sub_190B77648();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1909E3000, oslog, v9, "appExtensionProcess() extension process configuration was interrupted for extension %{public}s for %{public}s app", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x192FD42A0](v11, -1, -1);
    MEMORY[0x192FD42A0](v10, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_190B3D470(uint64_t a1, char a2)
{
  v61[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_190B76FC8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E92A5838 != -1) {
    swift_once();
  }
  uint64_t v8 = __swift_project_value_buffer(v4, (uint64_t)qword_1E92A8498);
  uint64_t v55 = v5;
  uint64_t v56 = v4;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  if (qword_1E92A3BD0 != -1) {
    swift_once();
  }
  uint64_t v54 = qword_1E92A3BC0;
  uint64_t v57 = _AppExtensionIdentity.appDisplayName.getter();
  unint64_t v10 = v9;
  uint64_t v11 = _s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0();
  uint64_t v58 = v7;
  uint64_t v59 = 0xD000000000000016;
  if (v11 == 0xD00000000000002BLL && v12 == 0x8000000190B9F210)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v13 = sub_190B77998();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
      uint64_t v59 = 0x6E776F6E6B6E75;
      uint64_t v46 = (void *)sub_190B76F88();
      if (v46
        && (uint64_t v47 = v46,
            id v48 = objc_msgSend(v46, sel_bundleIdentifier),
            v47,
            v48))
      {
        uint64_t v59 = sub_190B77168();
        unint64_t v14 = v49;
      }
      else
      {
        unint64_t v14 = 0xE700000000000000;
      }
      goto LABEL_10;
    }
  }
  unint64_t v14 = 0x8000000190B9F2B0;
LABEL_10:
  id v15 = objc_msgSend(objc_allocWithZone((Class)CNMutableContainer), sel_init);
  uint64_t v16 = (void *)sub_190B77158();
  objc_msgSend(v15, sel_setName_, v16);

  objc_msgSend(v15, sel_setType_, 1003);
  os_log_type_t v17 = (void *)sub_190B77158();
  objc_msgSend(v15, sel_setProviderIdentifier_, v17);

  objc_msgSend(v15, sel_setEnabled_, a2 & 1);
  id v18 = objc_msgSend(objc_allocWithZone((Class)CNSaveRequest), sel_init);
  objc_msgSend(v18, sel_addContainer_toAccountWithIdentifier_, v15, 0);
  objc_msgSend(v18, sel_setIgnoresContactProviderRestrictions_, 1);
  id v19 = sub_190B309A4();
  v61[0] = 0;
  unsigned __int8 v20 = objc_msgSend(v19, sel_executeSaveRequest_error_, v18, v61);

  if (v20)
  {
    id v21 = v61[0];
    sub_190B55FD4();
    id v22 = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v23 = v58;
    unint64_t v24 = sub_190B76FA8();
    int v25 = sub_190B77588();
    uint64_t v54 = v24;
    if (os_log_type_enabled(v24, (os_log_type_t)v25))
    {
      int v52 = v25;
      uint64_t v53 = v2;
      uint64_t v26 = swift_slowAlloc();
      uint64_t v51 = (void *)swift_slowAlloc();
      v61[0] = v51;
      *(_DWORD *)uint64_t v26 = 136446722;
      id v27 = objc_msgSend(v22, sel_identifier);
      if (v27)
      {
        unint64_t v28 = v27;
        uint64_t v29 = sub_190B77168();
        unint64_t v31 = v30;

        uint64_t v60 = sub_190B21150(v29, v31, (uint64_t *)v61);
        sub_190B77648();

        swift_bridgeObjectRelease();
        *(_WORD *)(v26 + 12) = 2082;
        swift_bridgeObjectRetain();
        uint64_t v60 = sub_190B21150(v59, v14, (uint64_t *)v61);
        sub_190B77648();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v26 + 22) = 2082;
        swift_bridgeObjectRetain();
        uint64_t v60 = sub_190B21150(v57, v10, (uint64_t *)v61);
        sub_190B77648();
        swift_bridgeObjectRelease_n();
        char v32 = v54;
        _os_log_impl(&dword_1909E3000, v54, (os_log_type_t)v52, "createProviderContainer() created container with identifier %{public}s and provider identifier %{public}s for %{public}s app", (uint8_t *)v26, 0x20u);
        uint64_t v33 = v51;
        swift_arrayDestroy();
        MEMORY[0x192FD42A0](v33, -1, -1);
        MEMORY[0x192FD42A0](v26, -1, -1);

        return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v58, v56);
      }
      else
      {

        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        __break(1u);
      }
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

      return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v23, v56);
    }
  }
  else
  {
    id v35 = v61[0];
    unint64_t v36 = (void *)sub_190B76D68();

    swift_willThrow();
    id v37 = v36;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v38 = v36;
    uint64_t v39 = sub_190B76FA8();
    os_log_type_t v40 = sub_190B77578();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = swift_slowAlloc();
      uint64_t v42 = (void *)swift_slowAlloc();
      v61[0] = v42;
      *(_DWORD *)uint64_t v41 = 136446722;
      swift_bridgeObjectRetain();
      uint64_t v60 = sub_190B21150(v59, v14, (uint64_t *)v61);
      sub_190B77648();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v41 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v60 = sub_190B21150(v57, v10, (uint64_t *)v61);
      sub_190B77648();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v41 + 22) = 2082;
      uint64_t v60 = (uint64_t)v36;
      id v43 = v36;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5B78);
      uint64_t v44 = sub_190B771C8();
      uint64_t v60 = sub_190B21150(v44, v45, (uint64_t *)v61);
      sub_190B77648();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1909E3000, v39, v40, "createProviderContainer() failed to create container with provider identifier %{public}s for %{public}s app, error = %{public}s", (uint8_t *)v41, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x192FD42A0](v42, -1, -1);
      MEMORY[0x192FD42A0](v41, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    uint64_t v50 = v56;
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v58, v50);
  }
  return result;
}

uint64_t sub_190B3DCDC()
{
  v71[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v0 = sub_190B76FC8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v61 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E92A5838 != -1) {
    swift_once();
  }
  uint64_t v4 = __swift_project_value_buffer(v0, (uint64_t)qword_1E92A8498);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  if (qword_1E92A3BD0 != -1) {
    swift_once();
  }
  uint64_t v69 = v3;
  uint64_t v5 = 0xD000000000000016;
  uint64_t v6 = _AppExtensionIdentity.appDisplayName.getter();
  unint64_t v8 = v7;
  uint64_t v9 = _s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0();
  uint64_t v67 = v1;
  if (v9 == 0xD00000000000002BLL && v10 == 0x8000000190B9F210)
  {
    swift_bridgeObjectRelease();
    unint64_t v11 = 0x8000000190B9F2B0;
  }
  else
  {
    uint64_t v12 = v6;
    char v13 = sub_190B77998();
    swift_bridgeObjectRelease();
    if (v13)
    {
      unint64_t v11 = 0x8000000190B9F2B0;
      uint64_t v6 = v12;
      uint64_t v5 = 0xD000000000000016;
    }
    else
    {
      unint64_t v14 = (void *)sub_190B76F88();
      if (v14
        && (id v15 = v14,
            id v16 = objc_msgSend(v14, sel_bundleIdentifier),
            v15,
            v16))
      {
        uint64_t v17 = sub_190B77168();
        unint64_t v11 = v18;

        uint64_t v6 = v12;
        uint64_t v5 = v17;
      }
      else
      {
        unint64_t v11 = 0xE700000000000000;
        uint64_t v6 = v12;
        uint64_t v5 = 0x6E776F6E6B6E75;
      }
    }
  }
  uint64_t v66 = v6;
  uint64_t v19 = sub_190B3EB64(v5, v11, v6, v8);
  if (!v19)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v69, v0);
  }
  unsigned __int8 v20 = (void *)v19;
  uint64_t v65 = v0;
  id v21 = objc_msgSend(objc_allocWithZone((Class)CNSaveRequest), sel_init);
  objc_msgSend(v21, sel_deleteContainer_, v20);
  objc_msgSend(v21, sel_setIgnoresContactProviderRestrictions_, 1);
  id v22 = sub_190B309A4();
  v71[0] = 0;
  unsigned __int8 v23 = objc_msgSend(v22, sel_executeSaveRequest_error_, v21, v71);

  if (v23)
  {
    id v24 = v71[0];
    sub_190B5623C();
    int v25 = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v26 = v69;
    id v27 = sub_190B76FA8();
    int v28 = sub_190B77588();
    if (!os_log_type_enabled(v27, (os_log_type_t)v28))
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

      id v38 = *(uint64_t (**)(char *, uint64_t))(v67 + 8);
      uint64_t v39 = v26;
      return v38(v39, v65);
    }
    LODWORD(v62) = v28;
    os_log_t v63 = v27;
    uint64_t v29 = swift_slowAlloc();
    uint64_t v61 = (void *)swift_slowAlloc();
    v71[0] = v61;
    *(_DWORD *)uint64_t v29 = 136446722;
    uint64_t v64 = v25;
    id v30 = [v25 identifier];
    if (v30)
    {
      unint64_t v31 = v30;
      uint64_t v32 = sub_190B77168();
      unint64_t v34 = v33;

      uint64_t v70 = sub_190B21150(v32, v34, (uint64_t *)v71);
      sub_190B77648();
      id v35 = v64;

      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v70 = sub_190B21150(v5, v11, (uint64_t *)v71);
      sub_190B77648();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v29 + 22) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v70 = sub_190B21150(v66, v8, (uint64_t *)v71);
      sub_190B77648();
      swift_bridgeObjectRelease_n();
      os_log_t v36 = v63;
      _os_log_impl(&dword_1909E3000, v63, (os_log_type_t)v62, "deleteProviderContainer() deleted container with identifier %{public}s and provider identifier %{public}s for %{public}s app", (uint8_t *)v29, 0x20u);
      id v37 = v61;
      swift_arrayDestroy();
      MEMORY[0x192FD42A0](v37, -1, -1);
      MEMORY[0x192FD42A0](v29, -1, -1);

      id v38 = *(uint64_t (**)(char *, uint64_t))(v67 + 8);
      uint64_t v39 = v69;
      return v38(v39, v65);
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_28;
  }
  id v41 = v71[0];
  uint64_t v42 = (void *)sub_190B76D68();

  swift_willThrow();
  id v43 = v20;
  id v44 = v42;
  id v21 = v43;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v45 = v42;
  uint64_t v46 = v69;
  uint64_t v47 = sub_190B76FA8();
  int v48 = sub_190B77578();
  uint64_t v64 = v47;
  if (!os_log_type_enabled(v47, (os_log_type_t)v48))
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    goto LABEL_26;
  }
  LODWORD(v63) = v48;
  id v68 = v42;
  uint64_t v49 = swift_slowAlloc();
  uint64_t v62 = (void *)swift_slowAlloc();
  v71[0] = v62;
  *(_DWORD *)uint64_t v49 = 136446978;
  id v50 = objc_msgSend(v21, sel_identifier);
  if (v50)
  {
    uint64_t v51 = v50;
    uint64_t v52 = sub_190B77168();
    unint64_t v54 = v53;

    uint64_t v70 = sub_190B21150(v52, v54, (uint64_t *)v71);
    sub_190B77648();

    swift_bridgeObjectRelease();
    *(_WORD *)(v49 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v70 = sub_190B21150(v5, v11, (uint64_t *)v71);
    sub_190B77648();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v49 + 22) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v70 = sub_190B21150(v66, v8, (uint64_t *)v71);
    sub_190B77648();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v49 + 32) = 2082;
    id v55 = v68;
    uint64_t v70 = (uint64_t)v68;
    id v56 = v68;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5B78);
    uint64_t v57 = sub_190B771C8();
    uint64_t v70 = sub_190B21150(v57, v58, (uint64_t *)v71);
    sub_190B77648();
    swift_bridgeObjectRelease();

    uint64_t v59 = v64;
    _os_log_impl(&dword_1909E3000, v64, (os_log_type_t)v63, "deleteProviderContainer() failed to delete container with identifier %{public}s and provider identifier %{public}s for %{public}s app, error = %{public}s", (uint8_t *)v49, 0x2Au);
    uint64_t v60 = v62;
    swift_arrayDestroy();
    MEMORY[0x192FD42A0](v60, -1, -1);
    MEMORY[0x192FD42A0](v49, -1, -1);

    uint64_t v46 = v69;
LABEL_26:
    swift_willThrow();

    return (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v46, v65);
  }
LABEL_28:

  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_190B3E5FC()
{
  uint64_t v0 = sub_190B76FC8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E92A5838 != -1) {
    swift_once();
  }
  uint64_t v4 = __swift_project_value_buffer(v0, (uint64_t)qword_1E92A8498);
  uint64_t v5 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  uint64_t v44 = v0;
  v5(v3, v4, v0);
  if (qword_1E92A3BD0 != -1) {
    swift_once();
  }
  unint64_t v6 = 0xD000000000000016;
  uint64_t v7 = qword_1E92A3BC0;
  uint64_t v8 = _AppExtensionIdentity.appDisplayName.getter();
  unint64_t v10 = v9;
  if (_s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0() == 0xD00000000000002BLL
    && v11 == 0x8000000190B9F210)
  {
    swift_bridgeObjectRelease();
    unint64_t v12 = 0x8000000190B9F2B0;
  }
  else
  {
    id v43 = v3;
    unint64_t v13 = v10;
    uint64_t v14 = v8;
    uint64_t v15 = v7;
    char v16 = sub_190B77998();
    swift_bridgeObjectRelease();
    if (v16)
    {
      unint64_t v12 = 0x8000000190B9F2B0;
    }
    else
    {
      unint64_t v6 = 0x6E776F6E6B6E75;
      uint64_t v17 = (void *)sub_190B76F88();
      if (v17
        && (unint64_t v18 = v17,
            id v19 = objc_msgSend(v17, sel_bundleIdentifier),
            v18,
            v19))
      {
        unint64_t v6 = sub_190B77168();
        unint64_t v12 = v20;
      }
      else
      {
        unint64_t v12 = 0xE700000000000000;
      }
    }
    uint64_t v7 = v15;
    uint64_t v8 = v14;
    unint64_t v10 = v13;
    uint64_t v3 = v43;
  }
  uint64_t v47 = sub_190B56460();
  if (v47)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v21 = (void *)sub_190B3EB64(v6, v12, v8, v10);
    uint64_t v47 = (uint64_t)v21;
    if (!v21)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v33 = 0;
LABEL_25:
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v44);
      return v33;
    }
    id v43 = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v22 = sub_190B76FA8();
    int v23 = sub_190B77588();
    if (os_log_type_enabled(v22, (os_log_type_t)v23))
    {
      os_log_t v38 = v22;
      int v40 = v23;
      uint64_t v41 = v8;
      uint64_t v42 = v7;
      uint64_t v24 = swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      v46[0] = v39;
      *(_DWORD *)uint64_t v24 = 136446722;
      id v25 = objc_msgSend(v43, sel_identifier);
      if (!v25) {
        goto LABEL_27;
      }
      uint64_t v26 = v25;
      v37[1] = v24 + 4;
      uint64_t v27 = sub_190B77168();
      unint64_t v29 = v28;

      uint64_t v45 = sub_190B21150(v27, v29, v46);
      sub_190B77648();
      id v30 = v43;

      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v45 = sub_190B21150(v6, v12, v46);
      sub_190B77648();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v24 + 22) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v45 = sub_190B21150(v41, v10, v46);
      sub_190B77648();
      swift_bridgeObjectRelease_n();
      os_log_t v31 = v38;
      _os_log_impl(&dword_1909E3000, v38, (os_log_type_t)v40, "providerContainer() fetched container with identifier %{public}s and provider identifier %{public}s for %{public}s app", (uint8_t *)v24, 0x20u);
      uint64_t v32 = v39;
      swift_arrayDestroy();
      MEMORY[0x192FD42A0](v32, -1, -1);
      MEMORY[0x192FD42A0](v24, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      unint64_t v34 = v43;
    }
    id v35 = v43;
    sub_190B55FD4();
  }
  swift_beginAccess();
  uint64_t v33 = v47;
  if (v47) {
    goto LABEL_25;
  }
  __break(1u);
LABEL_27:

  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_190B3EB64(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v41 = a3;
  v43[4] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v7 = sub_190B76FC8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E92A5838 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v7, (uint64_t)qword_1E92A8498);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  unint64_t v12 = self;
  unint64_t v13 = (void *)sub_190B77158();
  id v14 = objc_msgSend(v12, sel_predicateForContainerWithProviderIdentifier_, v13);

  id v15 = sub_190B309A4();
  v43[0] = 0;
  id v16 = objc_msgSend(v15, sel_containersMatchingPredicate_error_, v14, v43);

  id v17 = v43[0];
  if (!v16)
  {
    id v23 = v43[0];
    uint64_t v24 = v10;
    id v25 = (void *)sub_190B76D68();

    swift_willThrow();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v26 = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v27 = v25;
    unint64_t v28 = sub_190B76FA8();
    os_log_type_t v29 = sub_190B77578();
    int v30 = v29;
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v31 = swift_slowAlloc();
      int v40 = v30;
      uint64_t v32 = v31;
      uint64_t v39 = (void *)swift_slowAlloc();
      v43[0] = v39;
      *(_DWORD *)uint64_t v32 = 136446722;
      swift_bridgeObjectRetain();
      uint64_t v42 = sub_190B21150(a1, a2, (uint64_t *)v43);
      sub_190B77648();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v32 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v42 = sub_190B21150(v41, a4, (uint64_t *)v43);
      sub_190B77648();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v32 + 22) = 2082;
      uint64_t v42 = (uint64_t)v25;
      id v33 = v25;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5B78);
      uint64_t v34 = sub_190B771C8();
      uint64_t v42 = sub_190B21150(v34, v35, (uint64_t *)v43);
      sub_190B77648();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1909E3000, v28, (os_log_type_t)v40, "fetchProviderContainer() failed to find container with provider identifier %{public}s for %{public}s app, error = %{public}s", (uint8_t *)v32, 0x20u);
      os_log_t v36 = v39;
      swift_arrayDestroy();
      MEMORY[0x192FD42A0](v36, -1, -1);
      MEMORY[0x192FD42A0](v32, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v24, v7);
    return 0;
  }
  sub_190B23474(0, &qword_1E92A3D48);
  unint64_t v18 = sub_190B772C8();
  id v19 = v17;

  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v37 = sub_190B778A8();
    swift_bridgeObjectRelease();
    if (v37)
    {
      swift_bridgeObjectRetain();
      uint64_t v38 = sub_190B778A8();
      swift_bridgeObjectRelease();
      if (v38) {
        goto LABEL_6;
      }
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);

      return 0;
    }
LABEL_19:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);

    swift_bridgeObjectRelease();
    return 0;
  }
  if (!*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_19;
  }
LABEL_6:
  if ((v18 & 0xC000000000000001) != 0)
  {
    id v20 = (id)MEMORY[0x192FD1FB0](0, v18);
  }
  else
  {
    if (!*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      __break(1u);
    }
    id v20 = *(id *)(v18 + 32);
  }
  id v21 = v20;
  swift_bridgeObjectRelease();
  objc_msgSend(v21, sel_mutableCopy);

  sub_190B77698();
  swift_unknownObjectRelease();

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_190B23474(0, &qword_1E92A5C00);
  if (swift_dynamicCast()) {
    return v42;
  }
  else {
    return 0;
  }
}

void sub_190B3F14C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v23 = a4;
  uint64_t v24 = a5;
  id v25 = a2;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92A5D10);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_190B76FC8();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11);
  id v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a3, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  unint64_t v15 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v16 = (v13 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = (*(unsigned __int8 *)(v8 + 80) + v16 + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v18 + v15, v14, v11);
  id v19 = (void *)(v18 + v16);
  uint64_t v20 = v24;
  void *v19 = v23;
  v19[1] = v20;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v18 + v17, v10, v7);
  aBlock[4] = sub_190B43EE4;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_190B3F574;
  aBlock[3] = &block_descriptor_182;
  id v21 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(v25, sel_monitorForDeath_, v21);
  _Block_release(v21);
}

uint64_t sub_190B3F3F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_190B76FA8();
  os_log_type_t v8 = sub_190B77588();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v12 = v10;
    *(_DWORD *)uint64_t v9 = 136446210;
    swift_bridgeObjectRetain();
    sub_190B21150(a4, a5, &v12);
    sub_190B77648();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1909E3000, v7, v8, "terminateExtension() did terminate extension %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FD42A0](v10, -1, -1);
    MEMORY[0x192FD42A0](v9, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92A5D10);
  return sub_190B77408();
}

void sub_190B3F574(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(id, id))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(v7, v6);
  swift_release();
}

uint64_t sub_190B3F5F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v5[6] = a4;
  v5[7] = v4;
  v5[4] = a2;
  v5[5] = a3;
  v5[3] = a1;
  uint64_t v6 = sub_190B76F58();
  v5[8] = v6;
  v5[9] = *(void *)(v6 - 8);
  v5[10] = swift_task_alloc();
  uint64_t v7 = sub_190B76FC8();
  v5[11] = v7;
  v5[12] = *(void *)(v7 - 8);
  v5[13] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_190B3F748, 0, 0);
}

uint64_t sub_190B3F748()
{
  if (qword_1E92A5838 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  uint64_t v3 = v0[11];
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1E92A8498);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)sub_190B77158();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(self, sel_predicateMatchingBundleIdentifier_, v5);

  uint64_t v7 = self;
  v0[2] = 0;
  id v8 = objc_msgSend(v7, sel_handleForPredicate_error_, v6, v0 + 2);
  uint64_t v9 = (void *)v0[2];
  if (v8)
  {
    uint64_t v10 = v8;
    id v11 = v9;

    uint64_t v12 = (void *)swift_task_alloc();
    v0[14] = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_190B3FA44;
    uint64_t v13 = v0[10];
    uint64_t v14 = v0[6];
    uint64_t v15 = v0[5];
    return sub_190B3C330(v13, v15, v14);
  }
  else
  {
    id v17 = v9;
    uint64_t v18 = (void *)sub_190B76D68();

    swift_willThrow();
    id v19 = sub_190B76FA8();
    os_log_type_t v20 = sub_190B77588();
    if (os_log_type_enabled(v19, v20))
    {
      id v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v21 = 0;
      _os_log_impl(&dword_1909E3000, v19, v20, "invalidateExtensionImpl() did not invalidate as extension is not loaded", v21, 2u);
      MEMORY[0x192FD42A0](v21, -1, -1);
    }

    (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v22 = (uint64_t (*)(void))v0[1];
    return v22();
  }
}

uint64_t sub_190B3FA44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6 = (void *)*v5;
  v6[15] = a1;
  v6[16] = a2;
  v6[17] = a3;
  v6[18] = a4;
  v6[19] = v4;
  swift_task_dealloc();
  if (v4) {
    uint64_t v7 = sub_190B402B0;
  }
  else {
    uint64_t v7 = sub_190B3FB8C;
  }
  return MEMORY[0x1F4188298](v7, 0, 0);
}

uint64_t sub_190B3FB8C()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = sub_190B76F48();
  *(void *)(v0 + 160) = v2;
  if (v1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 72) + 8))(*(void *)(v0 + 80), *(void *)(v0 + 64));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(void, void))(*(void *)(v0 + 96) + 8))(*(void *)(v0 + 104), *(void *)(v0 + 88));
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  else
  {
    uint64_t v5 = (void *)v2;
    uint64_t v6 = *(void *)(v0 + 144);
    uint64_t v7 = *(void *)(v0 + 120);
    uint64_t v8 = *(void *)(v0 + 104);
    uint64_t v9 = *(void *)(v0 + 48);
    uint64_t v10 = *(void *)(v0 + 56);
    uint64_t v11 = *(void *)(v0 + 40);
    long long v15 = *(_OWORD *)(v0 + 24);
    long long v16 = *(_OWORD *)(v0 + 128);
    id v12 = objc_msgSend(self, sel_interfaceWithProtocol_, &unk_1EE0B8580);
    objc_msgSend(v5, sel_setRemoteObjectInterface_, v12);

    objc_msgSend(v5, sel_resume);
    uint64_t v13 = swift_task_alloc();
    *(void *)(v0 + 16_Block_object_dispose(&STACK[0x228], 8) = v13;
    *(void *)(v13 + 16) = v5;
    *(void *)(v13 + 24) = v8;
    *(void *)(v13 + 32) = v7;
    *(_OWORD *)(v13 + 40) = v16;
    *(void *)(v13 + 56) = v6;
    *(_OWORD *)(v13 + 64) = v15;
    *(void *)(v13 + 80) = v10;
    *(void *)(v13 + 8_Block_object_dispose(&STACK[0x228], 8) = v11;
    *(void *)(v13 + 96) = v9;
    uint64_t v14 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_190B3FE28;
    return MEMORY[0x1F4188160]();
  }
}

uint64_t sub_190B3FE28()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  v2[23] = v0;
  uint64_t v4 = (void *)swift_task_alloc();
  v2[24] = v4;
  void *v4 = v3;
  v4[1] = sub_190B3FFEC;
  uint64_t v5 = v2[16];
  uint64_t v6 = v2[15];
  return sub_190B418B8(v6, v5);
}

uint64_t sub_190B3FFEC()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_190B40130, 0, 0);
}

uint64_t sub_190B40130()
{
  uint64_t v1 = (void *)v0[23];
  uint64_t v2 = (void *)v0[20];
  uint64_t v4 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v5 = v0[8];
  if (v1)
  {
    id v6 = v1;
    swift_willThrow();
  }
  else
  {
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_190B402B0()
{
  (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_190B4036C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, void *a12)
{
  uint64_t v80 = a8;
  unint64_t v92 = a5;
  unint64_t v93 = a7;
  uint64_t v91 = a6;
  uint64_t v89 = a4;
  id v85 = a2;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5D00);
  uint64_t v90 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x1F4188790](v14);
  uint64_t v88 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_190B76FC8();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  MEMORY[0x1F4188790](v17);
  os_log_type_t v20 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v21 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  uint64_t v86 = a3;
  uint64_t v79 = v18 + 16;
  uint64_t v78 = v21;
  v21(v20, a3, v17);
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  uint64_t v87 = a1;
  uint64_t v77 = v15 + 16;
  uint64_t v76 = v22;
  v22((char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v14);
  uint64_t v23 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v24 = (v23 + 16) & ~v23;
  uint64_t v74 = v19 + 7;
  unint64_t v25 = (v24 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (v25 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v71 = (char *)(v27 + 16);
  uint64_t v28 = (v26 + v27 + 16) & ~v27;
  uint64_t v82 = v16;
  uint64_t v29 = v23;
  unint64_t v70 = v27;
  uint64_t v72 = v23 | v27 | 7;
  uint64_t v30 = swift_allocObject();
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  uint64_t v75 = v20;
  uint64_t v83 = v17;
  uint64_t v81 = v18 + 32;
  id v73 = v31;
  v31((char *)(v30 + v24), v20, v17);
  uint64_t v32 = (uint64_t *)(v30 + v25);
  id v33 = v88;
  unint64_t v35 = v92;
  unint64_t v34 = v93;
  uint64_t *v32 = v89;
  v32[1] = v35;
  os_log_t v36 = (uint64_t *)(v30 + v26);
  uint64_t v37 = v90;
  *os_log_t v36 = v91;
  v36[1] = v34;
  uint64_t v38 = *(void (**)(uint64_t, char *, uint64_t))(v15 + 32);
  uint64_t v84 = v15 + 32;
  v38(v30 + v28, v33, v37);
  id v99 = sub_190B439EC;
  uint64_t v100 = (void *)v30;
  aBlocuint64_t k = MEMORY[0x1E4F143A8];
  uint64_t v96 = 1107296256;
  uint64_t v97 = sub_190B327F4;
  uint64_t v98 = &block_descriptor_1;
  uint64_t v39 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  id v40 = objc_msgSend(v85, sel_remoteObjectProxyWithErrorHandler_, v39);
  _Block_release(v39);
  sub_190B77698();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5D08);
  if (swift_dynamicCast())
  {
    id v85 = a12;
    uint64_t v68 = a11;
    uint64_t v69 = (void (*)(char *, char *, uint64_t))v38;
    unint64_t v41 = ~v70;
    unint64_t v70 = v94;
    swift_unknownObjectRetain();
    uint64_t v80 = sub_190B77158();
    uint64_t v42 = v75;
    uint64_t v43 = v83;
    v78(v75, v86, v83);
    uint64_t v44 = v88;
    uint64_t v45 = v90;
    v76(v88, v87, v90);
    uint64_t v46 = (v29 + 40) & ~v29;
    unint64_t v47 = (v46 + v74) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v48 = (v47 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v49 = (unint64_t)&v71[v48] & v41;
    id v50 = (char *)swift_allocObject();
    uint64_t v51 = v68;
    *((void *)v50 + 2) = a10;
    *((void *)v50 + 3) = v51;
    *((void *)v50 + 4) = v85;
    v73(&v50[v46], v42, v43);
    uint64_t v52 = (uint64_t *)&v50[v47];
    unint64_t v53 = v92;
    unint64_t v54 = v93;
    *uint64_t v52 = v89;
    v52[1] = v53;
    id v55 = (uint64_t *)&v50[v48];
    *id v55 = v91;
    v55[1] = v54;
    v69(&v50[v49], v44, v45);
    id v99 = sub_190B43A6C;
    uint64_t v100 = v50;
    aBlocuint64_t k = MEMORY[0x1E4F143A8];
    uint64_t v96 = 1107296256;
    uint64_t v97 = sub_190B32C94;
    uint64_t v98 = &block_descriptor_173;
    id v56 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v57 = a10;
    swift_bridgeObjectRetain();
    swift_release();
    unint64_t v58 = (void *)v80;
    objc_msgSend((id)v70, sel_invalidateFor_reply_, v80, v56);
    _Block_release(v56);

    return swift_unknownObjectRelease_n();
  }
  else
  {
    uint64_t v60 = v89;
    uint64_t v62 = v91;
    unint64_t v61 = v92;
    swift_bridgeObjectRetain_n();
    unint64_t v63 = v93;
    swift_bridgeObjectRetain_n();
    uint64_t v64 = sub_190B76FA8();
    os_log_type_t v65 = sub_190B77578();
    if (os_log_type_enabled(v64, v65))
    {
      uint64_t v66 = swift_slowAlloc();
      uint64_t v67 = swift_slowAlloc();
      aBlocuint64_t k = v67;
      *(_DWORD *)uint64_t v66 = 136446466;
      swift_bridgeObjectRetain();
      uint64_t v94 = sub_190B21150(v60, v61, &aBlock);
      sub_190B77648();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v66 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v94 = sub_190B21150(v62, v63, &aBlock);
      sub_190B77648();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1909E3000, v64, v65, "invalidateExtensionImpl() failed due to some XPC connection error with extension %{public}s for %{public}s app, extension proxy might not conform to CNContactProviderExtensionXPCProtocol.", (uint8_t *)v66, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x192FD42A0](v67, -1, -1);
      MEMORY[0x192FD42A0](v66, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    type metadata accessor for CNError(0);
    uint64_t v94 = 1;
    sub_190B41258(MEMORY[0x1E4FBC860]);
    sub_190B43A10();
    sub_190B76D48();
    uint64_t v94 = aBlock;
    return sub_190B773F8();
  }
}

uint64_t sub_190B40B3C(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, char *a8)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v14 = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v15 = a1;
  uint64_t v16 = sub_190B76FA8();
  os_log_type_t v17 = sub_190B77578();
  if (os_log_type_enabled(v16, v17))
  {
    format = a8;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v26 = v19;
    *(_DWORD *)uint64_t v18 = 136446722;
    swift_bridgeObjectRetain();
    sub_190B21150(a3, a4, &v26);
    sub_190B77648();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v18 + 12) = 2082;
    swift_bridgeObjectRetain();
    sub_190B21150(a5, a6, &v26);
    sub_190B77648();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v18 + 22) = 2082;
    id v20 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5B78);
    uint64_t v21 = sub_190B771C8();
    sub_190B21150(v21, v22, &v26);
    sub_190B77648();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1909E3000, v16, v17, format, (uint8_t *)v18, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x192FD42A0](v19, -1, -1);
    MEMORY[0x192FD42A0](v18, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v26 = (uint64_t)a1;
  id v23 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5D00);
  return sub_190B773F8();
}

uint64_t sub_190B40DDC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, unint64_t a9)
{
  sub_190B43A84(a3, a4);
  if (a1)
  {
    id v13 = a1;
    id v14 = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v15 = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_190B76FA8();
    os_log_type_t v17 = sub_190B77578();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v24 = v19;
      *(_DWORD *)uint64_t v18 = 136446722;
      swift_bridgeObjectRetain();
      sub_190B21150(a6, a7, &v24);
      sub_190B77648();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v18 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_190B21150(a8, a9, &v24);
      sub_190B77648();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v18 + 22) = 2082;
      id v20 = a1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5B78);
      uint64_t v21 = sub_190B771C8();
      sub_190B21150(v21, v22, &v24);
      sub_190B77648();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1909E3000, v16, v17, "invalidateExtensionImpl() failed to invalidate extension %{public}s for %{public}s app, error = %{public}s", (uint8_t *)v18, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x192FD42A0](v19, -1, -1);
      MEMORY[0x192FD42A0](v18, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    uint64_t v24 = (uint64_t)a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5D00);
    return sub_190B773F8();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5D00);
    return sub_190B77408();
  }
}

id CNContactProviderSupportHost.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id CNContactProviderSupportHost.init()()
{
  *(void *)&v0[OBJC_IVAR____TtC8Contacts28CNContactProviderSupportHost____lazy_storage___contactStore] = 0;
  id v1 = &v0[OBJC_IVAR____TtC8Contacts28CNContactProviderSupportHost_ContactProviderErrorDomain];
  *(void *)id v1 = 0xD000000000000024;
  *((void *)v1 + 1) = 0x8000000190B9FDC0;
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for CNContactProviderSupportHost();
  return objc_msgSendSuper2(&v3, sel_init);
}

id CNContactProviderSupportHost.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CNContactProviderSupportHost();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_190B41238@<X0>(uint64_t a1@<X8>)
{
  return sub_190B55D18(v1[2], v1[3], v1[4], a1);
}

unint64_t sub_190B41258(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    objc_super v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3D90);
  uint64_t v2 = sub_190B778E8();
  objc_super v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_190B43D04(v6, (uint64_t)&v15);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_190B41384(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_190B23134(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_190B41384(uint64_t a1, uint64_t a2)
{
  sub_190B77A58();
  sub_190B771D8();
  uint64_t v4 = sub_190B77A68();

  return sub_190B413FC(a1, a2, v4);
}

unint64_t sub_190B413FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_190B77998() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      unint64_t i = (i + 1) & v12;
      if ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
      {
        BOOL v13 = (void *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_190B77998() & 1) == 0)
        {
          for (unint64_t i = (i + 1) & v12; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
          {
            uint64_t v15 = (void *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2) {
              break;
            }
            if (sub_190B77998()) {
              break;
            }
          }
        }
      }
    }
  }
  return i;
}

uint64_t sub_190B41544(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_190B4156C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_190B41594(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3BB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_190B415FC(uint64_t a1)
{
  return sub_190B31EA0(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void **)(v1 + 72), *(void *)(v1 + 80), *(void **)(v1 + 88));
}

void *sub_190B4163C@<X0>(void *(*a1)(uint64_t *__return_ptr)@<X1>, void *a2@<X8>)
{
  unint64_t result = a1(&v5);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_190B41680(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v15 = MEMORY[0x1E4FBC860];
    sub_190B77838();
    uint64_t v4 = *(void *)(sub_190B76F98() - 8);
    uint64_t v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v13 = *(void *)(v4 + 72);
    do
    {
      _s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0();
      _AppExtensionIdentity.appDisplayName.getter();
      uint64_t v11 = (void *)sub_190B3E5FC();
      uint64_t v12 = v11;
      if (v11)
      {
        unsigned int v14 = objc_msgSend(v11, sel_isEnabled);
      }
      else
      {
        unsigned int v14 = 0;
      }
      id v6 = objc_allocWithZone((Class)CNContactProviderSupportDomain);
      uint64_t v7 = (void *)sub_190B77158();
      uint64_t v8 = (void *)sub_190B77158();
      swift_bridgeObjectRelease();
      uint64_t v9 = (void *)sub_190B77048();
      char v10 = (void *)sub_190B77158();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_initWithDomainIdentifer_displayName_userInfo_bundleIdentifier_registered_enabled_, v7, v8, v9, v10, v12 != 0, v14);

      sub_190B77808();
      sub_190B77848();
      sub_190B77858();
      sub_190B77818();
      v5 += v13;
      --v2;
    }
    while (v2);
    return v15;
  }
  return result;
}

uint64_t sub_190B418B8(uint64_t a1, uint64_t a2)
{
  v2[8] = a1;
  v2[9] = a2;
  uint64_t v3 = sub_190B76FC8();
  v2[10] = v3;
  v2[11] = *(void *)(v3 - 8);
  v2[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_190B419A4, 0, 0);
}

uint64_t sub_190B419A4()
{
  id v50 = v0;
  v49[1] = *MEMORY[0x1E4F143B8];
  if (qword_1E92A5838 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[10];
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1E92A8498);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v2, v4, v3);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_190B76FA8();
  os_log_type_t v6 = sub_190B77588();
  BOOL v7 = os_log_type_enabled(v5, v6);
  unint64_t v8 = v0[9];
  if (v7)
  {
    uint64_t v9 = v0[8];
    char v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    v49[0] = v11;
    *(_DWORD *)char v10 = 136446210;
    swift_bridgeObjectRetain();
    v0[7] = sub_190B21150(v9, v8, v49);
    sub_190B77648();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1909E3000, v5, v6, "terminateExtension() will terminate extension %{public}s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FD42A0](v11, -1, -1);
    MEMORY[0x192FD42A0](v10, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = (void *)sub_190B77158();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(self, sel_predicateMatchingBundleIdentifier_, v12);
  v0[13] = v13;

  unsigned int v14 = self;
  v0[2] = 0;
  id v15 = v13;
  id v16 = objc_msgSend(v14, sel_handleForPredicate_error_, v15, v0 + 2);
  v0[14] = v16;
  long long v17 = (void *)v0[2];
  if (v16)
  {
    uint64_t v18 = v16;
    id v19 = v17;

    id v20 = objc_allocWithZone(MEMORY[0x1E4F96488]);
    uint64_t v21 = (void *)sub_190B77158();
    id v22 = objc_msgSend(v20, sel_initWithExplanation_, v21);
    v0[15] = v22;

    id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F96490]), sel_initWithPredicate_context_, v15, v22);
    v0[16] = v23;
    v0[6] = 0;
    unsigned __int8 v24 = objc_msgSend(v23, sel_execute_, v0 + 6);
    unint64_t v25 = (void *)v0[6];
    if (v24)
    {
      uint64_t v26 = v0[12];
      uint64_t v28 = v0[8];
      uint64_t v27 = v0[9];
      uint64_t v29 = (void *)swift_task_alloc();
      v0[17] = v29;
      _OWORD v29[2] = v18;
      v29[3] = v26;
      v29[4] = v28;
      v29[5] = v27;
      id v30 = v25;
      uint64_t v31 = (void *)swift_task_alloc();
      v0[18] = v31;
      void *v31 = v0;
      v31[1] = sub_190B42070;
      return MEMORY[0x1F41880D8]();
    }
    id v34 = v25;
    id v33 = (void *)sub_190B76D68();

    swift_willThrow();
  }
  else
  {
    id v32 = v17;
    id v33 = (void *)sub_190B76D68();

    swift_willThrow();
    id v22 = v15;
  }

  swift_bridgeObjectRetain();
  id v35 = v33;
  swift_bridgeObjectRetain();
  id v36 = v33;
  uint64_t v37 = sub_190B76FA8();
  os_log_type_t v38 = sub_190B77578();
  BOOL v39 = os_log_type_enabled(v37, v38);
  unint64_t v40 = v0[9];
  if (v39)
  {
    uint64_t v41 = v0[8];
    uint64_t v42 = swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    v49[0] = v43;
    *(_DWORD *)uint64_t v42 = 136446466;
    swift_bridgeObjectRetain();
    v0[3] = sub_190B21150(v41, v40, v49);
    sub_190B77648();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v42 + 12) = 2082;
    v0[4] = v33;
    id v44 = v33;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5B78);
    uint64_t v45 = sub_190B771C8();
    v0[5] = sub_190B21150(v45, v46, v49);
    sub_190B77648();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1909E3000, v37, v38, "terminateExtension() failed to terminate extension %{public}s, error = %{public}s", (uint8_t *)v42, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x192FD42A0](v43, -1, -1);
    MEMORY[0x192FD42A0](v42, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
  swift_task_dealloc();
  unint64_t v47 = (uint64_t (*)(void))v0[1];
  return v47();
}

uint64_t sub_190B42070()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_190B421B4, 0, 0);
}

uint64_t sub_190B421B4()
{
  uint64_t v1 = *(void **)(v0 + 120);
  uint64_t v2 = *(void **)(v0 + 128);
  uint64_t v3 = *(void **)(v0 + 112);

  (*(void (**)(void, void))(*(void *)(v0 + 88) + 8))(*(void *)(v0 + 96), *(void *)(v0 + 80));
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_190B4227C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_190B42288()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_190B422D8()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v5 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v0 + 40);
  *(void *)(v1 + 16) = v5;
  *(void *)uint64_t v5 = v1;
  *(void *)(v5 + _Block_object_dispose(&STACK[0x228], 8) = sub_190B446AC;
  *(void *)(v5 + 4_Block_object_dispose(&STACK[0x228], 8) = v3;
  *(void *)(v5 + 56) = v4;
  *(_OWORD *)(v5 + 32) = v6;
  *(void *)(v5 + 24) = v2;
  return MEMORY[0x1F4188298](sub_190B3A2B8, 0, 0);
}

uint64_t sub_190B4239C@<X0>(void *a1@<X8>)
{
  return sub_190B55F70(*(void *)(v1 + 16), a1);
}

void *sub_190B423B8@<X0>(void *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t type metadata accessor for CNContactProviderSupportHost()
{
  return self;
}

uint64_t method lookup function for CNContactProviderSupportHost(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CNContactProviderSupportHost);
}

uint64_t dispatch thunk of CNContactProviderSupportHost.providerContainer(for:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of CNContactProviderSupportHost.synchronize(using:bundleIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v3) + 0x80);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  void *v9 = v4;
  v9[1] = sub_190B42598;
  return v11(a1, a2, a3);
}

uint64_t sub_190B42598()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t dispatch thunk of CNContactProviderSupportHost.invalidateExtension(for:bundleIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v10 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v4) + 0x88);
  id v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v10 + *v10);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_190B446AC;
  return v13(a1, a2, a3, a4);
}

uint64_t dispatch thunk of CNContactProviderSupportHost.resetEnumeration(for:bundleIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v10 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v4) + 0x90);
  id v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v10 + *v10);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_190B446AC;
  return v13(a1, a2, a3, a4);
}

uint64_t dispatch thunk of CNContactProviderSupportHost.isExtensionEnabled(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of CNContactProviderSupportHost.addDomain(_:bundleIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v3) + 0xA8);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  void *v9 = v4;
  v9[1] = sub_190B446AC;
  return v11(a1, a2, a3);
}

uint64_t dispatch thunk of CNContactProviderSupportHost.removeDomain(for:bundleIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v10 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v4) + 0xB0);
  id v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v10 + *v10);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_190B446AC;
  return v13(a1, a2, a3, a4);
}

uint64_t dispatch thunk of CNContactProviderSupportHost.registeredDomains(for:)(uint64_t a1, uint64_t a2)
{
  long long v6 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v2) + 0xB8);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  BOOL v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *BOOL v7 = v3;
  v7[1] = sub_190B42CA4;
  return v9(a1, a2);
}

uint64_t sub_190B42CA4(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t dispatch thunk of CNContactProviderSupportHost.enableDomain(for:bundleIdentifier:showPrompt:shouldSynchronize:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v14 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v6) + 0xC0);
  long long v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v14 + *v14);
  id v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  *id v15 = v7;
  v15[1] = sub_190B446AC;
  return v17(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of CNContactProviderSupportHost.disableDomain(for:bundleIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v4) + 0xC8);
  id v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v10 + *v10);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_190B446AC;
  return v13(a1, a2, a3, a4);
}

uint64_t dispatch thunk of CNContactProviderSupportHost.extensionCount()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of CNContactProviderSupportHost.extensionItems()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

uint64_t sub_190B4308C()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v5 = (void *)v0[4];
  uint64_t v4 = (void *)v0[5];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_190B446AC;
  uint64_t v7 = (uint64_t (*)(int, int, void *, void *))((char *)&dword_1E92A5C10 + dword_1E92A5C10);
  return v7(v2, v3, v5, v4);
}

uint64_t sub_190B43154()
{
  _Block_release(*(const void **)(v0 + 40));

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_190B431A4()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  char v4 = *(unsigned char *)(v0 + 32);
  char v5 = *(unsigned char *)(v0 + 33);
  uint64_t v7 = *(void **)(v0 + 40);
  uint64_t v6 = *(void **)(v0 + 48);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = sub_190B446AC;
  uint64_t v9 = (uint64_t (*)(int, int, char, char, void *, void *))((char *)&dword_1E92A5C20 + dword_1E92A5C20);
  return v9(v2, v3, v4, v5, v7, v6);
}

uint64_t sub_190B43280()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  char v4 = (int *)v0[4];
  char v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *char v5 = v1;
  v5[1] = sub_190B446AC;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1E92A6168 + dword_1E92A6168);
  return v6(v2, v3, v4);
}

uint64_t sub_190B43344(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_190B446AC;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1E92A6178 + dword_1E92A6178);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_190B43410()
{
  _Block_release(*(const void **)(v0 + 24));

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_190B43458()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_190B446AC;
  uint64_t v6 = (uint64_t (*)(int, void *, void *))((char *)&dword_1E92A5C40 + dword_1E92A5C40);
  return v6(v2, v3, v4);
}

uint64_t sub_190B43518()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_190B446AC;
  uint64_t v6 = (uint64_t (*)(int, int, void *))((char *)&dword_1E92A5C60 + dword_1E92A5C60);
  return v6(v2, v3, v4);
}

uint64_t sub_190B435E0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_190B435EC()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = v0[3];
  uint64_t v5 = (void *)v0[4];
  uint64_t v4 = (void *)v0[5];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_190B446AC;
  uint64_t v7 = (uint64_t (*)(void *, int, void *, void *))((char *)&dword_1E92A5C80 + dword_1E92A5C80);
  return v7(v2, v3, v5, v4);
}

uint64_t sub_190B436B8()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v5 = (void *)v0[4];
  uint64_t v4 = (void *)v0[5];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_190B446AC;
  uint64_t v7 = (uint64_t (*)(int, int, void *, void *))((char *)&dword_1E92A5CA0 + dword_1E92A5CA0);
  return v7(v2, v3, v5, v4);
}

uint64_t sub_190B43784()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v5 = (void *)v0[4];
  uint64_t v4 = (void *)v0[5];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_190B446AC;
  uint64_t v7 = (uint64_t (*)(int, int, void *, void *))((char *)&dword_1E92A5CC0 + dword_1E92A5CC0);
  return v7(v2, v3, v5, v4);
}

uint64_t objectdestroy_44Tm()
{
  _Block_release(*(const void **)(v0 + 32));

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_190B438A0()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = v0[3];
  uint64_t v5 = (void *)v0[4];
  uint64_t v4 = (void *)v0[5];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_190B42598;
  uint64_t v7 = (uint64_t (*)(void *, int, void *, void *))((char *)&dword_1E92A5CE0 + dword_1E92A5CE0);
  return v7(v2, v3, v5, v4);
}

uint64_t objectdestroy_48Tm()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_190B439A8(uint64_t a1)
{
  return sub_190B4036C(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void **)(v1 + 80), *(void *)(v1 + 88), *(void **)(v1 + 96));
}

uint64_t sub_190B439EC(void *a1)
{
  return sub_190B4417C(a1, "invalidateExtensionImpl() failed to create remote object proxy for extension %{public}s for %{public}s app, error = %{public}s");
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

unint64_t sub_190B43A10()
{
  unint64_t result = qword_1E92A58C0;
  if (!qword_1E92A58C0)
  {
    type metadata accessor for CNError(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92A58C0);
  }
  return result;
}

uint64_t sub_190B43A6C(uint64_t a1)
{
  return sub_190B44434(a1, (uint64_t (*)(uint64_t, void, void, void, char *, void, void, void, void, char *))sub_190B40DDC);
}

uint64_t sub_190B43A84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3BB8);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v21[-v8];
  uint64_t v10 = sub_190B76F98();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = &v21[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1E92A3BD0 != -1) {
    uint64_t v12 = swift_once();
  }
  uint64_t v15 = qword_1E92A3BC0;
  uint64_t v16 = MEMORY[0x1F4188790](v12);
  *(void *)&v21[-32] = v15;
  *(void *)&v21[-24] = a1;
  *(void *)&v21[-16] = a2;
  MEMORY[0x1F4188790](v16);
  *(void *)&v21[-16] = sub_190B446F0;
  *(void *)&v21[-8] = v17;
  id v19 = v18 + 4;
  os_unfair_lock_lock(v18 + 4);
  sub_190B446C0();
  os_unfair_lock_unlock(v19);
  sub_190B41594((uint64_t)v7, (uint64_t)v9);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1) {
    return sub_190B23144((uint64_t)v9, &qword_1E92A3BB8);
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 32))(v14, v9, v10);
  sub_190B5623C();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v11 + 8))(v14, v10);
}

uint64_t sub_190B43D04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_190B43D6C(uint64_t a1)
{
  sub_190B3F14C(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_190B43D78()
{
  uint64_t v1 = sub_190B76FC8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92A5D10);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8 + 16) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return MEMORY[0x1F4186498](v0, v10, v11);
}

uint64_t sub_190B43EE4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_190B76FC8() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92A5D10);
  uint64_t v8 = *(void *)(v2 + v7);
  unint64_t v9 = *(void *)(v2 + v7 + 8);

  return sub_190B3F3F0(a1, a2, v2 + v6, v8, v9);
}

uint64_t objectdestroy_166Tm()
{
  uint64_t v1 = sub_190B76FC8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  unint64_t v5 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5D00);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8 + 16) & ~v8;
  uint64_t v12 = v9 + *(void *)(v7 + 64);
  uint64_t v10 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return MEMORY[0x1F4186498](v0, v12, v10);
}

uint64_t sub_190B44170(void *a1)
{
  return sub_190B4417C(a1, "synchronize() failed to create remote object proxy for extension %{public}s for %{public}s app, error = %{public}s");
}

uint64_t sub_190B4417C(void *a1, char *a2)
{
  uint64_t v5 = *(void *)(sub_190B76FC8() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5D00) - 8);
  return sub_190B40B3C(a1, v2 + v6, *(void *)(v2 + v7), *(void *)(v2 + v7 + 8), *(void *)(v2 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v2 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), v2+ ((((v7 + 23) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), a2);
}

uint64_t objectdestroy_169Tm()
{
  uint64_t v1 = sub_190B76FC8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  unint64_t v5 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5D00);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8 + 16) & ~v8;
  uint64_t v12 = v9 + *(void *)(v7 + 64);
  uint64_t v10 = v3 | v8 | 7;

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return MEMORY[0x1F4186498](v0, v12, v10);
}

uint64_t sub_190B4441C(uint64_t a1)
{
  return sub_190B44434(a1, (uint64_t (*)(uint64_t, void, void, void, char *, void, void, void, void, char *))sub_190B3285C);
}

uint64_t sub_190B44434(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, char *, void, void, void, void, char *))
{
  uint64_t v5 = *(void *)(sub_190B76FC8() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5D00) - 8);
  return a2(a1, *((void *)v2 + 2), *((void *)v2 + 3), *((void *)v2 + 4), &v2[v6], *(void *)&v2[v7], *(void *)&v2[v7 + 8], *(void *)&v2[(v7 + 23) & 0xFFFFFFFFFFFFFFF8], *(void *)&v2[((v7 + 23) & 0xFFFFFFFFFFFFFFF8) + 8], &v2[(((v7 + 23) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)]);
}

uint64_t sub_190B44548()
{
  uint64_t v1 = sub_190B76FC8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, v6 + 16, v5);
}

void sub_190B4460C()
{
  uint64_t v1 = *(void *)(sub_190B76FC8() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = v0 + v2;
  uint64_t v5 = *(void *)(v0 + v3);
  unint64_t v6 = *(void *)(v0 + v3 + 8);
  unint64_t v7 = (uint64_t *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v8 = *v7;
  unint64_t v9 = v7[1];

  sub_190B3D27C(v4, v5, v6, v8, v9);
}

uint64_t sub_190B446C0()
{
  return sub_190B4156C();
}

uint64_t sub_190B446F0@<X0>(uint64_t a1@<X8>)
{
  return sub_190B41238(a1);
}

id ManagedDuplicate.__allocating_init(duplicateSet:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = sub_190B4A8BC(a1);

  return v4;
}

uint64_t sub_190B44748()
{
  uint64_t v0 = sub_190B76FC8();
  __swift_allocate_value_buffer(v0, qword_1E92A5D20);
  __swift_project_value_buffer(v0, (uint64_t)qword_1E92A5D20);
  return sub_190B76FB8();
}

uint64_t sub_190B447CC()
{
  return sub_190B44A98(&OBJC_IVAR___CNManagedDuplicate_signature);
}

uint64_t sub_190B447D8(uint64_t a1, uint64_t a2)
{
  return sub_190B44AF8(a1, a2, &OBJC_IVAR___CNManagedDuplicate_signature);
}

uint64_t (*sub_190B447E4())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_190B44840()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___CNManagedDuplicate_isAvailable);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_190B44888(char a1)
{
  id v3 = (unsigned char *)(v1 + OBJC_IVAR___CNManagedDuplicate_isAvailable);
  uint64_t result = swift_beginAccess();
  *id v3 = a1;
  return result;
}

uint64_t (*sub_190B448D4())()
{
  return j__swift_endAccess;
}

uint64_t sub_190B44934()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___CNManagedDuplicate_isIgnored);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_190B4497C(char a1)
{
  id v3 = (unsigned char *)(v1 + OBJC_IVAR___CNManagedDuplicate_isIgnored);
  uint64_t result = swift_beginAccess();
  *id v3 = a1;
  return result;
}

uint64_t (*sub_190B449C8())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_190B44A24(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6 = *a1;
  uint64_t v5 = a1[1];
  unint64_t v7 = (void *)(*a2 + *a5);
  swift_beginAccess();
  *unint64_t v7 = v6;
  v7[1] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_190B44A8C()
{
  return sub_190B44A98(&OBJC_IVAR___CNManagedDuplicate_primaryID);
}

uint64_t sub_190B44A98(void *a1)
{
  unint64_t v2 = (uint64_t *)(v1 + *a1);
  swift_beginAccess();
  uint64_t v3 = *v2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_190B44AEC(uint64_t a1, uint64_t a2)
{
  return sub_190B44AF8(a1, a2, &OBJC_IVAR___CNManagedDuplicate_primaryID);
}

uint64_t sub_190B44AF8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = (void *)(v3 + *a3);
  swift_beginAccess();
  *uint64_t v6 = a1;
  v6[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_190B44B54())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_190B44BB0(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a2 + OBJC_IVAR___CNManagedDuplicate_managedCohorts);
  swift_beginAccess();
  *uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_190B44C1C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_190B44C68(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR___CNManagedDuplicate_managedCohorts);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_190B44CBC())()
{
  return j_j__swift_endAccess;
}

void sub_190B44D18(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR___CNManagedDuplicate_userSelectedContactImage);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  unint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  unint64_t v9 = v3[5];
  uint64_t v10 = v3[6];
  unint64_t v11 = v3[7];
  uint64_t v12 = v3[8];
  uint64_t v13 = v3[9];
  uint64_t v14 = v3[10];
  unint64_t v15 = v3[11];
  uint64_t v16 = v3[12];
  unint64_t v17 = v3[13];
  *a2 = *v3;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = v7;
  a2[4] = v8;
  a2[5] = v9;
  a2[6] = v10;
  a2[7] = v11;
  a2[8] = v12;
  a2[9] = v13;
  a2[10] = v14;
  a2[11] = v15;
  a2[12] = v16;
  a2[13] = v17;
  sub_190B2E834(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17);
}

__n128 sub_190B44DAC(uint64_t *a1, void *a2)
{
  uint64_t v19 = a1[1];
  uint64_t v20 = *a1;
  unint64_t v17 = a1[3];
  uint64_t v18 = a1[2];
  unint64_t v2 = a1[5];
  uint64_t v16 = a1[4];
  uint64_t v3 = a1[6];
  unint64_t v4 = a1[7];
  uint64_t v6 = a1[8];
  uint64_t v5 = a1[9];
  uint64_t v7 = a1[10];
  unint64_t v8 = a1[11];
  uint64_t v9 = *a2 + OBJC_IVAR___CNManagedDuplicate_userSelectedContactImage;
  uint64_t v10 = a1[12];
  unint64_t v11 = a1[13];
  swift_beginAccess();
  uint64_t v28 = *(void *)(v9 + 8);
  uint64_t v29 = *(void *)v9;
  unint64_t v26 = *(void *)(v9 + 24);
  uint64_t v27 = *(void *)(v9 + 16);
  uint64_t v25 = *(void *)(v9 + 32);
  uint64_t v23 = *(void *)(v9 + 48);
  unint64_t v24 = *(void *)(v9 + 40);
  unint64_t v22 = *(void *)(v9 + 56);
  long long v21 = *(_OWORD *)(v9 + 64);
  long long v15 = *(_OWORD *)(v9 + 80);
  unint64_t v13 = *(void *)(v9 + 104);
  uint64_t v14 = *(void *)(v9 + 96);
  *(void *)uint64_t v9 = v20;
  *(void *)(v9 + _Block_object_dispose(&STACK[0x228], 8) = v19;
  *(void *)(v9 + 16) = v18;
  *(void *)(v9 + 24) = v17;
  *(void *)(v9 + 32) = v16;
  *(void *)(v9 + 40) = v2;
  *(void *)(v9 + 4_Block_object_dispose(&STACK[0x228], 8) = v3;
  *(void *)(v9 + 56) = v4;
  *(void *)(v9 + 64) = v6;
  *(void *)(v9 + 72) = v5;
  *(void *)(v9 + 80) = v7;
  *(void *)(v9 + 8_Block_object_dispose(&STACK[0x228], 8) = v8;
  *(void *)(v9 + 96) = v10;
  *(void *)(v9 + 104) = v11;
  sub_190B2E834(v20, v19, v18, v17, v16, v2, v3, v4, v6, v5, v7, v8, v10, v11);
  sub_190B2EA44(v29, v28, v27, v26, v25, v24, v23, v22, v21, *((uint64_t *)&v21 + 1), v15, *((unint64_t *)&v15 + 1), v14, v13);
  return result;
}

void sub_190B44F08(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR___CNManagedDuplicate_userSelectedContactImage);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  unint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  unint64_t v9 = v3[5];
  uint64_t v10 = v3[6];
  unint64_t v11 = v3[7];
  uint64_t v12 = v3[8];
  uint64_t v13 = v3[9];
  uint64_t v14 = v3[10];
  unint64_t v15 = v3[11];
  uint64_t v16 = v3[12];
  unint64_t v17 = v3[13];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = v12;
  a1[9] = v13;
  a1[10] = v14;
  a1[11] = v15;
  a1[12] = v16;
  a1[13] = v17;
  sub_190B2E834(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17);
}

void sub_190B44F98(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[3];
  long long v23 = *((_OWORD *)a1 + 2);
  long long v24 = *(_OWORD *)(a1 + 1);
  uint64_t v4 = a1[6];
  uint64_t v5 = a1[9];
  long long v21 = *((_OWORD *)a1 + 5);
  long long v22 = *(_OWORD *)(a1 + 7);
  uint64_t v6 = a1[12];
  uint64_t v7 = a1[13];
  uint64_t v8 = v1 + OBJC_IVAR___CNManagedDuplicate_userSelectedContactImage;
  swift_beginAccess();
  uint64_t v9 = *(void *)v8;
  uint64_t v10 = *(void *)(v8 + 8);
  uint64_t v11 = *(void *)(v8 + 16);
  unint64_t v12 = *(void *)(v8 + 24);
  uint64_t v13 = *(void *)(v8 + 32);
  unint64_t v14 = *(void *)(v8 + 40);
  uint64_t v15 = *(void *)(v8 + 48);
  unint64_t v16 = *(void *)(v8 + 56);
  long long v17 = *(_OWORD *)(v8 + 64);
  long long v18 = *(_OWORD *)(v8 + 80);
  uint64_t v19 = *(void *)(v8 + 96);
  unint64_t v20 = *(void *)(v8 + 104);
  *(void *)uint64_t v8 = v2;
  *(_OWORD *)(v8 + _Block_object_dispose(&STACK[0x228], 8) = v24;
  *(void *)(v8 + 24) = v3;
  *(_OWORD *)(v8 + 32) = v23;
  *(void *)(v8 + 4_Block_object_dispose(&STACK[0x228], 8) = v4;
  *(_OWORD *)(v8 + 56) = v22;
  *(void *)(v8 + 72) = v5;
  *(_OWORD *)(v8 + 80) = v21;
  *(void *)(v8 + 96) = v6;
  *(void *)(v8 + 104) = v7;
  sub_190B2EA44(v9, v10, v11, v12, v13, v14, v15, v16, v17, *((uint64_t *)&v17 + 1), v18, *((unint64_t *)&v18 + 1), v19, v20);
}

uint64_t (*sub_190B45078())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_190B450D4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR___CNManagedDuplicate_userSelectedContactPoster);
  swift_beginAccess();
  uint64_t v4 = *v3;
  unint64_t v5 = v3[1];
  *a2 = *v3;
  a2[1] = v5;
  return sub_190B2E970(v4, v5);
}

uint64_t sub_190B4512C(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = (uint64_t *)(*a2 + OBJC_IVAR___CNManagedDuplicate_userSelectedContactPoster);
  swift_beginAccess();
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  uint64_t *v4 = v2;
  v4[1] = v3;
  sub_190B2E970(v2, v3);
  return sub_190B2EB80(v5, v6);
}

uint64_t sub_190B451A8@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR___CNManagedDuplicate_userSelectedContactPoster);
  swift_beginAccess();
  uint64_t v4 = *v3;
  unint64_t v5 = v3[1];
  *a1 = *v3;
  a1[1] = v5;
  return sub_190B2E970(v4, v5);
}

uint64_t sub_190B451FC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = (uint64_t *)(v1 + OBJC_IVAR___CNManagedDuplicate_userSelectedContactPoster);
  swift_beginAccess();
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  uint64_t *v4 = v2;
  v4[1] = v3;
  return sub_190B2EB80(v5, v6);
}

uint64_t (*sub_190B45258())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_190B452B4()
{
  uint64_t v1 = (unint64_t *)(v0 + OBJC_IVAR___CNManagedDuplicate_managedCohorts);
  swift_beginAccess();
  unint64_t v2 = *v1;
  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v3) {
      goto LABEL_3;
    }
LABEL_16:
    unint64_t v6 = (void *)MEMORY[0x1E4FBC860];
LABEL_17:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v6;
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = sub_190B778A8();
  uint64_t v3 = result;
  if (!result) {
    goto LABEL_16;
  }
LABEL_3:
  if (v3 >= 1)
  {
    uint64_t v5 = 0;
    unint64_t v6 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      if ((v2 & 0xC000000000000001) != 0) {
        uint64_t v8 = (char *)MEMORY[0x192FD1FB0](v5, v2);
      }
      else {
        uint64_t v8 = (char *)*(id *)(v2 + 8 * v5 + 32);
      }
      uint64_t v9 = v8;
      uint64_t v10 = &v8[OBJC_IVAR___CNManagedCohort_identifier];
      swift_beginAccess();
      uint64_t v12 = *(void *)v10;
      uint64_t v11 = *((void *)v10 + 1);
      swift_bridgeObjectRetain();

      if (v11)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v6 = sub_190B49180(0, v6[2] + 1, 1, v6);
        }
        unint64_t v14 = v6[2];
        unint64_t v13 = v6[3];
        if (v14 >= v13 >> 1) {
          unint64_t v6 = sub_190B49180((void *)(v13 > 1), v14 + 1, 1, v6);
        }
        v6[2] = v14 + 1;
        uint64_t v7 = &v6[2 * v14];
        void v7[4] = v12;
        void v7[5] = v11;
      }
      ++v5;
    }
    while (v3 != v5);
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

id ManagedDuplicate.__allocating_init(contacts:contactStore:)(unint64_t a1, void *a2)
{
  id v5 = objc_allocWithZone(v2);
  id v6 = sub_190B4B6B0(a1, a2);

  return v6;
}

id ManagedDuplicate.init(contacts:contactStore:)(unint64_t a1, void *a2)
{
  id v3 = sub_190B4B6B0(a1, a2);

  return v3;
}

id ManagedDuplicate.__allocating_init(duplicateSetProperties:)(char *a1)
{
  id v3 = objc_allocWithZone(v1);
  return ManagedDuplicate.init(duplicateSetProperties:)(a1);
}

id ManagedDuplicate.init(duplicateSetProperties:)(char *a1)
{
  char v27 = *a1;
  char v29 = a1[1];
  uint64_t v2 = *((void *)a1 + 1);
  uint64_t v3 = *((void *)a1 + 2);
  uint64_t v4 = *((void *)a1 + 4);
  uint64_t v30 = *((void *)a1 + 3);
  id v5 = &v1[OBJC_IVAR___CNManagedDuplicate_signature];
  *id v5 = 0;
  v5[1] = 0;
  id v6 = &v1[OBJC_IVAR___CNManagedDuplicate_isAvailable];
  v1[OBJC_IVAR___CNManagedDuplicate_isAvailable] = 1;
  uint64_t v7 = &v1[OBJC_IVAR___CNManagedDuplicate_isIgnored];
  v1[OBJC_IVAR___CNManagedDuplicate_isIgnored] = 0;
  uint64_t v8 = &v1[OBJC_IVAR___CNManagedDuplicate_primaryID];
  *uint64_t v8 = 0;
  v8[1] = 0;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  uint64_t v31 = &v1[OBJC_IVAR___CNManagedDuplicate_managedCohorts];
  *(void *)&v1[OBJC_IVAR___CNManagedDuplicate_managedCohorts] = MEMORY[0x1E4FBC860];
  uint64_t v10 = &v1[OBJC_IVAR___CNManagedDuplicate_userSelectedContactImage];
  _OWORD *v10 = xmmword_190B909F0;
  v10[1] = 0u;
  v10[2] = 0u;
  void v10[3] = 0u;
  v10[4] = 0u;
  v10[5] = 0u;
  void v10[6] = 0u;
  *(_OWORD *)&v1[OBJC_IVAR___CNManagedDuplicate_userSelectedContactPoster] = xmmword_190B90B10;
  *(void *)&v1[OBJC_IVAR___CNManagedDuplicate__contactStore] = 0;
  uint64_t v11 = *((void *)a1 + 5);
  *(void *)&v1[OBJC_IVAR___CNManagedDuplicate__privateContacts] = v9;
  *(void *)&v1[OBJC_IVAR___CNManagedDuplicate__privateMergedContact] = 0;
  uint64_t v12 = &v1[OBJC_IVAR___CNManagedDuplicate__mergedNameComponents];
  uint64_t v13 = sub_190B76CC8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  swift_beginAccess();
  *id v5 = v2;
  v5[1] = v3;
  unint64_t v14 = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *id v6 = v27;
  swift_beginAccess();
  *uint64_t v7 = v29;
  swift_beginAccess();
  *uint64_t v8 = v30;
  v8[1] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v11 + 16);
  if (v15)
  {
    uint64_t v28 = v14;
    uint64_t v34 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_190B77838();
    unint64_t v16 = (objc_class *)type metadata accessor for ManagedCohort();
    long long v17 = (uint64_t *)(v11 + 48);
    do
    {
      uint64_t v18 = *(v17 - 1);
      uint64_t v19 = *v17;
      uint64_t v20 = v17[1];
      uint64_t v22 = v17[2];
      unint64_t v21 = v17[3];
      uint64_t v23 = v17[4];
      unint64_t v24 = v17[5];
      v33[0] = *(v17 - 2);
      v33[1] = v18;
      v33[2] = v19;
      v33[3] = v20;
      v33[4] = v22;
      v33[5] = v21;
      v33[6] = v23;
      v33[7] = v24;
      objc_allocWithZone(v16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_190B2E918(v22, v21);
      sub_190B2E918(v23, v24);
      ManagedCohort.init(duplicateCohortProperties:)(v33);
      sub_190B77808();
      sub_190B77848();
      sub_190B77858();
      sub_190B77818();
      v17 += 8;
      --v15;
    }
    while (v15);
    uint64_t v25 = v34;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v14 = v28;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v25 = MEMORY[0x1E4FBC860];
  }
  swift_beginAccess();
  void *v31 = v25;

  swift_bridgeObjectRelease();
  v32.receiver = v14;
  v32.super_class = (Class)type metadata accessor for ManagedDuplicate();
  return objc_msgSendSuper2(&v32, sel_init);
}

id ManagedDuplicate.init(duplicateSet:)(void *a1)
{
  id v2 = sub_190B4A8BC(a1);

  return v2;
}

void sub_190B458DC(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_selectedContactImage);
  if (v4)
  {
    id v5 = v4;
    id v6 = objc_msgSend(v4, sel_cropRectString);
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = sub_190B77168();
      uint64_t v45 = v9;
      uint64_t v46 = v8;
    }
    else
    {
      uint64_t v45 = 0;
      uint64_t v46 = 0;
    }
    id v10 = objc_msgSend(v5, sel_fullscreenImageData);
    if (v10)
    {
      uint64_t v11 = v10;
      uint64_t v12 = sub_190B76E08();
      unint64_t v43 = v13;
      uint64_t v44 = v12;
    }
    else
    {
      unint64_t v43 = 0xF000000000000000;
      uint64_t v44 = 0;
    }
    id v14 = objc_msgSend(v5, sel_imageData);
    if (v14)
    {
      uint64_t v15 = v14;
      uint64_t v16 = sub_190B76E08();
      unint64_t v41 = v17;
      uint64_t v42 = v16;
    }
    else
    {
      unint64_t v41 = 0xF000000000000000;
      uint64_t v42 = 0;
    }
    id v18 = objc_msgSend(v5, sel_imageHash);
    if (v18)
    {
      uint64_t v19 = v18;
      uint64_t v20 = sub_190B76E08();
      unint64_t v37 = v21;
      uint64_t v39 = v20;
    }
    else
    {
      unint64_t v37 = 0xF000000000000000;
      uint64_t v39 = 0;
    }
    id v22 = objc_msgSend(v5, sel_imageType, v37, v39);
    if (v22)
    {
      uint64_t v23 = v22;
      uint64_t v24 = sub_190B77168();
      uint64_t v26 = v25;
    }
    else
    {
      uint64_t v24 = 0;
      uint64_t v26 = 0;
    }
    id v27 = objc_msgSend(v5, sel_memojiMetadata);
    if (v27)
    {
      uint64_t v28 = v27;
      uint64_t v29 = sub_190B76E08();
      unint64_t v31 = v30;
    }
    else
    {
      uint64_t v29 = 0;
      unint64_t v31 = 0xF000000000000000;
    }
    id v32 = objc_msgSend(v5, sel_thumbnailImageData);
    if (v32)
    {
      id v33 = v32;
      uint64_t v34 = sub_190B76E08();
      unint64_t v36 = v35;
    }
    else
    {

      uint64_t v34 = 0;
      unint64_t v36 = 0xF000000000000000;
    }
    *a2 = v46;
    a2[1] = v45;
    a2[2] = v44;
    a2[3] = v43;
    a2[4] = v42;
    a2[5] = v41;
    a2[6] = v40;
    a2[7] = v38;
    a2[8] = v24;
    a2[9] = v26;
    a2[10] = v29;
    a2[11] = v31;
    a2[12] = v34;
    a2[13] = v36;
  }
  else
  {

    *(_OWORD *)a2 = xmmword_190B909F0;
    *((_OWORD *)a2 + 1) = 0u;
    *((_OWORD *)a2 + 2) = 0u;
    *((_OWORD *)a2 + 3) = 0u;
    *((_OWORD *)a2 + 4) = 0u;
    *((_OWORD *)a2 + 5) = 0u;
    *((_OWORD *)a2 + 6) = 0u;
  }
}

uint64_t sub_190B45B40@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  if (sub_190B46870()) {
    sub_190B47864();
  }
  *a2 = *(void *)(v3 + OBJC_IVAR___CNManagedDuplicate__privateContacts);

  return swift_bridgeObjectRetain();
}

uint64_t sub_190B45B90()
{
  if (sub_190B46870()) {
    sub_190B47864();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_190B45BCC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = OBJC_IVAR___CNManagedDuplicate__privateContacts;
  *(void *)(v2 + OBJC_IVAR___CNManagedDuplicate__privateContacts) = a1;
  swift_bridgeObjectRelease();
  unint64_t v4 = *(void *)(v2 + v3);
  if (!(v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    uint64_t v11 = MEMORY[0x1E4FBC860];
LABEL_12:
    uint64_t v12 = (void *)(v2 + OBJC_IVAR___CNManagedDuplicate_managedCohorts);
    swift_beginAccess();
    *uint64_t v12 = v11;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_190B778A8();
  if (!v5) {
    goto LABEL_11;
  }
LABEL_3:
  uint64_t v13 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_190B77838();
  if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v7 = 0;
    do
    {
      if ((v4 & 0xC000000000000001) != 0) {
        id v8 = (id)MEMORY[0x192FD1FB0](v7, v4);
      }
      else {
        id v8 = *(id *)(v4 + 8 * v7 + 32);
      }
      uint64_t v9 = v8;
      ++v7;
      id v10 = objc_allocWithZone((Class)type metadata accessor for ManagedCohort());
      sub_190B52878(v9);

      sub_190B77808();
      sub_190B77848();
      sub_190B77858();
      sub_190B77818();
    }
    while (v5 != v7);
    uint64_t v11 = v13;
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_190B45D64(void *a1))(uint64_t *a1, char a2)
{
  a1[1] = v1;
  if (sub_190B46870()) {
    sub_190B47864();
  }
  *a1 = *(void *)(v1 + OBJC_IVAR___CNManagedDuplicate__privateContacts);
  swift_bridgeObjectRetain();
  return sub_190B45DC8;
}

uint64_t sub_190B45DC8(uint64_t *a1, char a2)
{
  if ((a2 & 1) == 0) {
    return sub_190B45BCC(*a1);
  }
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_190B45BCC(v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_190B45E20()
{
  if (sub_190B46870()) {
    sub_190B47864();
  }
  unint64_t v1 = *(void *)&v0[OBJC_IVAR___CNManagedDuplicate__privateContacts];
  if ((v1 & 0x8000000000000000) != 0 || (v1 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain_n();
    id v6 = v0;
    uint64_t v2 = (uint64_t)sub_190B2C58C(v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n();
    uint64_t v3 = v0;
  }
  uint64_t v7 = v2;
  unint64_t v4 = v0;
  sub_190B4CD80(&v7, v4);
  swift_bridgeObjectRelease();

  return v7;
}

void *sub_190B45EF0()
{
  if (sub_190B46870()) {
    sub_190B47864();
  }
  unint64_t v1 = *(void *)&v0[OBJC_IVAR___CNManagedDuplicate__privateContacts];
  if (v1 >> 62) {
    goto LABEL_24;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  for (i = v0; v2; uint64_t v2 = sub_190B778A8())
  {
    unint64_t v17 = v0;
    unint64_t v4 = &v0[OBJC_IVAR___CNManagedDuplicate_primaryID];
    swift_beginAccess();
    uint64_t v5 = 4;
    while (1)
    {
      id v6 = (v1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x192FD1FB0](v5 - 4, v1) : *(id *)(v1 + 8 * v5);
      uint64_t v7 = v6;
      uint64_t v0 = (char *)(v5 - 3);
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      id v8 = objc_msgSend(v6, sel_identifier);
      uint64_t v9 = sub_190B77168();
      uint64_t v11 = v10;

      uint64_t v12 = *((void *)v4 + 1);
      if (v12)
      {
        if (v9 == *(void *)v4 && v12 == v11)
        {

          swift_bridgeObjectRelease();
LABEL_22:
          swift_bridgeObjectRelease();
          goto LABEL_27;
        }
        char v14 = sub_190B77998();
        swift_bridgeObjectRelease();
        if (v14)
        {

          goto LABEL_22;
        }
      }
      else
      {

        swift_bridgeObjectRelease();
      }
      ++v5;
      if (v0 == (char *)v2)
      {

        goto LABEL_26;
      }
    }
    __break(1u);
LABEL_24:
    swift_bridgeObjectRetain_n();
    uint64_t v15 = v0;
  }

LABEL_26:
  swift_bridgeObjectRelease();
  uint64_t v7 = 0;
LABEL_27:
  swift_bridgeObjectRelease();
  return v7;
}

id sub_190B460D4()
{
  uint64_t v1 = OBJC_IVAR___CNManagedDuplicate__privateMergedContact;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR___CNManagedDuplicate__privateMergedContact];
  if (v2) {
    goto LABEL_14;
  }
  uint64_t v3 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92A5D90);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_190B908E0;
  if (sub_190B46870()) {
    sub_190B47864();
  }
  uint64_t v5 = &off_1E92A5000;
  unint64_t v6 = *(void *)&v0[OBJC_IVAR___CNManagedDuplicate__privateContacts];
  if ((v6 & 0x8000000000000000) != 0 || (v6 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v26 = v3;
    uint64_t v7 = (uint64_t)sub_190B2C58C(v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n();
    id v8 = v3;
  }
  unint64_t v29 = v7;
  uint64_t v9 = v3;
  sub_190B4CD80((uint64_t *)&v29, (void *)v9);
  swift_bridgeObjectRelease();

  type metadata accessor for DuplicateContacts();
  *(void *)(inited + 32) = v29;
  id v10 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), sel_init);
  sub_190B26668(inited, v10, (uint64_t *)&v29);

  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3D40);
  swift_arrayDestroy();
  unint64_t v11 = v29;
  uint64_t v12 = v30;
  if (v30 >> 62) {
    goto LABEL_38;
  }
  uint64_t v13 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v13) {
    goto LABEL_9;
  }
LABEL_13:
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void **)&v3[v1];
  *(void *)&v3[v1] = v13;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v2 = *(void **)&v3[v1];
  if (v2)
  {
LABEL_14:
    id v16 = v2;
  }
  else
  {
    if (sub_190B46870()) {
      sub_190B47864();
    }
    unint64_t v11 = *(unint64_t *)((char *)v5[431] + v9);
    uint64_t v28 = (char *)v9;
    if (v11 >> 62)
    {
      while (1)
      {
        swift_bridgeObjectRetain_n();
        id v27 = (id)v9;
        uint64_t v12 = sub_190B778A8();
        if (!v12) {
          goto LABEL_44;
        }
LABEL_20:
        uint64_t v3 = &v28[OBJC_IVAR___CNManagedDuplicate_primaryID];
        swift_beginAccess();
        uint64_t v9 = 4;
        while (1)
        {
          id v20 = (v11 & 0xC000000000000001) != 0
              ? (id)MEMORY[0x192FD1FB0](v9 - 4, v11)
              : *(id *)(v11 + 8 * v9);
          id v16 = v20;
          uint64_t v21 = v9 - 3;
          if (__OFADD__(v9 - 4, 1)) {
            break;
          }
          uint64_t v5 = (char ***)objc_msgSend(v20, sel_identifier);
          uint64_t v1 = sub_190B77168();
          uint64_t v23 = v22;

          uint64_t v24 = *((void *)v3 + 1);
          if (v24)
          {
            if (v1 == *(void *)v3 && v24 == v23)
            {

              swift_bridgeObjectRelease();
LABEL_36:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_45;
            }
            uint64_t v1 = sub_190B77998();
            swift_bridgeObjectRelease();
            if (v1)
            {

              goto LABEL_36;
            }
          }
          else
          {

            swift_bridgeObjectRelease();
          }
          ++v9;
          if (v21 == v12) {
            goto LABEL_44;
          }
        }
        __break(1u);
LABEL_38:
        swift_bridgeObjectRetain();
        uint64_t v13 = sub_190B778A8();
        if (!v13) {
          goto LABEL_13;
        }
LABEL_9:
        if ((v12 & 0xC000000000000001) != 0) {
          break;
        }
        if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v14 = *(id *)(v12 + 32);
LABEL_12:
          uint64_t v13 = (uint64_t)v14;
          goto LABEL_13;
        }
        __break(1u);
      }
      id v14 = (id)MEMORY[0x192FD1FB0](0, v12);
      goto LABEL_12;
    }
    uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    id v19 = (id)v9;
    if (v12) {
      goto LABEL_20;
    }
LABEL_44:

    swift_bridgeObjectRelease_n();
    id v16 = objc_msgSend(objc_allocWithZone((Class)CNMutableContact), sel_init);
LABEL_45:
    uint64_t v2 = 0;
  }
  id v17 = v2;
  return v16;
}

uint64_t sub_190B464E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92A5DA0);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  unint64_t v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  id v8 = &v14[-v7];
  uint64_t v9 = v1 + OBJC_IVAR___CNManagedDuplicate__mergedNameComponents;
  swift_beginAccess();
  sub_190B4CE20(v9, (uint64_t)v8);
  uint64_t v10 = sub_190B76CC8();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1) {
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v11 + 32))(a1, v8, v10);
  }
  sub_190B23144((uint64_t)v8, (uint64_t *)&unk_1E92A5DA0);
  if (sub_190B46870()) {
    sub_190B47864();
  }
  type metadata accessor for DuplicateContacts();
  uint64_t v12 = swift_bridgeObjectRetain();
  sub_190B2A7F4(v12);
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16))(v6, a1, v10);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  swift_beginAccess();
  sub_190B4CE88((uint64_t)v6, v9);
  return swift_endAccess();
}

uint64_t sub_190B466EC()
{
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR___CNManagedDuplicate__privateContacts);
  if (!(v1 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_190B778A8();
  if (!v2) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v15 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_190B218B0(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v4 = 0;
    uint64_t v5 = v15;
    do
    {
      if ((v1 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x192FD1FB0](v4, v1);
      }
      else {
        id v6 = *(id *)(v1 + 8 * v4 + 32);
      }
      uint64_t v7 = v6;
      id v8 = objc_msgSend(v6, sel_identifier);
      uint64_t v9 = sub_190B77168();
      uint64_t v11 = v10;

      unint64_t v13 = *(void *)(v15 + 16);
      unint64_t v12 = *(void *)(v15 + 24);
      if (v13 >= v12 >> 1) {
        sub_190B218B0(v12 > 1, v13 + 1, 1);
      }
      ++v4;
      *(void *)(v15 + 16) = v13 + 1;
      uint64_t v14 = v15 + 16 * v13;
      *(void *)(v14 + 32) = v9;
      *(void *)(v14 + 40) = v11;
    }
    while (v2 != v4);
    swift_bridgeObjectRelease();
    return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_190B46870()
{
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR___CNManagedDuplicate__privateContacts);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_190B778A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = (uint64_t *)(v0 + OBJC_IVAR___CNManagedDuplicate_managedCohorts);
  swift_beginAccess();
  uint64_t v4 = *v3;
  if ((unint64_t)*v3 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v5 = sub_190B778A8();
    uint64_t v34 = v3;
    uint64_t v35 = v2;
    if (v5) {
      goto LABEL_5;
    }
LABEL_19:
    uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_20;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  uint64_t v34 = v3;
  uint64_t v35 = v2;
  if (!v5) {
    goto LABEL_19;
  }
LABEL_5:
  if (v5 < 1)
  {
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v6 = 0;
  uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    if ((v4 & 0xC000000000000001) != 0) {
      uint64_t v9 = (char *)MEMORY[0x192FD1FB0](v6, v4);
    }
    else {
      uint64_t v9 = (char *)*(id *)(v4 + 8 * v6 + 32);
    }
    uint64_t v10 = v9;
    uint64_t v11 = &v9[OBJC_IVAR___CNManagedCohort_identifier];
    swift_beginAccess();
    uint64_t v12 = *(void *)v11;
    uint64_t v13 = *((void *)v11 + 1);
    swift_bridgeObjectRetain();

    if (v13)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v7 = sub_190B49180(0, v7[2] + 1, 1, v7);
      }
      unint64_t v15 = v7[2];
      unint64_t v14 = v7[3];
      if (v15 >= v14 >> 1) {
        uint64_t v7 = sub_190B49180((void *)(v14 > 1), v15 + 1, 1, v7);
      }
      v7[2] = v15 + 1;
      id v8 = &v7[2 * v15];
      v8[4] = v12;
      v8[5] = v13;
    }
    ++v6;
  }
  while (v5 != v6);
LABEL_20:
  swift_bridgeObjectRelease_n();
  uint64_t v16 = v7[2];
  swift_bridgeObjectRelease();
  if (v35 != v16)
  {
    char v29 = 1;
    return v29 & 1;
  }
  uint64_t v2 = *v34;
  if (!((unint64_t)*v34 >> 62))
  {
    uint64_t v17 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v17) {
      goto LABEL_23;
    }
LABEL_38:
    id v20 = (void *)MEMORY[0x1E4FBC860];
LABEL_39:
    swift_bridgeObjectRelease_n();
    uint64_t v30 = sub_190B6AE04((uint64_t)v20);
    swift_bridgeObjectRelease();
    uint64_t v31 = sub_190B466EC();
    uint64_t v32 = sub_190B6AE04(v31);
    swift_bridgeObjectRelease();
    char v33 = sub_190B66F7C(v30, v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v29 = v33 ^ 1;
    return v29 & 1;
  }
LABEL_37:
  swift_bridgeObjectRetain_n();
  uint64_t result = sub_190B778A8();
  uint64_t v17 = result;
  if (!result) {
    goto LABEL_38;
  }
LABEL_23:
  if (v17 >= 1)
  {
    uint64_t v19 = 0;
    id v20 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      if ((v2 & 0xC000000000000001) != 0) {
        uint64_t v22 = (char *)MEMORY[0x192FD1FB0](v19, v2);
      }
      else {
        uint64_t v22 = (char *)*(id *)(v2 + 8 * v19 + 32);
      }
      uint64_t v23 = v22;
      uint64_t v24 = &v22[OBJC_IVAR___CNManagedCohort_identifier];
      swift_beginAccess();
      uint64_t v26 = *(void *)v24;
      uint64_t v25 = *((void *)v24 + 1);
      swift_bridgeObjectRetain();

      if (v25)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v20 = sub_190B49180(0, v20[2] + 1, 1, v20);
        }
        unint64_t v28 = v20[2];
        unint64_t v27 = v20[3];
        if (v28 >= v27 >> 1) {
          id v20 = sub_190B49180((void *)(v27 > 1), v28 + 1, 1, v20);
        }
        uint64_t v20[2] = v28 + 1;
        uint64_t v21 = &v20[2 * v28];
        void v21[4] = v26;
        v21[5] = v25;
      }
      ++v19;
    }
    while (v17 != v19);
    goto LABEL_39;
  }
  __break(1u);
  return result;
}

uint64_t sub_190B46C44()
{
  unint64_t v1 = &v0[OBJC_IVAR___CNManagedDuplicate_userSelectedContactImage];
  swift_beginAccess();
  uint64_t v2 = *((void *)v1 + 1);
  uint64_t v3 = &v0[OBJC_IVAR___CNManagedDuplicate_managedCohorts];
  if (v2 != 1)
  {
    swift_beginAccess();
    unint64_t v15 = *(void *)v3;
    if (*(void *)v3 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t result = sub_190B778A8();
      uint64_t v16 = result;
      if (result) {
        goto LABEL_24;
      }
    }
    else
    {
      uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain_n();
      if (v16)
      {
LABEL_24:
        if (v16 >= 1)
        {
          uint64_t v18 = 0;
          unint64_t v19 = v15 & 0xC000000000000001;
          id v20 = (void *)MEMORY[0x1E4FBC860];
          unint64_t v66 = v15;
          do
          {
            if (v19) {
              uint64_t v21 = (char *)MEMORY[0x192FD1FB0](v18, v15);
            }
            else {
              uint64_t v21 = (char *)*(id *)(v15 + 8 * v18 + 32);
            }
            uint64_t v22 = v21;
            uint64_t v23 = (uint64_t *)&v21[OBJC_IVAR___CNManagedCohort_imageData];
            swift_beginAccess();
            unint64_t v24 = v23[1];
            if (v24 >> 60 == 15)
            {
            }
            else
            {
              uint64_t v25 = v16;
              uint64_t v26 = *v23;
              CGFloat v27 = *(double *)&v22[OBJC_IVAR___CNManagedCohort_cropRect];
              CGFloat v28 = *(double *)&v22[OBJC_IVAR___CNManagedCohort_cropRect + 8];
              CGFloat v29 = *(double *)&v22[OBJC_IVAR___CNManagedCohort_cropRect + 16];
              CGFloat v30 = *(double *)&v22[OBJC_IVAR___CNManagedCohort_cropRect + 24];
              sub_190B2E918(v26, v24);
              v69.origin.x = v27;
              v69.origin.y = v28;
              v69.size.width = v29;
              v69.size.height = v30;
              uint64_t v31 = NSStringFromRect(v69);
              uint64_t v32 = sub_190B77168();
              uint64_t v34 = v33;

              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                id v20 = sub_190B49290(0, v20[2] + 1, 1, v20);
              }
              unint64_t v36 = v20[2];
              unint64_t v35 = v20[3];
              if (v36 >= v35 >> 1) {
                id v20 = sub_190B49290((void *)(v35 > 1), v36 + 1, 1, v20);
              }
              uint64_t v20[2] = v36 + 1;
              unint64_t v37 = &v20[4 * v36];
              v37[4] = v26;
              v37[5] = v24;
              v37[6] = v32;
              v37[7] = v34;
              uint64_t v16 = v25;
              unint64_t v15 = v66;
            }
            ++v18;
          }
          while (v16 != v18);
          swift_bridgeObjectRelease_n();
          goto LABEL_65;
        }
        __break(1u);
        goto LABEL_76;
      }
    }
    swift_bridgeObjectRelease_n();
    goto LABEL_64;
  }
  swift_beginAccess();
  unint64_t v4 = *(void *)v3;
  uint64_t v68 = MEMORY[0x1E4FBC860];
  if (v4 >> 62) {
    goto LABEL_59;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v6 = v0;
  swift_bridgeObjectRetain();
LABEL_4:
  uint64_t v7 = &v0[OBJC_IVAR___CNManagedDuplicate_primaryID];
  swift_beginAccess();
  if (v5)
  {
    os_log_type_t v65 = v0;
    unint64_t v8 = 0;
    while (1)
    {
      if ((v4 & 0xC000000000000001) != 0)
      {
        uint64_t v9 = (char *)MEMORY[0x192FD1FB0](v8, v4);
      }
      else
      {
        if (v8 >= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_58:
          __break(1u);
LABEL_59:
          uint64_t v60 = v0;
          swift_bridgeObjectRetain();
          uint64_t v5 = sub_190B778A8();
          goto LABEL_4;
        }
        uint64_t v9 = (char *)*(id *)(v4 + 8 * v8 + 32);
      }
      uint64_t v10 = v9;
      unint64_t v11 = v8 + 1;
      if (__OFADD__(v8, 1)) {
        goto LABEL_58;
      }
      uint64_t v0 = &v9[OBJC_IVAR___CNManagedCohort_identifier];
      swift_beginAccess();
      uint64_t v12 = *((void *)v0 + 1);
      uint64_t v13 = *((void *)v7 + 1);
      if (v12)
      {
        if (v13)
        {
          BOOL v14 = *(void *)v0 == *(void *)v7 && v12 == v13;
          if (v14 || (sub_190B77998() & 1) != 0)
          {
LABEL_20:

            goto LABEL_8;
          }
        }
      }
      else if (!v13)
      {
        goto LABEL_20;
      }
      sub_190B77808();
      sub_190B77848();
      sub_190B77858();
      uint64_t v0 = (char *)&v68;
      sub_190B77818();
LABEL_8:
      ++v8;
      if (v11 == v5)
      {
        uint64_t v0 = v65;
        uint64_t v38 = v68;
        goto LABEL_40;
      }
    }
  }
  uint64_t v38 = MEMORY[0x1E4FBC860];
LABEL_40:
  swift_bridgeObjectRelease();

  uint64_t v39 = v38;
  if (v38 < 0 || (v38 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_190B778A8();
    uint64_t v40 = result;
    if (result)
    {
LABEL_43:
      if (v40 >= 1)
      {
        uint64_t v41 = 0;
        unint64_t v42 = v38 & 0xC000000000000001;
        id v20 = (void *)MEMORY[0x1E4FBC860];
        uint64_t v67 = v39;
        do
        {
          if (v42) {
            unint64_t v43 = (char *)MEMORY[0x192FD1FB0](v41, v39);
          }
          else {
            unint64_t v43 = (char *)*(id *)(v39 + 8 * v41 + 32);
          }
          uint64_t v44 = v43;
          uint64_t v45 = (uint64_t *)&v43[OBJC_IVAR___CNManagedCohort_imageData];
          swift_beginAccess();
          unint64_t v46 = v45[1];
          if (v46 >> 60 == 15)
          {
          }
          else
          {
            uint64_t v47 = v40;
            uint64_t v48 = *v45;
            CGFloat v49 = *(double *)&v44[OBJC_IVAR___CNManagedCohort_cropRect];
            CGFloat v50 = *(double *)&v44[OBJC_IVAR___CNManagedCohort_cropRect + 8];
            CGFloat v51 = *(double *)&v44[OBJC_IVAR___CNManagedCohort_cropRect + 16];
            CGFloat v52 = *(double *)&v44[OBJC_IVAR___CNManagedCohort_cropRect + 24];
            sub_190B2E918(v48, v46);
            v70.origin.x = v49;
            v70.origin.y = v50;
            v70.size.width = v51;
            v70.size.height = v52;
            unint64_t v53 = NSStringFromRect(v70);
            uint64_t v54 = sub_190B77168();
            uint64_t v56 = v55;

            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              id v20 = sub_190B49290(0, v20[2] + 1, 1, v20);
            }
            unint64_t v58 = v20[2];
            unint64_t v57 = v20[3];
            if (v58 >= v57 >> 1) {
              id v20 = sub_190B49290((void *)(v57 > 1), v58 + 1, 1, v20);
            }
            uint64_t v20[2] = v58 + 1;
            uint64_t v59 = &v20[4 * v58];
            v59[4] = v48;
            v59[5] = v46;
            v59[6] = v54;
            v59[7] = v56;
            uint64_t v40 = v47;
            uint64_t v39 = v67;
          }
          ++v41;
        }
        while (v40 != v41);
        swift_release_n();
        goto LABEL_65;
      }
LABEL_76:
      __break(1u);
      return result;
    }
  }
  else
  {
    uint64_t v40 = *(void *)(v38 + 16);
    uint64_t result = swift_bridgeObjectRetain();
    if (v40) {
      goto LABEL_43;
    }
  }
  swift_release_n();
LABEL_64:
  id v20 = (void *)MEMORY[0x1E4FBC860];
LABEL_65:
  if (v20[2] >= 7uLL) {
    uint64_t v61 = 7;
  }
  else {
    uint64_t v61 = v20[2];
  }
  sub_190B779A8();
  swift_unknownObjectRetain_n();
  uint64_t v62 = swift_dynamicCastClass();
  if (!v62)
  {
    swift_bridgeObjectRelease();
    uint64_t v62 = MEMORY[0x1E4FBC860];
  }
  uint64_t v63 = *(void *)(v62 + 16);
  swift_release();
  if (v63 == v61)
  {
    uint64_t v64 = swift_dynamicCastClass();
    if (!v64)
    {
      swift_bridgeObjectRelease();
      uint64_t v64 = MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v64 = sub_190B2C684((uint64_t)v20, (uint64_t)(v20 + 4), 0, (2 * v61) | 1);
  }
  swift_bridgeObjectRelease();
  return v64;
}

uint64_t sub_190B472C0()
{
  unint64_t v1 = &v0[OBJC_IVAR___CNManagedDuplicate_userSelectedContactPoster];
  swift_beginAccess();
  unint64_t v2 = *((void *)v1 + 1);
  uint64_t v3 = &v0[OBJC_IVAR___CNManagedDuplicate_managedCohorts];
  if (v2 >> 60 != 11)
  {
    swift_beginAccess();
    unint64_t v15 = *(void *)v3;
    if (*(void *)v3 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t result = sub_190B778A8();
      uint64_t v16 = result;
      if (result) {
        goto LABEL_24;
      }
    }
    else
    {
      uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain_n();
      if (v16)
      {
LABEL_24:
        if (v16 >= 1)
        {
          uint64_t v18 = 0;
          unint64_t v19 = (void *)MEMORY[0x1E4FBC860];
          do
          {
            if ((v15 & 0xC000000000000001) != 0) {
              id v20 = (char *)MEMORY[0x192FD1FB0](v18, v15);
            }
            else {
              id v20 = (char *)*(id *)(v15 + 8 * v18 + 32);
            }
            uint64_t v21 = v20;
            uint64_t v22 = (uint64_t *)&v20[OBJC_IVAR___CNManagedCohort_posterData];
            swift_beginAccess();
            unint64_t v23 = v22[1];
            if (v23 >> 60 == 15)
            {
            }
            else
            {
              uint64_t v24 = *v22;
              sub_190B2E918(v24, v23);

              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                unint64_t v19 = sub_190B493A0(0, v19[2] + 1, 1, v19);
              }
              unint64_t v26 = v19[2];
              unint64_t v25 = v19[3];
              if (v26 >= v25 >> 1) {
                unint64_t v19 = sub_190B493A0((void *)(v25 > 1), v26 + 1, 1, v19);
              }
              id v19[2] = v26 + 1;
              CGFloat v27 = &v19[2 * v26];
              v27[4] = v24;
              v27[5] = v23;
            }
            ++v18;
          }
          while (v16 != v18);
          swift_bridgeObjectRelease_n();
          goto LABEL_65;
        }
        __break(1u);
        goto LABEL_76;
      }
    }
    swift_bridgeObjectRelease_n();
    goto LABEL_64;
  }
  swift_beginAccess();
  unint64_t v4 = *(void *)v3;
  uint64_t v45 = MEMORY[0x1E4FBC860];
  if (v4 >> 62) {
    goto LABEL_59;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v6 = v0;
  swift_bridgeObjectRetain();
LABEL_4:
  uint64_t v7 = &v0[OBJC_IVAR___CNManagedDuplicate_primaryID];
  swift_beginAccess();
  if (v5)
  {
    uint64_t v44 = v0;
    unint64_t v8 = 0;
    while (1)
    {
      if ((v4 & 0xC000000000000001) != 0)
      {
        uint64_t v9 = (char *)MEMORY[0x192FD1FB0](v8, v4);
      }
      else
      {
        if (v8 >= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_58:
          __break(1u);
LABEL_59:
          uint64_t v39 = v0;
          swift_bridgeObjectRetain();
          uint64_t v5 = sub_190B778A8();
          goto LABEL_4;
        }
        uint64_t v9 = (char *)*(id *)(v4 + 8 * v8 + 32);
      }
      uint64_t v10 = v9;
      unint64_t v11 = v8 + 1;
      if (__OFADD__(v8, 1)) {
        goto LABEL_58;
      }
      uint64_t v0 = &v9[OBJC_IVAR___CNManagedCohort_identifier];
      swift_beginAccess();
      uint64_t v12 = *((void *)v0 + 1);
      uint64_t v13 = *((void *)v7 + 1);
      if (v12)
      {
        if (v13)
        {
          BOOL v14 = *(void *)v0 == *(void *)v7 && v12 == v13;
          if (v14 || (sub_190B77998() & 1) != 0)
          {
LABEL_20:

            goto LABEL_8;
          }
        }
      }
      else if (!v13)
      {
        goto LABEL_20;
      }
      sub_190B77808();
      sub_190B77848();
      sub_190B77858();
      uint64_t v0 = (char *)&v45;
      sub_190B77818();
LABEL_8:
      ++v8;
      if (v11 == v5)
      {
        uint64_t v0 = v44;
        uint64_t v28 = v45;
        goto LABEL_40;
      }
    }
  }
  uint64_t v28 = MEMORY[0x1E4FBC860];
LABEL_40:
  swift_bridgeObjectRelease();

  if (v28 < 0 || (v28 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_190B778A8();
    uint64_t v29 = result;
    if (result)
    {
LABEL_43:
      if (v29 >= 1)
      {
        uint64_t v30 = 0;
        unint64_t v19 = (void *)MEMORY[0x1E4FBC860];
        do
        {
          if ((v28 & 0xC000000000000001) != 0) {
            uint64_t v31 = (char *)MEMORY[0x192FD1FB0](v30, v28);
          }
          else {
            uint64_t v31 = (char *)*(id *)(v28 + 8 * v30 + 32);
          }
          uint64_t v32 = v31;
          uint64_t v33 = (uint64_t *)&v31[OBJC_IVAR___CNManagedCohort_posterData];
          swift_beginAccess();
          unint64_t v34 = v33[1];
          if (v34 >> 60 == 15)
          {
          }
          else
          {
            uint64_t v35 = *v33;
            sub_190B2E918(v35, v34);

            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v19 = sub_190B493A0(0, v19[2] + 1, 1, v19);
            }
            unint64_t v37 = v19[2];
            unint64_t v36 = v19[3];
            if (v37 >= v36 >> 1) {
              unint64_t v19 = sub_190B493A0((void *)(v36 > 1), v37 + 1, 1, v19);
            }
            id v19[2] = v37 + 1;
            uint64_t v38 = &v19[2 * v37];
            v38[4] = v35;
            v38[5] = v34;
          }
          ++v30;
        }
        while (v29 != v30);
        swift_release_n();
        goto LABEL_65;
      }
LABEL_76:
      __break(1u);
      return result;
    }
  }
  else
  {
    uint64_t v29 = *(void *)(v28 + 16);
    uint64_t result = swift_bridgeObjectRetain();
    if (v29) {
      goto LABEL_43;
    }
  }
  swift_release_n();
LABEL_64:
  unint64_t v19 = (void *)MEMORY[0x1E4FBC860];
LABEL_65:
  if (v19[2] >= 3uLL) {
    uint64_t v40 = 3;
  }
  else {
    uint64_t v40 = v19[2];
  }
  sub_190B779A8();
  swift_unknownObjectRetain_n();
  uint64_t v41 = swift_dynamicCastClass();
  if (!v41)
  {
    swift_bridgeObjectRelease();
    uint64_t v41 = MEMORY[0x1E4FBC860];
  }
  uint64_t v42 = *(void *)(v41 + 16);
  swift_release();
  if (v42 == v40)
  {
    uint64_t v43 = swift_dynamicCastClass();
    if (!v43)
    {
      swift_bridgeObjectRelease();
      uint64_t v43 = MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v43 = sub_190B2C7F8((uint64_t)v19, (uint64_t)(v19 + 4), 0, (2 * v40) | 1);
  }
  swift_bridgeObjectRelease();
  return v43;
}

void sub_190B47864()
{
  v91[7] = *MEMORY[0x1E4F143B8];
  if (qword_1E92A3C60 != -1) {
    swift_once();
  }
  id v3 = objc_allocWithZone((Class)CNContactFetchRequest);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3D60);
  unint64_t v4 = (void *)sub_190B772B8();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v3, sel_initWithKeysToFetch_, v4);

  objc_msgSend(v5, sel_setUnifyResults_, 0);
  objc_msgSend(v5, sel_setMutableObjects_, 1);
  uint64_t v6 = (uint64_t *)((char *)v0 + OBJC_IVAR___CNManagedDuplicate_managedCohorts);
  swift_beginAccess();
  uint64_t v84 = v6;
  uint64_t v7 = *v6;
  if ((unint64_t)*v6 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v8 = sub_190B778A8();
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
  }
  os_log_t log = v0;
  id v87 = v5;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (v8)
  {
    if (v8 < 1)
    {
      __break(1u);
LABEL_79:
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_190B778A8();
      swift_bridgeObjectRelease();
      goto LABEL_24;
    }
    for (uint64_t i = 0; i != v8; ++i)
    {
      if ((v7 & 0xC000000000000001) != 0) {
        uint64_t v12 = (char *)MEMORY[0x192FD1FB0](i, v7);
      }
      else {
        uint64_t v12 = (char *)*(id *)(v7 + 8 * i + 32);
      }
      uint64_t v13 = v12;
      BOOL v14 = &v12[OBJC_IVAR___CNManagedCohort_identifier];
      swift_beginAccess();
      uint64_t v15 = *(void *)v14;
      uint64_t v2 = *((void *)v14 + 1);
      swift_bridgeObjectRetain();

      if (v2)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v9 = (uint64_t)sub_190B49180(0, *(void *)(v9 + 16) + 1, 1, (void *)v9);
        }
        unint64_t v17 = *(void *)(v9 + 16);
        unint64_t v16 = *(void *)(v9 + 24);
        if (v17 >= v16 >> 1) {
          uint64_t v9 = (uint64_t)sub_190B49180((void *)(v16 > 1), v17 + 1, 1, (void *)v9);
        }
        *(void *)(v9 + 16) = v17 + 1;
        uint64_t v11 = v9 + 16 * v17;
        *(void *)(v11 + 32) = v15;
        *(void *)(v11 + 40) = v2;
      }
    }
  }
  swift_bridgeObjectRelease_n();
  uint64_t v18 = self;
  unint64_t v19 = (void *)sub_190B772B8();
  swift_bridgeObjectRelease();
  id v20 = objc_msgSend(v18, sel_predicateForContactsWithIdentifiers_, v19);

  id v5 = v87;
  objc_msgSend(v87, sel_setPredicate_, v20);

  uint64_t v21 = OBJC_IVAR___CNManagedDuplicate__contactStore;
  os_log_t v1 = log;
  uint64_t v22 = *(Class *)((char *)&log->isa + OBJC_IVAR___CNManagedDuplicate__contactStore);
  if (v22)
  {
    unint64_t v23 = *(Class *)((char *)&log->isa + OBJC_IVAR___CNManagedDuplicate__contactStore);
  }
  else
  {
    uint64_t v24 = (objc_class *)objc_msgSend(objc_allocWithZone((Class)CNContactStore), sel_init);
    unint64_t v25 = *(Class *)((char *)&log->isa + v21);
    *(Class *)((char *)&log->isa + v21) = v24;
    unint64_t v23 = v24;

    uint64_t v22 = 0;
  }
  v90[0] = 0;
  id v26 = v22;
  uint64_t v8 = (uint64_t)[(objc_class *)v23 executeFetchRequest:v87 error:v90];

  if (!v8)
  {
    id v32 = v90[0];
    uint64_t v9 = sub_190B76D68();

    swift_willThrow();
    if (qword_1E92A5840 == -1) {
      goto LABEL_33;
    }
    goto LABEL_81;
  }
  id v27 = v90[0];
  v91[0] = (uint64_t)objc_msgSend((id)v8, sel_value);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92A3E10);
  swift_dynamicCast();
  uint64_t v9 = v89;
  if (v89 >> 62) {
    goto LABEL_79;
  }
  uint64_t v28 = *(void *)((v89 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_24:
  uint64_t v83 = (void *)v8;
  if (!v28)
  {
    swift_bridgeObjectRelease();
    uint64_t v31 = (objc_class *)MEMORY[0x1E4FBC860];
LABEL_50:
    uint64_t v53 = OBJC_IVAR___CNManagedDuplicate__privateContacts;
    *(Class *)((char *)&v1->isa + OBJC_IVAR___CNManagedDuplicate__privateContacts) = v31;
    swift_bridgeObjectRelease();
    if (qword_1E92A5840 != -1) {
      swift_once();
    }
    uint64_t v54 = sub_190B76FC8();
    __swift_project_value_buffer(v54, (uint64_t)qword_1E92A5D20);
    uint64_t v55 = v1;
    uint64_t v56 = sub_190B76FA8();
    os_log_type_t v39 = sub_190B77568();
    loga = v56;
    if (!os_log_type_enabled(v56, v39))
    {

      return;
    }
    uint64_t v41 = swift_slowAlloc();
    uint64_t v57 = swift_slowAlloc();
    v91[0] = v57;
    *(_DWORD *)uint64_t v41 = 134218242;
    unint64_t v58 = *(unint64_t *)((char *)&v1->isa + v53);
    if (v58 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v59 = (void *)sub_190B778A8();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v59 = *(void **)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    v90[0] = v59;
    sub_190B77648();
    *(_WORD *)(v41 + 12) = 2080;
    uint64_t v60 = *v84;
    if ((unint64_t)*v84 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v38 = sub_190B778A8();
    }
    else
    {
      uint64_t v38 = *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
    }
    uint64_t v82 = (uint8_t *)v41;
    os_log_type_t v81 = v39;
    if (!v38)
    {
      uint64_t v62 = (void *)MEMORY[0x1E4FBC860];
LABEL_73:
      swift_bridgeObjectRelease_n();
      uint64_t v71 = MEMORY[0x192FD1B00](v62, MEMORY[0x1E4FBB1A0]);
      unint64_t v73 = v72;
      swift_bridgeObjectRelease();
      sub_190B21150(v71, v73, v91);
      sub_190B77648();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1909E3000, loga, v81, "Fetched %ld contacts for cohorts %s", v82, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x192FD42A0](v57, -1, -1);
      MEMORY[0x192FD42A0](v82, -1, -1);

      return;
    }
    if (v38 >= 1)
    {
      uint64_t v61 = 0;
      uint64_t v62 = (void *)MEMORY[0x1E4FBC860];
      do
      {
        if ((v60 & 0xC000000000000001) != 0) {
          uint64_t v64 = (char *)MEMORY[0x192FD1FB0](v61, v60);
        }
        else {
          uint64_t v64 = (char *)*(id *)(v60 + 8 * v61 + 32);
        }
        os_log_type_t v65 = v64;
        unint64_t v66 = &v64[OBJC_IVAR___CNManagedCohort_identifier];
        swift_beginAccess();
        uint64_t v68 = *(void *)v66;
        uint64_t v67 = *((void *)v66 + 1);
        swift_bridgeObjectRetain();

        if (v67)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v62 = sub_190B49180(0, v62[2] + 1, 1, v62);
          }
          unint64_t v70 = v62[2];
          unint64_t v69 = v62[3];
          if (v70 >= v69 >> 1) {
            uint64_t v62 = sub_190B49180((void *)(v69 > 1), v70 + 1, 1, v62);
          }
          v62[2] = v70 + 1;
          uint64_t v63 = &v62[2 * v70];
          v63[4] = v68;
          v63[5] = v67;
        }
        ++v61;
      }
      while (v38 != v61);
      goto LABEL_73;
    }
    __break(1u);
    goto LABEL_85;
  }
  uint64_t v88 = (objc_class *)MEMORY[0x1E4FBC860];
  sub_190B77838();
  if ((v28 & 0x8000000000000000) == 0)
  {
    uint64_t v2 = 0;
    do
    {
      if ((v9 & 0xC000000000000001) != 0) {
        id v29 = (id)MEMORY[0x192FD1FB0](v2, v9);
      }
      else {
        id v29 = *(id *)(v9 + 8 * v2 + 32);
      }
      uint64_t v30 = v29;
      ++v2;
      objc_msgSend(v29, sel_mutableCopy);
      sub_190B77698();
      swift_unknownObjectRelease();
      sub_190B4E814();
      swift_dynamicCast();

      sub_190B77808();
      sub_190B77848();
      sub_190B77858();
      sub_190B77818();
    }
    while (v28 != v2);
    uint64_t v31 = v88;
    swift_bridgeObjectRelease();
    os_log_t v1 = log;
    id v5 = v87;
    goto LABEL_50;
  }
  __break(1u);
LABEL_81:
  swift_once();
LABEL_33:
  uint64_t v33 = sub_190B76FC8();
  __swift_project_value_buffer(v33, (uint64_t)qword_1E92A5D20);
  unint64_t v34 = v1;
  id v35 = (id)v9;
  unint64_t v36 = v34;
  id v37 = (id)v9;
  uint64_t v38 = sub_190B76FA8();
  os_log_type_t v39 = sub_190B77578();
  if (os_log_type_enabled((os_log_t)v38, v39))
  {
    uint64_t v40 = (uint8_t *)swift_slowAlloc();
    uint64_t v2 = swift_slowAlloc();
    v91[0] = v2;
    uint64_t v82 = v40;
    *(_DWORD *)uint64_t v40 = 136315394;
    uint64_t v41 = *v84;
    uint64_t v83 = (void *)v9;
    loga = v36;
    if (!((unint64_t)*v84 >> 62))
    {
      uint64_t v42 = *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
LABEL_36:
      os_log_type_t v80 = v39;
      uint64_t v79 = v2;
      if (v42)
      {
        if (v42 < 1) {
          __break(1u);
        }
        uint64_t v43 = 0;
        uint64_t v44 = (void *)MEMORY[0x1E4FBC860];
        do
        {
          if ((v41 & 0xC000000000000001) != 0) {
            unint64_t v46 = (char *)MEMORY[0x192FD1FB0](v43, v41);
          }
          else {
            unint64_t v46 = (char *)*(id *)(v41 + 8 * v43 + 32);
          }
          uint64_t v47 = v46;
          uint64_t v48 = &v46[OBJC_IVAR___CNManagedCohort_identifier];
          swift_beginAccess();
          uint64_t v50 = *(void *)v48;
          uint64_t v49 = *((void *)v48 + 1);
          swift_bridgeObjectRetain();

          if (v49)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v44 = sub_190B49180(0, v44[2] + 1, 1, v44);
            }
            unint64_t v52 = v44[2];
            unint64_t v51 = v44[3];
            if (v52 >= v51 >> 1) {
              uint64_t v44 = sub_190B49180((void *)(v51 > 1), v52 + 1, 1, v44);
            }
            void v44[2] = v52 + 1;
            uint64_t v45 = &v44[2 * v52];
            v45[4] = v50;
            v45[5] = v49;
          }
          ++v43;
        }
        while (v42 != v43);
      }
      else
      {
        uint64_t v44 = (void *)MEMORY[0x1E4FBC860];
      }
      swift_bridgeObjectRelease_n();
      uint64_t v74 = MEMORY[0x192FD1B00](v44, MEMORY[0x1E4FBB1A0]);
      unint64_t v76 = v75;
      swift_bridgeObjectRelease();
      sub_190B21150(v74, v76, v91);
      sub_190B77648();
      unint64_t v36 = loga;

      swift_bridgeObjectRelease();
      *((_WORD *)v82 + 6) = 2080;
      uint64_t v9 = (uint64_t)v83;
      swift_getErrorValue();
      uint64_t v77 = sub_190B77A08();
      sub_190B21150(v77, v78, v91);
      sub_190B77648();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1909E3000, (os_log_t)v38, v80, "Could not fetch contacts for cohorts %s: %s", v82, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x192FD42A0](v79, -1, -1);
      MEMORY[0x192FD42A0](v82, -1, -1);

      id v5 = v87;
      goto LABEL_76;
    }
LABEL_85:
    swift_bridgeObjectRetain_n();
    uint64_t v42 = sub_190B778A8();
    goto LABEL_36;
  }

LABEL_76:
  *(Class *)((char *)&v36->isa + OBJC_IVAR___CNManagedDuplicate__privateContacts) = (Class)MEMORY[0x1E4FBC860];

  swift_bridgeObjectRelease();
}

uint64_t static ManagedDuplicate.signatureForContact(_:)(void *a1)
{
  id v2 = objc_msgSend(a1, sel_externalURI);
  if (!v2)
  {
    id v2 = objc_msgSend(a1, sel_externalIdentifier);
    if (!v2) {
      id v2 = objc_msgSend(a1, sel_identifier);
    }
  }
  uint64_t v3 = sub_190B77168();

  return v3;
}

uint64_t sub_190B48580(uint64_t a1, uint64_t a2)
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_190B77008();
  uint64_t v28 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_190B77018();
  uint64_t v30 = *(void *)(v7 - 8);
  uint64_t v31 = v7;
  MEMORY[0x1F4188790](v7);
  id v29 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_190B771A8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3DF8);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v32 = a1;
  *((void *)&v32 + 1) = a2;
  sub_190B76E98();
  uint64_t v16 = sub_190B76EA8();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 0, 1, v16);
  sub_190B30760();
  sub_190B77688();
  sub_190B23144((uint64_t)v15, &qword_1E92A3DF8);
  sub_190B77198();
  uint64_t v17 = sub_190B77178();
  unint64_t v19 = v18;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (v19 >> 60 == 15) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = v17;
  }
  if (v19 >> 60 == 15) {
    unint64_t v21 = 0xC000000000000000;
  }
  else {
    unint64_t v21 = v19;
  }
  sub_190B4E8B0(&qword_1E92A5E08, MEMORY[0x1E4F251D8]);
  sub_190B76FF8();
  switch(v21 >> 62)
  {
    case 1uLL:
      if (v20 >> 32 < (int)v20) {
        __break(1u);
      }
      sub_190B2E918(v20, v21);
      sub_190B4A7B4((int)v20, v20 >> 32);
      break;
    case 2uLL:
      uint64_t v22 = *(void *)(v20 + 16);
      uint64_t v23 = *(void *)(v20 + 24);
      sub_190B2E918(v20, v21);
      swift_retain();
      swift_retain();
      sub_190B4A7B4(v22, v23);
      swift_release();
      swift_release();
      break;
    case 3uLL:
      *(void *)((char *)&v32 + 6) = 0;
      *(void *)&long long v32 = 0;
      goto LABEL_13;
    default:
      *(void *)&long long v32 = v20;
      WORD4(v32) = v21;
      BYTE10(v32) = BYTE2(v21);
      BYTE11(v32) = BYTE3(v21);
      BYTE12(v32) = BYTE4(v21);
      BYTE13(v32) = BYTE5(v21);
LABEL_13:
      sub_190B76FD8();
      break;
  }
  sub_190B2EB28(v20, v21);
  uint64_t v24 = (uint64_t)v29;
  sub_190B76FE8();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v4);
  *(void *)&long long v32 = sub_190B48D2C(v24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3D30);
  sub_190B4E854();
  uint64_t v25 = sub_190B770C8();
  sub_190B2EB28(v20, v21);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v24, v31);
  return v25;
}

id ManagedDuplicate.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void ManagedDuplicate.init()()
{
}

id ManagedDuplicate.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedDuplicate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_190B48CA0@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  char v3 = *a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92A3DC0);
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = MEMORY[0x1E4FBC358];
  *(_OWORD *)(v4 + 16) = xmmword_190B908E0;
  uint64_t v6 = MEMORY[0x1E4FBC3B0];
  *(void *)(v4 + 56) = v5;
  *(void *)(v4 + 64) = v6;
  *(unsigned char *)(v4 + 32) = v3;
  uint64_t result = sub_190B77188();
  *a2 = result;
  a2[1] = v8;
  return result;
}

uint64_t sub_190B48D2C(uint64_t a1)
{
  uint64_t v3 = sub_190B77018();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_190B4E8B0((unint64_t *)&unk_1E92A5E10, MEMORY[0x1E4F25200]);
  uint64_t v7 = sub_190B77228();
  uint64_t v35 = MEMORY[0x1E4FBC860];
  sub_190B218B0(0, v7 & ~(v7 >> 63), 0);
  uint64_t v8 = v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  uint64_t result = sub_190B77218();
  if ((v7 & 0x8000000000000000) == 0)
  {
    unint64_t v10 = v34;
    if (v7)
    {
      uint64_t v11 = v33;
      uint64_t v29 = *(void *)(v33 + 16);
      unint64_t v12 = v34;
      while (v29 != v12)
      {
        if ((v10 & 0x8000000000000000) != 0) {
          goto LABEL_24;
        }
        if (v12 >= *(void *)(v11 + 16)) {
          goto LABEL_25;
        }
        v30[0] = *(unsigned char *)(v11 + v12 + 32);
        v30[1] = 0;
        uint64_t result = sub_190B48CA0(v30, &v31);
        if (v1)
        {
LABEL_21:
          swift_release();
          goto LABEL_22;
        }
        unint64_t v13 = v10;
        uint64_t v15 = v31;
        uint64_t v14 = v32;
        uint64_t v35 = v8;
        unint64_t v17 = *(void *)(v8 + 16);
        unint64_t v16 = *(void *)(v8 + 24);
        if (v17 >= v16 >> 1)
        {
          uint64_t v28 = v11;
          uint64_t result = sub_190B218B0(v16 > 1, v17 + 1, 1);
          uint64_t v11 = v28;
          uint64_t v8 = v35;
        }
        *(void *)(v8 + 16) = v17 + 1;
        uint64_t v18 = v8 + 16 * v17;
        *(void *)(v18 + 32) = v15;
        *(void *)(v18 + 40) = v14;
        ++v12;
        --v7;
        unint64_t v10 = v13;
        if (!v7)
        {
          unint64_t v34 = v12;
          goto LABEL_14;
        }
      }
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
    }
    else
    {
      unint64_t v12 = v34;
LABEL_14:
      uint64_t v19 = v33;
      unint64_t v20 = *(void *)(v33 + 16);
      if (v12 == v20)
      {
LABEL_22:
        swift_bridgeObjectRelease();
        return v8;
      }
      while (v12 < v20)
      {
        char v21 = *(unsigned char *)(v19 + 32 + v12);
        unint64_t v34 = v12 + 1;
        v30[0] = v21;
        uint64_t result = sub_190B48CA0(v30, &v31);
        if (v1) {
          goto LABEL_21;
        }
        uint64_t v22 = v31;
        uint64_t v23 = v32;
        uint64_t v35 = v8;
        unint64_t v25 = *(void *)(v8 + 16);
        unint64_t v24 = *(void *)(v8 + 24);
        if (v25 >= v24 >> 1)
        {
          uint64_t result = sub_190B218B0(v24 > 1, v25 + 1, 1);
          uint64_t v8 = v35;
        }
        *(void *)(v8 + 16) = v25 + 1;
        uint64_t v26 = v8 + 16 * v25;
        *(void *)(v26 + 32) = v22;
        *(void *)(v26 + 40) = v23;
        unint64_t v12 = v34;
        unint64_t v20 = *(void *)(v19 + 16);
        if (v34 == v20) {
          goto LABEL_22;
        }
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_190B4905C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5A30);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      void v10[3] = 2 * (v12 >> 5);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      unint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_190B4BA28(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_190B4916C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_190B4994C(a1, a2, a3, a4, (uint64_t *)&unk_1E92A5D90, &qword_1E92A3D40);
}

void *sub_190B49180(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92A3C30);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      void v10[3] = 2 * (v12 >> 4);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      unint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_190B4BB20(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_190B49290(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92A5DE0);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      void v10[3] = 2 * (v12 >> 5);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      unint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_190B4E3E0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_190B493A0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A61A0);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      void v10[3] = 2 * (v12 >> 4);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      unint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_190B4E4D4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_190B494B0(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    unint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3C28);
  uint64_t v10 = *(void *)(sub_190B76F98() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_190B77898();
    __break(1u);
    return result;
  }
  void v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_190B76F98() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_190B4E5C8(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

void *sub_190B49718(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92A5DD0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 + 31;
      }
      v10[2] = v8;
      void v10[3] = 2 * (v12 >> 6);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      unint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4]) {
          memmove(v13, a4 + 4, v8 << 6);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_190B4E720(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_190B49828(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92A5DB0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      void v10[3] = 2 * (v12 >> 4);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      unint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_190B4BC14(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_190B49938(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_190B4994C(a1, a2, a3, a4, &qword_1E92A5DC0, &qword_1E92A5DC8);
}

void *sub_190B4994C(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      unint64_t v13 = (void *)swift_allocObject();
      int64_t v14 = _swift_stdlib_malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 25;
      }
      void v13[2] = v11;
      v13[3] = 2 * (v15 >> 3);
      uint64_t v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v13 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v16 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4]) {
          memmove(v16, a4 + 4, 8 * v11);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_190B4BD20(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_190B49A68(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_190B4A894(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_190B49AD4(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_190B49AD4(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_190B77958();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_190B4A1C0(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v105 = result;
  uint64_t v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_118:
      uint64_t v94 = v11;
      uint64_t v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          uint64_t v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_190B4A290((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v97 = sub_190B4A7A0((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          uint64_t v100 = &v97[16 * v96 + 32];
          *(void *)uint64_t v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          uint64_t v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_190B77358();
    *(void *)(v7 + 16) = v6;
    uint64_t v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v106 = v3;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    int64_t v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    unint64_t v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_190B77998();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    char v21 = (void *)(v103 + 16 * v20);
    do
    {
      uint64_t v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_190B77998()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      uint64_t v22 = v20 + 1;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - _Block_object_dispose(&STACK[0x228], 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_190B4A52C(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      uint64_t v11 = sub_190B4A52C((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    uint64_t v42 = v11 + 32;
    uint64_t v43 = &v11[16 * v41 + 32];
    *(void *)uint64_t v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      uint64_t v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          uint64_t v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            uint64_t v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        uint64_t v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        uint64_t v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        unint64_t v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        id v85 = v11;
        uint64_t v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        uint64_t v88 = v42;
        unint64_t v89 = v44;
        uint64_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_190B4A290((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)uint64_t v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        uint64_t v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        uint64_t v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        uint64_t v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    uint64_t v32 = v3;
  }
  else {
    uint64_t v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      uint64_t v33 = (void *)(v10 + 16 * v9);
      do
      {
        unint64_t v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        uint64_t v37 = v13;
        uint64_t v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_190B77998() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)uint64_t v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      uint64_t v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_190B77898();
  __break(1u);
  return result;
}

uint64_t sub_190B4A1C0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (uint64_t result = sub_190B77998(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)unint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_190B4A290(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      unint64_t v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      uint64_t v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        unint64_t v18 = (char *)(a3 - 16);
        int v19 = v6;
        while (1)
        {
          uint64_t v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = *((void *)v17 - 2) == v21 && *((void *)v17 - 1) == v22;
          if (v23 || (sub_190B77998() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)unint64_t v18 = *((_OWORD *)v17 - 1);
            }
            int v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)unint64_t v18 = *(_OWORD *)v19;
            }
            uint64_t v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    int64_t v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (sub_190B77998() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      uint64_t v27 = v7;
    }
LABEL_50:
    sub_190B4A628((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = sub_190B778F8();
  __break(1u);
  return result;
}

char *sub_190B4A52C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92A5DF0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_190B4A628(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_190B778F8();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

char *sub_190B4A6E4(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)sub_190B778F8();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

char *sub_190B4A7A0(uint64_t a1)
{
  return sub_190B4A52C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_190B4A7B4(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_190B76B48();
  if (!result || (uint64_t result = sub_190B76B68(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_190B76B58();
      sub_190B77008();
      sub_190B4E8B0(&qword_1E92A5E08, MEMORY[0x1E4F251D8]);
      return sub_190B76FD8();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_190B4A894(uint64_t a1)
{
  return sub_190B22280(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void sub_190B4A8A8()
{
}

id sub_190B4A8BC(void *a1)
{
  uint64_t v3 = sub_190B76D78();
  *(void *)&long long v67 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v6 = (uint64_t *)&v1[OBJC_IVAR___CNManagedDuplicate_signature];
  *unint64_t v6 = 0;
  v6[1] = 0;
  uint64_t v7 = &v1[OBJC_IVAR___CNManagedDuplicate_isAvailable];
  v1[OBJC_IVAR___CNManagedDuplicate_isAvailable] = 1;
  *(void *)&long long v68 = &v1[OBJC_IVAR___CNManagedDuplicate_isIgnored];
  v1[OBJC_IVAR___CNManagedDuplicate_isIgnored] = 0;
  uint64_t v8 = (uint64_t *)&v1[OBJC_IVAR___CNManagedDuplicate_primaryID];
  *uint64_t v8 = 0;
  v8[1] = 0;
  uint64_t v9 = MEMORY[0x1E4FBC860];
  *(void *)&long long v69 = &v1[OBJC_IVAR___CNManagedDuplicate_managedCohorts];
  *(void *)&v1[OBJC_IVAR___CNManagedDuplicate_managedCohorts] = MEMORY[0x1E4FBC860];
  uint64_t v10 = &v1[OBJC_IVAR___CNManagedDuplicate_userSelectedContactImage];
  *(_OWORD *)uint64_t v10 = xmmword_190B909F0;
  *((_OWORD *)v10 + 1) = 0u;
  *((_OWORD *)v10 + 2) = 0u;
  *((_OWORD *)v10 + 3) = 0u;
  *((_OWORD *)v10 + 4) = 0u;
  *((_OWORD *)v10 + 5) = 0u;
  *((_OWORD *)v10 + 6) = 0u;
  uint64_t v71 = (uint64_t *)&v1[OBJC_IVAR___CNManagedDuplicate_userSelectedContactPoster];
  *(_OWORD *)&v1[OBJC_IVAR___CNManagedDuplicate_userSelectedContactPoster] = xmmword_190B90B10;
  *(void *)&v1[OBJC_IVAR___CNManagedDuplicate__contactStore] = 0;
  *(void *)&v1[OBJC_IVAR___CNManagedDuplicate__privateContacts] = v9;
  *(void *)&v1[OBJC_IVAR___CNManagedDuplicate__privateMergedContact] = 0;
  int64_t v11 = &v1[OBJC_IVAR___CNManagedDuplicate__mergedNameComponents];
  uint64_t v12 = sub_190B76CC8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v70 = v1;
  *(void *)&long long v72 = a1;
  id v13 = objc_msgSend(a1, sel_signature);
  if (v13)
  {
    int64_t v14 = v13;
    uint64_t v15 = sub_190B77168();
    uint64_t v17 = v16;
  }
  else
  {
    uint64_t v15 = 0;
    uint64_t v17 = 0;
  }
  swift_beginAccess();
  *unint64_t v6 = v15;
  v6[1] = v17;
  swift_bridgeObjectRelease();
  unint64_t v18 = (void *)v72;
  unsigned __int8 v19 = objc_msgSend((id)v72, sel_isAvailable);
  swift_beginAccess();
  *uint64_t v7 = v19;
  unsigned __int8 v20 = objc_msgSend(v18, sel_isIgnored);
  uint64_t v21 = (unsigned __int8 *)v68;
  swift_beginAccess();
  unsigned __int8 *v21 = v20;
  id v22 = objc_msgSend(v18, sel_primaryID);
  if (v22)
  {
    BOOL v23 = v22;
    uint64_t v24 = sub_190B77168();
    uint64_t v26 = v25;
  }
  else
  {
    uint64_t v24 = 0;
    uint64_t v26 = 0;
  }
  swift_beginAccess();
  *uint64_t v8 = v24;
  v8[1] = v26;
  swift_bridgeObjectRelease();
  id v27 = objc_msgSend(v18, sel_cohorts);
  uint64_t v28 = MEMORY[0x1E4FBC860];
  if (v27)
  {
    uint64_t v87 = MEMORY[0x1E4FBC860];
    id v29 = v27;
    sub_190B775C8();

    sub_190B4E8B0((unint64_t *)&unk_1E92A5E20, MEMORY[0x1E4F27660]);
    sub_190B77638();
    while (v79)
    {
      sub_190B23134(&v77, v75);
      sub_190B23088((uint64_t)v75, (uint64_t)&v74);
      type metadata accessor for CNDuplicateCohort();
      swift_dynamicCast();
      uint64_t v30 = v73;
      id v31 = objc_allocWithZone((Class)type metadata accessor for ManagedCohort());
      sub_190B525F8(v30);

      uint64_t v32 = __swift_destroy_boxed_opaque_existential_0((uint64_t)v75);
      MEMORY[0x192FD1A90](v32);
      if (*(void *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_190B77308();
      }
      sub_190B77368();
      sub_190B772E8();
      sub_190B77638();
    }
    (*(void (**)(char *, uint64_t))(v67 + 8))(v5, v3);
    uint64_t v28 = v87;

    unint64_t v18 = (void *)v72;
  }
  uint64_t v33 = (void *)v69;
  swift_beginAccess();
  void *v33 = v28;
  swift_bridgeObjectRelease();
  id v34 = v18;
  sub_190B458DC(v34, &v77);
  uint64_t v35 = v77;
  long long v72 = v78;
  uint64_t v36 = v79;
  long long v68 = v82;
  long long v69 = v80;
  uint64_t v37 = v81;
  uint64_t v38 = v83;
  long long v67 = v84;
  uint64_t v39 = v85;
  uint64_t v40 = v86;
  swift_beginAccess();
  uint64_t v41 = *(void *)v10;
  uint64_t v42 = *((void *)v10 + 1);
  uint64_t v43 = *((void *)v10 + 2);
  unint64_t v44 = *((void *)v10 + 3);
  uint64_t v45 = *((void *)v10 + 4);
  unint64_t v46 = *((void *)v10 + 5);
  uint64_t v47 = *((void *)v10 + 6);
  unint64_t v48 = *((void *)v10 + 7);
  long long v49 = *((_OWORD *)v10 + 4);
  long long v50 = *((_OWORD *)v10 + 5);
  uint64_t v51 = *((void *)v10 + 12);
  unint64_t v52 = *((void *)v10 + 13);
  *(void *)uint64_t v10 = v35;
  *(_OWORD *)(v10 + _Block_object_dispose(&STACK[0x228], 8) = v72;
  *((void *)v10 + 3) = v36;
  *((_OWORD *)v10 + 2) = v69;
  *((void *)v10 + 6) = v37;
  *(_OWORD *)(v10 + 56) = v68;
  *((void *)v10 + 9) = v38;
  *((_OWORD *)v10 + 5) = v67;
  *((void *)v10 + 12) = v39;
  *((void *)v10 + 13) = v40;
  sub_190B2EA44(v41, v42, v43, v44, v45, v46, v47, v48, v49, *((uint64_t *)&v49 + 1), v50, *((unint64_t *)&v50 + 1), v51, v52);
  id v53 = v34;
  id v54 = objc_msgSend(v53, sel_selectedContactPoster);
  if (v54)
  {
    BOOL v55 = v54;
    id v56 = objc_msgSend(v54, sel_posterData);
    if (v56)
    {
      uint64_t v57 = v56;
      uint64_t v58 = sub_190B76E08();
      unint64_t v60 = v59;
    }
    else
    {

      uint64_t v58 = 0;
      unint64_t v60 = 0xF000000000000000;
    }
  }
  else
  {

    uint64_t v58 = 0;
    unint64_t v60 = 0xB000000000000000;
  }
  uint64_t v61 = v71;
  swift_beginAccess();
  uint64_t v62 = *v61;
  unint64_t v63 = v61[1];
  *uint64_t v61 = v58;
  v61[1] = v60;
  sub_190B2EB80(v62, v63);
  id v64 = v70;

  BOOL v65 = (objc_class *)type metadata accessor for ManagedDuplicate();
  v76.receiver = v64;
  v76.super_class = v65;
  return objc_msgSendSuper2(&v76, sel_init);
}

id sub_190B4AEF0(id a1)
{
  unint64_t v3 = v1[7];
  uint64_t v4 = v1[9];
  unint64_t v5 = v1[11];
  unint64_t v6 = v1[13];
  unint64_t v21 = v1[3];
  uint64_t v20 = v1[6];
  if (v1[5] >> 60 == 15) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = (void *)sub_190B76DE8();
  }
  objc_msgSend(a1, sel_setImageData_, v7, v20);

  if (v6 >> 60 == 15) {
    uint64_t v8 = 0;
  }
  else {
    uint64_t v8 = (void *)sub_190B76DE8();
  }
  objc_msgSend(a1, sel_setThumbnailImageData_, v8);

  swift_bridgeObjectRetain();
  uint64_t v9 = (NSString *)sub_190B77158();
  swift_bridgeObjectRelease();
  NSRect v22 = NSRectFromString(v9);
  double x = v22.origin.x;
  double y = v22.origin.y;
  double width = v22.size.width;
  double height = v22.size.height;

  objc_msgSend(a1, sel_setCropRect_, x, y, width, height);
  if (v4) {
    int64_t v14 = (void *)sub_190B77158();
  }
  else {
    int64_t v14 = 0;
  }
  objc_msgSend(a1, sel_setImageType_, v14);

  if (v3 >> 60 == 15) {
    uint64_t v15 = 0;
  }
  else {
    uint64_t v15 = (void *)sub_190B76DE8();
  }
  objc_msgSend(a1, sel_setImageHash_, v15);

  if (v4) {
    uint64_t v16 = (void *)sub_190B77158();
  }
  else {
    uint64_t v16 = 0;
  }
  objc_msgSend(a1, sel_setImageType_, v16);

  if (v5 >> 60 == 15) {
    uint64_t v17 = 0;
  }
  else {
    uint64_t v17 = (void *)sub_190B76DE8();
  }
  objc_msgSend(a1, sel_setMemojiMetadata_, v17);

  if (v21 >> 60 == 15) {
    unint64_t v18 = 0;
  }
  else {
    unint64_t v18 = (void *)sub_190B76DE8();
  }
  objc_msgSend(a1, sel_setFullscreenImageData_, v18);

  return a1;
}

void *sub_190B4B168(unint64_t a1, void *a2)
{
  if (a1 >> 62) {
    goto LABEL_29;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = sub_190B778A8())
  {
    uint64_t v4 = 0;
    uint64_t v19 = v3;
    uint64_t v5 = a2[2];
    while (1)
    {
      id v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x192FD1FB0](v4, a1) : *(id *)(a1 + 32 + 8 * v4);
      uint64_t v7 = v6;
      if (__OFADD__(v4++, 1)) {
        break;
      }
      id v9 = objc_msgSend(v6, sel_identifier);
      uint64_t v10 = sub_190B77168();
      uint64_t v12 = v11;

      if (v5)
      {
        BOOL v13 = a2[4] == v10 && a2[5] == v12;
        if (v13 || (sub_190B77998() & 1) != 0)
        {
LABEL_25:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v7;
        }
        if (v5 != 1)
        {
          int64_t v14 = a2 + 7;
          uint64_t v15 = 1;
          while (1)
          {
            uint64_t v16 = v15 + 1;
            if (__OFADD__(v15, 1)) {
              break;
            }
            BOOL v17 = *(v14 - 1) == v10 && *v14 == v12;
            if (v17 || (sub_190B77998() & 1) != 0) {
              goto LABEL_25;
            }
            v14 += 2;
            ++v15;
            if (v16 == v5) {
              goto LABEL_4;
            }
          }
          __break(1u);
          break;
        }
      }
LABEL_4:

      swift_bridgeObjectRelease();
      if (v4 == v19) {
        goto LABEL_30;
      }
    }
    __break(1u);
LABEL_29:
    swift_bridgeObjectRetain();
  }
LABEL_30:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t _s8Contacts16ManagedDuplicateC21preferredPrimaryIDFor_12contactStoreSSSgSaySo16CNMutableContactCG_So09CNContactH0CtFZ_0(unint64_t a1, void *a2)
{
  uint64_t v3 = (void *)sub_190B5E0FC(a2);
  uint64_t v4 = sub_190B4B168(a1, v3);
  swift_bridgeObjectRelease();
  if (v4) {
    goto LABEL_8;
  }
  if (!(a1 >> 62))
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_4;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_190B778A8();
  if (!result) {
    goto LABEL_11;
  }
LABEL_4:
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v7 = (id)MEMORY[0x192FD1FB0](0, a1);
    goto LABEL_7;
  }
  if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v7 = *(id *)(a1 + 32);
LABEL_7:
    uint64_t v4 = v7;
    swift_bridgeObjectRelease();
LABEL_8:
    id v8 = objc_msgSend(v4, sel_identifier);

    uint64_t v9 = sub_190B77168();
    return v9;
  }
  __break(1u);
  return result;
}

uint64_t _s8Contacts16ManagedDuplicateC012signatureForA0ySSSaySo16CNMutableContactCGFZ_0(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_190B778A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2)
  {
LABEL_15:
    uint64_t v19 = v3;
    swift_bridgeObjectRetain();
    sub_190B49A68(&v19);
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3D30);
    sub_190B4E854();
    uint64_t v14 = sub_190B770C8();
    uint64_t v16 = v15;
    swift_release();
    uint64_t v17 = sub_190B48580(v14, v16);
    swift_bridgeObjectRelease();
    return v17;
  }
  uint64_t v19 = MEMORY[0x1E4FBC860];
  sub_190B218B0(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v4 = 0;
    uint64_t v3 = v19;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v5 = (id)MEMORY[0x192FD1FB0](v4, a1);
      }
      else {
        id v5 = *(id *)(a1 + 8 * v4 + 32);
      }
      id v6 = v5;
      id v7 = objc_msgSend(v5, sel_externalURI);
      if (!v7)
      {
        id v7 = objc_msgSend(v6, sel_externalIdentifier);
        if (!v7) {
          id v7 = objc_msgSend(v6, sel_identifier);
        }
      }
      uint64_t v8 = sub_190B77168();
      uint64_t v10 = v9;

      uint64_t v19 = v3;
      unint64_t v12 = *(void *)(v3 + 16);
      unint64_t v11 = *(void *)(v3 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_190B218B0(v11 > 1, v12 + 1, 1);
        uint64_t v3 = v19;
      }
      ++v4;
      *(void *)(v3 + 16) = v12 + 1;
      uint64_t v13 = v3 + 16 * v12;
      *(void *)(v13 + 32) = v8;
      *(void *)(v13 + 40) = v10;
    }
    while (v2 != v4);
    goto LABEL_15;
  }
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

id sub_190B4B6B0(unint64_t a1, void *a2)
{
  id v5 = (uint64_t *)&v2[OBJC_IVAR___CNManagedDuplicate_signature];
  *id v5 = 0;
  v5[1] = 0;
  v2[OBJC_IVAR___CNManagedDuplicate_isAvailable] = 1;
  v2[OBJC_IVAR___CNManagedDuplicate_isIgnored] = 0;
  id v6 = (uint64_t *)&v2[OBJC_IVAR___CNManagedDuplicate_primaryID];
  *id v6 = 0;
  v6[1] = 0;
  id v7 = &v2[OBJC_IVAR___CNManagedDuplicate_managedCohorts];
  uint64_t v8 = MEMORY[0x1E4FBC860];
  *(void *)&v2[OBJC_IVAR___CNManagedDuplicate_managedCohorts] = MEMORY[0x1E4FBC860];
  uint64_t v9 = &v2[OBJC_IVAR___CNManagedDuplicate_userSelectedContactImage];
  _OWORD *v9 = xmmword_190B909F0;
  v9[1] = 0u;
  v9[2] = 0u;
  v9[3] = 0u;
  void v9[4] = 0u;
  v9[5] = 0u;
  v9[6] = 0u;
  *(_OWORD *)&v2[OBJC_IVAR___CNManagedDuplicate_userSelectedContactPoster] = xmmword_190B90B10;
  uint64_t v10 = OBJC_IVAR___CNManagedDuplicate__contactStore;
  *(void *)&v2[OBJC_IVAR___CNManagedDuplicate__contactStore] = 0;
  uint64_t v11 = OBJC_IVAR___CNManagedDuplicate__privateContacts;
  *(void *)&v2[OBJC_IVAR___CNManagedDuplicate__privateContacts] = v8;
  *(void *)&v2[OBJC_IVAR___CNManagedDuplicate__privateMergedContact] = 0;
  unint64_t v12 = &v2[OBJC_IVAR___CNManagedDuplicate__mergedNameComponents];
  uint64_t v13 = sub_190B76CC8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  uint64_t v14 = *(void **)&v2[v10];
  *(void *)&v2[v10] = a2;
  uint64_t v15 = v2;
  id v30 = a2;

  *(void *)&v2[v11] = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_190B778A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v17 = MEMORY[0x1E4FBC860];
  if (!v16)
  {
LABEL_11:
    swift_beginAccess();
    *id v7 = v17;
    swift_bridgeObjectRelease();
    uint64_t v23 = _s8Contacts16ManagedDuplicateC21preferredPrimaryIDFor_12contactStoreSSSgSaySo16CNMutableContactCG_So09CNContactH0CtFZ_0(a1, v30);
    uint64_t v25 = v24;
    swift_beginAccess();
    *id v6 = v23;
    v6[1] = v25;
    swift_bridgeObjectRelease();
    uint64_t v26 = _s8Contacts16ManagedDuplicateC012signatureForA0ySSSaySo16CNMutableContactCGFZ_0(a1);
    uint64_t v28 = v27;
    swift_bridgeObjectRelease();
    swift_beginAccess();
    *id v5 = v26;
    v5[1] = v28;

    swift_bridgeObjectRelease();
    v31.receiver = v15;
    v31.super_class = (Class)type metadata accessor for ManagedDuplicate();
    return objc_msgSendSuper2(&v31, sel_init);
  }
  uint64_t v32 = MEMORY[0x1E4FBC860];
  id result = (id)sub_190B77838();
  if ((v16 & 0x8000000000000000) == 0)
  {
    id v29 = v15;
    uint64_t v19 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v20 = (id)MEMORY[0x192FD1FB0](v19, a1);
      }
      else {
        id v20 = *(id *)(a1 + 8 * v19 + 32);
      }
      unint64_t v21 = v20;
      ++v19;
      id v22 = objc_allocWithZone((Class)type metadata accessor for ManagedCohort());
      sub_190B52878(v21);

      sub_190B77808();
      sub_190B77848();
      sub_190B77858();
      sub_190B77818();
    }
    while (v16 != v19);
    uint64_t v17 = v32;
    uint64_t v15 = v29;
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ManagedDuplicate()
{
  uint64_t result = qword_1E92A3E60;
  if (!qword_1E92A3E60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_190B4BA28(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_190B778F8();
  __break(1u);
  return result;
}

uint64_t sub_190B4BB20(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_190B778F8();
  __break(1u);
  return result;
}

uint64_t sub_190B4BC14(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5A28);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_190B778F8();
  __break(1u);
  return result;
}

uint64_t sub_190B4BD20(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 8 * a1 + 32;
    unint64_t v7 = a3 + 8 * v5;
    if (v6 >= v7 || v6 + 8 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_190B778F8();
  __break(1u);
  return result;
}

uint64_t sub_190B4BE28(id *__src, id *a2, unint64_t a3, void **a4, char *a5)
{
  unint64_t v6 = a2;
  unint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  BOOL v55 = __src;
  id v54 = a4;
  if (v10 >= v12 >> 3)
  {
    if (v11 < -7) {
      goto LABEL_61;
    }
    if (a4 != a2 || &a2[v13] <= a4) {
      memmove(a4, a2, 8 * v13);
    }
    id v29 = (char *)&a4[v13];
    id v53 = v29;
    BOOL v55 = v6;
    if (v7 >= v6 || v11 < 8)
    {
LABEL_60:
      sub_190B4A6E4((void **)&v55, (const void **)&v54, &v53);
      return 1;
    }
    unint64_t v46 = &a5[OBJC_IVAR___CNManagedDuplicate_primaryID];
    swift_beginAccess();
    id v30 = (id *)(a3 - 8);
    objc_super v31 = v6;
    uint64_t v47 = v7;
    while (1)
    {
      long long v50 = v30 + 1;
      unint64_t v52 = (id *)v29;
      uint64_t v33 = (void *)*((void *)v29 - 1);
      v29 -= 8;
      uint64_t v32 = v33;
      id v34 = *--v31;
      id v35 = v32;
      id v36 = v34;
      id v37 = objc_msgSend(v35, sel_identifier);
      uint64_t v38 = sub_190B77168();
      uint64_t v40 = v39;

      uint64_t v41 = *((void *)v46 + 1);
      if (v41)
      {
        if (v38 == *(void *)v46 && v41 == v40)
        {

          swift_bridgeObjectRelease();
          unint64_t v44 = (unint64_t)v47;
LABEL_57:
          id v29 = (char *)v52;
          if (v50 != v6 || v30 >= v6) {
            *id v30 = *v31;
          }
          BOOL v55 = v31;
          if ((unint64_t)v31 <= v44) {
            goto LABEL_60;
          }
          goto LABEL_41;
        }
        char v43 = sub_190B77998();

        swift_bridgeObjectRelease();
        unint64_t v44 = (unint64_t)v47;
        if (v43) {
          goto LABEL_57;
        }
      }
      else
      {

        swift_bridgeObjectRelease();
        unint64_t v44 = (unint64_t)v47;
      }
      id v53 = v29;
      if (v50 < v52 || v30 >= v52 || v50 != v52) {
        *id v30 = *(id *)v29;
      }
      objc_super v31 = v6;
      if ((unint64_t)v6 <= v44) {
        goto LABEL_60;
      }
LABEL_41:
      --v30;
      unint64_t v6 = v31;
      if (v29 <= (char *)a4) {
        goto LABEL_60;
      }
    }
  }
  if (v8 >= -7)
  {
    if (a4 != __src || &__src[v10] <= a4) {
      memmove(a4, __src, 8 * v10);
    }
    long long v49 = (char *)&a4[v10];
    id v53 = v49;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      uint64_t v14 = &a5[OBJC_IVAR___CNManagedDuplicate_primaryID];
      swift_beginAccess();
      uint64_t v15 = a4;
      while (1)
      {
        uint64_t v16 = v7;
        uint64_t v17 = *v15;
        id v18 = *v6;
        id v19 = v17;
        id v20 = objc_msgSend(v18, sel_identifier);
        uint64_t v21 = sub_190B77168();
        uint64_t v23 = v22;

        uint64_t v24 = *((void *)v14 + 1);
        if (!v24) {
          break;
        }
        if (v21 == *(void *)v14 && v24 == v23)
        {

          swift_bridgeObjectRelease();
        }
        else
        {
          char v26 = sub_190B77998();

          swift_bridgeObjectRelease();
          if ((v26 & 1) == 0) {
            goto LABEL_21;
          }
        }
        uint64_t v28 = v6 + 1;
        uint64_t v27 = v16;
        if (v16 < v6 || v16 >= v28 || v16 != v6) {
          *uint64_t v16 = *v6;
        }
LABEL_29:
        unint64_t v7 = v27 + 1;
        if (v15 < (void **)v49)
        {
          unint64_t v6 = v28;
          if ((unint64_t)v28 < a3) {
            continue;
          }
        }
        BOOL v55 = v7;
        goto LABEL_60;
      }

      swift_bridgeObjectRelease();
LABEL_21:
      uint64_t v27 = v16;
      if (v16 != v15) {
        *uint64_t v16 = *v15;
      }
      id v54 = ++v15;
      uint64_t v28 = v6;
      goto LABEL_29;
    }
    goto LABEL_60;
  }
LABEL_61:

  uint64_t result = sub_190B778F8();
  __break(1u);
  return result;
}

void sub_190B4C26C(uint64_t *a1, void *a2)
{
  uint64_t v4 = a1[1];
  int64_t v5 = a2;
  uint64_t v6 = sub_190B77958();
  int64_t v147 = v4;
  if (v6 >= v4)
  {
    if (v4 < 0) {
      goto LABEL_179;
    }
    if ((unint64_t)v4 <= 1)
    {

      return;
    }
    uint64_t v111 = *a1;
    unint64_t v112 = (void *)(v5 + OBJC_IVAR___CNManagedDuplicate_primaryID);
    uint64_t v146 = (void *)v5;
    id v150 = (id)v5;
    uint64_t v113 = -1;
    uint64_t v114 = 1;
    uint64_t v115 = v111;
    while (1)
    {
      swift_beginAccess();
      uint64_t v156 = v114;
      id v116 = *(void **)(v111 + 8 * v114);
      uint64_t v159 = v113;
      uint64_t v154 = v115;
      while (1)
      {
        v117 = *(void **)v115;
        id v118 = v116;
        id v119 = v117;
        int64_t v5 = (int64_t)objc_msgSend(v118, sel_identifier);
        uint64_t v120 = sub_190B77168();
        uint64_t v122 = v121;

        uint64_t v123 = v112[1];
        if (!v123) {
          break;
        }
        if (v120 == *v112 && v123 == v122)
        {

          swift_bridgeObjectRelease();
        }
        else
        {
          int64_t v5 = sub_190B77998();

          swift_bridgeObjectRelease();
          if ((v5 & 1) == 0) {
            goto LABEL_126;
          }
        }
        if (!v111) {
          goto LABEL_183;
        }
        uint64_t v125 = *(void **)v115;
        id v116 = *(void **)(v115 + 8);
        *(void *)uint64_t v115 = v116;
        *(void *)(v115 + _Block_object_dispose(&STACK[0x228], 8) = v125;
        v115 -= 8;
        if (__CFADD__(v113++, 1)) {
          goto LABEL_126;
        }
      }

      swift_bridgeObjectRelease();
LABEL_126:
      uint64_t v114 = v156 + 1;
      uint64_t v115 = v154 + 8;
      uint64_t v113 = v159 - 1;
      if (v156 + 1 == v147)
      {

        return;
      }
    }
  }
  if (v4 >= 0) {
    uint64_t v7 = v4;
  }
  else {
    uint64_t v7 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_188;
  }
  uint64_t v141 = v6;
  uint64_t v146 = (void *)v5;
  v138 = a1;
  if (v4 < 2)
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v161 = MEMORY[0x1E4FBC860];
    v145 = (void **)((MEMORY[0x1E4FBC860] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_142:
      if (v13 >= 2)
      {
        uint64_t v127 = *v138;
        uint64_t v157 = *v138;
        do
        {
          unint64_t v128 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_174;
          }
          if (!v127) {
            goto LABEL_187;
          }
          int64_t v5 = (int64_t)v10;
          uint64_t v129 = *(void *)&v10[16 * v128 + 32];
          uint64_t v130 = *(void *)&v10[16 * v13 + 24];
          unint64_t v160 = (id *)(v127 + 8 * v129);
          v131 = (id *)(v127 + 8 * *(void *)&v10[16 * v13 + 16]);
          unint64_t v132 = v127 + 8 * v130;
          v133 = v146;
          sub_190B4BE28(v160, v131, v132, v145, v133);
          if (v2) {
            goto LABEL_155;
          }

          if (v130 < v129) {
            goto LABEL_175;
          }
          if (swift_isUniquelyReferenced_nonNull_native()) {
            id v134 = (char *)v5;
          }
          else {
            id v134 = sub_190B4A7A0(v5);
          }
          if (v128 >= *((void *)v134 + 2)) {
            goto LABEL_176;
          }
          v135 = &v134[16 * v128 + 32];
          *(void *)v135 = v129;
          *((void *)v135 + 1) = v130;
          unint64_t v136 = *((void *)v134 + 2);
          if (v13 > v136) {
            goto LABEL_177;
          }
          int64_t v5 = v136 - 1;
          id v137 = v134;
          memmove(&v134[16 * v13 + 16], &v134[16 * v13 + 32], 16 * (v136 - v13));
          uint64_t v10 = v137;
          *((void *)v137 + 2) = v136 - 1;
          unint64_t v13 = v136 - 1;
          uint64_t v127 = v157;
        }
        while (v136 > 2);
      }
      swift_bridgeObjectRelease();
      *(void *)((v161 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_190B772E8();

LABEL_157:
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v8 = v7 >> 1;
    sub_190B4E814();
    uint64_t v9 = sub_190B77358();
    *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    v145 = (void **)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v161 = v9;
  }
  uint64_t v11 = *a1;
  id v155 = (void *)(v5 + OBJC_IVAR___CNManagedDuplicate_primaryID);
  swift_beginAccess();
  int64_t v12 = 0;
  uint64_t v139 = v11 + 16;
  uint64_t v140 = v11 - 8;
  uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v158 = v11;
  while (1)
  {
    int64_t v5 = v12++;
    if (v12 < v4)
    {
      uint64_t v14 = v10;
      uint64_t v15 = *(void **)(v11 + 8 * v5);
      id v16 = *(id *)(v11 + 8 * v12);
      id v17 = v15;
      id v18 = objc_msgSend(v16, sel_identifier);
      uint64_t v19 = sub_190B77168();
      uint64_t v21 = v20;

      uint64_t v22 = v155[1];
      if (v22)
      {
        if (v19 == *v155 && v22 == v21) {
          int v24 = 1;
        }
        else {
          int v24 = sub_190B77998();
        }
      }
      else
      {
        int v24 = 0;
      }

      swift_bridgeObjectRelease();
      int64_t v12 = v5 + 2;
      if (v5 + 2 < v147)
      {
        int64_t v151 = v5;
        uint64_t v25 = (id *)(v139 + 8 * v5);
        while (1)
        {
          char v26 = *(v25 - 1);
          id v27 = *v25;
          id v28 = v26;
          id v29 = objc_msgSend(v27, sel_identifier);
          uint64_t v30 = sub_190B77168();
          uint64_t v32 = v31;

          uint64_t v33 = v155[1];
          if (v33)
          {
            if (v30 == *v155 && v33 == v32)
            {

              swift_bridgeObjectRelease();
              if ((v24 & 1) == 0)
              {
                uint64_t v10 = v14;
                uint64_t v11 = v158;
                int64_t v5 = v151;
                goto LABEL_48;
              }
            }
            else
            {
              int v35 = sub_190B77998();

              swift_bridgeObjectRelease();
              if ((v24 ^ v35)) {
                goto LABEL_38;
              }
            }
          }
          else
          {

            swift_bridgeObjectRelease();
            if (v24)
            {
              uint64_t v10 = v14;
              uint64_t v11 = v158;
              int64_t v5 = v151;
              if (v12 < v151) {
                goto LABEL_180;
              }
              goto LABEL_41;
            }
          }
          ++v12;
          ++v25;
          if (v147 == v12)
          {
            int64_t v12 = v147;
LABEL_38:
            int64_t v5 = v151;
            break;
          }
        }
      }
      uint64_t v10 = v14;
      uint64_t v11 = v158;
      if (v24)
      {
        if (v12 < v5) {
          goto LABEL_180;
        }
LABEL_41:
        if (v5 < v12)
        {
          id v36 = (uint64_t *)(v140 + 8 * v12);
          int64_t v37 = v12;
          int64_t v38 = v5;
          uint64_t v39 = (uint64_t *)(v11 + 8 * v5);
          do
          {
            if (v38 != --v37)
            {
              if (!v11) {
                goto LABEL_186;
              }
              uint64_t v40 = *v39;
              uint64_t *v39 = *v36;
              *id v36 = v40;
            }
            ++v38;
            --v36;
            ++v39;
          }
          while (v38 < v37);
        }
      }
    }
LABEL_48:
    int64_t v41 = v147;
    if (v12 < v147)
    {
      if (__OFSUB__(v12, v5)) {
        goto LABEL_178;
      }
      if (v12 - v5 < v141) {
        break;
      }
    }
LABEL_73:
    if (v12 < v5) {
      goto LABEL_173;
    }
    id v56 = v10;
    if (swift_isUniquelyReferenced_nonNull_native()) {
      uint64_t v10 = v56;
    }
    else {
      uint64_t v10 = sub_190B4A52C(0, *((void *)v56 + 2) + 1, 1, v56);
    }
    unint64_t v58 = *((void *)v10 + 2);
    unint64_t v57 = *((void *)v10 + 3);
    unint64_t v13 = v58 + 1;
    if (v58 >= v57 >> 1) {
      uint64_t v10 = sub_190B4A52C((char *)(v57 > 1), v58 + 1, 1, v10);
    }
    *((void *)v10 + 2) = v13;
    unint64_t v59 = v10 + 32;
    unint64_t v60 = (int64_t *)&v10[16 * v58 + 32];
    *unint64_t v60 = v5;
    v60[1] = v12;
    if (v58)
    {
      int64_t v142 = v12;
      v144 = v10 + 32;
      while (1)
      {
        unint64_t v61 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v66 = &v59[16 * v13];
          uint64_t v67 = *((void *)v66 - 8);
          uint64_t v68 = *((void *)v66 - 7);
          BOOL v72 = __OFSUB__(v68, v67);
          uint64_t v69 = v68 - v67;
          if (v72) {
            goto LABEL_162;
          }
          uint64_t v71 = *((void *)v66 - 6);
          uint64_t v70 = *((void *)v66 - 5);
          BOOL v72 = __OFSUB__(v70, v71);
          uint64_t v64 = v70 - v71;
          char v65 = v72;
          if (v72) {
            goto LABEL_163;
          }
          unint64_t v73 = v13 - 2;
          uint64_t v74 = &v59[16 * v13 - 32];
          uint64_t v76 = *(void *)v74;
          uint64_t v75 = *((void *)v74 + 1);
          BOOL v72 = __OFSUB__(v75, v76);
          uint64_t v77 = v75 - v76;
          if (v72) {
            goto LABEL_165;
          }
          BOOL v72 = __OFADD__(v64, v77);
          uint64_t v78 = v64 + v77;
          if (v72) {
            goto LABEL_168;
          }
          if (v78 >= v69)
          {
            unint64_t v96 = &v59[16 * v61];
            uint64_t v98 = *(void *)v96;
            uint64_t v97 = *((void *)v96 + 1);
            BOOL v72 = __OFSUB__(v97, v98);
            uint64_t v99 = v97 - v98;
            if (v72) {
              goto LABEL_172;
            }
            BOOL v89 = v64 < v99;
            goto LABEL_111;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v90 = *((void *)v10 + 4);
            uint64_t v91 = *((void *)v10 + 5);
            BOOL v72 = __OFSUB__(v91, v90);
            uint64_t v83 = v91 - v90;
            char v84 = v72;
            goto LABEL_105;
          }
          uint64_t v63 = *((void *)v10 + 4);
          uint64_t v62 = *((void *)v10 + 5);
          BOOL v72 = __OFSUB__(v62, v63);
          uint64_t v64 = v62 - v63;
          char v65 = v72;
        }
        if (v65) {
          goto LABEL_164;
        }
        unint64_t v73 = v13 - 2;
        uint64_t v79 = &v59[16 * v13 - 32];
        uint64_t v81 = *(void *)v79;
        uint64_t v80 = *((void *)v79 + 1);
        BOOL v82 = __OFSUB__(v80, v81);
        uint64_t v83 = v80 - v81;
        char v84 = v82;
        if (v82) {
          goto LABEL_167;
        }
        uint64_t v85 = &v59[16 * v61];
        uint64_t v87 = *(void *)v85;
        uint64_t v86 = *((void *)v85 + 1);
        BOOL v72 = __OFSUB__(v86, v87);
        uint64_t v88 = v86 - v87;
        if (v72) {
          goto LABEL_170;
        }
        if (__OFADD__(v83, v88)) {
          goto LABEL_171;
        }
        if (v83 + v88 >= v64)
        {
          BOOL v89 = v64 < v88;
LABEL_111:
          if (v89) {
            unint64_t v61 = v73;
          }
          goto LABEL_113;
        }
LABEL_105:
        if (v84) {
          goto LABEL_166;
        }
        uint64_t v92 = &v59[16 * v61];
        uint64_t v94 = *(void *)v92;
        uint64_t v93 = *((void *)v92 + 1);
        BOOL v72 = __OFSUB__(v93, v94);
        uint64_t v95 = v93 - v94;
        if (v72) {
          goto LABEL_169;
        }
        if (v95 < v83) {
          goto LABEL_14;
        }
LABEL_113:
        unint64_t v100 = v61 - 1;
        if (v61 - 1 >= v13)
        {
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
LABEL_176:
          __break(1u);
LABEL_177:
          __break(1u);
LABEL_178:
          __break(1u);
LABEL_179:
          __break(1u);
LABEL_180:
          __break(1u);
LABEL_181:
          __break(1u);
          goto LABEL_182;
        }
        if (!v11) {
          goto LABEL_185;
        }
        int64_t v5 = (int64_t)v10;
        unint64_t v101 = &v59[16 * v100];
        uint64_t v102 = *(void *)v101;
        unint64_t v103 = v61;
        uint64_t v104 = &v59[16 * v61];
        uint64_t v105 = *((void *)v104 + 1);
        v149 = (id *)(v11 + 8 * *(void *)v104);
        v153 = (id *)(v11 + 8 * *(void *)v101);
        uint64_t v106 = v146;
        sub_190B4BE28(v153, v149, v11 + 8 * v105, v145, v106);
        if (v2)
        {
LABEL_155:
          swift_bridgeObjectRelease();

          *(void *)((v161 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
          sub_190B772E8();

          goto LABEL_157;
        }

        if (v105 < v102) {
          goto LABEL_159;
        }
        int64_t v107 = v5;
        if (v103 > *(void *)(v5 + 16)) {
          goto LABEL_160;
        }
        *(void *)unint64_t v101 = v102;
        unint64_t v59 = v144;
        *(void *)&v144[16 * v100 + 8] = v105;
        int64_t v5 = *(void *)(v5 + 16);
        if (v103 >= v5) {
          goto LABEL_161;
        }
        unint64_t v13 = v5 - 1;
        id v108 = v104 + 16;
        id v109 = v104;
        int64_t v110 = v107;
        memmove(v109, v108, 16 * (v5 - 1 - v103));
        uint64_t v10 = (char *)v110;
        *(void *)(v110 + 16) = v5 - 1;
        uint64_t v11 = v158;
        int64_t v12 = v142;
        if ((unint64_t)v5 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_14:
    uint64_t v4 = v147;
    if (v12 >= v147) {
      goto LABEL_142;
    }
  }
  if (__OFADD__(v5, v141)) {
    goto LABEL_181;
  }
  if (v5 + v141 < v147) {
    int64_t v41 = v5 + v141;
  }
  if (v41 >= v5)
  {
    if (v12 != v41)
    {
      int64_t v148 = v41;
      int64_t v152 = v5;
      id v143 = v10;
      uint64_t v42 = v140 + 8 * v12;
      do
      {
        int64_t v43 = v12;
        unint64_t v44 = *(void **)(v11 + 8 * v12);
        int64_t v45 = v152;
        uint64_t v46 = v42;
        while (1)
        {
          uint64_t v47 = *(void **)v46;
          id v48 = v44;
          id v49 = v47;
          int64_t v5 = (int64_t)objc_msgSend(v48, sel_identifier);
          uint64_t v50 = sub_190B77168();
          uint64_t v52 = v51;

          uint64_t v53 = v155[1];
          if (!v53) {
            break;
          }
          if (v50 == *v155 && v53 == v52)
          {

            swift_bridgeObjectRelease();
          }
          else
          {
            int64_t v5 = sub_190B77998();

            swift_bridgeObjectRelease();
            if ((v5 & 1) == 0) {
              goto LABEL_58;
            }
          }
          uint64_t v11 = v158;
          if (!v158) {
            goto LABEL_184;
          }
          BOOL v55 = *(void **)v46;
          unint64_t v44 = *(void **)(v46 + 8);
          *(void *)uint64_t v46 = v44;
          *(void *)(v46 + _Block_object_dispose(&STACK[0x228], 8) = v55;
          v46 -= 8;
          if (v43 == ++v45) {
            goto LABEL_59;
          }
        }

        swift_bridgeObjectRelease();
LABEL_58:
        uint64_t v11 = v158;
LABEL_59:
        int64_t v12 = v43 + 1;
        v42 += 8;
      }
      while (v43 + 1 != v148);
      int64_t v12 = v148;
      uint64_t v10 = v143;
      int64_t v5 = v152;
    }
    goto LABEL_73;
  }
LABEL_182:
  __break(1u);
LABEL_183:
  __break(1u);
LABEL_184:

  __break(1u);
LABEL_185:

  __break(1u);
LABEL_186:

  __break(1u);
LABEL_187:

  __break(1u);
LABEL_188:

  sub_190B77898();
  __break(1u);
}

void sub_190B4CD80(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  id v4 = a2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v3;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_190B4A8A8();
  }
  uint64_t v6 = *(void *)(v3 + 16);
  v8[0] = v3 + 32;
  v8[1] = v6;
  id v7 = v4;
  sub_190B4C26C(v8, v7);

  sub_190B77818();
}

uint64_t sub_190B4CE20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92A5DA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_190B4CE88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92A5DA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_190B4CEF0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR___CNManagedDuplicate_signature, a2);
}

uint64_t sub_190B4CEFC(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_190B44A24(a1, a2, a3, a4, &OBJC_IVAR___CNManagedDuplicate_signature);
}

uint64_t sub_190B4CF1C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return keypath_get_3Tm(a1, &OBJC_IVAR___CNManagedDuplicate_isAvailable, a2);
}

uint64_t sub_190B4CF28(char *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_4Tm(a1, a2, a3, a4, &OBJC_IVAR___CNManagedDuplicate_isAvailable);
}

uint64_t sub_190B4CF34@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return keypath_get_3Tm(a1, &OBJC_IVAR___CNManagedDuplicate_isIgnored, a2);
}

uint64_t keypath_get_3Tm@<X0>(void *a1@<X0>, void *a2@<X3>, unsigned char *a3@<X8>)
{
  uint64_t v4 = (unsigned char *)(*a1 + *a2);
  uint64_t result = swift_beginAccess();
  *a3 = *v4;
  return result;
}

uint64_t sub_190B4CF90(char *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_4Tm(a1, a2, a3, a4, &OBJC_IVAR___CNManagedDuplicate_isIgnored);
}

uint64_t keypath_set_4Tm(char *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  char v5 = *a1;
  uint64_t v6 = (unsigned char *)(*a2 + *a5);
  uint64_t result = swift_beginAccess();
  *uint64_t v6 = v5;
  return result;
}

uint64_t sub_190B4CFE8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR___CNManagedDuplicate_primaryID, a2);
}

uint64_t keypath_getTm@<X0>(void *a1@<X0>, void *a2@<X3>, void *a3@<X8>)
{
  uint64_t v4 = (void *)(*a1 + *a2);
  swift_beginAccess();
  uint64_t v5 = v4[1];
  *a3 = *v4;
  a3[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_190B4D048(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_190B44A24(a1, a2, a3, a4, &OBJC_IVAR___CNManagedDuplicate_primaryID);
}

uint64_t sub_190B4D068@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR___CNManagedDuplicate_managedCohorts);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_190B4D0D8()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_190B45BCC(v0);
}

uint64_t sub_190B4D104()
{
  return type metadata accessor for ManagedDuplicate();
}

void sub_190B4D10C()
{
  sub_190B4D924();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for ManagedDuplicate(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ManagedDuplicate);
}

uint64_t dispatch thunk of ManagedDuplicate.signature.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of ManagedDuplicate.signature.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of ManagedDuplicate.signature.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of ManagedDuplicate.isAvailable.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of ManagedDuplicate.isAvailable.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of ManagedDuplicate.isAvailable.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of ManagedDuplicate.isIgnored.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of ManagedDuplicate.isIgnored.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of ManagedDuplicate.isIgnored.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of ManagedDuplicate.primaryID.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of ManagedDuplicate.primaryID.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of ManagedDuplicate.primaryID.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of ManagedDuplicate.managedCohorts.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of ManagedDuplicate.managedCohorts.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of ManagedDuplicate.managedCohorts.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of ManagedDuplicate.userSelectedContactImage.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of ManagedDuplicate.userSelectedContactImage.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of ManagedDuplicate.userSelectedContactImage.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of ManagedDuplicate.userSelectedContactPoster.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of ManagedDuplicate.userSelectedContactPoster.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of ManagedDuplicate.userSelectedContactPoster.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x148))();
}

uint64_t dispatch thunk of ManagedDuplicate.cohortIDs.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of ManagedDuplicate.__allocating_init(contacts:contactStore:)()
{
  return (*(uint64_t (**)(void))(v0 + 376))();
}

uint64_t dispatch thunk of ManagedDuplicate.__allocating_init(duplicateSetProperties:)()
{
  return (*(uint64_t (**)(void))(v0 + 384))();
}

uint64_t dispatch thunk of ManagedDuplicate.__allocating_init(duplicateSet:)()
{
  return (*(uint64_t (**)(void))(v0 + 392))();
}

uint64_t dispatch thunk of ManagedDuplicate.contacts.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1A8))();
}

uint64_t dispatch thunk of ManagedDuplicate.contacts.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of ManagedDuplicate.contacts.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of ManagedDuplicate.sortedContacts.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of ManagedDuplicate.primaryContact.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1C8))();
}

uint64_t dispatch thunk of ManagedDuplicate.mergedContact.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1E8))();
}

uint64_t dispatch thunk of ManagedDuplicate.mergedNameComponents.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x208))();
}

uint64_t dispatch thunk of ManagedDuplicate.cohortImagesToPreserve.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x220))();
}

uint64_t dispatch thunk of ManagedDuplicate.cohortPostersToPreserve.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x228))();
}

void sub_190B4D924()
{
  if (!qword_1E92A3E50)
  {
    sub_190B76CC8();
    unint64_t v0 = sub_190B77628();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1E92A3E50);
    }
  }
}

uint64_t destroy for ManagedDuplicate.SelectedImageData(uint64_t *a1)
{
  swift_bridgeObjectRelease();
  unint64_t v2 = a1[3];
  if (v2 >> 60 != 15) {
    sub_190B2EB28(a1[2], v2);
  }
  unint64_t v3 = a1[5];
  if (v3 >> 60 != 15) {
    sub_190B2EB28(a1[4], v3);
  }
  unint64_t v4 = a1[7];
  if (v4 >> 60 != 15) {
    sub_190B2EB28(a1[6], v4);
  }
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v6 = a1[11];
  if (v6 >> 60 != 15) {
    uint64_t result = sub_190B2EB28(a1[10], v6);
  }
  unint64_t v7 = a1[13];
  if (v7 >> 60 != 15)
  {
    uint64_t v8 = a1[12];
    return sub_190B2EB28(v8, v7);
  }
  return result;
}

uint64_t initializeWithCopy for ManagedDuplicate.SelectedImageData(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x228], 8) = v4;
  uint64_t v5 = a2 + 2;
  unint64_t v6 = a2[3];
  swift_bridgeObjectRetain();
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *v5;
  }
  else
  {
    uint64_t v7 = *(void *)v5;
    sub_190B2E918(v7, v6);
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v6;
  }
  uint64_t v8 = a2 + 4;
  unint64_t v9 = a2[5];
  if (v9 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v8;
  }
  else
  {
    uint64_t v10 = *v8;
    sub_190B2E918(*v8, a2[5]);
    *(void *)(a1 + 32) = v10;
    *(void *)(a1 + 40) = v9;
  }
  uint64_t v11 = a2 + 6;
  unint64_t v12 = a2[7];
  if (v12 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 4_Block_object_dispose(&STACK[0x228], 8) = *(_OWORD *)v11;
  }
  else
  {
    uint64_t v13 = *v11;
    sub_190B2E918(*v11, a2[7]);
    *(void *)(a1 + 4_Block_object_dispose(&STACK[0x228], 8) = v13;
    *(void *)(a1 + 56) = v12;
  }
  uint64_t v14 = a2[9];
  *(void *)(a1 + 64) = a2[8];
  *(void *)(a1 + 72) = v14;
  uint64_t v15 = a2 + 10;
  unint64_t v16 = a2[11];
  swift_bridgeObjectRetain();
  if (v16 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 80) = *v15;
  }
  else
  {
    uint64_t v17 = *(void *)v15;
    sub_190B2E918(v17, v16);
    *(void *)(a1 + 80) = v17;
    *(void *)(a1 + 8_Block_object_dispose(&STACK[0x228], 8) = v16;
  }
  id v18 = a2 + 12;
  unint64_t v19 = a2[13];
  if (v19 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 96) = *(_OWORD *)v18;
  }
  else
  {
    uint64_t v20 = *v18;
    sub_190B2E918(*v18, v19);
    *(void *)(a1 + 96) = v20;
    *(void *)(a1 + 104) = v19;
  }
  return a1;
}

void *assignWithCopy for ManagedDuplicate.SelectedImageData(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2 + 2;
  unint64_t v5 = a2[3];
  if (a1[3] >> 60 == 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v6 = *v4;
      sub_190B2E918(*v4, a2[3]);
      a1[2] = v6;
      a1[3] = v5;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
    sub_190B4DE7C((uint64_t)(a1 + 2));
LABEL_6:
    *((_OWORD *)a1 + 1) = *(_OWORD *)v4;
    goto LABEL_8;
  }
  uint64_t v7 = *v4;
  sub_190B2E918(*v4, a2[3]);
  uint64_t v8 = a1[2];
  unint64_t v9 = a1[3];
  a1[2] = v7;
  a1[3] = v5;
  sub_190B2EB28(v8, v9);
LABEL_8:
  uint64_t v10 = a2 + 4;
  unint64_t v11 = a2[5];
  if (a1[5] >> 60 == 15)
  {
    if (v11 >> 60 != 15)
    {
      uint64_t v12 = *v10;
      sub_190B2E918(*v10, a2[5]);
      a1[4] = v12;
      a1[5] = v11;
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v11 >> 60 == 15)
  {
    sub_190B4DE7C((uint64_t)(a1 + 4));
LABEL_13:
    *((_OWORD *)a1 + 2) = *(_OWORD *)v10;
    goto LABEL_15;
  }
  uint64_t v13 = *v10;
  sub_190B2E918(*v10, a2[5]);
  uint64_t v14 = a1[4];
  unint64_t v15 = a1[5];
  a1[4] = v13;
  a1[5] = v11;
  sub_190B2EB28(v14, v15);
LABEL_15:
  unint64_t v16 = a2 + 6;
  unint64_t v17 = a2[7];
  if (a1[7] >> 60 == 15)
  {
    if (v17 >> 60 != 15)
    {
      uint64_t v18 = *v16;
      sub_190B2E918(*v16, a2[7]);
      a1[6] = v18;
      a1[7] = v17;
      goto LABEL_22;
    }
    goto LABEL_20;
  }
  if (v17 >> 60 == 15)
  {
    sub_190B4DE7C((uint64_t)(a1 + 6));
LABEL_20:
    *((_OWORD *)a1 + 3) = *(_OWORD *)v16;
    goto LABEL_22;
  }
  uint64_t v19 = *v16;
  sub_190B2E918(*v16, a2[7]);
  uint64_t v20 = a1[6];
  unint64_t v21 = a1[7];
  a1[6] = v19;
  a1[7] = v17;
  sub_190B2EB28(v20, v21);
LABEL_22:
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = a2 + 10;
  unint64_t v23 = a2[11];
  if (a1[11] >> 60 == 15)
  {
    if (v23 >> 60 != 15)
    {
      uint64_t v24 = *v22;
      sub_190B2E918(*v22, a2[11]);
      a1[10] = v24;
      a1[11] = v23;
      goto LABEL_29;
    }
    goto LABEL_27;
  }
  if (v23 >> 60 == 15)
  {
    sub_190B4DE7C((uint64_t)(a1 + 10));
LABEL_27:
    *((_OWORD *)a1 + 5) = *(_OWORD *)v22;
    goto LABEL_29;
  }
  uint64_t v25 = *v22;
  sub_190B2E918(*v22, a2[11]);
  uint64_t v26 = a1[10];
  unint64_t v27 = a1[11];
  a1[10] = v25;
  a1[11] = v23;
  sub_190B2EB28(v26, v27);
LABEL_29:
  id v28 = a2 + 12;
  unint64_t v29 = a2[13];
  if (a1[13] >> 60 != 15)
  {
    if (v29 >> 60 != 15)
    {
      uint64_t v31 = *v28;
      sub_190B2E918(*v28, v29);
      uint64_t v32 = a1[12];
      unint64_t v33 = a1[13];
      a1[12] = v31;
      a1[13] = v29;
      sub_190B2EB28(v32, v33);
      return a1;
    }
    sub_190B4DE7C((uint64_t)(a1 + 12));
    goto LABEL_34;
  }
  if (v29 >> 60 == 15)
  {
LABEL_34:
    *((_OWORD *)a1 + 6) = *(_OWORD *)v28;
    return a1;
  }
  uint64_t v30 = *v28;
  sub_190B2E918(*v28, v29);
  a1[12] = v30;
  a1[13] = v29;
  return a1;
}

uint64_t sub_190B4DE7C(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 4_Block_object_dispose(&STACK[0x228], 8) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

void *assignWithTake for ManagedDuplicate.SelectedImageData(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  long long v5 = a2 + 2;
  unint64_t v6 = a1[3];
  if (v6 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v7 = a2[3];
  if (v7 >> 60 == 15)
  {
    sub_190B4DE7C((uint64_t)(a1 + 2));
LABEL_4:
    *((_OWORD *)a1 + 1) = *v5;
    goto LABEL_6;
  }
  uint64_t v8 = a1[2];
  a1[2] = *(void *)v5;
  a1[3] = v7;
  sub_190B2EB28(v8, v6);
LABEL_6:
  unint64_t v9 = a2 + 4;
  unint64_t v10 = a1[5];
  if (v10 >> 60 == 15)
  {
LABEL_9:
    *((_OWORD *)a1 + 2) = *v9;
    goto LABEL_11;
  }
  unint64_t v11 = a2[5];
  if (v11 >> 60 == 15)
  {
    sub_190B4DE7C((uint64_t)(a1 + 4));
    goto LABEL_9;
  }
  uint64_t v12 = a1[4];
  a1[4] = *(void *)v9;
  a1[5] = v11;
  sub_190B2EB28(v12, v10);
LABEL_11:
  uint64_t v13 = a2 + 6;
  unint64_t v14 = a1[7];
  if (v14 >> 60 == 15)
  {
LABEL_14:
    *((_OWORD *)a1 + 3) = *v13;
    goto LABEL_16;
  }
  unint64_t v15 = a2[7];
  if (v15 >> 60 == 15)
  {
    sub_190B4DE7C((uint64_t)(a1 + 6));
    goto LABEL_14;
  }
  uint64_t v16 = a1[6];
  a1[6] = *(void *)v13;
  a1[7] = v15;
  sub_190B2EB28(v16, v14);
LABEL_16:
  uint64_t v17 = a2[9];
  a1[8] = a2[8];
  a1[9] = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = a2 + 10;
  unint64_t v19 = a1[11];
  if (v19 >> 60 == 15)
  {
LABEL_19:
    *((_OWORD *)a1 + 5) = *v18;
    goto LABEL_21;
  }
  unint64_t v20 = a2[11];
  if (v20 >> 60 == 15)
  {
    sub_190B4DE7C((uint64_t)(a1 + 10));
    goto LABEL_19;
  }
  uint64_t v21 = a1[10];
  a1[10] = *(void *)v18;
  a1[11] = v20;
  sub_190B2EB28(v21, v19);
LABEL_21:
  uint64_t v22 = a2 + 12;
  unint64_t v23 = a1[13];
  if (v23 >> 60 != 15)
  {
    unint64_t v24 = a2[13];
    if (v24 >> 60 != 15)
    {
      uint64_t v25 = a1[12];
      a1[12] = *v22;
      a1[13] = v24;
      sub_190B2EB28(v25, v23);
      return a1;
    }
    sub_190B4DE7C((uint64_t)(a1 + 12));
  }
  *((_OWORD *)a1 + 6) = *(_OWORD *)v22;
  return a1;
}

uint64_t getEnumTagSinglePayload for ManagedDuplicate.SelectedImageData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 112)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ManagedDuplicate.SelectedImageData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 8_Block_object_dispose(&STACK[0x228], 8) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + _Block_object_dispose(&STACK[0x228], 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 112) = 0;
    }
    if (a2) {
      *(void *)(result + _Block_object_dispose(&STACK[0x228], 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ManagedDuplicate.SelectedImageData()
{
  return &type metadata for ManagedDuplicate.SelectedImageData;
}

uint64_t *destroy for ManagedDuplicate.SelectedPosterData(uint64_t *result)
{
  unint64_t v1 = result[1];
  if (v1 >> 60 != 15) {
    return (uint64_t *)sub_190B2EB28(*result, v1);
  }
  return result;
}

uint64_t _s8Contacts16ManagedDuplicateC18SelectedPosterDataVwCP_0(uint64_t a1, uint64_t *a2)
{
  unint64_t v3 = a2[1];
  if (v3 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v4 = *a2;
    sub_190B2E918(*a2, a2[1]);
    *(void *)a1 = v4;
    *(void *)(a1 + _Block_object_dispose(&STACK[0x228], 8) = v3;
  }
  return a1;
}

uint64_t *assignWithCopy for ManagedDuplicate.SelectedPosterData(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 8);
  if ((unint64_t)a1[1] >> 60 != 15)
  {
    if (v4 >> 60 != 15)
    {
      uint64_t v6 = *(void *)a2;
      sub_190B2E918(*(void *)a2, *(void *)(a2 + 8));
      uint64_t v7 = *a1;
      unint64_t v8 = a1[1];
      *a1 = v6;
      a1[1] = v4;
      sub_190B2EB28(v7, v8);
      return a1;
    }
    sub_190B4DE7C((uint64_t)a1);
    goto LABEL_6;
  }
  if (v4 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  uint64_t v5 = *(void *)a2;
  sub_190B2E918(*(void *)a2, *(void *)(a2 + 8));
  *a1 = v5;
  a1[1] = v4;
  return a1;
}

uint64_t *assignWithTake for ManagedDuplicate.SelectedPosterData(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4 = a1[1];
  if (v4 >> 60 != 15)
  {
    unint64_t v5 = a2[1];
    if (v5 >> 60 != 15)
    {
      uint64_t v6 = *a1;
      *a1 = *a2;
      a1[1] = v5;
      sub_190B2EB28(v6, v4);
      return a1;
    }
    sub_190B4DE7C((uint64_t)a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t getEnumTagSinglePayload for ManagedDuplicate.SelectedPosterData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xC && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 12);
  }
  uint64_t v3 = *(void *)(a1 + 8) >> 60;
  if (((4 * v3) & 0xC) != 0) {
    int v4 = 14 - ((4 * v3) & 0xC | (v3 >> 2));
  }
  else {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ManagedDuplicate.SelectedPosterData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xB)
  {
    *(void *)__n128 result = a2 - 12;
    *(void *)(result + _Block_object_dispose(&STACK[0x228], 8) = 0;
    if (a3 >= 0xC) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xC) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(void *)(result + _Block_object_dispose(&STACK[0x228], 8) = (unint64_t)((4 * (a2 ^ 0xF)) | ((a2 ^ 0xF) >> 2)) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ManagedDuplicate.SelectedPosterData()
{
  return &type metadata for ManagedDuplicate.SelectedPosterData;
}

uint64_t sub_190B4E3E0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_190B778F8();
  __break(1u);
  return result;
}

uint64_t sub_190B4E4D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_190B778F8();
  __break(1u);
  return result;
}

uint64_t sub_190B4E5C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(sub_190B76F98() - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_190B778F8();
  __break(1u);
  return result;
}

uint64_t sub_190B4E720(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 6) + 32;
    unint64_t v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_190B778F8();
  __break(1u);
  return result;
}

unint64_t sub_190B4E814()
{
  unint64_t result = qword_1E92A3E20;
  if (!qword_1E92A3E20)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E92A3E20);
  }
  return result;
}

unint64_t sub_190B4E854()
{
  unint64_t result = qword_1E92A5E00;
  if (!qword_1E92A5E00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92A3D30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92A5E00);
  }
  return result;
}

uint64_t sub_190B4E8B0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_190B4E8FC(uint64_t a1, void *a2)
{
  uint64_t v5 = a1 + OBJC_IVAR___CNManagedDuplicate_signature;
  swift_beginAccess();
  if (*(void *)(v5 + 8))
  {
    swift_bridgeObjectRetain();
    unint64_t v6 = (void *)sub_190B77158();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v6 = 0;
  }
  objc_msgSend(v2, sel_setSignature_, v6);

  uint64_t v7 = a1 + OBJC_IVAR___CNManagedDuplicate_primaryID;
  swift_beginAccess();
  if (*(void *)(v7 + 8))
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = (void *)sub_190B77158();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = 0;
  }
  objc_msgSend(v2, sel_setPrimaryID_, v8);

  uint64_t v9 = (unsigned __int8 *)(a1 + OBJC_IVAR___CNManagedDuplicate_isIgnored);
  swift_beginAccess();
  objc_msgSend(v2, sel_setIsIgnored_, *v9);
  uint64_t v10 = (unsigned __int8 *)(a1 + OBJC_IVAR___CNManagedDuplicate_isAvailable);
  swift_beginAccess();
  objc_msgSend(v2, sel_setIsAvailable_, *v10);
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CAD0]), sel_init);
  objc_msgSend(v2, sel_setCohorts_, v11);

  swift_beginAccess();
  id v12 = a2;
  unint64_t v13 = swift_bridgeObjectRetain();
  unint64_t v14 = sub_190B4EF2C(v13, v12);
  swift_bridgeObjectRelease();

  sub_190B4EBB0(v14);
  swift_bridgeObjectRelease();
  id v15 = objc_allocWithZone(MEMORY[0x1E4F1CAD0]);
  uint64_t v16 = (void *)sub_190B772B8();
  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(v15, sel_initWithArray_, v16);

  objc_msgSend(v2, sel_addCohorts_, v17);
  objc_msgSend(v2, sel_setSelectedContactImage_, 0);
  return objc_msgSend(v2, sel_setSelectedContactPoster_, 0);
}

uint64_t sub_190B4EBB0(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_190B778A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2) {
    return v3;
  }
  uint64_t v13 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_190B21870(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        MEMORY[0x192FD1FB0](i, a1);
        type metadata accessor for CNDuplicateCohort();
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_190B21870(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v7 = *(void *)(v3 + 16);
        unint64_t v6 = *(void *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_190B21870(v6 > 1, v7 + 1, 1);
          uint64_t v3 = v13;
        }
        *(void *)(v3 + 16) = v7 + 1;
        sub_190B23134(v12, (_OWORD *)(v3 + 32 * v7 + 32));
      }
    }
    else
    {
      uint64_t v8 = (id *)(a1 + 32);
      type metadata accessor for CNDuplicateCohort();
      do
      {
        id v9 = *v8;
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_190B21870(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v11 = *(void *)(v3 + 16);
        unint64_t v10 = *(void *)(v3 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_190B21870(v10 > 1, v11 + 1, 1);
          uint64_t v3 = v13;
        }
        *(void *)(v3 + 16) = v11 + 1;
        sub_190B23134(v12, (_OWORD *)(v3 + 32 * v11 + 32));
        ++v8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

id CNDuplicateSet.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id CNDuplicateSet.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for CNDuplicateSet();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id CNDuplicateSet.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CNDuplicateSet();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_190B4EF2C(unint64_t a1, void *a2)
{
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x1E4FBC860];
    if (!v4) {
      break;
    }
    uint64_t v8 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_190B77838();
    if (v4 < 0)
    {
      __break(1u);
      return result;
    }
    type metadata accessor for CNDuplicateCohort();
    uint64_t v6 = 0;
    while (v4 != v6)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        objc_super v7 = (char *)MEMORY[0x192FD1FB0](v6, a1);
      }
      else {
        objc_super v7 = (char *)*(id *)(a1 + 8 * v6 + 32);
      }
      ++v6;
      CNDuplicateCohort.__allocating_init(managedCohort:context:)(v7, a2);
      sub_190B77808();
      sub_190B77848();
      sub_190B77858();
      sub_190B77818();
      if (v4 == v6) {
        return v8;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_190B778A8();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for CNDuplicateSet()
{
  return self;
}

uint64_t method lookup function for CNDuplicateSet(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CNDuplicateSet);
}

uint64_t dispatch thunk of CNDuplicateSet.updateWithManagedDuplicate(_:context:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x50))();
}

id CNDuplicateCohort.__allocating_init(managedCohort:context:)(char *a1, void *a2)
{
  uint64_t v3 = v2;
  id v6 = objc_msgSend(objc_allocWithZone(v3), sel_initWithContext_, a2);
  objc_super v7 = &a1[OBJC_IVAR___CNManagedCohort_identifier];
  swift_beginAccess();
  if (*((void *)v7 + 1))
  {
    id v8 = v6;
    swift_bridgeObjectRetain();
    id v9 = (void *)sub_190B77158();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v10 = v6;
    id v9 = 0;
  }
  objc_msgSend(v6, sel_setIdentifier_, v9);

  unint64_t v11 = NSStringFromRect(*(NSRect *)&a1[OBJC_IVAR___CNManagedCohort_cropRect]);
  sub_190B77168();

  id v12 = (void *)sub_190B77158();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setCropRectString_, v12);

  uint64_t v13 = (uint64_t *)&a1[OBJC_IVAR___CNManagedCohort_imageData];
  swift_beginAccess();
  unint64_t v14 = 0;
  unint64_t v15 = v13[1];
  if (v15 >> 60 != 15)
  {
    uint64_t v16 = *v13;
    sub_190B2E918(v16, v15);
    unint64_t v14 = (void *)sub_190B76DE8();
    sub_190B2EB14(v16, v15);
  }
  objc_msgSend(v6, sel_setImageData_, v14);

  id v17 = (uint64_t *)&a1[OBJC_IVAR___CNManagedCohort_posterData];
  swift_beginAccess();
  uint64_t v18 = 0;
  unint64_t v19 = v17[1];
  if (v19 >> 60 != 15)
  {
    uint64_t v20 = *v17;
    sub_190B2E918(v20, v19);
    uint64_t v18 = (void *)sub_190B76DE8();
    sub_190B2EB14(v20, v19);
  }
  objc_msgSend(v6, sel_setPosterData_, v18);

  return v6;
}

void sub_190B4F340()
{
  qword_1E92A3CE0 = 0x746163696C707544;
  unk_1E92A3CE8 = 0xEF74726F686F4365;
}

uint64_t static CNDuplicateCohort.entityName.getter()
{
  if (qword_1E92A3CF8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1E92A3CE0;
  swift_bridgeObjectRetain();
  return v0;
}

id sub_190B4F3D8()
{
  if (qword_1E92A3CF8 != -1) {
    swift_once();
  }
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  swift_bridgeObjectRetain();
  unint64_t v1 = (void *)sub_190B77158();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

void sub_190B4F488(id *a1@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  id v4 = [*a1 *a2];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = sub_190B77168();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  *a3 = v6;
  a3[1] = v8;
}

void sub_190B4F4EC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v6 = *a2;
  if (*(void *)(a1 + 8)) {
    uint64_t v7 = sub_190B77158();
  }
  else {
    uint64_t v7 = 0;
  }
  id v8 = (id)v7;
  [v6 *a5];
}

void sub_190B4F55C(id *a1@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  id v4 = [*a1 *a2];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = sub_190B76E08();
    unint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v8 = 0xF000000000000000;
  }
  *a3 = v6;
  a3[1] = v8;
}

void sub_190B4F5C0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v6 = *a2;
  if (*(void *)(a1 + 8) >> 60 == 15) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = sub_190B76DE8();
  }
  id v8 = (id)v7;
  [v6 *a5];
}

id CNDuplicateCohort.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id CNDuplicateCohort.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for CNDuplicateCohort();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id CNDuplicateCohort.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CNDuplicateCohort();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_190B4F788@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for CNDuplicateCohort();
  uint64_t result = sub_190B777A8();
  *a1 = result;
  return result;
}

uint64_t sub_190B4F7C8(char a1)
{
  return *(void *)&aIdentificropre[8 * a1];
}

uint64_t sub_190B4F7E8(char *a1, char *a2)
{
  return sub_190B617B8(*a1, *a2);
}

uint64_t sub_190B4F7F4()
{
  return sub_190B618C8();
}

uint64_t sub_190B4F7FC()
{
  return sub_190B619A0();
}

uint64_t sub_190B4F804()
{
  return sub_190B61AB0();
}

uint64_t sub_190B4F80C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_190B507C0();
  *a1 = result;
  return result;
}

uint64_t sub_190B4F83C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_190B4F7C8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_190B4F868()
{
  return sub_190B4F7C8(*v0);
}

uint64_t sub_190B4F870@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_190B507C0();
  *a1 = result;
  return result;
}

uint64_t sub_190B4F898()
{
  return 0;
}

void sub_190B4F8A4(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_190B4F8B0(uint64_t a1)
{
  unint64_t v2 = sub_190B50008();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_190B4F8EC(uint64_t a1)
{
  unint64_t v2 = sub_190B50008();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t DuplicateCohortProperties.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5E90);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190B50008();
  sub_190B77A78();
  if (!v2)
  {
    LOBYTE(v25) = 0;
    uint64_t v9 = sub_190B77918();
    uint64_t v11 = v10;
    uint64_t v24 = v6;
    LOBYTE(v25) = 1;
    uint64_t v12 = sub_190B77918();
    uint64_t v22 = v13;
    uint64_t v23 = v12;
    char v27 = 2;
    sub_190B5005C();
    sub_190B77938();
    uint64_t v21 = v25;
    uint64_t v20 = v26;
    char v27 = 3;
    sub_190B77938();
    uint64_t v14 = v25;
    uint64_t v15 = v26;
    (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
    uint64_t v16 = v22;
    a2[2] = v23;
    a2[3] = v16;
    uint64_t v17 = v20;
    a2[4] = v21;
    a2[5] = v17;
    a2[6] = v14;
    a2[7] = v15;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

void DuplicateCohortProperties.init(from:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_identifier);
  uint64_t v5 = sub_190B77168();
  uint64_t v7 = v6;

  objc_msgSend(a1, sel_cropRect);
  id v8 = NSStringFromRect(v22);
  uint64_t v9 = sub_190B77168();
  uint64_t v11 = v10;

  id v12 = objc_msgSend(a1, sel_imageData);
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v21 = sub_190B76E08();
    unint64_t v20 = v14;
  }
  else
  {
    uint64_t v21 = 0;
    unint64_t v20 = 0xC000000000000000;
  }
  id v15 = objc_msgSend(a1, sel_wallpaper);
  uint64_t v16 = v15;
  if (v15)
  {
    id v17 = objc_msgSend(v15, sel_posterArchiveData);

    uint64_t v16 = (void *)sub_190B76E08();
    unint64_t v19 = v18;
  }
  else
  {

    unint64_t v19 = 0xC000000000000000;
  }
  *a2 = v5;
  a2[1] = v7;
  a2[2] = v9;
  a2[3] = v11;
  a2[4] = v21;
  a2[5] = v20;
  a2[6] = (uint64_t)v16;
  a2[7] = v19;
}

unint64_t DuplicateCohortProperties.dictionaryValue.getter()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v5 = v0[4];
  unint64_t v6 = v0[5];
  uint64_t v7 = v0[6];
  unint64_t v8 = v0[7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3DA0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_190B90C40;
  *(void *)(inited + 32) = 0x696669746E656469;
  *(void *)(inited + 40) = 0xEA00000000007265;
  uint64_t v10 = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 4_Block_object_dispose(&STACK[0x228], 8) = v2;
  *(void *)(inited + 56) = v1;
  *(void *)(inited + 72) = v10;
  strcpy((char *)(inited + 80), "cropRectString");
  *(unsigned char *)(inited + 95) = -18;
  *(void *)(inited + 96) = v4;
  *(void *)(inited + 104) = v3;
  *(void *)(inited + 120) = v10;
  *(void *)(inited + 12_Block_object_dispose(&STACK[0x228], 8) = 0x7461446567616D69;
  uint64_t v11 = MEMORY[0x1E4F277C0];
  *(void *)(inited + 136) = 0xE900000000000061;
  *(void *)(inited + 144) = v5;
  *(void *)(inited + 152) = v6;
  *(void *)(inited + 16_Block_object_dispose(&STACK[0x228], 8) = v11;
  *(void *)(inited + 176) = 0x6144726574736F70;
  *(void *)(inited + 216) = v11;
  *(void *)(inited + 184) = 0xEA00000000006174;
  *(void *)(inited + 192) = v7;
  *(void *)(inited + 200) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_190B2E918(v5, v6);
  sub_190B2E918(v7, v8);
  return sub_190B611B0(inited);
}

uint64_t sub_190B4FF88@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return DuplicateCohortProperties.init(from:)(a1, a2);
}

uint64_t type metadata accessor for CNDuplicateCohort()
{
  return self;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_190B50008()
{
  unint64_t result = qword_1E92A5E98;
  if (!qword_1E92A5E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92A5E98);
  }
  return result;
}

unint64_t sub_190B5005C()
{
  unint64_t result = qword_1E92A5EA0;
  if (!qword_1E92A5EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92A5EA0);
  }
  return result;
}

uint64_t sub_190B500B0()
{
  return MEMORY[0x1E4FBB060];
}

char *keypath_get_selector_identifier()
{
  return sel_identifier;
}

void sub_190B500C8(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_190B500E8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_cropRectString()
{
  return sel_cropRectString;
}

void sub_190B50114(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_190B50134(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_imageData()
{
  return sel_imageData;
}

void sub_190B50160(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_190B50180(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_posterData()
{
  return sel_posterData;
}

void sub_190B501AC(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_190B501CC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_duplicates()
{
  return sel_duplicates;
}

id sub_190B501F8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_duplicates);
  *a2 = result;
  return result;
}

id sub_190B50234(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setDuplicates_, *a1);
}

uint64_t method lookup function for CNDuplicateCohort(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CNDuplicateCohort);
}

uint64_t dispatch thunk of static CNDuplicateCohort.fetchRequest()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t destroy for DuplicateCohortProperties(void *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_190B2EB28(a1[4], a1[5]);
  uint64_t v2 = a1[6];
  unint64_t v3 = a1[7];

  return sub_190B2EB28(v2, v3);
}

void *initializeWithCopy for DuplicateCohortProperties(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[4];
  unint64_t v7 = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_190B2E918(v6, v7);
  a1[4] = v6;
  a1[5] = v7;
  uint64_t v9 = a2[6];
  unint64_t v8 = a2[7];
  sub_190B2E918(v9, v8);
  a1[6] = v9;
  a1[7] = v8;
  return a1;
}

void *assignWithCopy for DuplicateCohortProperties(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[4];
  unint64_t v5 = a2[5];
  sub_190B2E918(v4, v5);
  uint64_t v6 = a1[4];
  unint64_t v7 = a1[5];
  a1[4] = v4;
  a1[5] = v5;
  sub_190B2EB28(v6, v7);
  uint64_t v9 = a2[6];
  unint64_t v8 = a2[7];
  sub_190B2E918(v9, v8);
  uint64_t v10 = a1[6];
  unint64_t v11 = a1[7];
  a1[6] = v9;
  a1[7] = v8;
  sub_190B2EB28(v10, v11);
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 4_Block_object_dispose(&STACK[0x228], 8) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void *assignWithTake for DuplicateCohortProperties(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a1[4];
  unint64_t v7 = a1[5];
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  sub_190B2EB28(v6, v7);
  uint64_t v8 = a1[6];
  unint64_t v9 = a1[7];
  *((_OWORD *)a1 + 3) = *(_OWORD *)(a2 + 48);
  sub_190B2EB28(v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for DuplicateCohortProperties(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DuplicateCohortProperties(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + _Block_object_dispose(&STACK[0x228], 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + _Block_object_dispose(&STACK[0x228], 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DuplicateCohortProperties()
{
  return &type metadata for DuplicateCohortProperties;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  char *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for DuplicateCohortProperties.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DuplicateCohortProperties.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    char *result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x190B50670);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          char *result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_190B50698(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_190B506A0(unsigned char *result, char a2)
{
  char *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for DuplicateCohortProperties.CodingKeys()
{
  return &type metadata for DuplicateCohortProperties.CodingKeys;
}

unint64_t sub_190B506BC()
{
  unint64_t result = qword_1E92A5EA8;
  if (!qword_1E92A5EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92A5EA8);
  }
  return result;
}

unint64_t sub_190B50714()
{
  unint64_t result = qword_1E92A5EB0;
  if (!qword_1E92A5EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92A5EB0);
  }
  return result;
}

unint64_t sub_190B5076C()
{
  unint64_t result = qword_1E92A5EB8;
  if (!qword_1E92A5EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92A5EB8);
  }
  return result;
}

uint64_t sub_190B507C0()
{
  unint64_t v0 = sub_190B77908();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

id ManagedCohort.__allocating_init(duplicateCohort:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = sub_190B525F8(a1);

  return v4;
}

id ManagedCohort.__allocating_init(contact:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = sub_190B52878(a1);

  return v4;
}

id ManagedCohort.__allocating_init(duplicateCohortProperties:)(uint64_t *a1)
{
  id v3 = objc_allocWithZone(v1);
  return ManagedCohort.init(duplicateCohortProperties:)(a1);
}

uint64_t CohortImage.imageData.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_190B2E918(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t CohortImage.cropRectString.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CohortPoster.posterData.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_190B2E918(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t sub_190B50958()
{
  uint64_t v0 = sub_190B76FC8();
  __swift_allocate_value_buffer(v0, qword_1E92A5EC0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1E92A5EC0);
  return sub_190B76FB8();
}

uint64_t sub_190B509DC(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  id v4 = (void *)(*a2 + OBJC_IVAR___CNManagedCohort_identifier);
  swift_beginAccess();
  void *v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_190B50A48()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR___CNManagedCohort_identifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_190B50AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR___CNManagedCohort_identifier);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_190B50B00())()
{
  return j__swift_endAccess;
}

uint64_t sub_190B50B5C()
{
  return sub_190B50CA8(&OBJC_IVAR___CNManagedCohort_imageData);
}

uint64_t sub_190B50B68(uint64_t a1, uint64_t a2)
{
  return sub_190B50D0C(a1, a2, &OBJC_IVAR___CNManagedCohort_imageData);
}

uint64_t (*sub_190B50B74())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_190B50BD0@<X0>(void *a1@<X0>, void *a2@<X3>, uint64_t *a3@<X8>)
{
  id v4 = (uint64_t *)(*a1 + *a2);
  swift_beginAccess();
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  *a3 = *v4;
  a3[1] = v6;
  return sub_190B2E904(v5, v6);
}

uint64_t sub_190B50C24(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  BOOL v7 = (uint64_t *)(*a2 + *a5);
  swift_beginAccess();
  uint64_t v8 = *v7;
  unint64_t v9 = v7[1];
  *BOOL v7 = v5;
  v7[1] = v6;
  sub_190B2E904(v5, v6);
  return sub_190B2EB14(v8, v9);
}

uint64_t sub_190B50C9C()
{
  return sub_190B50CA8(&OBJC_IVAR___CNManagedCohort_posterData);
}

uint64_t sub_190B50CA8(void *a1)
{
  uint64_t v2 = v1 + *a1;
  swift_beginAccess();
  uint64_t v3 = *(void *)v2;
  sub_190B2E904(*(void *)v2, *(void *)(v2 + 8));
  return v3;
}

uint64_t sub_190B50D00(uint64_t a1, uint64_t a2)
{
  return sub_190B50D0C(a1, a2, &OBJC_IVAR___CNManagedCohort_posterData);
}

uint64_t sub_190B50D0C(uint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v6 = (uint64_t *)(v3 + *a3);
  swift_beginAccess();
  uint64_t v7 = *v6;
  unint64_t v8 = v6[1];
  *unint64_t v6 = a1;
  v6[1] = a2;
  return sub_190B2EB14(v7, v8);
}

uint64_t (*sub_190B50D68())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_190B50DC4()
{
  uint64_t v1 = OBJC_IVAR___CNManagedCohort__privateContact;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR___CNManagedCohort__privateContact);
  if (v2)
  {
    id v3 = objc_msgSend(v2, sel_identifier);
    uint64_t v4 = sub_190B77168();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  uint64_t v7 = (uint64_t *)(v0 + OBJC_IVAR___CNManagedCohort_identifier);
  swift_beginAccess();
  *uint64_t v7 = v4;
  v7[1] = v6;
  swift_bridgeObjectRelease();
  unint64_t v8 = *(void **)(v0 + v1);
  if (v8 && (id v9 = objc_msgSend(v8, sel_imageData)) != 0)
  {
    uint64_t v10 = v9;
    uint64_t v11 = sub_190B76E08();
    unint64_t v13 = v12;
  }
  else
  {
    uint64_t v11 = 0;
    unint64_t v13 = 0xF000000000000000;
  }
  unint64_t v14 = (uint64_t *)(v0 + OBJC_IVAR___CNManagedCohort_imageData);
  swift_beginAccess();
  uint64_t v15 = *v14;
  unint64_t v16 = v14[1];
  *unint64_t v14 = v11;
  v14[1] = v13;
  sub_190B2EB14(v15, v16);
  id v17 = *(void **)(v0 + v1);
  if (v17)
  {
    objc_msgSend(v17, sel_cropRect);
  }
  else
  {
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
  }
  NSRect v22 = (void *)(v0 + OBJC_IVAR___CNManagedCohort_cropRect);
  void *v22 = v18;
  v22[1] = v19;
  v22[2] = v20;
  v22[3] = v21;
  uint64_t v23 = *(void **)(v0 + v1);
  if (!v23)
  {
    uint64_t v25 = 0;
    goto LABEL_15;
  }
  id v24 = objc_msgSend(v23, sel_wallpaper);
  uint64_t v25 = v24;
  if (!v24)
  {
LABEL_15:
    unint64_t v28 = 0xF000000000000000;
    goto LABEL_16;
  }
  id v26 = objc_msgSend(v24, sel_posterArchiveData);

  uint64_t v25 = (void *)sub_190B76E08();
  unint64_t v28 = v27;

LABEL_16:
  unint64_t v29 = (uint64_t *)(v0 + OBJC_IVAR___CNManagedCohort_posterData);
  swift_beginAccess();
  uint64_t v30 = *v29;
  unint64_t v31 = v29[1];
  *unint64_t v29 = (uint64_t)v25;
  v29[1] = v28;
  return sub_190B2EB14(v30, v31);
}

id sub_190B50FA0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = OBJC_IVAR___CNManagedCohort__privateContact;
  uint64_t v5 = *(void **)(*a1 + OBJC_IVAR___CNManagedCohort__privateContact);
  if (!v5)
  {
    sub_190B51494();
    uint64_t v5 = *(void **)(v3 + v4);
  }
  *a2 = v5;

  return v5;
}

void sub_190B50FF8(void **a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void **)(*a2 + OBJC_IVAR___CNManagedCohort__privateContact);
  *(void *)(*a2 + OBJC_IVAR___CNManagedCohort__privateContact) = *a1;
  id v4 = v2;

  sub_190B50DC4();
}

void *sub_190B5105C()
{
  uint64_t v1 = OBJC_IVAR___CNManagedCohort__privateContact;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR___CNManagedCohort__privateContact);
  if (!v2)
  {
    sub_190B51494();
    uint64_t v2 = *(void **)(v0 + v1);
  }
  id v3 = v2;
  return v2;
}

void sub_190B510A0(void *a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR___CNManagedCohort__privateContact);
  *(void *)(v1 + OBJC_IVAR___CNManagedCohort__privateContact) = a1;
  id v3 = a1;

  sub_190B50DC4();
}

void (*sub_190B510F8(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = OBJC_IVAR___CNManagedCohort__privateContact;
  a1[1] = v1;
  a1[2] = v3;
  id v4 = *(void **)(v1 + v3);
  if (!v4)
  {
    sub_190B51494();
    id v4 = *(void **)(v1 + v3);
  }
  *a1 = v4;
  id v5 = v4;
  return sub_190B51164;
}

void sub_190B51164(uint64_t a1, char a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  id v5 = *(void **)a1;
  uint64_t v6 = *(void **)(v4 + v3);
  *(void *)(v4 + v3) = *(void *)a1;
  id v7 = v5;
  id v9 = v7;
  if (a2)
  {
    id v8 = v7;

    sub_190B50DC4();
  }
  else
  {

    sub_190B50DC4();
  }
}

uint64_t sub_190B511E4()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR___CNManagedCohort__privateContainerName);
  if (!*(void *)(v0 + OBJC_IVAR___CNManagedCohort__privateContainerName + 8)) {
    sub_190B51C50();
  }
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

id ManagedCohort.init(contact:)(void *a1)
{
  id v2 = sub_190B52878(a1);

  return v2;
}

id ManagedCohort.init(duplicateCohortProperties:)(uint64_t *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v22 = *a1;
  uint64_t v3 = a1[4];
  uint64_t v4 = &v1[OBJC_IVAR___CNManagedCohort_identifier];
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  id v5 = (uint64_t *)&v1[OBJC_IVAR___CNManagedCohort_imageData];
  *(_OWORD *)&v1[OBJC_IVAR___CNManagedCohort_imageData] = xmmword_190B90EA0;
  uint64_t v6 = (uint64_t *)&v1[OBJC_IVAR___CNManagedCohort_posterData];
  *(_OWORD *)&v1[OBJC_IVAR___CNManagedCohort_posterData] = xmmword_190B90EA0;
  *(void *)&v1[OBJC_IVAR___CNManagedCohort_internalStore] = 0;
  unint64_t v8 = a1[5];
  uint64_t v7 = a1[6];
  id v9 = &v1[OBJC_IVAR___CNManagedCohort_cropRect];
  *(_OWORD *)id v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *(void *)&v1[OBJC_IVAR___CNManagedCohort__privateContact] = 0;
  unint64_t v23 = a1[7];
  uint64_t v10 = &v1[OBJC_IVAR___CNManagedCohort__privateContainerName];
  *(void *)uint64_t v10 = 0;
  *((void *)v10 + 1) = 0;
  swift_beginAccess();
  *(void *)uint64_t v4 = v22;
  *((void *)v4 + 1) = v2;
  uint64_t v11 = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v12 = (NSString *)sub_190B77158();
  NSRect v25 = NSRectFromString(v12);
  CGFloat x = v25.origin.x;
  CGFloat y = v25.origin.y;
  CGFloat width = v25.size.width;
  CGFloat height = v25.size.height;

  *(CGFloat *)id v9 = x;
  *((CGFloat *)v9 + 1) = y;
  *((CGFloat *)v9 + 2) = width;
  *((CGFloat *)v9 + 3) = height;
  swift_beginAccess();
  uint64_t v17 = *v5;
  unint64_t v18 = v5[1];
  *id v5 = v3;
  v5[1] = v8;
  sub_190B2E918(v3, v8);
  sub_190B2EB14(v17, v18);
  sub_190B2E918(v7, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_190B2EB28(v3, v8);
  sub_190B2EB28(v7, v23);
  swift_beginAccess();
  uint64_t v19 = *v6;
  unint64_t v20 = v6[1];
  *uint64_t v6 = v7;
  v6[1] = v23;
  sub_190B2EB14(v19, v20);

  v24.receiver = v11;
  v24.super_class = (Class)type metadata accessor for ManagedCohort();
  return objc_msgSendSuper2(&v24, sel_init);
}

id ManagedCohort.init(duplicateCohort:)(void *a1)
{
  id v2 = sub_190B525F8(a1);

  return v2;
}

void sub_190B51494()
{
  uint64_t v1 = v0;
  v46[7] = *(id *)MEMORY[0x1E4F143B8];
  id v2 = (uint64_t *)(v0 + OBJC_IVAR___CNManagedCohort_identifier);
  swift_beginAccess();
  unint64_t v3 = v2[1];
  if (!v3)
  {
    id v26 = *(void **)(v0 + OBJC_IVAR___CNManagedCohort__privateContact);
    *(void *)(v0 + OBJC_IVAR___CNManagedCohort__privateContact) = 0;

    sub_190B50DC4();
    return;
  }
  uint64_t v4 = *v2;
  uint64_t v5 = qword_1E92A3C60;
  swift_bridgeObjectRetain();
  if (v5 != -1) {
    swift_once();
  }
  id v6 = objc_allocWithZone((Class)CNContactFetchRequest);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3D60);
  uint64_t v7 = (void *)sub_190B772B8();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v6, sel_initWithKeysToFetch_, v7);

  objc_msgSend(v8, sel_setUnifyResults_, 0);
  objc_msgSend(v8, sel_setMutableObjects_, 1);
  id v9 = self;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92A3C30);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_190B908E0;
  *(void *)(v10 + 32) = v4;
  *(void *)(v10 + 40) = v3;
  swift_bridgeObjectRetain();
  uint64_t v11 = (void *)sub_190B772B8();
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(v9, sel_predicateForContactsWithIdentifiers_, v11);

  objc_msgSend(v8, sel_setPredicate_, v12);
  uint64_t v13 = OBJC_IVAR___CNManagedCohort_internalStore;
  unint64_t v14 = *(void **)(v1 + OBJC_IVAR___CNManagedCohort_internalStore);
  if (v14
    || (id v15 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), sel_init),
        unint64_t v16 = *(void **)(v1 + v13),
        *(void *)(v1 + v13) = v15,
        v16,
        (unint64_t v14 = *(void **)(v1 + v13)) != 0))
  {
    id v17 = v14;
  }
  else
  {
    id v17 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), sel_init);
    unint64_t v14 = 0;
  }
  v46[0] = 0;
  id v18 = v14;
  id v19 = objc_msgSend(v17, sel_executeFetchRequest_error_, v8, v46);

  if (!v19)
  {
    id v27 = v46[0];
    uint64_t v21 = (void *)sub_190B76D68();

    swift_willThrow();
    if (qword_1E92A5850 == -1)
    {
LABEL_19:
      uint64_t v28 = sub_190B76FC8();
      __swift_project_value_buffer(v28, (uint64_t)qword_1E92A5EC0);
      id v29 = v21;
      swift_bridgeObjectRetain();
      id v30 = v21;
      unint64_t v31 = sub_190B76FA8();
      os_log_type_t v32 = sub_190B77578();
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = swift_slowAlloc();
        id v34 = (void *)swift_slowAlloc();
        v46[0] = v34;
        *(_DWORD *)uint64_t v33 = 136315394;
        swift_bridgeObjectRetain();
        sub_190B21150(v4, v3, (uint64_t *)v46);
        sub_190B77648();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v33 + 12) = 2080;
        swift_getErrorValue();
        uint64_t v35 = sub_190B77A08();
        sub_190B21150(v35, v36, (uint64_t *)v46);
        sub_190B77648();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1909E3000, v31, v32, "Could not fetch contact for cohort %s: %s", (uint8_t *)v33, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x192FD42A0](v34, -1, -1);
        MEMORY[0x192FD42A0](v33, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
      unint64_t v44 = *(void **)(v1 + OBJC_IVAR___CNManagedCohort__privateContact);
      *(void *)(v1 + OBJC_IVAR___CNManagedCohort__privateContact) = 0;

      sub_190B50DC4();
      return;
    }
LABEL_33:
    swift_once();
    goto LABEL_19;
  }
  id v20 = v46[0];
  v46[0] = objc_msgSend(v19, sel_value);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92A3E10);
  swift_dynamicCast();
  if (v45 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = (void *)sub_190B778A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v21 = *(void **)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v21)
  {
    if ((v45 & 0xC000000000000001) != 0)
    {
      id v22 = (id)MEMORY[0x192FD1FB0](0);
LABEL_14:
      unint64_t v23 = v22;
      swift_bridgeObjectRelease();
      objc_msgSend(v23, sel_mutableCopy);

      sub_190B77698();
      swift_unknownObjectRelease();
      sub_190B23474(0, (unint64_t *)&qword_1E92A3E20);
      int v24 = swift_dynamicCast();
      NSRect v25 = (void *)v45;
      if (!v24) {
        NSRect v25 = 0;
      }
      goto LABEL_22;
    }
    if (*(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v22 = *(id *)(v45 + 32);
      goto LABEL_14;
    }
    __break(1u);
    goto LABEL_33;
  }
  swift_bridgeObjectRelease();
  NSRect v25 = 0;
LABEL_22:
  int64_t v37 = *(void **)(v1 + OBJC_IVAR___CNManagedCohort__privateContact);
  *(void *)(v1 + OBJC_IVAR___CNManagedCohort__privateContact) = v25;
  id v38 = v25;

  sub_190B50DC4();
  if (qword_1E92A5850 != -1) {
    swift_once();
  }
  uint64_t v39 = sub_190B76FC8();
  __swift_project_value_buffer(v39, (uint64_t)qword_1E92A5EC0);
  swift_bridgeObjectRetain();
  uint64_t v40 = sub_190B76FA8();
  os_log_type_t v41 = sub_190B77568();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = (uint8_t *)swift_slowAlloc();
    int64_t v43 = (void *)swift_slowAlloc();
    v46[0] = v43;
    *(_DWORD *)uint64_t v42 = 136315138;
    swift_bridgeObjectRetain();
    sub_190B21150(v4, v3, (uint64_t *)v46);
    sub_190B77648();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1909E3000, v40, v41, "Fetched contact for cohort %s", v42, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FD42A0](v43, -1, -1);
    MEMORY[0x192FD42A0](v42, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_190B51C50()
{
  v41[4] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR___CNManagedCohort_identifier);
  swift_beginAccess();
  unint64_t v2 = v1[1];
  if (v2)
  {
    uint64_t v3 = *v1;
    uint64_t v4 = self;
    swift_bridgeObjectRetain();
    uint64_t v5 = (void *)sub_190B77158();
    id v6 = objc_msgSend(v4, sel_predicateForContainerOfContactWithIdentifier_, v5);

    uint64_t v7 = OBJC_IVAR___CNManagedCohort_internalStore;
    id v8 = *(void **)(v0 + OBJC_IVAR___CNManagedCohort_internalStore);
    if (v8
      || (id v9 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), sel_init),
          uint64_t v10 = *(void **)(v0 + v7),
          *(void *)(v0 + v7) = v9,
          v10,
          (id v8 = *(void **)(v0 + v7)) != 0))
    {
      id v11 = v8;
    }
    else
    {
      id v11 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), sel_init);
      id v8 = 0;
    }
    v41[0] = 0;
    id v12 = v8;
    id v13 = objc_msgSend(v11, sel_containersMatchingPredicate_error_, v6, v41);

    id v14 = v41[0];
    if (!v13)
    {
      id v25 = v41[0];
      id v17 = (char *)sub_190B76D68();

      swift_willThrow();
      *(_OWORD *)(v0 + OBJC_IVAR___CNManagedCohort__privateContainerName) = xmmword_190B90EB0;
      swift_bridgeObjectRelease();
      if (qword_1E92A5850 == -1)
      {
LABEL_15:
        uint64_t v26 = sub_190B76FC8();
        __swift_project_value_buffer(v26, (uint64_t)qword_1E92A5EC0);
        id v27 = v17;
        swift_bridgeObjectRetain();
        uint64_t v28 = v17;
        id v29 = sub_190B76FA8();
        os_log_type_t v30 = sub_190B77578();
        if (!os_log_type_enabled(v29, v30))
        {

          swift_bridgeObjectRelease_n();
          return;
        }
        uint64_t v31 = swift_slowAlloc();
        os_log_type_t v32 = (void *)swift_slowAlloc();
        v41[0] = v32;
        *(_DWORD *)uint64_t v31 = 136315394;
        swift_bridgeObjectRetain();
        sub_190B21150(v3, v2, (uint64_t *)v41);
        sub_190B77648();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v31 + 12) = 2080;
        swift_getErrorValue();
        uint64_t v33 = sub_190B77A08();
        sub_190B21150(v33, v34, (uint64_t *)v41);
        sub_190B77648();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1909E3000, v29, v30, "Failed to fetch container for cohort %s. %s", (uint8_t *)v31, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x192FD42A0](v32, -1, -1);
        MEMORY[0x192FD42A0](v31, -1, -1);

LABEL_26:
        return;
      }
LABEL_32:
      swift_once();
      goto LABEL_15;
    }
    sub_190B23474(0, &qword_1E92A3D48);
    unint64_t v15 = sub_190B772C8();
    id v16 = v14;

    if (v15 >> 62)
    {
      swift_bridgeObjectRetain();
      id v17 = (char *)sub_190B778A8();
      swift_bridgeObjectRelease();
      if (v17)
      {
LABEL_8:
        id v18 = v17 - 1;
        if (__OFSUB__(v17, 1))
        {
          __break(1u);
        }
        else if ((v15 & 0xC000000000000001) == 0)
        {
          if (((unint64_t)v18 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if ((unint64_t)v18 < *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v19 = *(id *)(v15 + 8 * (void)v18 + 32);
LABEL_13:
            id v20 = v19;
            swift_bridgeObjectRelease();
            id v21 = objc_msgSend(v20, sel_name);

            uint64_t v22 = sub_190B77168();
            unint64_t v24 = v23;

LABEL_21:
            uint64_t v35 = (uint64_t *)(v0 + OBJC_IVAR___CNManagedCohort__privateContainerName);
            *uint64_t v35 = v22;
            v35[1] = v24;
            swift_bridgeObjectRelease();
            if (qword_1E92A5850 != -1) {
              swift_once();
            }
            uint64_t v36 = sub_190B76FC8();
            __swift_project_value_buffer(v36, (uint64_t)qword_1E92A5EC0);
            swift_bridgeObjectRetain();
            int64_t v37 = sub_190B76FA8();
            os_log_type_t v38 = sub_190B77568();
            if (os_log_type_enabled(v37, v38))
            {
              uint64_t v39 = (uint8_t *)swift_slowAlloc();
              uint64_t v40 = (void *)swift_slowAlloc();
              v41[0] = v40;
              *(_DWORD *)uint64_t v39 = 136315138;
              swift_bridgeObjectRetain();
              sub_190B21150(v3, v2, (uint64_t *)v41);
              sub_190B77648();
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_1909E3000, v37, v38, "Fetched container for cohort %s", v39, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x192FD42A0](v40, -1, -1);
              MEMORY[0x192FD42A0](v39, -1, -1);

              return;
            }

            swift_bridgeObjectRelease_n();
            goto LABEL_26;
          }
          __break(1u);
          goto LABEL_32;
        }
        id v19 = (id)MEMORY[0x192FD1FB0](v18, v15);
        goto LABEL_13;
      }
    }
    else
    {
      id v17 = *(char **)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v17) {
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v24 = 0xE700000000000000;
    uint64_t v22 = 0x6E776F6E6B6E55;
    goto LABEL_21;
  }
}

void sub_190B5229C(uint64_t *a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR___CNManagedCohort_imageData;
  swift_beginAccess();
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  unint64_t v8 = *(void *)(v3 + 8);
  if (v8 >> 60 != 15)
  {
    uint64_t v4 = *(void *)v3;
    CGFloat v9 = *(double *)(v1 + OBJC_IVAR___CNManagedCohort_cropRect);
    CGFloat v10 = *(double *)(v1 + OBJC_IVAR___CNManagedCohort_cropRect + 8);
    CGFloat v11 = *(double *)(v1 + OBJC_IVAR___CNManagedCohort_cropRect + 16);
    CGFloat v12 = *(double *)(v1 + OBJC_IVAR___CNManagedCohort_cropRect + 24);
    sub_190B2E918(*(void *)v3, *(void *)(v3 + 8));
    v15.origin.CGFloat x = v9;
    v15.origin.CGFloat y = v10;
    v15.size.CGFloat width = v11;
    v15.size.CGFloat height = v12;
    id v13 = NSStringFromRect(v15);
    uint64_t v6 = sub_190B77168();
    uint64_t v7 = v14;

    uint64_t v5 = v8;
  }
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
}

uint64_t sub_190B5238C()
{
  uint64_t v1 = NSStringFromRect(*(NSRect *)(v0 + OBJC_IVAR___CNManagedCohort_cropRect));
  uint64_t v2 = sub_190B77168();

  return v2;
}

uint64_t sub_190B523EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR___CNManagedCohort_posterData);
  swift_beginAccess();
  uint64_t v4 = *v3;
  unint64_t v5 = v3[1];
  if (v5 >> 60 == 15) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = *v3;
  }
  unint64_t v7 = 0xF000000000000000;
  if (v5 >> 60 != 15) {
    unint64_t v7 = v3[1];
  }
  *a1 = v6;
  a1[1] = v7;
  return sub_190B2E904(v4, v5);
}

id ManagedCohort.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void ManagedCohort.init()()
{
}

id ManagedCohort.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedCohort();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_190B525B8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedCohort();
  uint64_t result = sub_190B777A8();
  *a1 = result;
  return result;
}

id sub_190B525F8(void *a1)
{
  uint64_t v3 = (uint64_t *)&v1[OBJC_IVAR___CNManagedCohort_identifier];
  *uint64_t v3 = 0;
  v3[1] = 0;
  uint64_t v4 = (uint64_t *)&v1[OBJC_IVAR___CNManagedCohort_imageData];
  *(_OWORD *)&v1[OBJC_IVAR___CNManagedCohort_imageData] = xmmword_190B90EA0;
  unint64_t v5 = (uint64_t *)&v1[OBJC_IVAR___CNManagedCohort_posterData];
  *(_OWORD *)&v1[OBJC_IVAR___CNManagedCohort_posterData] = xmmword_190B90EA0;
  *(void *)&v1[OBJC_IVAR___CNManagedCohort_internalStore] = 0;
  uint64_t v6 = &v1[OBJC_IVAR___CNManagedCohort_cropRect];
  *(_OWORD *)uint64_t v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  *(void *)&v1[OBJC_IVAR___CNManagedCohort__privateContact] = 0;
  unint64_t v7 = &v1[OBJC_IVAR___CNManagedCohort__privateContainerName];
  *(void *)unint64_t v7 = 0;
  *((void *)v7 + 1) = 0;
  unint64_t v8 = v1;
  id v9 = objc_msgSend(a1, sel_identifier);
  if (v9)
  {
    CGFloat v10 = v9;
    uint64_t v11 = sub_190B77168();
    uint64_t v13 = v12;
  }
  else
  {
    uint64_t v11 = 0;
    uint64_t v13 = 0;
  }
  swift_beginAccess();
  *uint64_t v3 = v11;
  v3[1] = v13;
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(a1, sel_cropRectString);
  if (v14)
  {
    NSRect v15 = v14;
    sub_190B77168();

    id v16 = (NSString *)sub_190B77158();
    NSRect v37 = NSRectFromString(v16);
    CGFloat x = v37.origin.x;
    CGFloat y = v37.origin.y;
    CGFloat width = v37.size.width;
    CGFloat height = v37.size.height;
    swift_bridgeObjectRelease();
  }
  else
  {
    CGFloat width = 0.0;
    CGFloat height = 0.0;
    CGFloat x = 0.0;
    CGFloat y = 0.0;
  }
  *(CGFloat *)uint64_t v6 = x;
  *((CGFloat *)v6 + 1) = y;
  *((CGFloat *)v6 + 2) = width;
  *((CGFloat *)v6 + 3) = height;
  id v21 = objc_msgSend(a1, sel_imageData);
  if (v21)
  {
    uint64_t v22 = v21;
    uint64_t v23 = sub_190B76E08();
    unint64_t v25 = v24;
  }
  else
  {
    uint64_t v23 = 0;
    unint64_t v25 = 0xF000000000000000;
  }
  swift_beginAccess();
  uint64_t v26 = *v4;
  unint64_t v27 = v4[1];
  uint64_t *v4 = v23;
  v4[1] = v25;
  sub_190B2EB14(v26, v27);
  id v28 = objc_msgSend(a1, sel_posterData);
  if (v28)
  {
    id v29 = v28;
    uint64_t v30 = sub_190B76E08();
    unint64_t v32 = v31;
  }
  else
  {
    uint64_t v30 = 0;
    unint64_t v32 = 0xF000000000000000;
  }
  swift_beginAccess();
  uint64_t v33 = *v5;
  unint64_t v34 = v5[1];
  *unint64_t v5 = v30;
  v5[1] = v32;
  sub_190B2EB14(v33, v34);

  v36.receiver = v8;
  v36.super_class = (Class)type metadata accessor for ManagedCohort();
  return objc_msgSendSuper2(&v36, sel_init);
}

id sub_190B52878(void *a1)
{
  uint64_t v3 = (uint64_t *)&v1[OBJC_IVAR___CNManagedCohort_identifier];
  *uint64_t v3 = 0;
  v3[1] = 0;
  uint64_t v4 = (uint64_t *)&v1[OBJC_IVAR___CNManagedCohort_imageData];
  *(_OWORD *)&v1[OBJC_IVAR___CNManagedCohort_imageData] = xmmword_190B90EA0;
  unint64_t v5 = (uint64_t *)&v1[OBJC_IVAR___CNManagedCohort_posterData];
  *(_OWORD *)&v1[OBJC_IVAR___CNManagedCohort_posterData] = xmmword_190B90EA0;
  *(void *)&v1[OBJC_IVAR___CNManagedCohort_internalStore] = 0;
  uint64_t v6 = &v1[OBJC_IVAR___CNManagedCohort_cropRect];
  *(_OWORD *)uint64_t v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  uint64_t v7 = OBJC_IVAR___CNManagedCohort__privateContact;
  *(void *)&v1[OBJC_IVAR___CNManagedCohort__privateContact] = 0;
  unint64_t v8 = &v1[OBJC_IVAR___CNManagedCohort__privateContainerName];
  *(void *)unint64_t v8 = 0;
  *((void *)v8 + 1) = 0;
  id v9 = *(void **)&v1[v7];
  *(void *)&v1[v7] = a1;
  CGFloat v10 = v1;
  id v11 = a1;

  id v12 = objc_msgSend(v11, sel_identifier);
  uint64_t v13 = sub_190B77168();
  uint64_t v15 = v14;

  swift_beginAccess();
  *uint64_t v3 = v13;
  v3[1] = v15;
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_cropRect);
  *(void *)uint64_t v6 = v16;
  *((void *)v6 + 1) = v17;
  *((void *)v6 + 2) = v18;
  *((void *)v6 + 3) = v19;
  id v20 = objc_msgSend(v11, sel_imageData);
  if (v20)
  {
    id v21 = v20;
    uint64_t v22 = sub_190B76E08();
    unint64_t v24 = v23;
  }
  else
  {
    uint64_t v22 = 0;
    unint64_t v24 = 0xF000000000000000;
  }
  swift_beginAccess();
  uint64_t v25 = *v4;
  unint64_t v26 = v4[1];
  uint64_t *v4 = v22;
  v4[1] = v24;
  sub_190B2EB14(v25, v26);
  id v27 = objc_msgSend(v11, sel_wallpaper);
  id v28 = v27;
  if (v27)
  {
    id v29 = objc_msgSend(v27, sel_posterArchiveData);

    id v28 = (void *)sub_190B76E08();
    unint64_t v31 = v30;
  }
  else
  {
    unint64_t v31 = 0xF000000000000000;
  }
  swift_beginAccess();
  uint64_t v32 = *v5;
  unint64_t v33 = v5[1];
  *unint64_t v5 = (uint64_t)v28;
  v5[1] = v31;
  sub_190B2EB14(v32, v33);

  v35.receiver = v10;
  v35.super_class = (Class)type metadata accessor for ManagedCohort();
  return objc_msgSendSuper2(&v35, sel_init);
}

uint64_t type metadata accessor for ManagedCohort()
{
  return self;
}

uint64_t sub_190B52ACC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR___CNManagedCohort_identifier);
  swift_beginAccess();
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_190B52B28@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_190B50BD0(a1, &OBJC_IVAR___CNManagedCohort_imageData, a2);
}

uint64_t sub_190B52B48(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_190B50C24(a1, a2, a3, a4, &OBJC_IVAR___CNManagedCohort_imageData);
}

uint64_t sub_190B52B68@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_190B50BD0(a1, &OBJC_IVAR___CNManagedCohort_posterData, a2);
}

uint64_t sub_190B52B88(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_190B50C24(a1, a2, a3, a4, &OBJC_IVAR___CNManagedCohort_posterData);
}

uint64_t destroy for CohortImage(uint64_t a1)
{
  sub_190B2EB28(*(void *)a1, *(void *)(a1 + 8));

  return swift_bridgeObjectRelease();
}

uint64_t *initializeWithCopy for CohortImage(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_190B2E918(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for CohortImage(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_190B2E918(*a2, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_190B2EB28(v6, v7);
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t *assignWithTake for CohortImage(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_190B2EB28(v4, v5);
  uint64_t v6 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CohortImage(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CohortImage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + _Block_object_dispose(&STACK[0x228], 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CohortImage()
{
  return &type metadata for CohortImage;
}

uint64_t *initializeBufferWithCopyOfBuffer for CohortPoster(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_190B2E918(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t destroy for CohortPoster(uint64_t a1)
{
  return sub_190B2EB28(*(void *)a1, *(void *)(a1 + 8));
}

uint64_t *assignWithCopy for CohortPoster(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_190B2E918(*a2, v4);
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_190B2EB28(v5, v6);
  return a1;
}

uint64_t *assignWithTake for CohortPoster(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_190B2EB28(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for CohortPoster(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for CohortPoster(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)uint64_t result = a2 - 13;
    *(void *)(result + _Block_object_dispose(&STACK[0x228], 8) = 0;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + _Block_object_dispose(&STACK[0x228], 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CohortPoster()
{
  return &type metadata for CohortPoster;
}

uint64_t method lookup function for ManagedCohort(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ManagedCohort);
}

uint64_t dispatch thunk of ManagedCohort.identifier.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ManagedCohort.identifier.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ManagedCohort.identifier.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ManagedCohort.imageData.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ManagedCohort.imageData.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of ManagedCohort.imageData.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of ManagedCohort.posterData.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of ManagedCohort.posterData.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of ManagedCohort.posterData.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of ManagedCohort.contact.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of ManagedCohort.contact.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of ManagedCohort.contact.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of ManagedCohort.containerName.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of ManagedCohort.__allocating_init(contact:)()
{
  return (*(uint64_t (**)(void))(v0 + 344))();
}

uint64_t dispatch thunk of ManagedCohort.__allocating_init(duplicateCohortProperties:)()
{
  return (*(uint64_t (**)(void))(v0 + 352))();
}

uint64_t dispatch thunk of ManagedCohort.__allocating_init(duplicateCohort:)()
{
  return (*(uint64_t (**)(void))(v0 + 360))();
}

uint64_t dispatch thunk of ManagedCohort.cohortImage.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x180))();
}

uint64_t dispatch thunk of ManagedCohort.cropRectString.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x188))();
}

uint64_t dispatch thunk of ManagedCohort.cohortPoster.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x190))();
}

uint64_t sub_190B532E0()
{
  uint64_t v0 = sub_190B76FC8();
  __swift_allocate_value_buffer(v0, qword_1E92A8420);
  __swift_project_value_buffer(v0, (uint64_t)qword_1E92A8420);
  return sub_190B76FB8();
}

id sub_190B5335C()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CNContactProviderSupportCache()), sel_init);
  qword_1E92A3BC0 = (uint64_t)result;
  return result;
}

id static CNContactProviderSupportCache.sharedCache.getter()
{
  if (qword_1E92A3BD0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1E92A3BC0;

  return v0;
}

void *sub_190B534EC()
{
  swift_beginAccess();
  uint64_t v0 = swift_bridgeObjectRetain();
  id v1 = sub_190B2C96C(v0);
  swift_bridgeObjectRelease();
  return v1;
}

unsigned char *sub_190B53550()
{
  uint64_t v1 = OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_appExtensionIdentityByBundleIdentifierCache;
  unint64_t v2 = v0;
  uint64_t v3 = MEMORY[0x1E4FBC860];
  *(void *)&v0[v1] = sub_190B6142C(MEMORY[0x1E4FBC860]);
  *(void *)&v2[OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_appExtensionIdentityCache] = v3;
  uint64_t v4 = OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_containerByBundleIdentifierCache;
  *(void *)&v2[v4] = sub_190B6162C(v3);
  *(void *)&v2[OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_queryTask] = 0;
  uint64_t v5 = OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_lock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3C10);
  uint64_t v6 = swift_allocObject();
  *(_DWORD *)(v6 + 16) = 0;
  *(void *)&v2[v5] = v6;
  *(void *)&v2[OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_internalExtensionBundleIDs] = &unk_1EE04CCA8;
  v2[OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_isInternalExtensionsEnabled] = 0;

  v15.receiver = v2;
  v15.super_class = (Class)type metadata accessor for CNContactProviderSupportCache();
  unint64_t v7 = objc_msgSendSuper2(&v15, sel_init);
  unint64_t v8 = (__CFString *)sub_190B77158();
  LODWORD(v3) = CFPreferencesGetAppBooleanValue(v8, (CFStringRef)*MEMORY[0x1E4F1D3B8], 0);

  v7[OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_isInternalExtensionsEnabled] = v3 != 0;
  if (*(void *)&v7[OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_queryTask])
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5B78);
    sub_190B77458();
    uint64_t v9 = swift_release();
  }
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  MEMORY[0x1F4188790](v10);
  id v12 = v11 + 4;
  os_unfair_lock_lock(v11 + 4);
  sub_190B59160(v13);
  os_unfair_lock_unlock(v12);
  sleep(1u);

  return v7;
}

uint64_t sub_190B5378C(uint64_t a1)
{
  if (*(void *)(v1 + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_queryTask))
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5B78);
    sub_190B77458();
    a1 = swift_release();
  }
  uint64_t v2 = MEMORY[0x1F4188790](a1);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = v3 + 4;
  os_unfair_lock_lock(v3 + 4);
  sub_190B567A4(v5);
  os_unfair_lock_unlock(v4);
  return sleep(1u);
}

uint64_t sub_190B53894(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4FBC860];
  unint64_t v3 = sub_190B6142C(MEMORY[0x1E4FBC860]);
  uint64_t v4 = (unint64_t *)(a1
                          + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_appExtensionIdentityByBundleIdentifierCache);
  swift_beginAccess();
  unint64_t *v4 = v3;
  swift_bridgeObjectRelease();
  uint64_t v5 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_appExtensionIdentityCache);
  swift_beginAccess();
  *uint64_t v5 = v2;
  swift_bridgeObjectRelease();
  unint64_t v6 = sub_190B6162C(v2);
  unint64_t v7 = (unint64_t *)(a1
                          + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_containerByBundleIdentifierCache);
  swift_beginAccess();
  *unint64_t v7 = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_queryTask) = sub_190B539DC();
  return swift_release();
}

uint64_t sub_190B539DC()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3E40);
  MEMORY[0x1F4188790](v1 - 8);
  unint64_t v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_190B77448();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  unint64_t v6 = (void *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  void v6[4] = v0;
  int v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  id v8 = v0;
  if (v7 == 1)
  {
    sub_190B23144((uint64_t)v3, &qword_1E92A3E40);
  }
  else
  {
    sub_190B77438();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
    if (v6[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = sub_190B773E8();
      uint64_t v11 = v10;
      swift_unknownObjectRelease();
      if (v11 | v9)
      {
        v13[0] = 0;
        v13[1] = 0;
        void v13[2] = v9;
        v13[3] = v11;
      }
    }
  }
  return swift_task_create();
}

uint64_t sub_190B53BFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[7] = a4;
  uint64_t v5 = sub_190B77418();
  v4[8] = v5;
  v4[9] = *(void *)(v5 - 8);
  v4[10] = swift_task_alloc();
  uint64_t v6 = sub_190B76F98();
  v4[11] = v6;
  v4[12] = *(void *)(v6 - 8);
  v4[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3BB8);
  v4[14] = swift_task_alloc();
  uint64_t v7 = sub_190B76EE8();
  v4[15] = v7;
  v4[16] = *(void *)(v7 - 8);
  v4[17] = swift_task_alloc();
  uint64_t v8 = sub_190B76EC8();
  v4[18] = v8;
  v4[19] = *(void *)(v8 - 8);
  v4[20] = swift_task_alloc();
  uint64_t v9 = sub_190B76F08();
  v4[21] = v9;
  v4[22] = *(void *)(v9 - 8);
  v4[23] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_190B53E5C, 0, 0);
}

uint64_t sub_190B53E5C()
{
  sub_190B77468();
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v3 = v0[15];
  sub_190B76EB8();
  sub_190B76EF8();
  sub_190B76ED8();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = sub_190B59100(&qword_1E92A3BB0, MEMORY[0x1E4F25828]);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[24] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_190B54264;
  uint64_t v6 = v0[18];
  return MEMORY[0x1F4187C78](v0 + 5, v6, v4);
}

uint64_t sub_190B54264()
{
  *(void *)(*(void *)v1 + 200) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_190B549F4;
  }
  else {
    uint64_t v2 = sub_190B54378;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_190B54378()
{
  *(void *)(v0 + 20_Block_object_dispose(&STACK[0x228], 8) = *(void *)(v0 + 40);
  return MEMORY[0x1F4188298](sub_190B5439C, 0, 0);
}

uint64_t sub_190B5439C()
{
  uint64_t v52 = v0;
  uint64_t v1 = *(void *)(v0 + 208);
  if (!v1)
  {
    uint64_t v21 = *(void *)(v0 + 176);
    uint64_t v20 = *(void *)(v0 + 184);
    uint64_t v22 = *(void *)(v0 + 168);
    (*(void (**)(void, void))(*(void *)(v0 + 152) + 8))(*(void *)(v0 + 160), *(void *)(v0 + 144));
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
LABEL_8:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
    return v23();
  }
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v0 + 96);
  if (!v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
LABEL_12:
    v8(*(void *)(v0 + 112), 1, 1, *(void *)(v0 + 88));
    goto LABEL_13;
  }
  unint64_t v49 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v50 = *(void *)(v3 + 72);
  uint64_t v4 = *(void (**)(uint64_t, unint64_t, uint64_t))(v3 + 16);
  uint64_t v5 = *(void **)(v0 + 200);
  uint64_t v6 = *(void *)(v0 + 112);
  uint64_t v7 = *(void *)(v0 + 88);
  swift_bridgeObjectRetain();
  v4(v6, v1 + v49, v7);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v8(v6, 0, 1, v7);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v6, 1, v7) != 1)
  {
    uint64_t v9 = (void (*)(uint64_t, uint64_t, uint64_t))v4;
    (*(void (**)(void, void, void))(*(void *)(v0 + 96) + 32))(*(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 88));
    sub_190B77468();
    if (v5)
    {
      uint64_t v11 = *(void *)(v0 + 176);
      uint64_t v10 = *(void *)(v0 + 184);
      uint64_t v13 = *(void *)(v0 + 160);
      uint64_t v12 = *(void *)(v0 + 168);
      uint64_t v14 = *(void *)(v0 + 144);
      uint64_t v15 = *(void *)(v0 + 152);
      (*(void (**)(void, void))(*(void *)(v0 + 96) + 8))(*(void *)(v0 + 104), *(void *)(v0 + 88));
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
      swift_bridgeObjectRelease();
      *(void *)(v0 + 16) = v5;
      id v16 = v5;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5B78);
      if (swift_dynamicCast())
      {
        uint64_t v18 = *(void *)(v0 + 72);
        uint64_t v17 = *(void *)(v0 + 80);
        uint64_t v19 = *(void *)(v0 + 64);

        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
      }
      else
      {

        if (qword_1E92A3BD8 != -1) {
          swift_once();
        }
        uint64_t v39 = sub_190B76FC8();
        __swift_project_value_buffer(v39, (uint64_t)qword_1E92A8420);
        id v40 = v5;
        id v41 = v5;
        uint64_t v42 = sub_190B76FA8();
        os_log_type_t v43 = sub_190B77578();
        if (os_log_type_enabled(v42, v43))
        {
          unint64_t v44 = (uint8_t *)swift_slowAlloc();
          uint64_t v45 = swift_slowAlloc();
          uint64_t v51 = v45;
          *(_DWORD *)unint64_t v44 = 136446210;
          *(void *)(v0 + 24) = v5;
          id v46 = v5;
          uint64_t v47 = sub_190B771C8();
          *(void *)(v0 + 32) = sub_190B21150(v47, v48, &v51);
          sub_190B77648();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_1909E3000, v42, v43, "Discovered extension error %{public}s", v44, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x192FD42A0](v45, -1, -1);
          MEMORY[0x192FD42A0](v44, -1, -1);
        }
        else
        {
        }
      }
      goto LABEL_8;
    }
    uint64_t v29 = *(void *)(v0 + 96);
    uint64_t v28 = *(void *)(v0 + 104);
    uint64_t v30 = *(void *)(v0 + 88);
    sub_190B54D90();
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
    uint64_t v31 = v2 - 1;
    if (v31)
    {
      uint64_t v32 = v1 + v50 + v49;
      while (1)
      {
        uint64_t v33 = *(void *)(v0 + 112);
        uint64_t v34 = *(void *)(v0 + 88);
        uint64_t v35 = *(void *)(v0 + 96);
        v9(v33, v32, v34);
        uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 56);
        v8(v33, 0, 1, v34);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34) == 1) {
          goto LABEL_13;
        }
        (*(void (**)(void, void, void))(*(void *)(v0 + 96) + 32))(*(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 88));
        sub_190B77468();
        uint64_t v37 = *(void *)(v0 + 96);
        uint64_t v36 = *(void *)(v0 + 104);
        uint64_t v38 = *(void *)(v0 + 88);
        sub_190B54D90();
        (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v38);
        v32 += v50;
        if (!--v31) {
          goto LABEL_12;
        }
      }
    }
    goto LABEL_12;
  }
LABEL_13:
  swift_bridgeObjectRelease_n();
  uint64_t v25 = sub_190B59100(&qword_1E92A3BB0, MEMORY[0x1E4F25828]);
  unint64_t v26 = (void *)swift_task_alloc();
  *(void *)(v0 + 192) = v26;
  *unint64_t v26 = v0;
  v26[1] = sub_190B54264;
  uint64_t v27 = *(void *)(v0 + 144);
  return MEMORY[0x1F4187C78](v0 + 40, v27, v25);
}

uint64_t sub_190B549F4()
{
  *(void *)(v0 + 4_Block_object_dispose(&STACK[0x228], 8) = *(void *)(v0 + 200);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5B78);
  swift_willThrowTypedImpl();
  return MEMORY[0x1F4188298](sub_190B54A80, 0, 0);
}

uint64_t sub_190B54A80()
{
  uint64_t v22 = v0;
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v3 = *(void *)(v0 + 168);
  (*(void (**)(void, void))(*(void *)(v0 + 152) + 8))(*(void *)(v0 + 160), *(void *)(v0 + 144));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = *(void **)(v0 + 200);
  *(void *)(v0 + 16) = v4;
  id v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5B78);
  if (swift_dynamicCast())
  {
    uint64_t v7 = *(void *)(v0 + 72);
    uint64_t v6 = *(void *)(v0 + 80);
    uint64_t v8 = *(void *)(v0 + 64);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  }
  else
  {

    if (qword_1E92A3BD8 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_190B76FC8();
    __swift_project_value_buffer(v9, (uint64_t)qword_1E92A8420);
    id v10 = v4;
    id v11 = v4;
    uint64_t v12 = sub_190B76FA8();
    os_log_type_t v13 = sub_190B77578();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v21 = v15;
      *(_DWORD *)uint64_t v14 = 136446210;
      *(void *)(v0 + 24) = v4;
      id v16 = v4;
      uint64_t v17 = sub_190B771C8();
      *(void *)(v0 + 32) = sub_190B21150(v17, v18, &v21);
      sub_190B77648();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1909E3000, v12, v13, "Discovered extension error %{public}s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FD42A0](v15, -1, -1);
      MEMORY[0x192FD42A0](v14, -1, -1);
    }
    else
    {
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

void sub_190B54D90()
{
  uint64_t v1 = _s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0();
  unint64_t v3 = v2;
  if (_s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0() == 0xD00000000000002BLL
    && v4 == 0x8000000190B9F210)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v5 = sub_190B77998();
    swift_bridgeObjectRelease();
    if ((v5 & 1) == 0)
    {
      uint64_t v19 = (void *)sub_190B76F88();
      if (v19)
      {
        uint64_t v20 = v19;
        id v21 = objc_msgSend(v19, sel_bundleIdentifier);

        if (v21)
        {
          sub_190B77168();
        }
      }
    }
  }
  uint64_t v6 = _AppExtensionIdentity.appDisplayName.getter();
  uint64_t v7 = v6;
  unint64_t v9 = v8;
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_isInternalExtensionsEnabled) & 1) != 0
    || (uint64_t v6 = sub_190B55160(v1, v3, *(void **)(v0 + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_internalExtensionBundleIDs)), (v6 & 1) == 0))
  {
    uint64_t v15 = MEMORY[0x1F4188790](v6);
    MEMORY[0x1F4188790](v15);
    uint64_t v17 = v16 + 4;
    os_unfair_lock_lock(v16 + 4);
    sub_190B59160(v18);
    os_unfair_lock_unlock(v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_1E92A3BD8 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_190B76FC8();
    __swift_project_value_buffer(v10, (uint64_t)qword_1E92A8420);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v11 = sub_190B76FA8();
    os_log_type_t v12 = sub_190B77588();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      v22[0] = v14;
      *(_DWORD *)uint64_t v13 = 136446466;
      swift_bridgeObjectRetain();
      sub_190B21150(v1, v3, v22);
      sub_190B77648();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v13 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_190B21150(v7, v9, v22);
      sub_190B77648();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1909E3000, v11, v12, "Skipping discovered internal extension %{public}s for %{public}s app", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x192FD42A0](v14, -1, -1);
      MEMORY[0x192FD42A0](v13, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_190B55160(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_190B77998();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  unint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_190B77998() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_190B55228(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v36 = a8;
  uint64_t v33 = a6;
  uint64_t v34 = a7;
  uint64_t v35 = a5;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3BB8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v31 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E92A3BD8 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_190B76FC8();
  __swift_project_value_buffer(v14, (uint64_t)qword_1E92A8420);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v15 = sub_190B76FA8();
  os_log_type_t v16 = sub_190B77588();
  BOOL v17 = os_log_type_enabled(v15, v16);
  uint64_t v32 = a1;
  unint64_t v30 = a2;
  if (v17)
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    v37[0] = v19;
    *(_DWORD *)uint64_t v18 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_190B21150(a1, a2, v37);
    sub_190B77648();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v18 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_190B21150(a3, a4, v37);
    sub_190B77648();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1909E3000, v15, v16, "Discovered extension %{public}s for %{public}s app", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x192FD42A0](v19, -1, -1);
    MEMORY[0x192FD42A0](v18, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v20 = sub_190B76F98();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  uint64_t v23 = (uint64_t)v31;
  uint64_t v24 = v36;
  v22(v31, v36, v20);
  uint64_t v25 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56);
  v25(v23, 0, 1, v20);
  swift_beginAccess();
  uint64_t v26 = v34;
  swift_bridgeObjectRetain();
  sub_190B555D8(v23, v33, v26);
  v22((char *)v23, v24, v20);
  v25(v23, 0, 1, v20);
  uint64_t v27 = v30;
  swift_bridgeObjectRetain();
  sub_190B555D8(v23, v32, v27);
  swift_endAccess();
  return sub_190B557B4(v24);
}

uint64_t sub_190B555D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3BB8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_190B76F98();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1, 1, v11) == 1)
  {
    sub_190B23144(a1, &qword_1E92A3BB8);
    sub_190B57C70(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_190B23144((uint64_t)v10, &qword_1E92A3BB8);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v14, a1, v11);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v4;
    uint64_t *v4 = 0x8000000000000000;
    sub_190B582D0((uint64_t)v14, a2, a3, isUniquelyReferenced_nonNull_native);
    uint64_t *v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_190B557B4(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3C18);
  MEMORY[0x1F4188790](v3 - 8);
  char v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_190B76F98();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v34 - v11;
  uint64_t v13 = (unint64_t *)(v1 + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_appExtensionIdentityCache);
  swift_beginAccess();
  unint64_t v14 = *v13;
  uint64_t v15 = *(void *)(*v13 + 16);
  if (!v15)
  {
LABEL_8:
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a1, v6);
    swift_beginAccess();
    unint64_t v24 = *v13;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v13 = v24;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v24 = sub_190B494B0(0, *(void *)(v24 + 16) + 1, 1, v24);
      *uint64_t v13 = v24;
    }
    unint64_t v27 = *(void *)(v24 + 16);
    unint64_t v26 = *(void *)(v24 + 24);
    if (v27 >= v26 >> 1)
    {
      unint64_t v24 = sub_190B494B0(v26 > 1, v27 + 1, 1, v24);
      *uint64_t v13 = v24;
    }
    *(void *)(v24 + 16) = v27 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v24+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v27, v10, v6);
    return swift_endAccess();
  }
  uint64_t v36 = v5;
  uint64_t v37 = v12;
  uint64_t v35 = v10;
  uint64_t v38 = v13;
  uint64_t v39 = v6;
  unint64_t v16 = v14 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  uint64_t v17 = *(void *)(v7 + 72);
  swift_bridgeObjectRetain();
  unint64_t v18 = 0;
  while (1)
  {
    uint64_t v19 = _s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0();
    uint64_t v21 = v20;
    if (v19 == _s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0() && v21 == v22) {
      break;
    }
    char v23 = sub_190B77998();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v23) {
      goto LABEL_14;
    }
    ++v18;
    v16 += v17;
    if (v15 == v18)
    {
      swift_bridgeObjectRelease();
      uint64_t v13 = v38;
      uint64_t v6 = v39;
      uint64_t v10 = v35;
      goto LABEL_8;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_14:
  swift_bridgeObjectRelease();
  uint64_t v28 = v38;
  swift_beginAccess();
  uint64_t v29 = (uint64_t)v37;
  sub_190B55B3C(v18, (uint64_t)v37);
  uint64_t v30 = v29;
  uint64_t v31 = v39;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v30, v39);
  if (*(void *)(*v28 + 16) >= v18)
  {
    uint64_t v33 = (uint64_t)v36;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v36, a1, v31);
    sub_190B5BCB0(v18, v18, v33);
    return swift_endAccess();
  }
  __break(1u);
  return result;
}

uint64_t sub_190B55B3C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v5 = sub_190B58D4C(v5);
  }
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v7 = v6 - 1;
  uint64_t v8 = sub_190B76F98();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 72);
  unint64_t v11 = v5 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)) + v10 * a1;
  uint64_t result = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v9 + 32))(a2, v11, v8);
  if ((uint64_t)(v7 - a1) < 0)
  {
LABEL_15:
    uint64_t result = sub_190B778F8();
    __break(1u);
    return result;
  }
  if (v10 > 0 || v11 >= v11 + v10 + v10 * (v7 - a1))
  {
    uint64_t result = swift_arrayInitWithTakeFrontToBack();
  }
  else if (v10)
  {
    uint64_t result = swift_arrayInitWithTakeBackToFront();
  }
  *(void *)(v5 + 16) = v7;
  *unint64_t v2 = v5;
  return result;
}

void sub_190B55C98()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_lock) + 16);
  os_unfair_lock_lock(v1);
  sub_190B567A4(v2);
  os_unfair_lock_unlock(v1);
}

uint64_t sub_190B55D18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v7 = (uint64_t *)(a1
                 + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_appExtensionIdentityByBundleIdentifierCache);
  swift_beginAccess();
  uint64_t v8 = *v7;
  if (*(void *)(v8 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v9 = sub_190B236D8(a2, a3);
    if (v10)
    {
      unint64_t v11 = v9;
      uint64_t v12 = *(void *)(v8 + 56);
      uint64_t v13 = sub_190B76F98();
      uint64_t v14 = *(void *)(v13 - 8);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v14 + 16))(a4, v12 + *(void *)(v14 + 72) * v11, v13);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(a4, 0, 1, v13);
    }
    else
    {
      uint64_t v17 = sub_190B76F98();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a4, 1, 1, v17);
    }
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = sub_190B76F98();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a4, 1, 1, v15);
  }
}

uint64_t sub_190B55EF4()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_lock) + 16);
  os_unfair_lock_lock(v1);
  sub_190B58D88(&v3);
  os_unfair_lock_unlock(v1);
  return v3;
}

uint64_t sub_190B55F70@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(a1 + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_appExtensionIdentityCache);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_190B55FD4()
{
  if (_s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0() == 0xD00000000000002BLL
    && v0 == 0x8000000190B9F210)
  {
    uint64_t v1 = (void *)swift_bridgeObjectRelease();
  }
  else
  {
    char v2 = sub_190B77998();
    uint64_t v1 = (void *)swift_bridgeObjectRelease();
    if ((v2 & 1) == 0)
    {
      uint64_t v1 = (void *)sub_190B76F88();
      if (v1)
      {
        uint64_t v8 = v1;
        id v9 = objc_msgSend(v1, sel_bundleIdentifier);

        if (v9)
        {
          sub_190B77168();
        }
      }
    }
  }
  uint64_t v3 = MEMORY[0x1F4188790](v1);
  MEMORY[0x1F4188790](v3);
  unint64_t v5 = v4 + 4;
  os_unfair_lock_lock(v4 + 4);
  sub_190B59160(v6);
  os_unfair_lock_unlock(v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_190B56170(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  unint64_t v7 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_containerByBundleIdentifierCache);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  id v8 = a4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *v7;
  *unint64_t v7 = 0x8000000000000000;
  sub_190B58450((uint64_t)v8, a2, a3, isUniquelyReferenced_nonNull_native);
  *unint64_t v7 = v11;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_190B5623C()
{
  if (_s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0() == 0xD00000000000002BLL
    && v0 == 0x8000000190B9F210)
  {
    uint64_t v1 = (void *)swift_bridgeObjectRelease();
  }
  else
  {
    char v2 = sub_190B77998();
    uint64_t v1 = (void *)swift_bridgeObjectRelease();
    if ((v2 & 1) == 0)
    {
      uint64_t v1 = (void *)sub_190B76F88();
      if (v1)
      {
        id v8 = v1;
        id v9 = objc_msgSend(v1, sel_bundleIdentifier);

        if (v9)
        {
          sub_190B77168();
        }
      }
    }
  }
  uint64_t v3 = MEMORY[0x1F4188790](v1);
  MEMORY[0x1F4188790](v3);
  unint64_t v5 = v4 + 4;
  os_unfair_lock_lock(v4 + 4);
  sub_190B59160(v6);
  os_unfair_lock_unlock(v5);
  return swift_bridgeObjectRelease();
}

void sub_190B563D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  unint64_t v5 = (void *)sub_190B57E18(a2, a3);
  swift_endAccess();
  swift_bridgeObjectRelease();
}

uint64_t sub_190B56460()
{
  if (_s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0() == 0xD00000000000002BLL
    && v0 == 0x8000000190B9F210)
  {
    uint64_t v1 = (void *)swift_bridgeObjectRelease();
  }
  else
  {
    char v2 = sub_190B77998();
    uint64_t v1 = (void *)swift_bridgeObjectRelease();
    if ((v2 & 1) == 0)
    {
      uint64_t v1 = (void *)sub_190B76F88();
      if (v1)
      {
        id v8 = v1;
        id v9 = objc_msgSend(v1, sel_bundleIdentifier);

        if (v9)
        {
          sub_190B77168();
        }
      }
    }
  }
  uint64_t v3 = MEMORY[0x1F4188790](v1);
  MEMORY[0x1F4188790](v3);
  unint64_t v5 = v4 + 4;
  os_unfair_lock_lock(v4 + 4);
  sub_190B423B8(&v10);
  os_unfair_lock_unlock(v5);
  uint64_t v6 = v10;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_190B56604@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  unint64_t v7 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_containerByBundleIdentifierCache);
  uint64_t result = swift_beginAccess();
  uint64_t v9 = *v7;
  if (*(void *)(v9 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v10 = sub_190B236D8(a2, a3);
    if (v11)
    {
      uint64_t v12 = *(void **)(*(void *)(v9 + 56) + 8 * v10);
      id v13 = v12;
    }
    else
    {
      uint64_t v12 = 0;
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = 0;
  }
  *a4 = v12;
  return result;
}

id CNContactProviderSupportCache.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CNContactProviderSupportCache();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_190B56788()
{
  return sub_190B53894(*(void *)(v0 + 16));
}

uint64_t sub_190B567A4(uint64_t a1)
{
  return sub_190B41544(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_190B567C0@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(*(void *)(v1 + 16)
                + OBJC_IVAR____TtC8Contacts29CNContactProviderSupportCache_appExtensionIdentityCache);
  swift_beginAccess();
  *a1 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_190B56828(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5FC8);
  char v36 = a2;
  uint64_t v6 = sub_190B778D8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_190B77A58();
    sub_190B771D8();
    uint64_t result = sub_190B77A68();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_190B56B40(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v49 = sub_190B76F98();
  uint64_t v5 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  unint64_t v48 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3C20);
  int v47 = a2;
  uint64_t v8 = sub_190B778D8();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16)) {
    goto LABEL_41;
  }
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 64);
  unint64_t v44 = (void *)(v7 + 64);
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v11;
  uint64_t v42 = v2;
  int64_t v43 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v45 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v46 = v5;
  uint64_t v14 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  uint64_t v15 = v8 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v20 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v43) {
      break;
    }
    unint64_t v23 = v44;
    unint64_t v24 = v44[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v43) {
        goto LABEL_34;
      }
      unint64_t v24 = v44[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v43)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v42;
          if ((v47 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v44[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v43) {
              goto LABEL_34;
            }
            unint64_t v24 = v44[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    uint64_t v26 = *(void *)(v7 + 56);
    uint64_t v27 = v7;
    uint64_t v28 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v21);
    uint64_t v29 = *v28;
    uint64_t v30 = v28[1];
    uint64_t v31 = *(void *)(v46 + 72);
    uint64_t v32 = v26 + v31 * v21;
    if (v47)
    {
      (*v14)(v48, v32, v49);
    }
    else
    {
      (*v45)(v48, v32, v49);
      swift_bridgeObjectRetain();
    }
    sub_190B77A58();
    sub_190B771D8();
    uint64_t result = sub_190B77A68();
    uint64_t v33 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v15 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v34) & ~*(void *)(v15 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v15 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v18 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v9 + 48) + 16 * v18);
    void *v19 = v29;
    v19[1] = v30;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v14)(*(void *)(v9 + 56) + v31 * v18, v48, v49);
    ++*(void *)(v9 + 16);
    uint64_t v7 = v27;
  }
  swift_release();
  uint64_t v3 = v42;
  unint64_t v23 = v44;
  if ((v47 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v7 + 32);
  if (v40 >= 64) {
    bzero(v23, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v23 = -1 << v40;
  }
  *(void *)(v7 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v9;
  return result;
}

uint64_t sub_190B56F28(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5FC0);
  char v38 = a2;
  uint64_t v6 = sub_190B778D8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  unint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_190B77A58();
    sub_190B771D8();
    uint64_t result = sub_190B77A68();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  int64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_190B57238(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3D90);
  uint64_t v6 = sub_190B778D8();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      int64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      int64_t v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_190B23134(v24, v35);
      }
      else
      {
        sub_190B23088((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_190B77A58();
      sub_190B771D8();
      uint64_t result = sub_190B77A68();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *unint64_t v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_190B23134(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_190B57538(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5FB8);
  uint64_t v6 = sub_190B778D8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v38 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v36 = v2;
  int64_t v37 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v18 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v20 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v20 >= v37) {
      break;
    }
    int64_t v21 = (void *)(v5 + 64);
    unint64_t v22 = *(void *)(v38 + 8 * v20);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v20 + 1;
      if (v20 + 1 >= v37) {
        goto LABEL_34;
      }
      unint64_t v22 = *(void *)(v38 + 8 * v13);
      if (!v22)
      {
        int64_t v23 = v20 + 2;
        if (v23 >= v37)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v36;
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v22 = *(void *)(v38 + 8 * v23);
        if (!v22)
        {
          while (1)
          {
            int64_t v13 = v23 + 1;
            if (__OFADD__(v23, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v37) {
              goto LABEL_34;
            }
            unint64_t v22 = *(void *)(v38 + 8 * v13);
            ++v23;
            if (v22) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v23;
      }
    }
LABEL_21:
    unint64_t v10 = (v22 - 1) & v22;
    unint64_t v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_22:
    uint64_t v24 = *(void *)(v5 + 48) + 40 * v19;
    if (a2)
    {
      long long v25 = *(_OWORD *)v24;
      long long v26 = *(_OWORD *)(v24 + 16);
      uint64_t v41 = *(void *)(v24 + 32);
      long long v39 = v25;
      long long v40 = v26;
      uint64_t v27 = *(void *)(*(void *)(v5 + 56) + 8 * v19);
    }
    else
    {
      sub_190B23A38(v24, (uint64_t)&v39);
      uint64_t v27 = *(void *)(*(void *)(v5 + 56) + 8 * v19);
      swift_bridgeObjectRetain();
    }
    uint64_t result = sub_190B77718();
    uint64_t v28 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v11 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v29) & ~*(void *)(v11 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v11 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v14 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = *(void *)(v7 + 48) + 40 * v14;
    long long v16 = v39;
    long long v17 = v40;
    *(void *)(v15 + 32) = v41;
    *(_OWORD *)uint64_t v15 = v16;
    *(_OWORD *)(v15 + 16) = v17;
    *(void *)(*(void *)(v7 + 56) + 8 * v14) = v27;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  int64_t v21 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v21, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v21 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_190B5784C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_190B76CC8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3E30);
  int v46 = a2;
  uint64_t v10 = sub_190B778D8();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  uint64_t v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  long long v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  int64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  long long v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    long long v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
      swift_bridgeObjectRetain();
    }
    sub_190B59100((unint64_t *)&qword_1E92A3DE8, MEMORY[0x1E4F27510]);
    uint64_t result = sub_190B770A8();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  long long v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

uint64_t sub_190B57C70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_190B236D8(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v21 = *v4;
    uint64_t *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_190B58670();
      uint64_t v11 = v21;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 56);
    uint64_t v13 = sub_190B76F98();
    uint64_t v20 = *(void *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v20 + 32))(a3, v12 + *(void *)(v20 + 72) * v8, v13);
    sub_190B57EE8(v8, v11);
    uint64_t *v4 = v11;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a3;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = sub_190B76F98();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a3;
    uint64_t v16 = 1;
  }

  return v14(v15, v16, 1, v17);
}

uint64_t sub_190B57E18(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_190B236D8(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_190B58934();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_190B580F8(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_190B57EE8(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_190B776A8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_190B77A58();
        swift_bridgeObjectRetain();
        sub_190B771D8();
        uint64_t v9 = sub_190B77A68();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v10 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v11 = *(void *)(a2 + 48);
        uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
        uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1) {
          *uint64_t v12 = *v13;
        }
        uint64_t v14 = *(void *)(a2 + 56);
        uint64_t v15 = *(void *)(*(void *)(sub_190B76F98() - 8) + 72);
        int64_t v16 = v15 * v3;
        uint64_t result = v14 + v15 * v3;
        int64_t v17 = v15 * v6;
        unint64_t v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v16 == v17) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v10 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v10) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  uint64_t *v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_190B580F8(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_190B776A8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_190B77A58();
        swift_bridgeObjectRetain();
        sub_190B771D8();
        uint64_t v9 = sub_190B77A68();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          int64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *int64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_190B582D0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_190B236D8(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_190B58670();
      goto LABEL_7;
    }
    sub_190B56B40(v15, a4 & 1);
    unint64_t v26 = sub_190B236D8(a2, a3);
    if ((v16 & 1) == (v27 & 1))
    {
      unint64_t v12 = v26;
      uint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_190B779D8();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7];
    uint64_t v20 = sub_190B76F98();
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 40);
    uint64_t v23 = v20;
    uint64_t v24 = v19 + *(void *)(v21 + 72) * v12;
    return v22(v24, a1, v23);
  }
LABEL_13:
  sub_190B585C0(v12, a2, a3, a1, v18);

  return swift_bridgeObjectRetain();
}

void sub_190B58450(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_190B236D8(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_190B58934();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_190B56F28(v15, a4 & 1);
  unint64_t v20 = sub_190B236D8(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_17:
    sub_190B779D8();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v22 = (uint64_t *)(v18[6] + 16 * v12);
  uint64_t *v22 = a2;
  v22[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v23 = v18[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v25;

  swift_bridgeObjectRetain();
}

uint64_t sub_190B585C0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  unint64_t v8 = (void *)(a5[6] + 16 * a1);
  *unint64_t v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  uint64_t v10 = sub_190B76F98();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1, a4, v10);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

void *sub_190B58670()
{
  uint64_t v35 = sub_190B76F98();
  uint64_t v1 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  int64_t v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3C20);
  uint64_t v30 = v0;
  uint64_t v4 = *v0;
  uint64_t v5 = sub_190B778C8();
  uint64_t v6 = *(void *)(v4 + 16);
  uint64_t v36 = v5;
  if (!v6)
  {
    uint64_t result = (void *)swift_release();
    uint64_t v28 = v36;
    char v27 = v30;
LABEL_25:
    *char v27 = v28;
    return result;
  }
  uint64_t v7 = v5;
  uint64_t result = (void *)(v5 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9)
  {
    uint64_t result = memmove(result, (const void *)(v4 + 64), 8 * v9);
    uint64_t v7 = v36;
  }
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v4 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v4 + 64);
  uint64_t v31 = v4 + 64;
  int64_t v32 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v33 = v1 + 32;
  uint64_t v34 = v1 + 16;
  uint64_t v14 = v35;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v24 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v32) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v31 + 8 * v24);
    ++v10;
    if (!v25)
    {
      int64_t v10 = v24 + 1;
      if (v24 + 1 >= v32) {
        goto LABEL_23;
      }
      unint64_t v25 = *(void *)(v31 + 8 * v10);
      if (!v25) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v25 - 1) & v25;
    unint64_t v16 = __clz(__rbit64(v25)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v16);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    unint64_t v21 = *(void *)(v1 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, *(void *)(v4 + 56) + v21, v14);
    uint64_t v22 = v36;
    uint64_t v23 = (void *)(*(void *)(v36 + 48) + v17);
    void *v23 = v19;
    v23[1] = v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(void *)(v22 + 56) + v21, v3, v14);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v32)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    char v27 = v30;
    uint64_t v28 = v36;
    goto LABEL_25;
  }
  unint64_t v25 = *(void *)(v31 + 8 * v26);
  if (v25)
  {
    int64_t v10 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v10 >= v32) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v31 + 8 * v10);
    ++v26;
    if (v25) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_190B58934()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5FC0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_190B778C8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_190B58AE8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3D90);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_190B778C8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t v25 = v1;
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_190B23088(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = v19;
    v21[1] = v18;
    sub_190B23134(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_190B58CD0(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_190B778A8();
    swift_bridgeObjectRelease();
  }

  JUMPOUT(0x192FD1FC0);
}

uint64_t sub_190B58D4C(unint64_t a1)
{
  return sub_190B494B0(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_190B58D60(void *a1)
{
  return sub_190B49828(0, a1[2], 0, a1);
}

void *sub_190B58D74(void *a1)
{
  return sub_190B49938(0, a1[2], 0, a1);
}

void *sub_190B58D88@<X0>(void *a1@<X8>)
{
  return sub_190B4163C(*(void *(**)(uint64_t *__return_ptr))(v1 + 16), a1);
}

uint64_t sub_190B58DA4()
{
  return sub_190B56170(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40));
}

void sub_190B58DC4()
{
  sub_190B563D4(v0[2], v0[3], v0[4]);
}

uint64_t sub_190B58DE4@<X0>(void *a1@<X8>)
{
  return sub_190B56604(v1[2], v1[3], v1[4], a1);
}

uint64_t type metadata accessor for CNContactProviderSupportCache()
{
  return self;
}

uint64_t method lookup function for CNContactProviderSupportCache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CNContactProviderSupportCache);
}

uint64_t dispatch thunk of CNContactProviderSupportCache.cachedBundleIdentifiers.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of CNContactProviderSupportCache.invalidateCache()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of CNContactProviderSupportCache.appExtensionIdentity(for:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of CNContactProviderSupportCache.appExtensionIdentities()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of CNContactProviderSupportCache.addContainer(_:appExtensionIdentity:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of CNContactProviderSupportCache.removeContainer(for:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of CNContactProviderSupportCache.container(for:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x148))();
}

uint64_t sub_190B58FE4()
{
  return sub_190B55228(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72));
}

uint64_t sub_190B5900C()
{
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_190B5904C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *unint64_t v7 = v2;
  v7[1] = sub_190B42598;
  return sub_190B53BFC(a1, v4, v5, v6);
}

uint64_t sub_190B59100(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_190B59148()
{
  return sub_190B56788();
}

uint64_t sub_190B59160(uint64_t a1)
{
  return sub_190B567A4(a1);
}

id sub_190B59178()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v1 = (void *)sub_190B77158();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

void sub_190B591E4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_posterData);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_190B76E08();
    unint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v7 = 0xF000000000000000;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_190B5924C(uint64_t a1, void **a2)
{
  id v2 = *a2;
  if (*(void *)(a1 + 8) >> 60 == 15) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = sub_190B76DE8();
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setPosterData_);
}

id CNDuplicateSetContactPoster.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id CNDuplicateSetContactPoster.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for CNDuplicateSetContactPoster();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for CNDuplicateSetContactPoster()
{
  return self;
}

id CNDuplicateSetContactPoster.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CNDuplicateSetContactPoster();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_190B59430@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for CNDuplicateSetContactPoster();
  uint64_t result = sub_190B777A8();
  *a1 = result;
  return result;
}

char *keypath_get_selector_duplicateSet()
{
  return sel_duplicateSet;
}

id sub_190B59484@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_duplicateSet);
  *a2 = result;
  return result;
}

id sub_190B594C0(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setDuplicateSet_, *a1);
}

uint64_t method lookup function for CNDuplicateSetContactPoster(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CNDuplicateSetContactPoster);
}

uint64_t dispatch thunk of static CNDuplicateSetContactPoster.fetchRequest()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

void CNContact.id.getter()
{
  id v1 = objc_msgSend(v0, sel_identifier);
  if (!v1)
  {
    sub_190B77168();
    id v1 = (id)sub_190B77158();
    swift_bridgeObjectRelease();
  }
  id v2 = objc_msgSend(self, sel_uuidFromContactIdentifier_, v1);

  sub_190B76E68();
}

unint64_t sub_190B59714()
{
  unint64_t result = qword_1E92A5FD0;
  if (!qword_1E92A5FD0)
  {
    sub_190B76E88();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92A5FD0);
  }
  return result;
}

void sub_190B5976C()
{
  id v1 = [*v0 id];
  sub_190B76E68();
}

void sub_190B597CC()
{
  id v0 = sub_190B1AB40();
  if (!v0) {
    goto LABEL_11;
  }
  id v1 = v0;
  id v2 = objc_msgSend(v0, sel_persistentStoreCoordinator);

  if (!v2) {
    goto LABEL_11;
  }
  id v3 = objc_msgSend(v2, sel_persistentStores);
  sub_190B5A990();
  unint64_t v4 = sub_190B772C8();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_190B778A8();
    swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
  if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_10:

    swift_bridgeObjectRelease();
LABEL_11:
    if (qword_1E92A3D08 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_190B76FC8();
    __swift_project_value_buffer(v9, (uint64_t)qword_1E92A8460);
    uint64_t v10 = sub_190B76FA8();
    os_log_type_t v11 = sub_190B77578();
    if (os_log_type_enabled(v10, v11))
    {
      unint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v12 = 0;
      _os_log_impl(&dword_1909E3000, v10, v11, "Missing persistent store when fetching metadata for ManagedDuplicateStore", v12, 2u);
      MEMORY[0x192FD42A0](v12, -1, -1);
    }

    uint64_t v13 = MEMORY[0x1E4FBC860];
    sub_190B611B0(v13);
    return;
  }
LABEL_5:
  if ((v4 & 0xC000000000000001) != 0)
  {
    id v5 = (id)MEMORY[0x192FD1FB0](0, v4);
    goto LABEL_8;
  }
  if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v5 = *(id *)(v4 + 32);
LABEL_8:
    unint64_t v6 = v5;
    swift_bridgeObjectRelease();
    id v7 = objc_msgSend(v2, sel_metadataForPersistentStore_, v6);
    sub_190B77058();

    return;
  }
  __break(1u);
}

void sub_190B59A0C()
{
  id v0 = sub_190B1AB40();
  if (!v0) {
    goto LABEL_9;
  }
  id v1 = v0;
  id v2 = objc_msgSend(v0, sel_persistentStoreCoordinator);

  if (!v2) {
    goto LABEL_9;
  }
  id v3 = objc_msgSend(v2, sel_persistentStores);
  sub_190B5A990();
  unint64_t v4 = sub_190B772C8();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_190B778A8();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
  if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_17:
    swift_bridgeObjectRelease();

LABEL_9:
    swift_bridgeObjectRelease();
    if (qword_1E92A3D08 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_190B76FC8();
    __swift_project_value_buffer(v7, (uint64_t)qword_1E92A8460);
    osos_log_t log = sub_190B76FA8();
    os_log_type_t v8 = sub_190B77578();
    if (os_log_type_enabled(oslog, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_1909E3000, oslog, v8, "Missing persistent store when setting metadata for ManagedDuplicateStore", v9, 2u);
      MEMORY[0x192FD42A0](v9, -1, -1);
    }
    goto LABEL_13;
  }
LABEL_5:
  if ((v4 & 0xC000000000000001) != 0)
  {
    id v5 = (id)MEMORY[0x192FD1FB0](0, v4);
  }
  else
  {
    if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v5 = *(id *)(v4 + 32);
  }
  unint64_t v6 = v5;
  swift_bridgeObjectRelease();
  osos_log_t log = sub_190B77048();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setMetadata_forPersistentStore_, oslog, v6);

LABEL_13:
}

void sub_190B59C50(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_190B597CC();
    uint64_t v3 = v2;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v5 = v3;
    sub_190B5A638(a1, (uint64_t)sub_190B5A5E4, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v5);
    swift_bridgeObjectRelease();
    sub_190B59A0C();
  }
}

uint64_t ManagedDuplicateStore.currentToken.getter()
{
  return sub_190B59D30(0);
}

uint64_t ManagedDuplicateStore.currentToken.setter(uint64_t a1, uint64_t a2)
{
  return sub_190B59F80(a1, a2, 0x54746E6572727563);
}

uint64_t sub_190B59D30(char a1)
{
  sub_190B597CC();
  uint64_t v3 = v2;
  if (!*(void *)(v2 + 16)
    || ((a1 & 1) != 0 ? (uint64_t v4 = 0x54676E69646E6570) : (uint64_t v4 = 0x54746E6572727563),
        unint64_t v5 = sub_190B236D8(v4, 0xEC0000006E656B6FLL),
        (v6 & 1) == 0))
  {
    long long v9 = 0u;
    long long v10 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_190B23088(*(void *)(v3 + 56) + 32 * v5, (uint64_t)&v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v10 + 1))
  {
LABEL_10:
    sub_190B23144((uint64_t)&v9, &qword_1E92A3DD8);
    return 0;
  }
  if (swift_dynamicCast()) {
    return v8;
  }
  return 0;
}

void (*ManagedDuplicateStore.currentToken.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0xB8uLL);
  *a1 = v3;
  v3[22] = v1;
  v3[20] = sub_190B59D30(0);
  v3[21] = v4;
  return sub_190B59EA0;
}

void sub_190B59EA0(uint64_t a1, char a2)
{
}

uint64_t ManagedDuplicateStore.pendingToken.getter()
{
  return sub_190B59D30(1);
}

uint64_t sub_190B59EBC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = *a1;
  uint64_t v6 = a1[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3DA0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_190B908E0;
  *(void *)(inited + 32) = a5;
  *(void *)(inited + 40) = 0xEC0000006E656B6FLL;
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 4_Block_object_dispose(&STACK[0x228], 8) = v7;
  *(void *)(inited + 56) = v6;
  swift_bridgeObjectRetain_n();
  unint64_t v9 = sub_190B611B0(inited);
  sub_190B59C50(v9);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t ManagedDuplicateStore.pendingToken.setter(uint64_t a1, uint64_t a2)
{
  return sub_190B59F80(a1, a2, 0x54676E69646E6570);
}

uint64_t sub_190B59F80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3DA0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_190B908E0;
  *(void *)(inited + 32) = a3;
  *(void *)(inited + 40) = 0xEC0000006E656B6FLL;
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 4_Block_object_dispose(&STACK[0x228], 8) = a1;
  *(void *)(inited + 56) = a2;
  swift_bridgeObjectRetain();
  unint64_t v7 = sub_190B611B0(inited);
  sub_190B59C50(v7);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void (*ManagedDuplicateStore.pendingToken.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0xB8uLL);
  *a1 = v3;
  v3[22] = v1;
  v3[20] = sub_190B59D30(1);
  v3[21] = v4;
  return sub_190B5A090;
}

void sub_190B5A090(uint64_t a1, char a2)
{
}

void sub_190B5A0A4(uint64_t a1, char a2, uint64_t a3)
{
  unint64_t v5 = *(void **)a1;
  uint64_t v6 = *(void *)(*(void *)a1 + 160);
  uint64_t v7 = *(void *)(*(void *)a1 + 168);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3DA0);
  if (a2)
  {
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_190B908E0;
    *(void *)(inited + 32) = a3;
    *(void *)(inited + 40) = 0xEC0000006E656B6FLL;
    *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
    *(void *)(inited + 4_Block_object_dispose(&STACK[0x228], 8) = v6;
    *(void *)(inited + 56) = v7;
    swift_bridgeObjectRetain_n();
    unint64_t v9 = sub_190B611B0(inited);
    sub_190B59C50(v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = swift_initStackObject();
    *(_OWORD *)(v10 + 16) = xmmword_190B908E0;
    *(void *)(v10 + 32) = a3;
    *(void *)(v10 + 40) = 0xEC0000006E656B6FLL;
    *(void *)(v10 + 72) = MEMORY[0x1E4FBB1A0];
    *(void *)(v10 + 4_Block_object_dispose(&STACK[0x228], 8) = v6;
    *(void *)(v10 + 56) = v7;
    swift_bridgeObjectRetain();
    unint64_t v11 = sub_190B611B0(v10);
    sub_190B59C50(v11);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  free(v5);
}

Swift::Bool __swiftcall ManagedDuplicateStore.needsRefresh(token:)(Swift::String token)
{
  object = token._object;
  uint64_t countAndFlagsBits = token._countAndFlagsBits;
  if (sub_190B59D30(0) != token._countAndFlagsBits || v3 != object)
  {
    char v5 = sub_190B77998();
    swift_bridgeObjectRelease();
    char v4 = 0;
    if (v5) {
      return v4 & 1;
    }
    if (sub_190B59D30(1) != countAndFlagsBits || v6 != object)
    {
      char v7 = sub_190B77998();
      swift_bridgeObjectRelease();
      char v4 = v7 ^ 1;
      return v4 & 1;
    }
  }
  swift_bridgeObjectRelease();
  char v4 = 0;
  return v4 & 1;
}

Swift::Bool __swiftcall ManagedDuplicateStore.willRefresh(token:)(Swift::String token)
{
  object = token._object;
  uint64_t countAndFlagsBits = token._countAndFlagsBits;
  if (sub_190B59D30(0) == token._countAndFlagsBits && v3 == object) {
    goto LABEL_3;
  }
  char v5 = sub_190B77998();
  swift_bridgeObjectRelease();
  Swift::Bool result = 0;
  if ((v5 & 1) == 0)
  {
    if (sub_190B59D30(1) == countAndFlagsBits && v6 == object)
    {
LABEL_3:
      swift_bridgeObjectRelease();
      return 0;
    }
    char v7 = sub_190B77998();
    swift_bridgeObjectRelease();
    Swift::Bool result = 0;
    if ((v7 & 1) == 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3DA0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_190B908E0;
      strcpy((char *)(inited + 32), "pendingToken");
      *(unsigned char *)(inited + 45) = 0;
      *(_WORD *)(inited + 46) = -5120;
      *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
      *(void *)(inited + 4_Block_object_dispose(&STACK[0x228], 8) = countAndFlagsBits;
      *(void *)(inited + 56) = object;
      swift_bridgeObjectRetain_n();
      unint64_t v9 = sub_190B611B0(inited);
      sub_190B59C50(v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 1;
    }
  }
  return result;
}

Swift::Void __swiftcall ManagedDuplicateStore.didRefresh(token:success:)(Swift::String token, Swift::Bool success)
{
  object = token._object;
  uint64_t countAndFlagsBits = token._countAndFlagsBits;
  if (sub_190B59D30(1) == token._countAndFlagsBits && v5 == object)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v7 = sub_190B77998();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0) {
      return;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3DA0);
  if (success)
  {
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_190B908E0;
    strcpy((char *)(inited + 32), "currentToken");
    *(unsigned char *)(inited + 45) = 0;
    *(_WORD *)(inited + 46) = -5120;
    *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
    *(void *)(inited + 4_Block_object_dispose(&STACK[0x228], 8) = countAndFlagsBits;
    *(void *)(inited + 56) = object;
    swift_bridgeObjectRetain_n();
    unint64_t v9 = sub_190B611B0(inited);
    sub_190B59C50(v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = swift_initStackObject();
    *(_OWORD *)(v10 + 16) = xmmword_190B908E0;
    strcpy((char *)(v10 + 32), "pendingToken");
    *(unsigned char *)(v10 + 45) = 0;
    *(_WORD *)(v10 + 46) = -5120;
    *(void *)(v10 + 72) = MEMORY[0x1E4FBB1A0];
    *(void *)(v10 + 4_Block_object_dispose(&STACK[0x228], 8) = 0;
    *(void *)(v10 + 56) = 0xE000000000000000;
    unint64_t v11 = sub_190B611B0(v10);
    sub_190B59C50(v11);
  }
  swift_bridgeObjectRelease();
}

uint64_t sub_190B5A554@<X0>(uint64_t *a1@<X8>)
{
  return keypath_getTm_0(0, a1);
}

uint64_t sub_190B5A55C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_190B59EBC(a1, a2, a3, a4, 0x54746E6572727563);
}

uint64_t sub_190B5A584@<X0>(uint64_t *a1@<X8>)
{
  return keypath_getTm_0(1, a1);
}

uint64_t keypath_getTm_0@<X0>(char a1@<W3>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_190B59D30(a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_190B5A5BC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_190B59EBC(a1, a2, a3, a4, 0x54676E69646E6570);
}

uint64_t sub_190B5A5E4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  sub_190B23088((uint64_t)(a1 + 2), (uint64_t)(a2 + 2));
  *a2 = v4;
  a2[1] = v3;

  return swift_bridgeObjectRetain();
}

uint64_t sub_190B5A638(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = -v7;
  uint64_t v50 = a1;
  uint64_t v51 = a1 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  uint64_t v52 = v8;
  uint64_t v53 = 0;
  uint64_t v54 = v11 & v9;
  uint64_t v55 = a2;
  uint64_t v56 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_190B5A9D0(&v48);
  uint64_t v12 = *((void *)&v48 + 1);
  if (!*((void *)&v48 + 1)) {
    goto LABEL_27;
  }
  uint64_t v13 = v48;
  sub_190B23134(v49, v47);
  unint64_t v14 = *(void **)a5;
  unint64_t v16 = sub_190B236D8(v13, v12);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  char v20 = v15;
  if (v14[3] >= v19)
  {
    if (a4)
    {
      if (v15) {
        goto LABEL_12;
      }
    }
    else
    {
      sub_190B58AE8();
      if (v20) {
        goto LABEL_12;
      }
    }
LABEL_14:
    int64_t v24 = *(void **)a5;
    *(void *)(*(void *)a5 + 8 * (v16 >> 6) + 64) |= 1 << v16;
    unint64_t v25 = (uint64_t *)(v24[6] + 16 * v16);
    uint64_t *v25 = v13;
    v25[1] = v12;
    sub_190B23134(v47, (_OWORD *)(v24[7] + 32 * v16));
    uint64_t v26 = v24[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v24[2] = v28;
LABEL_16:
    sub_190B5A9D0(&v48);
    for (uint64_t i = *((void *)&v48 + 1); *((void *)&v48 + 1); uint64_t i = *((void *)&v48 + 1))
    {
      uint64_t v31 = v48;
      sub_190B23134(v49, v47);
      int64_t v32 = *(void **)a5;
      unint64_t v34 = sub_190B236D8(v31, i);
      uint64_t v35 = v32[2];
      BOOL v36 = (v33 & 1) == 0;
      uint64_t v37 = v35 + v36;
      if (__OFADD__(v35, v36)) {
        goto LABEL_28;
      }
      char v38 = v33;
      if (v32[3] < v37)
      {
        sub_190B57238(v37, 1);
        unint64_t v39 = sub_190B236D8(v31, i);
        if ((v38 & 1) != (v40 & 1)) {
          goto LABEL_30;
        }
        unint64_t v34 = v39;
      }
      if (v38)
      {
        sub_190B23088((uint64_t)v47, (uint64_t)v46);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
        swift_bridgeObjectRelease();
        uint64_t v30 = (_OWORD *)(*(void *)(*(void *)a5 + 56) + 32 * v34);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v30);
        sub_190B23134(v46, v30);
      }
      else
      {
        int64_t v41 = *(void **)a5;
        *(void *)(*(void *)a5 + 8 * (v34 >> 6) + 64) |= 1 << v34;
        uint64_t v42 = (uint64_t *)(v41[6] + 16 * v34);
        *uint64_t v42 = v31;
        v42[1] = i;
        sub_190B23134(v47, (_OWORD *)(v41[7] + 32 * v34));
        uint64_t v43 = v41[2];
        BOOL v27 = __OFADD__(v43, 1);
        uint64_t v44 = v43 + 1;
        if (v27) {
          goto LABEL_29;
        }
        v41[2] = v44;
      }
      sub_190B5A9D0(&v48);
    }
LABEL_27:
    swift_release();
    swift_bridgeObjectRelease();
    sub_190B23408();
    return swift_release();
  }
  sub_190B57238(v19, a4 & 1);
  unint64_t v21 = sub_190B236D8(v13, v12);
  if ((v20 & 1) == (v22 & 1))
  {
    unint64_t v16 = v21;
    if ((v20 & 1) == 0) {
      goto LABEL_14;
    }
LABEL_12:
    sub_190B23088((uint64_t)v47, (uint64_t)v46);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
    swift_bridgeObjectRelease();
    unint64_t v23 = (_OWORD *)(*(void *)(*(void *)a5 + 56) + 32 * v16);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
    sub_190B23134(v46, v23);
    goto LABEL_16;
  }
LABEL_30:
  uint64_t result = sub_190B779D8();
  __break(1u);
  return result;
}

unint64_t sub_190B5A990()
{
  unint64_t result = qword_1E92A3D68;
  if (!qword_1E92A3D68)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E92A3D68);
  }
  return result;
}

uint64_t sub_190B5A9D0@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  int64_t v5 = v1[3];
  int64_t v7 = v5;
  unint64_t v8 = v1[4];
  if (v8)
  {
    uint64_t v9 = (v8 - 1) & v8;
    unint64_t v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    uint64_t v11 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v10);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    sub_190B23088(*(void *)(v3 + 56) + 32 * v10, (uint64_t)v24);
    *(void *)&long long v23 = v13;
    *((void *)&v23 + 1) = v12;
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  int64_t v14 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v15 = (unint64_t)(v6 + 64) >> 6;
  if (v14 < v15)
  {
    unint64_t v16 = *(void *)(v4 + 8 * v14);
    if (v16)
    {
LABEL_7:
      uint64_t v9 = (v16 - 1) & v16;
      unint64_t v10 = __clz(__rbit64(v16)) + (v14 << 6);
      int64_t v7 = v14;
      goto LABEL_3;
    }
    int64_t v17 = v5 + 2;
    int64_t v7 = v5 + 1;
    if (v5 + 2 < v15)
    {
      unint64_t v16 = *(void *)(v4 + 8 * v17);
      if (v16)
      {
LABEL_10:
        int64_t v14 = v17;
        goto LABEL_7;
      }
      int64_t v7 = v5 + 2;
      if (v5 + 3 < v15)
      {
        unint64_t v16 = *(void *)(v4 + 8 * (v5 + 3));
        if (v16)
        {
          int64_t v14 = v5 + 3;
          goto LABEL_7;
        }
        int64_t v17 = v5 + 4;
        int64_t v7 = v5 + 3;
        if (v5 + 4 < v15)
        {
          unint64_t v16 = *(void *)(v4 + 8 * v17);
          if (v16) {
            goto LABEL_10;
          }
          int64_t v14 = v5 + 5;
          int64_t v7 = v5 + 4;
          if (v5 + 5 < v15)
          {
            unint64_t v16 = *(void *)(v4 + 8 * v14);
            if (v16) {
              goto LABEL_7;
            }
            int64_t v7 = v15 - 1;
            int64_t v18 = v5 + 6;
            while (v15 != v18)
            {
              unint64_t v16 = *(void *)(v4 + 8 * v18++);
              if (v16)
              {
                int64_t v14 = v18 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v9 = 0;
  memset(v24, 0, sizeof(v24));
  long long v23 = 0u;
LABEL_23:
  *uint64_t v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  uint64_t v19 = (void (*)(_OWORD *))v1[5];
  uint64_t result = sub_190B5ABB4((uint64_t)&v23, (uint64_t)v22);
  if (*((void *)&v22[0] + 1))
  {
    v21[0] = v22[0];
    v21[1] = v22[1];
    v21[2] = v22[2];
    v19(v21);
    return sub_190B23144((uint64_t)v21, &qword_1E92A3D18);
  }
  else
  {
    a1[1] = 0u;
    a1[2] = 0u;
    *a1 = 0u;
  }
  return result;
}

uint64_t sub_190B5ABB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3D20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_190B5AC1C(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_190B778A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_190B778A8();
    swift_bridgeObjectRelease();
    uint64_t v6 = v5 + v3;
    if (!__OFADD__(v5, v3)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v4 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v4;
  uint64_t v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v5 = 1;
  }
  if (v4 >> 62) {
    goto LABEL_27;
  }
  uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6) {
      uint64_t v9 = v6;
    }
    swift_bridgeObjectRetain();
    unint64_t v4 = MEMORY[0x192FD1FC0](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *uint64_t v1 = v4;
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = sub_190B5CB38(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_190B778A8();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();

  return sub_190B772E8();
}

uint64_t sub_190B5ADE8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_190B4905C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[4 * v8 + 4];
  if (a1 + 32 < v9 + 32 * v2 && v9 < a1 + 32 + 32 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_190B778F8();
  __break(1u);
  return result;
}

uint64_t sub_190B5AF40(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_190B778A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_190B778A8();
    swift_bridgeObjectRelease();
    uint64_t v6 = v5 + v3;
    if (!__OFADD__(v5, v3)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v4 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v4;
  uint64_t v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v5 = 1;
  }
  if (v4 >> 62) {
    goto LABEL_27;
  }
  uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6) {
      uint64_t v9 = v6;
    }
    swift_bridgeObjectRetain();
    unint64_t v4 = MEMORY[0x192FD1FC0](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *uint64_t v1 = v4;
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = sub_190B5CD58(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_190B778A8();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();

  return sub_190B772E8();
}

uint64_t sub_190B5B10C(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_190B4916C(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[v9 + 4];
  if (a1 + 32 < v10 + 8 * v8 && v10 < a1 + 32 + 8 * v8) {
    goto LABEL_24;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3D40);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_190B778F8();
  __break(1u);
  return result;
}

uint64_t sub_190B5B27C(unint64_t a1)
{
  return sub_190B5B400(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_190B5CF6C);
}

uint64_t sub_190B5B294(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_190B49180(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_190B778F8();
  __break(1u);
  return result;
}

uint64_t sub_190B5B3E8(unint64_t a1)
{
  return sub_190B5B400(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_190B5D18C);
}

uint64_t sub_190B5B400(unint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_190B778A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_190B778A8();
    swift_bridgeObjectRelease();
    uint64_t v8 = v7 + v5;
    if (!__OFADD__(v7, v5)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 + v5;
  if (__OFADD__(v7, v5)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v6 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v2 = v6;
  uint64_t v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v7 = 1;
  }
  if (v6 >> 62) {
    goto LABEL_27;
  }
  uint64_t v11 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8) {
      uint64_t v11 = v8;
    }
    swift_bridgeObjectRetain();
    unint64_t v6 = MEMORY[0x192FD1FC0](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    *uint64_t v2 = v6;
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = a2(v10 + 8 * *(void *)(v10 + 16) + 32, (*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16), a1);
    if (v13 >= v5) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_190B778A8();
    swift_bridgeObjectRelease();
  }
  if (v13 >= 1)
  {
    uint64_t v14 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v15 = __OFADD__(v14, v13);
    uint64_t v16 = v14 + v13;
    if (v15)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
  }
  swift_bridgeObjectRelease();

  return sub_190B772E8();
}

id CNContactStore.contacts(request:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = v2;
  *(void *)(a2 + _Block_object_dispose(&STACK[0x228], 8) = a1;
  *(void *)(a2 + 16) = MEMORY[0x1E4FBC860];
  *(unsigned char *)(a2 + 24) = 0;
  id v3 = v2;

  return a1;
}

void __swiftcall CNContactStore.FetchedContactsSequence.next()(CNContact_optional *__return_ptr retstr)
{
  if ((*(unsigned char *)(v1 + 24) & 1) == 0) {
    sub_190B5B74C();
  }
  unint64_t v2 = *(void *)(v1 + 16);
  unint64_t v3 = v2 >> 62;
  if (!(v2 >> 62))
  {
    if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_190B778A8();
  swift_bridgeObjectRelease();
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_190B778A8();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_5:
      if ((v2 & 0xC000000000000001) == 0)
      {
        if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_18:
          __break(1u);
          goto LABEL_19;
        }
        *(id *)(v2 + 32);
        if (!v3) {
          goto LABEL_8;
        }
        goto LABEL_14;
      }
LABEL_13:
      MEMORY[0x192FD1FB0](0, v2);
      if (!v3)
      {
LABEL_8:
        uint64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_15;
      }
LABEL_14:
      swift_bridgeObjectRetain();
      uint64_t v4 = sub_190B778A8();
      swift_bridgeObjectRelease();
LABEL_15:
      if (v4)
      {
        sub_190B5D3AC(0, 1);
        return;
      }
      goto LABEL_18;
    }
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
LABEL_19:
  __break(1u);
}

uint64_t sub_190B5B74C()
{
  uint64_t v1 = v0;
  v13[1] = *MEMORY[0x1E4F143B8];
  v13[0] = MEMORY[0x1E4FBC860];
  unint64_t v2 = *(void **)v0;
  uint64_t v3 = *(void *)(v0 + 8);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v13;
  uint64_t v5 = (void *)swift_allocObject();
  uint64_t v5[2] = sub_190B5DE08;
  v5[3] = v4;
  aBlock[4] = sub_190B5DE1C;
  aBlock[5] = v5;
  aBlock[0] = (id)MEMORY[0x1E4F143A8];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_190B5BAD8;
  aBlock[3] = &block_descriptor_25;
  uint64_t v6 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  unsigned int v7 = objc_msgSend(v2, sel_enumerateContactsWithFetchRequest_error_usingBlock_, v3, aBlock, v6);
  _Block_release(v6);
  id v8 = aBlock[0];
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v6) {
    __break(1u);
  }
  if (!v7)
  {
    unint64_t v9 = (void *)sub_190B76D68();

    swift_willThrow();
  }
  unint64_t v10 = swift_bridgeObjectRetain();
  sub_190B5AC1C(v10);
  *(unsigned char *)(v1 + 24) = 1;
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_190B5B948()
{
  uint64_t v1 = *v0;
  unint64_t v2 = (unint64_t)*v0 >> 62;
  if (!v2)
  {
    if (*(void *)((*v0 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_190B778A8();
  swift_bridgeObjectRelease();
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_190B778A8();
    swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      if ((v1 & 0xC000000000000001) == 0)
      {
        if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_16:
          __break(1u);
          goto LABEL_17;
        }
        *(id *)(v1 + 32);
        if (!v2) {
          goto LABEL_6;
        }
        goto LABEL_12;
      }
LABEL_11:
      MEMORY[0x192FD1FB0](0, v1);
      if (!v2)
      {
LABEL_6:
        uint64_t v3 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_13;
      }
LABEL_12:
      swift_bridgeObjectRetain();
      uint64_t v3 = sub_190B778A8();
      swift_bridgeObjectRelease();
LABEL_13:
      if (v3)
      {
        sub_190B5D3AC(0, 1);
        return;
      }
      goto LABEL_16;
    }
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
LABEL_17:
  __break(1u);
}

uint64_t sub_190B5BA68(void *a1, uint64_t a2, void *a3)
{
  id v4 = a1;
  MEMORY[0x192FD1A90]();
  if (*(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_190B77308();
  }
  sub_190B77368();
  return sub_190B772E8();
}

void sub_190B5BAD8(uint64_t a1, void *a2)
{
  unint64_t v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

uint64_t CNContactStore.FetchedContactsSequence.first.getter()
{
  uint64_t v1 = *(void **)v0;
  unint64_t v2 = *(void **)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 24);
  unint64_t v9 = v1;
  id v4 = v1;
  id v5 = v2;
  swift_bridgeObjectRetain();
  if ((v3 & 1) == 0) {
    sub_190B5B74C();
  }
  sub_190B5B948();
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();

  return v7;
}

__n128 sub_190B5BBC0@<Q0>(__n128 *a1@<X8>)
{
  unint64_t v2 = v1[1].n128_u64[0];
  unsigned __int8 v3 = v1[1].n128_u8[8];
  __n128 result = *v1;
  *a1 = *v1;
  a1[1].n128_u64[0] = v2;
  a1[1].n128_u8[8] = v3;
  return result;
}

uint64_t sub_190B5BBDC()
{
  return 0;
}

uint64_t sub_190B5BBE4()
{
  return 2;
}

id sub_190B5BBEC()
{
  uint64_t v1 = *(void **)v0;
  unint64_t v2 = *(void **)(v0 + 8);
  id v3 = sub_190B5BED0(*(void **)v0, v2, *(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
  swift_bridgeObjectRelease();

  return v3;
}

uint64_t sub_190B5BC44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_190B5C2A4(a1, a2, a3, *(void **)v3, *(void *)(v3 + 8), *(void *)(v3 + 16), *(unsigned char *)(v3 + 24));
}

uint64_t sub_190B5BC54()
{
  return sub_190B77238();
}

void sub_190B5BC78(void *a1@<X8>)
{
  if ((*(unsigned char *)(v1 + 24) & 1) == 0) {
    sub_190B5B74C();
  }
  sub_190B5B948();
  *a1 = v3;
}

uint64_t sub_190B5BCB0(uint64_t a1, int64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_31;
  }
  unint64_t v5 = *v3;
  int64_t v6 = *(void *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  int64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v10 > *(void *)(v5 + 24) >> 1)
  {
    if (v6 <= v10) {
      int64_t v13 = v6 + v9;
    }
    else {
      int64_t v13 = v6;
    }
    unint64_t v5 = sub_190B494B0(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    *uint64_t v3 = v5;
  }
  uint64_t v14 = sub_190B76F98();
  uint64_t v15 = *(void *)(v14 - 8);
  unint64_t v16 = v5 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  uint64_t v17 = *(void *)(v15 + 72);
  unint64_t v18 = v16 + v17 * a1;
  swift_arrayDestroy();
  if (!v9) {
    goto LABEL_25;
  }
  uint64_t v19 = *(void *)(v5 + 16);
  uint64_t v20 = v19 - a2;
  if (__OFSUB__(v19, a2)) {
    goto LABEL_35;
  }
  if (v20 < 0)
  {
LABEL_37:
    uint64_t result = sub_190B778F8();
    __break(1u);
    return result;
  }
  unint64_t v21 = v18 + v17;
  unint64_t v22 = v16 + v17 * a2;
  if (v18 + v17 < v22 || v21 >= v22 + v20 * v17)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v21 != v22)
  {
    swift_arrayInitWithTakeBackToFront();
  }
  uint64_t v24 = *(void *)(v5 + 16);
  BOOL v25 = __OFADD__(v24, v9);
  uint64_t v26 = v24 + v9;
  if (v25)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  *(void *)(v5 + 16) = v26;
LABEL_25:
  if (v17 >= 1) {
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v15 + 16))(v18, a3, v14);
  }

  return sub_190B5D938(a3);
}

id sub_190B5BED0(void *a1, void *a2, unint64_t a3, char a4)
{
  uint64_t v42 = a1;
  uint64_t v43 = a2;
  unint64_t v44 = a3;
  char v45 = a4;
  id v6 = a1;
  id v7 = a2;
  id result = (id)swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v11 = (void *)(MEMORY[0x1E4FBC860] + 32);
  if (a4) {
    goto LABEL_6;
  }
  uint64_t v41 = MEMORY[0x1E4FBC860];
  BOOL v12 = v42;
  int64_t v13 = v43;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = &v41;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_190B5DE08;
  *(void *)(v15 + 24) = v14;
  _OWORD v40[2] = sub_190B5DE1C;
  v40[3] = v15;
  aBlock[0] = (id)MEMORY[0x1E4F143A8];
  aBlock[1] = (id)1107296256;
  v40[0] = sub_190B5BAD8;
  v40[1] = &block_descriptor_14;
  unint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  unsigned __int8 v17 = objc_msgSend(v12, sel_enumerateContactsWithFetchRequest_error_usingBlock_, v13, aBlock, v16, 0, v40);
  _Block_release(v16);
  id v18 = aBlock[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  id result = (id)swift_release();
  if (isEscapingClosureAtFileLocation) {
    goto LABEL_37;
  }
  if ((v17 & 1) == 0)
  {
    uint64_t v20 = (void *)sub_190B76D68();

    swift_willThrow();
  }
  unint64_t v21 = swift_bridgeObjectRetain();
  sub_190B5AC1C(v21);
  char v45 = 1;
  swift_release();
  id result = (id)swift_bridgeObjectRelease();
LABEL_6:
  while (1)
  {
    unint64_t v22 = v44;
    unint64_t v23 = v44 >> 62;
    if (!(v44 >> 62)) {
      break;
    }
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_190B778A8();
    id result = (id)swift_bridgeObjectRelease();
    if (!v25) {
      goto LABEL_40;
    }
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_190B778A8();
    id result = (id)swift_bridgeObjectRelease();
    if (!v26) {
      goto LABEL_34;
    }
LABEL_8:
    if ((v22 & 0xC000000000000001) != 0)
    {
      id result = (id)MEMORY[0x192FD1FB0](0, v22);
      id v24 = result;
      if (!v23) {
        goto LABEL_11;
      }
    }
    else
    {
      if (!*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_35;
      }
      id result = *(id *)(v22 + 32);
      id v24 = result;
      if (!v23)
      {
LABEL_11:
        if (!*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_38;
        }
        goto LABEL_18;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_190B778A8();
    id result = (id)swift_bridgeObjectRelease();
    if (!v27) {
      goto LABEL_38;
    }
LABEL_18:
    id result = (id)sub_190B5D3AC(0, 1);
    if (!v9)
    {
      unint64_t v28 = v10[3];
      if ((uint64_t)((v28 >> 1) + 0x4000000000000000) < 0) {
        goto LABEL_39;
      }
      int64_t v29 = v28 & 0xFFFFFFFFFFFFFFFELL;
      if (v29 <= 1) {
        uint64_t v30 = 1;
      }
      else {
        uint64_t v30 = v29;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3DD0);
      uint64_t v31 = (void *)swift_allocObject();
      int64_t v32 = _swift_stdlib_malloc_size(v31);
      uint64_t v33 = v32 - 32;
      if (v32 < 32) {
        uint64_t v33 = v32 - 25;
      }
      uint64_t v34 = v33 >> 3;
      id v31[2] = v30;
      v31[3] = (2 * (v33 >> 3)) | 1;
      unint64_t v35 = (unint64_t)(v31 + 4);
      uint64_t v36 = v10[3] >> 1;
      if (v10[2])
      {
        uint64_t v37 = v10 + 4;
        if (v31 != v10 || v35 >= (unint64_t)v37 + 8 * v36) {
          memmove(v31 + 4, v37, 8 * v36);
        }
        v10[2] = 0;
      }
      uint64_t v11 = (void *)(v35 + 8 * v36);
      uint64_t v9 = (v34 & 0x7FFFFFFFFFFFFFFFLL) - v36;
      id result = (id)swift_release();
      int64_t v10 = v31;
    }
    if (__OFSUB__(v9--, 1)) {
      goto LABEL_36;
    }
    *v11++ = v24;
  }
  if (*(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_8;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_190B5C2A4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, unint64_t a6, char a7)
{
  uint64_t v36 = *MEMORY[0x1E4F143B8];
  int64_t v32 = a4;
  uint64_t v33 = a5;
  unint64_t v34 = a6;
  char v7 = a7 & 1;
  char v35 = a7;
  if (!a2)
  {
    uint64_t v8 = 0;
    goto LABEL_25;
  }
  uint64_t v8 = a3;
  if (a3)
  {
    if (a3 < 0) {
      goto LABEL_31;
    }
    char v9 = a7;
    uint64_t v29 = a1;
    uint64_t v11 = 0;
    while (1)
    {
      if ((v9 & 1) == 0)
      {
        uint64_t v31 = MEMORY[0x1E4FBC860];
        BOOL v12 = v32;
        uint64_t v13 = v33;
        uint64_t v14 = swift_allocObject();
        *(void *)(v14 + 16) = &v31;
        uint64_t v15 = (void *)swift_allocObject();
        v15[2] = sub_190B5D9A8;
        v15[3] = v14;
        aBlock[4] = sub_190B5D9C0;
        aBlock[5] = v15;
        aBlock[0] = (id)MEMORY[0x1E4F143A8];
        aBlock[1] = (id)1107296256;
        id aBlock[2] = sub_190B5BAD8;
        aBlock[3] = &block_descriptor_2;
        unint64_t v16 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        aBlock[0] = 0;
        unsigned __int8 v17 = objc_msgSend(v12, sel_enumerateContactsWithFetchRequest_error_usingBlock_, v13, aBlock, v16);
        _Block_release(v16);
        id v18 = aBlock[0];
        char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if (isEscapingClosureAtFileLocation) {
          goto LABEL_29;
        }
        if ((v17 & 1) == 0)
        {
          uint64_t v20 = (void *)sub_190B76D68();

          swift_willThrow();
        }
        unint64_t v21 = swift_bridgeObjectRetain();
        sub_190B5AC1C(v21);
        char v35 = 1;
        swift_release();
        swift_bridgeObjectRelease();
      }
      unint64_t v22 = v34;
      unint64_t v23 = v34 >> 62;
      if (v34 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v26 = sub_190B778A8();
        swift_bridgeObjectRelease();
        if (!v26) {
          goto LABEL_32;
        }
        swift_bridgeObjectRetain();
        uint64_t v27 = sub_190B778A8();
        swift_bridgeObjectRelease();
        if (!v27) {
          goto LABEL_27;
        }
      }
      else if (!*(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
      }
      if ((v22 & 0xC000000000000001) != 0)
      {
        id v24 = (id)MEMORY[0x192FD1FB0](0, v22);
        if (v23) {
          goto LABEL_20;
        }
      }
      else
      {
        if (!*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_28;
        }
        id v24 = *(id *)(v22 + 32);
        if (v23)
        {
LABEL_20:
          swift_bridgeObjectRetain();
          uint64_t v25 = sub_190B778A8();
          swift_bridgeObjectRelease();
          goto LABEL_21;
        }
      }
      uint64_t v25 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_21:
      if (!v25) {
        goto LABEL_30;
      }
      char v9 = 1;
      sub_190B5D3AC(0, 1);
      *(void *)(a2 + 8 * v11++) = v24;
      if (v8 == v11)
      {
        a4 = v32;
        a5 = v33;
        a6 = v34;
        char v7 = v35;
        a1 = v29;
        break;
      }
    }
  }
LABEL_25:
  *(void *)a1 = a4;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x228], 8) = a5;
  *(void *)(a1 + 16) = a6;
  *(unsigned char *)(a1 + 24) = v7;
  return v8;
}

uint64_t sub_190B5C62C(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *unint64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    id result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_190B5C82C(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = result;
  if ((a4 & 0xC000000000000001) == 0)
  {
    int64_t v10 = 0;
    uint64_t v20 = -1 << *(unsigned char *)(a4 + 32);
    uint64_t v8 = a4 + 56;
    uint64_t v9 = ~v20;
    uint64_t v21 = -v20;
    if (v21 < 64) {
      uint64_t v22 = ~(-1 << v21);
    }
    else {
      uint64_t v22 = -1;
    }
    unint64_t v11 = v22 & *(void *)(a4 + 56);
    id v24 = result;
    if (a2) {
      goto LABEL_3;
    }
LABEL_36:
    uint64_t v12 = 0;
    goto LABEL_46;
  }
  sub_190B776C8();
  sub_190B23474(0, (unint64_t *)&qword_1E92A3E20);
  sub_190B5DA20();
  id result = (void *)sub_190B77498();
  uint64_t v4 = v27;
  uint64_t v8 = v28;
  uint64_t v9 = v29;
  int64_t v10 = v30;
  unint64_t v11 = v31;
  id v24 = v7;
  if (!v6) {
    goto LABEL_36;
  }
LABEL_3:
  if (!a3)
  {
    uint64_t v12 = 0;
    goto LABEL_46;
  }
  if (a3 < 0) {
    goto LABEL_48;
  }
  uint64_t v12 = 0;
  int64_t v25 = (unint64_t)(v9 + 64) >> 6;
  uint64_t v23 = v9;
  while (1)
  {
    if (v4 < 0)
    {
      if (!sub_190B776F8()) {
        goto LABEL_45;
      }
      sub_190B23474(0, (unint64_t *)&qword_1E92A3E20);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      unint64_t v15 = v26;
      id result = (void *)swift_unknownObjectRelease();
      if (!v26) {
        goto LABEL_45;
      }
      goto LABEL_8;
    }
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_7;
    }
    int64_t v16 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
LABEL_48:
      __break(1u);
      return result;
    }
    if (v16 >= v25)
    {
      unint64_t v11 = 0;
      goto LABEL_45;
    }
    unint64_t v17 = *(void *)(v8 + 8 * v16);
    if (v17) {
      goto LABEL_23;
    }
    int64_t v18 = v10 + 2;
    if (v10 + 2 >= v25)
    {
      unint64_t v11 = 0;
      ++v10;
      goto LABEL_45;
    }
    unint64_t v17 = *(void *)(v8 + 8 * v18);
    if (!v17)
    {
      if (v10 + 3 >= v25) {
        goto LABEL_42;
      }
      unint64_t v17 = *(void *)(v8 + 8 * (v10 + 3));
      if (v17)
      {
        int64_t v16 = v10 + 3;
        goto LABEL_23;
      }
      int64_t v18 = v10 + 4;
      if (v10 + 4 >= v25)
      {
        unint64_t v11 = 0;
        v10 += 3;
        goto LABEL_45;
      }
      unint64_t v17 = *(void *)(v8 + 8 * v18);
      if (!v17) {
        break;
      }
    }
    int64_t v16 = v18;
LABEL_23:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v14 = __clz(__rbit64(v17)) + (v16 << 6);
    int64_t v10 = v16;
LABEL_7:
    id result = *(id *)(*(void *)(v4 + 48) + 8 * v14);
    unint64_t v15 = result;
    if (!result) {
      goto LABEL_45;
    }
LABEL_8:
    ++v12;
    *v6++ = v15;
    if (v12 == a3)
    {
      uint64_t v12 = a3;
LABEL_45:
      uint64_t v9 = v23;
      goto LABEL_46;
    }
  }
  int64_t v16 = v10 + 5;
  if (v10 + 5 >= v25)
  {
LABEL_42:
    unint64_t v11 = 0;
    int64_t v10 = v18;
    goto LABEL_45;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v16);
  if (v17) {
    goto LABEL_23;
  }
  int64_t v19 = v10 + 6;
  while (v25 != v19)
  {
    unint64_t v17 = *(void *)(v8 + 8 * v19++);
    if (v17)
    {
      int64_t v16 = v19 - 1;
      goto LABEL_23;
    }
  }
  unint64_t v11 = 0;
  int64_t v10 = v25 - 1;
  uint64_t v9 = v23;
LABEL_46:
  void *v24 = v4;
  v24[1] = v8;
  _OWORD v24[2] = v9;
  v24[3] = v10;
  v24[4] = v11;
  return (void *)v12;
}

uint64_t sub_190B5CB38(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_190B778A8();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_190B778A8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_190B5DDB8((unint64_t *)&unk_1E92A5FF0, (uint64_t *)&unk_1E92A3E10);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92A3E10);
          uint64_t v12 = sub_190B2CF6C(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_190B23474(0, &qword_1E92A3E28);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_190B778F8();
  __break(1u);
  return result;
}

uint64_t sub_190B5CD58(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_190B778A8();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_190B778A8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_190B5DDB8((unint64_t *)&unk_1E92A6030, &qword_1E92A6028);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A6028);
          uint64_t v12 = sub_190B2CFD8(v16, i, a3);
          uint64_t v14 = *v13;
          swift_unknownObjectRetain();
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3D60);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_190B778F8();
  __break(1u);
  return result;
}

uint64_t sub_190B5CF6C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_190B778A8();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_190B778A8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_190B5DDB8((unint64_t *)&unk_1E92A6000, &qword_1E92A3D40);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3D40);
          uint64_t v12 = sub_190B2CF6C(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_190B23474(0, (unint64_t *)&qword_1E92A3E20);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_190B778F8();
  __break(1u);
  return result;
}

uint64_t sub_190B5D18C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_190B778A8();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_190B778A8();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_190B5DDB8(&qword_1E92A6018, &qword_1E92A6010);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A6010);
          uint64_t v12 = sub_190B2D040(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_190B23474(0, &qword_1E92A3D48);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_190B778F8();
  __break(1u);
  return result;
}

uint64_t sub_190B5D3AC(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    if (!(*v3 >> 62))
    {
      if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_190B778A8();
  swift_bridgeObjectRelease();
  if (v21 < v2) {
    goto LABEL_33;
  }
LABEL_4:
  uint64_t v6 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v5 = v4 - v2;
  if (__OFSUB__(0, v6))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_190B778A8();
    swift_bridgeObjectRelease();
    uint64_t v8 = v7 + v5;
    if (!__OFADD__(v7, v5)) {
      goto LABEL_8;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_190B778A8();
    swift_bridgeObjectRelease();
    unint64_t v9 = *v3;
    goto LABEL_15;
  }
  if (*v3 >> 62) {
    goto LABEL_36;
  }
  uint64_t v7 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 - v6;
  if (__OFADD__(v7, v5)) {
    goto LABEL_38;
  }
LABEL_8:
  unint64_t v9 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v3 = v9;
  uint64_t v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v9 & 0x8000000000000000) == 0 && (v9 & 0x4000000000000000) == 0)
  {
    uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v7 = 1;
  }
  if (v9 >> 62) {
    goto LABEL_39;
  }
  uint64_t v12 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v8) {
    uint64_t v12 = v8;
  }
  swift_bridgeObjectRetain();
  *uint64_t v3 = MEMORY[0x192FD1FC0](v7, v12, 1, v9);
  swift_bridgeObjectRelease();
  uint64_t v11 = *v3 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  uint64_t v13 = v11 + 32;
  id v14 = (char *)(v11 + 32 + 8 * v4);
  sub_190B23474(0, &qword_1E92A3E28);
  swift_arrayDestroy();
  if (v5)
  {
    if (*v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_190B778A8();
      swift_bridgeObjectRelease();
      uint64_t v16 = v22 - v2;
      if (!__OFSUB__(v22, v2))
      {
LABEL_21:
        if (v16 < 0)
        {
LABEL_46:
          uint64_t result = sub_190B778F8();
          __break(1u);
          return result;
        }
        unint64_t v17 = (char *)(v13 + 8 * v2);
        if (v4 != v2 || v14 >= &v17[8 * v16]) {
          memmove(v14, v17, 8 * v16);
        }
        if (!(*v3 >> 62))
        {
          uint64_t v18 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
          uint64_t v19 = v18 + v5;
          if (!__OFADD__(v18, v5))
          {
LABEL_27:
            *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) = v19;
            goto LABEL_28;
          }
          goto LABEL_45;
        }
LABEL_43:
        swift_bridgeObjectRetain();
        uint64_t v23 = sub_190B778A8();
        swift_bridgeObjectRelease();
        uint64_t v19 = v23 + v5;
        if (!__OFADD__(v23, v5)) {
          goto LABEL_27;
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v15 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v16 = v15 - v2;
      if (!__OFSUB__(v15, v2)) {
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
LABEL_28:

  return sub_190B772E8();
}

unint64_t sub_190B5D6CC()
{
  unint64_t result = qword_1E92A5FE0;
  if (!qword_1E92A5FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92A5FE0);
  }
  return result;
}

uint64_t _s23FetchedContactsSequenceVwxx(id *a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t _s23FetchedContactsSequenceVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x228], 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  id v5 = v3;
  id v6 = v4;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s23FetchedContactsSequenceVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + _Block_object_dispose(&STACK[0x228], 8) = v7;
  id v9 = v7;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s23FetchedContactsSequenceVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t _s23FetchedContactsSequenceVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s23FetchedContactsSequenceVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + _Block_object_dispose(&STACK[0x228], 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CNContactStore.FetchedContactsSequence()
{
  return &type metadata for CNContactStore.FetchedContactsSequence;
}

uint64_t sub_190B5D938(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3C18);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_190B5D998()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_190B5D9A8(void *a1, uint64_t a2)
{
  return sub_190B5BA68(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_190B5D9B0()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_190B5D9C0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_190B5DA00()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_190B5DA10()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

unint64_t sub_190B5DA20()
{
  unint64_t result = qword_1E92A6020;
  if (!qword_1E92A6020)
  {
    sub_190B23474(255, (unint64_t *)&qword_1E92A3E20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92A6020);
  }
  return result;
}

uint64_t sub_190B5DA88()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_190B5DA98()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_190B5DAA8(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    if (!(*v3 >> 62))
    {
      if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_190B778A8();
  swift_bridgeObjectRelease();
  if (v21 < v2) {
    goto LABEL_33;
  }
LABEL_4:
  uint64_t v6 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v5 = v4 - v2;
  if (__OFSUB__(0, v6))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_190B778A8();
    swift_bridgeObjectRelease();
    uint64_t v8 = v7 + v5;
    if (!__OFADD__(v7, v5)) {
      goto LABEL_8;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_190B778A8();
    swift_bridgeObjectRelease();
    unint64_t v9 = *v3;
    goto LABEL_15;
  }
  if (*v3 >> 62) {
    goto LABEL_36;
  }
  uint64_t v7 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 - v6;
  if (__OFADD__(v7, v5)) {
    goto LABEL_38;
  }
LABEL_8:
  unint64_t v9 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v3 = v9;
  uint64_t v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v9 & 0x8000000000000000) == 0 && (v9 & 0x4000000000000000) == 0)
  {
    uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v7 = 1;
  }
  if (v9 >> 62) {
    goto LABEL_39;
  }
  uint64_t v12 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v8) {
    uint64_t v12 = v8;
  }
  swift_bridgeObjectRetain();
  *uint64_t v3 = MEMORY[0x192FD1FC0](v7, v12, 1, v9);
  swift_bridgeObjectRelease();
  uint64_t v11 = *v3 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  uint64_t v13 = v11 + 32;
  id v14 = (char *)(v11 + 32 + 8 * v4);
  __swift_instantiateConcreteTypeFromMangledName(qword_1E92A5A78);
  swift_arrayDestroy();
  if (v5)
  {
    if (*v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_190B778A8();
      swift_bridgeObjectRelease();
      uint64_t v16 = v22 - v2;
      if (!__OFSUB__(v22, v2))
      {
LABEL_21:
        if (v16 < 0)
        {
LABEL_46:
          uint64_t result = sub_190B778F8();
          __break(1u);
          return result;
        }
        unint64_t v17 = (char *)(v13 + 8 * v2);
        if (v4 != v2 || v14 >= &v17[8 * v16]) {
          memmove(v14, v17, 8 * v16);
        }
        if (!(*v3 >> 62))
        {
          uint64_t v18 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
          uint64_t v19 = v18 + v5;
          if (!__OFADD__(v18, v5))
          {
LABEL_27:
            *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) = v19;
            goto LABEL_28;
          }
          goto LABEL_45;
        }
LABEL_43:
        swift_bridgeObjectRetain();
        uint64_t v23 = sub_190B778A8();
        swift_bridgeObjectRelease();
        uint64_t v19 = v23 + v5;
        if (!__OFADD__(v23, v5)) {
          goto LABEL_27;
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v15 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v16 = v15 - v2;
      if (!__OFSUB__(v15, v2)) {
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
LABEL_28:

  return sub_190B772E8();
}

uint64_t sub_190B5DDB8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static DuplicateCohortRanker.preferredCohort<A>(for:contactStore:)(uint64_t a1, void *a2)
{
  sub_190B5E0FC(a2);
  sub_190B773A8();
  swift_getWitnessTable();
  sub_190B77248();
  swift_bridgeObjectRelease();
  uint64_t result = v3;
  if (!v3)
  {
    swift_getWitnessTable();
    sub_190B77528();
    return a1;
  }
  return result;
}

uint64_t sub_190B5DF14()
{
  uint64_t v0 = sub_190B76FC8();
  __swift_allocate_value_buffer(v0, qword_1E92A6040);
  __swift_project_value_buffer(v0, (uint64_t)qword_1E92A6040);
  return sub_190B76FB8();
}

uint64_t sub_190B5DF98(id *a1, void *a2)
{
  id v3 = objc_msgSend(*a1, sel_identifier);
  uint64_t v4 = sub_190B77168();
  uint64_t v6 = v5;

  LOBYTE(a2) = sub_190B55160(v4, v6, a2);
  swift_bridgeObjectRelease();
  return a2 & 1;
}

id DuplicateCohortRanker.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id DuplicateCohortRanker.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DuplicateCohortRanker();
  return objc_msgSendSuper2(&v2, sel_init);
}

id DuplicateCohortRanker.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DuplicateCohortRanker();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_190B5E0FC(void *a1)
{
  v18[1] = *(id *)MEMORY[0x1E4F143B8];
  v18[0] = 0;
  id v1 = objc_msgSend(a1, sel_meContactIdentifiers_, v18);
  id v2 = v18[0];
  if (v1)
  {
    id v3 = v1;
    uint64_t v4 = sub_190B772C8();
    id v5 = v2;
  }
  else
  {
    id v6 = v18[0];
    uint64_t v7 = (void *)sub_190B76D68();

    swift_willThrow();
    if (qword_1E92A5858 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_190B76FC8();
    __swift_project_value_buffer(v8, (uint64_t)qword_1E92A6040);
    id v9 = v7;
    id v10 = v7;
    uint64_t v11 = sub_190B76FA8();
    os_log_type_t v12 = sub_190B77568();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      id v14 = (void *)swift_slowAlloc();
      v18[0] = v14;
      *(_DWORD *)uint64_t v13 = 136315138;
      swift_getErrorValue();
      uint64_t v15 = sub_190B77A08();
      sub_190B21150(v15, v16, (uint64_t *)v18);
      sub_190B77648();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1909E3000, v11, v12, "Could not fetch Me contact from store: %s", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FD42A0](v14, -1, -1);
      MEMORY[0x192FD42A0](v13, -1, -1);
    }
    else
    {
    }
    return MEMORY[0x1E4FBC860];
  }
  return v4;
}

uint64_t sub_190B5E360(id *a1)
{
  return sub_190B5DF98(a1, *(void **)(v1 + 24)) & 1;
}

uint64_t type metadata accessor for DuplicateCohortRanker()
{
  return self;
}

unint64_t static CNContactProviderSupportExtensionPoint.identifier.getter()
{
  return 0xD000000000000024;
}

ValueMetadata *type metadata accessor for CNContactProviderSupportExtensionPoint()
{
  return &type metadata for CNContactProviderSupportExtensionPoint;
}

id sub_190B5E3D0()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v1 = (void *)sub_190B77158();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

id CNDuplicateSetContactImage.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id CNDuplicateSetContactImage.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for CNDuplicateSetContactImage();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for CNDuplicateSetContactImage()
{
  return self;
}

id CNDuplicateSetContactImage.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CNDuplicateSetContactImage();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_190B5E5A8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for CNDuplicateSetContactImage();
  uint64_t result = sub_190B777A8();
  *a1 = result;
  return result;
}

void sub_190B5E5E8(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_190B5E608(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_fullscreenImageData()
{
  return sel_fullscreenImageData;
}

void sub_190B5E634(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_190B5E654(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_190B5E674(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_190B5E694(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_imageHash()
{
  return sel_imageHash;
}

void sub_190B5E6C0(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_190B5E6E0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_imageType()
{
  return sel_imageType;
}

void sub_190B5E70C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_190B5E72C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_memojiMetadata()
{
  return sel_memojiMetadata;
}

void sub_190B5E758(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_190B5E778(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_thumbnailImageData()
{
  return sel_thumbnailImageData;
}

void sub_190B5E7A4(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_190B5E7C4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id sub_190B5E7E4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_duplicateSet);
  *a2 = result;
  return result;
}

id sub_190B5E820(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setDuplicateSet_, *a1);
}

uint64_t method lookup function for CNDuplicateSetContactImage(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CNDuplicateSetContactImage);
}

uint64_t dispatch thunk of static CNDuplicateSetContactImage.fetchRequest()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t static DuplicateContactsModerator.combinePotentialDuplicatesWithCommonHandles<A>(potentialDuplicates:groupedBy:)()
{
  sub_190B773A8();
  sub_190B77028();
  sub_190B773A8();
  swift_getWitnessTable();
  sub_190B77268();
  return v1;
}

uint64_t static DuplicateContactsModerator.groupByCommonHandles<A>(contacts:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = MEMORY[0x192FD1B60]();
  if (v4 < 2)
  {
    sub_190B773A8();
    return sub_190B77348();
  }
  else
  {
    uint64_t v21 = a1;
    MEMORY[0x1F4188790](v4);
    uint64_t v18 = a2;
    uint64_t v5 = sub_190B773A8();
    uint64_t v6 = type metadata accessor for DuplicateHandleSet();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v9 = sub_190B23E68((void (*)(char *, char *))sub_190B606C0, (uint64_t)v17, v5, v6, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v8);
    uint64_t v10 = MEMORY[0x192FD1B60](v9, v6);
    if (v10)
    {
      do
      {
        uint64_t v11 = MEMORY[0x192FD1B60](v9, v6);
        uint64_t v20 = v9;
        uint64_t v19 = sub_190B77028();
        MEMORY[0x1F4188790](v19);
        uint64_t v18 = a2;
        sub_190B773A8();
        swift_getWitnessTable();
        sub_190B77268();
        swift_bridgeObjectRelease();
        uint64_t v9 = v21;
        uint64_t v10 = MEMORY[0x192FD1B60](v21, v6);
      }
      while (v11 != v10);
    }
    uint64_t v21 = v9;
    MEMORY[0x1F4188790](v10);
    uint64_t v18 = a2;
    uint64_t v12 = sub_190B773A8();
    swift_getWitnessTable();
    uint64_t v21 = sub_190B777F8();
    MEMORY[0x1F4188790](v21);
    uint64_t v18 = a2;
    uint64_t v13 = swift_getWitnessTable();
    uint64_t v15 = sub_190B23E68((void (*)(char *, char *))sub_190B6075C, (uint64_t)v17, v12, v5, MEMORY[0x1E4FBC248], v13, MEMORY[0x1E4FBC278], v14);
    swift_bridgeObjectRelease();
  }
  return v15;
}

void DuplicateHandleSet.init(contact:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  swift_getWitnessTable();
  sub_190B77038();
  sub_190B6077C(a2, a2);
  swift_allocObject();
  sub_190B772F8();
  *uint64_t v6 = a1;
  sub_190B773A8();
  id v7 = a1;
  swift_getWitnessTable();
  uint64_t v8 = sub_190B774D8();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v9 = v7;
  uint64_t v10 = sub_190B5FEFC();
  swift_bridgeObjectRelease();

  *a3 = v8;
  a3[1] = v10;
}

uint64_t sub_190B5ED6C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v7 = type metadata accessor for DuplicateHandleSet();
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = MEMORY[0x192FD1B60](v8, v7);
  uint64_t result = swift_bridgeObjectRelease();
  if (v9 < 0)
  {
    __break(1u);
  }
  else
  {
    MEMORY[0x1F4188790](result);
    _OWORD v12[2] = a3;
    uint64_t v12[3] = a1;
    v12[4] = v6;
    v12[5] = v5;
    uint64_t result = sub_190B646BC((uint64_t)sub_190B60A18, (uint64_t)v12, 0, v9);
    if (v11)
    {
      v12[6] = v6;
      v12[7] = v5;
      sub_190B773A8();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return sub_190B77398();
    }
  }
  return result;
}

uint64_t sub_190B5EE80(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = *a1;
  v7[0] = a3;
  v7[1] = a4;
  type metadata accessor for DuplicateHandleSet();
  sub_190B773A8();
  sub_190B77338();
  sub_190B609C4(v5, *a2);
  return DuplicateHandleSet.add(_:)((uint64_t)v7) & 1;
}

uint64_t DuplicateHandleSet.add(_:)(uint64_t a1)
{
  if (!*(void *)(*(void *)(a1 + 8) + 16) || (sub_190B602A4(*(void *)(a1 + 8), *(void *)(v1 + 8)) & 1) != 0) {
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_190B774C8();
  swift_getWitnessTable();
  sub_190B774B8();
  uint64_t v3 = swift_bridgeObjectRetain();
  sub_190B5FA38(v3);
  return 1;
}

BOOL sub_190B5EFF4()
{
  return sub_190B77488() > 1;
}

BOOL DuplicateHandleSet.isValid.getter()
{
  return sub_190B77488() > 1;
}

uint64_t sub_190B5F0BC@<X0>(uint64_t *a1@<X8>)
{
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_190B774C8();
  swift_getWitnessTable();
  uint64_t result = sub_190B773B8();
  *a1 = result;
  return result;
}

uint64_t sub_190B5F168(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *a2;
  uint64_t result = MEMORY[0x192FD1B60](*a2, a5);
  if (result >= 2)
  {
    uint64_t v12 = result;
    uint64_t v29 = a1;
    uint64_t v33 = v10;
    MEMORY[0x1F4188790](result);
    v25[0] = a5;
    v25[1] = a3;
    uint64_t v26 = a4;
    uint64_t v13 = sub_190B773A8();
    swift_bridgeObjectRetain();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v15 = sub_190B77098();
    uint64_t v30 = v5;
    if (sub_190B77068() == 1)
    {
LABEL_6:
      swift_bridgeObjectRelease();
      uint64_t v33 = v10;
      sub_190B773A8();
      swift_bridgeObjectRetain();
      return sub_190B77398();
    }
    uint64_t v28 = WitnessTable;
    type metadata accessor for DuplicateContactsModerator();
    static DuplicateContactsModerator.groupByCommonHandles<A>(contacts:)(v10, a5);
    if (MEMORY[0x192FD1B60]() == 1)
    {
      sub_190B773C8();
      uint64_t v16 = MEMORY[0x192FD1B60](v33, a5);
      swift_bridgeObjectRelease();
      if (v16 == v12)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    uint64_t v17 = nullsub_1(v15, MEMORY[0x1E4FBB960], v13, MEMORY[0x1E4FBB968]);
    swift_bridgeObjectRetain();
    uint64_t v18 = swift_bridgeObjectRelease();
    uint64_t v33 = v17;
    MEMORY[0x1F4188790](v18);
    uint64_t v26 = a5;
    sub_190B77078();
    swift_getWitnessTable();
    sub_190B77258();
    uint64_t v19 = sub_190B77328();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (MEMORY[0x192FD1B60](v19, v13))
    {
      uint64_t v32 = v10;
      swift_getWitnessTable();
      sub_190B774C8();
      uint64_t v31 = sub_190B77028();
      MEMORY[0x1F4188790](v31);
      uint64_t v27 = v19;
      uint64_t v20 = sub_190B773A8();
      sub_190B77268();
      uint64_t v21 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v21);
      uint64_t v26 = a5;
      uint64_t v22 = swift_getWitnessTable();
      uint64_t v24 = sub_190B23E68((void (*)(char *, char *))sub_190B6075C, (uint64_t)v25, v20, v13, MEMORY[0x1E4FBC248], v22, MEMORY[0x1E4FBC278], v23);
      swift_bridgeObjectRelease();
      uint64_t v33 = v24;
      sub_190B773A8();
      swift_getWitnessTable();
      return sub_190B77388();
    }
    else
    {
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_190B5F608(uint64_t a1, uint64_t *a2)
{
  return sub_190B5F168(a1, a2, v2[3], v2[4], v2[2]);
}

uint64_t sub_190B5F628(uint64_t *a1)
{
  sub_190B773A8();
  sub_190B773A8();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_190B777F8();
  swift_getWitnessTable();
  swift_getWitnessTable();
  unint64_t v1 = sub_190B77278();
  swift_bridgeObjectRelease();
  swift_getWitnessTable();
  sub_190B774D8();
  sub_190B774C8();
  sub_190B773A8();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_190B77518();
  swift_bridgeObjectRelease();
  if (v4 == 1) {
    return sub_190B77398();
  }
  sub_190B77338();
  sub_190B609C4(v1, *a1);
  swift_getWitnessTable();
  return sub_190B774B8();
}

uint64_t sub_190B5F8DC()
{
  return sub_190B77298() & 1;
}

uint64_t sub_190B5F984@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  v9[5] = *a1;
  v9[2] = a2;
  uint64_t v5 = sub_190B773A8();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t result = sub_190B23E68((void (*)(char *, char *))sub_190B60B38, (uint64_t)v9, v5, a2, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v7);
  *a3 = result;
  return result;
}

uint64_t sub_190B5FA38(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v13 >= v7) {
      goto LABEL_23;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v13);
    ++v2;
    if (!v14)
    {
      int64_t v2 = v13 + 1;
      if (v13 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v14 = *(void *)(v3 + 8 * v2);
      if (!v14)
      {
        int64_t v2 = v13 + 2;
        if (v13 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        if (!v14)
        {
          int64_t v2 = v13 + 3;
          if (v13 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v14 = *(void *)(v3 + 8 * v2);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v9 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    uint64_t v10 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v9);
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    swift_bridgeObjectRetain();
    sub_190B68868(&v16, v11, v12);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v15 = v13 + 4;
  if (v15 < v7)
  {
    unint64_t v14 = *(void *)(v3 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v2 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        ++v15;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v15;
    goto LABEL_22;
  }
LABEL_23:

  return swift_release();
}

void sub_190B5FBB8(unint64_t a1)
{
  unint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    sub_190B776C8();
    sub_190B4E814();
    sub_190B5DA20();
    sub_190B77498();
    unint64_t v1 = (unint64_t)v17[1];
    uint64_t v16 = v17[2];
    uint64_t v2 = (uint64_t)v17[3];
    id v3 = v17[4];
    unint64_t v4 = (unint64_t)v17[5];
  }
  else
  {
    id v3 = 0;
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v16 = (void *)(a1 + 56);
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
  }
  int64_t v8 = (unint64_t)(v2 + 64) >> 6;
  if ((v1 & 0x8000000000000000) != 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v4)
    {
      uint64_t v9 = (v4 - 1) & v4;
      unint64_t v10 = __clz(__rbit64(v4)) | ((void)v3 << 6);
      uint64_t v11 = (char *)v3;
      goto LABEL_29;
    }
    uint64_t v13 = (uint64_t)v3 + 1;
    if (__OFADD__(v3, 1)) {
      break;
    }
    if (v13 >= v8) {
      goto LABEL_32;
    }
    unint64_t v14 = v16[v13];
    uint64_t v11 = (char *)v3 + 1;
    if (!v14)
    {
      uint64_t v11 = (char *)v3 + 2;
      if ((uint64_t)v3 + 2 >= v8) {
        goto LABEL_32;
      }
      unint64_t v14 = v16[(void)v11];
      if (!v14)
      {
        uint64_t v11 = (char *)v3 + 3;
        if ((uint64_t)v3 + 3 >= v8) {
          goto LABEL_32;
        }
        unint64_t v14 = v16[(void)v11];
        if (!v14)
        {
          uint64_t v11 = (char *)v3 + 4;
          if ((uint64_t)v3 + 4 >= v8) {
            goto LABEL_32;
          }
          unint64_t v14 = v16[(void)v11];
          if (!v14)
          {
            uint64_t v11 = (char *)v3 + 5;
            if ((uint64_t)v3 + 5 >= v8) {
              goto LABEL_32;
            }
            unint64_t v14 = v16[(void)v11];
            if (!v14)
            {
              int64_t v15 = (char *)v3 + 6;
              while ((char *)v8 != v15)
              {
                unint64_t v14 = v16[(void)v15++];
                if (v14)
                {
                  uint64_t v11 = v15 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_190B23408();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v9 = (v14 - 1) & v14;
    unint64_t v10 = __clz(__rbit64(v14)) + ((void)v11 << 6);
LABEL_29:
    id v12 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
    if (!v12) {
      goto LABEL_32;
    }
    while (1)
    {
      sub_190B68A18(v17, v12);

      id v3 = v11;
      unint64_t v4 = v9;
      if ((v1 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (sub_190B776F8())
      {
        sub_190B4E814();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v12 = v17[0];
        swift_unknownObjectRelease();
        uint64_t v11 = (char *)v3;
        uint64_t v9 = v4;
        if (v12) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

uint64_t DuplicateContactsModerator.deinit()
{
  return v0;
}

uint64_t DuplicateContactsModerator.__deallocating_deinit()
{
  return MEMORY[0x1F4186488](v0, 16, 7);
}

uint64_t DuplicateHandleSet.contacts.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DuplicateHandleSet.contacts.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v1 = a1;
  return result;
}

uint64_t (*DuplicateHandleSet.contacts.modify())()
{
  return nullsub_1;
}

uint64_t DuplicateHandleSet.handles.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DuplicateHandleSet.handles.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + _Block_object_dispose(&STACK[0x228], 8) = a1;
  return result;
}

uint64_t (*DuplicateHandleSet.handles.modify())()
{
  return nullsub_1;
}

uint64_t sub_190B5FEFC()
{
  id v1 = objc_msgSend(v0, sel_phoneNumbers);
  __swift_instantiateConcreteTypeFromMangledName(qword_1E92A5A78);
  unint64_t v2 = sub_190B772C8();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_190B778A8();
    uint64_t v3 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_17:
    uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_18;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v3) {
    goto LABEL_17;
  }
LABEL_3:
  if (v3 < 1)
  {
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v5 = 0;
  uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    if ((v2 & 0xC000000000000001) != 0) {
      id v7 = (id)MEMORY[0x192FD1FB0](v5, v2);
    }
    else {
      id v7 = *(id *)(v2 + 8 * v5 + 32);
    }
    int64_t v8 = v7;
    id v9 = objc_msgSend(v7, sel_value);
    id v10 = objc_msgSend(v9, sel_unformattedInternationalStringValue);

    if (v10)
    {
      uint64_t v11 = sub_190B77168();
      uint64_t v13 = v12;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v6 = sub_190B49180(0, v6[2] + 1, 1, v6);
      }
      unint64_t v15 = v6[2];
      unint64_t v14 = v6[3];
      if (v15 >= v14 >> 1) {
        uint64_t v6 = sub_190B49180((void *)(v14 > 1), v15 + 1, 1, v6);
      }
      v6[2] = v15 + 1;
      uint64_t v16 = &v6[2 * v15];
      v16[4] = v11;
      v16[5] = v13;
    }
    else
    {
    }
    ++v5;
  }
  while (v3 != v5);
LABEL_18:
  swift_bridgeObjectRelease_n();
  id v17 = objc_msgSend(v33, sel_emailAddresses);
  unint64_t v18 = sub_190B772C8();

  if (!(v18 >> 62))
  {
    uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v19) {
      goto LABEL_20;
    }
LABEL_34:
    uint64_t v21 = (void *)MEMORY[0x1E4FBC860];
LABEL_35:
    swift_bridgeObjectRelease_n();
    sub_190B5B294((uint64_t)v21);
    uint64_t v32 = sub_190B6AE04((uint64_t)v6);
    swift_bridgeObjectRelease();
    return v32;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_190B778A8();
  uint64_t v19 = result;
  if (!result) {
    goto LABEL_34;
  }
LABEL_20:
  if (v19 >= 1)
  {
    uint64_t v20 = 0;
    uint64_t v21 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      if ((v18 & 0xC000000000000001) != 0) {
        id v22 = (id)MEMORY[0x192FD1FB0](v20, v18);
      }
      else {
        id v22 = *(id *)(v18 + 8 * v20 + 32);
      }
      uint64_t v23 = v22;
      id v24 = objc_msgSend(v22, sel_value);
      id v25 = objc_msgSend(v24, sel__cn_stringByNormalizingCase);

      if (v25)
      {
        uint64_t v26 = sub_190B77168();
        uint64_t v28 = v27;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v21 = sub_190B49180(0, v21[2] + 1, 1, v21);
        }
        unint64_t v30 = v21[2];
        unint64_t v29 = v21[3];
        if (v30 >= v29 >> 1) {
          uint64_t v21 = sub_190B49180((void *)(v29 > 1), v30 + 1, 1, v21);
        }
        v21[2] = v30 + 1;
        uint64_t v31 = &v21[2 * v30];
        uint64_t v31[4] = v26;
        v31[5] = v28;
      }
      else
      {
      }
      ++v20;
    }
    while (v19 != v20);
    goto LABEL_35;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_190B602A4(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 1;
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return 1;
  }
  if (v2 >= v3) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = a2;
  }
  if (v2 >= v3) {
    uint64_t v5 = a2;
  }
  else {
    uint64_t v5 = a1;
  }
  uint64_t v32 = v4;
  uint64_t v33 = v4 + 56;
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v4 + 56);
  int64_t v31 = (unint64_t)(63 - v6) >> 6;
  uint64_t v9 = v5 + 56;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  while (1)
  {
    while (1)
    {
      int64_t v12 = v11;
      if (!v8) {
        break;
      }
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      if (*(void *)(v5 + 16)) {
        goto LABEL_31;
      }
    }
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_50;
    }
    if (v15 >= v31) {
      goto LABEL_48;
    }
    unint64_t v16 = *(void *)(v33 + 8 * v15);
    ++v11;
    if (!v16)
    {
      int64_t v11 = v12 + 2;
      if (v12 + 2 >= v31) {
        goto LABEL_48;
      }
      unint64_t v16 = *(void *)(v33 + 8 * v11);
      if (!v16)
      {
        int64_t v11 = v12 + 3;
        if (v12 + 3 >= v31) {
          goto LABEL_48;
        }
        unint64_t v16 = *(void *)(v33 + 8 * v11);
        if (!v16) {
          break;
        }
      }
    }
LABEL_30:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    if (*(void *)(v5 + 16))
    {
LABEL_31:
      unint64_t v18 = (uint64_t *)(*(void *)(v32 + 48) + 16 * v14);
      uint64_t v20 = *v18;
      uint64_t v19 = v18[1];
      sub_190B77A58();
      swift_bridgeObjectRetain();
      sub_190B771D8();
      uint64_t v21 = sub_190B77A68();
      uint64_t v22 = -1 << *(unsigned char *)(v5 + 32);
      unint64_t v23 = v21 & ~v22;
      if ((*(void *)(v9 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23))
      {
        uint64_t v24 = *(void *)(v5 + 48);
        id v25 = (void *)(v24 + 16 * v23);
        BOOL v26 = *v25 == v20 && v25[1] == v19;
        if (v26 || (sub_190B77998() & 1) != 0)
        {
LABEL_44:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v30 = 0;
LABEL_45:
          sub_190B23408();
          return v30;
        }
        uint64_t v27 = ~v22;
        while (1)
        {
          unint64_t v23 = (v23 + 1) & v27;
          if (((*(void *)(v9 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
            break;
          }
          uint64_t v28 = (void *)(v24 + 16 * v23);
          BOOL v29 = *v28 == v20 && v28[1] == v19;
          if (v29 || (sub_190B77998() & 1) != 0) {
            goto LABEL_44;
          }
        }
      }
      uint64_t result = swift_bridgeObjectRelease();
    }
  }
  int64_t v17 = v12 + 4;
  if (v12 + 4 >= v31)
  {
LABEL_48:
    swift_bridgeObjectRelease();
    uint64_t v30 = 1;
    goto LABEL_45;
  }
  unint64_t v16 = *(void *)(v33 + 8 * v17);
  if (v16)
  {
    int64_t v11 = v12 + 4;
    goto LABEL_30;
  }
  while (1)
  {
    int64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_48;
    }
    unint64_t v16 = *(void *)(v33 + 8 * v11);
    ++v17;
    if (v16) {
      goto LABEL_30;
    }
  }
LABEL_50:
  __break(1u);
  return result;
}

uint64_t DuplicateHandleSet.debugDescription.getter()
{
  sub_190B77788();
  swift_getWitnessTable();
  sub_190B77488();
  uint64_t v0 = sub_190B77968();
  swift_bridgeObjectRelease();
  sub_190B771F8();
  sub_190B77968();
  sub_190B771F8();
  swift_bridgeObjectRelease();
  sub_190B771F8();
  return v0;
}

void sub_190B606C0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  DuplicateHandleSet.init(contact:)(*a1, *(void *)(v2 + 16), a2);
}

uint64_t type metadata accessor for DuplicateHandleSet()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_190B60720(uint64_t a1, uint64_t *a2)
{
  return sub_190B5ED6C(a1, a2, *(void *)(v2 + 16));
}

BOOL sub_190B6073C()
{
  return sub_190B5EFF4();
}

uint64_t sub_190B6075C@<X0>(uint64_t *a1@<X8>)
{
  return sub_190B5F0BC(a1);
}

uint64_t sub_190B6077C(uint64_t a1, uint64_t a2)
{
  if (swift_isClassType()) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v3)
  {
    return __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3DD0);
  }
  else
  {
    return MEMORY[0x1F4185768](0, a2);
  }
}

uint64_t type metadata accessor for DuplicateContactsModerator()
{
  return self;
}

uint64_t method lookup function for DuplicateContactsModerator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DuplicateContactsModerator);
}

uint64_t sub_190B6082C()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_190B60868(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_190B608A0(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_190B60900(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_190B60940(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_190B60988(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + _Block_object_dispose(&STACK[0x228], 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_190B609C4(unint64_t a1, uint64_t a2)
{
  uint64_t result = _swift_isClassOrObjCExistentialType();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v5 = a2 & 0xFFFFFFFFFFFFFF8;
  if ((result & 1) == 0) {
    uint64_t v5 = a2;
  }
  if (*(void *)(v5 + 16) <= a1) {
    goto LABEL_7;
  }
  return result;
}

uint64_t sub_190B60A18(unint64_t *a1)
{
  return sub_190B5EE80(a1, *(uint64_t **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40)) & 1;
}

BOOL sub_190B60A3C(void *a1)
{
  return MEMORY[0x192FD1B60](*a1, *(void *)(v1 + 16)) > 1;
}

uint64_t sub_190B60A74(uint64_t *a1)
{
  return sub_190B5F628(a1);
}

uint64_t sub_190B60A90()
{
  return sub_190B5F8DC() & 1;
}

uint64_t sub_190B60AB0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_190B5F984(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_190B60ACC()
{
  return sub_190B774A8() & 1;
}

id sub_190B60B38@<X0>(void **a1@<X0>, void **a2@<X8>)
{
  uint64_t v2 = *a1;
  *a2 = *a1;
  return v2;
}

uint64_t static CNContactProviderSupport.registeredDomains()()
{
  return sub_190B60F94((SEL *)&selRef_registeredDomainsWithError_);
}

unint64_t sub_190B60BBC()
{
  unint64_t result = qword_1E92A5C08;
  if (!qword_1E92A5C08)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E92A5C08);
  }
  return result;
}

uint64_t CNContactProviderSupport.synchronizeDomain(using:)(uint64_t a1)
{
  *(void *)(v2 + 120) = a1;
  *(void *)(v2 + 12_Block_object_dispose(&STACK[0x228], 8) = v1;
  return MEMORY[0x1F4188298](sub_190B60C1C, 0, 0);
}

uint64_t sub_190B60C1C()
{
  uint64_t v2 = v0[15];
  uint64_t v1 = (void *)v0[16];
  v0[2] = v0;
  v0[3] = sub_190B60D14;
  uint64_t v3 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_190B60EA8;
  v0[13] = &block_descriptor;
  v0[14] = v3;
  objc_msgSend(v1, sel_synchronizeDomainUsingSession_completionHandler_, v2, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_190B60D14()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 136) = v1;
  if (v1) {
    uint64_t v2 = sub_190B60E3C;
  }
  else {
    uint64_t v2 = sub_190B60E24;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_190B60E24()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_190B60E3C()
{
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_190B60EA8(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5B78);
    uint64_t v4 = swift_allocError();
    *uint64_t v5 = a2;
    id v6 = a2;
    return MEMORY[0x1F4188208](v2, v4);
  }
  else
  {
    uint64_t v7 = *(void *)(a1 + 32);
    return MEMORY[0x1F4188200](v7);
  }
}

uint64_t static CNContactProviderSupport.allDomains()()
{
  return sub_190B60F94((SEL *)&selRef_allDomainsWithError_);
}

uint64_t sub_190B60F94(SEL *a1)
{
  v6[1] = *MEMORY[0x1E4F143B8];
  v6[0] = 0;
  id v1 = objc_msgSend(self, *a1, v6);
  uint64_t v2 = (void *)v6[0];
  sub_190B60BBC();
  uint64_t v3 = sub_190B772C8();
  id v4 = v2;

  return v3;
}

unint64_t DuplicateSetProperties.dictionaryValue.getter()
{
  char v1 = *v0;
  char v2 = v0[1];
  uint64_t v4 = *((void *)v0 + 1);
  uint64_t v3 = *((void *)v0 + 2);
  uint64_t v6 = *((void *)v0 + 3);
  uint64_t v5 = *((void *)v0 + 4);
  uint64_t v7 = *((void *)v0 + 5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3DA0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_190B912A0;
  *(void *)(inited + 32) = 0x727574616E676973;
  *(void *)(inited + 40) = 0xE900000000000065;
  uint64_t v9 = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 4_Block_object_dispose(&STACK[0x228], 8) = v4;
  *(void *)(inited + 56) = v3;
  *(void *)(inited + 72) = v9;
  *(void *)(inited + 80) = 0x616C696176417369;
  *(void *)(inited + 8_Block_object_dispose(&STACK[0x228], 8) = 0xEB00000000656C62;
  uint64_t v10 = MEMORY[0x1E4FBB390];
  *(unsigned char *)(inited + 96) = v1;
  *(void *)(inited + 120) = v10;
  *(void *)(inited + 12_Block_object_dispose(&STACK[0x228], 8) = 0x65726F6E67497369;
  *(void *)(inited + 136) = 0xE900000000000064;
  *(unsigned char *)(inited + 144) = v2;
  *(void *)(inited + 16_Block_object_dispose(&STACK[0x228], 8) = v10;
  *(void *)(inited + 176) = 5294388599723750000;
  *(void *)(inited + 184) = 0xE900000000000044;
  *(void *)(inited + 192) = v6;
  *(void *)(inited + 200) = v5;
  *(void *)(inited + 216) = v9;
  *(void *)(inited + 224) = 0x7374726F686F63;
  *(void *)(inited + 232) = 0xE700000000000000;
  *(void *)(inited + 264) = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A60E0);
  *(void *)(inited + 240) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_190B611B0(inited);
}

unint64_t sub_190B611B0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3D90);
  uint64_t v2 = sub_190B778E8();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_190B632C0(v6, (uint64_t)&v15, &qword_1E92A3D28);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_190B236D8(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    int64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *int64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_190B23134(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_190B612E8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3D98);
  uint64_t v2 = sub_190B778E8();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_190B632C0(v6, (uint64_t)v15, &qword_1E92A3D88);
    unint64_t result = sub_190B237B0((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_190B23134(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_190B6142C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92A3BF8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (void *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3C20);
  uint64_t v6 = sub_190B778E8();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (char *)v5 + *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_190B632C0(v12, (uint64_t)v5, (uint64_t *)&unk_1E92A3BF8);
    uint64_t v14 = *v5;
    uint64_t v15 = v5[1];
    unint64_t result = sub_190B236D8(*v5, v15);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v19 = (uint64_t *)(v7[6] + 16 * result);
    uint64_t *v19 = v14;
    v19[1] = v15;
    uint64_t v20 = v7[7];
    uint64_t v21 = sub_190B76F98();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18, v9, v21);
    uint64_t v22 = v7[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    void v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_190B6162C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A5FC0);
  uint64_t v2 = (void *)sub_190B778E8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_190B236D8(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *unint64_t v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id static CNDuplicateSet.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  char v1 = (void *)sub_190B77158();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_190B617B8(char a1, char a2)
{
  if (*(void *)&aIdentificropre_0[8 * a1] == *(void *)&aIdentificropre_0[8 * a2]
    && *(void *)&aIdentificropre_0[8 * a1 + 32] == *(void *)&aIdentificropre_0[8 * a2 + 32])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_190B77998();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_190B61840(char a1, char a2)
{
  if (*(void *)&aIsavailbisigno[8 * a1] == *(void *)&aIsavailbisigno[8 * a2]
    && *(void *)&aPrimaryile[8 * a1 + 8] == *(void *)&aPrimaryile[8 * a2 + 8])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_190B77998();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_190B618C8()
{
  return sub_190B77A68();
}

uint64_t sub_190B61934()
{
  return sub_190B77A68();
}

uint64_t sub_190B619A0()
{
  sub_190B771D8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_190B619F4()
{
  sub_190B771D8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_190B61A48()
{
  return sub_190B77A68();
}

uint64_t sub_190B61AB0()
{
  return sub_190B77A68();
}

uint64_t sub_190B61B18@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for CNDuplicateSet();
  uint64_t result = sub_190B777A8();
  *a1 = result;
  return result;
}

id static CNDuplicateSet.newDuplicatesFetchRequest()()
{
  return sub_190B61B94();
}

id static CNDuplicateSet.ignoredDuplicatesFetchRequest()()
{
  return sub_190B61B94();
}

id sub_190B61B94()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  char v1 = (void *)sub_190B77158();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3DD0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_190B908F0;
  id v4 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  uint64_t v5 = (void *)sub_190B77158();
  id v6 = objc_msgSend(v4, sel_initWithKey_ascending_, v5, 1);

  *(void *)(v3 + 32) = v6;
  sub_190B772E8();
  sub_190B23474(0, &qword_1E92A60E8);
  uint64_t v7 = (void *)sub_190B772B8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setSortDescriptors_, v7);

  sub_190B23474(0, (unint64_t *)&unk_1E92A3D50);
  id v8 = (void *)sub_190B77548();
  objc_msgSend(v2, sel_setPredicate_, v8);

  return v2;
}

uint64_t sub_190B61D4C(char a1)
{
  return *(void *)&aIsavailbisigno[8 * a1];
}

uint64_t sub_190B61D6C(char *a1, char *a2)
{
  return sub_190B61840(*a1, *a2);
}

uint64_t sub_190B61D78()
{
  return sub_190B61934();
}

uint64_t sub_190B61D80()
{
  return sub_190B619F4();
}

uint64_t sub_190B61D88()
{
  return sub_190B61A48();
}

uint64_t sub_190B61D90@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_190B63274();
  *a1 = result;
  return result;
}

uint64_t sub_190B61DC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_190B61D4C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_190B61DEC()
{
  return sub_190B61D4C(*v0);
}

uint64_t sub_190B61DF4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_190B63274();
  *a1 = result;
  return result;
}

void sub_190B61E1C(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_190B61E28(uint64_t a1)
{
  unint64_t v2 = sub_190B624A8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_190B61E64(uint64_t a1)
{
  unint64_t v2 = sub_190B624A8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t DuplicateSetProperties.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A60F0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_190B624A8();
  sub_190B77A78();
  if (!v2)
  {
    uint64_t v9 = v6;
    char v27 = 2;
    uint64_t v10 = sub_190B77918();
    uint64_t v12 = v11;
    char v26 = 4;
    uint64_t v20 = sub_190B77918();
    uint64_t v21 = v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A60E0);
    char v25 = 3;
    sub_190B62A60();
    sub_190B77938();
    uint64_t v19 = v22;
    char v24 = 0;
    int v18 = sub_190B77928();
    char v23 = 1;
    char v15 = sub_190B77928();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
    *(unsigned char *)a2 = v18 & 1;
    *(unsigned char *)(a2 + 1) = v15 & 1;
    *(void *)(a2 + _Block_object_dispose(&STACK[0x228], 8) = v10;
    *(void *)(a2 + 16) = v12;
    uint64_t v16 = v21;
    *(void *)(a2 + 24) = v20;
    *(void *)(a2 + 32) = v16;
    *(void *)(a2 + 40) = v19;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

unint64_t sub_190B624A8()
{
  unint64_t result = qword_1E92A60F8;
  if (!qword_1E92A60F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92A60F8);
  }
  return result;
}

void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> DuplicateSetProperties.init(from:contactStore:)(Contacts::DuplicateSetProperties *__return_ptr retstr, Swift::OpaquePointer from, CNContactStore contactStore)
{
  Class isa = contactStore.super.isa;
  rawCFNumberRef Value = (unint64_t)from._rawValue;
  uint64_t v6 = _s8Contacts16ManagedDuplicateC21preferredPrimaryIDFor_12contactStoreSSSgSaySo16CNMutableContactCG_So09CNContactH0CtFZ_0((unint64_t)from._rawValue, contactStore.super.isa);
  if (!v7)
  {
    swift_bridgeObjectRelease();
    sub_190B1A4D8();
    swift_allocError();
    *(void *)uint64_t v33 = 0xD000000000000035;
    *(void *)(v33 + _Block_object_dispose(&STACK[0x228], 8) = 0x8000000190BA07E0;
    *(unsigned char *)(v33 + 16) = 1;
    swift_willThrow();
LABEL_29:

    return;
  }
  uint64_t v8 = v6;
  uint64_t v9 = v7;
  if (rawValue >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_190B778A8();
  }
  else
  {
    uint64_t v10 = *(void *)((rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  unint64_t v44 = v9;
  Class v45 = isa;
  uint64_t v42 = retstr;
  uint64_t v41 = v8;
  unint64_t v43 = rawValue >> 62;
  if (!v10)
  {
    uint64_t v12 = (void *)MEMORY[0x1E4FBC860];
LABEL_23:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v34 = _s8Contacts16ManagedDuplicateC012signatureForA0ySSSaySo16CNMutableContactCGFZ_0(rawValue);
    uint64_t v36 = v35;
    uint64_t v37 = v12[2];
    if (v43)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v39 = v44;
      swift_bridgeObjectRetain();
      uint64_t v38 = sub_190B778A8();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v38 = *(void *)((rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      unint64_t v39 = v44;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    if (v37 == v38)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      *(_WORD *)&v42->isAvailable = 1;
      v42->signature._uint64_t countAndFlagsBits = v34;
      v42->signature._object = v36;
      v42->primaryID._uint64_t countAndFlagsBits = v41;
      v42->primaryID._object = v39;
      v42->cohorts._rawCFNumberRef Value = v12;
      return;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_190B1A4D8();
    swift_allocError();
    *(void *)uint64_t v40 = 0xD00000000000002CLL;
    *(void *)(v40 + _Block_object_dispose(&STACK[0x228], 8) = 0x8000000190BA0820;
    *(unsigned char *)(v40 + 16) = 1;
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    Class isa = v45;
    goto LABEL_29;
  }
  if (v10 >= 1)
  {
    uint64_t v11 = 0;
    uint64_t v12 = (void *)MEMORY[0x1E4FBC860];
    unint64_t v46 = rawValue & 0xC000000000000001;
    uint64_t v47 = v10;
    unint64_t v48 = rawValue;
    while (1)
    {
      if (v46) {
        id v13 = (id)MEMORY[0x192FD1FB0](v11, rawValue);
      }
      else {
        id v13 = *(id *)(rawValue + 8 * v11 + 32);
      }
      id v14 = v13;
      id v15 = objc_msgSend(v14, sel_identifier);
      uint64_t v51 = sub_190B77168();
      uint64_t v50 = v16;

      objc_msgSend(v14, sel_cropRect);
      uint64_t v17 = NSStringFromRect(v52);
      uint64_t v18 = sub_190B77168();
      uint64_t v49 = v19;

      id v20 = objc_msgSend(v14, sel_imageData);
      if (v20)
      {
        uint64_t v21 = v20;
        uint64_t v22 = sub_190B76E08();
        unint64_t v24 = v23;
      }
      else
      {
        uint64_t v22 = 0;
        unint64_t v24 = 0xC000000000000000;
      }
      id v25 = objc_msgSend(v14, sel_wallpaper);
      char v26 = v25;
      if (v25)
      {
        id v27 = objc_msgSend(v25, sel_posterArchiveData);

        char v26 = (void *)sub_190B76E08();
        unint64_t v29 = v28;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          goto LABEL_20;
        }
      }
      else
      {

        unint64_t v29 = 0xC000000000000000;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_20:
        }
          uint64_t v12 = sub_190B49718(0, v12[2] + 1, 1, v12);
      }
      unint64_t v31 = v12[2];
      unint64_t v30 = v12[3];
      if (v31 >= v30 >> 1) {
        uint64_t v12 = sub_190B49718((void *)(v30 > 1), v31 + 1, 1, v12);
      }
      ++v11;
      _OWORD v12[2] = v31 + 1;
      uint64_t v32 = &v12[8 * v31];
      void v32[4] = v51;
      v32[5] = v50;
      rawCFNumberRef Value = v48;
      v32[6] = v18;
      v32[7] = v49;
      v32[8] = v22;
      v32[9] = v24;
      v32[10] = v26;
      v32[11] = v29;
      if (v47 == v11) {
        goto LABEL_23;
      }
    }
  }
  __break(1u);
}

uint64_t DuplicateSetProperties.cohortIDs.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  int64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_190B218B0(0, v2, 0);
    uint64_t v3 = v11;
    uint64_t v4 = (uint64_t *)(v1 + 40);
    do
    {
      uint64_t v6 = *(v4 - 1);
      uint64_t v5 = *v4;
      unint64_t v7 = *(void *)(v11 + 16);
      unint64_t v8 = *(void *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v7 >= v8 >> 1) {
        sub_190B218B0(v8 > 1, v7 + 1, 1);
      }
      v4 += 8;
      *(void *)(v11 + 16) = v7 + 1;
      uint64_t v9 = v11 + 16 * v7;
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 40) = v5;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t sub_190B62A48@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DuplicateSetProperties.init(from:)(a1, a2);
}

unint64_t sub_190B62A60()
{
  unint64_t result = qword_1E92A6100;
  if (!qword_1E92A6100)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E92A60E0);
    sub_190B62AD4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92A6100);
  }
  return result;
}

unint64_t sub_190B62AD4()
{
  unint64_t result = qword_1E92A6108;
  if (!qword_1E92A6108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92A6108);
  }
  return result;
}

char *keypath_get_selector_isAvailable()
{
  return sel_isAvailable;
}

id sub_190B62B34@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_isAvailable);
  *a2 = (_BYTE)result;
  return result;
}

id sub_190B62B68(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIsAvailable_, *a1);
}

char *keypath_get_selector_isIgnored()
{
  return sel_isIgnored;
}

id sub_190B62B88@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_isIgnored);
  *a2 = (_BYTE)result;
  return result;
}

id sub_190B62BBC(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIsIgnored_, *a1);
}

char *keypath_get_selector_primaryID()
{
  return sel_primaryID;
}

void sub_190B62BDC(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_190B62BFC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_signature()
{
  return sel_signature;
}

void sub_190B62C28(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_190B62C48(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_cohorts()
{
  return sel_cohorts;
}

id sub_190B62C74@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_cohorts);
  *a2 = result;
  return result;
}

id sub_190B62CB0(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCohorts_, *a1);
}

char *keypath_get_selector_selectedContactImage()
{
  return sel_selectedContactImage;
}

id sub_190B62CD0@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_selectedContactImage);
  *a2 = result;
  return result;
}

id sub_190B62D0C(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSelectedContactImage_, *a1);
}

char *keypath_get_selector_selectedContactPoster()
{
  return sel_selectedContactPoster;
}

id sub_190B62D2C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_selectedContactPoster);
  *a2 = result;
  return result;
}

id sub_190B62D68(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSelectedContactPoster_, *a1);
}

uint64_t destroy for DuplicateSetProperties()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DuplicateSetProperties(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + _Block_object_dispose(&STACK[0x228], 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DuplicateSetProperties(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + _Block_object_dispose(&STACK[0x228], 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for DuplicateSetProperties(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + _Block_object_dispose(&STACK[0x228], 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DuplicateSetProperties(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DuplicateSetProperties(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + _Block_object_dispose(&STACK[0x228], 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 4_Block_object_dispose(&STACK[0x228], 8) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 4_Block_object_dispose(&STACK[0x228], 8) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DuplicateSetProperties()
{
  return &type metadata for DuplicateSetProperties;
}

uint64_t getEnumTagSinglePayload for DuplicateSetProperties.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DuplicateSetProperties.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    void *result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x190B63134);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DuplicateSetProperties.CodingKeys()
{
  return &type metadata for DuplicateSetProperties.CodingKeys;
}

unint64_t sub_190B63170()
{
  unint64_t result = qword_1E92A6110;
  if (!qword_1E92A6110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92A6110);
  }
  return result;
}

unint64_t sub_190B631C8()
{
  unint64_t result = qword_1E92A6118;
  if (!qword_1E92A6118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92A6118);
  }
  return result;
}

unint64_t sub_190B63220()
{
  unint64_t result = qword_1E92A6120;
  if (!qword_1E92A6120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92A6120);
  }
  return result;
}

uint64_t sub_190B63274()
{
  unint64_t v0 = sub_190B77908();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_190B632C0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_190B63324(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_190B63368(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v23 = MEMORY[0x1E4FBC860];
  sub_190B21F30(0, v1, 0);
  uint64_t v2 = v23;
  uint64_t result = sub_190B6A0DC(a1);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  int64_t v20 = v1;
  int v21 = v5;
  uint64_t v22 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v12 = *(void *)(*(void *)(a1 + 56) + 8 * v6);
    unint64_t v13 = *(void *)(v23 + 16);
    unint64_t v14 = *(void *)(v23 + 24);
    uint64_t result = swift_bridgeObjectRetain();
    if (v13 >= v14 >> 1) {
      uint64_t result = sub_190B21F30(v14 > 1, v13 + 1, 1);
    }
    *(void *)(v23 + 16) = v13 + 1;
    *(void *)(v23 + 8 * v13 + 32) = v12;
    int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = a1 + 64;
    uint64_t v15 = *(void *)(v22 + 8 * v11);
    if ((v15 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v21;
    if (*(_DWORD *)(a1 + 36) != v21) {
      goto LABEL_27;
    }
    unint64_t v16 = v15 & (-2 << (v6 & 0x3F));
    if (v16)
    {
      int64_t v9 = __clz(__rbit64(v16)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v20;
    }
    else
    {
      unint64_t v17 = v11 + 1;
      unint64_t v18 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v20;
      if (v11 + 1 < v18)
      {
        unint64_t v19 = *(void *)(v22 + 8 * v17);
        if (v19)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v19)) + (v17 << 6);
        }
        else
        {
          while (v18 - 2 != v11)
          {
            unint64_t v19 = *(void *)(a1 + 80 + 8 * v11++);
            if (v19)
            {
              unint64_t v17 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    uint64_t v6 = v9;
    if (v7 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_190B63568@<X0>(unint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t v3 = type metadata accessor for DuplicateContacts();
  unint64_t v83 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_106;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_3:
  unint64_t v5 = MEMORY[0x1E4FBC860];
  if (v4)
  {
    unint64_t v6 = 0;
    unint64_t v79 = v3;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        id v7 = (id)MEMORY[0x192FD1FB0](v6, a1);
      }
      else
      {
        if (v6 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_99;
        }
        id v7 = *(id *)(a1 + 8 * v6 + 32);
      }
      uint64_t v8 = v7;
      unint64_t v9 = v6 + 1;
      if (__OFADD__(v6, 1))
      {
LABEL_98:
        __break(1u);
LABEL_99:
        __break(1u);
LABEL_100:
        __break(1u);
LABEL_101:
        __break(1u);
LABEL_102:
        __break(1u);
LABEL_103:
        __break(1u);
LABEL_104:
        __break(1u);
LABEL_105:
        __break(1u);
LABEL_106:
        swift_bridgeObjectRetain();
        uint64_t v4 = sub_190B778A8();
        goto LABEL_3;
      }
      id v10 = objc_msgSend(v7, sel_downtimeWhitelist);
      if (!v10) {
        break;
      }
      unint64_t v11 = v10;
      unint64_t v3 = v4;
      uint64_t v12 = sub_190B77168();
      uint64_t v14 = v13;

      uint64_t v15 = sub_190B77168();
      if (!v14)
      {
        uint64_t v4 = v3;
        goto LABEL_21;
      }
      if (v12 == v15 && v14 == v16)
      {

        swift_bridgeObjectRelease_n();
        uint64_t v4 = v3;
      }
      else
      {
        char v18 = sub_190B77998();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v4 = v3;
        if ((v18 & 1) == 0) {
          goto LABEL_22;
        }
      }
LABEL_6:
      ++v6;
      if (v9 == v4)
      {
        unint64_t v19 = v83;
        unint64_t v3 = v79;
        unint64_t v5 = MEMORY[0x1E4FBC860];
        goto LABEL_26;
      }
    }
    sub_190B77168();
LABEL_21:
    swift_bridgeObjectRelease();
LABEL_22:
    sub_190B77808();
    sub_190B77848();
    sub_190B77858();
    sub_190B77818();
    goto LABEL_6;
  }
  unint64_t v19 = MEMORY[0x1E4FBC860];
LABEL_26:
  swift_bridgeObjectRelease();
  uint64_t v20 = sub_190B6A688(v19);
  swift_release();
  uint64_t v21 = sub_190B67738(v20, (uint64_t (*)(char *, unint64_t, uint64_t))sub_190B68024);
  swift_bridgeObjectRelease();
  uint64_t v22 = swift_bridgeObjectRetain();
  uint64_t v23 = sub_190B67738(v22, (uint64_t (*)(char *, unint64_t, uint64_t))sub_190B67C64);
  swift_release();
  uint64_t v24 = sub_190B63368(v23);
  swift_release();
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v3;
  MEMORY[0x1F4188790](v25);
  unint64_t v83 = v5;
  uint64_t v26 = *(void *)(v24 + 16);
  if (v26)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v26; ++i)
    {
      unint64_t v28 = *(void *)(v24 + 8 * i + 32);
      swift_bridgeObjectRetain();
      sub_190B6475C((uint64_t)&v83, v28, (void (*)(_OWORD *__return_ptr, id))sub_190B6F998);
      swift_bridgeObjectRelease();
    }
    swift_release();
    swift_bridgeObjectRelease_n();
    unint64_t v29 = v83;
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    unint64_t v29 = MEMORY[0x1E4FBC860];
  }
  uint64_t v30 = sub_190B67738(v21, (uint64_t (*)(char *, unint64_t, uint64_t))sub_190B678A4);
  swift_release();
  uint64_t v31 = sub_190B63368(v30);
  swift_release();
  uint64_t v32 = *(void *)(v31 + 16);
  if (v32)
  {
    unint64_t v82 = v29;
    swift_bridgeObjectRetain();
    uint64_t v33 = 0;
    a1 = MEMORY[0x1E4FBC860];
    unint64_t v3 = (unint64_t)&qword_1E92A3D40;
    while (1)
    {
      unint64_t v34 = swift_bridgeObjectRetain();
      uint64_t v35 = sub_190B63F88(v34);
      uint64_t v36 = *(void *)(v35 + 16);
      int64_t v37 = *(void *)(a1 + 16);
      int64_t v38 = v37 + v36;
      if (__OFADD__(v37, v36)) {
        goto LABEL_100;
      }
      uint64_t v39 = v35;
      int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
      if (isUniquelyReferenced_nonNull_native && v38 <= *(void *)(a1 + 24) >> 1)
      {
        if (*(void *)(v39 + 16)) {
          goto LABEL_44;
        }
      }
      else
      {
        if (v37 <= v38) {
          int64_t v41 = v37 + v36;
        }
        else {
          int64_t v41 = v37;
        }
        a1 = (unint64_t)sub_190B4916C(isUniquelyReferenced_nonNull_native, v41, 1, (void *)a1);
        if (*(void *)(v39 + 16))
        {
LABEL_44:
          uint64_t v42 = *(void *)(a1 + 16);
          if ((*(void *)(a1 + 24) >> 1) - v42 < v36) {
            goto LABEL_103;
          }
          unint64_t v43 = a1 + 8 * v42 + 32;
          if (v39 + 32 < v43 + 8 * v36 && v43 < v39 + 32 + 8 * v36)
          {
LABEL_108:
            uint64_t result = sub_190B778F8();
            __break(1u);
            return result;
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3D40);
          swift_arrayInitWithCopy();
          if (v36)
          {
            uint64_t v45 = *(void *)(a1 + 16);
            BOOL v46 = __OFADD__(v45, v36);
            uint64_t v47 = v45 + v36;
            if (v46) {
              goto LABEL_105;
            }
            *(void *)(a1 + 16) = v47;
          }
          goto LABEL_34;
        }
      }
      if (v36) {
        goto LABEL_101;
      }
LABEL_34:
      ++v33;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v32 == v33)
      {
        swift_bridgeObjectRelease();
        unint64_t v29 = v82;
        goto LABEL_55;
      }
    }
  }
  a1 = MEMORY[0x1E4FBC860];
LABEL_55:
  swift_bridgeObjectRelease();
  unint64_t v83 = v29;
  sub_190B5B10C(a1);
  a1 = v83;
  uint64_t v48 = *(void *)(v83 + 16);
  if (v48)
  {
    unint64_t v3 = 0;
    unint64_t v49 = v83 + 32;
    uint64_t v78 = *MEMORY[0x1E4F5A2A0];
    unint64_t v50 = MEMORY[0x1E4FBC860];
    uint64_t v76 = *(void *)(v83 + 16);
    unint64_t v77 = v83;
    unint64_t v75 = v83 + 32;
    while (1)
    {
      if (v3 >= *(void *)(a1 + 16)) {
        goto LABEL_102;
      }
      unint64_t v51 = *(void *)(v49 + 8 * v3);
      if (v51 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v52 = sub_190B778A8();
        if (!v52)
        {
LABEL_86:
          swift_bridgeObjectRelease();
          goto LABEL_87;
        }
      }
      else
      {
        uint64_t v52 = *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        if (!v52) {
          goto LABEL_86;
        }
      }
      if ((v51 & 0xC000000000000001) != 0)
      {
        id v53 = (id)MEMORY[0x192FD1FB0](0, v51);
      }
      else
      {
        if (!*(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_104;
        }
        id v53 = *(id *)(v51 + 32);
      }
      uint64_t v54 = v53;
      swift_bridgeObjectRelease();
      id v55 = objc_msgSend(v54, sel_linkIdentifier);

      if (v55)
      {
        unint64_t v80 = v50;
        uint64_t v56 = sub_190B77168();
        uint64_t v58 = v57;

        if (!v78)
        {
          __break(1u);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          __break(1u);
          goto LABEL_108;
        }
        unint64_t v59 = (void *)sub_190B77158();
        a1 = (*(uint64_t (**)(uint64_t, void *))(v78 + 16))(v78, v59);

        if (a1)
        {
          swift_bridgeObjectRetain();
          uint64_t v60 = 4;
          uint64_t v81 = v52;
          while (1)
          {
            id v61 = (v51 & 0xC000000000000001) != 0
                ? (id)MEMORY[0x192FD1FB0](v60 - 4, v51)
                : *(id *)(v51 + 8 * v60);
            uint64_t v62 = v61;
            uint64_t v63 = v60 - 3;
            if (__OFADD__(v60 - 4, 1)) {
              break;
            }
            id v64 = objc_msgSend(v61, sel_linkIdentifier);
            if (!v64)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              goto LABEL_82;
            }
            a1 = (unint64_t)v64;
            uint64_t v65 = sub_190B77168();
            uint64_t v67 = v66;

            if (v65 == v56 && v67 == v58)
            {

              swift_bridgeObjectRelease();
            }
            else
            {
              char v69 = sub_190B77998();

              swift_bridgeObjectRelease();
              if ((v69 & 1) == 0)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
LABEL_82:
                uint64_t v48 = v76;
                a1 = v77;
                unint64_t v49 = v75;
                goto LABEL_83;
              }
            }
            ++v60;
            if (v63 == v81)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              uint64_t v48 = v76;
              a1 = v77;
              unint64_t v49 = v75;
              unint64_t v50 = v80;
              goto LABEL_92;
            }
          }
          __break(1u);
          goto LABEL_98;
        }
        swift_bridgeObjectRelease();
        uint64_t v48 = v76;
        a1 = v77;
LABEL_83:
        unint64_t v50 = v80;
      }
LABEL_87:
      char v70 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v83 = v50;
      if ((v70 & 1) == 0)
      {
        sub_190B21F30(0, *(void *)(v50 + 16) + 1, 1);
        unint64_t v50 = v83;
      }
      unint64_t v72 = *(void *)(v50 + 16);
      unint64_t v71 = *(void *)(v50 + 24);
      if (v72 >= v71 >> 1)
      {
        sub_190B21F30(v71 > 1, v72 + 1, 1);
        unint64_t v50 = v83;
      }
      *(void *)(v50 + 16) = v72 + 1;
      *(void *)(v50 + 8 * v72 + 32) = v51;
LABEL_92:
      if (++v3 == v48)
      {
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_96;
      }
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v50 = MEMORY[0x1E4FBC860];
LABEL_96:
  *a2 = v50;
  return result;
}

uint64_t sub_190B63E48(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = sub_190B76CC8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  id v10 = (char *)&v12 - v9;
  a2(a1);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
  sub_190B25FC8();
  sub_190B77738();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
}

uint64_t sub_190B63F88(unint64_t a1)
{
  int64_t v1 = a1;
  if (a1 >> 62)
  {
LABEL_69:
    swift_bridgeObjectRetain();
    int64_t v2 = sub_190B778A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    int64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2 < 2) {
    return v3;
  }
  uint64_t v56 = (void *)MEMORY[0x1E4FBC860];
  sub_190B21F90(0, v2, 0);
  uint64_t v4 = 0;
  unint64_t v52 = v1 & 0xC000000000000001;
  int64_t v53 = v1;
  do
  {
    if (v52) {
      id v5 = (id)MEMORY[0x192FD1FB0](v4, v1);
    }
    else {
      id v5 = *(id *)(v1 + 8 * v4 + 32);
    }
    uint64_t v6 = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3DD0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_190B908F0;
    *(void *)(inited + 32) = v6;
    uint64_t v58 = inited;
    sub_190B772E8();
    sub_190B23474(0, (unint64_t *)&qword_1E92A3E20);
    sub_190B6F9A0((unint64_t *)&qword_1E92A6020, (unint64_t *)&qword_1E92A3E20);
    id v8 = v6;
    uint64_t v58 = sub_190B77478();
    sub_190B68A34(&v57, v8, (unint64_t *)&qword_1E92A3E20, (uint64_t)off_1E56B2E20, (uint64_t *)&unk_1E92A61C0);
    uint64_t v9 = v57;
    swift_bridgeObjectRelease();

    uint64_t v10 = v58;
    id v11 = v8;
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_190B5FEFC();
    swift_bridgeObjectRelease();

    uint64_t v13 = v56;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_190B21F90(0, v13[2] + 1, 1);
      uint64_t v13 = v56;
    }
    unint64_t v15 = v13[2];
    unint64_t v14 = v13[3];
    unint64_t v16 = v15 + 1;
    if (v15 >= v14 >> 1)
    {
      sub_190B21F90(v14 > 1, v15 + 1, 1);
      uint64_t v13 = v56;
    }
    ++v4;
    void v13[2] = v16;
    unint64_t v17 = &v13[2 * v15];
    v17[4] = v10;
    v17[5] = v12;
    int64_t v1 = v53;
  }
  while (v2 != v4);
  char v18 = (void *)MEMORY[0x1E4FBC860];
LABEL_15:
  while (1)
  {
    unint64_t v19 = v16;
    if (v16) {
      break;
    }
    swift_bridgeObjectRelease();
    unint64_t v16 = v18[2];
    uint64_t v13 = v18;
    if (!v16)
    {
      uint64_t v33 = (void *)MEMORY[0x1E4FBC860];
      goto LABEL_49;
    }
  }
  uint64_t v20 = v13 + 4;
  swift_bridgeObjectRetain();
  uint64_t v21 = 0;
  uint64_t v22 = v18;
  while (1)
  {
    uint64_t v25 = v22[2];
    uint64_t v26 = v20[2 * v21 + 1];
    long long v54 = *(_OWORD *)&v20[2 * v21];
    if (v25) {
      break;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_28:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v22 = sub_190B49828(0, v22[2] + 1, 1, v22);
    }
    unint64_t v30 = v22[2];
    unint64_t v29 = v22[3];
    long long v31 = v54;
    if (v30 >= v29 >> 1)
    {
      uint64_t v32 = sub_190B49828((void *)(v29 > 1), v30 + 1, 1, v22);
      long long v31 = v54;
      uint64_t v22 = v32;
    }
    uint64_t v22[2] = v30 + 1;
    *(_OWORD *)&v22[2 * v30 + 4] = v31;
LABEL_17:
    swift_bridgeObjectRelease();
    ++v21;
    swift_bridgeObjectRelease();
    if (v21 == v19)
    {
      swift_bridgeObjectRelease_n();
      unint64_t v16 = v22[2];
      uint64_t v13 = v22;
      char v18 = (void *)MEMORY[0x1E4FBC860];
      if (v19 == v16) {
        goto LABEL_36;
      }
      goto LABEL_15;
    }
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v27 = 0;
  uint64_t v28 = 5;
  while (1)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v22 = sub_190B58D60(v22);
    }
    if (v27 >= v22[2]) {
      break;
    }
    if (*(void *)(v26 + 16) && (sub_190B602A4(v26, v22[v28]) & 1) == 0)
    {
      unint64_t v23 = swift_bridgeObjectRetain();
      sub_190B5FBB8(v23);
      uint64_t v24 = swift_bridgeObjectRetain();
      sub_190B5FA38(v24);
      goto LABEL_17;
    }
    ++v27;
    v28 += 2;
    if (v25 == v27) {
      goto LABEL_28;
    }
  }
  __break(1u);
LABEL_36:
  uint64_t v34 = 0;
  uint64_t v33 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v35 = &v22[2 * v34];
    uint64_t v36 = v35[4];
    long long v55 = *((_OWORD *)v35 + 2);
    if ((v36 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v37 = sub_190B776D8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v37 < 2) {
        goto LABEL_37;
      }
    }
    else
    {
      uint64_t v38 = *(void *)(v36 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v38 < 2)
      {
LABEL_37:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_38;
      }
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v56 = v33;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_190B21F90(0, v33[2] + 1, 1);
      uint64_t v33 = v56;
    }
    unint64_t v41 = v33[2];
    unint64_t v40 = v33[3];
    if (v41 >= v40 >> 1)
    {
      sub_190B21F90(v40 > 1, v41 + 1, 1);
      uint64_t v33 = v56;
    }
    v33[2] = v41 + 1;
    *(_OWORD *)&v33[2 * v41 + 4] = v55;
LABEL_38:
    ++v34;
  }
  while (v19 != v34);
  char v18 = (void *)MEMORY[0x1E4FBC860];
LABEL_49:
  swift_bridgeObjectRelease();
  int64_t v1 = v33[2];
  if (v1)
  {
    uint64_t v58 = (uint64_t)v18;
    sub_190B21F30(0, v1, 0);
    uint64_t v3 = v58;
    for (uint64_t i = v33 + 5; ; i += 2)
    {
      uint64_t v43 = *(i - 1);
      if ((v43 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t v44 = sub_190B776D8();
        if (!v44) {
          goto LABEL_58;
        }
      }
      else
      {
        uint64_t v44 = *(void *)(v43 + 16);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        if (!v44)
        {
LABEL_58:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          uint64_t v45 = (void *)MEMORY[0x1E4FBC860];
          goto LABEL_62;
        }
      }
      if (v44 < 1)
      {
        uint64_t v45 = (void *)MEMORY[0x1E4FBC860];
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3DD0);
        uint64_t v45 = (void *)swift_allocObject();
        int64_t v46 = _swift_stdlib_malloc_size(v45);
        uint64_t v47 = v46 - 32;
        if (v46 < 32) {
          uint64_t v47 = v46 - 25;
        }
        v45[2] = v44;
        v45[3] = (2 * (v47 >> 3)) | 1;
      }
      swift_bridgeObjectRetain();
      uint64_t v48 = sub_190B5C82C(&v56, v45 + 4, v44, v43);
      sub_190B23408();
      if (v48 != (void *)v44)
      {
        __break(1u);
        goto LABEL_69;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
LABEL_62:
      uint64_t v58 = v3;
      unint64_t v50 = *(void *)(v3 + 16);
      unint64_t v49 = *(void *)(v3 + 24);
      if (v50 >= v49 >> 1)
      {
        sub_190B21F30(v49 > 1, v50 + 1, 1);
        uint64_t v3 = v58;
      }
      *(void *)(v3 + 16) = v50 + 1;
      *(void *)(v3 + 8 * v50 + 32) = v45;
      if (!--v1)
      {
        swift_release();
        return v3;
      }
    }
  }
  swift_release();
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_190B646BC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3 == a4)
  {
    return 0;
  }
  else
  {
    uint64_t v5 = a3;
    if (a4 >= a3)
    {
      uint64_t v7 = (uint64_t (*)(uint64_t *))result;
      while (v5 < a4)
      {
        uint64_t v8 = v5;
        uint64_t result = v7(&v8);
        if (v4 || (result & 1) != 0) {
          return v5;
        }
        if (a4 == ++v5) {
          return 0;
        }
      }
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_190B6475C(uint64_t result, unint64_t a2, void (*a3)(_OWORD *__return_ptr, id))
{
  uint64_t v5 = (void **)result;
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_190B778A8();
    uint64_t result = swift_bridgeObjectRelease();
    if (v6 < 2) {
      return result;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v6 < 2) {
      return result;
    }
  }
  unint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = sub_190B6AB30(v7, a3);
  if (*(void *)(v8 + 16) == 1) {
    goto LABEL_8;
  }
  uint64_t v9 = sub_190B63F88(a2);
  uint64_t v10 = v9;
  if (*(void *)(v9 + 16) == 1)
  {
    unint64_t v11 = *(void *)(v9 + 32);
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_190B778A8();
      swift_bridgeObjectRelease();
      if (v16 == v6) {
        goto LABEL_7;
      }
    }
    else if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) == v6)
    {
LABEL_7:
      swift_bridgeObjectRelease();
LABEL_8:
      swift_bridgeObjectRelease();
      uint64_t v12 = *v5;
      swift_bridgeObjectRetain();
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v13 = v5;
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_190B4916C(0, v12[2] + 1, 1, v12);
        uint64_t v12 = (void *)result;
      }
      unint64_t v15 = v12[2];
      unint64_t v14 = v12[3];
      if (v15 >= v14 >> 1)
      {
        uint64_t result = (uint64_t)sub_190B4916C((void *)(v14 > 1), v15 + 1, 1, v12);
        uint64_t v12 = (void *)result;
      }
      _OWORD v12[2] = v15 + 1;
      v12[v15 + 4] = a2;
      *uint64_t v13 = v12;
      return result;
    }
  }
  uint64_t v30 = sub_190B278B4(v8);
  sub_190B5B10C(v10);
  if (!*(void *)(v30 + 16)) {
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  unint64_t v17 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v18 = sub_190B6B2EC(MEMORY[0x1E4FBC860], a2);
  swift_bridgeObjectRelease_n();
  int64_t v19 = *(void *)(v18 + 16);
  if (v19)
  {
    uint64_t v31 = (uint64_t)v17;
    sub_190B21F30(0, v19, 0);
    uint64_t v20 = 0;
    uint64_t v21 = (uint64_t)v17;
    while (1)
    {
      uint64_t v22 = *(void *)(v18 + 8 * v20 + 32);
      if ((v22 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v23 = sub_190B776D8();
        if (!v23) {
          goto LABEL_27;
        }
      }
      else
      {
        uint64_t v23 = *(void *)(v22 + 16);
        swift_bridgeObjectRetain();
        if (!v23)
        {
LABEL_27:
          swift_bridgeObjectRelease();
          uint64_t v24 = v17;
          goto LABEL_31;
        }
      }
      if (v23 < 1)
      {
        uint64_t v24 = v17;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3DD0);
        uint64_t v24 = (void *)swift_allocObject();
        int64_t v25 = _swift_stdlib_malloc_size(v24);
        uint64_t v26 = v25 - 32;
        if (v25 < 32) {
          uint64_t v26 = v25 - 25;
        }
        _OWORD v24[2] = v23;
        v24[3] = (2 * (v26 >> 3)) | 1;
      }
      swift_bridgeObjectRetain();
      unint64_t v27 = sub_190B5C82C(&v30, v24 + 4, v23, v22);
      uint64_t result = sub_190B23408();
      if (v27 != (void *)v23)
      {
        __break(1u);
        return result;
      }
      swift_bridgeObjectRelease();
LABEL_31:
      uint64_t v31 = v21;
      unint64_t v29 = *(void *)(v21 + 16);
      unint64_t v28 = *(void *)(v21 + 24);
      if (v29 >= v28 >> 1)
      {
        sub_190B21F30(v28 > 1, v29 + 1, 1);
        uint64_t v21 = v31;
      }
      ++v20;
      *(void *)(v21 + 16) = v29 + 1;
      *(void *)(v21 + 8 * v29 + 32) = v24;
      if (v19 == v20)
      {
        swift_bridgeObjectRelease();
        return sub_190B5B10C(v21);
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v21 = MEMORY[0x1E4FBC860];
  return sub_190B5B10C(v21);
}

void sub_190B64B30(unint64_t *a1, void *a2)
{
  id v4 = a2;
  uint64_t v5 = swift_bridgeObjectRetain();
  sub_190B6AE9C(v5);
  uint64_t v7 = v6;
  unint64_t v8 = v2;
  swift_bridgeObjectRelease();

  unint64_t v29 = MEMORY[0x1E4FBC860];
  uint64_t v9 = *(void **)(v7 + 16);
  if (v9)
  {
    id v26 = v4;
    uint64_t v10 = v7 + 32;
    swift_bridgeObjectRetain();
    unint64_t v11 = 0;
    while (1)
    {
      unint64_t v13 = *(void *)(v10 + 8 * v11);
      if (v13 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v14 = sub_190B778A8();
        if (!v14)
        {
LABEL_3:
          swift_bridgeObjectRelease();
          unint64_t v12 = MEMORY[0x1E4FBC860];
          goto LABEL_4;
        }
      }
      else
      {
        uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v14) {
          goto LABEL_3;
        }
      }
      unint64_t v28 = MEMORY[0x1E4FBC860];
      unint64_t v15 = &v28;
      sub_190B77838();
      if (v14 < 0)
      {
        __break(1u);
LABEL_30:
        unint64_t v11 = (unint64_t)sub_190B58D74((void *)v11);
        if ((v8 & 0x8000000000000000) != 0) {
          goto LABEL_31;
        }
LABEL_22:
        if (v8 < *(void *)(v11 + 16))
        {
          sub_190B5FBB8((unint64_t)v3);
          unint64_t v15 = a1;
          goto LABEL_28;
        }
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      if ((v13 & 0xC000000000000001) != 0)
      {
        unint64_t v16 = 0;
        do
        {
          unint64_t v8 = v16 + 1;
          id v3 = (id)MEMORY[0x192FD1FB0]();
          sub_190B77808();
          sub_190B77848();
          sub_190B77858();
          sub_190B77818();
          unint64_t v16 = v8;
        }
        while (v14 != v8);
      }
      else
      {
        unint64_t v8 = v13 + 32;
        do
        {
          unint64_t v17 = *(void **)v8;
          v8 += 8;
          id v3 = v17;
          sub_190B77808();
          sub_190B77848();
          sub_190B77858();
          sub_190B77818();
          --v14;
        }
        while (v14);
      }
      unint64_t v12 = v28;
      swift_bridgeObjectRelease();
LABEL_4:
      ++v11;
      sub_190B5B27C(v12);
      if ((void *)v11 == v9)
      {
        swift_bridgeObjectRelease_n();
        unint64_t v18 = v29;
        id v4 = v26;
        unint64_t v15 = a1;
        goto LABEL_19;
      }
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v18 = MEMORY[0x1E4FBC860];
  unint64_t v15 = a1;
LABEL_19:
  id v3 = (id)sub_190B6A1AC(v18, (unint64_t *)&qword_1E92A3E20, (uint64_t)off_1E56B2E20, (unint64_t *)&qword_1E92A6020, (uint64_t *)&unk_1E92A61C0);
  swift_bridgeObjectRelease();
  unint64_t v11 = *v15;
  id v19 = v4;
  uint64_t v20 = swift_bridgeObjectRetain();
  unint64_t v8 = sub_190B6B128(v20, v19);
  char v22 = v21;
  swift_bridgeObjectRelease();

  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((v22 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      goto LABEL_30;
    }
    if ((v8 & 0x8000000000000000) == 0) {
      goto LABEL_22;
    }
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
LABEL_33:
  }
    unint64_t v11 = (unint64_t)sub_190B49938(0, *(void *)(v11 + 16) + 1, 1, (void *)v11);
  unint64_t v25 = *(void *)(v11 + 16);
  unint64_t v24 = *(void *)(v11 + 24);
  if (v25 >= v24 >> 1) {
    unint64_t v11 = (unint64_t)sub_190B49938((void *)(v24 > 1), v25 + 1, 1, (void *)v11);
  }
  *(void *)(v11 + 16) = v25 + 1;
  *(void *)(v11 + 8 * v25 + 32) = v3;
LABEL_28:
  *unint64_t v15 = v11;
}

uint64_t sub_190B64E80()
{
  uint64_t v0 = sub_190B76FC8();
  __swift_allocate_value_buffer(v0, qword_1E92A8448);
  __swift_project_value_buffer(v0, (uint64_t)qword_1E92A8448);
  return sub_190B76FB8();
}

uint64_t sub_190B64F6C()
{
  uint64_t v1 = OBJC_IVAR___CNDuplicateContactsManager_findResult;
  if (*(void *)(v0 + OBJC_IVAR___CNDuplicateContactsManager_findResult))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR___CNDuplicateContactsManager_findResult);
  }
  else
  {
    id v3 = (void *)(v0 + OBJC_IVAR___CNDuplicateContactsManager_mergeResult);
    uint64_t v4 = *(void *)(v0 + OBJC_IVAR___CNDuplicateContactsManager_mergeResult);
    v3[1] = 0;
    v3[2] = 0;
    *id v3 = 0;
    sub_190B6502C(v4);
    unint64_t v5 = swift_bridgeObjectRetain();
    sub_190B63568(v5, &v7);
    swift_bridgeObjectRelease();
    *(void *)(v0 + v1) = v7;
    swift_bridgeObjectRelease();
    uint64_t v2 = *(void *)(v0 + v1);
    if (v2) {
      swift_bridgeObjectRetain();
    }
    else {
      uint64_t v2 = MEMORY[0x1E4FBC860];
    }
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_190B6502C(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

id DuplicateContactsManager.__allocating_init(withContactStore:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  *(void *)&v3[OBJC_IVAR___CNDuplicateContactsManager_contacts] = MEMORY[0x1E4FBC860];
  *(void *)&v3[OBJC_IVAR___CNDuplicateContactsManager_findResult] = 0;
  uint64_t v4 = &v3[OBJC_IVAR___CNDuplicateContactsManager_mergeResult];
  v4[1] = 0;
  v4[2] = 0;
  void *v4 = 0;
  v3[OBJC_IVAR___CNDuplicateContactsManager_didPerformMerge] = 0;
  *(void *)&v3[OBJC_IVAR___CNDuplicateContactsManager_contactStore] = a1;
  v6.receiver = v3;
  v6.super_class = v1;
  return objc_msgSendSuper2(&v6, sel_init);
}

id DuplicateContactsManager.init(withContactStore:)(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR___CNDuplicateContactsManager_contacts] = MEMORY[0x1E4FBC860];
  *(void *)&v1[OBJC_IVAR___CNDuplicateContactsManager_findResult] = 0;
  uint64_t v2 = &v1[OBJC_IVAR___CNDuplicateContactsManager_mergeResult];
  v2[1] = 0;
  v2[2] = 0;
  *uint64_t v2 = 0;
  v1[OBJC_IVAR___CNDuplicateContactsManager_didPerformMerge] = 0;
  *(void *)&v1[OBJC_IVAR___CNDuplicateContactsManager_contactStore] = a1;
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for DuplicateContactsManager();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for DuplicateContactsManager()
{
  return self;
}

void sub_190B65244(id *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  unint64_t v5 = v4;
  v43[4] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v9 = (uint64_t *)*a1;
  id v10 = objc_msgSend(*a1, sel_identifier);
  if (!v10)
  {
    sub_190B77168();
    id v10 = (id)sub_190B77158();
    swift_bridgeObjectRelease();
  }
  id v11 = objc_msgSend(self, sel_predicateForContactsInContainerWithIdentifier_, v10);

  objc_msgSend(a2, sel_setPredicate_, v11);
  unint64_t v12 = *(void **)(a3 + OBJC_IVAR___CNDuplicateContactsManager_contactStore);
  v43[0] = 0;
  id v13 = objc_msgSend(v12, sel_executeFetchRequest_error_, a2, v43);
  if (!v13)
  {
    id v22 = v43[0];
    unint64_t v5 = (void *)sub_190B76D68();

    swift_willThrow();
    if (qword_1E92A3C70 == -1)
    {
LABEL_14:
      uint64_t v23 = sub_190B76FC8();
      __swift_project_value_buffer(v23, (uint64_t)qword_1E92A8448);
      unint64_t v24 = v9;
      id v25 = v5;
      id v26 = v24;
      id v27 = v5;
      unint64_t v28 = sub_190B76FA8();
      os_log_type_t v29 = sub_190B77578();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = swift_slowAlloc();
        uint64_t v38 = (void *)swift_slowAlloc();
        v43[0] = v38;
        *(_DWORD *)uint64_t v30 = 136315394;
        id v31 = objc_msgSend(v26, sel_identifier);
        uint64_t v39 = a4;
        uint64_t v32 = sub_190B77168();
        unint64_t v34 = v33;

        id v42 = (id)sub_190B21150(v32, v34, (uint64_t *)v43);
        sub_190B77648();

        swift_bridgeObjectRelease();
        *(_WORD *)(v30 + 12) = 2080;
        swift_getErrorValue();
        uint64_t v35 = sub_190B77A08();
        id v42 = (id)sub_190B21150(v35, v36, (uint64_t *)v43);
        a4 = v39;
        sub_190B77648();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1909E3000, v28, v29, "Duplicate contacts manager could not load contacts for containers %s. %s", (uint8_t *)v30, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x192FD42A0](v38, -1, -1);
        MEMORY[0x192FD42A0](v30, -1, -1);
      }
      else
      {
      }
      goto LABEL_20;
    }
LABEL_23:
    swift_once();
    goto LABEL_14;
  }
  uint64_t v14 = v13;
  id v15 = v43[0];
  id v42 = objc_msgSend(v14, sel_value);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92A3E10);
  swift_dynamicCast();
  unint64_t v16 = v41;
  if (!(v41 >> 62))
  {
    uint64_t v17 = *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v17) {
      goto LABEL_6;
    }
LABEL_19:
    swift_bridgeObjectRelease();

LABEL_20:
    uint64_t v21 = MEMORY[0x1E4FBC860];
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_190B778A8();
  swift_bridgeObjectRelease();
  if (!v17) {
    goto LABEL_19;
  }
LABEL_6:
  uint64_t v40 = MEMORY[0x1E4FBC860];
  uint64_t v9 = &v40;
  sub_190B77838();
  if (v17 < 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v37 = v14;
  uint64_t v18 = 0;
  do
  {
    if ((v16 & 0xC000000000000001) != 0) {
      id v19 = (id)MEMORY[0x192FD1FB0](v18, v16);
    }
    else {
      id v19 = *(id *)(v16 + 8 * v18 + 32);
    }
    uint64_t v20 = v19;
    ++v18;
    objc_msgSend(v19, sel_mutableCopy, v37);
    sub_190B77698();
    swift_unknownObjectRelease();
    sub_190B23474(0, (unint64_t *)&qword_1E92A3E20);
    swift_dynamicCast();

    sub_190B77808();
    sub_190B77848();
    sub_190B77858();
    sub_190B77818();
  }
  while (v17 != v18);
  uint64_t v21 = v40;
  swift_bridgeObjectRelease();

LABEL_21:
  *a4 = v21;
}

void sub_190B65788(void **a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  v49[1] = *(id *)MEMORY[0x1E4F143B8];
  unint64_t v6 = sub_190B76FC8();
  unint64_t v7 = *(void (***)(char *, uint64_t, unint64_t))(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = *a1;
  id v11 = self;
  id v12 = objc_msgSend(v10, sel_identifier);
  id v13 = objc_msgSend(v11, sel_predicateForContainersInAccountWithIdentifier_, v12);

  uint64_t v14 = *(void **)(a2 + OBJC_IVAR___CNDuplicateContactsManager_contactStore);
  v49[0] = 0;
  id v15 = objc_msgSend(v14, sel_containersMatchingPredicate_error_, v13, v49);
  id v16 = v49[0];
  if (!v15)
  {
    uint64_t v47 = v7;
    id v24 = v49[0];
    unint64_t v7 = (void (**)(char *, uint64_t, unint64_t))sub_190B76D68();

    swift_willThrow();
    if (qword_1E92A3C70 == -1) {
      goto LABEL_15;
    }
    goto LABEL_25;
  }
  uint64_t v17 = v15;
  sub_190B23474(0, &qword_1E92A3D48);
  unint64_t v6 = sub_190B772C8();
  id v18 = v16;

  v49[0] = (id)MEMORY[0x1E4FBC860];
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_190B778A8();
    swift_bridgeObjectRelease();
    if (v19) {
      goto LABEL_4;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    id v23 = (id)MEMORY[0x1E4FBC860];
LABEL_22:

    goto LABEL_23;
  }
  uint64_t v19 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v19) {
    goto LABEL_21;
  }
LABEL_4:
  if (v19 >= 1)
  {
    int64_t v46 = a3;
    for (uint64_t i = 0; i != v19; ++i)
    {
      if ((v6 & 0xC000000000000001) != 0) {
        id v21 = (id)MEMORY[0x192FD1FB0](i, v6);
      }
      else {
        id v21 = *(id *)(v6 + 8 * i + 32);
      }
      id v22 = v21;
      if (objc_msgSend(v21, sel_isGuardianRestricted))
      {
      }
      else
      {
        sub_190B77808();
        sub_190B77848();
        sub_190B77858();
        sub_190B77818();
      }
    }
    swift_bridgeObjectRelease();
    id v23 = v49[0];
    a3 = v46;
    goto LABEL_22;
  }
  __break(1u);
LABEL_25:
  swift_once();
LABEL_15:
  uint64_t v25 = __swift_project_value_buffer(v6, (uint64_t)qword_1E92A8448);
  id v26 = v47;
  v47[2](v9, v25, v6);
  id v27 = v10;
  unint64_t v28 = v7;
  id v29 = v27;
  uint64_t v30 = v7;
  id v31 = sub_190B76FA8();
  int v32 = sub_190B77578();
  if (!os_log_type_enabled(v31, (os_log_type_t)v32))
  {

    ((void (*)(char *, unint64_t))v26[1])(v9, v6);
    goto LABEL_19;
  }
  int v44 = v32;
  os_log_t v45 = v31;
  int64_t v46 = a3;
  uint64_t v33 = swift_slowAlloc();
  uint64_t v43 = (void *)swift_slowAlloc();
  v49[0] = v43;
  *(_DWORD *)uint64_t v33 = 136315394;
  id v34 = objc_msgSend(v29, sel_identifier);
  if (v34)
  {
    uint64_t v35 = v34;
    uint64_t v36 = sub_190B77168();
    unint64_t v38 = v37;

    uint64_t v48 = sub_190B21150(v36, v38, (uint64_t *)v49);
    sub_190B77648();

    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v39 = sub_190B77A08();
    uint64_t v48 = sub_190B21150(v39, v40, (uint64_t *)v49);
    sub_190B77648();
    swift_bridgeObjectRelease();

    os_log_t v41 = v45;
    _os_log_impl(&dword_1909E3000, v45, (os_log_type_t)v44, "Duplicate contacts manager could not load contact containers for account %s. %s", (uint8_t *)v33, 0x16u);
    id v42 = v43;
    swift_arrayDestroy();
    MEMORY[0x192FD42A0](v42, -1, -1);
    MEMORY[0x192FD42A0](v33, -1, -1);

    ((void (*)(char *, unint64_t))v47[1])(v9, v6);
    a3 = v46;
LABEL_19:

    id v23 = (id)MEMORY[0x1E4FBC860];
LABEL_23:
    *a3 = v23;
    return;
  }

  __break(1u);
}

uint64_t sub_190B65D0C()
{
  v26[4] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___CNDuplicateContactsManager_contactStore);
  v26[0] = 0;
  id v2 = objc_msgSend(v1, sel_accountsMatchingPredicate_error_, 0, v26);
  id v3 = v26[0];
  if (v2)
  {
    objc_super v4 = v2;
    uint64_t v5 = sub_190B772C8();
    id v6 = v3;

    uint64_t v7 = MEMORY[0x1E4FBC860];
    uint64_t v23 = MEMORY[0x1E4FBC860];
    uint64_t v8 = *(void *)(v5 + 16);
    if (v8)
    {
      uint64_t v9 = v5 + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_190B23088(v9, (uint64_t)v26);
        sub_190B23088((uint64_t)v26, (uint64_t)v24);
        sub_190B23474(0, &qword_1E92A3D80);
        if ((swift_dynamicCast() & 1) == 0) {
          uint64_t v25 = 0;
        }
        uint64_t v10 = __swift_destroy_boxed_opaque_existential_0((uint64_t)v26);
        if (v25)
        {
          MEMORY[0x192FD1A90](v10);
          if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_190B77308();
          }
          sub_190B77368();
          sub_190B772E8();
        }
        v9 += 32;
        --v8;
      }
      while (v8);
      swift_bridgeObjectRelease();
      uint64_t v7 = v23;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    id v11 = v26[0];
    id v12 = (void *)sub_190B76D68();

    swift_willThrow();
    if (qword_1E92A3C70 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_190B76FC8();
    __swift_project_value_buffer(v13, (uint64_t)qword_1E92A8448);
    id v14 = v12;
    id v15 = v12;
    id v16 = sub_190B76FA8();
    os_log_type_t v17 = sub_190B77578();
    if (os_log_type_enabled(v16, v17))
    {
      id v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = (void *)swift_slowAlloc();
      v26[0] = v19;
      *(_DWORD *)id v18 = 136315138;
      swift_getErrorValue();
      uint64_t v20 = sub_190B77A08();
      v24[0] = sub_190B21150(v20, v21, (uint64_t *)v26);
      sub_190B77648();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1909E3000, v16, v17, "Duplicate contacts manager could not load accounts %s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FD42A0](v19, -1, -1);
      MEMORY[0x192FD42A0](v18, -1, -1);
    }
    else
    {
    }
    return MEMORY[0x1E4FBC860];
  }
  return v7;
}

uint64_t sub_190B661EC(const void *a1)
{
  *(void *)(v1 + 16) = _Block_copy(a1);
  return MEMORY[0x1F4188298](sub_190B66254, 0, 0);
}

uint64_t sub_190B66254()
{
  if (qword_1E92A3C78 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void (***)(void, void, void))(v0 + 16);
  uint64_t v2 = sub_190B20720();
  v1[2](v1, v2, v3);
  _Block_release(v1);
  objc_super v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_190B66314(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR___CNDuplicateContactsManager_findResult;
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR___CNDuplicateContactsManager_findResult);
  if (v5)
  {
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v7 = (void *)(v2 + OBJC_IVAR___CNDuplicateContactsManager_mergeResult);
    uint64_t v8 = *(void *)(v2 + OBJC_IVAR___CNDuplicateContactsManager_mergeResult);
    v7[1] = 0;
    void v7[2] = 0;
    *uint64_t v7 = 0;
    sub_190B6502C(v8);
    unint64_t v9 = swift_bridgeObjectRetain();
    sub_190B63568(v9, (unint64_t *)&v21);
    swift_bridgeObjectRelease();
    *(void *)(v2 + v4) = v21;
    swift_bridgeObjectRelease();
    uint64_t v6 = *(void *)(v2 + v4);
    if (v6) {
      swift_bridgeObjectRetain();
    }
    else {
      uint64_t v6 = MEMORY[0x1E4FBC860];
    }
  }
  uint64_t v10 = *(void *)(v6 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!v10) {
    return v10 != 0;
  }
  type metadata accessor for DuplicateContacts();
  uint64_t v11 = sub_190B64F6C();
  id v12 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), sel_init);
  sub_190B26668(v11, v12, (uint64_t *)&v21);
  swift_bridgeObjectRelease();

  uint64_t v13 = v22;
  id v14 = (uint64_t *)(v2 + OBJC_IVAR___CNDuplicateContactsManager_mergeResult);
  uint64_t v15 = *(void *)(v2 + OBJC_IVAR___CNDuplicateContactsManager_mergeResult);
  *(_OWORD *)id v14 = v21;
  void v14[2] = v13;
  uint64_t result = sub_190B6502C(v15);
  uint64_t v17 = *v14;
  if (*v14)
  {
    uint64_t v20 = v14 + 1;
    uint64_t v19 = v14[1];
    uint64_t v18 = v20[1];
    *(void *)&long long v21 = v17;
    *((void *)&v21 + 1) = v19;
    uint64_t v22 = v18;
    sub_190B6B41C(v17);
    sub_190B2FB0C((uint64_t *)&v21, a1);
    sub_190B6502C(v17);
    *(unsigned char *)(v2 + OBJC_IVAR___CNDuplicateContactsManager_didPerformMerge) = 1;
    return v10 != 0;
  }
  __break(1u);
  return result;
}

void static DuplicateContactsManager.refreshManagedDuplicates(completionHandler:)(void (*a1)(void), uint64_t a2)
{
  uint64_t v3 = v2;
  id v27 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), sel_init);
  if (!sub_190B6BECC(v27))
  {
    if (qword_1E92A3C70 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_190B76FC8();
    __swift_project_value_buffer(v11, (uint64_t)qword_1E92A8448);
    id v12 = sub_190B76FA8();
    os_log_type_t v13 = sub_190B77558();
    if (!os_log_type_enabled(v12, v13)) {
      goto LABEL_18;
    }
    id v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v14 = 0;
    uint64_t v15 = "Will defer duplicates analysis while in process.";
    goto LABEL_17;
  }
  id v6 = objc_msgSend(v27, sel_currentHistoryToken);
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = sub_190B76E08();
    unint64_t v10 = v9;
  }
  else
  {
    uint64_t v8 = 0;
    unint64_t v10 = 0xC000000000000000;
  }
  uint64_t v16 = sub_190B76DF8();
  uint64_t v18 = v17;
  sub_190B2EB28(v8, v10);
  if (qword_1E92A3C78 != -1) {
    swift_once();
  }
  v19._uint64_t countAndFlagsBits = v16;
  v19._object = v18;
  if (ManagedDuplicateStore.willRefresh(token:)(v19))
  {
    id v20 = objc_msgSend(self, sel_currentEnvironment);
    id v21 = objc_msgSend(v20, sel_schedulerProvider);

    id v22 = objc_msgSend(v21, sel_backgroundScheduler);
    swift_unknownObjectRelease();
    uint64_t v23 = (void *)swift_allocObject();
    v23[2] = v27;
    v23[3] = v16;
    v23[4] = v18;
    v23[5] = a1;
    v23[6] = a2;
    v23[7] = v3;
    aBlock[4] = sub_190B6C0B8;
    aBlock[5] = v23;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    id aBlock[2] = sub_190B63324;
    aBlock[3] = &block_descriptor_3;
    id v24 = _Block_copy(aBlock);
    id v25 = v27;
    swift_retain();
    swift_release();
    objc_msgSend(v22, sel_performBlock_, v24);
    _Block_release(v24);

    swift_unknownObjectRelease();
    return;
  }
  swift_bridgeObjectRelease();
  if (qword_1E92A3C70 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_190B76FC8();
  __swift_project_value_buffer(v26, (uint64_t)qword_1E92A8448);
  id v12 = sub_190B76FA8();
  os_log_type_t v13 = sub_190B77568();
  if (os_log_type_enabled(v12, v13))
  {
    id v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v14 = 0;
    uint64_t v15 = "ManagedDuplicates are already up to date. Exiting";
LABEL_17:
    _os_log_impl(&dword_1909E3000, v12, v13, v15, v14, 2u);
    MEMORY[0x192FD42A0](v14, -1, -1);
  }
LABEL_18:

  a1(0);
}

uint64_t sub_190B66958(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  sub_190B6C4F4(a1);
  if (qword_1E92A3C78 != -1) {
    swift_once();
  }
  if (sub_190B59D30(1) == a2 && v7 == a3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = sub_190B77998();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0) {
      return a4(1);
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3DA0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_190B908E0;
  strcpy((char *)(inited + 32), "currentToken");
  *(unsigned char *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 4_Block_object_dispose(&STACK[0x228], 8) = a2;
  *(void *)(inited + 56) = a3;
  swift_bridgeObjectRetain_n();
  unint64_t v11 = sub_190B611B0(inited);
  sub_190B59C50(v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a4(1);
}

void static DuplicateContactsManager.performRefreshManagedDuplicates(with:)(uint64_t *a1)
{
}

uint64_t sub_190B66DF0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  sub_190B772C8();
  a4();

  return swift_bridgeObjectRelease();
}

id DuplicateContactsManager.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void DuplicateContactsManager.init()()
{
}

id DuplicateContactsManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DuplicateContactsManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_190B66F7C(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v29 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v30 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      int64_t v31 = v3;
      unint64_t v9 = v8 | (v3 << 6);
      goto LABEL_26;
    }
    int64_t v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v10 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v10);
    int64_t v12 = v3 + 1;
    if (!v11)
    {
      int64_t v12 = v3 + 2;
      if (v3 + 2 >= v30) {
        return 1;
      }
      unint64_t v11 = *(void *)(v29 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v3 + 3;
        if (v3 + 3 >= v30) {
          return 1;
        }
        unint64_t v11 = *(void *)(v29 + 8 * v12);
        if (!v11)
        {
          int64_t v12 = v3 + 4;
          if (v3 + 4 >= v30) {
            return 1;
          }
          unint64_t v11 = *(void *)(v29 + 8 * v12);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_25:
    unint64_t v6 = (v11 - 1) & v11;
    int64_t v31 = v12;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_26:
    uint64_t v14 = result;
    uint64_t v15 = (uint64_t *)(*(void *)(result + 48) + 16 * v9);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    sub_190B77A58();
    swift_bridgeObjectRetain();
    sub_190B771D8();
    uint64_t v18 = sub_190B77A68();
    uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v20 = v18 & ~v19;
    if (((*(void *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
      goto LABEL_41;
    }
    uint64_t v21 = *(void *)(a2 + 48);
    id v22 = (void *)(v21 + 16 * v20);
    BOOL v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (sub_190B77998() & 1) == 0)
    {
      uint64_t v24 = ~v19;
      for (unint64_t i = v20 + 1; ; unint64_t i = v26 + 1)
      {
        uint64_t v26 = i & v24;
        if (((*(void *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0) {
          break;
        }
        id v27 = (void *)(v21 + 16 * v26);
        BOOL v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (sub_190B77998() & 1) != 0) {
          goto LABEL_7;
        }
      }
LABEL_41:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    uint64_t result = v14;
    int64_t v3 = v31;
  }
  uint64_t v13 = v3 + 5;
  if (v3 + 5 >= v30) {
    return 1;
  }
  unint64_t v11 = *(void *)(v29 + 8 * v13);
  if (v11)
  {
    int64_t v12 = v3 + 5;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v12 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_25;
    }
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_190B67220(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  void *v4 = v3;
  v4[1] = sub_190B446AC;
  return v6();
}

uint64_t sub_190B672EC(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_190B446AC;
  return v7();
}

uint64_t sub_190B673B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_190B77448();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_190B77438();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_190B23144(a1, &qword_1E92A3E40);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_190B773E8();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_190B67564(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = sub_190B67640;
  return v6(a1);
}

uint64_t sub_190B67640()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_190B67738(uint64_t isStackAllocationSafe, uint64_t (*a2)(char *, unint64_t, uint64_t))
{
  uint64_t v4 = v2;
  uint64_t v5 = isStackAllocationSafe;
  v12[1] = *MEMORY[0x1E4F143B8];
  char v6 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v7 = (unint64_t)((1 << v6) + 63) >> 6;
  size_t v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    uint64_t v9 = a2((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, v5);
    if (v2) {
      swift_willThrow();
    }
    else {
      return v9;
    }
  }
  else
  {
    int64_t v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    uint64_t v4 = a2((char *)v10, v7, v5);
    MEMORY[0x192FD42A0](v10, -1, -1);
  }
  return v4;
}

uint64_t sub_190B678A4(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v34 = a2;
  uint64_t v35 = a1;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3C88);
  uint64_t v4 = MEMORY[0x1F4188790](v46);
  unint64_t v40 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  int v44 = (char *)&v33 - v6;
  uint64_t v42 = sub_190B76CC8();
  uint64_t result = MEMORY[0x1F4188790](v42);
  uint64_t v43 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = 0;
  uint64_t v48 = (void *)a3;
  uint64_t v11 = *(void *)(a3 + 64);
  uint64_t v36 = 0;
  uint64_t v37 = a3 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  os_log_t v41 = v8 + 2;
  os_log_t v45 = v8;
  int64_t v38 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v39 = v8 + 1;
  uint64_t v15 = v8;
  uint64_t v16 = v42;
  uint64_t v17 = v43;
  uint64_t v18 = (uint64_t)v44;
  while (1)
  {
    if (v14)
    {
      uint64_t v49 = (v14 - 1) & v14;
      int64_t v50 = v10;
      unint64_t v19 = __clz(__rbit64(v14)) | (v10 << 6);
      goto LABEL_5;
    }
    int64_t v28 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v28 >= v38) {
      return sub_190B683FC(v35, v34, v36, v48);
    }
    unint64_t v29 = *(void *)(v37 + 8 * v28);
    int64_t v30 = v10 + 1;
    if (!v29)
    {
      int64_t v30 = v10 + 2;
      if (v10 + 2 >= v38) {
        return sub_190B683FC(v35, v34, v36, v48);
      }
      unint64_t v29 = *(void *)(v37 + 8 * v30);
      if (!v29)
      {
        int64_t v30 = v10 + 3;
        if (v10 + 3 >= v38) {
          return sub_190B683FC(v35, v34, v36, v48);
        }
        unint64_t v29 = *(void *)(v37 + 8 * v30);
        if (!v29) {
          break;
        }
      }
    }
LABEL_20:
    uint64_t v49 = (v29 - 1) & v29;
    int64_t v50 = v30;
    unint64_t v19 = __clz(__rbit64(v29)) + (v30 << 6);
LABEL_5:
    unint64_t v20 = v48;
    uint64_t v21 = (void (*)(char *, unint64_t, uint64_t))v15[2];
    v21(v17, v48[6] + v15[9] * v19, v16);
    uint64_t v22 = v20[7];
    unint64_t v47 = v19;
    uint64_t v23 = *(void *)(v22 + 8 * v19);
    v21((char *)v18, (unint64_t)v17, v16);
    uint64_t v24 = *(int *)(v46 + 48);
    *(void *)(v18 + v24) = v23;
    id v25 = v40;
    v21(v40, v18, v16);
    *(void *)&v25[v24] = v23;
    swift_bridgeObjectRetain_n();
    unint64_t v26 = sub_190B25358();
    sub_190B23144(v18, &qword_1E92A3C88);
    id v27 = (void (*)(char *, uint64_t))v15[1];
    v27(v25, v16);
    swift_bridgeObjectRelease();
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v27)(v17, v16);
    int64_t v10 = v50;
    unint64_t v14 = v49;
    if (v26 == 1)
    {
      *(unint64_t *)((char *)v35 + ((v47 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v47;
      if (__OFADD__(v36++, 1))
      {
        __break(1u);
        return sub_190B683FC(v35, v34, v36, v48);
      }
    }
  }
  uint64_t v31 = v10 + 4;
  if (v10 + 4 >= v38) {
    return sub_190B683FC(v35, v34, v36, v48);
  }
  unint64_t v29 = *(void *)(v37 + 8 * v31);
  if (v29)
  {
    int64_t v30 = v10 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v30 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v30 >= v38) {
      return sub_190B683FC(v35, v34, v36, v48);
    }
    unint64_t v29 = *(void *)(v37 + 8 * v30);
    ++v31;
    if (v29) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_190B67C64(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v34 = a2;
  uint64_t v35 = a1;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3C88);
  uint64_t v4 = MEMORY[0x1F4188790](v46);
  unint64_t v40 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  int v44 = (char *)&v33 - v6;
  uint64_t v42 = sub_190B76CC8();
  uint64_t result = MEMORY[0x1F4188790](v42);
  uint64_t v43 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = 0;
  uint64_t v48 = (void *)a3;
  uint64_t v11 = *(void *)(a3 + 64);
  uint64_t v36 = 0;
  uint64_t v37 = a3 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  os_log_t v41 = v8 + 2;
  os_log_t v45 = v8;
  int64_t v38 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v39 = v8 + 1;
  uint64_t v15 = v8;
  uint64_t v16 = v42;
  uint64_t v17 = v43;
  uint64_t v18 = (uint64_t)v44;
  while (1)
  {
    if (v14)
    {
      uint64_t v49 = (v14 - 1) & v14;
      int64_t v50 = v10;
      unint64_t v19 = __clz(__rbit64(v14)) | (v10 << 6);
      goto LABEL_5;
    }
    int64_t v28 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v28 >= v38) {
      return sub_190B683FC(v35, v34, v36, v48);
    }
    unint64_t v29 = *(void *)(v37 + 8 * v28);
    int64_t v30 = v10 + 1;
    if (!v29)
    {
      int64_t v30 = v10 + 2;
      if (v10 + 2 >= v38) {
        return sub_190B683FC(v35, v34, v36, v48);
      }
      unint64_t v29 = *(void *)(v37 + 8 * v30);
      if (!v29)
      {
        int64_t v30 = v10 + 3;
        if (v10 + 3 >= v38) {
          return sub_190B683FC(v35, v34, v36, v48);
        }
        unint64_t v29 = *(void *)(v37 + 8 * v30);
        if (!v29) {
          break;
        }
      }
    }
LABEL_20:
    uint64_t v49 = (v29 - 1) & v29;
    int64_t v50 = v30;
    unint64_t v19 = __clz(__rbit64(v29)) + (v30 << 6);
LABEL_5:
    unint64_t v20 = v48;
    uint64_t v21 = (void (*)(char *, unint64_t, uint64_t))v15[2];
    v21(v17, v48[6] + v15[9] * v19, v16);
    uint64_t v22 = v20[7];
    unint64_t v47 = v19;
    uint64_t v23 = *(void *)(v22 + 8 * v19);
    v21((char *)v18, (unint64_t)v17, v16);
    uint64_t v24 = *(int *)(v46 + 48);
    *(void *)(v18 + v24) = v23;
    id v25 = v40;
    v21(v40, v18, v16);
    *(void *)&v25[v24] = v23;
    swift_bridgeObjectRetain_n();
    int64_t v26 = sub_190B25358();
    sub_190B23144(v18, &qword_1E92A3C88);
    id v27 = (void (*)(char *, uint64_t))v15[1];
    v27(v25, v16);
    swift_bridgeObjectRelease();
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v27)(v17, v16);
    int64_t v10 = v50;
    unint64_t v14 = v49;
    if (v26 >= 2)
    {
      *(unint64_t *)((char *)v35 + ((v47 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v47;
      if (__OFADD__(v36++, 1))
      {
        __break(1u);
        return sub_190B683FC(v35, v34, v36, v48);
      }
    }
  }
  uint64_t v31 = v10 + 4;
  if (v10 + 4 >= v38) {
    return sub_190B683FC(v35, v34, v36, v48);
  }
  unint64_t v29 = *(void *)(v37 + 8 * v31);
  if (v29)
  {
    int64_t v30 = v10 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v30 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v30 >= v38) {
      return sub_190B683FC(v35, v34, v36, v48);
    }
    unint64_t v29 = *(void *)(v37 + 8 * v30);
    ++v31;
    if (v29) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_190B68024(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v33 = a2;
  uint64_t v34 = a1;
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3C88);
  uint64_t v4 = MEMORY[0x1F4188790](v41);
  uint64_t v46 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  int v44 = (char *)&v33 - v6;
  uint64_t v7 = sub_190B76CC8();
  uint64_t result = MEMORY[0x1F4188790](v7);
  os_log_t v45 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v11 = 0;
  uint64_t v42 = (void *)a3;
  uint64_t v12 = *(void *)(a3 + 64);
  uint64_t v35 = 0;
  uint64_t v36 = a3 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  uint64_t v39 = v9 + 16;
  uint64_t v40 = v9;
  int64_t v37 = (unint64_t)(v13 + 63) >> 6;
  int64_t v38 = (void (**)(char *, uint64_t))(v9 + 8);
  while (v15)
  {
    unint64_t v16 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    int64_t v43 = v11;
    unint64_t v17 = v16 | (v11 << 6);
LABEL_17:
    uint64_t v22 = v42;
    uint64_t v23 = *(void (**)(char *, unint64_t, uint64_t))(v40 + 16);
    uint64_t v24 = v45;
    v23(v45, v42[6] + *(void *)(v40 + 72) * v17, v7);
    unint64_t v25 = *(void *)(v22[7] + 8 * v17);
    uint64_t v26 = v7;
    uint64_t v27 = (uint64_t)v44;
    v23(v44, (unint64_t)v24, v26);
    uint64_t v28 = *(int *)(v41 + 48);
    *(void *)(v27 + v2_Block_object_dispose(&STACK[0x228], 8) = v25;
    unint64_t v29 = v46;
    uint64_t v30 = v27;
    uint64_t v7 = v26;
    v23(v46, v30, v26);
    *(void *)&v29[v28] = v25;
    if (v25 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v31 = sub_190B778A8();
    }
    else
    {
      uint64_t v31 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
    }
    int64_t v11 = v43;
    sub_190B23144((uint64_t)v44, &qword_1E92A3C88);
    int v32 = *v38;
    (*v38)(v46, v7);
    swift_bridgeObjectRelease();
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v32)(v45, v7);
    if (v31 >= 2)
    {
      *(unint64_t *)((char *)v34 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      BOOL v18 = __OFADD__(v35++, 1);
      if (v18) {
        goto LABEL_31;
      }
    }
  }
  BOOL v18 = __OFADD__(v11, 1);
  int64_t v19 = v11 + 1;
  if (v18)
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v19 >= v37) {
    return sub_190B683FC(v34, v33, v35, v42);
  }
  unint64_t v20 = *(void *)(v36 + 8 * v19);
  if (v20)
  {
LABEL_16:
    unint64_t v15 = (v20 - 1) & v20;
    int64_t v43 = v19;
    unint64_t v17 = __clz(__rbit64(v20)) + (v19 << 6);
    goto LABEL_17;
  }
  int64_t v21 = v19 + 1;
  if (v19 + 1 >= v37) {
    return sub_190B683FC(v34, v33, v35, v42);
  }
  unint64_t v20 = *(void *)(v36 + 8 * v21);
  if (v20) {
    goto LABEL_15;
  }
  int64_t v21 = v19 + 2;
  if (v19 + 2 >= v37) {
    return sub_190B683FC(v34, v33, v35, v42);
  }
  unint64_t v20 = *(void *)(v36 + 8 * v21);
  if (v20) {
    goto LABEL_15;
  }
  int64_t v21 = v19 + 3;
  if (v19 + 3 >= v37) {
    return sub_190B683FC(v34, v33, v35, v42);
  }
  unint64_t v20 = *(void *)(v36 + 8 * v21);
  if (v20)
  {
LABEL_15:
    int64_t v19 = v21;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v19 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v19 >= v37) {
      return sub_190B683FC(v34, v33, v35, v42);
    }
    unint64_t v20 = *(void *)(v36 + 8 * v19);
    ++v21;
    if (v20) {
      goto LABEL_16;
    }
  }
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_190B683FC(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v47 = sub_190B76CC8();
  uint64_t v42 = *(void *)(v47 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v47);
  uint64_t v46 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v41 = (char *)&v36 - v10;
  if (!a3) {
    return MEMORY[0x1E4FBC868];
  }
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3E30);
  uint64_t result = sub_190B778E8();
  uint64_t v12 = result;
  int64_t v37 = a1;
  uint64_t v38 = a2;
  if (a2 < 1) {
    unint64_t v13 = 0;
  }
  else {
    unint64_t v13 = *a1;
  }
  uint64_t v14 = 0;
  uint64_t v39 = a4;
  uint64_t v40 = v42 + 16;
  uint64_t v45 = v42 + 32;
  uint64_t v15 = result + 64;
  uint64_t v16 = v47;
  while (1)
  {
    if (v13)
    {
      uint64_t v43 = (v13 - 1) & v13;
      uint64_t v44 = v14;
      unint64_t v17 = __clz(__rbit64(v13)) | (v14 << 6);
    }
    else
    {
      uint64_t v18 = v14 + 1;
      if (__OFADD__(v14, 1)) {
        goto LABEL_40;
      }
      if (v18 >= v38) {
        return v12;
      }
      unint64_t v19 = v37[v18];
      uint64_t v20 = v14 + 1;
      if (!v19)
      {
        uint64_t v20 = v14 + 2;
        if (v14 + 2 >= v38) {
          return v12;
        }
        unint64_t v19 = v37[v20];
        if (!v19)
        {
          uint64_t v20 = v14 + 3;
          if (v14 + 3 >= v38) {
            return v12;
          }
          unint64_t v19 = v37[v20];
          if (!v19)
          {
            uint64_t v21 = v14 + 4;
            if (v14 + 4 >= v38) {
              return v12;
            }
            unint64_t v19 = v37[v21];
            if (!v19)
            {
              while (1)
              {
                uint64_t v20 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_41;
                }
                if (v20 >= v38) {
                  return v12;
                }
                unint64_t v19 = v37[v20];
                ++v21;
                if (v19) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v20 = v14 + 4;
          }
        }
      }
LABEL_24:
      uint64_t v43 = (v19 - 1) & v19;
      uint64_t v44 = v20;
      unint64_t v17 = __clz(__rbit64(v19)) + (v20 << 6);
    }
    uint64_t v22 = v41;
    uint64_t v23 = v42;
    uint64_t v24 = *(void *)(v42 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v42 + 16))(v41, a4[6] + v24 * v17, v16);
    uint64_t v25 = *(void *)(a4[7] + 8 * v17);
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v26(v46, v22, v16);
    sub_190B25FC8();
    swift_bridgeObjectRetain();
    uint64_t result = sub_190B770A8();
    uint64_t v27 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v28 = result & ~v27;
    unint64_t v29 = v28 >> 6;
    if (((-1 << v28) & ~*(void *)(v15 + 8 * (v28 >> 6))) != 0)
    {
      unint64_t v30 = __clz(__rbit64((-1 << v28) & ~*(void *)(v15 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v33 = v29 == v32;
        if (v29 == v32) {
          unint64_t v29 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v15 + 8 * v29);
      }
      while (v34 == -1);
      unint64_t v30 = __clz(__rbit64(~v34)) + (v29 << 6);
    }
    *(void *)(v15 + ((v30 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v30;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v12 + 48) + v30 * v24, v46, v47);
    *(void *)(*(void *)(v12 + 56) + 8 * v30) = v25;
    ++*(void *)(v12 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v39;
    unint64_t v13 = v43;
    uint64_t v14 = v44;
    if (!a3) {
      return v12;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_190B687A4(void *a1, void *a2)
{
  return sub_190B68A34(a1, a2, &qword_1E92A61F0, (uint64_t)&off_1E56B2F18, &qword_1E92A61F8);
}

uint64_t sub_190B687C0(void *a1, void *a2)
{
  return sub_190B68A34(a1, a2, &qword_1E92A5B30, (uint64_t)off_1E56B3040, &qword_1E92A6210);
}

uint64_t sub_190B687DC(void *a1, void *a2)
{
  return sub_190B68A34(a1, a2, &qword_1E92A6220, (uint64_t)off_1E56B2B30, &qword_1E92A6228);
}

uint64_t sub_190B687F8(void *a1, void *a2)
{
  return sub_190B68A34(a1, a2, &qword_1E92A5B38, (uint64_t)off_1E56B2D70, &qword_1E92A6240);
}

uint64_t sub_190B68814(void *a1, void *a2)
{
  return sub_190B68A34(a1, a2, &qword_1E92A6250, 0x1E4F1C9D8, &qword_1E92A6258);
}

uint64_t sub_190B68830(void *a1, void *a2)
{
  return sub_190B68A34(a1, a2, &qword_1E92A5B08, (uint64_t)&off_1E56B2EC8, (uint64_t *)&unk_1E92A61D0);
}

uint64_t sub_190B6884C(void *a1, void *a2)
{
  return sub_190B68A34(a1, a2, (unint64_t *)&unk_1E92A61E0, 0x1E4F29018, &qword_1E92A5B18);
}

uint64_t sub_190B68868(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_190B77A58();
  swift_bridgeObjectRetain();
  sub_190B771D8();
  uint64_t v8 = sub_190B77A68();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_190B77998() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_190B77998() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_190B696B4(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_190B68A18(void *a1, void *a2)
{
  return sub_190B68A34(a1, a2, (unint64_t *)&qword_1E92A3E20, (uint64_t)off_1E56B2E20, (uint64_t *)&unk_1E92A61C0);
}

uint64_t sub_190B68A34(void *a1, void *a2, unint64_t *a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v8 = v5;
  uint64_t v11 = *v5;
  if ((*v5 & 0xC000000000000001) != 0)
  {
    if (v11 < 0) {
      uint64_t v12 = *v5;
    }
    else {
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v13 = a2;
    uint64_t v14 = sub_190B776E8();

    if (v14)
    {
      swift_bridgeObjectRelease();

      sub_190B23474(0, a3);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v36;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_190B776D8();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v26 = sub_190B68D00(v12, result + 1, a5, a3);
    uint64_t v37 = v26;
    unint64_t v27 = *(void *)(v26 + 16);
    if (*(void *)(v26 + 24) <= v27)
    {
      uint64_t v32 = v27 + 1;
      id v33 = v13;
      sub_190B69200(v32, a5);
      uint64_t v28 = v37;
    }
    else
    {
      uint64_t v28 = v26;
      id v29 = v13;
    }
    sub_190B6949C((uint64_t)v13, v28);
    *uint64_t v8 = v28;
    swift_bridgeObjectRelease();
    *a1 = v13;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_190B775F8();
    uint64_t v17 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v18 = v16 & ~v17;
    if ((*(void *)(v11 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18))
    {
      sub_190B23474(0, a3);
      id v19 = *(id *)(*(void *)(v11 + 48) + 8 * v18);
      char v20 = sub_190B77608();

      if (v20)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v24 = *(void **)(*(void *)(*v5 + 48) + 8 * v18);
        *a1 = v24;
        id v25 = v24;
        return 0;
      }
      uint64_t v21 = ~v17;
      while (1)
      {
        unint64_t v18 = (v18 + 1) & v21;
        if (((*(void *)(v11 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
          break;
        }
        id v22 = *(id *)(*(void *)(v11 + 48) + 8 * v18);
        char v23 = sub_190B77608();

        if (v23) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v38 = *v5;
    *uint64_t v5 = 0x8000000000000000;
    id v31 = a2;
    sub_190B69520((uint64_t)v31, v18, isUniquelyReferenced_nonNull_native, a5, a3);
    *uint64_t v5 = v38;
    swift_bridgeObjectRelease();
    *a1 = v31;
  }
  return 1;
}

uint64_t sub_190B68D00(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    uint64_t v6 = sub_190B77768();
    uint64_t v19 = v6;
    sub_190B776C8();
    if (sub_190B776F8())
    {
      sub_190B23474(0, a4);
      do
      {
        swift_dynamicCast();
        uint64_t v6 = v19;
        unint64_t v13 = *(void *)(v19 + 16);
        if (*(void *)(v19 + 24) <= v13)
        {
          sub_190B69200(v13 + 1, a3);
          uint64_t v6 = v19;
        }
        uint64_t result = sub_190B775F8();
        uint64_t v8 = v6 + 56;
        uint64_t v9 = -1 << *(unsigned char *)(v6 + 32);
        unint64_t v10 = result & ~v9;
        unint64_t v11 = v10 >> 6;
        if (((-1 << v10) & ~*(void *)(v6 + 56 + 8 * (v10 >> 6))) != 0)
        {
          unint64_t v12 = __clz(__rbit64((-1 << v10) & ~*(void *)(v6 + 56 + 8 * (v10 >> 6)))) | v10 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v14 = 0;
          unint64_t v15 = (unint64_t)(63 - v9) >> 6;
          do
          {
            if (++v11 == v15 && (v14 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v16 = v11 == v15;
            if (v11 == v15) {
              unint64_t v11 = 0;
            }
            v14 |= v16;
            uint64_t v17 = *(void *)(v8 + 8 * v11);
          }
          while (v17 == -1);
          unint64_t v12 = __clz(__rbit64(~v17)) + (v11 << 6);
        }
        *(void *)(v8 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
        *(void *)(*(void *)(v6 + 48) + 8 * v12) = v18;
        ++*(void *)(v6 + 16);
      }
      while (sub_190B776F8());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return v6;
}

uint64_t sub_190B68F04(uint64_t a1, uint64_t a2)
{
  return sub_190B68D00(a1, a2, (uint64_t *)&unk_1E92A61D0, &qword_1E92A5B08);
}

uint64_t sub_190B68F20()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A61B8);
  uint64_t v3 = sub_190B77758();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                id v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_190B77A58();
      sub_190B771D8();
      uint64_t result = sub_190B77A68();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *unint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *id v1 = v4;
  return result;
}

uint64_t sub_190B69200(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v5 = sub_190B77758();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    unint64_t v30 = v2;
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    int64_t v8 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v4 + 56);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v12 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v11) {
            goto LABEL_33;
          }
          unint64_t v19 = v8[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v11) {
              goto LABEL_33;
            }
            unint64_t v19 = v8[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                uint64_t v3 = v30;
                uint64_t v29 = 1 << *(unsigned char *)(v4 + 32);
                if (v29 > 63) {
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v8 = -1 << v29;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v11) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v8[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v4 + 48) + 8 * v17);
      uint64_t result = sub_190B775F8();
      uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v6 + 48) + 8 * v15) = v21;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

unint64_t sub_190B6949C(uint64_t a1, uint64_t a2)
{
  sub_190B775F8();
  unint64_t result = sub_190B776B8();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

void sub_190B69520(uint64_t a1, unint64_t a2, char a3, uint64_t *a4, unint64_t *a5)
{
  unint64_t v9 = *(void *)(*v5 + 16);
  unint64_t v10 = *(void *)(*v5 + 24);
  if (v10 > v9 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v11 = v9 + 1;
  if (a3)
  {
    sub_190B69200(v11, a4);
  }
  else
  {
    if (v10 > v9)
    {
      sub_190B69A10(a4);
      goto LABEL_14;
    }
    sub_190B69E64(v11, a4);
  }
  uint64_t v12 = *v5;
  uint64_t v13 = sub_190B775F8();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_190B23474(0, a5);
    id v15 = *(id *)(*(void *)(v12 + 48) + 8 * a2);
    char v16 = sub_190B77608();

    if (v16)
    {
LABEL_13:
      sub_190B779C8();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v14;
      while (1)
      {
        a2 = (a2 + 1) & v17;
        if (((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v12 + 48) + 8 * a2);
        char v19 = sub_190B77608();

        if (v19) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v20 + 48) + 8 * a2) = a1;
  uint64_t v21 = *(void *)(v20 + 16);
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v23;
  }
}

uint64_t sub_190B696B4(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_190B68F20();
  }
  else
  {
    if (v10 > v9)
    {
      unint64_t result = (uint64_t)sub_190B6985C();
      goto LABEL_22;
    }
    sub_190B69BB4();
  }
  uint64_t v11 = *v4;
  sub_190B77A58();
  sub_190B771D8();
  unint64_t result = sub_190B77A68();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    id v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (unint64_t result = sub_190B77998(), (result & 1) != 0))
    {
LABEL_21:
      unint64_t result = sub_190B779C8();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        id v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          unint64_t result = sub_190B77998();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  uint64_t *v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

id sub_190B69850()
{
  return sub_190B69A10((uint64_t *)&unk_1E92A61D0);
}

void *sub_190B6985C()
{
  id v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A61B8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_190B77748();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    unint64_t result = (void *)swift_release();
    *id v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    char v19 = (void *)(*(void *)(v4 + 48) + v16);
    void *v19 = *v17;
    v19[1] = v18;
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_190B69A10(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_190B77748();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20)
      {
        int64_t v10 = v19 + 2;
        if (v19 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v20 = *(void *)(v7 + 8 * v10);
        if (!v20) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void **)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v14) {
    goto LABEL_28;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_190B69BB4()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A61B8);
  uint64_t v3 = sub_190B77758();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *id v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    int64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_190B77A58();
    swift_bridgeObjectRetain();
    sub_190B771D8();
    uint64_t result = sub_190B77A68();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    id v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_190B69E64(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v5 = sub_190B77758();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v3 = v6;
    return result;
  }
  int64_t v29 = v2;
  uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v8 = v4 + 56;
  if (v7 < 64) {
    uint64_t v9 = ~(-1 << v7);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v4 + 56);
  int64_t v11 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v12 = v5 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v8 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v8 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    id v21 = *(id *)(*(void *)(v4 + 48) + 8 * v17);
    uint64_t result = sub_190B775F8();
    uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v6 + 48) + 8 * v15) = v21;
    ++*(void *)(v6 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v3 = v29;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v8 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_190B6A0DC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_190B6A164(unint64_t a1)
{
  return sub_190B6A1AC(a1, (unint64_t *)&unk_1E92A61E0, 0x1E4F29018, (unint64_t *)&unk_1E92A6270, &qword_1E92A5B18);
}

uint64_t sub_190B6A188(unint64_t a1)
{
  return sub_190B6A1AC(a1, &qword_1E92A5B08, (uint64_t)&off_1E56B2EC8, (unint64_t *)&qword_1E92A5B10, (uint64_t *)&unk_1E92A61D0);
}

uint64_t sub_190B6A1AC(unint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4, uint64_t *a5)
{
  unint64_t v10 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_190B778A8();
    swift_bridgeObjectRelease();
  }
  sub_190B23474(0, a2);
  sub_190B6F9A0(a4, a2);
  uint64_t result = sub_190B77478();
  uint64_t v18 = result;
  if (v10)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_190B778A8();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v12) {
      return v18;
    }
  }
  else
  {
    uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v12) {
      return v18;
    }
  }
  if (v12 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v12; ++i)
      {
        int64_t v14 = (void *)MEMORY[0x192FD1FB0](i, a1);
        sub_190B68A34(&v17, v14, a2, a3, a5);
      }
    }
    else
    {
      unint64_t v15 = (void **)(a1 + 32);
      do
      {
        unint64_t v16 = *v15++;
        sub_190B68A34(&v17, v16, a2, a3, a5);

        --v12;
      }
      while (v12);
    }
    return v18;
  }
  __break(1u);
  return result;
}

uint64_t sub_190B6A33C(unint64_t a1)
{
  return sub_190B6A1AC(a1, &qword_1E92A6250, 0x1E4F1C9D8, (unint64_t *)&unk_1E92A6260, &qword_1E92A6258);
}

uint64_t sub_190B6A360(unint64_t a1)
{
  return sub_190B6A1AC(a1, &qword_1E92A5B38, (uint64_t)off_1E56B2D70, &qword_1E92A6248, &qword_1E92A6240);
}

uint64_t sub_190B6A384(unint64_t a1)
{
  return sub_190B6A1AC(a1, &qword_1E92A6220, (uint64_t)off_1E56B2B30, (unint64_t *)&unk_1E92A6230, &qword_1E92A6228);
}

uint64_t sub_190B6A3A8(unint64_t a1)
{
  return sub_190B6A1AC(a1, &qword_1E92A5B30, (uint64_t)off_1E56B3040, &qword_1E92A6218, &qword_1E92A6210);
}

uint64_t sub_190B6A3CC(unint64_t a1)
{
  return sub_190B6A1AC(a1, &qword_1E92A61F0, (uint64_t)&off_1E56B2F18, (unint64_t *)&unk_1E92A6200, &qword_1E92A61F8);
}

uint64_t sub_190B6A3F0(unint64_t a1, uint64_t a2)
{
  uint64_t v13 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = sub_190B778A8())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v7 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x192FD1FB0](i - 4, a1) : *(id *)(a1 + 8 * i);
      unint64_t v8 = v7;
      uint64_t v9 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      uint64_t v12 = v7;
      sub_190B65788(&v12, a2, &v11);
      if (v2)
      {
        swift_bridgeObjectRelease();

        return swift_bridgeObjectRelease();
      }

      sub_190B5B3E8(v11);
      if (v9 == v5)
      {
        swift_bridgeObjectRelease();
        return v13;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_190B6A534(unint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v15 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v7; uint64_t v7 = sub_190B778A8())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v9 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x192FD1FB0](i - 4, a1) : *(id *)(a1 + 8 * i);
      unint64_t v10 = v9;
      uint64_t v11 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      id v14 = v9;
      sub_190B65244(&v14, a2, a3, &v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return swift_bridgeObjectRelease();
      }

      sub_190B5B27C(v13);
      if (v11 == v7)
      {
        swift_bridgeObjectRelease();
        return v15;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_190B6A688(unint64_t a1)
{
  uint64_t v51 = sub_190B76CC8();
  uint64_t v48 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  uint64_t v3 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v53 = (void *)MEMORY[0x1E4FBC868];
  if (a1 >> 62)
  {
LABEL_24:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_190B778A8();
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4)
    {
LABEL_3:
      unint64_t v50 = a1 & 0xC000000000000001;
      uint64_t v46 = (uint64_t (**)(char *, uint64_t))(v48 + 8);
      uint64_t v47 = v48 + 32;
      uint64_t v5 = (void *)MEMORY[0x1E4FBC868];
      uint64_t v6 = 4;
      long long v45 = xmmword_190B908F0;
      uint64_t v49 = v4;
      while (1)
      {
        if (v50) {
          id v9 = (id)MEMORY[0x192FD1FB0](v6 - 4, a1);
        }
        else {
          id v9 = *(id *)(a1 + 8 * v6);
        }
        unint64_t v10 = v9;
        uint64_t v11 = v6 - 3;
        if (__OFADD__(v6 - 4, 1))
        {
          __break(1u);
LABEL_22:
          __break(1u);
LABEL_23:
          __break(1u);
          goto LABEL_24;
        }
        unint64_t v12 = a1;
        sub_190B76CB8();
        id v13 = objc_msgSend(v10, sel_givenName);
        uint64_t v14 = sub_190B77168();
        uint64_t v16 = v15;

        sub_190B26060(385, v14, v16);
        swift_bridgeObjectRelease();
        sub_190B76C28();
        id v17 = objc_msgSend(v10, sel_middleName);
        uint64_t v18 = sub_190B77168();
        uint64_t v20 = v19;

        sub_190B26060(385, v18, v20);
        swift_bridgeObjectRelease();
        sub_190B76C68();
        id v21 = objc_msgSend(v10, sel_familyName);
        uint64_t v22 = sub_190B77168();
        uint64_t v24 = v23;

        sub_190B26060(385, v22, v24);
        swift_bridgeObjectRelease();
        sub_190B76C48();
        id v25 = objc_msgSend(v10, sel_nameSuffix);
        uint64_t v26 = sub_190B77168();
        uint64_t v28 = v27;

        sub_190B26060(385, v26, v28);
        a1 = v29;
        swift_bridgeObjectRelease();
        sub_190B76CA8();
        if ((uint64_t)sub_190B25358() <= 0) {
          sub_190B2C208();
        }
        unint64_t v31 = sub_190B237F4((uint64_t)v3);
        uint64_t v32 = v5[2];
        BOOL v33 = (v30 & 1) == 0;
        uint64_t v34 = v32 + v33;
        if (__OFADD__(v32, v33)) {
          goto LABEL_22;
        }
        a1 = v30;
        if (v5[3] < v34)
        {
          sub_190B5784C(v34, 1);
          uint64_t v5 = v53;
          unint64_t v35 = sub_190B237F4((uint64_t)v3);
          if ((a1 & 1) != (v36 & 1))
          {
            uint64_t result = sub_190B779D8();
            __break(1u);
            return result;
          }
          unint64_t v31 = v35;
        }
        if (a1)
        {
          uint64_t v7 = (*v46)(v3, v51);
          uint64_t v5 = v53;
          unint64_t v8 = (void *)(v53[7] + 8 * v31);
          MEMORY[0x192FD1A90](v7);
          if (*(void *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_190B77308();
          }
          sub_190B77368();
          sub_190B772E8();
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3DD0);
          uint64_t v37 = swift_allocObject();
          *(_OWORD *)(v37 + 16) = v45;
          *(void *)(v37 + 32) = v10;
          uint64_t v52 = v37;
          sub_190B772E8();
          uint64_t v38 = v51;
          uint64_t v39 = v52;
          v5[(v31 >> 6) + 8] |= 1 << v31;
          (*(void (**)(unint64_t, char *, uint64_t))(v48 + 32))(v5[6] + *(void *)(v48 + 72) * v31, v3, v38);
          *(void *)(v5[7] + 8 * v31) = v39;
          uint64_t v40 = v5[2];
          BOOL v41 = __OFADD__(v40, 1);
          uint64_t v42 = v40 + 1;
          if (v41) {
            goto LABEL_23;
          }
          uint64_t v5[2] = v42;
        }
        a1 = v12;
        ++v6;
        if (v11 == v49) {
          return (uint64_t)v5;
        }
      }
    }
  }
  return MEMORY[0x1E4FBC868];
}

uint64_t sub_190B6AB30(unint64_t a1, void (*a2)(_OWORD *__return_ptr, id))
{
  uint64_t v3 = a1;
  uint64_t v34 = (void *)MEMORY[0x1E4FBC868];
  if (a1 >> 62)
  {
LABEL_25:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_190B778A8();
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4)
    {
LABEL_3:
      unint64_t v28 = v3 & 0xC000000000000001;
      uint64_t v5 = (void *)MEMORY[0x1E4FBC868];
      for (uint64_t i = 4; ; ++i)
      {
        if (v28) {
          id v9 = (id)MEMORY[0x192FD1FB0](i - 4, v3);
        }
        else {
          id v9 = *(id *)(v3 + 8 * i);
        }
        unint64_t v10 = v9;
        if (__OFADD__(i - 4, 1))
        {
          __break(1u);
LABEL_23:
          __break(1u);
LABEL_24:
          __break(1u);
          goto LABEL_25;
        }
        a2(v32, v9);
        if (v2)
        {
          swift_release();
          swift_bridgeObjectRelease();

          return (uint64_t)v5;
        }
        uint64_t v30 = i - 3;
        uint64_t v11 = v3;
        uint64_t v3 = v4;
        unint64_t v13 = sub_190B237B0((uint64_t)v32);
        uint64_t v14 = v5[2];
        BOOL v15 = (v12 & 1) == 0;
        uint64_t v16 = v14 + v15;
        if (__OFADD__(v14, v15)) {
          goto LABEL_23;
        }
        char v17 = v12;
        if (v5[3] < v16)
        {
          sub_190B57538(v16, 1);
          uint64_t v5 = v34;
          unint64_t v18 = sub_190B237B0((uint64_t)v32);
          if ((v17 & 1) != (v19 & 1))
          {
            uint64_t result = sub_190B779D8();
            __break(1u);
            return result;
          }
          unint64_t v13 = v18;
        }
        if (v17)
        {
          uint64_t v7 = sub_190B23A94((uint64_t)v32);
          uint64_t v5 = v34;
          unint64_t v8 = (void *)(v34[7] + 8 * v13);
          MEMORY[0x192FD1A90](v7);
          if (*(void *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_190B77308();
          }
          sub_190B77368();
          sub_190B772E8();
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3DD0);
          uint64_t v20 = swift_allocObject();
          *(_OWORD *)(v20 + 16) = xmmword_190B908F0;
          *(void *)(v20 + 32) = v10;
          uint64_t v31 = v20;
          sub_190B772E8();
          v5[(v13 >> 6) + 8] |= 1 << v13;
          uint64_t v21 = v5[6] + 40 * v13;
          long long v22 = v32[0];
          long long v23 = v32[1];
          *(void *)(v21 + 32) = v33;
          *(_OWORD *)uint64_t v21 = v22;
          *(_OWORD *)(v21 + 16) = v23;
          *(void *)(v5[7] + 8 * v13) = v31;
          uint64_t v24 = v5[2];
          BOOL v25 = __OFADD__(v24, 1);
          uint64_t v26 = v24 + 1;
          if (v25) {
            goto LABEL_24;
          }
          uint64_t v5[2] = v26;
        }
        uint64_t v4 = v3;
        uint64_t v3 = v11;
        if (v30 == v4)
        {
          swift_bridgeObjectRelease();
          return (uint64_t)v5;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC868];
}

uint64_t sub_190B6AE04(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_190B77478();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_190B68868(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

void sub_190B6AE9C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return;
  }
  unint64_t v2 = 0;
  uint64_t v23 = a1 + 32;
  uint64_t v21 = MEMORY[0x1E4FBC860];
  unint64_t v22 = *(void *)(a1 + 16);
  do
  {
    if (v2 <= v1) {
      unint64_t v3 = v1;
    }
    else {
      unint64_t v3 = v2;
    }
    unint64_t v24 = v3;
    while (1)
    {
      if (v2 == v24) {
        goto LABEL_38;
      }
      unint64_t v4 = *(void *)(v23 + 8 * v2);
      if (v4 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v5 = sub_190B778A8();
        ++v2;
        if (!v5) {
          goto LABEL_7;
        }
      }
      else
      {
        uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        ++v2;
        if (!v5) {
          goto LABEL_7;
        }
      }
      id v6 = (v4 & 0xC000000000000001) != 0 ? (id)MEMORY[0x192FD1FB0](0, v4) : *(id *)(v4 + 32);
      uint64_t v7 = v6;
      sub_190B23474(0, (unint64_t *)&qword_1E92A3E20);
      char v8 = sub_190B77608();

      if (v8) {
        break;
      }
      if (v5 != 1)
      {
        if ((v4 & 0xC000000000000001) != 0)
        {
          uint64_t v9 = 1;
          while (1)
          {
            MEMORY[0x192FD1FB0](v9, v4);
            uint64_t v10 = v9 + 1;
            if (__OFADD__(v9, 1)) {
              break;
            }
            char v11 = sub_190B77608();
            swift_unknownObjectRelease();
            if (v11) {
              goto LABEL_29;
            }
            ++v9;
            if (v10 == v5) {
              goto LABEL_7;
            }
          }
          __break(1u);
        }
        else
        {
          uint64_t v12 = 5;
          while (1)
          {
            uint64_t v13 = v12 - 3;
            if (__OFADD__(v12 - 4, 1)) {
              break;
            }
            id v14 = *(id *)(v4 + 8 * v12);
            char v15 = sub_190B77608();

            if (v15) {
              goto LABEL_29;
            }
            ++v12;
            if (v13 == v5) {
              goto LABEL_7;
            }
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
        return;
      }
LABEL_7:
      swift_bridgeObjectRelease_n();
      if (v2 == v22) {
        return;
      }
    }
LABEL_29:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = v21;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_190B21F30(0, *(void *)(v21 + 16) + 1, 1);
      uint64_t v17 = v21;
    }
    uint64_t v18 = v17;
    unint64_t v20 = *(void *)(v17 + 16);
    unint64_t v19 = *(void *)(v17 + 24);
    if (v20 >= v19 >> 1)
    {
      sub_190B21F30(v19 > 1, v20 + 1, 1);
      uint64_t v18 = v21;
    }
    *(void *)(v18 + 16) = v20 + 1;
    uint64_t v21 = v18;
    *(void *)(v18 + 8 * v20 + 32) = v4;
    unint64_t v1 = v22;
  }
  while (v2 != v22);
}

uint64_t sub_190B6B128(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v4 = 0;
  uint64_t v5 = a1 + 32;
  uint64_t v19 = *(void *)(a1 + 16);
  do
  {
    uint64_t v8 = *(void *)(v5 + 8 * v4);
    if ((v8 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      id v6 = a2;
      char v7 = sub_190B77708();
      swift_bridgeObjectRelease();

      if (v7) {
        return v4;
      }
    }
    else if (*(void *)(v8 + 16))
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_190B775F8();
      uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v11 = v9 & ~v10;
      if ((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
      {
        sub_190B23474(0, (unint64_t *)&qword_1E92A3E20);
        id v12 = *(id *)(*(void *)(v8 + 48) + 8 * v11);
        char v13 = sub_190B77608();

        if (v13)
        {
LABEL_15:
          swift_bridgeObjectRelease();
          return v4;
        }
        uint64_t v14 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v14;
          if (((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
            break;
          }
          id v15 = *(id *)(*(void *)(v8 + 48) + 8 * v11);
          char v16 = sub_190B77608();

          if (v16) {
            goto LABEL_15;
          }
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v2 = v19;
      uint64_t v5 = v18;
    }
    ++v4;
  }
  while (v4 != v2);
  return 0;
}

unint64_t sub_190B6B2EC(unint64_t a1, unint64_t a2)
{
  uint64_t v4 = (void *)a1;
  unint64_t v10 = a1;
  if (a2 >> 62) {
    goto LABEL_13;
  }
  uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = sub_190B778A8())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v7 = (a2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x192FD1FB0](i - 4, a2) : *(id *)(a2 + 8 * i);
      uint64_t v4 = v7;
      uint64_t v8 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      sub_190B64B30(&v10, v7);
      if (v2)
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        return (unint64_t)v4;
      }

      if (v8 == v5)
      {
        swift_bridgeObjectRelease();
        return v10;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return (unint64_t)v4;
}

uint64_t sub_190B6B41C(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t _s8Contacts09DuplicateA7ManagerC29applyMergeResultToSaveRequest_10signaturesSbSo06CNSaveI0C_SaySSGtFZ_0(void *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (v2)
  {
    uint64_t v3 = a2;
    uint64_t v77 = *(void *)(a2 + 16);
    if (qword_1E92A3C78 != -1) {
      goto LABEL_75;
    }
    while (1)
    {
      sub_190B23474(0, (unint64_t *)&unk_1E92A3D50);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92A3DC0);
      uint64_t v4 = swift_allocObject();
      *(_OWORD *)(v4 + 16) = xmmword_190B908E0;
      *(void *)(v4 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3D30);
      *(void *)(v4 + 64) = sub_190B21814();
      *(void *)(v4 + 32) = v3;
      swift_bridgeObjectRetain();
      uint64_t v5 = (void *)sub_190B77548();
      unint64_t v6 = sub_190B1E0EC((uint64_t)v5);

      if (v6 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v3 = sub_190B778A8();
        swift_bridgeObjectRelease();
        if (!v3)
        {
LABEL_77:
          swift_bridgeObjectRelease();
          uint64_t v73 = MEMORY[0x1E4FBC860];
LABEL_78:
          type metadata accessor for DuplicateContacts();
          id v74 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), sel_init);
          sub_190B267A4(v73, v74, &v98);
          swift_bridgeObjectRelease();

          sub_190B2FB0C(&v98, a1);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v2 = v77;
          return v2 != 0;
        }
      }
      else
      {
        uint64_t v3 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v3) {
          goto LABEL_77;
        }
      }
      uint64_t v97 = MEMORY[0x1E4FBC860];
      sub_190B21F70(0, v3 & ~(v3 >> 63), 0);
      if (v3 < 0)
      {
        __break(1u);

        uint64_t result = swift_release();
        __break(1u);
        return result;
      }
      uint64_t v7 = 0;
      uint64_t v8 = v97;
      unint64_t v80 = v6 & 0xC000000000000001;
      unint64_t v78 = v6 + 32;
      uint64_t v79 = v3;
      while (v7 != v3)
      {
        uint64_t v89 = v7;
        uint64_t v90 = v8;
        if (v80) {
          uint64_t v9 = (char *)MEMORY[0x192FD1FB0]();
        }
        else {
          uint64_t v9 = (char *)*(id *)(v78 + 8 * v7);
        }
        unint64_t v10 = v9;
        uint64_t v11 = OBJC_IVAR___CNManagedDuplicate__privateContacts;
        unint64_t v12 = *(void *)&v9[OBJC_IVAR___CNManagedDuplicate__privateContacts];
        if (v12 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v13 = sub_190B778A8();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        uint64_t v91 = v10;
        uint64_t v3 = (uint64_t)&v10[OBJC_IVAR___CNManagedDuplicate_managedCohorts];
        swift_beginAccess();
        uint64_t v14 = *(void *)v3;
        if (*(void *)v3 >> 62)
        {
          swift_bridgeObjectRetain_n();
          uint64_t v15 = sub_190B778A8();
        }
        else
        {
          uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain_n();
        }
        uint64_t v87 = v11;
        uint64_t v93 = v13;
        if (v15)
        {
          if (v15 < 1) {
            goto LABEL_73;
          }
          uint64_t v16 = 0;
          uint64_t v17 = (void *)MEMORY[0x1E4FBC860];
          do
          {
            if ((v14 & 0xC000000000000001) != 0) {
              uint64_t v19 = (char *)MEMORY[0x192FD1FB0](v16, v14);
            }
            else {
              uint64_t v19 = (char *)*(id *)(v14 + 8 * v16 + 32);
            }
            unint64_t v20 = v19;
            uint64_t v21 = &v19[OBJC_IVAR___CNManagedCohort_identifier];
            swift_beginAccess();
            uint64_t v22 = *(void *)v21;
            uint64_t v23 = *((void *)v21 + 1);
            swift_bridgeObjectRetain();

            if (v23)
            {
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v17 = sub_190B49180(0, v17[2] + 1, 1, v17);
              }
              unint64_t v25 = v17[2];
              unint64_t v24 = v17[3];
              if (v25 >= v24 >> 1) {
                uint64_t v17 = sub_190B49180((void *)(v24 > 1), v25 + 1, 1, v17);
              }
              v17[2] = v25 + 1;
              uint64_t v18 = &v17[2 * v25];
              v18[4] = v22;
              v18[5] = v23;
            }
            ++v16;
          }
          while (v15 != v16);
        }
        else
        {
          uint64_t v17 = (void *)MEMORY[0x1E4FBC860];
        }
        swift_bridgeObjectRelease_n();
        uint64_t v26 = v17[2];
        swift_bridgeObjectRelease();
        if (v93 != v26)
        {
          uint64_t v39 = v91;
          uint64_t v40 = v87;
LABEL_63:
          sub_190B47864();
          goto LABEL_64;
        }
        uint64_t v27 = *(void *)v3;
        if (*(void *)v3 >> 62)
        {
          if (v27 < 0) {
            uint64_t v3 = *(void *)v3;
          }
          else {
            uint64_t v3 = v27 & 0xFFFFFFFFFFFFFF8;
          }
          swift_bridgeObjectRetain_n();
          uint64_t v28 = sub_190B778A8();
          if (!v28)
          {
LABEL_51:
            uint64_t v30 = (void *)MEMORY[0x1E4FBC860];
            goto LABEL_52;
          }
        }
        else
        {
          uint64_t v28 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain_n();
          if (!v28) {
            goto LABEL_51;
          }
        }
        if (v28 < 1) {
          goto LABEL_74;
        }
        uint64_t v29 = 0;
        uint64_t v30 = (void *)MEMORY[0x1E4FBC860];
        do
        {
          if ((v27 & 0xC000000000000001) != 0) {
            uint64_t v32 = (char *)MEMORY[0x192FD1FB0](v29, v27);
          }
          else {
            uint64_t v32 = (char *)*(id *)(v27 + 8 * v29 + 32);
          }
          uint64_t v33 = v32;
          uint64_t v34 = &v32[OBJC_IVAR___CNManagedCohort_identifier];
          swift_beginAccess();
          uint64_t v36 = *(void *)v34;
          uint64_t v35 = *((void *)v34 + 1);
          swift_bridgeObjectRetain();

          if (v35)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v30 = sub_190B49180(0, v30[2] + 1, 1, v30);
            }
            unint64_t v38 = v30[2];
            unint64_t v37 = v30[3];
            if (v38 >= v37 >> 1) {
              uint64_t v30 = sub_190B49180((void *)(v37 > 1), v38 + 1, 1, v30);
            }
            char v30[2] = v38 + 1;
            uint64_t v31 = &v30[2 * v38];
            uint64_t v31[4] = v36;
            v31[5] = v35;
          }
          ++v29;
        }
        while (v28 != v29);
LABEL_52:
        swift_bridgeObjectRelease_n();
        uint64_t v95 = sub_190B77478();
        uint64_t v41 = v30[2];
        if (v41)
        {
          uint64_t v42 = v30 + 5;
          uint64_t v39 = v91;
          do
          {
            uint64_t v43 = *(v42 - 1);
            uint64_t v44 = *v42;
            swift_bridgeObjectRetain();
            sub_190B68868(&v98, v43, v44);
            swift_bridgeObjectRelease();
            v42 += 2;
            --v41;
          }
          while (v41);
        }
        else
        {
          uint64_t v39 = v91;
        }
        swift_bridgeObjectRelease();
        uint64_t v45 = v95;
        uint64_t v46 = sub_190B466EC();
        uint64_t v47 = sub_190B77478();
        uint64_t v96 = v47;
        uint64_t v48 = *(void *)(v46 + 16);
        if (v48)
        {
          uint64_t v49 = (uint64_t *)(v46 + 40);
          do
          {
            uint64_t v50 = *(v49 - 1);
            uint64_t v51 = *v49;
            swift_bridgeObjectRetain();
            sub_190B68868(&v98, v50, v51);
            swift_bridgeObjectRelease();
            v49 += 2;
            --v48;
          }
          while (v48);
          swift_bridgeObjectRelease();
          uint64_t v52 = v96;
        }
        else
        {
          uint64_t v52 = v47;
          swift_bridgeObjectRelease();
        }
        char v53 = sub_190B66F7C(v45, v52);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v40 = v87;
        if ((v53 & 1) == 0) {
          goto LABEL_63;
        }
LABEL_64:
        unint64_t v54 = *(void *)&v39[v40];
        if ((v54 & 0x8000000000000000) != 0 || (v54 & 0x4000000000000000) != 0)
        {
          swift_bridgeObjectRetain_n();
          unint64_t v72 = v39;
          uint64_t v55 = (uint64_t)sub_190B2C58C(v54);
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v55 = v54 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain_n();
          uint64_t v56 = v39;
        }
        uint64_t v98 = v55;
        uint64_t v57 = v39;
        sub_190B4CD80(&v98, v57);
        swift_bridgeObjectRelease();

        uint64_t v88 = v98;
        uint64_t v58 = (uint64_t *)&v57[OBJC_IVAR___CNManagedDuplicate_userSelectedContactImage];
        swift_beginAccess();
        uint64_t v59 = v58[1];
        uint64_t v92 = v58[2];
        uint64_t v94 = *v58;
        unint64_t v84 = v58[3];
        uint64_t v85 = v58[4];
        uint64_t v82 = v58[6];
        unint64_t v83 = v58[5];
        uint64_t v60 = v58[8];
        unint64_t v81 = v58[7];
        uint64_t v61 = v58[9];
        uint64_t v62 = v58[10];
        unint64_t v63 = v58[11];
        uint64_t v64 = v58[12];
        uint64_t v65 = (uint64_t *)&v57[OBJC_IVAR___CNManagedDuplicate_userSelectedContactPoster];
        unint64_t v66 = v58[13];
        swift_beginAccess();
        uint64_t v68 = *v65;
        unint64_t v67 = v65[1];
        uint64_t v86 = v61;
        sub_190B2E834(v94, v59, v92, v84, v85, v83, v82, v81, v60, v61, v62, v63, v64, v66);
        sub_190B2E970(v68, v67);

        uint64_t v8 = v90;
        uint64_t v97 = v90;
        unint64_t v70 = *(void *)(v90 + 16);
        unint64_t v69 = *(void *)(v90 + 24);
        if (v70 >= v69 >> 1)
        {
          sub_190B21F70(v69 > 1, v70 + 1, 1);
          uint64_t v8 = v97;
        }
        uint64_t v7 = v89 + 1;
        *(void *)(v8 + 16) = v70 + 1;
        unint64_t v71 = (void *)(v8 + 136 * v70);
        v71[4] = v88;
        v71[5] = v94;
        v71[6] = v59;
        v71[7] = v92;
        v71[8] = v84;
        v71[9] = v85;
        v71[10] = v83;
        v71[11] = v82;
        v71[12] = v81;
        v71[13] = v60;
        v71[14] = v86;
        v71[15] = v62;
        v71[16] = v63;
        v71[17] = v64;
        v71[18] = v66;
        v71[19] = v68;
        v71[20] = v67;
        uint64_t v3 = v79;
        if (v89 + 1 == v79)
        {
          uint64_t v73 = v8;
          swift_bridgeObjectRelease();
          goto LABEL_78;
        }
      }
      __break(1u);
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      swift_once();
    }
  }
  return v2 != 0;
}

BOOL sub_190B6BD7C(void *a1)
{
  v12[1] = *(id *)MEMORY[0x1E4F143B8];
  id v2 = objc_allocWithZone((Class)CNContactFetchRequest);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3D60);
  uint64_t v3 = (void *)sub_190B772B8();
  id v4 = objc_msgSend(v2, sel_initWithKeysToFetch_, v3);

  objc_msgSend(v4, sel_setUnifyResults_, 0);
  v12[0] = 0;
  id v5 = objc_msgSend(a1, sel_contactCountForFetchRequest_error_, v4, v12);
  if (v5)
  {
    unint64_t v6 = v5;
    id v7 = v12[0];
    uint64_t v8 = (uint64_t)objc_msgSend(v6, sel_integerValue);

    return v8 < 1501;
  }
  else
  {
    id v10 = v12[0];
    sub_190B76D68();

    swift_willThrow();
    swift_willThrow();
  }
  return v9;
}

BOOL sub_190B6BECC(void *a1)
{
  return sub_190B6BD7C(a1);
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

void sub_190B6C0D4(uint64_t a1, void (**a2)(void, void))
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  id v5 = objc_allocWithZone((Class)CNContactStore);
  _Block_copy(a2);
  id v27 = objc_msgSend(v5, sel_init);
  if (!sub_190B6BECC(v27))
  {
    if (qword_1E92A3C70 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_190B76FC8();
    __swift_project_value_buffer(v11, (uint64_t)qword_1E92A8448);
    unint64_t v12 = sub_190B76FA8();
    os_log_type_t v13 = sub_190B77558();
    if (!os_log_type_enabled(v12, v13)) {
      goto LABEL_18;
    }
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    uint64_t v15 = "Will defer duplicates analysis while in process.";
    goto LABEL_17;
  }
  id v6 = objc_msgSend(v27, sel_currentHistoryToken);
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = sub_190B76E08();
    unint64_t v10 = v9;
  }
  else
  {
    uint64_t v8 = 0;
    unint64_t v10 = 0xC000000000000000;
  }
  uint64_t v16 = sub_190B76DF8();
  uint64_t v18 = v17;
  sub_190B2EB28(v8, v10);
  if (qword_1E92A3C78 != -1) {
    swift_once();
  }
  v19._uint64_t countAndFlagsBits = v16;
  v19._object = v18;
  if (ManagedDuplicateStore.willRefresh(token:)(v19))
  {
    id v20 = objc_msgSend(self, sel_currentEnvironment);
    id v21 = objc_msgSend(v20, sel_schedulerProvider);

    id v22 = objc_msgSend(v21, sel_backgroundScheduler);
    swift_unknownObjectRelease();
    uint64_t v23 = (void *)swift_allocObject();
    v23[2] = v27;
    v23[3] = v16;
    v23[4] = v18;
    v23[5] = sub_190B6F738;
    v23[6] = v4;
    v23[7] = a1;
    aBlock[4] = sub_190B6C0B8;
    aBlock[5] = v23;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    id aBlock[2] = sub_190B63324;
    aBlock[3] = &block_descriptor_27;
    unint64_t v24 = _Block_copy(aBlock);
    id v25 = v27;
    swift_retain();
    swift_release();
    objc_msgSend(v22, sel_performBlock_, v24);
    _Block_release(v24);
    swift_release();

    swift_unknownObjectRelease();
    return;
  }
  swift_bridgeObjectRelease();
  if (qword_1E92A3C70 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_190B76FC8();
  __swift_project_value_buffer(v26, (uint64_t)qword_1E92A8448);
  unint64_t v12 = sub_190B76FA8();
  os_log_type_t v13 = sub_190B77568();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    uint64_t v15 = "ManagedDuplicates are already up to date. Exiting";
LABEL_17:
    _os_log_impl(&dword_1909E3000, v12, v13, v15, v14, 2u);
    MEMORY[0x192FD42A0](v14, -1, -1);
  }
LABEL_18:

  a2[2](a2, 0);
  swift_release();
}

void sub_190B6C4F4(uint64_t *a1)
{
  uint64_t v2 = v1;
  if (qword_1E92A3C78 != -1) {
    goto LABEL_120;
  }
  while (1)
  {
    uint64_t v4 = (objc_class *)type metadata accessor for DuplicateContactsManager();
    id v5 = objc_allocWithZone(v4);
    unint64_t v6 = MEMORY[0x1E4FBC860];
    *(void *)&v5[OBJC_IVAR___CNDuplicateContactsManager_contacts] = MEMORY[0x1E4FBC860];
    *(void *)&v5[OBJC_IVAR___CNDuplicateContactsManager_findResult] = 0;
    id v7 = &v5[OBJC_IVAR___CNDuplicateContactsManager_mergeResult];
    v7[1] = 0;
    void v7[2] = 0;
    *id v7 = 0;
    v5[OBJC_IVAR___CNDuplicateContactsManager_didPerformMerge] = 0;
    *(void *)&v5[OBJC_IVAR___CNDuplicateContactsManager_contactStore] = a1;
    v129.receiver = v5;
    v129.super_class = v4;
    uint64_t v8 = a1;
    id v9 = objc_msgSendSuper2(&v129, sel_init);
    if (qword_1E92A3C60 != -1) {
      swift_once();
    }
    id v10 = objc_allocWithZone((Class)CNContactFetchRequest);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3D60);
    uint64_t v11 = (void *)sub_190B772B8();
    swift_bridgeObjectRelease();
    id v12 = objc_msgSend(v10, sel_initWithKeysToFetch_, v11);

    objc_msgSend(v12, sel_setUnifyResults_, 0);
    objc_msgSend(v12, sel_setMutableObjects_, 1);
    unint64_t v13 = sub_190B65D0C();
    id v14 = v9;
    uint64_t v15 = (char *)v2;
    unint64_t v16 = sub_190B6A3F0(v13, (uint64_t)v14);
    swift_bridgeObjectRelease();

    uint64_t v17 = (char *)v14;
    id v18 = v12;
    uint64_t v19 = sub_190B6A534(v16, v18, (uint64_t)v17);
    swift_bridgeObjectRelease();

    *(void *)&v17[OBJC_IVAR___CNDuplicateContactsManager_contacts] = v19;
    swift_bridgeObjectRelease();
    int64_t v110 = v17;
    id v20 = (void *)sub_190B64F6C();
    id v21 = (char *)v20[2];
    if (v21)
    {
      unint64_t v128 = v6;
      id v22 = v8;
      sub_190B77838();
      uint64_t v23 = (objc_class *)type metadata accessor for ManagedDuplicate();
      unint64_t v24 = 0;
      do
      {
        id v25 = (char *)v24 + 1;
        unint64_t v26 = v20[(void)v24 + 4];
        id v27 = objc_allocWithZone(v23);
        swift_bridgeObjectRetain_n();
        uint64_t v28 = v22;
        sub_190B4B6B0(v26, v28);
        swift_bridgeObjectRelease();

        sub_190B77808();
        sub_190B77848();
        sub_190B77858();
        sub_190B77818();
        unint64_t v24 = v25;
      }
      while (v21 != v25);
      unint64_t v29 = v128;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v29 = MEMORY[0x1E4FBC860];
    }
    unint64_t v113 = v29 >> 62;
    if (v29 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v30 = sub_190B778A8();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v30 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v31 = MEMORY[0x1E4FBC860];
    unint64_t v120 = v29;
    uint64_t v121 = v30;
    if (!v30) {
      break;
    }
    uint64_t v126 = MEMORY[0x1E4FBC860];
    a1 = &v126;
    sub_190B218B0(0, v30 & ~(v30 >> 63), 0);
    if (v30 < 0)
    {
      __break(1u);
      goto LABEL_123;
    }
    uint64_t v2 = 0;
    uint64_t v31 = v126;
    unint64_t v32 = v29 & 0xC000000000000001;
    while (v30 != v2)
    {
      if (v32) {
        uint64_t v33 = (uint64_t *)MEMORY[0x192FD1FB0](v2, v120);
      }
      else {
        uint64_t v33 = (uint64_t *)*(id *)(v120 + 8 * v2 + 32);
      }
      a1 = v33;
      uint64_t v34 = (uint64_t *)((char *)v33 + OBJC_IVAR___CNManagedDuplicate_signature);
      swift_beginAccess();
      uint64_t v35 = v34[1];
      if (!v35) {
        goto LABEL_126;
      }
      uint64_t v36 = *v34;
      swift_bridgeObjectRetain();

      uint64_t v126 = v31;
      unint64_t v38 = *(void *)(v31 + 16);
      unint64_t v37 = *(void *)(v31 + 24);
      if (v38 >= v37 >> 1)
      {
        a1 = &v126;
        sub_190B218B0(v37 > 1, v38 + 1, 1);
        uint64_t v31 = v126;
      }
      ++v2;
      *(void *)(v31 + 16) = v38 + 1;
      unint64_t v39 = v31 + 16 * v38;
      *(void *)(v39 + 32) = v36;
      *(void *)(v39 + 40) = v35;
      uint64_t v30 = v121;
      if (v121 == v2) {
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_116:
    __break(1u);
LABEL_117:
    __break(1u);
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
LABEL_120:
    swift_once();
  }
LABEL_22:
  if (qword_1E92A3C70 != -1) {
    swift_once();
  }
  uint64_t v40 = sub_190B76FC8();
  uint64_t v41 = __swift_project_value_buffer(v40, (uint64_t)qword_1E92A8448);
  swift_bridgeObjectRetain();
  id v109 = (uint64_t *)v41;
  uint64_t v42 = sub_190B76FA8();
  os_log_type_t v43 = sub_190B77568();
  if (os_log_type_enabled(v42, v43))
  {
    uint64_t v44 = (uint8_t *)swift_slowAlloc();
    uint64_t v45 = v30;
    uint64_t v46 = v44;
    *(_DWORD *)uint64_t v44 = 134217984;
    uint64_t v126 = v45;
    sub_190B77648();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1909E3000, v42, v43, "Found %ld possible duplicate contacts to refresh", v46, 0xCu);
    MEMORY[0x192FD42A0](v46, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  sub_190B1D288();
  id v21 = v15;
  if (v15)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v126 = 0;
    unint64_t v127 = 0xE000000000000000;
    sub_190B77788();
    sub_190B771F8();
    swift_getErrorValue();
    sub_190B77A08();
    sub_190B771F8();
    swift_bridgeObjectRelease();
    uint64_t v47 = v126;
    unint64_t v48 = v127;
    sub_190B1A4D8();
    swift_allocError();
    *(void *)uint64_t v49 = v47;
    *(void *)(v49 + _Block_object_dispose(&STACK[0x228], 8) = v48;
    *(unsigned char *)(v49 + 16) = 3;
    swift_willThrow();

    return;
  }
  sub_190B23474(0, (unint64_t *)&unk_1E92A3D50);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92A3DC0);
  uint64_t v50 = swift_allocObject();
  *(_OWORD *)(v50 + 16) = xmmword_190B908E0;
  *(void *)(v50 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3D30);
  *(void *)(v50 + 64) = sub_190B21814();
  *(void *)(v50 + 32) = v31;
  swift_bridgeObjectRetain();
  id v20 = (void *)sub_190B77548();
  unint64_t v51 = sub_190B1E0EC((uint64_t)v20);
  uint64_t v30 = v51;
  if (v51 >> 62) {
    goto LABEL_124;
  }
  uint64_t v52 = *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (2)
  {
    id v108 = v21;
    if (v52)
    {
      uint64_t v115 = v20;
      uint64_t v123 = (uint64_t *)MEMORY[0x1E4FBC860];
      sub_190B218B0(0, v52 & ~(v52 >> 63), 0);
      if (v52 < 0)
      {
        __break(1u);
LABEL_126:
        __break(1u);
LABEL_127:
        __break(1u);
LABEL_128:
        __break(1u);
        return;
      }
      uint64_t v2 = 0;
      a1 = v123;
      unint64_t v118 = v30 & 0xC000000000000001;
      uint64_t v53 = v30;
      do
      {
        if (v52 == v2) {
          goto LABEL_116;
        }
        if (v118) {
          unint64_t v54 = (char *)MEMORY[0x192FD1FB0](v2, v30);
        }
        else {
          unint64_t v54 = (char *)*(id *)(v30 + 8 * v2 + 32);
        }
        uint64_t v55 = v54;
        uint64_t v56 = &v54[OBJC_IVAR___CNManagedDuplicate_signature];
        swift_beginAccess();
        uint64_t v57 = *((void *)v56 + 1);
        if (!v57) {
          goto LABEL_127;
        }
        uint64_t v58 = *(void *)v56;
        swift_bridgeObjectRetain();

        unint64_t v60 = v123[2];
        unint64_t v59 = v123[3];
        if (v60 >= v59 >> 1) {
          sub_190B218B0(v59 > 1, v60 + 1, 1);
        }
        ++v2;
        v123[2] = v60 + 1;
        uint64_t v61 = &v123[2 * v60];
        v61[4] = v58;
        v61[5] = v57;
        uint64_t v30 = v53;
      }
      while (v52 != v2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      id v21 = v108;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      a1 = (uint64_t *)MEMORY[0x1E4FBC860];
    }
    unint64_t v62 = v120;
    if (a1[2])
    {
      if (v113)
      {
        swift_bridgeObjectRetain();
        uint64_t v2 = sub_190B778A8();
        if (v2) {
          goto LABEL_47;
        }
      }
      else
      {
        uint64_t v2 = *(void *)((v120 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v2)
        {
LABEL_47:
          uint64_t v63 = 0;
          while (1)
          {
            if ((v120 & 0xC000000000000001) != 0) {
              unint64_t v66 = (char *)MEMORY[0x192FD1FB0](v63, v62);
            }
            else {
              unint64_t v66 = (char *)*(id *)(v120 + 32 + 8 * v63);
            }
            id v21 = v66;
            BOOL v67 = __OFADD__(v63++, 1);
            if (v67) {
              goto LABEL_118;
            }
            uint64_t v68 = v2;
            unint64_t v69 = &v66[OBJC_IVAR___CNManagedDuplicate_signature];
            swift_beginAccess();
            id v20 = (void *)*((void *)v69 + 1);
            if (!v20) {
              goto LABEL_128;
            }
            uint64_t v70 = a1[2];
            if (!v70) {
              goto LABEL_62;
            }
            uint64_t v71 = *(void *)v69;
            BOOL v72 = a1[4] == *(void *)v69 && v20 == (void *)a1[5];
            if (!v72 && (sub_190B77998() & 1) == 0)
            {
              if (v70 == 1) {
                goto LABEL_62;
              }
              BOOL v73 = a1[6] == v71 && v20 == (void *)a1[7];
              if (!v73 && (sub_190B77998() & 1) == 0) {
                break;
              }
            }
LABEL_48:
            char v64 = 1;
LABEL_49:
            uint64_t v65 = &v21[OBJC_IVAR___CNManagedDuplicate_isIgnored];
            swift_beginAccess();
            *uint64_t v65 = v64;

            uint64_t v2 = v68;
            unint64_t v62 = v120;
            if (v63 == v68)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              id v21 = v108;
              goto LABEL_83;
            }
          }
          if (v70 != 2)
          {
            id v74 = a1 + 9;
            uint64_t v75 = 2;
            while (1)
            {
              uint64_t v30 = v75 + 1;
              if (__OFADD__(v75, 1)) {
                break;
              }
              if (*(v74 - 1) == v71 && v20 == (void *)*v74) {
                goto LABEL_48;
              }
              uint64_t v111 = v75;
              if (sub_190B77998()) {
                goto LABEL_48;
              }
              uint64_t v77 = v30;
              char v64 = 0;
              v74 += 2;
              uint64_t v75 = v111 + 1;
              if (v77 == v70) {
                goto LABEL_49;
              }
            }
LABEL_123:
            __break(1u);
LABEL_124:
            uint64_t v52 = sub_190B778A8();
            continue;
          }
LABEL_62:
          char v64 = 0;
          goto LABEL_49;
        }
      }
      swift_bridgeObjectRelease();
    }
    break;
  }
  swift_bridgeObjectRelease();
LABEL_83:
  unint64_t v78 = v21;
  sub_190B1C020();
  if (v21)
  {
    uint64_t v79 = v21;
    unint64_t v80 = v21;
    a1 = v109;
    unint64_t v81 = sub_190B76FA8();
    os_log_type_t v82 = sub_190B77578();
    if (os_log_type_enabled(v81, v82))
    {
      unint64_t v83 = (uint8_t *)swift_slowAlloc();
      uint64_t v84 = swift_slowAlloc();
      uint64_t v125 = v84;
      *(_DWORD *)unint64_t v83 = 136315138;
      swift_getErrorValue();
      uint64_t v85 = sub_190B77A08();
      a1 = (uint64_t *)v86;
      uint64_t v124 = sub_190B21150(v85, v86, &v125);
      sub_190B77648();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1909E3000, v81, v82, "Error saving refreshed duplicates. %s", v83, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FD42A0](v84, -1, -1);
      MEMORY[0x192FD42A0](v83, -1, -1);
    }
    else
    {
    }
    unint64_t v62 = v120;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v87 = sub_190B76FA8();
    os_log_type_t v88 = sub_190B77568();
    a1 = (uint64_t *)v88;
    if (os_log_type_enabled(v87, v88))
    {
      uint64_t v89 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v89 = 134217984;
      uint64_t v125 = v121;
      sub_190B77648();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1909E3000, v87, (os_log_type_t)a1, "Successfully refreshed %ld duplicates", v89, 0xCu);
      MEMORY[0x192FD42A0](v89, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease();
    }
  }
  uint64_t v125 = MEMORY[0x1E4FBC860];
  if (v113)
  {
    swift_bridgeObjectRetain();
    uint64_t v90 = sub_190B778A8();
    if (v90) {
      goto LABEL_93;
    }
  }
  else
  {
    uint64_t v90 = *(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v90)
    {
LABEL_93:
      uint64_t v91 = 0;
      uint64_t v114 = v90;
      unint64_t v116 = v62 & 0xC000000000000001;
      unint64_t v112 = v62 + 32;
      do
      {
        if (v116) {
          uint64_t v92 = (char *)MEMORY[0x192FD1FB0](v91, v62);
        }
        else {
          uint64_t v92 = (char *)*(id *)(v112 + 8 * v91);
        }
        uint64_t v93 = v92;
        uint64_t v2 = MEMORY[0x1E4FBC860];
        BOOL v67 = __OFADD__(v91++, 1);
        if (v67) {
          goto LABEL_117;
        }
        unint64_t v94 = *(void *)&v92[OBJC_IVAR___CNManagedDuplicate__privateContacts];
        if (v94 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v95 = sub_190B778A8();
          if (!v95)
          {
LABEL_111:

            swift_bridgeObjectRelease();
            goto LABEL_94;
          }
        }
        else
        {
          uint64_t v95 = *(void *)((v94 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (!v95) {
            goto LABEL_111;
          }
        }
        uint64_t v124 = v2;
        a1 = &v124;
        sub_190B218B0(0, v95 & ~(v95 >> 63), 0);
        if (v95 < 0) {
          goto LABEL_119;
        }
        uint64_t v122 = v95;
        v117 = v93;
        uint64_t v119 = v91;
        uint64_t v96 = 0;
        uint64_t v2 = v124;
        unint64_t v97 = v94 & 0xC000000000000001;
        unint64_t v98 = v94;
        do
        {
          if (v97) {
            id v99 = (id)MEMORY[0x192FD1FB0](v96, v94);
          }
          else {
            id v99 = *(id *)(v94 + 8 * v96 + 32);
          }
          unint64_t v100 = v99;
          id v101 = objc_msgSend(v99, sel_identifier);
          uint64_t v102 = sub_190B77168();
          uint64_t v104 = v103;

          uint64_t v124 = v2;
          unint64_t v106 = *(void *)(v2 + 16);
          unint64_t v105 = *(void *)(v2 + 24);
          if (v106 >= v105 >> 1)
          {
            sub_190B218B0(v105 > 1, v106 + 1, 1);
            uint64_t v2 = v124;
          }
          ++v96;
          *(void *)(v2 + 16) = v106 + 1;
          uint64_t v107 = v2 + 16 * v106;
          *(void *)(v107 + 32) = v102;
          *(void *)(v107 + 40) = v104;
          unint64_t v94 = v98;
        }
        while (v122 != v96);

        swift_bridgeObjectRelease();
        uint64_t v91 = v119;
        unint64_t v62 = v120;
        uint64_t v90 = v114;
LABEL_94:
        a1 = &v125;
        sub_190B5B294(v2);
      }
      while (v91 != v90);
    }
  }
  swift_bridgeObjectRelease_n();
  sub_190B1D9B8();

  swift_bridgeObjectRelease();
}

void _s8Contacts09DuplicateA7ManagerC39updateRecentImagesDatabaseForSignaturesyySaySSGFZ_0(uint64_t a1)
{
  v129[7] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = sub_190B76E38();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v113 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16)) {
    return;
  }
  if (qword_1E92A3C78 != -1) {
    goto LABEL_126;
  }
LABEL_3:
  sub_190B23474(0, (unint64_t *)&unk_1E92A3D50);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92A3DC0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_190B908E0;
  *(void *)(v6 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3D30);
  *(void *)(v6 + 64) = sub_190B21814();
  *(void *)(v6 + 32) = a1;
  swift_bridgeObjectRetain();
  id v7 = (void *)sub_190B77548();
  unint64_t v8 = sub_190B1E0EC((uint64_t)v7);

  unint64_t v9 = v8 >> 62;
  unint64_t v121 = v8;
  if (!(v8 >> 62))
  {
    uint64_t v10 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v10 < 1) {
      goto LABEL_128;
    }
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  unint64_t v8 = v121;
  uint64_t v10 = sub_190B778A8();
  swift_bridgeObjectRelease();
  if (v10 >= 1)
  {
LABEL_5:
    v117 = v5;
    id v118 = objc_msgSend(objc_allocWithZone((Class)CNContactImageStore), sel_init);
    if (qword_1E92A3C70 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_190B76FC8();
    uint64_t v12 = __swift_project_value_buffer(v11, (uint64_t)qword_1E92A8448);
    swift_bridgeObjectRetain();
    unint64_t v13 = v8;
    uint64_t v115 = v12;
    id v14 = sub_190B76FA8();
    os_log_type_t v15 = sub_190B77568();
    BOOL v16 = os_log_type_enabled(v14, v15);
    uint64_t v127 = v2;
    uint64_t v114 = (void *)v10;
    if (v16)
    {
      uint64_t v2 = 12;
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      id v18 = (void *)v10;
      uint64_t v19 = v17;
      *(_DWORD *)uint64_t v17 = 134217984;
      v129[4] = v18;
      sub_190B77648();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1909E3000, v14, v15, "Will updated recent images from %ld managed duplicates", v19, 0xCu);
      MEMORY[0x192FD42A0](v19, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease();
    }
    a1 = v13;
    if (v9)
    {
      swift_bridgeObjectRetain();
      a1 = v121;
      uint64_t v21 = sub_190B778A8();
      if (!v21)
      {
LABEL_114:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        unint64_t v100 = sub_190B76FA8();
        os_log_type_t v101 = sub_190B77568();
        if (os_log_type_enabled(v100, v101))
        {
          uint64_t v102 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v102 = 134217984;
          swift_bridgeObjectRelease();
          v129[0] = v114;
          sub_190B77648();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1909E3000, v100, v101, "Successfully updated recent images from %ld managed duplicates", v102, 0xCu);
          MEMORY[0x192FD42A0](v102, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        return;
      }
    }
    else
    {
      uint64_t v20 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      uint64_t v21 = v20;
      if (!v20) {
        goto LABEL_114;
      }
    }
    id v5 = 0;
    uint64_t v119 = (char *)v21;
    unint64_t v120 = a1 & 0xC000000000000001;
    uint64_t v116 = a1 + 32;
    uint64_t v126 = (void (**)(uint64_t, uint64_t))(v3 + 8);
    while (1)
    {
      if (v120) {
        id v22 = (char *)MEMORY[0x192FD1FB0](v5, a1);
      }
      else {
        id v22 = (char *)*(id *)(v116 + 8 * (void)v5);
      }
      uint64_t v23 = v22;
      if (__OFADD__(v5++, 1)) {
        goto LABEL_123;
      }
      id v25 = &v22[OBJC_IVAR___CNManagedDuplicate_userSelectedContactImage];
      swift_beginAccess();
      uint64_t v26 = *((void *)v25 + 1);
      a1 = (uint64_t)&v23[OBJC_IVAR___CNManagedDuplicate_managedCohorts];
      uint64_t v122 = v23;
      uint64_t v123 = v5;
      if (v26 == 1)
      {
        swift_beginAccess();
        uint64_t v27 = *(void *)a1;
        v129[0] = (id)MEMORY[0x1E4FBC860];
        if ((unint64_t)v27 >> 62)
        {
          if (v27 < 0) {
            a1 = v27;
          }
          else {
            a1 = v27 & 0xFFFFFFFFFFFFFF8;
          }
          id v74 = v23;
          swift_bridgeObjectRetain();
          uint64_t v2 = sub_190B778A8();
        }
        else
        {
          uint64_t v2 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
          uint64_t v28 = v23;
          swift_bridgeObjectRetain();
        }
        unint64_t v29 = &v23[OBJC_IVAR___CNManagedDuplicate_primaryID];
        swift_beginAccess();
        if (v2)
        {
          unint64_t v30 = 0;
          unint64_t v125 = v27 & 0xC000000000000001;
          do
          {
            if (v125)
            {
              uint64_t v31 = (char *)MEMORY[0x192FD1FB0](v30, v27);
            }
            else
            {
              if (v30 >= *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_122;
              }
              uint64_t v31 = (char *)*(id *)(v27 + 8 * v30 + 32);
            }
            id v5 = v31;
            uint64_t v3 = v30 + 1;
            if (__OFADD__(v30, 1))
            {
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              swift_once();
              goto LABEL_3;
            }
            a1 = (uint64_t)&v31[OBJC_IVAR___CNManagedCohort_identifier];
            swift_beginAccess();
            uint64_t v32 = *(void *)(a1 + 8);
            uint64_t v33 = *((void *)v29 + 1);
            if (v32)
            {
              if (v33)
              {
                BOOL v34 = *(void *)a1 == *(void *)v29 && v32 == v33;
                if (v34 || (sub_190B77998() & 1) != 0)
                {
LABEL_40:

                  goto LABEL_28;
                }
              }
            }
            else if (!v33)
            {
              goto LABEL_40;
            }
            a1 = (uint64_t)v129;
            sub_190B77808();
            sub_190B77848();
            sub_190B77858();
            sub_190B77818();
LABEL_28:
            ++v30;
          }
          while (v3 != v2);
        }
        uint64_t v3 = (uint64_t)v129[0];
        swift_bridgeObjectRelease();
        uint64_t v23 = v122;

        if (v3 < 0 || (v3 & 0x4000000000000000) != 0)
        {
          swift_bridgeObjectRetain();
          uint64_t v2 = sub_190B778A8();
          id v5 = v123;
          if (v2)
          {
LABEL_60:
            if (v2 < 1) {
              goto LABEL_125;
            }
            uint64_t v55 = 0;
            unint64_t v56 = v3 & 0xC000000000000001;
            unint64_t v37 = (void *)MEMORY[0x1E4FBC860];
            unint64_t v124 = v3 & 0xC000000000000001;
            unint64_t v125 = v3;
            do
            {
              if (v56) {
                uint64_t v57 = (char *)MEMORY[0x192FD1FB0](v55, v3);
              }
              else {
                uint64_t v57 = (char *)*(id *)(v3 + 8 * v55 + 32);
              }
              uint64_t v58 = v57;
              unint64_t v59 = &v57[OBJC_IVAR___CNManagedCohort_imageData];
              swift_beginAccess();
              unint64_t v60 = *((void *)v59 + 1);
              if (v60 >> 60 == 15)
              {
              }
              else
              {
                uint64_t v61 = v2;
                uint64_t v62 = *(void *)v59;
                CGFloat v63 = *(double *)&v58[OBJC_IVAR___CNManagedCohort_cropRect];
                CGFloat v64 = *(double *)&v58[OBJC_IVAR___CNManagedCohort_cropRect + 8];
                CGFloat v65 = *(double *)&v58[OBJC_IVAR___CNManagedCohort_cropRect + 16];
                CGFloat v66 = *(double *)&v58[OBJC_IVAR___CNManagedCohort_cropRect + 24];
                sub_190B2E918(*(void *)v59, *((void *)v59 + 1));
                v132.origin.double x = v63;
                v132.origin.double y = v64;
                v132.size.double width = v65;
                v132.size.double height = v66;
                BOOL v67 = NSStringFromRect(v132);
                uint64_t v68 = sub_190B77168();
                uint64_t v70 = v69;

                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  unint64_t v37 = sub_190B49290(0, v37[2] + 1, 1, v37);
                }
                unint64_t v72 = v37[2];
                unint64_t v71 = v37[3];
                if (v72 >= v71 >> 1) {
                  unint64_t v37 = sub_190B49290((void *)(v71 > 1), v72 + 1, 1, v37);
                }
                void v37[2] = v72 + 1;
                BOOL v73 = &v37[4 * v72];
                v73[4] = v62;
                v73[5] = v60;
                v73[6] = v68;
                v73[7] = v70;
                uint64_t v2 = v61;
                unint64_t v56 = v124;
                uint64_t v3 = v125;
              }
              ++v55;
            }
            while (v2 != v55);
            swift_release_n();
            goto LABEL_75;
          }
        }
        else
        {
          uint64_t v2 = *(void *)(v3 + 16);
          swift_bridgeObjectRetain();
          id v5 = v123;
          if (v2) {
            goto LABEL_60;
          }
        }
        swift_release_n();
      }
      else
      {
        swift_beginAccess();
        uint64_t v3 = *(void *)a1;
        if (*(void *)a1 >> 62)
        {
          if (v3 < 0) {
            a1 = *(void *)a1;
          }
          else {
            a1 = v3 & 0xFFFFFFFFFFFFFF8;
          }
          swift_bridgeObjectRetain_n();
          uint64_t v2 = sub_190B778A8();
          if (v2)
          {
LABEL_44:
            if (v2 < 1) {
              goto LABEL_124;
            }
            uint64_t v35 = 0;
            unint64_t v36 = v3 & 0xC000000000000001;
            unint64_t v37 = (void *)MEMORY[0x1E4FBC860];
            unint64_t v124 = v3 & 0xC000000000000001;
            unint64_t v125 = v3;
            do
            {
              if (v36) {
                unint64_t v38 = (char *)MEMORY[0x192FD1FB0](v35, v3);
              }
              else {
                unint64_t v38 = (char *)*(id *)(v3 + 8 * v35 + 32);
              }
              unint64_t v39 = v38;
              uint64_t v40 = &v38[OBJC_IVAR___CNManagedCohort_imageData];
              swift_beginAccess();
              unint64_t v41 = *((void *)v40 + 1);
              if (v41 >> 60 == 15)
              {
              }
              else
              {
                uint64_t v42 = v2;
                uint64_t v43 = *(void *)v40;
                CGFloat v44 = *(double *)&v39[OBJC_IVAR___CNManagedCohort_cropRect];
                CGFloat v45 = *(double *)&v39[OBJC_IVAR___CNManagedCohort_cropRect + 8];
                CGFloat v46 = *(double *)&v39[OBJC_IVAR___CNManagedCohort_cropRect + 16];
                CGFloat v47 = *(double *)&v39[OBJC_IVAR___CNManagedCohort_cropRect + 24];
                sub_190B2E918(*(void *)v40, *((void *)v40 + 1));
                v131.origin.double x = v44;
                v131.origin.double y = v45;
                v131.size.double width = v46;
                v131.size.double height = v47;
                unint64_t v48 = NSStringFromRect(v131);
                uint64_t v49 = sub_190B77168();
                uint64_t v51 = v50;

                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  unint64_t v37 = sub_190B49290(0, v37[2] + 1, 1, v37);
                }
                unint64_t v53 = v37[2];
                unint64_t v52 = v37[3];
                if (v53 >= v52 >> 1) {
                  unint64_t v37 = sub_190B49290((void *)(v52 > 1), v53 + 1, 1, v37);
                }
                void v37[2] = v53 + 1;
                unint64_t v54 = &v37[4 * v53];
                v54[4] = v43;
                v54[5] = v41;
                v54[6] = v49;
                v54[7] = v51;
                uint64_t v2 = v42;
                unint64_t v36 = v124;
                uint64_t v3 = v125;
              }
              ++v35;
            }
            while (v2 != v35);
            swift_bridgeObjectRelease_n();
LABEL_75:
            uint64_t v23 = v122;
            id v5 = v123;
            goto LABEL_88;
          }
        }
        else
        {
          uint64_t v2 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain_n();
          if (v2) {
            goto LABEL_44;
          }
        }
        swift_bridgeObjectRelease_n();
      }
      unint64_t v37 = (void *)MEMORY[0x1E4FBC860];
LABEL_88:
      if (v37[2] >= 7uLL) {
        uint64_t v75 = 7;
      }
      else {
        uint64_t v75 = v37[2];
      }
      sub_190B779A8();
      swift_unknownObjectRetain_n();
      uint64_t v76 = swift_dynamicCastClass();
      if (!v76)
      {
        swift_bridgeObjectRelease();
        uint64_t v76 = MEMORY[0x1E4FBC860];
      }
      uint64_t v77 = *(void *)(v76 + 16);
      swift_release();
      if (v77 == v75)
      {
        unint64_t v78 = (void *)swift_dynamicCastClass();
        if (v78) {
          goto LABEL_97;
        }
        swift_bridgeObjectRelease();
LABEL_96:
        unint64_t v78 = (void *)MEMORY[0x1E4FBC860];
        goto LABEL_97;
      }
      swift_bridgeObjectRelease();
      if (!v75) {
        goto LABEL_96;
      }
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92A5DE0);
      uint64_t v97 = 4 * v75;
      unint64_t v78 = (void *)swift_allocObject();
      int64_t v98 = _swift_stdlib_malloc_size(v78);
      uint64_t v99 = v98 - 32;
      if (v98 < 32) {
        uint64_t v99 = v98 - 1;
      }
      v78[2] = v75;
      v78[3] = 2 * (v99 >> 5);
      if (v37 + 4 < &v78[v97 + 4] && v78 + 4 < &v37[v97 + 4])
      {
        sub_190B778F8();
        __break(1u);
        return;
      }
      swift_arrayInitWithCopy();
LABEL_97:
      swift_bridgeObjectRelease();
      uint64_t v2 = v78[2];
      if (v2)
      {
        v129[0] = (id)MEMORY[0x1E4FBC860];
        sub_190B77838();
        unint64_t v125 = (unint64_t)v78;
        uint64_t v79 = v78 + 7;
        uint64_t v3 = (uint64_t)v117;
        do
        {
          uint64_t v81 = *(v79 - 3);
          unint64_t v80 = *(v79 - 2);
          sub_190B2E918(v81, v80);
          swift_bridgeObjectRetain();
          sub_190B2E918(v81, v80);
          swift_bridgeObjectRetain();
          sub_190B2E918(v81, v80);
          swift_bridgeObjectRetain();
          sub_190B2E918(v81, v80);
          os_log_type_t v82 = (NSString *)sub_190B77158();
          NSRect v133 = NSRectFromString(v82);
          double x = v133.origin.x;
          double y = v133.origin.y;
          double width = v133.size.width;
          double height = v133.size.height;

          sub_190B2EB28(v81, v80);
          swift_bridgeObjectRelease();
          sub_190B76E28();
          id v87 = objc_allocWithZone((Class)CNContactImage);
          os_log_type_t v88 = (void *)sub_190B76DE8();
          sub_190B2EB28(v81, v80);
          uint64_t v89 = (void *)sub_190B76E18();
          objc_msgSend(v87, sel_initWithImageData_cropRect_lastUsedDate_, v88, v89, x, y, width, height);

          (*v126)(v3, v127);
          sub_190B2EB28(v81, v80);
          swift_bridgeObjectRelease();
          sub_190B2EB28(v81, v80);
          swift_bridgeObjectRelease();
          sub_190B77808();
          sub_190B77848();
          sub_190B77858();
          sub_190B77818();
          v79 += 4;
          --v2;
        }
        while (v2);
        unint64_t v90 = (unint64_t)v129[0];
        swift_release();
        uint64_t v23 = v122;
        id v5 = v123;
        if (!(v90 >> 62))
        {
LABEL_101:
          if (!*(void *)((v90 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_15;
          }
          goto LABEL_102;
        }
      }
      else
      {
        swift_release();
        unint64_t v90 = MEMORY[0x1E4FBC860];
        if (!(MEMORY[0x1E4FBC860] >> 62)) {
          goto LABEL_101;
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v96 = sub_190B778A8();
      swift_bridgeObjectRelease();
      if (!v96)
      {
LABEL_15:

        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
LABEL_102:
      uint64_t v91 = &v23[OBJC_IVAR___CNManagedDuplicate_primaryID];
      swift_beginAccess();
      if (!*((void *)v91 + 1)) {
        __break(1u);
      }
      sub_190B23474(0, &qword_1E92A61A8);
      swift_bridgeObjectRetain();
      uint64_t v92 = (void *)sub_190B772B8();
      swift_bridgeObjectRelease();
      uint64_t v93 = (void *)sub_190B77158();
      swift_bridgeObjectRelease();
      id v94 = objc_msgSend(self, sel_saveRequestToCreateImages_forContactIdentifier_, v92, v93);

      v129[0] = 0;
      if ((objc_msgSend(v118, sel_performSaveRequest_error_, v94, v129) & 1) == 0)
      {
        id v103 = v129[0];
        uint64_t v104 = (void *)sub_190B76D68();

        swift_willThrow();
        swift_bridgeObjectRelease_n();

        id v105 = v104;
        id v106 = v104;
        uint64_t v107 = sub_190B76FA8();
        os_log_type_t v108 = sub_190B77578();
        if (os_log_type_enabled(v107, v108))
        {
          id v109 = (uint8_t *)swift_slowAlloc();
          int64_t v110 = (void *)swift_slowAlloc();
          v129[0] = v110;
          *(_DWORD *)id v109 = 136315138;
          swift_getErrorValue();
          uint64_t v111 = sub_190B77A08();
          uint64_t v128 = sub_190B21150(v111, v112, (uint64_t *)v129);
          sub_190B77648();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_1909E3000, v107, v108, "Error updating recent images for merged duplicates %s", v109, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x192FD42A0](v110, -1, -1);
          MEMORY[0x192FD42A0](v109, -1, -1);
        }
        else
        {
        }
        return;
      }
      id v95 = v129[0];

LABEL_16:
      a1 = v121;
      if (v5 == v119) {
        goto LABEL_114;
      }
    }
  }
LABEL_128:

  swift_bridgeObjectRelease();
}

void _s8Contacts09DuplicateA7ManagerC40updateRecentPostersDatabaseForSignaturesyySaySSGFZ_0(uint64_t a1)
{
  v105[7] = *(id *)MEMORY[0x1E4F143B8];
  unint64_t v2 = sub_190B76E38();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t)&v87 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v6 = sub_190B76E88();
  id v7 = *(void **)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  if (!*(void *)(a1 + 16)) {
    return;
  }
  id v103 = (char *)&v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E92A3C78 != -1) {
    goto LABEL_126;
  }
LABEL_3:
  sub_190B23474(0, (unint64_t *)&unk_1E92A3D50);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92A3DC0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_190B908E0;
  *(void *)(v9 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A3D30);
  *(void *)(v9 + 64) = sub_190B21814();
  *(void *)(v9 + 32) = a1;
  swift_bridgeObjectRetain();
  uint64_t v10 = (void *)sub_190B77548();
  unint64_t v11 = sub_190B1E0EC((uint64_t)v10);

  unint64_t v12 = v11 >> 62;
  unint64_t v94 = v11;
  if (!(v11 >> 62))
  {
    uint64_t v13 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v13 < 1) {
      goto LABEL_128;
    }
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  unint64_t v11 = v94;
  uint64_t v13 = sub_190B778A8();
  swift_bridgeObjectRelease();
  if (v13 >= 1)
  {
LABEL_5:
    unint64_t v101 = v6;
    id v91 = objc_msgSend(objc_allocWithZone((Class)CNContactPosterStore), sel_init);
    if (qword_1E92A3C70 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_190B76FC8();
    uint64_t v15 = __swift_project_value_buffer(v14, (uint64_t)qword_1E92A8448);
    swift_bridgeObjectRetain();
    unint64_t v16 = v11;
    uint64_t v89 = v15;
    uint64_t v17 = sub_190B76FA8();
    os_log_type_t v18 = sub_190B77568();
    BOOL v19 = os_log_type_enabled(v17, v18);
    unint64_t v102 = v5;
    os_log_type_t v88 = (void *)v13;
    if (v19)
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = (void *)v13;
      id v22 = v20;
      *(_DWORD *)uint64_t v20 = 134217984;
      v105[4] = v21;
      sub_190B77648();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1909E3000, v17, v18, "Will updated recent posters from %ld managed duplicates", v22, 0xCu);
      MEMORY[0x192FD42A0](v22, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease();
    }
    a1 = v16;
    unint64_t v6 = v2;
    if (v12)
    {
      swift_bridgeObjectRetain();
      a1 = v94;
      uint64_t v24 = sub_190B778A8();
      if (!v24)
      {
LABEL_114:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        id v74 = sub_190B76FA8();
        os_log_type_t v75 = sub_190B77568();
        if (os_log_type_enabled(v74, v75))
        {
          uint64_t v76 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v76 = 134217984;
          swift_bridgeObjectRelease();
          v105[0] = v88;
          sub_190B77648();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1909E3000, v74, v75, "Successfully updated recent posters from %ld managed duplicates", v76, 0xCu);
          MEMORY[0x192FD42A0](v76, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        return;
      }
    }
    else
    {
      uint64_t v23 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      uint64_t v24 = v23;
      if (!v23) {
        goto LABEL_114;
      }
    }
    uint64_t v25 = 0;
    uint64_t v92 = v24;
    unint64_t v93 = a1 & 0xC000000000000001;
    uint64_t v90 = a1 + 32;
    uint64_t v99 = (void (**)(char *, unint64_t))(v7 + 1);
    unint64_t v100 = v2;
    int64_t v98 = (void (**)(unint64_t, unint64_t))(v3 + 8);
    while (1)
    {
      if (v93) {
        uint64_t v26 = (void *)MEMORY[0x192FD1FB0](v25, a1);
      }
      else {
        uint64_t v26 = *(id *)(v90 + 8 * v25);
      }
      id v7 = v26;
      BOOL v27 = __OFADD__(v25, 1);
      uint64_t v5 = v25 + 1;
      if (v27) {
        goto LABEL_123;
      }
      uint64_t v28 = (char *)v26 + OBJC_IVAR___CNManagedDuplicate_userSelectedContactPoster;
      swift_beginAccess();
      unint64_t v29 = *((void *)v28 + 1);
      a1 = (uint64_t)v7 + OBJC_IVAR___CNManagedDuplicate_managedCohorts;
      uint64_t v95 = v5;
      uint64_t v96 = v7;
      if (v29 >> 60 == 11)
      {
        swift_beginAccess();
        uint64_t v5 = *(void *)a1;
        v105[0] = (id)MEMORY[0x1E4FBC860];
        if ((unint64_t)v5 >> 62)
        {
          if (v5 < 0) {
            a1 = v5;
          }
          else {
            a1 = v5 & 0xFFFFFFFFFFFFFF8;
          }
          unint64_t v52 = v7;
          swift_bridgeObjectRetain();
          uint64_t v3 = sub_190B778A8();
        }
        else
        {
          uint64_t v3 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
          unint64_t v30 = v7;
          swift_bridgeObjectRetain();
        }
        id v7 = (void *)((char *)v7 + OBJC_IVAR___CNManagedDuplicate_primaryID);
        swift_beginAccess();
        if (v3)
        {
          unint64_t v2 = 0;
          unint64_t v97 = v5 & 0xC000000000000001;
          unint64_t v6 = v5 & 0xFFFFFFFFFFFFFF8;
          do
          {
            if (v97)
            {
              id v31 = (id)MEMORY[0x192FD1FB0](v2, v5);
            }
            else
            {
              if (v2 >= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_122;
              }
              id v31 = *(id *)(v5 + 8 * v2 + 32);
            }
            uint64_t v32 = v31;
            unint64_t v33 = v2 + 1;
            if (__OFADD__(v2, 1))
            {
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              swift_once();
              goto LABEL_3;
            }
            a1 = (uint64_t)v31 + OBJC_IVAR___CNManagedCohort_identifier;
            swift_beginAccess();
            uint64_t v34 = *(void *)(a1 + 8);
            uint64_t v35 = v7[1];
            if (v34)
            {
              if (v35)
              {
                BOOL v36 = *(void *)a1 == *v7 && v34 == v35;
                if (v36 || (sub_190B77998() & 1) != 0)
                {
LABEL_40:

                  goto LABEL_28;
                }
              }
            }
            else if (!v35)
            {
              goto LABEL_40;
            }
            a1 = (uint64_t)v105;
            sub_190B77808();
            sub_190B77848();
            sub_190B77858();
            sub_190B77818();
LABEL_28:
            ++v2;
          }
          while (v33 != v3);
        }
        unint64_t v45 = (unint64_t)v105[0];
        swift_bridgeObjectRelease();
        id v7 = v96;

        if ((v45 & 0x8000000000000000) != 0 || (v45 & 0x4000000000000000) != 0)
        {
          swift_bridgeObjectRetain();
          uint64_t v3 = sub_190B778A8();
          if (v3)
          {
LABEL_60:
            if (v3 < 1) {
              goto LABEL_125;
            }
            uint64_t v46 = 0;
            unint64_t v39 = (void *)MEMORY[0x1E4FBC860];
            do
            {
              if ((v45 & 0xC000000000000001) != 0) {
                id v47 = (id)MEMORY[0x192FD1FB0](v46, v45);
              }
              else {
                id v47 = *(id *)(v45 + 8 * v46 + 32);
              }
              unint64_t v48 = v47;
              unint64_t v2 = (unint64_t)v47 + OBJC_IVAR___CNManagedCohort_posterData;
              swift_beginAccess();
              unint64_t v49 = *(void *)(v2 + 8);
              if (v49 >> 60 == 15)
              {
              }
              else
              {
                unint64_t v2 = *(void *)v2;
                sub_190B2E918(v2, v49);

                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  unint64_t v39 = sub_190B493A0(0, v39[2] + 1, 1, v39);
                }
                unint64_t v6 = v39[2];
                unint64_t v50 = v39[3];
                if (v6 >= v50 >> 1) {
                  unint64_t v39 = sub_190B493A0((void *)(v50 > 1), v6 + 1, 1, v39);
                }
                v39[2] = v6 + 1;
                uint64_t v51 = &v39[2 * v6];
                v51[4] = v2;
                v51[5] = v49;
              }
              ++v46;
            }
            while (v3 != v46);
            swift_release_n();
            goto LABEL_75;
          }
        }
        else
        {
          uint64_t v3 = *(void *)(v45 + 16);
          swift_bridgeObjectRetain();
          if (v3) {
            goto LABEL_60;
          }
        }
        swift_release_n();
      }
      else
      {
        swift_beginAccess();
        uint64_t v37 = *(void *)a1;
        if (*(void *)a1 >> 62)
        {
          if (v37 < 0) {
            a1 = *(void *)a1;
          }
          else {
            a1 = v37 & 0xFFFFFFFFFFFFFF8;
          }
          swift_bridgeObjectRetain_n();
          uint64_t v3 = sub_190B778A8();
          if (v3)
          {
LABEL_44:
            if (v3 < 1) {
              goto LABEL_124;
            }
            uint64_t v38 = 0;
            unint64_t v39 = (void *)MEMORY[0x1E4FBC860];
            do
            {
              if ((v37 & 0xC000000000000001) != 0) {
                id v40 = (id)MEMORY[0x192FD1FB0](v38, v37);
              }
              else {
                id v40 = *(id *)(v37 + 8 * v38 + 32);
              }
              unint64_t v41 = v40;
              unint64_t v2 = (unint64_t)v40 + OBJC_IVAR___CNManagedCohort_posterData;
              swift_beginAccess();
              unint64_t v42 = *(void *)(v2 + 8);
              if (v42 >> 60 == 15)
              {
              }
              else
              {
                unint64_t v2 = *(void *)v2;
                sub_190B2E918(v2, v42);

                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  unint64_t v39 = sub_190B493A0(0, v39[2] + 1, 1, v39);
                }
                unint64_t v6 = v39[2];
                unint64_t v43 = v39[3];
                if (v6 >= v43 >> 1) {
                  unint64_t v39 = sub_190B493A0((void *)(v43 > 1), v6 + 1, 1, v39);
                }
                v39[2] = v6 + 1;
                CGFloat v44 = &v39[2 * v6];
                v44[4] = v2;
                v44[5] = v42;
              }
              ++v38;
            }
            while (v3 != v38);
            swift_bridgeObjectRelease_n();
LABEL_75:
            id v7 = v96;
            goto LABEL_88;
          }
        }
        else
        {
          uint64_t v3 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain_n();
          if (v3) {
            goto LABEL_44;
          }
        }
        swift_bridgeObjectRelease_n();
      }
      unint64_t v39 = (void *)MEMORY[0x1E4FBC860];
LABEL_88:
      if (v39[2] >= 3uLL) {
        uint64_t v53 = 3;
      }
      else {
        uint64_t v53 = v39[2];
      }
      sub_190B779A8();
      swift_unknownObjectRetain_n();
      uint64_t v54 = swift_dynamicCastClass();
      if (!v54)
      {
        swift_bridgeObjectRelease();
        uint64_t v54 = MEMORY[0x1E4FBC860];
      }
      uint64_t v55 = *(void *)(v54 + 16);
      swift_release();
      if (v55 == v53)
      {
        unint64_t v56 = (unint64_t *)swift_dynamicCastClass();
        uint64_t v25 = v95;
        if (v56) {
          goto LABEL_97;
        }
        swift_bridgeObjectRelease();
LABEL_96:
        unint64_t v56 = (unint64_t *)MEMORY[0x1E4FBC860];
        goto LABEL_97;
      }
      swift_bridgeObjectRelease();
      uint64_t v25 = v95;
      if (!v53) {
        goto LABEL_96;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92A61A0);
      uint64_t v71 = 2 * v53;
      unint64_t v56 = (unint64_t *)swift_allocObject();
      int64_t v72 = _swift_stdlib_malloc_size(v56);
      uint64_t v73 = v72 - 32;
      if (v72 < 32) {
        uint64_t v73 = v72 - 17;
      }
      v56[2] = v53;
      v56[3] = 2 * (v73 >> 4);
      if (v39 + 4 < &v56[v71 + 4] && v56 + 4 < &v39[v71 + 4])
      {
        sub_190B778F8();
        __break(1u);
        return;
      }
      swift_arrayInitWithCopy();
LABEL_97:
      swift_bridgeObjectRelease();
      unint64_t v57 = v56[2];
      if (v57)
      {
        v105[0] = (id)MEMORY[0x1E4FBC860];
        sub_190B77838();
        unint64_t v97 = (unint64_t)v56;
        uint64_t v58 = v56 + 5;
        do
        {
          uint64_t v59 = *(v58 - 1);
          unint64_t v2 = *v58;
          sub_190B2E918(v59, *v58);
          sub_190B2E918(v59, v2);
          unint64_t v60 = v103;
          sub_190B76E78();
          sub_190B76E48();
          (*v99)(v60, v101);
          sub_190B2E918(v59, v2);
          unint64_t v6 = v102;
          sub_190B76E28();
          id v61 = objc_allocWithZone((Class)CNContactPoster);
          uint64_t v3 = sub_190B77158();
          swift_bridgeObjectRelease();
          uint64_t v62 = (void *)sub_190B76DE8();
          CGFloat v63 = (void *)sub_190B76E18();
          objc_msgSend(v61, sel_initWithIdentifier_posterData_lastUsedDate_, v3, v62, v63);

          sub_190B2EB28(v59, v2);
          (*v98)(v6, v100);
          sub_190B2EB28(v59, v2);
          sub_190B2EB28(v59, v2);
          sub_190B77808();
          sub_190B77848();
          sub_190B77858();
          sub_190B77818();
          v58 += 2;
          --v57;
        }
        while (v57);
        unint64_t v64 = (unint64_t)v105[0];
        swift_release();
        uint64_t v25 = v95;
        id v7 = v96;
        if (!(v64 >> 62))
        {
LABEL_101:
          if (!*(void *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_15;
          }
          goto LABEL_102;
        }
      }
      else
      {
        swift_release();
        unint64_t v64 = MEMORY[0x1E4FBC860];
        if (!(MEMORY[0x1E4FBC860] >> 62)) {
          goto LABEL_101;
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v70 = sub_190B778A8();
      swift_bridgeObjectRelease();
      if (!v70)
      {
LABEL_15:

        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
LABEL_102:
      CGFloat v65 = (char *)v7 + OBJC_IVAR___CNManagedDuplicate_primaryID;
      swift_beginAccess();
      if (!*((void *)v65 + 1)) {
        __break(1u);
      }
      sub_190B23474(0, &qword_1E92A6198);
      swift_bridgeObjectRetain();
      CGFloat v66 = (void *)sub_190B772B8();
      swift_bridgeObjectRelease();
      BOOL v67 = (void *)sub_190B77158();
      swift_bridgeObjectRelease();
      id v68 = objc_msgSend(self, sel_saveRequestToCreatePosters_forContactIdentifier_, v66, v67);

      v105[0] = 0;
      if ((objc_msgSend(v91, sel_performSaveRequest_error_, v68, v105) & 1) == 0)
      {
        id v77 = v105[0];
        unint64_t v78 = (void *)sub_190B76D68();

        swift_willThrow();
        swift_bridgeObjectRelease_n();

        id v79 = v78;
        id v80 = v78;
        uint64_t v81 = sub_190B76FA8();
        os_log_type_t v82 = sub_190B77578();
        if (os_log_type_enabled(v81, v82))
        {
          unint64_t v83 = (uint8_t *)swift_slowAlloc();
          uint64_t v84 = (void *)swift_slowAlloc();
          v105[0] = v84;
          *(_DWORD *)unint64_t v83 = 136315138;
          swift_getErrorValue();
          uint64_t v85 = sub_190B77A08();
          uint64_t v104 = sub_190B21150(v85, v86, (uint64_t *)v105);
          sub_190B77648();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_1909E3000, v81, v82, "Error updating recent posters for merged duplicates %s", v83, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x192FD42A0](v84, -1, -1);
          MEMORY[0x192FD42A0](v83, -1, -1);
        }
        else
        {
        }
        return;
      }
      id v69 = v105[0];

LABEL_16:
      a1 = v94;
      if (v25 == v92) {
        goto LABEL_114;
      }
    }
  }
LABEL_128:

  swift_bridgeObjectRelease();
}

uint64_t method lookup function for DuplicateContactsManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DuplicateContactsManager);
}

uint64_t dispatch thunk of DuplicateContactsManager.duplicates.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of DuplicateContactsManager.__allocating_init(withContactStore:)()
{
  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t dispatch thunk of DuplicateContactsManager.applyMergeResultToSaveRequest(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x110))();
}

uint64_t sub_190B6F700()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_190B6F738(char a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(v1 + 16) + 16))(*(void *)(v1 + 16), a1 & 1);
}

uint64_t objectdestroyTm()
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_190B6F79C()
{
  return sub_190B66958(*(uint64_t **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(uint64_t (**)(uint64_t))(v0 + 40));
}

uint64_t sub_190B6F7AC()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_190B6F7E4()
{
  unint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_190B42598;
  uint64_t v4 = (uint64_t (*)(const void *))((char *)&dword_1E92A6158 + dword_1E92A6158);
  return v4(v2);
}

uint64_t sub_190B6F898()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_190B6F8D0(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_190B42598;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1E92A6188 + dword_1E92A6188);
  return v6(a1, v4);
}

uint64_t sub_190B6F988()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_190B6F998(uint64_t a1)
{
  return sub_190B63E48(a1, *(void (**)(uint64_t))(v1 + 16));
}

uint64_t sub_190B6F9A0(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_190B23474(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void __LoadCoreSpotlight_block_invoke_cold_1()
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  int v0 = *__error();
  v1[0] = 67109120;
  v1[1] = v0;
  _os_log_error_impl(&dword_1909E3000, MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR, "Failed to Soft Link: /System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight (%d)", (uint8_t *)v1, 8u);
}

void __LoadTelephonyUtilities_block_invoke_cold_1()
{
  __error();
  OUTLINED_FUNCTION_0_0(&dword_1909E3000, MEMORY[0x1E4F14500], v0, "Failed to Soft Link: /System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities (%d)", v1, v2, v3, v4, 0);
}

void __LoadCoreTelephony_block_invoke_cold_1()
{
  __error();
  OUTLINED_FUNCTION_0_0(&dword_1909E3000, MEMORY[0x1E4F14500], v0, "Failed to Soft Link: /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony (%d)", v1, v2, v3, v4, 0);
}

void __LoadCallHistory_block_invoke_cold_1()
{
  __error();
  OUTLINED_FUNCTION_0_0(&dword_1909E3000, MEMORY[0x1E4F14500], v0, "Failed to Soft Link: /System/Library/PrivateFrameworks/CallHistory.framework/CallHistory (%d)", v1, v2, v3, v4, 0);
}

void __LoadAvatarKit_block_invoke_cold_1()
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  int v0 = *__error();
  v1[0] = 67109120;
  v1[1] = v0;
  _os_log_error_impl(&dword_1909E3000, MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR, "Failed to Soft Link: /System/Library/PrivateFrameworks/AvatarKit.framework/AvatarKit (%d)", (uint8_t *)v1, 8u);
}

void __LoadPrivacyAccounting_block_invoke_cold_1()
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  int v0 = *__error();
  v1[0] = 67109120;
  v1[1] = v0;
  _os_log_error_impl(&dword_1909E3000, MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR, "Failed to Soft Link: /System/Library/PrivateFrameworks/PrivacyAccounting.framework/PrivacyAccounting (%d)", (uint8_t *)v1, 8u);
}

void __LoadTelephonyUtilities_block_invoke_cold_1_0()
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  int v0 = *__error();
  v1[0] = 67109120;
  v1[1] = v0;
  _os_log_error_impl(&dword_1909E3000, MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR, "Failed to Soft Link: /System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities (%d)", (uint8_t *)v1, 8u);
}

void __LoadDataAccessExpress_block_invoke_cold_1()
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  int v0 = *__error();
  v1[0] = 67109120;
  v1[1] = v0;
  _os_log_error_impl(&dword_1909E3000, MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR, "Failed to Soft Link: /System/Library/PrivateFrameworks/DataAccessExpress.framework/DataAccessExpress (%d)", (uint8_t *)v1, 8u);
}

void __LoadEmailCore_block_invoke_cold_1()
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  int v0 = *__error();
  v1[0] = 67109120;
  v1[1] = v0;
  _os_log_error_impl(&dword_1909E3000, MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR, "Failed to Soft Link: /System/Library/PrivateFrameworks/EmailCore.framework/EmailCore (%d)", (uint8_t *)v1, 8u);
}

void __getABSPublicABCNCompatibilityClass_block_invoke_cold_1()
{
  int v0 = abort_report_np();
  -[CNContactProviderSupportManager initWithAuditToken:](v0);
}

void __LoadCoreText_block_invoke_cold_1()
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  int v0 = *__error();
  v1[0] = 67109120;
  v1[1] = v0;
  _os_log_error_impl(&dword_1909E3000, MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR, "Failed to Soft Link: /System/Library/Frameworks/CoreText.framework/CoreText (%d)", (uint8_t *)v1, 8u);
}

void __LoadAvatarPersistence_block_invoke_cold_1()
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  int v0 = *__error();
  v1[0] = 67109120;
  v1[1] = v0;
  _os_log_error_impl(&dword_1909E3000, MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR, "Failed to Soft Link: /System/Library/PrivateFrameworks/AvatarPersistence.framework/AvatarPersistence (%d)", (uint8_t *)v1, 8u);
}

uint64_t __getLNSpotlightAppEntityMapperClass_block_invoke_cold_1()
{
  uint64_t v0 = abort_report_np();
  return +[CNUserSetupPictureManager userSetupPictureData](v0);
}

uint64_t __getIMMeCardSharingStateControllerClass_block_invoke_cold_1()
{
  uint64_t v0 = abort_report_np();
  return __getIMNicknameControllerClass_block_invoke_cold_1(v0);
}

uint64_t __getIMNicknameControllerClass_block_invoke_cold_1()
{
  uint64_t v0 = abort_report_np();
  return +[CNContactMetadataPersistentStoreManager createModel](v0);
}

uint64_t __getCRRecentContactsLibraryClass_block_invoke_cold_1()
{
  uint64_t v0 = abort_report_np();
  return __getCRSearchQueryClass_block_invoke_cold_1(v0);
}

uint64_t __getCRSearchQueryClass_block_invoke_cold_1()
{
  uint64_t v0 = abort_report_np();
  return __getCRSearchPredicateClass_block_invoke_cold_1(v0);
}

void __getCRSearchPredicateClass_block_invoke_cold_1()
{
  uint64_t v0 = abort_report_np();
  -[CNContactFetchRequest initWithCoder:](v0);
}

void __LoadAppSupport_block_invoke_cold_1()
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  int v0 = *__error();
  v1[0] = 67109120;
  v1[1] = v0;
  _os_log_error_impl(&dword_1909E3000, MEMORY[0x1E4F14500], OS_LOG_TYPE_ERROR, "Failed to Soft Link: /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport (%d)", (uint8_t *)v1, 8u);
}

uint64_t __getCNDonationStoreClass_block_invoke_cold_1()
{
  uint64_t v0 = abort_report_np();
  return __63__CNLaunchServicesRemoteAdapter_createConnectionWithInterface___block_invoke_cold_1(v0);
}

uint64_t __getIMNicknameClass_block_invoke_cold_1()
{
  uint64_t v0 = abort_report_np();
  return -[CNDowntimeWhitelist whitelistedHandleStringsFromHandleStrings:error:](v0);
}

void CNImageUtilsCreateMmappedBitmapContext_cold_1()
{
  __assert_rtn("CNImageUtilsCreateMmappedBitmapContext", "CNImageUtilities.m", 345, "bitsPerComponent == 5 || bitsPerComponent == 8");
}

void CNImageUtilsCroppedImageDataFromFullSizeImageData_cold_1(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl(&dword_1909E3000, log, OS_LOG_TYPE_ERROR, "[LikenessResolver] can't create image source from data!", v1, 2u);
}

void CNImageUtilsCroppedImageDataFromFullSizeImageData_cold_2(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl(&dword_1909E3000, log, OS_LOG_TYPE_ERROR, "[LikenessResolver] can't create image PNG or JPG!", v1, 2u);
}

uint64_t sub_190B76B18()
{
  return MEMORY[0x1F40E2E10]();
}

uint64_t sub_190B76B28()
{
  return MEMORY[0x1F40E3368]();
}

uint64_t sub_190B76B38()
{
  return MEMORY[0x1F40E3420]();
}

uint64_t sub_190B76B48()
{
  return MEMORY[0x1F40E37E0]();
}

uint64_t sub_190B76B58()
{
  return MEMORY[0x1F40E3800]();
}

uint64_t sub_190B76B68()
{
  return MEMORY[0x1F40E3818]();
}

uint64_t sub_190B76B78()
{
  return MEMORY[0x1F40E38D0]();
}

uint64_t sub_190B76B88()
{
  return MEMORY[0x1F40E38E8]();
}

uint64_t sub_190B76B98()
{
  return MEMORY[0x1F40E38F8]();
}

uint64_t sub_190B76BA8()
{
  return MEMORY[0x1F40E3970]();
}

uint64_t sub_190B76BB8()
{
  return MEMORY[0x1F40E3978]();
}

uint64_t sub_190B76BC8()
{
  return MEMORY[0x1F40E3988]();
}

uint64_t sub_190B76BD8()
{
  return MEMORY[0x1F40E3A58]();
}

uint64_t sub_190B76BE8()
{
  return MEMORY[0x1F40E3A90]();
}

uint64_t sub_190B76BF8()
{
  return MEMORY[0x1F40E3A98]();
}

uint64_t sub_190B76C08()
{
  return MEMORY[0x1F40E3AC0]();
}

uint64_t sub_190B76C18()
{
  return MEMORY[0x1F40E42C0]();
}

uint64_t sub_190B76C28()
{
  return MEMORY[0x1F40E42C8]();
}

uint64_t sub_190B76C38()
{
  return MEMORY[0x1F40E42D8]();
}

uint64_t sub_190B76C48()
{
  return MEMORY[0x1F40E42F0]();
}

uint64_t sub_190B76C58()
{
  return MEMORY[0x1F40E4300]();
}

uint64_t sub_190B76C68()
{
  return MEMORY[0x1F40E4310]();
}

uint64_t sub_190B76C78()
{
  return MEMORY[0x1F40E4320]();
}

uint64_t sub_190B76C88()
{
  return MEMORY[0x1F40E4338]();
}

uint64_t sub_190B76C98()
{
  return MEMORY[0x1F40E4340]();
}

uint64_t sub_190B76CA8()
{
  return MEMORY[0x1F40E4350]();
}

uint64_t sub_190B76CB8()
{
  return MEMORY[0x1F40E43C0]();
}

uint64_t sub_190B76CC8()
{
  return MEMORY[0x1F40E43D0]();
}

uint64_t sub_190B76D28()
{
  return MEMORY[0x1F40E44E0]();
}

uint64_t sub_190B76D48()
{
  return MEMORY[0x1F40E44F8]();
}

uint64_t sub_190B76D58()
{
  return MEMORY[0x1F40E4540]();
}

uint64_t sub_190B76D68()
{
  return MEMORY[0x1F40E4550]();
}

uint64_t sub_190B76D78()
{
  return MEMORY[0x1F40E46D0]();
}

uint64_t sub_190B76D88()
{
  return MEMORY[0x1F40E4938]();
}

uint64_t sub_190B76D98()
{
  return MEMORY[0x1F40E49A0]();
}

uint64_t sub_190B76DA8()
{
  return MEMORY[0x1F40E49E0]();
}

uint64_t sub_190B76DB8()
{
  return MEMORY[0x1F40E49E8]();
}

uint64_t sub_190B76DC8()
{
  return MEMORY[0x1F40E4A70]();
}

uint64_t sub_190B76DD8()
{
  return MEMORY[0x1F40E4B80]();
}

uint64_t sub_190B76DE8()
{
  return MEMORY[0x1F40E4D48]();
}

uint64_t sub_190B76DF8()
{
  return MEMORY[0x1F40E4D58]();
}

uint64_t sub_190B76E08()
{
  return MEMORY[0x1F40E4DA8]();
}

uint64_t sub_190B76E18()
{
  return MEMORY[0x1F40E5188]();
}

uint64_t sub_190B76E28()
{
  return MEMORY[0x1F40E52F0]();
}

uint64_t sub_190B76E38()
{
  return MEMORY[0x1F40E5388]();
}

uint64_t sub_190B76E48()
{
  return MEMORY[0x1F40E53B0]();
}

uint64_t sub_190B76E58()
{
  return MEMORY[0x1F40E53C8]();
}

uint64_t sub_190B76E68()
{
  return MEMORY[0x1F40E53F8]();
}

uint64_t sub_190B76E78()
{
  return MEMORY[0x1F40E5438]();
}

uint64_t sub_190B76E88()
{
  return MEMORY[0x1F40E5448]();
}

uint64_t sub_190B76E98()
{
  return MEMORY[0x1F40E5728]();
}

uint64_t sub_190B76EA8()
{
  return MEMORY[0x1F40E5890]();
}

uint64_t sub_190B76EB8()
{
  return MEMORY[0x1F40E08D0]();
}

uint64_t sub_190B76EC8()
{
  return MEMORY[0x1F40E08D8]();
}

uint64_t sub_190B76ED8()
{
  return MEMORY[0x1F40E08E0]();
}

uint64_t sub_190B76EE8()
{
  return MEMORY[0x1F40E08E8]();
}

uint64_t sub_190B76EF8()
{
  return MEMORY[0x1F40E08F0]();
}

uint64_t sub_190B76F08()
{
  return MEMORY[0x1F40E08F8]();
}

uint64_t sub_190B76F18()
{
  return MEMORY[0x1F40E0910]();
}

uint64_t sub_190B76F28()
{
  return MEMORY[0x1F40E0948]();
}

uint64_t sub_190B76F48()
{
  return MEMORY[0x1F40E0960]();
}

uint64_t sub_190B76F58()
{
  return MEMORY[0x1F40E0970]();
}

uint64_t sub_190B76F68()
{
  return MEMORY[0x1F40E0980]();
}

uint64_t _s19ExtensionFoundation04_AppA8IdentityV8ContactsE03appA16BundleIdentifierSSvg_0()
{
  return MEMORY[0x1F40E0988]();
}

uint64_t sub_190B76F88()
{
  return MEMORY[0x1F40E0990]();
}

uint64_t sub_190B76F98()
{
  return MEMORY[0x1F40E09A0]();
}

uint64_t sub_190B76FA8()
{
  return MEMORY[0x1F4188670]();
}

uint64_t sub_190B76FB8()
{
  return MEMORY[0x1F4188680]();
}

uint64_t sub_190B76FC8()
{
  return MEMORY[0x1F41886A0]();
}

uint64_t sub_190B76FD8()
{
  return MEMORY[0x1F40DFF38]();
}

uint64_t sub_190B76FE8()
{
  return MEMORY[0x1F40DFF40]();
}

uint64_t sub_190B76FF8()
{
  return MEMORY[0x1F40DFF58]();
}

uint64_t sub_190B77008()
{
  return MEMORY[0x1F40E0540]();
}

uint64_t sub_190B77018()
{
  return MEMORY[0x1F40E0550]();
}

uint64_t sub_190B77028()
{
  return MEMORY[0x1F4183280]();
}

uint64_t sub_190B77038()
{
  return MEMORY[0x1F4183288]();
}

uint64_t sub_190B77048()
{
  return MEMORY[0x1F40E6000]();
}

uint64_t sub_190B77058()
{
  return MEMORY[0x1F40E6030]();
}

uint64_t sub_190B77068()
{
  return MEMORY[0x1F41833D0]();
}

uint64_t sub_190B77078()
{
  return MEMORY[0x1F4183408]();
}

uint64_t sub_190B77088()
{
  return MEMORY[0x1F4183420]();
}

uint64_t sub_190B77098()
{
  return MEMORY[0x1F4183480]();
}

uint64_t sub_190B770A8()
{
  return MEMORY[0x1F41835C0]();
}

uint64_t sub_190B770B8()
{
  return MEMORY[0x1F41835C8]();
}

uint64_t sub_190B770C8()
{
  return MEMORY[0x1F4183730]();
}

uint64_t sub_190B770D8()
{
  return MEMORY[0x1F4183838]();
}

uint64_t sub_190B770E8()
{
  return MEMORY[0x1F40E60A8]();
}

uint64_t sub_190B770F8()
{
  return MEMORY[0x1F40E60F0]();
}

uint64_t sub_190B77108()
{
  return MEMORY[0x1F40E6110]();
}

uint64_t sub_190B77118()
{
  return MEMORY[0x1F40E6128]();
}

uint64_t sub_190B77128()
{
  return MEMORY[0x1F40E6130]();
}

uint64_t sub_190B77138()
{
  return MEMORY[0x1F40E6148]();
}

uint64_t sub_190B77148()
{
  return MEMORY[0x1F40E6158]();
}

uint64_t sub_190B77158()
{
  return MEMORY[0x1F40E6190]();
}

uint64_t sub_190B77168()
{
  return MEMORY[0x1F40E61D8]();
}

uint64_t sub_190B77178()
{
  return MEMORY[0x1F40E61E8]();
}

uint64_t sub_190B77188()
{
  return MEMORY[0x1F40E6238]();
}

uint64_t sub_190B77198()
{
  return MEMORY[0x1F40E6268]();
}

uint64_t sub_190B771A8()
{
  return MEMORY[0x1F40E62A0]();
}

uint64_t sub_190B771B8()
{
  return MEMORY[0x1F40E62C8]();
}

uint64_t sub_190B771C8()
{
  return MEMORY[0x1F4183880]();
}

uint64_t sub_190B771D8()
{
  return MEMORY[0x1F41839B0]();
}

uint64_t sub_190B771E8()
{
  return MEMORY[0x1F41839F0]();
}

uint64_t sub_190B771F8()
{
  return MEMORY[0x1F4183A38]();
}

uint64_t sub_190B77208()
{
  return MEMORY[0x1F4183A80]();
}

uint64_t sub_190B77218()
{
  return MEMORY[0x1F4183BA8]();
}

uint64_t sub_190B77228()
{
  return MEMORY[0x1F4183BB8]();
}

uint64_t sub_190B77238()
{
  return MEMORY[0x1F4183C18]();
}

uint64_t sub_190B77248()
{
  return MEMORY[0x1F4183C40]();
}

uint64_t sub_190B77258()
{
  return MEMORY[0x1F4183C48]();
}

uint64_t sub_190B77268()
{
  return MEMORY[0x1F4183C60]();
}

uint64_t sub_190B77278()
{
  return MEMORY[0x1F4183C78]();
}

uint64_t sub_190B77288()
{
  return MEMORY[0x1F4183C88]();
}

uint64_t sub_190B77298()
{
  return MEMORY[0x1F4183CE0]();
}

uint64_t sub_190B772A8()
{
  return MEMORY[0x1F4183E80]();
}

uint64_t sub_190B772B8()
{
  return MEMORY[0x1F40E6338]();
}

uint64_t sub_190B772C8()
{
  return MEMORY[0x1F40E6370]();
}

uint64_t sub_190B772D8()
{
  return MEMORY[0x1F4183E90]();
}

uint64_t sub_190B772E8()
{
  return MEMORY[0x1F4183E98]();
}

uint64_t sub_190B772F8()
{
  return MEMORY[0x1F4183EA0]();
}

uint64_t sub_190B77308()
{
  return MEMORY[0x1F4183EC8]();
}

uint64_t sub_190B77318()
{
  return MEMORY[0x1F4183ED0]();
}

uint64_t sub_190B77328()
{
  return MEMORY[0x1F4183ED8]();
}

uint64_t sub_190B77338()
{
  return MEMORY[0x1F4183EE8]();
}

uint64_t sub_190B77348()
{
  return MEMORY[0x1F4183EF0]();
}

uint64_t sub_190B77358()
{
  return MEMORY[0x1F4183F08]();
}

uint64_t sub_190B77368()
{
  return MEMORY[0x1F4183F38]();
}

uint64_t sub_190B77378()
{
  return MEMORY[0x1F4183F40]();
}

uint64_t sub_190B77388()
{
  return MEMORY[0x1F4183F58]();
}

uint64_t sub_190B77398()
{
  return MEMORY[0x1F4183F60]();
}

uint64_t sub_190B773A8()
{
  return MEMORY[0x1F4183FA8]();
}

uint64_t sub_190B773B8()
{
  return MEMORY[0x1F4183FD8]();
}

uint64_t sub_190B773C8()
{
  return MEMORY[0x1F4183FF0]();
}

uint64_t sub_190B773D8()
{
  return MEMORY[0x1F40E6388]();
}

uint64_t sub_190B773E8()
{
  return MEMORY[0x1F4187BF0]();
}

uint64_t sub_190B773F8()
{
  return MEMORY[0x1F4187C00]();
}

uint64_t sub_190B77408()
{
  return MEMORY[0x1F4187C08]();
}

uint64_t sub_190B77418()
{
  return MEMORY[0x1F4187C18]();
}

uint64_t sub_190B77438()
{
  return MEMORY[0x1F4187CF8]();
}

uint64_t sub_190B77448()
{
  return MEMORY[0x1F4187D00]();
}

uint64_t sub_190B77458()
{
  return MEMORY[0x1F4187D98]();
}

uint64_t sub_190B77468()
{
  return MEMORY[0x1F4187DD8]();
}

uint64_t sub_190B77478()
{
  return MEMORY[0x1F4184138]();
}

uint64_t sub_190B77488()
{
  return MEMORY[0x1F4184188]();
}

uint64_t sub_190B77498()
{
  return MEMORY[0x1F41841D0]();
}

uint64_t sub_190B774A8()
{
  return MEMORY[0x1F41841F0]();
}

uint64_t sub_190B774B8()
{
  return MEMORY[0x1F4184218]();
}

uint64_t sub_190B774C8()
{
  return MEMORY[0x1F4184230]();
}

uint64_t sub_190B774D8()
{
  return MEMORY[0x1F4184250]();
}

uint64_t sub_190B774E8()
{
  return MEMORY[0x1F41842D0]();
}

uint64_t sub_190B774F8()
{
  return MEMORY[0x1F41842F8]();
}

uint64_t sub_190B77508()
{
  return MEMORY[0x1F4184338]();
}

uint64_t sub_190B77518()
{
  return MEMORY[0x1F4184348]();
}

uint64_t sub_190B77528()
{
  return MEMORY[0x1F4184398]();
}

uint64_t sub_190B77538()
{
  return MEMORY[0x1F4184440]();
}

uint64_t sub_190B77548()
{
  return MEMORY[0x1F40E6508]();
}

uint64_t sub_190B77558()
{
  return MEMORY[0x1F41886C0]();
}

uint64_t sub_190B77568()
{
  return MEMORY[0x1F41886D0]();
}

uint64_t sub_190B77578()
{
  return MEMORY[0x1F41886E0]();
}

uint64_t sub_190B77588()
{
  return MEMORY[0x1F4188700]();
}

uint64_t sub_190B77598()
{
  return MEMORY[0x1F40D7060]();
}

uint64_t sub_190B775A8()
{
  return MEMORY[0x1F40D7070]();
}

uint64_t sub_190B775B8()
{
  return MEMORY[0x1F40D7078]();
}

uint64_t sub_190B775C8()
{
  return MEMORY[0x1F40E67E8]();
}

uint64_t sub_190B775D8()
{
  return MEMORY[0x1F40E68F8]();
}

uint64_t sub_190B775E8()
{
  return MEMORY[0x1F40E6910]();
}

uint64_t sub_190B775F8()
{
  return MEMORY[0x1F41874A8]();
}

uint64_t sub_190B77608()
{
  return MEMORY[0x1F41874C0]();
}

uint64_t sub_190B77618()
{
  return MEMORY[0x1F41874E0]();
}

uint64_t sub_190B77628()
{
  return MEMORY[0x1F4184640]();
}

uint64_t sub_190B77638()
{
  return MEMORY[0x1F41847A0]();
}

uint64_t sub_190B77648()
{
  return MEMORY[0x1F41847C0]();
}

uint64_t sub_190B77658()
{
  return MEMORY[0x1F4184820]();
}

uint64_t sub_190B77668()
{
  return MEMORY[0x1F40E6C68]();
}

uint64_t sub_190B77678()
{
  return MEMORY[0x1F40E6C80]();
}

uint64_t sub_190B77688()
{
  return MEMORY[0x1F40E6D68]();
}

uint64_t sub_190B77698()
{
  return MEMORY[0x1F4184978]();
}

uint64_t sub_190B776A8()
{
  return MEMORY[0x1F4184B20]();
}

uint64_t sub_190B776B8()
{
  return MEMORY[0x1F4184B30]();
}

uint64_t sub_190B776C8()
{
  return MEMORY[0x1F4184B60]();
}

uint64_t sub_190B776D8()
{
  return MEMORY[0x1F4184B90]();
}

uint64_t sub_190B776E8()
{
  return MEMORY[0x1F4184BA8]();
}

uint64_t sub_190B776F8()
{
  return MEMORY[0x1F4184BC0]();
}

uint64_t sub_190B77708()
{
  return MEMORY[0x1F4184BC8]();
}

uint64_t sub_190B77718()
{
  return MEMORY[0x1F4184C18]();
}

uint64_t sub_190B77728()
{
  return MEMORY[0x1F4184C20]();
}

uint64_t sub_190B77738()
{
  return MEMORY[0x1F4184C38]();
}

uint64_t sub_190B77748()
{
  return MEMORY[0x1F4184C90]();
}

uint64_t sub_190B77758()
{
  return MEMORY[0x1F4184C98]();
}

uint64_t sub_190B77768()
{
  return MEMORY[0x1F4184CA0]();
}

uint64_t sub_190B77778()
{
  return MEMORY[0x1F4184CA8]();
}

uint64_t sub_190B77788()
{
  return MEMORY[0x1F4184CE8]();
}

uint64_t sub_190B77798()
{
  return MEMORY[0x1F4184CF0]();
}

uint64_t sub_190B777A8()
{
  return MEMORY[0x1F4184D10]();
}

uint64_t sub_190B777B8()
{
  return MEMORY[0x1F4184D70]();
}

uint64_t sub_190B777C8()
{
  return MEMORY[0x1F4184D80]();
}

uint64_t sub_190B777D8()
{
  return MEMORY[0x1F4184D88]();
}

uint64_t sub_190B777E8()
{
  return MEMORY[0x1F4184E68]();
}

uint64_t sub_190B777F8()
{
  return MEMORY[0x1F4184EA8]();
}

uint64_t sub_190B77808()
{
  return MEMORY[0x1F4184EC8]();
}

uint64_t sub_190B77818()
{
  return MEMORY[0x1F4184ED8]();
}

uint64_t sub_190B77828()
{
  return MEMORY[0x1F4184EE8]();
}

uint64_t sub_190B77838()
{
  return MEMORY[0x1F4184EF0]();
}

uint64_t sub_190B77848()
{
  return MEMORY[0x1F4184F28]();
}

uint64_t sub_190B77858()
{
  return MEMORY[0x1F4184F30]();
}

uint64_t sub_190B77868()
{
  return MEMORY[0x1F4184F48]();
}

uint64_t sub_190B77878()
{
  return MEMORY[0x1F4184F68]();
}

uint64_t sub_190B77888()
{
  return MEMORY[0x1F4184F70]();
}

uint64_t sub_190B77898()
{
  return MEMORY[0x1F4185298]();
}

uint64_t sub_190B778A8()
{
  return MEMORY[0x1F4185350]();
}

uint64_t sub_190B778B8()
{
  return MEMORY[0x1F4185358]();
}

uint64_t sub_190B778C8()
{
  return MEMORY[0x1F4185368]();
}

uint64_t sub_190B778D8()
{
  return MEMORY[0x1F4185370]();
}

uint64_t sub_190B778E8()
{
  return MEMORY[0x1F4185380]();
}

uint64_t sub_190B778F8()
{
  return MEMORY[0x1F4185398]();
}

uint64_t sub_190B77908()
{
  return MEMORY[0x1F41854C8]();
}

uint64_t sub_190B77918()
{
  return MEMORY[0x1F4185568]();
}

uint64_t sub_190B77928()
{
  return MEMORY[0x1F4185570]();
}

uint64_t sub_190B77938()
{
  return MEMORY[0x1F4185598]();
}

uint64_t sub_190B77948()
{
  return MEMORY[0x1F4185730]();
}

uint64_t sub_190B77958()
{
  return MEMORY[0x1F4185740]();
}

uint64_t sub_190B77968()
{
  return MEMORY[0x1F4185758]();
}

uint64_t sub_190B77998()
{
  return MEMORY[0x1F4185A40]();
}

uint64_t sub_190B779A8()
{
  return MEMORY[0x1F4185B98]();
}

uint64_t sub_190B779C8()
{
  return MEMORY[0x1F4185DD8]();
}

uint64_t sub_190B779D8()
{
  return MEMORY[0x1F4185DE0]();
}

uint64_t sub_190B77A08()
{
  return MEMORY[0x1F40E6E30]();
}

uint64_t sub_190B77A18()
{
  return MEMORY[0x1F4185E00]();
}

uint64_t sub_190B77A28()
{
  return MEMORY[0x1F4185E08]();
}

uint64_t sub_190B77A38()
{
  return MEMORY[0x1F4185E10]();
}

uint64_t sub_190B77A48()
{
  return MEMORY[0x1F4185E18]();
}

uint64_t sub_190B77A58()
{
  return MEMORY[0x1F4185EB0]();
}

uint64_t sub_190B77A68()
{
  return MEMORY[0x1F4185EF8]();
}

uint64_t sub_190B77A78()
{
  return MEMORY[0x1F4185FC8]();
}

uint64_t ABAccountCopyIdentifier()
{
  return MEMORY[0x1F4106A78]();
}

uint64_t ABAccountCopyInternalUUID()
{
  return MEMORY[0x1F4106A80]();
}

uint64_t ABAccountCreate()
{
  return MEMORY[0x1F4106A88]();
}

uint64_t ABAccountSetIdentifier()
{
  return MEMORY[0x1F4106A90]();
}

uint64_t ABAccountSetInternalUUID()
{
  return MEMORY[0x1F4106A98]();
}

uint64_t ABAddLimitedAccessForBundle()
{
  return MEMORY[0x1F4106AA8]();
}

uint64_t ABAddLimitedAccessIdentifiersForBundle()
{
  return MEMORY[0x1F4106AB0]();
}

BOOL ABAddressBookAddRecord(ABAddressBookRef addressBook, ABRecordRef record, CFErrorRef *error)
{
  return MEMORY[0x1F4106AB8](addressBook, record, error);
}

uint64_t ABAddressBookCopyAccountIdentifierForSource()
{
  return MEMORY[0x1F4106AD0]();
}

uint64_t ABAddressBookCopyAccountWithIdentifier()
{
  return MEMORY[0x1F4106AD8]();
}

uint64_t ABAddressBookCopyAccountsWithUUIDs()
{
  return MEMORY[0x1F4106AE0]();
}

uint64_t ABAddressBookCopyAllLabelsForProperty()
{
  return MEMORY[0x1F4106AF0]();
}

uint64_t ABAddressBookCopyAllPeopleForBufferPredicate()
{
  return MEMORY[0x1F4106AF8]();
}

uint64_t ABAddressBookCopyArrayOfAllAccounts()
{
  return MEMORY[0x1F4106B00]();
}

CFArrayRef ABAddressBookCopyArrayOfAllGroups(ABAddressBookRef addressBook)
{
  return (CFArrayRef)MEMORY[0x1F4106B08](addressBook);
}

CFArrayRef ABAddressBookCopyArrayOfAllGroupsInSource(ABAddressBookRef addressBook, ABRecordRef source)
{
  return (CFArrayRef)MEMORY[0x1F4106B10](addressBook, source);
}

CFArrayRef ABAddressBookCopyArrayOfAllPeopleInSource(ABAddressBookRef addressBook, ABRecordRef source)
{
  return (CFArrayRef)MEMORY[0x1F4106B18](addressBook, source);
}

CFArrayRef ABAddressBookCopyArrayOfAllPeopleInSourceWithSortOrdering(ABAddressBookRef addressBook, ABRecordRef source, ABPersonSortOrdering sortOrdering)
{
  return (CFArrayRef)MEMORY[0x1F4106B20](addressBook, source, *(void *)&sortOrdering);
}

uint64_t ABAddressBookCopyArrayOfAllPeopleMatching()
{
  return MEMORY[0x1F4106B28]();
}

CFArrayRef ABAddressBookCopyArrayOfAllSources(ABAddressBookRef addressBook)
{
  return (CFArrayRef)MEMORY[0x1F4106B30](addressBook);
}

uint64_t ABAddressBookCopyArrayOfAllSourcesInAccount()
{
  return MEMORY[0x1F4106B38]();
}

uint64_t ABAddressBookCopyArrayOfAllSourcesIncludingDisabledSources()
{
  return MEMORY[0x1F4106B40]();
}

uint64_t ABAddressBookCopyArrayOfPreferredNamePeopleForGroupsAndSourcesWithSortOrdering()
{
  return MEMORY[0x1F4106B50]();
}

ABRecordRef ABAddressBookCopyDefaultSource(ABAddressBookRef addressBook)
{
  return (ABRecordRef)MEMORY[0x1F4106B70](addressBook);
}

uint64_t ABAddressBookCopyGroupsWithUUIDs()
{
  return MEMORY[0x1F4106B78]();
}

uint64_t ABAddressBookCopyLocalSource()
{
  return MEMORY[0x1F4106B80]();
}

uint64_t ABAddressBookCopyMe()
{
  return MEMORY[0x1F4106B90]();
}

uint64_t ABAddressBookCopyPeopleWithLinkIdentifiers()
{
  return MEMORY[0x1F4106B98]();
}

CFArrayRef ABAddressBookCopyPeopleWithName(ABAddressBookRef addressBook, CFStringRef name)
{
  return (CFArrayRef)MEMORY[0x1F4106BA0](addressBook, name);
}

uint64_t ABAddressBookCopyPeopleWithUUIDs()
{
  return MEMORY[0x1F4106BA8]();
}

uint64_t ABAddressBookCopyPersonMatchingInternalUUID()
{
  return MEMORY[0x1F4106BB0]();
}

uint64_t ABAddressBookCopyPersonMatchingMapData()
{
  return MEMORY[0x1F4106BB8]();
}

uint64_t ABAddressBookCopySourceWithAccountAndExternalIdentifiers()
{
  return MEMORY[0x1F4106BC0]();
}

uint64_t ABAddressBookCopySourceWithProviderIdentifier()
{
  return MEMORY[0x1F4106BC8]();
}

uint64_t ABAddressBookCopySourcesWithUUIDs()
{
  return MEMORY[0x1F4106BD0]();
}

uint64_t ABAddressBookCopyUniqueIdentifier()
{
  return MEMORY[0x1F4106BD8]();
}

uint64_t ABAddressBookCopyValue()
{
  return MEMORY[0x1F4106BE0]();
}

uint64_t ABAddressBookCreateWithDatabaseDirectory()
{
  return MEMORY[0x1F4106BE8]();
}

ABAddressBookRef ABAddressBookCreateWithOptions(CFDictionaryRef options, CFErrorRef *error)
{
  return (ABAddressBookRef)MEMORY[0x1F4106BF0](options, error);
}

uint64_t ABAddressBookFindPersonMatchingEmailAddress()
{
  return MEMORY[0x1F4106C08]();
}

uint64_t ABAddressBookFindPersonMatchingMatchingDictionary()
{
  return MEMORY[0x1F4106C10]();
}

uint64_t ABAddressBookFindPersonMatchingMultiValueUUID()
{
  return MEMORY[0x1F4106C18]();
}

uint64_t ABAddressBookFindPersonMatchingUserActivityUserInfo()
{
  return MEMORY[0x1F4106C20]();
}

uint64_t ABAddressBookGetAccountForSource()
{
  return MEMORY[0x1F4106C28]();
}

ABAuthorizationStatus ABAddressBookGetAuthorizationStatus(void)
{
  return MEMORY[0x1F4106C30]();
}

uint64_t ABAddressBookGetDefaultSourceForAccount()
{
  return MEMORY[0x1F4106C40]();
}

CFIndex ABAddressBookGetGroupCount(ABAddressBookRef addressBook)
{
  return MEMORY[0x1F4106C48](addressBook);
}

ABRecordRef ABAddressBookGetGroupWithRecordID(ABAddressBookRef addressBook, ABRecordID recordID)
{
  return (ABRecordRef)MEMORY[0x1F4106C50](addressBook, *(void *)&recordID);
}

CFIndex ABAddressBookGetPersonCount(ABAddressBookRef addressBook)
{
  return MEMORY[0x1F4106C58](addressBook);
}

ABRecordRef ABAddressBookGetPersonWithRecordID(ABAddressBookRef addressBook, ABRecordID recordID)
{
  return (ABRecordRef)MEMORY[0x1F4106C60](addressBook, *(void *)&recordID);
}

uint64_t ABAddressBookGetPreferredNamePeopleCountForManagedConfiguration()
{
  return MEMORY[0x1F4106C68]();
}

uint64_t ABAddressBookGetSearchCollator()
{
  return MEMORY[0x1F4106C70]();
}

uint64_t ABAddressBookGetSequenceNumber()
{
  return MEMORY[0x1F4106C78]();
}

uint64_t ABAddressBookGetSourceCountIncludingDisabled()
{
  return MEMORY[0x1F4106C80]();
}

ABRecordRef ABAddressBookGetSourceWithRecordID(ABAddressBookRef addressBook, ABRecordID sourceID)
{
  return (ABRecordRef)MEMORY[0x1F4106C88](addressBook, *(void *)&sourceID);
}

uint64_t ABAddressBookGetWordTokenizer()
{
  return MEMORY[0x1F4106C90]();
}

uint64_t ABAddressBookHasMeCardChanges()
{
  return MEMORY[0x1F4106C98]();
}

uint64_t ABAddressBookIndexSetOfAllowedSourceIdentifiersIncludingDisabledSources()
{
  return MEMORY[0x1F4106CA0]();
}

uint64_t ABAddressBookInvalidateCaches()
{
  return MEMORY[0x1F4106CA8]();
}

uint64_t ABAddressBookMoveAllRecordsInSourceToSource()
{
  return MEMORY[0x1F4106CB0]();
}

uint64_t ABAddressBookPrimePersonContextForIdentifier()
{
  return MEMORY[0x1F4106CB8]();
}

BOOL ABAddressBookRemoveRecord(ABAddressBookRef addressBook, ABRecordRef record, CFErrorRef *error)
{
  return MEMORY[0x1F4106CE0](addressBook, record, error);
}

uint64_t ABAddressBookResetSortDataInProcessIfNeeded()
{
  return MEMORY[0x1F4106CE8]();
}

BOOL ABAddressBookSave(ABAddressBookRef addressBook, CFErrorRef *error)
{
  return MEMORY[0x1F4106CF8](addressBook, error);
}

uint64_t ABAddressBookSetAccountForSource()
{
  return MEMORY[0x1F4106D00]();
}

uint64_t ABAddressBookSetBestMeIfNeeded()
{
  return MEMORY[0x1F4106D08]();
}

uint64_t ABAddressBookSetDefaultSource()
{
  return MEMORY[0x1F4106D10]();
}

uint64_t ABAddressBookSetDefaultSourceForAccount()
{
  return MEMORY[0x1F4106D18]();
}

uint64_t ABAddressBookSetIgnoresContactProviderRestrictions()
{
  return MEMORY[0x1F4106D20]();
}

uint64_t ABAddressBookSetIgnoresGuardianRestrictions()
{
  return MEMORY[0x1F4106D28]();
}

uint64_t ABAddressBookSetMe()
{
  return MEMORY[0x1F4106D38]();
}

uint64_t ABAddressBookSetSaveTransactionIdentifier()
{
  return MEMORY[0x1F4106D40]();
}

uint64_t ABAddressBookSetSuppressChangeNotifications()
{
  return MEMORY[0x1F4106D48]();
}

uint64_t ABAddressBookSetUsedByContacts()
{
  return MEMORY[0x1F4106D50]();
}

uint64_t ABAddressBookShouldAnalyzeDatabase()
{
  return MEMORY[0x1F4106D60]();
}

uint64_t ABApplyLimitedAccessSyncEvents()
{
  return MEMORY[0x1F4106D78]();
}

uint64_t ABCFTSIsEnabled()
{
  return MEMORY[0x1F4106D80]();
}

uint64_t ABCPersonPropertySupportsLazyLoading()
{
  return MEMORY[0x1F4106D98]();
}

uint64_t ABChangeHistoryClearChangesUpToSequenceNumberForClient()
{
  return MEMORY[0x1F4106DA0]();
}

uint64_t ABChangeHistoryClearEntityChangeTableRowIDsForClient()
{
  return MEMORY[0x1F4106DA8]();
}

uint64_t ABChangeHistoryGetChanges()
{
  return MEMORY[0x1F4106DB8]();
}

uint64_t ABChangeHistoryGetLatestConsumedSequenceNumberForClient()
{
  return MEMORY[0x1F4106DC0]();
}

uint64_t ABChangeHistoryHasClientWithIdentifier()
{
  return MEMORY[0x1F4106DC8]();
}

uint64_t ABChangeHistoryRegisterClientForSource()
{
  return MEMORY[0x1F4106DD8]();
}

uint64_t ABChangeHistorySetAddressBookClientIdentifier()
{
  return MEMORY[0x1F4106DE0]();
}

uint64_t ABChangeHistoryUnregisterClientForSource()
{
  return MEMORY[0x1F4106DE8]();
}

uint64_t ABCopyArrayOfPreferredNamePeopleAtOffsetForManagedConfiguration()
{
  return MEMORY[0x1F4106DF0]();
}

uint64_t ABCopyArrayOfSectionListOffsetsForManagedConfiguration()
{
  return MEMORY[0x1F4106DF8]();
}

uint64_t ABDeviceIsBeforeFirstUnlockWithDataProtected()
{
  return MEMORY[0x1F4106E08]();
}

uint64_t ABDropAllLimitedAccessRows()
{
  return MEMORY[0x1F4106E10]();
}

uint64_t ABGetLimitedAccessLastSyncSequenceNumber()
{
  return MEMORY[0x1F4106E18]();
}

uint64_t ABGetProcessDistributedNotificationIdentifier()
{
  return MEMORY[0x1F4106E20]();
}

uint64_t ABGetWatchLimitedAccessSyncDataStartingAtSequenceNumber()
{
  return MEMORY[0x1F4106E28]();
}

BOOL ABGroupAddMember(ABRecordRef group, ABRecordRef person, CFErrorRef *error)
{
  return MEMORY[0x1F4106E30](group, person, error);
}

uint64_t ABGroupCopyArrayOfAllGroupsWithMembersOfTypeWithUUIDs()
{
  return MEMORY[0x1F4106E40]();
}

CFArrayRef ABGroupCopyArrayOfAllMembersWithSortOrdering(ABRecordRef group, ABPersonSortOrdering sortOrdering)
{
  return (CFArrayRef)MEMORY[0x1F4106E48](group, *(void *)&sortOrdering);
}

CFArrayRef ABGroupCopyArrayOfAllSubgroups(ABGroupRef group)
{
  return (CFArrayRef)MEMORY[0x1F4106E50](group);
}

ABRecordRef ABGroupCopySource(ABRecordRef group)
{
  return (ABRecordRef)MEMORY[0x1F4106E58](group);
}

ABRecordRef ABGroupCreate(void)
{
  return (ABRecordRef)MEMORY[0x1F4106E60]();
}

ABRecordRef ABGroupCreateInSource(ABRecordRef source)
{
  return (ABRecordRef)MEMORY[0x1F4106E68](source);
}

BOOL ABGroupRemoveMember(ABRecordRef group, ABRecordRef member, CFErrorRef *error)
{
  return MEMORY[0x1F4106E70](group, member, error);
}

uint64_t ABInitialize()
{
  return MEMORY[0x1F4106E88]();
}

uint64_t ABLimitedAccessContactIdentifiersForBundle()
{
  return MEMORY[0x1F4106E90]();
}

uint64_t ABLimitedAccessContactsCountForBundle()
{
  return MEMORY[0x1F4106E98]();
}

uint64_t ABLimitedAccessUpdateTable()
{
  return MEMORY[0x1F4106EA0]();
}

uint64_t ABLogDisplayInternalAlert()
{
  return MEMORY[0x1F4106EA8]();
}

uint64_t ABLogErrorPtr()
{
  return MEMORY[0x1F4106EB0]();
}

uint64_t ABLogSimulateCrashReport()
{
  return MEMORY[0x1F4106EB8]();
}

uint64_t ABMultiValueBatchLoad()
{
  return MEMORY[0x1F4106EC8]();
}

CFStringRef ABMultiValueCopyLabelAtIndex(ABMultiValueRef multiValue, CFIndex index)
{
  return (CFStringRef)MEMORY[0x1F4106ED8](multiValue, index);
}

uint64_t ABMultiValueCopyUUIDAtIndex()
{
  return MEMORY[0x1F4106EE0]();
}

CFTypeRef ABMultiValueCopyValueAtIndex(ABMultiValueRef multiValue, CFIndex index)
{
  return (CFTypeRef)MEMORY[0x1F4106EE8](multiValue, index);
}

ABMutableMultiValueRef ABMultiValueCreateMutable(ABPropertyType type)
{
  return (ABMutableMultiValueRef)MEMORY[0x1F4106EF0](*(void *)&type);
}

ABMutableMultiValueRef ABMultiValueCreateMutableCopy(ABMultiValueRef multiValue)
{
  return (ABMutableMultiValueRef)MEMORY[0x1F4106EF8](multiValue);
}

CFIndex ABMultiValueGetCount(ABMultiValueRef multiValue)
{
  return MEMORY[0x1F4106F00](multiValue);
}

ABMultiValueIdentifier ABMultiValueGetIdentifierAtIndex(ABMultiValueRef multiValue, CFIndex index)
{
  return MEMORY[0x1F4106F18](multiValue, index);
}

uint64_t ABMultiValueInsertValueAndLabelAndUUIDAtIndex()
{
  return MEMORY[0x1F4106F28]();
}

BOOL ABMultiValueInsertValueAndLabelAtIndex(ABMutableMultiValueRef multiValue, CFTypeRef value, CFStringRef label, CFIndex index, ABMultiValueIdentifier *outIdentifier)
{
  return MEMORY[0x1F4106F30](multiValue, value, label, index, outIdentifier);
}

BOOL ABMultiValueRemoveValueAndLabelAtIndex(ABMutableMultiValueRef multiValue, CFIndex index)
{
  return MEMORY[0x1F4106F38](multiValue, index);
}

BOOL ABMultiValueReplaceLabelAtIndex(ABMutableMultiValueRef multiValue, CFStringRef label, CFIndex index)
{
  return MEMORY[0x1F4106F40](multiValue, label, index);
}

BOOL ABMultiValueReplaceValueAtIndex(ABMutableMultiValueRef multiValue, CFTypeRef value, CFIndex index)
{
  return MEMORY[0x1F4106F48](multiValue, value, index);
}

BOOL ABMultiValueSetPrimaryIdentifier(ABMutableMultiValueRef multiValue, CFStringRef identifier)
{
  return MEMORY[0x1F4106F50](multiValue, identifier);
}

uint64_t ABOSLogImageMetadata()
{
  return MEMORY[0x1F4106F58]();
}

uint64_t ABPeoplePickerPrefs()
{
  return MEMORY[0x1F4106F60]();
}

CFComparisonResult ABPersonComparePeopleByName(ABRecordRef person1, ABRecordRef person2, ABPersonSortOrdering ordering)
{
  return MEMORY[0x1F4106F68](person1, person2, *(void *)&ordering);
}

CFArrayRef ABPersonCopyArrayOfAllLinkedPeople(ABRecordRef person)
{
  return (CFArrayRef)MEMORY[0x1F4106F70](person);
}

uint64_t ABPersonCopyImageDataAndCropRect()
{
  return MEMORY[0x1F4106F80]();
}

CFDataRef ABPersonCopyImageDataWithFormat(ABRecordRef person, ABPersonImageFormat format)
{
  return (CFDataRef)MEMORY[0x1F4106F88](person, *(void *)&format);
}

uint64_t ABPersonCopyLinkUUID()
{
  return MEMORY[0x1F4106F90]();
}

uint64_t ABPersonCopyPreferredLinkedPersonForImage()
{
  return MEMORY[0x1F4106F98]();
}

uint64_t ABPersonCopySoundIdentifierForMultiValueIdentifier()
{
  return MEMORY[0x1F4106FB0]();
}

ABRecordRef ABPersonCopySource(ABRecordRef person)
{
  return (ABRecordRef)MEMORY[0x1F4106FB8](person);
}

ABRecordRef ABPersonCreate(void)
{
  return (ABRecordRef)MEMORY[0x1F4106FC0]();
}

uint64_t ABPersonCreateInSourceAndReturnError()
{
  return MEMORY[0x1F4106FC8]();
}

uint64_t ABPersonCreateUnifiedPerson()
{
  return MEMORY[0x1F4106FD0]();
}

ABPersonCompositeNameFormat ABPersonGetCompositeNameFormatForRecord(ABRecordRef record)
{
  return MEMORY[0x1F4106FD8](record);
}

uint64_t ABPersonGetMatchingDictionary()
{
  return MEMORY[0x1F4106FE8]();
}

ABPersonSortOrdering ABPersonGetSortOrdering(void)
{
  return MEMORY[0x1F4107008]();
}

ABPropertyType ABPersonGetTypeOfProperty(ABPropertyID property)
{
  return MEMORY[0x1F4107010](*(void *)&property);
}

uint64_t ABPersonGetUserActivityUserInfo()
{
  return MEMORY[0x1F4107018]();
}

BOOL ABPersonHasImageData(ABRecordRef person)
{
  return MEMORY[0x1F4107020](person);
}

uint64_t ABPersonLinkPerson()
{
  return MEMORY[0x1F4107028]();
}

BOOL ABPersonRemoveImageData(ABRecordRef person, CFErrorRef *error)
{
  return MEMORY[0x1F4107030](person, error);
}

BOOL ABPersonSetImageData(ABRecordRef person, CFDataRef imageData, CFErrorRef *error)
{
  return MEMORY[0x1F4107040](person, imageData, error);
}

uint64_t ABPersonSetImageDataAndCropRect()
{
  return MEMORY[0x1F4107048]();
}

uint64_t ABPersonSetImageDataDerivedFromFormatAndReturnError()
{
  return MEMORY[0x1F4107050]();
}

uint64_t ABPersonSetImageDataWithCropRect()
{
  return MEMORY[0x1F4107058]();
}

uint64_t ABPersonSetLinkUUID()
{
  return MEMORY[0x1F4107060]();
}

uint64_t ABPersonSetPreferredLinkedPersonForImage()
{
  return MEMORY[0x1F4107068]();
}

uint64_t ABPersonSetPreferredLinkedPersonForName()
{
  return MEMORY[0x1F4107070]();
}

uint64_t ABPersonSetSoundIdentifierForMultiValueIdentifier()
{
  return MEMORY[0x1F4107090]();
}

uint64_t ABPersonUnlink()
{
  return MEMORY[0x1F4107098]();
}

uint64_t ABPolicyCopyPreferredLabelsForProperty()
{
  return MEMORY[0x1F41070A0]();
}

uint64_t ABPolicyCopySupportedLabelsForProperty()
{
  return MEMORY[0x1F41070A8]();
}

uint64_t ABPolicyCreateWithCoder()
{
  return MEMORY[0x1F41070B0]();
}

uint64_t ABPolicyEncodeWithCoder()
{
  return MEMORY[0x1F41070B8]();
}

uint64_t ABPolicyMaximumNumberOfValuesForProperty()
{
  return MEMORY[0x1F41070C8]();
}

uint64_t ABPolicyShouldSetValue()
{
  return MEMORY[0x1F41070E0]();
}

uint64_t ABPopulateSyncTableForLimitedAccessAboveSequenceNumber()
{
  return MEMORY[0x1F41070E8]();
}

uint64_t ABPurgeLimitedAccessRecordsForBundle()
{
  return MEMORY[0x1F41070F8]();
}

uint64_t ABRecordCopyOriginalValue()
{
  return MEMORY[0x1F4107108]();
}

CFTypeRef ABRecordCopyValue(ABRecordRef record, ABPropertyID property)
{
  return (CFTypeRef)MEMORY[0x1F4107110](record, *(void *)&property);
}

uint64_t ABRecordGetAddressBook()
{
  return MEMORY[0x1F4107118]();
}

uint64_t ABRecordGetIntValue()
{
  return MEMORY[0x1F4107120]();
}

ABRecordID ABRecordGetRecordID(ABRecordRef record)
{
  return MEMORY[0x1F4107128](record);
}

uint64_t ABRecordSetIntValue()
{
  return MEMORY[0x1F4107130]();
}

BOOL ABRecordSetValue(ABRecordRef record, ABPropertyID property, CFTypeRef value, CFErrorRef *error)
{
  return MEMORY[0x1F4107138](record, *(void *)&property, value, error);
}

uint64_t ABRemoveContactIdentifiersFromLimitedAccessForAllBundles()
{
  return MEMORY[0x1F4107140]();
}

uint64_t ABRemoveLimitedAccessForBundle()
{
  return MEMORY[0x1F4107148]();
}

uint64_t ABRemoveLimitedAccessIdentifiersForBundle()
{
  return MEMORY[0x1F4107150]();
}

uint64_t ABSourceCreate()
{
  return MEMORY[0x1F4107168]();
}

uint64_t ABSourceGetPolicy()
{
  return MEMORY[0x1F4107170]();
}

uint64_t ABSourceIsContentReadonly()
{
  return MEMORY[0x1F4107178]();
}

uint64_t ABSourceIsReadonly()
{
  return MEMORY[0x1F4107188]();
}

uint64_t ABSourceIsRemote()
{
  return MEMORY[0x1F4107190]();
}

uint64_t ABSourceSetShouldIgnoreCapabilitiesRestrictions()
{
  return MEMORY[0x1F41071B0]();
}

uint64_t ABTokenListCreate()
{
  return MEMORY[0x1F41071B8]();
}

uint64_t ABTokenListGetCount()
{
  return MEMORY[0x1F41071C0]();
}

uint64_t ABTokenListGetTokenAtIndex()
{
  return MEMORY[0x1F41071C8]();
}

uint64_t ABTokenListGetTokenRangeAtIndex()
{
  return MEMORY[0x1F41071D0]();
}

uint64_t ABTokenListPopulateFromString()
{
  return MEMORY[0x1F41071D8]();
}

uint64_t AnalyticsSendEventLazy()
{
  return MEMORY[0x1F41138B8]();
}

void CFArrayAppendValue(CFMutableArrayRef theArray, const void *value)
{
}

CFArrayRef CFArrayCreate(CFAllocatorRef allocator, const void **values, CFIndex numValues, const CFArrayCallBacks *callBacks)
{
  return (CFArrayRef)MEMORY[0x1F40D7170](allocator, values, numValues, callBacks);
}

CFMutableArrayRef CFArrayCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFArrayCallBacks *callBacks)
{
  return (CFMutableArrayRef)MEMORY[0x1F40D7190](allocator, capacity, callBacks);
}

CFMutableArrayRef CFArrayCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFArrayRef theArray)
{
  return (CFMutableArrayRef)MEMORY[0x1F40D7198](allocator, capacity, theArray);
}

CFIndex CFArrayGetCount(CFArrayRef theArray)
{
  return MEMORY[0x1F40D71B8](theArray);
}

const void *__cdecl CFArrayGetValueAtIndex(CFArrayRef theArray, CFIndex idx)
{
  return (const void *)MEMORY[0x1F40D71F0](theArray, idx);
}

CFTypeRef CFAutorelease(CFTypeRef arg)
{
  return (CFTypeRef)MEMORY[0x1F40D72D8](arg);
}

Boolean CFBooleanGetValue(CFBooleanRef BOOLean)
{
  return MEMORY[0x1F40D7430](BOOLean);
}

CFTypeID CFDataGetTypeID(void)
{
  return MEMORY[0x1F40D7860]();
}

CFComparisonResult CFDateCompare(CFDateRef theDate, CFDateRef otherDate, void *context)
{
  return MEMORY[0x1F40D7888](theDate, otherDate, context);
}

Boolean CFDictionaryContainsKey(CFDictionaryRef theDict, const void *key)
{
  return MEMORY[0x1F40D7968](theDict, key);
}

CFDictionaryRef CFDictionaryCreateCopy(CFAllocatorRef allocator, CFDictionaryRef theDict)
{
  return (CFDictionaryRef)MEMORY[0x1F40D7990](allocator, theDict);
}

CFMutableDictionaryRef CFDictionaryCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks)
{
  return (CFMutableDictionaryRef)MEMORY[0x1F40D7998](allocator, capacity, keyCallBacks, valueCallBacks);
}

const void *__cdecl CFDictionaryGetValue(CFDictionaryRef theDict, const void *key)
{
  return (const void *)MEMORY[0x1F40D7A10](theDict, key);
}

void CFDictionarySetValue(CFMutableDictionaryRef theDict, const void *key, const void *value)
{
}

Boolean CFEqual(CFTypeRef cf1, CFTypeRef cf2)
{
  return MEMORY[0x1F40D7A68](cf1, cf2);
}

CFDictionaryRef CFErrorCopyUserInfo(CFErrorRef err)
{
  return (CFDictionaryRef)MEMORY[0x1F40D7A90](err);
}

CFIndex CFErrorGetCode(CFErrorRef err)
{
  return MEMORY[0x1F40D7AA8](err);
}

CFErrorDomain CFErrorGetDomain(CFErrorRef err)
{
  return (CFErrorDomain)MEMORY[0x1F40D7AB8](err);
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return MEMORY[0x1F40D7B80](cf);
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return (CFNotificationCenterRef)MEMORY[0x1F40D7D08]();
}

CFNotificationCenterRef CFNotificationCenterGetDistributedCenter(void)
{
  return (CFNotificationCenterRef)MEMORY[0x1F40D7D18]();
}

void CFNotificationCenterPostNotification(CFNotificationCenterRef center, CFNotificationName name, const void *object, CFDictionaryRef userInfo, Boolean deliverImmediately)
{
}

void CFNotificationCenterRemoveObserver(CFNotificationCenterRef center, const void *observer, CFNotificationName name, const void *object)
{
}

CFNumberRef CFNumberCreate(CFAllocatorRef allocator, CFNumberType theType, const void *valuePtr)
{
  return (CFNumberRef)MEMORY[0x1F40D7D80](allocator, theType, valuePtr);
}

CFTypeID CFNumberGetTypeID(void)
{
  return MEMORY[0x1F40D7E10]();
}

Boolean CFNumberGetValue(CFNumberRef number, CFNumberType theType, void *valuePtr)
{
  return MEMORY[0x1F40D7E20](number, theType, valuePtr);
}

uint64_t CFPhoneNumberCopyISOCountryCode()
{
  return MEMORY[0x1F4109238]();
}

uint64_t CFPhoneNumberCreateString()
{
  return MEMORY[0x1F4109248]();
}

Boolean CFPreferencesAppSynchronize(CFStringRef applicationID)
{
  return MEMORY[0x1F40D7E90](applicationID);
}

CFPropertyListRef CFPreferencesCopyAppValue(CFStringRef key, CFStringRef applicationID)
{
  return (CFPropertyListRef)MEMORY[0x1F40D7EA0](key, applicationID);
}

CFPropertyListRef CFPreferencesCopyValue(CFStringRef key, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  return (CFPropertyListRef)MEMORY[0x1F40D7ED0](key, applicationID, userName, hostName);
}

Boolean CFPreferencesGetAppBooleanValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return MEMORY[0x1F40D7EE0](key, applicationID, keyExistsAndHasValidFormat);
}

CFIndex CFPreferencesGetAppIntegerValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return MEMORY[0x1F40D7EE8](key, applicationID, keyExistsAndHasValidFormat);
}

void CFPreferencesSetAppValue(CFStringRef key, CFPropertyListRef value, CFStringRef applicationID)
{
}

void CFRelease(CFTypeRef cf)
{
}

CFTypeRef CFRetain(CFTypeRef cf)
{
  return (CFTypeRef)MEMORY[0x1F40D8048](cf);
}

void CFSetAddValue(CFMutableSetRef theSet, const void *value)
{
}

CFMutableSetRef CFSetCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFSetCallBacks *callBacks)
{
  return (CFMutableSetRef)MEMORY[0x1F40D8210](allocator, capacity, callBacks);
}

CFRange CFStringFind(CFStringRef theString, CFStringRef stringToFind, CFStringCompareFlags compareOptions)
{
  CFIndex v3 = MEMORY[0x1F40D84C8](theString, stringToFind, compareOptions);
  result.length = v4;
  result.location = v3;
  return result;
}

CFIndex CFStringGetLength(CFStringRef theString)
{
  return MEMORY[0x1F40D8578](theString);
}

CFTypeID CFStringGetTypeID(void)
{
  return MEMORY[0x1F40D85F0]();
}

CFStringTokenizerRef CFStringTokenizerCreate(CFAllocatorRef alloc, CFStringRef string, CFRange range, CFOptionFlags options, CFLocaleRef locale)
{
  return (CFStringTokenizerRef)MEMORY[0x1F40D8698](alloc, string, range.location, range.length, options, locale);
}

SInt32 CFUserNotificationDisplayAlert(CFTimeInterval timeout, CFOptionFlags flags, CFURLRef iconURL, CFURLRef soundURL, CFURLRef localizationURL, CFStringRef alertHeader, CFStringRef alertMessage, CFStringRef defaultButtonTitle, CFStringRef alternateButtonTitle, CFStringRef otherButtonTitle, CFOptionFlags *responseFlags)
{
  return MEMORY[0x1F40D8A48](flags, iconURL, soundURL, localizationURL, alertHeader, alertMessage, defaultButtonTitle, alternateButtonTitle, timeout);
}

CGContextRef CGBitmapContextCreate(void *data, size_t width, size_t height, size_t bitsPerComponent, size_t bytesPerRow, CGColorSpaceRef space, uint32_t bitmapInfo)
{
  return (CGContextRef)MEMORY[0x1F40D9808](data, width, height, bitsPerComponent, bytesPerRow, space, *(void *)&bitmapInfo);
}

CGBitmapInfo CGBitmapContextGetBitmapInfo(CGContextRef context)
{
  return MEMORY[0x1F40D9840](context);
}

size_t CGBitmapContextGetBitsPerComponent(CGContextRef context)
{
  return MEMORY[0x1F40D9848](context);
}

size_t CGBitmapContextGetBitsPerPixel(CGContextRef context)
{
  return MEMORY[0x1F40D9850](context);
}

size_t CGBitmapContextGetBytesPerRow(CGContextRef context)
{
  return MEMORY[0x1F40D9858](context);
}

CGColorSpaceRef CGBitmapContextGetColorSpace(CGContextRef context)
{
  return (CGColorSpaceRef)MEMORY[0x1F40D9860](context);
}

size_t CGBitmapContextGetHeight(CGContextRef context)
{
  return MEMORY[0x1F40D9870](context);
}

size_t CGBitmapContextGetWidth(CGContextRef context)
{
  return MEMORY[0x1F40D9878](context);
}

uint64_t CGBitmapGetAlignedBytesPerRow()
{
  return MEMORY[0x1F40D9890]();
}

CFPropertyListRef CGColorSpaceCopyPropertyList(CGColorSpaceRef space)
{
  return (CFPropertyListRef)MEMORY[0x1F40D9AC0](space);
}

CGColorSpaceRef CGColorSpaceCreateDeviceRGB(void)
{
  return (CGColorSpaceRef)MEMORY[0x1F40D9AF8]();
}

CGColorSpaceRef CGColorSpaceCreateWithPropertyList(CFPropertyListRef plist)
{
  return (CGColorSpaceRef)MEMORY[0x1F40D9B70](plist);
}

size_t CGColorSpaceGetNumberOfComponents(CGColorSpaceRef space)
{
  return MEMORY[0x1F40D9BF0](space);
}

void CGColorSpaceRelease(CGColorSpaceRef space)
{
}

uint64_t CGImageCreateByScaling()
{
  return MEMORY[0x1F40E96A8]();
}

CGImageRef CGImageCreateWithImageInRect(CGImageRef image, CGRect rect)
{
  return (CGImageRef)MEMORY[0x1F40DA890](image, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

void CGImageDestinationAddImage(CGImageDestinationRef idst, CGImageRef image, CFDictionaryRef properties)
{
}

CGImageDestinationRef CGImageDestinationCreateWithData(CFMutableDataRef data, CFStringRef type, size_t count, CFDictionaryRef options)
{
  return (CGImageDestinationRef)MEMORY[0x1F40E9738](data, type, count, options);
}

BOOL CGImageDestinationFinalize(CGImageDestinationRef idst)
{
  return MEMORY[0x1F40E9760](idst);
}

CGBitmapInfo CGImageGetBitmapInfo(CGImageRef image)
{
  return MEMORY[0x1F40DA8D8](image);
}

size_t CGImageGetBitsPerComponent(CGImageRef image)
{
  return MEMORY[0x1F40DA8E0](image);
}

size_t CGImageGetBitsPerPixel(CGImageRef image)
{
  return MEMORY[0x1F40DA8E8](image);
}

size_t CGImageGetBytesPerRow(CGImageRef image)
{
  return MEMORY[0x1F40DA8F0](image);
}

CGColorSpaceRef CGImageGetColorSpace(CGImageRef image)
{
  return (CGColorSpaceRef)MEMORY[0x1F40DA908](image);
}

size_t CGImageGetHeight(CGImageRef image)
{
  return MEMORY[0x1F40DA948](image);
}

size_t CGImageGetWidth(CGImageRef image)
{
  return MEMORY[0x1F40DA9B8](image);
}

void CGImageRelease(CGImageRef image)
{
}

CFDictionaryRef CGImageSourceCopyPropertiesAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return (CFDictionaryRef)MEMORY[0x1F40E9938](isrc, index, options);
}

CGImageRef CGImageSourceCreateImageAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return (CGImageRef)MEMORY[0x1F40E9968](isrc, index, options);
}

CGImageSourceRef CGImageSourceCreateWithData(CFDataRef data, CFDictionaryRef options)
{
  return (CGImageSourceRef)MEMORY[0x1F40E9998](data, options);
}

size_t CGImageSourceGetCount(CGImageSourceRef isrc)
{
  return MEMORY[0x1F40E99F8](isrc);
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x1F40DB248]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  MEMORY[0x1F40DB250]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinX(CGRect rect)
{
  MEMORY[0x1F40DB298]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinY(CGRect rect)
{
  MEMORY[0x1F40DB2A0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetWidth(CGRect rect)
{
  MEMORY[0x1F40DB2A8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

BOOL CGRectIsEmpty(CGRect rect)
{
  return MEMORY[0x1F40DB2D8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

uint64_t CNAbstractMethodException()
{
  return MEMORY[0x1F4112C48]();
}

uint64_t CNAggregateComparator()
{
  return MEMORY[0x1F4112C50]();
}

uint64_t CNFullMethodName()
{
  return MEMORY[0x1F4112C68]();
}

uint64_t CNInitializerUnavailableException()
{
  return MEMORY[0x1F4112C70]();
}

uint64_t CNIsChineseJapaneseKoreanString()
{
  return MEMORY[0x1F4112C78]();
}

uint64_t CNNameDelimiterForString()
{
  return MEMORY[0x1F4112C90]();
}

uint64_t CNResultWithAutoreleasePool()
{
  return MEMORY[0x1F4112CA8]();
}

uint64_t CNResultWithLock()
{
  return MEMORY[0x1F4112CB0]();
}

uint64_t CNRunWithLock()
{
  return MEMORY[0x1F4112CB8]();
}

uint64_t CNSocialProfileEquivalentValues()
{
  return MEMORY[0x1F4112CC0]();
}

uint64_t CNStringContainsKoreanCharacters()
{
  return MEMORY[0x1F4112CE0]();
}

uint64_t CNUnimplementedMethodException()
{
  return MEMORY[0x1F4112CF8]();
}

uint64_t CPRecordCopyChangedProperties()
{
  return MEMORY[0x1F41093C0]();
}

uint64_t MGCopyAnswerWithError()
{
  return MEMORY[0x1F417CDE8]();
}

Class NSClassFromString(NSString *aClassName)
{
  return (Class)MEMORY[0x1F40E7010](aClassName);
}

void NSEndMapTableEnumeration(NSMapEnumerator *enumerator)
{
}

NSMapEnumerator *__cdecl NSEnumerateMapTable(NSMapEnumerator *__return_ptr retstr, NSMapTable *table)
{
  return (NSMapEnumerator *)MEMORY[0x1F40E70B0](retstr, table);
}

NSString *NSHomeDirectory(void)
{
  return (NSString *)MEMORY[0x1F40E7110]();
}

void NSLog(NSString *format, ...)
{
}

void *__cdecl NSMapGet(NSMapTable *table, const void *key)
{
  return (void *)MEMORY[0x1F40E7180](table, key);
}

void NSMapInsert(NSMapTable *table, const void *key, const void *value)
{
}

BOOL NSNextMapEnumeratorPair(NSMapEnumerator *enumerator, void **key, void **value)
{
  return MEMORY[0x1F40E71B0](enumerator, key, value);
}

NSRect NSRectFromString(NSString *aString)
{
  MEMORY[0x1F40E7220](aString);
  result.size.double height = v4;
  result.size.double width = v3;
  result.origin.double y = v2;
  result.origin.double x = v1;
  return result;
}

NSArray *__cdecl NSSearchPathForDirectoriesInDomains(NSSearchPathDirectory directory, NSSearchPathDomainMask domainMask, BOOL expandTilde)
{
  return (NSArray *)MEMORY[0x1F40E7248](directory, domainMask, expandTilde);
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x1F40E7280](aClass);
}

NSString *__cdecl NSStringFromRange(NSRange range)
{
  return (NSString *)MEMORY[0x1F40E72A0](range.location, range.length);
}

NSString *__cdecl NSStringFromRect(NSRect aRect)
{
  return (NSString *)MEMORY[0x1F40E72A8]((__n128)aRect.origin, *(__n128 *)&aRect.origin.y, (__n128)aRect.size, *(__n128 *)&aRect.size.height);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return (NSString *)MEMORY[0x1F40E72B0](aSelector);
}

uint64_t PNCopyBestGuessNormalizedNumberForCountry()
{
  return MEMORY[0x1F4109928]();
}

uint64_t PNCreateFormattedStringWithCountry()
{
  return MEMORY[0x1F4109930]();
}

uint64_t PNDecomposeForCountry()
{
  return MEMORY[0x1F4109938]();
}

Boolean UTTypeConformsTo(CFStringRef inUTI, CFStringRef inConformsToUTI)
{
  return MEMORY[0x1F40DEE20](inUTI, inConformsToUTI);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1F40C9A70](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

uint64_t _PNCopyFullyQualifiedNumberForCountry()
{
  return MEMORY[0x1F4109960]();
}

uint64_t _PNCopyIndexStringsForAddressBookSearch()
{
  return MEMORY[0x1F4109968]();
}

uint64_t _PNCopyInternationalCodeForCountry()
{
  return MEMORY[0x1F4109970]();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
}

int *__error(void)
{
  return (int *)MEMORY[0x1F40C9B88]();
}

os_activity_t _os_activity_create(void *dso, const char *description, os_activity_t activity, os_activity_flag_t flags)
{
  return (os_activity_t)MEMORY[0x1F40C9F70](dso, description, activity, *(void *)&flags);
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _sl_dlopen()
{
  return MEMORY[0x1F415B160]();
}

uint64_t _swift_isClassOrObjCExistentialType()
{
  return MEMORY[0x1F4186340]();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x1F4186370]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1F4186388]();
}

uint64_t abort_report_np()
{
  return MEMORY[0x1F40CA1E8]();
}

void bzero(void *a1, size_t a2)
{
}

uint64_t cn_objectResultWithObjectLock()
{
  return MEMORY[0x1F4112D00]();
}

uint64_t cn_runWithObjectLock()
{
  return MEMORY[0x1F4112D08]();
}

uint64_t decomposedPhoneNumbersEqual()
{
  return MEMORY[0x1F4109988]();
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return (dispatch_queue_global_t)MEMORY[0x1F40CBA60](identifier, flags);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x1F40CBA88]();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

intptr_t dispatch_group_wait(dispatch_group_t group, dispatch_time_t timeout)
{
  return MEMORY[0x1F40CBAC0](group, timeout);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return (dispatch_queue_attr_t)MEMORY[0x1F40CBBB8](attr, *(void *)&qos_class, *(void *)&relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x1F40CBBC0](label, attr);
}

void dispatch_resume(dispatch_object_t object)
{
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x1F40CBC30](value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return MEMORY[0x1F40CBC40](dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return MEMORY[0x1F40CBC50](dsema, timeout);
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return (dispatch_source_t)MEMORY[0x1F40CBC98](type, handle, mask, queue);
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x1F40CBD30](when, delta);
}

char *dlerror(void)
{
  return (char *)MEMORY[0x1F40CBDB0]();
}

void *__cdecl dlopen(const char *__path, int __mode)
{
  return (void *)MEMORY[0x1F40CBDB8](__path, *(void *)&__mode);
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return (void *)MEMORY[0x1F40CBDC8](__handle, __symbol);
}

uint64_t dyld_program_sdk_at_least()
{
  return MEMORY[0x1F40CBEC8]();
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1F40CCB10](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1F40CCB80](ptr);
}

void *__cdecl malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1F40CCB90](count, size, type_id);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1F40CCB98](size, type_id);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1F40CCCF0](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1F40CCD10](__dst, __src, __len);
}

int mkdir(const char *a1, mode_t a2)
{
  return MEMORY[0x1F40CCDD0](a1, a2);
}

void *__cdecl mmap(void *a1, size_t a2, int a3, int a4, int a5, off_t a6)
{
  return (void *)MEMORY[0x1F40CCE40](a1, a2, *(void *)&a3, *(void *)&a4, *(void *)&a5, a6);
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x1F40CD028](*(void *)&token);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x1F40CD060](name, out_token, queue, handler);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1F4181638](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1F4181640](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1F4181648]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1F4181660](a1);
}

{
  MEMORY[0x1F4181668](context);
}

{
  return (void *)MEMORY[0x1F4181670]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F4181678](a1);
}

id objc_begin_catch(void *exc_buf)
{
  return (id)MEMORY[0x1F4181680](exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1F4181688]();
}

void objc_copyStruct(void *dest, const void *src, ptrdiff_t size, BOOL atomic, BOOL hasStrong)
{
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_end_catch(void)
{
}

void objc_enumerationMutation(id obj)
{
}

void objc_exception_rethrow(void)
{
}

void objc_exception_throw(id exception)
{
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x1F4181728](name);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return (id)MEMORY[0x1F4181748](self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x1F4181758](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x1F4181780](location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F4181798](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F41817A8](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1F41817B0]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1F41817B8]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x1F41817C0]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x1F41817C8]();
}

uint64_t self
{
  return MEMORY[0x1F41817D0]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1F41818B0](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1F41818B8](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C8](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x1F41818D0](a1);
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_atomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x1F4181A18](location, obj);
}

int objc_sync_enter(id obj)
{
  return MEMORY[0x1F4181A28](obj);
}

int objc_sync_exit(id obj)
{
  return MEMORY[0x1F4181A30](obj);
}

void objc_terminate(void)
{
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1F4181A40](a1);
}

const char *__cdecl object_getClassName(id a1)
{
  return (const char *)MEMORY[0x1F4181A60](a1);
}

Class object_setClass(id a1, Class a2)
{
  return (Class)MEMORY[0x1F4181A90](a1, a2);
}

void os_activity_apply(os_activity_t activity, os_block_t block)
{
}

void os_activity_scope_enter(os_activity_t activity, os_activity_scope_state_t state)
{
}

void os_activity_scope_leave(os_activity_scope_state_t state)
{
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x1F40CD360](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1F40CD3B8](oslog, type);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return MEMORY[0x1F40CD550](log);
}

os_signpost_id_t os_signpost_id_generate(os_log_t log)
{
  return MEMORY[0x1F40CD558](log);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t os_variant_has_internal_diagnostics()
{
  return MEMORY[0x1F40CD650]();
}

int pthread_main_np(void)
{
  return MEMORY[0x1F40CDA68]();
}

unsigned int sleep(unsigned int a1)
{
  return MEMORY[0x1F40CE078](*(void *)&a1);
}

uint64_t swift_allocError()
{
  return MEMORY[0x1F41863E0]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1F41863E8]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1F4186410]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1F4186418]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1F4186420]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1F4186428]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1F4186430]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1F4186440]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1F4186448]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1F4186450]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1F4186458]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x1F41881F0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1F41864B8]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x1F41864C0]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1F41864E0]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1F4186518]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1F4186528]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1F4186530]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1F4186540]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x1F4186580]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1F41865A8]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1F41865E0]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1F41865F8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1F4186608]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1F4186610]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1F4186628]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x1F4186650]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1F4186668]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1F4186670]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1F4186680]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1F41866A8]();
}

uint64_t swift_isClassType()
{
  return MEMORY[0x1F41866C0]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x1F41866C8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x1F41866F8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1F4186700]();
}

uint64_t swift_once()
{
  return MEMORY[0x1F4186728]();
}

uint64_t swift_release()
{
  return MEMORY[0x1F4186758]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1F4186760]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1F4186770]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1F4186778]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1F4186790]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1F4186798]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1F41867A0]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x1F41867A8]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1F4188250]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x1F4188258]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1F4188260]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1F41867E0]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x1F41867E8]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1F41867F0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x1F41867F8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1F4186898]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1F41868E0]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x1F41868E8]();
}

uint64_t tcc_object_copy_description()
{
  return MEMORY[0x1F415CD70]();
}