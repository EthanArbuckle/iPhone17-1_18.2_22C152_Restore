@interface SFPasswordSavingServiceViewController
+ (id)_exportedInterface;
- (SFPasswordSavingServiceViewController)initWithNibName:(id)a3 bundle:(id)a4;
- (id)_messageStringForAccountModificationPrompt;
- (id)_titleStringForAccountModificationPrompt;
- (void)_addChangePasswordOnWebsiteActionToPrompt;
- (void)_addChangeToStrongPasswordActionToPrompt;
- (void)_addUpgradeToSignInWithAppleActionToPrompt;
- (void)_checkIfWarningStoreAlreadyContainsCredentialWithCompletionHandler:(id)a3;
- (void)_configureSecurityPromptActionsWithCompletionHandler:(id)a3;
- (void)_dismiss;
- (void)_initiateChangeToStrongPassword;
- (void)_initiateUpgradeToSignInWithApple;
- (void)_openPasswordManagerToChangePasswordOnWebsite;
- (void)_removeCredential:(id)a3;
- (void)_saveCredential:(id)a3;
- (void)_showAccountModificationPrompt;
- (void)_updateCredential:(id)a3;
- (void)credentialsSubmittedForWebsiteURL:(id)a3 user:(id)a4 password:(id)a5 passwordIsAutoGenerated:(BOOL)a6 completionHandler:(id)a7;
- (void)showPromptWithToken:(id)a3 style:(int64_t)a4;
@end

@implementation SFPasswordSavingServiceViewController

+ (id)_exportedInterface
{
  return (id)[MEMORY[0x1E4F29280] interfaceWithProtocol:&unk_1EFC63BB8];
}

- (SFPasswordSavingServiceViewController)initWithNibName:(id)a3 bundle:(id)a4
{
  v17.receiver = self;
  v17.super_class = (Class)SFPasswordSavingServiceViewController;
  v4 = [(SFPasswordSavingServiceViewController *)&v17 initWithNibName:a3 bundle:a4];
  if (v4)
  {
    v5 = [MEMORY[0x1E4F18AF0] sharedManager];
    [v5 addChangeObserver:v4];

    uint64_t v6 = [MEMORY[0x1E4F98DF8] sharedStore];
    savedAccountStore = v4->_savedAccountStore;
    v4->_savedAccountStore = (WBSSavedAccountStore *)v6;

    id v8 = objc_alloc(MEMORY[0x1E4F98980]);
    v9 = objc_msgSend(MEMORY[0x1E4F28B50], "safari_safariCoreBundle");
    v10 = [v9 URLForResource:@"WBSAutoFillQuirks" withExtension:@"plist"];
    v11 = [MEMORY[0x1E4F28CB8] defaultManager];
    v12 = objc_msgSend(v11, "safari_autoFillQuirksDownloadDirectoryURL");
    uint64_t v13 = [v8 initWithBuiltInQuirksURL:v10 downloadsDirectoryURL:v12 resourceName:@"AutoFillQuirks" resourceVersion:@"1" updateDateDefaultsKey:*MEMORY[0x1E4F99430] updateInterval:0.0];
    autoFillQuirksManager = v4->_autoFillQuirksManager;
    v4->_autoFillQuirksManager = (WBSAutoFillQuirksManager *)v13;

    [(WBSAutoFillQuirksManager *)v4->_autoFillQuirksManager beginLoadingQuirksFromDisk];
    v15 = v4;
  }

  return v4;
}

- (void)credentialsSubmittedForWebsiteURL:(id)a3 user:(id)a4 password:(id)a5 passwordIsAutoGenerated:(BOOL)a6 completionHandler:(id)a7
{
  id v12 = a4;
  id v13 = a5;
  id v14 = a7;
  v15 = (void *)MEMORY[0x1E4F29128];
  id v16 = a3;
  objc_super v17 = [v15 UUID];
  v18 = [v17 UUIDString];
  tokenForShowingPrompt = self->_tokenForShowingPrompt;
  self->_tokenForShowingPrompt = v18;

  v20 = (void *)MEMORY[0x1E4F98250];
  v21 = [(SFPasswordServiceViewController *)self applicationIdentifier];
  v25[0] = MEMORY[0x1E4F143A8];
  v25[1] = 3221225472;
  v25[2] = __131__SFPasswordSavingServiceViewController_credentialsSubmittedForWebsiteURL_user_password_passwordIsAutoGenerated_completionHandler___block_invoke;
  v25[3] = &unk_1E5C76DD8;
  v25[4] = self;
  id v26 = v12;
  BOOL v29 = a6;
  id v27 = v13;
  id v28 = v14;
  id v22 = v14;
  id v23 = v13;
  id v24 = v12;
  [v20 getAllowedActionForAppCredentialsWithAppID:v21 websiteURL:v16 user:v24 password:v23 completionHandler:v25];
}

void __131__SFPasswordSavingServiceViewController_credentialsSubmittedForWebsiteURL_user_password_passwordIsAutoGenerated_completionHandler___block_invoke(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  uint64_t v36 = *MEMORY[0x1E4F143B8];
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  *(void *)(*(void *)(a1 + 32) + 984) = a2;
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 1000), a3);
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 992), a4);
  uint64_t v13 = objc_msgSend(MEMORY[0x1E4F18D88], "safari_credentialWithUser:password:persistence:", *(void *)(a1 + 40), *(void *)(a1 + 48), 3);
  uint64_t v14 = *(void *)(a1 + 32);
  v15 = *(void **)(v14 + 1008);
  *(void *)(v14 + 1008) = v13;

  if (!*(unsigned char *)(a1 + 64))
  {
    if (*(void *)(*(void *)(a1 + 32) + 984) != 3)
    {
      (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
      id v22 = [MEMORY[0x1E4F18AF0] sharedManager];
      [v22 removeChangeObserver:*(void *)(a1 + 32)];

      goto LABEL_23;
    }
    id v16 = objc_alloc(MEMORY[0x1E4F223C8]);
    objc_super v17 = [*(id *)(a1 + 32) _hostApplicationBundleIdentifier];
    id v33 = 0;
    v18 = (void *)[v16 initWithBundleIdentifier:v17 allowPlaceholder:0 error:&v33];
    id v19 = v33;

    if (v19)
    {
      v20 = WBS_LOG_CHANNEL_PREFIXAccountAuthenticationModificationExtension();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
        __131__SFPasswordSavingServiceViewController_credentialsSubmittedForWebsiteURL_user_password_passwordIsAutoGenerated_completionHandler___block_invoke_cold_1(v20, v19);
      }
    }
    else if ([v18 shouldShowSecurityPromptsOnSignIn])
    {
      id v23 = objc_alloc(MEMORY[0x1E4F98CB0]);
      id v24 = [MEMORY[0x1E4F98DF8] sharedStore];
      v25 = (void *)[v23 initWithSavedAccountStore:v24 autoFillQuirksManager:*(void *)(*(void *)(a1 + 32) + 1032) userDefaults:0 highLevelDomainsProvider:0];

      v31[0] = MEMORY[0x1E4F143A8];
      v31[1] = 3221225472;
      v31[2] = __131__SFPasswordSavingServiceViewController_credentialsSubmittedForWebsiteURL_user_password_passwordIsAutoGenerated_completionHandler___block_invoke_68;
      v31[3] = &unk_1E5C76DB0;
      v31[4] = *(void *)(a1 + 32);
      id v32 = *(id *)(a1 + 56);
      [v25 getWarningForSavedAccount:v12 completionHandler:v31];

LABEL_22:
      goto LABEL_23;
    }
    if (v18 && ([v18 shouldShowSecurityPromptsOnSignIn] & 1) == 0)
    {
      id v26 = (void *)MEMORY[0x1E4F223B8];
      id v27 = [*(id *)(a1 + 32) _hostApplicationBundleIdentifier];
      id v28 = [v26 applicationProxyForIdentifier:v27];
      BOOL v29 = [v28 localizedNameForContext:0];

      v30 = WBS_LOG_CHANNEL_PREFIXAccountAuthenticationModificationExtension();
      if (os_log_type_enabled(v30, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v35 = v29;
        _os_log_impl(&dword_1A690B000, v30, OS_LOG_TYPE_INFO, "%@ has opted out of security recommendation prompts on sign in.", buf, 0xCu);
      }
    }
    (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
    [*(id *)(a1 + 32) _dismiss];
    goto LABEL_22;
  }
  if (a2 == 2)
  {
    [*(id *)(a1 + 32) _updateCredential:*(void *)(*(void *)(a1 + 32) + 1008)];
  }
  else if (a2 == 1)
  {
    [*(id *)(a1 + 32) _saveCredential:*(void *)(*(void *)(a1 + 32) + 1008)];
  }
  else
  {
    v21 = WBS_LOG_CHANNEL_PREFIXAppPasswordAutoFill();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
      __131__SFPasswordSavingServiceViewController_credentialsSubmittedForWebsiteURL_user_password_passwordIsAutoGenerated_completionHandler___block_invoke_cold_2();
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
  [*(id *)(a1 + 32) _dismiss];
LABEL_23:
}

void __131__SFPasswordSavingServiceViewController_credentialsSubmittedForWebsiteURL_user_password_passwordIsAutoGenerated_completionHandler___block_invoke_68(uint64_t a1, void *a2)
{
  id v5 = a2;
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 1040), a2);
  *(unsigned char *)(*(void *)(a1 + 32) + 1075) = ([*(id *)(*(void *)(a1 + 32) + 1040) issueTypes] & 0xC) != 0;
  *(unsigned char *)(*(void *)(a1 + 32) + 1074) = ([*(id *)(*(void *)(a1 + 32) + 1040) issueTypes] & 2) != 0;
  uint64_t v4 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v4 + 1075) || *(unsigned char *)(v4 + 1074))
  {
    [(id)v4 _checkIfWarningStoreAlreadyContainsCredentialWithCompletionHandler:*(void *)(a1 + 40)];
  }
  else
  {
    (*(void (**)(void, void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), 0, *(void *)(v4 + 1016));
    [*(id *)(a1 + 32) _dismiss];
  }
}

- (void)_checkIfWarningStoreAlreadyContainsCredentialWithCompletionHandler:(id)a3
{
  v19[1] = *MEMORY[0x1E4F143B8];
  uint64_t v4 = (void (**)(id, void, NSString *))a3;
  savedAccountStore = self->_savedAccountStore;
  credential = self->_credential;
  v7 = [(NSArray *)self->_protectionSpacesToUpdate firstObject];
  id v8 = [(WBSSavedAccountStore *)savedAccountStore persistentIdentifierForCredential:credential protectionSpace:v7];

  if (v8)
  {
    v9 = self->_savedAccountStore;
    v19[0] = v8;
    id v10 = [MEMORY[0x1E4F1C978] arrayWithObjects:v19 count:1];
    id v11 = [(WBSSavedAccountStore *)v9 savedAccountsForPersistentIdentifiers:v10];
    id v12 = [v11 firstObject];

    if (([v12 credentialTypes] & 2) != 0)
    {
      v4[2](v4, 0, self->_tokenForShowingPrompt);
      [(SFPasswordSavingServiceViewController *)self _dismiss];
    }
    else
    {
      objc_initWeak(&location, self);
      uint64_t v13 = [MEMORY[0x1E4F98CB8] sharedStore];
      v15[0] = MEMORY[0x1E4F143A8];
      v15[1] = 3221225472;
      v15[2] = __108__SFPasswordSavingServiceViewController__checkIfWarningStoreAlreadyContainsCredentialWithCompletionHandler___block_invoke;
      v15[3] = &unk_1E5C73B20;
      objc_copyWeak(&v17, &location);
      id v16 = v4;
      [v13 getContainsPersistentIdentifier:v8 completionHandler:v15];

      objc_destroyWeak(&v17);
      objc_destroyWeak(&location);
    }
  }
  else
  {
    uint64_t v14 = WBS_LOG_CHANNEL_PREFIXAccountAuthenticationModificationExtension();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      -[SFPasswordSavingServiceViewController _checkIfWarningStoreAlreadyContainsCredentialWithCompletionHandler:]();
    }
    v4[2](v4, 0, self->_tokenForShowingPrompt);
    [(SFPasswordSavingServiceViewController *)self _dismiss];
  }
}

void __108__SFPasswordSavingServiceViewController__checkIfWarningStoreAlreadyContainsCredentialWithCompletionHandler___block_invoke(uint64_t a1, int a2)
{
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v5 = *(void *)(a1 + 32);
  id v6 = WeakRetained;
  if (WeakRetained)
  {
    if (a2)
    {
      (*(void (**)(uint64_t, void, void))(v5 + 16))(v5, 0, WeakRetained[127]);
      [v6 _dismiss];
    }
    else
    {
      [WeakRetained _configureSecurityPromptActionsWithCompletionHandler:v5];
    }
  }
  else
  {
    (*(void (**)(uint64_t, void, void))(v5 + 16))(v5, 0, 0);
  }
}

- (void)_configureSecurityPromptActionsWithCompletionHandler:(id)a3
{
  id v4 = a3;
  objc_initWeak(&location, self);
  uint64_t v5 = [MEMORY[0x1E4F18AF0] sharedManager];
  id v6 = [(NSArray *)self->_protectionSpacesToUpdate firstObject];
  v7 = [v6 host];
  id v8 = objc_msgSend(v7, "safari_highLevelDomainFromHost");
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 3221225472;
  v10[2] = __94__SFPasswordSavingServiceViewController__configureSecurityPromptActionsWithCompletionHandler___block_invoke;
  v10[3] = &unk_1E5C76E28;
  objc_copyWeak(&v12, &location);
  id v9 = v4;
  id v11 = v9;
  [v5 extensionForDomain:v8 completionHandler:v10];

  objc_destroyWeak(&v12);
  objc_destroyWeak(&location);
}

void __94__SFPasswordSavingServiceViewController__configureSecurityPromptActionsWithCompletionHandler___block_invoke(uint64_t a1, void *a2)
{
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v6 = WeakRetained;
  if (!WeakRetained)
  {
    id v9 = *(void (**)(void))(*(void *)(a1 + 32) + 16);
LABEL_12:
    v9();
    goto LABEL_13;
  }
  if (!v4)
  {
LABEL_11:
    id v9 = *(void (**)(void))(*(void *)(a1 + 32) + 16);
    goto LABEL_12;
  }
  objc_storeStrong((id *)WeakRetained + 131, a2);
  v7 = [v4 attributes];
  if (objc_msgSend(v7, "safari_BOOLForKey:", *MEMORY[0x1E4F98268]))
  {
    id v8 = [MEMORY[0x1E4F98BE0] sharedMonitor];
    v6[1072] = [v8 isKeychainSyncEnabled];
  }
  else
  {
    v6[1072] = 0;
  }

  id v10 = objc_msgSend(MEMORY[0x1E4F1CB18], "pm_defaults");
  int v11 = objc_msgSend(v10, "pm_passwordManagerIsInDemoMode");

  id v12 = [v4 attributes];
  char v13 = objc_msgSend(v12, "safari_BOOLForKey:", *MEMORY[0x1E4F98270]);
  char v14 = v13;
  if (v11)
  {
    v6[1073] = v13;

    goto LABEL_11;
  }

  if ((v14 & 1) == 0) {
    goto LABEL_11;
  }
  id v15 = objc_alloc_init(MEMORY[0x1E4F4EF90]);
  id v16 = [v6 _hostApplicationBundleIdentifier];
  v17[0] = MEMORY[0x1E4F143A8];
  v17[1] = 3221225472;
  v17[2] = __94__SFPasswordSavingServiceViewController__configureSecurityPromptActionsWithCompletionHandler___block_invoke_2;
  v17[3] = &unk_1E5C76E00;
  objc_copyWeak(&v19, (id *)(a1 + 40));
  id v18 = *(id *)(a1 + 32);
  [v15 getCredentialStateForClientID:v16 completion:v17];

  objc_destroyWeak(&v19);
LABEL_13:
}

void __94__SFPasswordSavingServiceViewController__configureSecurityPromptActionsWithCompletionHandler___block_invoke_2(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    if (a3)
    {
      v7 = WBS_LOG_CHANNEL_PREFIXAccountAuthenticationModificationExtension();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
        __94__SFPasswordSavingServiceViewController__configureSecurityPromptActionsWithCompletionHandler___block_invoke_2_cold_1((uint64_t)WeakRetained, v7);
      }
    }
    WeakRetained[1073] = a2 == 2;
    id v8 = *(void (**)(void))(*(void *)(a1 + 32) + 16);
  }
  else
  {
    id v8 = *(void (**)(void))(*(void *)(a1 + 32) + 16);
  }
  v8();
}

- (void)_saveCredential:(id)a3
{
  domainForSavePasswordAction = self->_domainForSavePasswordAction;
  id v4 = a3;
  id v11 = [(NSString *)domainForSavePasswordAction safari_bestURLForUserTypedString];
  uint64_t v5 = objc_msgSend(MEMORY[0x1E4F18D98], "safari_HTMLFormProtectionSpaceForURL:", v11);
  id v6 = [MEMORY[0x1E4F98DF8] sharedStore];
  v7 = [v4 user];
  id v8 = [v4 password];

  id v9 = [v5 host];
  id v10 = (id)[v6 saveUser:v7 password:v8 forProtectionSpace:v5 highLevelDomain:v9 groupID:*MEMORY[0x1E4F992E0]];
}

- (void)_updateCredential:(id)a3
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v4 = a3;
  uint64_t v5 = [v4 user];
  id v6 = [v4 password];
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  v7 = self->_protectionSpacesToUpdate;
  uint64_t v8 = [(NSArray *)v7 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v15;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v15 != v10) {
          objc_enumerationMutation(v7);
        }
        uint64_t v12 = *(void *)(*((void *)&v14 + 1) + 8 * v11);
        char v13 = objc_msgSend(MEMORY[0x1E4F98DF8], "sharedStore", (void)v14);
        [v13 updateAllSavedAccountsWithPasswordsWithUser:v5 protectionSpace:v12 withNewPassword:v6];

        ++v11;
      }
      while (v9 != v11);
      uint64_t v9 = [(NSArray *)v7 countByEnumeratingWithState:&v14 objects:v18 count:16];
    }
    while (v9);
  }
}

- (void)_removeCredential:(id)a3
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  id v23 = a3;
  domainForSavePasswordAction = self->_domainForSavePasswordAction;
  if (domainForSavePasswordAction)
  {
    id v24 = [(NSString *)domainForSavePasswordAction safari_simplifiedUserVisibleURLString];
  }
  else
  {
    uint64_t v5 = [(NSArray *)self->_protectionSpacesToUpdate firstObject];
    id v6 = objc_msgSend(v5, "safari_addressString");
    id v24 = objc_msgSend(v6, "safari_simplifiedUserVisibleURLString");
  }
  long long v30 = 0u;
  long long v31 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  id obj = [(WBSSavedAccountStore *)self->_savedAccountStore savedAccountsWithPasswords];
  uint64_t v7 = [obj countByEnumeratingWithState:&v28 objects:v32 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v29;
    uint64_t v10 = &OBJC_IVAR____SFSafariViewControllerPrewarmingSession__remoteViewController;
    do
    {
      uint64_t v11 = 0;
      uint64_t v26 = v8;
      do
      {
        if (*(void *)v29 != v9) {
          objc_enumerationMutation(obj);
        }
        uint64_t v12 = *(void **)(*((void *)&v28 + 1) + 8 * v11);
        uint64_t v13 = v10[507];
        long long v14 = [*(id *)((char *)&self->super.super.super.super.isa + v13) user];
        long long v15 = [v12 user];
        if (![v14 isEqualToString:v15]) {
          goto LABEL_14;
        }
        long long v16 = v10;
        uint64_t v17 = v9;
        id v18 = self;
        uint64_t v19 = [*(id *)((char *)&self->super.super.super.super.isa + v13) password];
        v20 = [v12 password];
        if (![v19 isEqualToString:v20])
        {

          uint64_t v9 = v17;
          self = v18;
          uint64_t v10 = v16;
          uint64_t v8 = v26;
LABEL_14:

          goto LABEL_15;
        }
        v21 = [v12 highLevelDomain];
        int v25 = [v24 containsString:v21];

        uint64_t v9 = v17;
        self = v18;
        uint64_t v10 = v16;
        uint64_t v8 = v26;
        if (v25)
        {
          [*(id *)((char *)&v18->super.super.super.super.isa + v22) removeCredentialTypes:1 forSavedAccount:v12];
          goto LABEL_17;
        }
LABEL_15:
        ++v11;
      }
      while (v8 != v11);
      uint64_t v8 = [obj countByEnumeratingWithState:&v28 objects:v32 count:16];
    }
    while (v8);
  }
LABEL_17:
}

- (void)showPromptWithToken:(id)a3 style:(int64_t)a4
{
  if (![a3 isEqualToString:self->_tokenForShowingPrompt])
  {
LABEL_4:
    [(SFPasswordSavingServiceViewController *)self _dismiss];
    return;
  }
  int64_t action = self->_action;
  if (action != 3)
  {
    if (!action) {
      goto LABEL_4;
    }
    if (WBSCurrentPasswordSavingBehavior() == 1) {
      return;
    }
    int v7 = [MEMORY[0x1E4FB6EF0] keychainSyncEnabled];
    if (self->_action == 1)
    {
      [MEMORY[0x1E4F98AF8] isPasswordsAppInstalled];
      uint64_t v8 = _WBSLocalizedString();
      id v18 = _WBSLocalizedString();
      uint64_t v19 = (void *)MEMORY[0x1E4FB1410];
      v20 = _WBSLocalizedString();
      v34[0] = MEMORY[0x1E4F143A8];
      v34[1] = 3221225472;
      v34[2] = __67__SFPasswordSavingServiceViewController_showPromptWithToken_style___block_invoke;
      v34[3] = &unk_1E5C72898;
      v34[4] = self;
      v21 = [v19 actionWithTitle:v20 style:0 handler:v34];

LABEL_26:
      int v25 = [MEMORY[0x1E4FB1418] alertControllerWithTitle:v8 message:v18 imageNamed:@"alert-passwords" preferredStyle:a4];
      prompt = self->_prompt;
      self->_prompt = v25;

      [(UIAlertController *)self->_prompt addAction:v21];
      id v27 = self->_prompt;
      long long v28 = (void *)MEMORY[0x1E4FB1410];
      long long v29 = _WBSLocalizedString();
      v32[0] = MEMORY[0x1E4F143A8];
      v32[1] = 3221225472;
      v32[2] = __67__SFPasswordSavingServiceViewController_showPromptWithToken_style___block_invoke_2;
      v32[3] = &unk_1E5C72898;
      v32[4] = self;
      long long v30 = [v28 actionWithTitle:v29 style:1 handler:v32];
      [(UIAlertController *)v27 addAction:v30];

      [(SFPasswordSavingServiceViewController *)self presentViewController:self->_prompt animated:1 completion:0];
      return;
    }
    uint64_t v9 = (void *)MEMORY[0x1E4F223B8];
    uint64_t v10 = [(SFPasswordSavingServiceViewController *)self _hostApplicationBundleIdentifier];
    uint64_t v11 = [v9 applicationProxyForIdentifier:v10];
    uint64_t v12 = [v11 localizedNameForContext:0];

    if (![v12 length])
    {
      uint64_t v13 = WBS_LOG_CHANNEL_PREFIXAppPasswordAutoFill();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        __127__SFPasswordPickerServiceViewController__authenticateAndSetPresentCredentialsHandlerWithSavedAccountContext_completionHandler___block_invoke_2_cold_3();
      }
    }
    long long v14 = [(NSURLCredential *)self->_credential user];
    int v15 = [MEMORY[0x1E4F98AF8] isPasswordsAppInstalled];
    uint64_t v16 = [v14 length];
    uint64_t v17 = NSString;
    if (v15)
    {
      if (v16) {
        goto LABEL_23;
      }
    }
    else if (v7)
    {
      if (v16) {
        goto LABEL_23;
      }
    }
    else if (v16)
    {
LABEL_23:
      uint64_t v22 = _WBSLocalizedString();
      objc_msgSend(v17, "localizedStringWithFormat:", v22, v14, v12);
      uint64_t v8 = LABEL_25:;

      id v23 = (void *)MEMORY[0x1E4FB1410];
      id v24 = _WBSLocalizedString();
      v33[0] = MEMORY[0x1E4F143A8];
      v33[1] = 3221225472;
      v33[2] = __67__SFPasswordSavingServiceViewController_showPromptWithToken_style___block_invoke_130;
      v33[3] = &unk_1E5C72898;
      v33[4] = self;
      v21 = [v23 actionWithTitle:v24 style:0 handler:v33];

      id v18 = 0;
      goto LABEL_26;
    }
    uint64_t v22 = _WBSLocalizedString();
    objc_msgSend(v17, "localizedStringWithFormat:", v22, v12, v31);
    goto LABEL_25;
  }

  [(SFPasswordSavingServiceViewController *)self _showAccountModificationPrompt];
}

uint64_t __67__SFPasswordSavingServiceViewController_showPromptWithToken_style___block_invoke(uint64_t a1)
{
  [*(id *)(a1 + 32) _saveCredential:*(void *)(*(void *)(a1 + 32) + 1008)];
  v2 = *(void **)(a1 + 32);

  return [v2 _dismiss];
}

uint64_t __67__SFPasswordSavingServiceViewController_showPromptWithToken_style___block_invoke_130(uint64_t a1)
{
  [*(id *)(a1 + 32) _updateCredential:*(void *)(*(void *)(a1 + 32) + 1008)];
  v2 = *(void **)(a1 + 32);

  return [v2 _dismiss];
}

uint64_t __67__SFPasswordSavingServiceViewController_showPromptWithToken_style___block_invoke_2(uint64_t a1)
{
  return [*(id *)(a1 + 32) _dismiss];
}

- (void)_dismiss
{
  tokenForShowingPrompt = self->_tokenForShowingPrompt;
  self->_tokenForShowingPrompt = 0;

  self->_int64_t action = 0;
  domainForSavePasswordAction = self->_domainForSavePasswordAction;
  self->_domainForSavePasswordAction = 0;

  protectionSpacesToUpdate = self->_protectionSpacesToUpdate;
  self->_protectionSpacesToUpdate = 0;

  id v6 = [(SFPasswordSavingServiceViewController *)self _remoteViewControllerProxy];
  [v6 willDismissServiceViewController];

  id v7 = [MEMORY[0x1E4F18AF0] sharedManager];
  [v7 removeChangeObserver:self];
}

- (void)_showAccountModificationPrompt
{
  savedAccountStore = self->_savedAccountStore;
  credential = self->_credential;
  uint64_t v5 = [(NSArray *)self->_protectionSpacesToUpdate firstObject];
  id v6 = [(WBSSavedAccountStore *)savedAccountStore persistentIdentifierForCredential:credential protectionSpace:v5];

  id v7 = [MEMORY[0x1E4F98CB8] sharedStore];
  [v7 addPersistentIdentifier:v6];

  uint64_t v8 = (void *)MEMORY[0x1E4FB1418];
  uint64_t v9 = [(SFPasswordSavingServiceViewController *)self _titleStringForAccountModificationPrompt];
  uint64_t v10 = [(SFPasswordSavingServiceViewController *)self _messageStringForAccountModificationPrompt];
  uint64_t v11 = [v8 alertControllerWithTitle:v9 message:v10 imageNamed:@"alert-passwords" preferredStyle:_SFDeviceAlertStyle()];
  prompt = self->_prompt;
  self->_prompt = v11;

  if (self->_supportsUpgradeToSignInWithApple) {
    [(SFPasswordSavingServiceViewController *)self _addUpgradeToSignInWithAppleActionToPrompt];
  }
  if (self->_supportsUpgradeToStrongPassword) {
    [(SFPasswordSavingServiceViewController *)self _addChangeToStrongPasswordActionToPrompt];
  }
  else {
    [(SFPasswordSavingServiceViewController *)self _addChangePasswordOnWebsiteActionToPrompt];
  }
  uint64_t v13 = self->_prompt;
  long long v14 = (void *)MEMORY[0x1E4FB1410];
  int v15 = _WBSLocalizedString();
  v17[0] = MEMORY[0x1E4F143A8];
  v17[1] = 3221225472;
  v17[2] = __71__SFPasswordSavingServiceViewController__showAccountModificationPrompt__block_invoke;
  v17[3] = &unk_1E5C72898;
  void v17[4] = self;
  uint64_t v16 = [v14 actionWithTitle:v15 style:1 handler:v17];
  [(UIAlertController *)v13 addAction:v16];

  [(SFPasswordSavingServiceViewController *)self presentViewController:self->_prompt animated:1 completion:0];
}

uint64_t __71__SFPasswordSavingServiceViewController__showAccountModificationPrompt__block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) _dismiss];
}

- (void)_addUpgradeToSignInWithAppleActionToPrompt
{
  prompt = self->_prompt;
  id v4 = (void *)MEMORY[0x1E4FB1410];
  uint64_t v5 = _WBSLocalizedString();
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = __83__SFPasswordSavingServiceViewController__addUpgradeToSignInWithAppleActionToPrompt__block_invoke;
  v7[3] = &unk_1E5C72898;
  v7[4] = self;
  id v6 = [v4 actionWithTitle:v5 style:0 handler:v7];
  [(UIAlertController *)prompt addAction:v6];
}

uint64_t __83__SFPasswordSavingServiceViewController__addUpgradeToSignInWithAppleActionToPrompt__block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) _initiateUpgradeToSignInWithApple];
}

- (void)_addChangeToStrongPasswordActionToPrompt
{
  prompt = self->_prompt;
  id v4 = (void *)MEMORY[0x1E4FB1410];
  uint64_t v5 = _WBSLocalizedString();
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = __81__SFPasswordSavingServiceViewController__addChangeToStrongPasswordActionToPrompt__block_invoke;
  v7[3] = &unk_1E5C72898;
  v7[4] = self;
  id v6 = [v4 actionWithTitle:v5 style:0 handler:v7];
  [(UIAlertController *)prompt addAction:v6];
}

uint64_t __81__SFPasswordSavingServiceViewController__addChangeToStrongPasswordActionToPrompt__block_invoke(uint64_t a1)
{
  return [*(id *)(a1 + 32) _initiateChangeToStrongPassword];
}

- (void)_addChangePasswordOnWebsiteActionToPrompt
{
  prompt = self->_prompt;
  id v4 = (void *)MEMORY[0x1E4FB1410];
  uint64_t v5 = _WBSLocalizedString();
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 3221225472;
  v7[2] = __82__SFPasswordSavingServiceViewController__addChangePasswordOnWebsiteActionToPrompt__block_invoke;
  v7[3] = &unk_1E5C72898;
  v7[4] = self;
  id v6 = [v4 actionWithTitle:v5 style:0 handler:v7];
  [(UIAlertController *)prompt addAction:v6];
}

uint64_t __82__SFPasswordSavingServiceViewController__addChangePasswordOnWebsiteActionToPrompt__block_invoke(uint64_t a1)
{
  [*(id *)(a1 + 32) _openPasswordManagerToChangePasswordOnWebsite];
  v2 = *(void **)(a1 + 32);

  return [v2 _dismiss];
}

- (id)_titleStringForAccountModificationPrompt
{
  if (([(WBSPasswordWarning *)self->_passwordWarning issueTypes] & 8) != 0)
  {
    id v4 = _WBSLocalizedString();
    uint64_t v5 = [(WBSPasswordWarning *)self->_passwordWarning localizedLongDescriptionForClient:2];
    id v6 = [NSString stringWithFormat:@" %@", v4];
    v3 = [v5 stringByAppendingString:v6];
  }
  else
  {
    v3 = [(WBSPasswordWarning *)self->_passwordWarning localizedLongDescriptionForClient:2];
  }

  return v3;
}

- (id)_messageStringForAccountModificationPrompt
{
  v3 = (void *)MEMORY[0x1E4F223B8];
  id v4 = [(SFPasswordSavingServiceViewController *)self _hostApplicationBundleIdentifier];
  uint64_t v5 = [v3 applicationProxyForIdentifier:v4];
  id v6 = [v5 localizedNameForContext:0];

  if (self->_supportsUpgradeToSignInWithApple)
  {
    [MEMORY[0x1E4F98AF8] isAppleAccountBrandingEnabled];
  }
  else
  {
    uint64_t v8 = [MEMORY[0x1E4F98AA8] currentDevice];
    [v8 deviceClass];
  }
  id v7 = NSString;
  uint64_t v9 = _WBSLocalizedString();
  uint64_t v10 = objc_msgSend(v7, "stringWithFormat:", v9, v6);

  return v10;
}

- (void)_initiateUpgradeToSignInWithApple
{
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_1(&dword_1A690B000, v0, v1, "Remote password saving view controller cannot perform upgrades.", v2, v3, v4, v5, v6);
}

- (void)_initiateChangeToStrongPassword
{
  id v3 = objc_alloc(MEMORY[0x1E4F18AB0]);
  uint64_t v4 = [(NSArray *)self->_protectionSpacesToUpdate firstObject];
  uint64_t v5 = [v4 host];
  uint8_t v6 = objc_msgSend(v5, "safari_highLevelDomainFromHost");
  id v7 = (void *)[v3 initWithIdentifier:v6 type:0];

  uint64_t v8 = [(SFPasswordSavingServiceViewController *)self _remoteViewControllerProxy];
  if (objc_opt_respondsToSelector())
  {
    uint64_t v9 = [(SFPasswordSavingServiceViewController *)self _remoteViewControllerProxy];
    id v10 = objc_alloc(MEMORY[0x1E4F18AC8]);
    uint64_t v11 = [(NSURLCredential *)self->_credential user];
    uint64_t v12 = [(NSURLCredential *)self->_credential password];
    uint64_t v13 = (void *)[v10 initWithUser:v11 password:v12];
    [v9 performUpgradeToStrongPasswordForCredential:v13 serviceIdentifier:v7];
  }
  else
  {
    [v8 willDismissServiceViewController];
    long long v14 = WBS_LOG_CHANNEL_PREFIXAccountAuthenticationModificationExtension();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      -[SFPasswordSavingServiceViewController _initiateUpgradeToSignInWithApple]();
    }
  }
}

- (void)_openPasswordManagerToChangePasswordOnWebsite
{
  v11[2] = *MEMORY[0x1E4F143B8];
  id v3 = (void *)MEMORY[0x1E4F98C98];
  v10[0] = *MEMORY[0x1E4F99350];
  uint64_t v4 = [(NSURLCredential *)self->_credential user];
  v11[0] = v4;
  v10[1] = *MEMORY[0x1E4F99348];
  uint64_t v5 = [(NSArray *)self->_protectionSpacesToUpdate firstObject];
  uint8_t v6 = [v5 host];
  v11[1] = v6;
  id v7 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v11 forKeys:v10 count:2];
  uint64_t v8 = [v3 passwordManagerURLWithDictionary:v7];

  uint64_t v9 = [MEMORY[0x1E4F223E0] defaultWorkspace];
  [v9 openSensitiveURL:v8 withOptions:0];
}

- (void).cxx_destruct
{
  objc_storeStrong((id *)&self->_savedAccountStore, 0);
  objc_storeStrong((id *)&self->_accountModificationHostViewController, 0);
  objc_storeStrong((id *)&self->_accountModificationExtension, 0);
  objc_storeStrong((id *)&self->_passwordWarning, 0);
  objc_storeStrong((id *)&self->_autoFillQuirksManager, 0);
  objc_storeStrong((id *)&self->_prompt, 0);
  objc_storeStrong((id *)&self->_tokenForShowingPrompt, 0);
  objc_storeStrong((id *)&self->_credential, 0);
  objc_storeStrong((id *)&self->_domainForSavePasswordAction, 0);

  objc_storeStrong((id *)&self->_protectionSpacesToUpdate, 0);
}

void __131__SFPasswordSavingServiceViewController_credentialsSubmittedForWebsiteURL_user_password_passwordIsAutoGenerated_completionHandler___block_invoke_cold_1(void *a1, void *a2)
{
  id v3 = a1;
  uint64_t v4 = objc_msgSend(a2, "safari_privacyPreservingDescription");
  OUTLINED_FUNCTION_0_0(&dword_1A690B000, v5, v6, "Failed to find application record with error: %{public}@. Skipping security recommendation prompt.", v7, v8, v9, v10, 2u);
}

void __131__SFPasswordSavingServiceViewController_credentialsSubmittedForWebsiteURL_user_password_passwordIsAutoGenerated_completionHandler___block_invoke_cold_2()
{
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_1(&dword_1A690B000, v0, v1, "Nothing to do for received autogenerated password.", v2, v3, v4, v5, v6);
}

- (void)_checkIfWarningStoreAlreadyContainsCredentialWithCompletionHandler:.cold.1()
{
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_1(&dword_1A690B000, v0, v1, "Failed to find persistent identifier for credential. Skipping weak password warning.", v2, v3, v4, v5, v6);
}

void __94__SFPasswordSavingServiceViewController__configureSecurityPromptActionsWithCompletionHandler___block_invoke_2_cold_1(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 1048);
  id v3 = a2;
  uint64_t v4 = [v2 _plugIn];
  uint64_t v5 = [v4 localizedContainingName];
  OUTLINED_FUNCTION_0_0(&dword_1A690B000, v6, v7, "Failed to get Sign in with Apple authorization credential state for %@", v8, v9, v10, v11, 2u);
}

@end