unint64_t sub_191F2B0A0()
{
  char *v0;

  return sub_191F2B0A8(*v0);
}

unint64_t sub_191F2B0A8(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 2:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t _s19ExtensionFoundation03AppA7ProcessV11_auditTokenSo0E8_token_tavg_0()
{
  objc_msgSend(*v0, sel_auditToken);
  return v2;
}

unint64_t sub_191F2B230()
{
  uint64_t v1 = v0;
  sub_191FBA2F8();
  swift_bridgeObjectRelease();
  id v2 = *(id *)(v0 + OBJC_IVAR____EXExtensionProcessHandle_launchConfiguration);
  id v3 = objc_msgSend(v2, sel_description);
  sub_191FB9DC8();

  sub_191FB9E38();
  swift_bridgeObjectRelease();
  sub_191FB9E38();
  [*(id *)(v1 + OBJC_IVAR____EXExtensionProcessHandle_innerProcessHandle) pid];
  sub_191FBA578();
  sub_191FB9E38();
  swift_bridgeObjectRelease();
  return 0xD000000000000012;
}

uint64_t sub_191F2B3C4()
{
  uint64_t v1 = v0;
  sub_191FBA2F8();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____EXLaunchConfiguration__extensionIdentity), sel_bundleIdentifier);
  sub_191FB9DC8();

  sub_191FB9E38();
  swift_bridgeObjectRelease();
  sub_191FB9E38();
  id v3 = *(id *)(v1 + OBJC_IVAR____EXLaunchConfiguration_instanceIdentifier);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BD20);
  sub_191FB9E08();
  sub_191FB9E38();
  swift_bridgeObjectRelease();
  return 0x4449656C646E7562;
}

ValueMetadata *type metadata accessor for AppExtensionProcess()
{
  return &type metadata for AppExtensionProcess;
}

unsigned char *_s10AttachmentV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t _s10AttachmentV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

void sub_191F2B864(void *a1)
{
  swift_bridgeObjectRetain();
  int v3 = (void *)sub_191FB9DA8();
  swift_bridgeObjectRelease();
  int v4 = (void *)sub_191FB9DA8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v3, v4);

  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)sub_191FB9DA8();
  swift_bridgeObjectRelease();
  unsigned int v6 = (void *)sub_191FB9DA8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v5, v6);

  if (*(void *)(v1 + OBJC_IVAR____EXDomainAttribute_sourceEnvironment + 8))
  {
    swift_bridgeObjectRetain();
    BOOL v7 = (void *)sub_191FB9DA8();
    swift_bridgeObjectRelease();
    id v8 = (id)sub_191FB9DA8();
    objc_msgSend(a1, sel_encodeObject_forKey_, v7, v8);
  }
}

id AppExtensionProcess._makeLibXPCConnection()()
{
  return sub_191F2BA54((SEL *)&selRef_makeLibXPCConnectionWithError_);
}

id sub_191F2BA54(SEL *a1)
{
  v7[1] = *(id *)MEMORY[0x1E4F143B8];
  int v2 = *v1;
  v7[0] = 0;
  id v3 = objc_msgSend(v2, *a1, v7);
  if (v3)
  {
    id v4 = v7[0];
  }
  else
  {
    id v5 = v7[0];
    sub_191FB9B18();

    swift_willThrow();
  }
  return v3;
}

xpc_connection_t sub_191F2BBB0()
{
  if (!objc_msgSend(*(id *)(*(void *)&v0[OBJC_IVAR____EXExtensionProcessHandle_launchConfiguration]+ OBJC_IVAR____EXLaunchConfiguration__extensionIdentity), sel_requiresLibXPCConnection))
  {
LABEL_13:
    v11 = self;
    v12 = (void *)sub_191FB9DA8();
    objc_msgSend(v11, sel__EX_errorWithCode_description_, 6, v12);

    return (xpc_connection_t)swift_willThrow();
  }
  uint64_t v1 = *(char **)&v0[OBJC_IVAR____EXExtensionProcessHandle_libXPCEndpoint];
  if (!v1
    || (int v2 = *(_xpc_endpoint_s **)&v1[OBJC_IVAR___EXConnectionEndpoint_xpcEndpoint]) == 0
    || (xpc_connection_t result = xpc_connection_create_from_endpoint(v2)) == 0)
  {
    if (qword_1E92FC798 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_191FB9CA8();
    __swift_project_value_buffer(v4, (uint64_t)qword_1E92FC7B0);
    id v5 = v0;
    unsigned int v6 = sub_191FB9C88();
    os_log_type_t v7 = sub_191FBA068();
    if (os_log_type_enabled(v6, v7))
    {
      id v8 = (uint8_t *)swift_slowAlloc();
      v9 = (void *)swift_slowAlloc();
      *(_DWORD *)id v8 = 138412290;
      if (v1) {
        v10 = v1;
      }
      sub_191FBA1C8();
      void *v9 = v1;

      _os_log_impl(&dword_191F29000, v6, v7, "Failed to create connection for extension from endpoint %@", v8, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
      swift_arrayDestroy();
      MEMORY[0x192FEBAE0](v9, -1, -1);
      MEMORY[0x192FEBAE0](v8, -1, -1);
    }
    else
    {
    }
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_191F2BF10(uint64_t a1, uint64_t a2)
{
  id v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  v3(a2);

  return swift_unknownObjectRelease();
}

id sub_191F2BF68(void *a1)
{
  objc_msgSend(a1, sel_setActivateOnResume);

  return objc_msgSend(a1, sel_setFaultOnSuspend);
}

void *sub_191F2C048(char a1)
{
  if (objc_msgSend(*(id *)(*(void *)&v1[OBJC_IVAR____EXExtensionProcessHandle_launchConfiguration]+ OBJC_IVAR____EXLaunchConfiguration__extensionIdentity), sel_requiresLibXPCConnection))
  {
    id v5 = self;
    unsigned int v6 = (void *)sub_191FB9DA8();
    objc_msgSend(v5, sel__EX_errorWithCode_description_, 6, v6);

    swift_willThrow();
  }
  else
  {
    os_log_type_t v7 = (void *)sub_191F2C180();
    if (!v2)
    {
      id v9 = v7;
      id v3 = v9;
      if (a1) {
        objc_setAssociatedObject(v9, "_EX_extensionProcess", v1, (void *)0x301);
      }
      v10 = (os_unfair_lock_s *)(*(void *)&v1[OBJC_IVAR____EXExtensionProcessHandle_xpcConnectionLock] + 16);
      os_unfair_lock_lock(v10);
      objc_msgSend(*(id *)&v1[OBJC_IVAR____EXExtensionProcessHandle_xpcConnections], sel_addObject_, v3);
      os_unfair_lock_unlock(v10);
    }
  }
  return v3;
}

uint64_t sub_191F2C180()
{
  uint64_t v2 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE40);
  MEMORY[0x1F4188790]();
  uint64_t v4 = (char *)v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR____EXExtensionProcessHandle_launchConfiguration);
  id v6 = objc_msgSend(*(id *)(v5 + OBJC_IVAR____EXLaunchConfiguration__extensionIdentity), sel_serviceName);
  uint64_t v40 = sub_191FB9DC8();
  unint64_t v8 = v7;

  if (qword_1E92FC798 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_191FB9CA8();
  uint64_t v10 = __swift_project_value_buffer(v9, (uint64_t)qword_1E92FC7B0);
  swift_bridgeObjectRetain_n();
  v11 = sub_191FB9C88();
  os_log_type_t v12 = sub_191FBA058();
  BOOL v13 = os_log_type_enabled(v11, v12);
  v39[2] = v10;
  if (v13)
  {
    v39[0] = v2;
    uint64_t v14 = swift_slowAlloc();
    v39[1] = v1;
    v15 = (uint8_t *)v14;
    uint64_t v16 = swift_slowAlloc();
    uint64_t aBlock = v16;
    *(_DWORD *)v15 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v47 = sub_191F4EB34(v40, v8, &aBlock);
    uint64_t v2 = v39[0];
    sub_191FBA1C8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_191F29000, v11, v12, "Creating connection for extension withidentifier: '%{public}s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FEBAE0](v16, -1, -1);
    MEMORY[0x192FEBAE0](v15, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v17 = *(void *)(v2 + OBJC_IVAR____EXExtensionProcessHandle_mainEndpoint);
  if (v17 && (v18 = *(void **)(v17 + OBJC_IVAR___EXConnectionEndpoint_bsServiceConnectionEndpoint)) != 0)
  {
    id v19 = v18;
    uint64_t v20 = v40;
  }
  else
  {
    uint64_t v21 = *(void *)(v5 + OBJC_IVAR____EXLaunchConfiguration_instanceIdentifier);
    uint64_t v20 = v40;
    if (v21)
    {
      uint64_t v22 = v21 + OBJC_IVAR____EXExtensionInstanceIdentifier_identifier;
      uint64_t v23 = sub_191FB9C68();
      uint64_t v24 = *(void *)(v23 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v4, v22, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v4, 0, 1, v23);
    }
    else
    {
      uint64_t v23 = sub_191FB9C68();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v4, 1, 1, v23);
    }
    swift_bridgeObjectRetain();
    v25 = (void *)sub_191FB9DA8();
    swift_bridgeObjectRelease();
    sub_191FB9C68();
    uint64_t v26 = *(void *)(v23 - 8);
    v27 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v4, 1, v23) != 1)
    {
      v27 = (void *)sub_191FB9C08();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v4, v23);
    }
    v28 = (void *)sub_191FB9DA8();
    id v19 = objc_msgSend(self, sel_endpointForServiceName_oneshot_service_instance_, v25, v27, v28, 0);

    if (!v19)
    {
      v18 = 0;
      goto LABEL_20;
    }
    v18 = v19;
  }
  id v29 = v19;
  v30 = self;
  v45 = sub_191F2BF64;
  uint64_t v46 = 0;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  unint64_t v42 = 1107296256;
  v43 = sub_191F2BF10;
  v44 = &block_descriptor_38_0;
  v31 = _Block_copy(&aBlock);
  swift_release();
  id v19 = objc_msgSend(v30, sel_NSXPCConnectionWithEndpoint_configurator_, v29, v31);
  _Block_release(v31);

  uint64_t result = swift_isEscapingClosureAtFileLocation();
  if ((result & 1) == 0)
  {
    if (v19)
    {
      swift_bridgeObjectRelease();

      return (uint64_t)v19;
    }
LABEL_20:
    swift_bridgeObjectRetain_n();
    v33 = sub_191FB9C88();
    os_log_type_t v34 = sub_191FBA068();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      uint64_t aBlock = v36;
      *(_DWORD *)v35 = 136315138;
      id v19 = v35 + 12;
      swift_bridgeObjectRetain();
      uint64_t v47 = sub_191F4EB34(v20, v8, &aBlock);
      sub_191FBA1C8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_191F29000, v33, v34, "Failed to create connection for extension: '%s'", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x192FEBAE0](v36, -1, -1);
      MEMORY[0x192FEBAE0](v35, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v37 = self;
    uint64_t aBlock = 0;
    unint64_t v42 = 0xE000000000000000;
    sub_191FBA2F8();
    swift_bridgeObjectRelease();
    uint64_t aBlock = 0xD000000000000026;
    unint64_t v42 = 0x8000000191FC81B0;
    sub_191FB9E38();
    swift_bridgeObjectRelease();
    v38 = (void *)sub_191FB9DA8();
    swift_bridgeObjectRelease();
    objc_msgSend(v37, sel__EX_errorWithCode_description_, 6, v38);

    swift_willThrow();
    return (uint64_t)v19;
  }
  __break(1u);
  return result;
}

uint64_t sub_191F2C8F0()
{
  sub_191F2C950();
  uint64_t result = sub_191FBA198();
  qword_1EB27C0C0 = result;
  return result;
}

unint64_t sub_191F2C950()
{
  unint64_t result = qword_1EB27C0D0;
  if (!qword_1EB27C0D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB27C0D0);
  }
  return result;
}

unint64_t sub_191F2CAA8()
{
  unint64_t result = qword_1E92FC498;
  if (!qword_1E92FC498)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1E92FC498);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_2Tm(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

void *__swift_project_boxed_opaque_existential_2Tm(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

id _EXAuditTokenGetEntitlementValue(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  uint64_t v5 = 0;
  if (a1 && v3)
  {
    id v6 = (void *)MEMORY[0x192FEB110]();
    [v4 UTF8String];
    unint64_t v7 = (void *)xpc_copy_entitlement_for_token();
    uint64_t v5 = (void *)_CFXPCCreateCFObjectFromXPCObject();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {

      uint64_t v5 = 0;
    }
  }

  return v5;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t _EXAuditTokenForCurrentProcess()
{
  if (_EXAuditTokenForCurrentProcess_once != -1) {
    dispatch_once(&_EXAuditTokenForCurrentProcess_once, &__block_literal_global_6);
  }
  return _EXAuditTokenForCurrentProcess_result;
}

id _EXDefaultLog()
{
  if (_EXDefaultLog_onceToken != -1) {
    dispatch_once(&_EXDefaultLog_onceToken, &__block_literal_global_9);
  }
  uint64_t v0 = (void *)_EXDefaultLog_log;

  return v0;
}

id _EXSignpostLog()
{
  if (_EXSignpostLog_onceToken != -1) {
    dispatch_once(&_EXSignpostLog_onceToken, &__block_literal_global_13);
  }
  uint64_t v0 = (void *)_EXSignpostLog_log;

  return v0;
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

id _EXExtractRequiredHostEntitlements(void *a1, void *a2)
{
  v12[1] = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  if ([v4 hasPrefix:@"com.apple."])
  {
    uint64_t v5 = objc_msgSend(v3, "_EX_dictionaryForKey:", @"EXRequiredHostEntitlements");
    if (!v5)
    {
      uint64_t v5 = objc_msgSend(v3, "_EX_dictionaryForKey:", @"EXRequiredEntitlements");
      if (!v5)
      {
        id v6 = +[_EXDefaults sharedInstance];
        int v7 = [v6 hostRequiresEntitlements];

        if (v7)
        {
          id v10 = v4;
          v11 = @"com.apple.extensionkit.host.extension-point-identifiers";
          unint64_t v8 = [MEMORY[0x1E4F1C978] arrayWithObjects:&v10 count:1];
          v12[0] = v8;
          uint64_t v5 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v12 forKeys:&v11 count:1];
        }
        else
        {
          uint64_t v5 = (void *)MEMORY[0x1E4F1CC08];
        }
      }
    }
  }
  else
  {
    uint64_t v5 = 0;
  }

  return v5;
}

void sub_191F2F110(uint64_t a1, void *a2, void *a3)
{
}

uint64_t destroy for _EXActiveQuery.ActiveQueryObserver()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_191F2F178()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 160) = v1;
  if (v1) {
    uint64_t v2 = sub_191FAC528;
  }
  else {
    uint64_t v2 = sub_191F32E6C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t EXExtensionMain(uint64_t a1, uint64_t *a2)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = (void *)MEMORY[0x192FEB110]();
  uint64_t v5 = getenv("EXTENSION_KIT_EXTENSION_TYPE");
  id v6 = _EXDefaultLog();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = *a2;
    int v12 = 136446466;
    uint64_t v13 = v7;
    __int16 v14 = 2082;
    v15 = v5;
  }

  +[_EXRunningExtensionInfo notifyExtensionMainCalled];
  if (v5)
  {
    unint64_t v8 = +[_EXRunningExtension sharedInstance];
    uint64_t v9 = [v8 startWithArguments:a2 count:a1];
  }
  else
  {
    if (_os_feature_enabled_impl()) {
      id v10 = EXPKService;
    }
    else {
      id v10 = (__objc2_class *)MEMORY[0x1E4F914A8];
    }
    uint64_t v9 = [(__objc2_class *)v10 _defaultRun:a1 arguments:a2];
  }
  return v9;
}

void sub_191F2FF1C(void *a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____EXExtensionProcessHandle_launchConfiguration);
  uint64_t v4 = (void *)sub_191FB9DA8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v3, v4);

  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____EXExtensionProcessHandle_innerProcessHandle);
  id v6 = (void *)sub_191FB9DA8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v5, v6);

  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____EXExtensionProcessHandle_mainEndpoint);
  unint64_t v8 = (void *)sub_191FB9DA8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v7, v8);

  uint64_t v9 = *(void *)(v1 + OBJC_IVAR____EXExtensionProcessHandle_sessionEndpoint);
  id v10 = (void *)sub_191FB9DA8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v9, v10);

  uint64_t v11 = *(void *)(v1 + OBJC_IVAR____EXExtensionProcessHandle_libXPCEndpoint);
  int v12 = (void *)sub_191FB9DA8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v11, v12);

  sub_191F442A4(0, (unint64_t *)&unk_1E92FC778);
  swift_bridgeObjectRetain();
  uint64_t v13 = (void *)sub_191FB9EC8();
  swift_bridgeObjectRelease();
  id v14 = (id)sub_191FB9DA8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v13, v14);
}

void sub_191F3015C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void sub_191F301E8(void *a1, void *a2)
{
  sub_191F301F0(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

void sub_191F301F0(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = (id *)(a3 + 16);
  if (a2)
  {
    if (qword_1EB27BDC0 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_191FB9CA8();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EB27BDE8);
    id v7 = a2;
    unint64_t v8 = sub_191FB9C88();
    os_log_type_t v9 = sub_191FBA068();
    if (os_log_type_enabled(v8, v9))
    {
      id v10 = (uint8_t *)swift_slowAlloc();
      v30 = (void *)swift_slowAlloc();
      *(_DWORD *)id v10 = 138543362;
      id v11 = v7;
      sub_191FBA1C8();
      void *v30 = a2;

      _os_log_impl(&dword_191F29000, v8, v9, "Launch failed with error: %{public}@", v10, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
      swift_arrayDestroy();
      MEMORY[0x192FEBAE0](v30, -1, -1);
      MEMORY[0x192FEBAE0](v10, -1, -1);
    }
    else
    {
    }
    swift_beginAccess();
    id v28 = *v4;
    *uint64_t v4 = a2;
    id v15 = v7;
  }
  else if (a1)
  {
    id v14 = a1;
    id v23 = sub_191F43BA0();
    uint64_t v24 = (id *)(a4 + 16);
    v25 = (os_unfair_lock_s *)(*(void *)&v14[OBJC_IVAR____EXExtensionProcessHandle_invalidationLock] + 16);
    os_unfair_lock_lock(v25);
    uint64_t v26 = *(void **)&v14[OBJC_IVAR____EXExtensionProcessHandle_assertion];
    *(void *)&v14[OBJC_IVAR____EXExtensionProcessHandle_assertion] = v23;
    id v27 = v23;

    *(void *)&v14[OBJC_IVAR____EXExtensionProcessHandle_assertionAquireCount] = 1;
    os_unfair_lock_unlock(v25);

    swift_beginAccess();
    id v28 = *v24;
    *uint64_t v24 = a1;
  }
  else
  {
    if (qword_1EB27BDC0 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_191FB9CA8();
    __swift_project_value_buffer(v16, (uint64_t)qword_1EB27BDE8);
    uint64_t v17 = sub_191FB9C88();
    os_log_type_t v18 = sub_191FBA068();
    if (os_log_type_enabled(v17, v18))
    {
      id v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = (void *)swift_slowAlloc();
      *(_DWORD *)id v19 = 138543362;
      sub_191FBA1C8();
      *uint64_t v20 = 0;
      _os_log_impl(&dword_191F29000, v17, v18, "Launch failed with error: %{public}@", v19, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
      swift_arrayDestroy();
      MEMORY[0x192FEBAE0](v20, -1, -1);
      MEMORY[0x192FEBAE0](v19, -1, -1);
    }

    swift_beginAccess();
    if (*v4)
    {
      id v21 = *v4;
      uint64_t v22 = (void *)sub_191FB9B08();
    }
    else
    {
      uint64_t v22 = 0;
    }
    id v29 = objc_msgSend(self, sel__EX_errorWithCode_underlyingError_, 2, v22);

    swift_beginAccess();
    id v28 = *v4;
    *uint64_t v4 = v29;
  }
}

uint64_t AppExtensionProcess.Configuration.init(appExtension:onInterruption:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v7 = *a1;
  unint64_t v8 = (int *)type metadata accessor for AppExtensionProcess.Configuration(0);
  uint64_t v9 = v8[6];
  if (qword_1E92FC800 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for AppExtensionProcess._InstanceIdentifier(0);
  uint64_t v11 = __swift_project_value_buffer(v10, (uint64_t)qword_1E92FC7E0);
  sub_191F38EA8(v11, (uint64_t)a4 + v9, type metadata accessor for AppExtensionProcess._InstanceIdentifier);
  *((unsigned char *)a4 + v8[7]) = 0;
  uint64_t v12 = v8[8];
  uint64_t result = sub_191F45CC0();
  *(void *)((char *)a4 + v12) = result;
  *a4 = v7;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t static AppExtension.main()(uint64_t a1, Class a2)
{
  uint64_t v3 = v2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v46 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  v45 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  v54 = (char *)&v41 - v10;
  uint64_t v11 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v14 = sub_191FBA058();
  if (qword_1EB27C0C8 != -1) {
    swift_once();
  }
  id v15 = qword_1EB27C0C0;
  if (os_log_type_enabled((os_log_t)qword_1EB27C0C0, v14))
  {
    v44 = (void (*)(uint64_t, Class))AssociatedTypeWitness;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v42 = v2;
    uint64_t v17 = (uint8_t *)v16;
    uint64_t v18 = swift_slowAlloc();
    Class v43 = a2;
    id v19 = (void *)v18;
    *(_DWORD *)uint64_t v17 = 138412290;
    v41 = v17 + 4;
    uint64_t v20 = v13;
    uint64_t v21 = a1;
    uint64_t v22 = v11;
    id v23 = objc_msgSend(self, sel_sharedInstance);
    *(void *)&v53[0] = v23;
    sub_191FBA1C8();
    *id v19 = v23;
    uint64_t v11 = v22;
    a1 = v21;
    uint64_t v13 = v20;
    uint64_t AssociatedTypeWitness = (uint64_t)v44;
    _os_log_impl(&dword_191F29000, v15, v14, "Launching non-UI extension %@", v17, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
    swift_arrayDestroy();
    uint64_t v24 = v19;
    a2 = v43;
    MEMORY[0x192FEBAE0](v24, -1, -1);
    v25 = v17;
    uint64_t v3 = v42;
    MEMORY[0x192FEBAE0](v25, -1, -1);
  }
  (*((void (**)(uint64_t, Class))a2 + 4))(a1, a2);
  uint64_t v26 = sub_191FBA2A8();
  sub_191F30F00(v26);
  if (v3)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v44 = (void (*)(uint64_t, Class))*((void *)a2 + 3);
    v44(a1, a2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27C090);
    if ((swift_dynamicCast() & 1) == 0) {
      memset(v53, 0, 48);
    }
    sub_191F3151C((uint64_t)v53, (uint64_t)&v47);
    if (v48)
    {
      sub_191F31504(&v47, &v49);
      id v28 = objc_msgSend(self, sel_sharedInstance);
      uint64_t v29 = v50;
      uint64_t v30 = v51;
      v31 = v13;
      uint64_t v32 = v52;
      v33 = __swift_project_boxed_opaque_existential_2Tm(&v49, v50);
      id v34 = objc_allocWithZone((Class)type metadata accessor for AppExtensionWrapper());
      id v35 = sub_191F311EC((uint64_t)v33, v29, v30, v32);
      objc_msgSend(v28, sel_setExtension_, v35);

      (*(void (**)(char *, uint64_t))(v11 + 8))(v31, a1);
      __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)&v49);
    }
    else
    {
      sub_191F4CB7C((uint64_t)&v47, &qword_1EB27C088);
      v54 = (char *)objc_msgSend(self, sel_sharedInstance);
      Class v43 = (Class)type metadata accessor for AppExtensionWrapper();
      uint64_t v36 = (uint64_t)v45;
      v44(a1, a2);
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      id v38 = objc_allocWithZone(v43);
      id v39 = sub_191F81F68(v36, AssociatedTypeWitness, AssociatedConformanceWitness);
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v36, AssociatedTypeWitness);
      id v40 = v54;
      objc_msgSend(v54, sel_setExtension_, v39);

      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, a1);
    }
    return sub_191F4CB7C((uint64_t)v53, &qword_1EB27C088);
  }
}

uint64_t sub_191F30F00(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_191FB9CE8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_191F310B8(a1);
  if (v9)
  {
    unint64_t v10 = result;
    unint64_t v11 = v9;
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_191F56500(v10, v11);
    unint64_t v14 = v13;
    sub_191FB9A18();
    swift_allocObject();
    sub_191FB9A08();
    sub_191F54B74((unint64_t *)&unk_1E92FC690);
    sub_191FB99F8();
    if (v2)
    {
      sub_191F4CE58(v12, v14);
      swift_bridgeObjectRelease();
      return swift_release();
    }
    else
    {
      swift_release();
      sub_191F54BB8();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      sub_191F4CE58(v12, v14);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_191F310B8(uint64_t result)
{
  uint64_t v1 = result;
  unint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    uint64_t result = *(void *)(result + 32);
    if (result != 0x6B726F7774654E2DLL || *(void *)(v1 + 40) != 0xED00004449707041)
    {
      uint64_t result = sub_191FBA598();
      if ((result & 1) == 0)
      {
        uint64_t v6 = (void *)(v1 + 56);
        uint64_t v7 = 1;
        while (v2 != v7)
        {
          uint64_t v4 = v7;
          uint64_t result = *(v6 - 1);
          if (result != 0x6B726F7774654E2DLL || *v6 != 0xED00004449707041)
          {
            uint64_t result = sub_191FBA598();
            uint64_t v7 = v4 + 1;
            v6 += 2;
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_8;
        }
        return 0;
      }
    }
  }
  uint64_t v4 = 0;
LABEL_8:
  if (v4 >= (uint64_t)(v2 - 1)) {
    return 0;
  }
  if (v4 + 1 < v2)
  {
    uint64_t v5 = *(void *)(v1 + 16 * (v4 + 1) + 32);
    swift_bridgeObjectRetain();
    return v5;
  }
  __break(1u);
  return result;
}

id sub_191F311EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v9 = sub_191F313D4(a1, a2, a3, a4);
  unint64_t v10 = (uint64_t (**)())&v4[OBJC_IVAR____TtC19ExtensionFoundation19AppExtensionWrapper__accept];
  uint8_t *v10 = v9;
  v10[1] = v11;
  uint64_t v12 = sub_191F312A4(a1, a2, a3, a4);
  unint64_t v13 = (uint64_t (**)())&v4[OBJC_IVAR____TtC19ExtensionFoundation19AppExtensionWrapper__handleConnection];
  *unint64_t v13 = v12;
  v13[1] = v14;
  v16.receiver = v4;
  v16.super_class = (Class)type metadata accessor for AppExtensionWrapper();
  return objc_msgSendSuper2(&v16, sel_init);
}

uint64_t type metadata accessor for AppExtensionWrapper()
{
  return self;
}

uint64_t (*sub_191F312A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v7 = *(void *)(a2 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](a1);
  unint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v11 = (char *)swift_allocObject();
  *((void *)v11 + 2) = a2;
  *((void *)v11 + 3) = a3;
  *((void *)v11 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v11[v10], v9, a2);
  return sub_191F32C88;
}

uint64_t (*sub_191F313D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  uint64_t v7 = *(void *)(a2 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](a1);
  unint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v11 = (char *)swift_allocObject();
  *((void *)v11 + 2) = a2;
  *((void *)v11 + 3) = a3;
  *((void *)v11 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v11[v10], v9, a2);
  return sub_191F8209C;
}

_OWORD *sub_191F31504(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

uint64_t sub_191F3151C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27C088);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_191F319E4(void *a1, void (**a2)(void, void, void))
{
  id v4 = objc_msgSend(self, sel_currentConnection);
  if (!v4)
  {
    _Block_release(a2);
    __break(1u);
    return;
  }
  uint64_t v5 = v4;
  if (qword_1EB27BDC0 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_191FB9CA8();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EB27BDE8);
  id v7 = a1;
  id v8 = v5;
  id v9 = v7;
  id v10 = v8;
  unint64_t v11 = sub_191FB9C88();
  os_log_type_t v12 = sub_191FBA058();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    id v40 = a2;
    unint64_t v14 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 138543618;
    id v39 = v5;
    id v15 = v10;
    id v16 = v9;
    sub_191FBA1C8();
    *unint64_t v14 = v9;

    *(_WORD *)(v13 + 12) = 2114;
    unint64_t aBlock = (unint64_t)v10;
    id v17 = v10;
    sub_191FBA1C8();
    v14[1] = v39;

    id v10 = v15;
    _os_log_impl(&dword_191F29000, v11, v12, "Preparing extension %{public}@ for host: %{public}@", (uint8_t *)v13, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
    swift_arrayDestroy();
    uint64_t v18 = v14;
    a2 = v40;
    MEMORY[0x192FEBAE0](v18, -1, -1);
    MEMORY[0x192FEBAE0](v13, -1, -1);
  }
  else
  {
  }
  objc_msgSend(v10, sel_auditToken, v39);
  id v19 = (char *)(id)sub_191F47588((char *)v9, aBlock, v43, (unint64_t)v44, (unint64_t)v45);
  uint64_t v20 = sub_191FB9C88();
  os_log_type_t v21 = sub_191FBA058();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    v41 = (void *)swift_slowAlloc();
    unint64_t aBlock = (unint64_t)v19;
    *(_DWORD *)uint64_t v22 = 138543362;
    id v23 = v10;
    uint64_t v24 = v19;
    sub_191FBA1C8();
    void *v41 = v19;

    id v10 = v23;
    _os_log_impl(&dword_191F29000, v20, v21, "launched extension process: %{public}@", v22, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
    swift_arrayDestroy();
    MEMORY[0x192FEBAE0](v41, -1, -1);
    MEMORY[0x192FEBAE0](v22, -1, -1);
  }
  else
  {
  }
  ((void (**)(void, char *, void))a2)[2](a2, v19, 0);
  v25 = *(void **)&v19[OBJC_IVAR____EXExtensionProcessHandle_assertion];
  if (v25)
  {
    sub_191F442A4(0, (unint64_t *)&qword_1EB27BFC8);
    id v26 = v25;
    id v27 = sub_191FBA0C8();
    id v28 = (void *)swift_allocObject();
    v28[2] = v19;
    v28[3] = v10;
    v28[4] = v26;
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = sub_191F381B0;
    *(void *)(v29 + 24) = v28;
    uint64_t v46 = sub_191F35FC8;
    uint64_t v47 = v29;
    unint64_t aBlock = MEMORY[0x1E4F143A8];
    unint64_t v43 = 1107296256;
    v44 = sub_191F35F98;
    v45 = &block_descriptor_28;
    uint64_t v30 = _Block_copy(&aBlock);
    id v31 = v10;
    id v19 = v19;
    id v32 = v26;
    swift_retain();
    swift_release();
    dispatch_sync(v27, v30);

    _Block_release(v30);
    LOBYTE(v30) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((v30 & 1) == 0) {
      return;
    }
    __break(1u);
  }
  v33 = v19;
  id v34 = sub_191FB9C88();
  os_log_type_t v35 = sub_191FBA068();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = (uint8_t *)swift_slowAlloc();
    v37 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v36 = 138412290;
    unint64_t aBlock = (unint64_t)v33;
    id v38 = v33;
    sub_191FBA1C8();
    void *v37 = v19;

    _os_log_impl(&dword_191F29000, v34, v35, "No assertion taken during launch of %@", v36, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
    swift_arrayDestroy();
    MEMORY[0x192FEBAE0](v37, -1, -1);
    MEMORY[0x192FEBAE0](v36, -1, -1);
  }
  else
  {
  }
}

uint64_t sub_191F32194@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_191F46DA0(a1, a2);
}

id sub_191F322F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_191FB9CF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_191FB9D18();
  uint64_t v8 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  id v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = objc_msgSend(self, sel_currentConnection);
  if (result)
  {
    os_log_type_t v12 = result;
    sub_191F442A4(0, (unint64_t *)&qword_1EB27BFC8);
    uint64_t v13 = (void *)sub_191FBA0C8();
    unint64_t v14 = (void *)swift_allocObject();
    v14[2] = v12;
    v14[3] = a1;
    v14[4] = a2;
    aBlock[4] = sub_191F342CC;
    aBlock[5] = v14;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_191F34288;
    aBlock[3] = &block_descriptor_19;
    id v15 = _Block_copy(aBlock);
    id v16 = v12;
    swift_retain();
    swift_release();
    sub_191FB9D08();
    aBlock[0] = MEMORY[0x1E4FBC860];
    sub_191F3B15C((unint64_t *)&qword_1EB27BD30, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BD00);
    sub_191F328F0();
    sub_191FBA1F8();
    MEMORY[0x192FEA2E0](0, v10, v7, v15);
    _Block_release(v15);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v18);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_191F325F0()
{
  uint64_t v1 = sub_191FB9CF8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_191FB9D18();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v0, sel_checkIn);
  objc_msgSend(v0, sel_willFinishLaunching);
  sub_191F32994();
  uint64_t v9 = (void *)sub_191FBA0C8();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v0;
  aBlock[4] = sub_191F359E4;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_191F34288;
  aBlock[3] = &block_descriptor_8;
  unint64_t v11 = _Block_copy(aBlock);
  id v12 = v0;
  swift_release();
  sub_191FB9D08();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_191F329D4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BD00);
  sub_191F328F0();
  sub_191FBA1F8();
  MEMORY[0x192FEA2E0](0, v8, v4, v11);
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  xpc_main((xpc_connection_handler_t)sub_191F32B64);
}

unint64_t sub_191F328F0()
{
  unint64_t result = qword_1EB27BD40;
  if (!qword_1EB27BD40)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EB27BD00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB27BD40);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_191F32994()
{
  unint64_t result = qword_1EB27BFC8;
  if (!qword_1EB27BFC8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB27BFC8);
  }
  return result;
}

unint64_t sub_191F329D4()
{
  unint64_t result = qword_1EB27BD30;
  if (!qword_1EB27BD30)
  {
    sub_191FB9CF8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB27BD30);
  }
  return result;
}

uint64_t AppExtensionProcess.Configuration._instanceIdentifier.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppExtensionProcess.Configuration(0) + 24);

  return sub_191F32B00(a1, v3);
}

uint64_t AppExtensionProcess.init(configuration:)(uint64_t a1, uint64_t a2)
{
  v2[16] = a1;
  v2[17] = a2;
  type metadata accessor for AppExtensionProcess.Configuration(0);
  v2[18] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_191F38C84, 0, 0);
}

uint64_t sub_191F32B00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppExtensionProcess._InstanceIdentifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_191F32B64(uint64_t a1)
{
  type metadata accessor for _EXRunningLibXPCServiceExtension();
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  swift_unknownObjectRetain();
  uint64_t v3 = (char *)objc_msgSend(ObjCClassFromMetadata, sel_sharedInstance);
  uint64_t v4 = *(void (**)(uint64_t))&v3[OBJC_IVAR____EXRunningLibXPCServiceExtension_connectionHandler];
  sub_191F45B34((uint64_t)v4);

  if (v4)
  {
    v4(a1);
    sub_191F45B24((uint64_t)v4);
  }

  return swift_unknownObjectRelease();
}

uint64_t sub_191F32C88()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 32) + 8))();
}

id sub_191F32CF8(uint64_t a1)
{
  return objc_msgSend(*(id *)(v1 + 16), sel_handleConnection_, a1);
}

uint64_t sub_191F32D0C(uint64_t a1, uint64_t a2)
{
  type metadata accessor for _EXRunningLibXPCServiceExtension();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_entryPointFunction);
  if (!v5) {
    return 1;
  }
  uint64_t v6 = v5(a2, a1);
  id v7 = objc_msgSend(v2, sel_extension);
  objc_msgSend(v7, sel_setHasSwiftEntryPoint_, 1);

  id v8 = objc_msgSend(v2, sel_extension);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  uint64_t v10 = (id (**)(uint64_t))&v2[OBJC_IVAR____EXRunningLibXPCServiceExtension_connectionHandler];
  uint64_t v11 = *(void *)&v2[OBJC_IVAR____EXRunningLibXPCServiceExtension_connectionHandler];
  char *v10 = sub_191F32CF8;
  v10[1] = (id (*)(uint64_t))v9;
  sub_191F45B24(v11);
  return v6;
}

uint64_t type metadata accessor for _EXRunningLibXPCServiceExtension()
{
  return self;
}

uint64_t sub_191F32E6C()
{
  uint64_t v1 = (void *)v0[19];
  uint64_t v2 = (void *)v0[16];
  sub_191F32F04(v0[17], type metadata accessor for AppExtensionProcess.Configuration);
  uint64_t v3 = v0[15];

  *uint64_t v2 = v3;
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_191F32F04(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_191F32F8C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = &v2[OBJC_IVAR____EXDomainAttribute_sourceEnvironment];
  sub_191F442A4(0, &qword_1E92FC850);
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  uint64_t v5 = v2;
  uint64_t v6 = (void *)sub_191FBA128();
  if (v6)
  {
    sub_191FB9DB8();

    uint64_t v7 = sub_191FBA128();
    if (v7)
    {
      id v8 = (void *)v7;
LABEL_5:
      sub_191FB9DB8();
    }
  }
  else
  {
    id v8 = (void *)sub_191FBA128();
    if (v8) {
      goto LABEL_5;
    }
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for _EXDomainAttribute();
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t sub_191F33214(void *a1)
{
  uint64_t v3 = sub_191FB9CE8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BE10);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v56 = (uint64_t)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = *(id *)(v1 + OBJC_IVAR____EXLaunchConfiguration__extensionIdentity);
  uint64_t v10 = (void *)sub_191FB9DA8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v9, v10);

  id v11 = *(id *)(v1 + OBJC_IVAR____EXLaunchConfiguration_instanceIdentifier);
  id v12 = (void *)sub_191FB9DA8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v11, v12);

  if (*(void *)(v1 + OBJC_IVAR____EXLaunchConfiguration_sandboxProfileName + 8))
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_191FB9DA8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = 0;
  }
  unint64_t v14 = (void *)sub_191FB9DA8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v13, v14);
  swift_unknownObjectRelease();

  if (*(void *)(v1 + OBJC_IVAR____EXLaunchConfiguration_preferredLanguages))
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_191FB9EC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = 0;
  }
  id v16 = (void *)sub_191FB9DA8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v15, v16);
  swift_unknownObjectRelease();

  swift_bridgeObjectRetain();
  uint64_t v17 = (void *)sub_191FB9D48();
  swift_bridgeObjectRelease();
  uint64_t v18 = (void *)sub_191FB9DA8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v17, v18);

  id v19 = *(id *)(v1 + OBJC_IVAR____EXLaunchConfiguration_launchPersona);
  uint64_t v20 = (void *)sub_191FB9DA8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v19, v20);

  uint64_t v55 = v1;
  unint64_t v21 = *(void *)(v1 + OBJC_IVAR____EXLaunchConfiguration_assertionAttributes);
  if (v21 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_191FBA478();
    if (v22) {
      goto LABEL_9;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v22) {
    goto LABEL_20;
  }
LABEL_9:
  uint64_t v58 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_191FBA398();
  if (v22 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v51 = v6;
  uint64_t v52 = v4;
  v53 = a1;
  uint64_t v54 = v3;
  uint64_t v24 = 0;
  unint64_t v57 = v21 & 0xC000000000000001;
  do
  {
    if (v57) {
      id v29 = (id)MEMORY[0x192FEA540](v24, v21);
    }
    else {
      id v29 = *(id *)(v21 + 8 * v24 + 32);
    }
    uint64_t v30 = v29;
    id v31 = (objc_class *)type metadata accessor for _EXDomainAttribute();
    id v32 = (char *)objc_allocWithZone(v31);
    v33 = (uint64_t *)&v32[OBJC_IVAR____EXDomainAttribute_sourceEnvironment];
    uint64_t *v33 = 0;
    v33[1] = 0;
    id v34 = v32;
    id v35 = objc_msgSend(v30, sel_domain);
    uint64_t v36 = sub_191FB9DC8();
    uint64_t v38 = v37;

    id v39 = (uint64_t *)&v34[OBJC_IVAR____EXDomainAttribute_domain];
    *id v39 = v36;
    v39[1] = v38;
    id v40 = objc_msgSend(v30, sel_name);
    uint64_t v41 = sub_191FB9DC8();
    uint64_t v43 = v42;

    v44 = (uint64_t *)&v34[OBJC_IVAR____EXDomainAttribute_name];
    uint64_t *v44 = v41;
    v44[1] = v43;
    id v45 = objc_msgSend(v30, sel_sourceEnvironment);
    if (v45)
    {
      v25 = v45;
      uint64_t v26 = sub_191FB9DC8();
      uint64_t v28 = v27;
    }
    else
    {
      uint64_t v26 = 0;
      uint64_t v28 = 0;
    }
    ++v24;
    uint64_t *v33 = v26;
    v33[1] = v28;

    swift_bridgeObjectRelease();
    v59.receiver = v34;
    v59.super_class = v31;
    objc_msgSendSuper2(&v59, sel_init);

    sub_191FBA368();
    sub_191FBA3A8();
    sub_191FBA3B8();
    sub_191FBA378();
  }
  while (v22 != v24);
  swift_bridgeObjectRelease();
  a1 = v53;
  uint64_t v3 = v54;
  uint64_t v6 = v51;
  uint64_t v4 = v52;
LABEL_21:
  type metadata accessor for _EXDomainAttribute();
  uint64_t v46 = (void *)sub_191FB9EC8();
  swift_bridgeObjectRelease();
  uint64_t v47 = (void *)sub_191FB9DA8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v46, v47);

  uint64_t v48 = v55 + OBJC_IVAR____EXLaunchConfiguration_networkApplicationID;
  swift_beginAccess();
  uint64_t v49 = v48;
  uint64_t v50 = v56;
  sub_191F4CBD8(v49, v56, &qword_1EB27BE10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v50, 1, v3)) {
    return sub_191F4CB7C(v50, &qword_1EB27BE10);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v50, v3);
  sub_191F4CB7C(v50, &qword_1EB27BE10);
  sub_191F81230(a1);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t type metadata accessor for _EXDomainAttribute()
{
  return self;
}

uint64_t _EXExtensionProcessHandle.init(coder:)(char **a1)
{
  uint64_t v3 = OBJC_IVAR____EXExtensionProcessHandle_xpcConnectionLock;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE60);
  uint64_t v4 = swift_allocObject();
  *(_DWORD *)(v4 + 16) = 0;
  *(void *)&v1[v3] = v4;
  uint64_t v5 = OBJC_IVAR____EXExtensionProcessHandle_xpcConnections;
  uint64_t v6 = self;
  uint64_t v7 = v1;
  *(void *)&v1[v5] = objc_msgSend(v6, sel_weakObjectsHashTable);
  uint64_t v8 = OBJC_IVAR____EXExtensionProcessHandle_observersLock;
  uint64_t v9 = swift_allocObject();
  *(_DWORD *)(v9 + 16) = 0;
  *(void *)&v7[v8] = v9;
  uint64_t v10 = OBJC_IVAR____EXExtensionProcessHandle_observers;
  *(void *)&v7[v10] = objc_msgSend(self, sel_weakObjectsHashTable);
  v7[OBJC_IVAR____EXExtensionProcessHandle_invalidationLock_invalidated] = 0;
  uint64_t v11 = OBJC_IVAR____EXExtensionProcessHandle_invalidationLock;
  uint64_t v12 = swift_allocObject();
  *(_DWORD *)(v12 + 16) = 0;
  *(void *)&v7[v11] = v12;
  uint64_t v13 = MEMORY[0x1E4FBC860];
  uint64_t v14 = OBJC_IVAR____EXExtensionProcessHandle_sandboxExtensions;
  *(void *)&v7[OBJC_IVAR____EXExtensionProcessHandle_sandboxExtensions] = MEMORY[0x1E4FBC860];
  swift_unknownObjectWeakInit();
  *(void *)&v7[OBJC_IVAR____EXExtensionProcessHandle_launchAssertion] = 0;
  *(void *)&v7[OBJC_IVAR____EXExtensionProcessHandle_assertionAquireCount] = 0;
  *(void *)&v7[OBJC_IVAR____EXExtensionProcessHandle_assertion] = 0;
  sub_191F442A4(0, &qword_1E92FC768);
  uint64_t result = sub_191FBA128();
  if (!result)
  {
    __break(1u);
    goto LABEL_34;
  }
  p_name = &OBJC_PROTOCOL___EXEnumeratorConfig.name;
  *(void *)&v7[OBJC_IVAR____EXExtensionProcessHandle_innerProcessHandle] = result;
  type metadata accessor for EXConnectionEndpoint();
  *(void *)&v7[OBJC_IVAR____EXExtensionProcessHandle_mainEndpoint] = sub_191FBA128();
  *(void *)&v7[OBJC_IVAR____EXExtensionProcessHandle_sessionEndpoint] = sub_191FBA128();
  *(void *)&v7[OBJC_IVAR____EXExtensionProcessHandle_libXPCEndpoint] = sub_191FBA128();
  type metadata accessor for _EXLaunchConfiguration(0);
  uint64_t result = sub_191FBA128();
  if (!result)
  {
LABEL_34:
    __break(1u);
    return result;
  }
  uint64_t v17 = (uint64_t)&OBJC_PROTOCOL___EXEnumeratorConfig.name;
  *(void *)&v7[OBJC_IVAR____EXExtensionProcessHandle_launchConfiguration] = result;
  sub_191F442A4(0, (unint64_t *)&unk_1E92FC778);
  uint64_t v18 = sub_191FBA148();
  if (v18) {
    uint64_t v19 = v18;
  }
  else {
    uint64_t v19 = v13;
  }
  *(void *)&v7[v14] = v19;

  swift_bridgeObjectRelease();
  v58.receiver = v7;
  v58.super_class = (Class)type metadata accessor for _EXExtensionProcessHandle();
  id v20 = objc_msgSendSuper2(&v58, sel_init);
  unint64_t v21 = self;
  unint64_t v22 = (unint64_t)v20;
  if (!objc_msgSend(v21, sel_sandboxed)) {
    goto LABEL_29;
  }
  uint64_t v23 = OBJC_IVAR____EXExtensionProcessHandle_sandboxExtensions;
  unint64_t v24 = *(void *)(v22 + OBJC_IVAR____EXExtensionProcessHandle_sandboxExtensions);
  if (v24 >> 62) {
    goto LABEL_28;
  }
  if (!*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_29:

    return v22;
  }
  while (1)
  {
    if (qword_1EB27BDC0 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_191FB9CA8();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EB27BDE8);
    uint64_t v26 = (id)v22;
    uint64_t v27 = sub_191FB9C88();
    os_log_type_t v28 = sub_191FBA058();
    uint64_t v50 = a1;
    unint64_t v51 = v22;
    uint64_t v55 = v26;
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v56 = v23;
      uint64_t v29 = swift_slowAlloc();
      uint64_t v30 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 138543618;
      id v31 = *(Class *)((char *)&v26->isa + *(void *)(v17 + 2744));
      id v32 = v31;
      p_name = &OBJC_PROTOCOL___EXEnumeratorConfig.name;
      sub_191FBA1C8();
      void *v30 = v31;

      *(_WORD *)(v29 + 12) = 1026;
      objc_msgSend(*(id *)((char *)&v26->isa + OBJC_IVAR____EXExtensionProcessHandle_innerProcessHandle), "pid", v50);

      uint64_t v17 = 0x1E92FD000;
      sub_191FBA1C8();

      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
      swift_arrayDestroy();
      MEMORY[0x192FEBAE0](v30, -1, -1);
      uint64_t v33 = v29;
      uint64_t v23 = v56;
      unint64_t v22 = v51;
      MEMORY[0x192FEBAE0](v33, -1, -1);
    }
    else
    {

      uint64_t v27 = v26;
    }

    unint64_t v22 = *(void *)(v22 + v23);
    if (v22 >> 62) {
      break;
    }
    uint64_t v34 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    id v35 = v26;
    if (!v34) {
      goto LABEL_31;
    }
LABEL_16:
    v53 = p_name[344];
    uint64_t v54 = *(void *)(v17 + 2744);
    uint64_t v17 = v22 & 0xC000000000000001;
    uint64_t v23 = 4;
    uint64_t v36 = &selRef_setExplanation_;
    uint64_t v57 = v34;
    unint64_t v52 = v22 & 0xC000000000000001;
    while (1)
    {
      uint64_t v38 = v17 ? (char **)MEMORY[0x192FEA540](v23 - 4, v22) : (char **)*(id *)(v22 + 8 * v23);
      a1 = v38;
      uint64_t v39 = v23 - 3;
      if (__OFADD__(v23 - 4, 1)) {
        break;
      }
      if (([v38 v36[73]] & 1) == 0)
      {
        p_name = v35;
        uint64_t v37 = sub_191FB9C88();
        os_log_type_t v40 = sub_191FBA068();
        if (os_log_type_enabled(v37, v40))
        {
          uint64_t v41 = swift_slowAlloc();
          unint64_t v42 = v22;
          uint64_t v43 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v41 = 138543618;
          v44 = *(Class *)((char *)&v35->isa + v54);
          *(void *)(v41 + 4) = v44;
          *uint64_t v43 = v44;
          id v45 = v44;

          *(_WORD *)(v41 + 12) = 1026;
          unsigned int v46 = [*(id *)&v53[(void)v35] pid];

          *(_DWORD *)(v41 + 14) = v46;
          id v35 = v55;

          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
          swift_arrayDestroy();
          uint64_t v47 = v43;
          unint64_t v22 = v42;
          MEMORY[0x192FEBAE0](v47, -1, -1);
          uint64_t v48 = v41;
          uint64_t v17 = v52;
          MEMORY[0x192FEBAE0](v48, -1, -1);
        }
        else
        {

          uint64_t v37 = p_name;
          a1 = p_name;
        }
        uint64_t v34 = v57;

        uint64_t v36 = &selRef_setExplanation_;
      }

      ++v23;
      if (v39 == v34) {
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_28:
    swift_bridgeObjectRetain();
    uint64_t v49 = sub_191FBA478();
    swift_bridgeObjectRelease();
    if (!v49) {
      goto LABEL_29;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v34 = sub_191FBA478();
  id v35 = v26;
  if (v34) {
    goto LABEL_16;
  }
LABEL_31:

  swift_bridgeObjectRelease();
  return v51;
}

uint64_t sub_191F34288(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_191F342CC()
{
  return sub_191F342D8(*(void **)(v0 + 16), *(uint64_t (**)(void))(v0 + 24));
}

uint64_t sub_191F342D8(void *a1, uint64_t (*a2)(void))
{
  objc_msgSend(a1, sel_auditToken);
  uint64_t v3 = v25;
  uint64_t v4 = HIDWORD(v25);
  uint64_t v5 = v26;
  uint64_t v6 = v27;
  uint64_t v7 = v29;
  uint64_t v24 = v30;
  uint64_t v22 = v28;
  uint64_t v23 = v31;
  if (qword_1EB27BDC0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_191FB9CA8();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EB27BDE8);
  uint64_t v9 = sub_191FB9C88();
  os_log_type_t v10 = sub_191FBA058();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    unint64_t v21 = a2;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v25 = v12;
    unint64_t v13 = v3 | (v4 << 32);
    unint64_t v14 = v5 | (v6 << 32);
    *(_DWORD *)uint64_t v11 = 136315138;
    unint64_t v15 = v22 | (v7 << 32);
    unint64_t v16 = v24 | (v23 << 32);
    unint64_t v17 = sub_191FB15A8(v13, v14, v15, v16);
    sub_191F4EB34(v17, v18, &v25);
    sub_191FBA1C8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191F29000, v9, v10, "Releasing launch assertion for audit token '%s'.", v11, 0xCu);
    swift_arrayDestroy();
    uint64_t v19 = v12;
    a2 = v21;
    MEMORY[0x192FEBAE0](v19, -1, -1);
    MEMORY[0x192FEBAE0](v11, -1, -1);
  }
  else
  {

    unint64_t v13 = v25 | ((unint64_t)HIDWORD(v25) << 32);
    unint64_t v14 = v26 | ((unint64_t)v27 << 32);
    unint64_t v15 = v28 | ((unint64_t)v29 << 32);
    unint64_t v16 = v30 | ((unint64_t)v31 << 32);
  }
  sub_191F34510(v13, v14, v15, v16);
  return a2();
}

void sub_191F34510(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v5 = v4;
  unint64_t v22 = a3;
  unint64_t v23 = a4;
  uint64_t v8 = sub_191FB9D28();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (uint64_t *)((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = sub_191F442A4(0, (unint64_t *)&qword_1EB27BFC8);
  uint64_t *v11 = sub_191FBA0C8();
  uint64_t v12 = *MEMORY[0x1E4FBCBF0];
  uint64_t v24 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v9 + 104);
  v24(v11, v12, v8);
  char v13 = sub_191FB9D38();
  unint64_t v14 = *(void (**)(uint64_t *, uint64_t))(v9 + 8);
  v14(v11, v8);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  id v21 = v5;
  uint64_t v15 = sub_191F34B4C();
  swift_bridgeObjectRetain();
  a1 = sub_191F34DE0(a1, a2, v22, v23);
  char v17 = v16;
  swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
    uint64_t v19 = 0;
    goto LABEL_6;
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v26 = v15;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_10;
  }
  while (1)
  {
    uint64_t v19 = *(void **)(*(void *)(v15 + 56) + 8 * a1);
    sub_191F35434(a1, v15);
    swift_bridgeObjectRelease();
LABEL_6:
    uint64_t *v11 = sub_191FBA0C8();
    v24(v11, v12, v8);
    a1 = sub_191FB9D38();
    v14(v11, v8);
    if (a1) {
      break;
    }
LABEL_9:
    __break(1u);
LABEL_10:
    sub_191F35068();
    uint64_t v15 = v26;
  }
  sub_191F442A4(0, &qword_1E92FC568);
  sub_191F35218();
  id v20 = (void *)sub_191FB9D48();
  swift_bridgeObjectRelease();
  objc_setAssociatedObject(v21, "_EX_assertions", v20, (void *)0x301);

  objc_msgSend(v19, sel_invalidate);
}

void sub_191F347A4(void *a1, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5)
{
  uint64_t v6 = v5;
  id v38 = a1;
  uint64_t v11 = sub_191FB9D28();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  unint64_t v14 = (uint64_t *)((char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v42 = sub_191F442A4(0, (unint64_t *)&qword_1EB27BFC8);
  *unint64_t v14 = sub_191FBA0C8();
  uint64_t v15 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v12 + 104);
  unsigned int v39 = *MEMORY[0x1E4FBCBF0];
  uint64_t v41 = v15;
  ((void (*)(uint64_t *))v15)(v14);
  char v16 = sub_191FB9D38();
  os_log_type_t v40 = *(void (**)(uint64_t *, uint64_t))(v12 + 8);
  v40(v14, v11);
  if ((v16 & 1) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v17 = a3;
  uint64_t v18 = sub_191F34B4C();
  swift_bridgeObjectRetain();
  unint64_t v33 = a2;
  unint64_t v34 = v17;
  unint64_t v36 = a5;
  a5 = sub_191F34DE0(a2, v17, a4, a5);
  LOBYTE(v17) = v19;
  swift_bridgeObjectRelease();
  id v37 = v6;
  unint64_t v35 = a4;
  if ((v17 & 1) == 0)
  {
    id v21 = 0;
    goto LABEL_6;
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v43 = v18;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_12;
  }
  while (1)
  {
    id v21 = *(void **)(*(void *)(v18 + 56) + 8 * a5);
    sub_191F35434(a5, v18);
    swift_bridgeObjectRelease();
LABEL_6:
    unint64_t v22 = v40;
    *unint64_t v14 = sub_191FBA0C8();
    uint64_t v23 = v39;
    a5 = (unint64_t)v41;
    v41(v14, v39, v11);
    char v24 = sub_191FB9D38();
    v22(v14, v11);
    if ((v24 & 1) == 0)
    {
LABEL_10:
      __break(1u);
      goto LABEL_11;
    }
    a5 = sub_191F442A4(0, &qword_1E92FC568);
    sub_191F35218();
    uint64_t v25 = (void *)sub_191FB9D48();
    swift_bridgeObjectRelease();
    id v26 = v37;
    objc_setAssociatedObject(v37, "_EX_assertions", v25, (void *)0x301);

    objc_msgSend(v21, sel_invalidate);
    unsigned int v27 = v26;
    id v28 = v38;
    uint64_t v29 = sub_191F34B4C();
    char v30 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v43 = v29;
    sub_191F3526C((uint64_t)v28, v33, v34, v35, v36, v30);
    swift_bridgeObjectRelease();
    *unint64_t v14 = sub_191FBA0C8();
    v41(v14, v23, v11);
    LOBYTE(v29) = sub_191FB9D38();
    v40(v14, v11);
    if (v29) {
      break;
    }
LABEL_11:
    __break(1u);
LABEL_12:
    sub_191F35068();
    uint64_t v18 = v43;
  }
  unsigned int v31 = (void *)sub_191FB9D48();
  swift_bridgeObjectRelease();
  objc_setAssociatedObject(v27, "_EX_assertions", v31, (void *)0x301);
}

uint64_t sub_191F34B4C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_191FB9D28();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)((char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_191F442A4(0, (unint64_t *)&qword_1EB27BFC8);
  *uint64_t v5 = sub_191FBA0C8();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBF0], v2);
  char v6 = sub_191FB9D38();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (objc_getAssociatedObject(v1, "_EX_assertions"))
  {
    sub_191FBA1E8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  sub_191F34D78((uint64_t)v9, (uint64_t)v10);
  if (!v11)
  {
    sub_191F35A6C((uint64_t)v10);
    goto LABEL_10;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92FC558);
  if ((swift_dynamicCast() & 1) == 0 || (uint64_t result = v12) == 0)
  {
LABEL_10:
    uint64_t v12 = MEMORY[0x1E4FBC868];
    sub_191F442A4(0, &qword_1E92FC568);
    sub_191F35218();
    uint64_t v8 = (void *)sub_191FB9D48();
    objc_setAssociatedObject(v1, "_EX_assertions", v8, (void *)0x301);

    uint64_t result = v12;
    if (v12) {
      return result;
    }
LABEL_13:
    __break(1u);
  }
  return result;
}

uint64_t sub_191F34D78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BDE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_191F34DE0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v8 = HIDWORD(a1);
  unint64_t v9 = HIDWORD(a2);
  unint64_t v10 = HIDWORD(a3);
  unint64_t v11 = HIDWORD(a4);
  sub_191FBA648();
  atoken.val[0] = a1;
  atoken.val[1] = v8;
  atoken.val[2] = a2;
  atoken.val[3] = v9;
  atoken.val[4] = a3;
  atoken.val[5] = v10;
  atoken.val[6] = a4;
  atoken.val[7] = v11;
  audit_token_to_pid(&atoken);
  sub_191FBA678();
  atoken.val[0] = a1;
  atoken.val[1] = v8;
  atoken.val[2] = a2;
  atoken.val[3] = v9;
  atoken.val[4] = a3;
  atoken.val[5] = v10;
  atoken.val[6] = a4;
  atoken.val[7] = v11;
  audit_token_to_pidversion(&atoken);
  sub_191FBA678();
  uint64_t v12 = sub_191FBA688();
  return sub_191F34EBC(a1, a2, a3, a4, v12);
}

unint64_t sub_191F34EBC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v6 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v7 = a5 & ~v6;
  if ((*(void *)(v5 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    unsigned int v8 = a2;
    unint64_t v9 = HIDWORD(a1);
    unsigned int v26 = a3;
    unsigned int v27 = a4;
    uint64_t v25 = ~v6;
    unint64_t v36 = HIDWORD(a1);
    unsigned int v37 = a2;
    unsigned int v10 = a1;
    unint64_t v11 = HIDWORD(a2);
    unint64_t v12 = HIDWORD(a3);
    unint64_t v13 = HIDWORD(a4);
    do
    {
      unint64_t v14 = (unsigned int *)(*(void *)(v29 + 48) + 32 * v7);
      unsigned int v15 = *v14;
      unsigned int v16 = v14[1];
      unsigned int v17 = v14[2];
      unsigned int v18 = v14[3];
      unsigned int v19 = v14[4];
      unsigned int v20 = v14[5];
      unsigned int v21 = v14[6];
      LODWORD(v14) = v14[7];
      unsigned int v34 = v16;
      unsigned int v35 = v15;
      atoken.val[0] = v15;
      atoken.val[1] = v16;
      unsigned int v32 = v18;
      unsigned int v33 = v17;
      atoken.val[2] = v17;
      atoken.val[3] = v18;
      atoken.val[4] = v19;
      atoken.val[5] = v20;
      unsigned int v30 = v14;
      unsigned int v31 = v21;
      atoken.val[6] = v21;
      atoken.val[7] = v14;
      pid_t v22 = audit_token_to_pid(&atoken);
      atoken.val[0] = v10;
      atoken.val[1] = v9;
      atoken.val[2] = v8;
      atoken.val[3] = v11;
      atoken.val[4] = v26;
      atoken.val[5] = v12;
      atoken.val[6] = v27;
      atoken.val[7] = v13;
      if (v22 == audit_token_to_pid(&atoken))
      {
        atoken.val[0] = v35;
        atoken.val[1] = v34;
        atoken.val[2] = v33;
        atoken.val[3] = v32;
        atoken.val[4] = v19;
        atoken.val[5] = v20;
        atoken.val[6] = v31;
        atoken.val[7] = v30;
        int v23 = audit_token_to_pidversion(&atoken);
        atoken.val[0] = v10;
        atoken.val[1] = v36;
        atoken.val[2] = v37;
        atoken.val[3] = v11;
        atoken.val[4] = v26;
        atoken.val[5] = v12;
        atoken.val[6] = v27;
        atoken.val[7] = v13;
        if (v23 == audit_token_to_pidversion(&atoken)) {
          break;
        }
      }
      unint64_t v7 = (v7 + 1) & v25;
      LODWORD(v9) = v36;
      unsigned int v8 = v37;
    }
    while (((*(void *)(v28 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
  }
  return v7;
}

id sub_191F35068()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FC590);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_191FBA488();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 32 * v15;
    unsigned int v17 = (_OWORD *)(*(void *)(v2 + 48) + 32 * v15);
    uint64_t v18 = 8 * v15;
    unsigned int v19 = *(void **)(*(void *)(v2 + 56) + v18);
    unsigned int v20 = (_OWORD *)(*(void *)(v4 + 48) + v16);
    long long v21 = v17[1];
    *unsigned int v20 = *v17;
    v20[1] = v21;
    *(void *)(*(void *)(v4 + 56) + v18) = v19;
    id result = v19;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

unint64_t sub_191F35218()
{
  unint64_t result = qword_1E92FC570;
  if (!qword_1E92FC570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92FC570);
  }
  return result;
}

void sub_191F3526C(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, char a6)
{
  unint64_t v7 = (void **)v6;
  unint64_t v14 = (void *)*v6;
  unint64_t v16 = sub_191F34DE0(a2, a3, a4, a5);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v20 = v15;
  uint64_t v21 = v14[3];
  if (v21 >= v19 && (a6 & 1) != 0)
  {
LABEL_7:
    int64_t v22 = *v7;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = v22[7];

      *(void *)(v23 + 8 * v16) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v21 >= v19 && (a6 & 1) == 0)
  {
    sub_191F35068();
    goto LABEL_7;
  }
  sub_191F95E20(v19, a6 & 1);
  unint64_t v24 = sub_191F34DE0(a2, a3, a4, a5);
  if ((v20 & 1) != (v25 & 1))
  {
LABEL_15:
    sub_191FBA5D8();
    __break(1u);
    return;
  }
  unint64_t v16 = v24;
  int64_t v22 = *v7;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:

  sub_191F353D0(v16, a2, a3, a4, a5, a1, v22);
}

unint64_t sub_191F353D0(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  a7[(result >> 6) + 8] |= 1 << result;
  unint64_t v7 = (void *)(a7[6] + 32 * result);
  *unint64_t v7 = a2;
  v7[1] = a3;
  id v7[2] = a4;
  v7[3] = a5;
  *(void *)(a7[7] + 8 * result) = a6;
  uint64_t v8 = a7[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a7[2] = v10;
  }
  return result;
}

unint64_t sub_191F35434(unint64_t result, uint64_t a2)
{
  uint64_t v2 = a2;
  unint64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_191FBA208();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      uint64_t v31 = v4;
      uint64_t v32 = v2;
      unint64_t v33 = (result + 1) & v7;
      uint64_t v34 = v7;
      do
      {
        int64_t v35 = v3;
        uint64_t v8 = (unsigned int *)(*(void *)(v2 + 48) + 32 * v6);
        unsigned int v9 = *v8;
        unsigned int v10 = v8[1];
        unsigned int v12 = v8[2];
        unsigned int v11 = v8[3];
        unsigned int v13 = v8[4];
        unsigned int v14 = v8[5];
        unsigned int v15 = v8[6];
        unsigned int v16 = v8[7];
        sub_191FBA648();
        atoken.val[0] = v9;
        atoken.val[1] = v10;
        atoken.val[2] = v12;
        atoken.val[3] = v11;
        atoken.val[4] = v13;
        atoken.val[5] = v14;
        atoken.val[6] = v15;
        atoken.val[7] = v16;
        audit_token_to_pid(&atoken);
        sub_191FBA678();
        atoken.val[0] = v9;
        atoken.val[1] = v10;
        atoken.val[2] = v12;
        atoken.val[3] = v11;
        atoken.val[4] = v13;
        atoken.val[5] = v14;
        atoken.val[6] = v15;
        atoken.val[7] = v16;
        unint64_t v3 = v35;
        audit_token_to_pidversion(&atoken);
        sub_191FBA678();
        unint64_t result = sub_191FBA688();
        unint64_t v17 = result & v34;
        if (v35 >= (uint64_t)v33)
        {
          if (v17 < v33)
          {
            uint64_t v4 = v31;
            uint64_t v2 = v32;
          }
          else
          {
            uint64_t v4 = v31;
            uint64_t v2 = v32;
            if (v35 >= (uint64_t)v17) {
              goto LABEL_12;
            }
          }
        }
        else
        {
          uint64_t v4 = v31;
          uint64_t v2 = v32;
          if (v17 >= v33 || v35 >= (uint64_t)v17)
          {
LABEL_12:
            uint64_t v18 = *(void *)(v2 + 48);
            uint64_t v19 = (_OWORD *)(v18 + 32 * v35);
            char v20 = (_OWORD *)(v18 + 32 * v6);
            if (v35 != v6 || v19 >= v20 + 2)
            {
              long long v21 = v20[1];
              *uint64_t v19 = *v20;
              v19[1] = v21;
            }
            uint64_t v22 = *(void *)(v2 + 56);
            uint64_t v23 = (void *)(v22 + 8 * v35);
            unint64_t v24 = (void *)(v22 + 8 * v6);
            if (v35 != v6 || (unint64_t v3 = v6, v23 >= v24 + 1))
            {
              *uint64_t v23 = *v24;
              unint64_t v3 = v6;
            }
          }
        }
        unint64_t v6 = (v6 + 1) & v34;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    char v25 = (uint64_t *)(v4 + 8 * (v3 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << v3) - 1;
  }
  else
  {
    char v25 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << result) - 1;
  }
  uint64_t *v25 = v27 & v26;
  uint64_t v28 = *(void *)(v2 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v2 + 16) = v30;
    ++*(_DWORD *)(v2 + 36);
  }
  return result;
}

uint64_t sub_191F35668()
{
  return sub_191F35670(*(void *)(v0 + 16));
}

uint64_t sub_191F35670(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

void sub_191F3567C()
{
  sub_191F35688(*(void (**)(void))(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

void sub_191F35688(void (*a1)(void), uint64_t a2, void *a3)
{
  sub_191F44648(a3);
  id v5 = v4;
  a1();
}

uint64_t sub_191F35738(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92FC540);
    uint64_t v5 = swift_allocError();
    *unint64_t v6 = a3;
    id v7 = a3;
    return MEMORY[0x1F4188208](v3, v5);
  }
  else
  {
    if (a2)
    {
      **(void **)(*(void *)(v3 + 64) + 40) = a2;
      id v8 = a2;
      a1 = v3;
    }
    else
    {
      __break(1u);
    }
    return MEMORY[0x1F4188200](a1);
  }
}

uint64_t sub_191F357F8()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

void sub_191F35810()
{
  sub_191F35818(*(void **)(v0 + 16));
}

void sub_191F35818(void *a1)
{
  if (qword_1EB27BDC0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_191FB9CA8();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB27BDE8);
  id v8 = a1;
  uint64_t v3 = sub_191FB9C88();
  os_log_type_t v4 = sub_191FBA058();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    unint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    id v7 = v8;
    sub_191FBA1C8();
    *unint64_t v6 = v8;

    _os_log_impl(&dword_191F29000, v3, v4, "Launch assertions released for extension: %@", v5, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
    swift_arrayDestroy();
    MEMORY[0x192FEBAE0](v6, -1, -1);
    MEMORY[0x192FEBAE0](v5, -1, -1);
  }
  else
  {
  }
}

id sub_191F359E4()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_didFinishLaunching);
}

uint64_t sub_191F35A6C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BDE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_191F35ACC(uint64_t a1)
{
  uint64_t v66 = *MEMORY[0x1E4F143B8];
  sub_191F35F30(a1, (uint64_t)v63);
  if (v64)
  {
    type metadata accessor for _EXQuery();
    if (swift_dynamicCast())
    {
      uint64_t v2 = (char *)v58;
      if ((char *)v58 == v1)
      {

        char v38 = 1;
        return v38 & 1;
      }
      unint64_t v51 = v1;
      uint64_t v3 = (uint64_t)&v1[OBJC_IVAR____EXQuery_inner];
      swift_beginAccess();
      sub_191F41D54(v3, (uint64_t)v63);
      uint64_t v4 = v64;
      uint64_t v5 = v65;
      __swift_project_boxed_opaque_existential_2Tm(v63, v64);
      unint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 32))(v4, v5);
      unsigned int v7 = v6;
      LODWORD(v4) = v8;
      LODWORD(v5) = v9;
      int v11 = v10;
      unint64_t v12 = HIDWORD(v6);
      unint64_t v13 = HIDWORD(v8);
      unint64_t v14 = HIDWORD(v9);
      unint64_t v15 = HIDWORD(v10);
      __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v63);
      *(void *)&long long v58 = __PAIR64__(v12, v7);
      *((void *)&v58 + 1) = __PAIR64__(v13, v4);
      int v59 = v5;
      int v60 = v14;
      int v61 = v11;
      int v62 = v15;
      unint64_t v52 = v2;
      uint64_t v16 = (uint64_t)&v2[OBJC_IVAR____EXQuery_inner];
      swift_beginAccess();
      sub_191F41D54(v16, (uint64_t)v63);
      uint64_t v17 = v64;
      uint64_t v18 = v65;
      __swift_project_boxed_opaque_existential_2Tm(v63, v64);
      unint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 32))(v17, v18);
      unsigned int v20 = v19;
      LODWORD(v17) = v21;
      LODWORD(v18) = v22;
      LODWORD(v15) = v23;
      unint64_t v24 = HIDWORD(v19);
      unint64_t v25 = HIDWORD(v21);
      unint64_t v26 = HIDWORD(v22);
      unint64_t v27 = HIDWORD(v23);
      __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v63);
      *(void *)&long long v53 = __PAIR64__(v24, v20);
      *((void *)&v53 + 1) = __PAIR64__(v25, v17);
      int v54 = v18;
      int v55 = v26;
      int v56 = v15;
      int v57 = v27;
      sub_191F41D54(v3, (uint64_t)v63);
      uint64_t v28 = v64;
      uint64_t v29 = v65;
      __swift_project_boxed_opaque_existential_2Tm(v63, v64);
      uint64_t v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8))(v28, v29);
      uint64_t v32 = v31;
      __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v63);
      sub_191F41D54(v16, (uint64_t)v63);
      uint64_t v33 = v64;
      uint64_t v34 = v65;
      __swift_project_boxed_opaque_existential_2Tm(v63, v64);
      uint64_t v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 8))(v33, v34);
      uint64_t v37 = v36;
      __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v63);
      if (v32)
      {
        if (v37)
        {
          if (v30 == v35 && v32 == v37)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            char v40 = sub_191FBA598();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v40 & 1) == 0)
            {
LABEL_22:

              goto LABEL_10;
            }
          }
LABEL_17:
          sub_191F41D54(v3, (uint64_t)v63);
          uint64_t v41 = v64;
          uint64_t v42 = v65;
          __swift_project_boxed_opaque_existential_2Tm(v63, v64);
          LODWORD(v41) = (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 40))(v41, v42);
          __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v63);
          sub_191F41D54(v16, (uint64_t)v63);
          uint64_t v43 = v64;
          uint64_t v44 = v65;
          __swift_project_boxed_opaque_existential_2Tm(v63, v64);
          int v45 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 40))(v43, v44);
          __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v63);
          if (v41 == v45 && _EXAuditTokenEqual(&v58, &v53))
          {
            unsigned int v46 = *(void **)&v51[OBJC_IVAR____EXQuery_predicate];
            uint64_t v47 = *(void **)&v52[OBJC_IVAR____EXQuery_predicate];
            char v38 = v47 == 0;
            if (!v46)
            {

              return v38 & 1;
            }
            if (v47)
            {
              sub_191F442A4(0, &qword_1E92FC478);
              id v48 = v46;
              id v49 = v47;
              id v50 = v48;
              char v38 = sub_191FBA168();

              return v38 & 1;
            }
          }
          goto LABEL_22;
        }
      }
      else if (!v37)
      {
        goto LABEL_17;
      }

      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_191F35A6C((uint64_t)v63);
  }
LABEL_10:
  char v38 = 0;
  return v38 & 1;
}

uint64_t sub_191F35F30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BDE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_191F35F98(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_191F35FC0()
{
  return sub_191F35FF0(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_191F35FC8()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_191F35FF0(uint64_t (*a1)(void))
{
  return a1();
}

void sub_191F36018()
{
  sub_191F36024(*(unsigned char **)(v0 + 16), *(void *)(v0 + 24));
}

void sub_191F36024(unsigned char *a1, uint64_t a2)
{
  unint64_t v15 = MEMORY[0x1E4FBC870];
  uint64_t v4 = (uint64_t)&a1[OBJC_IVAR____EXQuery_inner];
  swift_beginAccess();
  sub_191F41D54(v4, (uint64_t)v12);
  uint64_t v5 = v13;
  uint64_t v6 = v14;
  __swift_project_boxed_opaque_existential_2Tm(v12, v13);
  unint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 64))(v5, v6);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v12);
  if (!(v7 >> 62))
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    swift_beginAccess();
    sub_191F361A4(v15);
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_191FBA478();
  swift_bridgeObjectRelease();
  if (!v8) {
    goto LABEL_10;
  }
LABEL_3:
  if (v8 >= 1)
  {
    for (uint64_t i = 0; i != v8; ++i)
    {
      if ((v7 & 0xC000000000000001) != 0) {
        id v10 = (id)MEMORY[0x192FEA540](i, v7);
      }
      else {
        id v10 = *(id *)(v7 + 8 * i + 32);
      }
      int v11 = v10;
      sub_191F36444((uint64_t)v10, a1, (uint64_t *)&v15, a2);
    }
    goto LABEL_10;
  }
  __break(1u);
}

void sub_191F361A4(unint64_t a1)
{
  unint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    sub_191FBA228();
    sub_191F442A4(0, (unint64_t *)&qword_1EB27BCB0);
    sub_191F3B0F4();
    sub_191FB9FE8();
    unint64_t v1 = (unint64_t)v17[1];
    uint64_t v16 = v17[2];
    uint64_t v2 = (uint64_t)v17[3];
    id v3 = v17[4];
    unint64_t v4 = (unint64_t)v17[5];
  }
  else
  {
    id v3 = 0;
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v16 = (void *)(a1 + 56);
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
  }
  int64_t v8 = (unint64_t)(v2 + 64) >> 6;
  if ((v1 & 0x8000000000000000) != 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v4)
    {
      uint64_t v9 = (v4 - 1) & v4;
      unint64_t v10 = __clz(__rbit64(v4)) | ((void)v3 << 6);
      int v11 = (char *)v3;
      goto LABEL_29;
    }
    uint64_t v13 = (uint64_t)v3 + 1;
    if (__OFADD__(v3, 1)) {
      break;
    }
    if (v13 >= v8) {
      goto LABEL_32;
    }
    unint64_t v14 = v16[v13];
    int v11 = (char *)v3 + 1;
    if (!v14)
    {
      int v11 = (char *)v3 + 2;
      if ((uint64_t)v3 + 2 >= v8) {
        goto LABEL_32;
      }
      unint64_t v14 = v16[(void)v11];
      if (!v14)
      {
        int v11 = (char *)v3 + 3;
        if ((uint64_t)v3 + 3 >= v8) {
          goto LABEL_32;
        }
        unint64_t v14 = v16[(void)v11];
        if (!v14)
        {
          int v11 = (char *)v3 + 4;
          if ((uint64_t)v3 + 4 >= v8) {
            goto LABEL_32;
          }
          unint64_t v14 = v16[(void)v11];
          if (!v14)
          {
            int v11 = (char *)v3 + 5;
            if ((uint64_t)v3 + 5 >= v8) {
              goto LABEL_32;
            }
            unint64_t v14 = v16[(void)v11];
            if (!v14)
            {
              unint64_t v15 = (char *)v3 + 6;
              while ((char *)v8 != v15)
              {
                unint64_t v14 = v16[(void)v15++];
                if (v14)
                {
                  int v11 = v15 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_191F4DD64();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v9 = (v14 - 1) & v14;
    unint64_t v10 = __clz(__rbit64(v14)) + ((void)v11 << 6);
LABEL_29:
    id v12 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
    if (!v12) {
      goto LABEL_32;
    }
    while (1)
    {
      sub_191F37744(v17, v12);

      id v3 = v11;
      unint64_t v4 = v9;
      if ((v1 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (sub_191FBA258())
      {
        sub_191F442A4(0, (unint64_t *)&qword_1EB27BCB0);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v12 = v17[0];
        swift_unknownObjectRelease();
        int v11 = (char *)v3;
        uint64_t v9 = v4;
        if (v12) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

void sub_191F36444(uint64_t a1, unsigned char *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v143 = a4;
  uint64_t v168 = *MEMORY[0x1E4F143B8];
  uint64_t v7 = sub_191FB9B38();
  uint64_t v136 = *(void *)(v7 - 8);
  uint64_t v137 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v130 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = 0x8000000000000000;
  if (!a2[OBJC_IVAR____EXQuery_includePostprocessing]) {
    unint64_t v10 = 0;
  }
  if (a2[OBJC_IVAR____EXQuery_allowsDuplicates]) {
    uint64_t v11 = v10 | 0x10;
  }
  else {
    uint64_t v11 = v10;
  }
  id v135 = objc_msgSend(self, sel_enumeratorWithExtensionPointRecord_options_, a1, v11);
  sub_191FBA038();
  uint64_t v149 = OBJC_IVAR____EXQuery_excludeLockedApps;
  uint64_t v12 = (uint64_t)&a2[OBJC_IVAR____EXQuery_inner];
  uint64_t v148 = OBJC_IVAR____EXQuery_resultType;
  uint64_t v132 = OBJC_IVAR____EXExtensionAvailablility_unelectedCount;
  uint64_t v131 = OBJC_IVAR____EXExtensionAvailablility_disabledCount;
  uint64_t v138 = OBJC_IVAR____EXExtensionAvailablility_enabledCount;
  uint64_t v139 = OBJC_IVAR____EXQuery_predicate;
  swift_beginAccess();
  uint64_t v144 = v12;
  swift_beginAccess();
  sub_191FB9B28();
  if (!v167)
  {
LABEL_93:
    (*(void (**)(char *, uint64_t))(v136 + 8))(v9, v137);

    return;
  }
  v134 = &v162;
  v141 = (char *)v160 + 8;
  v142 = (char *)v160 + 4;
  *(void *)&long long v13 = 138543362;
  long long v145 = v13;
  *(void *)&long long v13 = 67109376;
  long long v140 = v13;
  *(void *)&long long v13 = 138543618;
  long long v130 = v13;
  *(void *)&long long v13 = 136446210;
  long long v133 = v13;
  uint64_t v155 = MEMORY[0x1E4FBC840] + 8;
  v146 = v9;
  v147 = a3;
  v153 = a2;
  while (1)
  {
    sub_191F4D994(&v166, &v163);
    sub_191F442A4(0, (unint64_t *)&qword_1EB27BB38);
    if ((swift_dynamicCast() & 1) == 0) {
      break;
    }
    id v14 = (id)v157;
    if (!sub_191F37F68((void *)v157)) {
      goto LABEL_8;
    }
    id v15 = objc_msgSend(objc_allocWithZone((Class)_EXExtensionIdentity), sel_initWithApplicationExtensionRecord_, v14);
    uint64_t v16 = *a3;
    swift_bridgeObjectRetain();
    char v17 = sub_191F37E08(v15, v16);
    swift_bridgeObjectRelease();
    if (v17)
    {
      uint64_t v18 = v15;
      unint64_t v19 = v9;
      unsigned int v20 = a3;
      unint64_t v21 = v14;
      if (qword_1EB27BC88 != -1) {
        swift_once();
      }
      uint64_t v22 = sub_191FB9CA8();
      __swift_project_value_buffer(v22, (uint64_t)qword_1EB27BC70);
      id v23 = v18;
      unint64_t v24 = sub_191FB9C88();
      os_log_type_t v25 = sub_191FBA058();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = swift_slowAlloc();
        unint64_t v27 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v26 = v145;
        *(void *)(v26 + 4) = v23;
        void *v27 = v23;

        _os_log_impl(&dword_191F29000, v24, v25, "Extension has already been evaluated: %{public}@", (uint8_t *)v26, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
        swift_arrayDestroy();
        MEMORY[0x192FEBAE0](v27, -1, -1);
        MEMORY[0x192FEBAE0](v26, -1, -1);
      }
      else
      {
      }
      a3 = v20;
      uint64_t v9 = v19;
      goto LABEL_9;
    }
    int v28 = a2[v149];
    id v156 = v14;
    if (v28 == 1 && objc_msgSend(v14, sel_appProtectionLocked))
    {
      if (qword_1EB27BC88 != -1) {
        swift_once();
      }
      uint64_t v29 = sub_191FB9CA8();
      __swift_project_value_buffer(v29, (uint64_t)qword_1EB27BC70);
      id v30 = v15;
      uint64_t v31 = sub_191FB9C88();
      os_log_type_t v32 = sub_191FBA058();
      if (!os_log_type_enabled(v31, v32))
      {

        id v90 = v156;
LABEL_74:

        goto LABEL_9;
      }
      uint64_t v33 = swift_slowAlloc();
      uint64_t v34 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = v145;
      *(void *)(v33 + 4) = v30;
      *uint64_t v34 = v30;

      _os_log_impl(&dword_191F29000, v31, v32, "Skipping because extension is locked: %{public}@", (uint8_t *)v33, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
      swift_arrayDestroy();
      MEMORY[0x192FEBAE0](v34, -1, -1);
      MEMORY[0x192FEBAE0](v33, -1, -1);

      goto LABEL_9;
    }
    unsigned int v152 = objc_msgSend(v15, sel_targetsSystemExtensionPoint, v130);
    unsigned __int8 v159 = 0;
    sub_191F41D54(v144, (uint64_t)&v163);
    uint64_t v35 = *((void *)&v164 + 1);
    uint64_t v36 = v165;
    __swift_project_boxed_opaque_existential_2Tm(&v163, *((uint64_t *)&v164 + 1));
    unint64_t v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 32))(v35, v36);
    unsigned int v38 = v37;
    LODWORD(v35) = v39;
    LODWORD(v36) = v40;
    unsigned int v42 = v41;
    unint64_t v43 = HIDWORD(v37);
    unint64_t v44 = HIDWORD(v39);
    unint64_t v45 = HIDWORD(v40);
    unint64_t v46 = HIDWORD(v41);
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)&v163);
    *(void *)&long long v157 = __PAIR64__(v43, v38);
    *((void *)&v157 + 1) = __PAIR64__(v44, v35);
    *(void *)&long long v158 = __PAIR64__(v45, v36);
    *((void *)&v158 + 1) = __PAIR64__(v46, v42);
    uint64_t v47 = (long long *)_EXAuditTokenForCurrentProcess();
    long long v48 = v47[1];
    long long v163 = *v47;
    long long v164 = v48;
    if (qword_1EB27BC88 != -1) {
      swift_once();
    }
    uint64_t v49 = sub_191FB9CA8();
    uint64_t v50 = __swift_project_value_buffer(v49, (uint64_t)qword_1EB27BC70);
    unint64_t v51 = sub_191FB9C88();
    os_log_type_t v52 = sub_191FBA058();
    BOOL v53 = os_log_type_enabled(v51, v52);
    uint64_t v154 = v50;
    if (v53)
    {
      uint64_t v54 = swift_slowAlloc();
      *(_DWORD *)uint64_t v54 = v140;
      swift_beginAccess();
      int PID = _EXAuditTokenGetPID(&v163);
      swift_endAccess();
      LODWORD(v160[0]) = PID;
      sub_191FBA1C8();
      *(_WORD *)(v54 + 8) = 1024;
      swift_beginAccess();
      int v56 = _EXAuditTokenGetPID(&v157);
      swift_endAccess();
      LODWORD(v160[0]) = v56;
      sub_191FBA1C8();
      _os_log_impl(&dword_191F29000, v51, v52, "Process %d discovering extensions for process %d", (uint8_t *)v54, 0xEu);
      MEMORY[0x192FEBAE0](v54, -1, -1);
    }

    swift_beginAccess();
    long long v150 = v158;
    long long v151 = v157;
    int v57 = self;
    id v161 = 0;
    v160[0] = v151;
    v160[1] = v150;
    id v58 = objc_msgSend(v57, sel_bundleRecordForAuditToken_error_, v160, &v161);
    id v59 = v161;
    a2 = v153;
    if (v58)
    {
      int v60 = v58;
      self;
      int v61 = (void *)swift_dynamicCastObjCClass();
      id v62 = v59;
      if (!v61) {

      }
      id v76 = v61;
      v77 = sub_191FB9C88();
      os_log_type_t v78 = sub_191FBA058();
      if (os_log_type_enabled(v77, v78))
      {
        v79 = (uint8_t *)swift_slowAlloc();
        uint64_t v80 = swift_slowAlloc();
        *(void *)&v160[0] = v80;
        *(_DWORD *)v79 = v133;
        *(void *)&long long v150 = v79 + 4;
        id v161 = v61;
        id v81 = v76;
        *(void *)&long long v151 = v15;
        id v82 = v81;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92FD478);
        uint64_t v83 = sub_191FB9E08();
        id v161 = (id)sub_191F4EB34(v83, v84, (uint64_t *)v160);
        sub_191FBA1C8();

        id v15 = (id)v151;
        a2 = v153;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_191F29000, v77, v78, "Resolved host app record: %{public}s", v79, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x192FEBAE0](v80, -1, -1);
        MEMORY[0x192FEBAE0](v79, -1, -1);
      }
      else
      {
      }
      uint64_t v9 = v146;
      a3 = v147;
      id v85 = objc_msgSend(v15, sel_containingBundleRecord);
      if (v85)
      {
        v86 = v85;
        if (v61)
        {
          sub_191F442A4(0, qword_1EB27BBD0);
          id v76 = v76;
          id v87 = v86;
          char v88 = sub_191FBA168();

          v86 = v76;
        }
        else
        {
          char v88 = 0;
        }
        id v14 = v156;

        id v76 = v86;
LABEL_49:
      }
      else
      {
        if (v61)
        {
          char v88 = 0;
          id v14 = v156;
          goto LABEL_49;
        }
        char v88 = 1;
        id v14 = v156;
      }
      swift_beginAccess();
      unsigned __int8 v159 = v88 & 1;
      char v89 = v152;
      if (!v152) {
        goto LABEL_52;
      }
      goto LABEL_51;
    }
    id v63 = v161;
    uint64_t v64 = (void *)sub_191FB9B18();

    swift_willThrow();
    uint64_t v65 = a2;
    id v66 = v64;
    v67 = v65;
    id v68 = v64;
    v69 = sub_191FB9C88();
    os_log_type_t v70 = sub_191FBA058();
    if (os_log_type_enabled(v69, v70))
    {
      uint64_t v71 = swift_slowAlloc();
      v72 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v71 = v130;
      *(void *)&v160[0] = v67;
      v73 = v67;
      *(void *)&long long v151 = v15;
      a2 = v153;
      sub_191FBA1C8();
      void *v72 = a2;

      *(_WORD *)(v71 + 12) = 2114;
      id v74 = v64;
      uint64_t v75 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)&v160[0] = v75;
      id v15 = (id)v151;
      sub_191FBA1C8();
      v72[1] = v75;

      _os_log_impl(&dword_191F29000, v69, v70, "Unable to resolve host app record for query: %{public}@ error: %{public}@", (uint8_t *)v71, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
      swift_arrayDestroy();
      MEMORY[0x192FEBAE0](v72, -1, -1);
      MEMORY[0x192FEBAE0](v71, -1, -1);
    }
    else
    {
    }
    uint64_t v9 = v146;
    a3 = v147;
    id v14 = v156;
    char v89 = v152;
    if (!v152)
    {
LABEL_52:
      unint64_t v92 = (unint64_t)objc_msgSend(v15, sel_enablementState);
      swift_beginAccess();
      if (v92 & 1 | ((v159 & 1) == 0) | (v92 >> 1) & 1) {
        unint64_t v93 = v92;
      }
      else {
        unint64_t v93 = v92 | 2;
      }
      if (*(void *)&a2[v148])
      {
LABEL_56:
        if ((v93 & 2) != 0)
        {
          v94 = v15;
          v102 = sub_191FB9C88();
          os_log_type_t v103 = sub_191FBA058();
          if (os_log_type_enabled(v102, v103))
          {
            v104 = (uint8_t *)swift_slowAlloc();
            v105 = (void *)swift_slowAlloc();
            *(_DWORD *)v104 = v145;
            *(void *)&v160[0] = v94;
            v106 = v94;
            uint64_t v9 = v146;
            sub_191FBA1C8();
            void *v105 = v94;

            a2 = v153;
            _os_log_impl(&dword_191F29000, v102, v103, "Extension %{public}@ is enabled", v104, 0xCu);
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
            swift_arrayDestroy();
            v107 = v105;
            a3 = v147;
            MEMORY[0x192FEBAE0](v107, -1, -1);
            v108 = v104;
            id v14 = v156;
            MEMORY[0x192FEBAE0](v108, -1, -1);
          }
          else
          {

            v102 = v94;
          }

          uint64_t v123 = v138;
          uint64_t v124 = v143;
          uint64_t v125 = *(void *)(v143 + v138);
          BOOL v126 = __OFADD__(v125, 1);
          uint64_t v127 = v125 + 1;
          if (v126)
          {
            __break(1u);
LABEL_94:
            __break(1u);
LABEL_95:
            __break(1u);
          }
        }
        else
        {
          v94 = v15;
          v95 = sub_191FB9C88();
          os_log_type_t v96 = sub_191FBA058();
          BOOL v97 = os_log_type_enabled(v95, v96);
          if (v93)
          {
            if (v97)
            {
              v119 = (uint8_t *)swift_slowAlloc();
              v120 = (void *)swift_slowAlloc();
              *(_DWORD *)v119 = v145;
              *(void *)&v160[0] = v94;
              v121 = v94;
              uint64_t v9 = v146;
              sub_191FBA1C8();
              void *v120 = v94;

              a2 = v153;
              _os_log_impl(&dword_191F29000, v95, v96, "Extension %{public}@ is disabled", v119, 0xCu);
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
              swift_arrayDestroy();
              v122 = v120;
              a3 = v147;
              MEMORY[0x192FEBAE0](v122, -1, -1);
              MEMORY[0x192FEBAE0](v119, -1, -1);
            }
            else
            {

              v95 = v94;
            }
            id v14 = v156;

            uint64_t v123 = v131;
            uint64_t v124 = v143;
            uint64_t v129 = *(void *)(v143 + v131);
            BOOL v126 = __OFADD__(v129, 1);
            uint64_t v127 = v129 + 1;
            if (v126) {
              goto LABEL_95;
            }
          }
          else
          {
            if (v97)
            {
              v98 = (uint8_t *)swift_slowAlloc();
              v99 = (void *)swift_slowAlloc();
              *(_DWORD *)v98 = v145;
              *(void *)&v160[0] = v94;
              v100 = v94;
              uint64_t v9 = v146;
              sub_191FBA1C8();
              void *v99 = v94;

              a2 = v153;
              _os_log_impl(&dword_191F29000, v95, v96, "Extension %{public}@ is unelected", v98, 0xCu);
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
              swift_arrayDestroy();
              v101 = v99;
              a3 = v147;
              MEMORY[0x192FEBAE0](v101, -1, -1);
              MEMORY[0x192FEBAE0](v98, -1, -1);
            }
            else
            {

              v95 = v94;
            }
            id v14 = v156;

            uint64_t v123 = v132;
            uint64_t v124 = v143;
            uint64_t v128 = *(void *)(v143 + v132);
            BOOL v126 = __OFADD__(v128, 1);
            uint64_t v127 = v128 + 1;
            if (v126) {
              goto LABEL_94;
            }
          }
        }
        *(void *)(v124 + v123) = v127;

        goto LABEL_9;
      }
      goto LABEL_63;
    }
LABEL_51:
    uint64_t v91 = *(void *)&a2[v148];
    if (v91 == 1) {
      goto LABEL_52;
    }
    unint64_t v93 = 0;
    if (v91) {
      goto LABEL_56;
    }
LABEL_63:
    char v109 = sub_191F42A1C(v157, *((uint64_t *)&v157 + 1), v158, *((uint64_t *)&v158 + 1));
    if (v89 & 1 | (v93 >> 1) & 1)
    {
      if ((v109 & 1) == 0 && objc_msgSend(v15, sel_requiresHostToBeContainerApp))
      {
        swift_beginAccess();
        unsigned int v152 = v159;
        v110 = v15;
        v111 = sub_191FB9C88();
        os_log_type_t v112 = sub_191FBA058();
        if (os_log_type_enabled(v111, v112))
        {
          uint64_t v113 = swift_slowAlloc();
          v114 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v113 = v130;
          *(void *)&v160[0] = v110;
          v115 = v110;
          uint64_t v9 = v146;
          a3 = v147;
          sub_191FBA1C8();
          void *v114 = v110;

          a2 = v153;
          *(_WORD *)(v113 + 12) = 1024;
          LODWORD(v160[0]) = v159;
          sub_191FBA1C8();
          _os_log_impl(&dword_191F29000, v111, v112, "Extension: %{public}@ must be contained in host app. hostIsContainer: %{BOOL}d", (uint8_t *)v113, 0x12u);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
          swift_arrayDestroy();
          MEMORY[0x192FEBAE0](v114, -1, -1);
          uint64_t v116 = v113;
          id v14 = v156;
          MEMORY[0x192FEBAE0](v116, -1, -1);
        }
        else
        {

          v111 = v110;
        }

        if (!v152)
        {

          goto LABEL_8;
        }
      }
    }
    else if ((v109 & 1) == 0)
    {

LABEL_8:
      goto LABEL_9;
    }
    v117 = *(void **)&a2[v139];
    if (!v117 || (objc_msgSend(v117, sel_evaluateWithObject_, v15) & 1) != 0 || !*(void *)&a2[v139])
    {
      swift_beginAccess();
      id v118 = v15;
      sub_191F37744(&v161, v118);
      swift_endAccess();

      id v90 = v161;
      goto LABEL_74;
    }

LABEL_9:
    sub_191FB9B28();
    if (!v167) {
      goto LABEL_93;
    }
  }
  sub_191FBA458();
  __break(1u);
}

uint64_t sub_191F37744(void *a1, void *a2)
{
  id v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_191FBA248();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_191F442A4(0, (unint64_t *)&qword_1EB27BCB0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_191FBA238();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_191F9F898(v7, result + 1);
    uint64_t v29 = v21;
    unint64_t v22 = *(void *)(v21 + 16);
    if (*(void *)(v21 + 24) <= v22)
    {
      uint64_t v26 = v22 + 1;
      id v27 = v8;
      sub_191FA071C(v26, (uint64_t *)&unk_1EB27BB40);
      uint64_t v23 = v29;
    }
    else
    {
      uint64_t v23 = v21;
      id v24 = v8;
    }
    sub_191FA0CA8((uint64_t)v8, v23);
    *id v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_191FBA158();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      sub_191F442A4(0, (unint64_t *)&qword_1EB27BCB0);
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_191FBA168();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        unint64_t v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_191FBA168();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    id v8 = a2;
    sub_191F379EC((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

void sub_191F379EC(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_191FA071C(v6 + 1, (uint64_t *)&unk_1EB27BB40);
  }
  else
  {
    if (v7 > v6)
    {
      sub_191F53264((uint64_t *)&unk_1EB27BB40);
      goto LABEL_14;
    }
    sub_191F37B8C();
  }
  uint64_t v8 = *v3;
  uint64_t v9 = sub_191FBA158();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_191F442A4(0, (unint64_t *)&qword_1EB27BCB0);
    id v11 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
    char v12 = sub_191FBA168();

    if (v12)
    {
LABEL_13:
      sub_191FBA5C8();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v14 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
        char v15 = sub_191FBA168();

        if (v15) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = a1;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v19;
  }
}

uint64_t sub_191F37B8C()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BB40);
  uint64_t v3 = sub_191FBA2C8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *unint64_t v1 = v4;
    return result;
  }
  id v27 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    id v19 = *(id *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = sub_191FBA158();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    unint64_t v1 = v27;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_191F37E08(void *a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v3 = a1;
    char v4 = sub_191FBA268();

    return v4 & 1;
  }
  if (!*(void *)(a2 + 16)
    || (uint64_t v6 = sub_191FBA158(),
        uint64_t v7 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v8 = v6 & ~v7,
        uint64_t v9 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0))
  {
LABEL_11:
    char v12 = 0;
    return v12 & 1;
  }
  sub_191F442A4(0, (unint64_t *)&qword_1EB27BCB0);
  id v10 = *(id *)(*(void *)(a2 + 48) + 8 * v8);
  char v11 = sub_191FBA168();

  if ((v11 & 1) == 0)
  {
    uint64_t v13 = ~v7;
    unint64_t v14 = (v8 + 1) & v13;
    if ((*(void *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
    {
      do
      {
        id v15 = *(id *)(*(void *)(a2 + 48) + 8 * v14);
        char v12 = sub_191FBA168();

        if (v12) {
          break;
        }
        unint64_t v14 = (v14 + 1) & v13;
      }
      while (((*(void *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
      return v12 & 1;
    }
    goto LABEL_11;
  }
  char v12 = 1;
  return v12 & 1;
}

BOOL sub_191F37F68(void *a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____EXQuery_inner;
  swift_beginAccess();
  sub_191F41D54(v3, (uint64_t)v26);
  uint64_t v4 = v27;
  uint64_t v5 = v28;
  __swift_project_boxed_opaque_existential_2Tm(v26, v27);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  if (v7)
  {
    uint64_t v8 = v6;
    uint64_t v9 = v7;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v26);
    id v10 = objc_msgSend(a1, sel_extensionPointRecord);
    id v11 = objc_msgSend(v10, sel_identifier);

    uint64_t v12 = sub_191FB9DC8();
    uint64_t v14 = v13;

    if (v8 == v12 && v9 == v14)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      char v16 = sub_191FBA598();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      BOOL result = 0;
      if ((v16 & 1) == 0) {
        return result;
      }
    }
    sub_191F41D54(v3, (uint64_t)v26);
    uint64_t v22 = v27;
    uint64_t v23 = v28;
    __swift_project_boxed_opaque_existential_2Tm(v26, v27);
    int v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 40))(v22, v23);
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v26);
    id v21 = objc_msgSend(a1, sel_extensionPointRecord);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v26);
    sub_191F41D54(v3, (uint64_t)v26);
    uint64_t v18 = v27;
    uint64_t v19 = v28;
    __swift_project_boxed_opaque_existential_2Tm(v26, v27);
    int v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 40))(v18, v19);
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v26);
    id v21 = objc_msgSend(a1, sel_extensionPointRecord);
  }
  id v24 = v21;
  unsigned int v25 = objc_msgSend(v24, sel_platform);

  return (v20 + 1) < 2 || v25 == v20;
}

void sub_191F381B0()
{
  sub_191F381BC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

void sub_191F381BC(uint64_t a1, uint64_t a2, void *a3)
{
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____EXExtensionProcessHandle_innerProcessHandle), sel_auditToken);
  sub_191F347A4(a3, v4, v5, v6, v7);
}

char *_s19ExtensionFoundation20_EXHostConfigurationC07processD0AcA03AppA7ProcessV0D0V_tcfC_0(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE40);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  os_log_type_t v32 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v31 - v6;
  uint64_t v8 = type metadata accessor for AppExtensionProcess._InstanceIdentifier(0);
  MEMORY[0x1F4188790](v8 - 8);
  id v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_191FB9C68();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v31 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = *(id *)a1;
  self;
  id v15 = (void *)swift_dynamicCastObjCClassUnconditional();
  id v16 = objc_allocWithZone(v1);
  id v17 = objc_allocWithZone((Class)type metadata accessor for _EXHostConfiguration());
  uint64_t v18 = (char *)sub_191F45B68(v15, 0);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  uint64_t v19 = *(void *)(a1 + 16);
  int v20 = &v18[OBJC_IVAR____EXHostConfiguration_interruptionHandler];
  uint64_t v21 = *(void *)&v18[OBJC_IVAR____EXHostConfiguration_interruptionHandler];
  *(void *)int v20 = *(void *)(a1 + 8);
  *((void *)v20 + 1) = v19;
  uint64_t v22 = v18;
  swift_retain();
  sub_191F45B24(v21);
  uint64_t v23 = (int *)type metadata accessor for AppExtensionProcess.Configuration(0);
  sub_191F38B14(a1 + v23[6], (uint64_t)v10);
  sub_191F4CBD8((uint64_t)v10, (uint64_t)v7, (uint64_t *)&unk_1EB27BE40);
  sub_191F38778((uint64_t)v10, type metadata accessor for AppExtensionProcess._InstanceIdentifier);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v7, 1, v11) == 1)
  {
    sub_191F4CB7C((uint64_t)v7, (uint64_t *)&unk_1EB27BE40);
  }
  else
  {
    id v24 = v31;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v31, v7, v11);
    uint64_t v25 = (uint64_t)v32;
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v32, v24, v11);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v25, 0, 1, v11);
    id v26 = objc_allocWithZone((Class)type metadata accessor for _EXExtensionInstanceIdentifier());
    id v27 = _EXExtensionInstanceIdentifier.init(instanceIdentifier:)(v25);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v24, v11);
    uint64_t v28 = *(void **)&v22[OBJC_IVAR____EXHostConfiguration_instanceIdentifier];
    *(void *)&v22[OBJC_IVAR____EXHostConfiguration_instanceIdentifier] = v27;
  }
  v22[OBJC_IVAR____EXHostConfiguration_requireInvalidation] = *(unsigned char *)(a1 + v23[7]);
  uint64_t v29 = *(void *)(a1 + v23[8]);
  swift_bridgeObjectRetain();
  sub_191F38778(a1, type metadata accessor for AppExtensionProcess.Configuration);
  *(void *)&v22[OBJC_IVAR____EXHostConfiguration_assertionAttributes] = v29;

  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_191F38778(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id _EXExtensionInstanceIdentifier.init(instanceIdentifier:)(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE40);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_191FB9C68();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  id v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v18 - v11;
  sub_191F4CBD8(a1, (uint64_t)v5, (uint64_t *)&unk_1EB27BE40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    uint64_t v13 = v1;
    sub_191F4CB7C((uint64_t)v5, (uint64_t *)&unk_1EB27BE40);
    sub_191FB9C58();
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v13[OBJC_IVAR____EXExtensionInstanceIdentifier_identifier], v10, v6);
  }
  else
  {
    id v14 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v14(v12, v5, v6);
    v14(&v1[OBJC_IVAR____EXExtensionInstanceIdentifier_identifier], v12, v6);
  }
  id v15 = (objc_class *)type metadata accessor for _EXExtensionInstanceIdentifier();
  v18.receiver = v1;
  v18.super_class = v15;
  id v16 = objc_msgSendSuper2(&v18, sel_init);
  sub_191F4CB7C(a1, (uint64_t *)&unk_1EB27BE40);
  return v16;
}

uint64_t type metadata accessor for _EXExtensionInstanceIdentifier()
{
  uint64_t result = qword_1EB27BDC8;
  if (!qword_1EB27BDC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t destroy for AppExtensionProcess.Configuration(id *a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_191FB9C68();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_191F38B14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppExtensionProcess._InstanceIdentifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for AppExtensionProcess._InstanceIdentifier(uint64_t a1)
{
  return sub_191F4CD18(a1, qword_1E92FC820);
}

uint64_t AppExtensionProcess.Configuration.init(appExtensionIdentity:onInterruption:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v7 = *a1;
  uint64_t v8 = (int *)type metadata accessor for AppExtensionProcess.Configuration(0);
  uint64_t v9 = v8[6];
  if (qword_1E92FC800 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for AppExtensionProcess._InstanceIdentifier(0);
  uint64_t v11 = __swift_project_value_buffer(v10, (uint64_t)qword_1E92FC7E0);
  sub_191F38EA8(v11, (uint64_t)a4 + v9, type metadata accessor for AppExtensionProcess._InstanceIdentifier);
  *((unsigned char *)a4 + v8[7]) = 0;
  uint64_t v12 = v8[8];
  uint64_t result = sub_191F45CC0();
  *(void *)((char *)a4 + v12) = result;
  *a4 = v7;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t type metadata accessor for AppExtensionProcess.Configuration(uint64_t a1)
{
  return sub_191F4CD18(a1, (uint64_t *)&unk_1E92FC7D0);
}

uint64_t sub_191F38C84()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[18];
  type metadata accessor for _EXHostConfiguration();
  sub_191F38EA8(v1, v2, type metadata accessor for AppExtensionProcess.Configuration);
  uint64_t v3 = (void *)j___s19ExtensionFoundation20_EXHostConfigurationC07processD0AcA03AppA7ProcessV0D0V_tcfC_0(v2);
  v0[19] = v3;
  sub_191F442A4(0, &qword_1E92FC868);
  if (objc_msgSend(v3, sel_isKindOfClass_, swift_getObjCClassFromMetadata()))
  {
    uint64_t v4 = self;
    self;
    uint64_t v5 = swift_dynamicCastObjCClassUnconditional();
    v0[2] = v0;
    v0[7] = v0 + 15;
    v0[3] = sub_191F2F178;
    uint64_t v6 = swift_continuation_init();
    v0[10] = MEMORY[0x1E4F143A8];
    v0[11] = 0x40000000;
    v0[12] = sub_191F35738;
    v0[13] = &block_descriptor;
    v0[14] = v6;
    objc_msgSend(v4, sel_extensionProcessWithConfiguration_completionHandler_, v5, v0 + 10);
    return MEMORY[0x1F41881E8](v0 + 2);
  }
  else
  {
    objc_msgSend(self, sel__EX_parameterError);
    swift_willThrow();

    return swift_unexpectedError();
  }
}

uint64_t sub_191F38EA8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t _s19ExtensionFoundation19_EXExtensionProcessC09extensionD013configuration17completionHandleryAA20_EXHostConfigurationC_yACSg_So7NSErrorCSgtctFZ_0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191FB9CF8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_191FB9D18();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E92FC890 != -1) {
    swift_once();
  }
  v18[0] = qword_1E92FC870;
  id v14 = (void *)swift_allocObject();
  v14[2] = a2;
  v14[3] = a3;
  v14[4] = a1;
  aBlock[4] = sub_191F3567C;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_191F34288;
  aBlock[3] = &block_descriptor_6;
  id v15 = _Block_copy(aBlock);
  swift_retain();
  id v16 = a1;
  sub_191FB9D08();
  v18[1] = MEMORY[0x1E4FBC860];
  sub_191F392D8((unint64_t *)&qword_1EB27BD30, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BD00);
  sub_191F39B40((unint64_t *)&qword_1EB27BD40, (uint64_t *)&unk_1EB27BD00);
  sub_191FBA1F8();
  MEMORY[0x192FEA2E0](0, v13, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

uint64_t sub_191F39290(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191F392D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t initializeWithCopy for AppExtensionProcess.Configuration(uint64_t a1, long long *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 2);
  long long v17 = *a2;
  *(_OWORD *)a1 = *a2;
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_191FB9C68();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  id v13 = (id)v17;
  swift_retain();
  if (v12(v9, 1, v10))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE40);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v15 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *(void *)(a1 + v15) = *(void *)((char *)a2 + v15);
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_191F394FC(unint64_t a1)
{
  swift_unknownObjectWeakInit();
  id v3 = objc_allocWithZone((Class)type metadata accessor for QueryController());
  uint64_t v4 = v1;
  *(void *)&v4[OBJC_IVAR____EXQueryController_innerController] = sub_191F39700(a1);

  v14.receiver = v4;
  v14.super_class = (Class)type metadata accessor for _EXQueryController();
  uint64_t v5 = (char *)objc_msgSendSuper2(&v14, sel_init);
  uint64_t v6 = *(void *)&v5[OBJC_IVAR____EXQueryController_innerController];
  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v9 = (uint64_t (**)())(v6 + OBJC_IVAR____TtC19ExtensionFoundation15QueryController_callbacks);
  uint64_t v10 = *(void *)(v6 + OBJC_IVAR____TtC19ExtensionFoundation15QueryController_callbacks);
  uint64_t v11 = *(void *)(v6 + OBJC_IVAR____TtC19ExtensionFoundation15QueryController_callbacks + 8);
  uint64_t v12 = *(void *)(v6 + OBJC_IVAR____TtC19ExtensionFoundation15QueryController_callbacks + 16);
  char *v9 = sub_191F55D94;
  v9[1] = (uint64_t (*)())v7;
  _OWORD v9[2] = (uint64_t (*)())sub_191F928FC;
  v9[3] = (uint64_t (*)())v8;
  sub_191F396B4(v10, v11, v12);
  swift_unknownObjectWeakAssign();
  return v5;
}

uint64_t type metadata accessor for QueryController()
{
  uint64_t result = qword_1E92FC740;
  if (!qword_1E92FC740) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for _EXQueryController()
{
  return self;
}

uint64_t sub_191F396B4(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result != 1)
  {
    sub_191F45B24(result);
    return sub_191F45B24(a3);
  }
  return result;
}

id sub_191F39700(unint64_t a1)
{
  uint64_t v3 = sub_191FBA0B8();
  uint64_t v21 = *(void *)(v3 - 8);
  uint64_t v22 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_191FBA0A8();
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = sub_191FB9D18();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v8 = v1;
  sub_191FB9C58();
  uint64_t v9 = &v8[OBJC_IVAR____TtC19ExtensionFoundation15QueryController_callbacks];
  *(void *)uint64_t v9 = 1;
  *((void *)v9 + 1) = 0;
  *((void *)v9 + 2) = 0;
  *((void *)v9 + 3) = 0;
  *(void *)&v8[OBJC_IVAR____TtC19ExtensionFoundation15QueryController__internalExtensions] = MEMORY[0x1E4FBC870];
  *(void *)&v8[OBJC_IVAR____TtC19ExtensionFoundation15QueryController__unelectedCount] = 0;
  uint64_t v10 = OBJC_IVAR____TtC19ExtensionFoundation15QueryController_extensionsLock;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE60);
  uint64_t v11 = swift_allocObject();
  *(_DWORD *)(v11 + 16) = 0;
  *(void *)&v8[v10] = v11;
  uint64_t v20 = OBJC_IVAR____TtC19ExtensionFoundation15QueryController_notificationQueue;
  sub_191F442A4(0, (unint64_t *)&qword_1EB27BFC8);
  sub_191FB9D08();
  uint64_t v24 = MEMORY[0x1E4FBC860];
  sub_191F3B1A4((unint64_t *)&qword_1EB27BE80, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BE58);
  sub_191F39B40((unint64_t *)&qword_1EB27BE70, &qword_1EB27BE58);
  sub_191FBA1F8();
  (*(void (**)(char *, void, uint64_t))(v21 + 104))(v5, *MEMORY[0x1E4FBCC58], v22);
  *(void *)&v8[v20] = sub_191FBA0E8();
  if (!(a1 >> 62))
  {
    uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v12) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    uint64_t v17 = MEMORY[0x1E4FBC860];
LABEL_12:
    *(void *)&v8[OBJC_IVAR____TtC19ExtensionFoundation15QueryController__queries] = v17;

    Controller = (objc_class *)type metadata accessor for QueryController();
    v23.receiver = v8;
    v23.super_class = Controller;
    return objc_msgSendSuper2(&v23, sel_init);
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_191FBA478();
  swift_bridgeObjectRelease();
  if (!v12) {
    goto LABEL_11;
  }
LABEL_3:
  uint64_t v25 = MEMORY[0x1E4FBC860];
  id result = (id)sub_191FBA398();
  if ((v12 & 0x8000000000000000) == 0)
  {
    uint64_t v14 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v15 = (id)MEMORY[0x192FEA540](v14, a1);
      }
      else {
        id v15 = *(id *)(a1 + 8 * v14 + 32);
      }
      id v16 = v15;
      ++v14;
      objc_msgSend(v15, sel_copy);
      sub_191FBA1E8();
      swift_unknownObjectRelease();
      type metadata accessor for _EXQuery();
      swift_dynamicCast();

      sub_191FBA368();
      sub_191FBA3A8();
      sub_191FBA3B8();
      sub_191FBA378();
    }
    while (v12 != v14);
    uint64_t v17 = v25;
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_191F39B40(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_191F39BF0(void *a1@<X8>)
{
  uint64_t v3 = (objc_class *)type metadata accessor for _EXQuery();
  uint64_t v4 = objc_msgSend(objc_allocWithZone(v3), sel_init);
  uint64_t v5 = v1 + OBJC_IVAR____EXQuery_inner;
  swift_beginAccess();
  sub_191F41D54(v5, (uint64_t)v10);
  uint64_t v6 = (uint64_t)&v4[OBJC_IVAR____EXQuery_inner];
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_2Tm(v6);
  sub_191F41528(v10, v6);
  swift_endAccess();
  *(void *)&v4[OBJC_IVAR____EXQuery_resultType] = *(void *)(v1 + OBJC_IVAR____EXQuery_resultType);
  v4[OBJC_IVAR____EXQuery_allowsDuplicates] = *(unsigned char *)(v1 + OBJC_IVAR____EXQuery_allowsDuplicates);
  v4[OBJC_IVAR____EXQuery_includePostprocessing] = *(unsigned char *)(v1 + OBJC_IVAR____EXQuery_includePostprocessing);
  v4[OBJC_IVAR____EXQuery_excludeLockedApps] = *(unsigned char *)(v1 + OBJC_IVAR____EXQuery_excludeLockedApps);
  uint64_t v7 = *(void **)(v1 + OBJC_IVAR____EXQuery_predicate);
  uint64_t v8 = *(void **)&v4[OBJC_IVAR____EXQuery_predicate];
  *(void *)&v4[OBJC_IVAR____EXQuery_predicate] = v7;
  id v9 = v7;

  a1[3] = v3;
  *a1 = v4;
}

id sub_191F39D30()
{
  *(void *)&v0[OBJC_IVAR____EXQuery_resultType] = 0;
  *(void *)&v0[OBJC_IVAR____EXQuery_predicate] = 0;
  v0[OBJC_IVAR____EXQuery_includePostprocessing] = 0;
  uint64_t v1 = OBJC_IVAR____EXQuery_allowsDuplicates;
  uint64_t v2 = self;
  uint64_t v3 = v0;
  id v4 = objc_msgSend(v2, sel_sharedInstance);
  unsigned __int8 v5 = objc_msgSend(v4, sel_queryAllowsDuplicates);

  v0[v1] = v5;
  v3[OBJC_IVAR____EXQuery_excludeLockedApps] = 0;
  uint64_t v6 = (long long *)_EXAuditTokenForCurrentProcess();
  uint64_t v7 = (uint64_t *)&v3[OBJC_IVAR____EXQuery_inner];
  uint64_t v8 = swift_allocObject();
  long long v9 = *v6;
  long long v10 = v6[1];
  v7[3] = (uint64_t)&type metadata for _EXQuery.ValuesQuery;
  v7[4] = (uint64_t)&off_1EE2CB180;
  *uint64_t v7 = v8;
  *(_DWORD *)(v8 + 32) = 0;
  *(void *)(v8 + 16) = 0;
  *(void *)(v8 + 24) = 0;
  *(_OWORD *)(v8 + 36) = v9;
  *(_OWORD *)(v8 + 52) = v10;

  v12.receiver = v3;
  v12.super_class = (Class)type metadata accessor for _EXQuery();
  return objc_msgSendSuper2(&v12, sel_init);
}

void sub_191F39E58()
{
  if (qword_1EB27BC88 != -1) {
LABEL_22:
  }
    swift_once();
  uint64_t v1 = sub_191FB9CA8();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EB27BC70);
  uint64_t v2 = (char *)(id)v0;
  uint64_t v3 = sub_191FB9C88();
  os_log_type_t v4 = sub_191FBA058();
  if (os_log_type_enabled(v3, v4))
  {
    unsigned __int8 v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)unsigned __int8 v5 = 136446210;
    v40[0] = v6;
    sub_191FB9C68();
    sub_191F3B1A4((unint64_t *)&qword_1EB27BCA0, MEMORY[0x1E4F27990]);
    uint64_t v7 = sub_191FBA578();
    uint64_t v39 = sub_191F4EB34(v7, v8, v40);
    sub_191FBA1C8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191F29000, v3, v4, "Resuming Query observer: '%{public}s'", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FEBAE0](v6, -1, -1);
    MEMORY[0x192FEBAE0](v5, -1, -1);
  }
  else
  {
  }
  id v9 = objc_msgSend(self, sel_sharedInstance);
  unsigned int v10 = objc_msgSend(v9, sel_preferInProcessDiscovery);

  if (!v10)
  {
    if (qword_1E92FC760 != -1) {
      swift_once();
    }
    v40[3] = type metadata accessor for QueryController();
    uint64_t v41 = sub_191F3B1A4((unint64_t *)&unk_1E92FD600, (void (*)(uint64_t))type metadata accessor for QueryController);
    v40[0] = (uint64_t)v2;
    MEMORY[0x1F4188790](v41);
    uint64_t v20 = v19 + 4;
    uint64_t v21 = v2;
    os_unfair_lock_lock(v20);
    sub_191F87E98(v22);
    os_unfair_lock_unlock(v20);
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v40);

    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = v21;
    uint64_t v24 = v21;
    unint64_t v25 = swift_bridgeObjectRetain();
    sub_191F8F298(v25, (uint64_t)sub_191F87EEC, v23);
    swift_bridgeObjectRelease();
    swift_release();
    return;
  }
  unint64_t v0 = *(void *)&v2[OBJC_IVAR____TtC19ExtensionFoundation15QueryController__queries];
  uint64_t v38 = OBJC_IVAR____TtC19ExtensionFoundation15QueryController__queries;
  if (!(v0 >> 62))
  {
    uint64_t v11 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v11) {
      goto LABEL_8;
    }
LABEL_24:
    swift_bridgeObjectRelease();
    if (qword_1EB27BBA8 != -1) {
      swift_once();
    }
    unint64_t v26 = swift_bridgeObjectRetain();
    id v27 = (char *)sub_191F3DEA4(v26);
    swift_bridgeObjectRelease();
    uint64_t v28 = *(void *)&v27[OBJC_IVAR____EXQueryResult_identities];
    swift_bridgeObjectRetain();

    if (v28) {
      BOOL v29 = 1;
    }
    else {
      BOOL v29 = (MEMORY[0x1E4FBC860] & 0xC000000000000000) == 0;
    }
    if (!v29)
    {
      if (sub_191FBA478()) {
        sub_191F93C8C(MEMORY[0x1E4FBC860]);
      }
    }
    uint64_t v30 = OBJC_IVAR____TtC19ExtensionFoundation15QueryController_extensionsLock;
    uint64_t v31 = *(os_unfair_lock_s **)&v2[OBJC_IVAR____TtC19ExtensionFoundation15QueryController_extensionsLock];
    swift_retain();
    os_unfair_lock_lock(v31 + 4);
    swift_release();
    os_log_type_t v32 = *(os_unfair_lock_s **)&v2[v30];
    swift_bridgeObjectRetain();
    swift_retain();
    os_unfair_lock_unlock(v32 + 4);
    swift_release();
    id v33 = objc_allocWithZone((Class)_EXQueryResultUpdate);
    sub_191F442A4(0, (unint64_t *)&qword_1EB27BCB0);
    sub_191F3B0F4();
    uint64_t v34 = (void *)sub_191FB9FA8();
    swift_bridgeObjectRelease();
    uint64_t v35 = (void *)sub_191FB9FA8();
    swift_bridgeObjectRelease();
    id v36 = objc_msgSend(v33, sel_initWithCurrentExtensions_updatedExtensions_, v34, v35);

    sub_191F3A588(v36);
    return;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v11 = sub_191FBA478();
  swift_bridgeObjectRelease();
  if (!v11) {
    goto LABEL_24;
  }
LABEL_8:
  type metadata accessor for _EXQuery();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v13 = 4;
  while (1)
  {
    if ((v0 & 0xC000000000000001) != 0) {
      id v14 = (id)MEMORY[0x192FEA540](v13 - 4, v0);
    }
    else {
      id v14 = *(id *)(v0 + 8 * v13);
    }
    id v15 = v14;
    uint64_t v16 = v13 - 3;
    if (__OFADD__(v13 - 4, 1))
    {
      __break(1u);
      goto LABEL_22;
    }
    if (qword_1EB27BBA8 != -1) {
      swift_once();
    }
    uint64_t v17 = (void *)qword_1EB27C518;
    if (!objc_msgSend(v15, sel_isKindOfClass_, ObjCClassFromMetadata, v38, v39)) {
      break;
    }
    id v18 = v15;
    sub_191F3C4B8((uint64_t)v2, v18, v17);

    ++v13;
    if (v16 == v11) {
      goto LABEL_24;
    }
  }
  id v37 = objc_msgSend(self, sel__EX_parameterError);
  swift_willThrow();
  swift_unexpectedError();
  __break(1u);
}

uint64_t type metadata accessor for _EXQuery()
{
  return self;
}

uint64_t sub_191F3A588(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_191FB9CF8();
  uint64_t v82 = *(void *)(v4 - 8);
  uint64_t v83 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v80 = (char *)v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_191FB9D18();
  uint64_t v79 = *(void *)(v81 - 8);
  MEMORY[0x1F4188790](v81);
  os_log_type_t v78 = (char *)v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(a1, sel_addedExtensions);
  uint64_t v8 = sub_191F442A4(0, (unint64_t *)&qword_1EB27BCB0);
  unint64_t v9 = sub_191F3B0F4();
  uint64_t v10 = sub_191FB9FB8();

  id v11 = objc_msgSend(a1, sel_removedUUIDs);
  uint64_t v12 = sub_191FB9C68();
  uint64_t v84 = sub_191F3B1A4(&qword_1E92FC6E0, MEMORY[0x1E4F27990]);
  uint64_t v85 = v12;
  uint64_t v13 = sub_191FB9FB8();

  if (qword_1EB27BC88 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_191FB9CA8();
  uint64_t v15 = __swift_project_value_buffer(v14, (uint64_t)qword_1EB27BC70);
  swift_bridgeObjectRetain_n();
  uint64_t v16 = sub_191FB9C88();
  os_log_type_t v17 = sub_191FBA058();
  BOOL v18 = os_log_type_enabled(v16, v17);
  v77[2] = v8;
  v77[1] = v9;
  uint64_t v86 = v15;
  id v87 = v2;
  if (v18)
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    aBlock[0] = v20;
    *(_DWORD *)uint64_t v19 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_191FB9FC8();
    unint64_t v23 = v22;
    swift_bridgeObjectRelease();
    uint64_t v88 = sub_191F4EB34(v21, v23, aBlock);
    sub_191FBA1C8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191F29000, v16, v17, "Query results update: To add: '%{public}s'", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FEBAE0](v20, -1, -1);
    MEMORY[0x192FEBAE0](v19, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  uint64_t v24 = sub_191FB9C88();
  os_log_type_t v25 = sub_191FBA058();
  if (os_log_type_enabled(v24, v25))
  {
    unint64_t v26 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    aBlock[0] = v27;
    *(_DWORD *)unint64_t v26 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_191FB9FC8();
    unint64_t v30 = v29;
    swift_bridgeObjectRelease();
    uint64_t v88 = sub_191F4EB34(v28, v30, aBlock);
    sub_191FBA1C8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191F29000, v24, v25, "Query results update: To remove UUIDs: '%{public}s'", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FEBAE0](v27, -1, -1);
    MEMORY[0x192FEBAE0](v26, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v31 = v87;
  uint64_t v32 = OBJC_IVAR____TtC19ExtensionFoundation15QueryController_extensionsLock;
  id v33 = *(os_unfair_lock_s **)&v87[OBJC_IVAR____TtC19ExtensionFoundation15QueryController_extensionsLock];
  swift_retain();
  os_unfair_lock_lock(v33 + 4);
  swift_release();
  uint64_t v34 = OBJC_IVAR____TtC19ExtensionFoundation15QueryController__internalExtensions;
  uint64_t v35 = *(void **)&v31[OBJC_IVAR____TtC19ExtensionFoundation15QueryController__internalExtensions];
  swift_bridgeObjectRetain_n();
  unint64_t v36 = swift_bridgeObjectRetain();
  sub_191F3C0A4(v36, v35);
  swift_bridgeObjectRetain();
  uint64_t v37 = swift_bridgeObjectRetain();
  uint64_t v38 = sub_191F3B27C(v37, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  aBlock[7] = v38;
  *(void *)&v31[v34] = v38;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if ((v10 & 0xC000000000000001) != 0) {
    uint64_t v39 = sub_191FBA238();
  }
  else {
    uint64_t v39 = *(void *)(v10 + 16);
  }
  uint64_t v85 = (uint64_t)v35;
  swift_bridgeObjectRelease();
  if (v39 < 1)
  {
    uint64_t v40 = *(void *)(v13 + 16);
    swift_bridgeObjectRelease();
    if (!v40)
    {
      id v76 = *(os_unfair_lock_s **)&v31[v32];
      swift_retain();
      os_unfair_lock_unlock(v76 + 4);
      swift_release();
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v41 = *(os_unfair_lock_s **)&v31[v32];
  swift_retain();
  os_unfair_lock_unlock(v41 + 4);
  swift_release();
  id v87 = v31;
  unsigned int v42 = sub_191FB9C88();
  os_log_type_t v43 = sub_191FBA058();
  if (os_log_type_enabled(v42, v43))
  {
    unint64_t v44 = (uint8_t *)swift_slowAlloc();
    uint64_t v45 = swift_slowAlloc();
    *(_DWORD *)unint64_t v44 = 136446210;
    aBlock[0] = v45;
    uint64_t v84 = (uint64_t)(v44 + 4);
    unint64_t v46 = v87;
    uint64_t v47 = type metadata accessor for _EXQuery();
    uint64_t v48 = swift_bridgeObjectRetain();
    uint64_t v49 = MEMORY[0x192FEA0F0](v48, v47);
    unint64_t v51 = v50;
    swift_bridgeObjectRelease();
    uint64_t v88 = sub_191F4EB34(v49, v51, aBlock);
    sub_191FBA1C8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191F29000, v42, v43, "Query results did change: %{public}s", v44, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FEBAE0](v45, -1, -1);
    MEMORY[0x192FEBAE0](v44, -1, -1);
  }
  else
  {

    os_log_type_t v52 = v87;
  }
  swift_bridgeObjectRetain();
  BOOL v53 = sub_191FB9C88();
  os_log_type_t v54 = sub_191FBA058();
  if (os_log_type_enabled(v53, v54))
  {
    uint64_t v55 = swift_slowAlloc();
    uint64_t v56 = swift_slowAlloc();
    aBlock[0] = v56;
    *(_DWORD *)uint64_t v55 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v57 = sub_191FB9FC8();
    unint64_t v59 = v58;
    swift_bridgeObjectRelease();
    uint64_t v88 = sub_191F4EB34(v57, v59, aBlock);
    sub_191FBA1C8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v55 + 12) = 2082;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v60 = sub_191FB9FC8();
    unint64_t v62 = v61;
    swift_bridgeObjectRelease();
    uint64_t v89 = sub_191F4EB34(v60, v62, aBlock);
    sub_191FBA1C8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191F29000, v53, v54, "Update original results:\n%{public}s\nupdated results:\n%{public}s", (uint8_t *)v55, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x192FEBAE0](v56, -1, -1);
    MEMORY[0x192FEBAE0](v55, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  id v63 = &v87[OBJC_IVAR____TtC19ExtensionFoundation15QueryController_callbacks];
  uint64_t v64 = *(void *)&v87[OBJC_IVAR____TtC19ExtensionFoundation15QueryController_callbacks];
  if (v64 != 1)
  {
    uint64_t v66 = *((void *)v63 + 2);
    uint64_t v65 = *((void *)v63 + 3);
    uint64_t v67 = *((void *)v63 + 1);
    id v68 = *(void **)&v87[OBJC_IVAR____TtC19ExtensionFoundation15QueryController_notificationQueue];
    v69 = (void *)swift_allocObject();
    v69[2] = v64;
    v69[3] = v67;
    v69[4] = v66;
    v69[5] = v65;
    aBlock[4] = (uint64_t)sub_191F56114;
    aBlock[5] = (uint64_t)v69;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_191F34288;
    aBlock[3] = (uint64_t)&block_descriptor_36;
    id v87 = (char *)_Block_copy(aBlock);
    sub_191F560C8(v64, v67, v66);
    id v70 = v68;
    sub_191F45B34(v64);
    sub_191F45B34(v66);
    uint64_t v71 = v78;
    sub_191FB9D08();
    uint64_t v89 = MEMORY[0x1E4FBC860];
    sub_191F3B1A4((unint64_t *)&qword_1EB27BD30, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BD00);
    sub_191F39B40((unint64_t *)&qword_1EB27BD40, (uint64_t *)&unk_1EB27BD00);
    v72 = v80;
    uint64_t v73 = v83;
    sub_191FBA1F8();
    id v74 = v87;
    MEMORY[0x192FEA2E0](0, v71, v72, v87);
    _Block_release(v74);

    sub_191F45B24(v64);
    sub_191F45B24(v66);
    (*(void (**)(char *, uint64_t))(v82 + 8))(v72, v73);
    (*(void (**)(char *, uint64_t))(v79 + 8))(v71, v81);
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_191F3B0F4()
{
  unint64_t result = qword_1E92FC6C0;
  if (!qword_1E92FC6C0)
  {
    sub_191F442A4(255, (unint64_t *)&qword_1EB27BCB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92FC6C0);
  }
  return result;
}

uint64_t sub_191F3B15C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191F3B1A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191F3B1EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191F3B234(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191F3B27C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = sub_191FB9C68();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v2 = MEMORY[0x1E4FBC870];
    uint64_t v48 = MEMORY[0x1E4FBC870];
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_191FBA228();
    uint64_t v10 = sub_191FBA258();
    if (v10)
    {
      uint64_t v11 = v10;
      v41[1] = v3;
      uint64_t v12 = sub_191F442A4(0, (unint64_t *)&qword_1EB27BCB0);
      uint64_t v13 = (void (**)(char *, uint64_t))(v7 + 8);
      uint64_t v45 = MEMORY[0x1E4FBC838] + 8;
      *(void *)&long long v14 = 138543362;
      long long v42 = v14;
      unint64_t v44 = (void (**)(char *, uint64_t))(v7 + 8);
      do
      {
        uint64_t v46 = v11;
        swift_dynamicCast();
        id v16 = v47;
        id v17 = objc_msgSend(v47, sel_UUID);
        sub_191FB9C28();

        LOBYTE(v17) = sub_191F9E85C((uint64_t)v9, a2);
        (*v13)(v9, v6);
        if (v17)
        {
          uint64_t v18 = v12;
          if (qword_1EB27BC88 != -1) {
            swift_once();
          }
          uint64_t v19 = sub_191FB9CA8();
          __swift_project_value_buffer(v19, (uint64_t)qword_1EB27BC70);
          uint64_t v20 = v16;
          uint64_t v15 = sub_191FB9C88();
          os_log_type_t v21 = sub_191FBA058();
          if (os_log_type_enabled(v15, v21))
          {
            uint64_t v22 = swift_slowAlloc();
            uint64_t v23 = v6;
            uint64_t v24 = a2;
            os_log_type_t v25 = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v22 = v42;
            *(void *)(v22 + 4) = v20;
            void *v25 = v20;

            _os_log_impl(&dword_191F29000, v15, v21, "Query results: removing '%{public}@'", (uint8_t *)v22, 0xCu);
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
            swift_arrayDestroy();
            unint64_t v26 = v25;
            a2 = v24;
            uint64_t v6 = v23;
            MEMORY[0x192FEBAE0](v26, -1, -1);
            MEMORY[0x192FEBAE0](v22, -1, -1);
          }
          else
          {

            uint64_t v15 = v20;
          }

          uint64_t v12 = v18;
          uint64_t v13 = v44;
        }
        else
        {
          id v27 = v47;
          uint64_t v28 = v48;
          unint64_t v29 = *(void *)(v48 + 16);
          if (*(void *)(v48 + 24) <= v29)
          {
            sub_191FA0050(v29 + 1);
            uint64_t v28 = v48;
          }
          uint64_t result = sub_191FBA158();
          uint64_t v31 = v28 + 56;
          uint64_t v32 = -1 << *(unsigned char *)(v28 + 32);
          unint64_t v33 = result & ~v32;
          unint64_t v34 = v33 >> 6;
          if (((-1 << v33) & ~*(void *)(v28 + 56 + 8 * (v33 >> 6))) != 0)
          {
            unint64_t v35 = __clz(__rbit64((-1 << v33) & ~*(void *)(v28 + 56 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
          }
          else
          {
            char v36 = 0;
            unint64_t v37 = (unint64_t)(63 - v32) >> 6;
            do
            {
              if (++v34 == v37 && (v36 & 1) != 0)
              {
                __break(1u);
                return result;
              }
              BOOL v38 = v34 == v37;
              if (v34 == v37) {
                unint64_t v34 = 0;
              }
              v36 |= v38;
              uint64_t v39 = *(void *)(v31 + 8 * v34);
            }
            while (v39 == -1);
            unint64_t v35 = __clz(__rbit64(~v39)) + (v34 << 6);
          }
          *(void *)(v31 + ((v35 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v35;
          *(void *)(*(void *)(v28 + 48) + 8 * v35) = v27;
          ++*(void *)(v28 + 16);
        }
        uint64_t v11 = sub_191FBA258();
      }
      while (v11);
      uint64_t v2 = v48;
    }
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    uint64_t v40 = sub_191F3B6E0(a1, a2);
    if (!v3) {
      return v40;
    }
  }
  return v2;
}

uint64_t sub_191F3B6E0(uint64_t a1, uint64_t a2)
{
  v15[1] = *MEMORY[0x1E4F143B8];
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v8 = 8 * v7;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v15 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    sub_191F3B8AC((void *)((char *)v15 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    uint64_t v11 = v10;
    swift_release();
    swift_bridgeObjectRelease();
    if (v2) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v12 = (void *)swift_slowAlloc();
    bzero(v12, v8);
    swift_bridgeObjectRetain();
    sub_191F3B8AC((unint64_t *)v12, v7, a1, a2);
    uint64_t v11 = v13;
    swift_release();
    swift_bridgeObjectRelease();
    MEMORY[0x192FEBAE0](v12, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v11;
}

void sub_191F3B8AC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v50 = a2;
  BOOL v53 = a1;
  uint64_t v6 = sub_191FB9C68();
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v65 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)&v49 - v9;
  uint64_t v57 = a3;
  uint64_t v58 = 0;
  int64_t v13 = 0;
  uint64_t v16 = *(void *)(a3 + 56);
  uint64_t v15 = a3 + 56;
  uint64_t v14 = v16;
  uint64_t v17 = 1 << *(unsigned char *)(v15 - 24);
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v14;
  uint64_t v54 = v15;
  int64_t v55 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v66 = a4 + 56;
  uint64_t v64 = v10 + 16;
  uint64_t v56 = v10;
  id v68 = (void (**)(char *, uint64_t))(v10 + 8);
  *(void *)&long long v11 = 138543362;
  long long v52 = v11;
  uint64_t v67 = a4;
  unint64_t v51 = (char *)&v49 - v9;
  do
  {
    while (1)
    {
      if (v19)
      {
        unint64_t v21 = __clz(__rbit64(v19));
        v19 &= v19 - 1;
        unint64_t v22 = v21 | (v13 << 6);
      }
      else
      {
        int64_t v23 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          goto LABEL_38;
        }
        if (v23 >= v55)
        {
LABEL_37:
          uint64_t v48 = v57;
          swift_retain();
          sub_191F3BE44(v53, v50, v58, v48);
          return;
        }
        unint64_t v24 = *(void *)(v54 + 8 * v23);
        ++v13;
        if (!v24)
        {
          int64_t v13 = v23 + 1;
          if (v23 + 1 >= v55) {
            goto LABEL_37;
          }
          unint64_t v24 = *(void *)(v54 + 8 * v13);
          if (!v24)
          {
            int64_t v13 = v23 + 2;
            if (v23 + 2 >= v55) {
              goto LABEL_37;
            }
            unint64_t v24 = *(void *)(v54 + 8 * v13);
            if (!v24)
            {
              int64_t v25 = v23 + 3;
              if (v25 >= v55) {
                goto LABEL_37;
              }
              unint64_t v24 = *(void *)(v54 + 8 * v25);
              if (!v24)
              {
                while (1)
                {
                  int64_t v13 = v25 + 1;
                  if (__OFADD__(v25, 1)) {
                    goto LABEL_39;
                  }
                  if (v13 >= v55) {
                    goto LABEL_37;
                  }
                  unint64_t v24 = *(void *)(v54 + 8 * v13);
                  ++v25;
                  if (v24) {
                    goto LABEL_22;
                  }
                }
              }
              int64_t v13 = v25;
            }
          }
        }
LABEL_22:
        unint64_t v19 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v13 << 6);
      }
      id v26 = *(id *)(*(void *)(v57 + 48) + 8 * v22);
      id v27 = objc_msgSend(v26, sel_UUID);
      sub_191FB9C28();

      uint64_t v28 = *(void *)(a4 + 16);
      uint64_t v59 = (unint64_t)v68 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      unint64_t v60 = v22;
      if (!v28) {
        break;
      }
      sub_191F3B1A4(&qword_1E92FC6E0, MEMORY[0x1E4F27990]);
      uint64_t v29 = sub_191FB9D68();
      uint64_t v30 = -1 << *(unsigned char *)(a4 + 32);
      unint64_t v31 = v29 & ~v30;
      if (((*(void *)(v66 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31) & 1) == 0) {
        break;
      }
      id v61 = v26;
      unint64_t v62 = v19;
      int64_t v63 = v13;
      uint64_t v32 = v12;
      uint64_t v33 = ~v30;
      uint64_t v34 = *(void *)(v56 + 72);
      unint64_t v35 = *(void (**)(char *, unint64_t, uint64_t))(v56 + 16);
      while (1)
      {
        char v36 = v65;
        v35(v65, *(void *)(v67 + 48) + v34 * v31, v6);
        sub_191F3B1A4(&qword_1E92FC6E8, MEMORY[0x1E4F27990]);
        char v37 = sub_191FB9D98();
        BOOL v38 = *v68;
        (*v68)(v36, v6);
        if (v37) {
          break;
        }
        unint64_t v31 = (v31 + 1) & v33;
        if (((*(void *)(v66 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31) & 1) == 0)
        {
          a4 = v67;
          uint64_t v12 = v32;
          unint64_t v19 = v62;
          int64_t v13 = v63;
          id v26 = v61;
          v38(v12, v6);
          goto LABEL_29;
        }
      }
      uint64_t v12 = v32;
      v38(v32, v6);
      if (qword_1EB27BC88 != -1) {
        swift_once();
      }
      uint64_t v40 = sub_191FB9CA8();
      __swift_project_value_buffer(v40, (uint64_t)qword_1EB27BC70);
      uint64_t v41 = v61;
      uint64_t v20 = sub_191FB9C88();
      os_log_type_t v42 = sub_191FBA058();
      BOOL v43 = os_log_type_enabled(v20, v42);
      a4 = v67;
      unint64_t v19 = v62;
      int64_t v13 = v63;
      if (v43)
      {
        uint64_t v44 = swift_slowAlloc();
        uint64_t v45 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v44 = v52;
        *(void *)(v44 + 4) = v41;
        void *v45 = v41;
        uint64_t v46 = v45;
        _os_log_impl(&dword_191F29000, v20, v42, "Query results: removing '%{public}@'", (uint8_t *)v44, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
        swift_arrayDestroy();
        id v47 = v46;
        uint64_t v12 = v51;
        MEMORY[0x192FEBAE0](v47, -1, -1);
        MEMORY[0x192FEBAE0](v44, -1, -1);
      }
      else
      {

        uint64_t v20 = v41;
      }
    }
    (*v68)(v12, v6);
LABEL_29:

    *(unint64_t *)((char *)v53 + ((v60 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v60;
  }
  while (!__OFADD__(v58++, 1));
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

uint64_t sub_191F3BE44(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v9 = MEMORY[0x1E4FBC870];
LABEL_36:
    swift_release();
    return v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BB40);
  uint64_t result = sub_191FBA2E8();
  uint64_t v9 = result;
  uint64_t v28 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v16 = v28[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v16 = v28[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    id v18 = *(id *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t result = sub_191FBA158();
    uint64_t v19 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(void *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(void *)(*(void *)(v9 + 48) + 8 * v22) = v18;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_36;
  }
  unint64_t v16 = v28[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

void sub_191F3C0A4(unint64_t a1, void *a2)
{
  unint64_t v2 = a1;
  v18[1] = a2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    sub_191FBA228();
    sub_191F442A4(0, (unint64_t *)&qword_1EB27BCB0);
    sub_191F3B0F4();
    sub_191FB9FE8();
    unint64_t v2 = (unint64_t)v18[2];
    uint64_t v17 = v18[3];
    uint64_t v3 = (uint64_t)v18[4];
    id v4 = v18[5];
    unint64_t v5 = (unint64_t)v18[6];
  }
  else
  {
    id v4 = 0;
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v17 = (void *)(a1 + 56);
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(a1 + 56);
  }
  int64_t v9 = (unint64_t)(v3 + 64) >> 6;
  if ((v2 & 0x8000000000000000) != 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v5)
    {
      uint64_t v10 = (v5 - 1) & v5;
      unint64_t v11 = __clz(__rbit64(v5)) | ((void)v4 << 6);
      uint64_t v12 = (char *)v4;
      goto LABEL_29;
    }
    uint64_t v14 = (uint64_t)v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v14 >= v9) {
      goto LABEL_32;
    }
    unint64_t v15 = v17[v14];
    uint64_t v12 = (char *)v4 + 1;
    if (!v15)
    {
      uint64_t v12 = (char *)v4 + 2;
      if ((uint64_t)v4 + 2 >= v9) {
        goto LABEL_32;
      }
      unint64_t v15 = v17[(void)v12];
      if (!v15)
      {
        uint64_t v12 = (char *)v4 + 3;
        if ((uint64_t)v4 + 3 >= v9) {
          goto LABEL_32;
        }
        unint64_t v15 = v17[(void)v12];
        if (!v15)
        {
          uint64_t v12 = (char *)v4 + 4;
          if ((uint64_t)v4 + 4 >= v9) {
            goto LABEL_32;
          }
          unint64_t v15 = v17[(void)v12];
          if (!v15)
          {
            uint64_t v12 = (char *)v4 + 5;
            if ((uint64_t)v4 + 5 >= v9) {
              goto LABEL_32;
            }
            unint64_t v15 = v17[(void)v12];
            if (!v15)
            {
              unint64_t v16 = (char *)v4 + 6;
              while ((char *)v9 != v16)
              {
                unint64_t v15 = v17[(void)v16++];
                if (v15)
                {
                  uint64_t v12 = v16 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_191F4DD64();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v10 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + ((void)v12 << 6);
LABEL_29:
    id v13 = *(id *)(*(void *)(v2 + 48) + 8 * v11);
    if (!v13) {
      goto LABEL_32;
    }
    while (1)
    {
      sub_191F37744(v18, v13);

      id v4 = v12;
      unint64_t v5 = v10;
      if ((v2 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (sub_191FBA258())
      {
        sub_191F442A4(0, (unint64_t *)&qword_1EB27BCB0);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v13 = v18[0];
        swift_unknownObjectRelease();
        uint64_t v12 = (char *)v4;
        uint64_t v10 = v5;
        if (v13) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

uint64_t sub_191F3C474(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_191FB9C68();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_191F3C4B8(uint64_t a1, void *a2, void *a3)
{
}

void sub_191F3C530(uint64_t a1, void *a2, void *a3, unint64_t *a4, void (*a5)(uint64_t), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12 = sub_191F3DE5C(a4, a5);
  if (sub_191F418CC((uint64_t)a2))
  {
    if (qword_1EB27BC88 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_191FB9CA8();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EB27BC70);
    id v14 = a3;
    id v15 = a2;
    unint64_t v16 = (char *)v14;
    id v17 = v15;
    id v18 = sub_191FB9C88();
    os_log_type_t v19 = sub_191FBA088();
    uint64_t v65 = a8;
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      unint64_t v21 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 138543618;
      unint64_t v22 = v16;
      sub_191FBA1C8();
      *unint64_t v21 = v16;

      *(_WORD *)(v20 + 12) = 2114;
      aBlock[0] = v17;
      id v23 = v17;
      sub_191FBA1C8();
      v21[1] = v17;

      _os_log_impl(&dword_191F29000, v18, v19, "%{public}@ Adding observer for query '%{public}@'", (uint8_t *)v20, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
      swift_arrayDestroy();
      MEMORY[0x192FEBAE0](v21, -1, -1);
      MEMORY[0x192FEBAE0](v20, -1, -1);
    }
    else
    {
    }
    uint64_t v34 = v16;
    unint64_t v35 = (os_unfair_lock_s *)(*(void *)&v16[OBJC_IVAR____EXDiscoveryController_activeQueriesLock] + 16);
    os_unfair_lock_lock(v35);
    char v36 = (uint64_t *)&v16[OBJC_IVAR____EXDiscoveryController_activeQueries];
    swift_beginAccess();
    uint64_t v37 = *v36;
    if ((*v36 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v38 = sub_191FBA238();
      swift_bridgeObjectRelease();
      uint64_t v37 = *v36;
    }
    else
    {
      uint64_t v38 = *(void *)(v37 + 16);
    }
    id v39 = v17;
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_191F3D750(v39, v37);

    swift_bridgeObjectRelease();
    if (!v40)
    {
      type metadata accessor for _EXActiveQuery();
      uint64_t v41 = (void *)swift_allocObject();
      void v41[2] = v39;
      v41[3] = v34;
      uint64_t v42 = MEMORY[0x1E4FBC870];
      v41[4] = MEMORY[0x1E4FBC870];
      v41[5] = v42;
      v41[6] = v42;
      swift_beginAccess();
      id v43 = v34;
      id v44 = v39;
      uint64_t v45 = swift_retain();
      sub_191F3D81C(v45, v44);
      swift_endAccess();
      uint64_t v46 = v44;
      id v47 = sub_191FB9C88();
      uint64_t v48 = sub_191FBA088();
      if (os_log_type_enabled(v47, (os_log_type_t)v48))
      {
        uint64_t v49 = (uint8_t *)swift_slowAlloc();
        uint64_t v64 = v47;
        uint64_t v50 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v49 = 138543362;
        aBlock[0] = v46;
        unint64_t v51 = v46;
        sub_191FBA1C8();
        *uint64_t v50 = v46;

        _os_log_impl(&dword_191F29000, v64, (os_log_type_t)v48, "New active query %{public}@'", v49, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
        swift_arrayDestroy();
        MEMORY[0x192FEBAE0](v50, -1, -1);
        MEMORY[0x192FEBAE0](v49, -1, -1);
        uint64_t v46 = v64;
      }
      else
      {
      }
      swift_retain();
    }
    swift_beginAccess();
    id v52 = (id)swift_unknownObjectRetain();
    swift_retain();
    sub_191F3CEB8((uint64_t)v68, (uint64_t)v52, v12);
    swift_endAccess();
    swift_unknownObjectRelease();
    swift_beginAccess();
    swift_unknownObjectRetain();
    sub_191F3CEB8((uint64_t)v68, (uint64_t)v52, v12);
    swift_endAccess();

    swift_unknownObjectRelease();
    if (v38 <= 0)
    {
      BOOL v53 = v34;
      uint64_t v54 = sub_191FB9C88();
      os_log_type_t v55 = sub_191FBA088();
      if (os_log_type_enabled(v54, v55))
      {
        uint64_t v56 = (uint8_t *)swift_slowAlloc();
        uint64_t v67 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v56 = 138543362;
        aBlock[0] = v53;
        uint64_t v57 = v53;
        sub_191FBA1C8();
        void *v67 = v53;

        _os_log_impl(&dword_191F29000, v54, v55, "%{public}@ LS database observing started.", v56, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
        swift_arrayDestroy();
        MEMORY[0x192FEBAE0](v67, -1, -1);
        MEMORY[0x192FEBAE0](v56, -1, -1);
      }
      else
      {

        uint64_t v54 = v53;
      }

      id v58 = objc_msgSend(self, sel_sharedInstance);
      uint64_t v59 = swift_allocObject();
      *(void *)(v59 + 16) = v53;
      aBlock[4] = v65;
      aBlock[5] = v59;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_191F34288;
      aBlock[3] = a9;
      unint64_t v60 = _Block_copy(aBlock);
      id v61 = v53;
      swift_release();
      id v62 = objc_msgSend(v58, sel_addChangeObserver_, v60);
      _Block_release(v60);

      sub_191FBA1E8();
      swift_unknownObjectRelease();
      uint64_t v63 = (uint64_t)v61 + OBJC_IVAR____EXDiscoveryController_settingsStoreToken;
      swift_beginAccess();
      sub_191F52BC0((uint64_t)aBlock, v63);
      swift_endAccess();
      objc_msgSend(*(id *)((char *)&v61->isa + OBJC_IVAR____EXDiscoveryController_observer), sel_startObserving);
    }
    sub_191F3E628();
    swift_release_n();
    os_unfair_lock_unlock(v35);
  }
  else
  {
    if (qword_1EB27BC88 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_191FB9CA8();
    __swift_project_value_buffer(v24, (uint64_t)qword_1EB27BC70);
    id v25 = a3;
    id v26 = a2;
    id v66 = v25;
    id v27 = v26;
    uint64_t v28 = sub_191FB9C88();
    os_log_type_t v29 = sub_191FBA068();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      unint64_t v31 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 138543618;
      id v32 = v66;
      sub_191FBA1C8();
      void *v31 = v66;

      *(_WORD *)(v30 + 12) = 2114;
      aBlock[0] = v27;
      id v33 = v27;
      sub_191FBA1C8();
      v31[1] = v27;

      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
      swift_arrayDestroy();
      MEMORY[0x192FEBAE0](v31, -1, -1);
      MEMORY[0x192FEBAE0](v30, -1, -1);
    }
    else
    {
    }
  }
}

uint64_t sub_191F3CEB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_191FBA648();
  swift_getObjectType();
  uint64_t v17 = a3;
  v20[3] = swift_getAssociatedTypeWitness();
  v20[4] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_0(v20);
  swift_bridgeObjectRetain();
  sub_191FBA318();
  sub_191FB9D78();
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v20);
  uint64_t v8 = sub_191FBA688();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  uint64_t v19 = a1;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    while (1)
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v12 = sub_191FBA328();
      uint64_t v13 = sub_191FBA328();
      swift_unknownObjectRelease();
      if (v12 == v13) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_5;
      }
    }
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    *(_OWORD *)uint64_t v19 = *(_OWORD *)(*(void *)(*v18 + 48) + 16 * v10);
    swift_unknownObjectRetain();
    return 0;
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v18;
    uint64_t *v18 = 0x8000000000000000;
    uint64_t v15 = swift_unknownObjectRetain();
    sub_191F3D114(v15, v17, v10, isUniquelyReferenced_nonNull_native);
    uint64_t *v18 = v21;
    swift_bridgeObjectRelease();
    *(void *)uint64_t v19 = a2;
    *(void *)(v19 + 8) = v17;
    return 1;
  }
}

uint64_t sub_191F3D114(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v6 = result;
  unint64_t v7 = *(void *)(*v4 + 16);
  unint64_t v8 = *(void *)(*v4 + 24);
  if (v8 > v7 && (a4 & 1) != 0) {
    goto LABEL_12;
  }
  if (a4)
  {
    sub_191F9FCA0();
  }
  else
  {
    if (v8 > v7)
    {
      uint64_t result = (uint64_t)sub_191FA1044();
      goto LABEL_12;
    }
    sub_191F3D3CC();
  }
  uint64_t v9 = *v4;
  sub_191FBA648();
  swift_getObjectType();
  v21[3] = swift_getAssociatedTypeWitness();
  v21[4] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_0(v21);
  sub_191FBA318();
  sub_191FB9D78();
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v21);
  uint64_t result = sub_191FBA688();
  uint64_t v10 = -1 << *(unsigned char *)(v9 + 32);
  a3 = result & ~v10;
  if ((*(void *)(v9 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v11 = ~v10;
    do
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v12 = sub_191FBA328();
      uint64_t v13 = sub_191FBA328();
      uint64_t result = swift_unknownObjectRelease();
      if (v12 == v13) {
        goto LABEL_15;
      }
      a3 = (a3 + 1) & v11;
    }
    while (((*(void *)(v9 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) != 0);
  }
LABEL_12:
  uint64_t v14 = *v19;
  *(void *)(*v19 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v15 = (uint64_t *)(*(void *)(v14 + 48) + 16 * a3);
  uint64_t *v15 = v6;
  v15[1] = a2;
  uint64_t v16 = *(void *)(v14 + 16);
  BOOL v17 = __OFADD__(v16, 1);
  uint64_t v18 = v16 + 1;
  if (!v17)
  {
    *(void *)(v14 + 16) = v18;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_191FBA5C8();
  __break(1u);
  return result;
}

uint64_t sub_191F3D354@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC19ExtensionFoundation15QueryController_id;
  uint64_t v4 = sub_191FB9C68();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_191F3D3CC()
{
  uint64_t v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FC6D8);
  uint64_t v2 = sub_191FBA2C8();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v0 = v3;
    return result;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v24 = v1 + 56;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(v1 + 56);
  int64_t v25 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = v2 + 56;
  uint64_t result = swift_retain();
  for (int64_t i = 0; ; int64_t i = v26)
  {
    if (v6)
    {
      unint64_t v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      int64_t v26 = i;
      unint64_t v12 = v11 | (i << 6);
      goto LABEL_24;
    }
    int64_t v13 = i + 1;
    if (__OFADD__(i, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v13 >= v25) {
      goto LABEL_33;
    }
    unint64_t v14 = *(void *)(v24 + 8 * v13);
    int64_t v15 = i + 1;
    if (!v14)
    {
      int64_t v15 = i + 2;
      if (i + 2 >= v25) {
        goto LABEL_33;
      }
      unint64_t v14 = *(void *)(v24 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = i + 3;
        if (i + 3 >= v25) {
          goto LABEL_33;
        }
        unint64_t v14 = *(void *)(v24 + 8 * v15);
        if (!v14) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v14 - 1) & v14;
    int64_t v26 = v15;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
LABEL_24:
    long long v27 = *(_OWORD *)(*(void *)(v1 + 48) + 16 * v12);
    sub_191FBA648();
    swift_getObjectType();
    v28[3] = swift_getAssociatedTypeWitness();
    v28[4] = swift_getAssociatedConformanceWitness();
    __swift_allocate_boxed_opaque_existential_0(v28);
    swift_unknownObjectRetain();
    sub_191FBA318();
    sub_191FB9D78();
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v28);
    uint64_t result = sub_191FBA688();
    uint64_t v17 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v18 = result & ~v17;
    unint64_t v19 = v18 >> 6;
    if (((-1 << v18) & ~*(void *)(v7 + 8 * (v18 >> 6))) != 0)
    {
      unint64_t v10 = __clz(__rbit64((-1 << v18) & ~*(void *)(v7 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v20 = 0;
      unint64_t v21 = (unint64_t)(63 - v17) >> 6;
      do
      {
        if (++v19 == v21 && (v20 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v22 = v19 == v21;
        if (v19 == v21) {
          unint64_t v19 = 0;
        }
        v20 |= v22;
        uint64_t v23 = *(void *)(v7 + 8 * v19);
      }
      while (v23 == -1);
      unint64_t v10 = __clz(__rbit64(~v23)) + (v19 << 6);
    }
    *(void *)(v7 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    *(_OWORD *)(*(void *)(v3 + 48) + 16 * v10) = v27;
    ++*(void *)(v3 + 16);
  }
  uint64_t v16 = i + 4;
  if (i + 4 >= v25)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v24 + 8 * v16);
  if (v14)
  {
    int64_t v15 = i + 4;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v25) {
      goto LABEL_33;
    }
    unint64_t v14 = *(void *)(v24 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_191F3D750(void *a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(void *)(a2 + 16))
    {
      unint64_t v6 = sub_191F3DA34((uint64_t)a1);
      if (v7)
      {
        uint64_t v5 = *(void *)(*(void *)(a2 + 56) + 8 * v6);
        swift_retain();
        return v5;
      }
    }
    return 0;
  }
  id v3 = a1;
  uint64_t v4 = sub_191FBA428();

  if (!v4) {
    return 0;
  }
  type metadata accessor for _EXActiveQuery();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  uint64_t v5 = v9;
  swift_unknownObjectRelease();
  return v5;
}

uint64_t sub_191F3D81C(uint64_t a1, void *a2)
{
  id v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    uint64_t result = sub_191FBA238();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    *id v3 = sub_191F95BF4(v7, result + 1);
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *v3;
  *id v3 = 0x8000000000000000;
  sub_191F3D8D0(a1, a2, isUniquelyReferenced_nonNull_native);
  *id v3 = v10;

  return swift_bridgeObjectRelease();
}

id sub_191F3D8D0(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *v3;
  unint64_t v9 = sub_191F3DA34((uint64_t)a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_191F9636C();
LABEL_7:
    int64_t v15 = (void *)*v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];
      id result = (id)swift_release();
      *(void *)(v16 + 8 * v9) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_191F3DB84(v12, a3 & 1);
  unint64_t v18 = sub_191F3DA34((uint64_t)a2);
  if ((v13 & 1) != (v19 & 1))
  {
LABEL_17:
    type metadata accessor for _EXQuery();
    id result = (id)sub_191FBA5D8();
    __break(1u);
    return result;
  }
  unint64_t v9 = v18;
  int64_t v15 = (void *)*v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  v15[(v9 >> 6) + 8] |= 1 << v9;
  uint64_t v20 = 8 * v9;
  *(void *)(v15[6] + v20) = a2;
  *(void *)(v15[7] + v20) = a1;
  uint64_t v21 = v15[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v15[2] = v23;

  return a2;
}

unint64_t sub_191F3DA34(uint64_t a1)
{
  uint64_t v2 = sub_191FBA158();

  return sub_191F3DA78(a1, v2);
}

unint64_t sub_191F3DA78(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    type metadata accessor for _EXQuery();
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = sub_191FBA168();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = sub_191FBA168();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

uint64_t sub_191F3DB84(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FC730);
  uint64_t v6 = sub_191FBA498();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  unint64_t v35 = v2;
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    uint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    unint64_t v31 = *(void **)(*(void *)(v5 + 48) + v30);
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      id v33 = v31;
      swift_retain();
    }
    uint64_t result = sub_191FBA158();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  uint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_191F3DE5C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_191F3DEA4(unint64_t a1)
{
  uint64_t v14 = MEMORY[0x1E4FBC870];
  if (a1 >> 62)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_191FBA478();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  if (v2)
  {
    uint64_t v3 = 4;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        uint64_t v4 = (char *)MEMORY[0x192FEA540](v3 - 4, a1);
      }
      else {
        uint64_t v4 = (char *)*(id *)(a1 + 8 * v3);
      }
      uint64_t v5 = v4;
      uint64_t v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1))
      {
        __break(1u);
        goto LABEL_15;
      }
      uint64_t v7 = (char *)sub_191F3FE40(v4);
      id result = *(id *)&v7[OBJC_IVAR____EXQueryResult_identities];
      if (!result) {
        break;
      }
      unint64_t v9 = swift_bridgeObjectRetain();
      sub_191F361A4(v9);

      ++v3;
      if (v6 == v2)
      {
        swift_bridgeObjectRelease();
        uint64_t v10 = v14;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = MEMORY[0x1E4FBC870];
LABEL_13:
    int64_t v11 = (objc_class *)type metadata accessor for _EXQueryResult();
    uint64_t v12 = (char *)objc_allocWithZone(v11);
    *(void *)&v12[OBJC_IVAR____EXQueryResult_identities] = v10;
    *(void *)&v12[OBJC_IVAR____EXQueryResult_availablility] = 0;
    v13.receiver = v12;
    v13.super_class = v11;
    return objc_msgSendSuper2(&v13, sel_init);
  }
  return result;
}

void sub_191F3E0A8(uint64_t a1, uint64_t a2)
{
  uint64_t v36 = sub_191FB9C68();
  uint64_t v5 = *(void *)(v36 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v36);
  uint64_t v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v30 - v9;
  uint64_t v40 = a2;
  uint64_t v41 = MEMORY[0x1E4FBC870];
  id v31 = v2;
  uint64_t v37 = a2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_191FBA228();
    sub_191F442A4(0, (unint64_t *)&qword_1EB27BCB0);
    sub_191F3B0F4();
    sub_191FB9FE8();
    a1 = v42;
    uint64_t v35 = v43;
    uint64_t v12 = v44;
    uint64_t v11 = v45;
    unint64_t v13 = v46;
  }
  else
  {
    uint64_t v14 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v15 = *(void *)(a1 + 56);
    uint64_t v35 = a1 + 56;
    uint64_t v12 = ~v14;
    uint64_t v16 = -v14;
    if (v16 < 64) {
      uint64_t v17 = ~(-1 << v16);
    }
    else {
      uint64_t v17 = -1;
    }
    unint64_t v13 = v17 & v15;
    swift_bridgeObjectRetain();
    uint64_t v11 = 0;
  }
  v30[1] = v12;
  uint64_t v33 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  int64_t v34 = (unint64_t)(v12 + 64) >> 6;
  unint64_t v18 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v32 = MEMORY[0x1E4FBC838] + 8;
  while (a1 < 0)
  {
    uint64_t v22 = sub_191FBA258();
    if (!v22) {
      goto LABEL_33;
    }
    uint64_t v38 = v22;
    sub_191F442A4(0, (unint64_t *)&qword_1EB27BCB0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v23 = v39;
    swift_unknownObjectRelease();
    uint64_t v21 = v11;
    uint64_t v19 = v13;
    if (!v23) {
      goto LABEL_33;
    }
LABEL_31:

    if (sub_191F37E08(v23, v37))
    {
    }
    else
    {
      id v27 = objc_msgSend(v23, sel_UUID);
      sub_191FB9C28();

      sub_191F54488((uint64_t)v10, v8);
      (*v18)(v10, v36);
    }
    uint64_t v11 = v21;
    unint64_t v13 = v19;
  }
  if (v13)
  {
    uint64_t v19 = (v13 - 1) & v13;
    unint64_t v20 = __clz(__rbit64(v13)) | (v11 << 6);
    uint64_t v21 = v11;
LABEL_30:
    id v23 = *(id *)(*(void *)(a1 + 48) + 8 * v20);
    if (!v23) {
      goto LABEL_33;
    }
    goto LABEL_31;
  }
  int64_t v24 = v11 + 1;
  if (!__OFADD__(v11, 1))
  {
    if (v24 >= v34) {
      goto LABEL_33;
    }
    unint64_t v25 = *(void *)(v35 + 8 * v24);
    uint64_t v21 = v11 + 1;
    if (!v25)
    {
      uint64_t v21 = v11 + 2;
      if (v11 + 2 >= v34) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v35 + 8 * v21);
      if (!v25)
      {
        uint64_t v21 = v11 + 3;
        if (v11 + 3 >= v34) {
          goto LABEL_33;
        }
        unint64_t v25 = *(void *)(v35 + 8 * v21);
        if (!v25)
        {
          uint64_t v21 = v11 + 4;
          if (v11 + 4 >= v34) {
            goto LABEL_33;
          }
          unint64_t v25 = *(void *)(v35 + 8 * v21);
          if (!v25)
          {
            uint64_t v26 = v11 + 5;
            while (v34 != v26)
            {
              unint64_t v25 = *(void *)(v35 + 8 * v26++);
              if (v25)
              {
                uint64_t v21 = v26 - 1;
                goto LABEL_29;
              }
            }
LABEL_33:
            sub_191F4DD64();
            swift_bridgeObjectRelease();
            sub_191F442A4(0, (unint64_t *)&qword_1EB27BCB0);
            sub_191F3B0F4();
            BOOL v28 = (void *)sub_191FB9FA8();
            swift_bridgeObjectRelease();
            sub_191F3C474(&qword_1E92FC6E0);
            uint64_t v29 = (void *)sub_191FB9FA8();
            swift_bridgeObjectRelease();
            objc_msgSend(v31, sel_initWithAddedExtensions_removedUUIDs_, v28, v29);

            return;
          }
        }
      }
    }
LABEL_29:
    uint64_t v19 = (v25 - 1) & v25;
    unint64_t v20 = __clz(__rbit64(v25)) + (v21 << 6);
    goto LABEL_30;
  }
  __break(1u);
}

uint64_t type metadata accessor for _EXActiveQuery()
{
  return self;
}

uint64_t sub_191F3E628()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_191FB9C68();
  uint64_t v168 = *(void *)(v2 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  v180 = (char *)&v166 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v166 - v6;
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)&v166 - v9;
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  unint64_t v13 = (char *)&v166 - v12;
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v166 - v15;
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v19 = (char *)&v166 - v18;
  MEMORY[0x1F4188790](v17);
  v182 = (char *)&v166 - v20;
  sub_191FB9C58();
  uint64_t v22 = *(char **)(v0 + 16);
  uint64_t v21 = *(void *)(v0 + 24);
  uint64_t v23 = *(void *)&v22[OBJC_IVAR____EXQuery_resultType];
  uint64_t v183 = v2;
  if (v23)
  {
    v177 = (void (**)(id, char *, void))v22;
    int64_t v24 = (char *)sub_191F3FE40(v22);
    unint64_t v25 = *(void **)&v24[OBJC_IVAR____EXQueryResult_availablility];
    if (!v25) {
      goto LABEL_122;
    }
    id v173 = v24;
    type metadata accessor for _EXExtensionAvailablility();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    uint64_t v21 = v25;
    if (!objc_msgSend((id)v21, sel_isKindOfClass_, ObjCClassFromMetadata)) {
      goto LABEL_124;
    }
    id v27 = (char *)objc_allocWithZone((Class)type metadata accessor for _EXQueryResultUpdate());
    *(void *)&v27[OBJC_IVAR____EXQueryResultUpdate_removedUUIDs] = MEMORY[0x1E4FBC870];
    *(void *)&v27[OBJC_IVAR____EXQueryResult_identities] = 0;
    *(void *)&v27[OBJC_IVAR____EXQueryResult_availablility] = v25;
    BOOL v28 = (objc_class *)type metadata accessor for _EXQueryResult();
    v192.receiver = v27;
    v192.super_class = v28;
    id v179 = objc_msgSendSuper2(&v192, sel_init);
    v174 = (void *)sub_191F9F024();
    uint64_t v30 = v174[2];
    id v31 = v180;
    uint64_t v32 = v177;
    if (v30)
    {
      uint64_t v33 = (long long *)(v174 + 4);
      v178 = (char *)(v168 + 16);
      int64_t v34 = (void (**)(char *, uint64_t))(v168 + 8);
      *(void *)&long long v29 = 136446466;
      long long v176 = v29;
      uint64_t v175 = MEMORY[0x1E4FBC840] + 8;
      uint64_t v35 = v183;
      do
      {
        uint64_t v37 = qword_1EB27BC88;
        long long v181 = *v33;
        swift_unknownObjectRetain();
        if (v37 != -1) {
          swift_once();
        }
        uint64_t v38 = sub_191FB9CA8();
        __swift_project_value_buffer(v38, (uint64_t)qword_1EB27BC70);
        (*(void (**)(char *, char *, uint64_t))v178)(v31, v182, v35);
        swift_unknownObjectRetain_n();
        id v39 = sub_191FB9C88();
        os_log_type_t v40 = sub_191FBA058();
        if (os_log_type_enabled(v39, v40))
        {
          uint64_t v41 = swift_slowAlloc();
          uint64_t v42 = swift_slowAlloc();
          uint64_t v191 = v42;
          *(_DWORD *)uint64_t v41 = v176;
          sub_191F414E0((unint64_t *)&qword_1EB27BCA0, 255, MEMORY[0x1E4F27990]);
          uint64_t v43 = sub_191FBA578();
          *(void *)(v41 + 4) = sub_191F4EB34(v43, v44, &v191);
          swift_bridgeObjectRelease();
          (*v34)(v180, v35);
          *(_WORD *)(v41 + 12) = 2082;
          long long v193 = v181;
          swift_unknownObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92FC4C0);
          uint64_t v45 = sub_191FB9E08();
          *(void *)(v41 + 14) = sub_191F4EB34(v45, v46, &v191);
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_191F29000, v39, v40, "[%{public}s] Sending update observer update to %{public}s", (uint8_t *)v41, 0x16u);
          swift_arrayDestroy();
          uint64_t v47 = v42;
          id v31 = v180;
          MEMORY[0x192FEBAE0](v47, -1, -1);
          uint64_t v48 = v41;
          uint64_t v32 = v177;
          MEMORY[0x192FEBAE0](v48, -1, -1);
        }
        else
        {
          (*v34)(v31, v35);

          swift_unknownObjectRelease_n();
        }
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(void, id, uint64_t))(*((void *)&v181 + 1) + 16))(v32, v179, ObjectType);
        swift_unknownObjectRelease();
        ++v33;
        --v30;
      }
      while (v30);
    }

    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v168 + 8))(v182, v183);
  }
  type metadata accessor for _EXQuery();
  if (!objc_msgSend(v22, sel_isKindOfClass_, swift_getObjCClassFromMetadata())) {
    goto LABEL_125;
  }
  v171 = v16;
  v174 = v13;
  v172 = v10;
  id v173 = v7;
  uint64_t v50 = v22;
  uint64_t v21 = (uint64_t)sub_191F3FE40(v50);
  v178 = v50;

  uint64_t v51 = *(void *)(v21 + OBJC_IVAR____EXQueryResult_identities);
  swift_bridgeObjectRetain();

  if (!v51) {
    goto LABEL_123;
  }
  swift_beginAccess();
  id v52 = *(void **)(v1 + 40);
  uint64_t v53 = MEMORY[0x1E4FBC870];
  *(void *)(v1 + 40) = MEMORY[0x1E4FBC870];
  uint64_t v54 = v52[2];
  id v179 = v52;
  uint64_t v167 = v1;
  uint64_t v166 = v51;
  if (!v54) {
    goto LABEL_42;
  }
  os_log_type_t v55 = v19;
  uint64_t v56 = (char *)objc_allocWithZone((Class)type metadata accessor for _EXQueryResultUpdate());
  *(void *)&v56[OBJC_IVAR____EXQueryResultUpdate_removedUUIDs] = v53;
  *(void *)&v56[OBJC_IVAR____EXQueryResult_identities] = v51;
  *(void *)&v56[OBJC_IVAR____EXQueryResult_availablility] = 0;
  uint64_t v57 = (objc_class *)type metadata accessor for _EXQueryResult();
  v184.receiver = v56;
  v184.super_class = v57;
  uint64_t v21 = (uint64_t)sel_init;
  swift_bridgeObjectRetain();
  *(void *)&long long v181 = objc_msgSendSuper2(&v184, sel_init);
  uint64_t v58 = v52[7];
  uint64_t v175 = (uint64_t)(v52 + 7);
  uint64_t v59 = 1 << *((unsigned char *)v52 + 32);
  uint64_t v60 = -1;
  if (v59 < 64) {
    uint64_t v60 = ~(-1 << v59);
  }
  unint64_t v61 = v60 & v58;
  *(void *)&long long v176 = (unint64_t)(v59 + 63) >> 6;
  v180 = (char *)(v168 + 16);
  v177 = (void (**)(id, char *, void))(v168 + 8);
  swift_bridgeObjectRetain();
  uint64_t v62 = 0;
  *(void *)&long long v63 = 136446466;
  long long v170 = v63;
  uint64_t v169 = MEMORY[0x1E4FBC840] + 8;
  while (1)
  {
    if (v61)
    {
      unint64_t v65 = __clz(__rbit64(v61));
      v61 &= v61 - 1;
      unint64_t v66 = v65 | (v62 << 6);
      goto LABEL_37;
    }
    uint64_t v67 = v62 + 1;
    if (__OFADD__(v62, 1)) {
      goto LABEL_118;
    }
    if (v67 >= (uint64_t)v176) {
      goto LABEL_41;
    }
    unint64_t v68 = *(void *)(v175 + 8 * v67);
    ++v62;
    if (!v68)
    {
      uint64_t v62 = v67 + 1;
      if (v67 + 1 >= (uint64_t)v176) {
        goto LABEL_41;
      }
      unint64_t v68 = *(void *)(v175 + 8 * v62);
      if (!v68)
      {
        uint64_t v62 = v67 + 2;
        if (v67 + 2 >= (uint64_t)v176) {
          goto LABEL_41;
        }
        unint64_t v68 = *(void *)(v175 + 8 * v62);
        if (!v68) {
          break;
        }
      }
    }
LABEL_36:
    unint64_t v61 = (v68 - 1) & v68;
    unint64_t v66 = __clz(__rbit64(v68)) + (v62 << 6);
LABEL_37:
    id v70 = (uint64_t *)(v52[6] + 16 * v66);
    uint64_t v71 = *v70;
    uint64_t v72 = v70[1];
    uint64_t v73 = qword_1EB27BC88;
    swift_unknownObjectRetain();
    if (v73 != -1) {
      swift_once();
    }
    uint64_t v74 = sub_191FB9CA8();
    __swift_project_value_buffer(v74, (uint64_t)qword_1EB27BC70);
    (*(void (**)(char *, char *, uint64_t))v180)(v55, v182, v2);
    swift_unknownObjectRetain_n();
    uint64_t v75 = sub_191FB9C88();
    os_log_type_t v76 = sub_191FBA058();
    if (os_log_type_enabled(v75, v76))
    {
      uint64_t v77 = swift_slowAlloc();
      uint64_t v78 = swift_slowAlloc();
      v188[0] = v78;
      *(_DWORD *)uint64_t v77 = v170;
      sub_191F414E0((unint64_t *)&qword_1EB27BCA0, 255, MEMORY[0x1E4F27990]);
      uint64_t v79 = sub_191FBA578();
      *(void *)(v77 + 4) = sub_191F4EB34(v79, v80, v188);
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))*v177)(v55, v183);
      *(_WORD *)(v77 + 12) = 2082;
      *(void *)&long long v193 = v71;
      *((void *)&v193 + 1) = v72;
      swift_unknownObjectRetain();
      uint64_t v81 = sub_191FB9E08();
      *(void *)(v77 + 14) = sub_191F4EB34(v81, v82, v188);
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_191F29000, v75, v76, "[%{public}s] Sending initial observer update to %{public}s", (uint8_t *)v77, 0x16u);
      swift_arrayDestroy();
      uint64_t v83 = v78;
      uint64_t v2 = v183;
      MEMORY[0x192FEBAE0](v83, -1, -1);
      uint64_t v84 = v77;
      id v52 = v179;
      MEMORY[0x192FEBAE0](v84, -1, -1);
    }
    else
    {
      ((void (*)(char *, uint64_t))*v177)(v55, v2);

      swift_unknownObjectRelease_n();
    }
    uint64_t v64 = swift_getObjectType();
    uint64_t v21 = v71;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v72 + 16))(v178, v181, v64, v72);
    swift_unknownObjectRelease();
  }
  uint64_t v69 = v67 + 3;
  if (v69 >= (uint64_t)v176) {
    goto LABEL_41;
  }
  unint64_t v68 = *(void *)(v175 + 8 * v69);
  if (v68)
  {
    uint64_t v62 = v69;
    goto LABEL_36;
  }
  while (1)
  {
    uint64_t v62 = v69 + 1;
    if (__OFADD__(v69, 1)) {
      goto LABEL_121;
    }
    if (v62 >= (uint64_t)v176) {
      break;
    }
    unint64_t v68 = *(void *)(v175 + 8 * v62);
    ++v69;
    if (v68) {
      goto LABEL_36;
    }
  }
LABEL_41:

  swift_release();
  uint64_t v1 = v167;
  uint64_t v51 = v166;
  uint64_t v53 = MEMORY[0x1E4FBC870];
LABEL_42:
  uint64_t v85 = *(void *)(v1 + 48);
  uint64_t v190 = v53;
  *(void *)&long long v176 = v85;
  if ((v51 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_191FBA228();
    sub_191F442A4(0, (unint64_t *)&qword_1EB27BCB0);
    sub_191F3B0F4();
    sub_191FB9FE8();
    *(void *)&long long v181 = *((void *)&v193 + 1);
    uint64_t v86 = v193;
    uint64_t v21 = v194;
    uint64_t v87 = v195;
    unint64_t v88 = v196;
  }
  else
  {
    uint64_t v89 = -1 << *(unsigned char *)(v51 + 32);
    uint64_t v90 = *(void *)(v51 + 56);
    *(void *)&long long v181 = v51 + 56;
    uint64_t v21 = ~v89;
    uint64_t v91 = -v89;
    if (v91 < 64) {
      uint64_t v92 = ~(-1 << v91);
    }
    else {
      uint64_t v92 = -1;
    }
    unint64_t v88 = v92 & v90;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v87 = 0;
    uint64_t v86 = v51;
  }
  v177 = (void (**)(id, char *, void))(v86 & 0x7FFFFFFFFFFFFFFFLL);
  uint64_t v175 = v21;
  int64_t v93 = (unint64_t)(v21 + 64) >> 6;
  v180 = (char *)(v168 + 8);
  if (v86 < 0) {
    goto LABEL_51;
  }
LABEL_49:
  if (v88)
  {
    uint64_t v94 = (v88 - 1) & v88;
    unint64_t v95 = __clz(__rbit64(v88)) | (v87 << 6);
    uint64_t v96 = v87;
LABEL_68:
    id v98 = *(id *)(*(void *)(v86 + 48) + 8 * v95);
    if (!v98) {
      goto LABEL_71;
    }
    while (1)
    {
      id v102 = objc_msgSend(v98, sel_UUID, v166, v167);
      os_log_type_t v103 = (char *)v174;
      sub_191FB9C28();

      uint64_t v21 = (uint64_t)&v190;
      uint64_t v104 = (uint64_t)v171;
      sub_191F54488((uint64_t)v171, v103);

      (*(void (**)(uint64_t, uint64_t))v180)(v104, v183);
      uint64_t v87 = v96;
      unint64_t v88 = v94;
      if ((v86 & 0x8000000000000000) == 0) {
        goto LABEL_49;
      }
LABEL_51:
      uint64_t v97 = sub_191FBA258();
      if (v97)
      {
        uint64_t v185 = v97;
        sub_191F442A4(0, (unint64_t *)&qword_1EB27BCB0);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v98 = (id)v188[0];
        swift_unknownObjectRelease();
        uint64_t v96 = v87;
        uint64_t v94 = v88;
        if (v98) {
          continue;
        }
      }
      goto LABEL_71;
    }
  }
  int64_t v99 = v87 + 1;
  if (__OFADD__(v87, 1)) {
    goto LABEL_119;
  }
  if (v99 < v93)
  {
    unint64_t v100 = *(void *)(v181 + 8 * v99);
    uint64_t v96 = v87 + 1;
    if (!v100)
    {
      uint64_t v96 = v87 + 2;
      if (v87 + 2 >= v93) {
        goto LABEL_71;
      }
      unint64_t v100 = *(void *)(v181 + 8 * v96);
      if (!v100)
      {
        uint64_t v96 = v87 + 3;
        if (v87 + 3 >= v93) {
          goto LABEL_71;
        }
        unint64_t v100 = *(void *)(v181 + 8 * v96);
        if (!v100)
        {
          uint64_t v96 = v87 + 4;
          if (v87 + 4 >= v93) {
            goto LABEL_71;
          }
          unint64_t v100 = *(void *)(v181 + 8 * v96);
          if (!v100)
          {
            uint64_t v101 = v87 + 5;
            do
            {
              if (v93 == v101) {
                goto LABEL_71;
              }
              unint64_t v100 = *(void *)(v181 + 8 * v101++);
            }
            while (!v100);
            uint64_t v96 = v101 - 1;
          }
        }
      }
    }
    uint64_t v94 = (v100 - 1) & v100;
    unint64_t v95 = __clz(__rbit64(v100)) + (v96 << 6);
    goto LABEL_68;
  }
LABEL_71:
  sub_191F4DD64();
  uint64_t v105 = v190;
  uint64_t v106 = v176;
  if (*(void *)(v176 + 16) <= *(void *)(v190 + 16) >> 3)
  {
    v188[0] = v190;
    swift_bridgeObjectRetain();
    sub_191F40584(v106);
    uint64_t v107 = v188[0];
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v107 = sub_191F537BC(v106, v105);
  }
  uint64_t v108 = v183;
  uint64_t v109 = v167;
  uint64_t v110 = v166;
  if (*(void *)(v105 + 16) <= *(void *)(v106 + 16) >> 3)
  {
    v188[0] = v106;
    uint64_t v113 = swift_bridgeObjectRetain();
    sub_191F40584(v113);
    swift_bridgeObjectRelease();
    uint64_t v112 = v188[0];
  }
  else
  {
    uint64_t v111 = swift_bridgeObjectRetain();
    uint64_t v112 = sub_191F537BC(v111, v106);
    swift_bridgeObjectRelease();
  }
  *(void *)(v109 + 48) = v105;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v114 = sub_191F40904(v110, v107);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  if ((v114 & 0xC000000000000001) != 0) {
    uint64_t v115 = sub_191FBA238();
  }
  else {
    uint64_t v115 = *(void *)(v114 + 16);
  }
  if (v115 <= 0 && !*(void *)(v112 + 16))
  {
    (*(void (**)(char *, uint64_t))v180)(v182, v108);
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v116 = (char *)objc_allocWithZone((Class)type metadata accessor for _EXQueryResultUpdate());
  *(void *)&v116[OBJC_IVAR____EXQueryResultUpdate_removedUUIDs] = v112;
  *(void *)&v116[OBJC_IVAR____EXQueryResult_identities] = v114;
  *(void *)&v116[OBJC_IVAR____EXQueryResult_availablility] = 0;
  v117 = (objc_class *)type metadata accessor for _EXQueryResult();
  v189.receiver = v116;
  v189.super_class = v117;
  v174 = objc_msgSendSuper2(&v189, sel_init);
  swift_beginAccess();
  uint64_t v118 = *(void *)(v109 + 32);
  uint64_t v119 = *(void *)(v118 + 56);
  uint64_t v175 = v118 + 56;
  uint64_t v120 = 1 << *(unsigned char *)(v118 + 32);
  uint64_t v121 = -1;
  if (v120 < 64) {
    uint64_t v121 = ~(-1 << v120);
  }
  unint64_t v122 = v121 & v119;
  *(void *)&long long v176 = (unint64_t)(v120 + 63) >> 6;
  v177 = (void (**)(id, char *, void))(v168 + 16);
  swift_bridgeObjectRetain();
  uint64_t v123 = 0;
  uint64_t v124 = &unk_1EB27B000;
  *(void *)&long long v125 = 136446466;
  long long v170 = v125;
  uint64_t v169 = MEMORY[0x1E4FBC840] + 8;
  v171 = (char *)v118;
  if (v122) {
    goto LABEL_88;
  }
LABEL_89:
  uint64_t v128 = v123 + 1;
  uint64_t v21 = (uint64_t)v179;
  if (__OFADD__(v123, 1))
  {
    __break(1u);
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
    goto LABEL_120;
  }
  if (v128 >= (uint64_t)v176) {
    goto LABEL_115;
  }
  unint64_t v129 = *(void *)(v175 + 8 * v128);
  ++v123;
  if (v129)
  {
LABEL_102:
    unint64_t v122 = (v129 - 1) & v129;
    unint64_t v127 = __clz(__rbit64(v129)) + (v123 << 6);
    while (1)
    {
      uint64_t v131 = (uint64_t *)(*(void *)(v118 + 48) + 16 * v127);
      uint64_t v133 = *v131;
      uint64_t v132 = v131[1];
      uint64_t v134 = swift_unknownObjectRetain();
      BOOL v135 = sub_191F540EC(v134, v132, v21);
      uint64_t v136 = v124[401];
      if (v135)
      {
        *(void *)&long long v181 = v123;
        if (v136 != -1) {
          swift_once();
        }
        uint64_t v137 = sub_191FB9CA8();
        __swift_project_value_buffer(v137, (uint64_t)qword_1EB27BC70);
        id v138 = v173;
        (*v177)(v173, v182, v108);
        swift_unknownObjectRetain_n();
        uint64_t v139 = sub_191FB9C88();
        os_log_type_t v140 = sub_191FBA058();
        if (os_log_type_enabled(v139, v140))
        {
          uint64_t v141 = swift_slowAlloc();
          uint64_t v142 = swift_slowAlloc();
          uint64_t v187 = v142;
          *(_DWORD *)uint64_t v141 = v170;
          sub_191F414E0((unint64_t *)&qword_1EB27BCA0, 255, MEMORY[0x1E4F27990]);
          uint64_t v143 = sub_191FBA578();
          *(void *)(v141 + 4) = sub_191F4EB34(v143, v144, &v187);
          swift_bridgeObjectRelease();
          (*(void (**)(id, uint64_t))v180)(v138, v183);
          *(_WORD *)(v141 + 12) = 2082;
          uint64_t v185 = v133;
          uint64_t v186 = v132;
          swift_unknownObjectRetain();
          uint64_t v145 = sub_191FB9E08();
          *(void *)(v141 + 14) = sub_191F4EB34(v145, v146, &v187);
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_191F29000, v139, v140, "[%{public}s] Skipping observer update to %{public}s", (uint8_t *)v141, 0x16u);
          swift_arrayDestroy();
          uint64_t v147 = v142;
          uint64_t v108 = v183;
          MEMORY[0x192FEBAE0](v147, -1, -1);
          uint64_t v148 = v141;
          uint64_t v118 = (uint64_t)v171;
          MEMORY[0x192FEBAE0](v148, -1, -1);
          swift_unknownObjectRelease();
        }
        else
        {
          swift_unknownObjectRelease();
          (*(void (**)(id, uint64_t))v180)(v138, v108);

          swift_unknownObjectRelease_n();
        }
        uint64_t v123 = v181;
        if (!v122) {
          goto LABEL_89;
        }
      }
      else
      {
        uint64_t v149 = v108;
        if (v136 != -1) {
          swift_once();
        }
        uint64_t v150 = sub_191FB9CA8();
        __swift_project_value_buffer(v150, (uint64_t)qword_1EB27BC70);
        long long v151 = v172;
        (*v177)(v172, v182, v149);
        swift_unknownObjectRetain_n();
        unsigned int v152 = sub_191FB9C88();
        os_log_type_t v153 = sub_191FBA058();
        if (os_log_type_enabled(v152, v153))
        {
          uint64_t v154 = swift_slowAlloc();
          uint64_t v155 = swift_slowAlloc();
          *(void *)&long long v181 = v123;
          uint64_t v156 = v155;
          uint64_t v187 = v155;
          *(_DWORD *)uint64_t v154 = v170;
          sub_191F414E0((unint64_t *)&qword_1EB27BCA0, 255, MEMORY[0x1E4F27990]);
          uint64_t v157 = sub_191FBA578();
          *(void *)(v154 + 4) = sub_191F4EB34(v157, v158, &v187);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))v180)(v151, v149);
          *(_WORD *)(v154 + 12) = 2082;
          uint64_t v185 = v133;
          uint64_t v186 = v132;
          swift_unknownObjectRetain();
          uint64_t v159 = sub_191FB9E08();
          *(void *)(v154 + 14) = sub_191F4EB34(v159, v160, &v187);
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_191F29000, v152, v153, "[%{public}s] Sending update observer update to %{public}s", (uint8_t *)v154, 0x16u);
          swift_arrayDestroy();
          uint64_t v161 = v156;
          uint64_t v123 = v181;
          MEMORY[0x192FEBAE0](v161, -1, -1);
          uint64_t v162 = v154;
          uint64_t v118 = (uint64_t)v171;
          MEMORY[0x192FEBAE0](v162, -1, -1);
        }
        else
        {
          (*(void (**)(char *, uint64_t))v180)(v151, v149);

          swift_unknownObjectRelease_n();
        }
        uint64_t v108 = v149;
        uint64_t v163 = swift_getObjectType();
        (*(void (**)(char *, void *, uint64_t, uint64_t))(v132 + 16))(v178, v174, v163, v132);
        swift_unknownObjectRelease();
        uint64_t v124 = (void *)&unk_1EB27B000;
        if (!v122) {
          goto LABEL_89;
        }
      }
LABEL_88:
      unint64_t v126 = __clz(__rbit64(v122));
      v122 &= v122 - 1;
      unint64_t v127 = v126 | (v123 << 6);
      uint64_t v21 = (uint64_t)v179;
    }
  }
  uint64_t v123 = v128 + 1;
  if (v128 + 1 >= (uint64_t)v176)
  {
LABEL_115:
    swift_bridgeObjectRelease();

    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))v180)(v182, v108);
  }
  unint64_t v129 = *(void *)(v175 + 8 * v123);
  if (v129) {
    goto LABEL_102;
  }
  uint64_t v123 = v128 + 2;
  if (v128 + 2 >= (uint64_t)v176) {
    goto LABEL_115;
  }
  unint64_t v129 = *(void *)(v175 + 8 * v123);
  if (v129) {
    goto LABEL_102;
  }
  uint64_t v130 = v128 + 3;
  if (v130 >= (uint64_t)v176) {
    goto LABEL_115;
  }
  unint64_t v129 = *(void *)(v175 + 8 * v130);
  if (v129)
  {
    uint64_t v123 = v130;
    goto LABEL_102;
  }
  while (1)
  {
    uint64_t v123 = v130 + 1;
    if (__OFADD__(v130, 1)) {
      break;
    }
    if (v123 >= (uint64_t)v176) {
      goto LABEL_115;
    }
    unint64_t v129 = *(void *)(v175 + 8 * v123);
    ++v130;
    if (v129) {
      goto LABEL_102;
    }
  }
LABEL_120:
  __break(1u);
LABEL_121:
  __break(1u);
LABEL_122:
  __break(1u);
LABEL_123:
  __break(1u);
LABEL_124:
  id v164 = objc_msgSend(self, sel__EX_parameterError);
  swift_willThrow();

  swift_unexpectedError();
  __break(1u);
LABEL_125:
  id v165 = objc_msgSend(self, sel__EX_parameterError);
  swift_willThrow();
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

id sub_191F3FE40(char *a1)
{
  uint64_t v2 = v1;
  uint64_t v50 = MEMORY[0x1E4FBC870];
  uint64_t v4 = &selRef_UUID;
  id v5 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for _EXExtensionAvailablility()), sel_init);
  if (sub_191F418CC((uint64_t)a1))
  {
    uint64_t v6 = *(NSObject **)&v1[OBJC_IVAR____EXDiscoveryController_queryQueue];
    uint64_t v7 = (void *)swift_allocObject();
    id v7[2] = a1;
    v7[3] = v5;
    v7[4] = &v50;
    uint64_t v8 = swift_allocObject();
    uint64_t v9 = sub_191F36018;
    *(void *)(v8 + 16) = sub_191F36018;
    *(void *)(v8 + 24) = v7;
    aBlock[4] = (uint64_t)sub_191F35FC0;
    aBlock[5] = v8;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_191F35F98;
    aBlock[3] = (uint64_t)&block_descriptor_0;
    uint64_t v10 = _Block_copy(aBlock);
    uint64_t v11 = a1;
    id v12 = v5;
    swift_retain();
    swift_release();
    dispatch_sync(v6, v10);
    _Block_release(v10);
    LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v6 & 1) == 0) {
      goto LABEL_10;
    }
    __break(1u);
  }
  if (qword_1EB27BC88 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_191FB9CA8();
  __swift_project_value_buffer(v13, (uint64_t)qword_1EB27BC70);
  uint64_t v14 = a1;
  uint64_t v15 = sub_191FB9C88();
  os_log_type_t v16 = sub_191FBA068();
  if (os_log_type_enabled(v15, v16))
  {
    id v45 = v5;
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 138543362;
    aBlock[0] = (uint64_t)v14;
    uint64_t v19 = v14;
    sub_191FBA1C8();
    void *v18 = v14;

    uint64_t v4 = &selRef_UUID;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
    swift_arrayDestroy();
    MEMORY[0x192FEBAE0](v18, -1, -1);
    uint64_t v20 = v17;
    id v5 = v45;
    MEMORY[0x192FEBAE0](v20, -1, -1);
  }
  else
  {
  }
  uint64_t v9 = 0;
LABEL_10:
  if (*(void *)&a1[OBJC_IVAR____EXQuery_resultType])
  {
    uint64_t v21 = (objc_class *)type metadata accessor for _EXQueryResult();
    uint64_t v22 = (char *)objc_allocWithZone(v21);
    *(void *)&v22[OBJC_IVAR____EXQueryResult_identities] = 0;
    *(void *)&v22[OBJC_IVAR____EXQueryResult_availablility] = v5;
    v49.receiver = v22;
    v49.super_class = v21;
    id v23 = objc_msgSendSuper2(&v49, v4[361]);
  }
  else
  {
    int64_t v24 = v2;
    unint64_t v44 = v9;
    if (qword_1EB27BC88 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_191FB9CA8();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EB27BC70);
    uint64_t v26 = a1;
    id v27 = v24;
    BOOL v28 = v26;
    long long v29 = (char *)v27;
    uint64_t v30 = sub_191FB9C88();
    os_log_type_t v31 = sub_191FBA058();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v33 = (void *)swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      *(_DWORD *)uint64_t v32 = 138543874;
      uint64_t v47 = v29;
      aBlock[0] = v43;
      int64_t v34 = v29;
      sub_191FBA1C8();
      void *v33 = v29;

      *(_WORD *)(v32 + 12) = 2114;
      uint64_t v47 = v28;
      uint64_t v35 = v28;
      sub_191FBA1C8();
      v33[1] = v28;

      *(_WORD *)(v32 + 22) = 2082;
      swift_beginAccess();
      sub_191F442A4(0, (unint64_t *)&qword_1EB27BCB0);
      sub_191F3B0F4();
      swift_bridgeObjectRetain();
      uint64_t v36 = sub_191FB9FC8();
      unint64_t v38 = v37;
      swift_bridgeObjectRelease();
      void aBlock[6] = sub_191F4EB34(v36, v38, aBlock);
      sub_191FBA1C8();
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
      swift_arrayDestroy();
      MEMORY[0x192FEBAE0](v33, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x192FEBAE0](v43, -1, -1);
      MEMORY[0x192FEBAE0](v32, -1, -1);
    }
    else
    {
    }
    swift_beginAccess();
    uint64_t v39 = v50;
    os_log_type_t v40 = (objc_class *)type metadata accessor for _EXQueryResult();
    uint64_t v41 = (char *)objc_allocWithZone(v40);
    *(void *)&v41[OBJC_IVAR____EXQueryResult_identities] = v39;
    *(void *)&v41[OBJC_IVAR____EXQueryResult_availablility] = 0;
    v48.receiver = v41;
    v48.super_class = v40;
    swift_bridgeObjectRetain();
    id v23 = objc_msgSendSuper2(&v48, sel_init);

    uint64_t v9 = v44;
  }
  swift_bridgeObjectRelease();
  sub_191F45B24((uint64_t)v9);
  return v23;
}

uint64_t type metadata accessor for _EXQueryResult()
{
  return self;
}

uint64_t type metadata accessor for _EXExtensionAvailablility()
{
  return self;
}

uint64_t sub_191F40584(uint64_t a1)
{
  uint64_t v3 = sub_191FB9C68();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE40);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v24 - v12;
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v14 = *(void *)(a1 + 56);
  uint64_t v24 = a1 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  uint64_t v27 = v4 + 16;
  BOOL v28 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  int64_t v25 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v26 = v4 + 48;
  uint64_t v29 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v18 = 0;
  if (!v17) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v19 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (unint64_t i = v19 | (v18 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v18 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v13, *(void *)(v29 + 48) + *(void *)(v4 + 72) * i, v3);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v13, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v13, 1, v3) == 1) {
      return swift_release();
    }
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v13, v3);
    sub_191FA20FC((uint64_t)v6, (uint64_t)v10);
    sub_191F9C38C((uint64_t)v10);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    if (v17) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v21 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v21 >= v25) {
      goto LABEL_25;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v21);
    ++v18;
    if (!v22)
    {
      int64_t v18 = v21 + 1;
      if (v21 + 1 >= v25) {
        goto LABEL_25;
      }
      unint64_t v22 = *(void *)(v24 + 8 * v18);
      if (!v22)
      {
        int64_t v18 = v21 + 2;
        if (v21 + 2 >= v25) {
          goto LABEL_25;
        }
        unint64_t v22 = *(void *)(v24 + 8 * v18);
        if (!v22)
        {
          int64_t v18 = v21 + 3;
          if (v21 + 3 >= v25) {
            goto LABEL_25;
          }
          unint64_t v22 = *(void *)(v24 + 8 * v18);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v17 = (v22 - 1) & v22;
  }
  int64_t v23 = v21 + 4;
  if (v23 >= v25)
  {
LABEL_25:
    (*v28)(v13, 1, 1, v3);
    return swift_release();
  }
  unint64_t v22 = *(void *)(v24 + 8 * v23);
  if (v22)
  {
    int64_t v18 = v23;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v18 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v18 >= v25) {
      goto LABEL_25;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v18);
    ++v23;
    if (v22) {
      goto LABEL_21;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_191F40904(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = sub_191FB9C68();
  uint64_t v38 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  id v45 = (char *)v37 - v10;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v2 = MEMORY[0x1E4FBC870];
    uint64_t v48 = MEMORY[0x1E4FBC870];
    swift_bridgeObjectRetain();
    uint64_t v41 = sub_191FBA228();
    uint64_t v11 = sub_191FBA258();
    if (v11)
    {
      uint64_t v12 = v11;
      v37[1] = v3;
      uint64_t v40 = sub_191F442A4(0, (unint64_t *)&qword_1EB27BCB0);
      uint64_t v42 = v38 + 16;
      uint64_t v43 = a2 + 56;
      unint64_t v44 = (void (**)(char *, uint64_t))(v38 + 8);
      uint64_t v39 = MEMORY[0x1E4FBC838] + 8;
      do
      {
        uint64_t v46 = v12;
        swift_dynamicCast();
        id v13 = objc_msgSend(v47, sel_UUID);
        sub_191FB9C28();

        if (*(void *)(a2 + 16)
          && (sub_191F414E0(&qword_1E92FC6E0, 255, MEMORY[0x1E4F27990]),
              uint64_t v14 = sub_191FB9D68(),
              uint64_t v15 = -1 << *(unsigned char *)(a2 + 32),
              unint64_t v16 = v14 & ~v15,
              ((*(void *)(v43 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) != 0))
        {
          uint64_t v17 = ~v15;
          uint64_t v18 = *(void *)(v38 + 72);
          unint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v38 + 16);
          while (1)
          {
            uint64_t v20 = a2;
            v19(v9, *(void *)(a2 + 48) + v18 * v16, v6);
            sub_191F414E0(&qword_1E92FC6E8, 255, MEMORY[0x1E4F27990]);
            char v21 = sub_191FB9D98();
            unint64_t v22 = *v44;
            (*v44)(v9, v6);
            if (v21) {
              break;
            }
            unint64_t v16 = (v16 + 1) & v17;
            a2 = v20;
            if (((*(void *)(v43 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) == 0) {
              goto LABEL_4;
            }
          }
          v22(v45, v6);
          id v23 = v47;
          uint64_t v24 = v48;
          unint64_t v25 = *(void *)(v48 + 16);
          if (*(void *)(v48 + 24) <= v25)
          {
            sub_191FA071C(v25 + 1, (uint64_t *)&unk_1EB27BB40);
            uint64_t v24 = v48;
          }
          uint64_t result = sub_191FBA158();
          uint64_t v27 = v24 + 56;
          uint64_t v28 = -1 << *(unsigned char *)(v24 + 32);
          unint64_t v29 = result & ~v28;
          unint64_t v30 = v29 >> 6;
          a2 = v20;
          if (((-1 << v29) & ~*(void *)(v24 + 56 + 8 * (v29 >> 6))) != 0)
          {
            unint64_t v31 = __clz(__rbit64((-1 << v29) & ~*(void *)(v24 + 56 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
          }
          else
          {
            char v32 = 0;
            unint64_t v33 = (unint64_t)(63 - v28) >> 6;
            do
            {
              if (++v30 == v33 && (v32 & 1) != 0)
              {
                __break(1u);
                return result;
              }
              BOOL v34 = v30 == v33;
              if (v30 == v33) {
                unint64_t v30 = 0;
              }
              v32 |= v34;
              uint64_t v35 = *(void *)(v27 + 8 * v30);
            }
            while (v35 == -1);
            unint64_t v31 = __clz(__rbit64(~v35)) + (v30 << 6);
          }
          *(void *)(v27 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v31;
          *(void *)(*(void *)(v24 + 48) + 8 * v31) = v23;
          ++*(void *)(v24 + 16);
        }
        else
        {
LABEL_4:
          (*v44)(v45, v6);
        }
        uint64_t v12 = sub_191FBA258();
      }
      while (v12);
      uint64_t v2 = v48;
    }
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    uint64_t v36 = sub_191F40D9C(a1, a2);
    if (!v3) {
      return v36;
    }
  }
  return v2;
}

uint64_t sub_191F40D9C(uint64_t a1, uint64_t a2)
{
  v15[1] = *MEMORY[0x1E4F143B8];
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v8 = 8 * v7;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v15 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    sub_191F40F68((void *)((char *)v15 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    uint64_t v11 = v10;
    swift_release();
    swift_bridgeObjectRelease();
    if (v2) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v12 = (void *)swift_slowAlloc();
    bzero(v12, v8);
    swift_bridgeObjectRetain();
    sub_191F40F68((unint64_t *)v12, v7, a1, a2);
    uint64_t v11 = v13;
    swift_release();
    swift_bridgeObjectRelease();
    MEMORY[0x192FEBAE0](v12, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v11;
}

void sub_191F40F68(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v37 = a2;
  uint64_t v38 = a1;
  uint64_t v6 = sub_191FB9C68();
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v51 = (char *)&v36 - v11;
  int64_t v12 = 0;
  uint64_t v43 = a3;
  uint64_t v13 = *(void *)(a3 + 56);
  uint64_t v40 = 0;
  uint64_t v41 = a3 + 56;
  uint64_t v14 = 1 << *(unsigned char *)(a3 + 32);
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v13;
  int64_t v42 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v49 = a4 + 56;
  uint64_t v50 = a4;
  uint64_t v48 = v10 + 16;
  uint64_t v39 = v10;
  uint64_t v17 = (void (**)(char *, uint64_t))(v10 + 8);
  while (1)
  {
    if (v16)
    {
      uint64_t v46 = (v16 - 1) & v16;
      int64_t v47 = v12;
      unint64_t v18 = __clz(__rbit64(v16)) | (v12 << 6);
      goto LABEL_22;
    }
    int64_t v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v19 >= v42) {
      goto LABEL_31;
    }
    unint64_t v20 = *(void *)(v41 + 8 * v19);
    int64_t v21 = v12 + 1;
    if (!v20)
    {
      int64_t v21 = v12 + 2;
      if (v12 + 2 >= v42) {
        goto LABEL_31;
      }
      unint64_t v20 = *(void *)(v41 + 8 * v21);
      if (!v20)
      {
        int64_t v21 = v12 + 3;
        if (v12 + 3 >= v42) {
          goto LABEL_31;
        }
        unint64_t v20 = *(void *)(v41 + 8 * v21);
        if (!v20) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v46 = (v20 - 1) & v20;
    int64_t v47 = v21;
    unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
LABEL_22:
    uint64_t v23 = *(void *)(v43 + 48);
    unint64_t v44 = v18;
    id v45 = *(id *)(v23 + 8 * v18);
    id v24 = objc_msgSend(v45, sel_UUID);
    sub_191FB9C28();

    if (*(void *)(v50 + 16)
      && (uint64_t v25 = v50,
          sub_191F414E0(&qword_1E92FC6E0, 255, MEMORY[0x1E4F27990]),
          uint64_t v26 = sub_191FB9D68(),
          uint64_t v27 = -1 << *(unsigned char *)(v25 + 32),
          unint64_t v28 = v26 & ~v27,
          ((*(void *)(v49 + ((v28 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v28) & 1) != 0))
    {
      uint64_t v29 = ~v27;
      uint64_t v30 = *(void *)(v39 + 72);
      unint64_t v31 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 16);
      while (1)
      {
        v31(v9, *(void *)(v50 + 48) + v30 * v28, v6);
        sub_191F414E0(&qword_1E92FC6E8, 255, MEMORY[0x1E4F27990]);
        char v32 = sub_191FB9D98();
        unint64_t v33 = *v17;
        (*v17)(v9, v6);
        if (v32) {
          break;
        }
        unint64_t v28 = (v28 + 1) & v29;
        if (((*(void *)(v49 + ((v28 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v28) & 1) == 0) {
          goto LABEL_5;
        }
      }
      v33(v51, v6);

      *(unint64_t *)((char *)v38 + ((v44 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v44;
      BOOL v34 = __OFADD__(v40++, 1);
      unint64_t v16 = v46;
      int64_t v12 = v47;
      if (v34)
      {
        __break(1u);
LABEL_31:
        uint64_t v35 = v43;
        swift_retain();
        sub_191F3BE44(v38, v37, v40, v35);
        return;
      }
    }
    else
    {
LABEL_5:
      (*v17)(v51, v6);

      unint64_t v16 = v46;
      int64_t v12 = v47;
    }
  }
  uint64_t v22 = v12 + 4;
  if (v12 + 4 >= v42) {
    goto LABEL_31;
  }
  unint64_t v20 = *(void *)(v41 + 8 * v22);
  if (v20)
  {
    int64_t v21 = v12 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v21 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v21 >= v42) {
      goto LABEL_31;
    }
    unint64_t v20 = *(void *)(v41 + 8 * v21);
    ++v22;
    if (v20) {
      goto LABEL_21;
    }
  }
LABEL_33:
  __break(1u);
}

uint64_t type metadata accessor for _EXQueryResultUpdate()
{
  return self;
}

void sub_191F413E4(uint64_t a1, void *a2)
{
  sub_191F442A4(0, &qword_1E92FC6C8);
  if (objc_msgSend(a2, sel_isKindOfClass_, swift_getObjCClassFromMetadata()))
  {
    self;
    uint64_t v3 = (void *)swift_dynamicCastObjCClassUnconditional();
    id v5 = a2;
    sub_191F3A588(v3);
  }
  else
  {
    id v4 = objc_msgSend(self, sel__EX_parameterError);
    swift_willThrow();
    swift_unexpectedError();
    __break(1u);
  }
}

uint64_t sub_191F414E0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191F41528(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

id sub_191F415F0(uint64_t a1, uint64_t a2, int a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  int v8 = a7;
  int v9 = a6;
  int v10 = a5;
  int v11 = a4;
  unint64_t v23 = HIDWORD(a4);
  unint64_t v24 = HIDWORD(a5);
  unint64_t v25 = HIDWORD(a6);
  unint64_t v26 = HIDWORD(a7);
  *(void *)&v7[OBJC_IVAR____EXQuery_resultType] = 0;
  *(void *)&v7[OBJC_IVAR____EXQuery_predicate] = 0;
  v7[OBJC_IVAR____EXQuery_includePostprocessing] = 0;
  uint64_t v13 = OBJC_IVAR____EXQuery_allowsDuplicates;
  uint64_t v14 = self;
  uint64_t v15 = v7;
  id v16 = objc_msgSend(v14, sel_sharedInstance);
  unsigned __int8 v17 = objc_msgSend(v16, sel_queryAllowsDuplicates);

  v7[v13] = v17;
  v15[OBJC_IVAR____EXQuery_excludeLockedApps] = 0;
  unint64_t v18 = (uint64_t *)&v15[OBJC_IVAR____EXQuery_inner];
  v18[3] = (uint64_t)&type metadata for _EXQuery.ValuesQuery;
  v18[4] = (uint64_t)&off_1EE2CB180;
  uint64_t v19 = swift_allocObject();
  uint64_t *v18 = v19;
  *(void *)(v19 + 16) = a1;
  *(void *)(v19 + 24) = a2;
  *(_DWORD *)(v19 + 32) = a3;
  *(_DWORD *)(v19 + 36) = v11;
  *(_DWORD *)(v19 + 40) = v23;
  *(_DWORD *)(v19 + 44) = v10;
  *(_DWORD *)(v19 + 48) = v24;
  *(_DWORD *)(v19 + 52) = v9;
  *(_DWORD *)(v19 + 56) = v25;
  *(_DWORD *)(v19 + 60) = v8;
  *(_DWORD *)(v19 + 64) = v26;

  v27.receiver = v15;
  v27.super_class = (Class)type metadata accessor for _EXQuery();
  return objc_msgSendSuper2(&v27, sel_init);
}

uint64_t sub_191F417B8()
{
  uint64_t v1 = v0 + OBJC_IVAR____EXQuery_inner;
  swift_beginAccess();
  sub_191F41D54(v1, (uint64_t)v10);
  uint64_t v2 = v11;
  uint64_t v3 = v12;
  __swift_project_boxed_opaque_existential_2Tm(v10, v11);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  uint64_t v5 = v4;
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v10);
  if (v5)
  {
    uint64_t v6 = sub_191FB9EA8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  sub_191F41D54(v1, (uint64_t)v10);
  uint64_t v7 = v11;
  uint64_t v8 = v12;
  __swift_project_boxed_opaque_existential_2Tm(v10, v11);
  LODWORD(v7) = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 40))(v7, v8);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v10);
  return v6 ^ v7;
}

uint64_t sub_191F418C4()
{
  return *(unsigned int *)(v0 + 16);
}

uint64_t sub_191F418CC(uint64_t a1)
{
  uint64_t v47 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = a1 + OBJC_IVAR____EXQuery_inner;
  swift_beginAccess();
  sub_191F41D54(v1, (uint64_t)v44);
  uint64_t v2 = v45;
  uint64_t v3 = v46;
  __swift_project_boxed_opaque_existential_2Tm(v44, v45);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 32))(v2, v3);
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  unint64_t v11 = HIDWORD(v5);
  unint64_t v12 = HIDWORD(v7);
  unint64_t v13 = HIDWORD(v9);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v44);
  *(void *)&long long v39 = v4;
  *((void *)&v39 + 1) = __PAIR64__(v11, v6);
  int v40 = v8;
  int v41 = v12;
  int v42 = v10;
  int v43 = v13;
  sub_191F41D54(v1, (uint64_t)v44);
  uint64_t v14 = v45;
  uint64_t v15 = v46;
  __swift_project_boxed_opaque_existential_2Tm(v44, v45);
  uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v14, v15);
  unint64_t v18 = v17;
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v44);
  if (!v18) {
    return 1;
  }
  if (sub_191F42A1C(v4, v6, v8, v10)) {
    goto LABEL_20;
  }
  sub_191F41D54(v1, (uint64_t)v44);
  uint64_t v20 = v45;
  uint64_t v21 = v46;
  __swift_project_boxed_opaque_existential_2Tm(v44, v45);
  unint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 64))(v20, v21);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v44);
  if (!(v22 >> 62))
  {
    uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v23)
    {
LABEL_7:
      if ((v22 & 0xC000000000000001) != 0)
      {
        id v24 = (id)MEMORY[0x192FEA540](0, v22);
        goto LABEL_10;
      }
      if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v24 = *(id *)(v22 + 32);
LABEL_10:
        unint64_t v25 = v24;
        char v26 = sub_191F42BEC(v24, v16, v18, &v39);

        if (v26)
        {
LABEL_19:
          swift_bridgeObjectRelease();
LABEL_20:
          swift_bridgeObjectRelease();
          return 1;
        }
        uint64_t v27 = 0;
        uint64_t v28 = v23 - 1;
        while (v28 != v27)
        {
          unint64_t v29 = v27 + 1;
          if ((v22 & 0xC000000000000001) != 0)
          {
            id v30 = (id)MEMORY[0x192FEA540](v27 + 1, v22);
          }
          else
          {
            if (v29 >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_22;
            }
            id v30 = *(id *)(v22 + 8 * v27 + 40);
          }
          unint64_t v31 = v30;
          if (__OFADD__(v29, 1))
          {
            __break(1u);
LABEL_22:
            __break(1u);
            goto LABEL_23;
          }
          char v32 = sub_191F42BEC(v30, v16, v18, &v39);

          ++v27;
          if (v32) {
            goto LABEL_19;
          }
        }
        goto LABEL_25;
      }
      __break(1u);
LABEL_33:
      swift_once();
LABEL_27:
      uint64_t v34 = sub_191FB9CA8();
      __swift_project_value_buffer(v34, (uint64_t)qword_1EB27BC70);
      swift_bridgeObjectRetain();
      uint64_t v35 = sub_191FB9C88();
      os_log_type_t v36 = sub_191FBA058();
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v37 = (uint8_t *)swift_slowAlloc();
        uint64_t v38 = swift_slowAlloc();
        v44[0] = v38;
        *(_DWORD *)uint64_t v37 = 136446210;
        swift_bridgeObjectRetain();
        sub_191F4EB34(v16, v18, v44);
        sub_191FBA1C8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_191F29000, v35, v36, "Failed to get LSExtensionPointRecord for extension point identifier '%{public}s'", v37, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x192FEBAE0](v38, -1, -1);
        MEMORY[0x192FEBAE0](v37, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      return 0;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    if (qword_1EB27BC88 == -1) {
      goto LABEL_27;
    }
    goto LABEL_33;
  }
LABEL_23:
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_191FBA478();
  swift_bridgeObjectRelease();
  if (!v33) {
    goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_191FBA478();
  swift_bridgeObjectRelease();
  if (v23) {
    goto LABEL_7;
  }
LABEL_25:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_191F41D54(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t initializeBufferWithCopyOfBuffer for QueryController.Callbacks(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t sub_191F41DF0()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_191F41E20()
{
  return *(void *)(v0 + 20);
}

unint64_t sub_191F41E34()
{
  return sub_191F41E78();
}

unint64_t sub_191F41E78()
{
  uint64_t v1 = v0;
  v79[2] = *MEMORY[0x1E4F143B8];
  uint64_t v68 = sub_191FB9B38();
  uint64_t v67 = *(void *)(v68 - 8);
  MEMORY[0x1F4188790](v68);
  uint64_t v3 = (char *)&v67 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191F429B4(v0, (uint64_t)v77);
  sub_191F429B4((uint64_t)v77, (uint64_t)v79);
  if (v79[1]) {
    char v4 = sub_191FB9E98();
  }
  else {
    char v4 = 1;
  }
  long long v70 = *(_OWORD *)(v0 + 20);
  long long v69 = *(_OWORD *)(v0 + 36);
  unint64_t v5 = self;
  *(void *)&v73[0] = 0;
  long long v74 = v70;
  long long v75 = v69;
  id v6 = objc_msgSend(v5, sel_bundleRecordForAuditToken_error_, &v74, v73);
  unint64_t v7 = *(void **)&v73[0];
  if (v6)
  {
    uint64_t v8 = v6;
    self;
    unint64_t v9 = (void *)swift_dynamicCastObjCClass();
    if (v9)
    {
      id v76 = v9;
      uint64_t v10 = qword_1EB27BC88;
      id v11 = v7;
      if (v10 != -1) {
        swift_once();
      }
      uint64_t v12 = sub_191FB9CA8();
      __swift_project_value_buffer(v12, (uint64_t)qword_1EB27BC70);
      unint64_t v13 = sub_191FB9C88();
      os_log_type_t v14 = sub_191FBA058();
      if (os_log_type_enabled(v13, v14))
      {
        uint64_t v15 = (uint8_t *)swift_slowAlloc();
        uint64_t v16 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v15 = 138412290;
        swift_beginAccess();
        id v17 = v76;
        if (v76)
        {
          *(void *)&long long v70 = v15 + 12;
          *(void *)&long long v74 = v76;
          id v18 = v76;
        }
        else
        {
          *(void *)&long long v74 = 0;
        }
        sub_191FBA1C8();
        *uint64_t v16 = v17;
        _os_log_impl(&dword_191F29000, v13, v14, "Resolved host app record for value query: %@", v15, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
        swift_arrayDestroy();
        MEMORY[0x192FEBAE0](v16, -1, -1);
        MEMORY[0x192FEBAE0](v15, -1, -1);
      }

      goto LABEL_22;
    }
    id v21 = v7;
  }
  else
  {
    id v19 = *(id *)&v73[0];
    uint64_t v20 = (void *)sub_191FB9B18();

    swift_willThrow();
  }
  id v76 = 0;
  if (qword_1EB27BC88 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_191FB9CA8();
  __swift_project_value_buffer(v22, (uint64_t)qword_1EB27BC70);
  sub_191F8A6D0(v1);
  sub_191F8A6D0(v1);
  uint64_t v23 = sub_191FB9C88();
  os_log_type_t v24 = sub_191FBA058();
  if (os_log_type_enabled(v23, v24))
  {
    unint64_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    *(void *)&long long v74 = v26;
    *(_DWORD *)unint64_t v25 = 136446210;
    *(void *)&long long v70 = v25 + 4;
    sub_191F8A6D0(v1);
    unint64_t v27 = sub_191F88E5C();
    unint64_t v29 = v28;
    sub_191F8A6FC(v1);
    *(void *)&v73[0] = sub_191F4EB34(v27, v29, (uint64_t *)&v74);
    sub_191FBA1C8();
    swift_bridgeObjectRelease();
    sub_191F8A6FC(v1);
    sub_191F8A6FC(v1);
    _os_log_impl(&dword_191F29000, v23, v24, "Unable to resolve host app record for value query: %{public}s", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FEBAE0](v26, -1, -1);
    MEMORY[0x192FEBAE0](v25, -1, -1);
  }
  else
  {
    sub_191F8A6FC(v1);
    sub_191F8A6FC(v1);
  }

LABEL_22:
  unint64_t v72 = MEMORY[0x1E4FBC860];
  sub_191F429B4((uint64_t)v77, (uint64_t)v78);
  if (v78[1])
  {
    id v30 = self;
    unint64_t v31 = (void *)sub_191FB9DA8();
    id v32 = objc_msgSend(v30, sel_enumeratorForExtensionPointIdentifier_, v31);

    *(void *)&long long v70 = v32;
    sub_191FBA038();
    swift_beginAccess();
    sub_191FB9B28();
    if (*((void *)&v75 + 1))
    {
      while (1)
      {
        sub_191F4D994(&v74, v73);
        sub_191F442A4(0, (unint64_t *)&unk_1EB27BBB0);
        swift_dynamicCast();
        id v34 = v71;
        if (v4) {
          break;
        }
        id v36 = objc_msgSend(v71, sel_parentAppRecord);
        id v37 = v76;
        if (v36)
        {
          id v33 = v36;
          if (!v76)
          {

            goto LABEL_27;
          }
          sub_191F442A4(0, &qword_1E92FD470);
          id v38 = v37;
          id v39 = v33;
          char v40 = sub_191FBA168();

          if (v40) {
            break;
          }
        }
        else if (!v76)
        {
          break;
        }
LABEL_26:
        id v33 = v34;
LABEL_27:

        sub_191FB9B28();
        if (!*((void *)&v75 + 1)) {
          goto LABEL_39;
        }
      }
      int v35 = *(_DWORD *)(v1 + 16);
      if ((v35 + 1) < 2 || objc_msgSend(v34, sel_platform) == v35)
      {
        id v33 = v34;
        MEMORY[0x192FEA0C0]();
        if (*(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_191FB9F08();
        }
        sub_191FB9F28();
        sub_191FB9EF8();
        goto LABEL_27;
      }
      goto LABEL_26;
    }
LABEL_39:
    (*(void (**)(char *, uint64_t))(v67 + 8))(v3, v68);
    if (v72 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v41 = sub_191FBA478();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v41 = *(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    int v42 = (void *)v70;
    if (!v41)
    {
      if (qword_1EB27BC88 != -1) {
        swift_once();
      }
      uint64_t v43 = sub_191FB9CA8();
      __swift_project_value_buffer(v43, (uint64_t)qword_1EB27BC70);
      sub_191F8A6D0(v1);
      sub_191F8A6D0(v1);
      unint64_t v44 = sub_191FB9C88();
      os_log_type_t v45 = sub_191FBA088();
      if (os_log_type_enabled(v44, v45))
      {
        uint64_t v46 = (uint8_t *)swift_slowAlloc();
        uint64_t v47 = swift_slowAlloc();
        *(void *)&long long v74 = v47;
        *(_DWORD *)uint64_t v46 = 136446210;
        sub_191F8A6D0(v1);
        unint64_t v48 = sub_191F88E5C();
        unint64_t v50 = v49;
        sub_191F8A6FC(v1);
        *(void *)&v73[0] = sub_191F4EB34(v48, v50, (uint64_t *)&v74);
        sub_191FBA1C8();
        swift_bridgeObjectRelease();
        sub_191F8A6FC(v1);
        sub_191F8A6FC(v1);
        swift_arrayDestroy();
        MEMORY[0x192FEBAE0](v47, -1, -1);
        MEMORY[0x192FEBAE0](v46, -1, -1);

        goto LABEL_55;
      }
      sub_191F8A6FC(v1);
      sub_191F8A6FC(v1);
    }
    goto LABEL_55;
  }
  swift_beginAccess();
  id v51 = v76;
  if (v76)
  {
    uint64_t v52 = qword_1EB27BC88;
    id v53 = v76;
    if (v52 != -1) {
      swift_once();
    }
    uint64_t v54 = sub_191FB9CA8();
    __swift_project_value_buffer(v54, (uint64_t)qword_1EB27BC70);
    os_log_type_t v55 = v53;
    uint64_t v56 = sub_191FB9C88();
    os_log_type_t v57 = sub_191FBA088();
    if (os_log_type_enabled(v56, v57))
    {
      uint64_t v58 = (uint8_t *)swift_slowAlloc();
      uint64_t v59 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v58 = 138543362;
      *(void *)&v73[0] = v55;
      uint64_t v60 = v55;
      sub_191FBA1C8();
      *uint64_t v59 = v51;

      _os_log_impl(&dword_191F29000, v56, v57, "Enumerating all available extensions for host: %{public}@", v58, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
      swift_arrayDestroy();
      MEMORY[0x192FEBAE0](v59, -1, -1);
      MEMORY[0x192FEBAE0](v58, -1, -1);
    }
    else
    {

      uint64_t v56 = v55;
    }

    id v61 = objc_msgSend(self, sel_enumeratorWithParentApplicationRecord_, v55);
    id v62 = objc_msgSend(v61, sel_allObjects);
    uint64_t v63 = sub_191FB9ED8();

    unint64_t v64 = sub_191F9ADC8(v63);
    swift_bridgeObjectRelease();
    sub_191F92D50(v64);
  }
LABEL_55:
  unint64_t v65 = v72;

  return v65;
}

uint64_t sub_191F429B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BCA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_191F42A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v10[8] = *MEMORY[0x1E4F143B8];
  v10[0] = a1;
  v10[1] = a2;
  long long v10[2] = a3;
  void v10[3] = a4;
  uint64_t v4 = (void *)sub_191FB9DA8();
  sub_191F42BAC();
  swift_getObjCClassFromMetadata();
  id v5 = _EXAuditTokenGetEntitlementValue((uint64_t)v10, v4);

  sub_191FBA1E8();
  swift_unknownObjectRelease();
  if swift_dynamicCast() && (v9) {
    return 1;
  }
  unint64_t v7 = (void *)sub_191FB9DA8();
  id v8 = _EXAuditTokenGetEntitlementValue((uint64_t)v10, v7);

  sub_191FBA1E8();
  swift_unknownObjectRelease();
  return swift_dynamicCast() & v9;
}

unint64_t sub_191F42BAC()
{
  unint64_t result = qword_1EB27BC98;
  if (!qword_1EB27BC98)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB27BC98);
  }
  return result;
}

uint64_t sub_191F42BEC(void *a1, uint64_t a2, unint64_t a3, _OWORD *a4)
{
  if ((sub_191FB9E98() & 1) == 0)
  {
    id v14 = objc_msgSend(a1, sel_parentAppRecord);
    if (v14) {
      goto LABEL_14;
    }
    if (qword_1EB27BC88 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_191FB9CA8();
    __swift_project_value_buffer(v15, (uint64_t)qword_1EB27BC70);
    swift_bridgeObjectRetain_n();
    unsigned __int8 v9 = sub_191FB9C88();
    os_log_type_t v10 = sub_191FBA058();
    if (os_log_type_enabled(v9, v10))
    {
      id v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      v32[0] = v12;
      *(_DWORD *)id v11 = 136446210;
      swift_bridgeObjectRetain();
      sub_191F4EB34(a2, a3, v32);
      sub_191FBA1C8();
      swift_bridgeObjectRelease_n();
      unint64_t v13 = "Extension point:  %{public}s has no parent app.";
      goto LABEL_11;
    }
LABEL_12:

    swift_bridgeObjectRelease_n();
    goto LABEL_13;
  }
  if (qword_1EB27BC88 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_191FB9CA8();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EB27BC70);
  swift_bridgeObjectRetain_n();
  unsigned __int8 v9 = sub_191FB9C88();
  os_log_type_t v10 = sub_191FBA058();
  if (!os_log_type_enabled(v9, v10)) {
    goto LABEL_12;
  }
  id v11 = (uint8_t *)swift_slowAlloc();
  uint64_t v12 = swift_slowAlloc();
  v32[0] = v12;
  *(_DWORD *)id v11 = 136446210;
  swift_bridgeObjectRetain();
  sub_191F4EB34(a2, a3, v32);
  sub_191FBA1C8();
  swift_bridgeObjectRelease_n();
  unint64_t v13 = "Skipping host app record lookup for system extension point: %{public}s";
LABEL_11:
  _os_log_impl(&dword_191F29000, v9, v10, v13, v11, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x192FEBAE0](v12, -1, -1);
  MEMORY[0x192FEBAE0](v11, -1, -1);

LABEL_13:
  id v14 = 0;
LABEL_14:
  id v16 = objc_msgSend(a1, sel_SDKDictionary);
  id v17 = (void *)sub_191FB9DA8();
  id v18 = _EXExtractRequiredHostEntitlements(v16, v17);

  uint64_t v19 = sub_191FB9D58();
  if (*(void *)(v19 + 16)) {
    goto LABEL_15;
  }
  id v23 = objc_msgSend(a1, sel__EX_parentAppRecord);
  if (v23)
  {
    os_log_type_t v24 = v23;
    if (!v14)
    {

      goto LABEL_15;
    }
    sub_191F442A4(0, &qword_1E92FD470);
    id v25 = v14;
    id v26 = v24;
    char v27 = sub_191FBA168();

    if ((v27 & 1) == 0)
    {
LABEL_15:
      sub_191F4D5CC(v19);
      swift_bridgeObjectRelease();
      uint64_t v20 = sub_191FB9D48();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      uint64_t HasRequiredEntitlements = _EXAuditTokenHasRequiredEntitlements(a4, v20, 0);
      swift_endAccess();
      goto LABEL_16;
    }
  }
  else if (v14)
  {
    goto LABEL_15;
  }
  swift_bridgeObjectRelease();
  if (qword_1EB27BC88 != -1) {
    swift_once();
  }
  uint64_t v28 = sub_191FB9CA8();
  __swift_project_value_buffer(v28, (uint64_t)qword_1EB27BC70);
  swift_bridgeObjectRetain_n();
  uint64_t v20 = sub_191FB9C88();
  os_log_type_t v29 = sub_191FBA058();
  if (!os_log_type_enabled(v20, v29))
  {

    swift_bridgeObjectRelease_n();
    return 1;
  }
  id v30 = (uint8_t *)swift_slowAlloc();
  uint64_t v31 = swift_slowAlloc();
  v32[0] = v31;
  *(_DWORD *)id v30 = 136446210;
  swift_bridgeObjectRetain();
  sub_191F4EB34(a2, a3, v32);
  sub_191FBA1C8();
  swift_bridgeObjectRelease_n();
  _os_log_impl(&dword_191F29000, v20, v29, "Extension point '%{public}s' is declared by the Host, allowing discovery.", v30, 0xCu);
  uint64_t HasRequiredEntitlements = 1;
  swift_arrayDestroy();
  MEMORY[0x192FEBAE0](v31, -1, -1);
  MEMORY[0x192FEBAE0](v30, -1, -1);
LABEL_16:

  return HasRequiredEntitlements;
}

uint64_t _EXAuditTokenHasRequiredEntitlements(_OWORD *a1, void *a2, void *a3)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  id v6 = objc_msgSend(v5, "_EX_arrayForKey:", @"com.apple.extensionkit.host.extension-point-identifiers");
  unint64_t v7 = [v6 firstObject];

  if ([v5 count] == 1 && v7)
  {
    objc_opt_class();
    _EXAuditTokenGetEntitlementValue((uint64_t)a1, @"com.apple.extensionkit.host.extension-point-identifiers");
    id v8 = (id)objc_claimAutoreleasedReturnValue();
    uint64_t v9 = [v8 containsObject:v7];
  }
  else
  {
    long long v23 = 0u;
    long long v24 = 0u;
    long long v21 = 0u;
    long long v22 = 0u;
    id v8 = v5;
    uint64_t v10 = [v8 countByEnumeratingWithState:&v21 objects:v26 count:16];
    if (v10)
    {
      uint64_t v11 = v10;
      uint64_t v20 = a3;
      uint64_t v12 = *(void *)v22;
      while (2)
      {
        for (uint64_t i = 0; i != v11; ++i)
        {
          if (*(void *)v22 != v12) {
            objc_enumerationMutation(v8);
          }
          id v14 = *(void **)(*((void *)&v21 + 1) + 8 * i);
          uint64_t v15 = [v8 objectForKeyedSubscript:v14];
          objc_opt_class();
          id v16 = _EXAuditTokenGetEntitlementValue((uint64_t)a1, v14);
          if (([v16 isEqual:v15] & 1) == 0)
          {
            id v17 = _EXDefaultLog();
            if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
              _EXAuditTokenHasRequiredEntitlements_cold_1((uint64_t)v14, (uint64_t)v16, v17);
            }

            uint64_t v9 = 0;
            goto LABEL_16;
          }
        }
        uint64_t v11 = [v8 countByEnumeratingWithState:&v21 objects:v26 count:16];
        if (v11) {
          continue;
        }
        break;
      }
      uint64_t v9 = 1;
LABEL_16:
      a3 = v20;
    }
    else
    {
      uint64_t v9 = 1;
    }
  }

  if (a3 && (v9 & 1) == 0)
  {
    long long v18 = a1[1];
    *(_OWORD *)atoken.val = *a1;
    *(_OWORD *)&atoken.val[4] = v18;
    objc_msgSend(MEMORY[0x1E4F28C58], "_EX_hostIsLackingRequiredEntitlementErrorWithHostPID:requiredEntitlements:", audit_token_to_pid(&atoken), v5);
    *a3 = (id)objc_claimAutoreleasedReturnValue();
  }

  return v9;
}

id sub_191F434C4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BE10);
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = (char *)v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = OBJC_IVAR____EXLaunchConfiguration_instanceIdentifier;
  *(void *)&v1[OBJC_IVAR____EXLaunchConfiguration_instanceIdentifier] = 0;
  uint64_t v8 = OBJC_IVAR____EXLaunchConfiguration_preferredLanguages;
  *(void *)&v1[OBJC_IVAR____EXLaunchConfiguration_preferredLanguages] = 0;
  uint64_t v9 = &v1[OBJC_IVAR____EXLaunchConfiguration_sandboxProfileName];
  *(void *)uint64_t v9 = 0;
  *((void *)v9 + 1) = 0;
  uint64_t v10 = OBJC_IVAR____EXLaunchConfiguration_additionalEnvironmentVariables;
  *(void *)&v1[OBJC_IVAR____EXLaunchConfiguration_additionalEnvironmentVariables] = MEMORY[0x1E4FBC868];
  uint64_t v11 = OBJC_IVAR____EXLaunchConfiguration_launchPersona;
  *(void *)&v1[OBJC_IVAR____EXLaunchConfiguration_launchPersona] = 0;
  uint64_t v12 = OBJC_IVAR____EXLaunchConfiguration_assertionAttributes;
  unint64_t v13 = v2;
  uint64_t v14 = sub_191F45CC0();
  uint64_t v50 = v12;
  *(void *)&v2[v12] = v14;
  uint64_t v15 = &v13[OBJC_IVAR____EXLaunchConfiguration_networkApplicationID];
  uint64_t v16 = sub_191FB9CE8();
  id v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v51 = (uint64_t)v15;
  v17(v15, 1, 1, v16);
  sub_191F442A4(0, (unint64_t *)&qword_1EB27BCB0);
  id result = (id)sub_191FBA128();
  if (!result) {
    goto LABEL_33;
  }
  uint64_t v52 = v13;
  *(void *)&v13[OBJC_IVAR____EXLaunchConfiguration__extensionIdentity] = result;
  type metadata accessor for _EXExtensionInstanceIdentifier();
  uint64_t v19 = sub_191FBA128();
  uint64_t v20 = *(void **)&v2[v7];
  id v53 = v2;
  *(void *)&v2[v7] = v19;

  sub_191F442A4(0, &qword_1E92FC850);
  uint64_t v21 = sub_191FBA128();
  if (v21)
  {
    long long v22 = (void *)v21;
    long long v58 = 0uLL;
    sub_191FB9DB8();

    long long v23 = v58;
  }
  else
  {
    long long v23 = 0uLL;
  }
  *(_OWORD *)uint64_t v9 = v23;
  swift_bridgeObjectRelease();
  uint64_t v24 = sub_191FBA148();
  if (v24)
  {
    *(void *)&long long v58 = v24;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92FC530);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BBC0);
    int v25 = swift_dynamicCast();
    unint64_t v26 = v56;
    if (!v25) {
      unint64_t v26 = 0;
    }
  }
  else
  {
    unint64_t v26 = 0;
  }
  *(void *)&v53[v8] = v26;
  swift_bridgeObjectRelease();
  uint64_t v27 = sub_191FBA138();
  if (v27
    && (*(void *)&long long v58 = v27,
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92FC840),
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BE38),
        swift_dynamicCast()))
  {
    unint64_t v28 = v56;
  }
  else
  {
    unint64_t v28 = sub_191F9C618(MEMORY[0x1E4FBC860]);
  }
  os_log_type_t v29 = v53;
  *(void *)&v53[v10] = v28;
  swift_bridgeObjectRelease();
  sub_191F442A4(0, (unint64_t *)&unk_1E92FC788);
  uint64_t v30 = sub_191FBA128();
  uint64_t v31 = *(void **)&v29[v11];
  *(void *)&v29[v11] = v30;

  type metadata accessor for _EXDomainAttribute();
  unint64_t v32 = sub_191FBA148();
  if (!v32)
  {
    uint64_t v45 = sub_191F45CC0();
LABEL_28:
    id v34 = v52;
LABEL_31:
    *(void *)&v53[v50] = v45;
    swift_bridgeObjectRelease();
    sub_191F442E0((uint64_t)v6);
    uint64_t v46 = v51;
    swift_beginAccess();
    sub_191F45790((uint64_t)v6, v46);
    swift_endAccess();

    uint64_t v47 = (objc_class *)type metadata accessor for _EXLaunchConfiguration(0);
    v57.receiver = v34;
    v57.super_class = v47;
    return objc_msgSendSuper2(&v57, sel_init);
  }
  unint64_t v33 = v32;
  id v34 = v52;
  if (v32 >> 62)
  {
    uint64_t v35 = sub_191FBA478();
    if (v35) {
      goto LABEL_17;
    }
LABEL_30:
    swift_bridgeObjectRelease();
    uint64_t v45 = MEMORY[0x1E4FBC860];
    goto LABEL_31;
  }
  uint64_t v35 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v35) {
    goto LABEL_30;
  }
LABEL_17:
  *(void *)&long long v58 = MEMORY[0x1E4FBC860];
  id result = (id)sub_191FBA398();
  uint64_t v54 = v35;
  if ((v35 & 0x8000000000000000) == 0)
  {
    v48[1] = a1;
    unint64_t v49 = v6;
    uint64_t v36 = 0;
    unint64_t v55 = v33 & 0xC000000000000001;
    uint64_t v37 = v54;
    do
    {
      if (v55) {
        uint64_t v41 = (char *)MEMORY[0x192FEA540](v36, v33);
      }
      else {
        uint64_t v41 = (char *)*(id *)(v33 + 8 * v36 + 32);
      }
      int v42 = v41;
      if (*(void *)&v41[OBJC_IVAR____EXDomainAttribute_sourceEnvironment + 8])
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v43 = sub_191FB9DA8();
        swift_bridgeObjectRelease();
        id v38 = (void *)sub_191FB9DA8();
        swift_bridgeObjectRelease();
        id v39 = (void *)sub_191FB9DA8();
        swift_bridgeObjectRelease();
        id v44 = objc_msgSend(self, sel_attributeWithDomain_name_sourceEnvironment_, v43, v38, v39);

        int v42 = (void *)v43;
        uint64_t v37 = v54;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v38 = (void *)sub_191FB9DA8();
        swift_bridgeObjectRelease();
        id v39 = (void *)sub_191FB9DA8();
        swift_bridgeObjectRelease();
        id v40 = objc_msgSend(self, sel_attributeWithDomain_name_, v38, v39);
      }

      ++v36;
      sub_191FBA368();
      sub_191FBA3A8();
      sub_191FBA3B8();
      sub_191FBA378();
    }
    while (v37 != v36);
    uint64_t v45 = v58;
    swift_bridgeObjectRelease();
    id v6 = v49;
    goto LABEL_28;
  }
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

id sub_191F43BA0()
{
  uint64_t v1 = v0;
  uint64_t v44 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *(char **)&v0[OBJC_IVAR____EXExtensionProcessHandle_launchConfiguration];
  uint64_t v3 = OBJC_IVAR____EXLaunchConfiguration_assertionAttributes;
  unint64_t v4 = *(void *)&v2[OBJC_IVAR____EXLaunchConfiguration_assertionAttributes];
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_191FBA478();
    swift_bridgeObjectRelease();
    if (v26 >= 1) {
      goto LABEL_3;
    }
  }
  else if (*(uint64_t *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1)
  {
LABEL_3:
    sub_191FBA2F8();
    swift_bridgeObjectRelease();
    id aBlock = (id)0xD000000000000019;
    unint64_t v38 = 0x8000000191FC81E0;
    uint64_t v5 = *(void **)&v1[OBJC_IVAR____EXExtensionProcessHandle_innerProcessHandle];
    unsigned int v43 = [v5 pid];
    sub_191FBA578();
    sub_191FB9E38();
    swift_bridgeObjectRelease();
    id v6 = objc_msgSend(self, sel_targetWithProcessIdentifier_, v5);
    if (*(void *)&v2[v3] >> 62)
    {
      sub_191F442A4(0, (unint64_t *)&unk_1EB27BD98);
      swift_bridgeObjectRetain();
      id v35 = v6;
      sub_191FBA468();
    }
    else
    {
      swift_bridgeObjectRetain_n();
      id v7 = v6;
      sub_191FBA5A8();
      sub_191F442A4(0, (unint64_t *)&unk_1EB27BD98);
    }
    swift_bridgeObjectRelease();
    id v8 = objc_allocWithZone(MEMORY[0x1E4F96318]);
    uint64_t v9 = (void *)sub_191FB9DA8();
    swift_bridgeObjectRelease();
    sub_191F442A4(0, (unint64_t *)&unk_1EB27BD98);
    uint64_t v10 = (void *)sub_191FB9EC8();
    swift_bridgeObjectRelease();
    id v11 = objc_msgSend(v8, sel_initWithExplanation_target_attributes_, v9, v6, v10);

    uint64_t v12 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v41 = sub_191F9DEF4;
    uint64_t v42 = v12;
    id aBlock = (id)MEMORY[0x1E4F143A8];
    unint64_t v38 = 1107296256;
    id v39 = sub_191F9CA84;
    id v40 = &block_descriptor_41;
    unint64_t v13 = _Block_copy(&aBlock);
    swift_release();
    objc_msgSend(v11, sel_setInvalidationHandler_, v13);
    _Block_release(v13);
    id aBlock = 0;
    if (objc_msgSend(v11, sel_acquireWithError_, &aBlock))
    {
      id v14 = aBlock;
    }
    else
    {
      id v15 = aBlock;
      uint64_t v16 = (void *)sub_191FB9B18();

      swift_willThrow();
      objc_msgSend(v11, sel_invalidate);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FC670);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_191FBFCC0;
      *(void *)(inited + 32) = sub_191FB9DC8();
      *(void *)(inited + 40) = v18;
      id aBlock = 0;
      unint64_t v38 = 0xE000000000000000;
      sub_191FBA2F8();
      swift_bridgeObjectRelease();
      id aBlock = (id)0xD000000000000025;
      unint64_t v38 = 0x8000000191FC8230;
      unsigned int v43 = [v5 pid];
      sub_191FBA578();
      sub_191FB9E38();
      swift_bridgeObjectRelease();
      id v19 = aBlock;
      unint64_t v20 = v38;
      *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
      *(void *)(inited + 48) = v19;
      *(void *)(inited + 56) = v20;
      *(void *)(inited + 80) = sub_191FB9DC8();
      *(void *)(inited + 88) = v21;
      swift_getErrorValue();
      *(void *)(inited + 120) = v36;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 96));
      (*(void (**)(uint64_t *))(*(void *)(v36 - 8) + 16))(boxed_opaque_existential_0);
      sub_191F9C4EC(inited);
      sub_191FB9DC8();
      id v23 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
      uint64_t v24 = (void *)sub_191FB9DA8();
      swift_bridgeObjectRelease();
      int v25 = (void *)sub_191FB9D48();
      swift_bridgeObjectRelease();
      objc_msgSend(v23, sel_initWithDomain_code_userInfo_, v24, 4, v25);

      swift_willThrow();
    }
    return v11;
  }
  if (qword_1EB27BDC0 != -1) {
    swift_once();
  }
  uint64_t v27 = sub_191FB9CA8();
  __swift_project_value_buffer(v27, (uint64_t)qword_1EB27BDE8);
  unint64_t v28 = v1;
  os_log_type_t v29 = sub_191FB9C88();
  os_log_type_t v30 = sub_191FBA068();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = (uint8_t *)swift_slowAlloc();
    unint64_t v32 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v31 = 138543362;
    id aBlock = v2;
    unint64_t v33 = v2;
    sub_191FBA1C8();
    *unint64_t v32 = v2;

    _os_log_impl(&dword_191F29000, v29, v30, "Assertion not taken, empty assertion attributes specified by launch configuration %{public}@.", v31, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
    swift_arrayDestroy();
    MEMORY[0x192FEBAE0](v32, -1, -1);
    MEMORY[0x192FEBAE0](v31, -1, -1);
  }
  else
  {
  }
  return 0;
}

uint64_t sub_191F442A4(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_191F442E0@<X0>(uint64_t a1@<X8>)
{
  sub_191F442A4(0, &qword_1E92FC770);
  uint64_t v2 = sub_191FBA128();
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    sub_191FB9A18();
    swift_allocObject();
    sub_191FB9A08();
    uint64_t v4 = sub_191FB9CE8();
    id v5 = v3;
    uint64_t v6 = sub_191FB9BE8();
    unint64_t v8 = v7;

    sub_191F54B74((unint64_t *)&unk_1E92FC690);
    sub_191FB99F8();

    sub_191F4CE58(v6, v8);
    swift_release();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
    uint64_t v11 = a1;
    uint64_t v12 = 0;
    uint64_t v13 = v4;
  }
  else
  {
    uint64_t v9 = sub_191FB9CE8();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
    uint64_t v13 = v9;
    uint64_t v11 = a1;
    uint64_t v12 = 1;
  }

  return v10(v11, v12, 1, v13);
}

void sub_191F44648(void *a1)
{
  uint64_t v3 = sub_191FB9CA8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for _EXHostConfiguration();
  if (objc_msgSend(a1, sel_isKindOfClass_, swift_getObjCClassFromMetadata()))
  {
    unint64_t v7 = a1;
    unint64_t v8 = (void *)sub_191F45550(v7);
    if (qword_1EB27BD10 != -1) {
      swift_once();
    }
    sub_191F44B58(v8);
    if (!v1)
    {
      unint64_t v28 = v9;
      id v29 = objc_allocWithZone((Class)type metadata accessor for _EXExtensionProcess());
      os_log_type_t v30 = v7;
      sub_191F45904(v28, v30);

      return;
    }
    if (qword_1E92FC798 != -1) {
      swift_once();
    }
    uint64_t v10 = __swift_project_value_buffer(v3, (uint64_t)qword_1E92FC7B0);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v10, v3);
    uint64_t v11 = v7;
    id v12 = v1;
    uint64_t v13 = v11;
    id v14 = v1;
    id v15 = sub_191FB9C88();
    int v16 = sub_191FBA068();
    if (!os_log_type_enabled(v15, (os_log_type_t)v16))
    {

      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      goto LABEL_12;
    }
    int v32 = v16;
    os_log_t v35 = v15;
    uint64_t v36 = v8;
    uint64_t v37 = v4;
    uint64_t v17 = swift_slowAlloc();
    unint64_t v33 = (void *)swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    uint64_t v39 = v34;
    *(_DWORD *)uint64_t v17 = 136446466;
    uint64_t v18 = *(void **)&v13[OBJC_IVAR____EXHostConfiguration__extensionIdentity];
    if (v18)
    {
      id v19 = objc_msgSend(v18, sel_bundleIdentifier);
      uint64_t v20 = sub_191FB9DC8();
      unint64_t v22 = v21;

      uint64_t v38 = sub_191F4EB34(v20, v22, &v39);
      sub_191FBA1C8();

      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2114;
      id v23 = v1;
      uint64_t v24 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v38 = v24;
      sub_191FBA1C8();
      int v25 = v33;
      void *v33 = v24;

      os_log_t v26 = v35;
      _os_log_impl(&dword_191F29000, v35, (os_log_type_t)v32, "Failed to create extensionProcess for extension '%{public}s' error: %{public}@", (uint8_t *)v17, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
      swift_arrayDestroy();
      MEMORY[0x192FEBAE0](v25, -1, -1);
      uint64_t v27 = v34;
      swift_arrayDestroy();
      MEMORY[0x192FEBAE0](v27, -1, -1);
      MEMORY[0x192FEBAE0](v17, -1, -1);

      (*(void (**)(char *, uint64_t))(v37 + 8))(v6, v3);
      unint64_t v8 = v36;
LABEL_12:
      swift_willThrow();

      return;
    }

    __break(1u);
  }
  objc_msgSend(self, sel__EX_parameterError);
  swift_willThrow();
  swift_unexpectedError();
  __break(1u);
}

uint64_t type metadata accessor for _EXHostConfiguration()
{
  uint64_t result = qword_1EB27BDA8;
  if (!qword_1EB27BDA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for _EXExtensionProcess()
{
  return self;
}

void sub_191F44B58(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = (os_unfair_lock_s *)(*(void *)(v1 + OBJC_IVAR____EXExtensionProcessMannger_processExtensionMapLock) + 16);
  os_unfair_lock_lock(v5);
  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____EXExtensionProcessMannger_processExtensionMap);
  unint64_t v7 = &selRef_UUID;
  id v8 = objc_msgSend(v6, sel_objectForKey_, a1);
  unint64_t v66 = v8;
  id v9 = v8;
  os_unfair_lock_unlock(v5);
  uint64_t v10 = &unk_1EB27B000;
  if (v9)
  {
    if (qword_1EB27BDC0 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_191FB9CA8();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EB27BDE8);
    id v12 = v9;
    uint64_t v13 = sub_191FB9C88();
    os_log_type_t v14 = sub_191FBA088();
    if (os_log_type_enabled(v13, v14))
    {
      id v15 = (uint8_t *)swift_slowAlloc();
      int v16 = (void *)swift_slowAlloc();
      *(_DWORD *)id v15 = 138543362;
      id v17 = v12;
      uint64_t v10 = (void *)&unk_1EB27B000;
      sub_191FBA1C8();
      *int v16 = v8;

      _os_log_impl(&dword_191F29000, v13, v14, "Existing process %{public}@ is valid, returning it.", v15, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
      swift_arrayDestroy();
      MEMORY[0x192FEBAE0](v16, -1, -1);
      MEMORY[0x192FEBAE0](v15, -1, -1);
    }
    else
    {
    }
    goto LABEL_32;
  }
  if (qword_1EB27BDC0 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_191FB9CA8();
  __swift_project_value_buffer(v18, (uint64_t)qword_1EB27BDE8);
  id v19 = a1;
  uint64_t v20 = sub_191FB9C88();
  os_log_type_t v21 = sub_191FBA088();
  if (os_log_type_enabled(v20, v21))
  {
    long long v58 = v6;
    unint64_t v22 = (uint8_t *)swift_slowAlloc();
    unint64_t v56 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v22 = 138543362;
    unint64_t v62 = (unint64_t)v19;
    uint64_t v60 = v19;
    id v23 = v19;
    uint64_t v3 = v2;
    unint64_t v7 = &selRef_UUID;
    sub_191FBA1C8();
    *unint64_t v56 = a1;

    id v19 = v60;
    _os_log_impl(&dword_191F29000, v20, v21, "Launching process with config: %{public}@", v22, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
    swift_arrayDestroy();
    MEMORY[0x192FEBAE0](v56, -1, -1);
    uint64_t v24 = v22;
    uint64_t v6 = v58;
    MEMORY[0x192FEBAE0](v24, -1, -1);
  }
  else
  {
  }
  uint64_t v25 = OBJC_IVAR____EXLaunchConfiguration__extensionIdentity;
  if (!objc_msgSend(*(id *)&v19[OBJC_IVAR____EXLaunchConfiguration__extensionIdentity], sel_launchesViaExtensionKitService))
  {
    if (objc_msgSend(*(id *)&v19[v25], sel_requiresNetworkAttribution))
    {
      sub_191F552C0(v19);
      if (v3) {
        return;
      }
    }
    objc_msgSend(self, sel_auditTokenForCurrentProcess);
    os_log_t v26 = (void *)sub_191F47588(v19, v62, v63, v64, v65);
    if (v3) {
      return;
    }
LABEL_20:
    uint64_t v59 = v26;
    id v27 = v26;
    os_unfair_lock_lock(v5);
    unint64_t v28 = (char *)objc_msgSend(v6, v7[477], v19);
    objc_super v57 = v27;
    if (v28)
    {
      id v29 = v28;
      os_log_type_t v30 = (os_unfair_lock_s *)(*(void *)&v28[OBJC_IVAR____EXExtensionProcessHandle_invalidationLock] + 16);
      os_unfair_lock_lock(v30);
      uint64_t v31 = *(void **)&v29[OBJC_IVAR____EXExtensionProcessHandle_assertion];
      if (v31)
      {
        unsigned int v32 = objc_msgSend(v31, sel_isValid);
        os_unfair_lock_unlock(v30);
        if (v32)
        {
          unint64_t v33 = v29;
          uint64_t v34 = sub_191FB9C88();
          os_log_type_t v35 = sub_191FBA088();
          if (os_log_type_enabled(v34, v35))
          {
            unint64_t v55 = v5;
            uint64_t v36 = (uint8_t *)swift_slowAlloc();
            uint64_t v37 = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v36 = 138543362;
            uint64_t v38 = v33;
            sub_191FBA1C8();
            void *v37 = v29;

            _os_log_impl(&dword_191F29000, v34, v35, "New process was created in a race and is valid, returning existing process: %{public}@", v36, 0xCu);
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
            swift_arrayDestroy();
            MEMORY[0x192FEBAE0](v37, -1, -1);
            uint64_t v39 = v36;
            uint64_t v5 = v55;
            MEMORY[0x192FEBAE0](v39, -1, -1);
          }
          else
          {
          }
          uint64_t v10 = (void *)&unk_1EB27B000;

          unint64_t v66 = v29;
LABEL_31:
          os_unfair_lock_unlock(v5);

LABEL_32:
          swift_beginAccess();
          if (!v66)
          {
            if (v10[440] != -1) {
              swift_once();
            }
            uint64_t v46 = sub_191FB9CA8();
            __swift_project_value_buffer(v46, (uint64_t)qword_1EB27BDE8);
            uint64_t v47 = a1;
            unint64_t v48 = sub_191FB9C88();
            os_log_type_t v49 = sub_191FBA078();
            if (os_log_type_enabled(v48, v49))
            {
              uint64_t v50 = a1;
              uint64_t v51 = (uint8_t *)swift_slowAlloc();
              uint64_t v52 = (void *)swift_slowAlloc();
              *(_DWORD *)uint64_t v51 = 138543362;
              id v53 = v47;
              sub_191FBA1C8();
              *uint64_t v52 = v50;

              _os_log_impl(&dword_191F29000, v48, v49, "Process is nil with no error for launch configuration: %{public}@", v51, 0xCu);
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
              swift_arrayDestroy();
              MEMORY[0x192FEBAE0](v52, -1, -1);
              MEMORY[0x192FEBAE0](v51, -1, -1);
            }
            else
            {

              unint64_t v48 = v47;
            }

            objc_msgSend(self, sel__EX_errorWithCode_underlyingError_, 2, 0);
            swift_willThrow();
          }
          return;
        }
      }
      else
      {
        os_unfair_lock_unlock(v30);
      }
    }
    id v40 = v27;
    uint64_t v41 = sub_191FB9C88();
    os_log_type_t v42 = sub_191FBA088();
    if (os_log_type_enabled(v41, v42))
    {
      unsigned int v43 = (uint8_t *)swift_slowAlloc();
      uint64_t v54 = (void *)swift_slowAlloc();
      *(_DWORD *)unsigned int v43 = 138543362;
      id v61 = v19;
      uint64_t v44 = v40;
      sub_191FBA1C8();
      void *v54 = v59;

      id v19 = v61;
      _os_log_impl(&dword_191F29000, v41, v42, "Created new process %{public}@.", v43, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
      swift_arrayDestroy();
      MEMORY[0x192FEBAE0](v54, -1, -1);
      MEMORY[0x192FEBAE0](v43, -1, -1);
    }
    else
    {

      uint64_t v41 = v40;
    }
    uint64_t v10 = &unk_1EB27B000;

    swift_unknownObjectWeakAssign();
    objc_msgSend(v6, sel_setObject_forKey_, v40, v19);

    unint64_t v66 = v59;
    uint64_t v45 = v40;
    goto LABEL_31;
  }
  if (qword_1E92FC760 != -1) {
    swift_once();
  }
  os_log_t v26 = (void *)sub_191F46030((uint64_t)v19);
  if (!v3) {
    goto LABEL_20;
  }
}

uint64_t sub_191F45550(char *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BE10);
  uint64_t result = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = &v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = *(void **)&a1[OBJC_IVAR____EXHostConfiguration__extensionIdentity];
  if (v6)
  {
    id v7 = objc_allocWithZone((Class)type metadata accessor for _EXLaunchConfiguration(0));
    id v8 = v6;
    id v9 = (char *)sub_191F457F8(v8);

    uint64_t v10 = *(void **)&a1[OBJC_IVAR____EXHostConfiguration_instanceIdentifier];
    uint64_t v11 = *(void **)&v9[OBJC_IVAR____EXLaunchConfiguration_instanceIdentifier];
    *(void *)&v9[OBJC_IVAR____EXLaunchConfiguration_instanceIdentifier] = v10;
    id v12 = v9;
    id v13 = v10;

    *(void *)&v12[OBJC_IVAR____EXLaunchConfiguration_preferredLanguages] = *(void *)&a1[OBJC_IVAR____EXHostConfiguration_preferredLanguages];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void *)&a1[OBJC_IVAR____EXHostConfiguration_sandboxProfileName + 8];
    id v15 = &v12[OBJC_IVAR____EXLaunchConfiguration_sandboxProfileName];
    *(void *)id v15 = *(void *)&a1[OBJC_IVAR____EXHostConfiguration_sandboxProfileName];
    *((void *)v15 + 1) = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)&v12[OBJC_IVAR____EXLaunchConfiguration_additionalEnvironmentVariables] = *(void *)&a1[OBJC_IVAR____EXHostConfiguration_additionalEnvironmentVariables];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    int v16 = *(void **)&a1[OBJC_IVAR____EXHostConfiguration_launchPersona];
    id v17 = *(void **)&v12[OBJC_IVAR____EXLaunchConfiguration_launchPersona];
    *(void *)&v12[OBJC_IVAR____EXLaunchConfiguration_launchPersona] = v16;
    id v18 = v16;

    *(void *)&v12[OBJC_IVAR____EXLaunchConfiguration_assertionAttributes] = *(void *)&a1[OBJC_IVAR____EXHostConfiguration_assertionAttributes];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v19 = (uint64_t)&a1[OBJC_IVAR____EXHostConfiguration_networkApplicationID];
    swift_beginAccess();
    sub_191F4CBD8(v19, (uint64_t)v5, &qword_1EB27BE10);

    uint64_t v20 = (uint64_t)&v12[OBJC_IVAR____EXLaunchConfiguration_networkApplicationID];
    swift_beginAccess();
    sub_191F45790((uint64_t)v5, v20);
    swift_endAccess();

    return (uint64_t)v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_191F45790(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BE10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

id sub_191F457F8(void *a1)
{
  *(void *)&v1[OBJC_IVAR____EXLaunchConfiguration_instanceIdentifier] = 0;
  *(void *)&v1[OBJC_IVAR____EXLaunchConfiguration_preferredLanguages] = 0;
  uint64_t v3 = &v1[OBJC_IVAR____EXLaunchConfiguration_sandboxProfileName];
  *(void *)uint64_t v3 = 0;
  *((void *)v3 + 1) = 0;
  *(void *)&v1[OBJC_IVAR____EXLaunchConfiguration_additionalEnvironmentVariables] = MEMORY[0x1E4FBC868];
  *(void *)&v1[OBJC_IVAR____EXLaunchConfiguration_launchPersona] = 0;
  uint64_t v4 = OBJC_IVAR____EXLaunchConfiguration_assertionAttributes;
  uint64_t v5 = v1;
  *(void *)&v1[v4] = sub_191F45CC0();
  uint64_t v6 = &v5[OBJC_IVAR____EXLaunchConfiguration_networkApplicationID];
  uint64_t v7 = sub_191FB9CE8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(void *)&v5[OBJC_IVAR____EXLaunchConfiguration__extensionIdentity] = a1;
  id v8 = a1;

  v10.receiver = v5;
  v10.super_class = (Class)type metadata accessor for _EXLaunchConfiguration(0);
  return objc_msgSendSuper2(&v10, sel_init);
}

id sub_191F45904(void *a1, char *a2)
{
  uint64_t v25 = OBJC_IVAR____EXExtensionProcess__processHandle;
  *(void *)&v2[OBJC_IVAR____EXExtensionProcess__processHandle] = a1;
  *(void *)&v2[OBJC_IVAR____EXExtensionProcess_configuration] = a2;
  uint64_t v5 = *(void *)&a2[OBJC_IVAR____EXHostConfiguration_interruptionHandler];
  uint64_t v6 = *(void *)&a2[OBJC_IVAR____EXHostConfiguration_interruptionHandler + 8];
  if (v5)
  {
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v5;
    *(void *)(v7 + 24) = v6;
    id v8 = sub_191F8669C;
  }
  else
  {
    id v8 = nullsub_1;
    uint64_t v7 = 0;
  }
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = v7;
  objc_super v10 = (objc_class *)type metadata accessor for _EXExtensionProcess.ProcessObserver();
  uint64_t v11 = (char *)objc_allocWithZone(v10);
  id v12 = (uint64_t *)&v11[OBJC_IVAR____TtCC19ExtensionFoundation19_EXExtensionProcessP33_2DB9D1F412467A20BF3CD4E75CD2541715ProcessObserver_invalidationHandler];
  uint64_t *v12 = 0;
  v12[1] = 0;
  uint64_t v13 = OBJC_IVAR____TtCC19ExtensionFoundation19_EXExtensionProcessP33_2DB9D1F412467A20BF3CD4E75CD2541715ProcessObserver_invalidationHandlerLock;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE60);
  uint64_t v14 = swift_allocObject();
  *(_DWORD *)(v14 + 16) = 0;
  *(void *)&v11[v13] = v14;
  uint64_t v15 = *v12;
  uint64_t *v12 = (uint64_t)sub_191F9A3A8;
  v12[1] = v9;
  int v16 = v2;
  id v17 = a1;
  id v18 = a2;
  sub_191F45B34(v5);
  swift_retain();
  sub_191F45B24(v15);
  v27.receiver = v11;
  v27.super_class = v10;
  id v19 = objc_msgSendSuper2(&v27, sel_init);
  swift_release();
  *(void *)&v16[OBJC_IVAR____EXExtensionProcess__observer] = v19;
  uint64_t v20 = *(char **)&v2[v25];
  os_log_type_t v21 = (os_unfair_lock_s *)(*(void *)&v20[OBJC_IVAR____EXExtensionProcessHandle_observersLock] + 16);
  id v22 = v19;
  id v23 = v20;
  os_unfair_lock_lock(v21);
  objc_msgSend(*(id *)&v23[OBJC_IVAR____EXExtensionProcessHandle_observers], sel_addObject_, v22);
  os_unfair_lock_unlock(v21);

  v26.receiver = v16;
  v26.super_class = (Class)type metadata accessor for _EXExtensionProcess();
  return objc_msgSendSuper2(&v26, sel_init);
}

uint64_t sub_191F45B24(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_191F45B34(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t type metadata accessor for _EXExtensionProcess.ProcessObserver()
{
  return self;
}

id sub_191F45B68(void *a1, void *a2)
{
  uint64_t v5 = OBJC_IVAR____EXHostConfiguration__extensionIdentity;
  *(void *)&v2[OBJC_IVAR____EXHostConfiguration__extensionIdentity] = 0;
  uint64_t v6 = &v2[OBJC_IVAR____EXHostConfiguration_interruptionHandler];
  *(void *)uint64_t v6 = 0;
  *((void *)v6 + 1) = 0;
  uint64_t v7 = OBJC_IVAR____EXHostConfiguration_instanceIdentifier;
  *(void *)&v2[OBJC_IVAR____EXHostConfiguration_instanceIdentifier] = 0;
  *(void *)&v2[OBJC_IVAR____EXHostConfiguration_preferredLanguages] = 0;
  *(void *)&v2[OBJC_IVAR____EXHostConfiguration_additionalEnvironmentVariables] = MEMORY[0x1E4FBC868];
  id v8 = &v2[OBJC_IVAR____EXHostConfiguration_sandboxProfileName];
  *(void *)id v8 = 0;
  *((void *)v8 + 1) = 0;
  *(void *)&v2[OBJC_IVAR____EXHostConfiguration_launchPersona] = 0;
  uint64_t v9 = OBJC_IVAR____EXHostConfiguration_assertionAttributes;
  objc_super v10 = v2;
  *(void *)&v2[v9] = sub_191F45CC0();
  v10[OBJC_IVAR____EXHostConfiguration_requireInvalidation] = 0;
  uint64_t v11 = &v10[OBJC_IVAR____EXHostConfiguration_networkApplicationID];
  uint64_t v12 = sub_191FB9CE8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = *(void **)&v2[v5];
  *(void *)&v2[v5] = a1;
  id v14 = a1;

  uint64_t v15 = *(void **)&v2[v7];
  *(void *)&v2[v7] = a2;
  id v16 = a2;

  v18.receiver = v10;
  v18.super_class = (Class)type metadata accessor for _EXHostConfiguration();
  return objc_msgSendSuper2(&v18, sel_init);
}

uint64_t sub_191F45CC0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BE50);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_191FC1050;
  uint64_t v1 = (void *)sub_191FB9DA8();
  uint64_t v2 = (void *)sub_191FB9DA8();
  uint64_t v3 = self;
  id v4 = objc_msgSend(v3, sel_attributeWithDomain_name_, v1, v2);

  *(void *)(v0 + 32) = v4;
  uint64_t v5 = (void *)sub_191FB9DA8();
  uint64_t v6 = (void *)sub_191FB9DA8();
  id v7 = objc_msgSend(v3, sel_attributeWithDomain_name_, v5, v6);

  *(void *)(v0 + 40) = v7;
  sub_191FB9EF8();
  return v0;
}

uint64_t sub_191F45E1C(uint64_t a1)
{
  sub_191F4CBD8(a1, (uint64_t)v6, &qword_1EB27BDE0);
  if (!v7)
  {
    sub_191F4CB7C((uint64_t)v6, &qword_1EB27BDE0);
    goto LABEL_6;
  }
  type metadata accessor for _EXLaunchConfiguration(0);
  if ((swift_dynamicCast() & 1) == 0 || (v5, v5 != v1))
  {
LABEL_6:
    sub_191F4CBD8(a1, (uint64_t)v6, &qword_1EB27BDE0);
    if (v7)
    {
      type metadata accessor for _EXLaunchConfiguration(0);
      if (swift_dynamicCast())
      {
        char v3 = sub_191F45F48((uint64_t)v5);

        return v3 & 1;
      }
    }
    else
    {
      sub_191F4CB7C((uint64_t)v6, &qword_1EB27BDE0);
    }
    char v3 = 0;
    return v3 & 1;
  }
  char v3 = 1;
  return v3 & 1;
}

uint64_t type metadata accessor for _EXLaunchConfiguration(uint64_t a1)
{
  return sub_191F4CD18(a1, (uint64_t *)&unk_1EB27BE28);
}

uint64_t sub_191F45F48(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_191F442A4(0, (unint64_t *)&unk_1EB27BCF0);
  id v4 = *(void **)(a1 + OBJC_IVAR____EXLaunchConfiguration__extensionIdentity);
  id v5 = *(id *)(v1 + OBJC_IVAR____EXLaunchConfiguration__extensionIdentity);
  id v6 = v4;
  char v7 = sub_191FBA168();

  if (v7)
  {
    id v8 = *(void **)(v2 + OBJC_IVAR____EXLaunchConfiguration_instanceIdentifier);
    uint64_t v9 = *(void **)(a1 + OBJC_IVAR____EXLaunchConfiguration_instanceIdentifier);
    if (v8)
    {
      if (v9)
      {
        type metadata accessor for _EXExtensionInstanceIdentifier();
        id v10 = v9;
        id v11 = v8;
        char v12 = sub_191FBA168();

        if (v12) {
          return 1;
        }
      }
    }
    else if (!v9)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_191F46030(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 0;
  char v3 = (id *)(v2 + 16);
  id v4 = sub_191F464A0();
  unint64_t v28 = sub_191F90F68;
  uint64_t v29 = v2;
  *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
  *((void *)&aBlock + 1) = 1107296256;
  objc_super v26 = sub_191F8C1B0;
  objc_super v27 = &block_descriptor_61;
  id v5 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  id v6 = objc_msgSend(v4, sel_synchronousRemoteObjectProxyWithErrorHandler_, v5);
  _Block_release(v5);

  sub_191FBA1E8();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92FC750);
  if (swift_dynamicCast())
  {
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = 0;
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v2;
    *(void *)(v8 + 24) = v7;
    unint64_t v28 = sub_191F301E8;
    uint64_t v29 = v8;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    objc_super v26 = sub_191F2F110;
    objc_super v27 = &block_descriptor_70;
    uint64_t v9 = _Block_copy(&aBlock);
    swift_retain();
    swift_unknownObjectRetain();
    swift_retain();
    swift_release();
    objc_msgSend(v24, sel_prepareWithLaunchConfiguration_reply_, a1, v9);
    _Block_release(v9);
    swift_beginAccess();
    id v10 = *(char **)(v7 + 16);
    if (v10)
    {
      id v11 = *(void **)&v10[OBJC_IVAR____EXExtensionProcessHandle_innerProcessHandle];
      char v12 = v10;
      objc_msgSend(v11, sel_auditToken);
      long long v23 = aBlock;
      uint64_t v13 = v26;
      id v14 = v27;
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = v12;
      unint64_t v28 = sub_191F35810;
      uint64_t v29 = v15;
      *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
      *((void *)&aBlock + 1) = 1107296256;
      objc_super v26 = sub_191F34288;
      objc_super v27 = &block_descriptor_76;
      id v16 = _Block_copy(&aBlock);
      id v17 = v12;
      swift_release();
      long long aBlock = v23;
      objc_super v26 = v13;
      objc_super v27 = v14;
      objc_msgSend(v24, sel_invalidateLaunchAssertionsForExtensionAuditToken_reply_, &aBlock, v16);
      _Block_release(v16);
      swift_release();
      swift_unknownObjectRelease_n();
      swift_release();
      return (uint64_t)v17;
    }
    swift_beginAccess();
    if (*v3)
    {
      id v21 = *v3;
      id v22 = (void *)sub_191FB9B08();
    }
    else
    {
      id v22 = 0;
    }
    objc_msgSend(self, sel__EX_errorWithCode_underlyingError_, 2, v22);

    swift_willThrow();
    swift_release();
    swift_unknownObjectRelease_n();
  }
  else
  {
    swift_beginAccess();
    if (*v3)
    {
      id v19 = *v3;
      uint64_t v20 = (void *)sub_191FB9B08();
    }
    else
    {
      uint64_t v20 = 0;
    }
    objc_msgSend(self, sel__EX_errorWithCode_underlyingError_, 2, v20);

    swift_willThrow();
  }
  return swift_release();
}

id sub_191F464A0()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE40);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = (os_unfair_lock_s *)(*(void *)(v1 + OBJC_IVAR____EXServiceClient_connectionLock) + 16);
  os_unfair_lock_lock(v5);
  uint64_t v6 = OBJC_IVAR____EXServiceClient__launchConnection;
  uint64_t v7 = *(void **)(v1 + OBJC_IVAR____EXServiceClient__launchConnection);
  if (v7)
  {
    id v8 = v7;
    os_unfair_lock_unlock(v5);
    return v8;
  }
  uint64_t v10 = sub_191FB9C68();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v4, 1, 1, v10);
  char v12 = (void *)sub_191FB9DA8();
  uint64_t v13 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v4, 1, v10) != 1)
  {
    uint64_t v13 = (void *)sub_191FB9C08();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v4, v10);
  }
  id v14 = (void *)sub_191FB9DA8();
  id v15 = objc_msgSend(self, sel_endpointForServiceName_oneshot_service_instance_, v12, v13, v14, 0);

  if (!v15)
  {
    if (qword_1E92FC798 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_191FB9CA8();
    __swift_project_value_buffer(v25, (uint64_t)qword_1E92FC7B0);
    objc_super v26 = sub_191FB9C88();
    os_log_type_t v27 = sub_191FBA078();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t aBlock = v29;
      *(_DWORD *)uint64_t v28 = 136446466;
      uint64_t v37 = sub_191F4EB34(0xD00000000000001DLL, 0x8000000191FC71C0, &aBlock);
      sub_191FBA1C8();
      *(_WORD *)(v28 + 12) = 2082;
      uint64_t v37 = sub_191F4EB34(0x68636E75614CLL, 0xE600000000000000, &aBlock);
      sub_191FBA1C8();
      swift_arrayDestroy();
      MEMORY[0x192FEBAE0](v29, -1, -1);
      MEMORY[0x192FEBAE0](v28, -1, -1);
    }

    id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F29268]), sel_init);
    goto LABEL_14;
  }
  id v16 = self;
  os_log_type_t v35 = nullsub_1;
  uint64_t v36 = 0;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v32 = 1107296256;
  unint64_t v33 = sub_191F2BF10;
  uint64_t v34 = &block_descriptor_129;
  id v17 = _Block_copy(&aBlock);
  swift_release();
  id v18 = objc_msgSend(v16, sel_NSXPCConnectionWithEndpoint_configurator_, v15, v17);
  _Block_release(v17);
  if (swift_isEscapingClosureAtFileLocation())
  {
    __break(1u);
    goto LABEL_16;
  }
  if (qword_1E92FC7A8 != -1) {
LABEL_16:
  }
    swift_once();
  objc_msgSend(v18, sel_setRemoteObjectInterface_, qword_1E92FF708);
  uint64_t v19 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  os_log_type_t v35 = sub_191F91BE4;
  uint64_t v36 = v19;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v32 = 1107296256;
  unint64_t v33 = sub_191F34288;
  uint64_t v34 = &block_descriptor_135;
  uint64_t v20 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(v18, sel_setInterruptionHandler_, v20);
  _Block_release(v20);
  uint64_t v21 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  os_log_type_t v35 = sub_191F91BEC;
  uint64_t v36 = v21;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v32 = 1107296256;
  unint64_t v33 = sub_191F34288;
  uint64_t v34 = &block_descriptor_139;
  id v22 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(v18, sel_setInvalidationHandler_, v22);
  _Block_release(v22);
  long long v23 = *(void **)(v1 + v6);
  *(void *)(v1 + v6) = v18;
  id v24 = v18;

  objc_msgSend(v24, sel_activate);
LABEL_14:
  os_unfair_lock_unlock(v5);
  return v24;
}

uint64_t sub_191F46AC8(void *a1)
{
  return sub_191F46AE0(a1);
}

uint64_t sub_191F46AE0(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FC8D0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_191F47240();
  sub_191FBA6B8();
  LOBYTE(v11) = 0;
  sub_191FBA538();
  if (!v2)
  {
    uint64_t v11 = *(void *)(v3 + 16);
    HIBYTE(v10) = 1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BBC0);
    sub_191F47294((unint64_t *)&unk_1E92FC8B8);
    sub_191FBA548();
    uint64_t v11 = *(void *)(v3 + 24);
    HIBYTE(v10) = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BE38);
    sub_191F472F8(&qword_1E92FC8B0);
    sub_191FBA568();
    LOBYTE(v11) = 3;
    sub_191FBA558();
    _s10AttachmentVMa(0);
    LOBYTE(v11) = 4;
    sub_191FB9CE8();
    sub_191F4F8B0((unint64_t *)&unk_1EB27BB98, MEMORY[0x1E4F38A80]);
    sub_191FBA548();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_191F46DA0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BE10);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FC658);
  uint64_t v18 = *(void *)(v6 - 8);
  uint64_t v19 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = _s10AttachmentVMa(0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (uint64_t *)((char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_191F47240();
  uint64_t v10 = (uint64_t)v20;
  sub_191FBA6A8();
  if (v10) {
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  uint64_t v16 = v7;
  uint64_t v20 = a1;
  uint64_t v12 = v18;
  uint64_t v11 = v19;
  LOBYTE(v22) = 0;
  uint64_t *v9 = sub_191FBA4F8();
  v9[1] = v13;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BBC0);
  char v21 = 1;
  sub_191F47294(&qword_1E92FC638);
  sub_191FBA508();
  _OWORD v9[2] = v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BE38);
  char v21 = 2;
  sub_191F472F8(&qword_1E92FC630);
  sub_191FBA528();
  v9[3] = v22;
  LOBYTE(v22) = 3;
  v9[4] = sub_191FBA518();
  v9[5] = v14;
  sub_191FB9CE8();
  LOBYTE(v22) = 4;
  sub_191F4F8B0((unint64_t *)&unk_1E92FC690, MEMORY[0x1E4F38A80]);
  sub_191FBA508();
  (*(void (**)(void, uint64_t))(v12 + 8))(0, v11);
  sub_191F4735C((uint64_t)v5, (uint64_t)v9 + *(int *)(v16 + 32), &qword_1EB27BE10);
  sub_191F473C0((uint64_t)v9, v17);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v20);
  return sub_191F4CCBC((uint64_t)v9);
}

unint64_t sub_191F47240()
{
  unint64_t result = qword_1EB27BB60;
  if (!qword_1EB27BB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB27BB60);
  }
  return result;
}

uint64_t sub_191F47294(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EB27BBC0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191F472F8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB27BE38);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191F4735C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_191F473C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s10AttachmentVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *sub_191F47424(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  uint64_t v7 = *(int *)(a3 + 32);
  uint64_t v8 = (char *)a2 + v7;
  __dst = (char *)a1 + v7;
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v9 = sub_191FB9CE8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BE10);
    memcpy(__dst, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(__dst, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(__dst, 0, 1, v9);
  }
  return a1;
}

unint64_t sub_191F47588(char *a1, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5)
{
  uint64_t v119 = *MEMORY[0x1E4F143B8];
  unint64_t v6 = HIDWORD(a2);
  unint64_t v7 = HIDWORD(a3);
  unint64_t v8 = HIDWORD(a4);
  unint64_t v9 = HIDWORD(a5);
  unint64_t v107 = HIDWORD(a3);
  unint64_t v108 = HIDWORD(a2);
  unint64_t v105 = HIDWORD(a5);
  unint64_t v106 = HIDWORD(a4);
  if (qword_1E92FC838 != -1)
  {
    unint64_t v81 = a2;
    unint64_t v82 = a4;
    unint64_t v83 = a3;
    swift_once();
    LODWORD(v9) = v105;
    LODWORD(v8) = v106;
    LODWORD(v7) = v107;
    LODWORD(v6) = v108;
    a2 = v81;
    a3 = v83;
    a4 = v82;
  }
  unint64_t v111 = a2;
  unint64_t type = a3;
  unint64_t v113 = a4;
  unint64_t v10 = xmmword_1E92FF710;
  unsigned int v11 = DWORD1(xmmword_1E92FF710);
  unsigned int v12 = DWORD2(xmmword_1E92FF710);
  unsigned int v13 = HIDWORD(xmmword_1E92FF710);
  unsigned int v15 = dword_1E92FF720;
  unsigned int v14 = unk_1E92FF724;
  unsigned int v17 = dword_1E92FF728;
  unsigned int v16 = unk_1E92FF72C;
  atoken.val[0] = a2;
  atoken.val[1] = v6;
  atoken.val[2] = a3;
  atoken.val[3] = v7;
  atoken.val[4] = a4;
  atoken.val[5] = v8;
  atoken.val[6] = a5;
  atoken.val[7] = v9;
  unint64_t v110 = a5;
  pid_t v18 = audit_token_to_pid(&atoken);
  atoken.val[0] = v10;
  atoken.val[1] = v11;
  atoken.val[2] = v12;
  atoken.val[3] = v13;
  atoken.val[4] = v15;
  atoken.val[5] = v14;
  atoken.val[6] = v17;
  atoken.val[7] = v16;
  if (v18 != audit_token_to_pid(&atoken))
  {
    char v21 = sub_191F48648(a1, v111, type, v113, v110);
    if (v109) {
      return v10;
    }
    uint64_t v20 = v21;
LABEL_9:
    uint64_t v22 = (void *)type metadata accessor for _EXLaunchConfiguration(0);
    *(void *)atoken.val = 0;
    if (!objc_msgSend(v22, sel_configureLaunchContext_error_, v20, &atoken))
    {
      id v28 = *(id *)atoken.val;
      sub_191FB9B18();

      swift_willThrow();
      return v10;
    }
    id v23 = *(id *)atoken.val;
    goto LABEL_11;
  }
  atoken.val[0] = v111;
  atoken.val[1] = v108;
  atoken.val[2] = type;
  atoken.val[3] = v107;
  atoken.val[4] = v113;
  atoken.val[5] = v106;
  atoken.val[6] = v110;
  atoken.val[7] = v105;
  int v102 = audit_token_to_pidversion(&atoken);
  atoken.val[0] = v10;
  atoken.val[1] = v11;
  atoken.val[2] = v12;
  atoken.val[3] = v13;
  atoken.val[4] = v15;
  atoken.val[5] = v14;
  atoken.val[6] = v17;
  atoken.val[7] = v16;
  unint64_t v10 = audit_token_to_pidversion(&atoken);
  uint64_t v19 = sub_191F48648(a1, v111, type, v113, v110);
  if (v109) {
    return v10;
  }
  uint64_t v20 = v19;
  if (v102 != v10) {
    goto LABEL_9;
  }
LABEL_11:
  id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F963A0]), sel_initWithContext_, v20);
  id v25 = objc_msgSend(v24, sel_executeRequest);
  objc_super v26 = a1;
  id v27 = v25;
  unint64_t v10 = (unint64_t)sub_191F498E8(v26, v27);
  uint64_t v101 = OBJC_IVAR____EXLaunchConfiguration__extensionIdentity;
  id v98 = v20;
  if (objc_msgSend(*(id *)&v26[OBJC_IVAR____EXLaunchConfiguration__extensionIdentity], sel_launchesViaExtensionKitService))
  {
    uint64_t v94 = (char *)v10;
    id v96 = v27;
    id v97 = v24;
    uint64_t v30 = MEMORY[0x1E4FBC860];
    uint64_t v115 = MEMORY[0x1E4FBC860];
    if (qword_1E92FC798 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_191FB9CA8();
    __swift_project_value_buffer(v31, (uint64_t)qword_1E92FC7B0);
    uint64_t v32 = sub_191FB9C88();
    os_log_type_t v33 = sub_191FBA058();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = v26;
      os_log_type_t v35 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v35 = 67240192;
      atoken.val[0] = v111;
      atoken.val[1] = v108;
      atoken.val[2] = type;
      atoken.val[3] = v107;
      atoken.val[4] = v113;
      atoken.val[5] = v106;
      atoken.val[6] = v110;
      atoken.val[7] = v105;
      atoken.val[0] = audit_token_to_pid(&atoken);
      sub_191FBA1C8();
      _os_log_impl(&dword_191F29000, v32, v33, "Adding extension service sandbox extension for host pid %{public}d", v35, 8u);
      uint64_t v36 = v35;
      objc_super v26 = v34;
      MEMORY[0x192FEBAE0](v36, -1, -1);
    }

    unint64_t v100 = v26;
    id v37 = objc_msgSend(*(id *)&v26[v101], sel_serviceName);
    sub_191FB9DC8();

    id v38 = objc_allocWithZone((Class)_EXSandboxExtension);
    uint64_t v39 = (void *)sub_191FB9DA8();
    id v40 = (void *)sub_191FB9DA8();
    swift_bridgeObjectRelease();
    atoken.val[0] = v111;
    atoken.val[1] = v108;
    atoken.val[2] = type;
    atoken.val[3] = v107;
    atoken.val[4] = v113;
    atoken.val[5] = v106;
    atoken.val[6] = v110;
    atoken.val[7] = v105;
    id v41 = objc_msgSend(v38, sel_initWithExtensionClass_machServiceName_process_, v39, v40, &atoken);

    id v42 = v41;
    MEMORY[0x192FEA0C0]();
    if (*(void *)((v115 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v115 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_191FB9F08();
    }
    sub_191FB9F28();
    sub_191FB9EF8();

    id v43 = objc_msgSend(v20, sel_extensionOverlay);
    if (v43)
    {
      uint64_t v44 = v43;
      uint64_t v45 = sub_191FB9D58();

      if (*(void *)(v45 + 16) && (unint64_t v46 = sub_191F4FA1C(0x6976726553435058, 0xEA00000000006563), (v47 & 1) != 0))
      {
        sub_191F4EC08(*(void *)(v45 + 56) + 32 * v46, (uint64_t)&v116);
      }
      else
      {
        long long v116 = 0u;
        long long v117 = 0u;
      }
      swift_bridgeObjectRelease();
      if (*((void *)&v117 + 1))
      {
        sub_191F442A4(0, &qword_1E92FC580);
        if (swift_dynamicCast())
        {
          *(void *)&long long v116 = 0xD000000000000016;
          *((void *)&v116 + 1) = 0x8000000191FC5EA0;
          id v48 = objc_msgSend(v114, sel___swift_objectForKeyedSubscript_, sub_191FBA5B8());
          swift_unknownObjectRelease();

          if (v48)
          {
            sub_191FBA1E8();
            swift_unknownObjectRelease();
          }
          else
          {
            long long v116 = 0u;
            long long v117 = 0u;
          }
          sub_191F4735C((uint64_t)&v116, (uint64_t)&atoken, &qword_1EB27BDE0);
          if (*(void *)&atoken.val[6])
          {
            if (swift_dynamicCast())
            {
              uint64_t v77 = (void *)v116;
              id v78 = objc_msgSend((id)v116, sel_allKeys);

              uint64_t v79 = sub_191FB9ED8();
              uint64_t v80 = sub_191F4FF60(v79);
              swift_bridgeObjectRelease();
              if (v80) {
                uint64_t v49 = v80;
              }
              else {
                uint64_t v49 = v30;
              }
              goto LABEL_35;
            }
LABEL_34:
            uint64_t v49 = MEMORY[0x1E4FBC860];
LABEL_35:
            uint64_t v93 = v49;
            uint64_t v50 = *(void *)(v49 + 16);
            if (v50)
            {
              uint64_t v51 = (unint64_t *)(v49 + 40);
              do
              {
                uint64_t v104 = v50;
                uint64_t v52 = *(v51 - 1);
                unint64_t v53 = *v51;
                swift_bridgeObjectRetain_n();
                uint64_t v54 = sub_191FB9C88();
                os_log_type_t v55 = sub_191FBA058();
                if (os_log_type_enabled(v54, v55))
                {
                  uint64_t v56 = swift_slowAlloc();
                  int64_t v99 = v51;
                  uint64_t v57 = swift_slowAlloc();
                  *(void *)&long long v116 = v57;
                  *(_DWORD *)uint64_t v56 = 136446466;
                  swift_bridgeObjectRetain();
                  *(void *)(v56 + 4) = sub_191F4EB34(v52, v53, (uint64_t *)&v116);
                  swift_bridgeObjectRelease_n();
                  *(_WORD *)(v56 + 12) = 1026;
                  unsigned int v59 = v111;
                  unsigned int v58 = type;
                  atoken.val[0] = v111;
                  atoken.val[1] = v108;
                  atoken.val[2] = type;
                  atoken.val[3] = v107;
                  unsigned int v60 = v113;
                  atoken.val[4] = v113;
                  atoken.val[5] = v106;
                  unsigned int v61 = v110;
                  atoken.val[6] = v110;
                  atoken.val[7] = v105;
                  *(_DWORD *)(v56 + 14) = audit_token_to_pid(&atoken);
                  _os_log_impl(&dword_191F29000, v54, v55, "Adding '%{public}s'subservice sandbox extension for host pid %{public}d", (uint8_t *)v56, 0x12u);
                  swift_arrayDestroy();
                  uint64_t v62 = v57;
                  uint64_t v51 = v99;
                  MEMORY[0x192FEBAE0](v62, -1, -1);
                  MEMORY[0x192FEBAE0](v56, -1, -1);
                }
                else
                {

                  swift_bridgeObjectRelease_n();
                  unsigned int v61 = v110;
                  unsigned int v59 = v111;
                  unsigned int v58 = type;
                  unsigned int v60 = v113;
                }
                id v63 = objc_msgSend(*(id *)&v100[v101], sel_bundleIdentifier, v93);
                uint64_t v64 = sub_191FB9DC8();
                uint64_t v66 = v65;

                *(void *)atoken.val = v64;
                *(void *)&atoken.val[2] = v66;
                sub_191FB9E38();
                sub_191FB9E38();
                swift_bridgeObjectRelease();
                id v67 = objc_allocWithZone((Class)_EXSandboxExtension);
                uint64_t v68 = (void *)sub_191FB9DA8();
                long long v69 = (void *)sub_191FB9DA8();
                swift_bridgeObjectRelease();
                atoken.val[0] = v59;
                atoken.val[1] = v108;
                atoken.val[2] = v58;
                atoken.val[3] = v107;
                atoken.val[4] = v60;
                atoken.val[5] = v106;
                atoken.val[6] = v61;
                atoken.val[7] = v105;
                id v70 = objc_msgSend(v67, sel_initWithExtensionClass_machServiceName_process_, v68, v69, &atoken);

                id v71 = v70;
                MEMORY[0x192FEA0C0]();
                if (*(void *)((v115 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v115 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                  sub_191FB9F08();
                }
                v51 += 2;
                sub_191FB9F28();
                sub_191FB9EF8();

                uint64_t v50 = v104 - 1;
              }
              while (v104 != 1);
            }
            swift_bridgeObjectRelease();
            unint64_t v10 = (unint64_t)v94;
            *(void *)&v94[OBJC_IVAR____EXExtensionProcessHandle_sandboxExtensions] = v115;
            swift_bridgeObjectRelease();
            id v24 = v97;
            uint64_t v20 = v98;
            id v27 = v96;
            objc_super v26 = v100;
            goto LABEL_44;
          }
LABEL_33:
          sub_191F4CB7C((uint64_t)&atoken, &qword_1EB27BDE0);
          goto LABEL_34;
        }
LABEL_32:
        memset(&atoken, 0, sizeof(atoken));
        goto LABEL_33;
      }
    }
    else
    {
      long long v116 = 0u;
      long long v117 = 0u;
    }
    sub_191F4CB7C((uint64_t)&v116, &qword_1EB27BDE0);
    goto LABEL_32;
  }
LABEL_44:
  unint64_t v72 = *(void *)&v26[OBJC_IVAR____EXLaunchConfiguration_assertionAttributes];
  if (v72 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v84 = sub_191FBA478();
    swift_bridgeObjectRelease();
    if (v84 >= 1) {
      goto LABEL_46;
    }
  }
  else if (*(uint64_t *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1)
  {
LABEL_46:
    id v73 = sub_191F43BA0();
    long long v74 = (os_unfair_lock_s *)(*(void *)(v10 + OBJC_IVAR____EXExtensionProcessHandle_invalidationLock) + 16);
    os_unfair_lock_lock(v74);
    long long v75 = *(void **)(v10 + OBJC_IVAR____EXExtensionProcessHandle_assertion);
    *(void *)(v10 + OBJC_IVAR____EXExtensionProcessHandle_assertion) = v73;
    id v76 = v73;

    *(void *)(v10 + OBJC_IVAR____EXExtensionProcessHandle_assertionAquireCount) = 1;
    os_unfair_lock_unlock(v74);

    return v10;
  }
  if (qword_1EB27BDC0 != -1) {
    swift_once();
  }
  uint64_t v85 = sub_191FB9CA8();
  __swift_project_value_buffer(v85, (uint64_t)qword_1EB27BDE8);
  uint64_t v86 = v26;
  uint64_t v87 = sub_191FB9C88();
  os_log_type_t v88 = sub_191FBA068();
  if (os_log_type_enabled(v87, v88))
  {
    uint64_t v89 = (uint8_t *)swift_slowAlloc();
    unint64_t v95 = v10;
    uint64_t v90 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v89 = 138543362;
    *(void *)atoken.val = v86;
    uint64_t v91 = v86;
    sub_191FBA1C8();
    *uint64_t v90 = v86;

    _os_log_impl(&dword_191F29000, v87, v88, "Assertion not taken, empty assertion attributes specified by launch configuration %{public}@.", v89, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
    swift_arrayDestroy();
    uint64_t v92 = v90;
    unint64_t v10 = v95;
    MEMORY[0x192FEBAE0](v92, -1, -1);
    MEMORY[0x192FEBAE0](v89, -1, -1);
  }
  else
  {
  }
  return v10;
}

char *sub_191F48648(char *a1, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5)
{
  unsigned int v5 = a5;
  unsigned int v6 = a4;
  unsigned int v7 = a3;
  unsigned int v8 = a2;
  unint64_t v10 = HIDWORD(a2);
  unint64_t v11 = HIDWORD(a3);
  uint64_t v110 = *MEMORY[0x1E4F143B8];
  unint64_t v12 = HIDWORD(a4);
  unint64_t v13 = HIDWORD(a5);
  uint64_t v96 = sub_191FB9B78();
  uint64_t v95 = *(void *)(v96 - 8);
  MEMORY[0x1F4188790](v96);
  uint64_t v100 = (uint64_t)&v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_191FB9C68();
  uint64_t v104 = *(void (***)(void, void, void))(v106 - 8);
  MEMORY[0x1F4188790](v106);
  int64_t v99 = (char *)&v91 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE40);
  uint64_t v17 = MEMORY[0x1F4188790](v16 - 8);
  uint64_t v94 = (uint64_t)&v91 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  id v97 = (char *)&v91 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v101 = (char *)&v91 - v22;
  MEMORY[0x1F4188790](v21);
  uint64_t v107 = (uint64_t)&v91 - v23;
  unint64_t v105 = a1;
  uint64_t v98 = OBJC_IVAR____EXLaunchConfiguration__extensionIdentity;
  id v103 = *(id *)&a1[OBJC_IVAR____EXLaunchConfiguration__extensionIdentity];
  atoken.val[0] = v8;
  atoken.val[1] = v10;
  atoken.val[2] = v7;
  atoken.val[3] = v11;
  atoken.val[4] = v6;
  atoken.val[5] = v12;
  atoken.val[6] = v5;
  atoken.val[7] = v13;
  id v24 = (char *)audit_token_to_pid(&atoken);
  id v25 = self;
  unint64_t v108 = 0;
  atoken.val[0] = v8;
  atoken.val[1] = v10;
  atoken.val[2] = v7;
  atoken.val[3] = v11;
  atoken.val[4] = v6;
  atoken.val[5] = v12;
  atoken.val[6] = v5;
  atoken.val[7] = v13;
  id v26 = objc_msgSend(v25, sel_bundleRecordForAuditToken_error_, &atoken, &v108);
  if (v26)
  {
    id v27 = (id)v108;
  }
  else
  {
    id v28 = (id)v108;
    uint64_t v29 = (void *)sub_191FB9B18();

    swift_willThrow();
    uint64_t v102 = 0;
  }
  uint64_t v30 = (char *)objc_msgSend(self, sel_identifierWithPid_, v24);
  id v31 = v103;
  uint64_t v32 = v107;
  os_log_type_t v33 = v105;
  uint64_t v34 = v106;
  os_log_type_t v35 = v104;
  if (v30)
  {
    uint64_t v36 = v30;
    uint64_t v37 = *(void *)&v105[OBJC_IVAR____EXLaunchConfiguration_instanceIdentifier];
    unsigned int v93 = v24;
    if (v37)
    {
      v104[2](v107, v37 + OBJC_IVAR____EXExtensionInstanceIdentifier_identifier, v106);
      id v38 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v35[7];
      v38(v32, 0, 1, v34);
    }
    else
    {
      id v38 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v104[7];
      v38(v107, 1, 1, v106);
    }
    uint64_t v41 = (uint64_t)v101;
    sub_191F49880(v32, (uint64_t)v101);
    uint64_t v91 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v35[6];
    int v42 = v91(v41, 1, v34);
    sub_191F4CB7C(v41, (uint64_t *)&unk_1EB27BE40);
    if (v42 == 1 && objc_msgSend(*(id *)&v33[v98], sel_requiresMultiInstance))
    {
      uint64_t v101 = v36;
      if (qword_1E92FD1D8 != -1) {
        swift_once();
      }
      id v43 = (char *)(id)qword_1E92FD9C0;
      sub_191F4CB7C(v32, (uint64_t *)&unk_1EB27BE40);
      uint64_t v44 = (uint64_t)v97;
      uint64_t v45 = v106;
      ((void (**)(char *, char *, uint64_t))v104)[2](v97, &v43[OBJC_IVAR____EXExtensionInstanceIdentifier_identifier], v106);

      v38(v44, 0, 1, v45);
      sub_191F4735C(v44, v107, (uint64_t *)&unk_1EB27BE40);
      uint64_t v36 = v101;
      os_log_type_t v33 = v105;
    }
    id v46 = objc_msgSend(v33, sel_rbsProcessIdentityWithHost_, v36);
    id v24 = v36;
    if (v46)
    {
      char v47 = v46;
      id v92 = v26;
      uint64_t v101 = v36;
      id v48 = objc_msgSend(self, sel_contextWithIdentity_, v46);
      unsigned int v49 = v93;
      objc_msgSend(v48, sel_setHostPid_, v93);
      *(void *)atoken.val = 0;
      *(void *)&atoken.val[2] = 0xE000000000000000;
      sub_191FBA2F8();
      swift_bridgeObjectRelease();
      *(void *)atoken.val = 0xD000000000000014;
      *(void *)&atoken.val[2] = 0x8000000191FC5F30;
      id v50 = objc_msgSend(v31, sel_bundleIdentifier);
      sub_191FB9DC8();

      sub_191FB9E38();
      swift_bridgeObjectRelease();
      sub_191FB9E38();
      id v51 = objc_msgSend(v31, sel_UUID);
      uint64_t v52 = v99;
      sub_191FB9C28();

      sub_191F49828();
      uint64_t v53 = v106;
      sub_191FBA578();
      sub_191FB9E38();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v104[1])(v52, v53);
      sub_191FB9E38();
      LODWORD(v108) = v49;
      id v24 = (char *)v48;
      sub_191FBA578();
      sub_191FB9E38();
      swift_bridgeObjectRelease();
      uint64_t v54 = (void *)sub_191FB9DA8();
      swift_bridgeObjectRelease();
      objc_msgSend(v48, sel_setExplanation_, v54);

      uint64_t v55 = v102;
      sub_191F4D168(v100);
      if (v55)
      {
        sub_191F4CB7C(v107, (uint64_t *)&unk_1EB27BE40);
      }
      else
      {
        uint64_t v104 = (void (**)(void, void, void))v47;
        sub_191FB9B68();
        unsigned int v60 = (void *)sub_191FB9DA8();
        swift_bridgeObjectRelease();
        objc_msgSend(v48, sel__setOverrideExecutablePath_, v60);

        unsigned int v61 = *(void **)&v105[OBJC_IVAR____EXLaunchConfiguration_preferredLanguages];
        if (v61 && v61[2])
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FC860);
          uint64_t v62 = swift_allocObject();
          *(_OWORD *)(v62 + 16) = xmmword_191FBFCC0;
          *(void *)(v62 + 32) = 0x614C656C7070412DLL;
          *(void *)(v62 + 40) = 0xEF7365676175676ELL;
          *(void *)atoken.val = 8744;
          *(void *)&atoken.val[2] = 0xE200000000000000;
          unint64_t v108 = (unint64_t)v61;
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BBC0);
          sub_191F811B0();
          sub_191FB9D88();
          swift_bridgeObjectRelease();
          sub_191FB9E38();
          swift_bridgeObjectRelease();
          sub_191FB9E38();
          uint64_t v63 = *(void *)&atoken.val[2];
          *(void *)(v62 + 48) = *(void *)atoken.val;
          *(void *)(v62 + 56) = v63;
        }
        else
        {
          uint64_t v62 = MEMORY[0x1E4FBC860];
        }
        uint64_t v64 = (void *)sub_191FB9EC8();
        objc_msgSend(v48, sel_setArguments_, v64);

        uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FC860);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_191FBFCD0;
        *(void *)(inited + 32) = sub_191FB9B68();
        *(void *)(inited + 40) = v66;
        *(void *)atoken.val = inited;
        if (*(void *)(v62 + 16)) {
          sub_191F503D8(v62);
        }
        else {
          swift_bridgeObjectRelease();
        }
        if (*(void *)&v105[OBJC_IVAR____EXLaunchConfiguration_sandboxProfileName + 8])
        {
          swift_bridgeObjectRetain();
          id v67 = (void *)sub_191FB9DA8();
          swift_bridgeObjectRelease();
        }
        else
        {
          id v67 = 0;
        }
        uint64_t v68 = v94;
        sub_191F49880(v107, v94);
        BOOL v69 = v91(v68, 1, v106) != 1;
        sub_191F4CB7C(v68, (uint64_t *)&unk_1EB27BE40);
        sub_191F4CEB0(*(uint64_t *)atoken.val);
        swift_bridgeObjectRelease();
        id v70 = (void *)sub_191FB9EC8();
        swift_bridgeObjectRelease();
        uint64_t v71 = swift_bridgeObjectRetain();
        sub_191F4D9A4(v71);
        swift_bridgeObjectRelease();
        unint64_t v72 = (void *)sub_191FB9D48();
        swift_bridgeObjectRelease();
        id v73 = v103;
        id v74 = objc_msgSend(v103, sel_xpcOverlayDictionaryOverridingSandboxProfileName_multiInstance_arguments_additionalEnvironment_, v67, v69, v70, v72);

        sub_191FB9D58();
        long long v75 = (void *)sub_191FB9D48();
        swift_bridgeObjectRelease();
        objc_msgSend(v24, sel_setExtensionOverlay_, v75);

        if (objc_msgSend(v73, sel_targetsSystemExtensionPoint))
        {
          id v76 = 0;
          id v77 = v92;
        }
        else
        {
          objc_msgSend(v73, sel_presentsUserInterface);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BE50);
          uint64_t v78 = swift_allocObject();
          *(_OWORD *)(v78 + 16) = xmmword_191FBFCE0;
          uint64_t v79 = (void *)sub_191FB9DA8();
          id v77 = v92;
          uint64_t v80 = (void *)sub_191FB9DA8();
          id v81 = objc_msgSend(self, sel_attributeWithDomain_name_, v79, v80);

          *(void *)(v78 + 32) = v81;
          unint64_t v108 = v78;
          sub_191FB9EF8();
          if (v108 >> 62)
          {
            sub_191F442A4(0, (unint64_t *)&unk_1EB27BD98);
            swift_bridgeObjectRetain();
            sub_191FBA468();
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRetain();
            sub_191FBA5A8();
            sub_191F442A4(0, (unint64_t *)&unk_1EB27BD98);
          }
          swift_bridgeObjectRelease();
          sub_191F442A4(0, (unint64_t *)&unk_1EB27BD98);
          id v76 = (void *)sub_191FB9EC8();
          swift_bridgeObjectRelease();
        }
        objc_msgSend(v24, sel_setAttributes_, v76);

        objc_msgSend(v24, sel__setAdditionalEnvironment_, 0);
        if (objc_msgSend(v73, sel_launchesViaExtensionKitService))
        {
          uint64_t v82 = v107;
          uint64_t v83 = v100;
          id v84 = v101;
        }
        else
        {
          uint64_t v85 = swift_initStackObject();
          *(_OWORD *)(v85 + 16) = xmmword_191FBFCC0;
          id v86 = objc_msgSend(v73, sel_serviceName);
          uint64_t v87 = sub_191FB9DC8();
          uint64_t v89 = v88;

          *(void *)(v85 + 32) = v87;
          *(void *)(v85 + 40) = v89;
          *(void *)(v85 + 48) = 0xD000000000000026;
          *(void *)(v85 + 56) = 0x8000000191FC5F90;
          sub_191F50234(v85);
          swift_setDeallocating();
          swift_arrayDestroy();
          uint64_t v90 = sub_191FB9FA8();
          swift_bridgeObjectRelease();
          objc_msgSend(v24, sel_setManagedEndpointLaunchIdentifiers_, v90);

          id v73 = v77;
          id v77 = v101;
          id v84 = (id)v90;
          uint64_t v82 = v107;
          uint64_t v83 = v100;
        }

        (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v83, v96);
        sub_191F4CB7C(v82, (uint64_t *)&unk_1EB27BE40);
      }
    }
    else
    {
      uint64_t v56 = self;
      *(void *)atoken.val = 0;
      *(void *)&atoken.val[2] = 0xE000000000000000;
      sub_191FBA2F8();
      swift_bridgeObjectRelease();
      *(void *)atoken.val = 0xD000000000000027;
      *(void *)&atoken.val[2] = 0x8000000191FC5F00;
      id v57 = objc_msgSend(v33, sel_description);
      sub_191FB9DC8();

      sub_191FB9E38();
      swift_bridgeObjectRelease();
      unsigned int v58 = (void *)sub_191FB9DA8();
      swift_bridgeObjectRelease();
      objc_msgSend(v56, sel__EX_errorWithCode_description_, 2, v58);

      swift_willThrow();
      sub_191F4CB7C(v107, (uint64_t *)&unk_1EB27BE40);
    }
  }
  else
  {
    uint64_t v39 = self;
    *(void *)atoken.val = 0;
    *(void *)&atoken.val[2] = 0xE000000000000000;
    sub_191FBA2F8();
    sub_191FB9E38();
    LODWORD(v108) = v24;
    sub_191FBA578();
    sub_191FB9E38();
    swift_bridgeObjectRelease();
    id v40 = (void *)sub_191FB9DA8();
    swift_bridgeObjectRelease();
    objc_msgSend(v39, sel__EX_errorWithCode_description_, 2, v40);

    swift_willThrow();
  }
  return v24;
}

unint64_t sub_191F49778()
{
  return 0xD000000000000021;
}

unint64_t sub_191F49828()
{
  unint64_t result = qword_1EB27BCA0;
  if (!qword_1EB27BCA0)
  {
    sub_191FB9C68();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB27BCA0);
  }
  return result;
}

uint64_t sub_191F49880(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *sub_191F498E8(char *a1, id a2)
{
  id v2 = a2;
  uint64_t v92 = *MEMORY[0x1E4F143B8];
  id v4 = objc_msgSend(a2, sel_process);
  if (v4)
  {
    id v86 = v4;
    id v85 = objc_msgSend(v2, sel_assertion);
    uint64_t v5 = OBJC_IVAR____EXLaunchConfiguration__extensionIdentity;
    id v6 = *(id *)&a1[OBJC_IVAR____EXLaunchConfiguration__extensionIdentity];
    id v7 = objc_msgSend(v2, sel_managedEndpointByLaunchIdentifier);
    if (v7)
    {
      unsigned int v8 = v7;
      unint64_t v9 = a1;
      sub_191F442A4(0, &qword_1E92FC810);
      uint64_t v10 = sub_191FB9D58();

      id v11 = objc_msgSend(v6, sel_serviceName);
      uint64_t v12 = sub_191FB9DC8();
      uint64_t v14 = v13;

      if (*(void *)(v10 + 16) && (unint64_t v15 = sub_191F4FA1C(v12, v14), (v16 & 1) != 0))
      {
        uint64_t v17 = *(void **)(*(void *)(v10 + 56) + 8 * v15);
        id v18 = v17;
      }
      else
      {
        uint64_t v17 = 0;
      }
      a1 = v9;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v17 = 0;
    }
    if (objc_msgSend(*(id *)&a1[v5], sel_launchesViaExtensionKitService))
    {
      id v22 = 0;
      id v23 = 0;
    }
    else
    {
      uint64_t v79 = v17;
      id v81 = a1;
      id v24 = objc_msgSend(v6, sel_serviceName);
      sub_191FB9DC8();

      id v25 = v2;
      id v26 = (void *)sub_191FB9DA8();
      swift_bridgeObjectRelease();
      id v27 = (void *)sub_191FB9DA8();
      id v90 = 0;
      id v78 = self;
      id v28 = objc_msgSend(v78, sel_endpointOfLaunchIdentifier_fromLaunchResponse_withService_instance_error_, v26, v25, v27, 0, &v90);

      id v29 = v90;
      if (v28)
      {

        id v30 = objc_msgSend(v6, sel_serviceName);
        uint64_t v31 = sub_191FB9DC8();
        uint64_t v33 = v32;

        uint64_t v34 = (objc_class *)type metadata accessor for EXConnectionEndpoint();
        os_log_type_t v35 = (char *)objc_allocWithZone(v34);
        uint64_t v36 = OBJC_IVAR___EXConnectionEndpoint_xpcEndpoint;
        *(void *)&v35[OBJC_IVAR___EXConnectionEndpoint_xpcEndpoint] = 0;
        uint64_t v37 = (uint64_t *)&v35[OBJC_IVAR___EXConnectionEndpoint_identifier];
        uint64_t *v37 = v31;
        v37[1] = v33;
        *(void *)&v35[OBJC_IVAR___EXConnectionEndpoint_bsServiceConnectionEndpoint] = v28;
        *(void *)&v35[v36] = 0;
        id v38 = v28;
        swift_unknownObjectRelease();
        v87.receiver = v35;
        v87.super_class = v34;
        id v23 = objc_msgSendSuper2(&v87, sel_init);
      }
      else
      {
        uint64_t v39 = v29;
        id v40 = (void *)sub_191FB9B18();

        swift_willThrow();
        id v23 = 0;
      }
      a1 = v81;
      if (objc_msgSend(v6, sel_presentsUserInterface))
      {
        id v83 = v23;
        id v41 = objc_msgSend(v6, sel_serviceName);
        sub_191FB9DC8();

        id v42 = v25;
        id v43 = (void *)sub_191FB9DA8();
        swift_bridgeObjectRelease();
        uint64_t v44 = (void *)sub_191FB9DA8();
        id v90 = 0;
        id v22 = objc_msgSend(v78, sel_endpointOfLaunchIdentifier_fromLaunchResponse_withService_instance_error_, v43, v42, v44, 0, &v90);

        id v45 = v90;
        if (v22)
        {

          id v46 = objc_msgSend(v6, sel_serviceName);
          char v47 = (void *)sub_191FB9DC8();
          unint64_t v49 = v48;

          id v90 = v47;
          unint64_t v91 = v49;
          sub_191FB9E38();
          id v50 = v90;
          unint64_t v51 = v91;
          uint64_t v52 = (objc_class *)type metadata accessor for EXConnectionEndpoint();
          uint64_t v53 = (char *)objc_allocWithZone(v52);
          uint64_t v54 = OBJC_IVAR___EXConnectionEndpoint_xpcEndpoint;
          *(void *)&v53[OBJC_IVAR___EXConnectionEndpoint_xpcEndpoint] = 0;
          uint64_t v55 = &v53[OBJC_IVAR___EXConnectionEndpoint_identifier];
          *(void *)uint64_t v55 = v50;
          *((void *)v55 + 1) = v51;
          *(void *)&v53[OBJC_IVAR___EXConnectionEndpoint_bsServiceConnectionEndpoint] = v22;
          *(void *)&v53[v54] = 0;
          id v56 = v22;
          swift_unknownObjectRelease();
          v88.receiver = v53;
          v88.super_class = v52;
          id v22 = objc_msgSendSuper2(&v88, sel_init);

          a1 = v81;
        }
        else
        {
          id v57 = v45;
          unsigned int v58 = (void *)sub_191FB9B18();

          swift_willThrow();
        }
        uint64_t v17 = v79;
        id v23 = v83;
      }
      else
      {
        id v22 = 0;
        uint64_t v17 = v79;
      }
    }
    if (objc_msgSend(v6, sel_requiresLibXPCConnection))
    {
      id v82 = v22;
      id v84 = v23;
      if (!v17 || (id v59 = objc_msgSend(v17, sel_endpoint)) == 0)
      {
        id v74 = self;
        id v90 = 0;
        unint64_t v91 = 0xE000000000000000;
        sub_191FBA2F8();
        swift_bridgeObjectRelease();
        id v90 = (id)0xD00000000000001FLL;
        unint64_t v91 = 0x8000000191FC8260;
        id v75 = objc_msgSend(v86, sel_description);
        sub_191FB9DC8();

        sub_191FB9E38();
        swift_bridgeObjectRelease();
        uint64_t v21 = (void *)v91;
        id v76 = (void *)sub_191FB9DA8();
        swift_bridgeObjectRelease();
        objc_msgSend(v74, sel__EX_errorWithCode_description_, 2, v76);

        swift_willThrow();
        return v21;
      }
      id v60 = v59;
      unsigned int v61 = v17;
      id v62 = objc_msgSend(v6, sel_serviceName);
      id v80 = v2;
      id v63 = v6;
      uint64_t v64 = sub_191FB9DC8();
      uint64_t v65 = a1;
      uint64_t v67 = v66;

      uint64_t v68 = (objc_class *)type metadata accessor for EXConnectionEndpoint();
      BOOL v69 = (char *)objc_allocWithZone(v68);
      uint64_t v70 = OBJC_IVAR___EXConnectionEndpoint_xpcEndpoint;
      *(void *)&v69[OBJC_IVAR___EXConnectionEndpoint_xpcEndpoint] = 0;
      uint64_t v71 = (uint64_t *)&v69[OBJC_IVAR___EXConnectionEndpoint_identifier];
      *uint64_t v71 = v64;
      v71[1] = v67;
      id v6 = v63;
      id v2 = v80;
      a1 = v65;
      *(void *)&v69[OBJC_IVAR___EXConnectionEndpoint_bsServiceConnectionEndpoint] = 0;
      *(void *)&v69[v70] = v60;
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      v89.receiver = v69;
      v89.super_class = v68;
      id v72 = objc_msgSendSuper2(&v89, sel_init);
      swift_unknownObjectRelease();
      id v22 = v82;
      id v23 = v84;
    }
    else
    {
      unsigned int v61 = v17;
      id v72 = 0;
    }
    id v73 = objc_allocWithZone((Class)type metadata accessor for _EXExtensionProcessHandle());
    uint64_t v21 = sub_191F4A134(a1, v86, v23, v72, v22, v85);
  }
  else
  {
    id v19 = objc_msgSend(v2, sel_error);
    if (v19)
    {
      uint64_t v20 = v19;
      uint64_t v21 = (void *)sub_191FB9B08();
    }
    else
    {
      uint64_t v21 = 0;
    }
    objc_msgSend(self, sel__EX_errorWithCode_underlyingError_, 2, v21);

    swift_willThrow();
  }
  return v21;
}

uint64_t type metadata accessor for EXConnectionEndpoint()
{
  return self;
}

id sub_191F4A134(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  uint64_t v10 = OBJC_IVAR____EXExtensionProcessHandle_xpcConnectionLock;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE60);
  uint64_t v11 = swift_allocObject();
  *(_DWORD *)(v11 + 16) = 0;
  *(void *)&v6[v10] = v11;
  uint64_t v12 = OBJC_IVAR____EXExtensionProcessHandle_xpcConnections;
  uint64_t v13 = self;
  uint64_t v14 = v6;
  *(void *)&v6[v12] = objc_msgSend(v13, sel_weakObjectsHashTable);
  uint64_t v15 = OBJC_IVAR____EXExtensionProcessHandle_observersLock;
  uint64_t v16 = swift_allocObject();
  *(_DWORD *)(v16 + 16) = 0;
  *(void *)&v14[v15] = v16;
  uint64_t v17 = OBJC_IVAR____EXExtensionProcessHandle_observers;
  *(void *)&v14[v17] = objc_msgSend(self, sel_weakObjectsHashTable);
  v14[OBJC_IVAR____EXExtensionProcessHandle_invalidationLock_invalidated] = 0;
  uint64_t v18 = OBJC_IVAR____EXExtensionProcessHandle_invalidationLock;
  uint64_t v19 = swift_allocObject();
  *(_DWORD *)(v19 + 16) = 0;
  *(void *)&v14[v18] = v19;
  *(void *)&v14[OBJC_IVAR____EXExtensionProcessHandle_sandboxExtensions] = MEMORY[0x1E4FBC860];
  swift_unknownObjectWeakInit();
  uint64_t v20 = OBJC_IVAR____EXExtensionProcessHandle_launchAssertion;
  *(void *)&v14[OBJC_IVAR____EXExtensionProcessHandle_launchAssertion] = 0;
  *(void *)&v14[OBJC_IVAR____EXExtensionProcessHandle_assertionAquireCount] = 0;
  *(void *)&v14[OBJC_IVAR____EXExtensionProcessHandle_assertion] = 0;
  *(void *)&v14[OBJC_IVAR____EXExtensionProcessHandle_launchConfiguration] = a1;
  *(void *)&v14[OBJC_IVAR____EXExtensionProcessHandle_innerProcessHandle] = a2;
  *(void *)&v14[OBJC_IVAR____EXExtensionProcessHandle_mainEndpoint] = a3;
  *(void *)&v14[OBJC_IVAR____EXExtensionProcessHandle_sessionEndpoint] = a5;
  *(void *)&v14[OBJC_IVAR____EXExtensionProcessHandle_libXPCEndpoint] = a4;
  uint64_t v21 = *(void **)&v14[v20];
  *(void *)&v14[v20] = a6;
  id v22 = a1;
  id v23 = a2;
  id v24 = a3;
  id v25 = a5;
  id v26 = a4;
  id v27 = a6;

  v40.receiver = v14;
  v40.super_class = (Class)type metadata accessor for _EXExtensionProcessHandle();
  id v28 = objc_msgSendSuper2(&v40, sel_init);
  id v29 = objc_msgSend(v23, sel_hostProcess);
  if (!v29)
  {
    getgid();
LABEL_6:

    return v28;
  }
  id v30 = v29;
  unsigned int v31 = [v29 pid];

  gid_t v32 = getgid();
  if ((v31 & 0x80000000) != 0 || v31 != v32) {
    goto LABEL_6;
  }
  uint64_t v33 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_191F9DEF4;
  aBlock[5] = v33;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_191F9DB7C;
  aBlock[3] = &block_descriptor_45;
  uint64_t v34 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v23, sel_monitorForDeath_, v34);

  _Block_release(v34);
  return v28;
}

uint64_t type metadata accessor for _EXExtensionProcessHandle()
{
  return self;
}

void sub_191F4A4AC(void *a1, int a2)
{
  int v239 = a2;
  uint64_t v255 = *MEMORY[0x1E4F143B8];
  uint64_t v241 = sub_191FB9B78();
  uint64_t v240 = *(void *)(v241 - 8);
  MEMORY[0x1F4188790](v241);
  uint64_t v244 = (uint64_t)&v219 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v247 = sub_191FB9C68();
  uint64_t v248 = *(void *)(v247 - 8);
  MEMORY[0x1F4188790](v247);
  v243 = (char *)&v219 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE40);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  v246 = (char *)&v219 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  v245 = (char *)&v219 - v9;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v249 = (uint64_t)&v219 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v219 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BE10);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v219 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_191FB9CE8();
  id v242 = *(id *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v219 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92FC648);
  MEMORY[0x1F4188790](v20 - 8);
  id v22 = (char *)&v219 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v23 = (int *)_s10AttachmentVMa(0);
  uint64_t v24 = *((void *)v23 - 1);
  MEMORY[0x1F4188790](v23);
  id v26 = (char *)&v219 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v27 = v250;
  id v28 = sub_191F4E9A0();
  if (v27) {
    return;
  }
  id v250 = a1;
  uint64_t v234 = v24;
  v237 = v22;
  v238 = v23;
  v230 = v16;
  v229 = v19;
  uint64_t v231 = v17;
  v232 = (uint64_t *)v26;
  v236 = 0;
  id v29 = v28;
  id v30 = objc_msgSend(self, sel_identifierWithPid_, objc_msgSend(v28, "pid"));
  if (!v30)
  {
    id v45 = self;
    *(void *)v252.val = 0;
    *(void *)&v252.val[2] = 0xE000000000000000;
    sub_191FBA2F8();
    swift_bridgeObjectRelease();
    *(void *)v252.val = 0xD00000000000002BLL;
    *(void *)&v252.val[2] = 0x8000000191FC73C0;
    atoken.val[0] = [v29 pid];
    sub_191FBA578();
    sub_191FB9E38();
    swift_bridgeObjectRelease();
    sub_191FB9E38();
    id v46 = (void *)sub_191FB9DA8();
    swift_bridgeObjectRelease();
    objc_msgSend(v45, sel__EX_errorWithCode_description_, 2, v46);

    swift_willThrow();
    goto LABEL_6;
  }
  v228 = v13;
  id v233 = v30;
  id v235 = v29;
  objc_msgSend(v29, sel_auditToken);
  unsigned int v31 = atoken.val[0];
  unsigned int v32 = atoken.val[1];
  unsigned int v33 = atoken.val[2];
  unsigned int v34 = atoken.val[3];
  unsigned int v36 = atoken.val[4];
  unsigned int v35 = atoken.val[5];
  unsigned int v37 = atoken.val[6];
  unsigned int v38 = atoken.val[7];
  audit_token_t v252 = atoken;
  uint64_t v39 = self;
  id v251 = 0;
  atoken.val[0] = v31;
  atoken.val[1] = v32;
  atoken.val[2] = v33;
  atoken.val[3] = v34;
  atoken.val[4] = v36;
  atoken.val[5] = v35;
  atoken.val[6] = v37;
  atoken.val[7] = v38;
  id v40 = objc_msgSend(v39, sel_bundleRecordForAuditToken_error_, &atoken, &v251);
  id v41 = v251;
  if (v40)
  {
    id v42 = v40;
    id v43 = v250;
    uint64_t v44 = v236;
  }
  else
  {
    char v47 = v41;
    unint64_t v48 = (void *)sub_191FB9B18();

    swift_willThrow();
    id v42 = 0;
    uint64_t v44 = 0;
    id v43 = v250;
  }
  unint64_t v49 = v238;
  uint64_t v50 = (uint64_t)v237;
  id v51 = objc_msgSend(v43, sel_identity);
  if (!v51)
  {
    id v57 = self;
    unsigned int v58 = (void *)sub_191FB9DA8();
    objc_msgSend(v57, sel__EX_errorWithCode_description_, 2, v58);

    swift_willThrow();
    return;
  }
  id v29 = v51;
  uint64_t v52 = sub_191F442A4(0, qword_1EB27BBD0);
  id v251 = (id)MEMORY[0x1E4FBC860];
  sub_191F4DD6C();
  if (v44)
  {

    (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v234 + 56))(v50, 1, 1, v49);
    sub_191F4CB7C(v50, (uint64_t *)&unk_1E92FC648);
    id v53 = objc_msgSend(v29, sel_xpcServiceIdentifier);
    if (v53)
    {
      uint64_t v54 = v53;
      sub_191FB9DC8();

      id v55 = objc_allocWithZone(MEMORY[0x1E4F223A0]);
      id v56 = sub_191F4E0C8();
      id v70 = v56;
      uint64_t v234 = 0;
      if (v56)
      {
        id v71 = objc_msgSend(objc_allocWithZone((Class)_EXExtensionIdentity), sel_initWithApplicationExtensionRecord_, v56);
        if (v71)
        {
          id v72 = v71;
          if (objc_msgSend(v71, sel_targetsSystemExtensionPoint))
          {
            swift_bridgeObjectRelease();
            id v73 = self;
            *(void *)atoken.val = 0;
            *(void *)&atoken.val[2] = 0xE000000000000000;
            sub_191FBA2F8();
            sub_191FB9E38();
            id v253 = v72;
            id v74 = v29;
            id v75 = v72;
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92FD8D0);
            sub_191FB9E08();
            sub_191FB9E38();
            swift_bridgeObjectRelease();
            id v76 = v40;
            id v77 = (void *)sub_191FB9DA8();
            swift_bridgeObjectRelease();
            objc_msgSend(v73, sel__EX_errorWithCode_description_, 2, v77);

            swift_willThrow();
LABEL_23:

            return;
          }
          uint64_t v227 = v52;
          v236 = v42;

          id v242 = v29;
          id v90 = v72;
          uint64_t v226 = 0;
          unint64_t v91 = 0;
          uint64_t v225 = MEMORY[0x1E4FBC868];
          goto LABEL_30;
        }
      }
      else
      {

        __break(1u);
      }

      __break(1u);
LABEL_120:

      swift_bridgeObjectRelease();
      __break(1u);
      return;
    }
    swift_bridgeObjectRelease();
    uint64_t v64 = self;
    *(void *)atoken.val = 0;
    *(void *)&atoken.val[2] = 0xE000000000000000;
    sub_191FBA2F8();
    swift_bridgeObjectRelease();
    *(void *)atoken.val = 0xD000000000000022;
    *(void *)&atoken.val[2] = 0x8000000191FC7420;
    id v65 = objc_msgSend(v29, sel_description);
    sub_191FB9DC8();

    sub_191FB9E38();
    swift_bridgeObjectRelease();
    sub_191FB9E38();
    uint64_t v66 = (void *)sub_191FB9DA8();
    swift_bridgeObjectRelease();
    objc_msgSend(v64, sel__EX_errorWithCode_description_, 5, v66);

    swift_willThrow();
LABEL_6:

    return;
  }
  v236 = v42;
  (*(void (**)(uint64_t, void, uint64_t, int *))(v234 + 56))(v50, 0, 1, v49);
  id v59 = v232;
  sub_191F4DEE4(v50, (uint64_t)v232);
  id v60 = (char *)v59[1];
  uint64_t v226 = *v59;
  unsigned int v61 = (void *)v59[2];
  v237 = v60;
  uint64_t v227 = v52;
  if (v61 && v61[2])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FC860);
    uint64_t v62 = swift_allocObject();
    *(_OWORD *)(v62 + 16) = xmmword_191FBFCC0;
    *(void *)(v62 + 32) = 0x614C656C7070412DLL;
    *(void *)(v62 + 40) = 0xEF7365676175676ELL;
    *(void *)atoken.val = 8744;
    *(void *)&atoken.val[2] = 0xE200000000000000;
    id v253 = v61;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BBC0);
    sub_191F949C4((unint64_t *)&qword_1E92FC488, (uint64_t *)&unk_1EB27BBC0);
    sub_191FB9D88();
    swift_bridgeObjectRelease();
    sub_191FB9E38();
    swift_bridgeObjectRelease();
    sub_191FB9E38();
    uint64_t v63 = *(void *)&atoken.val[2];
    *(void *)(v62 + 48) = *(void *)atoken.val;
    *(void *)(v62 + 56) = v63;
    uint64_t v234 = v62;
    id v251 = (id)v62;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v234 = MEMORY[0x1E4FBC860];
  }
  uint64_t v67 = swift_bridgeObjectRetain();
  uint64_t v68 = sub_191F4D9A4(v67);
  swift_bridgeObjectRelease();
  objc_msgSend(v235, sel_auditToken);
  audit_token_to_euid(&atoken);
  id v69 = sub_191F4DF48();
  id v78 = v69;
  uint64_t v225 = v68;
  uint64_t v79 = &selRef_UUID;
  id v80 = objc_msgSend(v69, sel_bundleIdentifier);
  if (v80)
  {
    id v81 = v80;
    uint64_t v82 = sub_191FB9DC8();
    uint64_t v84 = v83;

    id v85 = objc_msgSend(v29, sel_xpcServiceIdentifier);
    if (v85)
    {
      id v86 = v85;
      uint64_t v87 = sub_191FB9DC8();
      uint64_t v89 = v88;

      if (v82 == v87 && v84 == v89)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_46;
      }
      char v116 = sub_191FBA598();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v116)
      {
LABEL_46:
        id v117 = objc_msgSend(v29, sel_validationToken);
        if (v117)
        {
          uint64_t v118 = v117;
          uint64_t v119 = sub_191FB9BE8();
          unint64_t v121 = v120;
        }
        else
        {
          uint64_t v119 = 0;
          unint64_t v121 = 0xF000000000000000;
        }
        id v222 = sub_191F4E194(v78, v119, v121, (uint64_t)v233);
        uint64_t v234 = 0;
        sub_191F4FA08(v119, v121);
        id v131 = objc_allocWithZone((Class)_EXExtensionIdentity);
        id v223 = v78;
        id v221 = objc_msgSend(v131, sel_initWithApplicationExtensionRecord_, v78);
        uint64_t v132 = (uint64_t)v230;
        sub_191F4CBD8((uint64_t)v232 + v238[8], (uint64_t)v230, &qword_1EB27BE10);
        uint64_t v133 = (void (**)(void, uint64_t, void))v242;
        uint64_t v134 = v231;
        int v135 = (*((uint64_t (**)(uint64_t, uint64_t, uint64_t))v242 + 6))(v132, 1, v231);
        unint64_t v91 = v237;
        if (v135 == 1)
        {
          sub_191F4CB7C(v132, &qword_1EB27BE10);
        }
        else
        {
          uint64_t v157 = v229;
          ((void (**)(char *, uint64_t, uint64_t))v133)[4](v229, v132, v134);
          uint64_t v158 = v234;
          uint64_t v159 = sub_191F54F70();
          if (v158)
          {
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            ((void (*)(char *, uint64_t))v133[1])(v157, v134);
            sub_191F4CCBC((uint64_t)v232);

            goto LABEL_54;
          }
          uint64_t v234 = 0;
          sub_191F503D8(v159);
          ((void (*)(char *, uint64_t))v133[1])(v157, v134);
        }
        id v161 = v221;
        id v162 = objc_msgSend(v223, sel_extensionPointRecord);
        id v163 = objc_msgSend(v162, sel__EX_parentAppRecord);

        if (v163)
        {
          if (v236)
          {
            id v164 = v163;
            id v165 = v91;
            id v166 = v40;
            char v167 = sub_191FBA168();

            unint64_t v91 = v165;
            if ((v167 & 1) == 0) {
              goto LABEL_96;
            }
LABEL_83:
            sub_191F4CCBC((uint64_t)v232);

            if (!v161)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v168 = self;
              uint64_t v169 = (void *)sub_191FB9DA8();
              objc_msgSend(v168, sel__EX_errorWithCode_description_, 5, v169);

              swift_willThrow();
              swift_bridgeObjectRelease();
              return;
            }
            goto LABEL_102;
          }
        }
        else if (!v236)
        {
          goto LABEL_83;
        }
LABEL_96:
        if (!v161) {
          goto LABEL_120;
        }
        uint64_t v185 = v29;
        id v224 = v40;
        id v70 = v161;
        uint64_t v186 = (void *)sub_191FB9DA8();
        sub_191F442A4(0, (unint64_t *)&qword_1EB27BC98);
        id v187 = objc_msgSend(v70, sel_entitlementNamed_ofClass_, v186, swift_getObjCClassFromMetadata());

        sub_191FBA1E8();
        swift_unknownObjectRelease();
        if ((swift_dynamicCast() & 1) == 0
          || (v188 = v253, unsigned __int8 v189 = objc_msgSend(v253, sel_BOOLValue),
                           v188,
                           (v189 & 1) == 0))
        {
          uint64_t v190 = self;
          id v191 = objc_msgSend(v70, sel_requiredHostEntitlements);
          uint64_t v192 = sub_191FB9D58();

          sub_191F4D5CC(v192);
          swift_bridgeObjectRelease();
          long long v193 = (void *)sub_191FB9D48();
          swift_bridgeObjectRelease();
          *(void *)atoken.val = 0;
          LOBYTE(v191) = objc_msgSend(v190, sel_auditToken_hasRequiredEntitlements_error_, &v252, v193, &atoken);

          if ((v191 & 1) == 0)
          {
            id v195 = *(id *)atoken.val;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_191FB9B18();

            swift_willThrow();
            swift_bridgeObjectRelease();
            sub_191F4CCBC((uint64_t)v232);
            goto LABEL_23;
          }
          id v194 = *(id *)atoken.val;
        }
        sub_191F4CCBC((uint64_t)v232);

        id v40 = v224;
        id v29 = v185;
        unint64_t v91 = v237;
LABEL_102:
        id v90 = (int *)v161;
        id v242 = v222;
LABEL_30:
        unsigned int v92 = objc_msgSend(v90, sel_requiresHostToBeContainerApp);
        uint64_t v93 = v249;
        if (!v92) {
          goto LABEL_35;
        }
        id v94 = objc_msgSend(v90, sel_containingBundleRecord);

        if (!v94) {
          goto LABEL_35;
        }
        if (v236)
        {
          id v95 = objc_msgSend(v90, sel_containingBundleRecord);
          if (v95)
          {
            uint64_t v96 = v95;
            id v97 = v40;
            id v98 = v96;
            char v99 = sub_191FBA168();

            uint64_t v93 = v249;
            if (v99)
            {
LABEL_35:
              id v100 = objc_msgSend(v242, sel_uuid);
              if (v100)
              {
                uint64_t v101 = v100;
                v238 = v90;
                v237 = v91;
                uint64_t v102 = v243;
                sub_191FB9C28();

                uint64_t v103 = v248;
                uint64_t v104 = v93;
                unint64_t v105 = v102;
                uint64_t v106 = v93;
                uint64_t v107 = v247;
                v243 = *(char **)(v248 + 32);
                ((void (*)(uint64_t, char *, uint64_t))v243)(v104, v105, v247);
                unint64_t v108 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v103 + 56);
                v108(v106, 0, 1, v107);
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v103 + 48))(v106, 1, v107) != 1)
                {
                  uint64_t v130 = (uint64_t)v228;
                  ((void (*)(char *, uint64_t, uint64_t))v243)(v228, v106, v107);
                  v108(v130, 0, 1, v107);
                  unint64_t v91 = v237;
                  id v90 = v238;
                  goto LABEL_59;
                }
                id v90 = v238;
                id v109 = v108;
                unint64_t v91 = v237;
              }
              else
              {
                id v109 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v248 + 56);
                uint64_t v122 = v93;
                uint64_t v107 = v247;
                v109(v122, 1, 1, v247);
              }
              id v123 = objc_msgSend(v250, sel_oneShotUUID);
              uint64_t v124 = (uint64_t)v245;
              if (v123)
              {
                long long v125 = v123;
                sub_191FB9C28();

                uint64_t v126 = 0;
              }
              else
              {
                uint64_t v126 = 1;
              }
              v109(v124, v126, 1, v107);
              sub_191F4735C(v124, (uint64_t)v228, (uint64_t *)&unk_1EB27BE40);
              sub_191F4CB7C(v249, (uint64_t *)&unk_1EB27BE40);
LABEL_59:
              unsigned int v136 = objc_msgSend(v90, sel_requiresLegacyInfrastructure);
              uint64_t v137 = (uint64_t)v246;
              if (v136)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                id v138 = self;
                *(void *)atoken.val = 0;
                *(void *)&atoken.val[2] = 0xE000000000000000;
                sub_191FBA2F8();
                swift_bridgeObjectRelease();
                *(void *)atoken.val = 0x6F69736E65747845;
                *(void *)&atoken.val[2] = 0xEA0000000000206ELL;
                id v139 = objc_msgSend(v90, sel_bundleIdentifier);
                sub_191FB9DC8();

                sub_191FB9E38();
                swift_bridgeObjectRelease();
                sub_191FB9E38();
                os_log_type_t v140 = (void *)sub_191FB9DA8();
                swift_bridgeObjectRelease();
                objc_msgSend(v138, sel__EX_errorWithCode_description_, 10, v140);

                swift_willThrow();
                id v141 = v242;

LABEL_66:
                swift_bridgeObjectRelease();
                uint64_t v147 = (uint64_t)v228;
                goto LABEL_67;
              }
              unsigned int v142 = objc_msgSend(v90, sel_requiresMultiInstance);
              sub_191F4CBD8((uint64_t)v228, v137, (uint64_t *)&unk_1EB27BE40);
              if (v142 && (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v248 + 48))(v137, 1, v107) == 1)
              {
                sub_191F4CB7C(v137, (uint64_t *)&unk_1EB27BE40);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v143 = self;
                *(void *)atoken.val = 0;
                *(void *)&atoken.val[2] = 0xE000000000000000;
                sub_191FBA2F8();
                id v224 = v40;
                sub_191FB9E38();
                id v144 = objc_msgSend(v90, sel_extensionPointIdentifier);
                sub_191FB9DC8();

                sub_191FB9E38();
                swift_bridgeObjectRelease();
                sub_191FB9E38();
                uint64_t v145 = (void *)sub_191FB9DA8();
                swift_bridgeObjectRelease();
                objc_msgSend(v143, sel__EX_errorWithCode_description_, 2, v145);

                swift_willThrow();
                id v146 = v242;

                swift_bridgeObjectRelease();
                uint64_t v147 = (uint64_t)v228;
LABEL_67:
                sub_191F4CB7C(v147, (uint64_t *)&unk_1EB27BE40);

                return;
              }
              sub_191F4CB7C(v137, (uint64_t *)&unk_1EB27BE40);
              uint64_t v148 = v234;
              sub_191F4D168(v244);
              if (v148)
              {
                swift_bridgeObjectRelease();

                id v149 = v242;
                swift_bridgeObjectRelease();
                goto LABEL_66;
              }
              v236 = 0;
              if (v91)
              {
                swift_bridgeObjectRetain();
                id v150 = objc_msgSend(v90, sel_sandboxProfileName);
                v237 = v91;
                id v151 = v150;
                uint64_t v152 = sub_191FB9DC8();
                uint64_t v154 = v153;

                uint64_t v155 = (uint64_t)v237;
                uint64_t v156 = v226;
                if (v226 == v152 && v237 == v154)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                else
                {
                  char v170 = sub_191FBA598();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if ((v170 & 1) == 0)
                  {
                    id v217 = objc_msgSend(v90, sel_alternateSandboxProfileNames);
                    v218 = (void *)sub_191FB9ED8();

                    LOBYTE(v217) = sub_191F93990(v156, v155, v218);
                    swift_bridgeObjectRelease();
                    uint64_t v160 = v248;
                    if ((v217 & 1) == 0)
                    {
                      swift_bridgeObjectRelease();
                      v237 = 0;
                    }
                    goto LABEL_87;
                  }
                }
                uint64_t v160 = v248;
              }
              else
              {
                v237 = 0;
                uint64_t v160 = v248;
              }
LABEL_87:
              uint64_t v249 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FC860);
              uint64_t inited = swift_initStackObject();
              *(_OWORD *)(inited + 16) = xmmword_191FBFCD0;
              *(void *)(inited + 32) = sub_191FB9B68();
              *(void *)(inited + 40) = v172;
              *(void *)atoken.val = inited;
              if (*((void *)v251 + 2))
              {
                uint64_t v173 = swift_bridgeObjectRetain();
                sub_191F503D8(v173);
              }
              id v224 = v40;
              id v220 = v29;
              v174 = v90;
              if (v237)
              {
                swift_bridgeObjectRetain();
                uint64_t v175 = (void *)sub_191FB9DA8();
                swift_bridgeObjectRelease();
              }
              else
              {
                uint64_t v175 = 0;
              }
              BOOL v176 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(v160 + 48))(v228, 1, v247) != 1;
              sub_191F4CEB0(*(uint64_t *)atoken.val);
              swift_bridgeObjectRelease();
              v177 = (void *)sub_191FB9EC8();
              swift_bridgeObjectRelease();
              v178 = (void *)sub_191FB9D48();
              swift_bridgeObjectRelease();
              id v179 = objc_msgSend(v174, sel_xpcOverlayDictionaryOverridingSandboxProfileName_multiInstance_arguments_additionalEnvironment_, v175, v176, v177, v178);

              sub_191FB9D58();
              unsigned __int8 v180 = objc_msgSend(v174, sel_targetsSystemExtensionPoint);
              v238 = v174;
              if (v180)
              {
                unint64_t v181 = 0;
              }
              else
              {
                objc_msgSend(v174, sel_presentsUserInterface);
                __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BE50);
                uint64_t v182 = swift_allocObject();
                *(_OWORD *)(v182 + 16) = xmmword_191FBFCE0;
                uint64_t v183 = (void *)sub_191FB9DA8();
                objc_super v184 = (void *)sub_191FB9DA8();
                id v196 = objc_msgSend(self, sel_attributeWithDomain_name_, v183, v184);

                *(void *)(v182 + 32) = v196;
                id v253 = (id)v182;
                sub_191FB9EF8();
                unint64_t v181 = (unint64_t)v253;
              }
              id v197 = v242;
              id v198 = v250;
              objc_msgSend(v250, sel_setIdentity_, v242);
              id v199 = v235;
              objc_msgSend(v198, sel_setHostPid_, objc_msgSend(v235, "pid"));
              v200 = (void *)sub_191FB9EC8();
              swift_bridgeObjectRelease();
              objc_msgSend(v198, sel_setArguments_, v200);

              objc_msgSend(v198, sel__setAdditionalEnvironment_, 0);
              v201 = (void *)sub_191FB9D48();
              swift_bridgeObjectRelease();
              objc_msgSend(v198, sel_setExtensionOverlay_, v201);

              uint64_t v202 = v244;
              sub_191FB9B68();
              v203 = (void *)sub_191FB9DA8();
              swift_bridgeObjectRelease();
              objc_msgSend(v198, sel__setOverrideExecutablePath_, v203);

              id v204 = v233;
              if (v239)
              {

                v205 = v238;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                (*(void (**)(uint64_t, uint64_t))(v240 + 8))(v202, v241);
              }
              else
              {
                if (v181)
                {
                  if (v181 >> 62)
                  {
                    sub_191F442A4(0, (unint64_t *)&unk_1EB27BD98);
                    swift_bridgeObjectRetain();
                    sub_191FBA468();
                    swift_bridgeObjectRelease();
                  }
                  else
                  {
                    swift_bridgeObjectRetain();
                    sub_191FBA5A8();
                    sub_191F442A4(0, (unint64_t *)&unk_1EB27BD98);
                  }
                  swift_bridgeObjectRelease();
                  sub_191F442A4(0, (unint64_t *)&unk_1EB27BD98);
                  v206 = (void *)sub_191FB9EC8();
                  swift_bridgeObjectRelease();
                }
                else
                {
                  v206 = 0;
                }
                objc_msgSend(v198, sel_setAttributes_, v206);

                v205 = v238;
                unsigned __int8 v207 = objc_msgSend(v238, sel_launchesViaExtensionKitService);
                uint64_t v208 = v240;
                if (v207)
                {
                  (*(void (**)(uint64_t, uint64_t))(v240 + 8))(v202, v241);

                  id v209 = v242;
                  swift_bridgeObjectRelease();
                }
                else
                {
                  uint64_t v210 = swift_initStackObject();
                  *(_OWORD *)(v210 + 16) = xmmword_191FBFCC0;
                  id v211 = objc_msgSend(v205, sel_serviceName);
                  uint64_t v212 = sub_191FB9DC8();
                  uint64_t v214 = v213;

                  *(void *)(v210 + 32) = v212;
                  *(void *)(v210 + 40) = v214;
                  *(void *)(v210 + 48) = 0xD000000000000026;
                  *(void *)(v210 + 56) = 0x8000000191FC5F90;
                  sub_191F50234(v210);
                  swift_setDeallocating();
                  swift_arrayDestroy();
                  v215 = (void *)sub_191FB9FA8();
                  swift_bridgeObjectRelease();
                  objc_msgSend(v198, sel_setManagedEndpointLaunchIdentifiers_, v215);

                  id v216 = v242;
                  swift_bridgeObjectRelease();
                  (*(void (**)(uint64_t, uint64_t))(v208 + 8))(v202, v241);
                }
              }
              sub_191F4CB7C((uint64_t)v228, (uint64_t *)&unk_1EB27BE40);

              return;
            }
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v127 = self;
        uint64_t v128 = (void *)sub_191FB9DA8();
        objc_msgSend(v127, sel__EX_errorWithCode_description_, 2, v128);

        swift_willThrow();
        id v129 = v242;

LABEL_54:
        swift_bridgeObjectRelease();
        return;
      }
      uint64_t v79 = &selRef_UUID;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)atoken.val = 0;
  *(void *)&atoken.val[2] = 0xE000000000000000;
  sub_191FBA2F8();
  sub_191FB9E38();
  id v110 = [v78 v79[183]];
  if (v110)
  {
    unint64_t v111 = v110;
    sub_191FB9DC8();
  }
  sub_191FB9E38();
  swift_bridgeObjectRelease();
  sub_191FB9E38();
  id v112 = objc_msgSend(v29, sel_xpcServiceIdentifier);
  if (v112)
  {
    unint64_t v113 = v112;
    sub_191FB9DC8();
  }
  uint64_t v114 = self;
  sub_191FB9E38();
  swift_bridgeObjectRelease();
  sub_191FB9E38();
  uint64_t v115 = (void *)sub_191FB9DA8();
  swift_bridgeObjectRelease();
  objc_msgSend(v114, sel__EX_errorWithCode_description_, 5, v115);

  swift_willThrow();
  swift_bridgeObjectRelease();
  sub_191F4CCBC((uint64_t)v232);
}

uint64_t sub_191F4CB7C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_191F4CBD8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_191F4CCBC(uint64_t a1)
{
  uint64_t v2 = _s10AttachmentVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_191F4CD18(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t _s10AttachmentVMa(uint64_t a1)
{
  return sub_191F4CD18(a1, qword_1EB27BB80);
}

uint64_t sub_191F4CD70(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_191FB9CE8();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t sub_191F4CE58(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_191F4CEB0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    sub_191F4CFD8(0, v1, 0);
    uint64_t v2 = v9;
    uint64_t v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_191F4CFD8(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_191F4CFD8(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      v4 += 16;
      *(void *)(v2 + 16) = v6 + 1;
      sub_191F4D994(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_191F4CFD8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_191F4CFF8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_191F4CFF8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92FC880);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_191FBA4C8();
  __break(1u);
  return result;
}

uint64_t sub_191F4D168@<X0>(uint64_t a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BB50);
  uint64_t v3 = ((uint64_t (*)(void))MEMORY[0x1F4188790])();
  unint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  uint64_t v8 = (char *)&v24 - v7;
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v24 - v9;
  uint64_t v11 = sub_191FB9B78();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = [v1 url];
  sub_191FB9B58();

  uint64_t v16 = (void *)sub_191FB9B48();
  id v17 = objc_msgSend(v16, sel__EX_URLForBundleExecutable);

  if (v17)
  {
    sub_191FB9B58();

    uint64_t v18 = 0;
  }
  else
  {
    uint64_t v18 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v8, v18, 1, v11);
  sub_191F4D4E0((uint64_t)v8, (uint64_t)v10);
  sub_191F4CBD8((uint64_t)v10, (uint64_t)v5, &qword_1EB27BB50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v5, 1, v11) == 1)
  {
    sub_191F4CB7C((uint64_t)v5, &qword_1EB27BB50);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a1, v5, v11);
    if (sub_191FB9B68() || v19 != 0xE000000000000000)
    {
      char v20 = sub_191FBA598();
      swift_bridgeObjectRelease();
      if ((v20 & 1) == 0)
      {
        sub_191F4CB7C((uint64_t)v10, &qword_1EB27BB50);
        return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v11);
  }
  uint64_t v21 = self;
  id v22 = (void *)sub_191FB9DA8();
  objc_msgSend(v21, sel__EX_errorWithCode_description_, 2, v22);

  swift_willThrow();
  sub_191F4CB7C((uint64_t)v10, &qword_1EB27BB50);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_191F4D4E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BB50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_191F4D5CC(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FC858);
    uint64_t v2 = sub_191FBA4B8();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    id v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_191F4EC08(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(void *)&long long v39 = v19;
    *((void *)&v39 + 1) = v18;
    void v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(void *)&v37[0] = v19;
    *((void *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_191F4D994(v38, v32);
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_191F4D994(v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_191F4D994(v36, v37);
    sub_191F4D994(v37, &v33);
    uint64_t result = sub_191FBA278();
    uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = *(void *)(v2 + 48) + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_191F4D994(&v33, (_OWORD *)(*(void *)(v2 + 56) + 32 * v9));
    ++*(void *)(v2 + 16);
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_191F4DD64();
    return v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

_OWORD *sub_191F4D994(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_191F4D9A4(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FC858);
    uint64_t v2 = sub_191FBA4B8();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  uint64_t v27 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v26 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v26) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v26) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v27 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v26) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v27 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v26) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v27 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    id v17 = (void *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v18 = v17[1];
    *(void *)&v36[0] = *v17;
    *((void *)&v36[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    swift_dynamicCast();
    long long v32 = v28;
    long long v33 = v29;
    uint64_t v34 = v30;
    sub_191F4D994(&v31, v35);
    long long v28 = v32;
    long long v29 = v33;
    uint64_t v30 = v34;
    sub_191F4D994(v35, v36);
    sub_191F4D994(v36, &v32);
    uint64_t result = sub_191FBA278();
    uint64_t v19 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v6 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v20) & ~*(void *)(v6 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v6 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v9 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = *(void *)(v2 + 48) + 40 * v9;
    *(_OWORD *)uint64_t v10 = v28;
    *(_OWORD *)(v10 + 16) = v29;
    *(void *)(v10 + 32) = v30;
    uint64_t result = (uint64_t)sub_191F4D994(&v32, (_OWORD *)(*(void *)(v2 + 56) + 32 * v9));
    ++*(void *)(v2 + 16);
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v26)
  {
LABEL_37:
    swift_release();
    sub_191F4DD64();
    return v2;
  }
  unint64_t v14 = *(void *)(v27 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v26) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_191F4DD64()
{
  return swift_release();
}

uint64_t sub_191F4DD6C()
{
  id v1 = objc_msgSend(v0, sel_validationToken);
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = sub_191FB9BE8();
    unint64_t v5 = v4;

    sub_191FB9A18();
    swift_allocObject();
    sub_191FB9A08();
    _s10AttachmentVMa(0);
    sub_191F4F8B0(&qword_1E92FC640, (void (*)(uint64_t))_s10AttachmentVMa);
    sub_191FB99F8();
    swift_release();
    return sub_191F4CE58(v3, v5);
  }
  else
  {
    uint64_t v7 = self;
    int64_t v8 = (void *)sub_191FB9DA8();
    objc_msgSend(v7, sel__EX_errorWithCode_description_, 5, v8);

    return swift_willThrow();
  }
}

uint64_t sub_191F4DED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191F94918);
}

uint64_t sub_191F4DEE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s10AttachmentVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_191F4DF48()
{
  id v1 = objc_allocWithZone(MEMORY[0x1E4F223A0]);
  swift_bridgeObjectRetain();
  id v2 = sub_191F4E0C8();
  id v3 = v2;
  if (v0)
  {

LABEL_4:
    uint64_t v4 = self;
    id v5 = objc_msgSend(v4, sel__EX_parameterError);
    swift_willThrow();
    sub_191FBA2F8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_191FB9E38();
    swift_bridgeObjectRelease();
    sub_191FB9E38();
    uint64_t v6 = (void *)sub_191FB9DA8();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel__EX_errorWithCode_description_, 5, v6, 0x6F69736E65747845, 0xEB0000000060206ELL);

    swift_willThrow();
    return v3;
  }
  if (!v2) {
    goto LABEL_4;
  }
  return v3;
}

id sub_191F4E0C8()
{
  v6[1] = *(id *)MEMORY[0x1E4F143B8];
  id v1 = (void *)sub_191FB9DA8();
  swift_bridgeObjectRelease();
  v6[0] = 0;
  id v2 = objc_msgSend(v0, sel_initWithBundleIdentifier_error_, v1, v6);

  if (v2)
  {
    id v3 = v6[0];
  }
  else
  {
    id v4 = v6[0];
    sub_191FB9B18();

    swift_willThrow();
  }
  return v2;
}

id sub_191F4E194(void *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v66 = a3;
  uint64_t v62 = a2;
  uint64_t v7 = sub_191FB9C68();
  uint64_t v68 = *(void *)(v7 - 8);
  uint64_t v69 = v7;
  MEMORY[0x1F4188790](v7);
  id v65 = (char *)v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE40);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  unint64_t v12 = (char *)v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  unint64_t v14 = (char *)v59 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BB50);
  MEMORY[0x1F4188790](v15 - 8);
  id v17 = (char *)v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_191FB9B78();
  uint64_t v67 = *(void *)(v18 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  unint64_t v21 = (char *)v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v63 = (char *)v59 - v22;
  id v23 = objc_msgSend(a1, sel_bundleIdentifier);
  if (!v23)
  {
    id v42 = self;
    id v43 = (id)sub_191FB9DA8();
    id v44 = objc_msgSend(v42, sel__EX_errorWithCode_description_, 5, v43);
    goto LABEL_14;
  }
  BOOL v24 = v23;
  uint64_t v60 = a4;
  uint64_t v61 = v4;
  v59[1] = sub_191FB9DC8();
  uint64_t v64 = v25;
  id v26 = objc_msgSend(a1, sel_extensionPointRecord);
  unsigned int v27 = objc_msgSend(v26, sel_extensionPointType);

  if (v27 == 2)
  {
    id v28 = objc_msgSend(a1, sel_containingBundleRecord);
    if (v28)
    {
      long long v29 = v28;
      id v30 = [v28 URL];

      sub_191FB9B58();
      uint64_t v31 = v67;
      long long v32 = *(void (**)(char *, char *, uint64_t))(v67 + 32);
      v32(v17, v21, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v17, 0, 1, v18);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v17, 1, v18) != 1)
      {
        v32(v63, v17, v18);
        id v33 = (id)sub_191FB9B48();
        id v34 = objc_msgSend(v72, sel_uuid);
        if (v34)
        {
          uint64_t v35 = v34;
          id v72 = v33;
          unsigned int v36 = v65;
          sub_191FB9C28();

          uint64_t v37 = v68;
          uint64_t v38 = v69;
          (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v14, v36, v69);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v14, 0, 1, v38);
          int v39 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48))(v14, 1, v38);
          uint64_t v40 = v60;
          if (v39 == 1)
          {
            id v41 = 0;
          }
          else
          {
            id v41 = (void *)sub_191FB9C08();
            (*(void (**)(char *, uint64_t))(v37 + 8))(v14, v38);
          }
          uint64_t v31 = v67;
          id v33 = v72;
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v68 + 56))(v14, 1, 1, v69);
          id v41 = 0;
          uint64_t v40 = v60;
        }
        id v43 = objc_msgSend(self, sel_extensionIdentityForPlugInKitIdentifier_bundledURL_hostIdentifier_UUID_, v24, v33, v40, v41);

        (*(void (**)(char *, uint64_t))(v31 + 8))(v63, v18);
        if (!v43) {
          goto LABEL_26;
        }
        goto LABEL_21;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v67 + 56))(v17, 1, 1, v18);
    }

    swift_bridgeObjectRelease();
    sub_191F4CB7C((uint64_t)v17, &qword_1EB27BB50);
    uint64_t v54 = self;
    id v43 = (id)sub_191FB9DA8();
    id v44 = objc_msgSend(v54, sel__EX_errorWithCode_description_, 5, v43);
LABEL_14:
    v44;

LABEL_27:
    swift_willThrow();
    return v43;
  }
  id v45 = v72;
  id v46 = objc_msgSend(v72, sel_persona);
  id v47 = objc_msgSend(v45, sel_uuid);
  if (v47)
  {
    unint64_t v48 = v65;
    sub_191FB9C28();

    uint64_t v49 = v68;
    uint64_t v50 = v48;
    uint64_t v51 = v69;
    (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v12, v50, v69);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v12, 0, 1, v51);
    int v52 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v49 + 48))(v12, 1, v51);
    uint64_t v53 = v60;
    if (v52 == 1)
    {
      id v47 = 0;
    }
    else
    {
      id v47 = (id)sub_191FB9C08();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v12, v51);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v68 + 56))(v12, 1, 1, v69);
    uint64_t v53 = v60;
  }
  if (v66 >> 60 == 15) {
    id v55 = 0;
  }
  else {
    id v55 = (void *)sub_191FB9BC8();
  }
  id v43 = objc_msgSend(self, sel_extensionIdentityForBundleIdentifier_persona_instanceUUID_hostIdentifier_validationToken_, v24, v46, v47, v53, v55);

  if (!v43)
  {
LABEL_26:
    id v56 = self;
    uint64_t v70 = 0;
    unint64_t v71 = 0xE000000000000000;
    sub_191FBA2F8();
    sub_191FB9E38();
    sub_191FB9E38();
    swift_bridgeObjectRelease();
    id v43 = (id)v71;
    id v57 = (void *)sub_191FB9DA8();
    swift_bridgeObjectRelease();
    objc_msgSend(v56, sel__EX_errorWithCode_description_, 5, v57);

    goto LABEL_27;
  }
LABEL_21:
  swift_bridgeObjectRelease();
  return v43;
}

id sub_191F4E9A0()
{
  id v2 = v0;
  v13[1] = *(id *)MEMORY[0x1E4F143B8];
  id v3 = objc_msgSend(v0, sel_identity);
  if (v3
    && (id v1 = v3, v4 = objc_msgSend(v3, sel_hostIdentifier), v1, v4))
  {
    id v5 = objc_msgSend(v2, sel_requestorHandle);
    id v1 = v5;
    if (!v5)
    {
      uint64_t v6 = self;
      v13[0] = 0;
      id v1 = v4;
      id v7 = objc_msgSend(v6, sel_handleForIdentifier_error_, v1, v13);
      if (!v7)
      {
        id v12 = v13[0];
        sub_191FB9B18();

        swift_willThrow();
        return v1;
      }
      uint64_t v8 = v7;
      id v9 = v13[0];

      id v1 = v8;
    }
    id v10 = v5;
  }
  else
  {
    objc_msgSend(self, sel__EX_parameterError);
    swift_willThrow();
  }
  return v1;
}

uint64_t sub_191F4EB34(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_191F4EC64(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_191F4EC08((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x1E4FBB9B0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_191F4EC08((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v12);
  return v7;
}

uint64_t sub_191F4EC08(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_191F4EC64(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_191FBA1D8();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_191FABB64(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_191FBA358();
  if (!v8)
  {
    sub_191FBA448();
    __break(1u);
LABEL_17:
    uint64_t result = sub_191FBA4C8();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

id sub_191F4EE80(uint64_t a1)
{
  id v2 = v1;
  uint64_t v70 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BB50);
  MEMORY[0x1F4188790](v3 - 8);
  id v5 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_191FB9B78();
  uint64_t v6 = *(void *)(v69 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v69);
  uint64_t v9 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v68 = (char *)&v66 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE40);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  unint64_t v14 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v67 = (char *)&v66 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v66 - v17;
  uint64_t v19 = sub_191FB9A38();
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v20 = _s10AttachmentVMa(0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (uint64_t *)((char *)&v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = OBJC_IVAR____EXLaunchConfiguration__extensionIdentity;
  if (objc_msgSend(*(id *)&v2[OBJC_IVAR____EXLaunchConfiguration__extensionIdentity], sel_targetsSystemExtensionPoint))
  {
    BOOL v24 = v2;
    sub_191F4F900(v24, v22);
    sub_191FB9A78();
    swift_allocObject();
    sub_191FB9A68();
    sub_191FB9A28();
    sub_191FB9A48();
    sub_191F4F8B0(&qword_1E92FC8C8, (void (*)(uint64_t))_s10AttachmentVMa);
    uint64_t v25 = sub_191FB9A58();
    unint64_t v27 = v26;
    swift_release();
    sub_191F4CCBC((uint64_t)v22);
    id v28 = objc_msgSend(*(id *)&v2[v23], sel_bundleIdentifier);
    if (!v28)
    {
      sub_191FB9DC8();
      id v28 = (id)sub_191FB9DA8();
      swift_bridgeObjectRelease();
    }
    long long v29 = *(void **)&v24[OBJC_IVAR____EXLaunchConfiguration_launchPersona];
    if (v29 && (id v30 = objc_msgSend(v29, sel_personaUniqueString)) != 0)
    {
      uint64_t v31 = v30;
      sub_191FB9DC8();

      long long v32 = (void *)sub_191FB9DA8();
      swift_bridgeObjectRelease();
    }
    else
    {
      long long v32 = 0;
    }
    uint64_t v48 = *(void *)&v24[OBJC_IVAR____EXLaunchConfiguration_instanceIdentifier];
    if (v48)
    {
      uint64_t v49 = v48 + OBJC_IVAR____EXExtensionInstanceIdentifier_identifier;
      uint64_t v50 = sub_191FB9C68();
      uint64_t v51 = *(void *)(v50 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v18, v49, v50);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v18, 0, 1, v50);
      int v52 = 0;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v18, 1, v50) != 1)
      {
        int v52 = (void *)sub_191FB9C08();
        (*(void (**)(char *, uint64_t))(v51 + 8))(v18, v50);
      }
    }
    else
    {
      uint64_t v59 = sub_191FB9C68();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v18, 1, 1, v59);
      int v52 = 0;
    }
    uint64_t v60 = self;
    uint64_t v61 = (void *)sub_191FB9BC8();
    id v62 = objc_msgSend(v60, sel_extensionIdentityForBundleIdentifier_persona_instanceUUID_hostIdentifier_validationToken_, v28, v32, v52, v70, v61);
    sub_191F4CE58(v25, v27);

    return v62;
  }
  id v33 = objc_msgSend(*(id *)&v2[v23], sel_containingBundleRecord);
  if (v33)
  {
    id v34 = v33;
    id v35 = [v33 URL];

    sub_191FB9B58();
    uint64_t v36 = v6;
    uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    uint64_t v38 = v69;
    v37(v5, v9, v69);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v5, 0, 1, v38);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v5, 1, v38) != 1)
    {
      int v39 = v68;
      v37(v68, v5, v38);
      id v40 = objc_msgSend(*(id *)&v2[v23], sel_bundleIdentifier);
      if (!v40)
      {
        sub_191FB9DC8();
        id v40 = (id)sub_191FB9DA8();
        swift_bridgeObjectRelease();
      }
      id v41 = (void *)sub_191FB9B48();
      uint64_t v42 = *(void *)&v2[OBJC_IVAR____EXLaunchConfiguration_instanceIdentifier];
      id v43 = v67;
      if (v42)
      {
        uint64_t v44 = v42 + OBJC_IVAR____EXExtensionInstanceIdentifier_identifier;
        uint64_t v45 = sub_191FB9C68();
        uint64_t v46 = *(void *)(v45 - 8);
        (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v43, v44, v45);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
        id v47 = 0;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v43, 1, v45) != 1)
        {
          id v47 = (void *)sub_191FB9C08();
          (*(void (**)(char *, uint64_t))(v46 + 8))(v43, v45);
        }
      }
      else
      {
        uint64_t v64 = sub_191FB9C68();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v43, 1, 1, v64);
        id v47 = 0;
      }
      id v62 = objc_msgSend(self, sel_externalExtensionIdentityForExtensionKitIdentifier_bundledURL_hostIdentifier_UUID_, v40, v41, v70, v47);

      (*(void (**)(char *, uint64_t))(v36 + 8))(v39, v38);
      return v62;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v5, 1, 1, v69);
  }
  sub_191F4CB7C((uint64_t)v5, &qword_1EB27BB50);
  id v53 = objc_msgSend(*(id *)&v2[v23], sel_bundleIdentifier);
  if (!v53)
  {
    sub_191FB9DC8();
    id v53 = (id)sub_191FB9DA8();
    swift_bridgeObjectRelease();
  }
  uint64_t v54 = *(void *)&v2[OBJC_IVAR____EXLaunchConfiguration_instanceIdentifier];
  if (v54)
  {
    uint64_t v55 = v54 + OBJC_IVAR____EXExtensionInstanceIdentifier_identifier;
    uint64_t v56 = sub_191FB9C68();
    uint64_t v57 = *(void *)(v56 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v14, v55, v56);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(v14, 0, 1, v56);
    unsigned int v58 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v14, 1, v56) != 1)
    {
      unsigned int v58 = (void *)sub_191FB9C08();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v14, v56);
    }
  }
  else
  {
    uint64_t v63 = sub_191FB9C68();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v14, 1, 1, v63);
    unsigned int v58 = 0;
  }
  id v62 = objc_msgSend(self, sel_externalExtensionIdentityForExtensionKitIdentifier_hostIdentifier_UUID_, v53, v70, v58);

  return v62;
}

uint64_t sub_191F4F8B0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_191F4F900(char *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *(void *)&a1[OBJC_IVAR____EXLaunchConfiguration_sandboxProfileName + 8];
  *a2 = *(void *)&a1[OBJC_IVAR____EXLaunchConfiguration_sandboxProfileName];
  a2[1] = v4;
  uint64_t v5 = *(void *)&a1[OBJC_IVAR____EXLaunchConfiguration_additionalEnvironmentVariables];
  a2[2] = *(void *)&a1[OBJC_IVAR____EXLaunchConfiguration_preferredLanguages];
  a2[3] = v5;
  uint64_t v6 = *(void **)&a1[OBJC_IVAR____EXLaunchConfiguration__extensionIdentity];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v7 = objc_msgSend(v6, sel_bundleIdentifier);
  uint64_t v8 = sub_191FB9DC8();
  uint64_t v10 = v9;

  a2[4] = v8;
  a2[5] = v10;
  uint64_t v11 = (uint64_t)a2 + *(int *)(_s10AttachmentVMa(0) + 32);
  uint64_t v12 = (uint64_t)&a1[OBJC_IVAR____EXLaunchConfiguration_networkApplicationID];
  swift_beginAccess();
  sub_191F4CBD8(v12, v11, &qword_1EB27BE10);
}

uint64_t sub_191F4FA08(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_191F4CE58(a1, a2);
  }
  return a1;
}

unint64_t sub_191F4FA1C(uint64_t a1, uint64_t a2)
{
  sub_191FBA648();
  sub_191FB9E28();
  uint64_t v4 = sub_191FBA688();

  return sub_191F4FA94(a1, a2, v4);
}

unint64_t sub_191F4FA94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_191FBA598() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_191FBA598() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_191F4FB78(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, char *a5, char a6)
{
  id v8 = a3;
  sub_191F4FC0C(v8, a5, a6);

  return 1;
}

void sub_191F4FC0C(void *a1, char *a2, char a3)
{
  unint64_t v6 = v3;
  if (qword_1EB27BDC0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_191FB9CA8();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EB27BDE8);
  id v9 = a1;
  uint64_t v10 = sub_191FB9C88();
  os_log_type_t v11 = sub_191FBA088();
  if (os_log_type_enabled(v10, v11))
  {
    format = a2;
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v31 = v13;
    *(_DWORD *)uint64_t v12 = 136315138;
    id v14 = objc_msgSend(v9, sel_identity);
    uint64_t v15 = v14;
    if (v14)
    {
      id v16 = objc_msgSend(v14, sel_xpcServiceIdentifier, format);

      if (v16)
      {
        sub_191FB9DC8();
      }
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BCA8);
    uint64_t v17 = sub_191FB9E08();
    sub_191F4EB34(v17, v18, &v31);
    sub_191FBA1C8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191F29000, v10, v11, format, v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x192FEBAE0](v13, -1, -1);
    MEMORY[0x192FEBAE0](v12, -1, -1);

    unint64_t v6 = v3;
  }
  else
  {
  }
  sub_191F4A4AC(v9, a3 & 1);
  uint64_t v19 = v6;
  if (v6)
  {
    uint64_t v20 = (void *)sub_191FB9B08();
    id v21 = objc_msgSend(v20, sel_domain);
    uint64_t v22 = sub_191FB9DC8();
    uint64_t v24 = v23;

    if (v22 == sub_191FB9DC8() && v24 == v25)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v26 = sub_191FBA598();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v26 & 1) == 0)
      {
        unint64_t v27 = self;
        id v28 = v20;
        long long v29 = (void *)sub_191FB9B08();

        objc_msgSend(v27, sel__EX_errorWithCode_underlyingError_, 2, v29);
        swift_willThrow();

        goto LABEL_16;
      }
    }
    swift_willThrow();
LABEL_16:
  }
}

uint64_t sub_191F4FF60(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v12 = MEMORY[0x1E4FBC860];
  sub_191F500A8(0, v2, 0);
  uint64_t v3 = v12;
  if (v2)
  {
    for (uint64_t i = a1 + 32; ; i += 32)
    {
      sub_191F4EC08(i, (uint64_t)v11);
      if (!swift_dynamicCast()) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_191F500A8(0, *(void *)(v3 + 16) + 1, 1);
        uint64_t v3 = v12;
      }
      unint64_t v6 = *(void *)(v3 + 16);
      unint64_t v5 = *(void *)(v3 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_191F500A8(v5 > 1, v6 + 1, 1);
        uint64_t v3 = v12;
      }
      *(void *)(v3 + 16) = v6 + 1;
      uint64_t v7 = v3 + 16 * v6;
      *(void *)(v7 + 32) = v9;
      *(void *)(v7 + 40) = v10;
      if (!--v2) {
        return v3;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

uint64_t sub_191F500A8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_191F500C8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_191F500C8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FC860);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  id v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_191FBA4C8();
  __break(1u);
  return result;
}

uint64_t sub_191F50234(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FC818);
    uint64_t v3 = sub_191FBA2E8();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      unint64_t v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_191FBA648();
      swift_bridgeObjectRetain();
      sub_191FB9E28();
      uint64_t result = sub_191FBA688();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        id v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (uint64_t result = sub_191FBA598(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            uint64_t result = sub_191FBA598();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      id v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      *id v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_191F503D8(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_191F50530(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[2 * v9 + 4];
  if (a1 + 32 < v10 + 16 * v8 && v10 < a1 + 32 + 16 * v8) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_191FBA4C8();
  __break(1u);
  return result;
}

void *sub_191F50530(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FC860);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      long long v10[2] = v8;
      void v10[3] = 2 * (v12 >> 4);
      BOOL v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      BOOL v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_191F52D24(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

objc_class *EXGetExtensionClass()
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = (objc_class *)objc_opt_class();
  uint64_t v1 = _EXLegacyLog();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    unint64_t v2 = NSStringFromClass(v0);
    int v4 = 136446466;
    char v5 = "Class EXGetExtensionClass(void)";
    __int16 v6 = 2114;
    uint64_t v7 = v2;
    _os_log_impl(&dword_191F29000, v1, OS_LOG_TYPE_DEFAULT, "%{public}s returning %{public}@", (uint8_t *)&v4, 0x16u);
  }

  return v0;
}

id _EXLegacyLog()
{
  if (_EXLegacyLog_onceToken != -1) {
    dispatch_once(&_EXLegacyLog_onceToken, &__block_literal_global_7_0);
  }
  uint64_t v0 = (void *)_EXLegacyLog_log;

  return v0;
}

BOOL _EXConfigureLaunchContext(uint64_t a1, uint64_t a2)
{
  return +[_EXLaunchConfiguration configureRBInfoOnLaunchContext:a1 error:a2];
}

uint64_t sub_191F51E68(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_191FB9CA8();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_191FB9C98();
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

id _NSAcquireProcessAssertionForPIDWithOptions(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  if ((int)a1 < 1) {
    goto LABEL_10;
  }
  if (useAssertions())
  {
    if (a2) {
      uint64_t v6 = 15;
    }
    else {
      uint64_t v6 = 7;
    }
    uint64_t v7 = (void *)[objc_alloc(MEMORY[0x1E4F4E280]) initWithPID:a1 flags:v6 reason:9 name:@"com.apple.extension.session"];
    [v7 setInvalidationHandler:v5];
  }
  else
  {
    uint64_t v7 = 0;
  }
  if (([v7 acquire] & 1) == 0)
  {
    [v7 invalidate];

LABEL_10:
    uint64_t v7 = 0;
  }

  return v7;
}

uint64_t sub_191F52BC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BDE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_191F52C28(uint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v2 = sub_191FBA238();
    if (v2) {
      goto LABEL_3;
    }
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
LABEL_3:
  if (v2 <= 0)
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BE50);
    uint64_t v3 = (void *)swift_allocObject();
    int64_t v4 = _swift_stdlib_malloc_size(v3);
    uint64_t v5 = v4 - 32;
    if (v4 < 32) {
      uint64_t v5 = v4 - 25;
    }
    v3[2] = v2;
    v3[3] = (2 * (v5 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_191F54810(&v8, v3 + 4, v2, a1);
  uint64_t result = sub_191F4DD64();
  if (v6 == (void *)v2) {
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_191F52D24(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_191FBA4C8();
  __break(1u);
  return result;
}

uint64_t sub_191F52E18(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_191FB9C68();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  id v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_191FA005C();
  }
  else
  {
    if (v11 > v10)
    {
      sub_191FA11F4();
      goto LABEL_12;
    }
    sub_191F53408();
  }
  uint64_t v12 = *v3;
  sub_191F414E0(&qword_1E92FC6E0, 255, MEMORY[0x1E4F27990]);
  uint64_t v13 = sub_191FB9D68();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    BOOL v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_191F414E0(&qword_1E92FC6E8, 255, MEMORY[0x1E4F27990]);
      char v21 = sub_191FB9D98();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_191FBA5C8();
  __break(1u);
  return result;
}

unint64_t sub_191F530C0(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_191FBA208();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        id v10 = *(id *)(*(void *)(v3 + 48) + 8 * v6);
        uint64_t v11 = sub_191FBA158();

        unint64_t v12 = v11 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= (uint64_t)v12)
          {
LABEL_16:
            uint64_t v15 = *(void *)(v3 + 48);
            uint64_t v16 = (void *)(v15 + 8 * v2);
            BOOL v17 = (void *)(v15 + 8 * v6);
            if (v2 != v6 || (int64_t v2 = v6, v16 >= v17 + 1))
            {
              *uint64_t v16 = *v17;
              int64_t v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v18 = *(void *)(v3 + 16);
  BOOL v19 = __OFSUB__(v18, 1);
  uint64_t v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

id sub_191F53264(uint64_t *a1)
{
  int64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_191FBA2B8();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *int64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20)
      {
        int64_t v10 = v19 + 2;
        if (v19 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v20 = *(void *)(v7 + 8 * v10);
        if (!v20) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void **)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v14) {
    goto LABEL_28;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_191F53408()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_191FB9C68();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FC6D0);
  uint64_t v7 = sub_191FBA2C8();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  id v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  int64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_191F414E0(&qword_1E92FC6E0, 255, MEMORY[0x1E4F27990]);
    uint64_t result = sub_191FB9D68();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_191F537BC(uint64_t a1, uint64_t a2)
{
  uint64_t v65 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE40);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_191FB9C68();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v59 = (char *)&v49 - v12;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  uint64_t v13 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v14 = ~v13;
  uint64_t v15 = a1 + 56;
  uint64_t v16 = -v13;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & *(void *)(a1 + 56);
  uint64_t v60 = a1;
  uint64_t v61 = a1 + 56;
  uint64_t v54 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
  uint64_t v55 = v6;
  uint64_t v62 = v14;
  uint64_t v63 = 0;
  unint64_t v64 = v18;
  id v53 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  uint64_t v51 = (void (**)(char *, uint64_t, uint64_t))(v8 + 32);
  uint64_t v57 = v8 + 16;
  unsigned int v58 = (char *)(a2 + 56);
  unint64_t v19 = (void (**)(char *, uint64_t))(v8 + 8);
  swift_bridgeObjectRetain();
  int64_t v20 = 0;
  uint64_t v56 = v8;
  uint64_t v52 = a2;
  uint64_t v50 = 0;
  if (!v18) {
    goto LABEL_8;
  }
LABEL_6:
  uint64_t v21 = (v18 - 1) & v18;
  unint64_t v22 = __clz(__rbit64(v18)) | (v20 << 6);
  int64_t v23 = v20;
LABEL_7:
  unint64_t v24 = *(void *)(a1 + 48) + *(void *)(v8 + 72) * v22;
  uint64_t v25 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v26 = (uint64_t)v55;
  v25(v55, v24, v7);
  uint64_t v27 = 0;
  while (1)
  {
    (*v54)(v26, v27, 1, v7);
    uint64_t v60 = a1;
    uint64_t v61 = v15;
    uint64_t v62 = v14;
    uint64_t v63 = v23;
    unint64_t v64 = v21;
    if ((*v53)(v26, 1, v7) == 1)
    {
      sub_191F4DD64();
      sub_191F9C38C(v26);
      return v52;
    }
    (*v51)(v59, v26, v7);
    uint64_t v31 = v52;
    sub_191F414E0(&qword_1E92FC6E0, 255, MEMORY[0x1E4F27990]);
    uint64_t v32 = sub_191FB9D68();
    uint64_t v33 = -1 << *(unsigned char *)(v31 + 32);
    unint64_t v34 = v32 & ~v33;
    if ((*(void *)&v58[(v34 >> 3) & 0xFFFFFFFFFFFFFF8] >> v34)) {
      break;
    }
    id v40 = *v19;
    uint64_t v8 = v56;
LABEL_35:
    v40(v59, v7);
    int64_t v20 = v63;
    unint64_t v18 = v64;
    a1 = v60;
    uint64_t v15 = v61;
    uint64_t v14 = v62;
    uint64_t v50 = v63;
    if (v64) {
      goto LABEL_6;
    }
LABEL_8:
    int64_t v23 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      __break(1u);
    }
    int64_t v28 = (unint64_t)(v14 + 64) >> 6;
    if (v23 >= v28) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v15 + 8 * v23);
    if (v29) {
      goto LABEL_11;
    }
    v20 += 2;
    if (v23 + 1 >= v28) {
      goto LABEL_37;
    }
    unint64_t v29 = *(void *)(v15 + 8 * v20);
    if (v29) {
      goto LABEL_14;
    }
    if (v23 + 2 >= v28) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v15 + 8 * (v23 + 2));
    if (v29)
    {
      v23 += 2;
      goto LABEL_11;
    }
    int64_t v20 = v23 + 3;
    if (v23 + 3 < v28)
    {
      unint64_t v29 = *(void *)(v15 + 8 * v20);
      if (v29)
      {
LABEL_14:
        int64_t v23 = v20;
LABEL_11:
        uint64_t v21 = (v29 - 1) & v29;
        unint64_t v22 = __clz(__rbit64(v29)) + (v23 << 6);
        goto LABEL_7;
      }
      v23 += 4;
      if (v23 >= v28)
      {
LABEL_26:
        uint64_t v21 = 0;
        uint64_t v27 = 1;
        int64_t v23 = v20;
        goto LABEL_27;
      }
      unint64_t v29 = *(void *)(v15 + 8 * v23);
      if (v29) {
        goto LABEL_11;
      }
      int64_t v23 = v28 - 1;
      uint64_t v30 = v50 + 6;
      while (v28 != v30)
      {
        unint64_t v29 = *(void *)(v15 + 8 * v30++);
        if (v29)
        {
          int64_t v23 = v30 - 1;
          goto LABEL_11;
        }
      }
LABEL_37:
      uint64_t v21 = 0;
      uint64_t v27 = 1;
      goto LABEL_27;
    }
    uint64_t v21 = 0;
    uint64_t v27 = 1;
    v23 += 2;
LABEL_27:
    uint64_t v26 = (uint64_t)v55;
  }
  uint64_t v50 = (unint64_t)v19 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v35 = v31;
  uint64_t v36 = ~v33;
  uint64_t v37 = *(void *)(v56 + 72);
  uint64_t v38 = *(void (**)(char *, unint64_t, uint64_t))(v56 + 16);
  while (1)
  {
    v38(v11, *(void *)(v35 + 48) + v37 * v34, v7);
    sub_191F414E0(&qword_1E92FC6E8, 255, MEMORY[0x1E4F27990]);
    char v39 = sub_191FB9D98();
    id v40 = *v19;
    (*v19)(v11, v7);
    if (v39) {
      break;
    }
    unint64_t v34 = (v34 + 1) & v36;
    if (((*(void *)&v58[(v34 >> 3) & 0xFFFFFFFFFFFFFF8] >> v34) & 1) == 0)
    {
      uint64_t v8 = v56;
      goto LABEL_35;
    }
  }
  uint64_t isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v40)(v59, v7);
  char v42 = *(unsigned char *)(v35 + 32);
  unint64_t v43 = (unint64_t)((1 << v42) + 63) >> 6;
  size_t v44 = 8 * v43;
  if ((v42 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    memcpy((char *)&v49 - ((v44 + 15) & 0x3FFFFFFFFFFFFFF0), v58, v44);
    uint64_t v45 = sub_191FA33F8((unint64_t *)((char *)&v49 - ((v44 + 15) & 0x3FFFFFFFFFFFFFF0)), v43, v35, v34, &v60);
    swift_release();
    sub_191F4DD64();
    return v45;
  }
  else
  {
    id v47 = (void *)swift_slowAlloc();
    memcpy(v47, v58, v44);
    uint64_t v48 = sub_191FA33F8((unint64_t *)v47, v43, v35, v34, &v60);
    swift_release();
    sub_191F4DD64();
    MEMORY[0x192FEBAE0](v47, -1, -1);
    return v48;
  }
}

unint64_t sub_191F53E80()
{
  unint64_t result = qword_1EB27BCB0;
  if (!qword_1EB27BCB0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB27BCB0);
  }
  return result;
}

void sub_191F53EC0(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

void sub_191F53F08()
{
  sub_191F54B1C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

ValueMetadata *_s10AttachmentV10CodingKeysOMa()
{
  return &_s10AttachmentV10CodingKeysON;
}

unint64_t sub_191F53FD8()
{
  unint64_t result = qword_1EB27BB70;
  if (!qword_1EB27BB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB27BB70);
  }
  return result;
}

unint64_t sub_191F5402C()
{
  unint64_t result = qword_1EB27BB68;
  if (!qword_1EB27BB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB27BB68);
  }
  return result;
}

unint64_t sub_191F54080()
{
  unint64_t result = qword_1EB27BE80;
  if (!qword_1EB27BE80)
  {
    sub_191FBA0A8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB27BE80);
  }
  return result;
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

BOOL sub_191F540EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return 0;
  }
  sub_191FBA648();
  swift_getObjectType();
  v11[3] = swift_getAssociatedTypeWitness();
  v11[4] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_0(v11);
  sub_191FBA318();
  sub_191FB9D78();
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v11);
  uint64_t v4 = sub_191FBA688();
  uint64_t v5 = -1 << *(unsigned char *)(a3 + 32);
  unint64_t v6 = v4 & ~v5;
  if (((*(void *)(a3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v7 = ~v5;
  do
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    uint64_t v8 = sub_191FBA328();
    uint64_t v9 = sub_191FBA328();
    swift_unknownObjectRelease();
    BOOL result = v8 == v9;
    if (v8 == v9) {
      break;
    }
    unint64_t v6 = (v6 + 1) & v7;
  }
  while (((*(void *)(a3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  return result;
}

uint64_t sub_191F542A8(void *a1)
{
  uint64_t v3 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v4 = a1;
    char v5 = sub_191FBA268();

    if (v5)
    {
      uint64_t v6 = sub_191FA2AD8();
      swift_bridgeObjectRelease();
      return v6;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_191FBA158();
  uint64_t v8 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
    goto LABEL_12;
  }
  sub_191F442A4(0, (unint64_t *)&qword_1EB27BCB0);
  id v10 = *(id *)(*(void *)(v3 + 48) + 8 * v9);
  char v11 = sub_191FBA168();

  if ((v11 & 1) == 0)
  {
    uint64_t v12 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v12;
      if (((*(void *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_12;
      }
      id v13 = *(id *)(*(void *)(v3 + 48) + 8 * v9);
      char v14 = sub_191FBA168();
    }
    while ((v14 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v16 = *v1;
  uint64_t v18 = *v1;
  *uint64_t v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_191F53264((uint64_t *)&unk_1EB27BB40);
    uint64_t v16 = v18;
  }
  uint64_t v6 = *(void *)(*(void *)(v16 + 48) + 8 * v9);
  sub_191F530C0(v9);
  *uint64_t v1 = v18;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_191F54488(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_191FB9C68();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_191F414E0(&qword_1E92FC6E0, 255, MEMORY[0x1E4F27990]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_191FB9D68();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    int64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    char v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      int64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_191F414E0(&qword_1E92FC6E8, 255, MEMORY[0x1E4F27990]);
      char v21 = sub_191FB9D98();
      unint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      char v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    char v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_191F52E18((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

unint64_t sub_191F547B4()
{
  unint64_t result = qword_1EB27BE70;
  if (!qword_1EB27BE70)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB27BE58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB27BE70);
  }
  return result;
}

void *sub_191F54810(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_191FBA228();
    sub_191F442A4(0, (unint64_t *)&qword_1EB27BCB0);
    sub_191F3B0F4();
    unint64_t result = (void *)sub_191FB9FE8();
    uint64_t v4 = v27;
    uint64_t v8 = v28;
    uint64_t v9 = v29;
    int64_t v10 = v30;
    unint64_t v11 = v31;
    unint64_t v24 = v7;
    if (v6) {
      goto LABEL_3;
    }
LABEL_36:
    uint64_t v12 = 0;
LABEL_46:
    *unint64_t v24 = v4;
    v24[1] = v8;
    v24[2] = v9;
    v24[3] = v10;
    v24[4] = v11;
    return (void *)v12;
  }
  int64_t v10 = 0;
  uint64_t v20 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v8 = a4 + 56;
  uint64_t v9 = ~v20;
  uint64_t v21 = -v20;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  else {
    uint64_t v22 = -1;
  }
  unint64_t v11 = v22 & *(void *)(a4 + 56);
  unint64_t v24 = result;
  if (!a2) {
    goto LABEL_36;
  }
LABEL_3:
  if (!a3)
  {
    uint64_t v12 = 0;
    goto LABEL_46;
  }
  if (a3 < 0) {
    goto LABEL_48;
  }
  uint64_t v12 = 0;
  int64_t v25 = (unint64_t)(v9 + 64) >> 6;
  uint64_t v23 = v9;
  while (1)
  {
    if (v4 < 0)
    {
      if (!sub_191FBA258()) {
        goto LABEL_45;
      }
      sub_191F442A4(0, (unint64_t *)&qword_1EB27BCB0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      uint64_t v15 = v26;
      unint64_t result = (void *)swift_unknownObjectRelease();
      if (!v26) {
        goto LABEL_45;
      }
      goto LABEL_8;
    }
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_7;
    }
    int64_t v16 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v16 >= v25)
    {
      unint64_t v11 = 0;
      goto LABEL_45;
    }
    unint64_t v17 = *(void *)(v8 + 8 * v16);
    if (v17) {
      goto LABEL_23;
    }
    int64_t v18 = v10 + 2;
    if (v10 + 2 >= v25)
    {
      unint64_t v11 = 0;
      ++v10;
      goto LABEL_45;
    }
    unint64_t v17 = *(void *)(v8 + 8 * v18);
    if (!v17)
    {
      if (v10 + 3 >= v25) {
        goto LABEL_42;
      }
      unint64_t v17 = *(void *)(v8 + 8 * (v10 + 3));
      if (v17)
      {
        int64_t v16 = v10 + 3;
        goto LABEL_23;
      }
      int64_t v18 = v10 + 4;
      if (v10 + 4 >= v25)
      {
        unint64_t v11 = 0;
        v10 += 3;
        goto LABEL_45;
      }
      unint64_t v17 = *(void *)(v8 + 8 * v18);
      if (!v17)
      {
        int64_t v16 = v10 + 5;
        if (v10 + 5 >= v25)
        {
LABEL_42:
          unint64_t v11 = 0;
          int64_t v10 = v18;
          goto LABEL_45;
        }
        unint64_t v17 = *(void *)(v8 + 8 * v16);
        if (!v17)
        {
          int64_t v19 = v10 + 6;
          while (v25 != v19)
          {
            unint64_t v17 = *(void *)(v8 + 8 * v19++);
            if (v17)
            {
              int64_t v16 = v19 - 1;
              goto LABEL_23;
            }
          }
          unint64_t v11 = 0;
          int64_t v10 = v25 - 1;
          goto LABEL_45;
        }
        goto LABEL_23;
      }
    }
    int64_t v16 = v18;
LABEL_23:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v14 = __clz(__rbit64(v17)) + (v16 << 6);
    int64_t v10 = v16;
LABEL_7:
    unint64_t result = *(id *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t v15 = result;
    if (!result) {
      goto LABEL_45;
    }
LABEL_8:
    ++v12;
    *v6++ = v15;
    if (v12 == a3)
    {
      uint64_t v12 = a3;
LABEL_45:
      uint64_t v9 = v23;
      goto LABEL_46;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

void sub_191F54B1C()
{
  if (!qword_1EB27BE18)
  {
    sub_191FB9CE8();
    unint64_t v0 = sub_191FBA1A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB27BE18);
    }
  }
}

uint64_t sub_191F54B74(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_191FB9CE8();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_191F54BB8()
{
  uint64_t v2 = sub_191FB9CE8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v24 - v7;
  sub_191FB9CC8();
  int v9 = nw_application_id_set_self();
  swift_unknownObjectRelease();
  if (v9)
  {
    os_log_type_t v10 = sub_191FBA068();
    sub_191F442A4(0, (unint64_t *)&qword_1EB27C0D0);
    unint64_t v11 = sub_191FBA188();
    os_log_type_t v12 = v10;
    if (os_log_type_enabled(v11, v10))
    {
      unint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)unint64_t v13 = 67109120;
      LODWORD(v29) = v9;
      sub_191FBA1C8();
      _os_log_impl(&dword_191F29000, v11, v12, "Could not apply network app ID: %{darwin.errno}d", v13, 8u);
      MEMORY[0x192FEBAE0](v13, -1, -1);
    }

    sub_191FB9DC8();
    id v14 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
    uint64_t v15 = (void *)sub_191FB9DA8();
    swift_bridgeObjectRelease();
    objc_msgSend(v14, sel_initWithDomain_code_userInfo_, v15, 16, 0);

    swift_willThrow();
  }
  else
  {
    os_log_type_t v16 = sub_191FBA048();
    unint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v17(v8, v0, v2);
    sub_191F442A4(0, (unint64_t *)&qword_1EB27C0D0);
    int64_t v18 = sub_191FBA188();
    if (os_log_type_enabled(v18, v16))
    {
      uint64_t v19 = swift_slowAlloc();
      int v25 = v16;
      uint64_t v20 = (uint8_t *)v19;
      uint64_t v26 = swift_slowAlloc();
      uint64_t v29 = v26;
      uint64_t v27 = v1;
      *(_DWORD *)uint64_t v20 = 136315138;
      v24[1] = v20 + 4;
      v17(v6, (uint64_t)v8, v2);
      uint64_t v21 = sub_191FB9E08();
      uint64_t v28 = sub_191F4EB34(v21, v22, &v29);
      sub_191FBA1C8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      _os_log_impl(&dword_191F29000, v18, (os_log_type_t)v25, "Set network app id to %s", v20, 0xCu);
      uint64_t v23 = v26;
      swift_arrayDestroy();
      MEMORY[0x192FEBAE0](v23, -1, -1);
      MEMORY[0x192FEBAE0](v20, -1, -1);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    }
  }
}

uint64_t sub_191F54F70()
{
  uint64_t v1 = sub_191FB9DF8();
  MEMORY[0x1F4188790](v1 - 8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FC860);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_191FBFCC0;
  strcpy((char *)(v2 + 32), "-NetworkAppID");
  *(_WORD *)(v2 + 46) = -4864;
  sub_191FB9A78();
  swift_allocObject();
  sub_191FB9A68();
  sub_191FB9CE8();
  sub_191F54B74((unint64_t *)&unk_1EB27BB98);
  uint64_t v3 = sub_191FB9A58();
  unint64_t v5 = v4;
  swift_release();
  if (v0)
  {
    swift_bridgeObjectRelease();
    *(void *)(v2 + 16) = 0;
    swift_release();
    return v2;
  }
  sub_191FB9DE8();
  uint64_t result = sub_191FB9DD8();
  if (v7)
  {
    uint64_t v8 = result;
    uint64_t v9 = v7;
    sub_191F4CE58(v3, v5);
    *(void *)(v2 + 48) = v8;
    *(void *)(v2 + 56) = v9;
    return v2;
  }
  __break(1u);
  return result;
}

uint64_t sub_191F5510C(uint64_t a1)
{
  return sub_191F51E68(a1, qword_1EB27BC70);
}

uint64_t sub_191F55130(uint64_t a1)
{
  return sub_191F51E68(a1, qword_1EB27BDE8);
}

uint64_t sub_191F5515C()
{
  uint64_t result = sub_191FB9C68();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for _EXExtensionProcessMannger()
{
  return self;
}

void sub_191F552C0(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BE10);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v21 - v7;
  uint64_t v9 = sub_191FB9CE8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  os_log_type_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191FB9CD8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_191F4CB7C((uint64_t)v8, &qword_1EB27BE10);
    if (qword_1E92FC798 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_191FB9CA8();
    __swift_project_value_buffer(v13, (uint64_t)qword_1E92FC7B0);
    id v14 = a1;
    uint64_t v15 = sub_191FB9C88();
    os_log_type_t v16 = sub_191FBA068();
    if (os_log_type_enabled(v15, v16))
    {
      unint64_t v17 = (uint8_t *)swift_slowAlloc();
      int64_t v18 = (void *)swift_slowAlloc();
      uint64_t v21[5] = v1;
      *(_DWORD *)unint64_t v17 = 138543362;
      v21[1] = v14;
      id v19 = v14;
      sub_191FBA1C8();
      void *v18 = v14;

      _os_log_impl(&dword_191F29000, v15, v16, "Failed to resolve host network app id to config: %{public}@", v17, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
      swift_arrayDestroy();
      MEMORY[0x192FEBAE0](v18, -1, -1);
      MEMORY[0x192FEBAE0](v17, -1, -1);
    }
    else
    {
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v6, v12, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
    uint64_t v20 = (uint64_t)a1 + OBJC_IVAR____EXLaunchConfiguration_networkApplicationID;
    swift_beginAccess();
    sub_191F45790((uint64_t)v6, v20);
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

id sub_191F55648()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for _EXExtensionProcessMannger()), sel_init);
  qword_1EB27C520 = (uint64_t)result;
  return result;
}

void sub_191F55678()
{
  sub_191F54B1C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t type metadata accessor for _EXDiscoveryController()
{
  return self;
}

char *sub_191F55788()
{
  uint64_t v16 = sub_191FBA0B8();
  uint64_t v1 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_191FBA0A8();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_191FB9D18();
  MEMORY[0x1F4188790](v5 - 8);
  *(void *)&v0[OBJC_IVAR____EXDiscoveryController_activeQueries] = MEMORY[0x1E4FBC868];
  uint64_t v6 = OBJC_IVAR____EXDiscoveryController_observer;
  id v7 = objc_allocWithZone(MEMORY[0x1E4F22450]);
  uint64_t v8 = v0;
  *(void *)&v0[v6] = objc_msgSend(v7, sel_init);
  uint64_t v9 = &v8[OBJC_IVAR____EXDiscoveryController_settingsStoreToken];
  *(_OWORD *)uint64_t v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  uint64_t v10 = OBJC_IVAR____EXDiscoveryController_activeQueriesLock;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE60);
  uint64_t v11 = swift_allocObject();
  *(_DWORD *)(v11 + 16) = 0;
  *(void *)&v8[v10] = v11;
  uint64_t v12 = OBJC_IVAR____EXDiscoveryController_queryQueue;
  sub_191F442A4(0, (unint64_t *)&qword_1EB27BFC8);
  sub_191FB9D08();
  uint64_t v18 = MEMORY[0x1E4FBC860];
  sub_191F54080();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BE58);
  sub_191F547B4();
  sub_191FBA1F8();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCC58], v16);
  *(void *)&v8[v12] = sub_191FBA0E8();

  uint64_t v13 = (objc_class *)type metadata accessor for _EXDiscoveryController();
  v17.receiver = v8;
  v17.super_class = v13;
  id v14 = (char *)objc_msgSendSuper2(&v17, sel_init);
  objc_msgSend(*(id *)&v14[OBJC_IVAR____EXDiscoveryController_observer], sel_setDelegate_, v14);
  return v14;
}

id sub_191F55A64()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for _EXDiscoveryController()), sel_init);
  qword_1EB27C518 = (uint64_t)result;
  return result;
}

void sub_191F55A94()
{
  sub_191F54B1C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_191F55B5C()
{
  uint64_t v0 = sub_191FBA0A8();
  MEMORY[0x1F4188790](v0);
  uint64_t v1 = sub_191FB9D18();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v2 = sub_191FBA0B8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191F32994();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCC58], v2);
  sub_191FB9D08();
  v7[1] = MEMORY[0x1E4FBC860];
  sub_191F392D8((unint64_t *)&qword_1EB27BE80, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BE58);
  sub_191F39B40((unint64_t *)&qword_1EB27BE70, &qword_1EB27BE58);
  sub_191FBA1F8();
  uint64_t result = sub_191FBA0E8();
  qword_1E92FC870 = result;
  return result;
}

uint64_t sub_191F55D94()
{
  return sub_191F55DB0(v0);
}

uint64_t sub_191F55DB0(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x192FEBBF0](v1);
  if (result)
  {
    uint64_t v3 = (char *)result;
    uint64_t v4 = self;
    objc_msgSend(v4, sel_queryControllerDelegate_didUpdateController_, MEMORY[0x192FEBBF0](&v3[OBJC_IVAR____EXQueryController_delegate]), v3);

    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_191F55EB0()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____EXQueryController_innerController);
  uint64_t v2 = OBJC_IVAR____TtC19ExtensionFoundation15QueryController_extensionsLock;
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC19ExtensionFoundation15QueryController_extensionsLock);
  swift_retain();
  os_unfair_lock_lock(v3 + 4);
  swift_release();
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC19ExtensionFoundation15QueryController__internalExtensions);
  uint64_t v5 = *(os_unfair_lock_s **)(v1 + v2);
  swift_bridgeObjectRetain();
  swift_retain();
  os_unfair_lock_unlock(v5 + 4);
  swift_release();
  uint64_t v6 = sub_191F52C28(v4);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_191F55F54()
{
  return sub_191F3B1A4(&qword_1E92FC6E0, MEMORY[0x1E4F27990]);
}

uint64_t sub_191F55F9C()
{
  uint64_t result = sub_191FB9C68();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_191F56070(uint64_t a1)
{
  uint64_t result = sub_191F3B1A4(&qword_1E92FC720, (void (*)(uint64_t))type metadata accessor for QueryController);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_191F560C8(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result != 1)
  {
    sub_191F45B34(result);
    return sub_191F45B34(a3);
  }
  return result;
}

uint64_t sub_191F56114()
{
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1) {
    return v1();
  }
  return result;
}

ValueMetadata *type metadata accessor for _EXActiveQuery.ActiveQueryObserver()
{
  return &type metadata for _EXActiveQuery.ActiveQueryObserver;
}

unint64_t sub_191F56158()
{
  unint64_t result = qword_1E92FC6F0;
  if (!qword_1E92FC6F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92FC6F0);
  }
  return result;
}

long long *sub_191F561AC()
{
  unint64_t result = (long long *)objc_msgSend(self, sel_auditTokenForCurrentProcess);
  if (result)
  {
    long long v1 = result[1];
    xmmword_1E92FF710 = *result;
    *(_OWORD *)&dword_1E92FF720 = v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

ExtensionFoundation::_AppExtensionIdentity __swiftcall _AppExtensionIdentity.init(_:)(ExtensionFoundation::_AppExtensionIdentity result)
{
  *long long v1 = result._inner.super.isa;
  return result;
}

ValueMetadata *type metadata accessor for _AppExtensionIdentity()
{
  return &type metadata for _AppExtensionIdentity;
}

ExtensionFoundation::AppExtensionIdentity __swiftcall AppExtensionIdentity.init(_:)(ExtensionFoundation::AppExtensionIdentity result)
{
  *long long v1 = *(void *)result._inner.super.isa;
  return result;
}

ValueMetadata *type metadata accessor for AppExtensionIdentity()
{
  return &type metadata for AppExtensionIdentity;
}

void sub_191F56224()
{
  sub_191F564AC(319, &qword_1E92FC7C8, MEMORY[0x1E4F27990]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t AppExtensionProcess._InstanceIdentifier.init()@<X0>(uint64_t a1@<X8>)
{
  sub_191FB9C58();
  uint64_t v2 = sub_191FB9C68();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 0, 1, v2);
}

uint64_t sub_191F5633C()
{
  uint64_t v0 = type metadata accessor for AppExtensionProcess._InstanceIdentifier(0);
  __swift_allocate_value_buffer(v0, qword_1E92FC7E0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1E92FC7E0);
  uint64_t v2 = sub_191FB9C68();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 1, 1, v2);
}

void sub_191F563D0()
{
  sub_191F564AC(319, &qword_1E92FC7C8, MEMORY[0x1E4F27990]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_191F564AC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_191FBA1A8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_191F56500(unint64_t a1, unint64_t a2)
{
  uint64_t v44 = *MEMORY[0x1E4F143B8];
  *(void *)&long long v40 = a1;
  *((void *)&v40 + 1) = a2;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FC4A8);
  if (swift_dynamicCast())
  {
    sub_191F41528(v38, (uint64_t)&v41);
    __swift_project_boxed_opaque_existential_2Tm(&v41, v43);
    sub_191FB9AF8();
    swift_bridgeObjectRelease();
    v38[0] = v40;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)&v41);
    return *(void *)&v38[0];
  }
  uint64_t v39 = 0;
  memset(v38, 0, sizeof(v38));
  sub_191F4CB7C((uint64_t)v38, (uint64_t *)&unk_1E92FC4B0);
  unint64_t v2 = a1;
  unint64_t v3 = a2;
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) != 0)
    {
      uint64_t v41 = a1;
      uint64_t v42 = a2 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v6 = (char *)&v41 + (HIBYTE(a2) & 0xF);
      id v7 = &v41;
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v4 = sub_191FBA358();
      }
      if (v4) {
        uint64_t v6 = (unsigned char *)(v4 + v5);
      }
      else {
        uint64_t v6 = 0;
      }
      id v7 = (uint64_t *)v4;
    }
    uint64_t v8 = sub_191F56A20(v7, v6);
    unint64_t v10 = v9;
    if (v9 >> 60 != 15)
    {
      swift_bridgeObjectRelease();
      *(void *)&v38[0] = v8;
      *((void *)&v38[0] + 1) = v10;
      return *(void *)&v38[0];
    }
    unint64_t v2 = a1;
    unint64_t v3 = a2;
    if ((a2 & 0x1000000000000000) == 0) {
      goto LABEL_14;
    }
LABEL_70:
    uint64_t v11 = sub_191FB9E48();
    goto LABEL_17;
  }
LABEL_69:
  uint64_t v8 = 0;
  unint64_t v10 = 0xF000000000000000;
  if ((v3 & 0x1000000000000000) != 0) {
    goto LABEL_70;
  }
LABEL_14:
  if ((v3 & 0x2000000000000000) != 0) {
    uint64_t v11 = HIBYTE(v3) & 0xF;
  }
  else {
    uint64_t v11 = v2 & 0xFFFFFFFFFFFFLL;
  }
LABEL_17:
  *(void *)&v38[0] = sub_191F81EC8(v11);
  *((void *)&v38[0] + 1) = v12;
  MEMORY[0x1F4188790](*(void *)&v38[0]);
  unint64_t v13 = (unint64_t)sub_191F8185C((void *(*)(uint64_t *__return_ptr, char *, char *))sub_191F82204);
  uint64_t v16 = *((void *)&v38[0] + 1) >> 62;
  uint64_t v17 = v13;
  uint64_t v18 = v3;
  unint64_t v19 = v14;
  switch(*((void *)&v38[0] + 1) >> 62)
  {
    case 1:
      LODWORD(v20) = DWORD1(v38[0]) - LODWORD(v38[0]);
      if (__OFSUB__(DWORD1(v38[0]), v38[0])) {
        goto LABEL_73;
      }
      uint64_t v20 = (int)v20;
LABEL_23:
      if (v15 != v20)
      {
        if (v16)
        {
          if (v16 == 1) {
            uint64_t v24 = *(uint64_t *)&v38[0] >> 32;
          }
          else {
            uint64_t v24 = *(void *)(*(void *)&v38[0] + 24);
          }
        }
        else
        {
          uint64_t v24 = BYTE14(v38[0]);
        }
LABEL_61:
        if (v24 < v15)
        {
          __break(1u);
LABEL_73:
          __break(1u);
LABEL_74:
          __break(1u);
        }
        sub_191FB9BA8();
LABEL_63:
        swift_bridgeObjectRelease();
        goto LABEL_64;
      }
LABEL_29:
      if ((v3 & 0x2000000000000000) != 0) {
        unint64_t v25 = HIBYTE(v3) & 0xF;
      }
      else {
        unint64_t v25 = v13 & 0xFFFFFFFFFFFFLL;
      }
      *(void *)((char *)&v40 + 7) = 0;
      *(void *)&long long v40 = 0;
      if (4 * v25 == v14 >> 14) {
        goto LABEL_58;
      }
      LOBYTE(v26) = 0;
      uint64_t v27 = (v13 >> 59) & 1;
      if ((v3 & 0x1000000000000000) == 0) {
        LOBYTE(v27) = 1;
      }
      uint64_t v28 = 4 << v27;
      uint64_t v35 = v3 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v33 = (uint64_t)v8;
      uint64_t v34 = (v3 & 0xFFFFFFFFFFFFFFFLL) + 32;
      break;
    case 2:
      uint64_t v22 = *(void *)(*(void *)&v38[0] + 16);
      uint64_t v21 = *(void *)(*(void *)&v38[0] + 24);
      BOOL v23 = __OFSUB__(v21, v22);
      uint64_t v20 = v21 - v22;
      if (!v23) {
        goto LABEL_23;
      }
      goto LABEL_74;
    case 3:
      if (!v15) {
        goto LABEL_29;
      }
      uint64_t v24 = 0;
      goto LABEL_61;
    default:
      uint64_t v20 = BYTE14(v38[0]);
      goto LABEL_23;
  }
  do
  {
    unint64_t v29 = v19 & 0xC;
    unint64_t v2 = v19;
    if (v29 == v28) {
      unint64_t v2 = sub_191FABDDC(v19, v17, v18);
    }
    unint64_t v30 = v2 >> 16;
    if (v2 >> 16 >= v25)
    {
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
    if ((v18 & 0x1000000000000000) != 0)
    {
      unint64_t v2 = sub_191FB9E78();
      char v31 = v2;
      if (v29 != v28) {
        goto LABEL_47;
      }
    }
    else if ((v18 & 0x2000000000000000) != 0)
    {
      uint64_t v41 = v17;
      uint64_t v42 = v35;
      char v31 = *((unsigned char *)&v41 + v30);
      if (v29 != v28) {
        goto LABEL_47;
      }
    }
    else
    {
      unint64_t v2 = v34;
      if ((v17 & 0x1000000000000000) == 0) {
        unint64_t v2 = sub_191FBA358();
      }
      char v31 = *(unsigned char *)(v2 + v30);
      if (v29 != v28)
      {
LABEL_47:
        if ((v18 & 0x1000000000000000) == 0) {
          goto LABEL_48;
        }
        goto LABEL_51;
      }
    }
    unint64_t v2 = sub_191FABDDC(v19, v17, v18);
    unint64_t v19 = v2;
    if ((v18 & 0x1000000000000000) == 0)
    {
LABEL_48:
      unint64_t v19 = (v19 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_53;
    }
LABEL_51:
    if (v25 <= v19 >> 16) {
      goto LABEL_68;
    }
    unint64_t v2 = sub_191FB9E58();
    unint64_t v19 = v2;
LABEL_53:
    *((unsigned char *)&v40 + v26) = v31;
    unsigned int v26 = v26 + 1;
    if ((v26 >> 8)) {
      goto LABEL_67;
    }
    BYTE14(v40) = v26;
    if (v26 == 14)
    {
      uint64_t v41 = v40;
      LODWORD(v42) = DWORD2(v40);
      WORD2(v42) = WORD6(v40);
      sub_191FB9BB8();
      LOBYTE(v26) = 0;
      BYTE14(v40) = 0;
    }
  }
  while (4 * v25 != v19 >> 14);
  uint64_t v8 = (unsigned char *)v33;
  if ((_BYTE)v26)
  {
    uint64_t v41 = v40;
    LODWORD(v42) = DWORD2(v40);
    WORD2(v42) = WORD6(v40);
    sub_191FB9BB8();
    sub_191F4FA08(v33, v10);
    goto LABEL_63;
  }
LABEL_58:
  swift_bridgeObjectRelease();
  sub_191F4FA08((uint64_t)v8, v10);
LABEL_64:
  swift_bridgeObjectRelease();
  return *(void *)&v38[0];
}

unsigned char *sub_191F56A20(unsigned char *result, unsigned char *a2)
{
  if (result)
  {
    uint64_t v2 = a2 - result;
    if (a2 == result)
    {
      return 0;
    }
    else if (v2 <= 14)
    {
      return (unsigned char *)sub_191F81D88(result, a2);
    }
    else if ((unint64_t)v2 >= 0x7FFFFFFF)
    {
      return (unsigned char *)sub_191F81E4C((uint64_t)result, (uint64_t)a2);
    }
    else
    {
      return (unsigned char *)sub_191F56A84((uint64_t)result, (uint64_t)a2);
    }
  }
  return result;
}

uint64_t sub_191F56A84(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_191FB9AE8();
  swift_allocObject();
  uint64_t result = sub_191FB9A98();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

void sub_191F57224(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

id get_EXRunningUIViewServiceExtensionClass()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  unint64_t v0 = (void *)get_EXRunningUIViewServiceExtensionClass_softClass;
  uint64_t v7 = get_EXRunningUIViewServiceExtensionClass_softClass;
  if (!get_EXRunningUIViewServiceExtensionClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __get_EXRunningUIViewServiceExtensionClass_block_invoke;
    v3[3] = &unk_1E573CC00;
    v3[4] = &v4;
    __get_EXRunningUIViewServiceExtensionClass_block_invoke((uint64_t)v3);
    unint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_191F57364(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id get_EXRunningUIKitSceneHostedExtensionClass()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  unint64_t v0 = (void *)get_EXRunningUIKitSceneHostedExtensionClass_softClass;
  uint64_t v7 = get_EXRunningUIKitSceneHostedExtensionClass_softClass;
  if (!get_EXRunningUIKitSceneHostedExtensionClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __get_EXRunningUIKitSceneHostedExtensionClass_block_invoke;
    v3[3] = &unk_1E573CC00;
    v3[4] = &v4;
    __get_EXRunningUIKitSceneHostedExtensionClass_block_invoke((uint64_t)v3);
    unint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_191F57448(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id get_EXRunningUISceneExtensionClass()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2050000000;
  unint64_t v0 = (void *)get_EXRunningUISceneExtensionClass_softClass;
  uint64_t v7 = get_EXRunningUISceneExtensionClass_softClass;
  if (!get_EXRunningUISceneExtensionClass_softClass)
  {
    v3[0] = MEMORY[0x1E4F143A8];
    v3[1] = 3221225472;
    v3[2] = __get_EXRunningUISceneExtensionClass_block_invoke;
    v3[3] = &unk_1E573CC00;
    v3[4] = &v4;
    __get_EXRunningUISceneExtensionClass_block_invoke((uint64_t)v3);
    unint64_t v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_191F5752C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_191F57E0C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void ExtensionKitLibrary()
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  v1[0] = 0;
  if (!ExtensionKitLibraryCore_frameworkLibrary)
  {
    v1[1] = MEMORY[0x1E4F143A8];
    v1[2] = 3221225472;
    v1[3] = __ExtensionKitLibraryCore_block_invoke;
    v1[4] = &__block_descriptor_40_e5_v8__0l;
    v1[5] = v1;
    long long v2 = xmmword_1E573CC20;
    uint64_t v3 = 0;
    ExtensionKitLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  unint64_t v0 = (void *)v1[0];
  if (!ExtensionKitLibraryCore_frameworkLibrary)
  {
    unint64_t v0 = (void *)abort_report_np();
    goto LABEL_7;
  }
  if (v1[0]) {
LABEL_7:
  }
    free(v0);
}

uint64_t __ExtensionKitLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  ExtensionKitLibraryCore_frameworkLibrary = result;
  return result;
}

void OUTLINED_FUNCTION_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 2u);
}

void OUTLINED_FUNCTION_4(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void OUTLINED_FUNCTION_6(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void _EXExtensionInstallRunloopObserverToPingLaunchdAfterEvent()
{
  CFRunLoopRef Main = CFRunLoopGetMain();
  if (!Main) {
    _EXExtensionInstallRunloopObserverToPingLaunchdAfterEvent_cold_1();
  }
  id v1 = Main;
  long long v2 = CFRunLoopObserverCreate(0, 0xA0uLL, 0, 0, (CFRunLoopObserverCallBack)_EXExtensionPingLaunchdAfterEvent, 0);
  __EXExtensionPingLaunchdObserver = (uint64_t)v2;
  CFStringRef v3 = (const __CFString *)*MEMORY[0x1E4F1D410];

  CFRunLoopAddObserver(v1, v2, v3);
}

void _EXExtensionPingLaunchdAfterEvent()
{
  __EXExtensionPingLaunchdObserver = 0;
}

void sub_191F58B58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v7 - 64), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{
}

id _EXExtensionGetGlobalStateQueue(uint64_t a1)
{
  return +[EXConcreteExtension globalStateQueueForExtension:a1];
}

void sub_191F5A11C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  if (a2)
  {
    objc_begin_catch(exception_object);
    os_unfair_lock_unlock(v24);
    objc_exception_rethrow();
  }
  _Unwind_Resume(exception_object);
}

void EXConcreteExtensionErrorCleanupHandler(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = +[EXConcreteExtension globalStateQueueForExtension:v3];
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  v8[2] = __EXConcreteExtensionErrorCleanupHandler_block_invoke;
  v8[3] = &unk_1E573CDD8;
  id v9 = v3;
  id v10 = v4;
  id v6 = v4;
  id v7 = v3;
  dispatch_async(v5, v8);
}

id _sharedSafePluginQueue()
{
  if (_sharedSafePluginQueue_onceToken != -1) {
    dispatch_once(&_sharedSafePluginQueue_onceToken, &__block_literal_global_384);
  }
  unint64_t v0 = (void *)_sharedSafePluginQueue_q;

  return v0;
}

void sub_191F5B1C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_191F5B7D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void EXConcreteExtensionTearDownRequestWithIdentifier(void *a1, void *a2, uint64_t a3)
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a2;
  id v7 = [v5 _extensionContextForUUID:v6];
  uint64_t v8 = _EXLegacyLog();
  id v9 = v8;
  if (v7)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138543874;
      id v28 = v6;
      __int16 v29 = 2114;
      id v30 = v5;
      __int16 v31 = 1024;
      LODWORD(v32) = [v5 _plugInProcessIdentifier];
      _os_log_impl(&dword_191F29000, v9, OS_LOG_TYPE_DEFAULT, "tearing down extension request %{public}@ to extension %{public}@ (last known pid %d)", buf, 0x1Cu);
    }

    id v9 = [v7 internalImplementation];
    id v10 = [v9 _processAssertion];
    [v9 _setProcessAssertion:0];
    uint64_t v11 = [v9 _pkUUID];
    uint64_t v12 = (void *)[v11 copy];

    [v9 invalidate];
    unint64_t v13 = [v5 _extensionContexts];
    [v13 removeObjectForKey:v6];

    unint64_t v14 = [v5 _extensionServiceConnections];
    uint64_t v15 = [v14 objectForKeyedSubscript:v6];

    [v15 setInvalidationHandler:0];
    [v15 setInterruptionHandler:0];
    [v15 invalidate];
    uint64_t v16 = [v5 _extensionServiceConnections];
    [v16 removeObjectForKey:v6];

    uint64_t v17 = _EXLegacyLog();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 138543874;
      id v28 = v6;
      __int16 v29 = 2114;
      id v30 = v10;
      __int16 v31 = 2048;
      uint64_t v32 = a3;
      _os_log_debug_impl(&dword_191F29000, v17, OS_LOG_TYPE_DEBUG, "Schedule request '%{public}@' assertion (%{public}@) cleanup after %llu seconds.", buf, 0x20u);
    }

    dispatch_time_t v18 = dispatch_time(0, 1000000000 * a3);
    unint64_t v19 = +[EXConcreteExtension globalStateQueueForExtension:v5];
    v22[0] = MEMORY[0x1E4F143A8];
    v22[1] = 3221225472;
    v22[2] = __EXConcreteExtensionTearDownRequestWithIdentifier_block_invoke;
    v22[3] = &unk_1E573D148;
    id v23 = v6;
    id v24 = v10;
    id v25 = v5;
    id v26 = v12;
    id v20 = v12;
    id v21 = v10;
    dispatch_after(v18, v19, v22);
  }
  else if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
  {
    EXConcreteExtensionTearDownRequestWithIdentifier_cold_1();
  }
}

void sub_191F5BFA4(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
  {
    objc_begin_catch(exception_object);
    os_unfair_lock_unlock(v2);
    objc_exception_rethrow();
  }
  _Unwind_Resume(exception_object);
}

void sub_191F5C450(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_191F5C678(void *a1)
{
  objc_begin_catch(a1);
  os_unfair_lock_unlock(v1);
  objc_exception_rethrow();
}

void sub_191F5C68C(_Unwind_Exception *a1)
{
}

void sub_191F5CDE8(_Unwind_Exception *a1)
{
  os_activity_scope_leave((os_activity_scope_state_t)(v1 - 64));
  _Unwind_Resume(a1);
}

id EXConcreteExtensionFilterItemsWithMCProfile(void *a1, void *a2)
{
  v19[1] = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  uint64_t v15 = 0;
  uint64_t v16 = &v15;
  uint64_t v17 = 0x2050000000;
  id v5 = (void *)getMCProfileConnectionClass_softClass;
  uint64_t v18 = getMCProfileConnectionClass_softClass;
  if (!getMCProfileConnectionClass_softClass)
  {
    v14[0] = MEMORY[0x1E4F143A8];
    v14[1] = 3221225472;
    v14[2] = __getMCProfileConnectionClass_block_invoke;
    v14[3] = &unk_1E573CC00;
    v14[4] = &v15;
    __getMCProfileConnectionClass_block_invoke((uint64_t)v14);
    id v5 = (void *)v16[3];
  }
  id v6 = v5;
  _Block_object_dispose(&v15, 8);
  id v7 = [v6 sharedConnection];
  uint64_t v8 = [v3 identifier];
  v19[0] = v8;
  id v9 = [MEMORY[0x1E4F1C978] arrayWithObjects:v19 count:1];
  id v10 = [MEMORY[0x1E4F28B50] mainBundle];
  uint64_t v11 = [v10 bundleIdentifier];
  uint64_t v12 = [v7 allowedAppBundleIDsForBidirectionalDataMovementAfterApplyingFilterToBundleIDs:v9 localAppBundleID:v11 localAccountIsManaged:0];

  if (![v12 count])
  {

    id v4 = 0;
  }

  return v4;
}

void sub_191F5CFCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void EXConcreteExtensionTearDownRequestCompletion(void *a1, void *a2, void *a3)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a3;
  id v7 = a2;
  uint64_t v8 = _EXLegacyLog();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    v10[0] = 67109120;
    v10[1] = [v5 _plugInProcessIdentifier];
    _os_log_impl(&dword_191F29000, v8, OS_LOG_TYPE_DEFAULT, "in EXConcreteExtensionTearDownRequestCompletion for plugin pid %d", (uint8_t *)v10, 8u);
  }

  v6[2](v6);
  [v5 requestTeardownDelay];
  EXConcreteExtensionTearDownRequestWithIdentifier(v5, v7, (uint64_t)v9);
}

void sub_191F5D2E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_191F5D5D0(_Unwind_Exception *a1)
{
  os_activity_scope_leave((os_activity_scope_state_t)(v1 - 48));
  _Unwind_Resume(a1);
}

_EXItemProviderSandboxedResource *EXConcreteExtensionGetSandboxedResourceForItemIfNeeded(void *a1, _OWORD *a2, uint64_t a3)
{
  id v5 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 && [v5 isFileURL])
  {
    id v6 = [_EXItemProviderSandboxedResource alloc];
    long long v7 = a2[1];
    v10[0] = *a2;
    v10[1] = v7;
    uint64_t v8 = [(_EXItemProviderSandboxedResource *)v6 initWithContentsOfURL:v5 auditToken:v10 error:a3];
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

void EXConcreteExtensionCompleteItemLoading(void *a1, _OWORD *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a3;
  double v9 = a4;
  if (v8)
  {
    id v10 = 0;
    id v11 = 0;
  }
  else
  {
    id v16 = 0;
    long long v12 = a2[1];
    v15[0] = *a2;
    v15[1] = v12;
    EXConcreteExtensionGetSandboxedResourceForItemIfNeeded(v7, v15, (uint64_t)&v16);
    id v10 = (id)objc_claimAutoreleasedReturnValue();
    id v13 = v16;
    if (v13)
    {
      unint64_t v14 = v13;

      id v11 = v14;
      id v7 = 0;
      id v8 = v11;
    }
    else if (v10)
    {
      id v10 = v10;

      id v11 = 0;
      id v8 = 0;
      id v7 = v10;
    }
    else
    {
      id v11 = 0;
      id v8 = 0;
    }
  }
  v9[2](v9, v7, v8);
}

uint64_t useAssertions()
{
  if (_os_feature_enabled_impl()) {
    return 1;
  }
  uint64_t v1 = +[_EXDefaults sharedInstance];
  uint64_t v2 = [v1 platformShouldExhibitEmbeddedBehavior];

  return v2;
}

void sub_191F5EAA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_191F5F02C(void *a1)
{
  objc_begin_catch(a1);
  os_unfair_lock_unlock(v1);
  objc_exception_rethrow();
}

void sub_191F5F040(_Unwind_Exception *a1)
{
}

void EXConcreteExtensionDispatchSyncFromMainQueueToGlobalStateQueue(void *a1, void *a2)
{
  id v5 = a1;
  id v3 = a2;
  if (dyld_program_sdk_at_least())
  {
    id v4 = +[EXConcreteExtension globalStateQueueForExtension:v5];
    dispatch_sync(v4, v3);
  }
  else
  {
    v3[2](v3);
  }
}

void __EXConcreteExtensionErrorCleanupHandler_block_invoke(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) _extensionContexts];
  [v2 removeObjectForKey:*(void *)(a1 + 40)];

  id v3 = [*(id *)(a1 + 32) _extensionServiceConnections];
  [v3 removeObjectForKey:*(void *)(a1 + 40)];
}

void ___sharedSafePluginQueue_block_invoke()
{
  uint64_t v2 = dispatch_get_global_queue(0, 0);
  dispatch_queue_t v0 = dispatch_queue_create_with_target_V2("safe plugin queue for NSExtension", 0, v2);
  uint64_t v1 = (void *)_sharedSafePluginQueue_q;
  _sharedSafePluginQueue_q = (uint64_t)v0;
}

void __EXConcreteExtensionTearDownRequestWithIdentifier_block_invoke(uint64_t a1)
{
  uint64_t v2 = _EXLegacyLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    __EXConcreteExtensionTearDownRequestWithIdentifier_block_invoke_cold_1();
  }

  id v4 = *(void **)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 3221225472;
  id v6[2] = __EXConcreteExtensionTearDownRequestWithIdentifier_block_invoke_386;
  v6[3] = &unk_1E573D120;
  uint64_t v5 = *(void *)(a1 + 40);
  id v7 = *(id *)(a1 + 32);
  id v8 = *(id *)(a1 + 40);
  id v9 = *(id *)(a1 + 48);
  [v4 _safelyEndUsingRequestWithPKUUID:v3 processAssertion:v5 continuation:v6];
}

void __EXConcreteExtensionTearDownRequestWithIdentifier_block_invoke_386(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = _EXLegacyLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG)) {
    __EXConcreteExtensionTearDownRequestWithIdentifier_block_invoke_386_cold_2();
  }

  if (v3)
  {
    uint64_t v5 = _EXLegacyLog();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      __EXConcreteExtensionTearDownRequestWithIdentifier_block_invoke_386_cold_1(a1, v3);
    }
  }
  id v6 = self;
  [*(id *)(a1 + 40) invalidate];
}

void __EXConcreteExtensionGetLocalizedInfoDictionaryObjectForPlugInAndKeys_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v9 = v5;
  if (v5)
  {
    uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
    id v7 = v5;
    id v8 = *(void **)(v6 + 40);
    *(void *)(v6 + 40) = v7;
  }
  else
  {
    id v8 = [a3 localizedDescription];
    NSLog(&cfstr_UnableToResolv.isa, v8);
  }

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

Class __getMCProfileConnectionClass_block_invoke(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!ManagedConfigurationLibraryCore_frameworkLibrary)
  {
    v4[1] = MEMORY[0x1E4F143A8];
    v4[2] = 3221225472;
    v4[3] = __ManagedConfigurationLibraryCore_block_invoke;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    v4[5] = v4;
    long long v5 = xmmword_1E573D190;
    uint64_t v6 = 0;
    ManagedConfigurationLibraryCore_frameworkLibrary = _sl_dlopen();
    uint64_t v2 = (void *)v4[0];
    if (!ManagedConfigurationLibraryCore_frameworkLibrary)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("MCProfileConnection");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    uint64_t v2 = (void *)__getMCProfileConnectionClass_block_invoke_cold_1();
LABEL_8:
    free(v2);
  }
  getMCProfileConnectionClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __ManagedConfigurationLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  ManagedConfigurationLibraryCore_frameworkLibrary = result;
  return result;
}

void safelyAccessPidForExtensionIdentiferDictionary(void *a1)
{
  uint64_t v1 = a1;
  if (safelyAccessPidForExtensionIdentiferDictionary_once == -1)
  {
    if (!v1) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  id v3 = v1;
  dispatch_once(&safelyAccessPidForExtensionIdentiferDictionary_once, &__block_literal_global_404);
  uint64_t v1 = v3;
  if (v3)
  {
LABEL_3:
    uint64_t v2 = v1;
    os_unfair_lock_lock((os_unfair_lock_t)&safelyAccessPidForExtensionIdentiferDictionary___lock);
    v2[2](v2, safelyAccessPidForExtensionIdentiferDictionary___extensionIDToProcessID);
    os_unfair_lock_unlock((os_unfair_lock_t)&safelyAccessPidForExtensionIdentiferDictionary___lock);
    uint64_t v1 = v2;
  }
LABEL_4:
}

const void *__EXConcreteExtensionGetProcessIdentifierForExtensionIdentifier_block_invoke(uint64_t a1, CFDictionaryRef theDict)
{
  uint64_t result = CFDictionaryGetValue(theDict, *(const void **)(a1 + 32));
  *(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result;
  return result;
}

CFMutableDictionaryRef __safelyAccessPidForExtensionIdentiferDictionary_block_invoke()
{
  CFMutableDictionaryRef result = CFDictionaryCreateMutable(0, 0, MEMORY[0x1E4F1D530], 0);
  safelyAccessPidForExtensionIdentiferDictionary___extensionIDToProcessID = (uint64_t)result;
  return result;
}

uint64_t __EXConcreteExtensionResolveSystemExtensionPIDByIdentifier_block_invoke()
{
  EXConcreteExtensionResolveSystemExtensionPIDByIdentifier_resolution_queue = (uint64_t)dispatch_queue_create("com.apple.extension.resolution-queue", MEMORY[0x1E4F14430]);

  return MEMORY[0x1F41817F8]();
}

void __EXConcreteExtensionSetProcessIdentifierForExtensionIdentifier_block_invoke(uint64_t a1, CFMutableDictionaryRef theDict)
{
}

void OUTLINED_FUNCTION_2_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 0x1Cu);
}

void OUTLINED_FUNCTION_3_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void OUTLINED_FUNCTION_6_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0xCu);
}

void OUTLINED_FUNCTION_8(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_debug_impl(a1, log, OS_LOG_TYPE_DEBUG, a4, (uint8_t *)va, 0x16u);
}

void OUTLINED_FUNCTION_9(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

void OUTLINED_FUNCTION_10(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0x16u);
}

void OUTLINED_FUNCTION_14(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

uint64_t __Block_byref_object_copy__0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__0(uint64_t a1)
{
}

void sub_191F62444(_Unwind_Exception *a1)
{
  os_activity_scope_leave((os_activity_scope_state_t)(v1 - 48));
  _Unwind_Resume(a1);
}

void sub_191F62848(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, os_activity_scope_state_s state)
{
}

void sub_191F6296C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_191F62AC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, os_activity_scope_state_s state)
{
}

void sub_191F62C18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void _NSExtensionContextCompleteItemLoading(void *a1, void *a2, void *a3, void *a4)
{
  id object = a1;
  id v7 = a2;
  id v8 = a3;
  uint64_t v9 = a4;
  if (!v8)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v10 = v7;
      id v11 = [v10 resourceURL];
      id v7 = v10;
      if (v11)
      {
        objc_setAssociatedObject(object, v10, v10, (void *)0x301);
        id v7 = v11;
      }
    }
  }
  v9[2](v9, v7, v8);
}

void __EXExtensionCompleteRequestReturningItemsContinuation_block_invoke(uint64_t a1)
{
  state.opaque[0] = 0;
  state.opaque[1] = 0;
  os_activity_scope_enter(*(os_activity_t *)(a1 + 32), &state);
  if (*(void *)(a1 + 48))
  {
    uint64_t v2 = [MEMORY[0x1E4F28F80] processInfo];
    char v3 = objc_opt_respondsToSelector();

    if (v3)
    {
      uint64_t v4 = [MEMORY[0x1E4F28F80] processInfo];
      v11[0] = MEMORY[0x1E4F143A8];
      v11[1] = 3221225472;
      v11[2] = __EXExtensionCompleteRequestReturningItemsContinuation_block_invoke_2;
      v11[3] = &unk_1E573D298;
      id v13 = *(id *)(a1 + 48);
      id v12 = *(id *)(a1 + 40);
      [v4 performExpiringActivityWithReason:@"com.apple.extension-completion" usingBlock:v11];

      uint64_t v5 = v13;
    }
    else
    {
      id v7 = dispatch_get_global_queue(21, 0);
      v8[0] = MEMORY[0x1E4F143A8];
      v8[1] = 3221225472;
      v8[2] = __EXExtensionCompleteRequestReturningItemsContinuation_block_invoke_4;
      v8[3] = &unk_1E573CD88;
      id v10 = *(id *)(a1 + 48);
      id v9 = *(id *)(a1 + 40);
      dispatch_async(v7, v8);

      uint64_t v5 = v10;
    }
  }
  else
  {
    uint64_t v5 = [MEMORY[0x1E4F292B0] _sharedExtensionContextVendor];
    uint64_t v6 = [*(id *)(a1 + 40) _UUID];
    [v5 _tearDownContextWithUUID:v6];
  }
  os_activity_scope_leave(&state);
}

void sub_191F63B70(_Unwind_Exception *a1)
{
  os_activity_scope_leave((os_activity_scope_state_t)(v1 - 48));
  _Unwind_Resume(a1);
}

void __EXExtensionCompleteRequestReturningItemsContinuation_block_invoke_2(uint64_t a1, char a2)
{
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = _EXExtensionGetGlobalStateQueue(0);
    block[0] = MEMORY[0x1E4F143A8];
    block[1] = 3221225472;
    block[2] = __EXExtensionCompleteRequestReturningItemsContinuation_block_invoke_3;
    block[3] = &unk_1E573CBB8;
    id v6 = *(id *)(a1 + 32);
    dispatch_async(v4, block);
  }
}

void __EXExtensionCompleteRequestReturningItemsContinuation_block_invoke_3(uint64_t a1)
{
  id v3 = [MEMORY[0x1E4F292B0] _sharedExtensionContextVendor];
  uint64_t v2 = [*(id *)(a1 + 32) _UUID];
  [v3 _tearDownContextWithUUID:v2];
}

void __EXExtensionCompleteRequestReturningItemsContinuation_block_invoke_4(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  uint64_t v2 = _EXExtensionGetGlobalStateQueue(0);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = __EXExtensionCompleteRequestReturningItemsContinuation_block_invoke_5;
  block[3] = &unk_1E573CBB8;
  id v4 = *(id *)(a1 + 32);
  dispatch_async(v2, block);
}

void __EXExtensionCompleteRequestReturningItemsContinuation_block_invoke_5(uint64_t a1)
{
  id v3 = [MEMORY[0x1E4F292B0] _sharedExtensionContextVendor];
  uint64_t v2 = [*(id *)(a1 + 32) _UUID];
  [v3 _tearDownContextWithUUID:v2];
}

void sub_191F64B34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t EXExtensionIsSafeKeyPathForObject(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (!v4) {
    goto LABEL_8;
  }
  uint64_t v5 = [v3 rangeOfString:@"."];
  if (v5 != 0x7FFFFFFFFFFFFFFFLL)
  {
    uint64_t v8 = v5;
    uint64_t v9 = v6;
    id v10 = [v3 substringToIndex:v5];
    uint64_t v11 = [v3 substringFromIndex:v8 + v9];
    if ([v10 isEqualToString:@"@count"])
    {
      if ((EXExtensionIsOfSafeCollectionClassForPredicates(v4) & 1) != 0
        || (objc_getClass("NSDictionary"), (objc_opt_isKindOfClass() & 1) != 0))
      {

LABEL_8:
        uint64_t IsSafeKeyPathForObject = 1;
        goto LABEL_31;
      }
      goto LABEL_29;
    }
    if (([v10 isEqualToString:@"@avg"] & 1) != 0
      || ([v10 isEqualToString:@"@max"] & 1) != 0
      || ([v10 isEqualToString:@"@min"] & 1) != 0
      || [v10 isEqualToString:@"@sum"])
    {
      if (EXExtensionIsOfSafeCollectionClassForPredicates(v4))
      {
        id v12 = &__block_literal_global_4;
LABEL_15:
        uint64_t IsSafeKeyPathForObjectsInCollection = EXExtensionIsSafeKeyPathForObjectsInCollection(v11, v4, v12);
LABEL_16:
        uint64_t IsSafeKeyPathForObject = IsSafeKeyPathForObjectsInCollection;
LABEL_30:

        goto LABEL_31;
      }
    }
    else
    {
      if (([v10 isEqualToString:@"@distinctUnionOfObjects"] & 1) == 0
        && ![v10 isEqualToString:@"@unionOfObjects"])
      {
        if (([v10 isEqualToString:@"@distinctUnionOfArrays"] & 1) != 0
          || [v10 isEqualToString:@"@unionOfArrays"])
        {
          unint64_t v14 = "NSArray";
        }
        else
        {
          if (![v10 isEqualToString:@"@distinctUnionOfSets"])
          {
            if (EXExtensionIsSafeKeyForObject(v10, v4))
            {
              id v16 = [v4 valueForKey:v10];
              uint64_t IsSafeKeyPathForObject = EXExtensionIsSafeKeyPathForObject(v11, v16);

              goto LABEL_30;
            }
            goto LABEL_29;
          }
          unint64_t v14 = "NSSet";
        }
        Class Class = objc_getClass(v14);
        uint64_t IsSafeKeyPathForObjectsInCollection = EXExtensionIsSafeKeyPathForSubcollectionsOfClassOfCollection(v11, (uint64_t)Class, v4);
        goto LABEL_16;
      }
      if (EXExtensionIsOfSafeCollectionClassForPredicates(v4))
      {
        id v12 = &__block_literal_global_26;
        goto LABEL_15;
      }
    }
LABEL_29:
    uint64_t IsSafeKeyPathForObject = 0;
    goto LABEL_30;
  }
  uint64_t IsSafeKeyPathForObject = EXExtensionIsSafeKeyForObject(v3, v4);
LABEL_31:

  return IsSafeKeyPathForObject;
}

uint64_t EXExtensionIsSafeKeyForObject(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if ([v3 length])
  {
    if (!v4)
    {
      char v6 = 1;
      goto LABEL_14;
    }
    if ([v3 characterAtIndex:0] != 64)
    {
      objc_getClass("NSString");
      if ((objc_opt_isKindOfClass() & 1) == 0)
      {
        objc_getClass("NSDictionary");
        isKindOfClass Class = objc_opt_isKindOfClass();
        goto LABEL_13;
      }
      uint64_t v5 = @"length";
LABEL_11:
      isKindOfClass Class = [v3 isEqualToString:v5];
LABEL_13:
      char v6 = isKindOfClass;
      goto LABEL_14;
    }
    if ((EXExtensionIsOfSafeCollectionClassForPredicates(v4) & 1) != 0
      || (objc_getClass("NSDictionary"), (objc_opt_isKindOfClass() & 1) != 0))
    {
      uint64_t v5 = @"@count";
      goto LABEL_11;
    }
  }
  char v6 = 0;
LABEL_14:

  return v6 & 1;
}

uint64_t EXExtensionIsOfSafeCollectionClassForPredicates(void *a1)
{
  id v1 = a1;
  objc_getClass("NSArray");
  if (objc_opt_isKindOfClass() & 1) != 0 || (objc_getClass("NSSet"), (objc_opt_isKindOfClass()))
  {
    isKindOfClass Class = 1;
  }
  else
  {
    objc_getClass("NSOrderedSet");
    isKindOfClass Class = objc_opt_isKindOfClass();
  }

  return isKindOfClass & 1;
}

uint64_t EXExtensionIsSafeKeyPathForObjectsInCollection(void *a1, void *a2, void *a3)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  id v8 = v6;
  uint64_t v9 = [v8 countByEnumeratingWithState:&v18 objects:v22 count:16];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)v19;
    while (2)
    {
      for (uint64_t i = 0; i != v10; ++i)
      {
        if (*(void *)v19 != v11) {
          objc_enumerationMutation(v8);
        }
        id v13 = *(void **)(*((void *)&v18 + 1) + 8 * i);
        if (EXExtensionIsSafeKeyPathForObject(v5, v13))
        {
          unint64_t v14 = objc_msgSend(v13, "valueForKeyPath:", v5, (void)v18);
          int v15 = v7[2](v7, v14);

          if (v15) {
            continue;
          }
        }
        uint64_t v16 = 0;
        goto LABEL_13;
      }
      uint64_t v10 = [v8 countByEnumeratingWithState:&v18 objects:v22 count:16];
      uint64_t v16 = 1;
      if (v10) {
        continue;
      }
      break;
    }
  }
  else
  {
    uint64_t v16 = 1;
  }
LABEL_13:

  return v16;
}

uint64_t __EXExtensionIsSafeKeyPathForObject_block_invoke(uint64_t a1, void *a2)
{
  if (a2)
  {
    id v2 = a2;
    objc_getClass("NSNumber");
    isKindOfClass Class = objc_opt_isKindOfClass();
  }
  else
  {
    isKindOfClass Class = 1;
  }
  return isKindOfClass & 1;
}

BOOL __EXExtensionIsSafeKeyPathForObject_block_invoke_2(uint64_t a1, uint64_t a2)
{
  return a2 != 0;
}

uint64_t EXExtensionIsSafeKeyPathForSubcollectionsOfClassOfCollection(void *a1, uint64_t a2, void *a3)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v4 = a1;
  id v5 = a3;
  if (EXExtensionIsOfSafeCollectionClassForPredicates(v5))
  {
    long long v16 = 0u;
    long long v17 = 0u;
    long long v14 = 0u;
    long long v15 = 0u;
    id v6 = v5;
    uint64_t v7 = [v6 countByEnumeratingWithState:&v14 objects:v18 count:16];
    if (v7)
    {
      uint64_t v8 = v7;
      uint64_t v9 = *(void *)v15;
      while (2)
      {
        uint64_t v10 = 0;
        do
        {
          if (*(void *)v15 != v9) {
            objc_enumerationMutation(v6);
          }
          uint64_t v11 = *(void **)(*((void *)&v14 + 1) + 8 * v10);
          if ((objc_opt_isKindOfClass() & 1) == 0)
          {
            uint64_t v12 = 0;
            goto LABEL_13;
          }
          EXExtensionIsSafeKeyPathForObjectsInCollection(v4, v11, &__block_literal_global_146);
          ++v10;
        }
        while (v8 != v10);
        uint64_t v8 = [v6 countByEnumeratingWithState:&v14 objects:v18 count:16];
        if (v8) {
          continue;
        }
        break;
      }
    }
    uint64_t v12 = 1;
LABEL_13:
  }
  else
  {
    uint64_t v12 = 0;
  }

  return v12;
}

uint64_t EXExtensionIsPredicateSafeToExecuteWithObject(void *a1, void *a2)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  objc_getClass("NSTruePredicate");
  if (objc_opt_isKindOfClass())
  {
    id v5 = _EXLegacyLog();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      int v9 = 138412290;
      uint64_t v10 = v3;
      _os_log_impl(&dword_191F29000, v5, OS_LOG_TYPE_DEFAULT, "Use of NSTruePredicate is forbidden: %@", (uint8_t *)&v9, 0xCu);
    }
  }
  uint64_t IsSafePredicateForObjectWithSubquerySubstitutions = EXExtensionIsSafePredicateForObjectWithSubquerySubstitutions(v3, v4, MEMORY[0x1E4F1CC08]);
  if ((IsSafePredicateForObjectWithSubquerySubstitutions & 1) == 0)
  {
    uint64_t v7 = _EXLegacyLog();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v9 = 136315394;
      uint64_t v10 = "EXExtensionIsPredicateSafeToExecuteWithObject";
      __int16 v11 = 2112;
      uint64_t v12 = v3;
      _os_log_impl(&dword_191F29000, v7, OS_LOG_TYPE_DEFAULT, "%s: NSPredicate considered unsafe: %@", (uint8_t *)&v9, 0x16u);
    }
  }
  return IsSafePredicateForObjectWithSubquerySubstitutions;
}

uint64_t EXExtensionIsSafePredicateForObjectWithSubquerySubstitutions(void *a1, void *a2, void *a3)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  objc_getClass("NSCompoundPredicate");
  if (objc_opt_isKindOfClass())
  {
    long long v24 = 0u;
    long long v25 = 0u;
    long long v22 = 0u;
    long long v23 = 0u;
    objc_msgSend(v5, "subpredicates", 0);
    id v8 = (id)objc_claimAutoreleasedReturnValue();
    uint64_t v9 = [v8 countByEnumeratingWithState:&v22 objects:v26 count:16];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = *(void *)v23;
      while (2)
      {
        uint64_t v12 = 0;
        do
        {
          if (*(void *)v23 != v11) {
            objc_enumerationMutation(v8);
          }
          if (!EXExtensionIsSafePredicateForObjectWithSubquerySubstitutions(*(void *)(*((void *)&v22 + 1) + 8 * v12), v6, v7))
          {
            char IsSafeExpressionForObjectWithSubquerySubstitutions = 0;
            goto LABEL_23;
          }
          ++v12;
        }
        while (v10 != v12);
        uint64_t v10 = [v8 countByEnumeratingWithState:&v22 objects:v26 count:16];
        if (v10) {
          continue;
        }
        break;
      }
    }
    char IsSafeExpressionForObjectWithSubquerySubstitutions = 1;
    goto LABEL_23;
  }
  objc_getClass("NSComparisonPredicate");
  if (objc_opt_isKindOfClass())
  {
    id v8 = v5;
    id v14 = v6;
    id v15 = v7;
    uint64_t v16 = [v8 predicateOperatorType];
    uint64_t v17 = v16;
    if (v16 > 98)
    {
      if ((unint64_t)(v16 - 99) < 2 || (unint64_t)(v16 - 1100) < 2 || v16 == 1000)
      {
LABEL_14:
        long long v18 = [v8 leftExpression];
        if (EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions(v18, v14, v15))
        {
          uint64_t v19 = [v8 rightExpression];
          char IsSafeExpressionForObjectWithSubquerySubstitutions = EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions(v19, v14, v15);
        }
        else
        {
          char IsSafeExpressionForObjectWithSubquerySubstitutions = 0;
        }

LABEL_22:
LABEL_23:

        goto LABEL_24;
      }
    }
    else if ((unint64_t)v16 < 0xB)
    {
      goto LABEL_14;
    }
    long long v21 = _EXLegacyLog();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315394;
      id v28 = "EXExtensionIsSafePredicateOperatorTypeForObjectWithSubquerySubstitutions";
      __int16 v29 = 2048;
      uint64_t v30 = v17;
      _os_log_impl(&dword_191F29000, v21, OS_LOG_TYPE_DEFAULT, "%s: NSPredicateOperator considered unsafe: %ld", buf, 0x16u);
    }

    char IsSafeExpressionForObjectWithSubquerySubstitutions = 0;
    goto LABEL_22;
  }
  objc_getClass("NSTruePredicate");
  if (objc_opt_isKindOfClass())
  {
    char IsSafeExpressionForObjectWithSubquerySubstitutions = 1;
  }
  else
  {
    objc_getClass("NSFalsePredicate");
    char IsSafeExpressionForObjectWithSubquerySubstitutions = objc_opt_isKindOfClass();
  }
LABEL_24:

  return IsSafeExpressionForObjectWithSubquerySubstitutions & 1;
}

id _EXPredicateWithString(void *a1)
{
  id v1 = a1;
  [v1 rangeOfString:@"%"];
  if (v2)
  {
    id v3 = 0;
  }
  else
  {
    id v3 = [MEMORY[0x1E4F28F60] predicateWithFormat:v1];
  }

  return v3;
}

void sub_191F66F0C(void *a1)
{
}

id _EXExtensionMakeAndPredicate(void *a1, void *a2)
{
  _OWORD v10[2] = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  id v4 = a2;
  id v5 = v4;
  if (v3)
  {
    if (v4)
    {
      v10[0] = v3;
      v10[1] = v4;
      id v6 = [MEMORY[0x1E4F1C978] arrayWithObjects:v10 count:2];
      id v7 = _EXExtensionMakeAndPredicateWithArray(v6);

      goto LABEL_7;
    }
    id v8 = v3;
  }
  else
  {
    id v8 = v4;
  }
  id v7 = v8;
LABEL_7:

  return v7;
}

void sub_191F67708(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  uint64_t v19 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v11 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__1(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__1(uint64_t a1)
{
}

id _EXExtensionMakeAndPredicateWithArray(void *a1)
{
  id v1 = a1;
  if ((unint64_t)[v1 count] >= 2)
  {
    uint64_t v2 = [MEMORY[0x1E4F28BA0] andPredicateWithSubpredicates:v1];
LABEL_5:
    id v3 = (void *)v2;
    goto LABEL_7;
  }
  if ([v1 count] == 1)
  {
    uint64_t v2 = [v1 objectAtIndex:0];
    goto LABEL_5;
  }
  id v3 = 0;
LABEL_7:

  return v3;
}

void sub_191F68034(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _EXExtensionItemsMatchHackishRepresentationOfSharedLocationExtensionItems(void *a1)
{
  id v1 = [a1 objectForKey:@"extensionItems"];
  if (_NSIsNSArray() && [v1 count] == 1)
  {
    uint64_t v2 = [v1 firstObject];
    if (_NSIsNSDictionary() && [v2 count] == 1)
    {
      id v3 = [v2 objectForKey:@"attachments"];
      if (_NSIsNSArray()
        && (unint64_t)[v3 count] >= 3
        && (unint64_t)[v3 count] <= 3)
      {
        uint64_t v13 = [MEMORY[0x1E4F1C978] arrayWithObject:@"public.url"];
        uint64_t v12 = [MEMORY[0x1E4F1C978] arrayWithObject:@"public.plain-text"];
        id v6 = [MEMORY[0x1E4F1C978] arrayWithObject:@"com.apple.mapkit.map-item"];
        id v7 = [MEMORY[0x1E4F1C9E8] dictionaryWithObject:v13 forKey:@"registeredTypeIdentifiers"];
        id v8 = [MEMORY[0x1E4F1C9E8] dictionaryWithObject:v12 forKey:@"registeredTypeIdentifiers"];
        uint64_t v9 = [MEMORY[0x1E4F1C9E8] dictionaryWithObject:v6 forKey:@"registeredTypeIdentifiers"];
        uint64_t v10 = [MEMORY[0x1E4F1CAD0] setWithArray:v3];
        uint64_t v11 = objc_msgSend(MEMORY[0x1E4F1CAD0], "setWithObjects:", v8, v7, v9, 0);
        uint64_t v4 = [v10 isEqualToSet:v11];
      }
      else
      {
        uint64_t v4 = 0;
      }
    }
    else
    {
      uint64_t v4 = 0;
    }
  }
  else
  {
    uint64_t v4 = 0;
  }

  return v4;
}

id _EXExtensionPredicateForActivationRule(void *a1)
{
  id v1 = a1;
  objc_getClass("NSString");
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    objc_getClass("NSDictionary");
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      uint64_t v2 = _EXDefaultLog();
      if (os_log_type_enabled(v2, OS_LOG_TYPE_FAULT)) {
        _EXExtensionPredicateForActivationRule_cold_2((uint64_t)v1, v2);
      }
    }
  }
  objc_getClass("NSString");
  if (objc_opt_isKindOfClass())
  {
    _EXPredicateWithString(v1);
    id v3 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    id v4 = v1;
    if (_EXExtensionGenerateNSPredicateFromActivationDictionary_once[0] != -1) {
      dispatch_once(_EXExtensionGenerateNSPredicateFromActivationDictionary_once, &__block_literal_global_196);
    }
    id v5 = _EXLegacyLog();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG)) {
      _EXExtensionPredicateForActivationRule_cold_1((uint64_t)v4, v5);
    }

    id v6 = [(id)_EXExtensionGenerateNSPredicateFromActivationDictionary_predicateCache objectForKey:v4];
    id v7 = v6;
    if (v6)
    {
      id v3 = v6;
    }
    else
    {
      memset(v10, 0, sizeof(v10));
      if (_EXExtensionGetActivationRules_onceToken[0] != -1) {
        dispatch_once(_EXExtensionGetActivationRules_onceToken, &__block_literal_global_209);
      }
      __copy_constructor_8_8_s0_s8_s16_s24_s32_s40_s48_s56(v10, (id *)&_EXExtensionGetActivationRules__activation_rules);
      if (+[EXConcreteExtension _shouldLogExtensionDiscovery])
      {
        NSLog(&cfstr_GeneratingPred.isa, v4);
      }
      id v8 = [[_EXExtensionPredicateBuilder alloc] initWithActivationRules:v10 predicateDictionary:v4];
      id v3 = [(_EXExtensionPredicateBuilder *)v8 makePredicate];
      if (+[EXConcreteExtension _shouldLogExtensionDiscovery])
      {
        NSLog(&cfstr_GotPredicate.isa, v3);
      }
      if (v3) {
        [(id)_EXExtensionGenerateNSPredicateFromActivationDictionary_predicateCache setObject:v3 forKey:v4];
      }

      __destructor_8_s0_s8_s16_s24_s32_s40_s48_s56((uint64_t)v10);
    }
  }

  return v3;
}

void sub_191F68524(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  __destructor_8_s0_s8_s16_s24_s32_s40_s48_s56((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL __EXExtensionIsSafeKeyPathForSubcollectionsOfClassOfCollection_block_invoke(uint64_t a1, uint64_t a2)
{
  return a2 != 0;
}

uint64_t EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions(void *a1, void *a2, void *a3)
{
  uint64_t v59 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  uint64_t v8 = 1;
  switch([(__CFString *)v5 expressionType])
  {
    case 0:
    case 1:
    case 2:
    case 10:
      goto LABEL_76;
    case 3:
    case 4:
      uint64_t v9 = [(__CFString *)v5 function];
      if (([v9 isEqualToString:@"valueForKey:"] & 1) != 0
        || [v9 isEqualToString:@"valueForKeyPath:"])
      {
        uint64_t v12 = [(__CFString *)v5 arguments];
        if ([v12 count] == 1)
        {
          uint64_t v13 = [v12 firstObject];
          if (!EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions(v13, v6, v7))
          {
            uint64_t v15 = _EXLegacyLog();
            if (os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG)) {
              EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions_cold_5();
            }
            int v20 = 0;
            goto LABEL_69;
          }
          id v14 = [MEMORY[0x1E4F1CA60] dictionaryWithDictionary:v7];
          uint64_t v15 = [v13 expressionValueWithObject:v6 context:v14];

          if (!_NSIsNSString())
          {
            uint64_t v17 = _EXLegacyLog();
            if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG)) {
              EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions_cold_4((uint64_t)v15, v17);
            }
            int v20 = 0;
            goto LABEL_68;
          }
          uint64_t v16 = [(__CFString *)v5 operand];
          uint64_t v17 = v16;
          if (v16)
          {
            if (EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions(v16, v6, v7))
            {
              uint64_t v18 = [MEMORY[0x1E4F1CA60] dictionaryWithDictionary:v7];
              uint64_t v44 = [v17 expressionValueWithObject:v6 context:v18];

              if ([v9 isEqualToString:@"valueForKeyPath:"])
              {
                uint64_t v19 = v44;
                if (EXExtensionIsSafeKeyPathForObject(v15, v44))
                {
LABEL_16:
                  int v20 = 1;
LABEL_67:

LABEL_68:
LABEL_69:

                  goto LABEL_70;
                }
              }
              else
              {
                uint64_t v19 = v44;
                if (EXExtensionIsSafeKeyForObject(v15, v44)) {
                  goto LABEL_16;
                }
              }
              log = _EXLegacyLog();
              if (os_log_type_enabled(log, OS_LOG_TYPE_DEBUG))
              {
                int v41 = [v9 isEqualToString:@"valueForKeyPath:"];
                uint64_t v42 = &stru_1EE2CDC90;
                *(_DWORD *)buf = 136315906;
                uint64_t v52 = "EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions";
                __int16 v53 = 2112;
                if (v41) {
                  uint64_t v42 = @"path";
                }
                uint64_t v54 = v42;
                __int16 v55 = 2112;
                uint64_t v56 = v15;
                __int16 v57 = 2112;
                unsigned int v58 = v19;
                _os_log_debug_impl(&dword_191F29000, log, OS_LOG_TYPE_DEBUG, "%s: Key%@ \"%@\" not safe to evaluate with %@", buf, 0x2Au);
              }
            }
            else
            {
              uint64_t v44 = _EXLegacyLog();
              if (os_log_type_enabled(v44, OS_LOG_TYPE_DEBUG)) {
                EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions_cold_3();
              }
            }
          }
          else
          {
            uint64_t v38 = _EXLegacyLog();
            uint64_t v44 = v38;
            if (os_log_type_enabled(v38, OS_LOG_TYPE_DEBUG)) {
              EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions_cold_2(v38);
            }
          }
          int v20 = 0;
          goto LABEL_67;
        }
        uint64_t v13 = _EXLegacyLog();
        if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG)) {
LABEL_33:
        }
          EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions_cold_6(v12);
      }
      else
      {
        if (([v9 isEqualToString:@"from:subtract:"] & 1) == 0
          && ![v9 isEqualToString:@"add:to:"])
        {
          uint64_t v37 = _EXLegacyLog();
          if (os_log_type_enabled(v37, OS_LOG_TYPE_DEBUG)) {
            EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions_cold_10();
          }

          goto LABEL_19;
        }
        uint64_t v12 = [(__CFString *)v5 arguments];
        if ([v12 count] == 2)
        {
          uint64_t v33 = [v12 objectAtIndexedSubscript:0];
          char IsSafeExpressionForObjectWithSubquerySubstitutions = EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions(v33, v6, v7);

          if (IsSafeExpressionForObjectWithSubquerySubstitutions)
          {
            int v20 = 1;
            uint64_t v35 = [v12 objectAtIndexedSubscript:1];
            char v36 = EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions(v35, v6, v7);

            if (v36) {
              goto LABEL_71;
            }
            uint64_t v13 = _EXLegacyLog();
            if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG)) {
              EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions_cold_7(v12);
            }
          }
          else
          {
            uint64_t v13 = _EXLegacyLog();
            if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG)) {
              EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions_cold_8(v12);
            }
          }
          goto LABEL_34;
        }
        uint64_t v13 = _EXLegacyLog();
        if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG)) {
          goto LABEL_33;
        }
      }
LABEL_34:
      int v20 = 0;
LABEL_70:

LABEL_71:
      if (!v20) {
        goto LABEL_73;
      }
      goto LABEL_72;
    case 5:
    case 6:
    case 7:
      objc_getClass("NSSet");
      if ((objc_opt_isKindOfClass() & 1) == 0)
      {
        objc_getClass("NSOrderedSet");
        if ((objc_opt_isKindOfClass() & 1) == 0) {
          goto LABEL_73;
        }
      }
      uint64_t v9 = [(__CFString *)v5 leftExpression];
      if (EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions(v9, v6, v7))
      {
        uint64_t v10 = [(__CFString *)v5 rightExpression];
        char v11 = EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions(v10, v6, v7);

        if (v11) {
          goto LABEL_72;
        }
      }
      else
      {
LABEL_19:
      }
      goto LABEL_73;
    case 11:
    case 12:
    case 14:
    case 15:
    case 19:
    case 20:
      goto LABEL_73;
    case 13:
      long long v21 = [(__CFString *)v5 collection];
      if ((EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions(v21, v6, v7) & 1) == 0) {
        goto LABEL_52;
      }
      long long v22 = [MEMORY[0x1E4F1CA60] dictionaryWithDictionary:v7];
      long long v23 = [v21 expressionValueWithObject:v6 context:v22];

      if (!v23)
      {

        goto LABEL_72;
      }
      if (EXExtensionIsOfSafeCollectionClassForPredicates(v23))
      {
        uint64_t v45 = v21;
        long long v24 = (void *)[objc_alloc(MEMORY[0x1E4F1CA60]) initWithDictionary:v7];
        long long v46 = 0u;
        long long v47 = 0u;
        long long v48 = 0u;
        long long v49 = 0u;
        id v25 = v23;
        uint64_t v26 = [v25 countByEnumeratingWithState:&v46 objects:v50 count:16];
        if (!v26) {
          goto LABEL_31;
        }
        uint64_t v27 = v26;
        uint64_t v28 = *(void *)v47;
        while (1)
        {
          for (uint64_t i = 0; i != v27; ++i)
          {
            if (*(void *)v47 != v28) {
              objc_enumerationMutation(v25);
            }
            uint64_t v30 = *(void *)(*((void *)&v46 + 1) + 8 * i);
            uint64_t v31 = [(__CFString *)v5 variable];
            [v24 setObject:v30 forKey:v31];

            uint64_t v32 = [(__CFString *)v5 predicate];
            LODWORD(v31) = EXExtensionIsSafePredicateForObjectWithSubquerySubstitutions(v32, v6, v24);

            if (!v31)
            {

              goto LABEL_73;
            }
          }
          uint64_t v27 = [v25 countByEnumeratingWithState:&v46 objects:v50 count:16];
          if (!v27)
          {
LABEL_31:

LABEL_72:
            uint64_t v8 = 1;
            goto LABEL_76;
          }
        }
      }

LABEL_52:
LABEL_73:
      uint64_t v39 = _EXLegacyLog();
      if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136315394;
        uint64_t v52 = "EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions";
        __int16 v53 = 2112;
        uint64_t v54 = v5;
        _os_log_impl(&dword_191F29000, v39, OS_LOG_TYPE_DEFAULT, "%s: Expression considered unsafe: %@", buf, 0x16u);
      }

      uint64_t v8 = 0;
LABEL_76:

      return v8;
    default:
      uint64_t v9 = _EXLegacyLog();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG)) {
        EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions_cold_1();
      }
      goto LABEL_19;
  }
}

void __destructor_8_s0_s8_s16_s24_s32_s40_s48_s56(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 56);
}

id __copy_constructor_8_8_s0_s8_s16_s24_s32_s40_s48_s56(void *a1, id *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  id result = a2[7];
  a1[7] = result;
  return result;
}

void OUTLINED_FUNCTION_1_1(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x16u);
}

void sub_191F69A80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_191F6A794(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_5_1(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, v9, OS_LOG_TYPE_FAULT, a4, &a9, 0x30u);
}

void OUTLINED_FUNCTION_6_1(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, v9, OS_LOG_TYPE_FAULT, a4, &a9, 0x26u);
}

void sub_191F6BB70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__2(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__2(uint64_t a1)
{
}

uint64_t _EXAuditTokenGetPID(_OWORD *a1)
{
  long long v1 = a1[1];
  *(_OWORD *)v3.val = *a1;
  *(_OWORD *)&v3.val[4] = v1;
  return audit_token_to_pid(&v3);
}

BOOL _EXAuditTokenEqual(_OWORD *a1, _OWORD *a2)
{
  long long v4 = a1[1];
  *(_OWORD *)v11.val = *a1;
  *(_OWORD *)&v11.val[4] = v4;
  pid_t v5 = audit_token_to_pid(&v11);
  long long v6 = a2[1];
  *(_OWORD *)v11.val = *a2;
  *(_OWORD *)&v11.val[4] = v6;
  if (v5 != audit_token_to_pid(&v11)) {
    return 0;
  }
  long long v7 = a1[1];
  *(_OWORD *)v11.val = *a1;
  *(_OWORD *)&v11.val[4] = v7;
  int v8 = audit_token_to_pidversion(&v11);
  long long v9 = a2[1];
  *(_OWORD *)v11.val = *a2;
  *(_OWORD *)&v11.val[4] = v9;
  return v8 == audit_token_to_pidversion(&v11);
}

void sub_191F6D6B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 208), 8);
  os_activity_scope_leave((os_activity_scope_state_t)(v27 - 96));
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__3(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__3(uint64_t a1)
{
}

void _NSExtensionContextEmitNotifications(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a1;
  id v10 = a2;
  id v11 = a3;
  id v12 = a4;
  id v13 = a5;
  uint64_t v14 = _EXExtensionGetGlobalStateQueue(0);
  block[0] = MEMORY[0x1E4F143A8];
  block[1] = 3221225472;
  block[2] = ___NSExtensionContextEmitNotifications_block_invoke;
  block[3] = &unk_1E573CF68;
  id v21 = v10;
  id v22 = v9;
  id v23 = v11;
  id v24 = v12;
  id v25 = v13;
  id v15 = v13;
  id v16 = v12;
  id v17 = v11;
  id v18 = v9;
  id v19 = v10;
  dispatch_async(v14, block);
}

void sub_191F6ED94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getISIconClass_block_invoke(uint64_t a1)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  v3[0] = 0;
  if (!IconServicesLibraryCore_frameworkLibrary)
  {
    v3[1] = (void *)MEMORY[0x1E4F143A8];
    v3[2] = (void *)3221225472;
    v3[3] = __IconServicesLibraryCore_block_invoke;
    v3[4] = &__block_descriptor_40_e5_v8__0l;
    void v3[5] = v3;
    long long v4 = xmmword_1E573D6D0;
    uint64_t v5 = 0;
    IconServicesLibraryCore_frameworkLibrary = _sl_dlopen();
    if (!IconServicesLibraryCore_frameworkLibrary)
    {
      abort_report_np();
LABEL_8:
      __getISIconClass_block_invoke_cold_1();
    }
    if (v3[0]) {
      free(v3[0]);
    }
  }
  Class result = objc_getClass("ISIcon");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
    goto LABEL_8;
  }
  getISIconClass_softClass Class = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __IconServicesLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  IconServicesLibraryCore_frameworkLibrary = result;
  return result;
}

void OUTLINED_FUNCTION_1_3(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0xCu);
}

id _EXDiscoveryLog()
{
  if (_EXDiscoveryLog_onceToken != -1) {
    dispatch_once(&_EXDiscoveryLog_onceToken, &__block_literal_global_4);
  }
  dispatch_queue_t v0 = (void *)_EXDiscoveryLog_log;

  return v0;
}

id _EXRegistrationLog()
{
  if (_EXRegistrationLog_onceToken != -1) {
    dispatch_once(&_EXRegistrationLog_onceToken, &__block_literal_global_10);
  }
  dispatch_queue_t v0 = (void *)_EXRegistrationLog_log;

  return v0;
}

void __sdkDictionaryAdditions_block_invoke()
{
  v58[18] = *MEMORY[0x1E4F143B8];
  __int16 v55 = @"EXExtensionPointGroupExtensionPointIdentifier";
  uint64_t v56 = @"com.apple.quicklook.preview";
  v57[0] = @"com.apple.quicklook.thumbnail";
  int v20 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v56 forKeys:&v55 count:1];
  v58[0] = v20;
  v57[1] = @"com.apple.usernotifications.content-extension";
  __int16 v53 = @"EXSettingsEnablementUIHidden";
  uint64_t v0 = MEMORY[0x1E4F1CC38];
  uint64_t v54 = MEMORY[0x1E4F1CC38];
  id v19 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v54 forKeys:&v53 count:1];
  v58[1] = v19;
  v57[2] = @"com.apple.fileprovider-actionsui";
  uint64_t v51 = @"EXSettingsEnablementUIHidden";
  uint64_t v52 = v0;
  id v18 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v52 forKeys:&v51 count:1];
  v58[2] = v18;
  v57[3] = @"com.apple.FinderSync";
  long long v49 = @"EXSettingsEnablementUIHidden";
  uint64_t v50 = v0;
  id v17 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v50 forKeys:&v49 count:1];
  v58[3] = v17;
  v57[4] = @"com.apple.ctk-tokens";
  long long v47 = @"EXSettingsEnablementUIHidden";
  uint64_t v48 = v0;
  id v16 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v48 forKeys:&v47 count:1];
  v58[4] = v16;
  v57[5] = @"com.apple.AppSSO.idp-extension";
  uint64_t v45 = @"EXSettingsEnablementUIHidden";
  uint64_t v46 = v0;
  id v15 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v46 forKeys:&v45 count:1];
  v58[5] = v15;
  v57[6] = @"com.apple.appintents-extension";
  uint64_t v43 = @"EXSettingsEnablementUIHidden";
  uint64_t v44 = v0;
  uint64_t v14 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v44 forKeys:&v43 count:1];
  v58[6] = v14;
  v57[7] = @"com.apple.services";
  v41[0] = @"EXSettingsEnablementUIHidden";
  v41[1] = @"EXExtensionIconPersonality";
  v42[0] = v0;
  v42[1] = @"self";
  id v13 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v42 forKeys:v41 count:2];
  v58[7] = v13;
  v57[8] = @"com.apple.AudioUnit";
  uint64_t v39 = @"EXSettingsEnablementUIHidden";
  uint64_t v40 = v0;
  id v12 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v40 forKeys:&v39 count:1];
  v58[8] = v12;
  v57[9] = @"com.apple.AudioUnit-UI";
  uint64_t v37 = @"EXExtensionPointGroupExtensionPointIdentifier";
  uint64_t v38 = @"com.apple.AudioUnit";
  id v11 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v38 forKeys:&v37 count:1];
  v58[9] = v11;
  v57[10] = @"com.apple.usernotifications.service";
  uint64_t v35 = @"EXSettingsEnablementUIHidden";
  uint64_t v36 = v0;
  long long v1 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v36 forKeys:&v35 count:1];
  v58[10] = v1;
  v57[11] = @"com.apple.networkextension.packet-tunnel";
  uint64_t v33 = @"EXSettingsEnablementUIHidden";
  uint64_t v34 = v0;
  uint64_t v2 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v34 forKeys:&v33 count:1];
  v58[11] = v2;
  v57[12] = @"com.apple.app.non-ui-extension";
  uint64_t v31 = @"EXSettingsEnablementUIHidden";
  uint64_t v32 = v0;
  audit_token_t v3 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v32 forKeys:&v31 count:1];
  v58[12] = v3;
  v57[13] = @"com.apple.app.non-ui-extension.multiple-instances";
  __int16 v29 = @"EXSettingsEnablementUIHidden";
  uint64_t v30 = v0;
  long long v4 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v30 forKeys:&v29 count:1];
  v58[13] = v4;
  v57[14] = @"com.apple.app.ui-extension.multiple-instances";
  uint64_t v27 = @"EXSettingsEnablementUIHidden";
  uint64_t v28 = v0;
  uint64_t v5 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v28 forKeys:&v27 count:1];
  v58[14] = v5;
  v57[15] = @"com.apple.watchkit";
  id v25 = @"EXExtensionIconPersonality";
  uint64_t v26 = @"self";
  uint64_t v6 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v26 forKeys:&v25 count:1];
  v58[15] = v6;
  v57[16] = @"com.apple.message-payload-provider";
  id v23 = @"EXExtensionIconPersonality";
  id v24 = @"self";
  long long v7 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v24 forKeys:&v23 count:1];
  v58[16] = v7;
  v57[17] = @"com.apple.ui-services";
  id v21 = @"EXExtensionIconPersonality";
  id v22 = @"self";
  int v8 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v22 forKeys:&v21 count:1];
  v58[17] = v8;
  uint64_t v9 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v58 forKeys:v57 count:18];
  id v10 = (void *)sdkDictionaryAdditions_sdkDictionaryAdditions;
  sdkDictionaryAdditions_sdkDictionaryAdditions = v9;
}

objc_class *EXGetExtensionContextInternalClass()
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = (objc_class *)objc_opt_class();
  long long v1 = _EXLegacyLog();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v2 = NSStringFromClass(v0);
    int v4 = 136446466;
    uint64_t v5 = "Class EXGetExtensionContextInternalClass(void)";
    __int16 v6 = 2114;
    long long v7 = v2;
    _os_log_impl(&dword_191F29000, v1, OS_LOG_TYPE_DEFAULT, "%{public}s returning %{public}@", (uint8_t *)&v4, 0x16u);
  }

  return v0;
}

objc_class *EXGetExtensionContextVendorClass()
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = (objc_class *)objc_opt_class();
  long long v1 = _EXLegacyLog();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v2 = NSStringFromClass(v0);
    int v4 = 136446466;
    uint64_t v5 = "Class EXGetExtensionContextVendorClass(void)";
    __int16 v6 = 2114;
    long long v7 = v2;
    _os_log_impl(&dword_191F29000, v1, OS_LOG_TYPE_DEFAULT, "%{public}s returning %{public}@", (uint8_t *)&v4, 0x16u);
  }

  return v0;
}

void sub_191F7DCE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__4(uint64_t a1)
{
}

id _EXExtensionProcessMannger.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for _EXExtensionProcessMannger();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void _EXExtensionProcessMannger.processDidInvalidate(_:)(uint64_t a1)
{
  objc_super v2 = *(void **)(a1 + OBJC_IVAR____EXExtensionProcessHandle_launchConfiguration);
  audit_token_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + OBJC_IVAR____EXExtensionProcessMannger_processExtensionMapLock) + 16);
  os_unfair_lock_lock(v3);
  int v4 = *(void **)(v1 + OBJC_IVAR____EXExtensionProcessMannger_processExtensionMap);
  type metadata accessor for _EXLaunchConfiguration(0);
  if (objc_msgSend(v2, sel_isKindOfClass_, swift_getObjCClassFromMetadata()))
  {
    objc_msgSend(v4, sel_removeObjectForKey_, v2);
    os_unfair_lock_unlock(v3);
  }
  else
  {
    id v5 = objc_msgSend(self, sel__EX_parameterError);
    swift_willThrow();
    swift_unexpectedError();
    __break(1u);
  }
}

uint64_t method lookup function for _EXExtensionProcessMannger(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for _EXExtensionProcessMannger);
}

void type metadata accessor for _EXQueryResultType(uint64_t a1)
{
}

__n128 __swift_memcpy32_4(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for AuditToken(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AuditToken(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for audit_token_t(uint64_t a1)
{
}

void *sub_191F80FEC@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_191F80FFC(void *a1@<X8>)
{
  *a1 = *v1;
}

void *sub_191F81008@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_191F81014(uint64_t a1, id *a2)
{
  char v3 = sub_191FB9BD8();
  *a2 = 0;
  return v3 & 1;
}

void sub_191F810B4(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_191F810C0(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_191F810D4(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

void *sub_191F810E8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_191F810FC(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_191F81110(void *result)
{
  *v1 &= *result;
  return result;
}

uint64_t sub_191F81124@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  uint64_t v5 = sub_191FB9BC8();
  uint64_t result = sub_191F4CE58(v3, v4);
  *a2 = v5;
  return result;
}

uint64_t sub_191F81170@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_191FB9BE8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

BOOL sub_191F8119C(void *a1, void *a2)
{
  return *a1 == *a2;
}

unint64_t sub_191F811B0()
{
  unint64_t result = qword_1E92FC488;
  if (!qword_1E92FC488)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EB27BBC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92FC488);
  }
  return result;
}

uint64_t sub_191F81230(void *a1)
{
  sub_191FB9A78();
  swift_allocObject();
  sub_191FB9A68();
  sub_191FB9CE8();
  sub_191F54B74((unint64_t *)&unk_1EB27BB98);
  uint64_t v2 = sub_191FB9A58();
  unint64_t v4 = v3;
  swift_release();
  uint64_t v5 = (void *)sub_191FB9BC8();
  __int16 v6 = (void *)sub_191FB9DA8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v5, v6);

  return sub_191F4CE58(v2, v4);
}

uint64_t (*sub_191F814E0(uint64_t a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v5 = *(void *)(a2 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](a1);
  long long v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a2;
  *(void *)(v9 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, v7, a2);
  return sub_191F82194;
}

id sub_191F81698()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppExtensionWrapper();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_191F81720(uint64_t result, unsigned char **a2)
{
  objc_super v2 = *a2;
  *objc_super v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_191F81730(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

unsigned char **sub_191F8176C(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v4 = *result;
  *unint64_t v4 = a4;
  *unint64_t result = v4 + 1;
  return result;
}

uint64_t sub_191F8177C(uint64_t (*a1)(void))
{
  return a1();
}

void sub_191F817A4(uint64_t *a1, void **a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = (void *)a4();
  uint64_t v7 = *a1 + 8;
  sub_191FBA1C8();
  *a1 = v7;
  unint64_t v8 = *a2;
  if (*a2)
  {
    *unint64_t v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {
  }
}

char *sub_191F8185C(void *(*a1)(uint64_t *__return_ptr, char *, char *))
{
  v16[2] = *MEMORY[0x1E4F143B8];
  uint64_t v4 = *v1;
  unint64_t v3 = v1[1];
  uint64_t v5 = v1;
  switch(v3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)uint64_t v1 = xmmword_191FBFDD0;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v11 = v4 >> 32;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_16;
      }
      if (v11 < (int)v4) {
        goto LABEL_23;
      }
      if (sub_191FB9AA8() && __OFSUB__((int)v4, sub_191FB9AD8())) {
        goto LABEL_24;
      }
      sub_191FB9AE8();
      swift_allocObject();
      uint64_t v13 = sub_191FB9A88();
      swift_release();
      uint64_t v9 = v13;
      uint64_t v11 = v4 >> 32;
LABEL_16:
      if (v11 < (int)v4)
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
      }
      unint64_t result = sub_191F81C48((int)v4, v11, a1);
      unint64_t v12 = v9 | 0x4000000000000000;
      if (v2)
      {
        *uint64_t v5 = v4;
        goto LABEL_19;
      }
      *uint64_t v5 = v4;
      v5[1] = v12;
      break;
    case 2uLL:
      uint64_t v14 = *v1;
      uint64_t v15 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      sub_191FB9B88();
      unint64_t result = sub_191F81C48(*(void *)(v14 + 16), *(void *)(v14 + 24), a1);
      unint64_t v12 = v15 | 0x8000000000000000;
      if (v2)
      {
        *uint64_t v1 = v14;
LABEL_19:
        v5[1] = v12;
      }
      else
      {
        *uint64_t v1 = v14;
        v1[1] = v12;
      }
      break;
    case 3uLL:
      memset(v16, 0, 15);
      unint64_t result = (char *)a1(&v14, (char *)v16, (char *)v16);
      if (!v2) {
        return (char *)v14;
      }
      return result;
    default:
      v16[0] = *v1;
      LOWORD(v16[1]) = v3;
      BYTE2(v16[1]) = BYTE2(v3);
      BYTE3(v16[1]) = BYTE3(v3);
      BYTE4(v16[1]) = BYTE4(v3);
      BYTE5(v16[1]) = BYTE5(v3);
      BYTE6(v16[1]) = BYTE6(v3);
      unint64_t result = (char *)a1(&v14, (char *)v16, (char *)v16 + BYTE6(v3));
      if (!v2) {
        unint64_t result = (char *)v14;
      }
      unint64_t v8 = LODWORD(v16[1]) | ((unint64_t)BYTE4(v16[1]) << 32) | ((unint64_t)BYTE5(v16[1]) << 40) | ((unint64_t)BYTE6(v16[1]) << 48);
      *uint64_t v1 = v16[0];
      v1[1] = v8;
      return result;
  }
  return result;
}

unsigned char *sub_191F81B60@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    unint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    unint64_t result = (unsigned char *)sub_191F81D88(result, a2);
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    unint64_t result = (unsigned char *)sub_191F81E4C((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    unint64_t result = (unsigned char *)sub_191F56A84((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

void *sub_191F81BD8(void *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t result = a1(&v6, a3, a4 - a3);
    if (v4) {
      return result;
    }
    return (void *)v6;
  }
  unint64_t result = a1(&v6, 0, 0);
  if (!v4) {
    return (void *)v6;
  }
  return result;
}

char *sub_191F81C48(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  unint64_t result = (char *)sub_191FB9AA8();
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v8 = result;
  unint64_t result = (char *)sub_191FB9AD8();
  uint64_t v9 = a1 - (void)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v12 = sub_191FB9AC8();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  unint64_t result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3) {
    return (char *)v14;
  }
  return result;
}

uint64_t sub_191F81CFC@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    unint64_t result = sub_191FBA308();
    if ((v3 & 1) == 0)
    {
      uint64_t v4 = result;
      unint64_t result = swift_bridgeObjectRelease();
      *a2 = 0;
      a2[1] = 0xE000000000000000;
      a2[2] = 15;
      a2[3] = v4;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_191F81D88(unsigned char *__src, unsigned char *a2)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_191F81E4C(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_191FB9AE8();
  swift_allocObject();
  uint64_t result = sub_191FB9A98();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_191FB9B98();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_191F81EC8(uint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result <= 14)
    {
      if (result < 0) {
        __break(1u);
      }
      else {
        return 0;
      }
    }
    else
    {
      sub_191FB9AE8();
      swift_allocObject();
      sub_191FB9AB8();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_191FB9B98();
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

id sub_191F81F68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_191F814E0(a1, a2, a3);
  char v5 = (uint64_t (**)())&v3[OBJC_IVAR____TtC19ExtensionFoundation19AppExtensionWrapper__accept];
  *char v5 = v4;
  v5[1] = v6;
  uint64_t v7 = &v3[OBJC_IVAR____TtC19ExtensionFoundation19AppExtensionWrapper__handleConnection];
  *(void *)uint64_t v7 = nullsub_1;
  *((void *)v7 + 1) = 0;
  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for AppExtensionWrapper();
  return objc_msgSendSuper2(&v9, sel_init);
}

uint64_t dispatch thunk of AppExtension.configuration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of AppExtension.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of LibXPCConnectionHandlerConfiguration.handleConnection(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t objectdestroyTm()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);

  return MEMORY[0x1F4186498](v0, v4, v5);
}

uint64_t sub_191F8209C()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 24) + 8))() & 1;
}

uint64_t sub_191F8210C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);

  return MEMORY[0x1F4186498](v0, v4, v5);
}

uint64_t sub_191F82194()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 24) + 8))() & 1;
}

void *sub_191F82204@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *(uint64_t **)(v3 + 16);
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  v13[0] = v7;
  v13[1] = v6;
  void v12[2] = v13;
  uint64_t result = sub_191F81BD8((void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_191F82270, (uint64_t)v12, a1, a2);
  *a3 = result;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v11;
  return result;
}

uint64_t sub_191F82270@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_191F81CFC(a1, a2);
}

uint64_t sub_191F82290@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_191F8229C()
{
  return sub_191FBA688();
}

uint64_t sub_191F822F8()
{
  swift_bridgeObjectRetain();
  sub_191FB9E28();

  return swift_bridgeObjectRelease();
}

uint64_t sub_191F82350()
{
  return sub_191FBA688();
}

uint64_t sub_191F823A8(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_191FBA598();
  }
}

id sub_191F823D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v12[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v7 = (void *)sub_191FB9DA8();
  swift_bridgeObjectRelease();
  v12[0] = 0;
  id v8 = objc_msgSend(v4, sel_initWithIdentifier_platform_parentAppRecord_error_, v7, a3, a4, v12);

  if (v8)
  {
    id v9 = v12[0];
  }
  else
  {
    id v10 = v12[0];
    sub_191FB9B18();

    swift_willThrow();
  }
  return v8;
}

void sub_191F824BC(uint64_t a1, uint64_t a2)
{
  uint64_t active_platform = dyld_get_active_platform();
  id v6 = objc_msgSend(self, sel_bundleRecordForCurrentProcess);
  if (v6)
  {
    uint64_t v7 = v6;
    self;
    id v8 = (void *)swift_dynamicCastObjCClass();
    if (!v8) {
  }
    }
  else
  {
    id v8 = 0;
  }
  objc_allocWithZone(MEMORY[0x1E4F22448]);
  id v9 = v8;
  swift_bridgeObjectRetain();
  id v10 = sub_191F823D8(a1, a2, active_platform, (uint64_t)v8);
  if (v2)
  {
  }
  else
  {
    uint64_t v15 = v10;

    if (v15)
    {
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
  }
  id v11 = objc_allocWithZone(MEMORY[0x1E4F22448]);
  id v12 = sub_191F823D8(a1, a2, active_platform, 0);
  uint64_t v15 = v12;
  if (!v12)
  {
    sub_191FB9DC8();
    id v13 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
    uint64_t v14 = (void *)sub_191FB9DA8();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_initWithDomain_code_userInfo_, v14, 13, 0);

    swift_willThrow();
    return;
  }
LABEL_12:
  id v16 = v15;
  id v17 = objc_msgSend(v16, sel_identifier);
  sub_191FB9DC8();
}

void *initializeBufferWithCopyOfBuffer for _AppExtensionPoint(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for _AppExtensionPoint()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for _AppExtensionPoint(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *assignWithTake for _AppExtensionPoint(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for _AppExtensionPoint(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for _AppExtensionPoint(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for _AppExtensionPoint()
{
  return &type metadata for _AppExtensionPoint;
}

uint64_t sub_191F82810()
{
  return MEMORY[0x1E4FBB1B0];
}

unint64_t sub_191F82820()
{
  unint64_t result = qword_1E92FD3D0;
  if (!qword_1E92FD3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92FD3D0);
  }
  return result;
}

uint64_t sub_191F828D4()
{
  return sub_191F82958();
}

id sub_191F8295C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for _EXDiscoveryController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_191F82A0C(uint64_t (*a1)(void))
{
  return a1();
}

void (*sub_191F82A34(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(void *a1)
{
  id v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_191F82AE4(v6, a2, a3);
  return sub_191F82A9C;
}

void sub_191F82A9C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*sub_191F82AE4(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x192FEA540](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return destroy for _EXQuery.RecordQuery;
  }
  __break(1u);
  return result;
}

void destroy for _EXQuery.RecordQuery(id *a1)
{
}

uint64_t sub_191F82B6C()
{
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_191F82BAC()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_191F82BBC()
{
  uint64_t v1 = (unint64_t *)(v0 + OBJC_IVAR____EXDiscoveryController_activeQueries);
  swift_beginAccess();
  unint64_t v2 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    unint64_t v18 = 0;
    uint64_t v3 = 0;
    unint64_t v4 = 0;
    unint64_t v5 = sub_191FBA408() | 0x8000000000000000;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(v2 + 32);
    uint64_t v3 = ~v6;
    unint64_t v18 = v2 + 64;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v4 = v8 & *(void *)(v2 + 64);
    unint64_t v5 = v2;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(v3 + 64) >> 6;
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v4)
    {
      uint64_t v11 = (v4 - 1) & v4;
      unint64_t v12 = __clz(__rbit64(v4)) | (v9 << 6);
      uint64_t v13 = v9;
      goto LABEL_27;
    }
    int64_t v15 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      break;
    }
    if (v15 >= v10) {
      goto LABEL_30;
    }
    unint64_t v16 = *(void *)(v18 + 8 * v15);
    uint64_t v13 = v9 + 1;
    if (!v16)
    {
      uint64_t v13 = v9 + 2;
      if (v9 + 2 >= v10) {
        goto LABEL_30;
      }
      unint64_t v16 = *(void *)(v18 + 8 * v13);
      if (!v16)
      {
        uint64_t v13 = v9 + 3;
        if (v9 + 3 >= v10) {
          goto LABEL_30;
        }
        unint64_t v16 = *(void *)(v18 + 8 * v13);
        if (!v16)
        {
          uint64_t v13 = v9 + 4;
          if (v9 + 4 >= v10) {
            goto LABEL_30;
          }
          unint64_t v16 = *(void *)(v18 + 8 * v13);
          if (!v16)
          {
            uint64_t v17 = v9 + 5;
            while (v10 != v17)
            {
              unint64_t v16 = *(void *)(v18 + 8 * v17++);
              if (v16)
              {
                uint64_t v13 = v17 - 1;
                goto LABEL_26;
              }
            }
LABEL_30:
            sub_191F4DD64();
            return;
          }
        }
      }
    }
LABEL_26:
    uint64_t v11 = (v16 - 1) & v16;
    unint64_t v12 = __clz(__rbit64(v16)) + (v13 << 6);
LABEL_27:
    id v14 = *(id *)(*(void *)(v5 + 48) + 8 * v12);
    swift_retain();
    if (!v14) {
      goto LABEL_30;
    }
    while (1)
    {
      sub_191F3E628();
      swift_release();

      uint64_t v9 = v13;
      unint64_t v4 = v11;
      if ((v5 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (sub_191FBA438())
      {
        type metadata accessor for _EXQuery();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v14 = v19;
        swift_unknownObjectRelease();
        type metadata accessor for _EXActiveQuery();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        swift_unknownObjectRelease();
        uint64_t v13 = v9;
        uint64_t v11 = v4;
        if (v19) {
          continue;
        }
      }
      goto LABEL_30;
    }
  }
  __break(1u);
}

uint64_t sub_191F82E70()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_191FB9D28();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (void *)((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_191F442A4(0, (unint64_t *)&qword_1EB27BFC8);
  *unint64_t v5 = sub_191FBA0C8();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBD8], v2);
  char v6 = sub_191FB9D38();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v8 = sub_191FBA0C8();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v1;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_191F86684;
  *(void *)(v10 + 24) = v9;
  aBlock[4] = sub_191F8669C;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_191F35F98;
  aBlock[3] = &block_descriptor_63;
  uint64_t v11 = _Block_copy(aBlock);
  id v12 = v1;
  swift_retain();
  swift_release();
  dispatch_sync(v8, v11);

  _Block_release(v11);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
LABEL_5:
  }
    __break(1u);
  return result;
}

void sub_191F830B8(void *a1)
{
  uint64_t v2 = sub_191FB9D28();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_191F34B4C();
  sub_191F442A4(0, (unint64_t *)&qword_1EB27BFC8);
  *unint64_t v5 = sub_191FBA0C8();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBF0], v2);
  char v7 = sub_191FB9D38();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v7 & 1) == 0) {
    goto LABEL_25;
  }
  sub_191F442A4(0, &qword_1E92FC568);
  sub_191F35218();
  uint64_t v8 = (void *)sub_191FB9D48();
  objc_setAssociatedObject(a1, "_EX_assertions", v8, (void *)0x301);

  int64_t v9 = 0;
  uint64_t v10 = v6 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v6 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v9 << 6);
      goto LABEL_6;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_24;
    }
    if (v17 >= v14) {
      goto LABEL_22;
    }
    unint64_t v18 = *(void *)(v10 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_22;
      }
      unint64_t v18 = *(void *)(v10 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_22;
        }
        unint64_t v18 = *(void *)(v10 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v13 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_6:
    objc_msgSend(*(id *)(*(void *)(v6 + 56) + 8 * v16), sel_invalidate);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14)
  {
LABEL_22:
    swift_release();
    return;
  }
  unint64_t v18 = *(void *)(v10 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_22;
    }
    unint64_t v18 = *(void *)(v10 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_21;
    }
  }
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
}

void sub_191F8334C(uint64_t a1)
{
}

void sub_191F83360(uint64_t a1)
{
}

void sub_191F83374(uint64_t a1)
{
}

void sub_191F83388(uint64_t a1)
{
}

void sub_191F8339C(uint64_t a1, void **a2, void *a3)
{
  uint64_t v4 = *a2;
  unint64_t v5 = self;
  id v6 = v4;
  id v7 = objc_msgSend(v5, sel_interfaceWithProtocol_, v6);

  *a3 = v7;
}

id _EXService.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id _EXService.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for _EXService();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for _EXService()
{
  return self;
}

id _EXService.__deallocating_deinit(uint64_t a1)
{
  return sub_191F8492C(a1, type metadata accessor for _EXService);
}

id sub_191F834F4()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for Service()), sel_init);
  qword_1E92FF6E8 = (uint64_t)result;
  return result;
}

id sub_191F83524(void *a1)
{
  return sub_191F8356C(a1);
}

id sub_191F83538(void *a1)
{
  return sub_191F8356C(a1);
}

id sub_191F83554(void *a1)
{
  return sub_191F8356C(a1);
}

id sub_191F8356C(void *a1)
{
  objc_super v2 = (void *)sub_191FB9DA8();
  objc_msgSend(a1, sel_setDomain_, v2);

  uint64_t v3 = (void *)sub_191FB9DA8();
  objc_msgSend(a1, sel_setService_, v3);

  if (qword_1E92FC550 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_1E92FF6E8;

  return objc_msgSend(a1, sel_setDelegate_, v4);
}

uint64_t sub_191F83650()
{
  uint64_t v0 = sub_191FB9CF8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_191FB9D18();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191F442A4(0, &qword_1E92FC588);
  sub_191F442A4(0, (unint64_t *)&qword_1EB27BFC8);
  uint64_t v8 = (void *)sub_191FBA0C8();
  uint64_t v9 = sub_191FBA0F8();

  swift_getObjectType();
  aBlock[4] = sub_191F838B8;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_191F34288;
  aBlock[3] = &block_descriptor_66;
  uint64_t v10 = _Block_copy(aBlock);
  sub_191FB9D08();
  sub_191F83988();
  sub_191FBA108();
  _Block_release(v10);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_191FBA118();
  return v9;
}

void sub_191F838B8()
{
  if (qword_1E92FC798 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_191FB9CA8();
  __swift_project_value_buffer(v0, (uint64_t)qword_1E92FC7B0);
  uint64_t v1 = sub_191FB9C88();
  os_log_type_t v2 = sub_191FBA088();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_191F29000, v1, v2, "Received SIGTERM, exiting.", v3, 2u);
    MEMORY[0x192FEBAE0](v3, -1, -1);
  }

  exit(0);
}

uint64_t sub_191F83988()
{
  return sub_191FBA1F8();
}

id sub_191F83ACC(uint64_t a1)
{
  return sub_191F8492C(a1, type metadata accessor for Service);
}

uint64_t type metadata accessor for Service()
{
  return self;
}

uint64_t sub_191F83B54(void *a1)
{
  if (qword_1E92FC798 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_191FB9CA8();
  __swift_project_value_buffer(v2, (uint64_t)qword_1E92FC7B0);
  id v3 = a1;
  uint64_t v4 = sub_191FB9C88();
  os_log_type_t v5 = sub_191FBA058();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    id v7 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 138543362;
    id v8 = v3;
    sub_191FBA1C8();
    *id v7 = v3;

    _os_log_impl(&dword_191F29000, v4, v5, "Host XPC connection %{public}@ invalidated, invalidating associated assertions.", v6, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
    swift_arrayDestroy();
    MEMORY[0x192FEBAE0](v7, -1, -1);
    MEMORY[0x192FEBAE0](v6, -1, -1);
  }
  else
  {
  }
  return sub_191F82E70();
}

void sub_191F83E18(uint64_t a1, uint64_t a2, void *a3, void *a4, const char *a5)
{
  if (qword_1EB27BC88 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_191FB9CA8();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EB27BC70);
  swift_retain();
  uint64_t v11 = sub_191FB9C88();
  os_log_type_t v12 = sub_191FBA058();
  if (os_log_type_enabled(v11, v12))
  {
    int64_t v19 = a3;
    unint64_t v13 = (uint8_t *)swift_slowAlloc();
    int64_t v14 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v13 = 138543362;
    swift_beginAccess();
    uint64_t v15 = MEMORY[0x192FEBBF0](a1 + 16);
    sub_191FBA1C8();
    *int64_t v14 = v15;
    swift_release();
    _os_log_impl(&dword_191F29000, v11, v12, a5, v13, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
    swift_arrayDestroy();
    MEMORY[0x192FEBAE0](v14, -1, -1);
    MEMORY[0x192FEBAE0](v13, -1, -1);

    a3 = v19;
  }
  else
  {

    swift_release();
  }
  unint64_t v16 = *(void **)(a2 + OBJC_IVAR____TtC19ExtensionFoundation7Service_discoveryController);
  type metadata accessor for _EXQuery();
  if (objc_msgSend(a4, sel_isKindOfClass_, swift_getObjCClassFromMetadata()))
  {
    id v17 = a4;
    sub_191F96F4C(a3, v17, v16);
  }
  else
  {
    id v18 = objc_msgSend(self, sel__EX_parameterError);
    swift_willThrow();
    swift_unexpectedError();
    __break(1u);
  }
}

void sub_191F8425C(uint64_t a1, void *a2)
{
  os_log_type_t v5 = *(void **)(v2 + OBJC_IVAR____TtC19ExtensionFoundation32_EXConnectionActiveQueryObserver_connection);
  unint64_t v16 = sub_191F84480;
  uint64_t v17 = 0;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v13 = 1107296256;
  int64_t v14 = sub_191F8C1B0;
  uint64_t v15 = &block_descriptor_1;
  uint64_t v6 = _Block_copy(&aBlock);
  id v7 = objc_msgSend(v5, sel_remoteObjectProxyWithErrorHandler_, v6);
  _Block_release(v6);
  sub_191FBA1E8();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FD5F0);
  swift_dynamicCast();
  type metadata accessor for _EXQueryResultUpdate();
  if (objc_msgSend(a2, sel_isKindOfClass_, swift_getObjCClassFromMetadata()))
  {
    unint64_t v16 = (void (*)(void *))nullsub_1;
    uint64_t v17 = 0;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v13 = 1107296256;
    int64_t v14 = sub_191F34288;
    uint64_t v15 = &block_descriptor_13;
    id v8 = _Block_copy(&aBlock);
    id v9 = a2;
    objc_msgSend(v11, sel_query_resultDidUpdate_reply_, a1, v9, v8);
    _Block_release(v8);
    swift_unknownObjectRelease();
  }
  else
  {
    id v10 = objc_msgSend(self, sel__EX_parameterError);
    swift_willThrow();
    swift_unexpectedError();
    __break(1u);
  }
}

void sub_191F84480(void *a1)
{
  if (qword_1EB27BC88 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_191FB9CA8();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EB27BC70);
  id v3 = a1;
  id v4 = a1;
  oslog = sub_191FB9C88();
  os_log_type_t v5 = sub_191FBA068();
  if (os_log_type_enabled(oslog, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    id v7 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 138543362;
    id v8 = a1;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    sub_191FBA1C8();
    *id v7 = v10;

    _os_log_impl(&dword_191F29000, oslog, v5, "-extensionsWithQuery: failed with error: %{public}@", v6, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
    swift_arrayDestroy();
    MEMORY[0x192FEBAE0](v7, -1, -1);
    MEMORY[0x192FEBAE0](v6, -1, -1);
  }
  else
  {
  }
}

uint64_t sub_191F84674(uint64_t a1)
{
  sub_191F35F30(a1, (uint64_t)v5);
  if (!v6)
  {
    sub_191F35A6C((uint64_t)v5);
    return 0;
  }
  type metadata accessor for _EXConnectionActiveQueryObserver();
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  if (v4 == v1)
  {

    return 1;
  }
  else
  {
    id v2 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC19ExtensionFoundation32_EXConnectionActiveQueryObserver_connection], sel_isEqual_, *(void *)&v4[OBJC_IVAR____TtC19ExtensionFoundation32_EXConnectionActiveQueryObserver_connection]);
  }
  return (uint64_t)v2;
}

unint64_t sub_191F8480C()
{
  sub_191FBA2F8();
  swift_bridgeObjectRelease();
  id v1 = *(id *)(v0 + OBJC_IVAR____TtC19ExtensionFoundation32_EXConnectionActiveQueryObserver_connection);
  id v2 = objc_msgSend(v1, sel_description);
  sub_191FB9DC8();

  sub_191FB9E38();
  swift_bridgeObjectRelease();
  sub_191FB9E38();
  return 0xD000000000000025;
}

id sub_191F84910()
{
  return sub_191F8492C(0, type metadata accessor for _EXConnectionActiveQueryObserver);
}

id sub_191F8492C(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t sub_191F849F4()
{
  return type metadata accessor for _EXConnectionActiveQueryObserver();
}

uint64_t type metadata accessor for _EXConnectionActiveQueryObserver()
{
  uint64_t result = qword_1E92FD570;
  if (!qword_1E92FD570) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_191F84A48()
{
  uint64_t result = sub_191FB9C68();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_191F84AF0()
{
  return sub_191F3B15C(&qword_1E92FC6E0, MEMORY[0x1E4F27990]);
}

uint64_t sub_191F84B3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC19ExtensionFoundation32_EXConnectionActiveQueryObserver_id;
  uint64_t v4 = sub_191FB9C68();
  os_log_type_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_191F84BB4(uint64_t a1)
{
  uint64_t result = sub_191F3B15C(&qword_1E92FD5E8, (void (*)(uint64_t))type metadata accessor for _EXConnectionActiveQueryObserver);
  *(void *)(a1 + 8) = result;
  return result;
}

void sub_191F84E94(void *a1)
{
  uint64_t v2 = v1;
  id v4 = objc_msgSend(a1, sel_remoteProcess);
  if (qword_1E92FC798 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_191FB9CA8();
  __swift_project_value_buffer(v5, (uint64_t)qword_1E92FC7B0);
  uint64_t v6 = v4;
  id v7 = sub_191FB9C88();
  os_log_type_t v8 = sub_191FBA058();
  if (os_log_type_enabled(v7, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v9 = 67109120;
    LODWORD(v44) = [v6 pid];
    sub_191FBA1C8();

    _os_log_impl(&dword_191F29000, v7, v8, "Received connection request from '%d'", v9, 8u);
    MEMORY[0x192FEBAE0](v9, -1, -1);
  }
  else
  {
  }
  id v10 = objc_msgSend(a1, sel_service, v44);
  uint64_t v11 = sub_191FB9DC8();
  uint64_t v13 = v12;

  if (v11 == 0x7265766F63736944 && v13 == 0xE900000000000079)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  char v14 = sub_191FBA598();
  swift_bridgeObjectRelease();
  if (v14)
  {
LABEL_10:
    if (qword_1E92FD180 != -1) {
      goto LABEL_42;
    }
    while (1)
    {
      uint64_t v15 = &qword_1E92FFBB0;
LABEL_12:
      id v16 = (id)*v15;
      uint64_t v17 = v6;
      uint64_t v6 = v16;
      id v18 = sub_191FB9C88();
      os_log_type_t v19 = sub_191FBA088();
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v20 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v20 = 67109120;
        LODWORD(v44) = [v17 pid];
        sub_191FBA1C8();

        _os_log_impl(&dword_191F29000, v18, v19, "Starting XPC listener for connection request from '%d'", v20, 8u);
        MEMORY[0x192FEBAE0](v20, -1, -1);
      }
      else
      {

        id v18 = v17;
      }

      uint64_t v48 = nullsub_1;
      uint64_t v49 = 0;
      uint64_t v44 = MEMORY[0x1E4F143A8];
      uint64_t v45 = 1107296256;
      uint64_t v46 = sub_191F2BF10;
      long long v47 = &block_descriptor_47;
      id v21 = _Block_copy(&v44);
      swift_release();
      id v22 = objc_msgSend(a1, sel_extractNSXPCConnectionWithConfigurator_, v21);
      _Block_release(v21);
      if ((swift_isEscapingClosureAtFileLocation() & 1) == 0) {
        break;
      }
      __break(1u);
LABEL_42:
      swift_once();
    }
    objc_msgSend(v22, sel_setExportedInterface_, v6);
    objc_msgSend(v22, sel_setExportedObject_, v2);
    id v23 = objc_msgSend(a1, sel_service);
    uint64_t v24 = sub_191FB9DC8();
    uint64_t v26 = v25;

    if (v24 == 0x68636E75614CLL && v26 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v27 = sub_191FBA598();
      swift_bridgeObjectRelease();
      if ((v27 & 1) == 0)
      {
LABEL_21:
        objc_msgSend(v22, sel_activate);

        goto LABEL_22;
      }
    }
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = v22;
    uint64_t v48 = sub_191F8667C;
    uint64_t v49 = v28;
    uint64_t v44 = MEMORY[0x1E4F143A8];
    uint64_t v45 = 1107296256;
    uint64_t v46 = sub_191F34288;
    long long v47 = &block_descriptor_53;
    __int16 v29 = _Block_copy(&v44);
    id v30 = v22;
    swift_release();
    objc_msgSend(v30, sel_setInvalidationHandler_, v29);
    _Block_release(v29);
    goto LABEL_21;
  }
  id v31 = objc_msgSend(a1, sel_service);
  uint64_t v32 = sub_191FB9DC8();
  uint64_t v34 = v33;

  if (v32 == 0x68636E75614CLL && v34 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
LABEL_27:
    if (qword_1E92FC7A8 != -1) {
      swift_once();
    }
    uint64_t v15 = &qword_1E92FF708;
    goto LABEL_12;
  }
  char v35 = sub_191FBA598();
  swift_bridgeObjectRelease();
  if (v35) {
    goto LABEL_27;
  }
  id v36 = objc_msgSend(a1, sel_service);
  uint64_t v37 = sub_191FB9DC8();
  uint64_t v39 = v38;

  if (v37 == 0x79786F7250434354 && v39 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
LABEL_34:
    if (qword_1E92FD190 != -1) {
      swift_once();
    }
    uint64_t v15 = &qword_1E92FFBB8;
    goto LABEL_12;
  }
  char v40 = sub_191FBA598();
  swift_bridgeObjectRelease();
  if (v40) {
    goto LABEL_34;
  }
  uint64_t v6 = v6;
  int v41 = sub_191FB9C88();
  os_log_type_t v42 = sub_191FBA088();
  if (os_log_type_enabled(v41, v42))
  {
    uint64_t v43 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v43 = 67109120;
    LODWORD(v44) = [v6 pid];
    sub_191FBA1C8();

    _os_log_impl(&dword_191F29000, v41, v42, "No XPC interface available. XPC listener was *not* started for connection request from '%d'", v43, 8u);
    MEMORY[0x192FEBAE0](v43, -1, -1);
  }
  else
  {

    int v41 = v6;
  }

  objc_msgSend(a1, sel_invalidate);
LABEL_22:
}

void sub_191F85644(char *a1, uint64_t a2, void *a3)
{
  id v29 = objc_msgSend(self, sel_currentConnection);
  if (!v29)
  {
    _Block_release(a3);
    __break(1u);
    goto LABEL_14;
  }
  if (sub_191F418CC((uint64_t)a1))
  {
    id v5 = sub_191F3FE40(a1);
    type metadata accessor for _EXQueryResult();
    if (objc_msgSend(v5, sel_isKindOfClass_, swift_getObjCClassFromMetadata()))
    {
      uint64_t v6 = (void (*)(void *, id, void))a3[2];
      id v7 = v5;
      v6(a3, v7, 0);

      return;
    }
LABEL_14:
    _Block_release(a3);
    id v26 = objc_msgSend(self, sel__EX_parameterError);
    swift_willThrow();
    swift_unexpectedError();
    __break(1u);
    return;
  }
  os_log_type_t v8 = self;
  id v9 = (void *)sub_191FB9DA8();
  id v10 = &selRef_UUID;
  id v11 = objc_msgSend(v8, sel__EX_errorWithCode_description_, 16, v9);

  if (qword_1EB27BC88 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_191FB9CA8();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EB27BC70);
  uint64_t v13 = a1;
  id v14 = v29;
  uint64_t v15 = sub_191FB9C88();
  os_log_type_t v16 = sub_191FBA058();
  if (os_log_type_enabled(v15, v16))
  {
    id v30 = v11;
    uint64_t v17 = swift_slowAlloc();
    char v27 = (void *)swift_slowAlloc();
    uint64_t v28 = v8;
    *(_DWORD *)uint64_t v17 = 138543618;
    id v18 = a3;
    id v19 = v14;
    uint64_t v20 = v13;
    id v10 = &selRef_UUID;
    sub_191FBA1C8();
    void *v27 = v13;

    id v14 = v19;
    a3 = v18;
    *(_WORD *)(v17 + 12) = 1024;
    objc_msgSend(v14, sel_processIdentifier);
    sub_191FBA1C8();

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
    swift_arrayDestroy();
    os_log_type_t v8 = v28;
    MEMORY[0x192FEBAE0](v27, -1, -1);
    uint64_t v21 = v17;
    id v11 = v30;
    MEMORY[0x192FEBAE0](v21, -1, -1);
  }
  else
  {
  }
  sub_191FBA2F8();
  swift_bridgeObjectRelease();
  id v22 = objc_msgSend(v13, sel_description);
  sub_191FB9DC8();

  sub_191FB9E38();
  swift_bridgeObjectRelease();
  sub_191FB9E38();
  id v23 = (void *)sub_191FB9DA8();
  swift_bridgeObjectRelease();
  id v24 = objc_msgSend(v8, v10[11], 16, v23);

  uint64_t v25 = (void *)sub_191FB9B08();
  ((void (*)(void *, void, void *))a3[2])(a3, 0, v25);
}

id sub_191F85AE0(void *a1)
{
  uint64_t v3 = v1;
  sub_191FB9C58();
  *(void *)&v3[OBJC_IVAR____TtC19ExtensionFoundation32_EXConnectionActiveQueryObserver_connection] = a1;
  id v4 = a1;
  sub_191FBA2F8();
  swift_bridgeObjectRelease();
  strcpy(v9, "Active query: ");
  v9[15] = -18;
  sub_191FB9C68();
  sub_191F3B15C((unint64_t *)&qword_1EB27BCA0, MEMORY[0x1E4F27990]);
  sub_191FBA578();
  sub_191FB9E38();
  swift_bridgeObjectRelease();
  sub_191FB9E38();
  unsigned int v8 = objc_msgSend(v4, sel_processIdentifier);
  sub_191FBA578();
  sub_191FB9E38();
  swift_bridgeObjectRelease();
  sub_191FB9E18();
  swift_bridgeObjectRelease();
  uint64_t v5 = os_transaction_create();
  id result = (id)swift_release();
  if (v5)
  {
    *(void *)&v3[OBJC_IVAR____TtC19ExtensionFoundation32_EXConnectionActiveQueryObserver_transaction] = v5;

    v7.receiver = v3;
    v7.super_class = (Class)type metadata accessor for _EXConnectionActiveQueryObserver();
    return objc_msgSendSuper2(&v7, sel_init);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_191F85C9C(void *a1, uint64_t a2, char *a3, void (**a4)(void, void))
{
  id v8 = objc_msgSend(self, sel_currentConnection);
  if (!v8)
  {
    _Block_release(a4);
    __break(1u);
    goto LABEL_16;
  }
  id v9 = v8;
  type metadata accessor for _EXQuery();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  if ((objc_msgSend(a1, sel_isKindOfClass_, ObjCClassFromMetadata) & 1) == 0)
  {
LABEL_16:
    _Block_release(a4);
    id v42 = objc_msgSend(self, sel__EX_parameterError);
    swift_willThrow();
    swift_unexpectedError();
    __break(1u);
    goto LABEL_17;
  }
  id v11 = a1;
  char v12 = sub_191F418CC((uint64_t)v11);

  if ((v12 & 1) == 0)
  {
    if (qword_1EB27BC88 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_191FB9CA8();
    __swift_project_value_buffer(v33, (uint64_t)qword_1EB27BC70);
    id v34 = v11;
    id v30 = v9;
    char v35 = sub_191FB9C88();
    os_log_type_t v36 = sub_191FBA058();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v45 = (void *)swift_slowAlloc();
      HIDWORD(aBlock) = HIDWORD(v34);
      *(_DWORD *)uint64_t v37 = 138543618;
      id v38 = v34;
      sub_191FBA1C8();
      void *v45 = v34;

      *(_WORD *)(v37 + 12) = 1024;
      LODWORD(aBlock) = objc_msgSend(v30, sel_processIdentifier);
      sub_191FBA1C8();

      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
      swift_arrayDestroy();
      MEMORY[0x192FEBAE0](v45, -1, -1);
      MEMORY[0x192FEBAE0](v37, -1, -1);
    }
    else
    {
    }
    uint64_t v39 = self;
    sub_191FBA2F8();
    swift_bridgeObjectRelease();
    unint64_t aBlock = 0xD000000000000022;
    unint64_t v47 = 0x8000000191FC6670;
    id v40 = objc_msgSend(v34, sel_description);
    sub_191FB9DC8();

    sub_191FB9E38();
    swift_bridgeObjectRelease();
    sub_191FB9E38();
    int v41 = (void *)sub_191FB9DA8();
    swift_bridgeObjectRelease();
    id v15 = objc_msgSend(v39, sel__EX_errorWithCode_description_, 16, v41);

    uint64_t v32 = sub_191FB9B08();
    id v9 = (void *)v32;
    goto LABEL_14;
  }
  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F29268]), sel_initWithListenerEndpoint_, a2);
  if (qword_1E92FD198 != -1) {
    swift_once();
  }
  objc_msgSend(v13, sel_setRemoteObjectInterface_, qword_1E92FFBC0, a4);
  id v14 = objc_allocWithZone((Class)type metadata accessor for _EXConnectionActiveQueryObserver());
  id v15 = v13;
  id v16 = sub_191F85AE0(v15);

  uint64_t v17 = *(void **)&a3[OBJC_IVAR____TtC19ExtensionFoundation7Service_discoveryController];
  id v18 = v16;
  if (objc_msgSend(v11, sel_isKindOfClass_, ObjCClassFromMetadata))
  {
    id v19 = v11;
    sub_191F96518((uint64_t)v18, v19, v17);

    uint64_t v20 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v21 = (void *)swift_allocObject();
    v21[2] = v20;
    v21[3] = a3;
    v21[4] = v18;
    uint64_t v21[5] = v19;
    uint64_t v50 = sub_191F86598;
    uint64_t v51 = v21;
    unint64_t aBlock = MEMORY[0x1E4F143A8];
    unint64_t v47 = 1107296256;
    uint64_t v48 = sub_191F34288;
    uint64_t v49 = &block_descriptor_37;
    id v22 = _Block_copy(&aBlock);
    id v23 = v19;
    id v24 = v18;
    uint64_t v25 = a3;
    swift_release();
    objc_msgSend(v15, sel_setInvalidationHandler_, v22);
    _Block_release(v22);
    uint64_t v26 = swift_allocObject();
    swift_unknownObjectWeakInit();
    char v27 = (void *)swift_allocObject();
    v27[2] = v26;
    v27[3] = v25;
    v27[4] = v24;
    v27[5] = v23;
    uint64_t v50 = sub_191F86618;
    uint64_t v51 = v27;
    unint64_t aBlock = MEMORY[0x1E4F143A8];
    unint64_t v47 = 1107296256;
    uint64_t v48 = sub_191F34288;
    uint64_t v49 = &block_descriptor_44;
    uint64_t v28 = _Block_copy(&aBlock);
    id v29 = v23;
    id v30 = v24;
    id v31 = v25;
    swift_release();
    objc_msgSend(v15, sel_setInterruptionHandler_, v28);
    _Block_release(v28);
    objc_msgSend(v15, sel_activate);
    uint64_t v32 = 0;
    a4 = (void (**)(void, void))v44;
LABEL_14:
    a4[2](a4, v32);

    return;
  }
LABEL_17:
  _Block_release(v44);
  id v43 = objc_msgSend(self, sel__EX_parameterError);
  swift_willThrow();
  swift_unexpectedError();
  __break(1u);
}

void sub_191F8636C(uint64_t a1, uint64_t a2)
{
  v11[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v3 = self;
  id v4 = (void *)sub_191FB9C08();
  v11[0] = 0;
  LODWORD(v3) = objc_msgSend(v3, sel_photoServiceAuthorizationStatusWithExtensionUUID_error_, v4, v11);

  if (v3)
  {
    uint64_t v5 = *(void (**)(uint64_t, uint64_t, void))(a2 + 16);
    id v6 = v11[0];
    v5(a2, 1, 0);
  }
  else
  {
    id v7 = v11[0];
    id v8 = (void *)sub_191FB9B18();

    swift_willThrow();
    id v9 = (void *)sub_191FB9B08();
    id v10 = (void *)sub_191FB9B08();
    (*(void (**)(uint64_t, void, void *))(a2 + 16))(a2, 0, v10);
  }
}

uint64_t sub_191F8648C()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_191F864C4()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_191F86504()
{
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_191F8654C()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_191F8655C()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_191F86598()
{
  sub_191F83E18(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), "Connection invalidated: %{public}@");
}

uint64_t objectdestroy_33Tm()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_191F86618()
{
  sub_191F83E18(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), "Connection interupted: %{public}@");
}

uint64_t sub_191F86644()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_191F8667C()
{
  return sub_191F83B54(*(void **)(v0 + 16));
}

void sub_191F86684()
{
  sub_191F830B8(*(void **)(v0 + 16));
}

uint64_t sub_191F8668C()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_191F866F4(unint64_t a1, void (*a2)(uint64_t))
{
  if (qword_1EB27BBA8 != -1) {
    swift_once();
  }
  id v4 = (char *)sub_191F3DEA4(a1);
  uint64_t v5 = *(void *)&v4[OBJC_IVAR____EXQueryResult_identities];
  swift_bridgeObjectRetain();

  if (v5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = MEMORY[0x1E4FBC870];
  }
  if (v5) {
    BOOL v7 = 1;
  }
  else {
    BOOL v7 = (MEMORY[0x1E4FBC860] & 0xC000000000000000) == 0;
  }
  if (!v7)
  {
    if (sub_191FBA478())
    {
      sub_191F93C8C(MEMORY[0x1E4FBC860]);
      uint64_t v6 = v10;
    }
    else
    {
      uint64_t v6 = MEMORY[0x1E4FBC870];
    }
  }
  uint64_t v8 = sub_191F52C28(v6);
  swift_bridgeObjectRelease();
  a2(v8);

  return swift_release();
}

uint64_t sub_191F86810(uint64_t a1, void (*a2)(uint64_t))
{
  if (*(void *)(a1 + OBJC_IVAR____EXQueryResult_identities))
  {
    uint64_t v3 = *(void *)(a1 + OBJC_IVAR____EXQueryResult_identities);
  }
  else if ((MEMORY[0x1E4FBC860] & 0xC000000000000000) != 0 && sub_191FBA478())
  {
    sub_191F93C8C(MEMORY[0x1E4FBC860]);
    uint64_t v3 = v6;
  }
  else
  {
    uint64_t v3 = MEMORY[0x1E4FBC870];
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_191F52C28(v3);
  swift_bridgeObjectRelease();
  a2(v4);

  return swift_release();
}

id sub_191F868D0()
{
  sub_191F86B48();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for QueryController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_191F86A20()
{
  return type metadata accessor for QueryController();
}

void sub_191F86A28(uint64_t a1)
{
  if (!*(void *)(a1 + OBJC_IVAR____EXQueryResult_identities)
    && (MEMORY[0x1E4FBC860] & 0xC000000000000000) != 0
    && sub_191FBA478())
  {
    sub_191F93C8C(MEMORY[0x1E4FBC860]);
  }
  id v1 = objc_allocWithZone((Class)_EXQueryResultUpdate);
  sub_191F442A4(0, (unint64_t *)&qword_1EB27BCB0);
  sub_191F3B0F4();
  swift_bridgeObjectRetain();
  objc_super v2 = (void *)sub_191FB9FA8();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_initWithIdentities_, v2);

  sub_191F3A588(v3);
}

void sub_191F86B48()
{
  if (qword_1EB27BC88 != -1) {
LABEL_22:
  }
    swift_once();
  uint64_t v1 = sub_191FB9CA8();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EB27BC70);
  objc_super v2 = (char *)(id)v0;
  id v3 = sub_191FB9C88();
  os_log_type_t v4 = sub_191FBA058();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138543362;
    v24[0] = v2;
    BOOL v7 = v2;
    sub_191FBA1C8();
    *uint64_t v6 = v2;

    _os_log_impl(&dword_191F29000, v3, v4, "Suspending Query observer: '%{public}@'", v5, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
    swift_arrayDestroy();
    MEMORY[0x192FEBAE0](v6, -1, -1);
    MEMORY[0x192FEBAE0](v5, -1, -1);
  }
  else
  {
  }
  id v8 = objc_msgSend(self, sel_sharedInstance);
  unsigned int v9 = objc_msgSend(v8, sel_preferInProcessDiscovery);

  if (!v9)
  {
    if (qword_1E92FC760 != -1) {
      swift_once();
    }
    v24[3] = type metadata accessor for QueryController();
    uint64_t v25 = sub_191F3B1A4((unint64_t *)&unk_1E92FD600, (void (*)(uint64_t))type metadata accessor for QueryController);
    v24[0] = v2;
    MEMORY[0x1F4188790](v25);
    uint64_t v20 = v19 + 4;
    uint64_t v21 = v2;
    os_unfair_lock_lock(v20);
    sub_191F87E7C(v22);
    os_unfair_lock_unlock(v20);
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v24);

    return;
  }
  unint64_t v0 = *(void *)&v2[OBJC_IVAR____TtC19ExtensionFoundation15QueryController__queries];
  if (!(v0 >> 62))
  {
    uint64_t v10 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v10) {
      goto LABEL_8;
    }
LABEL_24:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v10 = sub_191FBA478();
  swift_bridgeObjectRelease();
  if (!v10) {
    goto LABEL_24;
  }
LABEL_8:
  id v11 = v2;
  type metadata accessor for _EXQuery();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v13 = 4;
  while (1)
  {
    if ((v0 & 0xC000000000000001) != 0) {
      id v14 = (id)MEMORY[0x192FEA540](v13 - 4, v0);
    }
    else {
      id v14 = *(id *)(v0 + 8 * v13);
    }
    id v15 = v14;
    uint64_t v16 = v13 - 3;
    if (__OFADD__(v13 - 4, 1))
    {
      __break(1u);
      goto LABEL_22;
    }
    if (qword_1EB27BBA8 != -1) {
      swift_once();
    }
    uint64_t v17 = (void *)qword_1EB27C518;
    if (!objc_msgSend(v15, sel_isKindOfClass_, ObjCClassFromMetadata)) {
      break;
    }
    id v18 = v15;
    sub_191F96F80(v11, v18, v17);

    ++v13;
    if (v16 == v10) {
      goto LABEL_24;
    }
  }
  id v23 = objc_msgSend(self, sel__EX_parameterError);
  swift_willThrow();
  swift_unexpectedError();
  __break(1u);
}

uint64_t sub_191F86F8C()
{
  uint64_t v0 = sub_191FBA0B8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_191FBA0A8();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_191FB9D18();
  MEMORY[0x1F4188790](v5 - 8);
  sub_191F442A4(0, (unint64_t *)&qword_1EB27BFC8);
  sub_191FB9D08();
  v7[1] = MEMORY[0x1E4FBC860];
  sub_191F3B1A4((unint64_t *)&qword_1EB27BE80, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BE58);
  sub_191F39B40((unint64_t *)&qword_1EB27BE70, &qword_1EB27BE58);
  sub_191FBA1F8();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCC58], v0);
  uint64_t result = sub_191FBA0E8();
  qword_1E92FC460 = result;
  return result;
}

unint64_t sub_191F872AC()
{
  return 0xD000000000000012;
}

void *destroy for QueryController.Callbacks(void *result)
{
  uint64_t v1 = result;
  if (*result) {
    uint64_t result = (void *)swift_release();
  }
  if (v1[2])
  {
    return (void *)swift_release();
  }
  return result;
}

void *initializeWithCopy for QueryController.Callbacks(void *a1, void *a2)
{
  if (*a2)
  {
    uint64_t v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  uint64_t v5 = a2[2];
  if (v5)
  {
    uint64_t v6 = a2[3];
    a1[2] = v5;
    a1[3] = v6;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
  }
  return a1;
}

void *assignWithCopy for QueryController.Callbacks(void *a1, void *a2)
{
  uint64_t v4 = *a2;
  if (*a1)
  {
    if (v4)
    {
      uint64_t v5 = a2[1];
      *a1 = v4;
      a1[1] = v5;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = a2[1];
    *a1 = v4;
    a1[1] = v6;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v7 = a2[2];
  if (!a1[2])
  {
    if (v7)
    {
      uint64_t v9 = a2[3];
      a1[2] = v7;
      a1[3] = v9;
      swift_retain();
      return a1;
    }
LABEL_14:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    return a1;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v8 = a2[3];
  a1[2] = v7;
  a1[3] = v8;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void *assignWithTake for QueryController.Callbacks(void *a1, void *a2)
{
  uint64_t v4 = *a2;
  if (*a1)
  {
    if (v4)
    {
      uint64_t v5 = a2[1];
      *a1 = v4;
      a1[1] = v5;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = a2[1];
    *a1 = v4;
    a1[1] = v6;
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v7 = a2[2];
  if (!a1[2])
  {
    if (v7)
    {
      uint64_t v9 = a2[3];
      a1[2] = v7;
      a1[3] = v9;
      return a1;
    }
LABEL_14:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    return a1;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v8 = a2[3];
  a1[2] = v7;
  a1[3] = v8;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for QueryController.Callbacks(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for QueryController.Callbacks(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for QueryController.Callbacks()
{
  return &type metadata for QueryController.Callbacks;
}

void sub_191F876E8(uint64_t a1, void *a2)
{
  sub_191F442A4(0, &qword_1E92FC6C8);
  if (objc_msgSend(a2, sel_isKindOfClass_, swift_getObjCClassFromMetadata()))
  {
    self;
    uint64_t v3 = (void *)swift_dynamicCastObjCClassUnconditional();
    id v5 = a2;
    sub_191F3A588(v3);
  }
  else
  {
    id v4 = objc_msgSend(self, sel__EX_parameterError);
    swift_willThrow();
    swift_unexpectedError();
    __break(1u);
  }
}

uint64_t sub_191F877E8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_191F877FC(uint64_t a1)
{
  uint64_t result = sub_191F3B1A4(&qword_1E92FD5F8, (void (*)(uint64_t))type metadata accessor for QueryController);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_191F87854(unint64_t a1)
{
  id v2 = objc_msgSend(self, sel_sharedInstance);
  unsigned int v3 = objc_msgSend(v2, sel_preferInProcessDiscovery);

  if (v3)
  {
    if (qword_1EB27BBA8 != -1) {
      swift_once();
    }
    id v4 = (char *)sub_191F3DEA4(a1);
  }
  else
  {
    if (qword_1E92FC760 != -1) {
      swift_once();
    }
    id v4 = (char *)sub_191F8F124(a1);
  }
  id v5 = v4;
  if (*(void *)&v4[OBJC_IVAR____EXQueryResult_identities])
  {
    uint64_t v6 = *(void *)&v4[OBJC_IVAR____EXQueryResult_identities];
  }
  else if ((MEMORY[0x1E4FBC860] & 0xC000000000000000) != 0 && sub_191FBA478())
  {
    sub_191F93C8C(MEMORY[0x1E4FBC860]);
    uint64_t v6 = v9;
  }
  else
  {
    uint64_t v6 = MEMORY[0x1E4FBC870];
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_191F52C28(v6);

  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_191F879BC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_191FB9CF8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_191FB9D18();
  uint64_t v10 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  char v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = objc_msgSend(self, sel_sharedInstance);
  unsigned int v14 = objc_msgSend(v13, sel_preferInProcessDiscovery);

  if (v14)
  {
    uint64_t v20 = v7;
    if (qword_1E92FC468 != -1) {
      swift_once();
    }
    id v15 = (void *)swift_allocObject();
    _OWORD v15[2] = a1;
    v15[3] = a2;
    v15[4] = a3;
    aBlock[4] = sub_191F87E20;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_191F34288;
    aBlock[3] = &block_descriptor_2;
    uint64_t v16 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_191FB9D08();
    uint64_t v22 = MEMORY[0x1E4FBC860];
    sub_191F3B1A4((unint64_t *)&qword_1EB27BD30, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BD00);
    sub_191F39B40((unint64_t *)&qword_1EB27BD40, (uint64_t *)&unk_1EB27BD00);
    sub_191FBA1F8();
    MEMORY[0x192FEA2E0](0, v12, v9, v16);
    _Block_release(v16);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v21);
    return swift_release();
  }
  else
  {
    if (qword_1E92FC760 != -1) {
      swift_once();
    }
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = a2;
    *(void *)(v18 + 24) = a3;
    swift_retain();
    sub_191F8F298(a1, (uint64_t)sub_191F87DD8, v18);
    return swift_release();
  }
}

uint64_t sub_191F87DA0()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_191F87DD8(uint64_t a1)
{
  return sub_191F86810(a1, *(void (**)(uint64_t))(v1 + 16));
}

uint64_t sub_191F87DE0()
{
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_191F87E20()
{
  return sub_191F866F4(*(void *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24));
}

uint64_t sub_191F87E2C()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_191F87E7C(uint64_t a1)
{
  return sub_191F902E4(a1, *(void **)(v1 + 16), *(char **)(v1 + 24));
}

uint64_t sub_191F87E98(uint64_t a1)
{
  return sub_191F8FE1C(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_191F87EB4()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_191F87EEC(uint64_t a1)
{
}

uint64_t AppExtensionXPCConfiguration.init(connectionHandler:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t sub_191F87EFC()
{
  return 0;
}

Swift::Bool __swiftcall AppExtensionXPCConfiguration.accept(connection:)(NSXPCConnection connection)
{
  return 0;
}

uint64_t AppExtensionXPCConfiguration.handleConnection(_:)()
{
  return (*v0)();
}

uint64_t sub_191F87F34()
{
  return (*v0)();
}

void *initializeBufferWithCopyOfBuffer for AppExtensionXPCConfiguration(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for AppExtensionXPCConfiguration()
{
  return swift_release();
}

void *assignWithCopy for AppExtensionXPCConfiguration(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for AppExtensionXPCConfiguration(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for _EXActiveQuery.ActiveQueryObserver(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for _EXActiveQuery.ActiveQueryObserver(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppExtensionXPCConfiguration()
{
  return &type metadata for AppExtensionXPCConfiguration;
}

uint64_t static _EXQuery.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t sub_191F886E0(void *a1)
{
  uint64_t v3 = (void *)sub_191FBA1B8();
  id v4 = (void *)sub_191FB9DA8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v3, v4);

  uint64_t v5 = *(unsigned __int8 *)(v1 + OBJC_IVAR____EXQuery_allowsDuplicates);
  uint64_t v6 = (void *)sub_191FB9DA8();
  objc_msgSend(a1, sel_encodeBool_forKey_, v5, v6);

  uint64_t v7 = *(unsigned __int8 *)(v1 + OBJC_IVAR____EXQuery_includePostprocessing);
  uint64_t v8 = (void *)sub_191FB9DA8();
  objc_msgSend(a1, sel_encodeBool_forKey_, v7, v8);

  uint64_t v9 = *(unsigned __int8 *)(v1 + OBJC_IVAR____EXQuery_excludeLockedApps);
  uint64_t v10 = (void *)sub_191FB9DA8();
  objc_msgSend(a1, sel_encodeBool_forKey_, v9, v10);

  uint64_t v11 = v1 + OBJC_IVAR____EXQuery_inner;
  swift_beginAccess();
  sub_191F41D54(v11, (uint64_t)v15);
  uint64_t v12 = v16;
  uint64_t v13 = v17;
  __swift_project_boxed_opaque_existential_2Tm(v15, v16);
  (*(void (**)(void *, uint64_t, uint64_t))(v13 + 88))(a1, v12, v13);
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v15);
}

id _EXQuery.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = sub_191F89D78(a1);

  return v4;
}

id _EXQuery.init(coder:)(void *a1)
{
  id v2 = sub_191F89D78(a1);

  return v2;
}

void sub_191F88980(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = (void *)sub_191FB9DA8();
  id v6 = objc_msgSend(a1, sel_decodeIntegerForKey_, v5);

  if (v6 == (id)1)
  {
    sub_191F89B74(a1);
    if (!v2)
    {
      a2[3] = (uint64_t)&type metadata for _EXQuery.RecordQuery;
      a2[4] = (uint64_t)&off_1EE2CB0A0;
      uint64_t v7 = swift_allocObject();
      *a2 = v7;
      long long v8 = v14;
      *(_OWORD *)(v7 + 16) = v13;
      *(_OWORD *)(v7 + 32) = v8;
      *(void *)(v7 + 48) = v15;
    }
  }
  else if (v6)
  {
    sub_191FBA458();
    __break(1u);
  }
  else
  {
    sub_191F8995C(a1, (uint64_t)v11);
    if (!v2)
    {
      a2[3] = (uint64_t)&type metadata for _EXQuery.ValuesQuery;
      a2[4] = (uint64_t)&off_1EE2CB180;
      uint64_t v9 = swift_allocObject();
      *a2 = v9;
      long long v10 = v11[1];
      *(_OWORD *)(v9 + 16) = v11[0];
      *(_OWORD *)(v9 + 32) = v10;
      *(_OWORD *)(v9 + 48) = v11[2];
      *(_DWORD *)(v9 + 64) = v12;
    }
  }
}

id sub_191F88B40(void *a1)
{
  uint64_t v2 = v1;
  id v4 = objc_msgSend(a1, sel_extensionPointIdentifier);
  uint64_t v5 = sub_191FB9DC8();
  uint64_t v7 = v6;

  uint64_t v8 = v2 + OBJC_IVAR____EXQuery_inner;
  swift_beginAccess();
  sub_191F41D54(v8, (uint64_t)v18);
  uint64_t v9 = v19;
  uint64_t v10 = v20;
  __swift_project_boxed_opaque_existential_2Tm(v18, v19);
  uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
  uint64_t v13 = v12;
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v18);
  if (v13)
  {
    if (v5 == v11 && v13 == v7) {
      char v15 = 1;
    }
    else {
      char v15 = sub_191FBA598();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v17 = *(void *)(v2 + OBJC_IVAR____EXQuery_predicate);
    id result = (id)((v17 == 0) & v15);
    if (v17)
    {
      if (v15) {
        return objc_msgSend(*(id *)(v2 + OBJC_IVAR____EXQuery_predicate), sel_evaluateWithObject_, a1);
      }
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

id _EXQuery.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for _EXQuery();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_191F88D74(void *a1)
{
  sub_191F429B4(v1, (uint64_t)v7);
  sub_191F429B4((uint64_t)v7, (uint64_t)v8);
  if (v8[1])
  {
    id v3 = (void *)sub_191FB9DA8();
    id v4 = (void *)sub_191FB9DA8();
    objc_msgSend(a1, sel_encodeObject_forKey_, v3, v4);
  }
  uint64_t v5 = (void *)sub_191FBA698();
  uint64_t v6 = (void *)sub_191FB9DA8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v5, v6);
}

unint64_t sub_191F88E5C()
{
  v5[0] = 0;
  v5[1] = 0xE000000000000000;
  sub_191FBA2F8();
  swift_bridgeObjectRelease();
  unint64_t v3 = 0xD00000000000001ALL;
  unint64_t v4 = 0x8000000191FC6B30;
  sub_191F429B4(v0, (uint64_t)v5);
  sub_191F429B4((uint64_t)v5, (uint64_t)v2);
  sub_191F8A6D0(v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BCA8);
  sub_191FB9E08();
  sub_191FB9E38();
  swift_bridgeObjectRelease();
  sub_191FB9E38();
  v2[0] = *(_DWORD *)(v0 + 16);
  sub_191FBA578();
  sub_191FB9E38();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_191F88F70(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *objc_super v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t sub_191F88FA8(uint64_t result)
{
  *(_DWORD *)(v1 + 16) = result;
  return result;
}

void sub_191F88FB0(void *a1)
{
}

unint64_t sub_191F88FF4()
{
  return sub_191F88E5C();
}

uint64_t sub_191F89038()
{
  id v1 = objc_msgSend(*v0, sel_identifier);
  uint64_t v2 = sub_191FB9DC8();

  return v2;
}

void sub_191F89090()
{
  swift_bridgeObjectRelease();
  if (qword_1E92FC798 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_191FB9CA8();
  __swift_project_value_buffer(v0, (uint64_t)qword_1E92FC7B0);
  oslog = sub_191FB9C88();
  os_log_type_t v1 = sub_191FBA068();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v2 = 0;
    MEMORY[0x192FEBAE0](v2, -1, -1);
  }
}

uint64_t sub_191F89180()
{
  return *(void *)(v0 + 8);
}

id sub_191F8918C()
{
  return objc_msgSend(*v0, sel_platform);
}

void sub_191F8919C()
{
  if (qword_1E92FC798 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_191FB9CA8();
  __swift_project_value_buffer(v0, (uint64_t)qword_1E92FC7B0);
  oslog = sub_191FB9C88();
  os_log_type_t v1 = sub_191FBA068();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v2 = 0;
    MEMORY[0x192FEBAE0](v2, -1, -1);
  }
}

uint64_t sub_191F89284()
{
  os_log_type_t v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BE50);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_191FBFCE0;
  *(void *)(v2 + 32) = v1;
  uint64_t v5 = v2;
  sub_191FB9EF8();
  id v3 = v1;
  return v5;
}

void sub_191F892F4(void *a1)
{
  id v3 = objc_msgSend(*v1, sel_persistentIdentifier);
  uint64_t v4 = sub_191FB9BE8();
  unint64_t v6 = v5;
  uint64_t v7 = (void *)sub_191FB9BC8();
  sub_191F4CE58(v4, v6);

  id v8 = (id)sub_191FB9DA8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v7, v8);
}

void sub_191F895A0(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FD648);
  id v3 = (id)sub_191FB9EC8();
  (*(void (**)(uint64_t, id))(a2 + 16))(a2, v3);
}

uint64_t sub_191F896A4(unint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3 = a1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FD648);
    uint64_t v5 = sub_191FBA468();
    swift_bridgeObjectRelease();
    uint64_t v3 = v5;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_191FBA5A8();
  }
  a2(v3);

  return swift_bridgeObjectRelease();
}

id sub_191F8982C(void *a1)
{
  *(void *)&v1[OBJC_IVAR____EXQuery_resultType] = 0;
  *(void *)&v1[OBJC_IVAR____EXQuery_predicate] = 0;
  v1[OBJC_IVAR____EXQuery_includePostprocessing] = 0;
  uint64_t v3 = OBJC_IVAR____EXQuery_allowsDuplicates;
  uint64_t v4 = self;
  uint64_t v5 = v1;
  id v6 = objc_msgSend(v4, sel_sharedInstance);
  unsigned __int8 v7 = objc_msgSend(v6, sel_queryAllowsDuplicates);

  v1[v3] = v7;
  v5[OBJC_IVAR____EXQuery_excludeLockedApps] = 0;
  id v8 = a1;
  uint64_t v9 = (long long *)_EXAuditTokenForCurrentProcess();
  uint64_t v10 = (uint64_t *)&v5[OBJC_IVAR____EXQuery_inner];
  uint64_t v11 = swift_allocObject();
  long long v12 = *v9;
  long long v13 = v9[1];
  void v10[3] = (uint64_t)&type metadata for _EXQuery.RecordQuery;
  _OWORD v10[4] = (uint64_t)&off_1EE2CB0A0;
  uint64_t *v10 = v11;
  *(void *)(v11 + 16) = v8;
  *(_OWORD *)(v11 + 24) = v12;
  *(_OWORD *)(v11 + 40) = v13;

  v15.receiver = v5;
  v15.super_class = (Class)type metadata accessor for _EXQuery();
  return objc_msgSendSuper2(&v15, sel_init);
}

void sub_191F8995C(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_191F442A4(0, &qword_1E92FC850);
  uint64_t v4 = (void *)sub_191FBA128();
  if (v4)
  {
    long long v13 = 0uLL;
    sub_191FB9DB8();

    uint64_t v4 = 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)sub_191FB9DA8();
  unint64_t v6 = (unint64_t)objc_msgSend(a1, sel_decodeIntegerForKey_, v5);

  if ((v6 & 0x8000000000000000) != 0 || HIDWORD(v6))
  {
    sub_191FBA448();
    __break(1u);
  }
  else
  {
    self;
    unsigned __int8 v7 = (void *)swift_dynamicCastObjCClass();
    if (v7 && (id v8 = objc_msgSend(v7, sel_connection)) != 0)
    {
      id v9 = v8;
      objc_msgSend(v8, sel_auditToken);
      long long v11 = v14;
      long long v12 = v13;
      swift_bridgeObjectRelease();

      a1 = v9;
    }
    else
    {
      uint64_t v10 = (long long *)_EXAuditTokenForCurrentProcess();
      long long v11 = v10[1];
      long long v12 = *v10;
      swift_bridgeObjectRelease();
    }

    *(void *)a2 = 0;
    *(void *)(a2 + 8) = v4;
    *(_DWORD *)(a2 + 16) = v6;
    *(_OWORD *)(a2 + 20) = v12;
    *(_OWORD *)(a2 + 36) = v11;
  }
}

void sub_191F89B74(void *a1)
{
  sub_191F442A4(0, &qword_1E92FC770);
  uint64_t v2 = sub_191FBA128();
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    sub_191FB9BD8();
  }
  objc_msgSend(self, sel__EX_parameterError);
  swift_willThrow();
}

id sub_191F89D78(void *a1)
{
  uint64_t v3 = OBJC_IVAR____EXQuery_resultType;
  *(void *)&v1[OBJC_IVAR____EXQuery_resultType] = 0;
  *(void *)&v1[OBJC_IVAR____EXQuery_predicate] = 0;
  uint64_t v4 = OBJC_IVAR____EXQuery_includePostprocessing;
  v1[OBJC_IVAR____EXQuery_includePostprocessing] = 0;
  uint64_t v5 = OBJC_IVAR____EXQuery_allowsDuplicates;
  unint64_t v6 = self;
  unsigned __int8 v7 = v1;
  id v8 = objc_msgSend(v6, sel_sharedInstance);
  unsigned __int8 v9 = objc_msgSend(v8, sel_queryAllowsDuplicates);

  v1[v5] = v9;
  uint64_t v10 = OBJC_IVAR____EXQuery_excludeLockedApps;
  v7[OBJC_IVAR____EXQuery_excludeLockedApps] = 0;
  long long v11 = (void *)sub_191FB9DA8();
  unint64_t v12 = (unint64_t)objc_msgSend(a1, sel_decodeIntegerForKey_, v11);

  if ((v12 & 0x8000000000000000) != 0)
  {
    sub_191FBA448();
    __break(1u);
    id result = (id)swift_unexpectedError();
    __break(1u);
  }
  else
  {
    *(void *)&v1[v3] = v12;
    long long v13 = (void *)sub_191FB9DA8();
    unsigned __int8 v14 = objc_msgSend(a1, sel_decodeBoolForKey_, v13);

    v1[v5] = v14;
    objc_super v15 = (void *)sub_191FB9DA8();
    unsigned __int8 v16 = objc_msgSend(a1, sel_decodeBoolForKey_, v15);

    v1[v4] = v16;
    uint64_t v17 = (void *)sub_191FB9DA8();
    LOBYTE(v15) = objc_msgSend(a1, sel_decodeBoolForKey_, v17);

    v7[v10] = (_BYTE)v15;
    uint64_t v18 = (objc_class *)type metadata accessor for _EXQuery();
    sub_191F88980(a1, (uint64_t *)v21);
    sub_191F41528(v21, (uint64_t)&v7[OBJC_IVAR____EXQuery_inner]);

    v20.receiver = v7;
    v20.super_class = v18;
    return objc_msgSendSuper2(&v20, sel_init);
  }
  return result;
}

uint64_t method lookup function for _EXQuery(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for _EXQuery);
}

uint64_t dispatch thunk of _EXQuery.encode(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of _EXQuery.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 360))();
}

uint64_t dispatch thunk of _EXQuery.copy(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x170))();
}

uint64_t sub_191F8A098(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_191F8A0AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_191F8A0C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_191F8A0D4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_191F8A0E8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_191F8A0FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t sub_191F8A110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t sub_191F8A124(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t sub_191F8A138(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))() & 1;
}

uint64_t sub_191F8A16C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t sub_191F8A194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t sub_191F8A1A8()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_191F8A1E0(uint64_t a1)
{
  sub_191F895A0(a1, *(void *)(v1 + 16));
}

uint64_t sub_191F8A1E8()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_191F8A220(unint64_t a1)
{
  return sub_191F896A4(a1, *(void (**)(uint64_t))(v1 + 16));
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_191F8A28C()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 68, 7);
}

uint64_t sub_191F8A2C4()
{
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t initializeWithCopy for _EXQuery.RecordQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for _EXQuery.RecordQuery(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for _EXQuery.RecordQuery(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for _EXQuery.RecordQuery(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for _EXQuery.RecordQuery(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for _EXQuery.RecordQuery()
{
  return &type metadata for _EXQuery.RecordQuery;
}

uint64_t initializeWithCopy for _EXQuery.ValuesQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 20) = *(_OWORD *)(a2 + 20);
  *(_OWORD *)(a1 + 36) = *(_OWORD *)(a2 + 36);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for _EXQuery.ValuesQuery(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  return a1;
}

__n128 __swift_memcpy52_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for _EXQuery.ValuesQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for _EXQuery.ValuesQuery(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 52)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for _EXQuery.ValuesQuery(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 52) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 52) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for _EXQuery.ValuesQuery()
{
  return &type metadata for _EXQuery.ValuesQuery;
}

uint64_t sub_191F8A6D0(uint64_t a1)
{
  return a1;
}

uint64_t sub_191F8A6FC(uint64_t a1)
{
  return a1;
}

id sub_191F8A738()
{
  *(void *)&v0[OBJC_IVAR____EXHostConfiguration__extensionIdentity] = 0;
  uint64_t v1 = &v0[OBJC_IVAR____EXHostConfiguration_interruptionHandler];
  *(void *)uint64_t v1 = 0;
  *((void *)v1 + 1) = 0;
  *(void *)&v0[OBJC_IVAR____EXHostConfiguration_instanceIdentifier] = 0;
  *(void *)&v0[OBJC_IVAR____EXHostConfiguration_preferredLanguages] = 0;
  *(void *)&v0[OBJC_IVAR____EXHostConfiguration_additionalEnvironmentVariables] = MEMORY[0x1E4FBC868];
  uint64_t v2 = &v0[OBJC_IVAR____EXHostConfiguration_sandboxProfileName];
  *(void *)uint64_t v2 = 0;
  *((void *)v2 + 1) = 0;
  *(void *)&v0[OBJC_IVAR____EXHostConfiguration_launchPersona] = 0;
  uint64_t v3 = OBJC_IVAR____EXHostConfiguration_assertionAttributes;
  int v4 = v0;
  *(void *)&v0[v3] = sub_191F45CC0();
  v4[OBJC_IVAR____EXHostConfiguration_requireInvalidation] = 0;
  long long v5 = &v4[OBJC_IVAR____EXHostConfiguration_networkApplicationID];
  uint64_t v6 = sub_191FB9CE8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);

  v8.receiver = v4;
  v8.super_class = (Class)type metadata accessor for _EXHostConfiguration();
  return objc_msgSendSuper2(&v8, sel_init);
}

id _EXHostConfiguration.__allocating_init(with:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = objc_allocWithZone((Class)type metadata accessor for _EXHostConfiguration());
  id v5 = sub_191F45B68(a1, 0);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v5;
}

uint64_t sub_191F8A928(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BE10);
  MEMORY[0x1F4188790](v3 - 8);
  id v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = *(id *)a1;
  self;
  unsigned __int8 v7 = (void *)swift_dynamicCastObjCClassUnconditional();
  id v8 = objc_allocWithZone(v1);
  id v9 = objc_allocWithZone((Class)type metadata accessor for _EXHostConfiguration());
  uint64_t v10 = (char *)sub_191F45B68(v7, 0);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  uint64_t v11 = *(void *)(a1 + 16);
  unint64_t v12 = &v10[OBJC_IVAR____EXHostConfiguration_interruptionHandler];
  uint64_t v13 = *(void *)&v10[OBJC_IVAR____EXHostConfiguration_interruptionHandler];
  *(void *)unint64_t v12 = *(void *)(a1 + 8);
  *((void *)v12 + 1) = v11;
  unsigned __int8 v14 = v10;
  swift_retain();
  sub_191F45B24(v13);
  objc_super v15 = *(void **)(a1 + 24);
  if (!v15) {
    goto LABEL_4;
  }
  type metadata accessor for _EXExtensionInstanceIdentifier();
  if (objc_msgSend(v15, sel_isKindOfClass_, swift_getObjCClassFromMetadata()))
  {
    uint64_t v16 = swift_dynamicCastClassUnconditional();
    uint64_t v17 = *(void **)&v14[OBJC_IVAR____EXHostConfiguration_instanceIdentifier];
    *(void *)&v14[OBJC_IVAR____EXHostConfiguration_instanceIdentifier] = v16;

LABEL_4:
    *(void *)&v14[OBJC_IVAR____EXHostConfiguration_preferredLanguages] = *(void *)(a1 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v18 = *(void *)(a1 + 56);
    uint64_t v19 = &v14[OBJC_IVAR____EXHostConfiguration_sandboxProfileName];
    *(void *)uint64_t v19 = *(void *)(a1 + 48);
    *((void *)v19 + 1) = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)&v14[OBJC_IVAR____EXHostConfiguration_additionalEnvironmentVariables] = *(void *)(a1 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    objc_super v20 = *(void **)(a1 + 64);
    uint64_t v21 = *(void **)&v14[OBJC_IVAR____EXHostConfiguration_launchPersona];
    *(void *)&v14[OBJC_IVAR____EXHostConfiguration_launchPersona] = v20;
    id v22 = v20;

    *(void *)&v14[OBJC_IVAR____EXHostConfiguration_assertionAttributes] = *(void *)(a1 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v14[OBJC_IVAR____EXHostConfiguration_requireInvalidation] = *(unsigned char *)(a1 + 80);
    uint64_t v23 = type metadata accessor for _AppExtensionProcess.Configuration(0);
    sub_191F4CBD8(a1 + *(int *)(v23 + 52), (uint64_t)v5, &qword_1EB27BE10);
    sub_191F38778(a1, type metadata accessor for _AppExtensionProcess.Configuration);
    uint64_t v24 = (uint64_t)&v14[OBJC_IVAR____EXHostConfiguration_networkApplicationID];
    swift_beginAccess();
    sub_191F45790((uint64_t)v5, v24);
    swift_endAccess();

    return (uint64_t)v14;
  }
  id v26 = objc_msgSend(self, sel__EX_parameterError);
  swift_willThrow();
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

id _EXHostConfiguration.init(with:)(void *a1)
{
  id v2 = objc_allocWithZone((Class)type metadata accessor for _EXHostConfiguration());
  id v3 = sub_191F45B68(a1, 0);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v3;
}

id _EXHostConfiguration.__allocating_init(with:instanceIdentifier:)(void *a1, void *a2)
{
  id v5 = objc_allocWithZone(v2);
  id v6 = sub_191F45B68(a1, a2);

  return v6;
}

id _EXHostConfiguration.init(with:instanceIdentifier:)(void *a1, void *a2)
{
  id v4 = sub_191F45B68(a1, a2);

  return v4;
}

uint64_t sub_191F8B340@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BE10);
  uint64_t result = MEMORY[0x1F4188790](v4 - 8);
  unsigned __int8 v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v8 = *(void **)(v1 + OBJC_IVAR____EXHostConfiguration__extensionIdentity);
  if (v8)
  {
    id v9 = *(void **)(v1 + OBJC_IVAR____EXHostConfiguration_instanceIdentifier);
    uint64_t v10 = (objc_class *)type metadata accessor for _EXHostConfiguration();
    id v11 = objc_allocWithZone(v10);
    id v12 = v9;
    id v13 = v8;
    unsigned __int8 v14 = sub_191F45B68(v13, v9);

    uint64_t v15 = *(void *)(v2 + OBJC_IVAR____EXHostConfiguration_interruptionHandler);
    uint64_t v16 = *(void *)(v2 + OBJC_IVAR____EXHostConfiguration_interruptionHandler + 8);
    uint64_t v17 = (uint64_t *)&v14[OBJC_IVAR____EXHostConfiguration_interruptionHandler];
    uint64_t v18 = *(void *)&v14[OBJC_IVAR____EXHostConfiguration_interruptionHandler];
    *uint64_t v17 = v15;
    v17[1] = v16;
    sub_191F45B34(v15);
    sub_191F45B24(v18);
    *(void *)&v14[OBJC_IVAR____EXHostConfiguration_preferredLanguages] = *(void *)(v2
                                                                                     + OBJC_IVAR____EXHostConfiguration_preferredLanguages);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)&v14[OBJC_IVAR____EXHostConfiguration_additionalEnvironmentVariables] = *(void *)(v2
                                                                                                 + OBJC_IVAR____EXHostConfiguration_additionalEnvironmentVariables);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v19 = *(void **)(v2 + OBJC_IVAR____EXHostConfiguration_launchPersona);
    objc_super v20 = *(void **)&v14[OBJC_IVAR____EXHostConfiguration_launchPersona];
    *(void *)&v14[OBJC_IVAR____EXHostConfiguration_launchPersona] = v19;
    id v21 = v19;

    *(void *)&v14[OBJC_IVAR____EXHostConfiguration_assertionAttributes] = *(void *)(v2
                                                                                      + OBJC_IVAR____EXHostConfiguration_assertionAttributes);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v14[OBJC_IVAR____EXHostConfiguration_requireInvalidation] = *(unsigned char *)(v2
                                                                         + OBJC_IVAR____EXHostConfiguration_requireInvalidation);
    uint64_t v22 = v2 + OBJC_IVAR____EXHostConfiguration_networkApplicationID;
    swift_beginAccess();
    sub_191F4CBD8(v22, (uint64_t)v7, &qword_1EB27BE10);
    uint64_t v23 = (uint64_t)&v14[OBJC_IVAR____EXHostConfiguration_networkApplicationID];
    swift_beginAccess();
    sub_191F45790((uint64_t)v7, v23);
    uint64_t result = swift_endAccess();
    a1[3] = v10;
    *a1 = v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_191F8B614()
{
  uint64_t v1 = v0;
  uint64_t v12 = 0;
  unint64_t v13 = 0xE000000000000000;
  sub_191FBA2F8();
  v11.receiver = v0;
  v11.super_class = (Class)type metadata accessor for _EXHostConfiguration();
  id v2 = objc_msgSendSuper2(&v11, sel_description);
  uint64_t v3 = sub_191FB9DC8();
  unint64_t v5 = v4;
  swift_bridgeObjectRelease();

  uint64_t v12 = v3;
  unint64_t v13 = v5;
  uint64_t result = sub_191FB9E38();
  unsigned __int8 v7 = *(void **)&v0[OBJC_IVAR____EXHostConfiguration__extensionIdentity];
  if (v7)
  {
    id v8 = v7;
    id v9 = objc_msgSend(v8, sel_description);
    sub_191FB9DC8();

    sub_191FB9E38();
    swift_bridgeObjectRelease();
    sub_191FB9E38();
    id v10 = *(id *)&v1[OBJC_IVAR____EXHostConfiguration_instanceIdentifier];
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BD20);
    sub_191FB9E08();
    sub_191FB9E38();
    swift_bridgeObjectRelease();
    return v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id _EXHostConfiguration.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for _EXHostConfiguration();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_191F8B8D8()
{
  uint64_t v1 = getpid();
  id v2 = objc_msgSend(self, sel_identifierWithPid_, v1);
  if (qword_1E92FC798 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_191FB9CA8();
  __swift_project_value_buffer(v3, (uint64_t)qword_1E92FC7B0);
  id v4 = v0;
  id v5 = v2;
  id v6 = v4;
  id v7 = v5;
  id v8 = sub_191FB9C88();
  os_log_type_t v9 = sub_191FBA088();
  if (os_log_type_enabled(v8, v9))
  {
    id v21 = v2;
    uint64_t v10 = swift_slowAlloc();
    objc_super v11 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 138543618;
    id v12 = v6;
    sub_191FBA1C8();
    void *v11 = v6;

    *(_WORD *)(v10 + 12) = 2114;
    if (v7)
    {
      id v13 = v7;
      sub_191FBA1C8();
      id v14 = v21;
    }
    else
    {
      sub_191FBA1C8();
      id v14 = 0;
    }
    v11[1] = v14;

    _os_log_impl(&dword_191F29000, v8, v9, "Vending RBSProcessIdentity for: %{public}@ with host: %{public}@", (uint8_t *)v10, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
    swift_arrayDestroy();
    MEMORY[0x192FEBAE0](v11, -1, -1);
    MEMORY[0x192FEBAE0](v10, -1, -1);
  }
  else
  {
  }
  if (v7)
  {
    uint64_t v15 = (char *)v6;
    id v16 = v7;
    uint64_t v17 = (void *)sub_191F45550(v15);
    id v18 = objc_msgSend(v17, sel_rbsProcessIdentityWithHost_, v16);
    if (!v18) {
      __break(1u);
    }
    id v19 = v18;

    return (uint64_t)v19;
  }
  else
  {
    uint64_t result = sub_191FBA458();
    __break(1u);
  }
  return result;
}

uint64_t sub_191F8BBEC()
{
  self;
  uint64_t v1 = swift_dynamicCastObjCClass();
  if (v1)
  {
    id v2 = (void *)v1;
    id v3 = objc_allocWithZone((Class)type metadata accessor for _EXHostConfiguration());
    id v4 = sub_191F45B68(v2, 0);
    swift_unknownObjectRelease();
    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return (uint64_t)v4;
  }
  else
  {
    id v6 = v0;
    sub_191FBA2F8();
    sub_191FB9E38();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FD648);
    sub_191FBA3F8();
    uint64_t result = sub_191FBA458();
    __break(1u);
  }
  return result;
}

uint64_t sub_191F8BE6C()
{
  self;
  uint64_t v1 = swift_dynamicCastObjCClass();
  if (v1)
  {
    *(void *)&v0[OBJC_IVAR____EXHostConfiguration__extensionIdentity] = v1;
  }
  else
  {
    sub_191FBA2F8();
    sub_191FB9E38();
    objc_msgSend(v0, sel_extension);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FD648);
    sub_191FBA3F8();
    swift_unknownObjectRelease();
    sub_191FBA458();
    __break(1u);
  }
  return MEMORY[0x1F41817F8]();
}

uint64_t sub_191F8BF9C()
{
  return type metadata accessor for _EXHostConfiguration();
}

uint64_t method lookup function for _EXHostConfiguration(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for _EXHostConfiguration);
}

uint64_t dispatch thunk of _EXHostConfiguration.__allocating_init(with:instanceIdentifier:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of _EXHostConfiguration.copy(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1B8))();
}

uint64_t sub_191F8C00C(uint64_t a1, void *a2)
{
  id v3 = v2;
  self;
  uint64_t v5 = swift_dynamicCastObjCClass();
  if (v5)
  {
    uint64_t v6 = v5;
    swift_unknownObjectRetain();
    id v7 = objc_msgSend(v3, sel_initWithExtensionIdentity_instanceIdentifier_, v6, a2);
    swift_unknownObjectRelease();

    return (uint64_t)v7;
  }
  else
  {
    sub_191FBA2F8();
    sub_191FB9E38();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FD648);
    sub_191FBA3F8();
    uint64_t result = sub_191FBA458();
    __break(1u);
  }
  return result;
}

uint64_t sub_191F8C13C()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_191F8C174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_191F8C188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_191F8C19C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

void sub_191F8C1B0(uint64_t a1, void *a2)
{
  id v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_191F8C218(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *))(v2 + 16))((char *)v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0) + 16);
  sub_191FBA298();
  swift_beginAccess();
  sub_191F9F55C((uint64_t)v6, (uint64_t)v5);
  sub_191F91D9C((uint64_t)v6);
  return swift_endAccess();
}

uint64_t sub_191F8C31C(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  (*(void (**)(unsigned char *))(v2 + 16))((unsigned char *)v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0) + 16);
  sub_191FBA298();
  swift_beginAccess();
  sub_191FA2618((uint64_t)v5, (uint64_t)v6);
  sub_191F91D9C((uint64_t)v5);
  sub_191F4CB7C((uint64_t)v6, (uint64_t *)&unk_1E92FD810);
  return swift_endAccess();
}

uint64_t sub_191F8C430()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  int64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2) {
    return v3;
  }
  uint64_t v20 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  sub_191FA8854(0, v2, 0);
  uint64_t result = sub_191FA3954(v1);
  uint64_t v5 = result;
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(v1 + 32))
  {
    if (((*(void *)(v1 + 56 + (((unint64_t)v5 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
      goto LABEL_15;
    }
    if (*(_DWORD *)(v1 + 36) != v7) {
      goto LABEL_16;
    }
    sub_191F91D40(*(void *)(v1 + 48) + 40 * v5, (uint64_t)v17);
    v15[0] = v17[0];
    v15[1] = v17[1];
    uint64_t v16 = v18;
    sub_191F91D40((uint64_t)v15, (uint64_t)v14);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92FDCE0);
    swift_dynamicCast();
    sub_191F91D9C((uint64_t)v15);
    uint64_t v3 = v20;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_191FA8854(0, *(void *)(v3 + 16) + 1, 1);
      uint64_t v3 = v20;
    }
    unint64_t v11 = *(void *)(v3 + 16);
    unint64_t v10 = *(void *)(v3 + 24);
    if (v11 >= v10 >> 1)
    {
      sub_191FA8854(v10 > 1, v11 + 1, 1);
      uint64_t v3 = v20;
    }
    *(void *)(v3 + 16) = v11 + 1;
    sub_191F41528(&v19, v3 + 40 * v11 + 32);
    uint64_t result = sub_191FA39F8(v5, v7, v9 & 1, v1);
    uint64_t v5 = result;
    uint64_t v7 = v12;
    char v9 = v13 & 1;
    if (!--v2)
    {
      sub_191F91DF0(result, v12, v13 & 1);
      swift_bridgeObjectRelease();
      return v3;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_191F8C634()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186488](v0, 24, 7);
}

void sub_191F8C66C()
{
  id Strong = (id)swift_unknownObjectUnownedLoadStrong();
  swift_unknownObjectWeakAssign();
}

uint64_t sub_191F8C7BC(uint64_t a1)
{
  sub_191F35F30(a1, (uint64_t)v6);
  if (!v7)
  {
    sub_191F4CB7C((uint64_t)v6, &qword_1EB27BDE0);
    goto LABEL_6;
  }
  type metadata accessor for _EXActiveClientQuery();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_6:
    char v3 = 0;
    return v3 & 1;
  }
  if (v5 == v1)
  {

    char v3 = 1;
  }
  else
  {
    sub_191F442A4(0, (unint64_t *)&unk_1EB27BCF0);
    id v2 = *(id *)&v5[OBJC_IVAR____TtC19ExtensionFoundationP33_591406279EDD09BF7033B88E7B83DCFD20_EXActiveClientQuery_query];
    char v3 = sub_191FBA168();
  }
  return v3 & 1;
}

id sub_191F8C970()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for _EXActiveClientQuery();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for _EXActiveClientQuery()
{
  return self;
}

uint64_t type metadata accessor for _EXActiveClientQuery.ServiceClientObserverSet()
{
  return self;
}

id sub_191F8CA5C()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for _EXServiceClient()), sel_init);
  qword_1E92FF700 = (uint64_t)result;
  return result;
}

id sub_191F8CAE8()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE40);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (os_unfair_lock_s *)(*(void *)(v1 + OBJC_IVAR____EXServiceClient_connectionLock) + 16);
  os_unfair_lock_lock(v5);
  uint64_t v6 = OBJC_IVAR____EXServiceClient__discoveryConnection;
  uint64_t v7 = *(void **)(v1 + OBJC_IVAR____EXServiceClient__discoveryConnection);
  if (v7)
  {
    id v8 = v7;
    os_unfair_lock_unlock(v5);
    return v8;
  }
  uint64_t v10 = sub_191FB9C68();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v4, 1, 1, v10);
  uint64_t v12 = (void *)sub_191FB9DA8();
  char v13 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v4, 1, v10) != 1)
  {
    char v13 = (void *)sub_191FB9C08();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v4, v10);
  }
  id v14 = (void *)sub_191FB9DA8();
  id v15 = objc_msgSend(self, sel_endpointForServiceName_oneshot_service_instance_, v12, v13, v14, 0);

  if (!v15)
  {
    if (qword_1E92FC798 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_191FB9CA8();
    __swift_project_value_buffer(v25, (uint64_t)qword_1E92FC7B0);
    id v26 = sub_191FB9C88();
    os_log_type_t v27 = sub_191FBA078();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t aBlock = v29;
      *(_DWORD *)uint64_t v28 = 136446466;
      uint64_t v37 = sub_191F4EB34(0xD00000000000001DLL, 0x8000000191FC71C0, &aBlock);
      sub_191FBA1C8();
      *(_WORD *)(v28 + 12) = 2082;
      uint64_t v37 = sub_191F4EB34(0x7265766F63736944, 0xE900000000000079, &aBlock);
      sub_191FBA1C8();
      swift_arrayDestroy();
      MEMORY[0x192FEBAE0](v29, -1, -1);
      MEMORY[0x192FEBAE0](v28, -1, -1);
    }

    id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F29268]), sel_init);
    goto LABEL_14;
  }
  uint64_t v16 = self;
  char v35 = nullsub_1;
  uint64_t v36 = 0;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v32 = 1107296256;
  uint64_t v33 = sub_191F2BF10;
  id v34 = &block_descriptor_153;
  uint64_t v17 = _Block_copy(&aBlock);
  swift_release();
  id v18 = objc_msgSend(v16, sel_NSXPCConnectionWithEndpoint_configurator_, v15, v17);
  _Block_release(v17);
  if (swift_isEscapingClosureAtFileLocation())
  {
    __break(1u);
    goto LABEL_16;
  }
  if (qword_1E92FD180 != -1) {
LABEL_16:
  }
    swift_once();
  objc_msgSend(v18, sel_setRemoteObjectInterface_, qword_1E92FFBB0);
  uint64_t v19 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  char v35 = (uint64_t (*)())sub_191F91C8C;
  uint64_t v36 = v19;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v32 = 1107296256;
  uint64_t v33 = sub_191F34288;
  id v34 = &block_descriptor_157;
  uint64_t v20 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(v18, sel_setInterruptionHandler_, v20);
  _Block_release(v20);
  uint64_t v21 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  char v35 = sub_191F91C94;
  uint64_t v36 = v21;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v32 = 1107296256;
  uint64_t v33 = sub_191F34288;
  id v34 = &block_descriptor_161;
  uint64_t v22 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(v18, sel_setInvalidationHandler_, v22);
  _Block_release(v22);
  uint64_t v23 = *(void **)(v1 + v6);
  *(void *)(v1 + v6) = v18;
  id v24 = v18;

  objc_msgSend(v24, sel_activate);
LABEL_14:
  os_unfair_lock_unlock(v5);
  return v24;
}

void sub_191F8D120()
{
  id Strong = (char *)swift_unknownObjectUnownedLoadStrong();
  uint64_t v1 = *(os_unfair_lock_s **)&Strong[OBJC_IVAR____EXServiceClient_connectionLock];
  swift_retain();

  os_unfair_lock_lock(v1 + 4);
  sub_191F91D00(v2);
  os_unfair_lock_unlock(v1 + 4);
  swift_release();
  uint64_t v5 = (char *)swift_unknownObjectUnownedLoadStrong();
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)&v5[OBJC_IVAR____EXServiceClient_activeQueriesLock] + 16);
  os_unfair_lock_lock(v3);
  sub_191F91D24(v4);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_191F8D1E0()
{
  id Strong = (char *)swift_unknownObjectUnownedLoadStrong();
  uint64_t v1 = *(os_unfair_lock_s **)&Strong[OBJC_IVAR____EXServiceClient_connectionLock];
  swift_retain();

  os_unfair_lock_lock(v1 + 4);
  sub_191F91C9C(v2);
  os_unfair_lock_unlock(v1 + 4);

  return swift_release();
}

id sub_191F8D264()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE40);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (os_unfair_lock_s *)(*(void *)(v1 + OBJC_IVAR____EXServiceClient_connectionLock) + 16);
  os_unfair_lock_lock(v5);
  uint64_t v6 = OBJC_IVAR____EXServiceClient__tccProxyConnection;
  uint64_t v7 = *(void **)(v1 + OBJC_IVAR____EXServiceClient__tccProxyConnection);
  if (v7)
  {
    id v8 = v7;
    os_unfair_lock_unlock(v5);
    return v8;
  }
  uint64_t v10 = sub_191FB9C68();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v4, 1, 1, v10);
  uint64_t v12 = (void *)sub_191FB9DA8();
  char v13 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v4, 1, v10) != 1)
  {
    char v13 = (void *)sub_191FB9C08();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v4, v10);
  }
  id v14 = (void *)sub_191FB9DA8();
  id v15 = objc_msgSend(self, sel_endpointForServiceName_oneshot_service_instance_, v12, v13, v14, 0);

  if (!v15)
  {
    if (qword_1E92FC798 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_191FB9CA8();
    __swift_project_value_buffer(v25, (uint64_t)qword_1E92FC7B0);
    id v26 = sub_191FB9C88();
    os_log_type_t v27 = sub_191FBA078();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t aBlock = v29;
      *(_DWORD *)uint64_t v28 = 136446466;
      uint64_t v37 = sub_191F4EB34(0xD00000000000001DLL, 0x8000000191FC71C0, &aBlock);
      sub_191FBA1C8();
      *(_WORD *)(v28 + 12) = 2082;
      uint64_t v37 = sub_191F4EB34(0x79786F7250434354, 0xE800000000000000, &aBlock);
      sub_191FBA1C8();
      swift_arrayDestroy();
      MEMORY[0x192FEBAE0](v29, -1, -1);
      MEMORY[0x192FEBAE0](v28, -1, -1);
    }

    id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F29268]), sel_init);
    goto LABEL_14;
  }
  uint64_t v16 = self;
  char v35 = nullsub_1;
  uint64_t v36 = 0;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v32 = 1107296256;
  uint64_t v33 = sub_191F2BF10;
  id v34 = &block_descriptor_142;
  uint64_t v17 = _Block_copy(&aBlock);
  swift_release();
  id v18 = objc_msgSend(v16, sel_NSXPCConnectionWithEndpoint_configurator_, v15, v17);
  _Block_release(v17);
  if (swift_isEscapingClosureAtFileLocation())
  {
    __break(1u);
    goto LABEL_16;
  }
  if (qword_1E92FD190 != -1) {
LABEL_16:
  }
    swift_once();
  objc_msgSend(v18, sel_setRemoteObjectInterface_, qword_1E92FFBB8);
  uint64_t v19 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  char v35 = sub_191F91C38;
  uint64_t v36 = v19;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v32 = 1107296256;
  uint64_t v33 = sub_191F34288;
  id v34 = &block_descriptor_146;
  uint64_t v20 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(v18, sel_setInterruptionHandler_, v20);
  _Block_release(v20);
  uint64_t v21 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  char v35 = sub_191F91C40;
  uint64_t v36 = v21;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v32 = 1107296256;
  uint64_t v33 = sub_191F34288;
  id v34 = &block_descriptor_150;
  uint64_t v22 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(v18, sel_setInvalidationHandler_, v22);
  _Block_release(v22);
  uint64_t v23 = *(void **)(v1 + v6);
  *(void *)(v1 + v6) = v18;
  id v24 = v18;

  objc_msgSend(v24, sel_activate);
LABEL_14:
  os_unfair_lock_unlock(v5);
  return v24;
}

uint64_t sub_191F8D894()
{
  id Strong = (char *)swift_unknownObjectUnownedLoadStrong();
  uint64_t v1 = *(os_unfair_lock_s **)&Strong[OBJC_IVAR____EXServiceClient_connectionLock];
  swift_retain();

  os_unfair_lock_lock(v1 + 4);
  sub_191F91C68(v2);
  os_unfair_lock_unlock(v1 + 4);

  return swift_release();
}

uint64_t sub_191F8D918()
{
  id Strong = (char *)swift_unknownObjectUnownedLoadStrong();
  uint64_t v1 = *(os_unfair_lock_s **)&Strong[OBJC_IVAR____EXServiceClient_connectionLock];
  swift_retain();

  os_unfair_lock_lock(v1 + 4);
  sub_191F91C48(v2);
  os_unfair_lock_unlock(v1 + 4);

  return swift_release();
}

uint64_t sub_191F8D99C()
{
  id Strong = (char *)swift_unknownObjectUnownedLoadStrong();
  uint64_t v1 = *(os_unfair_lock_s **)&Strong[OBJC_IVAR____EXServiceClient_connectionLock];
  swift_retain();

  os_unfair_lock_lock(v1 + 4);
  sub_191F91C14(v2);
  os_unfair_lock_unlock(v1 + 4);

  return swift_release();
}

void sub_191F8DA20(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  id Strong = (char *)swift_unknownObjectUnownedLoadStrong();
  id v5 = *(id *)&Strong[*a3];

  objc_msgSend(v5, sel_invalidate);
  uint64_t v6 = (char *)swift_unknownObjectUnownedLoadStrong();
  uint64_t v7 = *a3;
  id v8 = *(void **)&v6[*a3];
  *(void *)&v6[v7] = 0;
}

uint64_t sub_191F8DAAC()
{
  id Strong = (char *)swift_unknownObjectUnownedLoadStrong();
  uint64_t v1 = *(os_unfair_lock_s **)&Strong[OBJC_IVAR____EXServiceClient_connectionLock];
  swift_retain();

  os_unfair_lock_lock(v1 + 4);
  sub_191F91BF4(v2);
  os_unfair_lock_unlock(v1 + 4);

  return swift_release();
}

id sub_191F8DB30()
{
  uint64_t v15 = sub_191FBA0B8();
  uint64_t v1 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_191FBA0A8();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_191FB9D18();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v6 = OBJC_IVAR____EXServiceClient_connectionLock;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE60);
  uint64_t v7 = swift_allocObject();
  *(_DWORD *)(v7 + 16) = 0;
  *(void *)&v0[v6] = v7;
  *(void *)&v0[OBJC_IVAR____EXServiceClient__discoveryConnection] = 0;
  *(void *)&v0[OBJC_IVAR____EXServiceClient__tccProxyConnection] = 0;
  *(void *)&v0[OBJC_IVAR____EXServiceClient__launchConnection] = 0;
  *(void *)&v0[OBJC_IVAR____EXServiceClient_activeQueries] = MEMORY[0x1E4FBC870];
  uint64_t v8 = OBJC_IVAR____EXServiceClient_activeQueriesLock;
  uint64_t v9 = swift_allocObject();
  *(_DWORD *)(v9 + 16) = 0;
  *(void *)&v0[v8] = v9;
  uint64_t v14 = OBJC_IVAR____EXServiceClient_notifyQueue;
  uint64_t v13 = sub_191F442A4(0, (unint64_t *)&qword_1EB27BFC8);
  uint64_t v10 = v0;
  sub_191FB9D08();
  uint64_t v17 = MEMORY[0x1E4FBC860];
  sub_191F39290((unint64_t *)&qword_1EB27BE80, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BE58);
  sub_191F39B40((unint64_t *)&qword_1EB27BE70, &qword_1EB27BE58);
  sub_191FBA1F8();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCC58], v15);
  *(void *)&v0[v14] = sub_191FBA0E8();

  uint64_t v11 = (objc_class *)type metadata accessor for _EXServiceClient();
  v16.receiver = v10;
  v16.super_class = v11;
  return objc_msgSendSuper2(&v16, sel_init);
}

void sub_191F8DE5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (uint64_t *)(a2 + OBJC_IVAR____EXServiceClient_activeQueries);
  swift_beginAccess();
  uint64_t v30 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_191FBA228();
    type metadata accessor for _EXActiveClientQuery();
    sub_191F39290(&qword_1E92FD808, (void (*)(uint64_t))type metadata accessor for _EXActiveClientQuery);
    sub_191FB9FE8();
    uint64_t v30 = v38;
    uint64_t v3 = v40;
    uint64_t v28 = v39;
    uint64_t v4 = v41;
    unint64_t v5 = v42;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(v30 + 32);
    uint64_t v28 = v30 + 56;
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(v30 + 56);
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
  }
  int64_t v27 = (unint64_t)(v3 + 64) >> 6;
  p_name = &OBJC_PROTOCOL___EXEnumeratorConfig.name;
  while (v30 < 0)
  {
    uint64_t v13 = sub_191FBA258();
    if (!v13) {
      goto LABEL_34;
    }
    id v31 = (void *)v13;
    type metadata accessor for _EXActiveClientQuery();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v14 = aBlock;
    swift_unknownObjectRelease();
    uint64_t v12 = v4;
    uint64_t v10 = v5;
    if (!v14) {
      goto LABEL_34;
    }
LABEL_30:
    uint64_t v18 = MEMORY[0x192FEBBF0](&p_name[230][(void)v14]);
    if (v18)
    {
      uint64_t v19 = (void *)v18;
      swift_unknownObjectWeakAssign();
      objc_msgSend(v19, sel_invalidate);
    }
    uint64_t v20 = OBJC_IVAR____TtC19ExtensionFoundationP33_591406279EDD09BF7033B88E7B83DCFD20_EXActiveClientQuery_started;
    *((unsigned char *)v14
    + OBJC_IVAR____TtC19ExtensionFoundationP33_591406279EDD09BF7033B88E7B83DCFD20_EXActiveClientQuery_started) = 0;
    os_unfair_lock_assert_owner((const os_unfair_lock *)(*(void *)(a2 + OBJC_IVAR____EXServiceClient_activeQueriesLock)
                                                       + 16));
    if ((*((unsigned char *)v14 + v20) & 1) == 0)
    {
      uint64_t v21 = (void *)sub_191F8CAE8();
      uint64_t v36 = sub_191F8F9D4;
      uint64_t v37 = 0;
      uint64_t aBlock = (void *)MEMORY[0x1E4F143A8];
      uint64_t v33 = 1107296256;
      id v34 = sub_191F8C1B0;
      char v35 = &block_descriptor_164;
      uint64_t v22 = _Block_copy(&aBlock);
      id v23 = objc_msgSend(v21, sel_remoteObjectProxyWithErrorHandler_, v22);
      _Block_release(v22);

      sub_191FBA1E8();
      swift_unknownObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92FD7E8);
      swift_dynamicCast();
      *((unsigned char *)v14 + v20) = 1;
      uint64_t v24 = *(void *)((char *)v14
                      + OBJC_IVAR____TtC19ExtensionFoundationP33_591406279EDD09BF7033B88E7B83DCFD20_EXActiveClientQuery_query);
      id v25 = objc_msgSend(*(id *)((char *)v14+ OBJC_IVAR____TtC19ExtensionFoundationP33_591406279EDD09BF7033B88E7B83DCFD20_EXActiveClientQuery_xpcListener), sel_endpoint);
      uint64_t v36 = sub_191F8FBBC;
      uint64_t v37 = 0;
      uint64_t aBlock = (void *)MEMORY[0x1E4F143A8];
      uint64_t v33 = 1107296256;
      p_name = (char **)(&OBJC_PROTOCOL___EXEnumeratorConfig + 8);
      id v34 = sub_191F8FDB0;
      char v35 = &block_descriptor_167;
      id v26 = _Block_copy(&aBlock);
      objc_msgSend(v31, sel_beginExtensionsQuery_listenerEndpoint_reply_, v24, v25, v26);
      _Block_release(v26);

      swift_unknownObjectRelease();
      id v14 = v25;
    }

    uint64_t v4 = v12;
    unint64_t v5 = v10;
  }
  if (v5)
  {
    uint64_t v10 = (v5 - 1) & v5;
    unint64_t v11 = __clz(__rbit64(v5)) | (v4 << 6);
    uint64_t v12 = v4;
LABEL_29:
    id v14 = *(id *)(*(void *)(v30 + 48) + 8 * v11);
    if (!v14) {
      goto LABEL_34;
    }
    goto LABEL_30;
  }
  int64_t v15 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v15 >= v27) {
      goto LABEL_34;
    }
    unint64_t v16 = *(void *)(v28 + 8 * v15);
    uint64_t v12 = v4 + 1;
    if (!v16)
    {
      uint64_t v12 = v4 + 2;
      if (v4 + 2 >= v27) {
        goto LABEL_34;
      }
      unint64_t v16 = *(void *)(v28 + 8 * v12);
      if (!v16)
      {
        uint64_t v12 = v4 + 3;
        if (v4 + 3 >= v27) {
          goto LABEL_34;
        }
        unint64_t v16 = *(void *)(v28 + 8 * v12);
        if (!v16)
        {
          uint64_t v12 = v4 + 4;
          if (v4 + 4 >= v27) {
            goto LABEL_34;
          }
          unint64_t v16 = *(void *)(v28 + 8 * v12);
          if (!v16)
          {
            uint64_t v17 = v4 + 5;
            while (v27 != v17)
            {
              unint64_t v16 = *(void *)(v28 + 8 * v17++);
              if (v16)
              {
                uint64_t v12 = v17 - 1;
                goto LABEL_28;
              }
            }
LABEL_34:
            sub_191F4DD64();
            return;
          }
        }
      }
    }
LABEL_28:
    uint64_t v10 = (v16 - 1) & v16;
    unint64_t v11 = __clz(__rbit64(v16)) + (v12 << 6);
    goto LABEL_29;
  }
  __break(1u);
}

id sub_191F8E374(char *a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 0;
  uint64_t v3 = *(void **)&a1[OBJC_IVAR____EXQuery_predicate];
  id v4 = v3;
  id v5 = sub_191F8CAE8();
  uint64_t v21 = sub_191F8E5E4;
  uint64_t v22 = 0;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v18 = 1107296256;
  uint64_t v19 = sub_191F8C1B0;
  uint64_t v20 = &block_descriptor_120;
  uint64_t v6 = _Block_copy(&aBlock);
  id v7 = objc_msgSend(v5, sel_synchronousRemoteObjectProxyWithErrorHandler_, v6);
  _Block_release(v6);

  sub_191FBA1E8();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92FD7E8);
  swift_dynamicCast();
  uint64_t v8 = (void *)swift_allocObject();
  void v8[2] = v3;
  v8[3] = a1;
  void v8[4] = v2;
  uint64_t v21 = sub_191F91BA0;
  uint64_t v22 = v8;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v18 = 1107296256;
  uint64_t v19 = sub_191F8E920;
  uint64_t v20 = &block_descriptor_126;
  uint64_t v9 = _Block_copy(&aBlock);
  id v10 = v4;
  unint64_t v11 = a1;
  swift_retain();
  swift_release();
  objc_msgSend(v16, sel_extensionsWith_reply_, v11, v9);
  _Block_release(v9);
  swift_beginAccess();
  uint64_t v12 = *(void **)(v2 + 16);
  if (v12) {
    id v13 = v12;
  }
  else {
    id v13 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for _EXQueryResult()), sel_init);
  }
  id v14 = v13;

  swift_unknownObjectRelease();
  swift_release();
  return v14;
}

void sub_191F8E5E4(void *a1)
{
}

void sub_191F8E5F0(char *a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  if (a1)
  {
    uint64_t v6 = (void **)(a5 + 16);
    if (a3
      && *(void *)&a1[OBJC_IVAR____EXQueryResult_identities]
      && !*(void *)(a4 + OBJC_IVAR____EXQuery_resultType))
    {
      id v18 = a3;
      uint64_t v19 = a1;
      uint64_t v20 = swift_bridgeObjectRetain();
      uint64_t v21 = sub_191F918B0(v20, v18);

      uint64_t v22 = (objc_class *)type metadata accessor for _EXQueryResult();
      id v23 = (char *)objc_allocWithZone(v22);
      *(void *)&v23[OBJC_IVAR____EXQueryResult_identities] = v21;
      *(void *)&v23[OBJC_IVAR____EXQueryResult_availablility] = 0;
      v27.receiver = v23;
      v27.super_class = v22;
      id v24 = objc_msgSendSuper2(&v27, sel_init);

      swift_beginAccess();
      id v25 = *v6;
      *uint64_t v6 = v24;
    }
    else
    {
      swift_beginAccess();
      id v7 = *v6;
      *uint64_t v6 = a1;
      uint64_t v8 = a1;
    }
  }
  else
  {
    if (qword_1EB27BC88 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_191FB9CA8();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EB27BC70);
    id v11 = a2;
    id v12 = a2;
    oslog = sub_191FB9C88();
    os_log_type_t v13 = sub_191FBA068();
    if (os_log_type_enabled(oslog, v13))
    {
      id v14 = (uint8_t *)swift_slowAlloc();
      int64_t v15 = (void *)swift_slowAlloc();
      *(_DWORD *)id v14 = 138543362;
      if (a2)
      {
        id v16 = a2;
        uint64_t v17 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v28 = v17;
        sub_191FBA1C8();
      }
      else
      {
        uint64_t v28 = 0;
        sub_191FBA1C8();
        uint64_t v17 = 0;
      }
      void *v15 = v17;

      _os_log_impl(&dword_191F29000, oslog, v13, "Query failed with error: %{public}@", v14, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
      swift_arrayDestroy();
      MEMORY[0x192FEBAE0](v15, -1, -1);
      MEMORY[0x192FEBAE0](v14, -1, -1);
    }
    else
    {
    }
  }
}

void sub_191F8E920(uint64_t a1, void *a2, void *a3)
{
}

uint64_t sub_191F8E928(void *a1, uint64_t a2, uint64_t a3)
{
  id v6 = sub_191F8CAE8();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  uint64_t v19 = sub_191F91EE8;
  uint64_t v20 = (void *)v7;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v16 = 1107296256;
  uint64_t v17 = sub_191F8C1B0;
  id v18 = &block_descriptor_107;
  uint64_t v8 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  id v9 = objc_msgSend(v6, sel_remoteObjectProxyWithErrorHandler_, v8);
  _Block_release(v8);

  sub_191FBA1E8();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92FD7E8);
  swift_dynamicCast();
  uint64_t v10 = (void *)swift_allocObject();
  _OWORD v10[2] = a1;
  void v10[3] = a2;
  _OWORD v10[4] = a3;
  uint64_t v19 = sub_191F91EE4;
  uint64_t v20 = v10;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v16 = 1107296256;
  uint64_t v17 = sub_191F8E920;
  id v18 = &block_descriptor_114;
  id v11 = _Block_copy(&aBlock);
  swift_retain();
  id v12 = a1;
  swift_release();
  objc_msgSend(v14, sel_extensionsWith_reply_, v12, v11);
  _Block_release(v11);
  return swift_unknownObjectRelease();
}

void sub_191F8EB34(void *a1, void (*a2)(void))
{
  if (qword_1EB27BC88 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_191FB9CA8();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB27BC70);
  id v5 = a1;
  id v6 = a1;
  uint64_t v7 = sub_191FB9C88();
  os_log_type_t v8 = sub_191FBA068();
  if (os_log_type_enabled(v7, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)id v9 = 138543362;
    id v11 = a1;
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
    sub_191FBA1C8();
    void *v10 = v13;

    _os_log_impl(&dword_191F29000, v7, v8, "Query failed with error: %{public}@", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
    swift_arrayDestroy();
    MEMORY[0x192FEBAE0](v10, -1, -1);
    MEMORY[0x192FEBAE0](v9, -1, -1);
  }
  else
  {
  }
  id v12 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for _EXQueryResult()), sel_init);
  a2();
}

void sub_191F8ED1C(char *a1, void *a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  if (a1)
  {
    id v6 = *(void **)(a3 + OBJC_IVAR____EXQuery_predicate);
    if (v6
      && *(void *)&a1[OBJC_IVAR____EXQueryResult_identities]
      && !*(void *)(a3 + OBJC_IVAR____EXQuery_resultType))
    {
      id v18 = v6;
      uint64_t v19 = a1;
      uint64_t v20 = swift_bridgeObjectRetain();
      uint64_t v21 = sub_191F918B0(v20, v18);

      uint64_t v22 = (objc_class *)type metadata accessor for _EXQueryResult();
      id v23 = (char *)objc_allocWithZone(v22);
      *(void *)&v23[OBJC_IVAR____EXQueryResult_identities] = v21;
      *(void *)&v23[OBJC_IVAR____EXQueryResult_availablility] = 0;
      v29.receiver = v23;
      v29.super_class = v22;
      id v24 = objc_msgSendSuper2(&v29, sel_init);
      if (objc_msgSend(v24, sel_isKindOfClass_, swift_getObjCClassFromMetadata()))
      {
        id v25 = (id)swift_dynamicCastClassUnconditional();
        ((void (*)(id))a4)(v25);
      }
      else
      {
        id v27 = objc_msgSend(self, sel__EX_parameterError);
        swift_willThrow();
        swift_unexpectedError();
        __break(1u);
      }
    }
    else
    {
      id v28 = v6;
      uint64_t v7 = a1;
      a4();
    }
  }
  else
  {
    if (qword_1EB27BC88 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_191FB9CA8();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EB27BC70);
    id v10 = a2;
    id v11 = a2;
    id v12 = sub_191FB9C88();
    os_log_type_t v13 = sub_191FBA068();
    if (os_log_type_enabled(v12, v13))
    {
      id v14 = (uint8_t *)swift_slowAlloc();
      int64_t v15 = (void *)swift_slowAlloc();
      *(_DWORD *)id v14 = 138543362;
      if (a2)
      {
        id v16 = a2;
        uint64_t v17 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v30 = v17;
        sub_191FBA1C8();
      }
      else
      {
        uint64_t v30 = 0;
        sub_191FBA1C8();
        uint64_t v17 = 0;
      }
      void *v15 = v17;

      _os_log_impl(&dword_191F29000, v12, v13, "Query failed with error: %{public}@", v14, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
      swift_arrayDestroy();
      MEMORY[0x192FEBAE0](v15, -1, -1);
      MEMORY[0x192FEBAE0](v14, -1, -1);
    }
    else
    {
    }
    id v26 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for _EXQueryResult()), sel_init);
    a4();
  }
}

id sub_191F8F124(unint64_t a1)
{
  uint64_t v13 = MEMORY[0x1E4FBC870];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    id result = (id)sub_191FBA478();
    uint64_t v2 = (uint64_t)result;
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id result = (id)swift_bridgeObjectRetain();
  }
  if (!v2)
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = MEMORY[0x1E4FBC870];
LABEL_14:
    id v10 = (objc_class *)type metadata accessor for _EXQueryResult();
    id v11 = (char *)objc_allocWithZone(v10);
    *(void *)&v11[OBJC_IVAR____EXQueryResult_identities] = v9;
    *(void *)&v11[OBJC_IVAR____EXQueryResult_availablility] = 0;
    v12.receiver = v11;
    v12.super_class = v10;
    return objc_msgSendSuper2(&v12, sel_init);
  }
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i != v2; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v5 = (char *)MEMORY[0x192FEA540](i, a1);
      }
      else {
        id v5 = (char *)*(id *)(a1 + 8 * i + 32);
      }
      id v6 = v5;
      uint64_t v7 = (char *)sub_191F8E374(v5);
      if (*(void *)&v7[OBJC_IVAR____EXQueryResult_identities])
      {
        unint64_t v8 = swift_bridgeObjectRetain();
        sub_191F361A4(v8);
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v9 = v13;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_191F8F298(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v33 = a3;
  uint64_t v32 = a2;
  uint64_t v4 = sub_191FB9CF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v36 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_191FB9D18();
  uint64_t v35 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v34 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = MEMORY[0x1E4FBC870];
  dispatch_group_t v43 = dispatch_group_create();
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_191FBA478();
    uint64_t v9 = result;
  }
  else
  {
    uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
  }
  uint64_t v37 = v7;
  uint64_t v38 = v5;
  if (!v9)
  {
    swift_bridgeObjectRelease();
LABEL_12:
    id v25 = (void *)swift_allocObject();
    uint64_t v26 = v32;
    v25[2] = v44;
    v25[3] = v26;
    v25[4] = v33;
    uint64_t v50 = sub_191F910C4;
    uint64_t v51 = v25;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v47 = 1107296256;
    uint64_t v48 = sub_191F34288;
    uint64_t v49 = &block_descriptor_100;
    id v27 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    id v28 = v34;
    sub_191FB9D08();
    uint64_t v45 = (void *)MEMORY[0x1E4FBC860];
    sub_191F39290((unint64_t *)&qword_1EB27BD30, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BD00);
    sub_191F39B40((unint64_t *)&qword_1EB27BD40, (uint64_t *)&unk_1EB27BD00);
    objc_super v29 = v36;
    sub_191FBA1F8();
    dispatch_group_t v30 = v43;
    sub_191FBA098();
    _Block_release(v27);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v29, v4);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v28, v37);
    swift_release();
    return swift_release();
  }
  if (v9 >= 1)
  {
    uint64_t v31 = v4;
    uint64_t v11 = 0;
    unint64_t v40 = a1 & 0xC000000000000001;
    uint64_t v39 = MEMORY[0x1E4FBC840] + 8;
    uint64_t v41 = v9;
    unint64_t v42 = a1;
    do
    {
      if (v40) {
        id v12 = (id)MEMORY[0x192FEA540](v11, a1);
      }
      else {
        id v12 = *(id *)(a1 + 8 * v11 + 32);
      }
      uint64_t v13 = v12;
      ++v11;
      dispatch_group_t v14 = v43;
      dispatch_group_enter(v43);
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = v44;
      *(void *)(v15 + 24) = v14;
      swift_retain();
      id v16 = v14;
      id v17 = sub_191F8CAE8();
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = sub_191F91064;
      *(void *)(v18 + 24) = v15;
      uint64_t v50 = sub_191F9106C;
      uint64_t v51 = (void *)v18;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v47 = 1107296256;
      uint64_t v48 = sub_191F8C1B0;
      uint64_t v49 = &block_descriptor_88;
      uint64_t v19 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      id v20 = objc_msgSend(v17, sel_remoteObjectProxyWithErrorHandler_, v19);
      _Block_release(v19);

      sub_191FBA1E8();
      swift_unknownObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92FD7E8);
      swift_dynamicCast();
      uint64_t v21 = v45;
      uint64_t v22 = (void *)swift_allocObject();
      v22[2] = v13;
      v22[3] = sub_191F91064;
      void v22[4] = v15;
      uint64_t v50 = sub_191F91078;
      uint64_t v51 = v22;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v47 = 1107296256;
      uint64_t v48 = sub_191F8E920;
      uint64_t v49 = &block_descriptor_94;
      id v23 = _Block_copy(&aBlock);
      swift_retain();
      id v24 = v13;
      swift_release();
      objc_msgSend(v21, sel_extensionsWith_reply_, v24, v23);
      _Block_release(v23);

      swift_release();
      swift_unknownObjectRelease();
      a1 = v42;
    }
    while (v41 != v11);
    swift_bridgeObjectRelease();
    uint64_t v4 = v31;
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

void sub_191F8F8A8(uint64_t a1, int a2, dispatch_group_t group)
{
  if (*(void *)(a1 + OBJC_IVAR____EXQueryResult_identities))
  {
    swift_beginAccess();
    unint64_t v4 = swift_bridgeObjectRetain();
    sub_191F361A4(v4);
    swift_endAccess();
  }
  dispatch_group_leave(group);
}

void sub_191F8F924(uint64_t a1, void (*a2)(void))
{
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = (objc_class *)type metadata accessor for _EXQueryResult();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  *(void *)&v6[OBJC_IVAR____EXQueryResult_identities] = v4;
  *(void *)&v6[OBJC_IVAR____EXQueryResult_availablility] = 0;
  v8.receiver = v6;
  v8.super_class = v5;
  swift_bridgeObjectRetain();
  id v7 = objc_msgSendSuper2(&v8, sel_init);
  a2();
}

void sub_191F8F9D4(void *a1)
{
}

void sub_191F8F9E0(void *a1, const char *a2)
{
  if (qword_1EB27BC88 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_191FB9CA8();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EB27BC70);
  id v5 = a1;
  id v6 = a1;
  oslog = sub_191FB9C88();
  os_log_type_t v7 = sub_191FBA068();
  if (os_log_type_enabled(oslog, v7))
  {
    objc_super v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    *(_DWORD *)objc_super v8 = 138543362;
    id v10 = a1;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    sub_191FBA1C8();
    void *v9 = v12;

    _os_log_impl(&dword_191F29000, oslog, v7, a2, v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
    swift_arrayDestroy();
    MEMORY[0x192FEBAE0](v9, -1, -1);
    MEMORY[0x192FEBAE0](v8, -1, -1);
  }
  else
  {
  }
}

void sub_191F8FBBC(void *a1)
{
  if (a1)
  {
    id v2 = a1;
    if (qword_1EB27BC88 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_191FB9CA8();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EB27BC70);
    id v4 = a1;
    id v5 = a1;
    oslog = sub_191FB9C88();
    os_log_type_t v6 = sub_191FBA068();
    if (os_log_type_enabled(oslog, v6))
    {
      os_log_type_t v7 = (uint8_t *)swift_slowAlloc();
      objc_super v8 = (void *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v7 = 138543362;
      id v9 = a1;
      uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
      sub_191FBA1C8();
      *objc_super v8 = v11;

      _os_log_impl(&dword_191F29000, oslog, v6, "Begin active query failed with error: %{public}@", v7, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
      swift_arrayDestroy();
      MEMORY[0x192FEBAE0](v8, -1, -1);
      MEMORY[0x192FEBAE0](v7, -1, -1);
    }
    else
    {
    }
  }
}

void sub_191F8FDB0(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_191F8FE1C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a2[3];
  uint64_t v4 = a2[4];
  __swift_project_boxed_opaque_existential_2Tm(a2, v3);
  unint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 32))(v3, v4);
  unint64_t v6 = v5;
  if (v5 >> 62) {
    goto LABEL_16;
  }
  uint64_t v7 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v7) {
    return swift_bridgeObjectRelease();
  }
  while (1)
  {
    uint64_t result = self;
    id v39 = (id)result;
    uint64_t v36 = v7 - 1;
    if (v7 < 1) {
      break;
    }
    id v9 = (const os_unfair_lock *)(*(void *)(a3 + OBJC_IVAR____EXServiceClient_activeQueriesLock) + 16);
    unint64_t v37 = v6 & 0xC000000000000001;
    uint64_t v38 = (uint64_t *)(a3 + OBJC_IVAR____EXServiceClient_activeQueries);
    swift_beginAccess();
    uint64_t v10 = 0;
    p_name = &OBJC_PROTOCOL___EXEnumeratorConfig.name;
    uint64_t v12 = &OBJC_PROTOCOL___EXEnumeratorConfig.name;
    unint64_t v35 = v6;
    if ((v6 & 0xC000000000000001) != 0)
    {
LABEL_5:
      id v13 = (id)MEMORY[0x192FEA540](v10, v6);
      goto LABEL_7;
    }
    while (1)
    {
      id v13 = *(id *)(v6 + 8 * v10 + 32);
LABEL_7:
      dispatch_group_t v14 = v13;
      os_unfair_lock_assert_owner(v9);
      uint64_t v15 = (objc_class *)type metadata accessor for _EXActiveClientQuery();
      id v16 = objc_allocWithZone(v15);
      p_name[227][(void)v16] = 0;
      id v17 = v12[228];
      type metadata accessor for _EXActiveClientQuery.ServiceClientObserverSet();
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = MEMORY[0x1E4FBC870];
      *(void *)&v17[(void)v16] = v18;
      swift_unknownObjectWeakInit();
      *(void *)((char *)v16
                + OBJC_IVAR____TtC19ExtensionFoundationP33_591406279EDD09BF7033B88E7B83DCFD20_EXActiveClientQuery_query) = v14;
      id v19 = v14;
      id v20 = (char *)v16;
      id v21 = objc_msgSend(v39, sel_anonymousListener);
      *(void *)&v20[OBJC_IVAR____TtC19ExtensionFoundationP33_591406279EDD09BF7033B88E7B83DCFD20_EXActiveClientQuery_xpcListener] = v21;
      id v22 = v21;

      v48.receiver = v20;
      v48.super_class = v15;
      id v23 = (char *)objc_msgSendSuper2(&v48, sel_init);
      objc_msgSend(v22, sel_setDelegate_, v23);
      objc_msgSend(v22, sel_resume);

      uint64_t v24 = *v38;
      swift_bridgeObjectRetain();
      LOBYTE(v22) = sub_191F9EA78(v23, v24);
      swift_bridgeObjectRelease();
      if (v22) {
        break;
      }
      id v25 = __swift_project_boxed_opaque_existential_2Tm(a2, a2[3]);
      swift_retain();
      sub_191F8C218((uint64_t)v25);
      swift_release();
      uint64_t v26 = v9;
      os_unfair_lock_assert_owner(v9);
      id v27 = p_name[227];
      if (v27[(void)v23])
      {
      }
      else
      {
        id v28 = sub_191F8CAE8();
        uint64_t v46 = sub_191F8F9D4;
        uint64_t v47 = 0;
        uint64_t aBlock = MEMORY[0x1E4F143A8];
        uint64_t v43 = 1107296256;
        uint64_t v44 = sub_191F8C1B0;
        uint64_t v45 = &block_descriptor_4;
        objc_super v29 = _Block_copy(&aBlock);
        id v30 = objc_msgSend(v28, sel_remoteObjectProxyWithErrorHandler_, v29);
        _Block_release(v29);

        sub_191FBA1E8();
        swift_unknownObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92FD7E8);
        swift_dynamicCast();
        v27[(void)v23] = 1;
        uint64_t v31 = *(void *)&v23[OBJC_IVAR____TtC19ExtensionFoundationP33_591406279EDD09BF7033B88E7B83DCFD20_EXActiveClientQuery_query];
        id v32 = objc_msgSend(*(id *)&v23[OBJC_IVAR____TtC19ExtensionFoundationP33_591406279EDD09BF7033B88E7B83DCFD20_EXActiveClientQuery_xpcListener], sel_endpoint);
        uint64_t v46 = sub_191F8FBBC;
        uint64_t v47 = 0;
        uint64_t aBlock = MEMORY[0x1E4F143A8];
        uint64_t v43 = 1107296256;
        p_name = (char **)(&OBJC_PROTOCOL___EXEnumeratorConfig + 8);
        uint64_t v44 = sub_191F8FDB0;
        uint64_t v45 = &block_descriptor_51;
        uint64_t v33 = _Block_copy(&aBlock);
        objc_msgSend(v41, sel_beginExtensionsQuery_listenerEndpoint_reply_, v31, v32, v33);
        _Block_release(v33);

        swift_unknownObjectRelease();
      }
      unint64_t v6 = v35;
      if (v36 == v10) {
        return swift_bridgeObjectRelease();
      }
      ++v10;
      id v9 = v26;
      uint64_t v12 = (char **)(&OBJC_PROTOCOL___EXEnumeratorConfig + 8);
      if (v37) {
        goto LABEL_5;
      }
    }
    __break(1u);
LABEL_16:
    uint64_t v7 = sub_191FBA478();
    if (!v7) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_191F902E4(uint64_t a1, void *a2, char *a3)
{
  uint64_t v4 = a2[3];
  uint64_t v5 = a2[4];
  __swift_project_boxed_opaque_existential_2Tm(a2, v4);
  unint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 32))(v4, v5);
  unint64_t v7 = v6;
  if (v6 >> 62) {
    goto LABEL_17;
  }
  uint64_t v8 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v8) {
    return swift_bridgeObjectRelease();
  }
  while (1)
  {
    uint64_t result = self;
    id v32 = (id)result;
    if (v8 < 1) {
      break;
    }
    unint64_t v30 = v7 & 0xC000000000000001;
    lock = (os_unfair_lock *)(*(void *)&a3[OBJC_IVAR____EXServiceClient_activeQueriesLock] + 16);
    unint64_t v35 = (uint64_t *)&a3[OBJC_IVAR____EXServiceClient_activeQueries];
    swift_beginAccess();
    uint64_t v10 = 0;
    unint64_t v29 = v7;
    while (1)
    {
      id v13 = v30 ? (id)MEMORY[0x192FEA540](v10, v7) : *(id *)(v7 + 8 * v10 + 32);
      dispatch_group_t v14 = v13;
      os_unfair_lock_assert_owner(lock);
      uint64_t v15 = (objc_class *)type metadata accessor for _EXActiveClientQuery();
      id v16 = objc_allocWithZone(v15);
      v16[OBJC_IVAR____TtC19ExtensionFoundationP33_591406279EDD09BF7033B88E7B83DCFD20_EXActiveClientQuery_started] = 0;
      uint64_t v17 = OBJC_IVAR____TtC19ExtensionFoundationP33_591406279EDD09BF7033B88E7B83DCFD20_EXActiveClientQuery__observers;
      type metadata accessor for _EXActiveClientQuery.ServiceClientObserverSet();
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = MEMORY[0x1E4FBC870];
      *(void *)&v16[v17] = v18;
      swift_unknownObjectWeakInit();
      *(void *)&v16[OBJC_IVAR____TtC19ExtensionFoundationP33_591406279EDD09BF7033B88E7B83DCFD20_EXActiveClientQuery_query] = v14;
      uint64_t v12 = v14;
      id v19 = v16;
      id v20 = objc_msgSend(v32, sel_anonymousListener);
      *(void *)&v19[OBJC_IVAR____TtC19ExtensionFoundationP33_591406279EDD09BF7033B88E7B83DCFD20_EXActiveClientQuery_xpcListener] = v20;
      id v21 = v20;

      v34.receiver = v19;
      v34.super_class = v15;
      a3 = (char *)objc_msgSendSuper2(&v34, sel_init);
      objc_msgSend(v21, sel_setDelegate_, a3);
      objc_msgSend(v21, sel_resume);

      uint64_t v22 = *v35;
      swift_bridgeObjectRetain();
      LOBYTE(v21) = sub_191F9EA78(a3, v22);
      swift_bridgeObjectRelease();
      if (v21) {
        break;
      }
      id v23 = __swift_project_boxed_opaque_existential_2Tm(a2, a2[3]);
      uint64_t v24 = OBJC_IVAR____TtC19ExtensionFoundationP33_591406279EDD09BF7033B88E7B83DCFD20_EXActiveClientQuery__observers;
      swift_retain();
      sub_191F8C31C((uint64_t)v23);
      swift_release();
      uint64_t v25 = *(void *)&a3[v24];
      swift_beginAccess();
      if (*(void *)(*(void *)(v25 + 16) + 16))
      {
        swift_beginAccess();
        uint64_t v26 = (void *)sub_191FA277C(a3);
        swift_endAccess();

        uint64_t v27 = MEMORY[0x192FEBBF0](&a3[OBJC_IVAR____TtC19ExtensionFoundationP33_591406279EDD09BF7033B88E7B83DCFD20_EXActiveClientQuery_connection]);
        if (v27)
        {
          id v28 = (void *)v27;
          swift_unknownObjectWeakAssign();
          objc_msgSend(v28, sel_invalidate);
        }
        a3[OBJC_IVAR____TtC19ExtensionFoundationP33_591406279EDD09BF7033B88E7B83DCFD20_EXActiveClientQuery_started] = 0;
        uint64_t v11 = a3;
        unint64_t v7 = v29;
      }
      else
      {
        uint64_t v11 = v12;
        uint64_t v12 = a3;
        unint64_t v7 = v29;
      }
      ++v10;

      if (v8 == v10) {
        return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
LABEL_17:
    uint64_t v8 = sub_191FBA478();
    if (!v8) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_191F90674()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0;
  id v1 = sub_191F8D264();
  id v13 = sub_191F90F1C;
  uint64_t v14 = v0;
  uint64_t v9 = MEMORY[0x1E4F143A8];
  uint64_t v10 = 1107296256;
  uint64_t v11 = sub_191F8C1B0;
  uint64_t v12 = &block_descriptor_54;
  id v2 = _Block_copy(&v9);
  swift_retain();
  swift_release();
  id v3 = objc_msgSend(v1, sel_remoteObjectProxyWithErrorHandler_, v2);
  _Block_release(v2);

  sub_191FBA1E8();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92FD7F8);
  swift_dynamicCast();
  uint64_t v4 = v15;
  uint64_t v5 = (void *)sub_191FB9C08();
  id v13 = sub_191F90F60;
  uint64_t v14 = v0;
  uint64_t v9 = MEMORY[0x1E4F143A8];
  uint64_t v10 = 1107296256;
  uint64_t v11 = sub_191F90B78;
  uint64_t v12 = &block_descriptor_57;
  unint64_t v6 = _Block_copy(&v9);
  swift_retain();
  swift_release();
  objc_msgSend(v4, sel_photoServiceAuthorizationStatusForExtensionUUID_completion_, v5, v6);
  _Block_release(v6);

  swift_beginAccess();
  unint64_t v7 = *(void **)(v0 + 16);
  if (v7)
  {
    v7;
    swift_willThrow();
  }
  swift_release();
  return swift_unknownObjectRelease();
}

void sub_191F908B0(void *a1, uint64_t a2, void *a3, uint64_t a4, const char *a5)
{
  if (*a3 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_191FB9CA8();
  __swift_project_value_buffer(v9, a4);
  id v10 = a1;
  id v11 = a1;
  uint64_t v12 = sub_191FB9C88();
  os_log_type_t v13 = sub_191FBA068();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 138543362;
    id v16 = a1;
    uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
    sub_191FBA1C8();
    void *v15 = v19;

    _os_log_impl(&dword_191F29000, v12, v13, a5, v14, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
    swift_arrayDestroy();
    MEMORY[0x192FEBAE0](v15, -1, -1);
    MEMORY[0x192FEBAE0](v14, -1, -1);
  }
  else
  {
  }
  uint64_t v17 = sub_191FB9B08();
  swift_beginAccess();
  uint64_t v18 = *(void **)(a2 + 16);
  *(void *)(a2 + 16) = v17;
}

void sub_191F90A84(char a1, id a2, uint64_t a3)
{
  uint64_t v4 = (void **)(a3 + 16);
  if (a2)
  {
    id v6 = a2;
    uint64_t v7 = sub_191FB9B08();

    swift_beginAccess();
    uint64_t v8 = *v4;
    *uint64_t v4 = (void *)v7;
  }
  if ((a1 & 1) == 0)
  {
    uint64_t v9 = self;
    id v10 = (void *)sub_191FB9DA8();
    id v11 = objc_msgSend(v9, sel__EX_errorWithCode_description_, 17, v10);

    swift_beginAccess();
    uint64_t v12 = *v4;
    *uint64_t v4 = v11;
  }
}

void sub_191F90B78(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

id sub_191F90D3C()
{
  id v1 = *(void **)&v0[OBJC_IVAR____EXServiceClient__discoveryConnection];
  if (v1) {
    objc_msgSend(v1, sel_invalidate);
  }
  id v2 = *(void **)&v0[OBJC_IVAR____EXServiceClient__tccProxyConnection];
  if (v2) {
    objc_msgSend(v2, sel_invalidate);
  }
  id v3 = *(void **)&v0[OBJC_IVAR____EXServiceClient__launchConnection];
  if (v3) {
    objc_msgSend(v3, sel_invalidate);
  }
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for _EXServiceClient();
  return objc_msgSendSuper2(&v5, sel_dealloc);
}

uint64_t type metadata accessor for _EXServiceClient()
{
  return self;
}

uint64_t sub_191F90EAC(void (*a1)(void))
{
  a1();

  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_191F90EE4()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_191F90F1C(void *a1)
{
}

void sub_191F90F60(char a1, void *a2)
{
  sub_191F90A84(a1, a2, v2);
}

void sub_191F90F68(void *a1)
{
  sub_191F908B0(a1, v1, &qword_1EB27BDC0, (uint64_t)qword_1EB27BDE8, "Launch failed with error: %{public}@");
}

uint64_t sub_191F90FAC()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_191F90FEC()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_191F91024()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_191F91064(uint64_t a1)
{
  sub_191F8F8A8(a1, *(void *)(v1 + 16), *(dispatch_group_t *)(v1 + 24));
}

void sub_191F9106C(void *a1)
{
  sub_191F8EB34(a1, *(void (**)(void))(v1 + 16));
}

void sub_191F91078(char *a1, void *a2)
{
  sub_191F8ED1C(a1, a2, *(void *)(v2 + 16), *(void (**)(void))(v2 + 24));
}

uint64_t sub_191F91084()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_191F910C4()
{
  sub_191F8F924(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

uint64_t sub_191F910D0(void *a1)
{
  id v3 = (void *)MEMORY[0x192FEBBF0](v1+ OBJC_IVAR____TtC19ExtensionFoundationP33_591406279EDD09BF7033B88E7B83DCFD20_EXActiveClientQuery_connection);

  if (!v3)
  {
    objc_msgSend(a1, sel_setExportedObject_, v1);
    if (qword_1E92FD198 != -1) {
      swift_once();
    }
    objc_msgSend(a1, sel_setExportedInterface_, qword_1E92FFBC0);
    uint64_t v4 = swift_allocObject();
    swift_unknownObjectUnownedInit();
    os_log_type_t v13 = sub_191F91DFC;
    uint64_t v14 = v4;
    uint64_t v9 = MEMORY[0x1E4F143A8];
    uint64_t v10 = 1107296256;
    id v11 = sub_191F34288;
    uint64_t v12 = &block_descriptor_173;
    objc_super v5 = _Block_copy(&v9);
    swift_release();
    objc_msgSend(a1, sel_setInterruptionHandler_, v5);
    _Block_release(v5);
    uint64_t v6 = swift_allocObject();
    swift_unknownObjectUnownedInit();
    os_log_type_t v13 = sub_191F91DFC;
    uint64_t v14 = v6;
    uint64_t v9 = MEMORY[0x1E4F143A8];
    uint64_t v10 = 1107296256;
    id v11 = sub_191F34288;
    uint64_t v12 = &block_descriptor_177;
    uint64_t v7 = _Block_copy(&v9);
    swift_release();
    objc_msgSend(a1, sel_setInvalidationHandler_, v7);
    _Block_release(v7);
    swift_unknownObjectWeakAssign();
    objc_msgSend(a1, sel_activate);
  }
  return 1;
}

uint64_t sub_191F912FC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (qword_1EB27BC88 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_191FB9CA8();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EB27BC70);
  id v8 = a1;
  uint64_t v9 = sub_191FB9C88();
  os_log_type_t v10 = sub_191FBA058();
  if (os_log_type_enabled(v9, v10))
  {
    id v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = (void *)swift_slowAlloc();
    *(_DWORD *)id v11 = 138543362;
    v20[0] = v8;
    id v12 = v8;
    sub_191FBA1C8();
    *uint64_t v19 = v8;

    _os_log_impl(&dword_191F29000, v9, v10, "Remote query change notification %{public}@", v11, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
    swift_arrayDestroy();
    MEMORY[0x192FEBAE0](v19, -1, -1);
    MEMORY[0x192FEBAE0](v11, -1, -1);
  }
  else
  {
  }
  (*(void (**)(uint64_t))(a4 + 16))(a4);
  swift_retain();
  uint64_t v13 = sub_191F8C430();
  swift_release();
  uint64_t v14 = *(void *)(v13 + 16);
  if (v14)
  {
    uint64_t v15 = v13 + 32;
    do
    {
      sub_191F41D54(v15, (uint64_t)v20);
      uint64_t v16 = v21;
      uint64_t v17 = v22;
      __swift_project_boxed_opaque_existential_2Tm(v20, v21);
      (*(void (**)(id, uint64_t, uint64_t, uint64_t))(v17 + 16))(v8, a2, v16, v17);
      __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v20);
      v15 += 40;
      --v14;
    }
    while (v14);
  }
  return swift_bridgeObjectRelease();
}

unint64_t *sub_191F91554(unint64_t *result, uint64_t a2, uint64_t a3, id a4)
{
  uint64_t v19 = a2;
  id v20 = result;
  uint64_t v6 = 0;
  int64_t v7 = 0;
  uint64_t v8 = a3 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(a3 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v7 << 6);
      goto LABEL_5;
    }
    int64_t v15 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v12) {
      goto LABEL_24;
    }
    unint64_t v16 = *(void *)(v8 + 8 * v15);
    ++v7;
    if (!v16)
    {
      int64_t v7 = v15 + 1;
      if (v15 + 1 >= v12) {
        goto LABEL_24;
      }
      unint64_t v16 = *(void *)(v8 + 8 * v7);
      if (!v16)
      {
        int64_t v7 = v15 + 2;
        if (v15 + 2 >= v12) {
          goto LABEL_24;
        }
        unint64_t v16 = *(void *)(v8 + 8 * v7);
        if (!v16) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v11 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v7 << 6);
LABEL_5:
    uint64_t result = (unint64_t *)objc_msgSend(a4, sel_evaluateWithObject_, *(void *)(*(void *)(a3 + 48) + 8 * v14), v19);
    if (result)
    {
      *(unint64_t *)((char *)v20 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      if (__OFADD__(v6++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return (unint64_t *)sub_191F3BE44(v20, v19, v6, a3);
      }
    }
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v12) {
    goto LABEL_24;
  }
  unint64_t v16 = *(void *)(v8 + 8 * v17);
  if (v16)
  {
    int64_t v7 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v7 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v7 >= v12) {
      goto LABEL_24;
    }
    unint64_t v16 = *(void *)(v8 + 8 * v7);
    ++v17;
    if (v16) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

unint64_t *sub_191F916FC(uint64_t a1, void *a2)
{
  v15[1] = *MEMORY[0x1E4F143B8];
  char v4 = *(unsigned char *)(a1 + 32);
  unsigned int v5 = v4 & 0x3F;
  unint64_t v6 = (unint64_t)((1 << v4) + 63) >> 6;
  uint64_t isStackAllocationSafe = a2;
  uint64_t v8 = (void *)isStackAllocationSafe;
  if (v5 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    uint64_t v9 = (char *)v15 - ((8 * v6 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v9, 8 * v6);
    id v10 = v8;
    unint64_t v11 = sub_191F91554((unint64_t *)v9, v6, a1, v10);
    swift_release();

    if (v2) {
      swift_willThrow();
    }
  }
  else
  {
    int64_t v12 = (void *)swift_slowAlloc();
    bzero(v12, 8 * v6);
    id v13 = v8;
    unint64_t v11 = sub_191F91554((unint64_t *)v12, v6, a1, v13);
    swift_release();

    MEMORY[0x192FEBAE0](v12, -1, -1);
  }
  return v11;
}

uint64_t sub_191F918B0(uint64_t a1, void *a2)
{
  if ((a1 & 0xC000000000000001) == 0) {
    return (uint64_t)sub_191F916FC(a1, a2);
  }
  uint64_t v2 = MEMORY[0x1E4FBC870];
  uint64_t v17 = MEMORY[0x1E4FBC870];
  id v3 = a2;
  sub_191FBA228();
  if (sub_191FBA258())
  {
    sub_191F442A4(0, (unint64_t *)&qword_1EB27BCB0);
    do
    {
      swift_dynamicCast();
      if (objc_msgSend(v3, sel_evaluateWithObject_, v16))
      {
        uint64_t v4 = v17;
        unint64_t v5 = *(void *)(v17 + 16);
        if (*(void *)(v17 + 24) <= v5)
        {
          sub_191FA0050(v5 + 1);
          uint64_t v4 = v17;
        }
        uint64_t result = sub_191FBA158();
        uint64_t v7 = v4 + 56;
        uint64_t v8 = -1 << *(unsigned char *)(v4 + 32);
        unint64_t v9 = result & ~v8;
        unint64_t v10 = v9 >> 6;
        if (((-1 << v9) & ~*(void *)(v4 + 56 + 8 * (v9 >> 6))) != 0)
        {
          unint64_t v11 = __clz(__rbit64((-1 << v9) & ~*(void *)(v4 + 56 + 8 * (v9 >> 6)))) | v9 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v12 = 0;
          unint64_t v13 = (unint64_t)(63 - v8) >> 6;
          do
          {
            if (++v10 == v13 && (v12 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v14 = v10 == v13;
            if (v10 == v13) {
              unint64_t v10 = 0;
            }
            v12 |= v14;
            uint64_t v15 = *(void *)(v7 + 8 * v10);
          }
          while (v15 == -1);
          unint64_t v11 = __clz(__rbit64(~v15)) + (v10 << 6);
        }
        *(void *)(v7 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
        *(void *)(*(void *)(v4 + 48) + 8 * v11) = v16;
        ++*(void *)(v4 + 16);
      }
      else
      {
      }
    }
    while (sub_191FBA258());
    uint64_t v2 = v17;
  }

  swift_release();
  return v2;
}

uint64_t sub_191F91ADC()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t objectdestroy_90Tm()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_191F91B58()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_191F91BA0(char *a1, void *a2)
{
  sub_191F8E5F0(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_191F91BAC()
{
  swift_unknownObjectUnownedDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_191F91BE4()
{
  return sub_191F8D99C();
}

uint64_t sub_191F91BEC()
{
  return sub_191F8DAAC();
}

void sub_191F91BF4(uint64_t a1)
{
}

void sub_191F91C14(uint64_t a1)
{
  sub_191F8DA20(a1, v1, &OBJC_IVAR____EXServiceClient__launchConnection);
}

uint64_t sub_191F91C38()
{
  return sub_191F8D894();
}

uint64_t sub_191F91C40()
{
  return sub_191F8D918();
}

void sub_191F91C48(uint64_t a1)
{
}

void sub_191F91C68(uint64_t a1)
{
  sub_191F8DA20(a1, v1, &OBJC_IVAR____EXServiceClient__tccProxyConnection);
}

void sub_191F91C8C()
{
}

uint64_t sub_191F91C94()
{
  return sub_191F8D1E0();
}

void sub_191F91C9C(uint64_t a1)
{
}

void sub_191F91CBC(uint64_t a1, uint64_t *a2)
{
  id Strong = (char *)swift_unknownObjectUnownedLoadStrong();
  uint64_t v4 = *a2;
  unint64_t v5 = *(void **)&Strong[*a2];
  *(void *)&Strong[v4] = 0;
}

void sub_191F91D00(uint64_t a1)
{
  sub_191F8DA20(a1, v1, &OBJC_IVAR____EXServiceClient__discoveryConnection);
}

void sub_191F91D24(uint64_t a1)
{
  sub_191F8DE5C(a1, *(void *)(v1 + 16));
}

uint64_t sub_191F91D40(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_191F91D9C(uint64_t a1)
{
  return a1;
}

uint64_t sub_191F91DF0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_191F91DFC()
{
}

void sub_191F92084(uint64_t a1, uint64_t a2)
{
  sub_191F53E80();
  id v3 = (id)sub_191FB9EC8();
  (*(void (**)(uint64_t, id))(a2 + 16))(a2, v3);
}

char *sub_191F922C8(unint64_t a1)
{
  swift_unknownObjectWeakInit();
  id v3 = objc_allocWithZone((Class)type metadata accessor for QueryController());
  uint64_t v4 = v1;
  *(void *)&v4[OBJC_IVAR____EXQueryController_innerController] = sub_191F39700(a1);

  v14.receiver = v4;
  v14.super_class = (Class)type metadata accessor for _EXQueryController();
  unint64_t v5 = (char *)objc_msgSendSuper2(&v14, sel_init);
  uint64_t v6 = *(void *)&v5[OBJC_IVAR____EXQueryController_innerController];
  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  unint64_t v9 = (uint64_t (**)())(v6 + OBJC_IVAR____TtC19ExtensionFoundation15QueryController_callbacks);
  uint64_t v10 = *(void *)(v6 + OBJC_IVAR____TtC19ExtensionFoundation15QueryController_callbacks);
  uint64_t v11 = *(void *)(v6 + OBJC_IVAR____TtC19ExtensionFoundation15QueryController_callbacks + 8);
  uint64_t v12 = *(void *)(v6 + OBJC_IVAR____TtC19ExtensionFoundation15QueryController_callbacks + 16);
  char *v9 = sub_191F55D94;
  v9[1] = (uint64_t (*)())v7;
  _OWORD v9[2] = (uint64_t (*)())sub_191F928FC;
  v9[3] = (uint64_t (*)())v8;
  sub_191F396B4(v10, v11, v12);
  return v5;
}

uint64_t sub_191F923F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x192FEBBF0](v3);
  if (result)
  {
    unint64_t v5 = (char *)result;
    uint64_t v6 = self;
    objc_msgSend(v6, sel_queryControllerDelegate_didUpdateController_enabledCount_disabledCount_unelectedCount_, MEMORY[0x192FEBBF0](&v5[OBJC_IVAR____EXQueryController_delegate]), v5, *(void *)(a1 + OBJC_IVAR____EXExtensionAvailablility_enabledCount), *(void *)(a1 + OBJC_IVAR____EXExtensionAvailablility_disabledCount), *(void *)(a1 + OBJC_IVAR____EXExtensionAvailablility_unelectedCount));

    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_191F925E4()
{
  id v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____EXQueryController_innerController), sel_description);
  uint64_t v2 = sub_191FB9DC8();

  return v2;
}

uint64_t sub_191F926AC()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____EXQueryController_innerController);
  uint64_t v2 = OBJC_IVAR____TtC19ExtensionFoundation15QueryController_extensionsLock;
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC19ExtensionFoundation15QueryController_extensionsLock);
  swift_retain();
  os_unfair_lock_lock(v3 + 4);
  swift_release();
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC19ExtensionFoundation15QueryController__internalExtensions);
  unint64_t v5 = *(os_unfair_lock_s **)(v1 + v2);
  swift_bridgeObjectRetain();
  swift_retain();
  os_unfair_lock_unlock(v5 + 4);
  swift_release();
  uint64_t v6 = sub_191F52C28(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  if (v6 < 0 || (v6 & 0x4000000000000000) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FD648);
    uint64_t v7 = sub_191FBA468();
    swift_release();
  }
  else
  {
    sub_191FBA5A8();
    uint64_t v7 = v6;
  }
  swift_release();
  return v7;
}

id _EXQueryController.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void _EXQueryController.init()()
{
}

id _EXQueryController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for _EXQueryController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for _EXQueryController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for _EXQueryController);
}

uint64_t sub_191F928C4()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_191F928FC(uint64_t a1)
{
  return sub_191F923F4(a1, v1);
}

uint64_t sub_191F92918()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_191F92950(uint64_t a1)
{
  sub_191F92084(a1, *(void *)(v1 + 16));
}

uint64_t sub_191F92958(uint64_t a1)
{
  return a1;
}

id static OS_os_log.general.getter()
{
  return sub_191F92B4C(&qword_1EB27C0C8, (void **)&qword_1EB27C0C0);
}

uint64_t sub_191F929AC()
{
  sub_191F2C950();
  uint64_t result = sub_191FBA198();
  qword_1E92FC678 = result;
  return result;
}

id static OS_os_log.discovery.getter()
{
  return sub_191F92B4C(&qword_1E92FC6A0, (void **)&qword_1E92FC678);
}

uint64_t sub_191F92A34()
{
  sub_191F2C950();
  uint64_t result = sub_191FBA198();
  qword_1E92FD830 = result;
  return result;
}

id static OS_os_log.prototypeInterfaces.getter()
{
  return sub_191F92B4C(&qword_1E92FD1A8, (void **)&qword_1E92FD830);
}

uint64_t sub_191F92AC0()
{
  sub_191F2C950();
  uint64_t result = sub_191FBA198();
  qword_1E92FD838 = result;
  return result;
}

id static OS_os_log.preferences.getter()
{
  return sub_191F92B4C(qword_1E92FD1B0, (void **)&qword_1E92FD838);
}

id sub_191F92B4C(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;

  return v3;
}

uint64_t sub_191F92B98(uint64_t a1)
{
  return sub_191F51E68(a1, qword_1E92FC7B0);
}

uint64_t static Logger.general.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_191F92CB8(&qword_1E92FC798, (uint64_t)qword_1E92FC7B0, a1);
}

uint64_t static Logger.launch.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_191F92CB8(&qword_1EB27BDC0, (uint64_t)qword_1EB27BDE8, a1);
}

uint64_t static Logger.discovery.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_191F92CB8(&qword_1EB27BC88, (uint64_t)qword_1EB27BC70, a1);
}

uint64_t sub_191F92C24(uint64_t a1)
{
  return sub_191F51E68(a1, qword_1E92FD840);
}

uint64_t static Logger.prototypeInterfaces.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_191F92CB8(&qword_1E92FD1C0, (uint64_t)qword_1E92FD840, a1);
}

uint64_t sub_191F92C6C(uint64_t a1)
{
  return sub_191F51E68(a1, qword_1E92FD858);
}

uint64_t static Logger.preferences.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_191F92CB8(&qword_1E92FD1C8, (uint64_t)qword_1E92FD858, a1);
}

uint64_t sub_191F92CB8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_191FB9CA8();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a3, v6, v5);
}

uint64_t sub_191F92D50(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_191FBA478();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_191FBA478();
    swift_bridgeObjectRelease();
    uint64_t v6 = v5 + v3;
    if (!__OFADD__(v5, v3)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v4 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v4;
  uint64_t v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v5 = 1;
  }
  if (v4 >> 62) {
    goto LABEL_27;
  }
  uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6) {
      uint64_t v9 = v6;
    }
    swift_bridgeObjectRetain();
    unint64_t v4 = MEMORY[0x192FEA550](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *uint64_t v1 = v4;
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = sub_191F93A58(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_191FBA478();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();

  return sub_191FB9EF8();
}

id sub_191F92F64()
{
  return sub_191F93524((uint64_t (*)(void))type metadata accessor for _EXDomainAttribute);
}

void sub_191F932B0(void *a1)
{
  if (a1)
  {
    objc_msgSend(a1, sel_copyWithZone_, 0);
    sub_191FBA1E8();
    swift_unknownObjectRelease();

    sub_191F442A4(0, (unint64_t *)&unk_1E92FC788);
    int v3 = swift_dynamicCast();
    uint64_t v4 = v6;
    if (!v3) {
      uint64_t v4 = 0;
    }
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v5 = *(void **)(v1 + OBJC_IVAR____EXLaunchConfiguration_launchPersona);
  *(void *)(v1 + OBJC_IVAR____EXLaunchConfiguration_launchPersona) = v4;
}

id sub_191F9350C()
{
  return sub_191F93524(type metadata accessor for _EXLaunchConfiguration);
}

id sub_191F93524(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_191F93564()
{
  return type metadata accessor for _EXLaunchConfiguration(0);
}

char *sub_191F9356C()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BE10);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____EXLaunchConfiguration__extensionIdentity);
  uint64_t v6 = (objc_class *)type metadata accessor for _EXHostConfiguration();
  id v7 = objc_allocWithZone(v6);
  id v8 = objc_allocWithZone(v6);
  id v9 = v5;
  uint64_t v10 = (char *)sub_191F45B68(v9, 0);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  uint64_t v11 = *(void **)(v1 + OBJC_IVAR____EXLaunchConfiguration_instanceIdentifier);
  uint64_t v12 = *(void **)&v10[OBJC_IVAR____EXHostConfiguration_instanceIdentifier];
  *(void *)&v10[OBJC_IVAR____EXHostConfiguration_instanceIdentifier] = v11;
  id v13 = v11;

  *(void *)&v10[OBJC_IVAR____EXHostConfiguration_preferredLanguages] = *(void *)(v1
                                                                                   + OBJC_IVAR____EXLaunchConfiguration_preferredLanguages);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(v1 + OBJC_IVAR____EXLaunchConfiguration_sandboxProfileName + 8);
  uint64_t v15 = &v10[OBJC_IVAR____EXHostConfiguration_sandboxProfileName];
  *(void *)uint64_t v15 = *(void *)(v1 + OBJC_IVAR____EXLaunchConfiguration_sandboxProfileName);
  *((void *)v15 + 1) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v10[OBJC_IVAR____EXHostConfiguration_additionalEnvironmentVariables] = *(void *)(v1
                                                                                               + OBJC_IVAR____EXLaunchConfiguration_additionalEnvironmentVariables);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v16 = *(void **)(v1 + OBJC_IVAR____EXLaunchConfiguration_launchPersona);
  uint64_t v17 = *(void **)&v10[OBJC_IVAR____EXHostConfiguration_launchPersona];
  *(void *)&v10[OBJC_IVAR____EXHostConfiguration_launchPersona] = v16;
  id v18 = v16;

  *(void *)&v10[OBJC_IVAR____EXHostConfiguration_assertionAttributes] = *(void *)(v1
                                                                                    + OBJC_IVAR____EXLaunchConfiguration_assertionAttributes);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = v1 + OBJC_IVAR____EXLaunchConfiguration_networkApplicationID;
  swift_beginAccess();
  sub_191F4CBD8(v19, (uint64_t)v4, &qword_1EB27BE10);
  uint64_t v20 = (uint64_t)&v10[OBJC_IVAR____EXHostConfiguration_networkApplicationID];
  swift_beginAccess();
  sub_191F45790((uint64_t)v4, v20);
  swift_endAccess();
  return v10;
}

BOOL sub_191F9380C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_191F93820()
{
  return sub_191FBA688();
}

uint64_t sub_191F93868()
{
  return sub_191FBA658();
}

uint64_t sub_191F93894()
{
  return sub_191FBA688();
}

uint64_t sub_191F938D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_191F93FE8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_191F93900()
{
  return 0;
}

void sub_191F9390C(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_191F93918(uint64_t a1)
{
  unint64_t v2 = sub_191F47240();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_191F93954(uint64_t a1)
{
  unint64_t v2 = sub_191F47240();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_191F93990(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_191FBA598();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  id v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_191FBA598() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_191F93A58(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_191FBA478();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_191FBA478();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_191F949C4(&qword_1E92FD8F0, (uint64_t *)&unk_1E92FD8E0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92FD8E0);
          BOOL v12 = sub_191F82A34(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_191F442A4(0, (unint64_t *)&unk_1EB27BBB0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_191FBA4C8();
  __break(1u);
  return result;
}

void sub_191F93C8C(unint64_t a1)
{
  unint64_t v1 = a1;
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_191FBA478();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BB40);
      uint64_t v3 = sub_191FBA2E8();
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_191FBA478();
      swift_bridgeObjectRelease();
      if (!v5) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = MEMORY[0x1E4FBC870];
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return;
  }
LABEL_9:
  uint64_t v7 = v3 + 56;
  uint64_t v43 = v5;
  if ((v1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = 0;
    unint64_t v41 = v1;
    while (1)
    {
      while (1)
      {
        uint64_t v9 = MEMORY[0x192FEA540](v8, v1);
        BOOL v10 = __OFADD__(v8++, 1);
        if (v10)
        {
          __break(1u);
          goto LABEL_36;
        }
        uint64_t v11 = v9;
        uint64_t v12 = sub_191FBA158();
        uint64_t v13 = -1 << *(unsigned char *)(v3 + 32);
        unint64_t v14 = v12 & ~v13;
        unint64_t v15 = v14 >> 6;
        uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
        uint64_t v17 = 1 << v14;
        if (((1 << v14) & v16) != 0) {
          break;
        }
LABEL_20:
        *(void *)(v7 + 8 * v15) = v17 | v16;
        *(void *)(*(void *)(v3 + 48) + 8 * v14) = v11;
        uint64_t v23 = *(void *)(v3 + 16);
        BOOL v10 = __OFADD__(v23, 1);
        uint64_t v24 = v23 + 1;
        if (v10) {
          goto LABEL_37;
        }
        *(void *)(v3 + 16) = v24;
        if (v8 == v5) {
          return;
        }
      }
      sub_191F442A4(0, (unint64_t *)&qword_1EB27BCB0);
      id v18 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
      char v19 = sub_191FBA168();

      if ((v19 & 1) == 0)
      {
        uint64_t v20 = ~v13;
        while (1)
        {
          unint64_t v14 = (v14 + 1) & v20;
          unint64_t v15 = v14 >> 6;
          uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
          uint64_t v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0) {
            break;
          }
          id v21 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
          char v22 = sub_191FBA168();

          if (v22) {
            goto LABEL_11;
          }
        }
        unint64_t v1 = v41;
        uint64_t v5 = v43;
        goto LABEL_20;
      }
LABEL_11:
      swift_unknownObjectRelease();
      unint64_t v1 = v41;
      uint64_t v5 = v43;
      if (v8 == v43) {
        return;
      }
    }
  }
  uint64_t v25 = 0;
  unint64_t v40 = v1 + 32;
  uint64_t v42 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v25 != v42)
  {
    id v26 = *(id *)(v40 + 8 * v25);
    uint64_t v27 = sub_191FBA158();
    uint64_t v28 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v29 = v27 & ~v28;
    unint64_t v30 = v29 >> 6;
    uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
    uint64_t v32 = 1 << v29;
    if (((1 << v29) & v31) != 0)
    {
      sub_191F442A4(0, (unint64_t *)&qword_1EB27BCB0);
      id v33 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
      char v34 = sub_191FBA168();

      if (v34)
      {
LABEL_24:

        goto LABEL_25;
      }
      uint64_t v35 = ~v28;
      while (1)
      {
        unint64_t v29 = (v29 + 1) & v35;
        unint64_t v30 = v29 >> 6;
        uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
        uint64_t v32 = 1 << v29;
        if ((v31 & (1 << v29)) == 0) {
          break;
        }
        id v36 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
        char v37 = sub_191FBA168();

        if (v37) {
          goto LABEL_24;
        }
      }
    }
    *(void *)(v7 + 8 * v30) = v32 | v31;
    *(void *)(*(void *)(v3 + 48) + 8 * v29) = v26;
    uint64_t v38 = *(void *)(v3 + 16);
    BOOL v10 = __OFADD__(v38, 1);
    uint64_t v39 = v38 + 1;
    if (v10) {
      goto LABEL_38;
    }
    *(void *)(v3 + 16) = v39;
LABEL_25:
    if (++v25 == v43) {
      return;
    }
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

uint64_t sub_191F93FE8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x8000000191FC6C30 || (sub_191FBA598() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000191FC6BF0 || (sub_191FBA598() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x8000000191FC6C10 || (sub_191FBA598() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000191FC7850 || (sub_191FBA598() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000191FC6CA0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v5 = sub_191FBA598();
    swift_bridgeObjectRelease();
    if (v5) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t *sub_191F941D8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    uint64_t v8 = *(int *)(a3 + 32);
    uint64_t v9 = (char *)a2 + v8;
    __dst = (char *)a1 + v8;
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v10 = sub_191FB9CE8();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BE10);
      memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
    }
  }
  return v3;
}

void *sub_191F9438C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_191FB9CE8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BE10);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_191F94574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 32);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (const void *)(a2 + v5);
  uint64_t v8 = sub_191FB9CE8();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BE10);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *sub_191F94698(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_191FB9CE8();
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BE10);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t sub_191F94850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191F94864);
}

uint64_t sub_191F94864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BE10);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_191F94918(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BE10);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_191F949C4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_191F94A30(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_191F94A38(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

unint64_t sub_191F94A44()
{
  unint64_t result = qword_1E92FD8F8;
  if (!qword_1E92FD8F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92FD8F8);
  }
  return result;
}

Swift::Bool __swiftcall _ConnectionHandler.shouldAccept(connection:)(NSXPCConnection connection)
{
  return 0;
}

uint64_t dispatch thunk of _ConnectionHandler.shouldAccept(connection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t static _EXExtensionAvailablility.supportsSecureCoding.getter()
{
  return 1;
}

void sub_191F94B24(void *a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____EXExtensionAvailablility_enabledCount);
  unint64_t v4 = (void *)sub_191FB9DA8();
  objc_msgSend(a1, sel_encodeInteger_forKey_, v3, v4);

  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____EXExtensionAvailablility_disabledCount);
  uint64_t v6 = (void *)sub_191FB9DA8();
  objc_msgSend(a1, sel_encodeInteger_forKey_, v5, v6);

  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____EXExtensionAvailablility_unelectedCount);
  id v8 = (id)sub_191FB9DA8();
  objc_msgSend(a1, sel_encodeInteger_forKey_, v7, v8);
}

id _EXExtensionAvailablility.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = sub_191F97F10(a1);

  return v4;
}

id _EXExtensionAvailablility.init(coder:)(void *a1)
{
  id v2 = sub_191F97F10(a1);

  return v2;
}

id _EXExtensionAvailablility.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for _EXExtensionAvailablility();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_191F94D94()
{
  sub_191F953A0();
  uint64_t v1 = v0 + OBJC_IVAR____TtC19ExtensionFoundation33_EXExtensionAvailablilityObserver_uuid;
  uint64_t v2 = sub_191FB9C68();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x1F4186488](v0, v3, v4);
}

void sub_191F94E5C()
{
  uint64_t v2 = v0;
  unint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC19ExtensionFoundation33_EXExtensionAvailablilityObserver_queries);
  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  if (!sub_191FBA478()) {
    goto LABEL_19;
  }
LABEL_3:
  if ((v3 & 0xC000000000000001) != 0)
  {
LABEL_20:
    id v5 = (id)MEMORY[0x192FEA540](0, v3);
    goto LABEL_6;
  }
  if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_22:
    swift_once();
LABEL_8:
    id v8 = (void *)qword_1EB27C518;
    type metadata accessor for _EXQuery();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    if (objc_msgSend(v1, sel_isKindOfClass_, ObjCClassFromMetadata))
    {
      id v10 = v1;
      sub_191F96590(v2, v10, v8);

      if ((objc_msgSend(v10, sel_isKindOfClass_, ObjCClassFromMetadata) & 1) == 0)
      {
LABEL_25:
        id v15 = objc_msgSend(self, sel__EX_parameterError);
        swift_willThrow();
        swift_unexpectedError();
        __break(1u);
        goto LABEL_26;
      }
      id v21 = (char *)v10;
      uint64_t v11 = (char *)sub_191F3FE40(v21);

      uint64_t v12 = *(void **)&v11[OBJC_IVAR____EXQueryResult_availablility];
      if (v12)
      {
        int v13 = *(void (**)(id))(v2
                                        + OBJC_IVAR____TtC19ExtensionFoundation33_EXExtensionAvailablilityObserver_observerBlock);
        type metadata accessor for _EXExtensionAvailablility();
        uint64_t v14 = swift_getObjCClassFromMetadata();
        id v15 = v12;
        if (objc_msgSend(v15, sel_isKindOfClass_, v14))
        {
          v13(v15);

          return;
        }
LABEL_26:
        id v20 = objc_msgSend(self, sel__EX_parameterError);
        swift_willThrow();

        swift_unexpectedError();
        __break(1u);
        return;
      }
      __break(1u);
    }
    id v19 = objc_msgSend(self, sel__EX_parameterError);
    swift_willThrow();
    swift_unexpectedError();
    __break(1u);
    goto LABEL_25;
  }
  id v5 = *(id *)(v3 + 32);
LABEL_6:
  uint64_t v1 = v5;
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(self, sel_sharedInstance);
  unsigned int v7 = objc_msgSend(v6, sel_preferInProcessDiscovery);

  if (v7)
  {
    if (qword_1EB27BBA8 == -1) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
  if (qword_1E92FC760 != -1) {
    swift_once();
  }
  v22[3] = type metadata accessor for _EXExtensionAvailablilityObserver();
  uint64_t v23 = sub_191F3DE5C(&qword_1E92FD990, (void (*)(uint64_t))type metadata accessor for _EXExtensionAvailablilityObserver);
  v22[0] = v2;
  MEMORY[0x1F4188790](v23);
  uint64_t v17 = v16 + 4;
  swift_retain_n();
  os_unfair_lock_lock(v17);
  sub_191F87E98(v18);
  os_unfair_lock_unlock(v17);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v22);
  swift_release();
  swift_retain();
  sub_191F8E928(v1, (uint64_t)sub_191F9831C, v2);
  swift_release();
}

void sub_191F952BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a1 + OBJC_IVAR____EXQueryResult_availablility);
  if (!v2)
  {
    __break(1u);
    goto LABEL_7;
  }
  unint64_t v3 = *(void (**)(void))(a2 + OBJC_IVAR____TtC19ExtensionFoundation33_EXExtensionAvailablilityObserver_observerBlock);
  type metadata accessor for _EXExtensionAvailablility();
  if (!objc_msgSend(v2, sel_isKindOfClass_, swift_getObjCClassFromMetadata()))
  {
LABEL_7:
    id v4 = objc_msgSend(self, sel__EX_parameterError);
    swift_willThrow();
    swift_unexpectedError();
    __break(1u);
    return;
  }
  id v5 = v2;
  v3();
}

void sub_191F953A0()
{
  uint64_t v2 = v0;
  unint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC19ExtensionFoundation33_EXExtensionAvailablilityObserver_queries);
  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  if (!sub_191FBA478()) {
    goto LABEL_16;
  }
LABEL_3:
  if ((v3 & 0xC000000000000001) != 0)
  {
LABEL_17:
    id v5 = (id)MEMORY[0x192FEA540](0, v3);
    goto LABEL_6;
  }
  if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_19:
    swift_once();
LABEL_8:
    id v8 = (void *)qword_1EB27C518;
    type metadata accessor for _EXQuery();
    if (objc_msgSend(v1, sel_isKindOfClass_, swift_getObjCClassFromMetadata()))
    {
      id v13 = v1;
      sub_191F976DC(v2, v13, v8);
    }
    else
    {
      id v12 = objc_msgSend(self, sel__EX_parameterError);
      swift_willThrow();
      swift_unexpectedError();
      __break(1u);
    }
    return;
  }
  id v5 = *(id *)(v3 + 32);
LABEL_6:
  uint64_t v1 = v5;
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(self, sel_sharedInstance);
  unsigned int v7 = objc_msgSend(v6, sel_preferInProcessDiscovery);

  if (v7)
  {
    if (qword_1EB27BBA8 == -1) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
  if (qword_1E92FC760 != -1) {
    swift_once();
  }
  v14[3] = type metadata accessor for _EXExtensionAvailablilityObserver();
  uint64_t v15 = sub_191F3DE5C(&qword_1E92FD990, (void (*)(uint64_t))type metadata accessor for _EXExtensionAvailablilityObserver);
  v14[0] = v2;
  MEMORY[0x1F4188790](v15);
  id v10 = v9 + 4;
  swift_retain_n();
  os_unfair_lock_lock(v10);
  sub_191F87E7C(v11);
  os_unfair_lock_unlock(v10);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v14);
  swift_release();
}

void sub_191F95694(uint64_t a1, uint64_t a2)
{
}

void sub_191F9569C(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_191F956C4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_191F956D8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for _EXExtensionAvailablilityObserver();
  uint64_t result = sub_191FBA328();
  *a1 = result;
  return result;
}

uint64_t sub_191F9571C()
{
  return sub_191FBA688();
}

uint64_t sub_191F9576C()
{
  return sub_191FB9C38();
}

uint64_t sub_191F9579C()
{
  return sub_191FBA688();
}

uint64_t sub_191F957E8()
{
  return sub_191FB9C18();
}

void sub_191F95804(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for _EXExtensionAvailablilityObserver();
  uint64_t v7 = swift_allocObject();
  swift_retain();
  sub_191FB9C58();
  uint64_t v8 = OBJC_IVAR____TtC19ExtensionFoundation33_EXExtensionAvailablilityObserver_queries;
  uint64_t v9 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for _EXQuery()), sel_init);
  *(void *)&v9[OBJC_IVAR____EXQuery_resultType] = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BE50);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_191FBFCE0;
  *(void *)(v10 + 32) = v9;
  uint64_t v12 = v10;
  sub_191FB9EF8();
  *(void *)(v7 + v8) = v12;
  uint64_t v11 = (void *)(v7 + OBJC_IVAR____TtC19ExtensionFoundation33_EXExtensionAvailablilityObserver_observerBlock);
  void *v11 = a1;
  v11[1] = a2;
  sub_191F94E5C();
  a3[3] = v6;
  *a3 = v7;
}

uint64_t sub_191F95AA4(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  if ((v4 & 0xC000000000000001) == 0)
  {
LABEL_8:
    swift_bridgeObjectRetain();
    a1 = sub_191F3DA34(a1);
    char v13 = v12;
    swift_bridgeObjectRelease();
    if (v13)
    {
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v9 = *v2;
      uint64_t v17 = *v2;
      *uint64_t v2 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_191F9636C();
        uint64_t v9 = v17;
      }
      goto LABEL_11;
    }
    return 0;
  }
  if (v4 < 0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = v4 & 0xFFFFFFFFFFFFFF8;
  }
  swift_bridgeObjectRetain();
  id v6 = (id)a1;
  uint64_t v7 = sub_191FBA428();

  if (!v7)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_unknownObjectRelease();
  uint64_t v8 = sub_191FBA238();
  uint64_t v9 = sub_191F95BF4(v5, v8);
  swift_retain();
  a1 = sub_191F3DA34((uint64_t)v6);
  char v11 = v10;
  swift_release();
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
LABEL_11:

  uint64_t v15 = *(void *)(*(void *)(v9 + 56) + 8 * a1);
  sub_191F961B8(a1, v9);
  *uint64_t v2 = v9;
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_191F95BF4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FC730);
    uint64_t v2 = sub_191FBA4A8();
    uint64_t v18 = v2;
    sub_191FBA408();
    uint64_t v3 = sub_191FBA438();
    if (v3)
    {
      uint64_t v4 = v3;
      type metadata accessor for _EXQuery();
      do
      {
        swift_dynamicCast();
        type metadata accessor for _EXActiveQuery();
        swift_dynamicCast();
        uint64_t v2 = v18;
        unint64_t v12 = *(void *)(v18 + 16);
        if (*(void *)(v18 + 24) <= v12)
        {
          sub_191F3DB84(v12 + 1, 1);
          uint64_t v2 = v18;
        }
        uint64_t result = sub_191FBA158();
        uint64_t v6 = v2 + 64;
        uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v8 = result & ~v7;
        unint64_t v9 = v8 >> 6;
        if (((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          unint64_t v10 = __clz(__rbit64((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v13 = 0;
          unint64_t v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v15 = v9 == v14;
            if (v9 == v14) {
              unint64_t v9 = 0;
            }
            v13 |= v15;
            uint64_t v16 = *(void *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          unint64_t v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(void *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        uint64_t v11 = 8 * v10;
        *(void *)(*(void *)(v2 + 48) + v11) = v17;
        *(void *)(*(void *)(v2 + 56) + v11) = v4;
        ++*(void *)(v2 + 16);
        uint64_t v4 = sub_191FBA438();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC868];
  }
  return v2;
}

uint64_t sub_191F95E20(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FC590);
  char v48 = a2;
  uint64_t v6 = sub_191FBA498();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v43 = v3;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v45 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v44 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v47 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    uint64_t v46 = v5;
    while (1)
    {
      if (v10)
      {
        uint64_t v49 = (v10 - 1) & v10;
        int64_t v50 = v12;
        unint64_t v21 = __clz(__rbit64(v10)) | (v12 << 6);
      }
      else
      {
        int64_t v22 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v44) {
          goto LABEL_33;
        }
        unint64_t v23 = v45[v22];
        int64_t v24 = v12 + 1;
        if (!v23)
        {
          int64_t v24 = v12 + 2;
          if (v12 + 2 >= v44) {
            goto LABEL_33;
          }
          unint64_t v23 = v45[v24];
          if (!v23)
          {
            uint64_t v25 = v12 + 3;
            if (v12 + 3 >= v44)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v43;
              if (v48)
              {
                uint64_t v42 = 1 << *(unsigned char *)(v5 + 32);
                if (v42 >= 64) {
                  bzero(v45, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v45 = -1 << v42;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v45[v25];
            if (!v23)
            {
              while (1)
              {
                int64_t v24 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_40;
                }
                if (v24 >= v44) {
                  goto LABEL_33;
                }
                unint64_t v23 = v45[v24];
                ++v25;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v24 = v12 + 3;
          }
        }
LABEL_30:
        uint64_t v49 = (v23 - 1) & v23;
        int64_t v50 = v24;
        unint64_t v21 = __clz(__rbit64(v23)) + (v24 << 6);
      }
      uint64_t v30 = *(void *)(v5 + 56);
      uint64_t v31 = (unsigned int *)(*(void *)(v5 + 48) + 32 * v21);
      unsigned int v33 = *v31;
      unsigned int v32 = v31[1];
      unsigned int v35 = v31[2];
      unsigned int v34 = v31[3];
      unsigned int v36 = v31[4];
      unsigned int v37 = v31[5];
      unsigned int v39 = v31[6];
      unsigned int v38 = v31[7];
      unint64_t v40 = *(void **)(v30 + 8 * v21);
      if ((v48 & 1) == 0) {
        id v41 = v40;
      }
      sub_191FBA648();
      atoken.val[0] = v33;
      atoken.val[1] = v32;
      atoken.val[2] = v35;
      atoken.val[3] = v34;
      atoken.val[4] = v36;
      atoken.val[5] = v37;
      atoken.val[6] = v39;
      atoken.val[7] = v38;
      audit_token_to_pid(&atoken);
      sub_191FBA678();
      atoken.val[0] = v33;
      atoken.val[1] = v32;
      atoken.val[2] = v35;
      atoken.val[3] = v34;
      atoken.val[4] = v36;
      atoken.val[5] = v37;
      atoken.val[6] = v39;
      atoken.val[7] = v38;
      audit_token_to_pidversion(&atoken);
      sub_191FBA678();
      uint64_t v13 = sub_191FBA688();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = v13 & ~v14;
      unint64_t v16 = v15 >> 6;
      uint64_t result = v47;
      if (((-1 << v15) & ~*(void *)(v47 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v47 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
        uint64_t v18 = v40;
        unsigned int v19 = v33;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v14) >> 6;
        uint64_t v18 = v40;
        unsigned int v19 = v33;
        do
        {
          if (++v16 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v16 == v27;
          if (v16 == v27) {
            unint64_t v16 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v47 + 8 * v16);
        }
        while (v29 == -1);
        unint64_t v17 = __clz(__rbit64(~v29)) + (v16 << 6);
      }
      *(void *)(v47 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      id v20 = (unsigned int *)(*(void *)(v7 + 48) + 32 * v17);
      *id v20 = v19;
      v20[1] = v32;
      v20[2] = v35;
      void v20[3] = v34;
      v20[4] = v36;
      uint64_t v20[5] = v37;
      v20[6] = v39;
      v20[7] = v38;
      *(void *)(*(void *)(v7 + 56) + 8 * v17) = v18;
      ++*(void *)(v7 + 16);
      uint64_t v5 = v46;
      unint64_t v10 = v49;
      int64_t v12 = v50;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void sub_191F961B8(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_191FBA208();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        id v10 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        uint64_t v11 = sub_191FBA158();

        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            uint64_t v15 = *(void *)(a2 + 48);
            unint64_t v16 = (void *)(v15 + 8 * v3);
            unint64_t v17 = (void *)(v15 + 8 * v6);
            if (v3 != v6 || v16 >= v17 + 1) {
              *unint64_t v16 = *v17;
            }
            uint64_t v18 = *(void *)(a2 + 56);
            unsigned int v19 = (void *)(v18 + 8 * v3);
            id v20 = (void *)(v18 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v19 >= v20 + 1))
            {
              *unsigned int v19 = *v20;
              int64_t v3 = v6;
            }
          }
        }
        else if (v12 >= v9 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v21 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << a1) - 1;
  }
  *unint64_t v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
}

void *sub_191F9636C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FC730);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_191FBA488();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    uint64_t result = (void *)swift_retain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_191F96518(uint64_t a1, void *a2, void *a3)
{
}

void sub_191F96590(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6 = sub_191F3DE5C((unint64_t *)&unk_1E92FC4D8, (void (*)(uint64_t))type metadata accessor for _EXExtensionAvailablilityObserver);
  if (sub_191F418CC((uint64_t)a2))
  {
    if (qword_1EB27BC88 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_191FB9CA8();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EB27BC70);
    id v8 = a3;
    id v9 = a2;
    uint64_t v10 = (char *)v8;
    id v11 = v9;
    unint64_t v12 = sub_191FB9C88();
    os_log_type_t v13 = sub_191FBA088();
    unsigned int v58 = v10;
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      unint64_t v15 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 138543618;
      uint64_t v16 = v10;
      sub_191FBA1C8();
      void *v15 = v58;

      *(_WORD *)(v14 + 12) = 2114;
      aBlock[0] = v11;
      id v17 = v11;
      uint64_t v10 = v58;
      sub_191FBA1C8();
      v15[1] = v11;

      _os_log_impl(&dword_191F29000, v12, v13, "%{public}@ Adding observer for query '%{public}@'", (uint8_t *)v14, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
      swift_arrayDestroy();
      MEMORY[0x192FEBAE0](v15, -1, -1);
      MEMORY[0x192FEBAE0](v14, -1, -1);
    }
    else
    {
    }
    BOOL v28 = (os_unfair_lock_s *)(*(void *)&v10[OBJC_IVAR____EXDiscoveryController_activeQueriesLock] + 16);
    os_unfair_lock_lock(v28);
    uint64_t v29 = (uint64_t *)&v10[OBJC_IVAR____EXDiscoveryController_activeQueries];
    swift_beginAccess();
    uint64_t v30 = *v29;
    if ((*v29 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = v58;
      uint64_t v57 = sub_191FBA238();
      swift_bridgeObjectRelease();
      uint64_t v30 = *v29;
    }
    else
    {
      uint64_t v57 = *(void *)(v30 + 16);
    }
    id v31 = v11;
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_191F3D750(v31, v30);

    swift_bridgeObjectRelease();
    if (v32)
    {
      uint64_t v33 = v57;
    }
    else
    {
      type metadata accessor for _EXActiveQuery();
      unsigned int v34 = (void *)swift_allocObject();
      v34[2] = v31;
      v34[3] = v10;
      uint64_t v35 = MEMORY[0x1E4FBC870];
      v34[4] = MEMORY[0x1E4FBC870];
      v34[5] = v35;
      v34[6] = v35;
      swift_beginAccess();
      unsigned int v36 = v10;
      id v37 = v31;
      uint64_t v38 = swift_retain();
      sub_191F3D81C(v38, v37);
      swift_endAccess();
      unsigned int v39 = v37;
      unint64_t v40 = sub_191FB9C88();
      os_log_type_t v41 = sub_191FBA088();
      if (os_log_type_enabled(v40, v41))
      {
        uint64_t v42 = (uint8_t *)swift_slowAlloc();
        uint64_t v56 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v42 = 138543362;
        aBlock[0] = v39;
        uint64_t v43 = v39;
        sub_191FBA1C8();
        *uint64_t v56 = v39;

        _os_log_impl(&dword_191F29000, v40, v41, "New active query %{public}@'", v42, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
        swift_arrayDestroy();
        MEMORY[0x192FEBAE0](v56, -1, -1);
        MEMORY[0x192FEBAE0](v42, -1, -1);
        unsigned int v39 = v40;
      }
      else
      {
      }
      uint64_t v33 = v57;

      swift_retain();
      uint64_t v10 = v58;
    }
    swift_beginAccess();
    swift_retain_n();
    swift_retain();
    sub_191F3CEB8((uint64_t)v60, a1, v6);
    swift_endAccess();
    swift_unknownObjectRelease();
    swift_beginAccess();
    swift_retain();
    sub_191F3CEB8((uint64_t)v60, a1, v6);
    swift_endAccess();
    swift_release();
    swift_unknownObjectRelease();
    if (v33 <= 0)
    {
      int64_t v44 = v10;
      uint64_t v45 = sub_191FB9C88();
      os_log_type_t v46 = sub_191FBA088();
      if (os_log_type_enabled(v45, v46))
      {
        uint64_t v47 = (uint8_t *)swift_slowAlloc();
        char v48 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v47 = 138543362;
        aBlock[0] = v44;
        uint64_t v49 = v44;
        sub_191FBA1C8();
        *char v48 = v44;

        _os_log_impl(&dword_191F29000, v45, v46, "%{public}@ LS database observing started.", v47, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
        swift_arrayDestroy();
        MEMORY[0x192FEBAE0](v48, -1, -1);
        MEMORY[0x192FEBAE0](v47, -1, -1);
      }
      else
      {

        uint64_t v45 = v44;
      }

      id v50 = objc_msgSend(self, sel_sharedInstance);
      uint64_t v51 = swift_allocObject();
      *(void *)(v51 + 16) = v44;
      aBlock[4] = sub_191F9835C;
      aBlock[5] = v51;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_191F34288;
      aBlock[3] = &block_descriptor_5;
      uint64_t v52 = _Block_copy(aBlock);
      __int16 v53 = v44;
      swift_release();
      id v54 = objc_msgSend(v50, sel_addChangeObserver_, v52);
      _Block_release(v52);

      sub_191FBA1E8();
      swift_unknownObjectRelease();
      uint64_t v55 = (uint64_t)v53 + OBJC_IVAR____EXDiscoveryController_settingsStoreToken;
      swift_beginAccess();
      sub_191F52BC0((uint64_t)aBlock, v55);
      swift_endAccess();
      objc_msgSend(*(id *)((char *)&v53->isa + OBJC_IVAR____EXDiscoveryController_observer), sel_startObserving);
    }
    sub_191F3E628();
    swift_release_n();
    os_unfair_lock_unlock(v28);
  }
  else
  {
    if (qword_1EB27BC88 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_191FB9CA8();
    __swift_project_value_buffer(v18, (uint64_t)qword_1EB27BC70);
    id v19 = a3;
    id v20 = a2;
    id v59 = v19;
    id v21 = v20;
    int64_t v22 = sub_191FB9C88();
    os_log_type_t v23 = sub_191FBA068();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      BOOL v25 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 138543618;
      id v26 = v59;
      sub_191FBA1C8();
      void *v25 = v59;

      *(_WORD *)(v24 + 12) = 2114;
      aBlock[0] = v21;
      id v27 = v21;
      sub_191FBA1C8();
      v25[1] = v21;

      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
      swift_arrayDestroy();
      MEMORY[0x192FEBAE0](v25, -1, -1);
      MEMORY[0x192FEBAE0](v24, -1, -1);
    }
    else
    {
    }
  }
}

void sub_191F96F4C(void *a1, void *a2, void *a3)
{
}

void sub_191F96F80(void *a1, void *a2, void *a3)
{
}

void sub_191F96FB4(void *a1, void *a2, void *a3, unint64_t *a4, void (*a5)(uint64_t))
{
  sub_191F3DE5C(a4, a5);
  if (qword_1EB27BC88 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_191FB9CA8();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EB27BC70);
  id v9 = a3;
  id v10 = a2;
  id v11 = (char *)v9;
  id v12 = v10;
  os_log_type_t v13 = sub_191FB9C88();
  os_log_type_t v14 = sub_191FBA088();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v16 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 138543618;
    id v17 = v11;
    sub_191FBA1C8();
    *uint64_t v16 = v11;

    *(_WORD *)(v15 + 12) = 2114;
    *(void *)&long long v48 = v12;
    id v18 = v12;
    sub_191FBA1C8();
    v16[1] = v12;

    _os_log_impl(&dword_191F29000, v13, v14, "%{public}@ Removing observer for query '%{public}@'", (uint8_t *)v15, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
    swift_arrayDestroy();
    MEMORY[0x192FEBAE0](v16, -1, -1);
    MEMORY[0x192FEBAE0](v15, -1, -1);
  }
  else
  {
  }
  id v19 = (os_unfair_lock_s *)(*(void *)&v11[OBJC_IVAR____EXDiscoveryController_activeQueriesLock] + 16);
  os_unfair_lock_lock(v19);
  id v20 = (uint64_t *)&v11[OBJC_IVAR____EXDiscoveryController_activeQueries];
  swift_beginAccess();
  uint64_t v21 = *v20;
  id v22 = v12;
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_191F3D750(v22, v21);

  swift_bridgeObjectRelease();
  if (v23)
  {
    swift_beginAccess();
    swift_unknownObjectRetain();
    sub_191FA23E4();
    swift_endAccess();
    swift_unknownObjectRelease();
    swift_beginAccess();
    sub_191FA23E4();
    swift_endAccess();

    swift_unknownObjectRelease();
    uint64_t v24 = *(void *)(sub_191F9F024() + 16);
    swift_bridgeObjectRelease();
    if (!v24)
    {
      BOOL v25 = v11;
      id v26 = v22;
      id v27 = v25;
      id v28 = v26;
      uint64_t v29 = sub_191FB9C88();
      os_log_type_t v30 = sub_191FBA058();
      if (os_log_type_enabled(v29, v30))
      {
        uint64_t v45 = v19;
        uint64_t v31 = swift_slowAlloc();
        int64_t v44 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v31 = 138543618;
        uint64_t v32 = v27;
        sub_191FBA1C8();
        void *v44 = v27;

        *(_WORD *)(v31 + 12) = 2114;
        *(void *)&long long v48 = v28;
        id v33 = v28;
        sub_191FBA1C8();
        v44[1] = v28;

        id v27 = v29;
        _os_log_impl(&dword_191F29000, v29, v30, "%{public}@  No more observers for query '%{public}@ '", (uint8_t *)v31, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
        swift_arrayDestroy();
        MEMORY[0x192FEBAE0](v44, -1, -1);
        uint64_t v34 = v31;
        id v19 = v45;
        MEMORY[0x192FEBAE0](v34, -1, -1);
      }
      else
      {
      }
      swift_beginAccess();
      sub_191F95AA4((unint64_t)v28);
      swift_endAccess();
      swift_release();
    }
    if ((*v20 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v35 = sub_191FBA238();
      swift_bridgeObjectRelease();
      if (v35)
      {
LABEL_14:
        swift_release();
        goto LABEL_22;
      }
    }
    else if (*(void *)(*v20 + 16))
    {
      goto LABEL_14;
    }
    objc_msgSend(*(id *)&v11[OBJC_IVAR____EXDiscoveryController_observer], sel_stopObserving, v44);
    unsigned int v36 = v11;
    id v37 = sub_191FB9C88();
    os_log_type_t v38 = sub_191FBA088();
    if (os_log_type_enabled(v37, v38))
    {
      unsigned int v39 = (uint8_t *)swift_slowAlloc();
      unint64_t v40 = (void *)swift_slowAlloc();
      *(_DWORD *)unsigned int v39 = 138543362;
      *(void *)&long long v48 = v36;
      os_log_type_t v41 = v36;
      sub_191FBA1C8();
      *unint64_t v40 = v36;

      _os_log_impl(&dword_191F29000, v37, v38, "%{public}@ LS database observing stopped", v39, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
      swift_arrayDestroy();
      MEMORY[0x192FEBAE0](v40, -1, -1);
      MEMORY[0x192FEBAE0](v39, -1, -1);
    }
    else
    {

      id v37 = v36;
    }

    uint64_t v42 = (uint64_t)v36 + OBJC_IVAR____EXDiscoveryController_settingsStoreToken;
    swift_beginAccess();
    sub_191F35F30(v42, (uint64_t)&v46);
    if (v47)
    {
      sub_191F4D994(&v46, &v48);
      id v43 = objc_msgSend(self, sel_sharedInstance);
      __swift_project_boxed_opaque_existential_2Tm(&v48, v49);
      objc_msgSend(v43, sel_removeChangeObserver_, sub_191FBA588());
      swift_release();

      swift_unknownObjectRelease();
      __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)&v48);
    }
    else
    {
      swift_release();
      sub_191F35A6C((uint64_t)&v46);
    }
  }
LABEL_22:
  os_unfair_lock_unlock(v19);
}

void sub_191F976DC(uint64_t a1, void *a2, void *a3)
{
  sub_191F3DE5C((unint64_t *)&unk_1E92FC4D8, (void (*)(uint64_t))type metadata accessor for _EXExtensionAvailablilityObserver);
  if (qword_1EB27BC88 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_191FB9CA8();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EB27BC70);
  id v6 = a3;
  id v7 = a2;
  uint64_t v8 = (char *)v6;
  id v9 = v7;
  id v10 = sub_191FB9C88();
  os_log_type_t v11 = sub_191FBA088();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    os_log_type_t v13 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 138543618;
    os_log_type_t v14 = v8;
    sub_191FBA1C8();
    *os_log_type_t v13 = v8;

    *(_WORD *)(v12 + 12) = 2114;
    *(void *)&long long v45 = v9;
    id v15 = v9;
    sub_191FBA1C8();
    v13[1] = v9;

    _os_log_impl(&dword_191F29000, v10, v11, "%{public}@ Removing observer for query '%{public}@'", (uint8_t *)v12, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
    swift_arrayDestroy();
    MEMORY[0x192FEBAE0](v13, -1, -1);
    MEMORY[0x192FEBAE0](v12, -1, -1);
  }
  else
  {
  }
  uint64_t v16 = (os_unfair_lock_s *)(*(void *)&v8[OBJC_IVAR____EXDiscoveryController_activeQueriesLock] + 16);
  os_unfair_lock_lock(v16);
  id v17 = (uint64_t *)&v8[OBJC_IVAR____EXDiscoveryController_activeQueries];
  swift_beginAccess();
  uint64_t v18 = *v17;
  id v19 = v9;
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_191F3D750(v19, v18);

  swift_bridgeObjectRelease();
  if (v20)
  {
    swift_beginAccess();
    swift_unknownObjectRetain();
    sub_191FA23E4();
    swift_endAccess();
    swift_unknownObjectRelease();
    swift_beginAccess();
    sub_191FA23E4();
    swift_endAccess();
    swift_release();
    swift_unknownObjectRelease();
    uint64_t v21 = *(void *)(sub_191F9F024() + 16);
    swift_bridgeObjectRelease();
    if (!v21)
    {
      id v22 = v8;
      id v23 = v19;
      uint64_t v24 = v22;
      id v25 = v23;
      id v26 = sub_191FB9C88();
      os_log_type_t v27 = sub_191FBA058();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v42 = v16;
        uint64_t v28 = swift_slowAlloc();
        os_log_type_t v41 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v28 = 138543618;
        uint64_t v29 = v24;
        sub_191FBA1C8();
        void *v41 = v24;

        *(_WORD *)(v28 + 12) = 2114;
        *(void *)&long long v45 = v25;
        id v30 = v25;
        sub_191FBA1C8();
        v41[1] = v25;

        uint64_t v24 = v26;
        _os_log_impl(&dword_191F29000, v26, v27, "%{public}@  No more observers for query '%{public}@ '", (uint8_t *)v28, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
        swift_arrayDestroy();
        MEMORY[0x192FEBAE0](v41, -1, -1);
        uint64_t v31 = v28;
        uint64_t v16 = v42;
        MEMORY[0x192FEBAE0](v31, -1, -1);
      }
      else
      {
      }
      swift_beginAccess();
      sub_191F95AA4((unint64_t)v25);
      swift_endAccess();
      swift_release();
    }
    if ((*v17 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v32 = sub_191FBA238();
      swift_bridgeObjectRelease();
      if (v32)
      {
LABEL_14:
        swift_release();
        goto LABEL_22;
      }
    }
    else if (*(void *)(*v17 + 16))
    {
      goto LABEL_14;
    }
    objc_msgSend(*(id *)&v8[OBJC_IVAR____EXDiscoveryController_observer], sel_stopObserving, v41);
    id v33 = v8;
    uint64_t v34 = sub_191FB9C88();
    os_log_type_t v35 = sub_191FBA088();
    if (os_log_type_enabled(v34, v35))
    {
      unsigned int v36 = (uint8_t *)swift_slowAlloc();
      id v37 = (void *)swift_slowAlloc();
      *(_DWORD *)unsigned int v36 = 138543362;
      *(void *)&long long v45 = v33;
      os_log_type_t v38 = v33;
      sub_191FBA1C8();
      void *v37 = v33;

      _os_log_impl(&dword_191F29000, v34, v35, "%{public}@ LS database observing stopped", v36, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
      swift_arrayDestroy();
      MEMORY[0x192FEBAE0](v37, -1, -1);
      MEMORY[0x192FEBAE0](v36, -1, -1);
    }
    else
    {

      uint64_t v34 = v33;
    }

    uint64_t v39 = (uint64_t)v33 + OBJC_IVAR____EXDiscoveryController_settingsStoreToken;
    swift_beginAccess();
    sub_191F35F30(v39, (uint64_t)&v43);
    if (v44)
    {
      sub_191F4D994(&v43, &v45);
      id v40 = objc_msgSend(self, sel_sharedInstance);
      __swift_project_boxed_opaque_existential_2Tm(&v45, v46);
      objc_msgSend(v40, sel_removeChangeObserver_, sub_191FBA588());
      swift_release();

      swift_unknownObjectRelease();
      __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)&v45);
    }
    else
    {
      swift_release();
      sub_191F35A6C((uint64_t)&v43);
    }
  }
LABEL_22:
  os_unfair_lock_unlock(v16);
}

void sub_191F97E2C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + OBJC_IVAR____EXQueryResult_availablility);
  if (!v2)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v3 = *(void (**)(void))(v1 + OBJC_IVAR____TtC19ExtensionFoundation33_EXExtensionAvailablilityObserver_observerBlock);
  type metadata accessor for _EXExtensionAvailablility();
  if (!objc_msgSend(v2, sel_isKindOfClass_, swift_getObjCClassFromMetadata()))
  {
LABEL_7:
    id v4 = objc_msgSend(self, sel__EX_parameterError);
    swift_willThrow();
    swift_unexpectedError();
    __break(1u);
    return;
  }
  id v5 = v2;
  v3();
}

id sub_191F97F10(void *a1)
{
  uint64_t v3 = OBJC_IVAR____EXExtensionAvailablility_enabledCount;
  *(void *)&v1[OBJC_IVAR____EXExtensionAvailablility_enabledCount] = 0;
  uint64_t v4 = OBJC_IVAR____EXExtensionAvailablility_disabledCount;
  *(void *)&v1[OBJC_IVAR____EXExtensionAvailablility_disabledCount] = 0;
  uint64_t v5 = OBJC_IVAR____EXExtensionAvailablility_unelectedCount;
  *(void *)&v1[OBJC_IVAR____EXExtensionAvailablility_unelectedCount] = 0;
  id v6 = v1;
  id v7 = (void *)sub_191FB9DA8();
  id v8 = objc_msgSend(a1, sel_decodeIntegerForKey_, v7);

  *(void *)&v1[v3] = v8;
  id v9 = (void *)sub_191FB9DA8();
  id v10 = objc_msgSend(a1, sel_decodeIntegerForKey_, v9);

  *(void *)&v1[v4] = v10;
  os_log_type_t v11 = (void *)sub_191FB9DA8();
  id v12 = objc_msgSend(a1, sel_decodeIntegerForKey_, v11);

  *(void *)&v1[v5] = v12;
  v14.receiver = v6;
  v14.super_class = (Class)type metadata accessor for _EXExtensionAvailablility();
  return objc_msgSendSuper2(&v14, sel_init);
}

uint64_t method lookup function for _EXExtensionAvailablility(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for _EXExtensionAvailablility);
}

uint64_t dispatch thunk of _EXExtensionAvailablility.encode(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of _EXExtensionAvailablility.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t sub_191F980CC()
{
  return type metadata accessor for _EXExtensionAvailablilityObserver();
}

uint64_t type metadata accessor for _EXExtensionAvailablilityObserver()
{
  uint64_t result = qword_1E92FC4E8;
  if (!qword_1E92FC4E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_191F98120()
{
  uint64_t result = sub_191FB9C68();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_191F981CC()
{
  return sub_191F3DE5C(&qword_1E92FD980, (void (*)(uint64_t))type metadata accessor for _EXExtensionAvailablilityObserver);
}

uint64_t sub_191F98214()
{
  return MEMORY[0x1E4FBB060];
}

uint64_t sub_191F98220(uint64_t a1)
{
  uint64_t result = sub_191F3DE5C(&qword_1E92FD988, (void (*)(uint64_t))type metadata accessor for _EXExtensionAvailablilityObserver);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_191F98278(uint64_t a1)
{
  uint64_t result = sub_191F3DE5C(&qword_1E92FC4D0, (void (*)(uint64_t))type metadata accessor for _EXExtensionAvailablilityObserver);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_191F982D0()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_191F98308()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

void sub_191F9831C(uint64_t a1)
{
  sub_191F952BC(a1, v1);
}

uint64_t sub_191F98324()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_191F9835C()
{
  return sub_191F828D4();
}

id _EXExtensionInstanceIdentifier.__allocating_init(instanceIdentifier:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return _EXExtensionInstanceIdentifier.init(instanceIdentifier:)(a1);
}

uint64_t sub_191F983A8()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE40);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_191FB9C68();
  __swift_allocate_value_buffer(v3, qword_1E92FD9A0);
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1E92FD9A0);
  sub_191FB9BF8();
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v4, v2, v3);
  }
  __break(1u);
  return result;
}

uint64_t static _EXExtensionInstanceIdentifier.supportsSecureCoding.getter()
{
  return byte_1E92FD9B8;
}

uint64_t static _EXExtensionInstanceIdentifier.supportsSecureCoding.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  byte_1E92FD9B8 = a1;
  return result;
}

uint64_t (*static _EXExtensionInstanceIdentifier.supportsSecureCoding.modify())()
{
  return j__swift_endAccess;
}

id sub_191F9864C()
{
  if (qword_1E92FD1D8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1E92FD9C0;

  return v0;
}

id sub_191F986A8()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE40);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E92FD1D0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_191FB9C68();
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1E92FD9A0);
  uint64_t v5 = *(void *)(v3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v2, v4, v3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v2, 0, 1, v3);
  id v6 = objc_allocWithZone((Class)type metadata accessor for _EXExtensionInstanceIdentifier());
  id result = _EXExtensionInstanceIdentifier.init(instanceIdentifier:)((uint64_t)v2);
  qword_1E92FD9C0 = (uint64_t)result;
  return result;
}

id _EXExtensionInstanceIdentifier.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id _EXExtensionInstanceIdentifier.init()()
{
  id v1 = v0;
  uint64_t v2 = sub_191FB9C68();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191FB9C58();
  id v6 = (void *)sub_191FB9C08();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  id v7 = objc_msgSend(v1, sel_initWithIdentifier_, v6);

  return v7;
}

uint64_t _EXExtensionInstanceIdentifier.__allocating_init(coder:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_191FB9C68();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_allocWithZone(v2);
  sub_191F442A4(0, (unint64_t *)&unk_1E92FC6B0);
  id v9 = v8;
  uint64_t result = sub_191FBA128();
  if (result)
  {
    os_log_type_t v11 = (void *)result;
    sub_191FB9C28();

    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))((uint64_t)v9 + OBJC_IVAR____EXExtensionInstanceIdentifier_identifier, v7, v4);
    v13.receiver = v9;
    v13.super_class = v2;
    id v12 = objc_msgSendSuper2(&v13, sel_init);

    return (uint64_t)v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t _EXExtensionInstanceIdentifier.init(coder:)(void *a1)
{
  uint64_t v3 = sub_191FB9C68();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191F442A4(0, (unint64_t *)&unk_1E92FC6B0);
  id v7 = v1;
  uint64_t result = sub_191FBA128();
  if (result)
  {
    id v9 = (void *)result;
    sub_191FB9C28();

    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))((uint64_t)v7 + OBJC_IVAR____EXExtensionInstanceIdentifier_identifier, v6, v3);
    id v10 = (objc_class *)type metadata accessor for _EXExtensionInstanceIdentifier();
    v12.receiver = v7;
    v12.super_class = v10;
    id v11 = objc_msgSendSuper2(&v12, sel_init);

    return (uint64_t)v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_191F98CE4(void *a1)
{
  uint64_t v2 = (void *)sub_191FB9C08();
  id v3 = (id)sub_191FB9DA8();
  objc_msgSend(a1, sel_encodeObject_forKey_, v2, v3);
}

uint64_t _EXExtensionInstanceIdentifier.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____EXExtensionInstanceIdentifier_identifier;
  uint64_t v4 = sub_191FB9C68();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_191F98EB8()
{
  if (qword_1E92FD1D8 != -1) {
    swift_once();
  }
  return sub_191FBA168() & 1;
}

uint64_t sub_191F98F38(uint64_t a1)
{
  sub_191F4CBD8(a1, (uint64_t)v5, &qword_1EB27BDE0);
  if (!v6)
  {
    sub_191F4CB7C((uint64_t)v5, &qword_1EB27BDE0);
    goto LABEL_6;
  }
  type metadata accessor for _EXExtensionInstanceIdentifier();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_6:
    char v2 = 0;
    return v2 & 1;
  }
  if (v4 == v1)
  {

    char v2 = 1;
  }
  else
  {
    char v2 = sub_191FB9C18();
  }
  return v2 & 1;
}

uint64_t sub_191F99078()
{
  return sub_191FB9C48();
}

id _EXExtensionInstanceIdentifier.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for _EXExtensionInstanceIdentifier();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_191F990DC()
{
  return type metadata accessor for _EXExtensionInstanceIdentifier();
}

uint64_t method lookup function for _EXExtensionInstanceIdentifier(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for _EXExtensionInstanceIdentifier);
}

uint64_t dispatch thunk of static _EXExtensionInstanceIdentifier.default()()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of _EXExtensionInstanceIdentifier.__allocating_init(instanceIdentifier:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of _EXExtensionInstanceIdentifier.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of _EXExtensionInstanceIdentifier.encode(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of _EXExtensionInstanceIdentifier.isDefault.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

void static _EXExtensionProcess.extensionProcess(configuration:)(void *a1)
{
}

uint64_t sub_191F991BC(uint64_t (*a1)(void))
{
  return a1();
}

id _EXExtensionProcess.__deallocating_deinit()
{
  uint64_t v1 = *(char **)&v0[OBJC_IVAR____EXExtensionProcess__observer];
  objc_super v2 = (os_unfair_lock_s *)(*(void *)&v1[OBJC_IVAR____TtCC19ExtensionFoundation19_EXExtensionProcessP33_2DB9D1F412467A20BF3CD4E75CD2541715ProcessObserver_invalidationHandlerLock]
                          + 16);
  uint64_t v3 = v1;
  os_unfair_lock_lock(v2);
  uint64_t v5 = *(void *)&v3[OBJC_IVAR____TtCC19ExtensionFoundation19_EXExtensionProcessP33_2DB9D1F412467A20BF3CD4E75CD2541715ProcessObserver_invalidationHandler];
  uint64_t v4 = *(void *)&v3[OBJC_IVAR____TtCC19ExtensionFoundation19_EXExtensionProcessP33_2DB9D1F412467A20BF3CD4E75CD2541715ProcessObserver_invalidationHandler
                    + 8];
  if (!v5) {
    goto LABEL_4;
  }
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = v4;
  sub_191F45B34(v5);
  sub_191F45B24((uint64_t)sub_191F35FC8);
  os_unfair_lock_unlock(v2);

  uint64_t v3 = &v0[OBJC_IVAR____EXExtensionProcess_configuration];
  swift_beginAccess();
  if (*(unsigned char *)(*(void *)v3 + OBJC_IVAR____EXHostConfiguration_requireInvalidation))
  {
    sub_191FBA458();
    __break(1u);
LABEL_4:
    sub_191F45B34(0);
    sub_191F45B24(0);
    os_unfair_lock_unlock(v2);
  }
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for _EXExtensionProcess();
  return objc_msgSendSuper2(&v8, sel_dealloc);
}

void *sub_191F99480()
{
  return sub_191F2C048(1);
}

void *sub_191F994B0()
{
  return sub_191F2C048(0);
}

void sub_191F99588()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____EXExtensionProcess__observer;
  uint64_t v3 = *(char **)(v0 + OBJC_IVAR____EXExtensionProcess__observer);
  uint64_t v4 = (os_unfair_lock_s *)(*(void *)&v3[OBJC_IVAR____TtCC19ExtensionFoundation19_EXExtensionProcessP33_2DB9D1F412467A20BF3CD4E75CD2541715ProcessObserver_invalidationHandlerLock]
                          + 16);
  uint64_t v5 = v3;
  os_unfair_lock_lock(v4);
  uint64_t v6 = &v5[OBJC_IVAR____TtCC19ExtensionFoundation19_EXExtensionProcessP33_2DB9D1F412467A20BF3CD4E75CD2541715ProcessObserver_invalidationHandler];
  uint64_t v7 = *(void *)&v5[OBJC_IVAR____TtCC19ExtensionFoundation19_EXExtensionProcessP33_2DB9D1F412467A20BF3CD4E75CD2541715ProcessObserver_invalidationHandler];
  *(void *)uint64_t v6 = 0;
  *((void *)v6 + 1) = 0;
  sub_191F45B24(v7);
  os_unfair_lock_unlock(v4);

  uint64_t v8 = *(void *)(v1 + OBJC_IVAR____EXExtensionProcess__processHandle);
  id v9 = *(void **)(v1 + v2);
  id v10 = (os_unfair_lock_s *)(*(void *)(v8 + OBJC_IVAR____EXExtensionProcessHandle_observersLock) + 16);
  id v11 = v9;
  os_unfair_lock_lock(v10);
  objc_msgSend(*(id *)(v8 + OBJC_IVAR____EXExtensionProcessHandle_observers), sel_removeObject_, v11);
  os_unfair_lock_unlock(v10);

  objc_super v12 = (os_unfair_lock_s *)(*(void *)(v8 + OBJC_IVAR____EXExtensionProcessHandle_invalidationLock) + 16);
  os_unfair_lock_lock(v12);
  id v13 = *(id *)(v8 + OBJC_IVAR____EXExtensionProcessHandle_assertion);
  if (v13)
  {
    *(void *)(v8 + OBJC_IVAR____EXExtensionProcessHandle_assertion) = 0;
    *(void *)(v8 + OBJC_IVAR____EXExtensionProcessHandle_assertionAquireCount) = 0;
  }
  os_unfair_lock_unlock(v12);
  objc_msgSend(v13, sel_invalidate);
  sub_191F9CB10();
}

id sub_191F997A8()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____EXExtensionProcess__processHandle);
  uint64_t v2 = (os_unfair_lock_s *)(*(void *)(v1 + OBJC_IVAR____EXExtensionProcessHandle_invalidationLock) + 16);
  os_unfair_lock_lock(v2);
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____EXExtensionProcessHandle_assertion);
  if (v3) {
    id v4 = objc_msgSend(v3, sel_isValid);
  }
  else {
    id v4 = 0;
  }
  os_unfair_lock_unlock(v2);
  return v4;
}

id sub_191F99820()
{
  return objc_msgSend(*(id *)(*(void *)(v0 + OBJC_IVAR____EXExtensionProcess__processHandle)+ OBJC_IVAR____EXExtensionProcessHandle_assertion), sel_invalidate);
}

id sub_191F99894()
{
  return [*(id *)(*(void *)(v0 + OBJC_IVAR____EXExtensionProcess__processHandle)+ OBJC_IVAR____EXExtensionProcessHandle_innerProcessHandle) pid];
}

uint64_t sub_191F998B8()
{
  objc_msgSend(*(id *)(*(void *)(v0 + OBJC_IVAR____EXExtensionProcess__processHandle)+ OBJC_IVAR____EXExtensionProcessHandle_innerProcessHandle), sel_auditToken);
  return v2;
}

id sub_191F99950()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____EXExtensionProcess_configuration);
  swift_beginAccess();
  uint64_t v2 = *v1;

  return v2;
}

void sub_191F99A08(void *a1)
{
  uint64_t v3 = (void **)(v1 + OBJC_IVAR____EXExtensionProcess_configuration);
  swift_beginAccess();
  id v4 = *v3;
  *uint64_t v3 = a1;
}

void sub_191F99A5C(void **a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void **)(*a2 + OBJC_IVAR____EXExtensionProcess_configuration);
  swift_beginAccess();
  id v4 = *v3;
  *uint64_t v3 = v2;
  id v5 = v2;
}

uint64_t (*sub_191F99AC0())()
{
  return j__swift_endAccess;
}

BOOL sub_191F99B2C(void *a1)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  objc_msgSend(*(id *)(*(void *)(v1 + OBJC_IVAR____EXExtensionProcess__processHandle)+ OBJC_IVAR____EXExtensionProcessHandle_innerProcessHandle), sel_auditToken);
  objc_msgSend(a1, sel_auditToken);
  return _EXAuditTokenEqual(&v5, &v4);
}

id sub_191F99CA8()
{
  [*(id *)(*(void *)(v0 + OBJC_IVAR____EXExtensionProcess__processHandle)+ OBJC_IVAR____EXExtensionProcessHandle_innerProcessHandle) pid];
  uint64_t v1 = (void *)sub_191FBA628();
  id v2 = objc_msgSend(self, sel_predicateMatchingIdentifier_, v1);

  return v2;
}

id _EXExtensionProcess.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void _EXExtensionProcess.init()()
{
}

id sub_191F99EE4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for _EXExtensionProcess.ProcessObserver();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_191F99F6C()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

id sub_191F99FA4@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  uint64_t v3 = (void **)(*a1 + OBJC_IVAR____EXExtensionProcess_configuration);
  swift_beginAccess();
  long long v4 = *v3;
  *a2 = *v3;

  return v4;
}

uint64_t method lookup function for _EXExtensionProcess(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for _EXExtensionProcess);
}

uint64_t dispatch thunk of _EXExtensionProcess.newXPCConnection()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of _EXExtensionProcess.makeXPCConnection()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of _EXExtensionProcess.invalidate()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of _EXExtensionProcess.isValid.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of _EXExtensionProcess.invalidateLaunchAssertion()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of _EXExtensionProcess.pid.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of _EXExtensionProcess.auditToken.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of _EXExtensionProcess.configuration.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of _EXExtensionProcess.configuration.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of _EXExtensionProcess.configuration.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of _EXExtensionProcess.matchesProcess(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of _EXExtensionProcess.processPredicate()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of _EXExtensionProcess.rbs_pid()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF0))();
}

void sub_191F9A2F0()
{
  id v1 = (os_unfair_lock_s *)(*(void *)(v0
                                      + OBJC_IVAR____TtCC19ExtensionFoundation19_EXExtensionProcessP33_2DB9D1F412467A20BF3CD4E75CD2541715ProcessObserver_invalidationHandlerLock)
                          + 16);
  os_unfair_lock_lock(v1);
  objc_super v2 = (void *)(v0
                + OBJC_IVAR____TtCC19ExtensionFoundation19_EXExtensionProcessP33_2DB9D1F412467A20BF3CD4E75CD2541715ProcessObserver_invalidationHandler);
  uint64_t v3 = *(void (**)(uint64_t))(v0
                                      + OBJC_IVAR____TtCC19ExtensionFoundation19_EXExtensionProcessP33_2DB9D1F412467A20BF3CD4E75CD2541715ProcessObserver_invalidationHandler);
  *objc_super v2 = 0;
  v2[1] = 0;
  sub_191F45B34((uint64_t)v3);
  sub_191F45B24((uint64_t)v3);
  os_unfair_lock_unlock(v1);
  if (v3)
  {
    uint64_t v4 = swift_retain();
    v3(v4);
    sub_191F45B24((uint64_t)v3);
    sub_191F45B24((uint64_t)v3);
  }
}

uint64_t sub_191F9A3A8()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_191F9A3D0()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_191F9A408()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t dispatch thunk of AppExtensionConfiguration.accept(connection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_191F9A464()
{
  id v0 = objc_msgSend(self, sel_sharedInstance);
  objc_msgSend(v0, sel_hostAuditToken);

  return v2;
}

uint64_t _AppExtension.hostAuditToken.getter()
{
  id v0 = objc_msgSend(self, sel_sharedInstance);
  objc_msgSend(v0, sel_hostAuditToken);

  return v2;
}

uint64_t static _AppExtension.main()(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  os_log_type_t v27 = (char *)&v23 - v8;
  uint64_t v28 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v11 = sub_191FBA058();
  if (qword_1EB27C0C8 != -1) {
    swift_once();
  }
  objc_super v12 = qword_1EB27C0C0;
  if (os_log_type_enabled((os_log_t)qword_1EB27C0C0, v11))
  {
    uint64_t v25 = AssociatedTypeWitness;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v26 = v2;
    objc_super v14 = (uint8_t *)v13;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v24 = v6;
    uint64_t v16 = (void *)v15;
    *(_DWORD *)objc_super v14 = 138412290;
    id v23 = v14 + 4;
    id v17 = objc_msgSend(self, sel_sharedInstance);
    id v29 = v17;
    sub_191FBA1C8();
    *uint64_t v16 = v17;
    uint64_t AssociatedTypeWitness = v25;
    _os_log_impl(&dword_191F29000, v12, v11, "Launching extension %@", v14, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
    swift_arrayDestroy();
    uint64_t v18 = v16;
    uint64_t v6 = v24;
    MEMORY[0x192FEBAE0](v18, -1, -1);
    MEMORY[0x192FEBAE0](v14, -1, -1);
  }
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  uint64_t v19 = (uint64_t)v27;
  (*(void (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
  id v20 = objc_msgSend(self, sel_sharedInstance);
  swift_getAssociatedConformanceWitness();
  type metadata accessor for _SceneWrapper();
  id v21 = sub_191F9AC58(v19);
  objc_msgSend(v20, sel_setExtension_, v21);

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v19, AssociatedTypeWitness);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v10, a1);
}

uint64_t type metadata accessor for _SceneWrapper()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_191F9A91C(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x58) + 8))(a1, *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x50)) & 1;
}

uint64_t sub_191F9A9A8(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  LOBYTE(a1) = sub_191F9A91C((uint64_t)v4);

  return a1 & 1;
}

void sub_191F9A9F8()
{
}

id sub_191F9AA3C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for _SceneWrapper();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_191F9AAB0(char *a1)
{
  return (*(uint64_t (**)(char *))(*(void *)(*(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)a1) + 0x50)
                                                       - 8)
                                           + 8))(&a1[*(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)a1) + 0x60)]);
}

void static _EXExtension.bootstrap(with:)(uint64_t a1)
{
  id v2 = objc_msgSend(self, sel_sharedInstance);
  objc_msgSend(v2, sel_setExtension_, a1);
}

id sub_191F9AB88(uint64_t a1)
{
  (*(void (**)(char *, uint64_t, void))(*(void *)(*(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)v1)
                                                                          + 0x50)
                                                              - 8)
                                                  + 16))(&v1[*(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)v1) + 0x60)], a1, *(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)v1) + 0x50));
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for _SceneWrapper();
  return objc_msgSendSuper2(&v3, sel_init);
}

id sub_191F9AC58(uint64_t a1)
{
  id v2 = objc_allocWithZone((Class)type metadata accessor for _SceneWrapper());
  return sub_191F9AB88(a1);
}

uint64_t dispatch thunk of _AppExtension.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of _AppExtension.body.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of _AppExtension.hostAuditToken.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_191F9ACD4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_191F9AD68()
{
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t sub_191F9ADC8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v6 = MEMORY[0x1E4FBC860];
    sub_191FBA398();
    uint64_t v4 = a1 + 32;
    do
    {
      sub_191F4EC08(v4, (uint64_t)&v5);
      sub_191F442A4(0, (unint64_t *)&unk_1EB27BBB0);
      swift_dynamicCast();
      sub_191FBA368();
      sub_191FBA3A8();
      sub_191FBA3B8();
      sub_191FBA378();
      v4 += 32;
      --v2;
    }
    while (v2);
    return v6;
  }
  return result;
}

uint64_t sub_191F9AEC4(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FD648);
    uint64_t v3 = sub_191FBA468();
    swift_bridgeObjectRelease();
    return v3;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_191FBA5A8();
    return a1;
  }
}

uint64_t sub_191F9AF40(unint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE40);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  uint64_t v8 = (char *)&v35 - v7;
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  os_log_type_t v11 = (char *)&v35 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v35 - v12;
  uint64_t v14 = sub_191FB9C68();
  uint64_t v38 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  id v37 = (void (**)(char *, uint64_t, uint64_t, uint64_t))((char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v15);
  uint64_t v39 = (char *)&v35 - v17;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_191FBA478();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v19 = MEMORY[0x1E4FBC860];
  if (!v18) {
    return v19;
  }
  uint64_t v40 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_191FA8874(0, v18 & ~(v18 >> 63), 0);
  if (v18 < 0)
  {
    __break(1u);
  }
  else
  {
    if ((a1 & 0xC000000000000001) == 0)
    {
      uint64_t v26 = (void **)(a1 + 32);
      os_log_type_t v27 = *(uint64_t (***)(char *, uint64_t, uint64_t))(v38 + 56);
      os_log_type_t v35 = v5;
      unsigned int v36 = v27;
      uint64_t v28 = (uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48);
      uint64_t v39 = (char *)(v38 + 56);
      id v29 = (void (**)(char *, char *, uint64_t))(v38 + 32);
      while (1)
      {
        id v30 = *v26;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v36)(v8, 1, 1, v14);
        sub_191F3C474(&qword_1E92FDA98);
        id v31 = v30;
        sub_191FBA4E8();
        sub_191F49880((uint64_t)v8, (uint64_t)v5);
        uint64_t result = (*v28)(v5, 1, v14);
        if (result == 1) {
          break;
        }
        sub_191F9C38C((uint64_t)v8);
        uint64_t v32 = *v29;
        (*v29)((char *)v37, v5, v14);

        uint64_t v19 = v40;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_191FA8874(0, *(void *)(v19 + 16) + 1, 1);
          uint64_t v19 = v40;
        }
        unint64_t v34 = *(void *)(v19 + 16);
        unint64_t v33 = *(void *)(v19 + 24);
        if (v34 >= v33 >> 1)
        {
          sub_191FA8874(v33 > 1, v34 + 1, 1);
          uint64_t v19 = v40;
        }
        *(void *)(v19 + 16) = v34 + 1;
        v32((char *)(v19+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v34), (char *)v37, v14);
        uint64_t v40 = v19;
        ++v26;
        --v18;
        uint64_t v5 = v35;
        if (!v18) {
          return v19;
        }
      }
      goto LABEL_25;
    }
    uint64_t v21 = 0;
    unsigned int v36 = (uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48);
    id v37 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56);
    id v22 = (void (**)(char *, char *, uint64_t))(v38 + 32);
    os_log_type_t v35 = (char *)a1;
    while (1)
    {
      MEMORY[0x192FEA540](v21, a1);
      (*v37)(v13, 1, 1, v14);
      sub_191F3C474(&qword_1E92FDA98);
      sub_191FBA4E8();
      sub_191F49880((uint64_t)v13, (uint64_t)v11);
      uint64_t result = (*v36)(v11, 1, v14);
      if (result == 1) {
        break;
      }
      sub_191F9C38C((uint64_t)v13);
      id v23 = *v22;
      (*v22)(v39, v11, v14);
      swift_unknownObjectRelease();
      uint64_t v19 = v40;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_191FA8874(0, *(void *)(v19 + 16) + 1, 1);
        uint64_t v19 = v40;
      }
      unint64_t v25 = *(void *)(v19 + 16);
      unint64_t v24 = *(void *)(v19 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_191FA8874(v24 > 1, v25 + 1, 1);
        uint64_t v19 = v40;
      }
      ++v21;
      *(void *)(v19 + 16) = v25 + 1;
      v23((char *)(v19+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v25), v39, v14);
      uint64_t v40 = v19;
      a1 = (unint64_t)v35;
      if (v18 == v21) {
        return v19;
      }
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

void sub_191F9B5F0(void *a1)
{
  if (*(void *)(v1 + OBJC_IVAR____EXQueryResult_identities))
  {
    uint64_t v3 = swift_bridgeObjectRetain();
    sub_191F52C28(v3);
    swift_bridgeObjectRelease();
    sub_191F442A4(0, (unint64_t *)&qword_1EB27BCB0);
    uint64_t v4 = (void *)sub_191FB9EC8();
    swift_release();
    uint64_t v5 = (void *)sub_191FB9DA8();
    objc_msgSend(a1, sel_encodeObject_forKey_, v4, v5);
  }
  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____EXQueryResult_availablility);
  if (v6)
  {
    id v7 = v6;
    id v8 = (id)sub_191FB9DA8();
    objc_msgSend(a1, sel_encodeObject_forKey_, v7, v8);
  }
}

id sub_191F9B858()
{
  return sub_191F9BE34(type metadata accessor for _EXQueryResult);
}

id sub_191F9B870(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  *(void *)&v5[OBJC_IVAR____EXQueryResultUpdate_removedUUIDs] = a2;
  *(void *)&v5[OBJC_IVAR____EXQueryResult_identities] = a1;
  *(void *)&v5[OBJC_IVAR____EXQueryResult_availablility] = 0;
  v7.receiver = v5;
  v7.super_class = (Class)type metadata accessor for _EXQueryResult();
  return objc_msgSendSuper2(&v7, sel_init);
}

id sub_191F9BA0C(void *a1)
{
  sub_191F442A4(0, (unint64_t *)&unk_1E92FC6B0);
  uint64_t v3 = v1;
  uint64_t v4 = sub_191FBA148();
  if (v4) {
    unint64_t v5 = v4;
  }
  else {
    unint64_t v5 = MEMORY[0x1E4FBC860];
  }
  uint64_t v6 = sub_191F9AF40(v5);
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_191FA92D4(v6);
  swift_bridgeObjectRelease();
  *(void *)&v3[OBJC_IVAR____EXQueryResultUpdate_removedUUIDs] = v7;

  id v8 = sub_191F9C3EC();
  return v8;
}

unint64_t sub_191F9BC60()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_191F9BE0C()
{
  return swift_bridgeObjectRelease();
}

id sub_191F9BE1C()
{
  return sub_191F9BE34(type metadata accessor for _EXQueryResultUpdate);
}

id sub_191F9BE34(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

size_t sub_191F9BE6C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FDA90);
  uint64_t v3 = *(void *)(sub_191FB9C68() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      id v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_191F9BFA0(&v10, (char *)v6 + v5, v1, a1);
      sub_191F4DD64();
      if (v9 == v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_191F9BFA0(void *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE40);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_191FB9C68();
  uint64_t v41 = *(void *)(v11 - 8);
  uint64_t result = MEMORY[0x1F4188790](v11);
  uint64_t v40 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = a4;
  uint64_t v15 = a4 + 56;
  uint64_t v14 = *(void *)(a4 + 56);
  uint64_t v32 = -1 << *(unsigned char *)(a4 + 32);
  if (-v32 < 64) {
    uint64_t v16 = ~(-1 << -(char)v32);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v14;
  if (!a2)
  {
    int64_t v18 = 0;
    a3 = 0;
LABEL_39:
    uint64_t v28 = ~v32;
    *a1 = v42;
    a1[1] = v15;
    a1[2] = v28;
    a1[3] = v18;
    a1[4] = v17;
    return a3;
  }
  if (!a3)
  {
    int64_t v18 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v36 = a3;
  int64_t v18 = 0;
  a3 = 0;
  uint64_t v19 = v40;
  uint64_t v38 = v41 + 16;
  uint64_t v39 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56);
  uint64_t v37 = v41 + 48;
  os_log_type_t v35 = (uint64_t (**)(char *, char *, uint64_t))(v41 + 32);
  uint64_t v33 = v15;
  int64_t v34 = (unint64_t)(63 - v32) >> 6;
  int64_t v30 = v34 - 1;
  id v31 = a1;
  if (!v17) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v20 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  unint64_t v21 = v20 | (v18 << 6);
  while (1)
  {
    uint64_t v25 = v41;
    uint64_t v26 = *(void *)(v41 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v41 + 16))(v10, *(void *)(v42 + 48) + v26 * v21, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v10, 1, v11) == 1)
    {
      uint64_t v15 = v33;
      goto LABEL_38;
    }
    ++a3;
    os_log_type_t v27 = *v35;
    (*v35)(v19, v10, v11);
    uint64_t result = v27(a2, v19, v11);
    if (a3 == v36)
    {
      a3 = v36;
      a1 = v31;
      uint64_t v15 = v33;
      goto LABEL_39;
    }
    a2 += v26;
    if (v17) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v22 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    uint64_t v15 = v33;
    if (v22 >= v34) {
      goto LABEL_37;
    }
    unint64_t v23 = *(void *)(v33 + 8 * v22);
    if (!v23)
    {
      int64_t v24 = v18 + 2;
      ++v18;
      if (v22 + 1 >= v34) {
        goto LABEL_37;
      }
      unint64_t v23 = *(void *)(v33 + 8 * v24);
      if (v23) {
        goto LABEL_14;
      }
      int64_t v18 = v22 + 1;
      if (v22 + 2 >= v34) {
        goto LABEL_37;
      }
      unint64_t v23 = *(void *)(v33 + 8 * (v22 + 2));
      if (v23)
      {
        v22 += 2;
      }
      else
      {
        int64_t v18 = v22 + 2;
        if (v22 + 3 >= v34) {
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v33 + 8 * (v22 + 3));
        if (!v23)
        {
          int64_t v24 = v22 + 4;
          int64_t v18 = v22 + 3;
          if (v22 + 4 < v34)
          {
            unint64_t v23 = *(void *)(v33 + 8 * v24);
            if (!v23)
            {
              while (1)
              {
                int64_t v22 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_42;
                }
                if (v22 >= v34)
                {
                  int64_t v18 = v30;
                  goto LABEL_37;
                }
                unint64_t v23 = *(void *)(v33 + 8 * v22);
                ++v24;
                if (v23) {
                  goto LABEL_21;
                }
              }
            }
LABEL_14:
            int64_t v22 = v24;
            goto LABEL_21;
          }
LABEL_37:
          (*v39)(v10, 1, 1, v11);
          unint64_t v17 = 0;
LABEL_38:
          sub_191F9C38C((uint64_t)v10);
          a1 = v31;
          goto LABEL_39;
        }
        v22 += 3;
      }
    }
LABEL_21:
    unint64_t v17 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v22 << 6);
    int64_t v18 = v22;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_191F9C38C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE40);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_191F9C3EC()
{
  sub_191F442A4(0, (unint64_t *)&qword_1EB27BCB0);
  uint64_t v1 = v0;
  unint64_t v2 = sub_191FBA148();
  if (v2)
  {
    uint64_t v3 = sub_191FA9160(v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = 0;
  }
  *(void *)&v1[OBJC_IVAR____EXQueryResult_identities] = v3;
  type metadata accessor for _EXExtensionAvailablility();
  *(void *)&v1[OBJC_IVAR____EXQueryResult_availablility] = sub_191FBA128();

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for _EXQueryResult();
  return objc_msgSendSuper2(&v5, sel_init);
}

unint64_t sub_191F9C4EC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FC668);
  uint64_t v2 = sub_191FBA4B8();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_191F9DEFC(v6, (uint64_t)&v15);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_191F4FA1C(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_191F4D994(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_191F9C618(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FDB38);
  uint64_t v2 = (void *)sub_191FBA4B8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_191F4FA1C(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    void *v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t static _EXExtensionProcessHandle.supportsSecureCoding.getter()
{
  return byte_1E92FDAA0;
}

uint64_t static _EXExtensionProcessHandle.supportsSecureCoding.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  byte_1E92FDAA0 = a1;
  return result;
}

uint64_t (*static _EXExtensionProcessHandle.supportsSecureCoding.modify())()
{
  return j__swift_endAccess;
}

void sub_191F9CA30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x192FEBBF0](v3);
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    sub_191F9CB10();
  }
}

void sub_191F9CA84(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(id, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(v7, a3);
  swift_release();
}

void sub_191F9CB10()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)&v0[OBJC_IVAR____EXExtensionProcessHandle_invalidationLock] + 16);
  os_unfair_lock_lock(v1);
  if (v0[OBJC_IVAR____EXExtensionProcessHandle_invalidationLock_invalidated] != 1)
  {
    v0[OBJC_IVAR____EXExtensionProcessHandle_invalidationLock_invalidated] = 1;
    if (qword_1EB27BDC0 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_191FB9CA8();
    __swift_project_value_buffer(v2, (uint64_t)qword_1EB27BDE8);
    uint64_t v3 = v0;
    uint64_t v4 = sub_191FB9C88();
    os_log_type_t v5 = sub_191FBA088();
    id v6 = &off_191FBF000;
    long long v45 = v3;
    if (os_log_type_enabled(v4, v5))
    {
      id v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = (void *)swift_slowAlloc();
      *(_DWORD *)id v7 = 138543362;
      uint64_t v46 = (uint64_t)v45;
      uint64_t v9 = v45;
      id v6 = &off_191FBF000;
      sub_191FBA1C8();
      *uint64_t v8 = v45;

      _os_log_impl(&dword_191F29000, v4, v5, "Assertion for extension process '%{public}@' invalidated", v7, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
      swift_arrayDestroy();
      char v10 = v8;
      uint64_t v3 = v45;
      MEMORY[0x192FEBAE0](v10, -1, -1);
      MEMORY[0x192FEBAE0](v7, -1, -1);
    }
    else
    {
    }
    uint64_t v11 = (void *)MEMORY[0x192FEBBF0](&v3[OBJC_IVAR____EXExtensionProcessHandle_manager]);
    objc_msgSend(v11, sel_processDidInvalidate_, v3);

    uint64_t v12 = (os_unfair_lock_s *)(*(void *)&v3[OBJC_IVAR____EXExtensionProcessHandle_xpcConnectionLock] + 16);
    os_unfair_lock_lock(v12);
    id v13 = objc_msgSend(*(id *)&v3[OBJC_IVAR____EXExtensionProcessHandle_xpcConnections], sel_allObjects);
    sub_191F442A4(0, &qword_1EB27BB58);
    unint64_t v14 = sub_191FB9ED8();

    os_unfair_lock_unlock(v12);
    uint64_t v15 = (os_unfair_lock_s *)(*(void *)&v3[OBJC_IVAR____EXExtensionProcessHandle_observersLock] + 16);
    os_unfair_lock_lock(v15);
    id v16 = objc_msgSend(*(id *)&v3[OBJC_IVAR____EXExtensionProcessHandle_observers], sel_allObjects);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92FC8A0);
    unint64_t v44 = sub_191FB9ED8();

    os_unfair_lock_unlock(v15);
    os_unfair_lock_unlock(v1);
    if (v14 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_191FBA478();
      swift_bridgeObjectRelease();
      if (!v17) {
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v17 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v17) {
        goto LABEL_22;
      }
    }
    if (v17 < 1)
    {
      __break(1u);
      goto LABEL_36;
    }
    uint64_t v18 = 0;
    unint64_t v19 = v14 & 0xC000000000000001;
    int v43 = *((void *)v6 + 379);
    unint64_t v20 = &selRef_UUID;
    do
    {
      if (v19) {
        id v22 = (id)MEMORY[0x192FEA540](v18, v14);
      }
      else {
        id v22 = *(id *)(v14 + 8 * v18 + 32);
      }
      unint64_t v23 = v22;
      unint64_t v21 = sub_191FB9C88();
      os_log_type_t v24 = sub_191FBA058();
      if (os_log_type_enabled(v21, v24))
      {
        uint64_t v25 = swift_slowAlloc();
        unint64_t v26 = v19;
        uint64_t v27 = v17;
        unint64_t v28 = v14;
        uint64_t v29 = v20;
        int64_t v30 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v25 = v43;
        *(void *)(v25 + 4) = v23;
        void *v30 = v23;
        _os_log_impl(&dword_191F29000, v21, v24, "Invalidating connection '%{public}@'", (uint8_t *)v25, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
        swift_arrayDestroy();
        id v31 = v30;
        unint64_t v20 = v29;
        unint64_t v14 = v28;
        uint64_t v17 = v27;
        unint64_t v19 = v26;
        MEMORY[0x192FEBAE0](v31, -1, -1);
        MEMORY[0x192FEBAE0](v25, -1, -1);
      }
      else
      {

        unint64_t v21 = v23;
      }
      ++v18;

      [v23 v20[422]];
    }
    while (v17 != v18);
LABEL_22:
    swift_bridgeObjectRelease();
    unint64_t v32 = v44;
    if (v44 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v33 = sub_191FBA478();
      swift_bridgeObjectRelease();
      int64_t v34 = v45;
      if (v33)
      {
LABEL_24:
        if (v33 >= 1)
        {
          for (uint64_t i = 0; i != v33; ++i)
          {
            if ((v44 & 0xC000000000000001) != 0)
            {
              uint64_t v36 = (void *)MEMORY[0x192FEA540](i, v32);
            }
            else
            {
              uint64_t v36 = *(void **)(v32 + 8 * i + 32);
              swift_unknownObjectRetain();
            }
            swift_unknownObjectRetain_n();
            uint64_t v37 = sub_191FB9C88();
            os_log_type_t v38 = sub_191FBA058();
            if (os_log_type_enabled(v37, v38))
            {
              uint64_t v39 = swift_slowAlloc();
              uint64_t v40 = swift_slowAlloc();
              uint64_t v46 = v40;
              *(_DWORD *)uint64_t v39 = 136446210;
              swift_unknownObjectRetain();
              uint64_t v41 = sub_191FB9E08();
              *(void *)(v39 + 4) = sub_191F4EB34(v41, v42, &v46);
              swift_unknownObjectRelease_n();
              unint64_t v32 = v44;
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_191F29000, v37, v38, "Informing process observer '%{public}s' of extension process invalidation", (uint8_t *)v39, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x192FEBAE0](v40, -1, -1);
              int64_t v34 = v45;
              MEMORY[0x192FEBAE0](v39, -1, -1);
            }
            else
            {

              swift_unknownObjectRelease_n();
            }
            objc_msgSend(v36, sel_processDidInvalidate_, v34);
            swift_unknownObjectRelease();
          }
          goto LABEL_34;
        }
LABEL_36:
        __break(1u);
        return;
      }
    }
    else
    {
      uint64_t v33 = *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
      int64_t v34 = v45;
      if (v33) {
        goto LABEL_24;
      }
    }
LABEL_34:
    swift_bridgeObjectRelease();
    return;
  }

  os_unfair_lock_unlock(v1);
}

void sub_191F9D1B0()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + OBJC_IVAR____EXExtensionProcessHandle_invalidationLock) + 16);
  os_unfair_lock_lock(v1);
  id v2 = *(id *)(v0 + OBJC_IVAR____EXExtensionProcessHandle_assertion);
  if (v2)
  {
    *(void *)(v0 + OBJC_IVAR____EXExtensionProcessHandle_assertion) = 0;
    *(void *)(v0 + OBJC_IVAR____EXExtensionProcessHandle_assertionAquireCount) = 0;
  }
  os_unfair_lock_unlock(v1);
  objc_msgSend(v2, sel_invalidate);
  sub_191F9CB10();
}

void sub_191F9D2A0(void *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  swift_unknownObjectRetain();
  id v8 = a1;
  sub_191F9DF7C(a3, (uint64_t)v8, v7, a4);
  swift_unknownObjectRelease();
}

id sub_191F9D454()
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE40);
  MEMORY[0x1F4188790](v3 - 8);
  os_log_type_t v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E92FC798 != -1) {
    swift_once();
  }
  uint64_t v41 = v5;
  uint64_t v6 = sub_191FB9CA8();
  uint64_t v7 = __swift_project_value_buffer(v6, (uint64_t)qword_1E92FC7B0);
  id v8 = v0;
  uint64_t v9 = sub_191FB9C88();
  os_log_type_t v10 = sub_191FBA058();
  BOOL v11 = os_log_type_enabled(v9, v10);
  uint64_t v40 = v7;
  if (v11)
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    id v13 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 138543362;
    uint64_t v1 = v12 + 12;
    uint64_t v2 = (uint64_t)(v12 + 4);
    unint64_t v14 = *(void **)(*(void *)&v8[OBJC_IVAR____EXExtensionProcessHandle_launchConfiguration]
                   + OBJC_IVAR____EXLaunchConfiguration__extensionIdentity);
    aBlock[0] = v14;
    id v15 = v14;
    sub_191FBA1C8();
    *id v13 = v14;

    _os_log_impl(&dword_191F29000, v9, v10, "Creating connection for extension: '%{public}@'", v12, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
    swift_arrayDestroy();
    MEMORY[0x192FEBAE0](v13, -1, -1);
    MEMORY[0x192FEBAE0](v12, -1, -1);
  }
  else
  {
  }
  uint64_t v16 = *(void *)&v8[OBJC_IVAR____EXExtensionProcessHandle_sessionEndpoint];
  if (v16 && (uint64_t v17 = *(void **)(v16 + OBJC_IVAR___EXConnectionEndpoint_bsServiceConnectionEndpoint)) != 0)
  {
    id v18 = v17;
  }
  else
  {
    uint64_t v1 = *(uint8_t **)&v8[OBJC_IVAR____EXExtensionProcessHandle_launchConfiguration];
    uint64_t v2 = OBJC_IVAR____EXLaunchConfiguration__extensionIdentity;
    id v19 = objc_msgSend(*(id *)&v1[OBJC_IVAR____EXLaunchConfiguration__extensionIdentity], sel_serviceName, v40);
    sub_191FB9DC8();

    uint64_t v20 = *(void *)&v1[OBJC_IVAR____EXLaunchConfiguration_instanceIdentifier];
    if (v20)
    {
      uint64_t v21 = v20 + OBJC_IVAR____EXExtensionInstanceIdentifier_identifier;
      uint64_t v22 = sub_191FB9C68();
      uint64_t v23 = *(void *)(v22 - 8);
      os_log_type_t v24 = v41;
      (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v41, v21, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v24, 0, 1, v22);
    }
    else
    {
      uint64_t v22 = sub_191FB9C68();
      os_log_type_t v24 = v41;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v41, 1, 1, v22);
    }
    uint64_t v25 = (void *)sub_191FB9DA8();
    swift_bridgeObjectRelease();
    sub_191FB9C68();
    uint64_t v26 = *(void *)(v22 - 8);
    uint64_t v27 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v22) != 1)
    {
      uint64_t v27 = (void *)sub_191FB9C08();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v24, v22);
    }
    unint64_t v28 = (void *)sub_191FB9DA8();
    id v18 = objc_msgSend(self, sel_endpointForServiceName_oneshot_service_instance_, v25, v27, v28, 0);

    if (!v18) {
      goto LABEL_17;
    }
  }
  id v29 = v18;
  int64_t v30 = self;
  aBlock[4] = sub_191F2BF68;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_191F2BF10;
  aBlock[3] = &block_descriptor_7;
  id v8 = (char *)_Block_copy(aBlock);
  swift_release();
  id v31 = objc_msgSend(v30, sel_NSXPCConnectionWithEndpoint_configurator_, v29, v8);
  _Block_release(v8);

  if ((swift_isEscapingClosureAtFileLocation() & 1) == 0) {
    return v31;
  }
  __break(1u);
LABEL_17:
  unint64_t v32 = v8;
  uint64_t v33 = sub_191FB9C88();
  os_log_type_t v34 = sub_191FBA068();
  if (os_log_type_enabled(v33, v34))
  {
    os_log_type_t v35 = (uint8_t *)swift_slowAlloc();
    uint64_t v36 = (void *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v35 = 138412290;
    uint64_t v37 = *(void **)&v1[v2];
    aBlock[0] = v37;
    id v38 = v37;
    sub_191FBA1C8();
    *uint64_t v36 = v37;

    _os_log_impl(&dword_191F29000, v33, v34, "Failed to create connection endpoint for extension: '%@'", v35, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
    swift_arrayDestroy();
    MEMORY[0x192FEBAE0](v36, -1, -1);
    MEMORY[0x192FEBAE0](v35, -1, -1);
  }
  else
  {
  }
  return 0;
}

void sub_191F9DB7C(uint64_t a1, void *a2, void *a3)
{
  os_log_type_t v5 = *(void (**)(id, id))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(v7, v6);
  swift_release();
}

id _EXExtensionProcessHandle.__deallocating_deinit()
{
  objc_msgSend(*(id *)&v0[OBJC_IVAR____EXExtensionProcessHandle_assertion], sel_invalidate);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____EXExtensionProcessHandle_launchAssertion], sel_invalidate);
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for _EXExtensionProcessHandle();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _EXExtensionProcessHandle.__allocating_init(coder:)(char **a1)
{
  id v3 = objc_allocWithZone(v1);
  return _EXExtensionProcessHandle.init(coder:)(a1);
}

id _EXExtensionProcessHandle.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void _EXExtensionProcessHandle.init()()
{
}

void *sub_191F9DD80(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  if (__src) {
    uint64_t v5 = a2 - (void)__src;
  }
  else {
    uint64_t v5 = 0;
  }
  if (!__dst)
  {
    if (v5 <= 0) {
      return __src;
    }
LABEL_12:
    __src = (void *)sub_191FBA4C8();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v5) {
    goto LABEL_12;
  }
  if (__src)
  {
    return memmove(__dst, __src, a2 - (void)__src);
  }
  return __src;
}

uint64_t sub_191F9DE24@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t method lookup function for _EXExtensionProcessHandle(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for _EXExtensionProcessHandle);
}

uint64_t dispatch thunk of _EXExtensionProcessHandle.encode(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x200))();
}

uint64_t dispatch thunk of _EXExtensionProcessHandle.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 520))();
}

uint64_t sub_191F9DEBC()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_191F9DEF4(uint64_t a1, uint64_t a2)
{
  sub_191F9CA30(a1, a2, v2);
}

uint64_t sub_191F9DEFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FC660);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_191F9DF64(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_191F9DF70(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_191F9DF7C(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  id v7 = (os_unfair_lock_s *)(*(void *)(a2 + OBJC_IVAR____EXExtensionProcessHandle_observersLock) + 16);
  os_unfair_lock_lock(v7);
  objc_msgSend(*(id *)(a2 + OBJC_IVAR____EXExtensionProcessHandle_observers), *a4, a1);

  os_unfair_lock_unlock(v7);
}

void sub_191F9E2CC(void *a1)
{
  self;
  uint64_t v3 = swift_dynamicCastObjCClass();
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    id v5 = a1;
    id v6 = (void *)sub_191FB9DA8();
    id v7 = (void *)sub_191FB9DA8();
    objc_msgSend(v4, sel_encodeObject_forKey_, v6, v7);

    uint64_t v8 = *(void *)(v1 + OBJC_IVAR___EXConnectionEndpoint_xpcEndpoint);
    if (v8)
    {
      swift_unknownObjectRetain();
      uint64_t v9 = (void *)sub_191FB9DA8();
      objc_msgSend(v4, sel_encodeXPCObject_forKey_, v8, v9);
      swift_unknownObjectRelease();
    }
    uint64_t v10 = *(void *)(v1 + OBJC_IVAR___EXConnectionEndpoint_bsServiceConnectionEndpoint);
    id v11 = (id)sub_191FB9DA8();
    objc_msgSend(v4, sel_encodeObject_forKey_, v10, v11);
  }
  else
  {
    sub_191FBA458();
    __break(1u);
  }
}

id sub_191F9E564()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EXConnectionEndpoint();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_191F9E5F8(void *a1)
{
  objc_super v2 = v1;
  uint64_t v4 = OBJC_IVAR___EXConnectionEndpoint_xpcEndpoint;
  *(void *)&v1[OBJC_IVAR___EXConnectionEndpoint_xpcEndpoint] = 0;
  self;
  uint64_t v5 = swift_dynamicCastObjCClass();
  if (v5)
  {
    id v6 = (void *)v5;
    sub_191F442A4(0, &qword_1E92FC850);
    id v7 = v2;
    id v8 = a1;
    uint64_t v9 = sub_191FBA128();
    if (v9)
    {
      uint64_t v10 = (void *)v9;
      uint64_t v11 = sub_191FB9DC8();
      uint64_t v13 = v12;

      unint64_t v14 = (uint64_t *)&v7[OBJC_IVAR___EXConnectionEndpoint_identifier];
      *unint64_t v14 = v11;
      v14[1] = v13;
      uint64_t v15 = sub_191FB9CB8();
      uint64_t v16 = (void *)sub_191FB9DA8();
      id v17 = objc_msgSend(v6, sel_decodeXPCObjectOfType_forKey_, v15, v16);

      *(void *)&v2[v4] = v17;
      swift_unknownObjectRelease();
      sub_191F442A4(0, &qword_1E92FDB58);
      *(void *)&v7[OBJC_IVAR___EXConnectionEndpoint_bsServiceConnectionEndpoint] = sub_191FBA128();

      v20.receiver = v7;
      v20.super_class = (Class)type metadata accessor for EXConnectionEndpoint();
      id v18 = objc_msgSendSuper2(&v20, sel_init);

      return (uint64_t)v18;
    }
    __break(1u);
  }
  uint64_t result = sub_191FBA458();
  __break(1u);
  return result;
}

uint64_t static _AppExtensionConfigurationBuilder.buildBlock<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, a1, a2);
}

ValueMetadata *type metadata accessor for _AppExtensionConfigurationBuilder()
{
  return &type metadata for _AppExtensionConfigurationBuilder;
}

uint64_t sub_191F9E848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_191F9E85C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_191FB9C68();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16)
    && (sub_191F414E0(&qword_1E92FC6E0, 255, MEMORY[0x1E4F27990]),
        uint64_t v7 = sub_191FB9D68(),
        uint64_t v8 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v9 = v7 & ~v8,
        uint64_t v10 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0))
  {
    uint64_t v17 = ~v8;
    uint64_t v18 = a2;
    uint64_t v11 = v4 + 16;
    uint64_t v12 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
    uint64_t v13 = *(void *)(v11 + 56);
    unint64_t v14 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      v12(v6, *(void *)(v18 + 48) + v13 * v9, v3);
      sub_191F414E0(&qword_1E92FC6E8, 255, MEMORY[0x1E4F27990]);
      char v15 = sub_191FB9D98();
      (*v14)(v6, v3);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v17;
    }
    while (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_191F9EA78(void *a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v3 = a1;
    char v4 = sub_191FBA268();

    return v4 & 1;
  }
  if (!*(void *)(a2 + 16)
    || (uint64_t v6 = sub_191FBA158(),
        uint64_t v7 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v8 = v6 & ~v7,
        uint64_t v9 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0))
  {
LABEL_11:
    char v12 = 0;
    return v12 & 1;
  }
  type metadata accessor for _EXActiveClientQuery();
  id v10 = *(id *)(*(void *)(a2 + 48) + 8 * v8);
  char v11 = sub_191FBA168();

  if ((v11 & 1) == 0)
  {
    uint64_t v13 = ~v7;
    unint64_t v14 = (v8 + 1) & v13;
    if ((*(void *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
    {
      do
      {
        id v15 = *(id *)(*(void *)(a2 + 48) + 8 * v14);
        char v12 = sub_191FBA168();

        if (v12) {
          break;
        }
        unint64_t v14 = (v14 + 1) & v13;
      }
      while (((*(void *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
      return v12 & 1;
    }
    goto LABEL_11;
  }
  char v12 = 1;
  return v12 & 1;
}

uint64_t sub_191F9EBC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_191FBA648();
    swift_bridgeObjectRetain();
    sub_191FB9E28();
    swift_bridgeObjectRelease();
    uint64_t v6 = sub_191FBA688();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      char v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_191FBA598() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_191FBA598() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_191F9ED10()
{
  sub_191FBA648();
  swift_getObjectType();
  v1[3] = swift_getAssociatedTypeWitness();
  v1[4] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_0(v1);
  sub_191FBA318();
  sub_191FB9D78();
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v1);
  return sub_191FBA688();
}

uint64_t sub_191F9EDFC()
{
  swift_getObjectType();
  v1[3] = swift_getAssociatedTypeWitness();
  v1[4] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_0(v1);
  sub_191FBA318();
  sub_191FB9D78();
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v1);
}

uint64_t sub_191F9EEE0()
{
  sub_191FBA648();
  swift_getObjectType();
  v1[3] = swift_getAssociatedTypeWitness();
  v1[4] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_0(v1);
  sub_191FBA318();
  sub_191FB9D78();
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v1);
  return sub_191FBA688();
}

BOOL sub_191F9EFC8()
{
  swift_getObjectType();
  uint64_t v0 = sub_191FBA328();
  swift_getObjectType();
  return v0 == sub_191FBA328();
}

uint64_t sub_191F9F024()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 32);
  int64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2) {
    return v3;
  }
  uint64_t v15 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  sub_191FA8834(0, v2, 0);
  uint64_t v3 = v15;
  uint64_t result = sub_191FA3958(v1);
  int64_t v5 = result;
  int v7 = v6;
  char v9 = v8 & 1;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(v1 + 32))
  {
    if (((*(void *)(v1 + 56 + (((unint64_t)v5 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
      goto LABEL_13;
    }
    if (*(_DWORD *)(v1 + 36) != v7) {
      goto LABEL_14;
    }
    unint64_t v11 = *(void *)(v15 + 16);
    unint64_t v10 = *(void *)(v15 + 24);
    long long v14 = *(_OWORD *)(*(void *)(v1 + 48) + 16 * v5);
    swift_unknownObjectRetain();
    if (v11 >= v10 >> 1) {
      sub_191FA8834(v10 > 1, v11 + 1, 1);
    }
    *(void *)(v15 + 16) = v11 + 1;
    *(_OWORD *)(v15 + 16 * v11 + 32) = v14;
    uint64_t result = sub_191FA39FC(v5, v7, v9 & 1, v1);
    int64_t v5 = result;
    int v7 = v12;
    char v9 = v13 & 1;
    if (!--v2)
    {
      sub_191F91DF0(result, v12, v13 & 1);
      swift_bridgeObjectRelease();
      return v3;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

unint64_t sub_191F9F1B0()
{
  sub_191FBA2F8();
  swift_bridgeObjectRelease();
  id v1 = *(id *)(v0 + 16);
  id v2 = objc_msgSend(v1, sel_description);
  sub_191FB9DC8();

  sub_191FB9E38();
  swift_bridgeObjectRelease();
  sub_191FB9E38();
  uint64_t v3 = sub_191F9F024();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92FC4C0);
  MEMORY[0x192FEA0F0](v3, v4);
  sub_191FB9E38();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0xD000000000000015;
}

uint64_t sub_191F9F2D8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186488](v0, 56, 7);
}

_OWORD *initializeBufferWithCopyOfBuffer for _EXActiveQuery.ActiveQueryObserver(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  return a1;
}

void *assignWithCopy for _EXActiveQuery.ActiveQueryObserver(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v3;
  return a1;
}

_OWORD *assignWithTake for _EXActiveQuery.ActiveQueryObserver(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  return a1;
}

uint64_t sub_191F9F3E4()
{
  return sub_191FBA168() & 1;
}

uint64_t sub_191F9F43C()
{
  return sub_191FBA688();
}

uint64_t sub_191F9F484()
{
  return sub_191FBA178();
}

uint64_t sub_191F9F4AC()
{
  return sub_191FBA688();
}

unint64_t sub_191F9F4F0()
{
  return sub_191F9F1B0();
}

uint64_t sub_191F9F514(uint64_t a1, uint64_t a2)
{
  return sub_191F414E0(&qword_1E92FDB60, a2, (void (*)(uint64_t))type metadata accessor for _EXActiveQuery);
}

uint64_t sub_191F9F55C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_191FBA278();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if ((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    while (1)
    {
      sub_191F91D40(*(void *)(v6 + 48) + 40 * v9, (uint64_t)v16);
      char v11 = MEMORY[0x192FEA490](v16, a2);
      sub_191F91D9C((uint64_t)v16);
      if (v11) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease();
    sub_191F91D9C(a2);
    sub_191F91D40(*(void *)(*v3 + 48) + 40 * v9, a1);
    return 0;
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_191F91D40(a2, (uint64_t)v16);
    uint64_t v15 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_191FA0D2C((uint64_t)v16, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v15;
    swift_bridgeObjectRelease();
    long long v13 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v13;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    return 1;
  }
}

uint64_t sub_191F9F6D8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_191FBA648();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_191FB9E28();
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_191FBA688();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_191FBA598() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      long long v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_191FBA598() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_191FA0E98(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_191F9F898(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BB40);
    uint64_t v2 = sub_191FBA2D8();
    uint64_t v15 = v2;
    sub_191FBA228();
    if (sub_191FBA258())
    {
      sub_191F442A4(0, (unint64_t *)&qword_1EB27BCB0);
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v15;
        unint64_t v9 = *(void *)(v15 + 16);
        if (*(void *)(v15 + 24) <= v9)
        {
          sub_191FA071C(v9 + 1, (uint64_t *)&unk_1EB27BB40);
          uint64_t v2 = v15;
        }
        uint64_t result = sub_191FBA158();
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v10 = 0;
          unint64_t v11 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v12 = v7 == v11;
            if (v7 == v11) {
              unint64_t v7 = 0;
            }
            v10 |= v12;
            uint64_t v13 = *(void *)(v4 + 8 * v7);
          }
          while (v13 == -1);
          unint64_t v8 = __clz(__rbit64(~v13)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v14;
        ++*(void *)(v2 + 16);
      }
      while (sub_191FBA258());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return v2;
}

uint64_t sub_191F9FAA4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FDB68);
    uint64_t v2 = sub_191FBA2D8();
    uint64_t v15 = v2;
    sub_191FBA228();
    if (sub_191FBA258())
    {
      type metadata accessor for _EXActiveClientQuery();
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v15;
        unint64_t v9 = *(void *)(v15 + 16);
        if (*(void *)(v15 + 24) <= v9)
        {
          sub_191FA071C(v9 + 1, &qword_1E92FDB68);
          uint64_t v2 = v15;
        }
        uint64_t result = sub_191FBA158();
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v10 = 0;
          unint64_t v11 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v12 = v7 == v11;
            if (v7 == v11) {
              unint64_t v7 = 0;
            }
            v10 |= v12;
            uint64_t v13 = *(void *)(v4 + 8 * v7);
          }
          while (v13 == -1);
          unint64_t v8 = __clz(__rbit64(~v13)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v14;
        ++*(void *)(v2 + 16);
      }
      while (sub_191FBA258());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return v2;
}

uint64_t sub_191F9FCA0()
{
  uint64_t v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FC6D8);
  uint64_t v2 = sub_191FBA2C8();
  uint64_t v3 = v2;
  if (*(void *)(v1 + 16))
  {
    uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
    uint64_t v26 = (void *)(v1 + 56);
    if (v4 < 64) {
      uint64_t v5 = ~(-1 << v4);
    }
    else {
      uint64_t v5 = -1;
    }
    unint64_t v6 = v5 & *(void *)(v1 + 56);
    int64_t v25 = (unint64_t)(v4 + 63) >> 6;
    uint64_t v7 = v2 + 56;
    uint64_t result = swift_retain();
    for (int64_t i = 0; ; int64_t i = v27)
    {
      if (v6)
      {
        unint64_t v11 = __clz(__rbit64(v6));
        v6 &= v6 - 1;
        int64_t v27 = i;
        unint64_t v12 = v11 | (i << 6);
      }
      else
      {
        int64_t v13 = i + 1;
        if (__OFADD__(i, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v13 >= v25) {
          goto LABEL_33;
        }
        unint64_t v14 = v26[v13];
        int64_t v15 = i + 1;
        if (!v14)
        {
          int64_t v15 = i + 2;
          if (i + 2 >= v25) {
            goto LABEL_33;
          }
          unint64_t v14 = v26[v15];
          if (!v14)
          {
            int64_t v15 = i + 3;
            if (i + 3 >= v25) {
              goto LABEL_33;
            }
            unint64_t v14 = v26[v15];
            if (!v14)
            {
              uint64_t v16 = i + 4;
              if (i + 4 >= v25)
              {
LABEL_33:
                swift_release();
                uint64_t v24 = 1 << *(unsigned char *)(v1 + 32);
                if (v24 > 63) {
                  bzero(v26, ((unint64_t)(v24 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v26 = -1 << v24;
                }
                *(void *)(v1 + 16) = 0;
                break;
              }
              unint64_t v14 = v26[v16];
              if (!v14)
              {
                while (1)
                {
                  int64_t v15 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_39;
                  }
                  if (v15 >= v25) {
                    goto LABEL_33;
                  }
                  unint64_t v14 = v26[v15];
                  ++v16;
                  if (v14) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v15 = i + 4;
            }
          }
        }
LABEL_23:
        unint64_t v6 = (v14 - 1) & v14;
        int64_t v27 = v15;
        unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
      }
      long long v28 = *(_OWORD *)(*(void *)(v1 + 48) + 16 * v12);
      sub_191FBA648();
      swift_getObjectType();
      v29[3] = swift_getAssociatedTypeWitness();
      v29[4] = swift_getAssociatedConformanceWitness();
      __swift_allocate_boxed_opaque_existential_0(v29);
      sub_191FBA318();
      sub_191FB9D78();
      __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v29);
      uint64_t result = sub_191FBA688();
      uint64_t v17 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v18 = result & ~v17;
      unint64_t v19 = v18 >> 6;
      if (((-1 << v18) & ~*(void *)(v7 + 8 * (v18 >> 6))) != 0)
      {
        unint64_t v10 = __clz(__rbit64((-1 << v18) & ~*(void *)(v7 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v20 = 0;
        unint64_t v21 = (unint64_t)(63 - v17) >> 6;
        do
        {
          if (++v19 == v21 && (v20 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v22 = v19 == v21;
          if (v19 == v21) {
            unint64_t v19 = 0;
          }
          v20 |= v22;
          uint64_t v23 = *(void *)(v7 + 8 * v19);
        }
        while (v23 == -1);
        unint64_t v10 = __clz(__rbit64(~v23)) + (v19 << 6);
      }
      *(void *)(v7 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
      *(_OWORD *)(*(void *)(v3 + 48) + 16 * v10) = v28;
      ++*(void *)(v3 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v0 = v3;
  return result;
}

uint64_t sub_191FA0050(uint64_t a1)
{
  return sub_191FA071C(a1, (uint64_t *)&unk_1EB27BB40);
}

uint64_t sub_191FA005C()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_191FB9C68();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FC6D0);
  uint64_t v5 = sub_191FBA2C8();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    id v38 = (void *)(v4 + 56);
    uint64_t v39 = v2;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v36 = v0;
    int64_t v37 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v37) {
          goto LABEL_33;
        }
        unint64_t v20 = v38[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v37) {
            goto LABEL_33;
          }
          unint64_t v20 = v38[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v37) {
              goto LABEL_33;
            }
            unint64_t v20 = v38[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v37)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v36;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v38, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v38 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v38[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v37) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v38[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      sub_191F414E0(&qword_1E92FC6E0, 255, MEMORY[0x1E4F27990]);
      uint64_t result = sub_191FB9D68();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_191FA0450()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FDB70);
  uint64_t v3 = sub_191FBA2C8();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v15 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v16 = v15 | (v12 << 6);
      }
      else
      {
        int64_t v17 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v17 >= v9) {
          goto LABEL_33;
        }
        unint64_t v18 = v6[v17];
        ++v12;
        if (!v18)
        {
          int64_t v12 = v17 + 1;
          if (v17 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v18 = v6[v12];
          if (!v18)
          {
            int64_t v12 = v17 + 2;
            if (v17 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v18 = v6[v12];
            if (!v18)
            {
              int64_t v19 = v17 + 3;
              if (v19 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
                if (v28 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v28;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v18 = v6[v19];
              if (!v18)
              {
                while (1)
                {
                  int64_t v12 = v19 + 1;
                  if (__OFADD__(v19, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v18 = v6[v12];
                  ++v19;
                  if (v18) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v19;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v12 << 6);
      }
      uint64_t v20 = *(void *)(v2 + 48) + 40 * v16;
      long long v29 = *(_OWORD *)v20;
      long long v30 = *(_OWORD *)(v20 + 16);
      uint64_t v31 = *(void *)(v20 + 32);
      uint64_t result = sub_191FBA278();
      uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v13 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      uint64_t v14 = *(void *)(v4 + 48) + 40 * v13;
      *(_OWORD *)uint64_t v14 = v29;
      *(_OWORD *)(v14 + 16) = v30;
      *(void *)(v14 + 32) = v31;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_191FA071C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v5 = sub_191FBA2C8();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    long long v30 = v2;
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    unint64_t v8 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v4 + 56);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v12 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v11) {
            goto LABEL_33;
          }
          unint64_t v19 = v8[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v11) {
              goto LABEL_33;
            }
            unint64_t v19 = v8[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                uint64_t v3 = v30;
                uint64_t v29 = 1 << *(unsigned char *)(v4 + 32);
                if (v29 > 63) {
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v8 = -1 << v29;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v11) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v8[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v4 + 48) + 8 * v17);
      uint64_t result = sub_191FBA158();
      uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v6 + 48) + 8 * v15) = v21;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_191FA09B8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FDB78);
  uint64_t v3 = sub_191FBA2C8();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    long long v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_191FBA648();
      swift_bridgeObjectRetain();
      sub_191FB9E28();
      swift_bridgeObjectRelease();
      uint64_t result = sub_191FBA688();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *unint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

unint64_t sub_191FA0CA8(uint64_t a1, uint64_t a2)
{
  sub_191FBA158();
  unint64_t result = sub_191FBA218();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_191FA0D2C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_191FA0450();
  }
  else
  {
    if (v8 > v7)
    {
      unint64_t result = (uint64_t)sub_191FA1498();
      goto LABEL_12;
    }
    sub_191FA181C();
  }
  uint64_t v9 = *v3;
  unint64_t result = sub_191FBA278();
  uint64_t v10 = -1 << *(unsigned char *)(v9 + 32);
  a2 = result & ~v10;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v11 = ~v10;
    do
    {
      sub_191F91D40(*(void *)(v9 + 48) + 40 * a2, (uint64_t)v19);
      char v12 = MEMORY[0x192FEA490](v19, v6);
      unint64_t result = sub_191F91D9C((uint64_t)v19);
      if (v12) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v11;
    }
    while (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v13 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t v14 = *(void *)(v13 + 48) + 40 * a2;
  long long v15 = *(_OWORD *)(v6 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v6;
  *(_OWORD *)(v14 + 16) = v15;
  *(void *)(v14 + 32) = *(void *)(v6 + 32);
  uint64_t v16 = *(void *)(v13 + 16);
  BOOL v17 = __OFADD__(v16, 1);
  uint64_t v18 = v16 + 1;
  if (!v17)
  {
    *(void *)(v13 + 16) = v18;
    return result;
  }
  __break(1u);
LABEL_15:
  unint64_t result = sub_191FBA5C8();
  __break(1u);
  return result;
}

uint64_t sub_191FA0E98(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_191FA09B8();
  }
  else
  {
    if (v10 > v9)
    {
      unint64_t result = (uint64_t)sub_191FA1668();
      goto LABEL_22;
    }
    sub_191FA1AB0();
  }
  uint64_t v11 = *v4;
  sub_191FBA648();
  swift_bridgeObjectRetain();
  sub_191FB9E28();
  swift_bridgeObjectRelease();
  unint64_t result = sub_191FBA688();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    long long v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (unint64_t result = sub_191FBA598(), (result & 1) != 0))
    {
LABEL_21:
      unint64_t result = sub_191FBA5C8();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          unint64_t result = sub_191FBA598();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void *sub_191FA1044()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FC6D8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_191FBA2B8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_OWORD *)(*(void *)(v4 + 48) + 16 * v15) = *(_OWORD *)(*(void *)(v2 + 48) + 16 * v15);
    unint64_t result = (void *)swift_unknownObjectRetain();
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_191FA11F4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_191FB9C68();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FC6D0);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_191FBA2B8();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    unint64_t result = (void *)swift_release();
LABEL_27:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v22 = v1;
  unint64_t result = (void *)(v7 + 56);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v10) {
    unint64_t result = memmove(result, (const void *)(v6 + 56), 8 * v10);
  }
  uint64_t v23 = v6 + 56;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 56);
  int64_t v24 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v18 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v18 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v18);
    ++v11;
    if (!v19)
    {
      int64_t v11 = v18 + 1;
      if (v18 + 1 >= v24) {
        goto LABEL_25;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v11);
      if (!v19)
      {
        int64_t v11 = v18 + 2;
        if (v18 + 2 >= v24) {
          goto LABEL_25;
        }
        unint64_t v19 = *(void *)(v23 + 8 * v11);
        if (!v19) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v14 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    unint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v24)
  {
LABEL_25:
    unint64_t result = (void *)swift_release();
    uint64_t v1 = v22;
    goto LABEL_27;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
    int64_t v11 = v20;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v11 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v11 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v11);
    ++v20;
    if (v19) {
      goto LABEL_24;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

void *sub_191FA1498()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FDB70);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_191FBA2B8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    unint64_t result = (void *)sub_191F91D40(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v23);
    uint64_t v17 = *(void *)(v4 + 48) + v16;
    long long v18 = v23[0];
    long long v19 = v23[1];
    *(void *)(v17 + 32) = v24;
    *(_OWORD *)uint64_t v17 = v18;
    *(_OWORD *)(v17 + 16) = v19;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_191FA1668()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FDB78);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_191FBA2B8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    long long v19 = (void *)(*(void *)(v4 + 48) + v16);
    *long long v19 = *v17;
    v19[1] = v18;
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_191FA181C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FDB70);
  uint64_t v3 = sub_191FBA2C8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v9) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v12;
    if (!v20)
    {
      int64_t v12 = v19 + 1;
      if (v19 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v12);
      if (!v20)
      {
        int64_t v12 = v19 + 2;
        if (v19 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v20 = *(void *)(v6 + 8 * v12);
        if (!v20) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v12 << 6);
LABEL_24:
    sub_191F91D40(*(void *)(v2 + 48) + 40 * v18, (uint64_t)v29);
    uint64_t result = sub_191FBA278();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v10 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v23) & ~*(void *)(v10 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v10 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v13 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    uint64_t v14 = *(void *)(v4 + 48) + 40 * v13;
    long long v15 = v29[0];
    long long v16 = v29[1];
    *(void *)(v14 + 32) = v30;
    *(_OWORD *)uint64_t v14 = v15;
    *(_OWORD *)(v14 + 16) = v16;
    ++*(void *)(v4 + 16);
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v12 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v12);
    ++v21;
    if (v20) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_191FA1AB0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FDB78);
  uint64_t v3 = sub_191FBA2C8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    int64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_191FBA648();
    swift_bridgeObjectRetain_n();
    sub_191FB9E28();
    swift_bridgeObjectRelease();
    uint64_t result = sub_191FBA688();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_191FA1D6C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v34 = a1;
  uint64_t v7 = sub_191FB9C68();
  uint64_t v37 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FC6D0);
  uint64_t result = sub_191FBA2E8();
  uint64_t v10 = result;
  uint64_t v33 = a2;
  if (a2 < 1) {
    unint64_t v12 = 0;
  }
  else {
    unint64_t v12 = *v34;
  }
  uint64_t v13 = 0;
  uint64_t v14 = result + 56;
  uint64_t v35 = (uint64_t (**)(unint64_t, char *, uint64_t))(v37 + 32);
  uint64_t v36 = v37 + 16;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v13 << 6);
    }
    else
    {
      uint64_t v17 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_40;
      }
      if (v17 >= v33)
      {
LABEL_37:
        swift_release();
        return v10;
      }
      unint64_t v18 = v34[v17];
      ++v13;
      if (!v18)
      {
        uint64_t v13 = v17 + 1;
        if (v17 + 1 >= v33) {
          goto LABEL_37;
        }
        unint64_t v18 = v34[v13];
        if (!v18)
        {
          uint64_t v13 = v17 + 2;
          if (v17 + 2 >= v33) {
            goto LABEL_37;
          }
          unint64_t v18 = v34[v13];
          if (!v18)
          {
            uint64_t v19 = v17 + 3;
            if (v19 >= v33) {
              goto LABEL_37;
            }
            unint64_t v18 = v34[v19];
            if (!v18)
            {
              while (1)
              {
                uint64_t v13 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_37;
                }
                unint64_t v18 = v34[v13];
                ++v19;
                if (v18) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v13 = v19;
          }
        }
      }
LABEL_24:
      unint64_t v12 = (v18 - 1) & v18;
      unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
    }
    uint64_t v20 = a4;
    uint64_t v21 = *(void *)(a4 + 48);
    uint64_t v22 = *(void *)(v37 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v37 + 16))(v9, v21 + v22 * v16, v7);
    sub_191F414E0(&qword_1E92FC6E0, 255, MEMORY[0x1E4F27990]);
    uint64_t result = sub_191FB9D68();
    uint64_t v23 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v29 = v25 == v28;
        if (v25 == v28) {
          unint64_t v25 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v14 + 8 * v25);
      }
      while (v30 == -1);
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(void *)(v14 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t result = (*v35)(*(void *)(v10 + 48) + v26 * v22, v9, v7);
    ++*(void *)(v10 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v20;
    if (!a3) {
      goto LABEL_37;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_191FA20FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_191FB9C68();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_191F414E0(&qword_1E92FC6E0, 255, MEMORY[0x1E4F27990]);
  swift_bridgeObjectRetain();
  uint64_t v31 = a1;
  uint64_t v10 = sub_191FB9D68();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v13 = v9;
  uint64_t v30 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    unint64_t v26 = v2;
    uint64_t v27 = v6;
    uint64_t v28 = a2;
    uint64_t v29 = ~v11;
    unint64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v15 = v6 + 16;
    uint64_t v14 = v16;
    uint64_t v17 = *(void *)(v15 + 56);
    while (1)
    {
      uint64_t v18 = v13;
      v14(v8, *(void *)(v13 + 48) + v17 * v12, v5);
      sub_191F414E0(&qword_1E92FC6E8, 255, MEMORY[0x1E4F27990]);
      char v19 = sub_191FB9D98();
      (*(void (**)(char *, uint64_t))(v15 - 8))(v8, v5);
      if (v19) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v29;
      uint64_t v13 = v18;
      if (((*(void *)(v30 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = 1;
        uint64_t v6 = v27;
        a2 = v28;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v21 = v26;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v21;
    uint64_t v32 = *v21;
    *uint64_t v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_191FA11F4();
      uint64_t v23 = v32;
    }
    uint64_t v6 = v27;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v27 + 32))(v28, *(void *)(v23 + 48) + v17 * v12, v5);
    sub_191FA2C74(v12);
    *uint64_t v21 = v32;
    swift_bridgeObjectRelease();
    uint64_t v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
}

uint64_t sub_191FA23E4()
{
  uint64_t v1 = *v0;
  sub_191FBA648();
  swift_getObjectType();
  v13[3] = swift_getAssociatedTypeWitness();
  v13[4] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_0(v13);
  swift_bridgeObjectRetain();
  sub_191FBA318();
  sub_191FB9D78();
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v13);
  uint64_t v2 = sub_191FBA688();
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  unint64_t v4 = v2 & ~v3;
  if ((*(void *)(v1 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    unint64_t v12 = v0;
    uint64_t v5 = ~v3;
    while (1)
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v6 = sub_191FBA328();
      uint64_t v7 = sub_191FBA328();
      swift_unknownObjectRelease();
      if (v6 == v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
      if (((*(void *)(v1 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v10 = *v12;
    uint64_t v14 = *v12;
    uint64_t *v12 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_191FA1044();
      uint64_t v10 = v14;
    }
    uint64_t v8 = *(void *)(*(void *)(v10 + 48) + 16 * v4);
    sub_191FA2F94(v4);
    uint64_t *v12 = v14;
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    return 0;
  }
  return v8;
}

uint64_t sub_191FA2618@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v3;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_191FBA278();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if ((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    while (1)
    {
      sub_191F91D40(*(void *)(v6 + 48) + 40 * v9, (uint64_t)v17);
      char v11 = MEMORY[0x192FEA490](v17, a1);
      sub_191F91D9C((uint64_t)v17);
      if (v11) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    v17[0] = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_191FA1498();
      uint64_t v14 = v17[0];
    }
    uint64_t v15 = *(void *)(v14 + 48) + 40 * v9;
    long long v16 = *(_OWORD *)(v15 + 16);
    *(_OWORD *)a2 = *(_OWORD *)v15;
    *(_OWORD *)(a2 + 16) = v16;
    *(void *)(a2 + 32) = *(void *)(v15 + 32);
    sub_191FA322C(v9);
    *uint64_t v3 = v17[0];
    return swift_bridgeObjectRelease();
  }
  else
  {
LABEL_5:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_191FA277C(void *a1)
{
  uint64_t v3 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v4 = a1;
    char v5 = sub_191FBA268();

    if (v5)
    {
      uint64_t v6 = sub_191FA294C();
      swift_bridgeObjectRelease();
      return v6;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_191FBA158();
  uint64_t v8 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
    goto LABEL_12;
  }
  type metadata accessor for _EXActiveClientQuery();
  id v10 = *(id *)(*(void *)(v3 + 48) + 8 * v9);
  char v11 = sub_191FBA168();

  if ((v11 & 1) == 0)
  {
    uint64_t v12 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v12;
      if (((*(void *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_12;
      }
      id v13 = *(id *)(*(void *)(v3 + 48) + 8 * v9);
      char v14 = sub_191FBA168();
    }
    while ((v14 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v16 = *v1;
  uint64_t v18 = *v1;
  *uint64_t v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_191F53264(&qword_1E92FDB68);
    uint64_t v16 = v18;
  }
  uint64_t v6 = *(void *)(*(void *)(v16 + 48) + 8 * v9);
  sub_191F530C0(v9);
  *uint64_t v1 = v18;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_191FA294C()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_191FBA238();
  uint64_t v3 = swift_unknownObjectRetain();
  uint64_t v4 = sub_191F9FAA4(v3, v2);
  uint64_t v15 = v4;
  swift_retain();
  uint64_t v5 = sub_191FBA158();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if ((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    type metadata accessor for _EXActiveClientQuery();
    id v8 = *(id *)(*(void *)(v4 + 48) + 8 * v7);
    char v9 = sub_191FBA168();

    if (v9)
    {
LABEL_6:
      swift_release();
      uint64_t v13 = *(void *)(*(void *)(v4 + 48) + 8 * v7);
      sub_191F530C0(v7);
      if (sub_191FBA168())
      {
        *uint64_t v1 = v15;
        return v13;
      }
      __break(1u);
    }
    else
    {
      uint64_t v10 = ~v6;
      while (1)
      {
        unint64_t v7 = (v7 + 1) & v10;
        if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
          break;
        }
        id v11 = *(id *)(*(void *)(v4 + 48) + 8 * v7);
        char v12 = sub_191FBA168();

        if (v12) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_191FA2AD8()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_191FBA238();
  uint64_t v3 = swift_unknownObjectRetain();
  uint64_t v4 = sub_191F9F898(v3, v2);
  uint64_t v15 = v4;
  swift_retain();
  uint64_t v5 = sub_191FBA158();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if ((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    sub_191F442A4(0, (unint64_t *)&qword_1EB27BCB0);
    id v8 = *(id *)(*(void *)(v4 + 48) + 8 * v7);
    char v9 = sub_191FBA168();

    if (v9)
    {
LABEL_6:
      swift_release();
      uint64_t v13 = *(void *)(*(void *)(v4 + 48) + 8 * v7);
      sub_191F530C0(v7);
      if (sub_191FBA168())
      {
        *uint64_t v1 = v15;
        return v13;
      }
      __break(1u);
    }
    else
    {
      uint64_t v10 = ~v6;
      while (1)
      {
        unint64_t v7 = (v7 + 1) & v10;
        if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
          break;
        }
        id v11 = *(id *)(*(void *)(v4 + 48) + 8 * v7);
        char v12 = sub_191FBA168();

        if (v12) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_191FA2C74(int64_t a1)
{
  uint64_t v3 = sub_191FB9C68();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = *v1;
  uint64_t v8 = *v1 + 56;
  uint64_t v9 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v31 = v1;
    uint64_t v11 = ~v9;
    uint64_t v35 = result;
    swift_retain();
    uint64_t v12 = sub_191FBA208();
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v33 = (v12 + 1) & v11;
      char v14 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
      uint64_t v13 = v4 + 16;
      uint64_t v32 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v34 = v13;
      uint64_t v16 = (void (**)(char *, uint64_t))(v13 - 8);
      uint64_t v17 = v35;
      do
      {
        uint64_t v18 = v8;
        uint64_t v19 = v15;
        int64_t v20 = v15 * v10;
        v32(v6, *(void *)(v17 + 48) + v15 * v10, v3);
        sub_191F414E0(&qword_1E92FC6E0, 255, MEMORY[0x1E4F27990]);
        uint64_t v21 = sub_191FB9D68();
        (*v16)(v6, v3);
        unint64_t v22 = v21 & v11;
        if (a1 >= (uint64_t)v33)
        {
          if (v22 < v33 || a1 < (uint64_t)v22)
          {
LABEL_4:
            uint64_t v8 = v18;
            uint64_t v15 = v19;
            uint64_t v17 = v35;
            goto LABEL_5;
          }
        }
        else if (v22 < v33 && a1 < (uint64_t)v22)
        {
          goto LABEL_4;
        }
        uint64_t v17 = v35;
        int64_t v25 = v19 * a1;
        uint64_t v8 = v18;
        if (v19 * a1 < v20
          || (uint64_t v15 = v19, *(void *)(v35 + 48) + v19 * a1 >= (unint64_t)(*(void *)(v35 + 48) + v20 + v19)))
        {
          swift_arrayInitWithTakeFrontToBack();
          goto LABEL_21;
        }
        a1 = v10;
        if (v25 != v20)
        {
          swift_arrayInitWithTakeBackToFront();
LABEL_21:
          uint64_t v17 = v35;
          uint64_t v15 = v19;
          a1 = v10;
        }
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    uint64_t v1 = v31;
  }
  else
  {
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v26 = *v1;
  uint64_t v27 = *(void *)(*v1 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v26 + 16) = v29;
    ++*(_DWORD *)(v26 + 36);
  }
  return result;
}

unint64_t sub_191FA2F94(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v19 = v1;
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_191FBA208();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      uint64_t v20 = v3;
      uint64_t v21 = v4;
      unint64_t v22 = (v8 + 1) & v7;
      do
      {
        sub_191FBA648();
        swift_getObjectType();
        v23[3] = swift_getAssociatedTypeWitness();
        v23[4] = swift_getAssociatedConformanceWitness();
        __swift_allocate_boxed_opaque_existential_0(v23);
        swift_unknownObjectRetain();
        sub_191FBA318();
        sub_191FB9D78();
        __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v23);
        uint64_t v9 = sub_191FBA688();
        swift_unknownObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v2 >= (uint64_t)v22)
        {
          if (v10 < v22)
          {
            uint64_t v4 = v21;
          }
          else
          {
            uint64_t v11 = v20;
            uint64_t v4 = v21;
            if (v2 >= (uint64_t)v10) {
              goto LABEL_12;
            }
          }
        }
        else
        {
          uint64_t v11 = v20;
          uint64_t v4 = v21;
          if (v10 >= v22 || v2 >= (uint64_t)v10)
          {
LABEL_12:
            uint64_t v12 = *(void *)(v11 + 48);
            uint64_t v13 = (_OWORD *)(v12 + 16 * v2);
            char v14 = (_OWORD *)(v12 + 16 * v6);
            if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
            {
              *uint64_t v13 = *v14;
              int64_t v2 = v6;
            }
          }
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
    uint64_t v1 = v19;
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *v1;
  uint64_t v16 = *(void *)(*v1 + 16);
  BOOL v17 = __OFSUB__(v16, 1);
  uint64_t v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v15 + 16) = v18;
    ++*(_DWORD *)(v15 + 36);
  }
  return result;
}

unint64_t sub_191FA322C(unint64_t result)
{
  int64_t v2 = v1;
  int64_t v3 = result;
  uint64_t v4 = *v1;
  uint64_t v5 = *v1 + 56;
  uint64_t v6 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(void *)(v5 + 8 * (v7 >> 6))) != 0)
  {
    uint64_t v8 = ~v6;
    swift_retain();
    uint64_t v9 = sub_191FBA208();
    if ((*(void *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      unint64_t v10 = (v9 + 1) & v8;
      do
      {
        sub_191F91D40(*(void *)(v4 + 48) + 40 * v7, (uint64_t)v24);
        uint64_t v13 = sub_191FBA278();
        sub_191F91D9C((uint64_t)v24);
        unint64_t v14 = v13 & v8;
        if (v3 >= (uint64_t)v10)
        {
          if (v14 >= v10 && v3 >= (uint64_t)v14)
          {
LABEL_16:
            uint64_t v17 = *(void *)(v4 + 48);
            unint64_t v18 = v17 + 40 * v3;
            uint64_t v19 = (long long *)(v17 + 40 * v7);
            if (v3 != v7 || (int64_t v3 = v7, v18 >= (unint64_t)v19 + 40))
            {
              long long v11 = *v19;
              long long v12 = v19[1];
              *(void *)(v18 + 32) = *((void *)v19 + 4);
              *(_OWORD *)unint64_t v18 = v11;
              *(_OWORD *)(v18 + 16) = v12;
              int64_t v3 = v7;
            }
          }
        }
        else if (v14 >= v10 || v3 >= (uint64_t)v14)
        {
          goto LABEL_16;
        }
        unint64_t v7 = (v7 + 1) & v8;
      }
      while (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
    }
    *(void *)(v5 + (((unint64_t)v3 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v3) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v20 = *v2;
  uint64_t v21 = *(void *)(*v2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v20 + 16) = v23;
    ++*(_DWORD *)(v20 + 36);
  }
  return result;
}

uint64_t sub_191FA33F8(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v49 = a2;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE40);
  MEMORY[0x1F4188790](v9 - 8);
  long long v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_191FB9C68();
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v13);
  uint64_t v63 = (char *)&v48 - v17;
  uint64_t v18 = *(void *)(a3 + 16);
  uint64_t v19 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  uint64_t v20 = *(unint64_t *)((char *)a1 + v19);
  uint64_t v51 = a1;
  uint64_t v52 = v21;
  *(unint64_t *)((char *)a1 + v19) = v20 & ((-1 << a4) - 1);
  uint64_t v22 = v21;
  uint64_t v23 = v18 - 1;
  uint64_t v61 = v21 + 16;
  uint64_t v62 = a3;
  uint64_t v56 = (unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  uint64_t v57 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  id v54 = a5;
  uint64_t v55 = (void (**)(char *, char *, uint64_t))(v21 + 32);
  uint64_t v60 = a3 + 56;
  unint64_t v24 = (void (**)(char *, uint64_t))(v21 + 8);
  __int16 v53 = v11;
  while (2)
  {
    uint64_t v50 = v23;
    do
    {
      while (1)
      {
        uint64_t v26 = *a5;
        uint64_t v27 = a5[1];
        uint64_t v28 = a5[2];
        int64_t v29 = a5[3];
        unint64_t v30 = a5[4];
        uint64_t v59 = v28;
        if (v30)
        {
          uint64_t v58 = (v30 - 1) & v30;
          unint64_t v31 = __clz(__rbit64(v30)) | (v29 << 6);
LABEL_7:
          (*(void (**)(char *, unint64_t, uint64_t))(v22 + 16))(v11, *(void *)(v26 + 48) + *(void *)(v22 + 72) * v31, v12);
          uint64_t v32 = 0;
          goto LABEL_8;
        }
        int64_t v41 = v29 + 1;
        if (__OFADD__(v29, 1))
        {
          __break(1u);
          goto LABEL_42;
        }
        int64_t v42 = (unint64_t)(v28 + 64) >> 6;
        if (v41 >= v42)
        {
          uint64_t v58 = 0;
          uint64_t v32 = 1;
          goto LABEL_8;
        }
        unint64_t v43 = *(void *)(v27 + 8 * v41);
        if (v43) {
          goto LABEL_17;
        }
        if (v29 + 2 >= v42) {
          goto LABEL_34;
        }
        unint64_t v43 = *(void *)(v27 + 8 * (v29 + 2));
        if (v43)
        {
          int64_t v41 = v29 + 2;
LABEL_17:
          uint64_t v58 = (v43 - 1) & v43;
          unint64_t v31 = __clz(__rbit64(v43)) + (v41 << 6);
          int64_t v29 = v41;
          goto LABEL_7;
        }
        if (v29 + 3 >= v42)
        {
          uint64_t v58 = 0;
          uint64_t v32 = 1;
          v29 += 2;
          goto LABEL_8;
        }
        unint64_t v43 = *(void *)(v27 + 8 * (v29 + 3));
        if (v43)
        {
          int64_t v41 = v29 + 3;
          goto LABEL_17;
        }
        int64_t v41 = v29 + 4;
        if (v29 + 4 < v42)
        {
          unint64_t v43 = *(void *)(v27 + 8 * v41);
          if (v43) {
            goto LABEL_17;
          }
          int64_t v41 = v42 - 1;
          int64_t v46 = v29 + 5;
          while (v42 != v46)
          {
            unint64_t v43 = *(void *)(v27 + 8 * v46++);
            if (v43)
            {
              int64_t v41 = v46 - 1;
              goto LABEL_17;
            }
          }
LABEL_34:
          uint64_t v58 = 0;
          uint64_t v32 = 1;
          int64_t v29 = v41;
          goto LABEL_8;
        }
        uint64_t v58 = 0;
        uint64_t v32 = 1;
        v29 += 3;
LABEL_8:
        (*v57)(v11, v32, 1, v12);
        *a5 = v26;
        a5[1] = v27;
        a5[2] = v59;
        a5[3] = v29;
        a5[4] = v58;
        if ((*v56)(v11, 1, v12) == 1)
        {
          sub_191F9C38C((uint64_t)v11);
          uint64_t v47 = v62;
          swift_retain();
          return sub_191FA1D6C(v51, v49, v50, v47);
        }
        (*v55)(v63, v11, v12);
        uint64_t v33 = v62;
        sub_191F414E0(&qword_1E92FC6E0, 255, MEMORY[0x1E4F27990]);
        uint64_t v34 = sub_191FB9D68();
        uint64_t v35 = -1 << *(unsigned char *)(v33 + 32);
        unint64_t v36 = v34 & ~v35;
        if ((*(void *)(v60 + ((v36 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v36)) {
          break;
        }
        int64_t v25 = *v24;
LABEL_4:
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v25)(v63, v12);
      }
      uint64_t v59 = (unint64_t)v24 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v37 = ~v35;
      uint64_t v38 = *(void *)(v22 + 72);
      uint64_t v39 = *(void (**)(char *, unint64_t, uint64_t))(v22 + 16);
      while (1)
      {
        v39(v15, *(void *)(v62 + 48) + v38 * v36, v12);
        sub_191F414E0(&qword_1E92FC6E8, 255, MEMORY[0x1E4F27990]);
        char v40 = sub_191FB9D98();
        int64_t v25 = *v24;
        (*v24)(v15, v12);
        if (v40) {
          break;
        }
        unint64_t v36 = (v36 + 1) & v37;
        if (((*(void *)(v60 + ((v36 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v36) & 1) == 0)
        {
          long long v11 = v53;
          a5 = v54;
          uint64_t v22 = v52;
          goto LABEL_4;
        }
      }
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v25)(v63, v12);
      uint64_t v44 = (v36 >> 3) & 0x1FFFFFFFFFFFFFF8;
      uint64_t v22 = v52;
      uint64_t v45 = *(unint64_t *)((char *)v51 + v44);
      *(unint64_t *)((char *)v51 + v44) = v45 & ~(1 << v36);
      long long v11 = v53;
      a5 = v54;
    }
    while ((v45 & (1 << v36)) == 0);
    uint64_t v23 = v50 - 1;
    if (__OFSUB__(v50, 1))
    {
LABEL_42:
      __break(1u);
      return result;
    }
    if (v50 != 1) {
      continue;
    }
    return MEMORY[0x1E4FBC870];
  }
}

uint64_t sub_191FA3958(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

int64_t sub_191FA39FC(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

id sub_191FA3AE4()
{
  uint64_t v1 = OBJC_IVAR____EXRunningLibXPCServiceExtension____lazy_storage____extensionIdentity;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____EXRunningLibXPCServiceExtension____lazy_storage____extensionIdentity);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____EXRunningLibXPCServiceExtension____lazy_storage____extensionIdentity);
LABEL_5:
    id v8 = v2;
    return v3;
  }
  id result = objc_msgSend(self, sel_bundleRecordForCurrentProcess);
  if (result)
  {
    unint64_t v5 = result;
    self;
    id v6 = objc_msgSend(objc_allocWithZone((Class)_EXExtensionIdentity), sel_initWithApplicationExtensionRecord_, swift_dynamicCastObjCClassUnconditional());

    unint64_t v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v6;
    id v3 = v6;

    uint64_t v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

id sub_191FA3C04()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for _EXRunningLibXPCServiceExtension();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_191FA3C88()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_191FA3CC4(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v29 = a5;
  uint64_t v30 = a8;
  uint64_t v10 = v9;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v28 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](a1);
  char v40 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  unint64_t v36 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v13 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v15 = (char *)&v26 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v33 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v31 = *(void *)(v17 - 8);
  uint64_t v32 = v17;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v26 - v18;
  uint64_t v34 = v8;
  uint64_t v20 = sub_191FBA008();
  if (!v20) {
    return sub_191FB9F18();
  }
  uint64_t v21 = v20;
  uint64_t v27 = v15;
  uint64_t v43 = sub_191FBA3D8();
  uint64_t v35 = sub_191FBA3E8();
  sub_191FBA388();
  int64_t v41 = v19;
  uint64_t result = sub_191FB9FF8();
  if (v21 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v23 = (void (**)(char *))(v36 + 2);
    ++v36;
    uint64_t v37 = v23;
    unint64_t v24 = v27;
    while (1)
    {
      int64_t v25 = (void (*)(char *, void))sub_191FBA028();
      (*v37)(v24);
      v25(v42, 0);
      v38(v24, v40);
      if (v10) {
        break;
      }
      uint64_t v10 = 0;
      (*v36)(v24, AssociatedTypeWitness);
      sub_191FBA3C8();
      sub_191FBA018();
      if (!--v21)
      {
        (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
        return v43;
      }
    }
    (*v36)(v24, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v28 + 32))(v30, v40, v29);
  }
  return result;
}

uint64_t static AppExtensionIdentity.matching(appExtensionPointIDs:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FDB90);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (uint64_t *)((char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (v9)
  {
    uint64_t v26 = v6;
    uint64_t v27 = v5;
    uint64_t v28 = a2;
    uint64_t v29 = MEMORY[0x1E4FBC860];
    sub_191FA8894(0, v9, 0);
    uint64_t v10 = v29;
    uint64_t v11 = (uint64_t *)(a1 + 40);
    while (1)
    {
      uint64_t v12 = *(v11 - 1);
      uint64_t v13 = *v11;
      swift_bridgeObjectRetain_n();
      sub_191F824BC(v12, v13);
      if (v2) {
        break;
      }
      uint64_t v16 = v14;
      uint64_t v17 = v15;
      swift_bridgeObjectRelease();
      uint64_t v29 = v10;
      unint64_t v19 = *(void *)(v10 + 16);
      unint64_t v18 = *(void *)(v10 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_191FA8894(v18 > 1, v19 + 1, 1);
        uint64_t v10 = v29;
      }
      v11 += 2;
      *(void *)(v10 + 16) = v19 + 1;
      uint64_t v20 = v10 + 16 * v19;
      *(void *)(v20 + 32) = v16;
      *(void *)(v20 + 40) = v17;
      if (!--v9)
      {
        uint64_t v5 = v27;
        uint64_t v6 = v26;
        goto LABEL_9;
      }
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
LABEL_9:
    uint64_t v22 = sub_191FA957C(v10);
    swift_bridgeObjectRelease();
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FDB98);
    *uint64_t v8 = 1;
    uint64_t v24 = (*(uint64_t (**)(void *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FBD018], v5);
    MEMORY[0x1F4188790](v24);
    *(&v25 - 2) = (uint64_t)sub_191FA964C;
    *(&v25 - 1) = v23;
    sub_191FB9F88();
    return swift_release();
  }
}

uint64_t sub_191FA4344(id *a1, uint64_t a2)
{
  id v3 = *a1;
  id v4 = objc_msgSend(v3, sel_extensionPointIdentifier);
  uint64_t v5 = sub_191FB9DC8();
  uint64_t v7 = v6;

  LOBYTE(a2) = sub_191F9EBC8(v5, v7, a2);
  swift_bridgeObjectRelease();
  return a2 & 1;
}

void sub_191FA43CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FDCF0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  int64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for _EXQuery()), sel_init);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  aBlock[4] = sub_191FAA440;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_191FA4984;
  aBlock[3] = &block_descriptor_9;
  uint64_t v12 = _Block_copy(aBlock);
  uint64_t v13 = self;
  swift_retain();
  id v14 = objc_msgSend(v13, sel_predicateWithBlock_, v12);
  _Block_release(v12);
  swift_release();
  uint64_t v15 = *(void **)&v10[OBJC_IVAR____EXQuery_predicate];
  *(void *)&v10[OBJC_IVAR____EXQuery_predicate] = v14;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BE50);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_191FBFCE0;
  *(void *)(inited + 32) = v10;
  aBlock[0] = inited;
  sub_191FB9EF8();
  unint64_t v17 = aBlock[0];
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  unint64_t v18 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v19 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v19 + v18, v9, v6);
  Controller = (objc_class *)type metadata accessor for _QueryController();
  id v21 = objc_allocWithZone(Controller);
  objc_allocWithZone((Class)type metadata accessor for _EXQueryController());
  uint64_t v22 = v10;
  uint64_t v23 = (char *)v21;
  *(void *)&v23[OBJC_IVAR____TtC19ExtensionFoundationP33_CDD6639443F09112848BD34A3597427C16_QueryController_controller] = sub_191F922C8(v17);
  uint64_t v24 = (uint64_t (**)(unint64_t, uint64_t))&v23[OBJC_IVAR____TtC19ExtensionFoundationP33_CDD6639443F09112848BD34A3597427C16_QueryController_handler];
  *uint64_t v24 = sub_191FAA4E0;
  v24[1] = (uint64_t (*)(unint64_t, uint64_t))v19;
  swift_retain();

  v38.receiver = v23;
  v38.super_class = Controller;
  id v25 = objc_msgSendSuper2(&v38, sel_init);
  uint64_t v26 = OBJC_IVAR____TtC19ExtensionFoundationP33_CDD6639443F09112848BD34A3597427C16_QueryController_controller;
  swift_unknownObjectWeakAssign();
  swift_release();
  *(void *)(swift_allocObject() + 16) = v25;
  id v27 = v25;
  sub_191FB9F58();
  os_log_type_t v28 = sub_191FBA058();
  if (qword_1E92FC6A0 != -1) {
    swift_once();
  }
  uint64_t v29 = qword_1E92FC678;
  if (os_log_type_enabled((os_log_t)qword_1E92FC678, v28))
  {
    id v30 = v27;
    id v36 = v27;
    uint64_t v37 = v26;
    id v31 = v30;
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    uint64_t v33 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v32 = 138412290;
    aBlock[0] = v31;
    id v34 = v31;
    id v27 = v36;
    sub_191FBA1C8();
    void *v33 = v25;

    _os_log_impl(&dword_191F29000, v29, v28, "Resuming controller: %@", v32, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
    swift_arrayDestroy();
    MEMORY[0x192FEBAE0](v33, -1, -1);
    MEMORY[0x192FEBAE0](v32, -1, -1);
  }
  sub_191F39E58();
}

uint64_t sub_191FA487C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void *))
{
  sub_191F35F30(a1, (uint64_t)v9);
  if (v9[3])
  {
    sub_191F53E80();
    if (swift_dynamicCast())
    {
      id v4 = v8;
      self;
      uint64_t v5 = (void *)swift_dynamicCastObjCClassUnconditional();
      v9[0] = v5;
      char v6 = a3(v9);

      return v6 & 1;
    }
  }
  else
  {
    sub_191F35A6C((uint64_t)v9);
  }
  uint64_t result = sub_191FBA458();
  __break(1u);
  return result;
}

uint64_t sub_191FA4984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v5 = *(uint64_t (**)(long long *, uint64_t))(a1 + 32);
  if (!a2)
  {
    long long v8 = 0u;
    long long v9 = 0u;
    if (!a3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  *((void *)&v9 + 1) = swift_getObjectType();
  *(void *)&long long v8 = a2;
  if (v3) {
LABEL_3:
  }
    uint64_t v3 = sub_191FB9D58();
LABEL_4:
  swift_retain();
  swift_unknownObjectRetain();
  char v6 = v5(&v8, v3);
  swift_release();
  swift_bridgeObjectRelease();
  sub_191F35A6C((uint64_t)&v8);
  return v6 & 1;
}

uint64_t sub_191FA4A4C(unint64_t a1, uint64_t (*a2)(BOOL, uint64_t, uint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_191FBA478();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (!v4) {
    return v5;
  }
  uint64_t v16 = MEMORY[0x1E4FBC860];
  uint64_t result = a2(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = v16;
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        MEMORY[0x192FEA540](i, a1);
        self;
        uint64_t v8 = swift_dynamicCastObjCClassUnconditional();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          a2(0, *(void *)(v16 + 16) + 1, 1);
        }
        unint64_t v10 = *(void *)(v16 + 16);
        unint64_t v9 = *(void *)(v16 + 24);
        if (v10 >= v9 >> 1) {
          a2(v9 > 1, v10 + 1, 1);
        }
        *(void *)(v16 + 16) = v10 + 1;
        *(void *)(v16 + 8 * v10 + 32) = v8;
      }
    }
    else
    {
      uint64_t v11 = (id *)(a1 + 32);
      do
      {
        id v12 = *v11;
        self;
        uint64_t v13 = swift_dynamicCastObjCClassUnconditional();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          a2(0, *(void *)(v16 + 16) + 1, 1);
        }
        unint64_t v15 = *(void *)(v16 + 16);
        unint64_t v14 = *(void *)(v16 + 24);
        if (v15 >= v14 >> 1) {
          a2(v14 > 1, v15 + 1, 1);
        }
        *(void *)(v16 + 16) = v15 + 1;
        *(void *)(v16 + 8 * v15 + 32) = v13;
        ++v11;
        --v4;
      }
      while (v4);
    }
    return v5;
  }
  __break(1u);
  return result;
}

uint64_t AppExtensionIdentity.Identities.AsyncIterator.next()()
{
  v1[3] = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FDBA8);
  v1[4] = v2;
  uint64_t v1[5] = *(void *)(v2 - 8);
  void v1[6] = swift_task_alloc();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FDBB0);
  v1[7] = v3;
  v1[8] = *(void *)(v3 - 8);
  v1[9] = swift_task_alloc();
  type metadata accessor for AppExtensionIdentity.Identities.AsyncIterator(0);
  v1[10] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_191FA4DD8, 0, 0);
}

uint64_t sub_191FA4DD8()
{
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[5];
  uint64_t v2 = v0[6];
  uint64_t v4 = v0[4];
  sub_191FA9704(v0[3], v1, type metadata accessor for AppExtensionIdentity.Identities.AsyncIterator);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  sub_191F949C4(&qword_1E92FDBB8, &qword_1E92FDBA8);
  sub_191FB9F98();
  uint64_t v5 = sub_191F949C4((unint64_t *)&unk_1E92FDBC0, &qword_1E92FDBB0);
  char v6 = (void *)swift_task_alloc();
  v0[11] = (uint64_t)v6;
  *char v6 = v0;
  v6[1] = sub_191FA4F40;
  uint64_t v7 = v0[7];
  return MEMORY[0x1F4187C78](v0 + 2, v7, v5);
}

uint64_t sub_191FA4F40()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2[8] + 8))(v2[9], v2[7]);
    uint64_t v3 = sub_191FA5140;
  }
  else
  {
    uint64_t v3 = sub_191FA506C;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_191FA506C()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[2];
  (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (v4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = MEMORY[0x1E4FBC860];
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v6 = (uint64_t (*)(uint64_t))v0[1];
  return v6(v5);
}

uint64_t sub_191FA5140()
{
  uint64_t v1 = (void *)v0[12];
  uint64_t v2 = v0[10];
  uint64_t v4 = v0 + 4;
  uint64_t v3 = v0[4];
  uint64_t v7 = v4[1];

  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  return v5(v2, v3);
}

uint64_t sub_191FA51B4(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_191FA5244;
  return AppExtensionIdentity.Identities.AsyncIterator.next()();
}

uint64_t sub_191FA5244(uint64_t a1)
{
  uint64_t v3 = *(void **)(*v1 + 16);
  uint64_t v6 = *v1;
  swift_task_dealloc();
  *uint64_t v3 = a1;
  uint64_t v4 = *(uint64_t (**)(void))(v6 + 8);
  return v4();
}

uint64_t sub_191FA5358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  void v3[5] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_191FA53EC;
  return AppExtensionIdentity.Identities.AsyncIterator.next()();
}

uint64_t sub_191FA53EC(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 24);
  swift_task_dealloc();
  if (v4)
  {
    swift_getObjectType();
    uint64_t v5 = sub_191FB9F38();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *(void *)(v3 + 48) = a1;
  return MEMORY[0x1F4188298](sub_191FA5538, v5, v7);
}

uint64_t sub_191FA5538()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 48);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AppExtensionIdentity.Identities.makeAsyncIterator()@<X0>(uint64_t a1@<X8>)
{
  return sub_191FA7178(&qword_1E92FDBA8, a1);
}

uint64_t sub_191FA5568@<X0>(uint64_t a1@<X8>)
{
  return sub_191FA71FC(&qword_1E92FDBA8, type metadata accessor for AppExtensionIdentity.Identities, a1);
}

void AppExtensionIdentity.Availability.init()(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

uint64_t AppExtensionIdentity.Availability.enabledCount.getter()
{
  return *(void *)v0;
}

uint64_t AppExtensionIdentity.Availability.disabledCount.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t AppExtensionIdentity.Availability.unapprovedCount.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t AppExtensionIdentity.Availability.totalCount.getter()
{
  uint64_t v1 = v0[1];
  uint64_t v2 = *v0 + v1;
  if (__OFADD__(*v0, v1))
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v3 = v0[2];
  uint64_t result = v2 + v3;
  if (__OFADD__(v2, v3)) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t AppExtensionIdentity.Availability.description.getter()
{
  return 0;
}

uint64_t static AppExtensionIdentity.availabilityUpdates.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92FC508);
  MEMORY[0x1F4188790](v0);
  uint64_t v2 = (uint64_t *)((char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v2 = 1;
  (*(void (**)(void *, void))(v3 + 104))(v2, *MEMORY[0x1E4FBD018]);
  return sub_191FB9F88();
}

void sub_191FA581C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92FC518);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v7 + v6, v5, v2);
  uint64_t v8 = (objc_class *)type metadata accessor for _AvailabilityController();
  uint64_t v9 = (char *)objc_allocWithZone(v8);
  unint64_t v10 = &v9[OBJC_IVAR____TtC19ExtensionFoundationP33_CDD6639443F09112848BD34A3597427C23_AvailabilityController_token];
  *(_OWORD *)unint64_t v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  uint64_t v11 = (uint64_t (**)(uint64_t *))&v9[OBJC_IVAR____TtC19ExtensionFoundationP33_CDD6639443F09112848BD34A3597427C23_AvailabilityController_handler];
  id *v11 = sub_191FAA310;
  v11[1] = (uint64_t (*)(uint64_t *))v7;
  v21.receiver = v9;
  v21.super_class = v8;
  id v12 = objc_msgSendSuper2(&v21, sel_init);
  *(void *)(swift_allocObject() + 16) = v12;
  id v13 = v12;
  sub_191FB9F58();
  os_log_type_t v14 = sub_191FBA058();
  if (qword_1E92FC6A0 != -1) {
    swift_once();
  }
  unint64_t v15 = qword_1E92FC678;
  if (os_log_type_enabled((os_log_t)qword_1E92FC678, v14))
  {
    id v16 = v13;
    unint64_t v17 = (uint8_t *)swift_slowAlloc();
    unint64_t v18 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v17 = 138412290;
    v20[1] = v16;
    id v19 = v16;
    sub_191FBA1C8();
    void *v18 = v16;

    _os_log_impl(&dword_191F29000, v15, v14, "Resuming controller: %@", v17, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
    swift_arrayDestroy();
    MEMORY[0x192FEBAE0](v18, -1, -1);
    MEMORY[0x192FEBAE0](v17, -1, -1);
  }
  sub_191FA6004();
}

uint64_t sub_191FA5B18(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92FC4F8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  uint64_t v10 = a1[2];
  os_log_type_t v11 = sub_191FBA058();
  if (qword_1E92FC6A0 != -1) {
    swift_once();
  }
  id v12 = qword_1E92FC678;
  if (os_log_type_enabled((os_log_t)qword_1E92FC678, v11))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v24 = a2;
    os_log_type_t v14 = (uint8_t *)v13;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v23 = v4;
    uint64_t v16 = v15;
    uint64_t v22 = v5;
    *(_DWORD *)os_log_type_t v14 = 136315138;
    uint64_t v25 = v15;
    uint64_t v26 = v8;
    objc_super v21 = v14 + 4;
    uint64_t v27 = v9;
    uint64_t v28 = v10;
    uint64_t v17 = AppExtensionIdentity.Availability.description.getter();
    uint64_t v26 = sub_191F4EB34(v17, v18, &v25);
    uint64_t v5 = v22;
    sub_191FBA1C8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191F29000, v12, v11, "_NewExtensionsController yeild results: %s", v14, 0xCu);
    swift_arrayDestroy();
    uint64_t v19 = v16;
    uint64_t v4 = v23;
    MEMORY[0x192FEBAE0](v19, -1, -1);
    MEMORY[0x192FEBAE0](v14, -1, -1);
  }
  uint64_t v26 = v8;
  uint64_t v27 = v9;
  uint64_t v28 = v10;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92FC518);
  sub_191FB9F68();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_191FA5D80(uint64_t a1, void *a2)
{
  os_log_type_t v3 = sub_191FBA058();
  if (qword_1E92FC6A0 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_1E92FC678;
  if (os_log_type_enabled((os_log_t)qword_1E92FC678, v3))
  {
    id v5 = a2;
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 138412290;
    id v8 = v5;
    sub_191FBA1C8();
    *uint64_t v7 = v5;

    _os_log_impl(&dword_191F29000, v4, v3, "Suspending controller: %@", v6, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
    swift_arrayDestroy();
    MEMORY[0x192FEBAE0](v7, -1, -1);
    MEMORY[0x192FEBAE0](v6, -1, -1);
  }
  return sub_191FA5EF8();
}

uint64_t sub_191FA5EF8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC19ExtensionFoundationP33_CDD6639443F09112848BD34A3597427C23_AvailabilityController_token;
  swift_beginAccess();
  sub_191F35F30(v1, (uint64_t)&v3);
  if (!v4) {
    return sub_191F35A6C((uint64_t)&v3);
  }
  sub_191F4D994(&v3, v5);
  sub_191F4EC08((uint64_t)v5, (uint64_t)&v3);
  type metadata accessor for _EXExtensionAvailablilityObserver();
  if (swift_dynamicCast())
  {
    sub_191F953A0();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v5);
  }
  else
  {
    uint64_t result = sub_191FBA458();
    __break(1u);
  }
  return result;
}

uint64_t sub_191FA6004()
{
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = v0;
  uint64_t v2 = type metadata accessor for _EXExtensionAvailablilityObserver();
  uint64_t v3 = swift_allocObject();
  id v4 = v0;
  swift_retain();
  sub_191FB9C58();
  uint64_t v5 = OBJC_IVAR____TtC19ExtensionFoundation33_EXExtensionAvailablilityObserver_queries;
  uint64_t v6 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for _EXQuery()), sel_init);
  *(void *)&v6[OBJC_IVAR____EXQuery_resultType] = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BE50);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_191FBFCE0;
  *(void *)(v7 + 32) = v6;
  v11[0] = v7;
  sub_191FB9EF8();
  *(void *)(v3 + v5) = v11[0];
  id v8 = (uint64_t (**)(uint64_t))(v3
                                        + OBJC_IVAR____TtC19ExtensionFoundation33_EXExtensionAvailablilityObserver_observerBlock);
  *id v8 = sub_191FAA38C;
  v8[1] = (uint64_t (*)(uint64_t))v1;
  sub_191F94E5C();
  _OWORD v11[3] = v2;
  swift_release();
  v11[0] = v3;
  uint64_t v9 = (uint64_t)v4
     + OBJC_IVAR____TtC19ExtensionFoundationP33_CDD6639443F09112848BD34A3597427C23_AvailabilityController_token;
  swift_beginAccess();
  sub_191F52BC0((uint64_t)v11, v9);
  return swift_endAccess();
}

uint64_t static AppExtensionIdentity.all.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FDB90);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = &v5[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FDB98);
  *uint64_t v3 = 1;
  (*(void (**)(void *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBD018], v0);
  uint64_t v6 = sub_191FA62B0;
  uint64_t v7 = 0;
  return sub_191FB9F88();
}

uint64_t sub_191FA62B0()
{
  return 1;
}

uint64_t static AppExtensionIdentity.allMatching(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FDB90);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FDB98);
  *uint64_t v7 = 1;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBD018], v4);
  uint64_t v10 = a1;
  uint64_t v11 = a2;
  swift_retain();
  sub_191FB9F88();
  return swift_release();
}

uint64_t _AppExtensionQuery.extensionPointIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t _AppExtensionQuery.extensionPointIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*_AppExtensionQuery.extensionPointIdentifier.modify())()
{
  return nullsub_1;
}

void *_AppExtensionQuery.predicate.getter()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

void _AppExtensionQuery.predicate.setter(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
}

uint64_t (*_AppExtensionQuery.predicate.modify())()
{
  return nullsub_1;
}

__n128 _AppExtensionQuery.hostAuditToken.getter@<Q0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 56);
  __n128 result = *(__n128 *)(v1 + 24);
  long long v4 = *(_OWORD *)(v1 + 40);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v2;
  return result;
}

uint64_t _AppExtensionQuery.hostAuditToken.setter(uint64_t a1)
{
  return sub_191FA967C(a1, v1 + 24);
}

uint64_t (*_AppExtensionQuery.hostAuditToken.modify())()
{
  return nullsub_1;
}

void *_AppExtensionQuery.extensionPoint.getter()
{
  uint64_t v1 = *(void **)(v0 + 64);
  id v2 = v1;
  return v1;
}

void _AppExtensionQuery.extensionPoint.setter(uint64_t a1)
{
  *(void *)(v1 + 64) = a1;
}

uint64_t (*_AppExtensionQuery.extensionPoint.modify())()
{
  return nullsub_1;
}

uint64_t _AppExtensionQuery.allowsDuplicates.getter()
{
  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t _AppExtensionQuery.allowsDuplicates.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 72) = result;
  return result;
}

uint64_t (*_AppExtensionQuery.allowsDuplicates.modify())()
{
  return nullsub_1;
}

double _AppExtensionQuery.init(extensionPointIdentifier:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = self;
  swift_bridgeObjectRetain();
  id v7 = objc_msgSend(v6, sel_sharedInstance);
  unsigned __int8 v8 = objc_msgSend(v7, sel_queryAllowsDuplicates);
  swift_bridgeObjectRelease();

  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  double result = 0.0;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(void *)(a3 + 48) = 0;
  *(unsigned char *)(a3 + 56) = 1;
  *(void *)(a3 + 64) = 0;
  *(unsigned char *)(a3 + 72) = v8;
  return result;
}

double _AppExtensionQuery.init(extensionPointIdentifier:predicate:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  unsigned __int8 v8 = self;
  id v9 = a3;
  swift_bridgeObjectRetain();
  id v10 = objc_msgSend(v8, sel_sharedInstance);
  unsigned __int8 v11 = objc_msgSend(v10, sel_queryAllowsDuplicates);
  swift_bridgeObjectRelease();

  *(void *)a4 = a1;
  *(void *)(a4 + 8) = a2;
  *(void *)(a4 + 16) = a3;
  double result = 0.0;
  *(_OWORD *)(a4 + 24) = 0u;
  *(_OWORD *)(a4 + 40) = 0u;
  *(unsigned char *)(a4 + 56) = 1;
  *(void *)(a4 + 64) = 0;
  *(unsigned char *)(a4 + 72) = v11;
  return result;
}

double _AppExtensionQuery.init(extensionPoint:)@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_identifier);
  uint64_t v5 = sub_191FB9DC8();
  uint64_t v7 = v6;

  unsigned __int8 v8 = self;
  id v9 = a1;
  swift_bridgeObjectRetain();
  id v10 = objc_msgSend(v8, sel_sharedInstance);
  unsigned __int8 v11 = objc_msgSend(v10, sel_queryAllowsDuplicates);
  swift_bridgeObjectRelease();

  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v7;
  double result = 0.0;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(void *)(a2 + 48) = 0;
  *(unsigned char *)(a2 + 56) = 1;
  *(void *)(a2 + 64) = a1;
  *(unsigned char *)(a2 + 72) = v11;
  return result;
}

uint64_t _AppExtensionQuery.Results.AsyncIterator.next()()
{
  v1[3] = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FC5C0);
  v1[4] = v2;
  uint64_t v1[5] = *(void *)(v2 - 8);
  void v1[6] = swift_task_alloc();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FC5B8);
  v1[7] = v3;
  v1[8] = *(void *)(v3 - 8);
  v1[9] = swift_task_alloc();
  type metadata accessor for _AppExtensionQuery.Results.AsyncIterator(0);
  v1[10] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_191FA6984, 0, 0);
}

uint64_t sub_191FA6984()
{
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[5];
  uint64_t v2 = v0[6];
  uint64_t v4 = v0[4];
  sub_191FA9704(v0[3], v1, type metadata accessor for _AppExtensionQuery.Results.AsyncIterator);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  sub_191F949C4(&qword_1E92FC610, &qword_1E92FC5C0);
  sub_191FB9F98();
  uint64_t v5 = sub_191F949C4((unint64_t *)&unk_1E92FC5F8, &qword_1E92FC5B8);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[11] = (uint64_t)v6;
  *uint64_t v6 = v0;
  v6[1] = sub_191FA6AEC;
  uint64_t v7 = v0[7];
  return MEMORY[0x1F4187C78](v0 + 2, v7, v5);
}

uint64_t sub_191FA6AEC()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2[8] + 8))(v2[9], v2[7]);
    uint64_t v3 = sub_191FAA620;
  }
  else
  {
    uint64_t v3 = sub_191FA6C18;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_191FA6C18()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[2];
  (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (v4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = MEMORY[0x1E4FBC860];
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(uint64_t))v0[1];
  return v6(v5);
}

uint64_t sub_191FA6CF0(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_191FA6D80;
  return _AppExtensionQuery.Results.AsyncIterator.next()();
}

uint64_t sub_191FA6D80(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (!v1) {
    **(void **)(v4 + 16) = a1;
  }
  uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

uint64_t sub_191FA6E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  void v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = (void *)swift_task_alloc();
  v4[7] = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_191FA6F24;
  return _AppExtensionQuery.Results.AsyncIterator.next()();
}

uint64_t sub_191FA6F24(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 32);
  *(void *)(*v2 + 64) = v1;
  swift_task_dealloc();
  if (v1)
  {
    if (v5)
    {
      swift_getObjectType();
      uint64_t v6 = sub_191FB9F38();
      uint64_t v8 = v7;
    }
    else
    {
      uint64_t v6 = 0;
      uint64_t v8 = 0;
    }
    id v10 = sub_191FA70D4;
  }
  else
  {
    if (v5)
    {
      swift_getObjectType();
      uint64_t v6 = sub_191FB9F38();
      uint64_t v8 = v9;
    }
    else
    {
      uint64_t v6 = 0;
      uint64_t v8 = 0;
    }
    *(void *)(v4 + 72) = a1;
    id v10 = sub_191FA70B0;
  }
  return MEMORY[0x1F4188298](v10, v6, v8);
}

uint64_t sub_191FA70B0()
{
  **(void **)(v0 + 24) = *(void *)(v0 + 72);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_191FA70D4()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = (void *)v0[6];
  v0[2] = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92FC540);
  swift_willThrowTypedImpl();
  *uint64_t v2 = v1;
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t _AppExtensionQuery.Results.makeAsyncIterator()@<X0>(uint64_t a1@<X8>)
{
  return sub_191FA7178(&qword_1E92FC5C0, a1);
}

uint64_t sub_191FA7178@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a2, v2, v4);
}

uint64_t sub_191FA71DC@<X0>(uint64_t a1@<X8>)
{
  return sub_191FA71FC(&qword_1E92FC5C0, type metadata accessor for _AppExtensionQuery.Results, a1);
}

uint64_t sub_191FA71FC@<X0>(uint64_t *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a3, v3, v6);
  return sub_191FAA1C8(v3, a2);
}

uint64_t _AppExtensionQuery.results.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FC5B0);
  uint64_t v20 = *(void *)(v2 - 8);
  uint64_t v21 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (uint64_t *)((char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *v1;
  uint64_t v5 = v1[1];
  uint64_t v7 = (void *)v1[2];
  long long v19 = *(_OWORD *)(v1 + 3);
  uint64_t v8 = v1[6];
  uint64_t v18 = v1[5];
  char v9 = *((unsigned char *)v1 + 56);
  id v10 = (void *)v1[8];
  char v11 = *((unsigned char *)v1 + 72);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FC618);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_191FBFCD0;
  *(void *)(inited + 32) = v6;
  *(void *)(inited + 40) = v5;
  *(void *)(inited + 48) = v7;
  *(_OWORD *)(inited + 56) = v19;
  *(void *)(inited + 72) = v18;
  *(void *)(inited + 80) = v8;
  *(unsigned char *)(inited + 88) = v9;
  *(void *)(inited + 96) = v10;
  *(unsigned char *)(inited + 104) = v11;
  id v13 = v10;
  swift_bridgeObjectRetain();
  id v14 = v7;
  uint64_t v15 = sub_191FA75A4(inited);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FC5E0);
  *uint64_t v4 = 1;
  (*(void (**)(void *, void, uint64_t))(v20 + 104))(v4, *MEMORY[0x1E4FBD018], v21);
  uint64_t v23 = v15;
  sub_191FB9F88();
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  return swift_arrayDestroy();
}

uint64_t Collection<>.results.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FC5B0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_191FA7A8C(a1, a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FC5E0);
  *uint64_t v7 = 1;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBD018], v4);
  uint64_t v11 = v8;
  sub_191FB9F88();
  return swift_bridgeObjectRelease();
}

uint64_t sub_191FA75A4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v54 = MEMORY[0x1E4FBC860];
    sub_191FBA398();
    uint64_t v4 = a1 + 48;
    do
    {
      long long v19 = *(void **)(v4 + 48);
      if (v19)
      {
        uint64_t v5 = (objc_class *)type metadata accessor for _EXQuery();
        uint64_t v6 = objc_allocWithZone(v5);
        *(void *)&v6[OBJC_IVAR____EXQuery_resultType] = 0;
        *(void *)&v6[OBJC_IVAR____EXQuery_predicate] = 0;
        v6[OBJC_IVAR____EXQuery_includePostprocessing] = 0;
        uint64_t v7 = OBJC_IVAR____EXQuery_allowsDuplicates;
        uint64_t v8 = self;
        id v9 = v19;
        id v10 = v6;
        id v11 = objc_msgSend(v8, sel_sharedInstance);
        unsigned __int8 v12 = objc_msgSend(v11, sel_queryAllowsDuplicates);

        v6[v7] = v12;
        v10[OBJC_IVAR____EXQuery_excludeLockedApps] = 0;
        id v13 = v9;
        id v14 = (long long *)_EXAuditTokenForCurrentProcess();
        uint64_t v15 = (uint64_t *)&v10[OBJC_IVAR____EXQuery_inner];
        uint64_t v16 = swift_allocObject();
        long long v17 = *v14;
        long long v18 = v14[1];
        void v15[3] = (uint64_t)&type metadata for _EXQuery.RecordQuery;
        v15[4] = (uint64_t)&off_1EE2CB0A0;
        uint64_t *v15 = v16;
        *(void *)(v16 + 16) = v13;
        *(_OWORD *)(v16 + 24) = v17;
        *(_OWORD *)(v16 + 40) = v18;

        v51.receiver = v10;
        v51.super_class = v5;
        objc_msgSendSuper2(&v51, sel_init);
      }
      else
      {
        uint64_t v20 = *(void *)(v4 - 8);
        uint64_t v21 = *(void **)v4;
        uint64_t v50 = *(void *)(v4 - 16);
        if (*(unsigned char *)(v4 + 40))
        {
          id v22 = v21;
          swift_bridgeObjectRetain_n();
          id v13 = v22;
          uint64_t v23 = _EXAuditTokenForCurrentProcess();
          uint64_t v24 = (objc_class *)type metadata accessor for _EXQuery();
          long long v49 = *(_OWORD *)v23;
          uint64_t v25 = *(void *)(v23 + 16);
          uint64_t v26 = *(void *)(v23 + 24);
          uint64_t v27 = objc_allocWithZone(v24);
          *(void *)&v27[OBJC_IVAR____EXQuery_resultType] = 0;
          *(void *)&v27[OBJC_IVAR____EXQuery_predicate] = 0;
          v27[OBJC_IVAR____EXQuery_includePostprocessing] = 0;
          uint64_t v28 = OBJC_IVAR____EXQuery_allowsDuplicates;
          uint64_t v29 = self;
          id v30 = v27;
          id v31 = objc_msgSend(v29, sel_sharedInstance);
          unsigned __int8 v32 = objc_msgSend(v31, sel_queryAllowsDuplicates);

          v27[v28] = v32;
          v30[OBJC_IVAR____EXQuery_excludeLockedApps] = 0;
          uint64_t v33 = (uint64_t *)&v30[OBJC_IVAR____EXQuery_inner];
          v33[3] = (uint64_t)&type metadata for _EXQuery.ValuesQuery;
          v33[4] = (uint64_t)&off_1EE2CB180;
          uint64_t v34 = swift_allocObject();
          uint64_t *v33 = v34;
          *(void *)(v34 + 16) = v50;
          *(void *)(v34 + 24) = v20;
          *(_DWORD *)(v34 + 32) = 0;
          *(_OWORD *)(v34 + 36) = v49;
          *(void *)(v34 + 52) = v25;
          *(void *)(v34 + 60) = v26;

          v53.receiver = v30;
          v53.super_class = v24;
          objc_msgSendSuper2(&v53, sel_init);
        }
        else
        {
          uint64_t v45 = *(void *)(v4 + 8);
          uint64_t v46 = *(void *)(v4 + 16);
          uint64_t v35 = *(void *)(v4 + 24);
          uint64_t v48 = *(void *)(v4 + 32);
          uint64_t v47 = (objc_class *)type metadata accessor for _EXQuery();
          id v36 = objc_allocWithZone(v47);
          *(void *)&v36[OBJC_IVAR____EXQuery_resultType] = 0;
          *(void *)&v36[OBJC_IVAR____EXQuery_predicate] = 0;
          v36[OBJC_IVAR____EXQuery_includePostprocessing] = 0;
          uint64_t v37 = OBJC_IVAR____EXQuery_allowsDuplicates;
          objc_super v38 = self;
          id v39 = v21;
          swift_bridgeObjectRetain();
          id v13 = v39;
          char v40 = v36;
          swift_bridgeObjectRetain();
          id v41 = objc_msgSend(v38, sel_sharedInstance);
          unsigned __int8 v42 = objc_msgSend(v41, sel_queryAllowsDuplicates);

          v36[v37] = v42;
          v40[OBJC_IVAR____EXQuery_excludeLockedApps] = 0;
          uint64_t v43 = (uint64_t *)&v40[OBJC_IVAR____EXQuery_inner];
          v43[3] = (uint64_t)&type metadata for _EXQuery.ValuesQuery;
          v43[4] = (uint64_t)&off_1EE2CB180;
          uint64_t v44 = swift_allocObject();
          *uint64_t v43 = v44;
          *(void *)(v44 + 16) = v50;
          *(void *)(v44 + 24) = v20;
          *(_DWORD *)(v44 + 32) = 0;
          *(void *)(v44 + 36) = v45;
          *(void *)(v44 + 44) = v46;
          *(void *)(v44 + 52) = v35;
          *(void *)(v44 + 60) = v48;

          v52.receiver = v40;
          v52.super_class = v47;
          objc_msgSendSuper2(&v52, sel_init);
        }
        swift_bridgeObjectRelease();
      }
      sub_191FBA368();
      sub_191FBA3A8();
      sub_191FBA3B8();
      sub_191FBA378();
      v4 += 80;
      --v2;
    }
    while (v2);
    return v54;
  }
  return result;
}

uint64_t sub_191FA7A8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for _EXQuery();
  return sub_191FA3CC4((void (*)(char *, char *))sub_191FA7B04, 0, a1, v4, MEMORY[0x1E4FBC248], a2, MEMORY[0x1E4FBC278], v5);
}

void sub_191FA7B04(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void **)(a1 + 64);
  if (v3)
  {
    id v4 = objc_allocWithZone((Class)type metadata accessor for _EXQuery());
    id v5 = v3;
    id v6 = sub_191F8982C(v5);
  }
  else
  {
    uint64_t v7 = *(void *)a1;
    uint64_t v8 = *(void *)(a1 + 8);
    if (*(unsigned char *)(a1 + 56))
    {
      id v9 = *(id *)(a1 + 16);
      swift_bridgeObjectRetain_n();
      id v10 = v9;
      id v11 = (unint64_t *)_EXAuditTokenForCurrentProcess();
      unint64_t v12 = *v11;
      unint64_t v13 = v11[1];
      unint64_t v14 = v11[2];
      unint64_t v15 = v11[3];
      id v16 = objc_allocWithZone((Class)type metadata accessor for _EXQuery());
      id v6 = sub_191F415F0(v7, v8, 0, v12, v13, v14, v15);
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v17 = *(void *)(a1 + 24);
      unint64_t v18 = *(void *)(a1 + 32);
      unint64_t v19 = *(void *)(a1 + 40);
      unint64_t v20 = *(void *)(a1 + 48);
      objc_allocWithZone((Class)type metadata accessor for _EXQuery());
      swift_bridgeObjectRetain();
      id v6 = sub_191F415F0(v7, v8, 0, v17, v18, v19, v20);
    }
  }
  *a2 = v6;
}

void sub_191FA7ED4(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92FC5E8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  Controller = (objc_class *)type metadata accessor for _QueryController();
  id v10 = objc_allocWithZone(Controller);
  objc_allocWithZone((Class)type metadata accessor for _EXQueryController());
  swift_bridgeObjectRetain();
  id v11 = (char *)v10;
  *(void *)&v11[OBJC_IVAR____TtC19ExtensionFoundationP33_CDD6639443F09112848BD34A3597427C16_QueryController_controller] = sub_191F922C8(a2);
  unint64_t v12 = (uint64_t (**)(unint64_t, uint64_t))&v11[OBJC_IVAR____TtC19ExtensionFoundationP33_CDD6639443F09112848BD34A3597427C16_QueryController_handler];
  NSObject *v12 = sub_191FAA234;
  v12[1] = (uint64_t (*)(unint64_t, uint64_t))v8;
  swift_retain();

  v24.receiver = v11;
  v24.super_class = Controller;
  id v13 = objc_msgSendSuper2(&v24, sel_init);
  uint64_t v14 = OBJC_IVAR____TtC19ExtensionFoundationP33_CDD6639443F09112848BD34A3597427C16_QueryController_controller;
  swift_unknownObjectWeakAssign();
  swift_release();
  *(void *)(swift_allocObject() + 16) = v13;
  id v15 = v13;
  sub_191FB9F58();
  os_log_type_t v16 = sub_191FBA058();
  if (qword_1E92FC6A0 != -1) {
    swift_once();
  }
  unint64_t v17 = qword_1E92FC678;
  if (os_log_type_enabled((os_log_t)qword_1E92FC678, v16))
  {
    id v18 = v15;
    v23[0] = v14;
    id v19 = v18;
    unint64_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v20 = 138412290;
    v23[1] = v19;
    id v22 = v19;
    sub_191FBA1C8();
    *uint64_t v21 = v13;

    _os_log_impl(&dword_191F29000, v17, v16, "Resuming controller: %@", v20, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
    swift_arrayDestroy();
    MEMORY[0x192FEBAE0](v21, -1, -1);
    MEMORY[0x192FEBAE0](v20, -1, -1);
  }
  sub_191F39E58();
}

uint64_t sub_191FA8248(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(BOOL, uint64_t, uint64_t), uint64_t *a6)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(a4);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  id v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v14 = sub_191FBA058();
  if (qword_1E92FC6A0 != -1) {
    swift_once();
  }
  id v15 = qword_1E92FC678;
  if (os_log_type_enabled((os_log_t)qword_1E92FC678, v14))
  {
    swift_bridgeObjectRetain_n();
    uint64_t v31 = v10;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v30 = a3;
    unint64_t v17 = (uint8_t *)v16;
    uint64_t v28 = swift_slowAlloc();
    uint64_t v33 = v28;
    uint64_t v29 = a5;
    *(_DWORD *)unint64_t v17 = 136315138;
    v27[1] = v17 + 4;
    id v18 = a6;
    unint64_t v19 = sub_191F53E80();
    uint64_t v20 = swift_bridgeObjectRetain();
    uint64_t v21 = MEMORY[0x192FEA0F0](v20, v19);
    unint64_t v23 = v22;
    swift_bridgeObjectRelease();
    uint64_t v24 = v21;
    a6 = v18;
    uint64_t v32 = sub_191F4EB34(v24, v23, &v33);
    a5 = v29;
    sub_191FBA1C8();
    swift_bridgeObjectRelease_n();
    uint64_t v10 = v31;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_191F29000, v15, v14, "_QueryController yeild results: %s", v17, 0xCu);
    uint64_t v25 = v28;
    swift_arrayDestroy();
    MEMORY[0x192FEBAE0](v25, -1, -1);
    MEMORY[0x192FEBAE0](v17, -1, -1);
  }
  uint64_t v33 = sub_191FA4A4C(a1, a5);
  __swift_instantiateConcreteTypeFromMangledName(a6);
  sub_191FB9F68();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

void sub_191FA84E0(uint64_t a1, void *a2)
{
  os_log_type_t v3 = sub_191FBA058();
  if (qword_1E92FC6A0 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_1E92FC678;
  if (os_log_type_enabled((os_log_t)qword_1E92FC678, v3))
  {
    id v5 = a2;
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    unint64_t v7 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 138412290;
    id v8 = v5;
    sub_191FBA1C8();
    *unint64_t v7 = v5;

    _os_log_impl(&dword_191F29000, v4, v3, "Suspending controller: %@", v6, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE00);
    swift_arrayDestroy();
    MEMORY[0x192FEBAE0](v7, -1, -1);
    MEMORY[0x192FEBAE0](v6, -1, -1);
  }
  sub_191F86B48();
}

id sub_191FA86A0()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92FC880);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_191FBFCD0;
  uint64_t v7 = 0x20636F6C6C616564;
  unint64_t v8 = 0xE800000000000000;
  id v3 = v0;
  id v4 = objc_msgSend(v3, sel_description);
  sub_191FB9DC8();

  sub_191FB9E38();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v2 + 32) = 0x20636F6C6C616564;
  *(void *)(v2 + 40) = 0xE800000000000000;
  sub_191FBA638();
  swift_bridgeObjectRelease();
  v6.receiver = v3;
  v6.super_class = ObjectType;
  return objc_msgSendSuper2(&v6, sel_dealloc);
}

uint64_t sub_191FA8834(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_191FA8914(a1, a2, a3, (void *)*v3);
  *id v3 = result;
  return result;
}

uint64_t sub_191FA8854(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_191FA8AA0(a1, a2, a3, (void *)*v3);
  *id v3 = result;
  return result;
}

uint64_t sub_191FA8874(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_191FA8C44(a1, a2, a3, (void *)*v3);
  *id v3 = result;
  return result;
}

uint64_t sub_191FA8894(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_191FA8E84(a1, a2, a3, *v3);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_191FA88B4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_191FA8FF0(a1, a2, a3, *v3, &qword_1E92FDD00);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_191FA88E4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_191FA8FF0(a1, a2, a3, *v3, (uint64_t *)&unk_1E92FC620);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_191FA8914(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FC528);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    _OWORD v10[2] = v8;
    void v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92FC4C0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_191FBA4C8();
  __break(1u);
  return result;
}

uint64_t sub_191FA8AA0(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FDCD8);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    _OWORD v10[2] = v8;
    void v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92FDCE0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_191FBA4C8();
  __break(1u);
  return result;
}

uint64_t sub_191FA8C44(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    unint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FDA90);
  uint64_t v10 = *(void *)(sub_191FB9C68() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  void v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_191FB9C68() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  id v18 = (char *)v13 + v17;
  unint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_191FBA4C8();
  __break(1u);
  return result;
}

uint64_t sub_191FA8E84(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92FDD10);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_191FBA4C8();
  __break(1u);
  return result;
}

uint64_t sub_191FA8FF0(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    int64_t v11 = (char *)swift_allocObject();
    int64_t v12 = _swift_stdlib_malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    int64_t v11 = (char *)MEMORY[0x1E4FBC860];
  }
  size_t v14 = v11 + 32;
  id v15 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[8 * v9]) {
      memmove(v14, v15, 8 * v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v9] || v14 >= &v15[8 * v9])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = sub_191FBA4C8();
  __break(1u);
  return result;
}

uint64_t sub_191FA9160(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_191FBA478();
    swift_bridgeObjectRelease();
  }
  sub_191F53E80();
  sub_191FA981C((unint64_t *)&qword_1E92FC6C0, (void (*)(uint64_t))sub_191F53E80);
  uint64_t result = sub_191FB9FD8();
  uint64_t v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_191FBA478();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      return v10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      return v10;
    }
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        unint64_t v6 = (void *)MEMORY[0x192FEA540](i, a1);
        sub_191F37744(&v9, v6);
      }
    }
    else
    {
      unint64_t v7 = (void **)(a1 + 32);
      do
      {
        int64_t v8 = *v7++;
        sub_191F37744(&v9, v8);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_191FA92D4(uint64_t a1)
{
  uint64_t v2 = sub_191FB9C68();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v28 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v27 = (char *)v21 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE40);
  MEMORY[0x1F4188790](v7 - 8);
  id v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 16);
  sub_191FA981C(&qword_1E92FC6E0, MEMORY[0x1E4F27990]);
  uint64_t v29 = sub_191FB9FD8();
  if (v10)
  {
    int64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v14 = *(void *)(v11 + 56);
    unint64_t v15 = v11 + 40;
    uint64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 32);
    uint64_t v25 = v12;
    unint64_t v22 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v23 = v14;
    uint64_t v26 = v11;
    uint64_t v16 = (void (**)(uint64_t, uint64_t))(v11 - 8);
    v21[1] = v15 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v18 = (uint64_t)v27;
    unint64_t v17 = v28;
    while (1)
    {
      v25(v9, v13, v2);
      unint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v15;
      (*(void (**)(char *, void, uint64_t, uint64_t))v15)(v9, 0, 1, v2);
      if ((*v24)(v9, 1, v2) == 1) {
        break;
      }
      (*v22)(v17, v9, v2);
      sub_191F54488(v18, v17);
      (*v16)(v18, v2);
      v13 += v23;
      if (!--v10) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    unint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
LABEL_7:
    v19(v9, 1, 1, v2);
  }
  return v29;
}

uint64_t sub_191FA957C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_191FAA5B8();
  uint64_t result = sub_191FB9FD8();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_191F9F6D8(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_191FA9614()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_191FA964C(id *a1)
{
  return sub_191FA4344(a1, *(void *)(v1 + 16));
}

void sub_191FA9654(uint64_t a1)
{
  sub_191FA43CC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t type metadata accessor for AppExtensionIdentity.Identities.AsyncIterator(uint64_t a1)
{
  return sub_191F4CD18(a1, (uint64_t *)&unk_1E92FDC38);
}

uint64_t sub_191FA967C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FDBD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for _AppExtensionQuery.Results.AsyncIterator(uint64_t a1)
{
  return sub_191F4CD18(a1, (uint64_t *)&unk_1E92FC5D0);
}

uint64_t sub_191FA9704(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_191FA976C(uint64_t a1)
{
  sub_191FA7ED4(a1, *(void *)(v1 + 16));
}

uint64_t sub_191FA9774()
{
  return MEMORY[0x1E4FBC278];
}

uint64_t sub_191FA9780()
{
  return sub_191FA981C(qword_1E92FDBF8, (void (*)(uint64_t))type metadata accessor for AppExtensionIdentity.Identities.AsyncIterator);
}

uint64_t sub_191FA97C8()
{
  return MEMORY[0x1E4FBC0F0];
}

uint64_t sub_191FA97D4()
{
  return sub_191FA981C((unint64_t *)&unk_1E92FDC10, (void (*)(uint64_t))type metadata accessor for _AppExtensionQuery.Results.AsyncIterator);
}

uint64_t sub_191FA981C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s10IdentitiesVwCP(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_191FA9E04(a1, a2, a3, &qword_1E92FDBA8);
}

uint64_t _s10IdentitiesVwxx(uint64_t a1, uint64_t a2)
{
  return sub_191FA9E70(a1, a2, &qword_1E92FDBA8);
}

uint64_t _s10IdentitiesVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_191FA9ED4(a1, a2, a3, &qword_1E92FDBA8);
}

uint64_t _s10IdentitiesVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_191FA9F38(a1, a2, a3, &qword_1E92FDBA8);
}

uint64_t _s10IdentitiesVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_191FA9F9C(a1, a2, a3, &qword_1E92FDBA8);
}

uint64_t _s10IdentitiesVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_191FAA000(a1, a2, a3, &qword_1E92FDBA8);
}

uint64_t _s10IdentitiesVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191FA98C0);
}

uint64_t sub_191FA98C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, &qword_1E92FDBA8);
}

uint64_t _s10IdentitiesVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191FA98E0);
}

uint64_t sub_191FA98E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, &qword_1E92FDBA8);
}

uint64_t type metadata accessor for AppExtensionIdentity.Identities(uint64_t a1)
{
  return sub_191F4CD18(a1, (uint64_t *)&unk_1E92FDC20);
}

void sub_191FA990C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t _s10IdentitiesV13AsyncIteratorVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191FA9934);
}

uint64_t sub_191FA9934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, &qword_1E92FDBA8);
}

uint64_t _s10IdentitiesV13AsyncIteratorVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191FA9954);
}

uint64_t sub_191FA9954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, &qword_1E92FDBA8);
}

void sub_191FA9960(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t *a5)
{
  sub_191FA9DB4(319, a4, a5);
  if (v5 <= 0x3F) {
    swift_initStructMetadata();
  }
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t _s12AvailabilityVwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s12AvailabilityVwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for AppExtensionIdentity.Availability()
{
  return &type metadata for AppExtensionIdentity.Availability;
}

void destroy for _AppExtensionQuery(uint64_t a1)
{
  swift_bridgeObjectRelease();

  uint64_t v2 = *(void **)(a1 + 64);
}

uint64_t initializeWithCopy for _AppExtensionQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  unint64_t v5 = *(void **)(a2 + 64);
  *(void *)(a1 + 64) = v5;
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  swift_bridgeObjectRetain();
  id v6 = v4;
  id v7 = v5;
  return a1;
}

uint64_t assignWithCopy for _AppExtensionQuery(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 16);
  unint64_t v5 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v5;
  id v6 = v5;

  long long v7 = *(_OWORD *)(a2 + 24);
  long long v8 = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 24) = v7;
  id v9 = *(void **)(a1 + 64);
  uint64_t v10 = *(void **)(a2 + 64);
  *(void *)(a1 + 64) = v10;
  id v11 = v10;

  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

__n128 __swift_memcpy73_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for _AppExtensionQuery(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  long long v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  unint64_t v5 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);

  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for _AppExtensionQuery(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 73)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for _AppExtensionQuery(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 72) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 73) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for _AppExtensionQuery()
{
  return &type metadata for _AppExtensionQuery;
}

uint64_t initializeBufferWithCopyOfBuffer for _AppExtensionQuery.Results(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_191FA9E04(a1, a2, a3, &qword_1E92FC5C0);
}

uint64_t destroy for _AppExtensionQuery.Results(uint64_t a1, uint64_t a2)
{
  return sub_191FA9E70(a1, a2, &qword_1E92FC5C0);
}

uint64_t initializeWithCopy for _AppExtensionQuery.Results(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_191FA9ED4(a1, a2, a3, &qword_1E92FC5C0);
}

uint64_t assignWithCopy for _AppExtensionQuery.Results(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_191FA9F38(a1, a2, a3, &qword_1E92FC5C0);
}

uint64_t initializeWithTake for _AppExtensionQuery.Results(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_191FA9F9C(a1, a2, a3, &qword_1E92FC5C0);
}

uint64_t assignWithTake for _AppExtensionQuery.Results(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_191FAA000(a1, a2, a3, &qword_1E92FC5C0);
}

uint64_t getEnumTagSinglePayload for _AppExtensionQuery.Results(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191FA9D54);
}

uint64_t sub_191FA9D54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, &qword_1E92FC5C0);
}

uint64_t storeEnumTagSinglePayload for _AppExtensionQuery.Results(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191FA9D74);
}

uint64_t sub_191FA9D74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, &qword_1E92FC5C0);
}

uint64_t type metadata accessor for _AppExtensionQuery.Results(uint64_t a1)
{
  return sub_191F4CD18(a1, (uint64_t *)&unk_1E92FC598);
}

void sub_191FA9DA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_191FA9DB4(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    unint64_t v4 = sub_191FB9F78();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_191FA9E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a4);
  long long v7 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);

  return v7(a1, a2, v6);
}

uint64_t sub_191FA9E70(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);

  return v5(a1, v4);
}

uint64_t sub_191FA9ED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  return a1;
}

uint64_t sub_191FA9F38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  return a1;
}

uint64_t sub_191FA9F9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  return a1;
}

uint64_t sub_191FAA000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for _AppExtensionQuery.Results.AsyncIterator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191FAA078);
}

uint64_t sub_191FAA078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, &qword_1E92FC5C0);
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a4);
  long long v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48);

  return v7(a1, a2, v6);
}

uint64_t storeEnumTagSinglePayload for _AppExtensionQuery.Results.AsyncIterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191FAA104);
}

uint64_t sub_191FAA104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, &qword_1E92FC5C0);
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a5);
  long long v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);

  return v8(a1, a2, a2, v7);
}

uint64_t type metadata accessor for _QueryController()
{
  return self;
}

uint64_t type metadata accessor for _AvailabilityController()
{
  return self;
}

uint64_t sub_191FAA1C8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_191FAA228()
{
  return objectdestroy_35Tm((uint64_t *)&unk_1E92FC5E8);
}

uint64_t sub_191FAA234(unint64_t a1, uint64_t a2)
{
  return sub_191FAA508(a1, a2, (uint64_t *)&unk_1E92FC5E8, &qword_1E92FC5A8, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_191FA88E4);
}

uint64_t sub_191FAA25C()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_191FAA294()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 68, 7);
}

uint64_t sub_191FAA2CC()
{
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_191FAA304()
{
  return objectdestroy_35Tm((uint64_t *)&unk_1E92FC518);
}

uint64_t sub_191FAA310(uint64_t *a1)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92FC518) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_191FA5B18(a1, v4);
}

uint64_t sub_191FAA384(uint64_t a1)
{
  return sub_191FA5D80(a1, *(void **)(v1 + 16));
}

uint64_t sub_191FAA38C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + OBJC_IVAR____EXExtensionAvailablility_disabledCount);
  uint64_t v3 = *(void *)(a1 + OBJC_IVAR____EXExtensionAvailablility_unelectedCount);
  uint64_t v4 = *(uint64_t (**)(void *))(*(void *)(v1 + 16)
                                          + OBJC_IVAR____TtC19ExtensionFoundationP33_CDD6639443F09112848BD34A3597427C23_AvailabilityController_handler);
  v6[0] = *(void *)(a1 + OBJC_IVAR____EXExtensionAvailablility_enabledCount);
  v6[1] = v2;
  id v6[2] = v3;
  return v4(v6);
}

uint64_t sub_191FAA408()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_191FAA440(uint64_t a1, uint64_t a2)
{
  return sub_191FA487C(a1, a2, *(uint64_t (**)(void *))(v2 + 16));
}

uint64_t sub_191FAA448()
{
  return objectdestroy_35Tm(&qword_1E92FDCF0);
}

uint64_t objectdestroy_35Tm(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);

  return MEMORY[0x1F4186498](v1, v6, v7);
}

uint64_t sub_191FAA4E0(unint64_t a1, uint64_t a2)
{
  return sub_191FAA508(a1, a2, &qword_1E92FDCF0, &qword_1E92FDCF8, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_191FA88B4);
}

uint64_t sub_191FAA508(unint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t (*a5)(BOOL, uint64_t, uint64_t))
{
  uint64_t v11 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8);
  return sub_191FA8248(a1, a2, v5 + ((*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)), a4, a5, a3);
}

void sub_191FAA59C(uint64_t a1)
{
  sub_191FA84E0(a1, *(void **)(v1 + 16));
}

unint64_t sub_191FAA5B8()
{
  unint64_t result = qword_1E92FDD08;
  if (!qword_1E92FDD08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92FDD08);
  }
  return result;
}

id AppExtensionIdentity.inner.getter()
{
  return *v0;
}

uint64_t AppExtensionIdentity.extensionPointIdentifier.getter()
{
  return sub_191FAAD0C((SEL *)&selRef_extensionPointIdentifier);
}

uint64_t AppExtensionIdentity.bundleIdentifier.getter()
{
  return sub_191FAAD0C((SEL *)&selRef_bundleIdentifier);
}

uint64_t AppExtensionIdentity.localizedName.getter()
{
  return sub_191FAAD0C((SEL *)&selRef_localizedName);
}

ExtensionFoundation::AppExtensionIdentity __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AppExtensionIdentity.init(serviceIdentifier:)(Swift::String serviceIdentifier)
{
  uint64_t v3 = v1;
  id v4 = objc_allocWithZone((Class)_EXExtensionIdentity);
  uint64_t v5 = (objc_class *)sub_191FAB8DC();
  if (!v2)
  {
    self;
    uint64_t v5 = (objc_class *)swift_dynamicCastObjCClassUnconditional();
    *uint64_t v3 = v5;
  }
  result._inner._developerName = v7;
  result._inner.super.isa = v5;
  *(_WORD *)&result._inner._requiresUIKitSceneHosting = v6;
  return result;
}

uint64_t AppExtensionIdentity.init(record:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  objc_msgSend(objc_allocWithZone((Class)_EXExtensionIdentity), sel_initWithApplicationExtensionRecord_, a1);

  self;
  uint64_t result = swift_dynamicCastObjCClassUnconditional();
  *a2 = result;
  return result;
}

uint64_t AppExtensionIdentity.bundleVersion.getter()
{
  return sub_191FAAD0C((SEL *)&selRef_bundleVersion);
}

id AppExtensionIdentity.presentsUserInterface.getter()
{
  return objc_msgSend(*v0, sel_presentsUserInterface);
}

id AppExtensionIdentity.requiresMacCatalystBehavior.getter()
{
  return objc_msgSend(*v0, sel_requiresMacCatalystBehavior);
}

uint64_t AppExtensionIdentity._attributes.getter()
{
  return sub_191FAAD7C((SEL *)&selRef_attributes);
}

uint64_t AppExtensionIdentity._nsExtensionAttributes.getter()
{
  return MEMORY[0x1E4FBC868];
}

ExtensionFoundation::_AppExtensionIdentity __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> _AppExtensionIdentity.init(serviceIdentifier:)(Swift::String serviceIdentifier)
{
  id object = serviceIdentifier._object;
  uint64_t countAndFlagsBits = serviceIdentifier._countAndFlagsBits;
  id v4 = v1;
  id v5 = objc_msgSend(self, sel_bundleRecordForCurrentProcess);
  if (v5)
  {
    __int16 v6 = v5;
    self;
    uint64_t v7 = (void *)swift_dynamicCastObjCClass();
    if (v7)
    {
      id v8 = objc_msgSend(v7, sel_applicationExtensionRecords);
      sub_191FAB9A8();
      sub_191F3B1EC(&qword_1E92FDD20, (void (*)(uint64_t))sub_191FAB9A8);
      uint64_t v9 = sub_191FB9FB8();

      swift_bridgeObjectRetain();
      sub_191FABFA8(v9, countAndFlagsBits, (uint64_t)object);
      uint64_t v11 = v10;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v11)
      {
        swift_bridgeObjectRelease();
        id v12 = objc_msgSend(objc_allocWithZone((Class)_EXExtensionIdentity), sel_initWithApplicationExtensionRecord_, v11);

        *id v4 = v12;
      }
      else
      {
        os_log_type_t v18 = sub_191FBA068();
        if (qword_1E92FC6A0 != -1) {
          swift_once();
        }
        unint64_t v19 = qword_1E92FC678;
        os_log_type_t v20 = v18;
        if (os_log_type_enabled((os_log_t)qword_1E92FC678, v18))
        {
          swift_bridgeObjectRetain();
          uint64_t v21 = (uint8_t *)swift_slowAlloc();
          uint64_t v22 = swift_slowAlloc();
          uint64_t v25 = v22;
          *(_DWORD *)uint64_t v21 = 136315138;
          swift_bridgeObjectRetain();
          sub_191F4EB34(countAndFlagsBits, (unint64_t)object, &v25);
          sub_191FBA1C8();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_191F29000, v19, v20, "Current process does not contain an extension with bundle ID %s.", v21, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x192FEBAE0](v22, -1, -1);
          MEMORY[0x192FEBAE0](v21, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        sub_191FB9DC8();
        id v23 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
        uint64_t v24 = (void *)sub_191FB9DA8();
        swift_bridgeObjectRelease();
        objc_msgSend(v23, sel_initWithDomain_code_userInfo_, v24, 5, 0);

        swift_willThrow();
      }
      goto LABEL_15;
    }
  }
  swift_bridgeObjectRelease();
  sub_191FBA068();
  if (qword_1E92FC6A0 != -1) {
    swift_once();
  }
  sub_191FB9C78();
  sub_191FB9DC8();
  id v16 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
  unint64_t v17 = (void *)sub_191FB9DA8();
  swift_bridgeObjectRelease();
  objc_msgSend(v16, sel_initWithDomain_code_userInfo_, v17, 5, 0);

  uint64_t v13 = (objc_class *)swift_willThrow();
LABEL_15:
  result._inner._developerName = v15;
  result._inner.super.isa = v13;
  *(_WORD *)&result._inner._requiresUIKitSceneHosting = v14;
  return result;
}

void _AppExtensionIdentity.init(applicationExtensionRecord:)(void *a1@<X0>, void *a2@<X8>)
{
  id v4 = objc_msgSend(objc_allocWithZone((Class)_EXExtensionIdentity), sel_initWithApplicationExtensionRecord_, a1);

  *a2 = v4;
}

void _AppExtensionIdentity.id.getter()
{
}

uint64_t _AppExtensionIdentity.extensionPointIdentifier.getter()
{
  return sub_191FAAD0C((SEL *)&selRef_extensionPointIdentifier);
}

uint64_t _AppExtensionIdentity.bundleIdentifier.getter()
{
  return sub_191FAAD0C((SEL *)&selRef_bundleIdentifier);
}

uint64_t _AppExtensionIdentity.bundleVersion.getter()
{
  return sub_191FAAD0C((SEL *)&selRef_bundleVersion);
}

id _AppExtensionIdentity.containingApplicationRecord.getter()
{
  id result = objc_msgSend(*v0, sel_containingBundleRecord);
  if (result)
  {
    uint64_t v2 = result;
    self;
    id result = (id)swift_dynamicCastObjCClass();
    if (!result)
    {

      return 0;
    }
  }
  return result;
}

uint64_t _AppExtensionIdentity.localizedName.getter()
{
  return sub_191FAAD0C((SEL *)&selRef_localizedName);
}

uint64_t _AppExtensionIdentity.developerName.getter()
{
  return sub_191FAAD0C((SEL *)&selRef_developerName);
}

uint64_t sub_191FAAD0C(SEL *a1)
{
  id v2 = [*v1 *a1];
  uint64_t v3 = sub_191FB9DC8();

  return v3;
}

uint64_t _AppExtensionIdentity.attributes.getter()
{
  return sub_191FAAD7C((SEL *)&selRef_attributes);
}

uint64_t _AppExtensionIdentity.nsExtensionAttributes.getter()
{
  return sub_191FAAD7C((SEL *)&selRef_nsExtensionAttributes);
}

uint64_t sub_191FAAD7C(SEL *a1)
{
  id v2 = [*v1 *a1];
  uint64_t v3 = sub_191FB9D58();

  return v3;
}

id _AppExtensionIdentity.icon.getter()
{
  id v1 = objc_msgSend(*v0, sel_icon);

  return v1;
}

void _AppExtensionIdentity.url.getter()
{
}

void sub_191FAAE38(SEL *a1, void (*a2)(void))
{
  id v4 = [*v2 *a1];
  a2();
}

id _AppExtensionIdentity.enabled.getter()
{
  return objc_msgSend(*v0, sel_enabled);
}

id _AppExtensionIdentity.platform.getter()
{
  return objc_msgSend(*v0, sel_platform);
}

id _AppExtensionIdentity.extensionPointRecord.getter()
{
  id v1 = *v0;
  id v2 = objc_msgSend(*v0, sel_applicationExtensionRecord);
  if (!v2
    || (uint64_t v3 = v2,
        id v4 = objc_msgSend(v2, sel_extensionPointRecord),
        v3,
        !v4))
  {
    id v5 = v1;
    id v6 = objc_msgSend(v5, sel_extensionPointIdentifier);
    uint64_t v7 = sub_191FB9DC8();
    uint64_t v9 = v8;

    id v10 = objc_msgSend(v5, sel_platform);
    id v11 = objc_allocWithZone(MEMORY[0x1E4F22448]);
    return sub_191FAB9E8(v7, v9, (uint64_t)v10);
  }
  return v4;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> _AppExtensionIdentity.enable()()
{
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> _AppExtensionIdentity.disable()()
{
}

id sub_191FAB07C(SEL *a1)
{
  v5[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = *v1;
  v5[0] = 0;
  if (objc_msgSend(self, *a1, v2, v5)) {
    return v5[0];
  }
  id v4 = v5[0];
  sub_191FB9B18();

  return (id)swift_willThrow();
}

id _AppExtensionIdentity.showsInExtensionsManager.getter()
{
  return objc_msgSend(*v0, sel_showsInExtensionsManager);
}

id _AppExtensionIdentity.isSystemComponent.getter()
{
  return objc_msgSend(*v0, sel_isSystemComponent);
}

id _AppExtensionIdentity.canDisable.getter()
{
  return objc_msgSend(*v0, sel_canDisable);
}

id _AppExtensionIdentity.spotlightIndexable.getter()
{
  return objc_msgSend(*v0, sel_spotlightIndexable);
}

uint64_t _AppExtensionIdentity.spotlightImporterIdentifiers.getter()
{
  id v1 = objc_msgSend(*v0, sel_spotlightImporterIdentifiers);
  uint64_t v2 = sub_191FB9ED8();

  return v2;
}

id _AppExtensionIdentity.nsExtension.getter()
{
  v9[1] = *(id *)MEMORY[0x1E4F143B8];
  id v1 = *v0;
  uint64_t v2 = self;
  v9[0] = 0;
  id v3 = v1;
  id v4 = objc_msgSend(v2, sel_extensionWithIdentity_error_, v3, v9);
  id v5 = v9[0];
  if (v4)
  {
  }
  else
  {
    id v6 = v5;
    uint64_t v7 = (void *)sub_191FB9B18();

    swift_willThrow();
    return 0;
  }
  return v4;
}

uint64_t _s19ExtensionFoundation03AppA8IdentityV4hash4intoys6HasherVz_tF_0()
{
  uint64_t v1 = sub_191FB9C68();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  id v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(*v0, sel_uniqueIdentifier);
  sub_191FB9C28();

  sub_191F3B1EC(&qword_1E92FC6E0, MEMORY[0x1E4F27990]);
  sub_191FB9D78();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t _s19ExtensionFoundation03AppA8IdentityV2eeoiySbAC_ACtFZ_0(id *a1, void **a2)
{
  uint64_t v4 = sub_191FB9C68();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  id v10 = (char *)&v16 - v9;
  id v11 = *a2;
  id v12 = objc_msgSend(*a1, sel_uniqueIdentifier);
  sub_191FB9C28();

  id v13 = objc_msgSend(v11, sel_uniqueIdentifier);
  sub_191FB9C28();

  LOBYTE(v13) = sub_191FB9C18();
  __int16 v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v8, v4);
  v14(v10, v4);
  return v13 & 1;
}

uint64_t _s19ExtensionFoundation03AppA8IdentityV9hashValueSivg_0()
{
  uint64_t v1 = sub_191FB9C68();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  sub_191FBA648();
  id v6 = objc_msgSend(v5, sel_uniqueIdentifier);
  sub_191FB9C28();

  sub_191F3B1EC(&qword_1E92FC6E0, MEMORY[0x1E4F27990]);
  sub_191FB9D78();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_191FBA688();
}

uint64_t sub_191FAB6DC()
{
  uint64_t v1 = sub_191FB9C68();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  sub_191FBA648();
  id v6 = objc_msgSend(v5, sel_uniqueIdentifier);
  sub_191FB9C28();

  sub_191F3B1EC(&qword_1E92FC6E0, MEMORY[0x1E4F27990]);
  sub_191FB9D78();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_191FBA688();
}

void sub_191FAB82C()
{
  id v1 = objc_msgSend(*v0, sel_uniqueIdentifier);
  sub_191FB9C28();
}

uint64_t _s19ExtensionFoundation03AppA8IdentityV5innerACyXl_tcfC_0@<X0>(uint64_t *a1@<X8>)
{
  self;
  uint64_t result = swift_dynamicCastObjCClassUnconditional();
  *a1 = result;
  return result;
}

id sub_191FAB8DC()
{
  v6[1] = *(id *)MEMORY[0x1E4F143B8];
  id v1 = (void *)sub_191FB9DA8();
  swift_bridgeObjectRelease();
  v6[0] = 0;
  id v2 = objc_msgSend(v0, sel_initWithServiceIdentifier_error_, v1, v6);

  if (v2)
  {
    id v3 = v6[0];
  }
  else
  {
    id v4 = v6[0];
    sub_191FB9B18();

    swift_willThrow();
  }
  return v2;
}

unint64_t sub_191FAB9A8()
{
  unint64_t result = qword_1EB27BB38;
  if (!qword_1EB27BB38)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB27BB38);
  }
  return result;
}

id sub_191FAB9E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v10[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v5 = (void *)sub_191FB9DA8();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  id v6 = objc_msgSend(v3, sel_initWithIdentifier_platform_error_, v5, a3, v10);

  if (v6)
  {
    id v7 = v10[0];
  }
  else
  {
    id v8 = v10[0];
    sub_191FB9B18();

    swift_willThrow();
  }
  return v6;
}

uint64_t sub_191FABAC4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_191FABAEC(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_191F4EB34(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_191FBA1C8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_191FABB64(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_191FABBFC(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_191FABE58(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_191FABE58(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_191FABBFC(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_191FABD74(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_191FBA308();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_191FBA448();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_191FB9E48();
      if (!v2) {
        return MEMORY[0x1E4FBC860];
      }
    }
    sub_191FBA4C8();
    __break(1u);
LABEL_14:
    uint64_t result = sub_191FBA448();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

void *sub_191FABD74(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FDD38);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_191FABDDC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_191FB9E88();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x192FEA070](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t sub_191FABE58(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FDD38);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_191FBA4C8();
  __break(1u);
  return result;
}

void sub_191FABFA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_191FBA228();
    sub_191FAB9A8();
    sub_191F3B1EC(&qword_1E92FDD20, (void (*)(uint64_t))sub_191FAB9A8);
    sub_191FB9FE8();
    uint64_t v3 = v29;
    uint64_t v26 = v30;
    uint64_t v4 = v31;
    int64_t v5 = v32;
    unint64_t v6 = v33;
  }
  else
  {
    uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v26 = a1 + 56;
    uint64_t v8 = ~v7;
    uint64_t v9 = -v7;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v6 = v10 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v4 = v8;
    int64_t v5 = 0;
  }
  uint64_t v24 = v4;
  int64_t v25 = (unint64_t)(v4 + 64) >> 6;
  while (v3 < 0)
  {
    if (!sub_191FBA258()) {
      goto LABEL_37;
    }
    sub_191FAB9A8();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v14 = v34;
    swift_unknownObjectRelease();
    uint64_t v12 = v6;
    if (!v34) {
      goto LABEL_37;
    }
LABEL_33:
    id v19 = objc_msgSend(v14, sel_bundleIdentifier, v24);
    if (v19)
    {
      os_log_type_t v20 = v19;
      uint64_t v21 = sub_191FB9DC8();
      uint64_t v23 = v22;

      if (v21 == a2 && v23 == a3)
      {
        swift_bridgeObjectRelease();
LABEL_37:
        sub_191F4DD64();
        return;
      }
      char v11 = sub_191FBA598();
      swift_bridgeObjectRelease();
      if (v11) {
        goto LABEL_37;
      }
    }

    unint64_t v6 = v12;
  }
  if (v6)
  {
    uint64_t v12 = (v6 - 1) & v6;
    unint64_t v13 = __clz(__rbit64(v6)) | (v5 << 6);
LABEL_32:
    id v14 = *(id *)(*(void *)(v3 + 48) + 8 * v13);
    if (!v14) {
      goto LABEL_37;
    }
    goto LABEL_33;
  }
  int64_t v15 = v5 + 1;
  if (!__OFADD__(v5, 1))
  {
    if (v15 >= v25) {
      goto LABEL_37;
    }
    int64_t v16 = v5;
    unint64_t v17 = *(void *)(v26 + 8 * v15);
    ++v5;
    if (!v17)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v25) {
        goto LABEL_37;
      }
      unint64_t v17 = *(void *)(v26 + 8 * v5);
      if (!v17)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v25) {
          goto LABEL_37;
        }
        unint64_t v17 = *(void *)(v26 + 8 * v5);
        if (!v17)
        {
          int64_t v5 = v15 + 3;
          if (v15 + 3 >= v25) {
            goto LABEL_37;
          }
          unint64_t v17 = *(void *)(v26 + 8 * v5);
          if (!v17)
          {
            int64_t v5 = v15 + 4;
            if (v15 + 4 >= v25) {
              goto LABEL_37;
            }
            unint64_t v17 = *(void *)(v26 + 8 * v5);
            if (!v17)
            {
              uint64_t v18 = v16 + 6;
              while (v25 != v18)
              {
                unint64_t v17 = *(void *)(v26 + 8 * v18++);
                if (v17)
                {
                  int64_t v5 = v18 - 1;
                  goto LABEL_31;
                }
              }
              goto LABEL_37;
            }
          }
        }
      }
    }
LABEL_31:
    uint64_t v12 = (v17 - 1) & v17;
    unint64_t v13 = __clz(__rbit64(v17)) + (v5 << 6);
    goto LABEL_32;
  }
  __break(1u);
}

unint64_t sub_191FAC320()
{
  unint64_t result = qword_1E92FDD28;
  if (!qword_1E92FDD28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92FDD28);
  }
  return result;
}

unint64_t sub_191FAC378()
{
  unint64_t result = qword_1E92FDD30;
  if (!qword_1E92FDD30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92FDD30);
  }
  return result;
}

uint64_t sub_191FAC3CC()
{
  return sub_191F3B1EC(&qword_1E92FC6E0, MEMORY[0x1E4F27990]);
}

uint64_t sub_191FAC414(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_191FAC428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

id AppExtensionProcess.Configuration.appExtension.getter@<X0>(void **a1@<X8>)
{
  uint64_t v2 = *v1;
  *a1 = *v1;
  return v2;
}

uint64_t AppExtensionProcess.Configuration._instanceIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for AppExtensionProcess.Configuration(0);
  return sub_191F38EA8(v1 + *(int *)(v3 + 24), a1, type metadata accessor for AppExtensionProcess._InstanceIdentifier);
}

uint64_t AppExtensionProcess._InstanceIdentifier.effectiveID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_191F4CBD8(v1, a1, (uint64_t *)&unk_1EB27BE40);
}

uint64_t AppExtensionProcess.Configuration._requireInvalidation.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for AppExtensionProcess.Configuration(0) + 28));
}

uint64_t AppExtensionProcess.Configuration._assertionAttributes.getter()
{
  type metadata accessor for AppExtensionProcess.Configuration(0);

  return swift_bridgeObjectRetain();
}

uint64_t sub_191FAC528()
{
  uint64_t v1 = (void *)v0[19];
  uint64_t v2 = v0[17];
  swift_willThrow();
  sub_191F32F04(v2, type metadata accessor for AppExtensionProcess.Configuration);

  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t AppExtensionProcess.init(configuration:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  v15[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = type metadata accessor for AppExtensionProcess.Configuration(0);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for _EXHostConfiguration();
  sub_191F38EA8(a1, (uint64_t)v6, type metadata accessor for AppExtensionProcess.Configuration);
  uint64_t v7 = (void *)j___s19ExtensionFoundation20_EXHostConfigurationC07processD0AcA03AppA7ProcessV0D0V_tcfC_0(v6);
  sub_191F442A4(0, &qword_1E92FC868);
  if (objc_msgSend(v7, sel_isKindOfClass_, swift_getObjCClassFromMetadata()))
  {
    self;
    uint64_t v8 = swift_dynamicCastObjCClassUnconditional();
    uint64_t v9 = self;
    v15[0] = 0;
    id v10 = objc_msgSend(v9, sel_extensionProcessWithConfiguration_error_, v8, v15);
    if (v10)
    {
      id v11 = v10;
      id v12 = v15[0];

      uint64_t result = sub_191F32F04(a1, type metadata accessor for AppExtensionProcess.Configuration);
      *a2 = v11;
    }
    else
    {
      id v14 = v15[0];
      sub_191FB9B18();

      swift_willThrow();
      return sub_191F32F04(a1, type metadata accessor for AppExtensionProcess.Configuration);
    }
  }
  else
  {
    objc_msgSend(self, sel__EX_parameterError);
    swift_willThrow();

    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

NSXPCConnection __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AppExtensionProcess.makeXPCConnection()()
{
  return (NSXPCConnection)sub_191F2BA54((SEL *)&selRef_makeXPCConnectionWithError_);
}

Swift::Void __swiftcall AppExtensionProcess.invalidate()()
{
  objc_msgSend(*v0, sel_invalidate);
}

uint64_t (*AppExtensionProcess.Configuration.appExtensionIdentity.modify())()
{
  return nullsub_1;
}

uint64_t AppExtensionProcess.Configuration.onInterruption.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_retain();
  return v1;
}

uint64_t AppExtensionProcess.Configuration.onInterruption.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_release();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*AppExtensionProcess.Configuration.onInterruption.modify())()
{
  return nullsub_1;
}

id AppExtensionProcess._valid.getter()
{
  return objc_msgSend(*v0, sel_isValid);
}

Swift::Void __swiftcall AppExtensionProcess.invalidateLaunchAssertion()()
{
  objc_msgSend(*v0, sel_invalidateLaunchAssertion);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AppExtensionProcess.terminate()()
{
  v12[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v1 = *v0;
  id v2 = objc_allocWithZone(MEMORY[0x1E4F96488]);
  uint64_t v3 = (void *)sub_191FB9DA8();
  id v4 = objc_msgSend(v2, sel_initWithExplanation_, v3);

  objc_msgSend(v4, sel_setReportType_, 0);
  objc_msgSend(v4, sel_setMaximumTerminationResistance_, 20);
  id v5 = objc_msgSend(v1, sel_processPredicate);
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F96490]), sel_initWithPredicate_context_, v5, v4);

  v12[0] = 0;
  if (objc_msgSend(v6, sel_execute_, v12))
  {
    id v7 = v12[0];
  }
  else
  {
    id v8 = v12[0];
    uint64_t v9 = (void *)sub_191FB9B18();

    swift_willThrow();
    id v10 = self;
    id v11 = (void *)sub_191FB9B08();
    objc_msgSend(v10, sel__EX_errorWithCode_underlyingError_, 18, v11);

    swift_willThrow();
  }
}

uint64_t sub_191FACB18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppExtensionProcess._InstanceIdentifier(0);
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191F38EA8(a1, (uint64_t)v6, type metadata accessor for AppExtensionProcess._InstanceIdentifier);
  uint64_t v7 = type metadata accessor for AppExtensionProcess.Configuration(0);
  return sub_191F32B00((uint64_t)v6, a2 + *(int *)(v7 + 24));
}

void (*AppExtensionProcess.Configuration._instanceIdentifier.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)a1 = v1;
  size_t v3 = *(void *)(*(void *)(type metadata accessor for AppExtensionProcess._InstanceIdentifier(0) - 8) + 64);
  *(void *)(a1 + 8) = malloc(v3);
  uint64_t v4 = malloc(v3);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(int *)(type metadata accessor for AppExtensionProcess.Configuration(0) + 24);
  *(_DWORD *)(a1 + 24) = v5;
  sub_191F38EA8(v1 + v5, (uint64_t)v4, type metadata accessor for AppExtensionProcess._InstanceIdentifier);
  return sub_191FACC74;
}

void sub_191FACC74(uint64_t a1, char a2)
{
  id v2 = *(void **)(a1 + 8);
  size_t v3 = *(void **)(a1 + 16);
  uint64_t v4 = *(void *)a1 + *(int *)(a1 + 24);
  if (a2)
  {
    sub_191F38EA8(*(void *)(a1 + 16), (uint64_t)v2, type metadata accessor for AppExtensionProcess._InstanceIdentifier);
    sub_191F32B00((uint64_t)v2, v4);
    sub_191F32F04((uint64_t)v3, type metadata accessor for AppExtensionProcess._InstanceIdentifier);
  }
  else
  {
    sub_191F32B00(*(void *)(a1 + 16), v4);
  }
  free(v3);

  free(v2);
}

uint64_t AppExtensionProcess.Configuration._requireInvalidation.setter(char a1)
{
  uint64_t result = type metadata accessor for AppExtensionProcess.Configuration(0);
  *(unsigned char *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*AppExtensionProcess.Configuration._requireInvalidation.modify(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for AppExtensionProcess.Configuration(0) + 28);
  *(_DWORD *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(v1 + v3);
  return sub_191FACDA8;
}

uint64_t sub_191FACDA8(uint64_t result)
{
  *(unsigned char *)(*(void *)result + *(int *)(result + 8)) = *(unsigned char *)(result + 12);
  return result;
}

uint64_t sub_191FACDBC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(int *)(type metadata accessor for AppExtensionProcess.Configuration(0) + 32);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + v4) = v3;
  return result;
}

uint64_t AppExtensionProcess.Configuration._assertionAttributes.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for AppExtensionProcess.Configuration(0) + 32);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*AppExtensionProcess.Configuration._assertionAttributes.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for AppExtensionProcess.Configuration(0) + 32);
  *(_DWORD *)(a1 + 16) = v3;
  *(void *)a1 = *(void *)(v1 + v3);
  swift_bridgeObjectRetain();
  return sub_191FACEAC;
}

uint64_t sub_191FACEAC(uint64_t *a1, char a2)
{
  uint64_t v2 = *((int *)a1 + 4);
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v4 + v2) = v3;
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(v4 + v2) = v3;
  }
  return result;
}

uint64_t sub_191FACF24()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE40);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for AppExtensionProcess._InstanceIdentifier(0);
  __swift_allocate_value_buffer(v3, qword_1E92FDD40);
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1E92FDD40);
  if (qword_1E92FD1D8 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_1E92FD9C0 + OBJC_IVAR____EXExtensionInstanceIdentifier_identifier;
  uint64_t v6 = sub_191FB9C68();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v2, v5, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v2, 0, 1, v6);
  return sub_191FB1504((uint64_t)v2, v4);
}

uint64_t static AppExtensionProcess._InstanceIdentifier.defaultInstanceIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_191FAD0F0(&qword_1E92FD1E8, (uint64_t)qword_1E92FDD40, a1);
}

uint64_t static AppExtensionProcess._InstanceIdentifier.nilInstanceIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_191FAD0F0(&qword_1E92FC800, (uint64_t)qword_1E92FC7E0, a1);
}

uint64_t sub_191FAD0F0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for AppExtensionProcess._InstanceIdentifier(0);
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  return sub_191F38EA8(v6, a3, type metadata accessor for AppExtensionProcess._InstanceIdentifier);
}

uint64_t AppExtensionProcess._InstanceIdentifier.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE40);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191F4CBD8(v2, (uint64_t)v6, (uint64_t *)&unk_1EB27BE40);
  uint64_t v7 = sub_191FB9C68();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v6, v7);
  }
  if (qword_1E92FD1D8 != -1) {
    swift_once();
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a1, qword_1E92FD9C0 + OBJC_IVAR____EXExtensionInstanceIdentifier_identifier, v7);
  return sub_191F4CB7C((uint64_t)v6, (uint64_t *)&unk_1EB27BE40);
}

uint64_t AppExtensionProcess._InstanceIdentifier.hash(into:)()
{
  uint64_t v1 = sub_191FB9C68();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE40);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191F4CBD8(v0, (uint64_t)v7, (uint64_t *)&unk_1EB27BE40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1) {
    return sub_191FBA668();
  }
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
  sub_191FBA668();
  sub_191F3B234(&qword_1E92FC6E0, MEMORY[0x1E4F27990]);
  sub_191FB9D78();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t AppExtensionProcess._InstanceIdentifier.hashValue.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_191FB9C68();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE40);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191FBA648();
  sub_191F4CBD8(v1, (uint64_t)v8, (uint64_t *)&unk_1EB27BE40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_191FBA668();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_191FBA668();
    sub_191F3B234(&qword_1E92FC6E0, MEMORY[0x1E4F27990]);
    sub_191FB9D78();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return sub_191FBA688();
}

uint64_t sub_191FAD68C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE40);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191F4CBD8(v2, (uint64_t)v6, (uint64_t *)&unk_1EB27BE40);
  uint64_t v7 = sub_191FB9C68();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v6, v7);
  }
  if (qword_1E92FD1D8 != -1) {
    swift_once();
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a1, qword_1E92FD9C0 + OBJC_IVAR____EXExtensionInstanceIdentifier_identifier, v7);
  return sub_191F4CB7C((uint64_t)v6, (uint64_t *)&unk_1EB27BE40);
}

uint64_t sub_191FAD80C()
{
  uint64_t v1 = sub_191FB9C68();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE40);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191F4CBD8(v0, (uint64_t)v7, (uint64_t *)&unk_1EB27BE40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1) {
    return sub_191FBA668();
  }
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
  sub_191FBA668();
  sub_191F3B234(&qword_1E92FC6E0, MEMORY[0x1E4F27990]);
  sub_191FB9D78();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_191FAD9DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_191FB9C68();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE40);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_191FBA648();
  sub_191F4CBD8(v1, (uint64_t)v8, (uint64_t *)&unk_1EB27BE40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_191FBA668();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_191FBA668();
    sub_191F3B234(&qword_1E92FC6E0, MEMORY[0x1E4F27990]);
    sub_191FB9D78();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return sub_191FBA688();
}

id AppExtensionProcess.inner.getter()
{
  return *v0;
}

void AppExtensionProcess.Configuration.appExtension.setter(void **a1)
{
  uint64_t v2 = *a1;

  *uint64_t v1 = v2;
}

void (*AppExtensionProcess.Configuration.appExtension.modify(void **a1))(uint64_t a1, char a2)
{
  uint64_t v2 = *v1;
  *a1 = *v1;
  a1[1] = v1;
  id v3 = v2;
  return sub_191FADC50;
}

void sub_191FADC50(uint64_t a1, char a2)
{
  id v3 = *(void **)a1;
  uint64_t v2 = *(void ***)(a1 + 8);
  uint64_t v4 = *v2;
  if (a2)
  {
    id v5 = v3;

    *uint64_t v2 = v5;
  }
  else
  {

    *uint64_t v2 = v3;
  }
}

void __swiftcall _AppExtensionProcess.init(appExtensionProcess:)(ExtensionFoundation::_AppExtensionProcess *__return_ptr retstr, ExtensionFoundation::AppExtensionProcess *appExtensionProcess)
{
  retstr->internalExtensionProcess.super.isa = appExtensionProcess->internalExtensionProcess.super.isa;
}

uint64_t _AppExtensionProcess.init(configuration:)(uint64_t a1, uint64_t a2)
{
  v2[16] = a1;
  v2[17] = a2;
  type metadata accessor for _AppExtensionProcess.Configuration(0);
  v2[18] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_191FADD64, 0, 0);
}

uint64_t sub_191FADD64()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[18];
  type metadata accessor for _EXHostConfiguration();
  sub_191F38EA8(v1, v2, type metadata accessor for _AppExtensionProcess.Configuration);
  id v3 = (void *)sub_191F8A928(v2);
  v0[19] = v3;
  sub_191F442A4(0, &qword_1E92FC868);
  if (objc_msgSend(v3, sel_isKindOfClass_, swift_getObjCClassFromMetadata()))
  {
    uint64_t v4 = self;
    self;
    uint64_t v5 = swift_dynamicCastObjCClassUnconditional();
    v0[2] = v0;
    v0[7] = v0 + 15;
    v0[3] = sub_191FADF88;
    uint64_t v6 = swift_continuation_init();
    v0[10] = MEMORY[0x1E4F143A8];
    v0[11] = 0x40000000;
    v0[12] = sub_191F35738;
    v0[13] = &block_descriptor_3;
    v0[14] = v6;
    objc_msgSend(v4, sel_extensionProcessWithConfiguration_completionHandler_, v5, v0 + 10);
    return MEMORY[0x1F41881E8](v0 + 2);
  }
  else
  {
    objc_msgSend(self, sel__EX_parameterError);
    swift_willThrow();

    return swift_unexpectedError();
  }
}

uint64_t sub_191FADF88()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 160) = v1;
  if (v1) {
    uint64_t v2 = sub_191FAE130;
  }
  else {
    uint64_t v2 = sub_191FAE098;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_191FAE098()
{
  uint64_t v1 = (void *)v0[19];
  uint64_t v2 = (void *)v0[16];
  sub_191F32F04(v0[17], type metadata accessor for _AppExtensionProcess.Configuration);
  uint64_t v3 = v0[15];

  *uint64_t v2 = v3;
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_191FAE130()
{
  uint64_t v1 = (void *)v0[19];
  uint64_t v2 = v0[17];
  swift_willThrow();
  sub_191F32F04(v2, type metadata accessor for _AppExtensionProcess.Configuration);

  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t _AppExtensionProcess.init(configuration:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  v15[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = type metadata accessor for _AppExtensionProcess.Configuration(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for _EXHostConfiguration();
  sub_191F38EA8(a1, (uint64_t)v6, type metadata accessor for _AppExtensionProcess.Configuration);
  uint64_t v7 = (void *)sub_191F8A928((uint64_t)v6);
  sub_191F442A4(0, &qword_1E92FC868);
  if (objc_msgSend(v7, sel_isKindOfClass_, swift_getObjCClassFromMetadata()))
  {
    self;
    uint64_t v8 = swift_dynamicCastObjCClassUnconditional();
    uint64_t v9 = self;
    v15[0] = 0;
    id v10 = objc_msgSend(v9, sel_extensionProcessWithConfiguration_error_, v8, v15);
    if (v10)
    {
      id v11 = v10;
      id v12 = v15[0];

      uint64_t result = sub_191F32F04(a1, type metadata accessor for _AppExtensionProcess.Configuration);
      *a2 = v11;
    }
    else
    {
      id v14 = v15[0];
      sub_191FB9B18();

      swift_willThrow();
      return sub_191F32F04(a1, type metadata accessor for _AppExtensionProcess.Configuration);
    }
  }
  else
  {
    objc_msgSend(self, sel__EX_parameterError);
    swift_willThrow();

    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

void static _AppExtensionProcess.make(with:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for _AppExtensionProcess.Configuration(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&aBlock[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for _EXHostConfiguration();
  sub_191F38EA8(a1, (uint64_t)v8, type metadata accessor for _AppExtensionProcess.Configuration);
  uint64_t v9 = (void *)sub_191F8A928((uint64_t)v8);
  sub_191F442A4(0, &qword_1E92FC868);
  if (objc_msgSend(v9, sel_isKindOfClass_, swift_getObjCClassFromMetadata()))
  {
    id v10 = self;
    self;
    uint64_t v11 = swift_dynamicCastObjCClassUnconditional();
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = a2;
    *(void *)(v12 + 24) = a3;
    aBlock[4] = sub_191FAF4C0;
    aBlock[5] = v12;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_191FAE80C;
    aBlock[3] = &block_descriptor_5;
    unint64_t v13 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v10, sel_extensionProcessWithConfiguration_completionHandler_, v11, v13);
    _Block_release(v13);
  }
  else
  {
    id v14 = objc_msgSend(self, sel__EX_parameterError);
    swift_willThrow();

    swift_unexpectedError();
    __break(1u);
  }
}

void sub_191FAE640(void *a1, id a2, void (*a3)(id *))
{
  if (a1)
  {
    id v4 = a1;
    self;
    id v12 = (id)swift_dynamicCastObjCClassUnconditional();
    char v13 = 0;
    id v5 = v12;
LABEL_3:
    uint64_t v6 = v5;
    a3(&v12);

    return;
  }
  if (a2)
  {
    id v12 = a2;
    id v7 = a2;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E92FC540);
    sub_191F442A4(0, &qword_1E92FC480);
    if (swift_dynamicCast())
    {
      id v12 = v11;
      char v13 = 1;
      id v5 = v11;
      goto LABEL_3;
    }
  }
  sub_191FB9DC8();
  id v8 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
  uint64_t v9 = (void *)sub_191FB9DA8();
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(v8, sel_initWithDomain_code_userInfo_, v9, 2, 0);

  id v12 = v10;
  char v13 = 1;
  a3(&v12);
}

uint64_t _AppExtensionProcess.init(inner:)@<X0>(uint64_t *a1@<X8>)
{
  self;
  uint64_t result = swift_dynamicCastObjCClassUnconditional();
  *a1 = result;
  return result;
}

void sub_191FAE80C(uint64_t a1, void *a2, void *a3)
{
  id v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

NSXPCConnection __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> _AppExtensionProcess.makeXPCConnection()()
{
  v6[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v1 = *v0;
  v6[0] = 0;
  id v2 = objc_msgSend(v1, sel_newXPCConnectionWithError_, v6);
  if (v2)
  {
    id v3 = v6[0];
  }
  else
  {
    id v4 = v6[0];
    sub_191FB9B18();

    swift_willThrow();
  }
  return (NSXPCConnection)v2;
}

uint64_t sub_191FAE94C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  *(void *)(v10 + 24) = v8;
  swift_retain();
  uint64_t result = swift_release();
  *(void *)(a2 + 8) = a6;
  *(void *)(a2 + 16) = v10;
  return result;
}

uint64_t (*_AppExtensionProcess.Configuration.onInterruption.modify())()
{
  return nullsub_1;
}

uint64_t _AppExtensionProcess.Configuration.instanceIdentifier.getter()
{
  uint64_t v1 = *(void **)(v0 + 24);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 24);
LABEL_7:
    id v6 = v1;
    return v2;
  }
  if (qword_1E92FD1D8 != -1) {
    swift_once();
  }
  id v3 = (void *)qword_1E92FD9C0;
  sub_191F442A4(0, &qword_1E92FC738);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v5 = v3;
  if (objc_msgSend(v5, sel_isKindOfClass_, ObjCClassFromMetadata))
  {
    self;
    uint64_t v2 = swift_dynamicCastObjCClassUnconditional();
    uint64_t v1 = 0;
    goto LABEL_7;
  }
  id v8 = objc_msgSend(self, sel__EX_parameterError);
  swift_willThrow();

  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

void _AppExtensionProcess.Configuration.instanceIdentifier.setter(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
}

void (*_AppExtensionProcess.Configuration.instanceIdentifier.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  a1[1] = v1;
  id v3 = *(void **)(v1 + 24);
  if (v3)
  {
    uint64_t v4 = *(void *)(v1 + 24);
LABEL_7:
    *a1 = v4;
    id v8 = v3;
    return sub_191FAEC8C;
  }
  if (qword_1E92FD1D8 != -1) {
    swift_once();
  }
  id v5 = (void *)qword_1E92FD9C0;
  sub_191F442A4(0, &qword_1E92FC738);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v7 = v5;
  if (objc_msgSend(v7, sel_isKindOfClass_, ObjCClassFromMetadata))
  {
    self;
    uint64_t v4 = swift_dynamicCastObjCClassUnconditional();
    id v3 = 0;
    goto LABEL_7;
  }
  id v10 = objc_msgSend(self, sel__EX_parameterError);
  swift_willThrow();

  uint64_t result = (void (*)(uint64_t, char))swift_unexpectedError();
  __break(1u);
  return result;
}

void sub_191FAEC8C(uint64_t a1, char a2)
{
  id v3 = *(void **)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void **)(v2 + 24);
  if (a2)
  {
    id v5 = v3;

    *(void *)(v2 + 24) = v3;
  }
  else
  {

    *(void *)(v2 + 24) = v3;
  }
}

uint64_t _AppExtensionProcess.Configuration.preferredLanguages.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t _AppExtensionProcess.Configuration.preferredLanguages.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = a1;
  return result;
}

uint64_t (*_AppExtensionProcess.Configuration.preferredLanguages.modify())()
{
  return nullsub_1;
}

uint64_t _AppExtensionProcess.Configuration.additionalEnvironmentVariables.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t _AppExtensionProcess.Configuration.additionalEnvironmentVariables.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 40) = a1;
  return result;
}

uint64_t (*_AppExtensionProcess.Configuration.additionalEnvironmentVariables.modify())()
{
  return nullsub_1;
}

uint64_t _AppExtensionProcess.Configuration.sandboxProfileName.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t _AppExtensionProcess.Configuration.sandboxProfileName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t (*_AppExtensionProcess.Configuration.sandboxProfileName.modify())()
{
  return nullsub_1;
}

void *_AppExtensionProcess.Configuration.launchPersona.getter()
{
  uint64_t v1 = *(void **)(v0 + 64);
  id v2 = v1;
  return v1;
}

void _AppExtensionProcess.Configuration.launchPersona.setter(uint64_t a1)
{
  *(void *)(v1 + 64) = a1;
}

uint64_t (*_AppExtensionProcess.Configuration.launchPersona.modify())()
{
  return nullsub_1;
}

uint64_t _AppExtensionProcess.Configuration.assertionAttributes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t _AppExtensionProcess.Configuration.assertionAttributes.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 72) = a1;
  return result;
}

uint64_t (*_AppExtensionProcess.Configuration.assertionAttributes.modify())()
{
  return nullsub_1;
}

uint64_t _AppExtensionProcess.Configuration.requireInvalidation.getter()
{
  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t _AppExtensionProcess.Configuration.requireInvalidation.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 80) = result;
  return result;
}

uint64_t (*_AppExtensionProcess.Configuration.requireInvalidation.modify())()
{
  return nullsub_1;
}

uint64_t _AppExtensionProcess.Configuration.networkApplicationID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for _AppExtensionProcess.Configuration(0);
  return sub_191F4CBD8(v1 + *(int *)(v3 + 52), a1, &qword_1EB27BE10);
}

uint64_t _AppExtensionProcess.Configuration.networkApplicationID.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for _AppExtensionProcess.Configuration(0) + 52);

  return sub_191F45790(a1, v3);
}

uint64_t (*_AppExtensionProcess.Configuration.networkApplicationID.modify())()
{
  return nullsub_1;
}

uint64_t _AppExtensionProcess.Configuration.init(appExtension:onInterruption:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = *a1;
  *(void *)(a4 + 24) = 0;
  *(void *)(a4 + 32) = 0;
  *(void *)(a4 + 40) = MEMORY[0x1E4FBC868];
  *(void *)(a4 + 48) = 0;
  *(void *)(a4 + 56) = 0;
  *(void *)(a4 + 64) = 0;
  *(void *)(a4 + 72) = sub_191F45CC0();
  *(unsigned char *)(a4 + 80) = 0;
  uint64_t v8 = a4 + *(int *)(type metadata accessor for _AppExtensionProcess.Configuration(0) + 52);
  uint64_t v9 = sub_191FB9CE8();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  *(void *)a4 = v7;
  *(void *)(a4 + 8) = a2;
  *(void *)(a4 + 16) = a3;
  return result;
}

BOOL _s19ExtensionFoundation03AppA7ProcessV19_InstanceIdentifierV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_191FB9C68();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v27 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FDD70);
  uint64_t v8 = v7 - 8;
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE40);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  id v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  unint64_t v17 = (char *)&v26 - v16;
  MEMORY[0x1F4188790](v15);
  id v19 = (char *)&v26 - v18;
  sub_191F4CBD8(a1, (uint64_t)&v26 - v18, (uint64_t *)&unk_1EB27BE40);
  sub_191F4CBD8(a2, (uint64_t)v17, (uint64_t *)&unk_1EB27BE40);
  uint64_t v20 = (uint64_t)&v10[*(int *)(v8 + 56)];
  sub_191F4CBD8((uint64_t)v19, (uint64_t)v10, (uint64_t *)&unk_1EB27BE40);
  sub_191F4CBD8((uint64_t)v17, v20, (uint64_t *)&unk_1EB27BE40);
  uint64_t v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v21((uint64_t)v10, 1, v4) == 1)
  {
    sub_191F4CB7C((uint64_t)v17, (uint64_t *)&unk_1EB27BE40);
    sub_191F4CB7C((uint64_t)v19, (uint64_t *)&unk_1EB27BE40);
    if (v21(v20, 1, v4) == 1)
    {
      sub_191F4CB7C((uint64_t)v10, (uint64_t *)&unk_1EB27BE40);
      return 1;
    }
    goto LABEL_6;
  }
  sub_191F4CBD8((uint64_t)v10, (uint64_t)v14, (uint64_t *)&unk_1EB27BE40);
  if (v21(v20, 1, v4) == 1)
  {
    sub_191F4CB7C((uint64_t)v17, (uint64_t *)&unk_1EB27BE40);
    sub_191F4CB7C((uint64_t)v19, (uint64_t *)&unk_1EB27BE40);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
LABEL_6:
    sub_191F4CB7C((uint64_t)v10, &qword_1E92FDD70);
    return 0;
  }
  uint64_t v22 = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v27, v20, v4);
  sub_191F3B234(&qword_1E92FC6E8, MEMORY[0x1E4F27990]);
  char v23 = sub_191FB9D98();
  uint64_t v24 = *(void (**)(char *, uint64_t))(v5 + 8);
  v24(v22, v4);
  sub_191F4CB7C((uint64_t)v17, (uint64_t *)&unk_1EB27BE40);
  sub_191F4CB7C((uint64_t)v19, (uint64_t *)&unk_1EB27BE40);
  v24(v14, v4);
  sub_191F4CB7C((uint64_t)v10, (uint64_t *)&unk_1EB27BE40);
  return (v23 & 1) != 0;
}

uint64_t type metadata accessor for _AppExtensionProcess.Configuration(uint64_t a1)
{
  return sub_191F4CD18(a1, (uint64_t *)&unk_1E92FC680);
}

uint64_t sub_191FAF488()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_191FAF4C0(void *a1, void *a2)
{
  sub_191FAE640(a1, a2, *(void (**)(id *))(v2 + 16));
}

uint64_t sub_191FAF4C8()
{
  return sub_191F3B234(&qword_1E92FC6E0, MEMORY[0x1E4F27990]);
}

uint64_t sub_191FAF510()
{
  return sub_191F3B234(&qword_1E92FDD68, (void (*)(uint64_t))type metadata accessor for AppExtensionProcess._InstanceIdentifier);
}

uint64_t sub_191FAF558@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return keypath_getTm(a1, (uint64_t)sub_191FB159C, a2);
}

uint64_t sub_191FAF578(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_191FAE94C(a1, a2, a3, a4, (uint64_t)&unk_1EE2CCFD0, (uint64_t)sub_191FB1570);
}

uint64_t sub_191FAF5AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for AppExtensionProcess.Configuration(0);
  return sub_191F38EA8(a1 + *(int *)(v4 + 24), a2, type metadata accessor for AppExtensionProcess._InstanceIdentifier);
}

uint64_t sub_191FAF600@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = type metadata accessor for AppExtensionProcess.Configuration(0);
  *a2 = *(unsigned char *)(a1 + *(int *)(result + 28));
  return result;
}

uint64_t sub_191FAF638(char *a1, uint64_t a2)
{
  char v3 = *a1;
  uint64_t result = type metadata accessor for AppExtensionProcess.Configuration(0);
  *(unsigned char *)(a2 + *(int *)(result + 28)) = v3;
  return result;
}

uint64_t sub_191FAF66C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + *(int *)(type metadata accessor for AppExtensionProcess.Configuration(0) + 32));

  return swift_bridgeObjectRetain();
}

id sub_191FAF6B8@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  *a2 = v2;
  return v2;
}

void sub_191FAF6C4(id *a1, id *location)
{
}

uint64_t sub_191FAF6D4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return keypath_getTm(a1, (uint64_t)sub_191F35FC0, a2);
}

uint64_t keypath_getTm@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, void *a3@<X8>)
{
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v5;
  *a3 = a2;
  a3[1] = v7;

  return swift_retain();
}

uint64_t sub_191FAF750(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_191FAE94C(a1, a2, a3, a4, (uint64_t)&unk_1EE2CCF80, (uint64_t)sub_191FB14FC);
}

uint64_t sub_191FAF784@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = _AppExtensionProcess.Configuration.instanceIdentifier.getter();
  *a1 = result;
  return result;
}

void sub_191FAF7B0(id *a1, uint64_t a2)
{
  id v3 = *a1;
  uint64_t v4 = *(void **)(a2 + 24);
  id v5 = *a1;

  *(void *)(a2 + 24) = v3;
}

char *initializeBufferWithCopyOfBuffer for AppExtensionProcess.Configuration(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a2[2];
    *((void *)a1 + 1) = a2[1];
    *((void *)a1 + 2) = v8;
    uint64_t v9 = a3[6];
    __dst = &a1[v9];
    id v10 = (char *)a2 + v9;
    uint64_t v11 = sub_191FB9C68();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    id v14 = v4;
    swift_retain();
    if (v13(v10, 1, v11))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE40);
      memcpy(__dst, v10, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v16 = a3[8];
    v7[a3[7]] = *((unsigned char *)a2 + a3[7]);
    *(void *)&v7[v16] = *(char **)((char *)a2 + v16);
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t assignWithCopy for AppExtensionProcess.Configuration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  uint64_t v9 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v9;
  swift_retain();
  swift_release();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  uint64_t v13 = sub_191FB9C68();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 24))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE40);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for AppExtensionProcess.Configuration(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  id v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_191FB9C68();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE40);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  return a1;
}

uint64_t assignWithTake for AppExtensionProcess.Configuration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  uint64_t v7 = a3[6];
  id v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_191FB9C68();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE40);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AppExtensionProcess.Configuration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191FAFE84);
}

uint64_t sub_191FAFE84(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for AppExtensionProcess._InstanceIdentifier(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for AppExtensionProcess.Configuration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191FAFF48);
}

void *sub_191FAFF48(void *result, uint64_t a2, int a3, uint64_t a4)
{
  id v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for AppExtensionProcess._InstanceIdentifier(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for AppExtensionProcess._InstanceIdentifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE40) - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = sub_191FB9C68();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for AppExtensionProcess._InstanceIdentifier(uint64_t a1)
{
  uint64_t v2 = sub_191FB9C68();
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, v2);
  }
  return result;
}

void *initializeWithCopy for AppExtensionProcess._InstanceIdentifier(void *a1, const void *a2)
{
  uint64_t v4 = sub_191FB9C68();
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE40);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, v4);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *assignWithCopy for AppExtensionProcess._InstanceIdentifier(void *a1, void *a2)
{
  uint64_t v4 = sub_191FB9C68();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE40);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, v4);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

void *initializeWithTake for AppExtensionProcess._InstanceIdentifier(void *a1, const void *a2)
{
  uint64_t v4 = sub_191FB9C68();
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE40);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, v4);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *assignWithTake for AppExtensionProcess._InstanceIdentifier(void *a1, void *a2)
{
  uint64_t v4 = sub_191FB9C68();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE40);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, v4);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppExtensionProcess._InstanceIdentifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191FB0744);
}

uint64_t sub_191FB0744(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE40);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for AppExtensionProcess._InstanceIdentifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191FB07C8);
}

uint64_t sub_191FB07C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE40);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

ValueMetadata *type metadata accessor for _AppExtensionProcess()
{
  return &type metadata for _AppExtensionProcess;
}

char *initializeBufferWithCopyOfBuffer for _AppExtensionProcess.Configuration(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a2[2];
    *((void *)a1 + 1) = a2[1];
    *((void *)a1 + 2) = v6;
    int v7 = a2[3];
    int v8 = a2[4];
    *((void *)a1 + 3) = v7;
    *((void *)a1 + 4) = v8;
    uint64_t v9 = a2[6];
    *((void *)a1 + 5) = a2[5];
    *((void *)a1 + 6) = v9;
    uint64_t v10 = a2[8];
    *((void *)a1 + 7) = a2[7];
    *((void *)a1 + 8) = v10;
    *((void *)a1 + 9) = a2[9];
    uint64_t v11 = *(int *)(a3 + 52);
    id v19 = (char *)a2 + v11;
    __dst = &a1[v11];
    a1[80] = *((unsigned char *)a2 + 80);
    uint64_t v12 = sub_191FB9CE8();
    uint64_t v18 = *(void *)(v12 - 8);
    uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
    int v13 = v4;
    swift_retain();
    int v14 = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v15 = v10;
    swift_bridgeObjectRetain();
    if (v20(v19, 1, v12))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BE10);
      memcpy(__dst, v19, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(__dst, v19, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v12);
    }
  }
  return v5;
}

uint64_t destroy for _AppExtensionProcess.Configuration(id *a1, uint64_t a2)
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 52);
  uint64_t v5 = sub_191FB9CE8();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    int v7 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t initializeWithCopy for _AppExtensionProcess.Configuration(uint64_t a1, long long *a2, uint64_t a3)
{
  long long v17 = *a2;
  *(_OWORD *)a1 = *a2;
  uint64_t v4 = (void *)*((void *)a2 + 3);
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *((void *)a2 + 5);
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *((void *)a2 + 7);
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  *(void *)(a1 + 56) = v6;
  int v7 = (void *)*((void *)a2 + 8);
  uint64_t v8 = *((void *)a2 + 9);
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 72) = v8;
  uint64_t v9 = *(int *)(a3 + 52);
  id v19 = (char *)a2 + v9;
  __dst = (void *)(a1 + v9);
  *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
  uint64_t v10 = sub_191FB9CE8();
  uint64_t v16 = *(void *)(v10 - 8);
  uint64_t v18 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48);
  id v11 = (id)v17;
  swift_retain();
  id v12 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v13 = v7;
  swift_bridgeObjectRetain();
  if (v18(v19, 1, v10))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BE10);
    memcpy(__dst, v19, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 16))(__dst, v19, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithCopy for _AppExtensionProcess.Configuration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  int v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  uint64_t v9 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v9;
  swift_retain();
  swift_release();
  uint64_t v10 = *(void **)(a1 + 24);
  id v11 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v11;
  id v12 = v11;

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v13 = *(void **)(a1 + 64);
  uint64_t v14 = *(void **)(a2 + 64);
  *(void *)(a1 + 64) = v14;
  id v15 = v14;

  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v16 = *(int *)(a3 + 52);
  long long v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  uint64_t v19 = sub_191FB9CE8();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 24))(v17, v18, v19);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v20 + 8))(v17, v19);
    goto LABEL_6;
  }
  if (v23)
  {
LABEL_6:
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BE10);
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v20 + 16))(v17, v18, v19);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  return a1;
}

uint64_t initializeWithTake for _AppExtensionProcess.Configuration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v4 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v4;
  uint64_t v5 = *(int *)(a3 + 52);
  uint64_t v6 = (const void *)(a2 + v5);
  int v7 = (void *)(a1 + v5);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v8 = sub_191FB9CE8();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BE10);
    memcpy(v7, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v7, v6, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  }
  return a1;
}

uint64_t assignWithTake for _AppExtensionProcess.Configuration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  int v7 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);

  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v10 = *(int *)(a3 + 52);
  id v11 = (void *)(a1 + v10);
  id v12 = (void *)(a2 + v10);
  uint64_t v13 = sub_191FB9CE8();
  uint64_t v14 = *(void *)(v13 - 8);
  id v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 40))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BE10);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 32))(v11, v12, v13);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for _AppExtensionProcess.Configuration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_191FB1290);
}

uint64_t sub_191FB1290(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BE10);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    id v11 = (char *)a1 + *(int *)(a3 + 52);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for _AppExtensionProcess.Configuration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_191FB1358);
}

void *sub_191FB1358(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB27BE10);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 52);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_191FB1404()
{
  sub_191F564AC(319, (unint64_t *)&qword_1EB27BE18, MEMORY[0x1E4F38A80]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_191FB14FC()
{
  return sub_191F991BC(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_191FB1504(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB27BE40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_191FB15A8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unsigned int v4 = a4;
  unsigned int v5 = a3;
  unsigned int v6 = a2;
  unsigned int v7 = a1;
  unint64_t v8 = HIDWORD(a1);
  unint64_t v9 = HIDWORD(a2);
  unint64_t v10 = HIDWORD(a3);
  unint64_t v11 = HIDWORD(a4);
  sub_191FBA2F8();
  swift_bridgeObjectRelease();
  unint64_t v14 = 0xD000000000000011;
  unint64_t v15 = 0x8000000191FC8B50;
  v13.val[0] = v7;
  v13.val[1] = v8;
  v13.val[2] = v6;
  v13.val[3] = v9;
  v13.val[4] = v5;
  v13.val[5] = v10;
  v13.val[6] = v4;
  v13.val[7] = v11;
  v13.val[0] = audit_token_to_pid(&v13);
  sub_191FBA578();
  sub_191FB9E38();
  swift_bridgeObjectRelease();
  sub_191FB9E38();
  v13.val[0] = v7;
  v13.val[1] = v8;
  v13.val[2] = v6;
  v13.val[3] = v9;
  v13.val[4] = v5;
  v13.val[5] = v10;
  v13.val[6] = v4;
  v13.val[7] = v11;
  v13.val[0] = audit_token_to_pidversion(&v13);
  sub_191FBA578();
  sub_191FB9E38();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_191FB16F8()
{
  unsigned int v1 = *v0;
  unsigned int v2 = v0[1];
  unsigned int v3 = v0[2];
  unsigned int v4 = v0[3];
  unsigned int v5 = v0[4];
  unsigned int v6 = v0[5];
  unsigned int v7 = v0[6];
  unsigned int v8 = v0[7];
  sub_191FBA648();
  atoken.val[0] = v1;
  atoken.val[1] = v2;
  atoken.val[2] = v3;
  atoken.val[3] = v4;
  atoken.val[4] = v5;
  atoken.val[5] = v6;
  atoken.val[6] = v7;
  atoken.val[7] = v8;
  audit_token_to_pid(&atoken);
  sub_191FBA678();
  atoken.val[0] = v1;
  atoken.val[1] = v2;
  atoken.val[2] = v3;
  atoken.val[3] = v4;
  atoken.val[4] = v5;
  atoken.val[5] = v6;
  atoken.val[6] = v7;
  atoken.val[7] = v8;
  audit_token_to_pidversion(&atoken);
  sub_191FBA678();
  return sub_191FBA688();
}

uint64_t sub_191FB17A0()
{
  unsigned int v2 = v0[1];
  unsigned int v3 = v0[2];
  unsigned int v4 = v0[3];
  unsigned int v5 = v0[4];
  unsigned int v6 = v0[5];
  unsigned int v7 = v0[6];
  unsigned int v8 = v0[7];
  v10.val[0] = *v0;
  unsigned int v1 = v10.val[0];
  v10.val[1] = v2;
  v10.val[2] = v3;
  v10.val[3] = v4;
  v10.val[4] = v5;
  v10.val[5] = v6;
  v10.val[6] = v7;
  v10.val[7] = v8;
  audit_token_to_pid(&v10);
  sub_191FBA678();
  v10.val[0] = v1;
  v10.val[1] = v2;
  v10.val[2] = v3;
  v10.val[3] = v4;
  v10.val[4] = v5;
  v10.val[5] = v6;
  v10.val[6] = v7;
  v10.val[7] = v8;
  audit_token_to_pidversion(&v10);
  return sub_191FBA678();
}

uint64_t sub_191FB1834()
{
  unsigned int v1 = *v0;
  unsigned int v2 = v0[1];
  unsigned int v3 = v0[2];
  unsigned int v4 = v0[3];
  unsigned int v5 = v0[4];
  unsigned int v6 = v0[5];
  unsigned int v7 = v0[6];
  unsigned int v8 = v0[7];
  sub_191FBA648();
  atoken.val[0] = v1;
  atoken.val[1] = v2;
  atoken.val[2] = v3;
  atoken.val[3] = v4;
  atoken.val[4] = v5;
  atoken.val[5] = v6;
  atoken.val[6] = v7;
  atoken.val[7] = v8;
  audit_token_to_pid(&atoken);
  sub_191FBA678();
  atoken.val[0] = v1;
  atoken.val[1] = v2;
  atoken.val[2] = v3;
  atoken.val[3] = v4;
  atoken.val[4] = v5;
  atoken.val[5] = v6;
  atoken.val[6] = v7;
  atoken.val[7] = v8;
  audit_token_to_pidversion(&atoken);
  sub_191FBA678();
  return sub_191FBA688();
}

BOOL sub_191FB18D8(unsigned int *a1, unsigned int *a2)
{
  unsigned int v3 = *a1;
  unsigned int v2 = a1[1];
  unsigned int v4 = a1[2];
  unsigned int v5 = a1[3];
  unsigned int v6 = a1[4];
  unsigned int v7 = a1[5];
  unsigned int v8 = a1[6];
  unsigned int v9 = a1[7];
  unsigned int v11 = *a2;
  unsigned int v10 = a2[1];
  unsigned int v12 = a2[2];
  unsigned int v13 = a2[3];
  unsigned int v14 = a2[4];
  unsigned int v15 = a2[5];
  unsigned int v16 = a2[6];
  unsigned int v17 = a2[7];
  atoken.val[0] = *a1;
  atoken.val[1] = v2;
  unsigned int v26 = v4;
  unsigned int v27 = v2;
  atoken.val[2] = v4;
  atoken.val[3] = v5;
  unsigned int v24 = v6;
  unsigned int v25 = v5;
  atoken.val[4] = v6;
  atoken.val[5] = v7;
  unsigned int v22 = v8;
  unsigned int v23 = v7;
  atoken.val[6] = v8;
  atoken.val[7] = v9;
  unsigned int v21 = v9;
  pid_t v18 = audit_token_to_pid(&atoken);
  atoken.val[0] = v11;
  atoken.val[1] = v10;
  atoken.val[2] = v12;
  atoken.val[3] = v13;
  atoken.val[4] = v14;
  atoken.val[5] = v15;
  atoken.val[6] = v16;
  atoken.val[7] = v17;
  if (v18 != audit_token_to_pid(&atoken)) {
    return 0;
  }
  atoken.val[0] = v3;
  atoken.val[1] = v27;
  atoken.val[2] = v26;
  atoken.val[3] = v25;
  atoken.val[4] = v24;
  atoken.val[5] = v23;
  atoken.val[6] = v22;
  atoken.val[7] = v21;
  int v19 = audit_token_to_pidversion(&atoken);
  atoken.val[0] = v11;
  atoken.val[1] = v10;
  atoken.val[2] = v12;
  atoken.val[3] = v13;
  atoken.val[4] = v14;
  atoken.val[5] = v15;
  atoken.val[6] = v16;
  atoken.val[7] = v17;
  return v19 == audit_token_to_pidversion(&atoken);
}

unint64_t sub_191FB19F0()
{
  return sub_191FB15A8(*v0, v0[1], v0[2], v0[3]);
}

ValueMetadata *type metadata accessor for AuditToken()
{
  return &type metadata for AuditToken;
}

unint64_t sub_191FB1A10()
{
  unint64_t result = qword_1E92FC578;
  if (!qword_1E92FC578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92FC578);
  }
  return result;
}

Swift::Bool __swiftcall _Scene.shouldAccept(connection:)(NSXPCConnection connection)
{
  return 0;
}

Swift::Bool __swiftcall _EmptyScene.shouldAccept(connection:)(NSXPCConnection connection)
{
  return 0;
}

uint64_t static _SceneBuilder.buildBlock<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, a1, a2);
}

uint64_t dispatch thunk of _Scene.shouldAccept(connection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

ValueMetadata *type metadata accessor for _EmptyScene()
{
  return &type metadata for _EmptyScene;
}

ValueMetadata *type metadata accessor for _SceneBuilder()
{
  return &type metadata for _SceneBuilder;
}

id static Defaults.preferInProcessDiscovery.getter()
{
  return sub_191FB1D2C((SEL *)&selRef_preferInProcessDiscovery);
}

id static Defaults.queryAllowsDuplicates.getter()
{
  return sub_191FB1D2C((SEL *)&selRef_queryAllowsDuplicates);
}

id static Defaults.startUIHostingSessionImmediately.getter()
{
  return sub_191FB1D2C((SEL *)&selRef_startUIHostingSessionImmediately);
}

uint64_t static Defaults.alwaysEnabledExtensionBundleIdentifiers.getter()
{
  return sub_191FB1D90((SEL *)&selRef_alwaysEnabledExtensionBundleIdentifiers);
}

uint64_t sub_191FB1B14(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E92FC818);
    uint64_t v2 = sub_191FBA2E8();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC870];
  }
  uint64_t v4 = a1 + 56;
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v20 = v2;
  uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
  if (-v5 < 64) {
    uint64_t v6 = ~(-1 << -(char)v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & v3;
  int64_t v8 = (unint64_t)(63 - v5) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v13 >= v8) {
      goto LABEL_27;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    int64_t v15 = v10 + 1;
    if (!v14)
    {
      int64_t v15 = v10 + 2;
      if (v10 + 2 >= v8) {
        goto LABEL_27;
      }
      unint64_t v14 = *(void *)(v4 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v10 + 3;
        if (v10 + 3 >= v8) {
          goto LABEL_27;
        }
        unint64_t v14 = *(void *)(v4 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v10 + 4;
          if (v10 + 4 >= v8) {
            goto LABEL_27;
          }
          unint64_t v14 = *(void *)(v4 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_26:
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v10 = v15;
LABEL_9:
    sub_191F91D40(*(void *)(a1 + 48) + 40 * v12, (uint64_t)&v19);
    swift_dynamicCast();
    uint64_t result = sub_191FB26A0(v17, v18);
  }
  int64_t v16 = v10 + 5;
  if (v10 + 5 >= v8)
  {
LABEL_27:
    sub_191F4DD64();
    return v20;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v10 + 5;
    goto LABEL_26;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v8) {
      goto LABEL_27;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_26;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

id static Defaults.enforceXPCCacheCodeSigning.getter()
{
  return sub_191FB1D2C((SEL *)&selRef_enforceXPCCacheCodeSigning);
}

id static Defaults.forceSandbox.getter()
{
  return sub_191FB1D2C((SEL *)&selRef_forceSandbox);
}

id sub_191FB1D2C(SEL *a1)
{
  id v2 = objc_msgSend(self, sel_sharedInstance);
  id v3 = [v2 *a1];

  return v3;
}

uint64_t static Defaults.allowedUnsandboxedExtensionPoints.getter()
{
  return sub_191FB1D90((SEL *)&selRef_allowedUnsandboxedExtensionPoints);
}

uint64_t sub_191FB1D90(SEL *a1)
{
  id v2 = objc_msgSend(self, sel_sharedInstance);
  id v3 = [v2 *a1];

  uint64_t v4 = sub_191FB9FB8();
  uint64_t v5 = sub_191FB1B14(v4);
  swift_bridgeObjectRelease();
  return v5;
}

BOOL static ExtensionKitInternalError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ExtensionKitInternalError.hash(into:)()
{
  return sub_191FBA658();
}

uint64_t ExtensionKitInternalError.hashValue.getter()
{
  return sub_191FBA688();
}

BOOL sub_191FB1EB0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

unint64_t ExtensionKitInternalError.description.getter()
{
  return 0xD0000000000000D0;
}

unint64_t sub_191FB1F08()
{
  return 0xD0000000000000D0;
}

uint64_t sub_191FB1F38(uint64_t a1)
{
  return sub_191FB1F50(a1, &unk_1E92FDD78);
}

uint64_t sub_191FB1F44(uint64_t a1)
{
  return sub_191FB1F50(a1, byte_1E92FDD79);
}

uint64_t sub_191FB1F50(uint64_t a1, unsigned char *a2)
{
  sub_191FBA048();
  if (qword_1E92FD1A8 != -1) {
    swift_once();
  }
  uint64_t result = sub_191FB9C78();
  *a2 = 1;
  return result;
}

void static Defaults.checkAllowPrototypeSPI()()
{
  if (qword_1E92FD1F8 != -1) {
    swift_once();
  }
  uint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_sharedInstance);
  unsigned __int8 v2 = objc_msgSend(v1, sel_allowPrototypeSPI);

  if ((v2 & 1) == 0)
  {
    id v3 = objc_msgSend(v0, sel_sharedInstance);
    unsigned __int8 v4 = objc_msgSend(v3, sel_assertOnDisallowedPrototypeSPIUse);

    if ((v4 & 1) == 0)
    {
      os_log_type_t v5 = sub_191FBA078();
      if (qword_1E92FD1A8 != -1) {
        swift_once();
      }
      uint64_t v6 = qword_1E92FD830;
      os_log_type_t v7 = v5;
      if (os_log_type_enabled((os_log_t)qword_1E92FD830, v5))
      {
        int64_t v8 = (uint8_t *)swift_slowAlloc();
        uint64_t v9 = swift_slowAlloc();
        uint64_t v11 = v9;
        *(_DWORD *)int64_t v8 = 136315138;
        sub_191F4EB34(0xD0000000000000D0, 0x8000000191FC8B70, &v11);
        sub_191FBA1C8();
        _os_log_impl(&dword_191F29000, v6, v7, "%s", v8, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x192FEBAE0](v9, -1, -1);
        MEMORY[0x192FEBAE0](v8, -1, -1);
      }
      sub_191FB2214();
      swift_allocError();
      unsigned char *v10 = 1;
      swift_willThrow();
    }
  }
}

unint64_t sub_191FB2214()
{
  unint64_t result = qword_1E92FDD80;
  if (!qword_1E92FDD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92FDD80);
  }
  return result;
}

void static Defaults.checkAllowPrototypeAPI()()
{
  if (qword_1E92FD1F0 != -1) {
    swift_once();
  }
  uint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_sharedInstance);
  unsigned __int8 v2 = objc_msgSend(v1, sel_allowPrototypeAPI);

  if ((v2 & 1) == 0)
  {
    id v3 = objc_msgSend(v0, sel_sharedInstance);
    unsigned __int8 v4 = objc_msgSend(v3, sel_assertOnDisallowedPrototypeAPIUse);

    if ((v4 & 1) == 0)
    {
      os_log_type_t v5 = sub_191FBA078();
      if (qword_1E92FD1A8 != -1) {
        swift_once();
      }
      uint64_t v6 = qword_1E92FD830;
      os_log_type_t v7 = v5;
      if (os_log_type_enabled((os_log_t)qword_1E92FD830, v5))
      {
        int64_t v8 = (uint8_t *)swift_slowAlloc();
        uint64_t v9 = swift_slowAlloc();
        uint64_t v11 = v9;
        *(_DWORD *)int64_t v8 = 136315138;
        sub_191F4EB34(0xD0000000000000D0, 0x8000000191FC8C50, &v11);
        sub_191FBA1C8();
        _os_log_impl(&dword_191F29000, v6, v7, "%s", v8, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x192FEBAE0](v9, -1, -1);
        MEMORY[0x192FEBAE0](v8, -1, -1);
      }
      sub_191FB2214();
      swift_allocError();
      unsigned char *v10 = 0;
      swift_willThrow();
    }
  }
}

unint64_t sub_191FB249C()
{
  unint64_t result = qword_1E92FDD88;
  if (!qword_1E92FDD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E92FDD88);
  }
  return result;
}

ValueMetadata *type metadata accessor for Defaults()
{
  return &type metadata for Defaults;
}

uint64_t getEnumTagSinglePayload for ExtensionKitInternalError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ExtensionKitInternalError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x191FB265CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_191FB2684(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ExtensionKitInternalError()
{
  return &type metadata for ExtensionKitInternalError;
}

uint64_t sub_191FB26A0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_191FBA648();
  sub_191FB9E28();
  uint64_t result = sub_191FBA688();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = result & ~v7;
  uint64_t v9 = v5 + 56;
  if ((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v10 = *(void *)(v5 + 48);
    uint64_t v11 = (void *)(v10 + 16 * v8);
    BOOL v12 = *v11 == a1 && v11[1] == a2;
    if (v12 || (uint64_t result = sub_191FBA598(), (result & 1) != 0))
    {
LABEL_7:
      int64_t v13 = (void *)(v10 + 16 * v8);
      uint64_t result = swift_bridgeObjectRelease();
      *int64_t v13 = a1;
      v13[1] = a2;
      return result;
    }
    uint64_t v14 = ~v7;
    while (1)
    {
      unint64_t v8 = (v8 + 1) & v14;
      if (((*(void *)(v9 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        break;
      }
      int64_t v15 = (void *)(v10 + 16 * v8);
      if (*v15 != a1 || v15[1] != a2)
      {
        uint64_t result = sub_191FBA598();
        if ((result & 1) == 0) {
          continue;
        }
      }
      goto LABEL_7;
    }
  }
  if (*(void *)(v5 + 16) >= *(void *)(v5 + 24))
  {
    __break(1u);
    goto LABEL_21;
  }
  *(void *)(v9 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) |= 1 << v8;
  uint64_t v17 = (void *)(*(void *)(v5 + 48) + 16 * v8);
  *uint64_t v17 = a1;
  v17[1] = a2;
  uint64_t v18 = *(void *)(v5 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19)
  {
LABEL_21:
    __break(1u);
    return result;
  }
  *(void *)(v5 + 16) = v20;
  return result;
}

void _EXExtensionInstallRunloopObserverToPingLaunchdAfterEvent_cold_1()
{
  __assert_rtn("_EXExtensionInstallRunloopObserverToPingLaunchdAfterEvent", "EXConcreteExtension.m", 124, "mainRunLoop != NULL");
}

void EXConcreteExtensionTearDownRequestWithIdentifier_cold_1()
{
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_8(&dword_191F29000, v0, v1, "teardown requested for request %{public}@ to extension %{public}@ but no such request was issued, or the request already completed or canceled earlier.");
}

void __EXConcreteExtensionTearDownRequestWithIdentifier_block_invoke_cold_1()
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_10(&dword_191F29000, v0, v1, "Begining request '%{public}@' assertion (%{public}@) cleanup.", v2);
}

void __EXConcreteExtensionTearDownRequestWithIdentifier_block_invoke_386_cold_1(uint64_t a1, void *a2)
{
  unint64_t v8 = [a2 localizedDescription];
  OUTLINED_FUNCTION_14(&dword_191F29000, v2, v3, "__plugin endUsing for '%{public}@' returned error: %{public}@", v4, v5, v6, v7, 2u);
}

void __EXConcreteExtensionTearDownRequestWithIdentifier_block_invoke_386_cold_2()
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_10(&dword_191F29000, v0, v1, "Completed request '%{public}@' assertion (%{public}@) cleanup.", v2);
}

uint64_t __getMCProfileConnectionClass_block_invoke_cold_1()
{
  uint64_t v0 = abort_report_np();
  return -[NSExtensionContext(ExtensionKitAdditions) _derivedExtensionAuxiliaryHostProtocol](v0);
}

void _EXExtensionPredicateForActivationRule_cold_1(uint64_t a1, NSObject *a2)
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_debug_impl(&dword_191F29000, a2, OS_LOG_TYPE_DEBUG, "Generating predicate from dict: %@", (uint8_t *)&v2, 0xCu);
}

void _EXExtensionPredicateForActivationRule_cold_2(uint64_t a1, NSObject *a2)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  objc_opt_class();
  int v5 = 136315906;
  uint64_t v6 = "([rule isKindOfClass:objc_getClass(\"NSString\")] || [rule isKindOfClass:objc_getClass(\"NSDictionary\")])";
  __int16 v7 = 2080;
  OUTLINED_FUNCTION_1();
  int v8 = 904;
  __int16 v9 = 2112;
  uint64_t v10 = v3;
  id v4 = v3;
  _os_log_fault_impl(&dword_191F29000, a2, OS_LOG_TYPE_FAULT, "%s - %s:%d: Unable to parse rule which is not either a string or a dictionary - type: %@", (uint8_t *)&v5, 0x26u);
}

void EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions_cold_1()
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  v2[0] = 136315394;
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_10(&dword_191F29000, v0, v1, "%s: Unexpected NSExpression type %ld", (uint8_t *)v2);
}

void EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions_cold_2(os_log_t log)
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  int v1 = 136315138;
  int v2 = "EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions";
  _os_log_debug_impl(&dword_191F29000, log, OS_LOG_TYPE_DEBUG, "%s: No operand expression", (uint8_t *)&v1, 0xCu);
}

void EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions_cold_3()
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  v2[0] = 136315394;
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_10(&dword_191F29000, v0, v1, "%s: Operand expression not safe to execute %@", (uint8_t *)v2);
}

void EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions_cold_4(uint64_t a1, NSObject *a2)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  int v4 = 136315650;
  int v5 = "EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions";
  __int16 v6 = 2112;
  uint64_t v7 = a1;
  __int16 v8 = 2112;
  id v9 = (id)objc_opt_class();
  id v3 = v9;
  _os_log_debug_impl(&dword_191F29000, a2, OS_LOG_TYPE_DEBUG, "%s: Keypath not of expected class (%@, %@)", (uint8_t *)&v4, 0x20u);
}

void EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions_cold_5()
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  v2[0] = 136315394;
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_10(&dword_191F29000, v0, v1, "%s: Argument expression not safe to execute %@", (uint8_t *)v2);
}

void EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions_cold_6(void *a1)
{
  [a1 count];
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_1_1(&dword_191F29000, v1, v2, "%s: Unexpected number of arguments %ld", v3, v4, v5, v6, 2u);
}

void EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions_cold_7(void *a1)
{
  uint64_t v1 = [a1 objectAtIndexedSubscript:1];
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_1_1(&dword_191F29000, v2, v3, "%s: Unsafe operand %@", v4, v5, v6, v7, 2u);
}

void EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions_cold_8(void *a1)
{
  uint64_t v1 = [a1 objectAtIndexedSubscript:0];
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_1_1(&dword_191F29000, v2, v3, "%s: Unsafe operand %@", v4, v5, v6, v7, 2u);
}

void EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions_cold_10()
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  v2[0] = 136315394;
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_10(&dword_191F29000, v0, v1, "%s: Unexpected selector name %@", (uint8_t *)v2);
}

void _EXAuditTokenHasRequiredEntitlements_cold_1(uint64_t a1, uint64_t a2, os_log_t log)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  int v3 = 138543618;
  uint64_t v4 = a1;
  __int16 v5 = 2114;
  uint64_t v6 = a2;
  _os_log_error_impl(&dword_191F29000, log, OS_LOG_TYPE_ERROR, "Host is missing entitlement: %{public}@ : %{public}@", (uint8_t *)&v3, 0x16u);
}

void __getISIconClass_block_invoke_cold_1()
{
  uint64_t v0 = abort_report_np();
  +[NSDictionary(ExtensionKitAdditions) _EX_dictionaryWithSignedURL:error:](v0);
}

uint64_t sub_191FB99F8()
{
  return MEMORY[0x1F40E3038]();
}

uint64_t sub_191FB9A08()
{
  return MEMORY[0x1F40E3060]();
}

uint64_t sub_191FB9A18()
{
  return MEMORY[0x1F40E3070]();
}

uint64_t sub_191FB9A28()
{
  return MEMORY[0x1F40E3080]();
}

uint64_t sub_191FB9A38()
{
  return MEMORY[0x1F40E30A8]();
}

uint64_t sub_191FB9A48()
{
  return MEMORY[0x1F40E30C0]();
}

uint64_t sub_191FB9A58()
{
  return MEMORY[0x1F40E3128]();
}

uint64_t sub_191FB9A68()
{
  return MEMORY[0x1F40E3150]();
}

uint64_t sub_191FB9A78()
{
  return MEMORY[0x1F40E3160]();
}

uint64_t sub_191FB9A88()
{
  return MEMORY[0x1F40E37C0]();
}

uint64_t sub_191FB9A98()
{
  return MEMORY[0x1F40E37D0]();
}

uint64_t sub_191FB9AA8()
{
  return MEMORY[0x1F40E37E0]();
}

uint64_t sub_191FB9AB8()
{
  return MEMORY[0x1F40E37F0]();
}

uint64_t sub_191FB9AC8()
{
  return MEMORY[0x1F40E3800]();
}

uint64_t sub_191FB9AD8()
{
  return MEMORY[0x1F40E3818]();
}

uint64_t sub_191FB9AE8()
{
  return MEMORY[0x1F40E3830]();
}

uint64_t sub_191FB9AF8()
{
  return MEMORY[0x1F40E3B70]();
}

uint64_t sub_191FB9B08()
{
  return MEMORY[0x1F40E4540]();
}

uint64_t sub_191FB9B18()
{
  return MEMORY[0x1F40E4550]();
}

uint64_t sub_191FB9B28()
{
  return MEMORY[0x1F40E46B8]();
}

uint64_t sub_191FB9B38()
{
  return MEMORY[0x1F40E46D0]();
}

uint64_t sub_191FB9B48()
{
  return MEMORY[0x1F40E49A0]();
}

uint64_t sub_191FB9B58()
{
  return MEMORY[0x1F40E4A70]();
}

uint64_t sub_191FB9B68()
{
  return MEMORY[0x1F40E4AC0]();
}

uint64_t sub_191FB9B78()
{
  return MEMORY[0x1F40E4B80]();
}

uint64_t sub_191FB9B88()
{
  return MEMORY[0x1F40E4BC8]();
}

uint64_t sub_191FB9B98()
{
  return MEMORY[0x1F40E4C80]();
}

uint64_t sub_191FB9BA8()
{
  return MEMORY[0x1F40E4CA8]();
}

uint64_t sub_191FB9BB8()
{
  return MEMORY[0x1F40E4CD8]();
}

uint64_t sub_191FB9BC8()
{
  return MEMORY[0x1F40E4D48]();
}

uint64_t sub_191FB9BD8()
{
  return MEMORY[0x1F40E4D90]();
}

uint64_t sub_191FB9BE8()
{
  return MEMORY[0x1F40E4DA8]();
}

uint64_t sub_191FB9BF8()
{
  return MEMORY[0x1F40E53A0]();
}

uint64_t sub_191FB9C08()
{
  return MEMORY[0x1F40E53C8]();
}

uint64_t sub_191FB9C18()
{
  return MEMORY[0x1F40E53E8]();
}

uint64_t sub_191FB9C28()
{
  return MEMORY[0x1F40E53F8]();
}

uint64_t sub_191FB9C38()
{
  return MEMORY[0x1F40E5410]();
}

uint64_t sub_191FB9C48()
{
  return MEMORY[0x1F40E5430]();
}

uint64_t sub_191FB9C58()
{
  return MEMORY[0x1F40E5438]();
}

uint64_t sub_191FB9C68()
{
  return MEMORY[0x1F40E5448]();
}

uint64_t sub_191FB9C78()
{
  return MEMORY[0x1F4188500]();
}

uint64_t sub_191FB9C88()
{
  return MEMORY[0x1F4188670]();
}

uint64_t sub_191FB9C98()
{
  return MEMORY[0x1F4188680]();
}

uint64_t sub_191FB9CA8()
{
  return MEMORY[0x1F41886A0]();
}

uint64_t sub_191FB9CB8()
{
  return MEMORY[0x1F4187A98]();
}

uint64_t sub_191FB9CC8()
{
  return MEMORY[0x1F40F24D8]();
}

uint64_t sub_191FB9CD8()
{
  return MEMORY[0x1F40F24E0]();
}

uint64_t sub_191FB9CE8()
{
  return MEMORY[0x1F40F24E8]();
}

uint64_t sub_191FB9CF8()
{
  return MEMORY[0x1F4186CB0]();
}

uint64_t sub_191FB9D08()
{
  return MEMORY[0x1F4186CF8]();
}

uint64_t sub_191FB9D18()
{
  return MEMORY[0x1F4186D60]();
}

uint64_t sub_191FB9D28()
{
  return MEMORY[0x1F4186EF8]();
}

uint64_t sub_191FB9D38()
{
  return MEMORY[0x1F4186F40]();
}

uint64_t sub_191FB9D48()
{
  return MEMORY[0x1F40E6000]();
}

uint64_t sub_191FB9D58()
{
  return MEMORY[0x1F40E6030]();
}

uint64_t sub_191FB9D68()
{
  return MEMORY[0x1F41835C0]();
}

uint64_t sub_191FB9D78()
{
  return MEMORY[0x1F41835C8]();
}

uint64_t sub_191FB9D88()
{
  return MEMORY[0x1F4183730]();
}

uint64_t sub_191FB9D98()
{
  return MEMORY[0x1F4183838]();
}

uint64_t sub_191FB9DA8()
{
  return MEMORY[0x1F40E6190]();
}

uint64_t sub_191FB9DB8()
{
  return MEMORY[0x1F40E61C8]();
}

uint64_t sub_191FB9DC8()
{
  return MEMORY[0x1F40E61D8]();
}

uint64_t sub_191FB9DD8()
{
  return MEMORY[0x1F40E61F8]();
}

uint64_t sub_191FB9DE8()
{
  return MEMORY[0x1F40E6268]();
}

uint64_t sub_191FB9DF8()
{
  return MEMORY[0x1F40E62A0]();
}

uint64_t sub_191FB9E08()
{
  return MEMORY[0x1F4183880]();
}

uint64_t sub_191FB9E18()
{
  return MEMORY[0x1F41838B8]();
}

uint64_t sub_191FB9E28()
{
  return MEMORY[0x1F41839B0]();
}

uint64_t sub_191FB9E38()
{
  return MEMORY[0x1F4183A38]();
}

uint64_t sub_191FB9E48()
{
  return MEMORY[0x1F4183A80]();
}

uint64_t sub_191FB9E58()
{
  return MEMORY[0x1F4183A88]();
}

uint64_t sub_191FB9E68()
{
  return MEMORY[0x1F4183AA0]();
}

uint64_t sub_191FB9E78()
{
  return MEMORY[0x1F4183AB0]();
}

uint64_t sub_191FB9E88()
{
  return MEMORY[0x1F4183B10]();
}

uint64_t sub_191FB9E98()
{
  return MEMORY[0x1F4183B30]();
}

uint64_t sub_191FB9EA8()
{
  return MEMORY[0x1F4183B40]();
}

uint64_t sub_191FB9EB8()
{
  return MEMORY[0x1F4183E80]();
}

uint64_t sub_191FB9EC8()
{
  return MEMORY[0x1F40E6338]();
}

uint64_t sub_191FB9ED8()
{
  return MEMORY[0x1F40E6370]();
}

uint64_t sub_191FB9EE8()
{
  return MEMORY[0x1F4183E90]();
}

uint64_t sub_191FB9EF8()
{
  return MEMORY[0x1F4183E98]();
}

uint64_t sub_191FB9F08()
{
  return MEMORY[0x1F4183EC8]();
}

uint64_t sub_191FB9F18()
{
  return MEMORY[0x1F4183EF0]();
}

uint64_t sub_191FB9F28()
{
  return MEMORY[0x1F4183F38]();
}

uint64_t sub_191FB9F38()
{
  return MEMORY[0x1F4187BF0]();
}

uint64_t sub_191FB9F58()
{
  return MEMORY[0x1F4187D18]();
}

uint64_t sub_191FB9F68()
{
  return MEMORY[0x1F4187D38]();
}

uint64_t sub_191FB9F78()
{
  return MEMORY[0x1F4187D70]();
}

uint64_t sub_191FB9F88()
{
  return MEMORY[0x1F4187D78]();
}

uint64_t sub_191FB9F98()
{
  return MEMORY[0x1F4187E68]();
}

uint64_t sub_191FB9FA8()
{
  return MEMORY[0x1F40E6430]();
}

uint64_t sub_191FB9FB8()
{
  return MEMORY[0x1F40E6458]();
}

uint64_t sub_191FB9FC8()
{
  return MEMORY[0x1F4184100]();
}

uint64_t sub_191FB9FD8()
{
  return MEMORY[0x1F4184138]();
}

uint64_t sub_191FB9FE8()
{
  return MEMORY[0x1F41841D0]();
}

uint64_t sub_191FB9FF8()
{
  return MEMORY[0x1F41842D0]();
}

uint64_t sub_191FBA008()
{
  return MEMORY[0x1F41842F8]();
}

uint64_t sub_191FBA018()
{
  return MEMORY[0x1F4184338]();
}

uint64_t sub_191FBA028()
{
  return MEMORY[0x1F4184440]();
}

uint64_t sub_191FBA038()
{
  return MEMORY[0x1F40E6560]();
}

uint64_t sub_191FBA048()
{
  return MEMORY[0x1F41886C0]();
}

uint64_t sub_191FBA058()
{
  return MEMORY[0x1F41886D0]();
}

uint64_t sub_191FBA068()
{
  return MEMORY[0x1F41886E0]();
}

uint64_t sub_191FBA078()
{
  return MEMORY[0x1F41886E8]();
}

uint64_t sub_191FBA088()
{
  return MEMORY[0x1F4188700]();
}

uint64_t sub_191FBA098()
{
  return MEMORY[0x1F4186FB0]();
}

uint64_t sub_191FBA0A8()
{
  return MEMORY[0x1F4186FD8]();
}

uint64_t sub_191FBA0B8()
{
  return MEMORY[0x1F41870A0]();
}

uint64_t sub_191FBA0C8()
{
  return MEMORY[0x1F41870B8]();
}

uint64_t sub_191FBA0D8()
{
  return MEMORY[0x1F41870E0]();
}

uint64_t sub_191FBA0E8()
{
  return MEMORY[0x1F4187100]();
}

uint64_t sub_191FBA0F8()
{
  return MEMORY[0x1F4187178]();
}

uint64_t sub_191FBA108()
{
  return MEMORY[0x1F41871D0]();
}

uint64_t sub_191FBA118()
{
  return MEMORY[0x1F4187230]();
}

uint64_t sub_191FBA128()
{
  return MEMORY[0x1F40E6858]();
}

uint64_t sub_191FBA138()
{
  return MEMORY[0x1F40E6868]();
}

uint64_t sub_191FBA148()
{
  return MEMORY[0x1F40E6880]();
}

uint64_t sub_191FBA158()
{
  return MEMORY[0x1F41874A8]();
}

uint64_t sub_191FBA168()
{
  return MEMORY[0x1F41874C0]();
}

uint64_t sub_191FBA178()
{
  return MEMORY[0x1F41874D0]();
}

uint64_t sub_191FBA188()
{
  return MEMORY[0x1F4188728]();
}

uint64_t sub_191FBA198()
{
  return MEMORY[0x1F4188758]();
}

uint64_t sub_191FBA1A8()
{
  return MEMORY[0x1F4184640]();
}

uint64_t sub_191FBA1B8()
{
  return MEMORY[0x1F40E6B80]();
}

uint64_t sub_191FBA1C8()
{
  return MEMORY[0x1F41847C0]();
}

uint64_t sub_191FBA1D8()
{
  return MEMORY[0x1F4184820]();
}

uint64_t sub_191FBA1E8()
{
  return MEMORY[0x1F4184978]();
}

uint64_t sub_191FBA1F8()
{
  return MEMORY[0x1F4184B18]();
}

uint64_t sub_191FBA208()
{
  return MEMORY[0x1F4184B20]();
}

uint64_t sub_191FBA218()
{
  return MEMORY[0x1F4184B30]();
}

uint64_t sub_191FBA228()
{
  return MEMORY[0x1F4184B60]();
}

uint64_t sub_191FBA238()
{
  return MEMORY[0x1F4184B90]();
}

uint64_t sub_191FBA248()
{
  return MEMORY[0x1F4184BA8]();
}

uint64_t sub_191FBA258()
{
  return MEMORY[0x1F4184BC0]();
}

uint64_t sub_191FBA268()
{
  return MEMORY[0x1F4184BC8]();
}

uint64_t sub_191FBA278()
{
  return MEMORY[0x1F4184C18]();
}

uint64_t sub_191FBA288()
{
  return MEMORY[0x1F4184C20]();
}

uint64_t sub_191FBA298()
{
  return MEMORY[0x1F4184C38]();
}

uint64_t sub_191FBA2A8()
{
  return MEMORY[0x1F4184C88]();
}

uint64_t sub_191FBA2B8()
{
  return MEMORY[0x1F4184C90]();
}

uint64_t sub_191FBA2C8()
{
  return MEMORY[0x1F4184C98]();
}

uint64_t sub_191FBA2D8()
{
  return MEMORY[0x1F4184CA0]();
}

uint64_t sub_191FBA2E8()
{
  return MEMORY[0x1F4184CA8]();
}

uint64_t sub_191FBA2F8()
{
  return MEMORY[0x1F4184CE8]();
}

uint64_t sub_191FBA308()
{
  return MEMORY[0x1F4184CF0]();
}

uint64_t sub_191FBA318()
{
  return MEMORY[0x1F4184D08]();
}

uint64_t sub_191FBA328()
{
  return MEMORY[0x1F4184D10]();
}

uint64_t sub_191FBA338()
{
  return MEMORY[0x1F4184D80]();
}

uint64_t sub_191FBA348()
{
  return MEMORY[0x1F4184D88]();
}

uint64_t sub_191FBA358()
{
  return MEMORY[0x1F4184E68]();
}

uint64_t sub_191FBA368()
{
  return MEMORY[0x1F4184EC8]();
}

uint64_t sub_191FBA378()
{
  return MEMORY[0x1F4184ED8]();
}

uint64_t sub_191FBA388()
{
  return MEMORY[0x1F4184EE8]();
}

uint64_t sub_191FBA398()
{
  return MEMORY[0x1F4184EF0]();
}

uint64_t sub_191FBA3A8()
{
  return MEMORY[0x1F4184F28]();
}

uint64_t sub_191FBA3B8()
{
  return MEMORY[0x1F4184F30]();
}

uint64_t sub_191FBA3C8()
{
  return MEMORY[0x1F4184F48]();
}

uint64_t sub_191FBA3D8()
{
  return MEMORY[0x1F4184F68]();
}

uint64_t sub_191FBA3E8()
{
  return MEMORY[0x1F4184F70]();
}

uint64_t sub_191FBA3F8()
{
  return MEMORY[0x1F4185050]();
}

uint64_t sub_191FBA408()
{
  return MEMORY[0x1F41851F8]();
}

uint64_t sub_191FBA418()
{
  return MEMORY[0x1F4185238]();
}

uint64_t sub_191FBA428()
{
  return MEMORY[0x1F4185260]();
}

uint64_t sub_191FBA438()
{
  return MEMORY[0x1F4185270]();
}

uint64_t sub_191FBA448()
{
  return MEMORY[0x1F4185298]();
}

uint64_t sub_191FBA458()
{
  return MEMORY[0x1F41852A0]();
}

uint64_t sub_191FBA468()
{
  return MEMORY[0x1F41852B0]();
}

uint64_t sub_191FBA478()
{
  return MEMORY[0x1F4185350]();
}

uint64_t sub_191FBA488()
{
  return MEMORY[0x1F4185368]();
}

uint64_t sub_191FBA498()
{
  return MEMORY[0x1F4185370]();
}

uint64_t sub_191FBA4A8()
{
  return MEMORY[0x1F4185378]();
}

uint64_t sub_191FBA4B8()
{
  return MEMORY[0x1F4185380]();
}

uint64_t sub_191FBA4C8()
{
  return MEMORY[0x1F4185398]();
}

uint64_t sub_191FBA4D8()
{
  return MEMORY[0x1F40E6DE0]();
}

uint64_t sub_191FBA4E8()
{
  return MEMORY[0x1F4185498]();
}

uint64_t sub_191FBA4F8()
{
  return MEMORY[0x1F41854F8]();
}

uint64_t sub_191FBA508()
{
  return MEMORY[0x1F4185528]();
}

uint64_t sub_191FBA518()
{
  return MEMORY[0x1F4185568]();
}

uint64_t sub_191FBA528()
{
  return MEMORY[0x1F4185598]();
}

uint64_t sub_191FBA538()
{
  return MEMORY[0x1F4185628]();
}

uint64_t sub_191FBA548()
{
  return MEMORY[0x1F4185658]();
}

uint64_t sub_191FBA558()
{
  return MEMORY[0x1F4185690]();
}

uint64_t sub_191FBA568()
{
  return MEMORY[0x1F41856C0]();
}

uint64_t sub_191FBA578()
{
  return MEMORY[0x1F4185758]();
}

uint64_t sub_191FBA588()
{
  return MEMORY[0x1F4185A30]();
}

uint64_t sub_191FBA598()
{
  return MEMORY[0x1F4185A40]();
}

uint64_t sub_191FBA5A8()
{
  return MEMORY[0x1F4185B90]();
}

uint64_t sub_191FBA5B8()
{
  return MEMORY[0x1F4185D68]();
}

uint64_t sub_191FBA5C8()
{
  return MEMORY[0x1F4185DD8]();
}

uint64_t sub_191FBA5D8()
{
  return MEMORY[0x1F4185DE0]();
}

uint64_t sub_191FBA5E8()
{
  return MEMORY[0x1F4185E00]();
}

uint64_t sub_191FBA5F8()
{
  return MEMORY[0x1F4185E08]();
}

uint64_t sub_191FBA608()
{
  return MEMORY[0x1F4185E10]();
}

uint64_t sub_191FBA618()
{
  return MEMORY[0x1F4185E18]();
}

uint64_t sub_191FBA628()
{
  return MEMORY[0x1F40E6E50]();
}

uint64_t sub_191FBA638()
{
  return MEMORY[0x1F4185E90]();
}

uint64_t sub_191FBA648()
{
  return MEMORY[0x1F4185EB0]();
}

uint64_t sub_191FBA658()
{
  return MEMORY[0x1F4185EC8]();
}

uint64_t sub_191FBA668()
{
  return MEMORY[0x1F4185ED0]();
}

uint64_t sub_191FBA678()
{
  return MEMORY[0x1F4185EE0]();
}

uint64_t sub_191FBA688()
{
  return MEMORY[0x1F4185EF8]();
}

uint64_t sub_191FBA698()
{
  return MEMORY[0x1F40E6EA8]();
}

uint64_t sub_191FBA6A8()
{
  return MEMORY[0x1F4185FC8]();
}

uint64_t sub_191FBA6B8()
{
  return MEMORY[0x1F4185FF0]();
}

CFAllocatorRef CFAllocatorGetDefault(void)
{
  return (CFAllocatorRef)MEMORY[0x1F40D7110]();
}

CFURLRef CFBundleCopyBuiltInPlugInsURL(CFBundleRef bundle)
{
  return (CFURLRef)MEMORY[0x1F40D7440](bundle);
}

CFURLRef CFBundleCopyBundleURL(CFBundleRef bundle)
{
  return (CFURLRef)MEMORY[0x1F40D7450](bundle);
}

CFURLRef CFBundleCopyExecutableURL(CFBundleRef bundle)
{
  return (CFURLRef)MEMORY[0x1F40D7470](bundle);
}

CFArrayRef CFBundleCopyResourceURLsOfType(CFBundleRef bundle, CFStringRef resourceType, CFStringRef subDirName)
{
  return (CFArrayRef)MEMORY[0x1F40D74E8](bundle, resourceType, subDirName);
}

CFBundleRef CFBundleCreate(CFAllocatorRef allocator, CFURLRef bundleURL)
{
  return (CFBundleRef)MEMORY[0x1F40D7528](allocator, bundleURL);
}

CFDictionaryRef CFBundleGetInfoDictionary(CFBundleRef bundle)
{
  return (CFDictionaryRef)MEMORY[0x1F40D7578](bundle);
}

CFMutableDictionaryRef CFDictionaryCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks)
{
  return (CFMutableDictionaryRef)MEMORY[0x1F40D7998](allocator, capacity, keyCallBacks, valueCallBacks);
}

const void *__cdecl CFDictionaryGetValue(CFDictionaryRef theDict, const void *key)
{
  return (const void *)MEMORY[0x1F40D7A10](theDict, key);
}

void CFDictionarySetValue(CFMutableDictionaryRef theDict, const void *key, const void *value)
{
}

CFPropertyListRef CFPreferencesCopyAppValue(CFStringRef key, CFStringRef applicationID)
{
  return (CFPropertyListRef)MEMORY[0x1F40D7EA0](key, applicationID);
}

Boolean CFPreferencesGetAppBooleanValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return MEMORY[0x1F40D7EE0](key, applicationID, keyExistsAndHasValidFormat);
}

void CFRelease(CFTypeRef cf)
{
}

void CFRunLoopAddObserver(CFRunLoopRef rl, CFRunLoopObserverRef observer, CFRunLoopMode mode)
{
}

CFRunLoopRef CFRunLoopGetMain(void)
{
  return (CFRunLoopRef)MEMORY[0x1F40D80B8]();
}

CFRunLoopObserverRef CFRunLoopObserverCreate(CFAllocatorRef allocator, CFOptionFlags activities, Boolean repeats, CFIndex order, CFRunLoopObserverCallBack callout, CFRunLoopObserverContext *context)
{
  return (CFRunLoopObserverRef)MEMORY[0x1F40D80D8](allocator, activities, repeats, order, callout, context);
}

kern_return_t IOConnectCallMethod(mach_port_t connection, uint32_t selector, const uint64_t *input, uint32_t inputCnt, const void *inputStruct, size_t inputStructCnt, uint64_t *output, uint32_t *outputCnt, void *outputStruct, size_t *outputStructCnt)
{
  return MEMORY[0x1F40E86C8](*(void *)&connection, *(void *)&selector, input, *(void *)&inputCnt, inputStruct, inputStructCnt, output, outputCnt);
}

kern_return_t IOObjectRelease(io_object_t object)
{
  return MEMORY[0x1F40E8F60](*(void *)&object);
}

kern_return_t IOServiceClose(io_connect_t connect)
{
  return MEMORY[0x1F40E9240](*(void *)&connect);
}

io_service_t IOServiceGetMatchingService(mach_port_t mainPort, CFDictionaryRef matching)
{
  return MEMORY[0x1F40E9250](*(void *)&mainPort, matching);
}

CFMutableDictionaryRef IOServiceMatching(const char *name)
{
  return (CFMutableDictionaryRef)MEMORY[0x1F40E9268](name);
}

kern_return_t IOServiceOpen(io_service_t service, task_port_t owningTask, uint32_t type, io_connect_t *connect)
{
  return MEMORY[0x1F40E9280](*(void *)&service, *(void *)&owningTask, *(void *)&type, connect);
}

Class NSClassFromString(NSString *aClassName)
{
  return (Class)MEMORY[0x1F40E7010](aClassName);
}

void NSLog(NSString *format, ...)
{
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x1F40E7280](aClass);
}

NSString *__cdecl NSStringFromProtocol(Protocol *proto)
{
  return (NSString *)MEMORY[0x1F40E7298](proto);
}

OSStatus SecCodeCopySigningInformation(SecStaticCodeRef code, SecCSFlags flags, CFDictionaryRef *information)
{
  return MEMORY[0x1F40F6D48](code, *(void *)&flags, information);
}

OSStatus SecCodeMapMemory(SecStaticCodeRef code, SecCSFlags flags)
{
  return MEMORY[0x1F40F6D50](code, *(void *)&flags);
}

uint64_t SecCodeSetDetachedSignature()
{
  return MEMORY[0x1F40F6D58]();
}

OSStatus SecStaticCodeCheckValidity(SecStaticCodeRef staticCode, SecCSFlags flags, SecRequirementRef requirement)
{
  return MEMORY[0x1F40F7110](staticCode, *(void *)&flags, requirement);
}

OSStatus SecStaticCodeCreateWithPath(CFURLRef path, SecCSFlags flags, SecStaticCodeRef *staticCode)
{
  return MEMORY[0x1F40F7120](path, *(void *)&flags, staticCode);
}

uint64_t TCCAccessCopyInformationForBundle()
{
  return MEMORY[0x1F415CB88]();
}

Boolean UTTypeConformsTo(CFStringRef inUTI, CFStringRef inConformsToUTI)
{
  return MEMORY[0x1F40DEE20](inUTI, inConformsToUTI);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1F40C9A70](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

uint64_t _CFBundleCreateUnique()
{
  return MEMORY[0x1F40D8C30]();
}

uint64_t _CFURLAttachSecurityScopeToFileURL()
{
  return MEMORY[0x1F40D91E8]();
}

uint64_t _CFXPCCreateCFObjectFromXPCObject()
{
  return MEMORY[0x1F40D9438]();
}

uint64_t _CFXPCCreateXPCObjectFromCFObject()
{
  return MEMORY[0x1F40D9450]();
}

int *_NSGetArgc(void)
{
  return (int *)MEMORY[0x1F40C9AD0]();
}

char ***_NSGetArgv(void)
{
  return (char ***)MEMORY[0x1F40C9AD8]();
}

uint64_t _NSIsNSArray()
{
  return MEMORY[0x1F40D9490]();
}

uint64_t _NSIsNSData()
{
  return MEMORY[0x1F40D94A8]();
}

uint64_t _NSIsNSDictionary()
{
  return MEMORY[0x1F40D94B8]();
}

uint64_t _NSIsNSNumber()
{
  return MEMORY[0x1F40D94C0]();
}

uint64_t _NSIsNSString()
{
  return MEMORY[0x1F40D94E0]();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

uint64_t __PLUGINKIT_CALLING_OUT_TO_CLIENT_SUBSYSTEM_FOR_INIT__()
{
  return MEMORY[0x1F4144648]();
}

uint64_t __PLUGINKIT_HANDING_CONTROL_TO_MAIN_SERVICE_LISTENER__()
{
  return MEMORY[0x1F4144650]();
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
}

int *__error(void)
{
  return (int *)MEMORY[0x1F40C9B88]();
}

uint64_t _dyld_get_prog_image_header()
{
  return MEMORY[0x1F40C9E38]();
}

os_activity_t _os_activity_create(void *dso, const char *description, os_activity_t activity, os_activity_flag_t flags)
{
  return (os_activity_t)MEMORY[0x1F40C9F70](dso, description, activity, *(void *)&flags);
}

void _os_activity_initiate(void *dso, const char *description, os_activity_flag_t flags, os_block_t activity_block)
{
}

uint64_t _os_assert_log()
{
  return MEMORY[0x1F40C9F90]();
}

uint64_t _os_crash()
{
  return MEMORY[0x1F40C9FA0]();
}

uint64_t _os_feature_enabled_impl()
{
  return MEMORY[0x1F40C9FB0]();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _sl_dlopen()
{
  return MEMORY[0x1F415B160]();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x1F4186370]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1F4186388]();
}

void abort(void)
{
}

uint64_t abort_report_np()
{
  return MEMORY[0x1F40CA1E8]();
}

uint64_t abort_with_reason()
{
  return MEMORY[0x1F40CA1F8]();
}

uint64_t amfi_interface_query_bootarg_state()
{
  return MEMORY[0x1F410AA40]();
}

int atoi(const char *a1)
{
  return MEMORY[0x1F40CA4A8](a1);
}

void audit_token_to_au32(audit_token_t *atoken, uid_t *auidp, uid_t *euidp, gid_t *egidp, uid_t *ruidp, gid_t *rgidp, pid_t *pidp, au_asid_t *asidp, au_tid_t *tidp)
{
}

uid_t audit_token_to_euid(audit_token_t *atoken)
{
  return MEMORY[0x1F417E2D8](atoken);
}

pid_t audit_token_to_pid(audit_token_t *atoken)
{
  return MEMORY[0x1F417E2E8](atoken);
}

int audit_token_to_pidversion(audit_token_t *atoken)
{
  return MEMORY[0x1F417E2F0](atoken);
}

void bzero(void *a1, size_t a2)
{
}

BOOL class_conformsToProtocol(Class cls, Protocol *protocol)
{
  return MEMORY[0x1F41814E0](cls, protocol);
}

const char *__cdecl class_getName(Class cls)
{
  return (const char *)MEMORY[0x1F4181548](cls);
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
}

void dispatch_assert_queue_not_V2(dispatch_queue_t queue)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return (dispatch_queue_global_t)MEMORY[0x1F40CBA60](identifier, flags);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x1F40CBA88]();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return (dispatch_queue_attr_t)MEMORY[0x1F40CBBB8](attr, *(void *)&qos_class, *(void *)&relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x1F40CBBC0](label, attr);
}

dispatch_queue_t dispatch_queue_create_with_target_V2(const char *label, dispatch_queue_attr_t attr, dispatch_queue_t target)
{
  return (dispatch_queue_t)MEMORY[0x1F40CBBD0](label, attr, target);
}

void dispatch_resume(dispatch_object_t object)
{
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x1F40CBC30](value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return MEMORY[0x1F40CBC40](dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return MEMORY[0x1F40CBC50](dsema, timeout);
}

void dispatch_source_cancel(dispatch_source_t source)
{
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return (dispatch_source_t)MEMORY[0x1F40CBC98](type, handle, mask, queue);
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x1F40CBD30](when, delta);
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return (void *)MEMORY[0x1F40CBDC8](__handle, __symbol);
}

uint64_t dyld_get_active_platform()
{
  return MEMORY[0x1F40CBE10]();
}

uint64_t dyld_program_sdk_at_least()
{
  return MEMORY[0x1F40CBEC8]();
}

void exit(int a1)
{
}

void free(void *a1)
{
}

char *__cdecl getenv(const char *a1)
{
  return (char *)MEMORY[0x1F40CC3B0](a1);
}

uid_t geteuid(void)
{
  return MEMORY[0x1F40CC3B8]();
}

gid_t getgid(void)
{
  return MEMORY[0x1F40CC3D0]();
}

pid_t getpid(void)
{
  return MEMORY[0x1F40CC4A0]();
}

const char *getprogname(void)
{
  return (const char *)MEMORY[0x1F40CC4C0]();
}

uint8_t *__cdecl getsectiondata(const mach_header_64 *mhp, const char *segname, const char *sectname, unint64_t *size)
{
  return (uint8_t *)MEMORY[0x1F40CC528](mhp, segname, sectname, size);
}

uid_t getuid(void)
{
  return MEMORY[0x1F40CC570]();
}

uint64_t launch_add_external_service()
{
  return MEMORY[0x1F40CC758]();
}

uint64_t launch_copy_extension_properties()
{
  return MEMORY[0x1F40CC768]();
}

uint64_t launch_copy_extension_properties_for_pid()
{
  return MEMORY[0x1F40CC770]();
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1F40CCB10](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1F40CCB80](ptr);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1F40CCB98](size, type_id);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1F40CCCF0](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1F40CCD10](__dst, __src, __len);
}

uint64_t memorystatus_control()
{
  return MEMORY[0x1F40CCD18]();
}

uint64_t nw_application_id_set_self()
{
  return MEMORY[0x1F40F2920]();
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1F4181638](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1F4181640](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1F4181648]();
}

Protocol *__cdecl objc_allocateProtocol(const char *name)
{
  return (Protocol *)MEMORY[0x1F4181658](name);
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1F4181660](a1);
}

{
  MEMORY[0x1F4181668](context);
}

{
  return (void *)MEMORY[0x1F4181670]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F4181678](a1);
}

id objc_begin_catch(void *exc_buf)
{
  return (id)MEMORY[0x1F4181680](exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1F4181688]();
}

void objc_copyStruct(void *dest, const void *src, ptrdiff_t size, BOOL atomic, BOOL hasStrong)
{
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_end_catch(void)
{
}

void objc_enumerationMutation(id obj)
{
}

void objc_exception_rethrow(void)
{
}

void objc_exception_throw(id exception)
{
}

id objc_getAssociatedObject(id object, const void *key)
{
  return (id)MEMORY[0x1F4181718](object, key);
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x1F4181728](name);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return (id)MEMORY[0x1F4181748](self, _cmd, offset, atomic);
}

Protocol *__cdecl objc_getProtocol(const char *name)
{
  return (Protocol *)MEMORY[0x1F4181750](name);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x1F4181758](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x1F4181780](location);
}

Class objc_lookUpClass(const char *name)
{
  return (Class)MEMORY[0x1F4181788](name);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F4181798](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F41817A8](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1F41817B0]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1F41817B8]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x1F41817C0]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x1F41817C8]();
}

uint64_t self
{
  return MEMORY[0x1F41817D0]();
}

void objc_registerProtocol(Protocol *proto)
{
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1F41818B0](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1F41818B8](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C8](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x1F41818D0](a1);
}

void objc_setAssociatedObject(id object, const void *key, id value, void *policy)
{
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_atomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x1F4181A18](location, obj);
}

void objc_terminate(void)
{
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1F4181A40](a1);
}

void os_activity_scope_enter(os_activity_t activity, os_activity_scope_state_t state)
{
}

void os_activity_scope_leave(os_activity_scope_state_t state)
{
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x1F40CD360](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1F40CD3B8](oslog, type);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return MEMORY[0x1F40CD550](log);
}

os_signpost_id_t os_signpost_id_generate(os_log_t log)
{
  return MEMORY[0x1F40CD558](log);
}

os_signpost_id_t os_signpost_id_make_with_pointer(os_log_t log, const void *ptr)
{
  return MEMORY[0x1F40CD560](log, ptr);
}

uint64_t os_transaction_create()
{
  return MEMORY[0x1F40CD5A0]();
}

void os_unfair_lock_assert_owner(const os_unfair_lock *lock)
{
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t os_variant_has_internal_content()
{
  return MEMORY[0x1F40CD648]();
}

uint64_t pklog_get_persona_type_and_name()
{
  return MEMORY[0x1F4144658]();
}

uint64_t pklog_handle_for_category()
{
  return MEMORY[0x1F4144660]();
}

void protocol_addProtocol(Protocol *proto, Protocol *addition)
{
}

const char *__cdecl protocol_getName(Protocol *p)
{
  return (const char *)MEMORY[0x1F4181B10](p);
}

uint64_t sandbox_check()
{
  return MEMORY[0x1F40CDDD0]();
}

uint64_t sandbox_container_path_for_pid()
{
  return MEMORY[0x1F40CDDE8]();
}

uint64_t sandbox_extension_consume()
{
  return MEMORY[0x1F40CDDF8]();
}

uint64_t sandbox_extension_issue_file()
{
  return MEMORY[0x1F40CDE00]();
}

uint64_t sandbox_extension_issue_file_to_process()
{
  return MEMORY[0x1F40CDE08]();
}

uint64_t sandbox_extension_issue_mach_to_process()
{
  return MEMORY[0x1F40CDE48]();
}

uint64_t sandbox_extension_release()
{
  return MEMORY[0x1F40CDE50]();
}

unsigned int sleep(unsigned int a1)
{
  return MEMORY[0x1F40CE078](*(void *)&a1);
}

char *__cdecl strerror(int __errnum)
{
  return (char *)MEMORY[0x1F40CE188](*(void *)&__errnum);
}

size_t strlcat(char *__dst, const char *__source, size_t __size)
{
  return MEMORY[0x1F40CE1A8](__dst, __source, __size);
}

size_t strlcpy(char *__dst, const char *__source, size_t __size)
{
  return MEMORY[0x1F40CE1B0](__dst, __source, __size);
}

size_t strlen(const char *__s)
{
  return MEMORY[0x1F40CE1C8](__s);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1F41863D0]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1F41863E0]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1F41863E8]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x1F41863F0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1F4186410]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1F4186418]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1F4186420]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1F4186428]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1F4186430]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1F4186440]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1F4186448]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1F4186450]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1F4186458]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1F4186460]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x1F41881F0]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x1F41864A0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1F41864B8]();
}

uint64_t swift_dynamicCastClassUnconditional()
{
  return MEMORY[0x1F41864C8]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1F41864E0]();
}

uint64_t swift_dynamicCastObjCClassUnconditional()
{
  return MEMORY[0x1F41864E8]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1F4186518]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1F4186528]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1F4186530]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x1F4186538]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1F4186540]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x1F4186580]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1F41865A8]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1F41865E0]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1F41865F8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1F4186608]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1F4186610]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1F4186628]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1F4186668]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1F4186670]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1F4186680]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1F4186688]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1F41866A8]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1F41866B8]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x1F41866C8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x1F41866F8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1F4186700]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1F4186710]();
}

uint64_t swift_once()
{
  return MEMORY[0x1F4186728]();
}

uint64_t swift_release()
{
  return MEMORY[0x1F4186758]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1F4186760]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1F4186770]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1F4186778]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1F4186790]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1F4186798]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1F41867A0]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x1F41867A8]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1F4188250]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1F4188260]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x1F41867D8]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1F41867E0]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x1F41867E8]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1F41867F0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x1F41867F8]();
}

uint64_t swift_unknownObjectUnownedDestroy()
{
  return MEMORY[0x1F4186818]();
}

uint64_t swift_unknownObjectUnownedInit()
{
  return MEMORY[0x1F4186820]();
}

uint64_t swift_unknownObjectUnownedLoadStrong()
{
  return MEMORY[0x1F4186828]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x1F4186840]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1F4186858]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x1F4186860]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x1F4186868]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1F4186898]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1F41868E0]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x1F41868E8]();
}

kern_return_t task_info(task_name_t target_task, task_flavor_t flavor, task_info_t task_info_out, mach_msg_type_number_t *task_info_outCnt)
{
  return MEMORY[0x1F40CE470](*(void *)&target_task, *(void *)&flavor, task_info_out, task_info_outCnt);
}

uint64_t terminate_with_reason()
{
  return MEMORY[0x1F40CE500]();
}

uint64_t voucher_get_current_persona()
{
  return MEMORY[0x1F40CE728]();
}

void xpc_connection_activate(xpc_connection_t connection)
{
}

xpc_connection_t xpc_connection_create(const char *name, dispatch_queue_t targetq)
{
  return (xpc_connection_t)MEMORY[0x1F40CEBA8](name, targetq);
}

xpc_connection_t xpc_connection_create_from_endpoint(xpc_endpoint_t endpoint)
{
  return (xpc_connection_t)MEMORY[0x1F40CEBC0](endpoint);
}

uint64_t xpc_connection_kill()
{
  return MEMORY[0x1F40CEC28]();
}

void xpc_connection_set_event_handler(xpc_connection_t connection, xpc_handler_t handler)
{
}

uint64_t xpc_connection_set_oneshot_instance()
{
  return MEMORY[0x1F40CECC0]();
}

uint64_t xpc_copy_bootstrap()
{
  return MEMORY[0x1F40CED08]();
}

uint64_t xpc_copy_entitlement_for_token()
{
  return MEMORY[0x1F40CED38]();
}

int64_t xpc_dictionary_get_int64(xpc_object_t xdict, const char *key)
{
  return MEMORY[0x1F40CEEC8](xdict, key);
}

xpc_object_t xpc_dictionary_get_value(xpc_object_t xdict, const char *key)
{
  return (xpc_object_t)MEMORY[0x1F40CEF10](xdict, key);
}

void xpc_main(xpc_connection_handler_t handler)
{
}

void xpc_release(xpc_object_t object)
{
}

uint64_t xpc_transaction_exit_clean()
{
  return MEMORY[0x1F40CF2F0]();
}

uint64_t xpc_transaction_interrupt_clean_exit()
{
  return MEMORY[0x1F40CF2F8]();
}