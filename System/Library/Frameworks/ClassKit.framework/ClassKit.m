id sub_100002CE4(id result)
{
  void *v1;
  void *v2;
  uint64_t vars8;

  if (result)
  {
    v1 = result;
    [result lock];
    [v1 _initializeSubsystemsIfNeeded];
    return [v1 unlock];
  }
  return result;
}

void *sub_100002DB4(void *a1, uint64_t a2)
{
  if (!a1) {
    return 0;
  }
  v8.receiver = a1;
  v8.super_class = (Class)PDRing;
  v3 = objc_msgSendSuper2(&v8, "init");
  v4 = v3;
  if (v3)
  {
    v3[3] = a2;
    id v5 = [objc_alloc((Class)NSMutableArray) initWithCapacity:v3[3]];
    v6 = (void *)v4[1];
    v4[1] = v5;
  }
  return v4;
}

BOOL sub_100002E34(uint64_t a1, uint64_t a2)
{
  [*(id *)(a1 + 32) setSQLiteRow:a2];
  char v7 = 0;
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  BOOL v5 = v7 == 0;
  return v5;
}

id sub_100002F10(void *a1)
{
  if (a1)
  {
    a1 = sub_100006D08(a1, @"currentUserOrganizationName");
    uint64_t v1 = vars8;
  }
  return a1;
}

id sub_100002F74(void *a1)
{
  if (a1)
  {
    a1 = sub_100006D08(a1, @"currentUserPersonID");
    uint64_t v1 = vars8;
  }
  return a1;
}

void sub_100002FAC(uint64_t a1)
{
  v2 = sub_10000B888();
  if ([v2 containsObject:*(void *)(a1 + 32)])
  {
    [v2 removeObject:*(void *)(a1 + 32)];
  }
  else
  {
    CLSInitLog();
    v3 = CLSLogConnection;
    if (os_log_type_enabled(CLSLogConnection, OS_LOG_TYPE_ERROR))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      int v5 = 138412290;
      uint64_t v6 = v4;
      _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "*** Ending non-existent os_transaction: %@", (uint8_t *)&v5, 0xCu);
    }
  }
}

void sub_10000345C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL sub_100003494(BOOL result)
{
  if (result)
  {
    uint64_t v1 = sub_1000062FC();
    BOOL v2 = sub_10000C6EC((BOOL)v1);

    return v2;
  }
  return result;
}

unsigned __int8 *sub_1000034DC(uint64_t a1, int a2)
{
  switch(sqlite3_column_type(*(sqlite3_stmt **)a1, *(_DWORD *)(a1 + 8) + a2))
  {
    case 1:
      uint64_t v4 = (unsigned __int8 *)objc_msgSend(objc_alloc((Class)NSNumber), "initWithLongLong:", sqlite3_column_int64(*(sqlite3_stmt **)a1, *(_DWORD *)(a1 + 8) + a2));
      break;
    case 2:
      uint64_t v4 = (unsigned __int8 *)objc_msgSend(objc_alloc((Class)NSNumber), "initWithDouble:", sqlite3_column_double(*(sqlite3_stmt **)a1, *(_DWORD *)(a1 + 8) + a2));
      break;
    case 3:
      uint64_t v4 = (unsigned __int8 *)sqlite3_column_text(*(sqlite3_stmt **)a1, *(_DWORD *)(a1 + 8) + a2);
      if (v4) {
        uint64_t v4 = (unsigned __int8 *)[objc_alloc((Class)NSString) initWithUTF8String:v4];
      }
      break;
    case 4:
      if (sqlite3_column_type(*(sqlite3_stmt **)a1, *(_DWORD *)(a1 + 8) + a2) == 5) {
        goto LABEL_6;
      }
      int v5 = *(_DWORD *)(a1 + 8) + a2;
      uint64_t v6 = sqlite3_column_blob(*(sqlite3_stmt **)a1, v5);
      uint64_t v4 = (unsigned __int8 *)objc_msgSend(objc_alloc((Class)NSData), "initWithBytes:length:", v6, sqlite3_column_bytes(*(sqlite3_stmt **)a1, v5));
      break;
    default:
LABEL_6:
      uint64_t v4 = 0;
      break;
  }

  return v4;
}

BOOL sub_100003640(void *a1)
{
  if (!a1) {
    return 0;
  }
  sub_100003A74(a1);
  uint64_t v1 = (unsigned char *)objc_claimAutoreleasedReturnValue();
  if (v1) {
    BOOL v2 = v1[11] != 0;
  }
  else {
    BOOL v2 = 0;
  }

  return v2;
}

uint64_t PDSQLiteColumnWithName(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = sub_10000BF08(a1, (const char *)[v3 UTF8String]);

  return v4;
}

void sub_1000036D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000371C(uint64_t a1, uint64_t *a2)
{
  sub_100003BF0(a2, @"count");
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = [v3 integerValue];
}

void sub_100003784(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    if (sub_100003494((BOOL)a1))
    {
      uint64_t v4 = a1;
      objc_sync_enter(v4);
      if (!v4[8])
      {
        objc_initWeak(&location, v4);
        int v5 = [PDRetry alloc];
        v12[0] = _NSConcreteStackBlock;
        v12[1] = 3221225472;
        v12[2] = sub_100110460;
        v12[3] = &unk_1001F5180;
        objc_copyWeak(&v13, &location);
        uint64_t v6 = sub_100049F38(v5, @"fetchRemoteChanges", 6, v12);
        char v7 = (void *)v4[8];
        v4[8] = v6;

        objc_destroyWeak(&v13);
        objc_destroyWeak(&location);
      }
      objc_sync_exit(v4);

      objc_initWeak(&location, v4);
      objc_super v8 = (void *)v4[8];
      v9[0] = _NSConcreteStackBlock;
      v9[1] = 3221225472;
      v9[2] = sub_10011082C;
      v9[3] = &unk_1001F5270;
      id v10 = v3;
      objc_copyWeak(&v11, &location);
      sub_10004A09C(v8, v9);
      objc_destroyWeak(&v11);

      objc_destroyWeak(&location);
    }
    else if (v3)
    {
      (*((void (**)(id, void))v3 + 2))(v3, 0);
    }
  }
}

void sub_100003944(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak((id *)(v3 - 56));
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

__CFString *sub_100003970(void *a1)
{
  id v1 = a1;
  if ([v1 length])
  {
    BOOL v2 = +[NSString stringWithFormat:@"%@.", v1];
  }
  else
  {
    BOOL v2 = &stru_1001F6580;
  }

  return v2;
}

void sub_1000039E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000039F8(uint64_t a1)
{
  [*(id *)(a1 + 32) UTF8String];
  uint64_t v2 = os_transaction_create();
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;

  sub_10000B888();
  id v5 = (id)objc_claimAutoreleasedReturnValue();
  [v5 addObject:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)];
}

id sub_100003A74(void *a1)
{
  if (a1)
  {
    [a1 lock];
    uint64_t v2 = objc_getAssociatedObject(a1, &off_1001F3DA8);
    if (!v2)
    {
      uint64_t v2 = [a1 select:objc_opt_class() where:0 bindings:0];
      if (v2) {
        objc_setAssociatedObject(a1, &off_1001F3DA8, v2, (void *)1);
      }
    }
    [a1 unlock];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

uint64_t *sub_100003BF0(uint64_t *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    int v4 = PDSQLiteColumnWithName(a1[2], v3);
    if (v4 == -1)
    {
      a1 = 0;
    }
    else
    {
      sub_1000034DC(a1[2], v4);
      a1 = (uint64_t *)objc_claimAutoreleasedReturnValue();
    }
  }

  return a1;
}

BOOL sub_100003CF8()
{
  id v0 = self;
  objc_sync_enter(v0);
  if (byte_10023E910)
  {
    BOOL v1 = 1;
  }
  else
  {
    BOOL v1 = MKBDeviceUnlockedSinceBoot() == 1;
    byte_10023E910 = v1;
  }
  objc_sync_exit(v0);

  return v1;
}

void sub_100003D60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL sub_100003D74(BOOL a1, void *a2)
{
  id v3 = a2;
  int v4 = v3;
  if (a1)
  {
    if ([v3 isEqualToString:@"com.apple.schoolwork.ClassKitApp"])
    {
      a1 = 0;
    }
    else
    {
      uint64_t v5 = objc_opt_class();
      v9 = v4;
      uint64_t v6 = +[NSArray arrayWithObjects:&v9 count:1];
      id v7 = [(id)a1 count:v5 where:@"appIdentifier = ?" bindings:v6];

      a1 = v7 != 0;
    }
  }

  return a1;
}

id sub_100003E58(void *a1)
{
  if (a1)
  {
    [a1 lock];
    uint64_t v2 = objc_getAssociatedObject(a1, &off_1001F3410);
    if (!v2)
    {
      id v3 = sub_100002F74(a1);
      if (v3)
      {
        uint64_t v2 = [a1 select:objc_opt_class() identity:v3];
        if (v2) {
          objc_setAssociatedObject(a1, &off_1001F3410, v2, (void *)1);
        }
      }
      else
      {
        uint64_t v2 = 0;
      }
    }
    [a1 unlock];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

void sub_100003FFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL sub_1000040AC(void *a1)
{
  BOOL v1 = (BOOL)a1;
  if (a1)
  {
    [a1 database];
    uint64_t v8 = 0;
    v9 = &v8;
    uint64_t v10 = 0x2020000000;
    char v11 = 0;
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = sub_1000048B8;
    v4[3] = &unk_1001F33F0;
    id v2 = (id)objc_claimAutoreleasedReturnValue();
    id v5 = v2;
    BOOL v6 = v1;
    id v7 = &v8;
    sub_10000749C(v2, v4);
    BOOL v1 = *((unsigned char *)v9 + 24) != 0;

    _Block_object_dispose(&v8, 8);
  }
  return v1;
}

void sub_10000418C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000041A4(uint64_t a1)
{
  id v2 = [objc_alloc((Class)NSMutableString) initWithString:@"select count(*) as count from "];
  id v3 = [*(id *)(a1 + 64) entityName];
  [v2 appendString:v3];
  if (*(void *)(a1 + 32))
  {
    [v2 appendString:@" where "];
    [v2 appendString:*(void *)(a1 + 32)];
  }
  int v4 = *(void **)(a1 + 40);
  id v5 = *(void **)(a1 + 48);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_10000371C;
  v6[3] = &unk_1001F1F28;
  v6[4] = *(void *)(a1 + 56);
  sub_100007540(v4, v2, 1, v5, v6);
}

void sub_100004718(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

BOOL sub_100004830(BOOL a1)
{
  BOOL v1 = a1;
  if (a1)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 88));
    id v3 = [PDCKBootstrap alloc];
    int v4 = [(id)v1 cloudContainer];
    id v5 = [(PDCKOperation *)v3 initWithDatabase:WeakRetained container:v4];

    BOOL v1 = !sub_1000040AC(v5);
  }
  return v1;
}

void sub_1000048B8(uint64_t a1)
{
  sub_100005B44(*(void **)(a1 + 32));
  id v2 = (unsigned __int8 *)objc_claimAutoreleasedReturnValue();
  if (v2)
  {
    int v3 = v2[9];

    if (v3)
    {
      if ([*(id *)(a1 + 40) maySyncWithProgressZone])
      {
        int v4 = [*(id *)(a1 + 40) progressZone];

        if (!v4) {
          goto LABEL_13;
        }
      }
      if ([*(id *)(a1 + 40) maySyncWithTeacherZone])
      {
        id v5 = [*(id *)(a1 + 40) teacherZone];

        if (!v5) {
          *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
        }
      }
      if ([*(id *)(a1 + 40) maySyncWithAssetZone])
      {
        BOOL v6 = [*(id *)(a1 + 40) assetZone];

        if (!v6) {
          *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
        }
      }
      if ([*(id *)(a1 + 40) maySyncWithSurveyAnswerZone])
      {
        id v7 = [*(id *)(a1 + 40) surveyAnswerZone];

        if (!v7) {
LABEL_13:
        }
          *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
      }
    }
  }
  else
  {
  }
}

void sub_100004AD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100004B84(void *a1)
{
  if (!a1) {
    return 0;
  }
  id v2 = sub_100006A70(a1);
  [a1 lock];
  if (v2)
  {
    id v3 = +[CLSCurrentUser userRolesFromUserLocationIDsByAXMRoleType:v2];
  }
  else
  {
    int v4 = objc_getAssociatedObject(a1, &off_1001F3418);
    id v5 = v4;
    if (v4)
    {
      id v3 = [v4 integerValue];
    }
    else
    {
      id v3 = (id)sub_100004EE8(a1, @"currentUserRole");
      BOOL v6 = +[NSNumber numberWithUnsignedInteger:v3];
      objc_setAssociatedObject(a1, &off_1001F3418, v6, (void *)1);
    }
  }
  [a1 unlock];

  return v3;
}

void sub_100004D98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);

  _Unwind_Resume(a1);
}

void sub_100004ED0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100004EE8(void *a1, void *a2)
{
  if (!a1) {
    return 0;
  }
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = objc_opt_class();
  id v10 = v4;
  BOOL v6 = +[NSArray arrayWithObjects:&v10 count:1];

  id v7 = [v3 select:v5 where:@"name = ?" bindings:v6];

  if (v7) {
    uint64_t v8 = v7[2];
  }
  else {
    uint64_t v8 = 0;
  }

  return v8;
}

id *sub_100004FE0(id *a1, void *a2, void *a3, void *a4)
{
  id v8 = a2;
  id v9 = a3;
  id v10 = a4;
  if (a1)
  {
    v15.receiver = a1;
    v15.super_class = (Class)PDClient;
    char v11 = (id *)objc_msgSendSuper2(&v15, "init");
    a1 = v11;
    if (v11)
    {
      objc_storeStrong(v11 + 2, a2);
      objc_storeStrong(a1 + 4, a3);
      objc_storeStrong(a1 + 5, a4);
      *((unsigned char *)a1 + 25) = [v10 isInternal];
      *((unsigned char *)a1 + 26) = [v10 isDashboardAPIEnabled];
      *((unsigned char *)a1 + 27) = [v10 isSearchAPIEnabled];
      *((unsigned char *)a1 + 28) = [v10 isRegisterDashboardEnabled];
      BOOL v12 = *((unsigned char *)a1 + 25) || *((unsigned char *)a1 + 26) || *((unsigned char *)a1 + 27) != 0;
      *((unsigned char *)a1 + 24) = v12;
      id v13 = a1[2];
      if (v13) {
        LOBYTE(v13) = [v13 isEqualToString:@"com.apple.ClassKit.pdtool"];
      }
      *((unsigned char *)a1 + 29) = (_BYTE)v13;
      *((unsigned char *)a1 + 30) = 0;
    }
  }

  return a1;
}

void sub_100005114(void *a1)
{
  id v1 = a1;
  CLSInitLog();
  id v2 = CLSLogConnection;
  if (v1)
  {
    if (os_log_type_enabled(CLSLogConnection, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 138412290;
      id v7 = v1;
      _os_log_debug_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "<<< ClassKit Daemon transaction end: %@", buf, 0xCu);
    }
    id v3 = sub_10000B834();
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100002FAC;
    block[3] = &unk_1001F2A68;
    id v5 = v1;
    dispatch_sync(v3, block);
  }
  else if (os_log_type_enabled(CLSLogConnection, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)buf = 0;
    _os_log_error_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "Cannot end a nil transaction", buf, 2u);
  }
}

id sub_1000057A0(void *a1)
{
  id v1 = a1;
  CLSInitLog();
  id v2 = CLSLogConnection;
  if (os_log_type_enabled(CLSLogConnection, OS_LOG_TYPE_DEBUG))
  {
    LODWORD(buf) = 138412290;
    *(void *)((char *)&buf + 4) = v1;
    _os_log_debug_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, ">>> ClassKit Daemon transaction begin: %@", (uint8_t *)&buf, 0xCu);
  }
  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v11 = 0x3032000000;
  BOOL v12 = sub_10000B774;
  id v13 = sub_10000B5D4;
  id v14 = 0;
  id v3 = sub_10000B834();
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1000039F8;
  v7[3] = &unk_1001F4DB0;
  id v8 = v1;
  p_long long buf = &buf;
  id v4 = v1;
  dispatch_sync(v3, v7);

  id v5 = *(id *)(*((void *)&buf + 1) + 40);
  _Block_object_dispose(&buf, 8);

  return v5;
}

uint64_t sub_10000594C(uint64_t a1, void *a2, void *a3, void *a4)
{
  BOOL v6 = a2;
  id v7 = a3;
  self;
  if (!v6)
  {
    id v9 = 0;
    goto LABEL_16;
  }
  id v8 = v6[9];
  id v9 = v8;
  if (!v8)
  {
LABEL_16:
    uint64_t v10 = 1;
    goto LABEL_17;
  }
  if (!*((unsigned char *)v6 + 8))
  {
    if (v7)
    {
      id v11 = [v8 isEqualToString:v7];
      uint64_t v10 = (uint64_t)v11;
      if (a4 && (v11 & 1) == 0)
      {
        BOOL v12 = CLSErrorCodeDomain;
        NSErrorUserInfoKey v18 = NSLocalizedDescriptionKey;
        id v13 = +[NSString stringWithFormat:@"Caller does not have the expected user persona, '%@' != '%@'", v7, v9];
        v19 = v13;
        id v14 = &v19;
        objc_super v15 = &v18;
LABEL_14:
        v16 = +[NSDictionary dictionaryWithObjects:v14 forKeys:v15 count:1];
        *a4 = +[NSError errorWithDomain:v12 code:311 userInfo:v16];

        uint64_t v10 = 0;
        goto LABEL_17;
      }
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  if (v7)
  {
    uint64_t v10 = (uint64_t)[v8 isEqualToString:v7];
    if (!a4) {
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v10 = 0;
    if (!a4) {
      goto LABEL_17;
    }
  }
  if ((v10 & 1) == 0)
  {
    BOOL v12 = CLSErrorCodeDomain;
    NSErrorUserInfoKey v20 = NSLocalizedDescriptionKey;
    id v13 = +[NSString stringWithFormat:@"Caller does not have the expected user persona, '%@' != '%@'", v7, v9];
    v21 = v13;
    id v14 = &v21;
    objc_super v15 = &v20;
    goto LABEL_14;
  }
LABEL_17:

  return v10;
}

id sub_100005B44(void *a1)
{
  if (a1)
  {
    [a1 lock];
    id v2 = objc_getAssociatedObject(a1, &off_1001F2C50);
    if (!v2)
    {
      id v2 = [a1 select:objc_opt_class() where:0 bindings:0];
      if (v2) {
        objc_setAssociatedObject(a1, &off_1001F2C50, v2, (void *)1);
      }
    }
    [a1 unlock];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

void sub_100005DDC(uint64_t a1, SEL aSelector)
{
  if (!a1) {
    return;
  }
  uint64_t v16 = NSStringFromSelector(aSelector);
  id v3 = sub_10000BFD8(*(id **)(a1 + 48));
  uint64_t v4 = [v3 objectForKeyedSubscript:@"action"];
  if (!(v4 | v16)) {
    goto LABEL_10;
  }
  id v5 = [v3 objectForKeyedSubscript:@"action"];
  if (v5) {
    BOOL v6 = v16 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (v6)
  {

LABEL_11:
    BOOL v12 = objc_opt_new();
    [v12 setObject:v16 forKeyedSubscript:@"action"];
    [v12 setObject:&off_10020AD70 forKeyedSubscript:@"consecutive-call-count"];
    id v14 = +[NSDate date];
    objc_super v15 = [v14 description];
    [v12 setObject:v15 forKeyedSubscript:@"last-call-date"];

    sub_10000C028(*(void *)(a1 + 48), v12);
    goto LABEL_12;
  }
  id v7 = [v3 objectForKeyedSubscript:@"action"];
  unsigned int v8 = [v7 isEqualToString:v16];

  if (!v8) {
    goto LABEL_11;
  }
LABEL_10:
  id v9 = [v3 objectForKeyedSubscript:@"consecutive-call-count"];
  uint64_t v10 = (char *)[v9 integerValue];

  id v11 = +[NSNumber numberWithInteger:v10 + 1];
  [v3 setObject:v11 forKeyedSubscript:@"consecutive-call-count"];

  BOOL v12 = +[NSDate date];
  id v13 = [v12 description];
  [v3 setObject:v13 forKeyedSubscript:@"last-call-date"];

LABEL_12:
}

id sub_1000062FC()
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000422FC;
  block[3] = &unk_1001F29D0;
  void block[4] = self;
  if (qword_10023E468 != -1) {
    dispatch_once(&qword_10023E468, block);
  }
  uint64_t v4 = 0;
  id v5 = &v4;
  uint64_t v6 = 0x3032000000;
  id v7 = sub_10000B644;
  unsigned int v8 = sub_10000B53C;
  id v9 = 0;
  id v0 = sub_100006464();
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_10000B81C;
  v3[3] = &unk_1001F29F8;
  v3[4] = &v4;
  dispatch_sync(v0, v3);

  id v1 = (id)v5[5];
  _Block_object_dispose(&v4, 8);

  return v1;
}

id sub_100006464()
{
  if (qword_10023E4A0 != -1) {
    dispatch_once(&qword_10023E4A0, &stru_1001F2BC0);
  }
  id v0 = (void *)qword_10023E498;

  return v0;
}

id sub_1000064B8(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = [objc_alloc((Class)CLSCurrentUser) _init];
    uint64_t v5 = sub_1000062FC();
    uint64_t v6 = sub_100003E58(v3);
    [v4 setPerson:v6];

    if (v5)
    {
      id v7 = *(id *)(v5 + 64);
      [v4 setAccountIdentifier:v7];

      unsigned int v8 = *(void **)(v5 + 72);
    }
    else
    {
      [v4 setAccountIdentifier:0];
      unsigned int v8 = 0;
    }
    id v9 = v8;
    [v4 setAccountPersonaUniqueIdentifier:v9];

    uint64_t v10 = sub_100002F10(v3);
    [v4 setOrganizationName:v10];

    [v4 setOrganizationProgressTrackingAllowed:sub_10000C0EC(v3)];
    [v4 setOrganizationMaidAnalyticsEnabled:sub_100003640(v3)];
    [v4 setPersonMaidAnalyticsEnabled:sub_10000C0D8(v3)];
    if (v5)
    {
      [v4 setHandoutServiceAuthenticationState:*(unsigned int *)(v5 + 16)];
      [v4 setICloudDriveAuthenticationState:*(unsigned int *)(v5 + 20)];
      uint64_t v11 = *(unsigned int *)(v5 + 12);
    }
    else
    {
      [v4 setHandoutServiceAuthenticationState:0];
      [v4 setICloudDriveAuthenticationState:0];
      uint64_t v11 = 0;
    }
    [v4 setRosterServiceAuthenticationState:v11];
    [v4 setRoles:sub_100004B84(v3)];
    BOOL v12 = sub_100006A70(v3);
    [v4 setLocationIDsByAXMRoleType:v12];

    if (v5)
    {
      [v4 setHasDataSeparatedAccount:*(unsigned __int8 *)(v5 + 8)];
      BOOL v13 = *(unsigned char *)(v5 + 10) == 0;
    }
    else
    {
      [v4 setHasDataSeparatedAccount:0];
      BOOL v13 = 1;
    }
    [v4 setRequiresPersonaMatch:v13];
    id v14 = [v4 accountPersonaUniqueIdentifier];
    [v4 setClientPersonaUniqueIdentifier:v14];

    [v4 setHasMatchingPersona:1];
    if (v5)
    {
      objc_msgSend(v4, "setHasManagedAccount:", objc_msgSend(*(id *)(v5 + 24), "aa_isManagedAppleID"));
      unsigned int v15 = [a1 mode];
      if (v15 == 2) {
        uint64_t v16 = 2;
      }
      else {
        uint64_t v16 = v15 == 1;
      }
      [v4 setDevMode:v16];
      [v4 setCatalogEnvironment:sub_10000C100(v3)];
      [v4 setHasUbiquityEnabled:*(unsigned __int8 *)(v5 + 9)];
      v17 = *(void **)(v5 + 80);
    }
    else
    {
      [v4 setHasManagedAccount:0];
      unsigned int v35 = [a1 mode];
      if (v35 == 2) {
        uint64_t v36 = 2;
      }
      else {
        uint64_t v36 = v35 == 1;
      }
      [v4 setDevMode:v36];
      [v4 setCatalogEnvironment:sub_10000C100(v3)];
      [v4 setHasUbiquityEnabled:0];
      v17 = 0;
    }
    id v18 = v17;
    [v4 setSchoolworkUbiquitousContainerURL:v18];

    if (v5)
    {
      id v19 = *(id *)(v5 + 88);
      [v4 setSchoolworkUbiquitousContainerError:v19];

      NSErrorUserInfoKey v20 = *(void **)(v5 + 96);
    }
    else
    {
      [v4 setSchoolworkUbiquitousContainerError:0];
      NSErrorUserInfoKey v20 = 0;
    }
    id v21 = v20;
    [v4 setOrgAdminUserRecordID:v21];

    if (v5)
    {
      id v22 = *(id *)(v5 + 104);
      [v4 setOrgAdminUserFetchError:v22];

      v23 = *(void **)(v5 + 112);
    }
    else
    {
      [v4 setOrgAdminUserFetchError:0];
      v23 = 0;
    }
    id v24 = v23;
    [v4 setUserRecordID:v24];

    if (v5)
    {
      id v25 = *(id *)(v5 + 120);
      [v4 setUserFetchError:v25];

      v26 = *(void **)(v5 + 128);
    }
    else
    {
      [v4 setUserFetchError:0];
      v26 = 0;
    }
    id v27 = v26;
    [v4 setMultimediaCacheDirectoryURL:v27];

    if (v5) {
      v28 = *(void **)(v5 + 136);
    }
    else {
      v28 = 0;
    }
    id v29 = v28;
    [v4 setMultimediaCacheDirectoryURLError:v29];

    v30 = [v4 person];

    if (v30)
    {
      uint64_t v31 = [v3 select:objc_opt_class() where:0 bindings:0];
      v32 = (unsigned __int8 *)v31;
      if (v31)
      {
        [v4 setHasEDUAccount:*(unsigned __int8 *)(v31 + 9)];
        [v4 setAllowSharingOutsideOrg:v32[12]];
        BOOL v33 = v32[13] != 0;
      }
      else
      {
        [v4 setHasEDUAccount:0];
        [v4 setAllowSharingOutsideOrg:0];
        BOOL v33 = 0;
      }
      [v4 setClassroomClassicAdHocModeEnabled:v33];
    }
    else
    {
      [v4 setHasEDUAccount:0];
    }
  }
  else
  {
    id v4 = 0;
  }

  return v4;
}

BOOL sub_100006970(void *a1, void *a2)
{
  if (!a1) {
    return 0;
  }
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = objc_opt_class();
  id v10 = v4;
  uint64_t v6 = +[NSArray arrayWithObjects:&v10 count:1];

  [v3 select:v5 where:@"name = ?" bindings:v6];
  id v7 = (unsigned char *)objc_claimAutoreleasedReturnValue();

  if (v7) {
    BOOL v8 = v7[16] != 0;
  }
  else {
    BOOL v8 = 0;
  }

  return v8;
}

id sub_100006A70(void *a1)
{
  if (a1)
  {
    [a1 lock];
    id v2 = objc_getAssociatedObject(a1, &off_1001F3420);
    if (!v2)
    {
      uint64_t v3 = objc_opt_class();
      uint64_t v4 = objc_opt_class();
      uint64_t v5 = objc_opt_class();
      uint64_t v6 = +[NSSet setWithObjects:](NSSet, "setWithObjects:", v3, v4, v5, objc_opt_class(), 0);
      id v2 = sub_100006B88(a1, @"currentUserLocationIDsByRoleType", v6);

      objc_setAssociatedObject(a1, &off_1001F3420, v2, (void *)1);
    }
    [a1 unlock];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id sub_100006B88(void *a1, void *a2, void *a3)
{
  if (a1)
  {
    id v5 = a1;
    id v6 = a3;
    id v7 = a2;
    uint64_t v8 = objc_opt_class();
    id v17 = v7;
    id v9 = +[NSArray arrayWithObjects:&v17 count:1];

    uint64_t v10 = [v5 select:v8 where:@"name = ?" bindings:v9];

    id v11 = v6;
    if (v10)
    {
      if (*(void *)(v10 + 16))
      {
        uint64_t v12 = +[NSKeyedUnarchiver cls_secureUnarchiveObjectOfClasses:withData:](NSKeyedUnarchiver, "cls_secureUnarchiveObjectOfClasses:withData:", v11);
        BOOL v13 = *(void **)(v10 + 24);
        *(void *)(v10 + 24) = v12;

        id v14 = *(void **)(v10 + 16);
        *(void *)(v10 + 16) = 0;
      }
      id v15 = *(id *)(v10 + 24);
    }
    else
    {
      id v15 = 0;
    }
  }
  else
  {
    id v15 = 0;
  }

  return v15;
}

id sub_100006D08(void *a1, void *a2)
{
  if (a1)
  {
    id v3 = a1;
    id v4 = a2;
    uint64_t v5 = objc_opt_class();
    id v11 = v4;
    id v6 = +[NSArray arrayWithObjects:&v11 count:1];
    id v7 = [v3 select:v5 where:@"name = ?" bindings:v6];

    if (v7) {
      uint64_t v8 = (void *)v7[2];
    }
    else {
      uint64_t v8 = 0;
    }
    id v9 = v8;
  }
  else
  {
    id v9 = 0;
  }

  return v9;
}

void sub_10000734C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10000749C(id a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (a1)
  {
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_1000087D4;
    v6[3] = &unk_1001F4E80;
    id v7 = v3;
    a1 = [a1 performTransaction:v6 forWriting:0];
  }
  return a1;
}

uint64_t sub_100007540(void *a1, void *a2, int a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a4;
  id v11 = a5;
  uint64_t v12 = v11;
  if (a1)
  {
    if (v11)
    {
      BOOL v13 = objc_alloc_init(PDDatabaseRow);
      id v14 = v13;
      if (v13) {
        objc_storeWeak((id *)&v13->_owner, a1);
      }
      v31[0] = _NSConcreteStackBlock;
      v31[1] = 3221225472;
      v31[2] = sub_100002E34;
      v31[3] = &unk_1001F3D60;
      v32 = v14;
      id v33 = v12;
      id v15 = v14;
      uint64_t v16 = objc_retainBlock(v31);
    }
    else
    {
      uint64_t v16 = 0;
    }
    v29[0] = _NSConcreteStackBlock;
    v29[1] = 3221225472;
    v29[2] = sub_100009908;
    v29[3] = &unk_1001F3D88;
    id v30 = v10;
    id v17 = objc_retainBlock(v29);
    id v18 = [a1 currentDB];
    id v19 = v18;
    if (v18)
    {
      if (a3)
      {
        v28 = 0;
        unsigned __int8 v20 = [v18 executeSQL:v9 error:&v28 bindingHandler:v17 enumerationHandler:v16];
        id v21 = v28;
      }
      else
      {
        id v27 = 0;
        unsigned __int8 v20 = [v18 executeUncachedSQL:v9 error:&v27 bindingHandler:v17 enumerationHandler:v16];
        id v21 = v27;
      }
      id v23 = v21;
      if (v20)
      {
        char v22 = 1;
      }
      else
      {
        CLSInitLog();
        id v24 = CLSLogDatabase;
        if (os_log_type_enabled(CLSLogDatabase, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)long long buf = 138412546;
          id v36 = v9;
          __int16 v37 = 2114;
          id v38 = v23;
          _os_log_debug_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEBUG, "execute \"%@\" failed; %{public}@",
            buf,
            0x16u);
        }
        char v22 = 0;
      }
    }
    else
    {
      char v22 = 0;
      id v23 = 0;
    }
    unsigned __int8 v34 = v22;

    uint64_t v25 = v34;
  }
  else
  {
    uint64_t v25 = 0;
  }

  return v25;
}

void sub_100007930(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_100007F48(_Unwind_Exception *a1)
{
  operator delete(v2);

  _Unwind_Resume(a1);
}

void sub_10000847C()
{
  objc_end_catch();
  JUMPOUT(0x100008554);
}

void sub_10000848C()
{
  objc_end_catch();
  if (v3) {
    objc_end_catch();
  }

  JUMPOUT(0x100008578);
}

void sub_10000849C()
{
}

void sub_100008564(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_10004AD70(a1);
  }
  _Unwind_Resume(a1);
}

void sub_100008728(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10000878C(uint64_t a1)
{
  uint64_t v3 = (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
  return v3;
}

uint64_t sub_1000087D4(uint64_t a1)
{
  return 1;
}

void sub_100008944(_Unwind_Exception *a1)
{
  objc_end_catch();

  _Unwind_Resume(a1);
}

BOOL sub_100008B20(void *a1, sqlite3_stmt *pStmt, uint64_t a3)
{
  uint64_t v6 = a1[4];
  if (v6) {
    (*(void (**)(uint64_t, sqlite3_stmt *))(v6 + 16))(v6, pStmt);
  }
  if (!a1[5])
  {
    BOOL v16 = +[PDSQLiteDatabase _stepStatement:pStmt hasRow:0 resultCode:0 error:a3];
    sqlite3_reset(pStmt);
    return v16;
  }
  id v19 = pStmt;
  int v20 = 0;
  int v21 = sqlite3_column_count(pStmt);
  memset(v22, 0, sizeof(v22));
  int v23 = 1065353216;
  id v7 = 0;
  unsigned __int8 v18 = 0;
  while (1)
  {
    BOOL v8 = +[PDSQLiteDatabase _stepStatement:pStmt hasRow:&v18 resultCode:0 error:a1[6]];
    uint64_t v9 = v8;
    int v10 = v18;
    if (v18) {
      BOOL v11 = v8;
    }
    else {
      BOOL v11 = 0;
    }
    if (!v11) {
      goto LABEL_11;
    }
    int v13 = (*(uint64_t (**)(void))(a1[5] + 16))();
    id v14 = v7;

    if (!v13) {
      break;
    }
    int v10 = v18;
    id v7 = v14;
LABEL_11:
    if (v10) {
      char v15 = v9;
    }
    else {
      char v15 = 0;
    }
    if ((v15 & 1) == 0)
    {
      if (!v7) {
        goto LABEL_20;
      }
      goto LABEL_19;
    }
  }
  uint64_t v9 = 1;
  id v7 = v14;
  if (!v14) {
    goto LABEL_20;
  }
LABEL_19:
  +[NSError cls_assignError:a3 fromError:v7];
  uint64_t v9 = 0;
LABEL_20:

  sub_100008CEC((uint64_t)v22);
  return v9;
}

void sub_100008CC4(_Unwind_Exception *a1)
{
  sub_100008CEC(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100008CEC(uint64_t a1)
{
  id v2 = *(void **)(a1 + 16);
  if (v2)
  {
    do
    {
      uint64_t v3 = (void *)*v2;
      operator delete(v2);
      id v2 = v3;
    }
    while (v3);
  }
  id v4 = *(void **)a1;
  *(void *)a1 = 0;
  if (v4) {
    operator delete(v4);
  }
  return a1;
}

void sub_100009410(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v17 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_100009784(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1000097A0(sqlite3 *a1, const char *a2, int (__cdecl *a3)(void *, int, char **, char **), void *a4, char **a5)
{
  uint64_t v5 = a5;
  uint64_t v6 = a4;
  id v7 = a3;
  BOOL v8 = a2;
  uint64_t v9 = a1;
  while (1)
  {
    uint64_t result = sqlite3_exec(a1, a2, a3, a4, a5);
    if (result != 5) {
      break;
    }
    usleep(0x14u);
    a1 = v9;
    a2 = v8;
    a3 = v7;
    a4 = v6;
    a5 = v5;
  }
  return result;
}

void sub_100009810(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 72) entityName];
  uint64_t v3 = *(void **)(a1 + 32);
  id v4 = *(void **)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 80);
  uint64_t v6 = *(void *)(a1 + 88);
  id v7 = *(void **)(a1 + 48);
  BOOL v8 = *(void **)(a1 + 56);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_1000E7F98;
  v11[3] = &unk_1001F4878;
  long long v10 = *(_OWORD *)(a1 + 64);
  id v9 = (id)v10;
  long long v12 = v10;
  sub_10000A2B8(v3, @"*", v2, v4, 0, v7, v5, v6, v8, v11);
}

id sub_100009908(uint64_t a1, sqlite3_stmt *a2)
{
  id result = [*(id *)(a1 + 32) count];
  if (result)
  {
    uint64_t v5 = *(void **)(a1 + 32);
    return (id)sub_100009960(a2, 1, v5);
  }
  return result;
}

uint64_t sub_100009960(sqlite3_stmt *a1, int a2, void *a3)
{
  LODWORD(v6) = a2;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v4 = a3;
  id v5 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
  uint64_t v6 = v6;
  if (v5)
  {
    uint64_t v7 = *(void *)v12;
    do
    {
      BOOL v8 = 0;
      int v9 = v6;
      do
      {
        if (*(void *)v12 != v7) {
          objc_enumerationMutation(v4);
        }
        sub_100009AA4(a1, v6 + v8, *(void **)(*((void *)&v11 + 1) + 8 * (void)v8));
        BOOL v8 = (char *)v8 + 1;
      }
      while (v5 != v8);
      id v5 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
      LODWORD(v6) = v6 + v8;
    }
    while (v5);
    uint64_t v6 = (v9 + v8);
  }

  return v6;
}

void sub_100009A80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100009AA4(sqlite3_stmt *a1, int a2, void *a3)
{
  id v5 = a3;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v6 = (const char *)[v5 UTF8String];
    if (v6) {
      uint64_t v7 = v6;
    }
    else {
      uint64_t v7 = "";
    }
    sqlite3_bind_text(a1, a2, v7, -1, 0);
    goto LABEL_20;
  }
  if (!v5 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    sqlite3_bind_null(a1, a2);
    goto LABEL_20;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    [v5 timeIntervalSinceReferenceDate];
LABEL_11:
    sqlite3_bind_double(a1, a2, v8);
    goto LABEL_20;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    if (!sub_1000C0F24((unint64_t)v5))
    {
      sqlite3_bind_int64(a1, a2, (sqlite3_int64)[v5 longLongValue]);
      goto LABEL_20;
    }
    [v5 doubleValue];
    goto LABEL_11;
  }
  int v9 = (const char *)[v5 bytes];
  int v10 = [v5 length];
  if (v9) {
    long long v11 = v9;
  }
  else {
    long long v11 = "";
  }
  sqlite3_bind_blob(a1, a2, v11, v10, 0);
LABEL_20:

  return (a2 + 1);
}

void sub_100009C24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100009CC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100009DF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_100009E10(uint64_t a1)
{
  if (!a1)
  {
LABEL_8:
    id v2 = 0;
    goto LABEL_9;
  }
  [(id)a1 lock];
  if ([*(id *)(a1 + 16) count])
  {
    id v2 = [*(id *)(a1 + 16) objectAtIndexedSubscript:0];
    [*(id *)(a1 + 16) removeObjectAtIndex:0];
    if (v2)
    {
      [(id)a1 unlock];
      goto LABEL_9;
    }
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = [WeakRetained poolItemForPool:a1];

  [(id)a1 unlock];
  if (!v2)
  {
    CLSInitLog();
    id v4 = (void *)CLSLogDefault;
    if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_ERROR))
    {
      uint64_t v6 = *(void *)(a1 + 40);
      int v8 = 138412290;
      uint64_t v9 = v6;
      uint64_t v7 = v4;
      _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Failed to acquire item from the pool (%@)", (uint8_t *)&v8, 0xCu);
    }
    goto LABEL_8;
  }
LABEL_9:

  return v2;
}

void sub_100009F5C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (a1)
  {
    if (v3)
    {
      [(id)a1 lock];
      if ((unint64_t)[*(id *)(a1 + 16) count] >= *(void *)(a1 + 48))
      {
        CLSInitLog();
        uint64_t v9 = (void *)CLSLogDefault;
        if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v10 = *(void *)(a1 + 40);
          uint64_t v11 = *(void *)(a1 + 48);
          *(_DWORD *)long long v13 = 134218498;
          *(void *)&v13[4] = v4;
          *(_WORD *)&v13[12] = 2112;
          *(void *)&v13[14] = v10;
          *(_WORD *)&v13[22] = 2048;
          uint64_t v14 = v11;
          long long v12 = v9;
          _os_log_debug_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "Not adding to item (%p) because the pool (%@) is full (%ld)", v13, 0x20u);
        }
        objc_msgSend(v4, "pd_close", *(_OWORD *)v13, *(void *)&v13[16], v14);
      }
      else
      {
        [*(id *)(a1 + 16) addObject:v4];
        [(id)a1 _scheduleDrain];
      }
      [(id)a1 unlock];
    }
    else
    {
      CLSInitLog();
      id v5 = (void *)CLSLogDefault;
      if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_ERROR))
      {
        uint64_t v6 = *(void **)(a1 + 40);
        id v7 = v6;
        int v8 = v5;
        *(_DWORD *)long long v13 = 134218498;
        *(void *)&v13[4] = 0;
        *(_WORD *)&v13[12] = 2112;
        *(void *)&v13[14] = v6;
        *(_WORD *)&v13[22] = 2112;
        uint64_t v14 = objc_opt_class();
        _os_log_error_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "Failed to release item (%p) from pool (%@) of class '%@'", v13, 0x20u);
      }
    }
  }
}

void *sub_10000A2B8(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  id v15 = a4;
  id v16 = a5;
  id v17 = a6;
  id v18 = a9;
  id v19 = a10;
  if (a1)
  {
    id v20 = a3;
    id v21 = a2;
    id v22 = [objc_alloc((Class)NSMutableString) initWithString:@"select "];
    [v22 appendString:v21];

    [v22 appendString:@" from "];
    [v22 appendString:v20];

    if ([v15 length])
    {
      [v22 appendString:@" where "];
      [v22 appendString:v15];
    }
    if ([v16 length])
    {
      [v22 appendString:@" group by "];
      [v22 appendString:v16];
    }
    if ([v17 length])
    {
      [v22 appendString:@" order by "];
      [v22 appendString:v17];
    }
    if (a7) {
      objc_msgSend(v22, "appendFormat:", @" limit %ld offset %ld", a7, a8);
    }
    a1 = (void *)sub_100007540(a1, v22, 1, v18, v19);
  }
  return a1;
}

void sub_10000AAD0(uint64_t a1)
{
  if (!sub_100004830(*(void *)(*(void *)(a1 + 32) + 72))) {
    sub_100003784(*(void **)(*(void *)(a1 + 32) + 72), 0);
  }
  signed int v2 = [*(id *)(a1 + 40) processIdentifier];
  CLSInitLog();
  id v3 = CLSLogDefault;
  if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)long long buf = 67109120;
    LODWORD(v75) = v2;
    _os_log_debug_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, ">>> new connection from process (pid: %d)", buf, 8u);
  }
  signed int v59 = v2;
  if (sub_100003CF8())
  {
    uint64_t v4 = *(void *)(a1 + 32);
    if (v4 && *(void *)(v4 + 128))
    {
      id v5 = objc_alloc((Class)CLSEntitlements);
      uint64_t v6 = *(void *)(a1 + 32);
      if (v6) {
        uint64_t v7 = *(void *)(v6 + 128);
      }
      else {
        uint64_t v7 = 0;
      }
      id v61 = [v5 initWithEntitlements:v7];
      [*(id *)(a1 + 32) appIdentifierForConnection:*(void *)(a1 + 40) withEntitlements:v61];
    }
    else
    {
      uint64_t v9 = *(void *)(a1 + 40);
      id v73 = 0;
      id v61 = +[CLSEntitlements entitlementsWithConnection:v9 error:&v73];
      id v10 = v73;
      if (!v61)
      {
        id v18 = v10;
        CLSInitLog();
        id v19 = CLSLogDefault;
        if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)long long buf = 138543362;
          id v75 = v18;
          _os_log_error_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_ERROR, "Unable to determine entitlements: %{public}@", buf, 0xCu);
        }
        goto LABEL_77;
      }

      [*(id *)(a1 + 32) appIdentifierForConnection:*(void *)(a1 + 40) withEntitlements:v61];
    v62 = };
    if (!v62)
    {
      CLSInitLog();
      id v17 = CLSLogDefault;
      if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)long long buf = 134217984;
        id v75 = (id)v2;
        _os_log_error_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_ERROR, "can't figure out bundle identifier for pid: %ld; refusing connection",
          buf,
          0xCu);
      }
      id v58 = 0;
      goto LABEL_76;
    }
    uint64_t v11 = [v61 classKitEnvironment];
    uint64_t v12 = CLSClassKitEnvironmentDevelopment;
    if (v11 | CLSClassKitEnvironmentDevelopment)
    {
      BOOL v13 = CLSClassKitEnvironmentDevelopment != 0;
      uint64_t v14 = [v61 classKitEnvironment];
      if (v14) {
        BOOL v15 = v13;
      }
      else {
        BOOL v15 = 0;
      }
      if (v15)
      {
        id v16 = [v61 classKitEnvironment];
        if ([v16 isEqualToString:v12])
        {
          unsigned int v57 = 1;
        }
        else if ([*(id *)(a1 + 32) mode])
        {
          unsigned int v57 = [v61 isDashboardAPIEnabled];
        }
        else
        {
          unsigned int v57 = 0;
        }
      }
      else if ([*(id *)(a1 + 32) mode])
      {
        unsigned int v57 = [v61 isDashboardAPIEnabled];
      }
      else
      {
        unsigned int v57 = 0;
      }
    }
    else
    {
      unsigned int v57 = 1;
    }

    unsigned int v20 = [v61 isInternal];
    unsigned int v55 = [v62 isEqualToString:@"com.apple.classroom.instructord"];
    unsigned int v54 = [v62 isEqualToString:@"com.apple.studentd"];
    unsigned int v21 = [v62 isEqualToString:@"com.apple.accountsd"];
    unsigned int v22 = [v62 isEqualToString:@"com.apple.ClassKit.pdtool"];
    unsigned int v23 = [v62 isEqualToString:@"com.apple.Preferences"];
    HIDWORD(v56) = [v62 isEqualToString:@"com.apple.schoolwork.ClassKitApp"];
    LODWORD(v56) = [v62 isEqualToString:@"com.apple.classroom"];
    uint64_t v24 = sub_1000062FC();
    v60 = (id *)v24;
    if (v24)
    {
      if (objc_msgSend(*(id *)(v24 + 24), "aa_isManagedAppleID")) {
        unsigned int v25 = [v61 isSearchAPIEnabled];
      }
      else {
        unsigned int v25 = 0;
      }
      unsigned int v26 = objc_msgSend(v60[3], "aa_isManagedAppleID");
    }
    else
    {
      unsigned int v25 = 0;
      unsigned int v26 = 0;
    }
    int v27 = v21 & v20;
    int v28 = v22 & v20;
    int v29 = v23 & v20;
    id v30 = v60;
    if ((v26 | v57 | v22 & v20 | v23 & v20))
    {
      char v31 = 1;
    }
    else
    {
      char v31 = v27 | v25;
      if ((v27 | v25) != 1 && v56)
      {
        CLSInitLog();
        v32 = CLSLogDefault;
        if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, "No User Mode: allowing Schoolwork/Classroom to connect", buf, 2u);
        }
        char v31 = 1;
        id v30 = v60;
      }
    }
    if (v30) {
      BOOL v33 = *((unsigned char *)v30 + 10) != 0;
    }
    else {
      BOOL v33 = 0;
    }
    unsigned __int8 v34 = CLSCurrentPersonaUniqueIdentifier();
    id v72 = 0;
    int v35 = sub_10000594C((uint64_t)PDAccountInfo, v60, v34, &v72);
    id v58 = v72;

    if ((v33 | v35 | HIDWORD(v56) | v56 | v55 | v54 & v20 | v57 | v28 | v29 | v27 | v25))
    {
      if (!sub_100003D74(*(void *)(*(void *)(a1 + 32) + 16), v62))
      {
        id v38 = sub_100004FE0((id *)[PDClient alloc], v62, *(void **)(a1 + 40), v61);
        v39 = v38;
        if (v38)
        {
          *((unsigned char *)v38 + 30) = v31;
          if (*((unsigned char *)v38 + 28)) {
            [*(id *)(a1 + 32) registerDashboardAppIfNeeded:v62];
          }
          v40 = off_1001F1478;
          if (!v57) {
            v40 = off_1001F1480;
          }
          id v41 = [objc_alloc(*v40) initWithClient:v39 daemon:*(void *)(a1 + 32)];
          if (v41)
          {
            v42 = sub_1000057A0(@"DaemonListenerConnectionInitTransaction");
            v43 = CLSEndpointServerInterface();
            [*(id *)(a1 + 40) setExportedInterface:v43];

            [*(id *)(a1 + 40) setExportedObject:v41];
            v44 = CLSClientInterface();
            [*(id *)(a1 + 40) setRemoteObjectInterface:v44];

            objc_initWeak(&location, *(id *)(a1 + 32));
            v67[0] = _NSConcreteStackBlock;
            v67[1] = 3221225472;
            v67[2] = sub_1000CC158;
            v67[3] = &unk_1001F4268;
            signed int v70 = v59;
            objc_copyWeak(&v69, &location);
            id v45 = v41;
            id v68 = v45;
            [*(id *)(a1 + 40) setInvalidationHandler:v67];
            v63[0] = _NSConcreteStackBlock;
            v63[1] = 3221225472;
            v63[2] = sub_1000CC248;
            v63[3] = &unk_1001F4268;
            signed int v66 = v59;
            objc_copyWeak(&v65, &location);
            id v46 = v45;
            id v64 = v46;
            [*(id *)(a1 + 40) setInterruptionHandler:v63];
            CLSInitLog();
            v47 = CLSLogDefault;
            if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)long long buf = 138412546;
              id v75 = v62;
              __int16 v76 = 1024;
              signed int v77 = v59;
              _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_INFO, "creating PDEndpointServer for %@ (pid: %d).", buf, 0x12u);
            }
            [*(id *)(a1 + 32) lock];
            v48 = *(void **)(a1 + 32);
            if (v48) {
              v48 = (void *)v48[4];
            }
            v49 = v48;
            [v49 addObject:v46];

            [*(id *)(a1 + 32) unlock];
            v50 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
            dispatch_queue_t v51 = dispatch_queue_create_with_target_V2("com.apple.progressd.xpcConnection", v50, *(dispatch_queue_t *)(*(void *)(a1 + 32) + 120));

            [*(id *)(a1 + 40) _setQueue:v51];
            sub_100005114(v42);
            *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;

            objc_destroyWeak(&v65);
            objc_destroyWeak(&v69);
            objc_destroyWeak(&location);
          }
          else
          {
            CLSInitLog();
            v53 = CLSLogDefault;
            if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)long long buf = 138543362;
              id v75 = v58;
              _os_log_error_impl((void *)&_mh_execute_header, v53, OS_LOG_TYPE_ERROR, "Failed to create server for connection: %{public}@", buf, 0xCu);
            }
          }
        }
        else
        {
          CLSInitLog();
          v52 = CLSLogDefault;
          if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)long long buf = 138543362;
            id v75 = v58;
            _os_log_error_impl((void *)&_mh_execute_header, v52, OS_LOG_TYPE_ERROR, "Failed to create client for connection: %{public}@", buf, 0xCu);
          }
        }

        goto LABEL_75;
      }
      CLSInitLog();
      id v36 = CLSLogDefault;
      if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)long long buf = 138412290;
        id v75 = v62;
        __int16 v37 = "app with identifier: %@ is blocked - refusing connection;";
LABEL_57:
        _os_log_error_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_ERROR, v37, buf, 0xCu);
      }
    }
    else
    {
      CLSInitLog();
      id v36 = CLSLogDefault;
      if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)long long buf = 138412290;
        id v75 = v58;
        __int16 v37 = "Unexpected persona! Error: %@";
        goto LABEL_57;
      }
    }
LABEL_75:

LABEL_76:
    id v18 = v58;
LABEL_77:

    return;
  }
  CLSInitLog();
  int v8 = CLSLogDefault;
  if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "System locked! Refusing connection.", buf, 2u);
  }
}

void sub_10000B4F0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak(v2);
  objc_destroyWeak((id *)(v3 - 168));
  _Unwind_Resume(a1);
}

void sub_10000B52C(uint64_t a1)
{
}

void sub_10000B534(uint64_t a1)
{
}

void sub_10000B53C(uint64_t a1)
{
}

void sub_10000B544(uint64_t a1)
{
}

void sub_10000B54C(uint64_t a1)
{
}

void sub_10000B554(uint64_t a1)
{
}

void sub_10000B55C(uint64_t a1)
{
}

void sub_10000B564(uint64_t a1)
{
}

void sub_10000B56C(uint64_t a1)
{
}

void sub_10000B574(uint64_t a1)
{
}

void sub_10000B57C(uint64_t a1)
{
}

void sub_10000B584(uint64_t a1)
{
}

void sub_10000B58C(uint64_t a1)
{
}

void sub_10000B594(uint64_t a1)
{
}

void sub_10000B59C(uint64_t a1)
{
}

void sub_10000B5A4(uint64_t a1)
{
}

void sub_10000B5AC(uint64_t a1)
{
}

void sub_10000B5B4(uint64_t a1)
{
}

void sub_10000B5BC(uint64_t a1)
{
}

void sub_10000B5C4(uint64_t a1)
{
}

void sub_10000B5CC(uint64_t a1)
{
}

void sub_10000B5D4(uint64_t a1)
{
}

void sub_10000B5DC(uint64_t a1)
{
}

void sub_10000B5E4(uint64_t a1)
{
}

void sub_10000B5EC(uint64_t a1)
{
}

void sub_10000B5F4(uint64_t a1)
{
}

void sub_10000B5FC(uint64_t a1)
{
}

void sub_10000B604(uint64_t a1)
{
}

void sub_10000B60C(uint64_t a1)
{
}

void sub_10000B614(uint64_t a1)
{
}

void sub_10000B61C(uint64_t a1)
{
}

uint64_t sub_10000B624(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10000B634(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10000B644(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10000B654(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10000B664(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10000B674(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10000B684(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10000B694(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10000B6A4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10000B6B4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10000B6C4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10000B6D4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10000B6E4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10000B6F4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10000B704(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10000B714(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10000B724(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10000B734(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10000B744(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10000B754(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10000B764(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10000B774(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10000B784(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10000B794(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10000B7A4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10000B7B4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10000B7C4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10000B7D4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10000B7E4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10000B7F4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_10000B804(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10000B81C(uint64_t a1)
{
}

id sub_10000B834()
{
  if (qword_10023E6E8 != -1) {
    dispatch_once(&qword_10023E6E8, &stru_1001F4DF0);
  }
  id v0 = (void *)qword_10023E6E0;

  return v0;
}

id sub_10000B888()
{
  if (qword_10023E6F8 != -1) {
    dispatch_once(&qword_10023E6F8, &stru_1001F4E10);
  }
  id v0 = (void *)qword_10023E6F0;

  return v0;
}

uint64_t sub_10000B8DC(uint64_t a1, uint64_t a2)
{
  **(void **)(a1 + 40) = sqlite3_column_int64(*(sqlite3_stmt **)a2, *(_DWORD *)(a2 + 8));
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 1;
  return 0;
}

void sub_10000B924(uint64_t a1, size_t __n)
{
  if (__n == 1)
  {
    size_t prime = 2;
  }
  else
  {
    size_t prime = __n;
    if ((__n & (__n - 1)) != 0) {
      size_t prime = std::__next_prime(__n);
    }
  }
  int8x8_t v4 = *(int8x8_t *)(a1 + 8);
  if (prime > *(void *)&v4) {
    goto LABEL_16;
  }
  if (prime < *(void *)&v4)
  {
    unint64_t v5 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(void *)&v4 < 3uLL || (uint8x8_t v6 = (uint8x8_t)vcnt_s8(v4), v6.i16[0] = vaddlv_u8(v6), v6.u32[0] > 1uLL))
    {
      unint64_t v5 = std::__next_prime(v5);
    }
    else
    {
      uint64_t v7 = 1 << -(char)__clz(v5 - 1);
      if (v5 >= 2) {
        unint64_t v5 = v7;
      }
    }
    if (prime <= v5) {
      size_t prime = v5;
    }
    if (prime < *(void *)&v4)
    {
LABEL_16:
      sub_10000BDAC(a1, prime);
    }
  }
}

uint64_t **sub_10000BA14(void *a1, const char **a2)
{
  signed int v2 = *a2;
  char v3 = **a2;
  if (v3)
  {
    unint64_t v4 = 0;
    unint64_t v5 = (unsigned __int8 *)(v2 + 1);
    do
    {
      unint64_t v4 = (1025 * (v4 + v3)) ^ ((1025 * (v4 + v3)) >> 6);
      int v6 = *v5++;
      char v3 = v6;
    }
    while (v6);
    unint64_t v7 = 9 * v4;
  }
  else
  {
    unint64_t v7 = 0;
  }
  int8x8_t v8 = (int8x8_t)a1[1];
  if (!*(void *)&v8) {
    return 0;
  }
  unint64_t v9 = 32769 * (v7 ^ (v7 >> 11));
  uint8x8_t v10 = (uint8x8_t)vcnt_s8(v8);
  v10.i16[0] = vaddlv_u8(v10);
  unint64_t v11 = v10.u32[0];
  if (v10.u32[0] > 1uLL)
  {
    uint64_t v12 = 32769 * (v7 ^ (v7 >> 11));
    if (v9 >= *(void *)&v8) {
      uint64_t v12 = v9 % *(void *)&v8;
    }
  }
  else
  {
    uint64_t v12 = v9 & (*(void *)&v8 - 1);
  }
  BOOL v13 = *(uint64_t ****)(*a1 + 8 * v12);
  if (!v13) {
    return 0;
  }
  for (i = *v13; i; i = (uint64_t **)*i)
  {
    unint64_t v15 = (unint64_t)i[1];
    if (v15 == v9)
    {
      if (!strcmp((const char *)i[2], v2)) {
        return i;
      }
    }
    else
    {
      if (v11 > 1)
      {
        if (v15 >= *(void *)&v8) {
          v15 %= *(void *)&v8;
        }
      }
      else
      {
        v15 &= *(void *)&v8 - 1;
      }
      if (v15 != v12) {
        return 0;
      }
    }
  }
  return i;
}

void *sub_10000BB38(uint64_t a1, const char **a2, void *a3, _DWORD *a4)
{
  int8x8_t v8 = *a2;
  char v9 = **a2;
  if (v9)
  {
    unint64_t v10 = 0;
    unint64_t v11 = (unsigned __int8 *)(v8 + 1);
    do
    {
      unint64_t v10 = (1025 * (v10 + v9)) ^ ((1025 * (v10 + v9)) >> 6);
      int v12 = *v11++;
      char v9 = v12;
    }
    while (v12);
    unint64_t v13 = 9 * v10;
  }
  else
  {
    unint64_t v13 = 0;
  }
  unint64_t v14 = v13 ^ (v13 >> 11);
  unint64_t v15 = 32769 * v14;
  unint64_t v16 = *(void *)(a1 + 8);
  if (v16)
  {
    uint8x8_t v17 = (uint8x8_t)vcnt_s8((int8x8_t)v16);
    v17.i16[0] = vaddlv_u8(v17);
    unint64_t v18 = v17.u32[0];
    if (v17.u32[0] > 1uLL)
    {
      uint64_t v4 = 32769 * v14;
      if (v15 >= v16) {
        uint64_t v4 = v15 % v16;
      }
    }
    else
    {
      uint64_t v4 = v15 & (v16 - 1);
    }
    id v19 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v19)
    {
      for (i = *v19; i; i = *(void **)i)
      {
        unint64_t v21 = *((void *)i + 1);
        if (v21 == v15)
        {
          if (!strcmp(*((const char **)i + 2), v8)) {
            return i;
          }
        }
        else
        {
          if (v18 > 1)
          {
            if (v21 >= v16) {
              v21 %= v16;
            }
          }
          else
          {
            v21 &= v16 - 1;
          }
          if (v21 != v4) {
            break;
          }
        }
      }
    }
  }
  i = operator new(0x20uLL);
  *(void *)i = 0;
  *((void *)i + 1) = v15;
  *((void *)i + 2) = *a3;
  *((_DWORD *)i + 6) = *a4;
  float v22 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v23 = *(float *)(a1 + 32);
  if (!v16 || (float)(v23 * (float)v16) < v22)
  {
    BOOL v24 = 1;
    if (v16 >= 3) {
      BOOL v24 = (v16 & (v16 - 1)) != 0;
    }
    unint64_t v25 = v24 | (2 * v16);
    unint64_t v26 = vcvtps_u32_f32(v22 / v23);
    if (v25 <= v26) {
      size_t v27 = v26;
    }
    else {
      size_t v27 = v25;
    }
    sub_10000B924(a1, v27);
    unint64_t v16 = *(void *)(a1 + 8);
    if ((v16 & (v16 - 1)) != 0)
    {
      if (v15 >= v16) {
        uint64_t v4 = v15 % v16;
      }
      else {
        uint64_t v4 = v15;
      }
    }
    else
    {
      uint64_t v4 = (v16 - 1) & v15;
    }
  }
  uint64_t v28 = *(void *)a1;
  int v29 = *(void **)(*(void *)a1 + 8 * v4);
  if (v29)
  {
    *(void *)i = *v29;
LABEL_43:
    *int v29 = i;
    goto LABEL_44;
  }
  *(void *)i = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = i;
  *(void *)(v28 + 8 * v4) = a1 + 16;
  if (*(void *)i)
  {
    unint64_t v30 = *(void *)(*(void *)i + 8);
    if ((v16 & (v16 - 1)) != 0)
    {
      if (v30 >= v16) {
        v30 %= v16;
      }
    }
    else
    {
      v30 &= v16 - 1;
    }
    int v29 = (void *)(*(void *)a1 + 8 * v30);
    goto LABEL_43;
  }
LABEL_44:
  ++*(void *)(a1 + 24);
  return i;
}

void sub_10000BD98(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_10000BDAC(uint64_t a1, unint64_t a2)
{
  if (a2)
  {
    if (a2 >> 61) {
      sub_10004C318();
    }
    uint64_t v4 = operator new(8 * a2);
    unint64_t v5 = *(void **)a1;
    *(void *)a1 = v4;
    if (v5) {
      operator delete(v5);
    }
    uint64_t v6 = 0;
    *(void *)(a1 + 8) = a2;
    do
      *(void *)(*(void *)a1 + 8 * v6++) = 0;
    while (a2 != v6);
    unint64_t v7 = *(void **)(a1 + 16);
    if (v7)
    {
      unint64_t v8 = v7[1];
      uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
      v9.i16[0] = vaddlv_u8(v9);
      if (v9.u32[0] > 1uLL)
      {
        if (v8 >= a2) {
          v8 %= a2;
        }
      }
      else
      {
        v8 &= a2 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v8) = a1 + 16;
      unint64_t v11 = (void *)*v7;
      if (*v7)
      {
        do
        {
          unint64_t v12 = v11[1];
          if (v9.u32[0] > 1uLL)
          {
            if (v12 >= a2) {
              v12 %= a2;
            }
          }
          else
          {
            v12 &= a2 - 1;
          }
          if (v12 != v8)
          {
            if (!*(void *)(*(void *)a1 + 8 * v12))
            {
              *(void *)(*(void *)a1 + 8 * v12) = v7;
              goto LABEL_24;
            }
            *unint64_t v7 = *v11;
            *unint64_t v11 = **(void **)(*(void *)a1 + 8 * v12);
            **(void **)(*(void *)a1 + 8 * v12) = v11;
            unint64_t v11 = v7;
          }
          unint64_t v12 = v8;
LABEL_24:
          unint64_t v7 = v11;
          unint64_t v11 = (void *)*v11;
          unint64_t v8 = v12;
        }
        while (v11);
      }
    }
  }
  else
  {
    unint64_t v10 = *(void **)a1;
    *(void *)a1 = 0;
    if (v10) {
      operator delete(v10);
    }
    *(void *)(a1 + 8) = 0;
  }
}

uint64_t sub_10000BF08(uint64_t a1, const char *a2)
{
  uint8x8_t v9 = a2;
  char v3 = (void *)(a1 + 16);
  if (!*(void *)(a1 + 40))
  {
    int v8 = 0;
    if (*(int *)(a1 + 12) >= 1)
    {
      int v4 = 0;
      do
      {
        unint64_t v7 = sqlite3_column_name(*(sqlite3_stmt **)a1, v4);
        sub_10000BB38((uint64_t)v3, &v7, &v7, &v8);
        int v4 = v8 + 1;
        int v8 = v4;
      }
      while (v4 < *(_DWORD *)(a1 + 12));
    }
  }
  unint64_t v5 = sub_10000BA14(v3, &v9);
  if (v5) {
    return (*((_DWORD *)v5 + 6) - *(_DWORD *)(a1 + 8));
  }
  else {
    return 0xFFFFFFFFLL;
  }
}

id *sub_10000BFD8(id *a1)
{
  if (a1)
  {
    signed int v2 = a1;
    a1 = (id *)[a1[1] count];
    if (a1)
    {
      sub_1000A3EB0(v2, 0);
      a1 = (id *)objc_claimAutoreleasedReturnValue();
    }
    uint64_t v1 = vars8;
  }
  return a1;
}

void sub_10000C028(uint64_t a1, void *a2)
{
  id v5 = a2;
  if (a1)
  {
    id v3 = [*(id *)(a1 + 8) count];
    int v4 = *(void **)(a1 + 8);
    if ((unint64_t)v3 >= *(void *)(a1 + 24)) {
      [v4 setObject:v5 atIndexedSubscript:*(void *)(a1 + 16)];
    }
    else {
      [v4 addObject:v5];
    }
    *(void *)(a1 + 16) = [(id)a1 _ringIndexPlusOne:*(void *)(a1 + 16)];
  }
}

void *sub_10000C0D8(void *result)
{
  if (result) {
    return (void *)sub_100006970(result, @"currentUserPersonMaidAnalyticsEnabled");
  }
  return result;
}

void *sub_10000C0EC(void *result)
{
  if (result) {
    return (void *)sub_100006970(result, @"currentUserOrganizationProgressTrackingAllowed");
  }
  return result;
}

void *sub_10000C100(void *result)
{
  if (result) {
    return (void *)sub_100004EE8(result, @"classKitCatalogEnvironment");
  }
  return result;
}

void *sub_10000C6B4(void *a1)
{
  if (a1)
  {
    signed int v2 = (void *)a1[1];
    if (!v2) {
      signed int v2 = (void *)a1[2];
    }
    a1 = v2;
    uint64_t v1 = vars8;
  }
  return a1;
}

BOOL sub_10000C6EC(BOOL result)
{
  if (result) {
    return *(void *)(result + 32) && *(void *)(result + 40) != 0;
  }
  return result;
}

id sub_10000C710()
{
  self;
  if (qword_10023E6D8 != -1) {
    dispatch_once(&qword_10023E6D8, &stru_1001F4DD0);
  }
  id v0 = (void *)qword_10023E6D0;

  return v0;
}

progressd::ClassKitServiceConnection::Environment_optional __swiftcall ClassKitServiceConnection.Environment.init(rawValue:)(Swift::Int rawValue)
{
  if ((unint64_t)rawValue >= 4) {
    return (progressd::ClassKitServiceConnection::Environment_optional)3;
  }
  else {
    return (progressd::ClassKitServiceConnection::Environment_optional)(0x2010003u >> (8 * rawValue));
  }
}

uint64_t ClassKitServiceConnection.Environment.rawValue.getter(unsigned __int8 a1)
{
  return a1 + 1;
}

BOOL sub_10000C7AC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_10000C7C0()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1 + 1);
  return Hasher._finalize()();
}

void sub_10000C808()
{
  Hasher._combine(_:)(*v0 + 1);
}

Swift::Int sub_10000C838()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1 + 1);
  return Hasher._finalize()();
}

void *sub_10000C87C@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result >= 4uLL) {
    char v2 = 3;
  }
  else {
    char v2 = 0x2010003u >> (8 * *result);
  }
  *a2 = v2;
  return result;
}

void sub_10000C8A4(void *a1@<X8>)
{
  *a1 = *v1 + 1;
}

uint64_t variable initialization expression of MultimediaRecordResponseItem.status()
{
  return 0;
}

void *variable initialization expression of MultimediaRecordRequestItems.assetFieldNames()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t variable initialization expression of MultimediaRecordRequestItem.parentEntityType()
{
  return 0;
}

uint64_t variable initialization expression of MultimediaRecordResponseItem._multimediaRecord@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Ckcode_RecordTransport();
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

uint64_t variable initialization expression of MultimediaRecordRequestItems.parentEntityType()
{
  return 0;
}

unint64_t sub_10000C954()
{
  unint64_t result = qword_10023B918;
  if (!qword_10023B918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10023B918);
  }
  return result;
}

ValueMetadata *type metadata accessor for ClassKitServiceConnection()
{
  return &type metadata for ClassKitServiceConnection;
}

unsigned char *initializeBufferWithCopyOfBuffer for ClassKitServiceConnection.Environment(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ClassKitServiceConnection.Environment(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ClassKitServiceConnection.Environment(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10000CB24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_10000CB4C(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_10000CB58(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ClassKitServiceConnection.Environment()
{
  return &type metadata for ClassKitServiceConnection.Environment;
}

uint64_t sub_10000CB70(uint64_t a1, char a2)
{
  uint64_t v4 = sub_10000CE58(&qword_10023B920);
  __chkstk_darwin(v4 - 8);
  unsigned int v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 == 1) {
    uint64_t v7 = 6254687;
  }
  else {
    uint64_t v7 = 6251615;
  }
  uint64_t v25 = 0x74694B7373616C43;
  unint64_t v26 = 0xEF65636976726553;
  if (a2 == 1) {
    uint64_t v8 = 1;
  }
  else {
    uint64_t v8 = 2;
  }
  unint64_t v9 = 0xE300000000000000;
  String.append(_:)(*(Swift::String *)&v7);
  swift_bridgeObjectRetain();
  v10._countAndFlagsBits = 3157553;
  v10._object = (void *)0xE300000000000000;
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  id v11 = objc_allocWithZone((Class)CKContainerID);
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = objc_msgSend(v11, "initWithContainerIdentifier:environment:", v12, v8, v25, v26);

  id v14 = [objc_allocWithZone((Class)CKContainer) initWithContainerID:v13];
  NSString v15 = String._bridgeToObjectiveC()();
  id v16 = [v14 codeServiceWithName:v15 databaseScope:a1];

  if (a2 != 2)
  {
    swift_bridgeObjectRelease();

    goto LABEL_11;
  }
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  URL.init(string:)();
  uint64_t v18 = type metadata accessor for URL();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v6, 1, v18);
  if (result != 1)
  {
    URL._bridgeToObjectiveC()(v21);
    float v23 = v22;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v18);
    id v24 = [v14 codeServiceWithName:v17 serviceInstanceURL:v23];

    id v16 = v24;
LABEL_11:
    type metadata accessor for ClassKitServiceAPIAsyncClient();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v16;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_10000CE58(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

BOOL sub_10000CE9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1 == a3;
}

void ParentEntityType.init(rawValue:)()
{
}

void sub_10000CECC(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

void sub_10000CEDC(uint64_t a1@<X8>)
{
  sub_1000119C0();
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 9) = v4 & 1;
}

uint64_t sub_10000CF10()
{
  return *(void *)v0;
}

void sub_10000CF18(uint64_t a1@<X8>)
{
  sub_1000119C0();
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 9) = v4 & 1;
}

void sub_10000CF50(void *a1@<X8>)
{
  *a1 = *v1;
}

Swift::Int sub_10000CF5C()
{
  return Hasher._finalize()();
}

uint64_t sub_10000CFC8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100012968();

  return Enum.hash(into:)(a1, a2, v4);
}

Swift::Int sub_10000D014()
{
  return Hasher._finalize()();
}

BOOL sub_10000D07C(uint64_t a1, uint64_t *a2)
{
  return sub_10000CE9C(*(void *)a1, *(unsigned __int8 *)(a1 + 8), *a2);
}

void sub_10000D098()
{
  static ParentEntityType.allCases = (uint64_t)&off_1001F1888;
}

uint64_t *ParentEntityType.allCases.unsafeMutableAddressor()
{
  if (qword_10023B8D0 != -1) {
    swift_once();
  }
  return &static ParentEntityType.allCases;
}

uint64_t static ParentEntityType.allCases.getter()
{
  if (qword_10023B8D0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static ParentEntityType.allCases.setter(uint64_t a1)
{
  if (qword_10023B8D0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  static ParentEntityType.allCases = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static ParentEntityType.allCases.modify())()
{
  if (qword_10023B8D0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_10000D27C@<X0>(void *a1@<X8>)
{
  if (qword_10023B8D0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  *a1 = static ParentEntityType.allCases;
  return swift_bridgeObjectRetain();
}

uint64_t HelloRequest.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t HelloRequest.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*MultimediaRecordResponseItem.status.modify())()
{
  return ParentEntityType.rawValue.getter;
}

uint64_t HelloRequest.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10000D42C(type metadata accessor for HelloRequest, a1);
}

uint64_t HelloRequest.unknownFields.setter(uint64_t a1)
{
  return sub_10000D4C4(a1, type metadata accessor for HelloRequest);
}

uint64_t (*HelloRequest.unknownFields.modify())()
{
  return ParentEntityType.rawValue.getter;
}

uint64_t HelloRequest.init()@<X0>(void *a1@<X8>)
{
  return sub_10000D5A0((void (*)(void))type metadata accessor for HelloRequest, a1);
}

uint64_t HelloResponse.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10000D42C(type metadata accessor for HelloResponse, a1);
}

uint64_t sub_10000D42C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1(0) + 20);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t HelloResponse.unknownFields.setter(uint64_t a1)
{
  return sub_10000D4C4(a1, type metadata accessor for HelloResponse);
}

uint64_t sub_10000D4C4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = v2 + *(int *)(a2(0) + 20);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(v4, a1, v5);
}

uint64_t (*HelloResponse.unknownFields.modify())()
{
  return ParentEntityType.rawValue.getter;
}

uint64_t HelloResponse.init()@<X0>(void *a1@<X8>)
{
  return sub_10000D5A0((void (*)(void))type metadata accessor for HelloResponse, a1);
}

uint64_t sub_10000D5A0@<X0>(void (*a1)(void)@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  a1(0);
  return UnknownStorage.init()();
}

uint64_t MultimediaRecordsRequest.zoneOwnerName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MultimediaRecordsRequest.zoneOwnerName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*MultimediaRecordRequestItem.parentObjectID.modify())()
{
  return ParentEntityType.rawValue.getter;
}

uint64_t MultimediaRecordsRequest.orgID.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MultimediaRecordsRequest.orgID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*MultimediaRecordRequestItem.parentEntityType.modify())()
{
  return ParentEntityType.rawValue.getter;
}

uint64_t MultimediaRecordsRequest.multimediaRequestItems.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MultimediaRecordsRequest.multimediaRequestItems.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = a1;
  return result;
}

uint64_t (*MultimediaRecordRequestItem.assetFieldNames.modify())()
{
  return ParentEntityType.rawValue.getter;
}

uint64_t MultimediaRecordsRequest.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10000D844(type metadata accessor for MultimediaRecordsRequest, a1);
}

uint64_t MultimediaRecordsRequest.unknownFields.setter(uint64_t a1)
{
  return sub_10000D8DC(a1, type metadata accessor for MultimediaRecordsRequest);
}

uint64_t (*MultimediaRecordsRequest.unknownFields.modify())()
{
  return ParentEntityType.rawValue.getter;
}

uint64_t MultimediaRecordsRequest.init()@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  a1[4] = 0;
  a1[5] = 0xE000000000000000;
  a1[6] = &_swiftEmptyArrayStorage;
  type metadata accessor for MultimediaRecordsRequest(0);
  return UnknownStorage.init()();
}

uint64_t MultimediaRecordRequestItem.parentEntityType.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t MultimediaRecordRequestItem.parentEntityType.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 32) = result;
  *(unsigned char *)(v2 + 40) = a2 & 1;
  return result;
}

uint64_t MultimediaRecordRequestItem.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10000D844(type metadata accessor for MultimediaRecordRequestItem, a1);
}

uint64_t sub_10000D844@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1(0) + 32);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t MultimediaRecordRequestItem.unknownFields.setter(uint64_t a1)
{
  return sub_10000D8DC(a1, type metadata accessor for MultimediaRecordRequestItem);
}

uint64_t sub_10000D8DC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = v2 + *(int *)(a2(0) + 32);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(v4, a1, v5);
}

uint64_t (*MultimediaRecordRequestItem.unknownFields.modify())()
{
  return ParentEntityType.rawValue.getter;
}

uint64_t MultimediaRecordRequestItem.init()@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0xE000000000000000;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 1;
  *(void *)(a1 + 48) = &_swiftEmptyArrayStorage;
  type metadata accessor for MultimediaRecordRequestItem(0);
  return UnknownStorage.init()();
}

uint64_t MultimediaRecordsResponse.multimediaRecords.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MultimediaRecordsResponse.multimediaRecords.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t MultimediaRecordsResponse.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10000D42C(type metadata accessor for MultimediaRecordsResponse, a1);
}

uint64_t MultimediaRecordsResponse.unknownFields.setter(uint64_t a1)
{
  return sub_10000D4C4(a1, type metadata accessor for MultimediaRecordsResponse);
}

uint64_t (*MultimediaRecordsResponse.unknownFields.modify())()
{
  return ParentEntityType.rawValue.getter;
}

uint64_t MultimediaRecordsResponse.init()@<X0>(void *a1@<X8>)
{
  *a1 = &_swiftEmptyArrayStorage;
  type metadata accessor for MultimediaRecordsResponse(0);
  return UnknownStorage.init()();
}

uint64_t MultimediaRecordResponseItem.multimediaRecord.getter@<X0>(uint64_t a1@<X8>)
{
  sub_10000CE58(&qword_10023B928);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for MultimediaRecordResponseItem(0);
  sub_100011ACC(v1 + *(int *)(v5 + 24), (uint64_t)v4);
  uint64_t v6 = type metadata accessor for Ckcode_RecordTransport();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v4, v6);
  }
  Ckcode_RecordTransport.init()();
  return sub_100015718((uint64_t)v4, &qword_10023B928);
}

uint64_t MultimediaRecordResponseItem.multimediaRecord.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MultimediaRecordResponseItem(0) + 24);
  sub_100015718(v3, &qword_10023B928);
  uint64_t v4 = type metadata accessor for Ckcode_RecordTransport();
  uint64_t v7 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v3, a1, v4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56);

  return v5(v3, 0, 1, v4);
}

void (*MultimediaRecordResponseItem.multimediaRecord.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  void *v3 = v1;
  uint64_t v4 = sub_10000CE58(&qword_10023B928);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Ckcode_RecordTransport();
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  Swift::String v10 = malloc(v9);
  void v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for MultimediaRecordResponseItem(0) + 24);
  *((_DWORD *)v3 + 12) = v11;
  sub_100011ACC(v1 + v11, (uint64_t)v5);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    Ckcode_RecordTransport.init()();
    sub_100015718((uint64_t)v5, &qword_10023B928);
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v10, v5, v6);
  }
  return sub_10000DE64;
}

void sub_10000DE64(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(int *)(*(void *)a1 + 48);
  uint64_t v4 = *(void **)(*(void *)a1 + 32);
  uint64_t v5 = *(void **)(*(void *)a1 + 40);
  uint64_t v6 = *(void *)(*(void *)a1 + 16);
  uint64_t v7 = *(void *)(*(void *)a1 + 24);
  uint64_t v8 = *(void **)(*(void *)a1 + 8);
  uint64_t v9 = **(void **)a1 + v3;
  if (a2)
  {
    (*(void (**)(void, void *, uint64_t))(v7 + 16))(*(void *)(*(void *)a1 + 32), v5, v6);
    sub_100015718(v9, &qword_10023B928);
    (*(void (**)(uint64_t, void *, uint64_t))(v7 + 32))(v9, v4, v6);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
    (*(void (**)(void *, uint64_t))(v7 + 8))(v5, v6);
  }
  else
  {
    sub_100015718(**(void **)a1 + v3, &qword_10023B928);
    (*(void (**)(uint64_t, void *, uint64_t))(v7 + 32))(v9, v5, v6);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
  }
  free(v5);
  free(v4);
  free(v8);

  free(v2);
}

BOOL MultimediaRecordResponseItem.hasMultimediaRecord.getter()
{
  sub_10000CE58(&qword_10023B928);
  __chkstk_darwin();
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for MultimediaRecordResponseItem(0);
  sub_100011ACC(v0 + *(int *)(v3 + 24), (uint64_t)v2);
  uint64_t v4 = type metadata accessor for Ckcode_RecordTransport();
  BOOL v5 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v2, 1, v4) != 1;
  sub_100015718((uint64_t)v2, &qword_10023B928);
  return v5;
}

Swift::Void __swiftcall MultimediaRecordResponseItem.clearMultimediaRecord()()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for MultimediaRecordResponseItem(0) + 24);
  sub_100015718(v1, &qword_10023B928);
  uint64_t v2 = type metadata accessor for Ckcode_RecordTransport();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  v3(v1, 1, 1, v2);
}

uint64_t MultimediaRecordResponseItem.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10000D42C(type metadata accessor for MultimediaRecordResponseItem, a1);
}

uint64_t MultimediaRecordResponseItem.unknownFields.setter(uint64_t a1)
{
  return sub_10000D4C4(a1, type metadata accessor for MultimediaRecordResponseItem);
}

uint64_t (*MultimediaRecordResponseItem.unknownFields.modify())()
{
  return ParentEntityType.rawValue.getter;
}

uint64_t MultimediaRecordResponseItem.init()@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  uint64_t v2 = type metadata accessor for MultimediaRecordResponseItem(0);
  UnknownStorage.init()();
  uint64_t v3 = (char *)a1 + *(int *)(v2 + 24);
  uint64_t v4 = type metadata accessor for Ckcode_RecordTransport();
  BOOL v5 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(v3, 1, 1, v4);
}

uint64_t sub_10000E234()
{
  uint64_t v0 = type metadata accessor for _NameMap();
  sub_100015774(v0, static ParentEntityType._protobuf_nameMap);
  sub_100011B34(v0, (uint64_t)static ParentEntityType._protobuf_nameMap);
  sub_10000CE58(&qword_10023BE00);
  uint64_t v1 = (int *)(sub_10000CE58(&qword_10023BE08) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10019A8E0;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 0;
  *(void *)unint64_t v6 = "UNKNOWN_PARENT_ENTITY_TYPE";
  *(void *)(v6 + 8) = 26;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 1;
  *(void *)unint64_t v10 = "HANDOUT";
  *(void *)(v10 + 8) = 7;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  NSString v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 2;
  *(void *)NSString v12 = "HANDOUT_ATTACHMENT";
  *((void *)v12 + 1) = 18;
  v12[16] = 2;
  v9();
  id v13 = (void *)(v5 + 3 * v2);
  id v14 = (char *)v13 + v1[14];
  *id v13 = 3;
  *(void *)id v14 = "SURVEY_STEP";
  *((void *)v14 + 1) = 11;
  v14[16] = 2;
  v9();
  NSString v15 = (void *)(v5 + 4 * v2);
  id v16 = (char *)v15 + v1[14];
  *NSString v15 = 4;
  *(void *)id v16 = "SURVEY_STEP_ANSWER";
  *((void *)v16 + 1) = 18;
  v16[16] = 2;
  v9();
  NSString v17 = (void *)(v5 + 5 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  void *v17 = 5;
  *(void *)uint64_t v18 = "MULTIPLE_CHOICE_OPTION_ITEM";
  *((void *)v18 + 1) = 27;
  v18[16] = 2;
  v9();
  uint64_t v19 = (void *)(v5 + 6 * v2);
  unsigned int v20 = (char *)v19 + v1[14];
  void *v19 = 6;
  *(void *)unsigned int v20 = "STATE_CHANGE_PAYLOAD";
  *((void *)v20 + 1) = 20;
  v20[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t ParentEntityType._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_100010560(&qword_10023B8D8, (uint64_t)static ParentEntityType._protobuf_nameMap);
}

uint64_t static ParentEntityType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000105D8(&qword_10023B8D8, (uint64_t)static ParentEntityType._protobuf_nameMap, a1);
}

uint64_t sub_10000E570@<X0>(uint64_t a1@<X8>)
{
  return sub_100010D80(&qword_10023B8D8, (uint64_t)static ParentEntityType._protobuf_nameMap, a1);
}

const char *HelloRequest.protoMessageName.unsafeMutableAddressor()
{
  return "HelloRequest";
}

uint64_t static HelloRequest.protoMessageName.getter()
{
  return 0x7165526F6C6C6548;
}

uint64_t sub_10000E5C0(uint64_t a1)
{
  return sub_10000FDA0(a1, static HelloRequest._protobuf_nameMap, (uint64_t)"name", 4, (unsigned int *)&enum case for _NameMap.NameDescription.same(_:));
}

uint64_t HelloRequest._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_100010560(&qword_10023B8E0, (uint64_t)static HelloRequest._protobuf_nameMap);
}

uint64_t static HelloRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000105D8(&qword_10023B8E0, (uint64_t)static HelloRequest._protobuf_nameMap, a1);
}

uint64_t HelloResponse.decodeMessage<A>(decoder:)()
{
  return sub_10000E9A0();
}

uint64_t HelloRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10000EA3C(a1, a2, a3, (void (*)(void))type metadata accessor for HelloRequest);
}

uint64_t static HelloRequest.== infix(_:_:)(char *a1, char *a2)
{
  return sub_100012754(a1, a2, type metadata accessor for HelloRequest) & 1;
}

Swift::Int HelloRequest.hashValue.getter()
{
  return sub_100010ABC((void (*)(void))type metadata accessor for HelloRequest, &qword_10023B930, (void (*)(uint64_t))type metadata accessor for HelloRequest);
}

uint64_t sub_10000E6E4@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return UnknownStorage.init()();
}

uint64_t (*sub_10000E718())()
{
  return ParentEntityType.rawValue.getter;
}

uint64_t sub_10000E73C()
{
  return HelloResponse.decodeMessage<A>(decoder:)();
}

uint64_t sub_10000E754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return HelloRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_10000E770(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100012920(&qword_10023BDD8, (void (*)(uint64_t))type metadata accessor for HelloRequest);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10000E7F0@<X0>(uint64_t a1@<X8>)
{
  return sub_100010D80(&qword_10023B8E0, (uint64_t)static HelloRequest._protobuf_nameMap, a1);
}

uint64_t sub_10000E814(uint64_t a1)
{
  uint64_t v2 = sub_100012920((unint64_t *)&qword_10023B9A8, (void (*)(uint64_t))type metadata accessor for HelloRequest);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10000E884()
{
  sub_100012920((unint64_t *)&qword_10023B9A8, (void (*)(uint64_t))type metadata accessor for HelloRequest);

  return Message.hash(into:)();
}

const char *HelloResponse.protoMessageName.unsafeMutableAddressor()
{
  return "HelloResponse";
}

uint64_t static HelloResponse.protoMessageName.getter()
{
  return 0x7365526F6C6C6548;
}

uint64_t sub_10000E938(uint64_t a1)
{
  return sub_10000FDA0(a1, static HelloResponse._protobuf_nameMap, (uint64_t)"message", 7, (unsigned int *)&enum case for _NameMap.NameDescription.same(_:));
}

uint64_t HelloResponse._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_100010560(&qword_10023B8E8, (uint64_t)static HelloResponse._protobuf_nameMap);
}

uint64_t static HelloResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000105D8(&qword_10023B8E8, (uint64_t)static HelloResponse._protobuf_nameMap, a1);
}

uint64_t sub_10000E9A0()
{
  while (1)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 1) {
      dispatch thunk of Decoder.decodeSingularStringField(value:)();
    }
  }
  return result;
}

uint64_t HelloResponse.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10000EA3C(a1, a2, a3, (void (*)(void))type metadata accessor for HelloResponse);
}

uint64_t sub_10000EA3C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  unint64_t v7 = v4[1];
  uint64_t v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0) {
    uint64_t v8 = *v4 & 0xFFFFFFFFFFFFLL;
  }
  if (!v8 || (uint64_t result = dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)(), !v5))
  {
    a4(0);
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

uint64_t static HelloResponse.== infix(_:_:)(char *a1, char *a2)
{
  return sub_100012754(a1, a2, type metadata accessor for HelloResponse) & 1;
}

Swift::Int HelloResponse.hashValue.getter()
{
  return sub_100010ABC((void (*)(void))type metadata accessor for HelloResponse, &qword_10023B938, (void (*)(uint64_t))type metadata accessor for HelloResponse);
}

uint64_t sub_10000EB68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return HelloResponse.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_10000EB80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100012920(&qword_10023BDD0, (void (*)(uint64_t))type metadata accessor for HelloResponse);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10000EBFC@<X0>(uint64_t a1@<X8>)
{
  return sub_100010D80(&qword_10023B8E8, (uint64_t)static HelloResponse._protobuf_nameMap, a1);
}

uint64_t sub_10000EC20(uint64_t a1)
{
  uint64_t v2 = sub_100012920(&qword_10023B9C0, (void (*)(uint64_t))type metadata accessor for HelloResponse);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10000EC8C()
{
  sub_100012920(&qword_10023B9C0, (void (*)(uint64_t))type metadata accessor for HelloResponse);

  return Message.hash(into:)();
}

void *MultimediaRecordsRequest.protoMessageName.unsafeMutableAddressor()
{
  return &static MultimediaRecordsRequest.protoMessageName;
}

unint64_t static MultimediaRecordsRequest.protoMessageName.getter()
{
  return 0xD000000000000018;
}

uint64_t sub_10000ED30()
{
  uint64_t v0 = type metadata accessor for _NameMap();
  sub_100015774(v0, static MultimediaRecordsRequest._protobuf_nameMap);
  sub_100011B34(v0, (uint64_t)static MultimediaRecordsRequest._protobuf_nameMap);
  sub_10000CE58(&qword_10023BE00);
  uint64_t v1 = (int *)(sub_10000CE58(&qword_10023BE08) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10019A8F0;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "zone_name";
  *(void *)(v6 + 8) = 9;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "zone_owner_name";
  *(void *)(v10 + 8) = 15;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  NSString v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)NSString v12 = "org_id";
  *((void *)v12 + 1) = 6;
  v12[16] = 2;
  v9();
  id v13 = (void *)(v5 + 3 * v2);
  id v14 = (char *)v13 + v1[14];
  *id v13 = 4;
  *(void *)id v14 = "multimedia_request_items";
  *((void *)v14 + 1) = 24;
  v14[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t MultimediaRecordsRequest._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_100010560(&qword_10023B8F0, (uint64_t)static MultimediaRecordsRequest._protobuf_nameMap);
}

uint64_t static MultimediaRecordsRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000105D8(&qword_10023B8F0, (uint64_t)static MultimediaRecordsRequest._protobuf_nameMap, a1);
}

uint64_t MultimediaRecordsRequest.decodeMessage<A>(decoder:)()
{
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 3:
          dispatch thunk of Decoder.decodeSingularStringField(value:)();
          break;
        case 4:
          type metadata accessor for MultimediaRecordRequestItem(0);
          sub_100012920(&qword_10023B940, (void (*)(uint64_t))type metadata accessor for MultimediaRecordRequestItem);
          dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)();
          break;
        default:
          break;
      }
      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t MultimediaRecordsRequest.traverse<A>(visitor:)()
{
  unint64_t v2 = v0[1];
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = *v0 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3 || (uint64_t result = dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)(), !v1))
  {
    unint64_t v5 = v0[3];
    uint64_t v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0) {
      uint64_t v6 = v0[2] & 0xFFFFFFFFFFFFLL;
    }
    if (!v6 || (uint64_t result = dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)(), !v1))
    {
      unint64_t v7 = v0[5];
      uint64_t v8 = HIBYTE(v7) & 0xF;
      if ((v7 & 0x2000000000000000) == 0) {
        uint64_t v8 = v0[4] & 0xFFFFFFFFFFFFLL;
      }
      if (!v8 || (uint64_t result = dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)(), !v1))
      {
        if (!*(void *)(v0[6] + 16)
          || (type metadata accessor for MultimediaRecordRequestItem(0),
              sub_100012920(&qword_10023B940, (void (*)(uint64_t))type metadata accessor for MultimediaRecordRequestItem), uint64_t result = dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)(), !v1))
        {
          type metadata accessor for MultimediaRecordsRequest(0);
          return UnknownStorage.traverse<A>(visitor:)();
        }
      }
    }
  }
  return result;
}

Swift::Int MultimediaRecordsRequest.hashValue.getter()
{
  return sub_100010ABC((void (*)(void))type metadata accessor for MultimediaRecordsRequest, &qword_10023B948, (void (*)(uint64_t))type metadata accessor for MultimediaRecordsRequest);
}

uint64_t sub_10000F2E8@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  a1[4] = 0;
  a1[5] = 0xE000000000000000;
  a1[6] = &_swiftEmptyArrayStorage;
  return UnknownStorage.init()();
}

uint64_t (*sub_10000F32C())()
{
  return ParentEntityType.rawValue.getter;
}

uint64_t sub_10000F350()
{
  return MultimediaRecordsRequest.decodeMessage<A>(decoder:)();
}

uint64_t sub_10000F368()
{
  return MultimediaRecordsRequest.traverse<A>(visitor:)();
}

uint64_t sub_10000F380(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100012920(&qword_10023BDC8, (void (*)(uint64_t))type metadata accessor for MultimediaRecordsRequest);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10000F3FC@<X0>(uint64_t a1@<X8>)
{
  return sub_100010D80(&qword_10023B8F0, (uint64_t)static MultimediaRecordsRequest._protobuf_nameMap, a1);
}

uint64_t sub_10000F420(uint64_t a1)
{
  uint64_t v2 = sub_100012920(&qword_10023B9D8, (void (*)(uint64_t))type metadata accessor for MultimediaRecordsRequest);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10000F48C()
{
  sub_100012920(&qword_10023B9D8, (void (*)(uint64_t))type metadata accessor for MultimediaRecordsRequest);

  return Message.hash(into:)();
}

void *MultimediaRecordRequestItem.protoMessageName.unsafeMutableAddressor()
{
  return &static MultimediaRecordRequestItem.protoMessageName;
}

unint64_t static MultimediaRecordRequestItem.protoMessageName.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_10000F530()
{
  uint64_t v0 = type metadata accessor for _NameMap();
  sub_100015774(v0, static MultimediaRecordRequestItem._protobuf_nameMap);
  sub_100011B34(v0, (uint64_t)static MultimediaRecordRequestItem._protobuf_nameMap);
  sub_10000CE58(&qword_10023BE00);
  uint64_t v1 = (int *)(sub_10000CE58(&qword_10023BE08) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10019A8F0;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "record_name";
  *(void *)(v6 + 8) = 11;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "parent_object_id";
  *(void *)(v10 + 8) = 16;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  NSString v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)NSString v12 = "parent_entity_type";
  *((void *)v12 + 1) = 18;
  v12[16] = 2;
  v9();
  id v13 = (void *)(v5 + 3 * v2);
  id v14 = (char *)v13 + v1[14];
  *id v13 = 4;
  *(void *)id v14 = "asset_field_names";
  *((void *)v14 + 1) = 17;
  v14[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t MultimediaRecordRequestItem._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_100010560(&qword_10023B8F8, (uint64_t)static MultimediaRecordRequestItem._protobuf_nameMap);
}

uint64_t static MultimediaRecordRequestItem._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000105D8(&qword_10023B8F8, (uint64_t)static MultimediaRecordRequestItem._protobuf_nameMap, a1);
}

uint64_t MultimediaRecordRequestItem.decodeMessage<A>(decoder:)()
{
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
  uint64_t v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
          uint64_t v4 = v3;
          dispatch thunk of Decoder.decodeSingularStringField(value:)();
          goto LABEL_5;
        case 3:
          sub_100012968();
          uint64_t v4 = v3;
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)();
          goto LABEL_5;
        case 4:
          uint64_t v4 = v3;
          dispatch thunk of Decoder.decodeRepeatedStringField(value:)();
LABEL_5:
          uint64_t v3 = v4;
          break;
        default:
          break;
      }
      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t MultimediaRecordRequestItem.traverse<A>(visitor:)()
{
  unint64_t v2 = v0[1];
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = *v0 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3 || (uint64_t result = dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)(), !v1))
  {
    unint64_t v5 = v0[3];
    uint64_t v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0) {
      uint64_t v6 = v0[2] & 0xFFFFFFFFFFFFLL;
    }
    if (!v6 || (uint64_t result = dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)(), !v1))
    {
      if (!v0[4]
        || (sub_100012968(), uint64_t result = dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(), !v1))
      {
        if (!*(void *)(v0[6] + 16)
          || (uint64_t result = dispatch thunk of Visitor.visitRepeatedStringField(value:fieldNumber:)(), !v1))
        {
          type metadata accessor for MultimediaRecordRequestItem(0);
          return UnknownStorage.traverse<A>(visitor:)();
        }
      }
    }
  }
  return result;
}

Swift::Int MultimediaRecordRequestItem.hashValue.getter()
{
  return sub_100010ABC((void (*)(void))type metadata accessor for MultimediaRecordRequestItem, &qword_10023B958, (void (*)(uint64_t))type metadata accessor for MultimediaRecordRequestItem);
}

uint64_t sub_10000FA7C@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0xE000000000000000;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 1;
  *(void *)(a1 + 48) = &_swiftEmptyArrayStorage;
  return UnknownStorage.init()();
}

uint64_t sub_10000FAC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 32);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_10000FB30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 32);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(v4, a1, v5);
}

uint64_t sub_10000FBA0()
{
  return MultimediaRecordRequestItem.decodeMessage<A>(decoder:)();
}

uint64_t sub_10000FBB8()
{
  return MultimediaRecordRequestItem.traverse<A>(visitor:)();
}

uint64_t sub_10000FBD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100012920(&qword_10023BDC0, (void (*)(uint64_t))type metadata accessor for MultimediaRecordRequestItem);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10000FC4C@<X0>(uint64_t a1@<X8>)
{
  return sub_100010D80(&qword_10023B8F8, (uint64_t)static MultimediaRecordRequestItem._protobuf_nameMap, a1);
}

uint64_t sub_10000FC70(uint64_t a1)
{
  uint64_t v2 = sub_100012920(&qword_10023B940, (void (*)(uint64_t))type metadata accessor for MultimediaRecordRequestItem);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10000FCDC()
{
  sub_100012920(&qword_10023B940, (void (*)(uint64_t))type metadata accessor for MultimediaRecordRequestItem);

  return Message.hash(into:)();
}

void *MultimediaRecordsResponse.protoMessageName.unsafeMutableAddressor()
{
  return &static MultimediaRecordsResponse.protoMessageName;
}

unint64_t static MultimediaRecordsResponse.protoMessageName.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_10000FD80(uint64_t a1)
{
  return sub_10000FDA0(a1, static MultimediaRecordsResponse._protobuf_nameMap, (uint64_t)"multimedia_records", 18, (unsigned int *)&enum case for _NameMap.NameDescription.standard(_:));
}

uint64_t sub_10000FDA0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, unsigned int *a5)
{
  uint64_t v9 = type metadata accessor for _NameMap();
  sub_100015774(v9, a2);
  sub_100011B34(v9, (uint64_t)a2);
  sub_10000CE58(&qword_10023BE00);
  unint64_t v10 = (int *)(sub_10000CE58(&qword_10023BE08) - 8);
  unint64_t v11 = (*(unsigned __int8 *)(*(void *)v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v10 + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_10019A900;
  unint64_t v13 = v12 + v11 + v10[14];
  *(void *)(v12 + v11) = 1;
  *(void *)unint64_t v13 = a3;
  *(void *)(v13 + 8) = a4;
  *(unsigned char *)(v13 + 16) = 2;
  uint64_t v14 = *a5;
  uint64_t v15 = type metadata accessor for _NameMap.NameDescription();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v13, v14, v15);
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t MultimediaRecordsResponse._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_100010560(&qword_10023B900, (uint64_t)static MultimediaRecordsResponse._protobuf_nameMap);
}

uint64_t static MultimediaRecordsResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000105D8(&qword_10023B900, (uint64_t)static MultimediaRecordsResponse._protobuf_nameMap, a1);
}

uint64_t MultimediaRecordsResponse.decodeMessage<A>(decoder:)()
{
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 1)
      {
        type metadata accessor for MultimediaRecordResponseItem(0);
        sub_100012920(&qword_10023B960, (void (*)(uint64_t))type metadata accessor for MultimediaRecordResponseItem);
        dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)();
      }
      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t MultimediaRecordsResponse.traverse<A>(visitor:)()
{
  if (!*(void *)(*(void *)v0 + 16)
    || (type metadata accessor for MultimediaRecordResponseItem(0),
        sub_100012920(&qword_10023B960, (void (*)(uint64_t))type metadata accessor for MultimediaRecordResponseItem), uint64_t result = dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)(), !v1))
  {
    type metadata accessor for MultimediaRecordsResponse(0);
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

Swift::Int MultimediaRecordsResponse.hashValue.getter()
{
  return sub_100010ABC((void (*)(void))type metadata accessor for MultimediaRecordsResponse, &qword_10023B968, (void (*)(uint64_t))type metadata accessor for MultimediaRecordsResponse);
}

uint64_t sub_100010170@<X0>(void *a1@<X8>)
{
  *a1 = &_swiftEmptyArrayStorage;
  return UnknownStorage.init()();
}

uint64_t sub_10001019C()
{
  return MultimediaRecordsResponse.decodeMessage<A>(decoder:)();
}

uint64_t sub_1000101B4()
{
  return MultimediaRecordsResponse.traverse<A>(visitor:)();
}

uint64_t sub_1000101CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100012920(&qword_10023BDB8, (void (*)(uint64_t))type metadata accessor for MultimediaRecordsResponse);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100010248@<X0>(uint64_t a1@<X8>)
{
  return sub_100010D80(&qword_10023B900, (uint64_t)static MultimediaRecordsResponse._protobuf_nameMap, a1);
}

uint64_t sub_10001026C(uint64_t a1)
{
  uint64_t v2 = sub_100012920(&qword_10023BA00, (void (*)(uint64_t))type metadata accessor for MultimediaRecordsResponse);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1000102D8()
{
  sub_100012920(&qword_10023BA00, (void (*)(uint64_t))type metadata accessor for MultimediaRecordsResponse);

  return Message.hash(into:)();
}

void *MultimediaRecordResponseItem.protoMessageName.unsafeMutableAddressor()
{
  return &static MultimediaRecordResponseItem.protoMessageName;
}

unint64_t static MultimediaRecordResponseItem.protoMessageName.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_10001037C()
{
  uint64_t v0 = type metadata accessor for _NameMap();
  sub_100015774(v0, static MultimediaRecordResponseItem._protobuf_nameMap);
  sub_100011B34(v0, (uint64_t)static MultimediaRecordResponseItem._protobuf_nameMap);
  sub_10000CE58(&qword_10023BE00);
  uint64_t v1 = (int *)(sub_10000CE58(&qword_10023BE08) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10019A910;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "status";
  *(void *)(v6 + 8) = 6;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)unint64_t v10 = "multimedia_record";
  *((void *)v10 + 1) = 17;
  v10[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t MultimediaRecordResponseItem._protobuf_nameMap.unsafeMutableAddressor()
{
  return sub_100010560(&qword_10023B908, (uint64_t)static MultimediaRecordResponseItem._protobuf_nameMap);
}

uint64_t sub_100010560(void *a1, uint64_t a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for _NameMap();

  return sub_100011B34(v3, a2);
}

uint64_t static MultimediaRecordResponseItem._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000105D8(&qword_10023B908, (uint64_t)static MultimediaRecordResponseItem._protobuf_nameMap, a1);
}

uint64_t sub_1000105D8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for _NameMap();
  uint64_t v6 = sub_100011B34(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a3, v6, v5);
}

uint64_t MultimediaRecordResponseItem.decodeMessage<A>(decoder:)()
{
  while (1)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 2)
    {
      sub_100010700();
    }
    else if (result == 1)
    {
      dispatch thunk of Decoder.decodeSingularStringField(value:)();
    }
  }
  return result;
}

uint64_t sub_100010700()
{
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
}

uint64_t MultimediaRecordResponseItem.traverse<A>(visitor:)()
{
  unint64_t v2 = v0[1];
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = *v0 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3 || (uint64_t result = dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)(), !v1))
  {
    uint64_t result = sub_100010874((uint64_t)v0);
    if (!v1)
    {
      type metadata accessor for MultimediaRecordResponseItem(0);
      return UnknownStorage.traverse<A>(visitor:)();
    }
  }
  return result;
}

uint64_t sub_100010874(uint64_t a1)
{
  uint64_t v2 = sub_10000CE58(&qword_10023B928);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Ckcode_RecordTransport();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for MultimediaRecordResponseItem(0);
  sub_100011ACC(a1 + *(int *)(v9 + 24), (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    return sub_100015718((uint64_t)v4, &qword_10023B928);
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  sub_100012920(&qword_10023BDF8, (void (*)(uint64_t))&type metadata accessor for Ckcode_RecordTransport);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

Swift::Int MultimediaRecordResponseItem.hashValue.getter()
{
  return sub_100010ABC((void (*)(void))type metadata accessor for MultimediaRecordResponseItem, &qword_10023B970, (void (*)(uint64_t))type metadata accessor for MultimediaRecordResponseItem);
}

Swift::Int sub_100010ABC(void (*a1)(void), unint64_t *a2, void (*a3)(uint64_t))
{
  return Hasher._finalize()();
}

uint64_t sub_100010B44@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  UnknownStorage.init()();
  uint64_t v4 = (char *)a2 + *(int *)(a1 + 24);
  uint64_t v5 = type metadata accessor for Ckcode_RecordTransport();
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);

  return v6(v4, 1, 1, v5);
}

uint64_t sub_100010BD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_100010C40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(v4, a1, v5);
}

uint64_t sub_100010CB0()
{
  return MultimediaRecordResponseItem.decodeMessage<A>(decoder:)();
}

uint64_t sub_100010CC8()
{
  return MultimediaRecordResponseItem.traverse<A>(visitor:)();
}

uint64_t sub_100010CE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100012920(&qword_10023BDB0, (void (*)(uint64_t))type metadata accessor for MultimediaRecordResponseItem);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100010D5C@<X0>(uint64_t a1@<X8>)
{
  return sub_100010D80(&qword_10023B908, (uint64_t)static MultimediaRecordResponseItem._protobuf_nameMap, a1);
}

uint64_t sub_100010D80@<X0>(void *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for _NameMap();
  uint64_t v6 = sub_100011B34(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a3, v6, v5);
}

uint64_t sub_100010E1C(uint64_t a1)
{
  uint64_t v2 = sub_100012920(&qword_10023B960, (void (*)(uint64_t))type metadata accessor for MultimediaRecordResponseItem);

  return Message.debugDescription.getter(a1, v2);
}

Swift::Int sub_100010E88()
{
  return Hasher._finalize()();
}

uint64_t sub_100010EE0()
{
  sub_100012920(&qword_10023B960, (void (*)(uint64_t))type metadata accessor for MultimediaRecordResponseItem);

  return Message.hash(into:)();
}

Swift::Int sub_100010F5C()
{
  return Hasher._finalize()();
}

uint64_t sub_100010FB0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (char v6 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a2 + 7;
    for (i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_100011078(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Ckcode_RecordTransport();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000CE58(&qword_10023B928);
  __chkstk_darwin(v8 - 8);
  unint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000CE58(&qword_10023BDE0);
  __chkstk_darwin(v11);
  unint64_t v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for MultimediaRecordResponseItem(0);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v48 = a1;
  uint64_t v20 = *(void *)(a1 + 16);
  if (v20 != *(void *)(a2 + 16))
  {
LABEL_25:
    char v36 = 0;
    return v36 & 1;
  }
  v49 = (void (***)(char *, uint64_t, uint64_t))((char *)&v41 - v18);
  v52 = (void *)v19;
  if (v20)
  {
    uint64_t v21 = a2;
    if (v48 != a2)
    {
      uint64_t v51 = v16;
      v44 = v10;
      v42 = v7;
      unint64_t v22 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
      float v23 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
      id v41 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
      uint64_t v45 = *(void *)(v17 + 72);
      uint64_t v46 = v11;
      v43 = (void (**)(uint64_t, uint64_t))(v5 + 8);
      uint64_t v24 = v20 - 1;
      v47 = v13;
      while (1)
      {
        uint64_t v25 = v49;
        sub_1000157D8(v48 + v22, (uint64_t)v49, type metadata accessor for MultimediaRecordResponseItem);
        unint64_t v26 = v52;
        sub_1000157D8(v21 + v22, (uint64_t)v52, type metadata accessor for MultimediaRecordResponseItem);
        BOOL v27 = *v25 == *v26 && v25[1] == v26[1];
        if (!v27 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
          break;
        }
        uint64_t v28 = *(int *)(v51 + 24);
        uint64_t v29 = (uint64_t)v26 + v28;
        uint64_t v30 = (uint64_t)&v13[*(int *)(v11 + 48)];
        sub_100011ACC((uint64_t)v25 + v28, (uint64_t)v13);
        sub_100011ACC(v29, v30);
        char v31 = *v23;
        if ((*v23)(v13, 1, v4) == 1)
        {
          if (v31((char *)v30, 1, v4) != 1) {
            goto LABEL_23;
          }
          sub_100015718((uint64_t)v13, &qword_10023B928);
          unint64_t v26 = v52;
        }
        else
        {
          uint64_t v32 = (uint64_t)v44;
          sub_100011ACC((uint64_t)v13, (uint64_t)v44);
          if (v31((char *)v30, 1, v4) == 1)
          {
            (*v43)(v32, v4);
LABEL_23:
            sub_100015718((uint64_t)v13, &qword_10023BDE0);
            unint64_t v26 = v52;
            break;
          }
          BOOL v33 = v42;
          (*v41)(v42, v30, v4);
          sub_100012920(&qword_10023BDF0, (void (*)(uint64_t))&type metadata accessor for Ckcode_RecordTransport);
          char v34 = dispatch thunk of static Equatable.== infix(_:_:)();
          int v35 = *v43;
          (*v43)((uint64_t)v33, v4);
          v35(v32, v4);
          uint64_t v25 = v49;
          sub_100015718((uint64_t)v47, &qword_10023B928);
          unint64_t v26 = v52;
          if ((v34 & 1) == 0) {
            break;
          }
        }
        uint64_t v50 = v24;
        type metadata accessor for UnknownStorage();
        sub_100012920(&qword_10023BDE8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
        char v36 = dispatch thunk of static Equatable.== infix(_:_:)();
        sub_100015840((uint64_t)v26, type metadata accessor for MultimediaRecordResponseItem);
        uint64_t v37 = v50;
        sub_100015840((uint64_t)v25, type metadata accessor for MultimediaRecordResponseItem);
        BOOL v38 = v37 != 0;
        uint64_t v24 = v37 - 1;
        char v39 = v38;
        if (v36)
        {
          v22 += v45;
          uint64_t v11 = v46;
          unint64_t v13 = v47;
          if (v39) {
            continue;
          }
        }
        return v36 & 1;
      }
      sub_100015840((uint64_t)v26, type metadata accessor for MultimediaRecordResponseItem);
      sub_100015840((uint64_t)v25, type metadata accessor for MultimediaRecordResponseItem);
      goto LABEL_25;
    }
  }
  char v36 = 1;
  return v36 & 1;
}

uint64_t sub_1000115D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MultimediaRecordRequestItem(0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  unint64_t v10 = (uint64_t *)((char *)&v29 - v9);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v24 = 1;
      return v24 & 1;
    }
    uint64_t v12 = 0;
    unint64_t v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v30 = a1 + v13;
    uint64_t v14 = a2 + v13;
    uint64_t v15 = *(void *)(v8 + 72);
    while (1)
    {
      sub_1000157D8(v30 + v15 * v12, (uint64_t)v10, type metadata accessor for MultimediaRecordRequestItem);
      sub_1000157D8(v14 + v15 * v12, (uint64_t)v7, type metadata accessor for MultimediaRecordRequestItem);
      BOOL v16 = *v10 == *(void *)v7 && v10[1] == *((void *)v7 + 1);
      if (!v16 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        break;
      }
      BOOL v17 = v10[2] == *((void *)v7 + 2) && v10[3] == *((void *)v7 + 3);
      if (!v17 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        break;
      }
      uint64_t v18 = v10[4];
      uint64_t v19 = *((void *)v7 + 4);
      if (v7[40] == 1)
      {
        switch(v19)
        {
          case 1:
            if (v18 != 1) {
              goto LABEL_53;
            }
            goto LABEL_20;
          case 2:
            if (v18 != 2) {
              goto LABEL_53;
            }
            goto LABEL_20;
          case 3:
            if (v18 != 3) {
              goto LABEL_53;
            }
            goto LABEL_20;
          case 4:
            if (v18 != 4) {
              goto LABEL_53;
            }
            goto LABEL_20;
          case 5:
            if (v18 != 5) {
              goto LABEL_53;
            }
            goto LABEL_20;
          case 6:
            if (v18 != 6) {
              goto LABEL_53;
            }
            goto LABEL_20;
          default:
            if (v18) {
              goto LABEL_53;
            }
            goto LABEL_20;
        }
      }
      if (v18 != v19) {
        break;
      }
LABEL_20:
      uint64_t v20 = (void *)v10[6];
      uint64_t v21 = (void *)*((void *)v7 + 6);
      uint64_t v22 = v20[2];
      if (v22 != v21[2]) {
        break;
      }
      if (v22 && v20 != v21)
      {
        if ((v20[4] != v21[4] || v20[5] != v21[5]) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
          break;
        }
        if (v22 != 1)
        {
          if ((v20[6] != v21[6] || v20[7] != v21[7]) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
            break;
          }
          uint64_t v23 = v22 - 2;
          if (v23)
          {
            uint64_t v25 = v21 + 9;
            unint64_t v26 = v20 + 9;
            do
            {
              BOOL v27 = *(v26 - 1) == *(v25 - 1) && *v26 == *v25;
              if (!v27 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
                goto LABEL_53;
              }
              v25 += 2;
              v26 += 2;
            }
            while (--v23);
          }
        }
      }
      type metadata accessor for UnknownStorage();
      sub_100012920(&qword_10023BDE8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v24 = dispatch thunk of static Equatable.== infix(_:_:)();
      sub_100015840((uint64_t)v7, type metadata accessor for MultimediaRecordRequestItem);
      sub_100015840((uint64_t)v10, type metadata accessor for MultimediaRecordRequestItem);
      if ((v24 & 1) != 0 && ++v12 != v11) {
        continue;
      }
      return v24 & 1;
    }
LABEL_53:
    sub_100015840((uint64_t)v7, type metadata accessor for MultimediaRecordRequestItem);
    sub_100015840((uint64_t)v10, type metadata accessor for MultimediaRecordRequestItem);
  }
  char v24 = 0;
  return v24 & 1;
}

uint64_t type metadata accessor for HelloRequest(uint64_t a1)
{
  return sub_100011A94(a1, qword_10023BA78);
}

uint64_t type metadata accessor for HelloResponse(uint64_t a1)
{
  return sub_100011A94(a1, qword_10023BB08);
}

uint64_t type metadata accessor for MultimediaRecordsRequest(uint64_t a1)
{
  return sub_100011A94(a1, qword_10023BB98);
}

uint64_t type metadata accessor for MultimediaRecordRequestItem(uint64_t a1)
{
  return sub_100011A94(a1, qword_10023BC38);
}

uint64_t type metadata accessor for MultimediaRecordsResponse(uint64_t a1)
{
  return sub_100011A94(a1, qword_10023BCD8);
}

uint64_t type metadata accessor for MultimediaRecordResponseItem(uint64_t a1)
{
  return sub_100011A94(a1, (uint64_t *)&unk_10023BD68);
}

uint64_t sub_100011A94(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100011ACC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000CE58(&qword_10023B928);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100011B34(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t _s9progressd28MultimediaRecordResponseItemV2eeoiySbAC_ACtFZ_0(char *a1, char *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v44 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  v43 = &v38[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v42 = &v38[-v7];
  uint64_t v8 = type metadata accessor for Ckcode_RecordTransport();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v41 = &v38[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_10000CE58(&qword_10023BDE0);
  __chkstk_darwin(v11);
  unint64_t v13 = &v38[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_10000CE58(&qword_10023B928);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  BOOL v17 = &v38[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = &v38[-v19];
  __chkstk_darwin(v18);
  uint64_t v22 = &v38[-v21];
  uint64_t v23 = *(void *)a1;
  uint64_t v24 = *((void *)a1 + 1);
  uint64_t v45 = a1;
  uint64_t v46 = a2;
  if (v23 == *(void *)a2 && v24 == *((void *)a2 + 1)
    || (char v25 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
  {
    uint64_t v40 = v4;
    uint64_t v26 = type metadata accessor for MultimediaRecordResponseItem(0);
    sub_100011ACC((uint64_t)&v45[*(int *)(v26 + 24)], (uint64_t)v22);
    sub_100011ACC((uint64_t)&v46[*(int *)(v26 + 24)], (uint64_t)v20);
    uint64_t v27 = (uint64_t)&v13[*(int *)(v11 + 48)];
    sub_100011ACC((uint64_t)v22, (uint64_t)v13);
    sub_100011ACC((uint64_t)v20, v27);
    uint64_t v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (v28((uint64_t)v13, 1, v8) == 1)
    {
      sub_100015718((uint64_t)v20, &qword_10023B928);
      sub_100015718((uint64_t)v22, &qword_10023B928);
      if (v28(v27, 1, v8) == 1)
      {
        sub_100015718((uint64_t)v13, &qword_10023B928);
LABEL_11:
        uint64_t v31 = v44;
        uint64_t v32 = *(void (**)(unsigned char *, char *, uint64_t))(v44 + 16);
        BOOL v33 = v42;
        uint64_t v34 = v40;
        v32(v42, &v45[*(int *)(v26 + 20)], v40);
        int v35 = v43;
        v32(v43, &v46[*(int *)(v26 + 20)], v34);
        sub_100012920(&qword_10023BDE8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
        char v25 = dispatch thunk of static Equatable.== infix(_:_:)();
        char v36 = *(void (**)(unsigned char *, uint64_t))(v31 + 8);
        v36(v35, v34);
        v36(v33, v34);
        return v25 & 1;
      }
    }
    else
    {
      sub_100011ACC((uint64_t)v13, (uint64_t)v17);
      if (v28(v27, 1, v8) != 1)
      {
        uint64_t v29 = v41;
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 32))(v41, v27, v8);
        sub_100012920(&qword_10023BDF0, (void (*)(uint64_t))&type metadata accessor for Ckcode_RecordTransport);
        int v39 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v30 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
        v30(v29, v8);
        sub_100015718((uint64_t)v20, &qword_10023B928);
        sub_100015718((uint64_t)v22, &qword_10023B928);
        v30(v17, v8);
        sub_100015718((uint64_t)v13, &qword_10023B928);
        if (v39) {
          goto LABEL_11;
        }
LABEL_12:
        char v25 = 0;
        return v25 & 1;
      }
      sub_100015718((uint64_t)v20, &qword_10023B928);
      sub_100015718((uint64_t)v22, &qword_10023B928);
      (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v17, v8);
    }
    sub_100015718((uint64_t)v13, &qword_10023BDE0);
    goto LABEL_12;
  }
  return v25 & 1;
}

uint64_t _s9progressd27MultimediaRecordRequestItemV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v20 - v9;
  BOOL v11 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v11 || (char v12 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
  {
    BOOL v13 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
    if (v13 || (char v12 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
    {
      uint64_t v14 = *(void *)(a1 + 32);
      uint64_t v15 = *(void *)(a2 + 32);
      if (*(unsigned char *)(a2 + 40) == 1)
      {
        switch(v15)
        {
          case 1:
            if (v14 == 1) {
              goto LABEL_16;
            }
            goto LABEL_29;
          case 2:
            if (v14 == 2) {
              goto LABEL_16;
            }
            goto LABEL_29;
          case 3:
            if (v14 == 3) {
              goto LABEL_16;
            }
            goto LABEL_29;
          case 4:
            if (v14 == 4) {
              goto LABEL_16;
            }
            goto LABEL_29;
          case 5:
            if (v14 == 5) {
              goto LABEL_16;
            }
            goto LABEL_29;
          case 6:
            if (v14 != 6) {
              goto LABEL_29;
            }
            goto LABEL_16;
          default:
            if (!v14) {
              goto LABEL_16;
            }
            goto LABEL_29;
        }
      }
      if (v14 == v15)
      {
LABEL_16:
        if (sub_100010FB0(*(void **)(a1 + 48), *(void **)(a2 + 48)))
        {
          uint64_t v16 = type metadata accessor for MultimediaRecordRequestItem(0);
          BOOL v17 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
          v17(v10, a1 + *(int *)(v16 + 32), v4);
          v17(v8, a2 + *(int *)(v16 + 32), v4);
          sub_100012920(&qword_10023BDE8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
          char v12 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v18 = *(void (**)(char *, uint64_t))(v5 + 8);
          v18(v8, v4);
          v18(v10, v4);
          return v12 & 1;
        }
      }
LABEL_29:
      char v12 = 0;
    }
  }
  return v12 & 1;
}

uint64_t _s9progressd25MultimediaRecordsResponseV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v16 - v9;
  if (sub_100011078(*a1, *a2))
  {
    uint64_t v11 = type metadata accessor for MultimediaRecordsResponse(0);
    char v12 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v12(v10, (char *)a1 + *(int *)(v11 + 20), v4);
    v12(v8, (char *)a2 + *(int *)(v11 + 20), v4);
    sub_100012920(&qword_10023BDE8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v13 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
    v14(v8, v4);
    v14(v10, v4);
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t _s9progressd24MultimediaRecordsRequestV2eeoiySbAC_ACtFZ_0(char *a1, char *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v18 - v9;
  BOOL v11 = *(void *)a1 == *(void *)a2 && *((void *)a1 + 1) == *((void *)a2 + 1);
  if (v11 || (char v12 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
  {
    BOOL v13 = *((void *)a1 + 2) == *((void *)a2 + 2) && *((void *)a1 + 3) == *((void *)a2 + 3);
    if (v13 || (char v12 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
    {
      if (*((void *)a1 + 4) == *((void *)a2 + 4) && *((void *)a1 + 5) == *((void *)a2 + 5)
        || (char v12 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
      {
        if (sub_1000115D8(*((void *)a1 + 6), *((void *)a2 + 6)))
        {
          uint64_t v14 = type metadata accessor for MultimediaRecordsRequest(0);
          uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
          v15(v10, &a1[*(int *)(v14 + 32)], v4);
          v15(v8, &a2[*(int *)(v14 + 32)], v4);
          sub_100012920(&qword_10023BDE8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
          char v12 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v16 = *(void (**)(char *, uint64_t))(v5 + 8);
          v16(v8, v4);
          v16(v10, v4);
        }
        else
        {
          char v12 = 0;
        }
      }
    }
  }
  return v12 & 1;
}

uint64_t sub_100012754(char *a1, char *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  char v12 = (char *)&v19 - v11;
  BOOL v13 = *(void *)a1 == *(void *)a2 && *((void *)a1 + 1) == *((void *)a2 + 1);
  if (v13 || (char v14 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
  {
    uint64_t v15 = a3(0);
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v16(v12, &a1[*(int *)(v15 + 20)], v6);
    v16(v10, &a2[*(int *)(v15 + 20)], v6);
    sub_100012920(&qword_10023BDE8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v14 = dispatch thunk of static Equatable.== infix(_:_:)();
    BOOL v17 = *(void (**)(char *, uint64_t))(v7 + 8);
    v17(v10, v6);
    v17(v12, v6);
  }
  return v14 & 1;
}

uint64_t sub_100012920(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100012968()
{
  unint64_t result = qword_10023B950;
  if (!qword_10023B950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10023B950);
  }
  return result;
}

unint64_t sub_1000129C0()
{
  unint64_t result = qword_10023B978;
  if (!qword_10023B978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10023B978);
  }
  return result;
}

unint64_t sub_100012A18()
{
  unint64_t result = qword_10023B980;
  if (!qword_10023B980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10023B980);
  }
  return result;
}

unint64_t sub_100012A70()
{
  unint64_t result = qword_10023B988;
  if (!qword_10023B988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10023B988);
  }
  return result;
}

unint64_t sub_100012AC8()
{
  unint64_t result = qword_10023B990;
  if (!qword_10023B990)
  {
    sub_100012B24(&qword_10023B998);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10023B990);
  }
  return result;
}

uint64_t sub_100012B24(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_100012B6C()
{
  return sub_100012920(&qword_10023B9A0, (void (*)(uint64_t))type metadata accessor for HelloRequest);
}

uint64_t sub_100012BB4()
{
  return sub_100012920((unint64_t *)&qword_10023B9A8, (void (*)(uint64_t))type metadata accessor for HelloRequest);
}

uint64_t sub_100012BFC()
{
  return sub_100012920(&qword_10023B930, (void (*)(uint64_t))type metadata accessor for HelloRequest);
}

uint64_t sub_100012C44()
{
  return sub_100012920(&qword_10023B9B0, (void (*)(uint64_t))type metadata accessor for HelloRequest);
}

uint64_t sub_100012C8C()
{
  return sub_100012920(&qword_10023B9B8, (void (*)(uint64_t))type metadata accessor for HelloResponse);
}

uint64_t sub_100012CD4()
{
  return sub_100012920(&qword_10023B9C0, (void (*)(uint64_t))type metadata accessor for HelloResponse);
}

uint64_t sub_100012D1C()
{
  return sub_100012920(&qword_10023B938, (void (*)(uint64_t))type metadata accessor for HelloResponse);
}

uint64_t sub_100012D64()
{
  return sub_100012920(&qword_10023B9C8, (void (*)(uint64_t))type metadata accessor for HelloResponse);
}

uint64_t sub_100012DAC()
{
  return sub_100012920(&qword_10023B9D0, (void (*)(uint64_t))type metadata accessor for MultimediaRecordsRequest);
}

uint64_t sub_100012DF4()
{
  return sub_100012920(&qword_10023B9D8, (void (*)(uint64_t))type metadata accessor for MultimediaRecordsRequest);
}

uint64_t sub_100012E3C()
{
  return sub_100012920(&qword_10023B948, (void (*)(uint64_t))type metadata accessor for MultimediaRecordsRequest);
}

uint64_t sub_100012E84()
{
  return sub_100012920(&qword_10023B9E0, (void (*)(uint64_t))type metadata accessor for MultimediaRecordsRequest);
}

uint64_t sub_100012ECC()
{
  return sub_100012920(&qword_10023B9E8, (void (*)(uint64_t))type metadata accessor for MultimediaRecordRequestItem);
}

uint64_t sub_100012F14()
{
  return sub_100012920(&qword_10023B940, (void (*)(uint64_t))type metadata accessor for MultimediaRecordRequestItem);
}

uint64_t sub_100012F5C()
{
  return sub_100012920(&qword_10023B958, (void (*)(uint64_t))type metadata accessor for MultimediaRecordRequestItem);
}

uint64_t sub_100012FA4()
{
  return sub_100012920(&qword_10023B9F0, (void (*)(uint64_t))type metadata accessor for MultimediaRecordRequestItem);
}

uint64_t sub_100012FEC()
{
  return sub_100012920(&qword_10023B9F8, (void (*)(uint64_t))type metadata accessor for MultimediaRecordsResponse);
}

uint64_t sub_100013034()
{
  return sub_100012920(&qword_10023BA00, (void (*)(uint64_t))type metadata accessor for MultimediaRecordsResponse);
}

uint64_t sub_10001307C()
{
  return sub_100012920(&qword_10023B968, (void (*)(uint64_t))type metadata accessor for MultimediaRecordsResponse);
}

uint64_t sub_1000130C4()
{
  return sub_100012920(&qword_10023BA08, (void (*)(uint64_t))type metadata accessor for MultimediaRecordsResponse);
}

uint64_t sub_10001310C()
{
  return sub_100012920(&qword_10023BA10, (void (*)(uint64_t))type metadata accessor for MultimediaRecordResponseItem);
}

uint64_t sub_100013154()
{
  return sub_100012920(&qword_10023B960, (void (*)(uint64_t))type metadata accessor for MultimediaRecordResponseItem);
}

uint64_t sub_10001319C()
{
  return sub_100012920(&qword_10023B970, (void (*)(uint64_t))type metadata accessor for MultimediaRecordResponseItem);
}

uint64_t sub_1000131E4()
{
  return sub_100012920(&qword_10023BA18, (void (*)(uint64_t))type metadata accessor for MultimediaRecordResponseItem);
}

uint64_t initializeBufferWithCopyOfBuffer for ParentEntityType(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for ParentEntityType(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ParentEntityType(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_100013290(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1000132AC(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ParentEntityType()
{
  return &type metadata for ParentEntityType;
}

uint64_t getEnumTagSinglePayload for HelloRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100013308);
}

uint64_t storeEnumTagSinglePayload for HelloRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100013320);
}

uint64_t sub_100013324()
{
  return sub_100014954();
}

uint64_t *_s9progressd12HelloRequestVwCP_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  char v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    uint64_t *v3 = *a2;
    char v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for UnknownStorage();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t _s9progressd12HelloRequestVwxx_0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *_s9progressd12HelloRequestVwcp_0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for UnknownStorage();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *_s9progressd12HelloRequestVwca_0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *_s9progressd12HelloRequestVwtk_0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *_s9progressd12HelloRequestVwta_0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for HelloResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000136E0);
}

uint64_t sub_1000136E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UnknownStorage();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for HelloResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000137A8);
}

uint64_t sub_1000137AC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for MultimediaRecordsRequest(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  char v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    uint64_t *v3 = *a2;
    char v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v8 = *(int *)(a3 + 32);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    a1[6] = a2[6];
    uint64_t v11 = type metadata accessor for UnknownStorage();
    char v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
  }
  return v3;
}

uint64_t destroy for MultimediaRecordsRequest(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *initializeWithCopy for MultimediaRecordsRequest(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v7 = *(int *)(a3 + 32);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  a1[6] = a2[6];
  uint64_t v10 = type metadata accessor for UnknownStorage();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  return a1;
}

void *assignWithCopy for MultimediaRecordsRequest(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for MultimediaRecordsRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v5 = *(int *)(a3 + 32);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

void *assignWithTake for MultimediaRecordsRequest(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 32);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for MultimediaRecordsRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100013D24);
}

uint64_t storeEnumTagSinglePayload for MultimediaRecordsRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100013D3C);
}

uint64_t sub_100013D40()
{
  return sub_10001438C();
}

void *initializeBufferWithCopyOfBuffer for MultimediaRecordRequestItem(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  char v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    void *v3 = *a2;
    char v3 = (void *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = a2[4];
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    uint64_t v7 = *(int *)(a3 + 32);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    *(void *)(a1 + 48) = a2[6];
    uint64_t v10 = type metadata accessor for UnknownStorage();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t destroy for MultimediaRecordRequestItem(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t initializeWithCopy for MultimediaRecordRequestItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

uint64_t assignWithCopy for MultimediaRecordRequestItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 32);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for MultimediaRecordRequestItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v5 = *(int *)(a3 + 32);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for MultimediaRecordRequestItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for MultimediaRecordRequestItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10001420C);
}

uint64_t sub_100014210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UnknownStorage();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for MultimediaRecordRequestItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000142D4);
}

uint64_t sub_1000142D8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_100014380()
{
  return sub_10001438C();
}

uint64_t sub_10001438C()
{
  uint64_t result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for MultimediaRecordsResponse(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for UnknownStorage();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t destroy for MultimediaRecordsResponse(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *initializeWithCopy for MultimediaRecordsResponse(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for UnknownStorage();
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

void *assignWithCopy for MultimediaRecordsResponse(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

void *initializeWithTake for MultimediaRecordsResponse(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for MultimediaRecordsResponse(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for MultimediaRecordsResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000147D8);
}

uint64_t sub_1000147D8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UnknownStorage();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for MultimediaRecordsResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10001489C);
}

void *sub_10001489C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_100014944()
{
  return sub_100014954();
}

uint64_t sub_100014954()
{
  uint64_t result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for MultimediaRecordResponseItem(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for UnknownStorage();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 24);
    char v14 = (char *)v4 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = type metadata accessor for Ckcode_RecordTransport();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = sub_10000CE58(&qword_10023B928);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  return v4;
}

uint64_t destroy for MultimediaRecordResponseItem(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = type metadata accessor for Ckcode_RecordTransport();
  uint64_t v10 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v6, v7);
  }
  return result;
}

void *initializeWithCopy for MultimediaRecordResponseItem(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UnknownStorage();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (char *)a1 + v12;
  char v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for Ckcode_RecordTransport();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_10000CE58(&qword_10023B928);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

void *assignWithCopy for MultimediaRecordResponseItem(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for Ckcode_RecordTransport();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v8) = v15(v11, 1, v13);
  int v16 = v15(v12, 1, v13);
  if (!v8)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_10000CE58(&qword_10023B928);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

_OWORD *initializeWithTake for MultimediaRecordResponseItem(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for Ckcode_RecordTransport();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = sub_10000CE58(&qword_10023B928);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  return a1;
}

void *assignWithTake for MultimediaRecordResponseItem(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for Ckcode_RecordTransport();
  uint64_t v15 = *(void *)(v14 - 8);
  int v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v9) = v16(v12, 1, v14);
  int v17 = v16(v13, 1, v14);
  if (!v9)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v12, v13, v14);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = sub_10000CE58(&qword_10023B928);
    memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for MultimediaRecordResponseItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100015378);
}

uint64_t sub_100015378(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UnknownStorage();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10000CE58(&qword_10023B928);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for MultimediaRecordResponseItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000154BC);
}

uint64_t sub_1000154BC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UnknownStorage();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10000CE58(&qword_10023B928);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1000155EC()
{
  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    sub_1000156C0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1000156C0()
{
  if (!qword_10023BD78)
  {
    type metadata accessor for Ckcode_RecordTransport();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10023BD78);
    }
  }
}

uint64_t sub_100015718(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10000CE58(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t *sub_100015774(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_1000157D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100015840(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t MultimediaRecordRequest.zoneName.getter()
{
  return sub_100015EC8(&OBJC_IVAR____TtC9progressd23MultimediaRecordRequest_zoneName);
}

uint64_t MultimediaRecordRequest.zoneName.setter(uint64_t a1, uint64_t a2)
{
  return sub_100015FA0(a1, a2, &OBJC_IVAR____TtC9progressd23MultimediaRecordRequest_zoneName);
}

uint64_t (*MultimediaRecordRequest.zoneName.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t MultimediaRecordRequest.zoneOwnerName.getter()
{
  return sub_100015EC8(&OBJC_IVAR____TtC9progressd23MultimediaRecordRequest_zoneOwnerName);
}

uint64_t MultimediaRecordRequest.zoneOwnerName.setter(uint64_t a1, uint64_t a2)
{
  return sub_100015FA0(a1, a2, &OBJC_IVAR____TtC9progressd23MultimediaRecordRequest_zoneOwnerName);
}

uint64_t (*MultimediaRecordRequest.zoneOwnerName.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t MultimediaRecordRequest.orgID.getter()
{
  return sub_100015EC8(&OBJC_IVAR____TtC9progressd23MultimediaRecordRequest_orgID);
}

uint64_t MultimediaRecordRequest.orgID.setter(uint64_t a1, uint64_t a2)
{
  return sub_100015FA0(a1, a2, &OBJC_IVAR____TtC9progressd23MultimediaRecordRequest_orgID);
}

uint64_t (*MultimediaRecordRequest.orgID.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t MultimediaRecordRequest.requestItems.getter()
{
  return sub_100016264();
}

uint64_t MultimediaRecordRequest.requestItems.setter(uint64_t a1)
{
  return sub_100016320(a1, &OBJC_IVAR____TtC9progressd23MultimediaRecordRequest_requestItems);
}

uint64_t (*MultimediaRecordRequest.requestItems.modify())()
{
  return j__swift_endAccess;
}

id MultimediaRecordRequest.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return [v1 init];
}

id MultimediaRecordRequest.init()()
{
  id v1 = &v0[OBJC_IVAR____TtC9progressd23MultimediaRecordRequest_zoneName];
  *(void *)id v1 = 0;
  *((void *)v1 + 1) = 0xE000000000000000;
  uint64_t v2 = &v0[OBJC_IVAR____TtC9progressd23MultimediaRecordRequest_zoneOwnerName];
  *(void *)uint64_t v2 = 0;
  *((void *)v2 + 1) = 0xE000000000000000;
  uint64_t v3 = &v0[OBJC_IVAR____TtC9progressd23MultimediaRecordRequest_orgID];
  *(void *)uint64_t v3 = 0;
  *((void *)v3 + 1) = 0xE000000000000000;
  *(void *)&v0[OBJC_IVAR____TtC9progressd23MultimediaRecordRequest_requestItems] = &_swiftEmptyArrayStorage;
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for MultimediaRecordRequest();
  return objc_msgSendSuper2(&v5, "init");
}

uint64_t type metadata accessor for MultimediaRecordRequest()
{
  return self;
}

id MultimediaRecordRequest.__deallocating_deinit()
{
  return sub_100017C00(type metadata accessor for MultimediaRecordRequest);
}

uint64_t MultimediaRecordRequestItems.recordName.getter()
{
  return sub_100015EC8(&OBJC_IVAR____TtC9progressd28MultimediaRecordRequestItems_recordName);
}

uint64_t MultimediaRecordRequestItems.recordName.setter(uint64_t a1, uint64_t a2)
{
  return sub_100015FA0(a1, a2, &OBJC_IVAR____TtC9progressd28MultimediaRecordRequestItems_recordName);
}

uint64_t (*MultimediaRecordRequestItems.recordName.modify())()
{
  return j_j__swift_endAccess;
}

id sub_100015E44()
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  NSString v0 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t MultimediaRecordRequestItems.parentObjectID.getter()
{
  return sub_100015EC8(&OBJC_IVAR____TtC9progressd28MultimediaRecordRequestItems_parentObjectID);
}

uint64_t sub_100015EC8(void *a1)
{
  uint64_t v2 = (uint64_t *)(v1 + *a1);
  swift_beginAccess();
  uint64_t v3 = *v2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_100015F28(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;
  uint64_t v9 = (uint64_t *)(a1 + *a4);
  swift_beginAccess();
  uint64_t *v9 = v6;
  v9[1] = v8;
  return swift_bridgeObjectRelease();
}

uint64_t MultimediaRecordRequestItems.parentObjectID.setter(uint64_t a1, uint64_t a2)
{
  return sub_100015FA0(a1, a2, &OBJC_IVAR____TtC9progressd28MultimediaRecordRequestItems_parentObjectID);
}

uint64_t sub_100015FA0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = (void *)(v3 + *a3);
  swift_beginAccess();
  void *v6 = a1;
  v6[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*MultimediaRecordRequestItems.parentObjectID.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t MultimediaRecordRequestItems.parentEntityType.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9progressd28MultimediaRecordRequestItems_parentEntityType;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t MultimediaRecordRequestItems.parentEntityType.setter(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC9progressd28MultimediaRecordRequestItems_parentEntityType);
  uint64_t result = swift_beginAccess();
  void *v3 = a1;
  return result;
}

uint64_t (*MultimediaRecordRequestItems.parentEntityType.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t MultimediaRecordRequestItems.assetFieldNames.getter()
{
  return sub_100016264();
}

uint64_t sub_100016264()
{
  return swift_bridgeObjectRetain();
}

uint64_t MultimediaRecordRequestItems.assetFieldNames.setter(uint64_t a1)
{
  return sub_100016320(a1, &OBJC_IVAR____TtC9progressd28MultimediaRecordRequestItems_assetFieldNames);
}

uint64_t sub_100016320(uint64_t a1, void *a2)
{
  unint64_t v4 = (void *)(v2 + *a2);
  swift_beginAccess();
  void *v4 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*MultimediaRecordRequestItems.assetFieldNames.modify())()
{
  return j_j__swift_endAccess;
}

id MultimediaRecordRequestItems.init()()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC9progressd28MultimediaRecordRequestItems_recordName];
  *(void *)uint64_t v1 = 0;
  *((void *)v1 + 1) = 0xE000000000000000;
  uint64_t v2 = &v0[OBJC_IVAR____TtC9progressd28MultimediaRecordRequestItems_parentObjectID];
  *(void *)uint64_t v2 = 0;
  *((void *)v2 + 1) = 0xE000000000000000;
  *(void *)&v0[OBJC_IVAR____TtC9progressd28MultimediaRecordRequestItems_parentEntityType] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9progressd28MultimediaRecordRequestItems_assetFieldNames] = &_swiftEmptyArrayStorage;
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for MultimediaRecordRequestItems();
  return objc_msgSendSuper2(&v4, "init");
}

uint64_t type metadata accessor for MultimediaRecordRequestItems()
{
  return self;
}

id MultimediaRecordRequestItems.__deallocating_deinit()
{
  return sub_100017C00(type metadata accessor for MultimediaRecordRequestItems);
}

uint64_t ClassKitServiceOperations.fetchRecordsforDownloading(isDraft:request:progressBlock:recordResultBlock:completionBlock:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v27 = a5;
  uint64_t v28 = a7;
  uint64_t v13 = sub_10000CE58(&qword_10023BE50);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for MultimediaRecordsRequest(0);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (uint64_t *)((char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000176D8(a2, v19);
  sub_10001851C((uint64_t)v19, (uint64_t)v15, type metadata accessor for MultimediaRecordsRequest);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
  id v20 = objc_allocWithZone((Class)sub_10000CE58(&qword_10023BE58));
  uint64_t v21 = (void *)CKCodeOperation.init(functionName:request:)();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = a3;
  *(void *)(v22 + 24) = a4;
  swift_retain();
  dispatch thunk of CKCodeOperation.perRecordProgressBlock.setter();
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v27;
  *(void *)(v23 + 24) = a6;
  swift_retain();
  dispatch thunk of CKCodeOperation.perRecordResultBlock.setter();
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v28;
  *(void *)(v24 + 24) = a8;
  swift_retain();
  dispatch thunk of CKCodeOperation.codeOperationResultBlock.setter();
  if (qword_10023B910 != -1) {
    swift_once();
  }
  id v25 = *(id *)(qword_10023E8B0 + 56);
  CKCodeService.add<A, B>(_:)();

  return sub_1000185EC((uint64_t)v19, type metadata accessor for MultimediaRecordsRequest);
}

void sub_1000169CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = _convertErrorToNSError(_:)();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);
}

void sub_100016A3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100018390();
  v5.super.isa = Array._bridgeToObjectiveC()().super.isa;
  if (a2) {
    uint64_t v6 = _convertErrorToNSError(_:)();
  }
  else {
    uint64_t v6 = 0;
  }
  id v7 = (id)v6;
  (*(void (**)(uint64_t, Class))(a3 + 16))(a3, v5.super.isa);
}

uint64_t ClassKitServiceOperations.fetchRecordsforStreaming(isDraft:request:progressBlock:recordResultBlock:completionBlock:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v27 = a5;
  uint64_t v28 = a7;
  uint64_t v13 = sub_10000CE58(&qword_10023BE50);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for MultimediaRecordsRequest(0);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (uint64_t *)((char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000176D8(a2, v19);
  sub_10001851C((uint64_t)v19, (uint64_t)v15, type metadata accessor for MultimediaRecordsRequest);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
  id v20 = objc_allocWithZone((Class)sub_10000CE58(&qword_10023BE58));
  uint64_t v21 = (void *)CKCodeOperation.init(functionName:request:)();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = a3;
  *(void *)(v22 + 24) = a4;
  swift_retain();
  dispatch thunk of CKCodeOperation.perRecordProgressBlock.setter();
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v27;
  *(void *)(v23 + 24) = a6;
  swift_retain();
  dispatch thunk of CKCodeOperation.perRecordResultBlock.setter();
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v28;
  *(void *)(v24 + 24) = a8;
  swift_retain();
  dispatch thunk of CKCodeOperation.codeOperationResultBlock.setter();
  if (qword_10023B910 != -1) {
    swift_once();
  }
  id v25 = *(id *)(qword_10023E8B0 + 56);
  CKCodeService.add<A, B>(_:)();

  return sub_1000185EC((uint64_t)v19, type metadata accessor for MultimediaRecordsRequest);
}

void sub_100016DE8(uint64_t a1, void *a2, char a3, void (*a4)(uint64_t, void *))
{
  if (a3)
  {
    swift_errorRetain();
    a4(a1, a2);
    sub_100018510(a2, 1);
  }
  else
  {
    a4(a1, 0);
  }
}

uint64_t sub_100016E70(uint64_t a1, void (*a2)(void *, uint64_t), uint64_t a3)
{
  uint64_t v34 = a3;
  int v35 = a2;
  uint64_t v39 = a1;
  uint64_t v3 = sub_10000CE58(&qword_10023B928);
  __chkstk_darwin(v3 - 8);
  NSArray v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Ckcode_RecordTransport();
  uint64_t v33 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for MultimediaRecordResponseItem(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for MultimediaRecordsResponse(0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (uint64_t *)((char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = sub_10000CE58(&qword_10023BFB8);
  __chkstk_darwin(v16);
  uint64_t v18 = (uint64_t *)((char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001844C(v39, (uint64_t)v18, &qword_10023BFB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = *v18;
    swift_errorRetain();
    v35(&_swiftEmptyArrayStorage, v19);
    swift_errorRelease();
    return swift_errorRelease();
  }
  else
  {
    uint64_t v21 = v35;
    uint64_t v39 = v9;
    uint64_t v36 = v6;
    sub_100018584((uint64_t)v18, (uint64_t)v15, type metadata accessor for MultimediaRecordsResponse);
    uint64_t v22 = *v15;
    unint64_t v40 = (unint64_t)&_swiftEmptyArrayStorage;
    uint64_t v23 = *(void *)(v22 + 16);
    if (v23)
    {
      uint64_t v32 = v15;
      unint64_t v24 = sub_100018390();
      uint64_t v25 = v22 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
      uint64_t v37 = *(void *)(v10 + 72);
      unint64_t v38 = v24;
      uint64_t v26 = (unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
      uint64_t v27 = (void (**)(char *, char *, uint64_t))(v33 + 32);
      uint64_t v33 = v22;
      swift_bridgeObjectRetain();
      uint64_t v28 = v36;
      do
      {
        sub_10001851C(v25, (uint64_t)v12, type metadata accessor for MultimediaRecordResponseItem);
        sub_10001844C((uint64_t)&v12[*(int *)(v39 + 24)], (uint64_t)v5, &qword_10023B928);
        if ((*v26)(v5, 1, v28) == 1)
        {
          Ckcode_RecordTransport.init()();
          sub_1000184B0((uint64_t)v5);
        }
        else
        {
          (*v27)(v8, v5, v28);
        }
        uint64_t v29 = CKRecord.init(_:)();
        sub_1000185EC((uint64_t)v12, type metadata accessor for MultimediaRecordResponseItem);
        if (v29)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          uint64_t v28 = v36;
        }
        v25 += v37;
        --v23;
      }
      while (v23);
      uint64_t v30 = (void *)v40;
      uint64_t v21 = v35;
      uint64_t v15 = v32;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v30 = &_swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease();
    v21(v30, 0);
    swift_bridgeObjectRelease();
    return sub_1000185EC((uint64_t)v15, type metadata accessor for MultimediaRecordsResponse);
  }
}

uint64_t sub_10001743C(uint64_t a1, void (*a2)(void, void, uint64_t))
{
  uint64_t v4 = type metadata accessor for HelloResponse(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_10000CE58(&qword_10023BFB0);
  __chkstk_darwin(v7);
  uint64_t v9 = (uint64_t *)((char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001844C(a1, (uint64_t)v9, &qword_10023BFB0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = *v9;
    swift_errorRetain();
    a2(0, 0, v10);
    swift_errorRelease();
    return swift_errorRelease();
  }
  else
  {
    sub_100018584((uint64_t)v9, (uint64_t)v6, type metadata accessor for HelloResponse);
    a2(*v6, v6[1], 0);
    return sub_1000185EC((uint64_t)v6, type metadata accessor for HelloResponse);
  }
}

void sub_100017648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    NSString v6 = String._bridgeToObjectiveC()();
    if (a3)
    {
LABEL_3:
      uint64_t v7 = _convertErrorToNSError(_:)();
      goto LABEL_6;
    }
  }
  else
  {
    NSString v6 = 0;
    if (a3) {
      goto LABEL_3;
    }
  }
  uint64_t v7 = 0;
LABEL_6:
  id v8 = (id)v7;
  (*(void (**)(uint64_t, NSString))(a4 + 16))(a4, v6);
}

uint64_t sub_1000176D8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v40 = type metadata accessor for MultimediaRecordRequestItem(0);
  uint64_t v4 = *(void *)(v40 - 8);
  uint64_t v5 = __chkstk_darwin(v40);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v36 - v8;
  a2[6] = &_swiftEmptyArrayStorage;
  type metadata accessor for MultimediaRecordsRequest(0);
  UnknownStorage.init()();
  uint64_t v10 = (void *)(a1 + OBJC_IVAR____TtC9progressd23MultimediaRecordRequest_zoneName);
  swift_beginAccess();
  uint64_t v11 = v10[1];
  *a2 = *v10;
  a2[1] = v11;
  uint64_t v12 = (void *)(a1 + OBJC_IVAR____TtC9progressd23MultimediaRecordRequest_zoneOwnerName);
  swift_beginAccess();
  uint64_t v13 = v12[1];
  a2[2] = *v12;
  a2[3] = v13;
  uint64_t v14 = (void *)(a1 + OBJC_IVAR____TtC9progressd23MultimediaRecordRequest_orgID);
  swift_beginAccess();
  uint64_t v15 = v14[1];
  a2[4] = *v14;
  a2[5] = v15;
  uint64_t v37 = a2;
  uint64_t v16 = (uint64_t *)(a1 + OBJC_IVAR____TtC9progressd23MultimediaRecordRequest_requestItems);
  swift_beginAccess();
  uint64_t v17 = *v16;
  if (!((unint64_t)*v16 >> 62))
  {
    uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    if (v18) {
      goto LABEL_3;
    }
LABEL_15:
    uint64_t v21 = &_swiftEmptyArrayStorage;
LABEL_16:
    swift_bridgeObjectRelease();
    int v35 = v37;
    uint64_t result = swift_bridgeObjectRelease();
    v35[6] = v21;
    return result;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v18 = result;
  if (!result) {
    goto LABEL_15;
  }
LABEL_3:
  if (v18 >= 1)
  {
    uint64_t v20 = 0;
    unint64_t v38 = v17 & 0xC000000000000001;
    uint64_t v21 = &_swiftEmptyArrayStorage;
    uint64_t v39 = v17;
    do
    {
      if (v38) {
        uint64_t v22 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v22 = (char *)*(id *)(v17 + 8 * v20 + 32);
      }
      uint64_t v23 = v22;
      UnknownStorage.init()();
      unint64_t v24 = &v23[OBJC_IVAR____TtC9progressd28MultimediaRecordRequestItems_recordName];
      swift_beginAccess();
      uint64_t v25 = *(void *)v24;
      uint64_t v26 = *((void *)v24 + 1);
      *(void *)uint64_t v9 = v25;
      *((void *)v9 + 1) = v26;
      uint64_t v27 = &v23[OBJC_IVAR____TtC9progressd28MultimediaRecordRequestItems_parentObjectID];
      swift_beginAccess();
      uint64_t v28 = *(void *)v27;
      uint64_t v29 = *((void *)v27 + 1);
      *((void *)v9 + 2) = v28;
      *((void *)v9 + 3) = v29;
      uint64_t v30 = &v23[OBJC_IVAR____TtC9progressd28MultimediaRecordRequestItems_parentEntityType];
      swift_beginAccess();
      BOOL v31 = *(void *)v30 < 7uLL;
      *((void *)v9 + 4) = *(void *)v30;
      v9[40] = v31;
      uint64_t v32 = &v23[OBJC_IVAR____TtC9progressd28MultimediaRecordRequestItems_assetFieldNames];
      swift_beginAccess();
      *((void *)v9 + 6) = *(void *)v32;
      sub_10001851C((uint64_t)v9, (uint64_t)v7, type metadata accessor for MultimediaRecordRequestItem);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v21 = (void *)sub_100017F48(0, v21[2] + 1, 1, v21);
      }
      unint64_t v34 = v21[2];
      unint64_t v33 = v21[3];
      if (v34 >= v33 >> 1) {
        uint64_t v21 = (void *)sub_100017F48(v33 > 1, v34 + 1, 1, v21);
      }
      ++v20;
      v21[2] = v34 + 1;
      sub_100018584((uint64_t)v7, (uint64_t)v21+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v34, type metadata accessor for MultimediaRecordRequestItem);

      sub_1000185EC((uint64_t)v9, type metadata accessor for MultimediaRecordRequestItem);
      uint64_t v17 = v39;
    }
    while (v18 != v20);
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t sub_100017B38()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

id ClassKitServiceOperations.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClassKitServiceOperations();
  return objc_msgSendSuper2(&v2, "init");
}

id ClassKitServiceOperations.__deallocating_deinit()
{
  return sub_100017C00(type metadata accessor for ClassKitServiceOperations);
}

id sub_100017C00(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, "dealloc");
}

void *sub_100017C38()
{
  type metadata accessor for ServerInteraction();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_100017CDC(1);
  qword_10023E8B0 = v0;
  return result;
}

uint64_t sub_100017C78()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_100017CA0(uint64_t a1, void *a2, char a3)
{
  sub_100016DE8(a1, a2, a3 & 1, *(void (**)(uint64_t, void *))(v3 + 16));
}

uint64_t sub_100017CC0(uint64_t a1)
{
  return sub_100016E70(a1, *(void (**)(void *, uint64_t))(v1 + 16), *(void *)(v1 + 24));
}

void *sub_100017CDC(char a1)
{
  objc_super v2 = v1;
  v2[2] = 0xD00000000000001ALL;
  v2[3] = 0x80000001001B85B0;
  v2[4] = 0x74694B7373616C43;
  v2[5] = 0xEF65636976726553;
  v2[6] = 0;
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [self containerWithIdentifier:v4];

  char v6 = a1 & 1;
  if (a1) {
    uint64_t v7 = 6254687;
  }
  else {
    uint64_t v7 = 6251615;
  }
  uint64_t v20 = v2[4];
  uint64_t v21 = v2[5];
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v7;
  v8._object = (void *)0xE300000000000000;
  String.append(_:)(v8);
  swift_bridgeObjectRetain();
  v9._countAndFlagsBits = 3157553;
  v9._object = (void *)0xE300000000000000;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(v5, "organizationCloudDatabase", v20, v21);
  id v11 = [v10 databaseScope];

  uint64_t v12 = sub_10000CB70((uint64_t)v11, v6);
  uint64_t v14 = v13;
  v2[6] = v12;
  swift_retain();
  swift_release();
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v16 = [v5 organizationCloudDatabase];
  id v17 = [v16 databaseScope];

  id v18 = [v5 codeServiceWithName:v15 databaseScope:v17];
  swift_release();
  v2[7] = v18;
  return v2;
}

uint64_t sub_100017EF8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocClassInstance(v0, 64, 7);
}

size_t sub_100017F48(size_t result, int64_t a2, char a3, void *a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10000CE58(&qword_10023BFC0);
  uint64_t v10 = *(void *)(type metadata accessor for MultimediaRecordRequestItem(0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t result = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_29;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(type metadata accessor for MultimediaRecordRequestItem(0) - 8);
  if (v5)
  {
    if (v13 < a4
      || (unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(void *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return (size_t)v13;
}

uint64_t _s9progressd25ClassKitServiceOperationsC21checkConnectionStatus10completionyySSSg_s5Error_pSgtc_tF_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HelloRequest(0);
  uint64_t result = __chkstk_darwin(v4);
  int64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_10023B910 != -1) {
    uint64_t result = swift_once();
  }
  if (*(void *)(qword_10023E8B0 + 48))
  {
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = a1;
    *(void *)(v8 + 24) = a2;
    __chkstk_darwin(v8);
    *(void *)&v9[-16] = 0xD000000000000014;
    *(void *)&v9[-8] = 0x80000001001B8590;
    sub_1000183F4();
    swift_retain();
    swift_retain();
    static Message.with(_:)();
    ClassKitServiceAPIAsyncClient.hello(_:completion:)((uint64_t)v7);
    sub_1000185EC((uint64_t)v7, type metadata accessor for HelloRequest);
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for ClassKitServiceOperations()
{
  return self;
}

uint64_t type metadata accessor for ServerInteraction()
{
  return self;
}

uint64_t sub_10001832C()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100018364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100017648(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_10001836C()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

void sub_100018380(uint64_t a1, uint64_t a2)
{
  sub_1000169CC(a1, a2, *(void *)(v2 + 16));
}

void sub_100018388(uint64_t a1, uint64_t a2)
{
  sub_100016A3C(a1, a2, *(void *)(v2 + 16));
}

unint64_t sub_100018390()
{
  unint64_t result = qword_10023BFA8;
  if (!qword_10023BFA8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10023BFA8);
  }
  return result;
}

uint64_t sub_1000183D0(uint64_t a1)
{
  return sub_10001743C(a1, *(void (**)(void, void, uint64_t))(v1 + 16));
}

uint64_t sub_1000183D8(uint64_t a1)
{
  return sub_100018BE8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_1000183F4()
{
  unint64_t result = qword_10023B9A8;
  if (!qword_10023B9A8)
  {
    type metadata accessor for HelloRequest(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10023B9A8);
  }
  return result;
}

uint64_t sub_10001844C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10000CE58(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000184B0(uint64_t a1)
{
  uint64_t v2 = sub_10000CE58(&qword_10023B928);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_100018510(void *a1, char a2)
{
  if (a2) {
    swift_errorRelease();
  }
  else {
}
  }

uint64_t sub_10001851C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100018584(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000185EC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t ClassKitServiceAPIAsyncClient.__allocating_init(codeService:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t ClassKitServiceAPIAsync.hello(name:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = type metadata accessor for HelloRequest(0);
  __chkstk_darwin(v12);
  uint64_t v14 = &v16[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = a1;
  uint64_t v18 = a2;
  sub_10001930C((unint64_t *)&qword_10023B9A8, (void (*)(uint64_t))type metadata accessor for HelloRequest);
  static Message.with(_:)();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 8))(v14, a3, a4, a5, a6);
  return sub_100019354((uint64_t)v14, type metadata accessor for HelloRequest);
}

uint64_t ClassKitServiceAPI.HelloOperation.__allocating_init(request:)(uint64_t a1)
{
  return sub_10001889C(a1, &qword_10023BFC8);
}

uint64_t ClassKitServiceAPI.HelloOperation.init(request:)(uint64_t a1)
{
  return sub_100018984(a1, &qword_10023BFC8);
}

void ClassKitServiceAPI.HelloOperation.init(functionName:request:)()
{
}

uint64_t ClassKitServiceAPI.GetPublishedDownloadURLAssetByRecordNameOperation.__allocating_init(request:)(uint64_t a1)
{
  return sub_10001889C(a1, &qword_10023BE50);
}

uint64_t sub_10001889C(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = sub_10000CE58(a2);
  __chkstk_darwin(v5 - 8);
  int64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_allocWithZone(v2);
  sub_10001844C(a1, (uint64_t)v7, a2);
  uint64_t v9 = CKCodeOperation.init(functionName:request:)();
  sub_100015718(a1, a2);
  return v9;
}

uint64_t ClassKitServiceAPI.GetPublishedDownloadURLAssetByRecordNameOperation.init(request:)(uint64_t a1)
{
  return sub_100018984(a1, &qword_10023BE50);
}

uint64_t sub_100018984(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_10000CE58(a2);
  __chkstk_darwin(v4 - 8);
  sub_10001844C(a1, (uint64_t)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
  uint64_t v6 = CKCodeOperation.init(functionName:request:)();
  sub_100015718(a1, a2);
  return v6;
}

void ClassKitServiceAPI.GetPublishedDownloadURLAssetByRecordNameOperation.init(functionName:request:)()
{
}

uint64_t ClassKitServiceAPI.GetPublishedStreamingURLAssetRecordNameOperation.__allocating_init(request:)(uint64_t a1)
{
  return sub_10001889C(a1, &qword_10023BE50);
}

uint64_t ClassKitServiceAPI.GetPublishedStreamingURLAssetRecordNameOperation.init(request:)(uint64_t a1)
{
  return sub_100018984(a1, &qword_10023BE50);
}

void ClassKitServiceAPI.GetPublishedStreamingURLAssetRecordNameOperation.init(functionName:request:)()
{
}

uint64_t ClassKitServiceAPI.GetDraftDownloadURLAssetByRecordNameOperation.__allocating_init(request:)(uint64_t a1)
{
  return sub_10001889C(a1, &qword_10023BE50);
}

uint64_t ClassKitServiceAPI.GetDraftDownloadURLAssetByRecordNameOperation.init(request:)(uint64_t a1)
{
  return sub_100018984(a1, &qword_10023BE50);
}

void ClassKitServiceAPI.GetDraftDownloadURLAssetByRecordNameOperation.init(functionName:request:)()
{
}

uint64_t ClassKitServiceAPI.GetDraftStreamingURLAssetRecordNameOperation.__allocating_init(request:)(uint64_t a1)
{
  return sub_10001889C(a1, &qword_10023BE50);
}

uint64_t ClassKitServiceAPI.GetDraftStreamingURLAssetRecordNameOperation.init(request:)(uint64_t a1)
{
  return sub_100018984(a1, &qword_10023BE50);
}

void ClassKitServiceAPI.GetDraftStreamingURLAssetRecordNameOperation.init(functionName:request:)()
{
}

void sub_100018B84()
{
}

id _s9progressd18ClassKitServiceAPIO49GetPublishedDownloadURLAssetByRecordNameOperationCfD_0()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100018BE8(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v5 = (void *)result;
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v5 = a2;
    v5[1] = a3;
  }
  return result;
}

uint64_t ClassKitServiceAPIAsync.getPublishedDownloadURLAssetByRecordName(zoneName:zoneOwnerName:orgID:multimediaRequestItems:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v24 = a8;
  uint64_t v22 = a9;
  uint64_t v23 = a10;
  uint64_t v18 = type metadata accessor for MultimediaRecordsRequest(0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v22 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a1;
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v29 = a5;
  uint64_t v30 = a6;
  uint64_t v31 = a7;
  sub_10001930C(&qword_10023B9D8, (void (*)(uint64_t))type metadata accessor for MultimediaRecordsRequest);
  static Message.with(_:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a11 + 16))(v20, v24, v22, v23, a11);
  return sub_100019354((uint64_t)v20, type metadata accessor for MultimediaRecordsRequest);
}

uint64_t ClassKitServiceAPIAsync.getPublishedStreamingURLAssetRecordName(zoneName:zoneOwnerName:orgID:multimediaRequestItems:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v24 = a8;
  uint64_t v22 = a9;
  uint64_t v23 = a10;
  uint64_t v18 = type metadata accessor for MultimediaRecordsRequest(0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v22 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a1;
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v29 = a5;
  uint64_t v30 = a6;
  uint64_t v31 = a7;
  sub_10001930C(&qword_10023B9D8, (void (*)(uint64_t))type metadata accessor for MultimediaRecordsRequest);
  static Message.with(_:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a11 + 24))(v20, v24, v22, v23, a11);
  return sub_100019354((uint64_t)v20, type metadata accessor for MultimediaRecordsRequest);
}

uint64_t ClassKitServiceAPIAsync.getDraftDownloadURLAssetByRecordName(zoneName:zoneOwnerName:orgID:multimediaRequestItems:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v24 = a8;
  uint64_t v22 = a9;
  uint64_t v23 = a10;
  uint64_t v18 = type metadata accessor for MultimediaRecordsRequest(0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v22 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a1;
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v29 = a5;
  uint64_t v30 = a6;
  uint64_t v31 = a7;
  sub_10001930C(&qword_10023B9D8, (void (*)(uint64_t))type metadata accessor for MultimediaRecordsRequest);
  static Message.with(_:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a11 + 32))(v20, v24, v22, v23, a11);
  return sub_100019354((uint64_t)v20, type metadata accessor for MultimediaRecordsRequest);
}

uint64_t ClassKitServiceAPIAsync.getDraftStreamingURLAssetRecordName(zoneName:zoneOwnerName:orgID:multimediaRequestItems:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v24 = a8;
  uint64_t v22 = a9;
  uint64_t v23 = a10;
  uint64_t v18 = type metadata accessor for MultimediaRecordsRequest(0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v22 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a1;
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v29 = a5;
  uint64_t v30 = a6;
  uint64_t v31 = a7;
  sub_10001930C(&qword_10023B9D8, (void (*)(uint64_t))type metadata accessor for MultimediaRecordsRequest);
  static Message.with(_:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a11 + 40))(v20, v24, v22, v23, a11);
  return sub_100019354((uint64_t)v20, type metadata accessor for MultimediaRecordsRequest);
}

uint64_t sub_1000191BC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13 = (void *)result;
  if (a3)
  {
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v13 = a2;
    v13[1] = a3;
  }
  if (a5)
  {
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
    v13[2] = a4;
    v13[3] = a5;
  }
  if (a7)
  {
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
    v13[4] = a6;
    v13[5] = a7;
  }
  if (*(void *)(a8 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
    v13[6] = a8;
  }
  return result;
}

uint64_t ClassKitServiceAPIAsyncClient.init(codeService:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t sub_1000192A0(uint64_t result)
{
  uint64_t v2 = *(void *)(v1 + 24);
  if (v2)
  {
    uint64_t v3 = (void *)result;
    uint64_t v4 = *(void *)(v1 + 16);
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
    void *v3 = v4;
    v3[1] = v2;
  }
  return result;
}

uint64_t sub_1000192F4(uint64_t a1)
{
  return sub_1000193B4(a1);
}

uint64_t sub_10001930C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100019354(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000193B4(uint64_t a1)
{
  return sub_1000191BC(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8]);
}

void ClassKitServiceAPIAsyncClient.hello(_:completion:)(uint64_t a1)
{
  uint64_t v2 = sub_10000CE58(&qword_10023BFC8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  int64_t v7 = (char *)&v11 - v6;
  sub_10001972C(a1, (uint64_t)&v11 - v6, type metadata accessor for HelloRequest);
  uint64_t v8 = type metadata accessor for HelloRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 0, 1, v8);
  objc_allocWithZone((Class)type metadata accessor for ClassKitServiceAPI.HelloOperation(0));
  sub_10001844C((uint64_t)v7, (uint64_t)v5, &qword_10023BFC8);
  uint64_t v9 = (void *)CKCodeOperation.init(functionName:request:)();
  sub_100015718((uint64_t)v7, &qword_10023BFC8);
  id v10 = v9;
  swift_retain();
  dispatch thunk of CKCodeOperation.codeOperationResultBlock.setter();

  CKCodeService.add<A, B>(_:)();
}

uint64_t type metadata accessor for ClassKitServiceAPI.HelloOperation(uint64_t a1)
{
  return sub_100011A94(a1, (uint64_t *)&unk_10023BFD0);
}

void ClassKitServiceAPIAsyncClient.getPublishedDownloadURLAssetByRecordName(_:completion:)(uint64_t a1)
{
  uint64_t v2 = sub_10000CE58(&qword_10023BE50);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  int64_t v7 = (char *)&v11 - v6;
  sub_10001972C(a1, (uint64_t)&v11 - v6, type metadata accessor for MultimediaRecordsRequest);
  uint64_t v8 = type metadata accessor for MultimediaRecordsRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 0, 1, v8);
  objc_allocWithZone((Class)type metadata accessor for ClassKitServiceAPI.GetPublishedDownloadURLAssetByRecordNameOperation(0));
  sub_10001844C((uint64_t)v7, (uint64_t)v5, &qword_10023BE50);
  uint64_t v9 = (void *)CKCodeOperation.init(functionName:request:)();
  sub_100015718((uint64_t)v7, &qword_10023BE50);
  id v10 = v9;
  swift_retain();
  dispatch thunk of CKCodeOperation.codeOperationResultBlock.setter();

  CKCodeService.add<A, B>(_:)();
}

uint64_t sub_10001972C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for ClassKitServiceAPI.GetPublishedDownloadURLAssetByRecordNameOperation(uint64_t a1)
{
  return sub_100011A94(a1, (uint64_t *)&unk_10023C020);
}

void ClassKitServiceAPIAsyncClient.getPublishedStreamingURLAssetRecordName(_:completion:)(uint64_t a1)
{
  uint64_t v2 = sub_10000CE58(&qword_10023BE50);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  int64_t v7 = (char *)&v11 - v6;
  sub_10001972C(a1, (uint64_t)&v11 - v6, type metadata accessor for MultimediaRecordsRequest);
  uint64_t v8 = type metadata accessor for MultimediaRecordsRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 0, 1, v8);
  objc_allocWithZone((Class)type metadata accessor for ClassKitServiceAPI.GetPublishedStreamingURLAssetRecordNameOperation(0));
  sub_10001844C((uint64_t)v7, (uint64_t)v5, &qword_10023BE50);
  uint64_t v9 = (void *)CKCodeOperation.init(functionName:request:)();
  sub_100015718((uint64_t)v7, &qword_10023BE50);
  id v10 = v9;
  swift_retain();
  dispatch thunk of CKCodeOperation.codeOperationResultBlock.setter();

  CKCodeService.add<A, B>(_:)();
}

uint64_t type metadata accessor for ClassKitServiceAPI.GetPublishedStreamingURLAssetRecordNameOperation(uint64_t a1)
{
  return sub_100011A94(a1, (uint64_t *)&unk_10023C070);
}

void ClassKitServiceAPIAsyncClient.getDraftDownloadURLAssetByRecordName(_:completion:)(uint64_t a1)
{
  uint64_t v2 = sub_10000CE58(&qword_10023BE50);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  int64_t v7 = (char *)&v11 - v6;
  sub_10001972C(a1, (uint64_t)&v11 - v6, type metadata accessor for MultimediaRecordsRequest);
  uint64_t v8 = type metadata accessor for MultimediaRecordsRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 0, 1, v8);
  objc_allocWithZone((Class)type metadata accessor for ClassKitServiceAPI.GetDraftDownloadURLAssetByRecordNameOperation(0));
  sub_10001844C((uint64_t)v7, (uint64_t)v5, &qword_10023BE50);
  uint64_t v9 = (void *)CKCodeOperation.init(functionName:request:)();
  sub_100015718((uint64_t)v7, &qword_10023BE50);
  id v10 = v9;
  swift_retain();
  dispatch thunk of CKCodeOperation.codeOperationResultBlock.setter();

  CKCodeService.add<A, B>(_:)();
}

uint64_t type metadata accessor for ClassKitServiceAPI.GetDraftDownloadURLAssetByRecordNameOperation(uint64_t a1)
{
  return sub_100011A94(a1, (uint64_t *)&unk_10023C0C0);
}

void ClassKitServiceAPIAsyncClient.getDraftStreamingURLAssetRecordName(_:completion:)(uint64_t a1)
{
  uint64_t v2 = sub_10000CE58(&qword_10023BE50);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  int64_t v7 = (char *)&v11 - v6;
  sub_10001972C(a1, (uint64_t)&v11 - v6, type metadata accessor for MultimediaRecordsRequest);
  uint64_t v8 = type metadata accessor for MultimediaRecordsRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 0, 1, v8);
  objc_allocWithZone((Class)type metadata accessor for ClassKitServiceAPI.GetDraftStreamingURLAssetRecordNameOperation(0));
  sub_10001844C((uint64_t)v7, (uint64_t)v5, &qword_10023BE50);
  uint64_t v9 = (void *)CKCodeOperation.init(functionName:request:)();
  sub_100015718((uint64_t)v7, &qword_10023BE50);
  id v10 = v9;
  swift_retain();
  dispatch thunk of CKCodeOperation.codeOperationResultBlock.setter();

  CKCodeService.add<A, B>(_:)();
}

uint64_t type metadata accessor for ClassKitServiceAPI.GetDraftStreamingURLAssetRecordNameOperation(uint64_t a1)
{
  return sub_100011A94(a1, (uint64_t *)&unk_10023C110);
}

uint64_t ClassKitServiceAPIAsyncClient.deinit()
{
  return v0;
}

uint64_t ClassKitServiceAPIAsyncClient.__deallocating_deinit()
{
  return _swift_deallocClassInstance(v0, 24, 7);
}

void sub_100019D40(uint64_t a1)
{
}

void sub_100019D64(uint64_t a1)
{
}

void sub_100019D88(uint64_t a1)
{
}

void sub_100019DAC(uint64_t a1)
{
}

void sub_100019DD0(uint64_t a1)
{
}

ValueMetadata *type metadata accessor for ClassKitServiceAPI()
{
  return &type metadata for ClassKitServiceAPI;
}

uint64_t sub_100019E04()
{
  return sub_100019E60();
}

uint64_t sub_100019E10()
{
  return type metadata accessor for ClassKitServiceAPI.HelloOperation(0);
}

uint64_t sub_100019E18()
{
  return sub_100019E60();
}

uint64_t sub_100019E24()
{
  return type metadata accessor for ClassKitServiceAPI.GetPublishedDownloadURLAssetByRecordNameOperation(0);
}

uint64_t sub_100019E2C()
{
  return sub_100019E60();
}

uint64_t sub_100019E38()
{
  return type metadata accessor for ClassKitServiceAPI.GetPublishedStreamingURLAssetRecordNameOperation(0);
}

uint64_t sub_100019E40()
{
  return sub_100019E60();
}

uint64_t sub_100019E4C()
{
  return type metadata accessor for ClassKitServiceAPI.GetDraftDownloadURLAssetByRecordNameOperation(0);
}

uint64_t sub_100019E54()
{
  return sub_100019E60();
}

uint64_t sub_100019E60()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100019E9C()
{
  return type metadata accessor for ClassKitServiceAPI.GetDraftStreamingURLAssetRecordNameOperation(0);
}

uint64_t type metadata accessor for ClassKitServiceAPIAsyncClient()
{
  return self;
}

BOOL sub_100019EC8(void *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v9 = a2;
  id v10 = a5;
  if (a1)
  {
    if ([v9 isPersonSearch])
    {
      uint64_t v11 = [v9 predicateForPersons];
      uint64_t v12 = objc_opt_class();
      uint64_t v13 = [v9 personSortDescriptors];
      [a1 searchFor:v12 predicate:v11 sortDescriptors:v13 limit:a4 offset:a3 block:v10];

      uint64_t v14 = [a1 personIDsMatchingConstraintsForSearchSpecification:v9];
      if ([v14 count])
      {
        uint64_t v15 = [v9 predicateForPersonsWithPersonIDs:v14];
      }
      else
      {
        uint64_t v15 = 0;
      }
    }
    else
    {
      uint64_t v15 = 0;
    }
    if ([v9 isClassMemberSearch])
    {
      unint64_t v16 = [a1 personIDsForClassMembersMatchingConstraintsForSearchSpecification:v9];
      if ([v16 count])
      {
        uint64_t v17 = [v9 predicateForPersonsWithObjectIDs:v16];

        uint64_t v15 = (void *)v17;
      }
    }
    if ([v9 isGroupMemberSearch])
    {
      uint64_t v18 = [a1 personIDsForGroupMembersMatchingConstraintsForSearchSpecification:v9];
      if ([v18 count])
      {
        uint64_t v19 = [v9 predicateForPersonsWithObjectIDs:v18];

        uint64_t v15 = (void *)v19;
      }
    }
    if (v15)
    {
      uint64_t v20 = objc_opt_class();
      uint64_t v21 = [v9 personSortDescriptors];
      [a1 searchFor:v20 predicate:v15 sortDescriptors:v21 limit:a4 offset:a3 block:v10];
    }
    if ([v9 isClassSearch])
    {
      uint64_t v22 = [v9 predicateForClasses];
      uint64_t v23 = objc_opt_class();
      uint64_t v24 = [v9 classSortDescriptors];
      [a1 searchFor:v23 predicate:v22 sortDescriptors:v24 limit:a4 offset:a3 block:v10];
    }
    if ([v9 isGroupSearch])
    {
      uint64_t v25 = [v9 predicateForGroups];
      uint64_t v26 = objc_opt_class();
      uint64_t v27 = [v9 groupSortDescriptors];
      [a1 searchFor:v26 predicate:v25 sortDescriptors:v27 limit:a4 offset:a3 block:v10];
    }
    if ([v9 isLocationSearch])
    {
      uint64_t v28 = [a1 locationSearchPredicateForSearchSpec:v9];
      uint64_t v29 = objc_opt_class();
      uint64_t v30 = [v9 locationSortDescriptors];
      [a1 searchFor:v29 predicate:v28 sortDescriptors:v30 limit:a4 offset:a3 block:v10];
    }
    if ([v9 isOrganizationSearch])
    {
      uint64_t v31 = [a1 organizationSearchPredicateForSearchSpec:v9];
      uint64_t v32 = objc_opt_class();
      unint64_t v33 = [v9 organizationSortDescriptors];
      [a1 searchFor:v32 predicate:v31 sortDescriptors:v33 limit:a4 offset:a3 block:v10];
    }
  }

  return a1 != 0;
}

void sub_10001A39C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void **)(a1 + 40);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10001A454;
  v5[3] = &unk_1001F1D98;
  uint64_t v4 = *(void **)(a1 + 48);
  id v6 = *(id *)(a1 + 56);
  id v7 = *(id *)(a1 + 64);
  sub_100007540(v2, v3, 1, v4, v5);
}

void sub_10001A454(uint64_t a1, uint64_t *a2)
{
  sub_100003BF0(a2, *(void **)(a1 + 32));
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  [*(id *)(a1 + 40) addObject:v3];
}

id sub_10001AAE4(void *a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    a1 = [a1 prlSelectColumn:@"personID" havingPrivilege:a2 whereConstraintColumn:@"locationID" hasValues:a3];
    uint64_t v3 = vars8;
  }
  return a1;
}

id sub_10001AB2C(void *a1, void *a2, void *a3)
{
  uint64_t v5 = a2;
  id v6 = v5;
  if (a1)
  {
    if (!v5) {
      id v6 = @"❌✋🔒";
    }
    id v7 = a3;
    uint64_t v8 = [a1 prlConstraintSQLOnColumn:@"locationID" andValues:v7];
    +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"select objectID from CLSPerson where CLSPerson.objectid NOT IN( select distinct personID from PDPersonRoleLocation as PRL  join PDRolePrivilege as P  on PRL.roleID = P.roleID and P.privilegeName =?  %@);",
    id v9 = v8);
    id v10 = objc_msgSend(objc_alloc((Class)NSMutableArray), "initWithObjects:", v6, 0);
    [v10 addObjectsFromArray:v7];

    a1 = [a1 objectIDsForSQL:v9 resultColumnName:@"objectID" bindings:v10];
  }

  return a1;
}

id sub_10001B670(id a1, void *a2, char a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a4;
  id v11 = a5;
  if (a1)
  {
    if (a3)
    {
      uint64_t v12 = off_1001F1468;
LABEL_7:
      a1 = [objc_alloc(*v12) initWithDatabase:a1 objectsMatching:v9 enumerationBlock:v10 finishBlock:v11];
      goto LABEL_8;
    }
    sub_100003A74(a1);
    uint64_t v13 = (unsigned __int8 *)objc_claimAutoreleasedReturnValue();
    if (v13)
    {
      int v14 = v13[8];

      if (v14)
      {
        uint64_t v12 = off_1001F1470;
        goto LABEL_7;
      }
    }
    a1 = 0;
  }
LABEL_8:

  return a1;
}

uint64_t sub_10001BC90(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  if (!a1) {
    goto LABEL_30;
  }
  if (![v3 length])
  {
    CLSInitLog();
    unint64_t v16 = CLSLogDefault;
    if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      a1 = 2;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_INFO, "tried to query authorization status for empty objectID", buf, 2u);
    }
    else
    {
      a1 = 2;
    }
    goto LABEL_30;
  }
  *(void *)long long buf = 0;
  int v35 = buf;
  uint64_t v36 = 0x2020000000;
  uint64_t v37 = 2;
  uint64_t v30 = 0;
  uint64_t v31 = &v30;
  uint64_t v32 = 0x2020000000;
  char v33 = 0;
  v26[0] = _NSConcreteStackBlock;
  v26[1] = 3221225472;
  v26[2] = sub_10001C0E4;
  v26[3] = &unk_1001F1E88;
  v26[4] = a1;
  id v5 = v4;
  id v27 = v5;
  uint64_t v28 = &v30;
  uint64_t v29 = buf;
  id v6 = objc_retainBlock(v26);
  char v7 = ((uint64_t (*)(void))v6[2])();
  if (!*((unsigned char *)v31 + 24))
  {
    uint64_t v8 = objc_opt_class();
    v38[0] = v5;
    v38[1] = &off_10020ACF8;
    id v9 = +[NSArray arrayWithObjects:v38 count:2];
    id v10 = [(id)a1 select:v8 where:@"parentObjectID = ? and domain = ?" bindings:v9];

    uint64_t v11 = [(id)a1 select:objc_opt_class() identity:v5];
    uint64_t v12 = (void *)v11;
    if (!v10 || !v11) {
      goto LABEL_26;
    }
    uint64_t v13 = [v10 ownerPersonID];
    if (!v13)
    {
      uint64_t v22 = sub_100003E58((void *)a1);
      uint64_t v21 = [v22 objectID];
      if (!v21)
      {

        goto LABEL_22;
      }
    }
    uint64_t v25 = [v10 ownerPersonID];
    if (v25)
    {
      uint64_t v24 = sub_100003E58((void *)a1);
      uint64_t v23 = [v24 objectID];
      if (v23)
      {
        uint64_t v20 = [v10 ownerPersonID];
        int v14 = sub_100003E58((void *)a1);
        uint64_t v15 = [v14 objectID];
        unsigned int v19 = [v20 isEqualToString:v15];

        if (v13)
        {

          if (!v19) {
            goto LABEL_26;
          }
        }
        else
        {

          if ((v19 & 1) == 0)
          {
LABEL_26:

            goto LABEL_27;
          }
        }
LABEL_22:
        id v17 = [v10 state];
        if (v17 == (id)1 || [v10 state] == (id)2) {
          sub_1001566F0(a1, v12, v17 != (id)1);
        }
        char v7 = ((uint64_t (*)(void *))v6[2])(v6);
        goto LABEL_26;
      }

      if (!v13) {
        goto LABEL_19;
      }
    }
    else if (!v13)
    {
LABEL_19:

      goto LABEL_27;
    }
  }
LABEL_27:
  if ((v7 & 1) == 0) {
    *((void *)v35 + 3) = 2;
  }
  a1 = *((void *)v35 + 3);

  _Block_object_dispose(&v30, 8);
  _Block_object_dispose(buf, 8);
LABEL_30:

  return a1;
}

void sub_10001C0B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v17 - 144), 8);
  _Unwind_Resume(a1);
}

id sub_10001C0E4(uint64_t a1)
{
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_10001C184;
  v7[3] = &unk_1001F1E10;
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = *(id *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 32);
  id v8 = v3;
  uint64_t v9 = v4;
  long long v10 = *(_OWORD *)(a1 + 48);
  id v5 = sub_10000749C(v2, v7);

  return v5;
}

void sub_10001C184(uint64_t a1)
{
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v2 = +[NSArray arrayWithObjects:&v6 count:1];
  id v3 = *(void **)(a1 + 40);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10001C268;
  v4[3] = &unk_1001F1DE8;
  long long v5 = *(_OWORD *)(a1 + 48);
  sub_100007540(v3, @"select statusID, deniedCount, authorizedCount from AuthStatus where identifier = ? and parentStatusID is null limit 1", 1, v2, v4);
}

void sub_10001C268(uint64_t a1, void *a2)
{
  id v3 = a2;
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 1;
  long long v10 = v3;
  uint64_t v4 = sub_100003BF0(v3, @"deniedCount");
  uint64_t v5 = (uint64_t)[v4 integerValue];

  if (v5 >= 1)
  {
    uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
    uint64_t v7 = 2;
LABEL_5:
    *(void *)(v6 + 24) = v7;
    goto LABEL_6;
  }
  id v8 = sub_100003BF0(v10, @"authorizedCount");
  uint64_t v9 = (uint64_t)[v8 integerValue];

  uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
  if (v9 >= 1)
  {
    uint64_t v7 = 1;
    goto LABEL_5;
  }
  *(void *)(v6 + 24) = 0;
LABEL_6:
}

void sub_10001C5E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose((const void *)(v31 - 192), 8);
  _Block_object_dispose((const void *)(v31 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_10001C624(uint64_t a1)
{
  id v3 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
  if (v3)
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), v3);
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
    v17[0] = *(void *)(a1 + 32);
    v17[1] = v4;
    uint64_t v5 = +[NSArray arrayWithObjects:v17 count:2];
    uint64_t v6 = @"select statusID, deniedCount, authorizedCount from AuthStatus where identifier = ? and parentStatusID = ? limit 1";
  }
  else
  {
    uint64_t v18 = *(void *)(a1 + 32);
    uint64_t v5 = +[NSArray arrayWithObjects:&v18 count:1];
    uint64_t v6 = @"select statusID, deniedCount, authorizedCount from AuthStatus where identifier = ? and parentStatusID is null limit 1";
  }
  uint64_t v11 = 0;
  uint64_t v12 = &v11;
  uint64_t v13 = 0x3032000000;
  int v14 = sub_10000B624;
  uint64_t v15 = sub_10000B52C;
  id v16 = 0;
  uint64_t v7 = *(void **)(a1 + 40);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_10001C810;
  v9[3] = &unk_1001F1E38;
  void v9[4] = &v11;
  long long v10 = *(_OWORD *)(a1 + 64);
  if (sub_100007540(v7, v6, 1, v5, v9))
  {
    id v8 = (void *)v12[5];
    if (v8) {
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), v8);
    }
  }
  _Block_object_dispose(&v11, 8);
}

void sub_10001C7F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10001C810(void *a1, void *a2, unsigned char *a3)
{
  uint64_t v5 = a2;
  uint64_t v6 = sub_100003BF0(v5, @"statusID");
  uint64_t v7 = *(void *)(a1[4] + 8);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;

  uint64_t v9 = sub_100003BF0(v5, @"deniedCount");
  *(void *)(*(void *)(a1[5] + 8) + 24) = [v9 integerValue];

  long long v10 = sub_100003BF0(v5, @"authorizedCount");

  *(void *)(*(void *)(a1[6] + 8) + 24) = [v10 integerValue];
  *a3 = 1;
}

uint64_t sub_10001C8D0(uint64_t a1)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), *(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40));
  id v3 = +[NSUUID UUID];
  uint64_t v4 = [v3 UUIDString];

  v12[0] = *(void *)(a1 + 32);
  uint64_t v5 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
  uint64_t v6 = v5;
  if (!v5)
  {
    uint64_t v6 = +[NSNull null];
  }
  v12[1] = v6;
  v12[2] = v4;
  uint64_t v7 = +[NSArray arrayWithObjects:v12 count:3];
  if (!v5) {

  }
  uint64_t v8 = sub_100007540(*(void **)(a1 + 40), @"insert into AuthStatus (identifier, parentStatusID, statusID) values(?,?,?)", 1, v7, 0);
  uint64_t v9 = *(void *)(*(void *)(a1 + 56) + 8);
  long long v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v4;

  return v8;
}

id sub_10001CA14(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  if (!a1)
  {
LABEL_5:
    id v11 = 0;
    goto LABEL_10;
  }
  if ((unint64_t)(a2 - 3) <= 0xFFFFFFFFFFFFFFFDLL)
  {
    CLSInitLog();
    uint64_t v6 = (void *)CLSLogDefault;
    if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_INFO))
    {
      uint64_t v7 = v6;
      uint64_t v8 = NSStringFromAuthorizationStatus();
      uint64_t v9 = NSStringFromAuthorizationStatus();
      long long v10 = NSStringFromAuthorizationStatus();
      *(_DWORD *)long long buf = 138412802;
      *(void *)&uint8_t buf[4] = v8;
      __int16 v23 = 2112;
      uint64_t v24 = v9;
      __int16 v25 = 2112;
      uint64_t v26 = v10;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Attempted to set authorization status: '%@'; only are: ['%@', '%@'] are allowed;",
        buf,
        0x20u);
    }
    goto LABEL_5;
  }
  uint64_t v21 = 0;
  *(void *)long long buf = 0;
  id v20 = 0;
  unsigned int v12 = [a1 _statusID:&v20 deniedCount:&v21 authCount:buf forHandoutAssignedItem:v5];
  id v13 = v20;
  int v14 = v13;
  if (v12)
  {
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472;
    v16[2] = sub_10001CC00;
    v16[3] = &unk_1001F1EB0;
    uint64_t v19 = a2;
    id v17 = v13;
    uint64_t v18 = a1;
    id v11 = [a1 performTransaction:v16 forWriting:1];
  }
  else
  {
    id v11 = 0;
  }

LABEL_10:
  return v11;
}

uint64_t sub_10001CC00(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  if (v2 == 1)
  {
    uint64_t v9 = &off_10020AD28;
    id v3 = &off_10020AD10;
    uint64_t v4 = &v9;
  }
  else
  {
    if (v2 != 2) {
      return 0;
    }
    long long v10 = &off_10020AD10;
    id v3 = &off_10020AD28;
    uint64_t v4 = &v10;
  }
  id v5 = *(_UNKNOWN ***)(a1 + 32);
  v4[1] = v3;
  v4[2] = v5;
  uint64_t v6 = +[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:");
  uint64_t v7 = sub_100007540(*(void **)(a1 + 40), @"update AuthStatus set deniedCount = ?, authorizedCount = ? where statusID = ?", 1, v6, 0);

  return v7;
}

id sub_10001CCEC(id a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  if (!a1) {
    goto LABEL_23;
  }
  if ((unint64_t)(a2 - 3) > 0xFFFFFFFFFFFFFFFDLL)
  {
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    id v35 = 0;
    unsigned int v11 = [a1 _statusID:&v35 deniedCount:&v36 authCount:&v37 forHandoutAssignedItem:v5];
    id v12 = v35;
    id v13 = v12;
    if (v11)
    {
      if (a2 == 1)
      {
        if (v37)
        {
          uint64_t v15 = --v37;
          uint64_t v14 = v36;
          goto LABEL_13;
        }
        CLSInitLog();
        uint64_t v21 = (void *)CLSLogDefault;
        if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_INFO))
        {
          uint64_t v22 = v21;
          __int16 v23 = NSStringFromAuthorizationStatus();
          uint64_t v24 = NSStringFromAuthorizationStatus();
          *(_DWORD *)long long buf = 138412802;
          uint64_t v39 = v23;
          __int16 v40 = 2112;
          id v41 = v5;
          __int16 v42 = 2112;
          v43 = v24;
          _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_INFO, "tried remove '%@' for HandoutAssignedItem id: ['%@']; which is not %@';",
            buf,
            0x20u);
        }
        v31[0] = _NSConcreteStackBlock;
        v31[1] = 3221225472;
        v31[2] = sub_10001D134;
        v31[3] = &unk_1001F1ED8;
        void v31[4] = a1;
        id v32 = v13;
        [a1 performTransaction:v31 forWriting:1];
        id v20 = v32;
        goto LABEL_20;
      }
      if (a2 == 2)
      {
        if (v36)
        {
          uint64_t v14 = 0;
          uint64_t v36 = 0;
          uint64_t v15 = v37;
LABEL_13:
          v26[0] = _NSConcreteStackBlock;
          v26[1] = 3221225472;
          v26[2] = sub_10001D140;
          v26[3] = &unk_1001F1F00;
          uint64_t v29 = v14;
          uint64_t v30 = v15;
          id v27 = v12;
          id v28 = a1;
          a1 = [a1 performTransaction:v26 forWriting:1];

LABEL_22:
          goto LABEL_23;
        }
        CLSInitLog();
        id v16 = (void *)CLSLogDefault;
        if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_INFO))
        {
          id v17 = v16;
          uint64_t v18 = NSStringFromAuthorizationStatus();
          uint64_t v19 = NSStringFromAuthorizationStatus();
          *(_DWORD *)long long buf = 138412802;
          uint64_t v39 = v18;
          __int16 v40 = 2112;
          id v41 = v5;
          __int16 v42 = 2112;
          v43 = v19;
          _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_INFO, "tried remove '%@' for HandoutAssignedItem id: ['%@']; which is not %@';",
            buf,
            0x20u);
        }
        v33[0] = _NSConcreteStackBlock;
        v33[1] = 3221225472;
        v33[2] = sub_10001D128;
        v33[3] = &unk_1001F1ED8;
        v33[4] = a1;
        id v34 = v13;
        [a1 performTransaction:v33 forWriting:1];
        id v20 = v34;
LABEL_20:
      }
    }
    a1 = 0;
    goto LABEL_22;
  }
  CLSInitLog();
  uint64_t v6 = (void *)CLSLogDefault;
  if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_INFO))
  {
    uint64_t v7 = v6;
    uint64_t v8 = NSStringFromAuthorizationStatus();
    uint64_t v9 = NSStringFromAuthorizationStatus();
    long long v10 = NSStringFromAuthorizationStatus();
    *(_DWORD *)long long buf = 138412802;
    uint64_t v39 = v8;
    __int16 v40 = 2112;
    id v41 = v9;
    __int16 v42 = 2112;
    v43 = v10;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Attempted to set authorization status: '%@'; only are: ['%@', '%@'] are allowed;",
      buf,
      0x20u);
  }
  a1 = 0;
LABEL_23:

  return a1;
}

id sub_10001D128(uint64_t a1)
{
  return [*(id *)(a1 + 32) _pruneAuthTreeAtNodeWithAssignedItemStatusID:*(void *)(a1 + 40)];
}

id sub_10001D134(uint64_t a1)
{
  return [*(id *)(a1 + 32) _pruneAuthTreeAtNodeWithAssignedItemStatusID:*(void *)(a1 + 40)];
}

id sub_10001D140(uint64_t a1)
{
  uint64_t v2 = +[NSNumber numberWithInteger:*(void *)(a1 + 48)];
  id v3 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", *(void *)(a1 + 56), v2);
  uint64_t v4 = *(void *)(a1 + 32);
  v8[1] = v3;
  v8[2] = v4;
  id v5 = +[NSArray arrayWithObjects:v8 count:3];

  if (sub_100007540(*(void **)(a1 + 40), @"update AuthStatus set deniedCount = ?, authorizedCount = ? where statusID = ?", 1, v5, 0))id v6 = [*(id *)(a1 + 40) _pruneAuthTreeAtNodeWithAssignedItemStatusID:*(void *)(a1 + 32)]; {
  else
  }
    id v6 = 0;

  return v6;
}

void sub_10001D4C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va1, a6);
  va_start(va, a6);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  uint64_t v19 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v6 - 160), 8);
  _Block_object_dispose((const void *)(v6 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_10001D514(void *a1, void *a2, unsigned char *a3)
{
  id v5 = a2;
  uint64_t v6 = sub_100003BF0(v5, @"authorizedCount");
  *(void *)(*(void *)(a1[4] + 8) + 24) = [v6 integerValue];

  uint64_t v7 = sub_100003BF0(v5, @"deniedCount");
  *(void *)(*(void *)(a1[5] + 8) + 24) = [v7 integerValue];

  uint64_t v8 = sub_100003BF0(v5, @"parentStatusID");

  uint64_t v9 = *(void *)(a1[6] + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v8;

  *a3 = 1;
}

void sub_10001D5D4(uint64_t a1, uint64_t *a2)
{
  sub_100003BF0(a2, @"count");
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = [v3 integerValue] == 0;
}

id sub_10001D644(id a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  if (a1)
  {
    uint64_t v16 = 0;
    uint64_t v17 = &v16;
    uint64_t v18 = 0x3032000000;
    uint64_t v19 = sub_10000B624;
    id v20 = sub_10000B52C;
    id v21 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = &v12;
    uint64_t v14 = 0x2020000000;
    char v15 = 0;
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_10001D85C;
    v6[3] = &unk_1001F1FE0;
    id v7 = v3;
    id v8 = a1;
    uint64_t v9 = &stru_1001F1F68;
    uint64_t v10 = &v12;
    uint64_t v11 = &v16;
    sub_10000749C(a1, v6);
    if (*((unsigned char *)v13 + 24)) {
      a1 = (id)v17[5];
    }
    else {
      a1 = 0;
    }

    _Block_object_dispose(&v12, 8);
    _Block_object_dispose(&v16, 8);
  }

  return a1;
}

void sub_10001D7A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 80), 8);
  _Unwind_Resume(a1);
}

int64_t sub_10001D7CC(id a1, PDDatabaseRow *a2)
{
  uint64_t v2 = a2;
  id v3 = sub_100003BF0((uint64_t *)v2, @"deniedCount");
  id v4 = [v3 integerValue];

  if ((uint64_t)v4 <= 0)
  {
    uint64_t v6 = sub_100003BF0((uint64_t *)v2, @"authorizedCount");
    id v7 = [v6 integerValue];

    int64_t v5 = (uint64_t)v7 > 0;
  }
  else
  {
    int64_t v5 = 2;
  }

  return v5;
}

void sub_10001D85C(uint64_t a1)
{
  uint64_t v26 = *(void *)(a1 + 32);
  uint64_t v2 = +[NSArray arrayWithObjects:&v26 count:1];
  id v3 = objc_opt_new();
  id v4 = *(void **)(a1 + 40);
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  v20[2] = sub_10001DAEC;
  v20[3] = &unk_1001F1F90;
  id v5 = v3;
  id v21 = v5;
  id v6 = *(id *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 64);
  id v23 = v6;
  uint64_t v24 = v7;
  id v22 = *(id *)(a1 + 32);
  *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = sub_100007540(v4, @"select statusID, deniedCount, authorizedCount from AuthStatus where identifier = ? and parentStatusID is null limit 1", 1, v2, v20);
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24))
  {
    while ([v5 count])
    {
      uint64_t v9 = [v5 lastObject];
      [v5 removeLastObject];
      __int16 v25 = v9;
      uint64_t v10 = +[NSArray arrayWithObjects:&v25 count:1];

      v15[0] = _NSConcreteStackBlock;
      v15[1] = 3221225472;
      v15[2] = sub_10001DBA4;
      v15[3] = &unk_1001F1FB8;
      uint64_t v11 = *(void **)(a1 + 40);
      id v18 = *(id *)(a1 + 48);
      id v12 = v5;
      uint64_t v19 = *(void *)(a1 + 64);
      id v16 = v12;
      id v17 = v9;
      id v13 = v9;
      *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = sub_100007540(v11, @"select identifier, statusID, deniedCount, authorizedCount from AuthStatus where parentStatusID = ?", 1, v10, v15);
      int v14 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 56) + 8) + 24);

      uint64_t v2 = v10;
      if (!v14) {
        goto LABEL_6;
      }
    }
  }
  uint64_t v10 = v2;
LABEL_6:
}

void sub_10001DAEC(uint64_t a1, void *a2)
{
  id v3 = a2;
  sub_100003BF0(v3, @"statusID");
  id v8 = (id)objc_claimAutoreleasedReturnValue();
  [*(id *)(a1 + 32) addObject:v8];
  uint64_t v4 = (*(uint64_t (**)(void))(*(void *)(a1 + 48) + 16))();

  id v5 = [objc_alloc((Class)CLSAuthTree) initWithStatus:v4 statusID:v8 identifier:*(void *)(a1 + 40)];
  uint64_t v6 = *(void *)(*(void *)(a1 + 56) + 8);
  uint64_t v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;
}

void sub_10001DBA4(uint64_t a1, void *a2)
{
  uint64_t v6 = a2;
  uint64_t v3 = (*(uint64_t (**)(void))(*(void *)(a1 + 48) + 16))();
  uint64_t v4 = sub_100003BF0(v6, @"statusID");
  if (v3 != 2) {
    [*(id *)(a1 + 32) addObject:v4];
  }
  id v5 = sub_100003BF0(v6, @"identifier");
  [*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) setAuthStatus:v3 forIdentifier:v5 statusID:v4 parentStatusID:*(void *)(a1 + 40)];
}

id sub_10001DC74(id a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  if (a1)
  {
    uint64_t v10 = 0;
    uint64_t v11 = &v10;
    uint64_t v12 = 0x3032000000;
    id v13 = sub_10000B624;
    int v14 = sub_10000B52C;
    id v15 = 0;
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_10001DDA4;
    v6[3] = &unk_1001F2008;
    id v8 = a1;
    uint64_t v9 = &v10;
    id v7 = v3;
    sub_10000749C(a1, v6);
    a1 = (id)v11[5];

    _Block_object_dispose(&v10, 8);
  }

  return a1;
}

void sub_10001DD8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10001DDA4(uint64_t a1)
{
  id v6 = [objc_alloc((Class)NSMutableString) initWithString:@"parentObjectID = ?"];
  id v2 = objc_msgSend(objc_alloc((Class)NSMutableArray), "initWithObjects:", *(void *)(a1 + 32), 0);
  uint64_t v3 = [*(id *)(a1 + 40) select:objc_opt_class() where:v6 bindings:v2];
  uint64_t v4 = *(void *)(*(void *)(a1 + 48) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

id sub_10001E3A4(void *a1, void *a2, uint64_t a3, void *a4)
{
  id v7 = a2;
  id v8 = a4;
  if (a1)
  {
    uint64_t v10 = [v7 parentObjectID];
    uint64_t v11 = sub_10016B0FC(a1, v10);
    if ([v11 count])
    {
      if ((unint64_t)[v11 count] >= 2)
      {
        CLSInitLog();
        uint64_t v12 = (void *)CLSLogUpload;
        if (os_log_type_enabled(CLSLogUpload, OS_LOG_TYPE_ERROR))
        {
          id v21 = v12;
          id v22 = [v11 firstObject];
          int v23 = 138412546;
          uint64_t v24 = v10;
          __int16 v25 = 2112;
          uint64_t v26 = v22;
          _os_log_error_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "found multiple classIDs for handout %@, picking the first %@", (uint8_t *)&v23, 0x16u);
        }
      }
      id v13 = [v11 firstObject];
      id v14 = objc_alloc((Class)CLSAttachmentEvent);
      id v15 = [v7 objectID];
      id v16 = [v14 initWithAttachmentID:v15 classID:v13 handoutID:v10 eventType:a3];

      objc_msgSend(v16, "setHandoutAttachmentType:", objc_msgSend(v7, "type"));
      objc_msgSend(v16, "setContextType:", objc_msgSend(v7, "contextType"));
      [v16 setRecipientPersonID:v8];
      id v17 = [v7 bundleIdentifier];

      if (v17) {
        [v7 bundleIdentifier];
      }
      else {
      uint64_t v19 = [v7 appIdentifier];
      }
      [v16 setAppIdentifier:v19];

      sub_10001E668(a1, v16, v7);
    }
    else
    {
      CLSInitLog();
      id v18 = CLSLogUpload;
      if (os_log_type_enabled(CLSLogUpload, OS_LOG_TYPE_INFO))
      {
        int v23 = 138412290;
        uint64_t v24 = v10;
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_INFO, "CLSHandoutAttachment+InsightEvents: found no class id for handout: %@", (uint8_t *)&v23, 0xCu);
      }
      id v16 = 0;
    }
  }
  else
  {
    id v16 = 0;
  }

  return v16;
}

void sub_10001E668(void *a1, void *a2, void *a3)
{
  id v15 = a2;
  id v5 = a3;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v6 = v15;
    id v7 = [v6 recipientPersonID];
    id v8 = [v5 parentObjectID];
    uint64_t v9 = sub_10016B7D0(a1, v7, v8);
    uint64_t v10 = +[NSMutableSet setWithArray:v9];

    uint64_t v11 = (char *)[v6 type];
    if ((unint64_t)(v11 - 103) >= 2)
    {
      if (v11 != (char *)105)
      {
LABEL_7:
        id v13 = [v6 info];
        id v14 = [v10 allObjects];
        [v13 setValue:v14 forKey:@"done_attachment_ids"];

        goto LABEL_8;
      }
      uint64_t v12 = [v6 attachmentID];
      [v10 removeObject:v12];
    }
    else
    {
      uint64_t v12 = [v6 attachmentID];
      [v10 addObject:v12];
    }

    goto LABEL_7;
  }
LABEL_8:
}

id sub_10001E7F8(void *a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (a1)
  {
    id v7 = [v5 parentObjectID];
    id v8 = sub_10016B0FC(a1, v7);
    if ([v8 count])
    {
      if ((unint64_t)[v8 count] >= 2)
      {
        CLSInitLog();
        uint64_t v9 = CLSLogUpload;
        if (os_log_type_enabled(CLSLogUpload, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)long long buf = 138412290;
          uint64_t v31 = v7;
          _os_log_error_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "CLSHandoutAttachment+InsightEvents: unexpected multiple classes for handout: %@", buf, 0xCu);
        }
      }
      uint64_t v10 = [v8 firstObject];
      id v11 = objc_alloc((Class)CLSProgressEvent);
      uint64_t v12 = [v5 objectID];
      id v13 = [v11 initWithAttachmentID:v12 classID:v10 handoutID:v7 eventType:a3];

      objc_msgSend(v13, "setHandoutAttachmentType:", objc_msgSend(v5, "type"));
      objc_msgSend(v13, "setContextType:", objc_msgSend(v5, "contextType"));
      id v14 = sub_100002F74(a1);
      [v13 setRecipientPersonID:v14];

      id v15 = [v5 bundleIdentifier];

      if (v15) {
        [v5 bundleIdentifier];
      }
      else {
      id v17 = [v5 appIdentifier];
      }
      [v13 setAppIdentifier:v17];

      id v18 = sub_100157160(a1, v5);
      uint64_t v19 = v18;
      if (v18)
      {
        id v20 = [v18 objectID];
        [v13 setHandoutAuthorizedObjectID:v20];

        objc_msgSend(v13, "setContextType:", objc_msgSend(v19, "type"));
        id v21 = [v19 identifierPath];
        id v22 = +[CLSContext objectIDPathFromIdentifierPath:v21];
        [v22 componentsJoinedByString:@"/"];
        uint64_t v29 = v8;
        int v23 = v7;
        uint64_t v24 = v10;
        v26 = __int16 v25 = v6;
        [v13 setObjectIDPath:v26];

        id v27 = [v19 appIdentifier];
        [v13 setAppIdentifier:v27];

        id v6 = v25;
        uint64_t v10 = v24;
        id v7 = v23;
        id v8 = v29;
      }
      sub_10001E668(a1, v13, v5);
    }
    else
    {
      CLSInitLog();
      id v16 = CLSLogUpload;
      if (os_log_type_enabled(CLSLogUpload, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138412290;
        uint64_t v31 = v7;
        _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_INFO, "CLSHandoutAttachment+InsightEvents: found no class id for handout: %@", buf, 0xCu);
      }
      id v13 = 0;
    }
  }
  else
  {
    id v13 = 0;
  }

  return v13;
}

id sub_10001EB7C(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = v4;
  id v6 = 0;
  if (v3)
  {
    if (v4)
    {
      id v6 = [v3 parentObjectID];

      if (v6)
      {
        id v7 = sub_10001EC40(v3, v5);
        id v8 = [v7 parentEntityName];
        uint64_t v9 = (objc_class *)objc_opt_class();
        uint64_t v10 = NSStringFromClass(v9);
        id v6 = [v8 isEqualToString:v10];
      }
    }
  }

  return v6;
}

id sub_10001EC40(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  unsigned int v5 = [(id)objc_opt_class() entityType];
  if (v5 - 3 < 4) {
    goto LABEL_4;
  }
  if (v5 == 2)
  {
    uint64_t v6 = objc_opt_class();
    uint64_t v7 = [v3 objectID];
    goto LABEL_5;
  }
  if (v5 == 1)
  {
LABEL_4:
    uint64_t v6 = objc_opt_class();
    uint64_t v7 = [v3 parentObjectID];
LABEL_5:
    id v8 = (void *)v7;
    uint64_t v9 = [v4 select:v6 identity:v7];

    goto LABEL_6;
  }
  uint64_t v9 = 0;
LABEL_6:

  return v9;
}

PDDPHandoutAuthorizedMetaInfo *sub_10001ED20(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  unsigned int v5 = v4;
  uint64_t v6 = 0;
  if (v3 && v4)
  {
    uint64_t v7 = [v3 parentObjectID];

    if (v7)
    {
      id v8 = sub_10001EC40(v3, v5);
      uint64_t v9 = objc_opt_class();
      uint64_t v10 = [v8 parentObjectID];
      id v11 = [v5 select:v9 identity:v10];

      if (v11)
      {
        uint64_t v12 = objc_alloc_init(PDDPHandoutAuthorizedMetaInfo);
        id v13 = [v11 objectID];
        [(PDDPHandoutAuthorizedMetaInfo *)v12 setHandoutAuthorizedObjectId:v13];

        uint64_t v14 = objc_opt_class();
        id v15 = [v11 parentObjectID];
        id v16 = [v5 select:v14 identity:v15];

        if (v16)
        {
          id v17 = [v16 objectID];
          [(PDDPHandoutAuthorizedMetaInfo *)v12 setAttachmentId:v17];

          unsigned int v18 = [v16 type];
          if (v18 - 1 < 6) {
            uint64_t v19 = v18 + 1;
          }
          else {
            uint64_t v19 = 1;
          }
          [(PDDPHandoutAuthorizedMetaInfo *)v12 setAttachmentType:v19];
          uint64_t v20 = objc_opt_class();
          id v21 = [v16 parentObjectID];
          id v22 = [v5 select:v20 identity:v21];

          if (v22)
          {
            int v23 = [v22 objectID];
            [(PDDPHandoutAuthorizedMetaInfo *)v12 setHandoutId:v23];

            uint64_t v24 = objc_opt_class();
            __int16 v25 = [v22 objectID];
            uint64_t v30 = v25;
            uint64_t v26 = +[NSArray arrayWithObjects:&v30 count:1];
            id v27 = [v5 select:v24 where:@"parentObjectID = ?" bindings:v26];

            if (v27)
            {
              id v28 = [v27 classID];
              [(PDDPHandoutAuthorizedMetaInfo *)v12 setClassId:v28];

              uint64_t v6 = v12;
            }
            else
            {
              uint64_t v6 = 0;
            }
          }
          else
          {
            uint64_t v6 = 0;
          }
        }
        else
        {
          uint64_t v6 = 0;
        }
      }
      else
      {
        uint64_t v6 = 0;
      }
    }
    else
    {
      uint64_t v6 = 0;
    }
  }

  return v6;
}

PDDPProgressEntity *sub_10001F01C(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  unsigned int v5 = v4;
  uint64_t v6 = 0;
  if (v3 && v4)
  {
    uint64_t v6 = objc_alloc_init(PDDPProgressEntity);
    -[PDDPProgressEntity setType:](v6, "setType:", [(id)objc_opt_class() entityType]);
    uint64_t v7 = [v3 objectID];
    [(PDDPProgressEntity *)v6 setObjectId:v7];

    id v8 = [v3 parentObjectID];
    [(PDDPProgressEntity *)v6 setParentObjectId:v8];

    uint64_t v9 = [v3 appIdentifier];
    [(PDDPProgressEntity *)v6 setAppIdentifier:v9];

    uint64_t v10 = [v3 dateCreated];
    id v11 = sub_1000F3E0C(v10);
    [(PDDPProgressEntity *)v6 setDateCreated:v11];

    uint64_t v12 = +[NSMutableArray array];
    id v13 = +[NSMutableArray array];
    uint64_t v14 = [v3 parentObjectID];

    if (v14)
    {
      id v15 = sub_10001EC40(v3, v5);
      if (v15)
      {
        uint64_t v16 = objc_opt_class();
        id v17 = [v15 parentObjectID];
        unsigned int v18 = [v5 select:v16 identity:v17];

        if (v18)
        {
          uint64_t v19 = [v18 identifierPath];
          uint64_t v20 = +[CLSContext objectIDPathFromIdentifierPath:v19];
          [v12 addObjectsFromArray:v20];

          id v21 = [v18 identifierPath];
          id v22 = +[CLSContext stableObjectIDPathFromIdentifierPath:v21];
          [v13 addObjectsFromArray:v22];

          if ([(PDDPProgressEntity *)v6 type] == 2)
          {
            int v23 = [v18 stableObjectID];
            [(PDDPProgressEntity *)v6 setStableParentObjectId:v23];
          }
        }
        uint64_t v24 = [v15 objectID];
        [v12 addObject:v24];

        __int16 v25 = [v15 objectID];
        [v13 addObject:v25];
      }
    }
    if ([(PDDPProgressEntity *)v6 type] != 2)
    {
      uint64_t v26 = [v3 objectID];
      [v12 addObject:v26];

      id v27 = [v3 objectID];
      [v13 addObject:v27];
    }
    id v28 = [v12 componentsJoinedByString:@"/"];
    [(PDDPProgressEntity *)v6 setObjectIdPath:v28];

    uint64_t v29 = [v13 componentsJoinedByString:@"/"];
    [(PDDPProgressEntity *)v6 setStableObjectIdPath:v29];
  }

  return v6;
}

PDDPClassZone *sub_10001F378(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  unsigned int v5 = objc_alloc_init(PDDPClassZone);
  [(PDDPClassZone *)v5 setIsAccessDenied:0];
  [(PDDPClassZone *)v5 setMoreDataAvailable:0];
  if (v4) {
    [(PDDPClassZone *)v5 setZoneName:v4];
  }
  if (v3)
  {
    id v6 = v3[1];

    if (v6)
    {
      id v7 = v3[1];
      id v8 = [v7 data];
      [(PDDPClassZone *)v5 setChangeToken:v8];
    }
  }

  return v5;
}

PDDPHandout *sub_10001F44C(void *a1)
{
  id v1 = a1;
  id v2 = objc_alloc_init(PDDPHandout);
  id v3 = [v1 objectID];
  [(PDDPHandout *)v2 setObjectId:v3];

  id v4 = [v1 title];
  [(PDDPHandout *)v2 setTitle:v4];

  unsigned int v5 = [v1 instructions];
  [(PDDPHandout *)v2 setInstructions:v5];

  id v6 = [v1 appIdentifier];
  [(PDDPHandout *)v2 setAppIdentifier:v6];

  id v7 = [v1 dateCreated];
  id v8 = sub_1000F3E0C(v7);
  [(PDDPHandout *)v2 setDateCreated:v8];

  uint64_t v9 = [v1 dueDate];
  uint64_t v10 = sub_1000F3E0C(v9);
  [(PDDPHandout *)v2 setDateDue:v10];

  id v11 = [v1 dateLastModified];
  uint64_t v12 = sub_1000F3E0C(v11);
  [(PDDPHandout *)v2 setDateLastModified:v12];

  id v13 = [v1 dateOfPublication];
  uint64_t v14 = sub_1000F3E0C(v13);
  [(PDDPHandout *)v2 setDateOfPublication:v14];

  id v15 = [v1 lastReviewedDate];
  uint64_t v16 = sub_1000F3E0C(v15);
  [(PDDPHandout *)v2 setDateLastReviewed:v16];

  -[PDDPHandout setIsReviewed:](v2, "setIsReviewed:", [v1 isReviewed]);
  -[PDDPHandout setFlags:](v2, "setFlags:", [v1 flags]);
  id v17 = [v1 publishingState];
  if ((unint64_t)v17 < 8) {
    uint64_t v18 = (v17 + 1);
  }
  else {
    uint64_t v18 = 0;
  }
  [(PDDPHandout *)v2 setPublishingState:v18];
  id v19 = [v1 type];
  if (v19 == (id)1) {
    uint64_t v20 = 1;
  }
  else {
    uint64_t v20 = 2 * (v19 == (id)2);
  }
  [(PDDPHandout *)v2 setType:v20];
  -[PDDPHandout setVersion:](v2, "setVersion:", [v1 version]);
  id v21 = [v1 publishError];

  if (v21)
  {
    id v22 = objc_alloc_init(PDDPStatus);
    [(PDDPHandout *)v2 setStatus:v22];

    int v23 = [(PDDPHandout *)v2 status];
    [v23 setCode:2];

    uint64_t v24 = [v1 publishError];
    __int16 v25 = [v24 localizedDescription];
    uint64_t v26 = [(PDDPHandout *)v2 status];
    [v26 setMessage:v25];
  }

  return v2;
}

PDDPHandoutAttachment *sub_10001F724(void *a1)
{
  id v1 = a1;
  id v2 = objc_alloc_init(PDDPHandoutAttachment);
  id v3 = [v1 objectID];
  [(PDDPHandoutAttachment *)v2 setObjectId:v3];

  id v4 = [v1 parentObjectID];
  [(PDDPHandoutAttachment *)v2 setParentObjectId:v4];

  unsigned int v5 = [v1 title];
  [(PDDPHandoutAttachment *)v2 setTitle:v5];

  id v6 = [v1 dateCreated];
  id v7 = sub_1000F3E0C(v6);
  [(PDDPHandoutAttachment *)v2 setDateCreated:v7];

  id v8 = [v1 storeIdentifier];
  [(PDDPHandoutAttachment *)v2 setAppStoreIdentifier:v8];

  uint64_t v9 = [v1 bundleIdentifier];
  [(PDDPHandoutAttachment *)v2 setAppBundleIdentifier:v9];

  uint64_t v10 = [v1 applicationName];
  [(PDDPHandoutAttachment *)v2 setAppName:v10];

  -[PDDPHandoutAttachment setDisplayOrder:](v2, "setDisplayOrder:", [v1 displayOrder]);
  unsigned int v11 = [v1 type];
  if (v11 - 1 < 6) {
    uint64_t v12 = v11 + 1;
  }
  else {
    uint64_t v12 = 1;
  }
  [(PDDPHandoutAttachment *)v2 setType:v12];
  id v13 = [v1 contentStoreIdentifier];
  [(PDDPHandoutAttachment *)v2 setContentStoreIdentifier:v13];

  uint64_t v14 = [v1 appIdentifier];
  [(PDDPHandoutAttachment *)v2 setAppIdentifier:v14];

  unsigned int v15 = [v1 shareType];
  if (v15 == 1) {
    unsigned int v16 = 2;
  }
  else {
    unsigned int v16 = 1;
  }
  if (v15 == 2) {
    uint64_t v17 = 3;
  }
  else {
    uint64_t v17 = v16;
  }
  [(PDDPHandoutAttachment *)v2 setShareType:v17];
  if ([v1 permissionType] == 1) {
    uint64_t v18 = 1;
  }
  else {
    uint64_t v18 = 2;
  }
  [(PDDPHandoutAttachment *)v2 setPermissionType:v18];
  -[PDDPHandoutAttachment setContextType:](v2, "setContextType:", sub_10001FB34((uint64_t)[v1 contextType]));
  [v1 timeExpectation];
  -[PDDPHandoutAttachment setTimeExpectationInSeconds:](v2, "setTimeExpectationInSeconds:");
  id v19 = [v1 URL];
  uint64_t v20 = v19;
  if (v19)
  {
    id v21 = [v19 absoluteString];
    [(PDDPHandoutAttachment *)v2 setUrl:v21];
  }
  unsigned int v22 = [(PDDPHandoutAttachment *)v2 type];
  if (v22)
  {
    if (v22 == 4)
    {
      uint64_t v31 = [v1 storeIdentifier];
      [(PDDPHandoutAttachment *)v2 setAppStoreIdentifier:v31];

      id v24 = [v1 bundleIdentifier];
      [(PDDPHandoutAttachment *)v2 setAppBundleIdentifier:v24];
    }
    else
    {
      if (v22 != 2) {
        goto LABEL_23;
      }
      int v23 = [v1 contextPath];
      id v24 = [v23 mutableCopy];

      [(PDDPHandoutAttachment *)v2 setContextPaths:v24];
      __int16 v25 = +[CLSContext objectIDPathFromIdentifierPath:v24];
      uint64_t v26 = [v25 componentsJoinedByString:@"/"];
      [(PDDPHandoutAttachment *)v2 setObjectIdPath:v26];

      id v27 = +[CLSContext stableObjectIDPathFromIdentifierPath:v24];
      id v28 = [v27 componentsJoinedByString:@"/"];
      [(PDDPHandoutAttachment *)v2 setStableObjectIdPath:v28];

      uint64_t v29 = [v1 contextSummary];
      [(PDDPHandoutAttachment *)v2 setContextSummary:v29];

      uint64_t v30 = [v1 contextCustomTypeName];
      [(PDDPHandoutAttachment *)v2 setContextCustomTypeName:v30];

      -[PDDPHandoutAttachment setContextSourceIsCatalog:](v2, "setContextSourceIsCatalog:", [v1 contextSourceIsCatalog]);
    }
  }
  else
  {
    CLSInitLog();
    id v32 = CLSLogHandout;
    if (os_log_type_enabled(CLSLogHandout, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v34 = 0;
      _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_INFO, "Got an unknown handout attachment type. Ignoring it.", v34, 2u);
    }
  }
LABEL_23:

  return v2;
}

uint64_t sub_10001FB34(uint64_t result)
{
  if ((unint64_t)(result - 1) < 0x11) {
    return result;
  }
  else {
    return 0;
  }
}

PDDPHandoutRecipient *sub_10001FB44(void *a1)
{
  id v1 = a1;
  id v2 = objc_alloc_init(PDDPHandoutRecipient);
  id v3 = [v1 objectID];
  [(PDDPHandoutRecipient *)v2 setObjectId:v3];

  id v4 = [v1 parentObjectID];
  [(PDDPHandoutRecipient *)v2 setParentObjectId:v4];

  unsigned int v5 = [v1 classID];
  [(PDDPHandoutRecipient *)v2 setClassId:v5];

  id v6 = [v1 personID];
  [(PDDPHandoutRecipient *)v2 setPersonId:v6];

  id v7 = [v1 appIdentifier];

  [(PDDPHandoutRecipient *)v2 setAppIdentifier:v7];

  return v2;
}

id sub_10001FC3C(void *a1)
{
  id v1 = a1;
  id v2 = objc_alloc_init((Class)CLSHandout);
  id v3 = [v1 appIdentifier];
  [v2 setAppIdentifier:v3];

  id v4 = [v1 dateCreated];
  unsigned int v5 = sub_1000F3F70(v4);
  [v2 setDateCreated:v5];

  id v6 = [v1 dateDue];
  id v7 = sub_1000F3F70(v6);
  [v2 setDueDate:v7];

  id v8 = [v1 dateLastModified];
  uint64_t v9 = sub_1000F3F70(v8);
  [v2 setDateLastModified:v9];

  uint64_t v10 = [v1 dateOfPublication];
  unsigned int v11 = sub_1000F3F70(v10);
  [v2 setDateOfPublication:v11];

  uint64_t v12 = [v1 instructions];
  [v2 setInstructions:v12];

  id v13 = [v1 title];
  [v2 setTitle:v13];

  objc_msgSend(v2, "setReviewed:", objc_msgSend(v1, "isReviewed"));
  [v2 setState:1];
  if ([v1 hasFlags]) {
    objc_msgSend(v2, "setFlags:", objc_msgSend(v1, "flags"));
  }
  signed int v14 = [v1 publishingState];
  if ((v14 - 1) >= 8)
  {
    uint64_t v24 = +[NSString stringWithFormat:@"Unknown PDDPHandout_PublishingState: %ld", v14];
    CLSInitLog();
    __int16 v25 = CLSLogHandout;
    if (!os_log_type_enabled(CLSLogHandout, OS_LOG_TYPE_INFO)) {
      goto LABEL_23;
    }
    *(_DWORD *)long long buf = 138543362;
    uint64_t v29 = v24;
    uint64_t v26 = "Failed to convert from PDDPHandout_PublishingState reason: %{public}@";
    goto LABEL_22;
  }
  objc_msgSend(v2, "setPublishingState:");
  if ([v1 publishingState] == 5)
  {
    if ([v1 hasStatus])
    {
      unsigned int v15 = [v1 status];
      unsigned int v16 = v15;
    }
    else
    {
      unsigned int v16 = objc_alloc_init(PDDPStatus);
      [(PDDPStatus *)v16 setCode:2];
      [(PDDPStatus *)v16 setKey:@"HandoutPublishError"];
      [(PDDPStatus *)v16 setMessage:@"Handout Publishing had an error"];
      unsigned int v15 = v16;
    }
    uint64_t v17 = sub_1000F51A0(v15, 0);
    [v2 setPublishError:v17];
  }
  else
  {
    [v2 setPublishError:0];
  }
  uint64_t v18 = [v1 objectId];
  [v2 setObjectID:v18];

  id v19 = [v1 dateLastReviewed];
  uint64_t v20 = sub_1000F3F70(v19);
  [v2 setLastReviewedDate:v20];

  if ([v1 hasType] && objc_msgSend(v1, "type"))
  {
    unsigned int v21 = [v1 type];
    uint64_t v22 = v21;
    if (v21 == 2) {
      goto LABEL_15;
    }
    if (v21 != 1)
    {
      uint64_t v24 = +[NSString stringWithFormat:@"Unknown PDDPHandout_HandoutType: %ld", (int)v21];
      CLSInitLog();
      __int16 v25 = CLSLogHandout;
      if (!os_log_type_enabled(CLSLogHandout, OS_LOG_TYPE_INFO))
      {
LABEL_23:
        id v27 = +[NSException exceptionWithName:NSInvalidArgumentException reason:v24 userInfo:0];
        objc_exception_throw(v27);
      }
      *(_DWORD *)long long buf = 138543362;
      uint64_t v29 = v24;
      uint64_t v26 = "Failed to convert from PDDPHandout_HandoutType reason: %{public}@";
LABEL_22:
      _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_INFO, v26, buf, 0xCu);
      goto LABEL_23;
    }
  }
  uint64_t v22 = 1;
LABEL_15:
  [v2 setType:v22];
  if ([v1 hasVersion]) {
    objc_msgSend(v2, "setVersion:", (int)objc_msgSend(v1, "version"));
  }

  return v2;
}

id sub_1000200A0(void *a1)
{
  id v1 = a1;
  if ([v1 hasType])
  {
    uint64_t v2 = sub_1000204B8((int)[v1 type]);
    id v3 = objc_alloc((Class)CLSHandoutAttachment);
    id v4 = [v1 title];
    id v5 = [v3 initWithType:v2 title:v4];

    id v6 = [v1 appIdentifier];
    [v5 setAppIdentifier:v6];

    id v7 = [v1 objectId];
    [v5 setObjectID:v7];

    id v8 = [v1 parentObjectId];
    [v5 setParentObjectID:v8];

    if ([v1 hasDateCreated])
    {
      uint64_t v9 = [v1 dateCreated];
      uint64_t v10 = sub_1000F3F70(v9);
      [v5 setDateCreated:v10];
    }
    if ([v1 hasDateLastModified])
    {
      unsigned int v11 = [v1 dateLastModified];
      uint64_t v12 = sub_1000F3F70(v11);
      [v5 setDateLastModified:v12];
    }
    if ([v1 hasAppBundleIdentifier])
    {
      id v13 = [v1 appBundleIdentifier];
      [v5 setBundleIdentifier:v13];
    }
    if ([v1 hasAppName])
    {
      signed int v14 = [v1 appName];
      [v5 setApplicationName:v14];
    }
    if ([v1 hasAppStoreIdentifier])
    {
      unsigned int v15 = [v1 appStoreIdentifier];
      [v5 setStoreIdentifier:v15];
    }
    objc_msgSend(v5, "setDisplayOrder:", (int)objc_msgSend(v1, "displayOrder"));
    objc_msgSend(v5, "setLocked:", objc_msgSend(v1, "isLocked"));
    unsigned int v16 = [v1 contentStoreIdentifier];
    [v5 setContentStoreIdentifier:v16];

    [v1 timeExpectationInSeconds];
    objc_msgSend(v5, "setTimeExpectation:");
    if ([v1 hasShareType])
    {
      objc_msgSend(v5, "setShareType:", sub_1000205B0((int)objc_msgSend(v1, "shareType")));
      if (![v1 hasPermissionType])
      {
        id v25 = 0;
LABEL_25:

        goto LABEL_27;
      }
      objc_msgSend(v5, "setPermissionType:", sub_1000206B4((uint64_t)objc_msgSend(v1, "permissionType")));
    }
    if ([v1 hasContextType]) {
      objc_msgSend(v5, "setContextType:", sub_1000207C4((int)objc_msgSend(v1, "contextType")));
    }
    if ([v1 hasUrl])
    {
      id v17 = objc_alloc((Class)NSURL);
      uint64_t v18 = [v1 url];
      id v19 = [v17 initWithString:v18];
      [v5 setURL:v19];
    }
    if (v2 == 3)
    {
      int v23 = [v1 appBundleIdentifier];
      [v5 setBundleIdentifier:v23];

      uint64_t v24 = [v1 appStoreIdentifier];
      [v5 setStoreIdentifier:v24];
    }
    else if (v2 == 1)
    {
      uint64_t v20 = [v1 contextPaths];
      [v5 setContextPath:v20];

      unsigned int v21 = [v1 contextSummary];
      [v5 setContextSummary:v21];

      uint64_t v22 = [v1 contextCustomTypeName];
      [v5 setContextCustomTypeName:v22];

      objc_msgSend(v5, "setContextSourceIsCatalog:", objc_msgSend(v1, "contextSourceIsCatalog"));
    }
    id v25 = v5;
    goto LABEL_25;
  }
  id v25 = 0;
LABEL_27:

  return v25;
}

uint64_t sub_1000204B8(int a1)
{
  uint64_t result = (a1 - 1);
  if (result >= 7)
  {
    uint64_t v3 = +[NSString stringWithFormat:@"Unknown PDDPHandoutAttachment_Type: %ld", a1];
    CLSInitLog();
    id v4 = CLSLogHandout;
    if (os_log_type_enabled(CLSLogHandout, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138543362;
      uint64_t v7 = v3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Failed to convert from PDDPHandoutAttachment_Type reason: %{public}@", buf, 0xCu);
    }
    id v5 = +[NSException exceptionWithName:NSInvalidArgumentException reason:v3 userInfo:0];
    objc_exception_throw(v5);
  }
  return result;
}

uint64_t sub_1000205B0(int a1)
{
  uint64_t result = (a1 - 1);
  if (result >= 3)
  {
    id v3 = objc_msgSend(objc_alloc((Class)NSString), "initWithFormat:", @"Unknown PDDPShareType: %ld", a1);
    CLSInitLog();
    id v4 = CLSLogHandout;
    if (os_log_type_enabled(CLSLogHandout, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138543362;
      id v7 = v3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Failed to convert from PDDPShareType reason: %{public}@", buf, 0xCu);
    }
    id v5 = +[NSException exceptionWithName:NSInvalidArgumentException reason:v3 userInfo:0];
    objc_exception_throw(v5);
  }
  return result;
}

uint64_t sub_1000206B4(uint64_t a1)
{
  uint64_t v1 = a1;
  if (a1 != 1)
  {
    if (a1 != 2)
    {
      id v3 = objc_msgSend(objc_alloc((Class)NSString), "initWithFormat:", @"Unknown PDDPPermissionType: %ld", (int)a1);
      CLSInitLog();
      id v4 = CLSLogHandout;
      if (os_log_type_enabled(CLSLogHandout, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138543362;
        id v7 = v3;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Failed to convert from PDDPHandoutAttachment_Type reason: %{public}@", buf, 0xCu);
      }
      id v5 = +[NSException exceptionWithName:NSInvalidArgumentException reason:v3 userInfo:0];
      objc_exception_throw(v5);
    }
    return 0;
  }
  return v1;
}

uint64_t sub_1000207C4(int a1)
{
  uint64_t v1 = (a1 - 1);
  if (v1 < 0x11) {
    return v1 + 1;
  }
  else {
    return 0;
  }
}

id sub_1000207D4(void *a1)
{
  id v1 = a1;
  id v2 = objc_alloc((Class)CLSHandoutRecipient);
  id v3 = [v1 classId];
  id v4 = [v1 personId];
  id v5 = [v2 initWithClassID:v3 personID:v4];

  id v6 = [v1 appIdentifier];
  [v5 setAppIdentifier:v6];

  id v7 = [v1 objectId];
  [v5 setObjectID:v7];

  id v8 = [v1 parentObjectId];

  [v5 setParentObjectID:v8];

  return v5;
}

uint64_t sub_1000208C8(uint64_t result)
{
  if (result >= 4)
  {
    uint64_t v1 = +[NSString stringWithFormat:@"Unknown PDDPAssetReference_Type: %ld", (int)result];
    CLSInitLog();
    id v2 = CLSLogHandout;
    if (os_log_type_enabled(CLSLogHandout, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138543362;
      uint64_t v5 = v1;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Failed to convert from PDDPAssetReference_Type reason: %{public}@", buf, 0xCu);
    }
    id v3 = +[NSException exceptionWithName:NSInvalidArgumentException reason:v1 userInfo:0];
    objc_exception_throw(v3);
  }
  return result;
}

uint64_t sub_1000209CC(uint64_t result)
{
  if (result >= 7)
  {
    uint64_t v1 = +[NSString stringWithFormat:@"Unknown PDDPAssetReference_ParentEntityType: %ld", (int)result];
    CLSInitLog();
    id v2 = CLSLogHandout;
    if (os_log_type_enabled(CLSLogHandout, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138543362;
      uint64_t v5 = v1;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Failed to convert from PDDPAssetReference_ParentEntityType reason: %{public}@", buf, 0xCu);
    }
    id v3 = +[NSException exceptionWithName:NSInvalidArgumentException reason:v1 userInfo:0];
    objc_exception_throw(v3);
  }
  return result;
}

PDDPStateChange *sub_100020AD0(void *a1)
{
  id v1 = a1;
  id v2 = objc_alloc_init(PDDPStateChange);
  id v3 = [v1 targetObjectID];
  [(PDDPStateChange *)v2 setTargetObjectId:v3];

  id v4 = [v1 targetEntityName];
  uint64_t v5 = sub_1000F4DC0(v4);
  [(PDDPStateChange *)v2 setTargetEntityName:v5];

  id v6 = [v1 ownerPersonID];
  [(PDDPStateChange *)v2 setTargetOwnerPersonId:v6];

  id v7 = [v1 targetClassID];
  uint64_t v46 = v2;
  [(PDDPStateChange *)v2 setTargetClassId:v7];

  uint64_t v8 = +[NSSortDescriptor sortDescriptorWithKey:@"self" ascending:1];
  uint64_t v9 = [v1 changedDomains];
  uint64_t v10 = [v9 allObjects];
  uint64_t v45 = (void *)v8;
  uint64_t v55 = v8;
  unsigned int v11 = +[NSArray arrayWithObjects:&v55 count:1];
  uint64_t v12 = [v10 sortedArrayUsingDescriptors:v11];

  long long v52 = 0u;
  long long v53 = 0u;
  long long v50 = 0u;
  long long v51 = 0u;
  id obj = v12;
  id v49 = [obj countByEnumeratingWithState:&v50 objects:v54 count:16];
  if (v49)
  {
    uint64_t v48 = *(void *)v51;
    do
    {
      for (i = 0; i != v49; i = (char *)i + 1)
      {
        if (*(void *)v51 != v48) {
          objc_enumerationMutation(obj);
        }
        signed int v14 = objc_msgSend(v1, "stateForDomain:", objc_msgSend(*(id *)(*((void *)&v50 + 1) + 8 * i), "integerValue"));
        if (v14)
        {
          unsigned int v15 = [v1 recipientPersonID];
          id v16 = v14;
          id v17 = v15;
          uint64_t v18 = objc_alloc_init(PDDPStateChangePayload);
          id v19 = [v16 parentObjectID];
          uint64_t v20 = [v16 ownerPersonID];
          unsigned int v21 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%@:%@:%ld", v19, v20, [v16 domain]);
          uint64_t v22 = [v21 sha224];
          [(PDDPStateChangePayload *)v18 setObjectId:v22];

          int v23 = objc_alloc_init(PDDPStateChangeParticipants);
          [(PDDPStateChangePayload *)v18 setParticipants:v23];

          uint64_t v24 = [(PDDPStateChangePayload *)v18 participants];
          [v24 setRecipientPersonId:v17];

          id v25 = v16;
          if ([v25 hasServerMetadata])
          {
            uint64_t v26 = objc_alloc_init(PDDPStateChangeMeta);
            id v27 = [v25 serverExecutionID];
            [(PDDPStateChangeMeta *)v26 setExecutionId:v27];

            id v28 = [v25 serverETag];
            [(PDDPStateChangeMeta *)v26 setEtag:v28];

            uint64_t v29 = objc_alloc_init(PDDPStatus);
            [(PDDPStateChangeMeta *)v26 setStatus:v29];

            id v30 = [v25 serverStatus];
            uint64_t v31 = [(PDDPStateChangeMeta *)v26 status];
            [v31 setCode:v30];
          }
          else
          {
            uint64_t v26 = 0;
          }

          [(PDDPStateChangePayload *)v18 setMeta:v26];
          -[PDDPStateChangePayload setDomain:](v18, "setDomain:", [v25 domain]);
          -[PDDPStateChangePayload setDomainVersion:](v18, "setDomainVersion:", [v25 domainVersion]);
          -[PDDPStateChangePayload setState:](v18, "setState:", [v25 state]);
          -[PDDPStateChangePayload setFlags:](v18, "setFlags:", [v25 flags]);
          id v32 = [v25 note];
          [(PDDPStateChangePayload *)v18 setNote:v32];

          char v33 = [v25 assetURL];

          if (v33)
          {
            id v34 = [v25 assetURL];
            id v35 = [v34 absoluteString];
            [(PDDPStateChangePayload *)v18 setAssetUrl:v35];
          }
          uint64_t v36 = [v25 info];
          uint64_t v37 = sub_1000F46E0(v36);
          [(PDDPStateChangePayload *)v18 setInfos:v37];

          if (v18)
          {
            unint64_t v38 = [v1 senderPersonID];
            uint64_t v39 = [(PDDPStateChangePayload *)v18 participants];
            [v39 setSenderPersonId:v38];

            [(PDDPStateChange *)v46 addStateChangePayloads:v18];
            __int16 v40 = [v25 dateCreated];
            id v41 = sub_1000F3E0C(v40);
            [(PDDPStateChange *)v46 setDateCreated:v41];

            __int16 v42 = [v25 dateLastModified];
            v43 = sub_1000F3E0C(v42);
            [(PDDPStateChange *)v46 setDateLastModified:v43];
          }
        }
      }
      id v49 = [obj countByEnumeratingWithState:&v50 objects:v54 count:16];
    }
    while (v49);
  }

  return v46;
}

id sub_10002108C(void *a1)
{
  id v1 = a1;
  id v41 = (id)objc_opt_new();
  long long v42 = 0u;
  long long v43 = 0u;
  long long v44 = 0u;
  long long v45 = 0u;
  id obj = [v1 stateChangePayloads];
  id v2 = [obj countByEnumeratingWithState:&v42 objects:v46 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v40 = *(void *)v43;
    do
    {
      for (i = 0; i != v3; i = (char *)i + 1)
      {
        if (*(void *)v43 != v40) {
          objc_enumerationMutation(obj);
        }
        uint64_t v5 = *(void **)(*((void *)&v42 + 1) + 8 * i);
        id v6 = [v1 targetEntityName];
        id v7 = sub_1000F4A70(v6);

        id v8 = objc_alloc((Class)CLSCollaborationState);
        uint64_t v9 = [v1 targetObjectId];
        uint64_t v10 = [v1 targetOwnerPersonId];
        id v11 = objc_msgSend(v8, "initForObjectWithID:targetClass:ownerPersonID:domain:state:flags:", v9, v7, v10, (int)objc_msgSend(v5, "domain"), (int)objc_msgSend(v5, "state"), objc_msgSend(v5, "flags"));

        objc_msgSend(v11, "setDomainVersion:", (int)objc_msgSend(v5, "domainVersion"));
        uint64_t v12 = [v5 note];
        [v11 setNote:v12];

        id v13 = [v1 targetClassId];
        [v11 setClassID:v13];

        if ([v5 hasAssetUrl])
        {
          signed int v14 = [v5 assetUrl];
          unsigned int v15 = +[NSURL URLWithString:v14];
          [v11 setAssetURL:v15];
        }
        id v16 = [v5 infos];
        id v17 = sub_1000F48C8(v16);
        [v11 setInfo:v17];

        if ([v5 hasMeta])
        {
          uint64_t v18 = [v5 meta];
          id v19 = [v18 executionId];
          [v11 setServerExecutionID:v19];

          uint64_t v20 = [v5 meta];
          unsigned int v21 = [v20 etag];
          [v11 setServerETag:v21];

          uint64_t v22 = [v5 meta];
          LODWORD(v21) = [v22 hasStatus];

          if (v21)
          {
            int v23 = [v5 meta];
            uint64_t v24 = [v23 status];
            objc_msgSend(v11, "setServerStatus:", (int)objc_msgSend(v24, "code"));
          }
        }
        if ([v5 hasParticipants])
        {
          id v25 = [v5 participants];
          uint64_t v26 = [v25 senderPersonId];
          [v11 setSenderPersonID:v26];

          id v27 = [v5 participants];
          LODWORD(v26) = [v27 hasRecipientPersonId];

          if (v26)
          {
            id v28 = [v5 participants];
            uint64_t v29 = [v28 recipientPersonId];
            [v11 setRecipientPersonID:v29];
          }
        }
        if ([v1 hasDateCreated]
          && ([v1 dateCreated],
              id v30 = objc_claimAutoreleasedReturnValue(),
              unsigned int v31 = [v30 hasTime],
              v30,
              v31))
        {
          id v32 = [v1 dateCreated];
          char v33 = sub_1000F3F70(v32);
          [v11 setDateCreated:v33];
        }
        else
        {
          id v32 = +[NSDate date];
          [v11 setDateCreated:v32];
        }

        if ([v1 hasDateLastModified]
          && ([v1 dateLastModified],
              id v34 = objc_claimAutoreleasedReturnValue(),
              unsigned int v35 = [v34 hasTime],
              v34,
              v35))
        {
          uint64_t v36 = [v1 dateLastModified];
          uint64_t v37 = sub_1000F3F70(v36);
          [v11 setDateLastModified:v37];
        }
        else
        {
          uint64_t v36 = +[NSDate date];
          [v11 setDateLastModified:v36];
        }

        [v41 addObject:v11];
      }
      id v3 = [obj countByEnumeratingWithState:&v42 objects:v46 count:16];
    }
    while (v3);
  }

  return v41;
}

PDDPSurvey *sub_100021588(void *a1)
{
  id v1 = a1;
  id v2 = objc_alloc_init(PDDPSurvey);
  id v3 = [v1 objectID];
  [(PDDPSurvey *)v2 setObjectId:v3];

  id v4 = [v1 parentObjectID];
  [(PDDPSurvey *)v2 setParentObjectId:v4];

  uint64_t v5 = [v1 title];
  [(PDDPSurvey *)v2 setTitle:v5];

  id v6 = [v1 authorID];
  [(PDDPSurvey *)v2 setCreatedBy:v6];

  -[PDDPSurvey setType:](v2, "setType:", [v1 type] == (id)1);
  id v7 = [v1 dateCreated];
  id v8 = sub_1000F3E0C(v7);
  [(PDDPSurvey *)v2 setDateCreated:v8];

  uint64_t v9 = [v1 dateLastModified];
  uint64_t v10 = sub_1000F3E0C(v9);
  [(PDDPSurvey *)v2 setDateLastModified:v10];

  id v11 = [v1 serverETag];
  [(PDDPSurvey *)v2 setEtag:v11];

  uint64_t v12 = [v1 studentFirstSubmissionDate];
  id v13 = sub_1000F3E0C(v12);
  [(PDDPSurvey *)v2 setStudentDateFirstSubmitted:v13];

  signed int v14 = [v1 teacherLastModifiedDate];

  unsigned int v15 = sub_1000F3E0C(v14);
  [(PDDPSurvey *)v2 setTeacherDateLastModified:v15];

  return v2;
}

PDDPSurveyStep *sub_10002175C(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  id v8 = objc_alloc_init(PDDPSurveyStep);
  uint64_t v9 = [v5 objectID];
  [(PDDPSurveyStep *)v8 setObjectId:v9];

  uint64_t v10 = [v5 parentObjectID];
  [(PDDPSurveyStep *)v8 setParentObjectId:v10];

  -[PDDPSurveyStep setVersion:](v8, "setVersion:", [v5 version]);
  -[PDDPSurveyStep setSurveyStepType:](v8, "setSurveyStepType:", [v5 type] == (id)1);
  id v11 = [v5 dateCreated];
  uint64_t v12 = sub_1000F3E0C(v11);
  [(PDDPSurveyStep *)v8 setDateCreated:v12];

  id v13 = [v5 dateLastModified];
  signed int v14 = sub_1000F3E0C(v13);
  [(PDDPSurveyStep *)v8 setDateLastModified:v14];

  unsigned int v15 = [(PDDPSurveyStep *)v8 surveyStepType];
  if (v15)
  {
    if (v15 == 1)
    {
      id v16 = v8;
      id v17 = v6;
      id v18 = v7;
      id v19 = v5;
      uint64_t v20 = [v19 questionText];
      [(PDDPSurveyStep *)v16 setQuestionText:v20];

      id v21 = [v19 displayOrder];
      [(PDDPSurveyStep *)v16 setDisplayOrder:v21];
      id v22 = v17;
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        uint64_t v23 = 1;
      }
      else
      {
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          uint64_t v23 = 2;
        }
        else
        {
          objc_opt_class();
          if (objc_opt_isKindOfClass()) {
            uint64_t v23 = 3;
          }
          else {
            uint64_t v23 = 0;
          }
        }
      }

      [(PDDPSurveyStep *)v16 setAnswerFormatType:v23];
      id v25 = [v22 objectID];
      [(PDDPSurveyStep *)v16 setAnswerFormatObjectId:v25];

      switch([(PDDPSurveyStep *)v16 answerFormatType])
      {
        case 0:
          CLSInitLog();
          uint64_t v26 = CLSLogHandout;
          if (os_log_type_enabled(CLSLogHandout, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)long long buf = 0;
            _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_INFO, "Got an unknown answer format type. Ignoring it.", buf, 2u);
          }
          break;
        case 1:
          id v67 = v7;
          id v68 = v8;
          id v69 = v6;
          id v70 = v5;
          signed int v66 = v16;
          id v27 = v16;
          id v65 = v18;
          id v28 = v18;
          id v64 = v22;
          id v29 = [v22 type];
          if ((unint64_t)v29 >= 5) {
            uint64_t v30 = 1;
          }
          else {
            uint64_t v30 = v29;
          }
          -[PDDPSurveyStep setMultipleChoiceType:](v27, "setMultipleChoiceType:", v30, v27);
          unsigned int v31 = objc_opt_new();
          long long v71 = 0u;
          long long v72 = 0u;
          long long v73 = 0u;
          long long v74 = 0u;
          id v32 = v28;
          id v33 = [v32 countByEnumeratingWithState:&v71 objects:buf count:16];
          if (v33)
          {
            id v34 = v33;
            uint64_t v35 = *(void *)v72;
            do
            {
              for (i = 0; i != v34; i = (char *)i + 1)
              {
                if (*(void *)v72 != v35) {
                  objc_enumerationMutation(v32);
                }
                uint64_t v37 = *(void **)(*((void *)&v71 + 1) + 8 * i);
                unint64_t v38 = objc_opt_new();
                uint64_t v39 = [v37 objectID];
                [v38 setObjectId:v39];

                uint64_t v40 = [v37 dateCreated];
                id v41 = sub_1000F3E0C(v40);
                [v38 setDateCreated:v41];

                long long v42 = [v37 dateLastModified];
                long long v43 = sub_1000F3E0C(v42);
                [v38 setDateLastModified:v43];

                long long v44 = [v37 itemText];
                [v38 setText:v44];

                objc_msgSend(v38, "setDisplayOrder:", objc_msgSend(v37, "displayOrder"));
                [v31 addObject:v38];
              }
              id v34 = [v32 countByEnumeratingWithState:&v71 objects:buf count:16];
            }
            while (v34);
          }

          [v63 setOptionItems:v31];
          id v6 = v69;
          id v5 = v70;
          id v7 = v67;
          id v8 = v68;
          id v18 = v65;
          id v16 = v66;
          id v22 = v64;
          break;
        case 2:
          id v45 = v18;
          uint64_t v46 = v16;
          id v47 = v22;
          -[PDDPSurveyStep setSliderType:](v46, "setSliderType:", [v47 type] == (id)1);
          unsigned int v48 = [(PDDPSurveyStep *)v46 sliderType];
          if (v48)
          {
            if (v48 == 1)
            {
              -[PDDPSurveyStep setSliderMinimum:](v46, "setSliderMinimum:", (double)(uint64_t)[v47 minimum]);
              -[PDDPSurveyStep setSliderMaximum:](v46, "setSliderMaximum:", (double)(uint64_t)[v47 maximum]);
              id v49 = [v47 leadingValueLabel];
              [(PDDPSurveyStep *)v46 setSliderMinimumLabel:v49];

              long long v50 = [v47 midValueLabel];
              [(PDDPSurveyStep *)v46 setSliderMiddleLabel:v50];

              long long v51 = [v47 trailingValueLabel];
              [(PDDPSurveyStep *)v46 setSliderMaximumLabel:v51];
            }
          }
          else
          {
            CLSInitLog();
            id v61 = CLSLogHandout;
            if (os_log_type_enabled(CLSLogHandout, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)long long buf = 0;
              _os_log_impl((void *)&_mh_execute_header, v61, OS_LOG_TYPE_INFO, "Got an unknown slider type. Ignoring it.", buf, 2u);
            }
          }

          id v18 = v45;
          break;
        case 3:
          id v52 = v22;
          long long v53 = v16;
          id v54 = [v52 type];
          if (v54 == (id)2) {
            unsigned int v55 = 2;
          }
          else {
            unsigned int v55 = 1;
          }
          if (v54) {
            uint64_t v56 = v55;
          }
          else {
            uint64_t v56 = 0;
          }
          [(PDDPSurveyStep *)v53 setOpenResponseType:v56];
          [v52 teacherProvidedText];
          id v57 = v22;
          id v58 = v16;
          v60 = id v59 = v7;
          [(PDDPSurveyStep *)v53 setOpenResponseTeacherProvidedText:v60];

          id v7 = v59;
          id v16 = v58;
          id v22 = v57;
          -[PDDPSurveyStep setOpenResponseMinimumTextLength:](v53, "setOpenResponseMinimumTextLength:", [v52 minimumTextLength]);
          -[PDDPSurveyStep setOpenResponseMaximumTextLength:](v53, "setOpenResponseMaximumTextLength:", [v52 maximumTextLength]);
          -[PDDPSurveyStep setOpenResponseAllowMedia:](v53, "setOpenResponseAllowMedia:", [v52 allowsMultimedia]);

          break;
        default:
          break;
      }
    }
  }
  else
  {
    CLSInitLog();
    uint64_t v24 = CLSLogHandout;
    if (os_log_type_enabled(CLSLogHandout, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_INFO, "Got an unknown survey step type. Ignoring it.", buf, 2u);
    }
  }

  return v8;
}

PDDPSurveyStepAnswer *sub_100021E90(void *a1)
{
  id v1 = a1;
  id v2 = objc_alloc_init(PDDPSurveyStepAnswer);
  id v3 = [v1 objectID];
  [(PDDPSurveyStepAnswer *)v2 setObjectId:v3];

  id v4 = [v1 dateCreated];
  id v5 = sub_1000F3E0C(v4);
  [(PDDPSurveyStepAnswer *)v2 setDateCreated:v5];

  id v6 = [v1 dateLastModified];
  id v7 = sub_1000F3E0C(v6);
  [(PDDPSurveyStepAnswer *)v2 setDateLastModified:v7];

  unint64_t v8 = (unint64_t)[v1 answerType];
  if (v8 > 2) {
    uint64_t v9 = 2;
  }
  else {
    uint64_t v9 = dword_10019B678[v8];
  }
  [(PDDPSurveyStepAnswer *)v2 setAnswerType:v9];
  uint64_t v10 = [v1 questionID];
  [(PDDPSurveyStepAnswer *)v2 setSurveyStepId:v10];

  id v11 = [v1 surveyID];
  [(PDDPSurveyStepAnswer *)v2 setSurveyId:v11];

  uint64_t v12 = [v1 responderPersonID];
  [(PDDPSurveyStepAnswer *)v2 setCreatedBy:v12];

  switch([(PDDPSurveyStepAnswer *)v2 answerType])
  {
    case 0:
      CLSInitLog();
      id v13 = CLSLogHandout;
      if (os_log_type_enabled(CLSLogHandout, OS_LOG_TYPE_INFO))
      {
        v17[0] = 0;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "Got an unknown answer type. Ignoring it.", (uint8_t *)v17, 2u);
      }
      signed int v14 = 0;
      goto LABEL_12;
    case 1:
      -[PDDPSurveyStepAnswer setMultipleChoiceSelectedIndexValue:](v2, "setMultipleChoiceSelectedIndexValue:", [v1 selectedIndex]);
      goto LABEL_11;
    case 2:
      unsigned int v15 = [v1 textResponse];
      [(PDDPSurveyStepAnswer *)v2 setTextAnswerValue:v15];

      goto LABEL_11;
    case 3:
      [v1 continuousSliderValue];
      -[PDDPSurveyStepAnswer setContinuousSliderAnswerValue:](v2, "setContinuousSliderAnswerValue:");
      goto LABEL_11;
    default:
LABEL_11:
      signed int v14 = v2;
LABEL_12:

      return v14;
  }
}

id sub_1000220E4(void *a1)
{
  id v1 = a1;
  id v2 = objc_alloc((Class)CLSSurveyAnswerItem);
  id v3 = [v1 surveyId];
  id v4 = [v1 surveyStepId];
  id v5 = [v1 createdBy];
  id v6 = [v2 initWithSurveyID:v3 questionID:v4 responderID:v5];

  id v7 = [v1 objectId];
  [v6 setObjectID:v7];

  unsigned int v8 = [v1 answerType];
  if (v8 > 3) {
    uint64_t v9 = 2;
  }
  else {
    uint64_t v9 = qword_10019B688[v8];
  }
  [v6 setAnswerType:v9];
  id v10 = [v6 answerType];
  if (v10 == (id)1)
  {
    [v1 continuousSliderAnswerValue];
    objc_msgSend(v6, "setContinuousSliderValue:");
    goto LABEL_10;
  }
  if (v10 == (id)3)
  {
    id v11 = [v1 textAnswerValue];
    [v6 setTextResponse:v11];

    goto LABEL_10;
  }
  if (v10 == (id)2)
  {
    objc_msgSend(v6, "setSelectedIndex:", (int)objc_msgSend(v1, "multipleChoiceSelectedIndexValue"));
LABEL_10:
    [v6 setState:2];
    [v6 setAction:0];
    uint64_t v12 = [v1 dateCreated];
    id v13 = sub_1000F3F70(v12);
    [v6 setDateCreated:v13];

    signed int v14 = [v1 dateLastModified];
    unsigned int v15 = sub_1000F3F70(v14);
    [v6 setDateLastModified:v15];

    id v16 = v6;
    goto LABEL_14;
  }
  id v17 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"Unknown CLSAnswerType: %ld", [v6 answerType]);
  CLSInitLog();
  id v18 = CLSLogHandout;
  if (os_log_type_enabled(CLSLogHandout, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)long long buf = 138543362;
    id v21 = v17;
    _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_INFO, "Failed to convert from PDDPSurveyAnswerItem reason: %{public}@", buf, 0xCu);
  }

  id v16 = 0;
LABEL_14:

  return v16;
}

uint64_t sub_100022390(uint64_t result)
{
  if (result != 1)
  {
    uint64_t v1 = +[NSString stringWithFormat:@"Unknown PDDPSurvey_SurveyType: %ld", (int)result];
    CLSInitLog();
    id v2 = CLSLogHandout;
    if (os_log_type_enabled(CLSLogHandout, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138543362;
      uint64_t v5 = v1;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Failed to convert from PDDPSurvey_SurveyType reason: %{public}@", buf, 0xCu);
    }
    id v3 = +[NSException exceptionWithName:NSInvalidArgumentException reason:v1 userInfo:0];
    objc_exception_throw(v3);
  }
  return result;
}

id sub_100022490(void *a1)
{
  id v1 = a1;
  if ([v1 hasType])
  {
    sub_100022390((uint64_t)[v1 type]);
    id v2 = [v1 createdBy];
    id v3 = [objc_alloc((Class)CLSSurvey) initWithType:1 authorID:v2];
    id v4 = [v1 dateCreated];
    uint64_t v5 = sub_1000F3F70(v4);
    [v3 setDateCreated:v5];

    id v6 = [v1 dateLastModified];
    id v7 = sub_1000F3F70(v6);
    [v3 setDateLastModified:v7];

    unsigned int v8 = [v1 title];
    [v3 setTitle:v8];

    uint64_t v9 = [v1 objectId];
    [v3 setObjectID:v9];

    id v10 = [v1 parentObjectId];
    [v3 setParentObjectID:v10];

    [v3 setSurveyUpdateStatus:2];
    id v11 = [v1 etag];
    [v3 setServerETag:v11];

    uint64_t v12 = [v1 teacherDateLastModified];
    id v13 = sub_1000F3F70(v12);
    [v3 setTeacherLastModifiedDate:v13];

    signed int v14 = [v1 studentDateFirstSubmitted];
    unsigned int v15 = sub_1000F3F70(v14);
    [v3 setStudentFirstSubmissionDate:v15];
  }
  else
  {
    id v3 = 0;
  }

  return v3;
}

id sub_100022688(void *a1)
{
  id v1 = a1;
  if ([v1 hasType])
  {
    sub_100022390((uint64_t)[v1 type]);
    id v2 = [v1 createdBy];
    id v3 = [objc_alloc((Class)CLSArchivedSurvey) initWithType:1 authorID:v2];
    id v4 = [v1 dateCreated];
    uint64_t v5 = sub_1000F3F70(v4);
    [v3 setDateCreated:v5];

    id v6 = [v1 dateLastModified];
    id v7 = sub_1000F3F70(v6);
    [v3 setDateLastModified:v7];

    unsigned int v8 = [v1 title];
    [v3 setTitle:v8];

    uint64_t v9 = [v1 objectId];
    id v10 = sub_100022814(v9);
    [v3 setObjectID:v10];

    id v11 = [v1 parentObjectId];
    uint64_t v12 = sub_100022814(v11);
    [v3 setParentObjectID:v12];
  }
  else
  {
    id v3 = 0;
  }

  return v3;
}

id sub_100022814(void *a1)
{
  id v1 = [a1 copy];
  if (([v1 hasPrefix:@"HA_"] & 1) == 0)
  {
    uint64_t v2 = [@"HA_" stringByAppendingString:v1];

    id v1 = (id)v2;
  }

  return v1;
}

uint64_t sub_10002287C(uint64_t result)
{
  if (result != 1)
  {
    uint64_t v1 = +[NSString stringWithFormat:@"Unknown PDDPSurveyStep_SurveyStepType: %ld", (int)result];
    CLSInitLog();
    uint64_t v2 = CLSLogHandout;
    if (os_log_type_enabled(CLSLogHandout, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138543362;
      uint64_t v5 = v1;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Failed to convert from PDDPSurveyStep_SurveyStepType reason: %{public}@", buf, 0xCu);
    }
    id v3 = +[NSException exceptionWithName:NSInvalidArgumentException reason:v1 userInfo:0];
    objc_exception_throw(v3);
  }
  return result;
}

uint64_t sub_10002297C(int a1)
{
  switch(a1)
  {
    case 2:
      return 1;
    case 3:
      return 3;
    case 0:
      uint64_t v2 = +[NSString stringWithFormat:@"Unknown PDDPSurveyStep_AnswerFormatType: %ld", 0];
      CLSInitLog();
      id v3 = CLSLogHandout;
      if (os_log_type_enabled(CLSLogHandout, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138543362;
        uint64_t v6 = v2;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Failed to convert from PDDPSurveyStep_AnswerFormatType reason: %{public}@", buf, 0xCu);
      }
      id v4 = +[NSException exceptionWithName:NSInvalidArgumentException reason:v2 userInfo:0];
      objc_exception_throw(v4);
  }
  return 2;
}

uint64_t sub_100022A94(int a1)
{
  uint64_t result = 1;
  switch(a1)
  {
    case 0:
      uint64_t v3 = +[NSString stringWithFormat:@"Unknown PDDPSurveyStep_MultipleChoiceType: %ld", 0];
      CLSInitLog();
      id v4 = CLSLogHandout;
      if (os_log_type_enabled(CLSLogHandout, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138543362;
        uint64_t v7 = v3;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Failed to convert from PDDPSurveyStep_MultipleChoiceType reason: %{public}@", buf, 0xCu);
      }
      id v5 = +[NSException exceptionWithName:NSInvalidArgumentException reason:v3 userInfo:0];
      objc_exception_throw(v5);
    case 2:
      uint64_t result = 2;
      break;
    case 3:
      uint64_t result = 3;
      break;
    case 4:
      uint64_t result = 4;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100022BD4(uint64_t result)
{
  if (!result)
  {
    uint64_t v1 = +[NSString stringWithFormat:@"Unknown PDDPSurveyStep_SliderType: %ld", 0];
    CLSInitLog();
    uint64_t v2 = CLSLogHandout;
    if (os_log_type_enabled(CLSLogHandout, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138543362;
      uint64_t v5 = v1;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Failed to convert from PDDPSurveyStep_SliderType reason: %{public}@", buf, 0xCu);
    }
    id v3 = +[NSException exceptionWithName:NSInvalidArgumentException reason:v1 userInfo:0];
    objc_exception_throw(v3);
  }
  return result;
}

uint64_t sub_100022CC8(int a1)
{
  if (a1 == 2) {
    return 2;
  }
  if (!a1)
  {
    uint64_t v2 = +[NSString stringWithFormat:@"Unknown PDDPSurveyStep_OpenResponseType: %ld", 0];
    CLSInitLog();
    id v3 = CLSLogHandout;
    if (os_log_type_enabled(CLSLogHandout, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138543362;
      uint64_t v6 = v2;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Failed to convert from PDDPSurveyStep_OpenResponseType reason: %{public}@", buf, 0xCu);
    }
    id v4 = +[NSException exceptionWithName:NSInvalidArgumentException reason:v2 userInfo:0];
    objc_exception_throw(v4);
  }
  return 1;
}

id sub_100022DD0(void *a1)
{
  id v1 = a1;
  if ([v1 hasSurveyStepType])
  {
    sub_10002287C((uint64_t)[v1 surveyStepType]);
    id v2 = objc_alloc_init((Class)CLSQuestionStep);
    objc_msgSend(v2, "setVersion:", (int)objc_msgSend(v1, "version"));
    id v37 = v2;
    [v2 setType:1];
    id v3 = [v1 objectId];
    [v2 setObjectID:v3];

    id v4 = [v1 parentObjectId];
    [v2 setParentObjectID:v4];

    uint64_t v5 = [v1 questionText];
    [v2 setQuestionText:v5];

    objc_msgSend(v2, "setDisplayOrder:", (int)objc_msgSend(v1, "displayOrder"));
    id v6 = v1;
    uint64_t v7 = sub_10002297C((int)[v6 answerFormatType]);
    switch(v7)
    {
      case 1:
        sub_100022BD4((uint64_t)[v6 sliderType]);
        id v11 = objc_alloc_init((Class)CLSSliderAnswerFormat);
        [v6 sliderMinimum];
        [v11 setMinimum:(uint64_t)v14];
        [v6 sliderMaximum];
        [v11 setMaximum:(uint64_t)v15];
        id v16 = [v6 sliderMinimumLabel];
        [v11 setLeadingValueLabel:v16];

        id v17 = [v6 sliderMiddleLabel];
        [v11 setMidValueLabel:v17];

        id v18 = [v6 sliderMaximumLabel];
        [v11 setTrailingValueLabel:v18];

        if (v11)
        {
          id v19 = [v6 answerFormatObjectId];
          [v11 setObjectID:v19];

          uint64_t v20 = [v6 objectId];
          [v11 setParentObjectID:v20];

          id v21 = v11;
        }

        break;
      case 2:
        id v11 = objc_msgSend(objc_alloc((Class)CLSMultipleChoiceAnswerFormat), "initWithType:", sub_100022A94((int)objc_msgSend(v6, "multipleChoiceType")));
        id v36 = v6;
        id v22 = [v6 answerFormatObjectId];
        [v11 setObjectID:v22];

        uint64_t v23 = [v6 objectId];
        [v11 setParentObjectID:v23];

        long long v40 = 0u;
        long long v41 = 0u;
        long long v38 = 0u;
        long long v39 = 0u;
        uint64_t v24 = [v6 optionItems];
        id v25 = [v24 countByEnumeratingWithState:&v38 objects:buf count:16];
        if (v25)
        {
          uint64_t v26 = *(void *)v39;
          do
          {
            for (i = 0; i != v25; i = (char *)i + 1)
            {
              if (*(void *)v39 != v26) {
                objc_enumerationMutation(v24);
              }
              id v28 = *(void **)(*((void *)&v38 + 1) + 8 * i);
              id v29 = objc_alloc((Class)CLSMultipleChoiceAnswerItem);
              uint64_t v30 = [v28 text];
              id v31 = [v29 initWithText:v30];

              id v32 = [v28 objectId];
              [v31 setObjectID:v32];

              id v33 = [v11 objectID];
              [v31 setParentObjectID:v33];

              objc_msgSend(v31, "setDisplayOrder:", (int)objc_msgSend(v28, "displayOrder"));
              [v11 addAnswerItem:v31];
            }
            id v25 = [v24 countByEnumeratingWithState:&v38 objects:buf count:16];
          }
          while (v25);
        }

        id v6 = v36;
        break;
      case 3:
        uint64_t v8 = sub_100022CC8((int)[v6 openResponseType]);
        id v9 = objc_alloc((Class)CLSOpenResponseAnswerFormat);
        id v10 = [v6 openResponseTeacherProvidedText];
        id v11 = objc_msgSend(v9, "initWithType:starterText:minimumLength:maximumLength:", v8, v10, (int)objc_msgSend(v6, "openResponseMinimumTextLength"), (int)objc_msgSend(v6, "openResponseMaximumTextLength"));

        uint64_t v12 = [v6 answerFormatObjectId];
        [v11 setObjectID:v12];

        id v13 = [v6 objectId];
        [v11 setParentObjectID:v13];

        objc_msgSend(v11, "setAllowsMultimedia:", objc_msgSend(v6, "openResponseAllowMedia"));
        break;
      default:
        CLSInitLog();
        id v34 = CLSLogHandout;
        if (os_log_type_enabled(CLSLogHandout, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_INFO, "Got an unknown answer format type. Ignoring it.", buf, 2u);
        }
        id v11 = 0;
        break;
    }

    [v37 setAnswerFormat:v11];
  }
  else
  {
    id v37 = 0;
  }

  return v37;
}

id sub_100023340(void *a1)
{
  id v1 = a1;
  if ([v1 hasSurveyStepType])
  {
    sub_10002287C((uint64_t)[v1 surveyStepType]);
    id v2 = objc_alloc_init((Class)CLSArchivedQuestionStep);
    objc_msgSend(v2, "setVersion:", (int)objc_msgSend(v1, "version"));
    id v48 = v2;
    [v2 setType:1];
    id v47 = v1;
    id v3 = [v1 objectId];
    id v4 = sub_100022814(v3);
    [v2 setObjectID:v4];

    uint64_t v5 = [v1 parentObjectId];
    id v6 = sub_100022814(v5);
    [v2 setParentObjectID:v6];

    uint64_t v7 = [v1 questionText];
    [v2 setQuestionText:v7];

    objc_msgSend(v2, "setDisplayOrder:", (int)objc_msgSend(v1, "displayOrder"));
    id v8 = v1;
    uint64_t v9 = sub_10002297C((int)[v8 answerFormatType]);
    switch(v9)
    {
      case 1:
        sub_100022BD4((uint64_t)[v8 sliderType]);
        id v13 = objc_alloc_init((Class)CLSArchivedSliderAnswerFormat);
        [v8 sliderMinimum];
        [v13 setMinimum:(uint64_t)v18];
        [v8 sliderMaximum];
        [v13 setMaximum:(uint64_t)v19];
        uint64_t v20 = [v8 sliderMinimumLabel];
        [v13 setLeadingValueLabel:v20];

        id v21 = [v8 sliderMaximumLabel];
        [v13 setTrailingValueLabel:v21];

        id v22 = [v8 sliderMaximumLabel];
        [v13 setMidValueLabel:v22];

        if (v13)
        {
          uint64_t v23 = [v8 answerFormatObjectId];
          uint64_t v24 = sub_100022814(v23);
          [v13 setObjectID:v24];

          id v25 = [v8 objectId];
          uint64_t v26 = sub_100022814(v25);
          [v13 setParentObjectID:v26];

          id v27 = v13;
        }

        break;
      case 2:
        id v13 = objc_msgSend(objc_alloc((Class)CLSArchivedMultipleChoiceAnswerFormat), "initWithType:", sub_100022A94((int)objc_msgSend(v8, "multipleChoiceType")));
        id v46 = v8;
        id v28 = [v8 answerFormatObjectId];
        id v29 = sub_100022814(v28);
        [v13 setObjectID:v29];

        uint64_t v30 = [v8 objectId];
        id v31 = sub_100022814(v30);
        [v13 setParentObjectID:v31];

        long long v51 = 0u;
        long long v52 = 0u;
        long long v49 = 0u;
        long long v50 = 0u;
        id v32 = [v8 optionItems];
        id v33 = [v32 countByEnumeratingWithState:&v49 objects:buf count:16];
        if (v33)
        {
          uint64_t v34 = *(void *)v50;
          do
          {
            for (i = 0; i != v33; i = (char *)i + 1)
            {
              if (*(void *)v50 != v34) {
                objc_enumerationMutation(v32);
              }
              id v36 = *(void **)(*((void *)&v49 + 1) + 8 * i);
              id v37 = objc_alloc((Class)CLSArchivedMultipleChoiceAnswerItem);
              long long v38 = [v36 text];
              id v39 = [v37 initWithText:v38];

              long long v40 = [v36 objectId];
              long long v41 = sub_100022814(v40);
              [v39 setObjectID:v41];

              long long v42 = [v13 objectID];
              long long v43 = sub_100022814(v42);
              [v39 setParentObjectID:v43];

              objc_msgSend(v39, "setDisplayOrder:", (int)objc_msgSend(v36, "displayOrder"));
              [v13 addAnswerItem:v39];
            }
            id v33 = [v32 countByEnumeratingWithState:&v49 objects:buf count:16];
          }
          while (v33);
        }

        id v8 = v46;
        break;
      case 3:
        uint64_t v10 = sub_100022CC8((int)[v8 openResponseType]);
        id v11 = objc_alloc((Class)CLSArchivedOpenResponseAnswerFormat);
        uint64_t v12 = [v8 openResponseTeacherProvidedText];
        id v13 = objc_msgSend(v11, "initWithType:starterText:minimumLength:maximumLength:", v10, v12, (int)objc_msgSend(v8, "openResponseMinimumTextLength"), (int)objc_msgSend(v8, "openResponseMaximumTextLength"));

        double v14 = [v8 answerFormatObjectId];
        double v15 = sub_100022814(v14);
        [v13 setObjectID:v15];

        id v16 = [v8 objectId];
        id v17 = sub_100022814(v16);
        [v13 setParentObjectID:v17];

        objc_msgSend(v13, "setAllowsMultimedia:", objc_msgSend(v8, "openResponseAllowMedia"));
        break;
      default:
        CLSInitLog();
        long long v44 = CLSLogHandout;
        if (os_log_type_enabled(CLSLogHandout, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v44, OS_LOG_TYPE_INFO, "Got an unknown answer format type. Ignoring it.", buf, 2u);
        }
        id v13 = 0;
        break;
    }

    [v2 setArchivedAnswerFormat:v13];
    id v1 = v47;
  }
  else
  {
    id v48 = 0;
  }

  return v48;
}

PDDPCollection *sub_10002395C(void *a1)
{
  id v1 = a1;
  id v2 = objc_alloc_init(PDDPCollection);
  id v3 = [v1 location];
  [(PDDPCollection *)v2 setCollectionItemLocation:v3];

  id v4 = [v1 dateCreated];
  uint64_t v5 = sub_1000F3E0C(v4);
  [(PDDPCollection *)v2 setDateCreated:v5];

  id v6 = [v1 dateLastModified];
  uint64_t v7 = sub_1000F3E0C(v6);
  [(PDDPCollection *)v2 setDateLastModified:v7];

  id v8 = [v1 dateClassCreated];
  uint64_t v9 = sub_1000F3E0C(v8);
  [(PDDPCollection *)v2 setDateClassCreated:v9];

  uint64_t v10 = [v1 name];
  [(PDDPCollection *)v2 setDisplayName:v10];

  id v11 = [v1 iconID];
  [(PDDPCollection *)v2 setIconIdentifier:v11];

  unint64_t v12 = (unint64_t)[v1 type];
  if (v12 >= 6 || ((0x27u >> v12) & 1) == 0)
  {
    uint64_t v15 = +[NSString stringWithFormat:@"Unknown CLSCollectionType: %ld", v12];
    CLSInitLog();
    id v16 = CLSLogCollection;
    if (os_log_type_enabled(CLSLogCollection, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138543362;
      uint64_t v19 = v15;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_INFO, "Failed to convert from CLSCollectionType reason: %{public}@", buf, 0xCu);
    }
    id v17 = +[NSException exceptionWithName:NSInvalidArgumentException reason:v15 userInfo:0];
    objc_exception_throw(v17);
  }
  [(PDDPCollection *)v2 setType:dword_10019B6A8[v12]];
  id v13 = [v1 objectID];

  [(PDDPCollection *)v2 setObjectId:v13];

  return v2;
}

id sub_100023BCC(void *a1)
{
  id v1 = a1;
  id v2 = [v1 displayName];
  if (!v2)
  {
    CLSInitLog();
    id v3 = (void *)CLSLogCollection;
    if (os_log_type_enabled(CLSLogCollection, OS_LOG_TYPE_ERROR))
    {
      double v18 = v3;
      uint64_t v19 = [v1 objectId];
      *(_DWORD *)long long buf = 138543362;
      uint64_t v24 = (uint64_t)v19;
      _os_log_error_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_ERROR, "Collection with ID: %{public}@ has a null displayName", buf, 0xCu);
    }
    id v2 = &stru_1001F6580;
  }
  id v4 = objc_alloc((Class)CLSCollection);
  uint64_t v5 = [v1 objectId];
  id v6 = [v1 collectionItemLocation];
  signed int v7 = [v1 type];
  if (v7 >= 4)
  {
    uint64_t v20 = +[NSString stringWithFormat:@"Unknown PDDPCollection_Type: %ld", v7];
    CLSInitLog();
    id v21 = CLSLogCollection;
    if (os_log_type_enabled(CLSLogCollection, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138543362;
      uint64_t v24 = v20;
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_INFO, "Failed to convert from PDDPCollection_Type reason: %{public}@", buf, 0xCu);
    }
    id v22 = +[NSException exceptionWithName:NSInvalidArgumentException reason:v20 userInfo:0];
    objc_exception_throw(v22);
  }
  uint64_t v8 = qword_10019B6C0[v7];
  uint64_t v9 = [v1 iconIdentifier];
  id v10 = [v4 initWithObjectID:v5 name:v2 location:v6 type:v8 icon:v9];

  id v11 = [v1 dateCreated];
  unint64_t v12 = sub_1000F3F70(v11);
  [v10 setDateCreated:v12];

  id v13 = [v1 dateLastModified];
  double v14 = sub_1000F3F70(v13);
  [v10 setDateLastModified:v14];

  uint64_t v15 = [v1 dateClassCreated];
  id v16 = sub_1000F3F70(v15);
  [v10 setDateClassCreated:v16];

  [v10 setAppIdentifier:@"com.apple.schoolwork.ClassKitApp"];

  return v10;
}

uint64_t sub_100023EB8(signed int a1)
{
  if (a1 >= 3)
  {
    uint64_t v2 = +[NSString stringWithFormat:@"Unknown PDDPCollectionItem_Type: %ld", a1];
    CLSInitLog();
    id v3 = CLSLogCollection;
    if (os_log_type_enabled(CLSLogCollection, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138543362;
      uint64_t v6 = v2;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Failed to convert from PDDPCollectionItem_Type reason: %{public}@", buf, 0xCu);
    }
    id v4 = +[NSException exceptionWithName:NSInvalidArgumentException reason:v2 userInfo:0];
    objc_exception_throw(v4);
  }
  return qword_10019B6E0[a1];
}

id sub_100023FC4(void *a1)
{
  id v1 = [a1 copy];
  if ([v1 hasPrefix:@"HA_"])
  {
    uint64_t v2 = [v1 substringFromIndex:objc_msgSend(@"HA_", "length")];

    id v1 = (id)v2;
  }

  return v1;
}

PDDPCollectionItem *sub_100024034(void *a1)
{
  id v1 = a1;
  uint64_t v2 = objc_alloc_init(PDDPCollectionItem);
  id v3 = [v1 parentObjectID];
  [(PDDPCollectionItem *)v2 setCollectionId:v3];

  id v4 = [v1 dateCreated];
  uint64_t v5 = sub_1000F3E0C(v4);
  [(PDDPCollectionItem *)v2 setDateCreated:v5];

  uint64_t v6 = [v1 dateLastModified];
  signed int v7 = sub_1000F3E0C(v6);
  [(PDDPCollectionItem *)v2 setDateLastModified:v7];

  uint64_t v8 = objc_opt_new();
  uint64_t v9 = [v1 referenceObjectID];
  id v10 = sub_100023FC4(v9);

  [v8 addObject:v10];
  [(PDDPCollectionItem *)v2 setItemIds:v8];
  id v11 = [v1 type];

  if (v11)
  {
    if (v11 == (id)2)
    {
      uint64_t v12 = 1;
    }
    else
    {
      if (v11 != (id)3)
      {
        uint64_t v14 = +[NSString stringWithFormat:@"Unknown CLSCollectionItemType: %ld", v11];
        CLSInitLog();
        uint64_t v15 = CLSLogCollection;
        if (os_log_type_enabled(CLSLogCollection, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)long long buf = 138543362;
          uint64_t v18 = v14;
          _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "Failed to convert from CLSCollectionItemType reason: %{public}@", buf, 0xCu);
        }
        id v16 = +[NSException exceptionWithName:NSInvalidArgumentException reason:v14 userInfo:0];
        objc_exception_throw(v16);
      }
      uint64_t v12 = 2;
    }
  }
  else
  {
    uint64_t v12 = 0;
  }
  [(PDDPCollectionItem *)v2 setType:v12];

  return v2;
}

id sub_100024274(void *a1)
{
  id v1 = a1;
  id v2 = objc_alloc_init((Class)NSMutableArray);
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  id v3 = objc_msgSend(v1, "itemIds", 0);
  id v4 = [v3 countByEnumeratingWithState:&v18 objects:v22 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v19;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v19 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = *(void **)(*((void *)&v18 + 1) + 8 * i);
        id v9 = objc_msgSend(objc_alloc((Class)CLSCollectionItem), "initWithType:", sub_100023EB8((signed int)objc_msgSend(v1, "type")));
        id v10 = [v1 collectionId];
        [v9 setParentObjectID:v10];

        id v11 = sub_100022814(v8);
        [v9 setReferenceObjectID:v11];

        uint64_t v12 = [v1 dateCreated];
        id v13 = sub_1000F3F70(v12);
        [v9 setDateCreated:v13];

        uint64_t v14 = [v1 dateLastModified];
        uint64_t v15 = sub_1000F3F70(v14);
        [v9 setDateLastModified:v15];

        objc_msgSend(v9, "setType:", sub_100023EB8((signed int)objc_msgSend(v1, "type")));
        [v9 setAppIdentifier:@"com.apple.schoolwork.ClassKitApp"];
        [v2 addObject:v9];
      }
      id v5 = [v3 countByEnumeratingWithState:&v18 objects:v22 count:16];
    }
    while (v5);
  }

  id v16 = [v2 copy];

  return v16;
}

id sub_1000244B8(void *a1)
{
  id v1 = a1;
  id v2 = objc_alloc_init((Class)CLSArchivedHandout);
  id v3 = [v1 objectId];
  id v4 = sub_100022814(v3);
  [v2 setObjectID:v4];

  id v5 = [v1 appIdentifier];
  [v2 setAppIdentifier:v5];

  uint64_t v6 = [v1 dateCreated];
  signed int v7 = sub_1000F3F70(v6);
  [v2 setDateCreated:v7];

  uint64_t v8 = [v1 dateLastModified];
  id v9 = sub_1000F3F70(v8);
  [v2 setDateLastModified:v9];

  id v10 = [v1 dateOfPublication];
  id v11 = sub_1000F3F70(v10);
  [v2 setDateOfPublication:v11];

  uint64_t v12 = [v1 dateDue];
  id v13 = sub_1000F3F70(v12);
  [v2 setDueDate:v13];

  uint64_t v14 = [v1 title];
  [v2 setTitle:v14];

  uint64_t v15 = [v1 instructions];
  [v2 setInstructions:v15];

  id v16 = [v1 dateDue];

  id v17 = sub_1000F3F70(v16);
  [v2 setDueDate:v17];

  return v2;
}

id sub_100024694(void *a1)
{
  id v1 = a1;
  if ([v1 hasType])
  {
    uint64_t v2 = sub_1000204B8((int)[v1 type]);
    id v3 = objc_alloc((Class)CLSArchivedHandoutAttachment);
    id v4 = [v1 title];
    id v5 = [v3 initWithType:v2 title:v4];

    uint64_t v6 = [v1 appIdentifier];
    [v5 setAppIdentifier:v6];

    signed int v7 = [v1 objectId];
    uint64_t v8 = sub_100022814(v7);
    [v5 setObjectID:v8];

    id v9 = [v1 parentObjectId];
    id v10 = sub_100022814(v9);
    [v5 setParentObjectID:v10];

    if ([v1 hasDateLastModified])
    {
      id v11 = [v1 dateLastModified];
      uint64_t v12 = sub_1000F3F70(v11);
      [v5 setDateLastModified:v12];
    }
    if ([v1 hasAppBundleIdentifier])
    {
      id v13 = [v1 appBundleIdentifier];
      [v5 setBundleIdentifier:v13];
    }
    if ([v1 hasAppStoreIdentifier])
    {
      uint64_t v14 = [v1 appStoreIdentifier];
      [v5 setStoreIdentifier:v14];
    }
    objc_msgSend(v5, "setDisplayOrder:", (int)objc_msgSend(v1, "displayOrder"));
    uint64_t v15 = [v1 contentStoreIdentifier];
    [v5 setContentStoreIdentifier:v15];

    [v1 timeExpectationInSeconds];
    objc_msgSend(v5, "setTimeExpectation:");
    if ([v1 hasShareType])
    {
      objc_msgSend(v5, "setShareType:", sub_1000205B0((int)objc_msgSend(v1, "shareType")));
      if (![v1 hasPermissionType])
      {
        id v24 = 0;
LABEL_21:

        goto LABEL_23;
      }
      objc_msgSend(v5, "setPermissionType:", sub_1000206B4((uint64_t)objc_msgSend(v1, "permissionType")));
    }
    if ([v1 hasContextType]) {
      objc_msgSend(v5, "setContextType:", sub_1000207C4((int)objc_msgSend(v1, "contextType")));
    }
    if ([v1 hasUrl])
    {
      id v16 = objc_alloc((Class)NSURL);
      id v17 = [v1 url];
      id v18 = [v16 initWithString:v17];
      [v5 setURL:v18];
    }
    if (v2 == 3)
    {
      id v22 = [v1 appBundleIdentifier];
      [v5 setBundleIdentifier:v22];

      uint64_t v23 = [v1 appStoreIdentifier];
      [v5 setStoreIdentifier:v23];
    }
    else if (v2 == 1)
    {
      long long v19 = [v1 contextPaths];
      [v5 setContextPath:v19];

      long long v20 = [v1 contextSummary];
      [v5 setContextSummary:v20];

      long long v21 = [v1 contextCustomTypeName];
      [v5 setContextCustomTypeName:v21];

      objc_msgSend(v5, "setContextSourceIsCatalog:", objc_msgSend(v1, "contextSourceIsCatalog"));
    }
    id v24 = v5;
    goto LABEL_21;
  }
  id v24 = 0;
LABEL_23:

  return v24;
}

id sub_100024A50(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = [objc_alloc((Class)CLSArchivedAsset) _init];
  uint64_t v6 = [v3 objectId];
  signed int v7 = sub_100022814(v6);
  [v5 setObjectID:v7];

  uint64_t v8 = [v3 parentObjectId];
  id v9 = sub_100022814(v8);
  [v5 setParentObjectID:v9];

  if ([v3 hasDateCreated])
  {
    id v10 = [v3 dateCreated];
    id v11 = sub_1000F3F70(v10);
    [v5 setDateCreated:v11];
  }
  if ([v3 hasDateLastModified])
  {
    uint64_t v12 = [v3 dateLastModified];
    id v13 = sub_1000F3F70(v12);
    [v5 setDateLastModified:v13];
  }
  objc_msgSend(v5, "setType:", sub_1000208C8((uint64_t)objc_msgSend(v3, "type")));
  objc_msgSend(v5, "setParentEntityType:", sub_1000209CC((uint64_t)objc_msgSend(v3, "parentEntityType")));
  uint64_t v14 = [v3 appIdentifier];
  [v5 setAppIdentifier:v14];

  uint64_t v15 = [v3 ckUuid];
  [v5 setBrItemID:v15];

  id v16 = [v3 ckOwnerName];
  [v5 setBrOwnerName:v16];

  id v17 = [v3 ckZoneName];
  [v5 setBrZoneName:v17];

  id v18 = [v3 ownerId];
  [v5 setOwnerPersonID:v18];

  long long v19 = [v3 icloudDriveContainerName];
  [v5 setUbiquitousContainerName:v19];

  long long v20 = [v3 icloudDriveRelativeFilePath];
  [v5 setRelativePathWithinContainer:v20];

  long long v21 = [v3 ckShareRecordName];
  [v5 setBrShareName:v21];

  id v22 = [v5 ubiquitousContainerName];

  if (v22)
  {
    if (![v5 type]) {
      [v5 setType:1];
    }
    if (![v5 parentEntityType]) {
      [v5 setParentEntityType:2];
    }
    uint64_t v23 = sub_1000CA5C8();
    id v24 = sub_1000064B8(v23, v4);

    id v25 = [v24 schoolworkUbiquitousContainerURL];
    if (v25)
    {
      uint64_t v26 = [v5 relativePathWithinContainer];
      id v27 = [v25 URLByAppendingPathComponent:v26 isDirectory:0];

      [v5 setURL:v27];
    }
  }
  if ([v5 type] == (id)2 && objc_msgSend(v3, "hasWebUrl"))
  {
    id v28 = [v3 webUrl];
    if (v28)
    {
      id v29 = +[NSURL URLWithString:v28];
      [v5 setURL:v29];
    }
  }
  [v5 setSchoolworkSyncStatus:2];
  if ([v3 hasTitle])
  {
    uint64_t v30 = [v3 title];
    [v5 setTitle:v30];
  }
  if ([v3 hasFileSizeBytes]) {
    objc_msgSend(v5, "setFileSizeInBytes:", objc_msgSend(v3, "fileSizeBytes"));
  }
  if ([v3 hasOriginalFilename])
  {
    id v31 = [v3 originalFilename];
    [v5 setOriginalFilename:v31];
  }
  if ([v3 hasFileUttype])
  {
    id v32 = [v3 fileUttype];
    id v33 = +[UTType typeWithIdentifier:v32];
    [v5 setFileUTType:v33];
  }
  if ([v3 hasDisplayOrder]) {
    objc_msgSend(v5, "setDisplayOrder:", (int)objc_msgSend(v3, "displayOrder"));
  }
  if ([v3 hasDurationSeconds])
  {
    [v3 durationSeconds];
    objc_msgSend(v5, "setDurationInSeconds:");
  }

  return v5;
}

uint64_t sub_100024F00(int a1)
{
  if ((a1 - 1) >= 5)
  {
    id v2 = objc_msgSend(objc_alloc((Class)NSString), "initWithFormat:", @"Unknown PDDPCompletionStatus_Type: %ld", a1);
    CLSInitLog();
    id v3 = CLSLogHandout;
    if (os_log_type_enabled(CLSLogHandout, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138543362;
      id v6 = v2;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Failed to convert from PDDPCompletionStatus_Type reason: %{public}@", buf, 0xCu);
    }
    id v4 = +[NSException exceptionWithName:NSInvalidArgumentException reason:v2 userInfo:0];
    objc_exception_throw(v4);
  }
  return dword_10019B6F8[a1 - 1];
}

id sub_100025010(void *a1)
{
  id v1 = a1;
  id v2 = objc_opt_new();
  id v3 = [v1 appIdentifier];
  [v2 setAppIdentifier:v3];

  id v4 = [v2 appIdentifier];

  if (!v4) {
    [v2 setAppIdentifier:@"com.apple.phoenix"];
  }
  id v5 = [v1 dateCreated];
  id v6 = sub_1000F3E0C(v5);
  [v2 setDateCreated:v6];

  signed int v7 = [v1 dateLastModified];
  uint64_t v8 = sub_1000F3E0C(v7);
  [v2 setDateLastModified:v8];

  id v9 = (char *)[v1 type] - 1;
  if ((unint64_t)v9 < 3) {
    uint64_t v10 = (v9 + 1);
  }
  else {
    uint64_t v10 = 0;
  }
  [v2 setType:v10];
  id v11 = (char *)[v1 parentEntityType] - 1;
  if ((unint64_t)v11 < 6) {
    uint64_t v12 = (v11 + 1);
  }
  else {
    uint64_t v12 = 0;
  }
  [v2 setParentEntityType:v12];
  id v13 = [v1 objectID];
  [v2 setObjectId:v13];

  uint64_t v14 = [v1 parentObjectID];
  [v2 setParentObjectId:v14];

  uint64_t v15 = [v1 brItemID];
  [v2 setCkUuid:v15];

  id v16 = [v1 brOwnerName];
  [v2 setCkOwnerName:v16];

  id v17 = [v1 brZoneName];
  [v2 setCkZoneName:v17];

  id v18 = [v1 ownerPersonID];
  [v2 setOwnerId:v18];

  long long v19 = [v1 fileUTType];
  long long v20 = [v19 identifier];
  [v2 setFileUttype:v20];

  objc_msgSend(v2, "setDisplayOrder:", objc_msgSend(v1, "displayOrder"));
  id v21 = [v1 type];
  if (v21 == (id)3)
  {
    id v27 = [v1 title];
    [v2 setTitle:v27];

    objc_msgSend(v2, "setFileSizeBytes:", objc_msgSend(v1, "fileSizeInBytes"));
    id v28 = [v1 originalFilename];
    [v2 setOriginalFilename:v28];

    [v1 durationInSeconds];
    objc_msgSend(v2, "setDurationSeconds:");
  }
  else
  {
    if (v21 == (id)2)
    {
      id v29 = [v1 URL];
      uint64_t v30 = [v29 absoluteString];
      [v2 setWebUrl:v30];

      uint64_t v26 = [v1 title];
      [v2 setTitle:v26];
    }
    else
    {
      if (v21 != (id)1) {
        goto LABEL_16;
      }
      id v22 = [v1 brZoneName];
      [v2 setCkShareZoneName:v22];

      uint64_t v23 = [v1 brOwnerName];
      [v2 setCkShareOwnerName:v23];

      id v24 = [v1 brShareName];
      [v2 setCkShareRecordName:v24];

      objc_msgSend(v2, "setIsOriginal:", objc_msgSend(v1, "isOriginal"));
      id v25 = [v1 ubiquitousContainerName];
      [v2 setIcloudDriveContainerName:v25];

      uint64_t v26 = [v1 relativePathWithinContainer];
      [v2 setIcloudDriveRelativeFilePath:v26];
    }
  }
LABEL_16:

  return v2;
}

id sub_1000253D4(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = [objc_alloc((Class)CLSAsset) _init];
  id v6 = [v3 objectId];
  [v5 setObjectID:v6];

  signed int v7 = [v3 parentObjectId];
  [v5 setParentObjectID:v7];

  if ([v3 hasDateCreated])
  {
    uint64_t v8 = [v3 dateCreated];
    id v9 = sub_1000F3F70(v8);
    [v5 setDateCreated:v9];
  }
  if ([v3 hasDateLastModified])
  {
    uint64_t v10 = [v3 dateLastModified];
    id v11 = sub_1000F3F70(v10);
    [v5 setDateLastModified:v11];
  }
  objc_msgSend(v5, "setType:", sub_1000208C8((uint64_t)objc_msgSend(v3, "type")));
  objc_msgSend(v5, "setParentEntityType:", sub_1000209CC((uint64_t)objc_msgSend(v3, "parentEntityType")));
  uint64_t v12 = [v3 appIdentifier];
  [v5 setAppIdentifier:v12];

  id v13 = [v3 ckUuid];
  [v5 setBrItemID:v13];

  uint64_t v14 = [v3 ckOwnerName];
  [v5 setBrOwnerName:v14];

  uint64_t v15 = [v3 ckZoneName];
  [v5 setBrZoneName:v15];

  id v16 = [v3 ownerId];
  [v5 setOwnerPersonID:v16];

  id v17 = [v3 icloudDriveContainerName];
  [v5 setUbiquitousContainerName:v17];

  id v18 = [v3 icloudDriveRelativeFilePath];
  [v5 setRelativePathWithinContainer:v18];

  long long v19 = [v3 ckShareRecordName];
  [v5 setBrShareName:v19];

  objc_msgSend(v5, "setOriginal:", objc_msgSend(v3, "isOriginal"));
  long long v20 = [v5 ubiquitousContainerName];

  if (v20)
  {
    if (![v5 type]) {
      [v5 setType:1];
    }
    if (![v5 parentEntityType]) {
      [v5 setParentEntityType:2];
    }
    id v21 = sub_1000CA5C8();
    id v22 = sub_1000064B8(v21, v4);

    uint64_t v23 = [v22 schoolworkUbiquitousContainerURL];
    if (v23)
    {
      id v24 = [v5 relativePathWithinContainer];
      id v25 = [v23 URLByAppendingPathComponent:v24 isDirectory:0];

      [v5 setURL:v25];
    }
  }
  if ([v5 type] == (id)2 && objc_msgSend(v3, "hasWebUrl"))
  {
    uint64_t v26 = [v3 webUrl];
    if (v26)
    {
      id v27 = +[NSURL URLWithString:v26];
      [v5 setURL:v27];
    }
  }
  [v5 setUploaded:1];
  [v5 setStaged:0];
  [v5 setSchoolworkSyncStatus:2];
  if ([v3 hasTitle])
  {
    id v28 = [v3 title];
    [v5 setTitle:v28];
  }
  if ([v3 hasFileSizeBytes]) {
    objc_msgSend(v5, "setFileSizeInBytes:", objc_msgSend(v3, "fileSizeBytes"));
  }
  if ([v3 hasFileUttype])
  {
    id v29 = [v3 fileUttype];
    uint64_t v30 = +[UTType typeWithIdentifier:v29];
    [v5 setFileUTType:v30];
  }
  if ([v3 hasOriginalFilename])
  {
    id v31 = [v3 originalFilename];
    [v5 setOriginalFilename:v31];
  }
  if ([v3 hasDisplayOrder]) {
    objc_msgSend(v5, "setDisplayOrder:", (int)objc_msgSend(v3, "displayOrder"));
  }
  if ([v3 hasDurationSeconds])
  {
    [v3 durationSeconds];
    objc_msgSend(v5, "setDurationInSeconds:");
  }
  [v5 setModified:0];

  return v5;
}

id sub_10002589C(void *a1)
{
  id v1 = a1;
  CLSInitLog();
  id v2 = (void *)CLSLogSync;
  if (os_log_type_enabled(CLSLogSync, OS_LOG_TYPE_DEBUG))
  {
    id v33 = v2;
    uint64_t v34 = [v1 dictionaryRepresentation];
    *(_DWORD *)long long buf = 138412290;
    id v48 = v34;
    _os_log_debug_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEBUG, "parsing handout report item: %@", buf, 0xCu);
  }
  id v3 = objc_opt_new();
  if (([v1 hasType] & 1) == 0)
  {
    CLSInitLog();
    uint64_t v14 = CLSLogSync;
    if (!os_log_type_enabled(CLSLogSync, OS_LOG_TYPE_DEBUG))
    {
LABEL_15:
      id v16 = 0;
      goto LABEL_38;
    }
    *(_WORD *)long long buf = 0;
    uint64_t v15 = "parsing handout report item has no type; bailing out!";
LABEL_42:
    _os_log_debug_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, v15, buf, 2u);
    goto LABEL_15;
  }
  signed int v4 = [v1 type];
  if ((v4 - 1) >= 4)
  {
    id v35 = objc_msgSend(objc_alloc((Class)NSString), "initWithFormat:", @"Unknown PDDPHandoutReport_Type: %ld", v4);
    CLSInitLog();
    id v36 = CLSLogHandout;
    if (os_log_type_enabled(CLSLogHandout, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138543362;
      id v48 = v35;
      _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_INFO, "Failed to convert from PDDPHandoutReport_Type reason: %{public}@", buf, 0xCu);
    }
    id v37 = +[NSException exceptionWithName:NSInvalidArgumentException reason:v35 userInfo:0];
    objc_exception_throw(v37);
  }
  objc_msgSend(v3, "setType:");
  if (([v1 hasGranularity] & 1) == 0)
  {
    CLSInitLog();
    uint64_t v14 = CLSLogSync;
    if (!os_log_type_enabled(CLSLogSync, OS_LOG_TYPE_DEBUG)) {
      goto LABEL_15;
    }
    *(_WORD *)long long buf = 0;
    uint64_t v15 = "parsing handout report item has no granularity; bailing out!";
    goto LABEL_42;
  }
  signed int v5 = [v1 granularity];
  if ((v5 - 1) >= 4)
  {
    id v38 = objc_msgSend(objc_alloc((Class)NSString), "initWithFormat:", @"Unknown PDDPHandoutReport_GranularityType: %ld", v5);
    CLSInitLog();
    id v39 = CLSLogHandout;
    if (os_log_type_enabled(CLSLogHandout, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138543362;
      id v48 = v38;
      _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_INFO, "Failed to convert from PDDPHandoutReport_GranularityType reason: %{public}@", buf, 0xCu);
    }
    id v40 = +[NSException exceptionWithName:NSInvalidArgumentException reason:v38 userInfo:0];
    objc_exception_throw(v40);
  }
  objc_msgSend(v3, "setGranularity:");
  id v6 = [v1 studentId];
  [v3 setStudentID:v6];

  signed int v7 = [v1 classId];
  [v3 setClassID:v7];

  uint64_t v8 = [v1 handoutId];
  [v3 setHandoutID:v8];

  id v9 = [v1 startDate];
  uint64_t v10 = sub_1000F3F70(v9);

  id v11 = [v1 endDate];
  uint64_t v41 = sub_1000F3F70(v11);

  if (!v10 && v41)
  {
    CLSInitLog();
    uint64_t v12 = CLSLogSync;
    if (os_log_type_enabled(CLSLogSync, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)long long buf = 0;
      _os_log_debug_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "Payload for CLSHandoutReportItem does not contain startDate. Setting it to endDate", buf, 2u);
    }
    id v13 = (id)v41;
LABEL_25:
    uint64_t v10 = (uint64_t)v13;
    uint64_t v41 = (uint64_t)v13;
    goto LABEL_26;
  }
  if (v10 && !v41)
  {
    CLSInitLog();
    id v17 = CLSLogSync;
    if (os_log_type_enabled(CLSLogSync, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)long long buf = 0;
      _os_log_debug_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEBUG, "Payload for CLSHandoutReportItem does not contain endDate. Setting it to startDate", buf, 2u);
    }
    id v13 = (id)v10;
    goto LABEL_25;
  }
  if (!(v10 | v41))
  {
    CLSInitLog();
    id v18 = CLSLogSync;
    if (os_log_type_enabled(CLSLogSync, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)long long buf = 0;
      _os_log_debug_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEBUG, "Payload for CLSHandoutReportItem does not contain startDate and endDate. Setting them to reference date", buf, 2u);
    }
    id v13 = +[NSDate dateWithTimeIntervalSinceReferenceDate:0.0];
    goto LABEL_25;
  }
LABEL_26:
  [v3 setStartDate:v10];
  [v3 setEndDate:v41];
  long long v19 = [v1 reportItemId];
  [v3 setReportID:v19];

  objc_msgSend(v3, "setCompleted:", objc_msgSend(v1, "isCompleted"));
  long long v20 = [v1 attachmentId];
  [v3 setAttachmentID:v20];

  if ([v1 hasReport])
  {
    id v21 = [v1 report];
    id v22 = sub_100026074(v21);
    [v3 setPrimaryActivityReport:v22];
  }
  uint64_t v23 = [v1 additionalReports];
  id v24 = objc_msgSend(objc_alloc((Class)NSMutableArray), "initWithCapacity:", objc_msgSend(v23, "count"));
  long long v44 = 0u;
  long long v45 = 0u;
  long long v42 = 0u;
  long long v43 = 0u;
  id v25 = v23;
  id v26 = [v25 countByEnumeratingWithState:&v42 objects:v46 count:16];
  if (v26)
  {
    uint64_t v27 = *(void *)v43;
    do
    {
      for (i = 0; i != v26; i = (char *)i + 1)
      {
        if (*(void *)v43 != v27) {
          objc_enumerationMutation(v25);
        }
        id v29 = *(void **)(*((void *)&v42 + 1) + 8 * i);
        id v31 = sub_100026074(v29);
        if (v31) {
          [v24 addObject:v31];
        }
      }
      id v26 = [v25 countByEnumeratingWithState:&v42 objects:v46 count:16];
    }
    while (v26);
  }

  [v3 setAdditionalActivityReports:v24];
  id v16 = v3;

LABEL_38:

  return v16;
}

id sub_100026074(void *a1)
{
  id v1 = a1;
  CLSInitLog();
  id v2 = (void *)CLSLogSync;
  if (os_log_type_enabled(CLSLogSync, OS_LOG_TYPE_DEBUG))
  {
    id v33 = v2;
    uint64_t v34 = [v1 dictionaryRepresentation];
    *(_DWORD *)long long buf = 138412290;
    uint64_t v41 = v34;
    _os_log_debug_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEBUG, "parsing activity report: %@", buf, 0xCu);
  }
  id v3 = objc_opt_new();
  signed int v4 = [v1 contextObjectIdPath];
  signed int v5 = [v4 componentsSeparatedByString:@"/"];
  id v6 = [v5 lastObject];

  [v3 setContextType:0];
  [v3 setContextTopic:0];
  [v3 setContextTitle:&stru_1001F6580];
  [v3 setContextAppBundleIdentifier:&stru_1001F6580];
  [v3 setContextID:v6];
  objc_msgSend(v3, "setHandoutAttachmentType:", sub_1000204B8((int)objc_msgSend(v1, "attachmentType")));
  signed int v7 = [v1 handoutAuthorizedObjectId];
  [v3 setHandoutAuthorizedObjectID:v7];

  if ([v3 handoutAttachmentType] == 1 || objc_msgSend(v6, "length"))
  {
    uint64_t v8 = [v1 contextStableObjectIdPath];
    id v9 = [v8 componentsSeparatedByString:@"/"];
    uint64_t v10 = [v9 lastObject];
    [v3 setContextStableObjectID:v10];

    [v3 setHandoutAuthorizedObjectID:v6];
    [v3 setHandoutAttachmentType:1];
  }
  id v11 = [v1 time];
  uint64_t v12 = sub_10002650C(v11);
  [v3 setTime:v12];

  id v13 = [v3 time];

  if (!v13)
  {
    CLSInitLog();
    uint64_t v30 = CLSLogSync;
    if (!os_log_type_enabled(CLSLogSync, OS_LOG_TYPE_DEBUG))
    {
LABEL_21:
      id v29 = 0;
      goto LABEL_22;
    }
    *(_WORD *)long long buf = 0;
    id v31 = "activity report has no time; bailing out!";
LABEL_26:
    _os_log_debug_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEBUG, v31, buf, 2u);
    goto LABEL_21;
  }
  uint64_t v14 = [v1 progress];
  uint64_t v15 = sub_10002650C(v14);
  [v3 setProgress:v15];

  id v16 = [v3 progress];

  if (!v16)
  {
    CLSInitLog();
    uint64_t v30 = CLSLogSync;
    if (!os_log_type_enabled(CLSLogSync, OS_LOG_TYPE_DEBUG)) {
      goto LABEL_21;
    }
    *(_WORD *)long long buf = 0;
    id v31 = "activity report has no progress; bailing out!";
    goto LABEL_26;
  }
  id v17 = [v1 primaryItem];
  id v18 = sub_1000266B4(v17);
  [v3 setPrimaryReportItem:v18];

  long long v19 = [v1 additionalItems];
  id v20 = objc_msgSend(objc_alloc((Class)NSMutableArray), "initWithCapacity:", objc_msgSend(v19, "count"));
  long long v35 = 0u;
  long long v36 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  id v21 = v19;
  id v22 = [v21 countByEnumeratingWithState:&v35 objects:v39 count:16];
  if (v22)
  {
    id v23 = v22;
    uint64_t v24 = *(void *)v36;
    do
    {
      for (i = 0; i != v23; i = (char *)i + 1)
      {
        if (*(void *)v36 != v24) {
          objc_enumerationMutation(v21);
        }
        id v26 = *(void **)(*((void *)&v35 + 1) + 8 * i);
        id v28 = sub_1000266B4(v26);
        if (v28) {
          objc_msgSend(v20, "addObject:", v28, (void)v35);
        }
      }
      id v23 = [v21 countByEnumeratingWithState:&v35 objects:v39 count:16];
    }
    while (v23);
  }

  [v3 setAdditionalReportItems:v20];
  id v29 = v3;

LABEL_22:

  return v29;
}

id sub_10002650C(void *a1)
{
  id v1 = a1;
  id v2 = objc_opt_new();
  if ([v1 hasType])
  {
    signed int v3 = [v1 type];
    if (v3 != 1)
    {
      id v5 = objc_msgSend(objc_alloc((Class)NSString), "initWithFormat:", @"Unknown PDDPAggregatedValue_Type: %ld", v3);
      CLSInitLog();
      id v6 = CLSLogUpload;
      if (os_log_type_enabled(CLSLogUpload, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138543362;
        id v10 = v5;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "Failed to convert from PDDPAggregatedValue_Type reason: %{public}@", buf, 0xCu);
      }
      id v7 = +[NSException exceptionWithName:NSInvalidArgumentException reason:v5 userInfo:0];
      objc_exception_throw(v7);
    }
    [v2 setAggregateType:0];
    objc_msgSend(v2, "setTotalSampleCount:", (int)objc_msgSend(v1, "totalSampleCount"));
    [v1 value];
    objc_msgSend(v2, "setValue:");
    id v4 = v2;
  }
  else
  {
    id v4 = 0;
  }

  return v4;
}

id sub_1000266B4(void *a1)
{
  id v1 = a1;
  CLSInitLog();
  id v2 = (void *)CLSLogSync;
  if (os_log_type_enabled(CLSLogSync, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v15 = v2;
    id v16 = [v1 dictionaryRepresentation];
    *(_DWORD *)long long buf = 138412290;
    id v21 = v16;
    _os_log_debug_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "parsing activity report item: %@", buf, 0xCu);
  }
  if ([v1 hasScoreValue])
  {
    signed int v3 = objc_opt_new();
    id v4 = [v1 scoreValue];
    [v4 value];
    objc_msgSend(v3, "setValue:");

    id v5 = [v1 scoreValue];
    [v5 maxValue];
    objc_msgSend(v3, "setMaxValue:");

LABEL_10:
    id v11 = [v1 title];
    [v3 setTitle:v11];

    uint64_t v12 = [v1 identifier];
    [v3 setIdentifier:v12];

    goto LABEL_11;
  }
  if ([v1 hasQuantityValue])
  {
    signed int v3 = objc_opt_new();
    id v6 = [v1 quantityValue];
    [v6 value];
    objc_msgSend(v3, "setQuantity:");

    goto LABEL_10;
  }
  if ([v1 hasBinaryValue])
  {
    signed int v3 = objc_opt_new();
    id v7 = [v1 binaryValue];
    objc_msgSend(v3, "setValue:", objc_msgSend(v7, "value"));

    uint64_t v8 = [v1 binaryValue];
    signed int v9 = [v8 valueType];
    uint64_t v10 = (v9 - 1);
    if (v10 >= 4)
    {
      id v17 = objc_msgSend(objc_alloc((Class)NSString), "initWithFormat:", @"Unknown PDDPBinaryValue_ValueType: %ld", v9);
      CLSInitLog();
      id v18 = CLSLogUpload;
      if (os_log_type_enabled(CLSLogUpload, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138543362;
        id v21 = v17;
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_INFO, "Failed to convert from PDDPBinaryValue_ValueType reason: %{public}@", buf, 0xCu);
      }
      id v19 = +[NSException exceptionWithName:NSInvalidArgumentException reason:v17 userInfo:0];
      objc_exception_throw(v19);
    }

    [v3 setValueType:v10];
    goto LABEL_10;
  }
  CLSInitLog();
  uint64_t v14 = CLSLogSync;
  if (os_log_type_enabled(CLSLogSync, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_debug_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "unknown activity report item", buf, 2u);
  }
  signed int v3 = 0;
LABEL_11:

  return v3;
}

PDDPSchedule *sub_100026A8C(void *a1)
{
  id v1 = a1;
  id v2 = objc_alloc_init(PDDPSchedule);
  signed int v3 = [v1 objectID];
  [(PDDPSchedule *)v2 setObjectId:v3];

  id v4 = [v1 parentObjectID];
  [(PDDPSchedule *)v2 setParentObjectId:v4];

  id v5 = [v1 dateCreated];
  id v6 = sub_1000F3E0C(v5);
  [(PDDPSchedule *)v2 setDateCreated:v6];

  id v7 = [v1 dateLastModified];
  uint64_t v8 = sub_1000F3E0C(v7);
  [(PDDPSchedule *)v2 setDateLastModified:v8];

  signed int v9 = [v1 scheduleDate];
  uint64_t v10 = sub_1000F3E0C(v9);
  [(PDDPSchedule *)v2 setScheduleDate:v10];

  -[PDDPSchedule setScheduleAction:](v2, "setScheduleAction:", [v1 scheduleAction] == (id)1);
  id v11 = [v1 scheduledEntityType];

  [(PDDPSchedule *)v2 setScheduledEntityType:v11 == (id)1];

  return v2;
}

id sub_100026BE8(void *a1)
{
  id v1 = a1;
  id v2 = objc_alloc((Class)CLSSchedule);
  id v3 = [objc_alloc((Class)CLSObject) _init];
  id v4 = [v1 scheduleDate];
  id v5 = sub_1000F3F70(v4);
  id v6 = [v2 initForObject:v3 scheduleDate:v5];

  unsigned int v7 = [v1 scheduledEntityType];
  uint64_t v8 = v7;
  if (v7 != 1)
  {
    if (v7)
    {
      id v18 = objc_msgSend(objc_alloc((Class)NSString), "initWithFormat:", @"Unknown PDDPSchedule_ScheduleEntityType: %ld", (int)v7);
      CLSInitLog();
      id v19 = CLSLogHandout;
      if (!os_log_type_enabled(CLSLogHandout, OS_LOG_TYPE_INFO)) {
        goto LABEL_15;
      }
      *(_DWORD *)long long buf = 138543362;
      id v23 = v18;
      id v20 = "Failed to convert from PDDPSchedule_ScheduleEntityType reason: %{public}@";
      goto LABEL_14;
    }
    uint64_t v8 = 0;
  }
  [v6 setScheduledEntityType:v8];
  unsigned int v9 = [v1 scheduleAction];
  uint64_t v10 = v9;
  if (v9 == 1) {
    goto LABEL_7;
  }
  if (v9)
  {
    id v18 = objc_msgSend(objc_alloc((Class)NSString), "initWithFormat:", @"Unknown PDDPSchedule_ScheduleAction: %ld", (int)v9);
    CLSInitLog();
    id v19 = CLSLogHandout;
    if (!os_log_type_enabled(CLSLogHandout, OS_LOG_TYPE_INFO)) {
      goto LABEL_15;
    }
    *(_DWORD *)long long buf = 138543362;
    id v23 = v18;
    id v20 = "Failed to convert from PDDPSchedule_ScheduleAction reason: %{public}@";
LABEL_14:
    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_INFO, v20, buf, 0xCu);
LABEL_15:
    id v21 = +[NSException exceptionWithName:NSInvalidArgumentException reason:v18 userInfo:0];
    objc_exception_throw(v21);
  }
  uint64_t v10 = 0;
LABEL_7:
  [v6 setScheduleAction:v10];
  id v11 = [v1 objectId];
  [v6 setObjectID:v11];

  uint64_t v12 = [v1 parentObjectId];
  [v6 setParentObjectID:v12];

  id v13 = [v1 dateCreated];
  uint64_t v14 = sub_1000F3F70(v13);
  [v6 setDateCreated:v14];

  uint64_t v15 = [v1 dateLastModified];

  id v16 = sub_1000F3F70(v15);
  [v6 setDateLastModified:v16];

  return v6;
}

id *sub_100026ECC(void *a1)
{
  id v1 = a1;
  id v2 = [PDServerScheduledEvent alloc];
  id v3 = [v1 parentObjectId];
  id v4 = [v1 eventDate];
  id v5 = sub_1000F3F70(v4);
  id v6 = sub_1000DBAB8((id *)&v2->super.isa, v3, v5);

  unsigned int v7 = [v1 dateCreated];
  uint64_t v8 = sub_1000F3F70(v7);
  sub_100075F50((uint64_t)v6, v8);

  unsigned int v9 = [v1 dateLastModified];
  uint64_t v10 = sub_1000F3F70(v9);
  sub_1000AD2CC((uint64_t)v6, v10);

  if ([v1 hasStatus])
  {
    id v11 = [v1 status];
    signed int v12 = [v11 code];
    if (v6) {
      v6[6] = (id)v12;
    }
  }

  return v6;
}

id sub_100027004(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  id v5 = objc_opt_new();
  [v5 setType:31];
  [v5 setAction:3];
  id v6 = objc_opt_new();
  [v5 setScheduledEvent:v6];

  if (v4) {
    unsigned int v7 = (void *)v4[1];
  }
  else {
    unsigned int v7 = 0;
  }
  id v8 = v7;

  unsigned int v9 = [v5 scheduledEvent];
  [v9 setObjectId:v8];

  uint64_t v10 = [v5 scheduledEvent];
  [v10 setClassId:v3];

  return v5;
}

id sub_1000270F4(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  id v5 = objc_opt_new();
  [v5 setType:31];
  [v5 setAction:1];
  id v6 = [PDServerScheduledEvent alloc];
  unsigned int v7 = [v4 objectID];
  id v8 = [v4 scheduleDate];

  unsigned int v9 = sub_1000DBAB8((id *)&v6->super.isa, v7, v8);
  uint64_t v10 = v9;
  id v11 = objc_alloc_init(PDDPScheduledEvent);
  signed int v12 = v11;
  if (v10)
  {
    id v13 = v10[1];
    [(PDDPScheduledEvent *)v12 setObjectId:v13];

    id v14 = v10[2];
  }
  else
  {
    [(PDDPScheduledEvent *)v11 setObjectId:0];
    id v14 = 0;
  }
  id v15 = v14;
  [(PDDPScheduledEvent *)v12 setParentObjectId:v15];

  if (v10)
  {
    id v16 = v10[3];
    id v17 = sub_1000F3E0C(v16);
    [(PDDPScheduledEvent *)v12 setDateCreated:v17];

    id v18 = v10[4];
  }
  else
  {
    id v26 = sub_1000F3E0C(0);
    [(PDDPScheduledEvent *)v12 setDateCreated:v26];

    id v18 = 0;
  }
  id v19 = v18;
  id v20 = sub_1000F3E0C(v19);
  [(PDDPScheduledEvent *)v12 setDateLastModified:v20];

  if (v10) {
    id v21 = v10[5];
  }
  else {
    id v21 = 0;
  }
  id v22 = v21;

  id v23 = sub_1000F3E0C(v22);
  [(PDDPScheduledEvent *)v12 setEventDate:v23];

  [v5 setScheduledEvent:v12];
  uint64_t v24 = [v5 scheduledEvent];
  [v24 setClassId:v3];

  return v5;
}

PDDPEvent *sub_100027324(void *a1)
{
  id v1 = a1;
  id v2 = objc_alloc_init(PDDPEvent);
  id v3 = [v1 objectID];
  [(PDDPEvent *)v2 setObjectId:v3];

  -[PDDPEvent setEventType:](v2, "setEventType:", [v1 type]);
  id v4 = [v1 dateCreated];
  id v5 = sub_1000F3E0C(v4);
  [(PDDPEvent *)v2 setDateCreated:v5];

  id v6 = [v1 dateLastModified];
  unsigned int v7 = sub_1000F3E0C(v6);
  [(PDDPEvent *)v2 setDateLastModified:v7];

  id v8 = [v1 info];
  unsigned int v9 = sub_1000F46E0(v8);
  [(PDDPEvent *)v2 setExtraInfos:v9];

  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v10 = v1;
    id v11 = objc_alloc_init(PDDPHandoutEventDetails);
    signed int v12 = [v10 classID];
    [(PDDPHandoutEventDetails *)v11 setClassId:v12];

    id v13 = [v10 handoutID];
    [(PDDPHandoutEventDetails *)v11 setHandoutId:v13];

    id v14 = [v10 dueDate];
    id v15 = sub_1000F3E0C(v14);
    [(PDDPHandoutEventDetails *)v11 setDueDate:v15];

    id v16 = [v10 recipientIDs];
    id v17 = [v16 mutableCopy];
    [(PDDPHandoutEventDetails *)v11 setRecipientIds:v17];

    id v18 = [v10 attachmentDetails];

    if (v18)
    {
      id v87 = v1;
      id v19 = [v10 attachmentDetails];
      id v20 = objc_opt_new();
      long long v88 = 0u;
      long long v89 = 0u;
      long long v90 = 0u;
      long long v91 = 0u;
      id v21 = v19;
      id v22 = [v21 countByEnumeratingWithState:&v88 objects:buf count:16];
      if (v22)
      {
        id v23 = v22;
        uint64_t v24 = *(void *)v89;
        do
        {
          for (i = 0; i != v23; i = (char *)i + 1)
          {
            if (*(void *)v89 != v24) {
              objc_enumerationMutation(v21);
            }
            id v26 = *(void **)(*((void *)&v88 + 1) + 8 * i);
            uint64_t v27 = objc_alloc_init(PDDPHandoutAttachmentDetails);
            id v28 = [v26 attachmentID];
            [(PDDPHandoutAttachmentDetails *)v27 setAttachmentId:v28];

            unsigned int v29 = [v26 handoutAttachmentType];
            if (v29 - 1 < 6) {
              uint64_t v30 = v29 + 1;
            }
            else {
              uint64_t v30 = 1;
            }
            [(PDDPHandoutAttachmentDetails *)v27 setAttachmentType:v30];
            if ([v26 contextType]) {
              -[PDDPHandoutAttachmentDetails setContextType:](v27, "setContextType:", sub_10001FB34((uint64_t)[v26 contextType]));
            }
            id v31 = [v26 appIdentifier];
            [(PDDPHandoutAttachmentDetails *)v27 setAppIdentifier:v31];

            [v20 addObject:v27];
          }
          id v23 = [v21 countByEnumeratingWithState:&v88 objects:buf count:16];
        }
        while (v23);
      }

      [(PDDPHandoutEventDetails *)v11 setAttachmentDetails:v20];
      id v1 = v87;
    }
    [(PDDPEvent *)v2 setHandoutEventDetails:v11];
    uint64_t v32 = 1;
    goto LABEL_42;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v33 = v1;
    id v11 = objc_alloc_init(PDDPAttachmentEventDetails);
    uint64_t v34 = [v33 attachmentID];
    [(PDDPHandoutEventDetails *)v11 setAttachmentId:v34];

    long long v35 = [v33 classID];
    [(PDDPHandoutEventDetails *)v11 setClassId:v35];

    long long v36 = [v33 handoutID];
    [(PDDPHandoutEventDetails *)v11 setHandoutId:v36];

    long long v37 = [v33 recipientPersonID];
    [(PDDPHandoutEventDetails *)v11 setEventRecipientId:v37];

    unsigned int v38 = [v33 handoutAttachmentType];
    if (v38 - 1 < 6) {
      uint64_t v39 = v38 + 1;
    }
    else {
      uint64_t v39 = 1;
    }
    [(PDDPHandoutEventDetails *)v11 setAttachmentType:v39];
    -[PDDPHandoutEventDetails setContextType:](v11, "setContextType:", sub_10001FB34((uint64_t)[v33 contextType]));
    id v40 = [v33 appIdentifier];
    [(PDDPHandoutEventDetails *)v11 setAppIdentifier:v40];

    [(PDDPEvent *)v2 setAttachmentEventDetails:v11];
    uint64_t v32 = 2;
    goto LABEL_42;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    goto LABEL_43;
  }
  id v41 = v1;
  id v11 = objc_alloc_init(PDDPProgressEventDetails);
  long long v42 = [v41 activityID];
  [(PDDPHandoutEventDetails *)v11 setActivityId:v42];

  long long v43 = [v41 attachmentID];
  [(PDDPHandoutEventDetails *)v11 setAttachmentId:v43];

  long long v44 = [v41 classID];
  [(PDDPHandoutEventDetails *)v11 setClassId:v44];

  long long v45 = [v41 handoutID];
  [(PDDPHandoutEventDetails *)v11 setHandoutId:v45];

  unsigned int v46 = [v41 handoutAttachmentType];
  if (v46 - 1 < 6) {
    uint64_t v47 = v46 + 1;
  }
  else {
    uint64_t v47 = 1;
  }
  [(PDDPHandoutEventDetails *)v11 setAttachmentType:v47];
  -[PDDPHandoutEventDetails setContextType:](v11, "setContextType:", sub_10001FB34((uint64_t)[v41 contextType]));
  id v48 = [v41 parentObjectID];
  [(PDDPHandoutEventDetails *)v11 setParentObjectId:v48];

  long long v49 = [v41 objectIDPath];
  [(PDDPHandoutEventDetails *)v11 setObjectIdPath:v49];

  long long v50 = [v41 appIdentifier];
  [(PDDPHandoutEventDetails *)v11 setAppIdentifier:v50];

  long long v51 = [v41 handoutAuthorizedObjectID];
  [(PDDPHandoutEventDetails *)v11 setHandoutAuthorizedObjectId:v51];

  long long v52 = [v41 activityItemInfo];

  if (v52)
  {
    long long v53 = [v41 activityItemInfo];
    CLSInitLog();
    id v54 = (void *)CLSLogSync;
    if (os_log_type_enabled(CLSLogSync, OS_LOG_TYPE_DEBUG))
    {
      v82 = v54;
      v83 = [(PDDPRange *)v53 dictionaryRepresentation];
      *(_DWORD *)long long buf = 138412290;
      id v93 = v83;
      _os_log_debug_impl((void *)&_mh_execute_header, v82, OS_LOG_TYPE_DEBUG, "parsing activity report item: %@", buf, 0xCu);
    }
    unsigned int v55 = objc_alloc_init(PDDPActivityReportItem);
    uint64_t v56 = [(PDDPRange *)v53 title];
    [(PDDPActivityReportItem *)v55 setTitle:v56];

    id v57 = [(PDDPRange *)v53 identifier];
    [(PDDPActivityReportItem *)v55 setIdentifier:v57];

    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v58 = v53;
      id v59 = objc_alloc_init(PDDPScoreValue);
      [(PDDPRange *)v58 value];
      -[PDDPScoreValue setValue:](v59, "setValue:");
      [(PDDPRange *)v58 maxValue];
      double v61 = v60;

      [(PDDPScoreValue *)v59 setMaxValue:v61];
      [(PDDPActivityReportItem *)v55 setScoreValue:v59];
      uint64_t v62 = 3;
    }
    else
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        signed int v66 = v53;
        id v59 = objc_alloc_init(PDDPQuantityValue);
        [(PDDPRange *)v66 quantity];
        double v68 = v67;

        [(PDDPScoreValue *)v59 setValue:v68];
        [(PDDPActivityReportItem *)v55 setQuantityValue:v59];
        uint64_t v62 = 2;
      }
      else
      {
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) == 0)
        {
          CLSInitLog();
          v78 = CLSLogSync;
          if (os_log_type_enabled(CLSLogSync, OS_LOG_TYPE_DEBUG))
          {
            *(_WORD *)long long buf = 0;
            _os_log_debug_impl((void *)&_mh_execute_header, v78, OS_LOG_TYPE_DEBUG, "unknown cls activity report item", buf, 2u);
          }
          long long v71 = 0;
          goto LABEL_39;
        }
        id v69 = v53;
        id v59 = objc_alloc_init(PDDPBinaryValue);
        [(PDDPScoreValue *)v59 setValue:[(PDDPRange *)v69 value]];
        id v70 = [(PDDPRange *)v69 valueType];

        if ((unint64_t)v70 >= 4)
        {
          id v84 = objc_msgSend(objc_alloc((Class)NSString), "initWithFormat:", @"Unknown CLSBinaryValueType: %ld", v70);
          CLSInitLog();
          v85 = CLSLogUpload;
          if (os_log_type_enabled(CLSLogUpload, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)long long buf = 138543362;
            id v93 = v84;
            _os_log_impl((void *)&_mh_execute_header, v85, OS_LOG_TYPE_INFO, "Failed to convert from CLSBinaryValueType reason: %{public}@", buf, 0xCu);
          }
          id v86 = +[NSException exceptionWithName:NSInvalidArgumentException reason:v84 userInfo:0];
          objc_exception_throw(v86);
        }
        [(PDDPScoreValue *)v59 setValueType:(v70 + 1)];
        [(PDDPActivityReportItem *)v55 setBinaryValue:v59];
        uint64_t v62 = 1;
      }
    }
    [(PDDPActivityReportItem *)v55 setType:v62];

    long long v71 = v55;
LABEL_39:

    [(PDDPHandoutEventDetails *)v11 setActivityItemInfo:v71];
    goto LABEL_40;
  }
  v63 = [v41 rangeInfo];

  if (v63)
  {
    long long v53 = objc_alloc_init(PDDPRange);
    id v64 = [v41 rangeInfo];
    [v64 start];
    -[PDDPRange setStart:](v53, "setStart:");

    id v65 = [v41 rangeInfo];
    [v65 end];
    -[PDDPRange setEnd:](v53, "setEnd:");

    [(PDDPHandoutEventDetails *)v11 setRangeInfo:v53];
  }
  else
  {
    long long v73 = [v41 timeIntervalInfo];

    if (v73)
    {
      long long v53 = objc_alloc_init(PDDPTimeIntervalInfo);
      long long v74 = [v41 timeIntervalInfo];
      id v75 = [v74 startTime];
      __int16 v76 = sub_1000F3E0C(v75);
      [(PDDPRange *)v53 setStartTime:v76];

      signed int v77 = [v41 timeIntervalInfo];
      [v77 length];
      -[PDDPRange setDuration:](v53, "setDuration:");

      [(PDDPHandoutEventDetails *)v11 setTimeIntervalInfo:v53];
    }
    else
    {
      v79 = [v41 primaryActivityItemIdentifier];

      if (!v79) {
        goto LABEL_41;
      }
      long long v53 = objc_alloc_init(PDDPActivityInfo);
      v80 = [v41 activityID];
      [(PDDPRange *)v53 setActivityId:v80];

      v81 = [v41 primaryActivityItemIdentifier];
      [(PDDPRange *)v53 setPrimaryItemIdentifier:v81];

      [(PDDPHandoutEventDetails *)v11 setActivityInfo:v53];
    }
  }
LABEL_40:

LABEL_41:
  [(PDDPEvent *)v2 setProgressEventDetails:v11];
  uint64_t v32 = 3;
LABEL_42:
  [(PDDPEvent *)v2 setEventDetailsType:v32];

LABEL_43:

  return v2;
}

uint64_t sub_100028470(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    switch((v6 >> 3))
    {
      case 1u:
        char v12 = 0;
        unsigned int v13 = 0;
        uint64_t v14 = 0;
        *(unsigned char *)(a1 + 36) |= 4u;
        while (1)
        {
          unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v15 == -1 || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
          v14 |= (unint64_t)(v16 & 0x7F) << v12;
          if ((v16 & 0x80) == 0) {
            goto LABEL_61;
          }
          v12 += 7;
          BOOL v9 = v13++ >= 9;
          if (v9)
          {
            uint64_t v14 = 0;
            goto LABEL_63;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_61:
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v14 = 0;
        }
LABEL_63:
        BOOL v39 = v14 != 0;
        uint64_t v40 = 33;
        goto LABEL_80;
      case 2u:
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        *(unsigned char *)(a1 + 36) |= 8u;
        while (2)
        {
          unint64_t v21 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v21 == -1 || v21 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v22 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v21);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v21 + 1;
            v20 |= (unint64_t)(v22 & 0x7F) << v18;
            if (v22 < 0)
            {
              v18 += 7;
              BOOL v9 = v19++ >= 9;
              if (v9)
              {
                uint64_t v20 = 0;
                goto LABEL_67;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v20 = 0;
        }
LABEL_67:
        BOOL v39 = v20 != 0;
        uint64_t v40 = 34;
        goto LABEL_80;
      case 3u:
        char v23 = 0;
        unsigned int v24 = 0;
        uint64_t v25 = 0;
        *(unsigned char *)(a1 + 36) |= 0x10u;
        while (2)
        {
          unint64_t v26 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v26 == -1 || v26 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v27 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v26);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v26 + 1;
            v25 |= (unint64_t)(v27 & 0x7F) << v23;
            if (v27 < 0)
            {
              v23 += 7;
              BOOL v9 = v24++ >= 9;
              if (v9)
              {
                uint64_t v25 = 0;
                goto LABEL_71;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v25 = 0;
        }
LABEL_71:
        BOOL v39 = v25 != 0;
        uint64_t v40 = 35;
        goto LABEL_80;
      case 4u:
        id v28 = PBReaderReadString();
        if (v28) {
          [(id)a1 addExcludeAppIds:v28];
        }
        goto LABEL_45;
      case 5u:
        id v28 = PBReaderReadString();
        if (v28) {
          [(id)a1 addHostAllowList:v28];
        }
LABEL_45:

        continue;
      case 6u:
        char v29 = 0;
        unsigned int v30 = 0;
        uint64_t v31 = 0;
        *(unsigned char *)(a1 + 36) |= 1u;
        while (2)
        {
          unint64_t v32 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v32 == -1 || v32 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v33 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v32);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v32 + 1;
            v31 |= (unint64_t)(v33 & 0x7F) << v29;
            if (v33 < 0)
            {
              v29 += 7;
              BOOL v9 = v30++ >= 9;
              if (v9)
              {
                LODWORD(v31) = 0;
                goto LABEL_75;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v31) = 0;
        }
LABEL_75:
        *(_DWORD *)(a1 + 8) = v31;
        continue;
      case 7u:
        char v34 = 0;
        unsigned int v35 = 0;
        uint64_t v36 = 0;
        *(unsigned char *)(a1 + 36) |= 2u;
        break;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        continue;
    }
    while (1)
    {
      unint64_t v37 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v37 == -1 || v37 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v38 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v37);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v37 + 1;
      v36 |= (unint64_t)(v38 & 0x7F) << v34;
      if ((v38 & 0x80) == 0) {
        goto LABEL_77;
      }
      v34 += 7;
      BOOL v9 = v35++ >= 9;
      if (v9)
      {
        uint64_t v36 = 0;
        goto LABEL_79;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_77:
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      uint64_t v36 = 0;
    }
LABEL_79:
    BOOL v39 = v36 != 0;
    uint64_t v40 = 32;
LABEL_80:
    *(unsigned char *)(a1 + v40) = v39;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_100029AF4(id *a1)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  if (WeakRetained)
  {
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = sub_100029BBC;
    v4[3] = &unk_1001F2030;
    id v5 = a1[4];
    id v6 = a1[5];
    id v3 = objc_retainBlock(v4);
    ((void (*)(void *, id))v3[2])(v3, WeakRetained);
  }
}

void sub_100029BBC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v5 = [v3 database];
  if (*(void **)(a1 + 32) == v5)
  {
    char v23 = v4;
    id v6 = objc_opt_new();
    unsigned int v24 = v3;
    id v7 = v3[5];
    long long v29 = 0u;
    long long v30 = 0u;
    long long v31 = 0u;
    long long v32 = 0u;
    id v8 = [v7 countByEnumeratingWithState:&v29 objects:v34 count:16];
    if (v8)
    {
      id v9 = v8;
      uint64_t v10 = *(void *)v30;
      do
      {
        for (i = 0; i != v9; i = (char *)i + 1)
        {
          if (*(void *)v30 != v10) {
            objc_enumerationMutation(v7);
          }
          uint64_t v12 = *(void *)(*((void *)&v29 + 1) + 8 * i);
          uint64_t v13 = objc_msgSend(v7, "objectForKeyedSubscript:", v12, v23);
          uint64_t v14 = (void *)v13;
          if (v13 && *(unsigned char *)(v13 + 48))
          {
            [v6 addObject:v12];
          }
          else
          {
            unint64_t v15 = [*(id *)(a1 + 40) userInfo];
            int v16 = sub_1000D4670((uint64_t)v14, v15);

            if (v16)
            {
              id v17 = [*(id *)(a1 + 40) userInfo];
              sub_1000D5B58(v14, v5, v17);
            }
          }
        }
        id v9 = [v7 countByEnumeratingWithState:&v29 objects:v34 count:16];
      }
      while (v9);
    }
    long long v27 = 0u;
    long long v28 = 0u;
    long long v25 = 0u;
    long long v26 = 0u;
    id v18 = v6;
    id v19 = [v18 countByEnumeratingWithState:&v25 objects:v33 count:16];
    if (v19)
    {
      id v20 = v19;
      uint64_t v21 = *(void *)v26;
      do
      {
        for (j = 0; j != v20; j = (char *)j + 1)
        {
          if (*(void *)v26 != v21) {
            objc_enumerationMutation(v18);
          }
          objc_msgSend(v7, "removeObjectForKey:", *(void *)(*((void *)&v25 + 1) + 8 * (void)j), v23);
        }
        id v20 = [v18 countByEnumeratingWithState:&v25 objects:v33 count:16];
      }
      while (v20);
    }

    char v4 = v23;
    id v3 = v24;
  }
}

id sub_100029FB8(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addObject:a2];
}

id sub_10002A310(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) database];
  uint64_t v3 = objc_opt_class();
  uint64_t v7 = *(void *)(a1 + 40);
  char v4 = +[NSArray arrayWithObjects:&v7 count:1];
  id v5 = [v2 deleteAll:v3 where:@"appIdentifier = ? and parentObjectID is null" bindings:v4];

  return v5;
}

uint64_t sub_10002AA48(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, BOOL, uint64_t))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), a2 == 0, a2);
}

uint64_t sub_10002ABF8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, BOOL, uint64_t))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), a2 == 0, a2);
}

uint64_t sub_10002AD90(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, BOOL, uint64_t))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), a2 == 0, a2);
}

id sub_10002C06C(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    char v4 = [a1 database];
    if (sub_100066C68(v4))
    {
      BOOL v5 = sub_100006970(v4, @"shownModalTransparency");
      id v6 = [v4 select:objc_opt_class() identity:v3];
      if (v6)
      {
        uint64_t v7 = objc_opt_class();
        id v8 = [v6 parentObjectID];
        id v9 = [v4 select:v7 identity:v8];

        uint64_t v10 = objc_opt_class();
        id v11 = [v9 objectID];
        long long v42 = v11;
        uint64_t v12 = +[NSArray arrayWithObjects:&v42 count:1];
        uint64_t v13 = [v4 select:v10 where:@"parentObjectID = ?" bindings:v12];

        uint64_t v14 = [v13 classID];
        if (v14)
        {
          BOOL v34 = v5;
          unsigned int v32 = !v5;
          unint64_t v15 = [v4 select:objc_opt_class() identity:v14];
          int v16 = [v15 displayName];
          unsigned int v35 = v9;
          if (![v16 length])
          {
            uint64_t v17 = [v15 className];

            int v16 = (void *)v17;
          }
          char v33 = v15;
          if (![v16 length])
          {
            id v18 = +[NSBundle bundleForClass:objc_opt_class()];
            uint64_t v19 = [v18 localizedStringForKey:@"UNTITLED_CLASS" value:&stru_1001F6580 table:@"ClassKit"];

            int v16 = (void *)v19;
          }
          id v20 = +[NSBundle bundleForClass:objc_opt_class()];
          uint64_t v21 = [v20 localizedStringForKey:@"TRANSPARENCY_BANNER_TITLE" value:&stru_1001F6580 table:@"ClassKit"];

          char v22 = +[NSBundle bundleForClass:objc_opt_class()];
          char v23 = [v22 localizedStringForKey:@"TRANSPARENCY_BANNER_MESSAGE_HANDOUTASSIGNEDITEMS" value:&stru_1001F6580 table:@"ClassKit"];

          unsigned int v24 = objc_opt_new();
          [v24 setObject:v16 forKeyedSubscript:@"classNames"];
          long long v25 = [v6 title];
          [v24 setObject:v25 forKeyedSubscript:@"attachmentTitle"];

          long long v26 = +[NSNumber numberWithBool:v32];
          [v24 setObject:v26 forKeyedSubscript:@"showModal"];

          if (v21) {
            [v24 setObject:v21 forKeyedSubscript:@"localizedTitle"];
          }
          id v9 = v35;
          if (v23) {
            [v24 setObject:v23 forKeyedSubscript:@"localizedMessageFormat"];
          }
          if (!v34) {
            sub_10015FEC4(v4, 1, @"shownModalTransparency");
          }
        }
        else
        {
          unsigned int v24 = 0;
        }
        CLSInitLog();
        long long v28 = (void *)CLSLogDefault;
        if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_DEBUG))
        {
          long long v30 = v28;
          long long v31 = [v9 objectID];
          *(_DWORD *)long long buf = 138412802;
          id v37 = v3;
          __int16 v38 = 2112;
          BOOL v39 = v31;
          __int16 v40 = 2112;
          id v41 = v14;
          _os_log_debug_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEBUG, "AttchmentID %@ pertains to relevant handoutID: %@ classID: %@", buf, 0x20u);
        }
        id v27 = v24;
      }
      else
      {
        id v27 = 0;
      }
    }
    else
    {
      id v27 = 0;
    }
  }
  else
  {
    id v27 = 0;
  }

  return v27;
}

void sub_10002CEE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61)
{
}

void sub_10002CF8C(uint64_t a1, void *a2)
{
  id v10 = a2;
  id v3 = [v10 parentObjectID];
  uint64_t v4 = [v10 contextPath];
  BOOL v5 = (void *)v4;
  if (v3 && v4)
  {
    id v6 = *(void **)(a1 + 32);
    uint64_t v7 = [v10 objectID];
    id v8 = sub_10015A0B0(v6, v7, *(void **)(a1 + 40), 1);

    id v9 = [v8 state];
    self;
    if (v9 != (id)2)
    {
      [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) addObject:v3];
      [*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) addObject:v5];
      if ([v10 isLocked]) {
        [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) addObject:v3];
      }
    }
  }
}

uint64_t sub_10002D0B0(uint64_t a1, void *a2)
{
  uint64_t v3 = [a2 classID];
  if (v3) {
    [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) addObject:v3];
  }

  return _objc_release_x1();
}

void sub_10002D118(uint64_t a1, void *a2)
{
  id v7 = a2;
  uint64_t v3 = [v7 displayName];
  if (![v3 length])
  {
    uint64_t v4 = [v7 className];

    uint64_t v3 = (void *)v4;
  }
  if (![v3 length])
  {
    BOOL v5 = +[NSBundle bundleForClass:objc_opt_class()];
    uint64_t v6 = [v5 localizedStringForKey:@"UNTITLED_CLASS" value:&stru_1001F6580 table:@"ClassKit"];

    uint64_t v3 = (void *)v6;
  }
  [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) addObject:v3];
}

id sub_10002D20C(void *a1, void *a2)
{
  id v3 = a2;
  if (!a1)
  {
    id v17 = 0;
    goto LABEL_18;
  }
  uint64_t v28 = 0;
  long long v29 = &v28;
  uint64_t v30 = 0x3032000000;
  long long v31 = sub_10000B634;
  unsigned int v32 = sub_10000B534;
  char v33 = objc_alloc_init(PDCompletableAttachmentsInfo);
  uint64_t v4 = [a1 database];
  CLSInitLog();
  BOOL v5 = CLSLogDefault;
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
  {
    if (v4) {
      id v18 = (void *)v4[7];
    }
    else {
      id v18 = 0;
    }
    id v19 = v18;
    *(_DWORD *)long long buf = 138412290;
    id v36 = v19;
    _os_log_debug_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "completableAttachmentsSharingContextPath database:%@", buf, 0xCu);
  }
  uint64_t v6 = [a1 client];
  id v7 = sub_10000C6B4(v6);

  id v8 = sub_100003E58(v4);
  LODWORD(v6) = v8 == 0;

  if (!v6)
  {
    id v9 = sub_100003E58(v4);
    id v10 = [v9 objectID];

    uint64_t v11 = [a1 client];
    uint64_t v12 = (void *)v11;
    if (v11
      && *(unsigned char *)(v11 + 29)
      && ([a1 client], (uint64_t v13 = (unsigned char *)objc_claimAutoreleasedReturnValue()) != 0))
    {
      BOOL v14 = v13[25] == 0;

      if (!v14)
      {
        unint64_t v15 = &off_10020B128;
        CFStringRef v16 = @"type = ?";
LABEL_16:
        uint64_t v20 = objc_opt_class();
        v23[0] = _NSConcreteStackBlock;
        v23[1] = 3221225472;
        v23[2] = sub_10002D58C;
        v23[3] = &unk_1001F20F8;
        id v24 = v3;
        long long v25 = v4;
        id v21 = v10;
        id v26 = v21;
        id v27 = &v28;
        [v25 selectAll:v20 where:v16 bindings:v15 block:v23];
        id v17 = (id)v29[5];

        goto LABEL_17;
      }
    }
    else
    {
    }
    v34[0] = &off_10020AD40;
    v34[1] = v7;
    unint64_t v15 = +[NSArray arrayWithObjects:v34 count:2];
    CFStringRef v16 = @"type = ? and bundleIdentifier = ?";
    goto LABEL_16;
  }
  id v17 = (id)v29[5];
LABEL_17:

  _Block_object_dispose(&v28, 8);
LABEL_18:

  return v17;
}

void sub_10002D560(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10002D58C(uint64_t a1, void *a2)
{
  id v3 = a2;
  CLSInitLog();
  uint64_t v4 = (void *)CLSLogDefault;
  if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v28 = v4;
    long long v29 = [v3 objectID];
    uint64_t v30 = [v3 contextPath];
    *(_DWORD *)long long buf = 138412546;
    char v33 = v29;
    __int16 v34 = 2112;
    unsigned int v35 = v30;
    _os_log_debug_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEBUG, "handoutAttachment- %@ contextpathclass %@", buf, 0x16u);
  }
  BOOL v5 = [v3 parentObjectID];
  uint64_t v6 = [v3 objectID];
  id v7 = [v3 contextPath];
  if ([v7 isEqualToArray:*(void *)(a1 + 32)])
  {
    id v8 = *(void **)(a1 + 40);
    id v9 = [v3 objectID];
    id v10 = sub_10015A0B0(v8, v9, *(void **)(a1 + 48), 1);

    if (v10)
    {
      long long v31 = v10;
      uint64_t v11 = +[NSArray arrayWithObjects:&v31 count:1];
      unsigned __int8 v12 = +[PDSchoolworkCollaborationStateAdaptor attachmentWithStates:v11 canBeSetToActivityState:2 ignoreIsLocked:0];

      if ((v12 & 1) == 0)
      {
LABEL_23:

        goto LABEL_24;
      }
    }
    else
    {
      CLSInitLog();
      uint64_t v13 = (void *)CLSLogDefault;
      if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_INFO))
      {
        BOOL v14 = v13;
        unint64_t v15 = [v3 objectID];
        *(_DWORD *)long long buf = 138412290;
        char v33 = v15;
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "handoutAttachment - %@ is missing ACTIVITY state.", buf, 0xCu);
      }
      if (([v3 isComplete] & 1) != 0
        || ([v3 isLocked] & 1) != 0)
      {
        goto LABEL_23;
      }
    }
    [v3 setCompletionStatus:1];
    CFStringRef v16 = +[NSDate date];
    [v3 setDateLastModified:v16];

    uint64_t v17 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
    if (v17) {
      id v18 = *(void **)(v17 + 8);
    }
    else {
      id v18 = 0;
    }
    [v18 addObject:v5];
    uint64_t v19 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
    if (v19) {
      uint64_t v20 = *(void **)(v19 + 24);
    }
    else {
      uint64_t v20 = 0;
    }
    [v20 addObject:v3];
    uint64_t v21 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
    if (v21) {
      char v22 = *(void **)(v21 + 16);
    }
    else {
      char v22 = 0;
    }
    [v22 addObject:v6];
    if ([v5 length])
    {
      if (v6)
      {
        char v23 = [v3 title];

        if (v23)
        {
          id v24 = objc_opt_new();
          long long v25 = [v3 title];
          [v24 setObject:v25 forKey:@"attachmentTitle"];

          [v24 setObject:v6 forKey:@"attachmentID"];
          [v24 setObject:v5 forKey:@"handoutID"];
          uint64_t v26 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
          if (v26) {
            id v27 = *(void **)(v26 + 32);
          }
          else {
            id v27 = 0;
          }
          [v27 addObject:v24];
        }
      }
    }
    goto LABEL_23;
  }
LABEL_24:
}

void sub_10002E048(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

void sub_10002E08C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    CLSInitLog();
    id v7 = CLSLogFetch;
    if (os_log_type_enabled(CLSLogFetch, OS_LOG_TYPE_INFO))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      int v9 = 138412546;
      uint64_t v10 = v8;
      __int16 v11 = 2114;
      id v12 = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "failed to fetch attachment at url: %@, error: %{public}@", (uint8_t *)&v9, 0x16u);
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_10002E184(uint64_t a1)
{
  uint64_t v2 = objc_msgSend(*(id *)(a1 + 32), "br_itemID");
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;

  if (*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40))
  {
    id v5 = *(void **)(a1 + 32);
    uint64_t v6 = *(void *)(*(void *)(a1 + 48) + 8);
    id obj = *(id *)(v6 + 40);
    uint64_t v7 = objc_msgSend(v5, "br_documentRecordIDWithError:", &obj);
    objc_storeStrong((id *)(v6 + 40), obj);
    uint64_t v8 = *(void *)(*(void *)(a1 + 56) + 8);
    int v9 = *(void **)(v8 + 40);
    *(void *)(v8 + 40) = v7;

    if (!*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40))
    {
      uint64_t v10 = +[NSError cls_createErrorWithCode:2 description:@"URL not shared, no CKRecordID."];
      uint64_t v11 = *(void *)(*(void *)(a1 + 48) + 8);
      id v12 = *(void **)(v11 + 40);
      *(void *)(v11 + 40) = v10;
    }
  }
  else
  {
    *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) = +[NSError cls_createErrorWithCode:2 description:@"URL not shared, no brID."];
    _objc_release_x1();
  }
}

void sub_10002E9F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10002EA18(uint64_t a1)
{
  v19[0] = 0;
  v19[1] = v19;
  v19[2] = 0x3032000000;
  v19[3] = sub_10000B634;
  v19[4] = sub_10000B534;
  id v20 = 0;
  v17[0] = 0;
  v17[1] = v17;
  void v17[2] = 0x3032000000;
  v17[3] = sub_10000B634;
  v17[4] = sub_10000B534;
  id v18 = 0;
  v15[0] = 0;
  v15[1] = v15;
  v15[2] = 0x3032000000;
  v15[3] = sub_10000B634;
  void v15[4] = sub_10000B534;
  id v16 = 0;
  uint64_t v2 = sub_10000C6B4(*(void **)(a1 + 32));
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_10002ECFC;
  v14[3] = &unk_1001F2170;
  v14[4] = v19;
  v14[5] = v17;
  v14[6] = v15;
  +[CLSUtil fetchInfoForAppWithBundleIdentifier:v2 completion:v14];

  id v3 = objc_alloc((Class)CLSHandoutAssignedItem);
  id v4 = [*(id *)(a1 + 40) type];
  id v5 = [*(id *)(a1 + 40) title];
  uint64_t v6 = [*(id *)(a1 + 40) objectID];
  id v7 = [v3 initWithType:v4 title:v5 handoutAttachmentID:v6];

  if ([v7 effectiveAuthorizationStatus] == (id)2)
  {
    CLSInitLog();
    uint64_t v8 = CLSLogDefault;
    if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "CLSHandoutAssignedItem not authorized", v13, 2u);
    }
    goto LABEL_6;
  }
  [v7 setAppIdentifier:*(void *)(a1 + 48)];
  int v9 = [*(id *)(a1 + 56) database];
  unsigned int v10 = [v9 insertObject:v7];

  if (!v10)
  {
LABEL_6:
    uint64_t v11 = 0;
    goto LABEL_7;
  }
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40), v7);
  uint64_t v11 = 1;
LABEL_7:

  _Block_object_dispose(v15, 8);
  _Block_object_dispose(v17, 8);

  _Block_object_dispose(v19, 8);
  return v11;
}

void sub_10002ECC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v9 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_10002ECFC(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  uint64_t v10 = *(void *)(a1[4] + 8);
  uint64_t v11 = *(void **)(v10 + 40);
  *(void *)(v10 + 40) = v7;
  id v17 = v7;

  uint64_t v12 = *(void *)(a1[5] + 8);
  uint64_t v13 = *(void **)(v12 + 40);
  *(void *)(v12 + 40) = v8;
  id v14 = v8;

  uint64_t v15 = *(void *)(a1[6] + 8);
  uint64_t v16 = *(void **)(v15 + 40);
  *(void *)(v15 + 40) = v9;
}

void sub_10002F128(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    CLSInitLog();
    id v4 = CLSLogDefault;
    if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_ERROR))
    {
      int v7 = 138543362;
      id v8 = v3;
      _os_log_error_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "Error during markAsComplete - saving handout attachments: %{public}@", (uint8_t *)&v7, 0xCu);
    }
  }
  uint64_t v5 = *(void *)(a1 + 40);
  if (v5) {
    uint64_t v6 = *(void **)(v5 + 32);
  }
  else {
    uint64_t v6 = 0;
  }
  sub_10002F21C(*(void **)(a1 + 32), v6);
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
}

void sub_10002F21C(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  unsigned int v32 = a1;
  if (a1 && [v3 count])
  {
    uint64_t v5 = [a1 database];
    long long v44 = 0u;
    long long v45 = 0u;
    long long v46 = 0u;
    long long v47 = 0u;
    uint64_t v30 = v4;
    id obj = v4;
    id v39 = [obj countByEnumeratingWithState:&v44 objects:v55 count:16];
    if (v39)
    {
      uint64_t v38 = *(void *)v45;
      long long v31 = v5;
      do
      {
        for (i = 0; i != v39; i = (char *)i + 1)
        {
          if (*(void *)v45 != v38) {
            objc_enumerationMutation(obj);
          }
          int v7 = *(void **)(*((void *)&v44 + 1) + 8 * i);
          id v8 = [v7 objectForKeyedSubscript:@"handoutID"];
          id v9 = [v7 objectForKeyedSubscript:@"attachmentTitle"];
          uint64_t v10 = [v7 objectForKeyedSubscript:@"attachmentID"];
          CLSInitLog();
          uint64_t v11 = CLSLogNotifications;
          if (os_log_type_enabled(CLSLogNotifications, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)long long buf = 141558531;
            uint64_t v50 = 1752392040;
            __int16 v51 = 2112;
            long long v52 = v10;
            __int16 v53 = 2113;
            id v54 = v9;
            _os_log_debug_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "Attempting to notify complete for attachmentID: %{mask.hash}@ title:%{private}@", buf, 0x20u);
          }
          uint64_t v12 = objc_opt_class();
          id v48 = v8;
          uint64_t v13 = +[NSArray arrayWithObjects:&v48 count:1];
          id v14 = [v5 select:v12 where:@"parentObjectID = ?" bindings:v13];

          uint64_t v15 = [v14 classID];
          if (v15)
          {
            __int16 v40 = v14;
            uint64_t v16 = [v5 select:objc_opt_class() identity:v15];
            id v17 = [v16 displayName];
            if (![v17 length])
            {
              uint64_t v18 = [v16 className];

              id v17 = (void *)v18;
            }
            id v41 = v10;
            if (![v17 length])
            {
              uint64_t v19 = +[NSBundle bundleForClass:objc_opt_class()];
              [v19 localizedStringForKey:@"UNTITLED_CLASS" value:&stru_1001F6580 table:@"ClassKit"];
              v21 = id v20 = v16;

              id v17 = (void *)v21;
              uint64_t v16 = v20;
            }
            char v22 = [v5 select:objc_opt_class() identity:v8];
            char v23 = [v22 title];
            if ([v17 length])
            {
              id v36 = v22;
              id v24 = +[NSBundle bundleForClass:objc_opt_class()];
              unsigned int v35 = [v24 localizedStringForKey:@"MARK_AS_COMPLETE_MESSAGE_FORMAT" value:&stru_1001F6580 table:@"ClassKit"];

              __int16 v34 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", v35, v9, v23);
              long long v25 = objc_opt_new();
              [v25 setTitle:v17];
              [v25 setBody:v34];
              id v37 = v16;
              uint64_t v26 = objc_opt_new();
              [v26 setObject:v8 forKey:@"handoutID"];
              [v26 setObject:v41 forKey:@"attachmentID"];
              [v26 setObject:v15 forKey:@"classID"];
              [v25 setUserInfo:v26];
              id v27 = +[NSString stringWithFormat:@"%@-%@", @"com.apple.progressd.complete-activity", v41];
              uint64_t v28 = +[UNNotificationRequest requestWithIdentifier:v27 content:v25 trigger:0];

              long long v29 = [v32 userNotificationCenter];
              v42[0] = _NSConcreteStackBlock;
              v42[1] = 3221225472;
              v42[2] = sub_10002F7DC;
              v42[3] = &unk_1001F26C0;
              id v43 = v41;
              [v29 addNotificationRequest:v28 withCompletionHandler:v42];

              uint64_t v5 = v31;
              uint64_t v16 = v37;

              char v22 = v36;
            }

            id v14 = v40;
            uint64_t v10 = v41;
          }
        }
        id v39 = [obj countByEnumeratingWithState:&v44 objects:v55 count:16];
      }
      while (v39);
    }

    id v4 = v30;
  }
}

void sub_10002F7DC(uint64_t a1, void *a2)
{
  id v3 = a2;
  CLSInitLog();
  id v4 = CLSLogNotifications;
  if (v3)
  {
    if (os_log_type_enabled(CLSLogNotifications, OS_LOG_TYPE_ERROR))
    {
      uint64_t v5 = v4;
      uint64_t v6 = [v3 description];
      int v8 = 138412290;
      uint64_t v9 = (uint64_t)v6;
      _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "Error with mark as complete user notification. Error: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  else if (os_log_type_enabled(CLSLogNotifications, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    int v8 = 141558274;
    uint64_t v9 = 1752392040;
    __int16 v10 = 2112;
    uint64_t v11 = v7;
    _os_log_debug_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "notification Successful: attachmentID: %{mask.hash}@", (uint8_t *)&v8, 0x16u);
  }
}

void sub_10002FAD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10002FAF0(uint64_t a1)
{
  uint64_t v36 = *(void *)(a1 + 32);
  uint64_t v2 = +[NSArray arrayWithObjects:&v36 count:1];
  id v3 = [*(id *)(a1 + 40) database];
  uint64_t v4 = [v3 select:objc_opt_class() where:@"parentObjectID is null and appIdentifier = ?" bindings:v2];
  uint64_t v5 = *(void *)(*(void *)(a1 + 56) + 8);
  uint64_t v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;

  if (*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40))
  {
    uint64_t v7 = 1;
  }
  else
  {
    uint64_t v29 = 0;
    uint64_t v30 = &v29;
    uint64_t v31 = 0x3032000000;
    unsigned int v32 = sub_10000B634;
    char v33 = sub_10000B534;
    id v34 = 0;
    uint64_t v23 = 0;
    id v24 = &v23;
    uint64_t v25 = 0x3032000000;
    uint64_t v26 = sub_10000B634;
    id v27 = sub_10000B534;
    id v28 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = &v17;
    uint64_t v19 = 0x3032000000;
    id v20 = sub_10000B634;
    uint64_t v21 = sub_10000B534;
    id v22 = 0;
    int v8 = sub_10000C6B4(*(void **)(a1 + 48));
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472;
    v16[2] = sub_10002FE60;
    v16[3] = &unk_1001F2170;
    void v16[4] = &v29;
    v16[5] = &v23;
    v16[6] = &v17;
    +[CLSUtil fetchInfoForAppWithBundleIdentifier:v8 completion:v16];

    id v9 = objc_alloc((Class)CLSContext);
    if (v30[5]) {
      uint64_t v10 = v30[5];
    }
    else {
      uint64_t v10 = *(void *)(a1 + 32);
    }
    id v11 = [v9 initWithInternalType:1 identifier:*(void *)(a1 + 32) title:v10];
    [v11 setAppIdentifier:*(void *)(a1 + 32)];
    uint64_t v12 = sub_10000C6B4(*(void **)(a1 + 48));
    unsigned int v35 = v12;
    uint64_t v13 = +[NSArray arrayWithObjects:&v35 count:1];
    [v11 setIdentifierPathAndGenerateObjectID:v13];

    [v11 setStoreIdentifier:v24[5]];
    [v11 setStoreTeamID:v18[5]];
    id v14 = [*(id *)(a1 + 40) database];
    uint64_t v7 = (uint64_t)[v14 insertObject:v11];

    if (v7) {
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), v11);
    }

    _Block_object_dispose(&v17, 8);
    _Block_object_dispose(&v23, 8);

    _Block_object_dispose(&v29, 8);
  }

  return v7;
}

void sub_10002FE20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
}

void sub_10002FE60(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  uint64_t v10 = *(void *)(a1[4] + 8);
  id v11 = *(void **)(v10 + 40);
  *(void *)(v10 + 40) = v7;
  id v17 = v7;

  uint64_t v12 = *(void *)(a1[5] + 8);
  uint64_t v13 = *(void **)(v12 + 40);
  *(void *)(v12 + 40) = v8;
  id v14 = v8;

  uint64_t v15 = *(void *)(a1[6] + 8);
  uint64_t v16 = *(void **)(v15 + 40);
  *(void *)(v15 + 40) = v9;
}

void sub_100030760(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10003077C(uint64_t result, void *a2, uint64_t a3)
{
  if (result)
  {
    uint64_t v5 = (void *)result;
    if (![a2 conformsToProtocol:&OBJC_PROTOCOL___PDDatabaseEntity])
    {
      CFStringRef v19 = &stru_1001F6580;
LABEL_24:
      +[NSError cls_assignError:a3, 4, @"Query for object of type: '%@' not allowed%@.", a2, v19 code format];
      return 0;
    }
    uint64_t v6 = CLSProgressClasses();
    id v7 = [v6 mutableCopy];

    [v7 addObject:objc_opt_class()];
    [v7 addObject:objc_opt_class()];
    [v7 addObject:objc_opt_class()];
    id v8 = [v5 client];
    if (v8)
    {
      int v9 = v8[26];

      if (!v9) {
        goto LABEL_7;
      }
      uint64_t v10 = CLSDashboardClasses();
      [v7 unionSet:v10];
    }
    else
    {
      uint64_t v10 = 0;
    }

LABEL_7:
    id v11 = [v5 client];
    if (v11)
    {
      int v12 = v11[27];

      if (!v12) {
        goto LABEL_11;
      }
      uint64_t v13 = CLSSearchClasses();
      [v7 unionSet:v13];
    }
    else
    {
      uint64_t v13 = 0;
    }

LABEL_11:
    id v14 = [v5 daemon];
    BOOL v15 = sub_1000CCDD4(v14);

    if (!v15)
    {
      CFStringRef v19 = &stru_1001F6580;
      goto LABEL_22;
    }
    uint64_t v16 = CLSQueriableWithoutValidUserClasses();
    [v7 intersectSet:v16];

    id v17 = [v5 client];
    uint64_t v18 = v17;
    if (v17 && v17[26])
    {
    }
    else
    {
      id v20 = [v5 client];
      if (!v20) {
        goto LABEL_20;
      }
      int v21 = v20[29];

      if (!v21)
      {
LABEL_21:
        CFStringRef v19 = @" without a valid user";
LABEL_22:
        unsigned __int8 v22 = [v7 containsObject:a2];

        if (v22) {
          return 1;
        }
        goto LABEL_24;
      }
    }
    uint64_t v18 = CLSOnboardingClasses();
    [v7 unionSet:v18];
LABEL_20:

    goto LABEL_21;
  }
  return result;
}

void sub_1000309C0(uint64_t a1, void *a2)
{
  id v3 = a2;
  ++*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
  if ([*(id *)(a1 + 32) count] == *(id *)(a1 + 56))
  {
    objc_msgSend(*(id *)(a1 + 40), "clientRemote_deliverObject:", *(void *)(a1 + 32));
    [*(id *)(a1 + 32) removeAllObjects];
  }
  [*(id *)(a1 + 32) addObject:v3];
}

void sub_1000312C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
}

void sub_100031304(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  CLSInitLog();
  id v3 = CLSLogSearch;
  if (os_log_type_enabled(CLSLogSearch, OS_LOG_TYPE_INFO))
  {
    int v4 = 138543362;
    uint64_t v5 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Failed to proxy to remote query! error: %{public}@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_1000313B4(uint64_t a1, void *a2)
{
  id v3 = a2;
  ++*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 24);
  if ([*(id *)(a1 + 32) count] == *(id *)(a1 + 72))
  {
    CLSInitLog();
    uint64_t v5 = (void *)CLSLogSearch;
    if (os_log_type_enabled(CLSLogSearch, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v10 = *(void **)(a1 + 32);
      id v11 = v5;
      int v12 = 134217984;
      id v13 = [v10 count];
      _os_log_debug_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "Buffer full. Delivering %lu objects.", (uint8_t *)&v12, 0xCu);
    }
    objc_msgSend(*(id *)(a1 + 40), "clientRemote_deliverObject:", *(void *)(a1 + 32));
    [*(id *)(a1 + 32) removeAllObjects];
  }
  if (([*(id *)(a1 + 48) includeEmptyGroupsInResults] & 1) != 0
    || (uint64_t v6 = objc_opt_class(), v6 != objc_opt_class())
    || (id v7 = *(void **)(a1 + 56),
        uint64_t v8 = objc_opt_class(),
        [v3 identityValue],
        int v9 = objc_claimAutoreleasedReturnValue(),
        LODWORD(v7) = [v7 childEntitiesExistForClass:v8 parentIdentity:v9],
        v9,
        v7))
  {
    [*(id *)(a1 + 32) addObject:v3];
  }
}

id sub_100031B94(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addObject:a2];
}

id sub_100031DF4(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addObject:a2];
}

void sub_100032CD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Block_object_dispose((const void *)(v26 - 192), 8);
  _Block_object_dispose((const void *)(v26 - 224), 8);
  _Unwind_Resume(a1);
}

id sub_100032D30(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = CLSContextClasses();
  unsigned __int8 v5 = [v4 containsObject:objc_opt_class()];

  if ((v5 & 1) != 0 || !*(unsigned char *)(a1 + 32))
  {
    id v7 = 0;
  }
  else
  {
    uint64_t v6 = CLSProgressClasses();
    id v7 = [v6 containsObject:objc_opt_class()];
  }
  return v7;
}

uint64_t sub_100032DCC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100032DDC(uint64_t a1)
{
  uint64_t v1 = a1;
  BOOL v85 = sub_100066C68(*(void **)(a1 + 32));
  BOOL v2 = sub_100066CB8(*(void **)(v1 + 32));
  long long v93 = 0u;
  long long v94 = 0u;
  long long v95 = 0u;
  long long v96 = 0u;
  id obj = *(id *)(v1 + 40);
  id v3 = [obj countByEnumeratingWithState:&v93 objects:v102 count:16];
  uint64_t v82 = 1;
  if (!v3) {
    goto LABEL_96;
  }
  id v4 = v3;
  unsigned __int8 v5 = (os_log_t *)&CLSLogDefault;
  uint64_t v6 = (mach_header_64 *)&_mh_execute_header;
  uint64_t v7 = *(void *)v94;
  id v84 = (void *)CLSAdminRequestNewAccountPlaceholderAppleID;
  BOOL v86 = v2;
  uint64_t v90 = v1;
  uint64_t v87 = *(void *)v94;
LABEL_3:
  uint64_t v8 = 0;
  id v88 = v4;
  while (1)
  {
    if (*(void *)v94 != v7) {
      objc_enumerationMutation(obj);
    }
    int v9 = *(char **)(*((void *)&v93 + 1) + 8 * v8);
    CLSInitLog();
    uint64_t v10 = *v5;
    if (os_log_type_enabled(*v5, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138412290;
      v99 = v9;
      _os_log_impl(v6, v10, OS_LOG_TYPE_INFO, "SAVING %@.", buf, 0xCu);
    }
    id v92 = 0;
    unsigned __int8 v11 = [v9 validateObject:&v92];
    id v12 = v92;
    id v13 = v12;
    if ((v11 & 1) == 0)
    {
      if (v12) {
        [*(id *)(v1 + 48) addObject:v12];
      }
      goto LABEL_37;
    }
    id v14 = v5;
    BOOL v15 = CLSContextClasses();
    unsigned int v16 = [v15 containsObject:objc_opt_class()];

    id v17 = CLSProgressClasses();
    unsigned int v18 = [v17 containsObject:objc_opt_class()];

    if (v18)
    {
      CFStringRef v19 = v6;
      if (*(unsigned char *)(*(void *)(*(void *)(v1 + 104) + 8) + 24))
      {
        id v20 = v13;
      }
      else
      {
        int v21 = *(void **)(v1 + 56);
        id v91 = v13;
        unsigned __int8 v22 = [v21 _createMainAppContext:&v91];
        id v20 = v91;

        if (!v22)
        {
          id v13 = v20;
          goto LABEL_95;
        }
        *(unsigned char *)(*(void *)(*(void *)(v1 + 104) + 8) + 24) = 1;
      }
      unsigned __int8 v5 = v14;
      if (((v16 ^ 1 | v86) & 1) == 0)
      {
        CLSInitLog();
        os_log_t v30 = *v14;
        if (os_log_type_enabled(*v14, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v31 = v30;
          unsigned int v32 = objc_opt_class();
          *(_DWORD *)long long buf = 136315394;
          v99 = "Saving context not allowed!";
          __int16 v100 = 2112;
          v101 = v32;
          id v33 = v32;
          id v34 = v19;
          unsigned int v35 = v31;
          goto LABEL_86;
        }
LABEL_35:
        id v13 = v20;
        id v4 = v88;
        uint64_t v1 = v90;
        uint64_t v6 = v19;
LABEL_36:
        uint64_t v7 = v87;
        goto LABEL_37;
      }
      if (((v16 | v85) & 1) == 0)
      {
        CLSInitLog();
        os_log_t v40 = *v14;
        if (!os_log_type_enabled(*v14, OS_LOG_TYPE_DEBUG)) {
          goto LABEL_35;
        }
        uint64_t v31 = v40;
        id v69 = objc_opt_class();
        *(_DWORD *)long long buf = 136315394;
        v99 = "Recording activity not allowed.";
        __int16 v100 = 2112;
        v101 = v69;
        id v33 = v69;
        id v34 = v19;
        unsigned int v35 = v31;
LABEL_86:
        _os_log_debug_impl(v34, v35, OS_LOG_TYPE_DEBUG, "%s (%@)!", buf, 0x16u);

        id v13 = v20;
        uint64_t v6 = v19;
        id v4 = v88;
        uint64_t v1 = v90;
        goto LABEL_36;
      }
      id v13 = v20;
      uint64_t v6 = v19;
      uint64_t v7 = v87;
    }
    uint64_t v23 = CLSDashboardClasses();
    unsigned int v24 = [v23 containsObject:objc_opt_class()];

    uint64_t v1 = v90;
    if (!*(unsigned char *)(v90 + 112) && v24)
    {
      CLSInitLog();
      unsigned __int8 v5 = v14;
      os_log_t v25 = *v14;
      if (os_log_type_enabled(*v14, OS_LOG_TYPE_DEBUG))
      {
        double v61 = v25;
        uint64_t v62 = objc_opt_class();
        *(_DWORD *)long long buf = 136315394;
        v99 = "Saving dashboard objects not allowed.";
        __int16 v100 = 2112;
        v101 = v62;
        id v63 = v62;
        _os_log_debug_impl(v6, v61, OS_LOG_TYPE_DEBUG, "%s (%@)!", buf, 0x16u);
      }
      uint64_t v26 = +[NSString stringWithUTF8String:"Saving dashboard objects not allowed."];
      id v27 = +[NSError cls_createErrorWithCode:1 errorObject:v9 description:v26];

      [*(id *)(v90 + 48) addObject:v27];
LABEL_24:
      id v4 = v88;
      goto LABEL_37;
    }
    id v28 = CLSOnboardingClasses();
    unsigned __int8 v29 = [v28 containsObject:objc_opt_class()];

    if (v29) {
      goto LABEL_26;
    }
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      uint64_t v36 = v9;
      id v37 = [v36 appleID];
      uint64_t v38 = v37;
      if (!v84)
      {
        if (!v37)
        {

LABEL_26:
          id v4 = v88;
          unsigned __int8 v5 = v14;
          uint64_t v1 = v90;
          goto LABEL_37;
        }

LABEL_41:
        goto LABEL_42;
      }
      if (!v37) {
        goto LABEL_41;
      }
      id v39 = [v36 appleID];
      unsigned __int8 v83 = [v84 isEqualToString:v39];

      uint64_t v7 = v87;
      if (v83) {
        goto LABEL_26;
      }
    }
LABEL_42:
    uint64_t v1 = v90;
    if (!*(unsigned char *)(v90 + 113)
      || ([v9 appIdentifier], id v41 = objc_claimAutoreleasedReturnValue(), v41, !v41))
    {
      [v9 setAppIdentifier:*(void *)(v90 + 64)];
    }
    unsigned __int8 v5 = v14;
    if ([v9 isDeleted])
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0) {
        goto LABEL_64;
      }
      long long v42 = [*(id *)(v90 + 56) database];
      uint64_t v43 = objc_opt_class();
      long long v44 = [v9 objectID];
      v97 = v44;
      long long v45 = +[NSArray arrayWithObjects:&v97 count:1];
      id v46 = [v42 count:v43 where:@"parentObjectID = ?" bindings:v45];

      unsigned __int8 v5 = v14;
      if (!v46)
      {
LABEL_64:
        id v4 = v88;
        uint64_t v7 = v87;
        if (([*(id *)(v90 + 32) deleteObject:v9] & 1) == 0) {
          goto LABEL_95;
        }
        goto LABEL_37;
      }
      CLSInitLog();
      os_log_t v47 = *v14;
      id v4 = v88;
      uint64_t v7 = v87;
      if (os_log_type_enabled(*v14, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)long long buf = 0;
        id v48 = v6;
        long long v49 = v47;
        uint64_t v50 = "Deleting context not allowed.";
LABEL_71:
        _os_log_debug_impl(v48, v49, OS_LOG_TYPE_DEBUG, v50, buf, 2u);
        goto LABEL_37;
      }
      goto LABEL_37;
    }
    uint64_t v7 = v87;
    if (!v18) {
      break;
    }
    id v51 = [*(id *)(v90 + 56) _authorizationStatusForObject:v9];
    if (v51 != (id)2 && (v51 || (v16 & 1) != 0)) {
      break;
    }
    if ((*(uint64_t (**)(void))(*(void *)(v90 + 96) + 16))()) {
      goto LABEL_24;
    }
    CLSInitLog();
    os_log_t v64 = *v14;
    id v4 = v88;
    if (os_log_type_enabled(*v14, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)long long buf = 0;
      id v48 = v6;
      long long v49 = v64;
      uint64_t v50 = "Saving object not allowed.";
      goto LABEL_71;
    }
LABEL_37:

    if (v4 == (id)++v8)
    {
      id v80 = [obj countByEnumeratingWithState:&v93 objects:v102 count:16];
      id v4 = v80;
      if (!v80)
      {
        uint64_t v82 = 1;
        goto LABEL_96;
      }
      goto LABEL_3;
    }
  }
  if ([v9 conformsToProtocol:&OBJC_PROTOCOL___PDEndpointServerEntityHooks]
    && ![v9 willBeProcessedByEndpointServer:*(void *)(v90 + 56)])
  {
    goto LABEL_95;
  }
  long long v52 = [v9 objectID];
  if (v16
    && ([v9 parentObjectID], __int16 v53 = objc_claimAutoreleasedReturnValue(), v53, !v53))
  {
    unsigned int v60 = [*(id *)(v90 + 32) insertOrUpdateObject:v9];
  }
  else
  {
    unsigned int v54 = [v9 isTemporary];
    unsigned int v55 = *(void **)(v90 + 32);
    if (v54)
    {
      if (([v55 insertObject:v9] & 1) == 0)
      {
        unsigned int v56 = [*(id *)(v90 + 32) entityExistsByClass:objc_opt_class() identity:v52];
        CLSInitLog();
        os_log_t v57 = *v14;
        BOOL v58 = os_log_type_enabled(*v14, OS_LOG_TYPE_DEBUG);
        if (v56)
        {
          if (v58)
          {
            long long v74 = v57;
            id v75 = objc_opt_class();
            *(_DWORD *)long long buf = 136315394;
            v99 = "Failed to save object.  Object already exists in store.  To update existing object fetch it from data "
                  "store, modify it and save it back.";
            __int16 v100 = 2112;
            v101 = v75;
            id v76 = v75;
            _os_log_debug_impl(v6, v74, OS_LOG_TYPE_DEBUG, "%s (%@)!", buf, 0x16u);
          }
          id v59 = "Failed to save object.  Object already exists in store.  To update existing object fetch it from data st"
                "ore, modify it and save it back.";
        }
        else
        {
          if (v58)
          {
            signed int v77 = v57;
            v78 = objc_opt_class();
            *(_DWORD *)long long buf = 136315394;
            v99 = "Failed to save new object.";
            __int16 v100 = 2112;
            v101 = v78;
            id v79 = v78;
            _os_log_debug_impl(v6, v77, OS_LOG_TYPE_DEBUG, "%s (%@)!", buf, 0x16u);
          }
          id v59 = "Failed to save new object.";
        }
        signed int v66 = +[NSString stringWithUTF8String:v59];
        uint64_t v67 = 7;
LABEL_91:
        id v70 = +[NSError cls_createErrorWithCode:v67 errorObject:v9 description:v66];

        [*(id *)(v90 + 48) addObject:v70];
        id v4 = v88;
        unsigned __int8 v5 = v14;
        goto LABEL_36;
      }
    }
    else if (([v55 updateObject:v9] & 1) == 0)
    {
      CLSInitLog();
      os_log_t v65 = *v14;
      if (os_log_type_enabled(*v14, OS_LOG_TYPE_DEBUG))
      {
        long long v71 = v65;
        long long v72 = objc_opt_class();
        *(_DWORD *)long long buf = 136315394;
        v99 = "Failed to update object.";
        __int16 v100 = 2112;
        v101 = v72;
        id v73 = v72;
        _os_log_debug_impl(v6, v71, OS_LOG_TYPE_DEBUG, "%s (%@)!", buf, 0x16u);
      }
      signed int v66 = +[NSString stringWithUTF8String:"Failed to update object."];
      uint64_t v67 = 8;
      goto LABEL_91;
    }
    unsigned int v60 = 1;
  }
  if (!*(unsigned char *)(v90 + 114))
  {
    if (*(void *)(v90 + 72))
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass()) {
        sub_1000FF590(*(void **)(v90 + 80), v9, *(void **)(v90 + 72));
      }
    }
  }
  if (v60)
  {
    double v68 = [*(id *)(v90 + 32) select:objc_opt_class() identity:v52];
    if (v68) {
      objc_msgSend(*(id *)(v90 + 88), "clientRemote_deliverObject:", v68);
    }

    id v4 = v88;
    goto LABEL_36;
  }

LABEL_95:
  uint64_t v82 = 0;
LABEL_96:

  return v82;
}

void sub_1000338B4(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  CLSInitLog();
  unsigned __int8 v11 = CLSLogHandout;
  if (os_log_type_enabled(CLSLogHandout, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v25 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
    *(_DWORD *)long long buf = 138412546;
    uint64_t v34 = v25;
    __int16 v35 = 2112;
    id v36 = v7;
    _os_log_debug_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "SaveCollabState (Client %@): results: %@", buf, 0x16u);
  }
  sub_1000FF7D4(*(void **)(a1 + 32), v7, v8);
  if ([v8 count])
  {
    CLSInitLog();
    id v12 = CLSLogHandout;
    if (os_log_type_enabled(CLSLogHandout, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v26 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
      *(_DWORD *)long long buf = 138412546;
      uint64_t v34 = v26;
      __int16 v35 = 2112;
      id v36 = v8;
      _os_log_debug_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "SaveCollabState (Client %@): conflicts: %@", buf, 0x16u);
    }
    if (!v9) {
      goto LABEL_11;
    }
    goto LABEL_9;
  }
  if (v9)
  {
LABEL_9:
    CLSInitLog();
    id v13 = CLSLogHandout;
    if (os_log_type_enabled(CLSLogHandout, OS_LOG_TYPE_ERROR))
    {
      uint64_t v27 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
      *(_DWORD *)long long buf = 138412546;
      uint64_t v34 = v27;
      __int16 v35 = 2112;
      id v36 = v9;
      _os_log_error_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "SaveCollabState (Client %@): Error publishing states: %@", buf, 0x16u);
    }
LABEL_11:
    id v14 = sub_1000FF7A4(*(void **)(a1 + 32));
    v28[0] = _NSConcreteStackBlock;
    v28[1] = 3221225472;
    v28[2] = sub_100033C0C;
    v28[3] = &unk_1001F2330;
    uint64_t v32 = *(void *)(a1 + 56);
    id v15 = *(id *)(a1 + 32);
    uint64_t v16 = *(void *)(a1 + 40);
    id v17 = *(void **)(a1 + 48);
    id v29 = v15;
    uint64_t v30 = v16;
    id v31 = v17;
    objc_msgSend(WeakRetained, "entitled_publishCollaborationStateChanges:completion:", v14, v28);

    goto LABEL_12;
  }
  unsigned int v18 = [*(id *)(a1 + 40) database];
  unsigned int v19 = +[PDEndpointRequestOperation isEndpointAvailable:@"uploadEvents" inDatabase:v18];

  if (v19)
  {
    id v20 = [PDUploadEventsOperation alloc];
    int v21 = [*(id *)(a1 + 40) database];
    unsigned __int8 v22 = [(PDURLRequestOperation *)v20 initWithDatabase:v21];

    uint64_t v23 = [*(id *)(a1 + 40) daemon];
    unsigned int v24 = [v23 operationsManager];
    sub_100111240(v24, v22);
  }
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
LABEL_12:
}

void sub_100033C0C(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  CLSInitLog();
  uint64_t v10 = CLSLogHandout;
  if (os_log_type_enabled(CLSLogHandout, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v20 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
    int v23 = 138412546;
    uint64_t v24 = v20;
    __int16 v25 = 2112;
    id v26 = v7;
    _os_log_debug_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "SaveCollabState (Client %@): retry results: %@", (uint8_t *)&v23, 0x16u);
  }
  sub_1000FF7D4(*(void **)(a1 + 32), v7, v8);
  if ([v8 count]
    && (CLSInitLog(), unsigned __int8 v11 = CLSLogHandout, os_log_type_enabled(CLSLogHandout, OS_LOG_TYPE_DEBUG)))
  {
    uint64_t v21 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
    int v23 = 138412546;
    uint64_t v24 = v21;
    __int16 v25 = 2112;
    id v26 = v8;
    _os_log_debug_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "SaveCollabState (Client %@): retry conflicts: %@", (uint8_t *)&v23, 0x16u);
    if (!v9) {
      goto LABEL_8;
    }
  }
  else if (!v9)
  {
    goto LABEL_8;
  }
  CLSInitLog();
  id v12 = CLSLogHandout;
  if (os_log_type_enabled(CLSLogHandout, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v22 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
    int v23 = 138412546;
    uint64_t v24 = v22;
    __int16 v25 = 2112;
    id v26 = v9;
    _os_log_debug_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "SaveCollabState (Client %@): retry error: %@", (uint8_t *)&v23, 0x16u);
  }
LABEL_8:
  id v13 = [*(id *)(a1 + 40) database];
  unsigned int v14 = +[PDEndpointRequestOperation isEndpointAvailable:@"uploadEvents" inDatabase:v13];

  if (v14)
  {
    id v15 = [PDUploadEventsOperation alloc];
    uint64_t v16 = [*(id *)(a1 + 40) database];
    id v17 = [(PDURLRequestOperation *)v15 initWithDatabase:v16];

    unsigned int v18 = [*(id *)(a1 + 40) daemon];
    unsigned int v19 = [v18 operationsManager];
    sub_100111240(v19, v17);
  }
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
}

void sub_1000342C8(void *a1)
{
  [*(id *)(a1[4] + 40) setObject:a1[6] forKeyedSubscript:a1[5]];
  id v3 = (void *)a1[6];
  BOOL v2 = (void *)a1[7];
  CFStringRef v6 = @"PDDataWrittenTime";
  id v4 = +[NSDate date];
  id v7 = v4;
  unsigned __int8 v5 = +[NSDictionary dictionaryWithObjects:&v7 forKeys:&v6 count:1];
  sub_1000D5B58(v3, v2, v5);
}

void sub_100034458(uint64_t a1)
{
  id v3 = [*(id *)(*(void *)(a1 + 32) + 40) objectForKeyedSubscript:*(void *)(a1 + 40)];
  if (v3) {
    [*(id *)(*(void *)(a1 + 32) + 40) setObject:0 forKeyedSubscript:*(void *)(a1 + 40)];
  }
  BOOL v2 = [*(id *)(a1 + 32) daemon];
  sub_1000CCA30((uint64_t)v2);
}

void sub_100034D30(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100034DEC;
  v6[3] = &unk_1001F2670;
  uint64_t v5 = *(void *)(a1 + 64);
  id v7 = *(id *)(a1 + 72);
  +[NSURL cls_urlSuitableForOpeningForExpectedURL:v1 containerURL:v2 itemID:v3 ownerName:v4 zoneName:v5 completion:v6];
}

void sub_100034DEC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v6 = 0;
    uint64_t v3 = +[FPSandboxingURLWrapper wrapperWithURL:a2 readonly:0 error:&v6];
    id v4 = v6;
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    uint64_t v5 = *(void (**)(void))(*(void *)(a1 + 32) + 16);
    v5();
  }
}

void sub_100034FF4(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = [*(id *)(a1 + 40) database];
  sub_1001255C8((uint64_t)PDFileSyncManager, v2, 0, v3, *(void **)(a1 + 48));
}

void sub_1000351DC(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = *(void **)(a1 + 40);
  id v4 = [*(id *)(a1 + 48) database];
  sub_100125408((uint64_t)PDFileSyncManager, v2, v3, v4, *(void **)(a1 + 56));
}

void sub_1000353CC(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = *(void **)(a1 + 40);
  id v4 = [*(id *)(a1 + 48) database];
  sub_100125788((uint64_t)PDFileSyncManager, v2, v3, v4, *(void **)(a1 + 56));
}

void sub_100035598(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = [*(id *)(a1 + 40) database];
  sub_100125224((uint64_t)PDFileSyncManager, v2, v3, *(void **)(a1 + 48));
}

id sub_100035828(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "cls_createShareIfNeededWithOrgAdminUserRecordID:userRecordID:completion:", *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56));
}

void sub_1000359B8(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 64);
  id v3 = *(void **)(a1 + 32);
  uint64_t v4 = [*(id *)(a1 + 40) client];
  uint64_t v5 = (void *)v4;
  if (v4 && (id v6 = *(id *)(v4 + 32)) != 0)
  {
    id v7 = v6;
    [v6 auditToken];
  }
  else
  {
    id v7 = 0;
    long long v10 = 0u;
    long long v11 = 0u;
  }
  id v8 = *(void **)(a1 + 48);
  id v9 = objc_msgSend(*(id *)(a1 + 40), "database", v10, v11);
  sub_100125128((uint64_t)PDFileSyncManager, v3, v2 != 0, &v10, v8, v9, *(void **)(a1 + 56));
}

void sub_100037050(uint64_t a1, void *a2)
{
  id v7 = a2;
  id v3 = [v7 operationError];
  uint64_t v4 = v3;
  if (v3)
  {
    id v5 = v3;
  }
  else
  {
    id v5 = [v7 responseStatusError];
  }
  id v6 = v5;

  (*(void (**)(void, BOOL, void *))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), v6 == 0, v6);
}

void sub_100037250(uint64_t a1, uint64_t a2)
{
  int v2 = *(void **)(a1 + 32);
  if (a2) {
    id v3 = *(void **)(a2 + 24);
  }
  else {
    id v3 = 0;
  }
  id v4 = v3;
  [v2 addObject:v4];
}

void sub_1000375CC(uint64_t a1, void *a2)
{
  id v7 = a2;
  id v3 = [v7 operationError];
  id v4 = v3;
  if (v3)
  {
    id v5 = v3;
  }
  else
  {
    id v5 = [v7 responseStatusError];
  }
  id v6 = v5;

  (*(void (**)(void, BOOL, void *))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), v6 == 0, v6);
}

void sub_100037D30(uint64_t a1, void *a2)
{
  uint64_t v3 = [a2 operationError];
  if (v3)
  {
    id v4 = (void *)v3;
    id v5 = objc_opt_new();
    [v5 setObject:@"Failed Collection can be found under CLSErrorObjectKey." forKeyedSubscript:NSLocalizedDescriptionKey];
    id v6 = [objc_alloc((Class)NSError) initWithDomain:CLSErrorCodeDomain code:9 userInfo:v5];
  }
  else
  {
    id v6 = 0;
  }
  (*(void (**)(void, BOOL))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), v6 == 0);
}

void sub_1000384D0(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  CLSInitLog();
  id v4 = (void *)CLSLogHandout;
  if (os_log_type_enabled(CLSLogHandout, OS_LOG_TYPE_DEBUG))
  {
    long long v11 = v4;
    id v12 = [v3 operationID];
    if (v3) {
      id v13 = *(void **)(v3 + 251);
    }
    else {
      id v13 = 0;
    }
    id v14 = v13;
    id v15 = [v14 count];
    if (v3) {
      uint64_t v16 = *(void **)(v3 + 259);
    }
    else {
      uint64_t v16 = 0;
    }
    id v17 = v16;
    int v21 = 138412802;
    uint64_t v22 = v12;
    __int16 v23 = 2048;
    id v24 = v15;
    __int16 v25 = 2048;
    id v26 = [v17 count];
    _os_log_debug_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "publishStateChange op: %@ counts server states: %ld, conflicts: %ld", (uint8_t *)&v21, 0x20u);
  }
  CLSInitLog();
  id v5 = (void *)CLSLogHandout;
  if (os_log_type_enabled(CLSLogHandout, OS_LOG_TYPE_DEBUG))
  {
    unsigned int v18 = v5;
    unsigned int v19 = [v3 operationID];
    uint64_t v20 = sub_100151B6C((uint64_t)v3);
    int v21 = 138412546;
    uint64_t v22 = v19;
    __int16 v23 = 2112;
    id v24 = v20;
    _os_log_debug_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEBUG, "publishStateChange op %@ errors: %@", (uint8_t *)&v21, 0x16u);
  }
  uint64_t v6 = *(void *)(a1 + 32);
  if (v3)
  {
    id v7 = *(id *)(v3 + 251);
    id v8 = *(void **)(v3 + 259);
  }
  else
  {
    id v7 = 0;
    id v8 = 0;
  }
  id v9 = v8;
  long long v10 = sub_100151B6C((uint64_t)v3);
  (*(void (**)(uint64_t, id, id, void *))(v6 + 16))(v6, v7, v9, v10);
}

void sub_100039C2C(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  id v4 = [v3 operationError];
  if (!v4)
  {
    id v5 = v3 ? *(void **)(v3 + 266) : 0;
    id v6 = v5;
    id v4 = [v6 count];

    if (v4)
    {
      id v7 = objc_opt_new();
      if (v3) {
        id v8 = *(void **)(v3 + 266);
      }
      else {
        id v8 = 0;
      }
      id v9 = v8;
      [v7 setObject:v9 forKeyedSubscript:CLSErrorObjectKey];

      [v7 setObject:@"Failed ClassMembers can be found under CLSErrorObjectKey" forKeyedSubscript:NSLocalizedDescriptionKey];
      id v4 = [objc_alloc((Class)NSError) initWithDomain:CLSErrorCodeDomain code:9 userInfo:v7];
      CLSInitLog();
      long long v10 = (void *)CLSLogDefault;
      if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_ERROR))
      {
        id v13 = v10;
        if (v3) {
          id v14 = *(void **)(v3 + 266);
        }
        else {
          id v14 = 0;
        }
        id v15 = v14;
        int v16 = 138543362;
        id v17 = v15;
        _os_log_error_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "remote_publishClassGraph failedMembers: %{public}@", (uint8_t *)&v16, 0xCu);
      }
    }
  }
  uint64_t v11 = *(void *)(a1 + 32);
  id v12 = [v3 operationError];
  (*(void (**)(uint64_t, BOOL, id))(v11 + 16))(v11, v12 == 0, v4);
}

void sub_10003A2AC(uint64_t a1, void *a2)
{
  if (a2)
  {
    uint64_t v3 = *(void **)(a1 + 32);
    id v4 = a2;
    [v3 addObject:v4];
    id v5 = *(void **)(a1 + 40);
    id v6 = [v4 objectID];

    [v5 addObject:v6];
  }
}

id *sub_10003A334(id *result, uint64_t a2)
{
  if (a2) {
    return (id *)[result[4] addObject:a2];
  }
  return result;
}

void sub_10003A348(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = a2;
  id v4 = v3;
  if (v3) {
    id v5 = *(void **)(v3 + 251);
  }
  else {
    id v5 = 0;
  }
  id v7 = v5;
  id v6 = sub_100078F84((uint64_t)v4);

  (*(void (**)(uint64_t, id, void *))(v2 + 16))(v2, v7, v6);
}

void sub_10003A670(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 responseStatusError];
  if (v4) {
    [v3 responseStatusError];
  }
  else {
  id v5 = [v3 operationError];
  }

  (*(void (**)(void, BOOL))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), v5 == 0);
}

void sub_10003AAB4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 operationError];

  if (v4)
  {
    id v5 = [v3 operationError];
    CLSInitLog();
    id v6 = [v3 logSubsystem];
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v11 = [v3 operationID];
      id v12 = [v5 domain];
      int v15 = 138544130;
      int v16 = v11;
      __int16 v17 = 2112;
      unsigned int v18 = v12;
      __int16 v19 = 2048;
      id v20 = [v5 code];
      __int16 v21 = 2114;
      uint64_t v22 = v5;
      _os_log_debug_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "publishAdminRequest op:%{public}@ returning domain:%@ code:%ld error: %{public}@", (uint8_t *)&v15, 0x2Au);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    id v8 = [v3 operationError];
    (*(void (**)(uint64_t, void, void *))(v7 + 16))(v7, 0, v8);
  }
  else
  {
    CLSInitLog();
    id v9 = [v3 logSubsystem];
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
    {
      id v13 = [v3 operationID];
      id v14 = [v3 successfulObjects];
      int v15 = 138543618;
      int v16 = v13;
      __int16 v17 = 2114;
      unsigned int v18 = v14;
      _os_log_debug_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "publishAdminRequest op:%{public}@ returning items: %{public}@", (uint8_t *)&v15, 0x16u);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    id v5 = [v3 successfulObjects];
    (*(void (**)(uint64_t, void *, void))(v10 + 16))(v10, v5, 0);
  }
}

void sub_10003B188(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 operationError];

  if (v4)
  {
    id v5 = [v3 operationError];
    CLSInitLog();
    id v6 = [v3 logSubsystem];
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v10 = [v3 operationID];
      uint64_t v11 = [v5 domain];
      int v13 = 138544130;
      id v14 = v10;
      __int16 v15 = 2112;
      int v16 = v11;
      __int16 v17 = 2048;
      id v18 = [v5 code];
      __int16 v19 = 2114;
      id v20 = v5;
      _os_log_debug_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "relayRequest op:%{public}@ returning domain:%@ code:%ld error: %{public}@", (uint8_t *)&v13, 0x2Au);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    id v8 = [v3 operationError];
    (*(void (**)(uint64_t, void, void *))(v7 + 16))(v7, 0, v8);
  }
  else
  {
    CLSInitLog();
    id v9 = [v3 logSubsystem];
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
    {
      id v12 = [v3 operationID];
      int v13 = 138543362;
      id v14 = v12;
      _os_log_debug_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "relayRequest op:%{public}@ returning success", (uint8_t *)&v13, 0xCu);
    }
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

void sub_10003B558(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([*(id *)(a1 + 32) count])
  {
    CLSInitLog();
    id v4 = (void *)CLSLogSearch;
    if (os_log_type_enabled(CLSLogSearch, OS_LOG_TYPE_DEBUG))
    {
      __int16 v25 = *(void **)(a1 + 32);
      id v26 = v4;
      int v27 = 134217984;
      id v28 = [v25 count];
      _os_log_debug_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEBUG, "Delivering %lu remaining objects.", (uint8_t *)&v27, 0xCu);
    }
    objc_msgSend(*(id *)(a1 + 40), "clientRemote_deliverObject:", *(void *)(a1 + 32));
    [*(id *)(a1 + 32) removeAllObjects];
  }
  id v5 = [*(id *)(a1 + 48) client];
  id v6 = v5;
  if (v5 && v5[26])
  {
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();

    if (isKindOfClass)
    {
      uint64_t v8 = [v3 operationError];
      if (v8)
      {
        id v9 = (void *)v8;
        CLSInitLog();
        uint64_t v10 = CLSLogSearch;
        if (os_log_type_enabled(CLSLogSearch, OS_LOG_TYPE_DEBUG))
        {
          int v27 = 138412290;
          id v28 = v9;
          _os_log_debug_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "Finishing query (ASM) with error: %@.", (uint8_t *)&v27, 0xCu);
        }
        goto LABEL_23;
      }
    }
  }
  else
  {
  }
  CLSInitLog();
  uint64_t v11 = CLSLogSearch;
  if (os_log_type_enabled(CLSLogSearch, OS_LOG_TYPE_DEBUG))
  {
    LOWORD(v27) = 0;
    _os_log_debug_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "Finishing query (ASM).", (uint8_t *)&v27, 2u);
  }
  id v12 = [*(id *)(a1 + 56) searchString];
  id v13 = [v12 length];

  if ((unint64_t)v13 >= 2)
  {
    id v14 = [v3 stats];
    if (!v14 || (uint64_t v15 = v14[13], v14, !v15))
    {
      CLSInitLog();
      int v16 = (void *)CLSLogSearch;
      if (os_log_type_enabled(CLSLogSearch, OS_LOG_TYPE_INFO))
      {
        __int16 v17 = *(void **)(a1 + 56);
        id v18 = v16;
        __int16 v19 = [v17 searchString];
        int v27 = 138412290;
        id v28 = v19;
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_INFO, "Adding '%@' to search cache", (uint8_t *)&v27, 0xCu);
      }
      id v20 = +[PDASMSearchStringCache shared];
      __int16 v21 = [*(id *)(a1 + 56) searchString];
      uint64_t v22 = *(void *)(a1 + 64);
      if (v22) {
        double v23 = (double)(*(void *)(v22 + 64) - 60);
      }
      else {
        double v23 = -60.0;
      }
      id v24 = +[NSDate dateWithTimeIntervalSinceNow:v23];
      [v20 addToCache:v21 expires:v24];
    }
  }
  id v9 = 0;
LABEL_23:
  objc_msgSend(*(id *)(a1 + 40), "clientRemote_finishWithOffset:error:", *(void *)(a1 + 72), v9);
}

void sub_10003BB40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10003BB58(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) database];
  id v3 = [*(id *)(a1 + 40) identifierPath];
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = sub_100142EB0((uint64_t)v2, v3);

  if (*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) == 2)
  {
    id v4 = [*(id *)(a1 + 32) database];
    if (v4)
    {
      id v5 = v4;
      unsigned __int8 v6 = sub_100004B84(v4);

      if ((v6 & 2) != 0) {
        *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 0;
      }
    }
    else
    {
    }
  }
}

void sub_10003BD64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10003BD7C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) database];
  id v3 = [*(id *)(a1 + 40) parentObjectID];
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = sub_10001BC90((uint64_t)v2, v3);

  if (*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) == 2)
  {
    id v4 = [*(id *)(a1 + 32) database];
    if (v4)
    {
      id v5 = v4;
      unsigned __int8 v6 = sub_100004B84(v4);

      if ((v6 & 2) != 0) {
        *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 0;
      }
    }
    else
    {
    }
  }
}

void sub_10003BF34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10003BF4C(uint64_t a1)
{
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [*(id *)(a1 + 40) _authorizationStatusForContext:*(void *)(a1 + 32)];
    return;
  }
  uint64_t v2 = CLSContextClasses();
  unsigned int v3 = [v2 containsObject:objc_opt_class()];

  if (v3)
  {
LABEL_7:
    unsigned __int8 v6 = *(void **)(a1 + 40);
    id v10 = [*(id *)(a1 + 32) parentObjectID];
    id v7 = [v6 _authorizationStatusForContextWithObjectID:v10];
    goto LABEL_12;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v4 = *(void **)(a1 + 40);
    id v5 = [*(id *)(a1 + 32) parentObjectID];
    *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [v4 _authorizationStatusForHandoutAssignedItem:v5];

    if (*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) == 1) {
      return;
    }
    goto LABEL_7;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0
    || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)
    || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    uint64_t v8 = *(void **)(a1 + 40);
    id v10 = [*(id *)(a1 + 32) parentObjectID];
    id v7 = [v8 _authorizationStatusActivityWithID:v10];
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      return;
    }
    id v9 = *(void **)(a1 + 40);
    id v10 = [*(id *)(a1 + 32) objectID];
    id v7 = [v9 _authorizationStatusForHandoutAssignedItem:v10];
  }
LABEL_12:
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = v7;
}

void sub_10003C3E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10003C3FC(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    unsigned int v3 = objc_opt_new();
    long long v15 = 0u;
    long long v16 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v4 = WeakRetained[5];
    id v5 = [v4 countByEnumeratingWithState:&v13 objects:v18 count:16];
    if (v5)
    {
      id v6 = v5;
      uint64_t v7 = *(void *)v14;
      do
      {
        for (i = 0; i != v6; i = (char *)i + 1)
        {
          if (*(void *)v14 != v7) {
            objc_enumerationMutation(v4);
          }
          objc_msgSend(WeakRetained[5], "objectForKeyedSubscript:", *(void *)(*((void *)&v13 + 1) + 8 * i), (void)v13);
          id v9 = (Class *)objc_claimAutoreleasedReturnValue();
          id v10 = v9;
          if (v9)
          {
            uint64_t v11 = sub_1000D5DA8(v9);
            [v3 addObject:v11];
          }
        }
        id v6 = [v4 countByEnumeratingWithState:&v13 objects:v18 count:16];
      }
      while (v6);
    }

    [*(id *)(a1 + 32) setObject:v3 forKeyedSubscript:@"Data observers"];
  }
  else
  {
    CLSInitLog();
    id v12 = CLSLogOperations;
    if (os_log_type_enabled(CLSLogOperations, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)long long buf = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "PDEndpointServer self went away while trying to statusReport", buf, 2u);
    }
  }
}

void sub_10003C73C(id a1)
{
  uint64_t v1 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  attr = dispatch_queue_attr_make_with_qos_class(v1, QOS_CLASS_USER_INITIATED, 0);

  uint64_t v2 = dispatch_get_global_queue(25, 0);
  dispatch_queue_t v3 = dispatch_queue_create_with_target_V2("com.apple.progressd.endpointServer", attr, v2);
  id v4 = (void *)qword_10023E450;
  qword_10023E450 = (uint64_t)v3;
}

uint64_t sub_10003D4EC(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 32;
        goto LABEL_39;
      case 2u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 56;
        goto LABEL_39;
      case 3u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 16;
        goto LABEL_39;
      case 4u:
        char v15 = 0;
        unsigned int v16 = 0;
        uint64_t v17 = 0;
        *(unsigned char *)(a1 + 64) |= 1u;
        while (2)
        {
          unint64_t v18 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v18 == -1 || v18 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v19 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v18);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v18 + 1;
            v17 |= (unint64_t)(v19 & 0x7F) << v15;
            if (v19 < 0)
            {
              v15 += 7;
              BOOL v9 = v16++ >= 9;
              if (v9)
              {
                LODWORD(v17) = 0;
                goto LABEL_43;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v17) = 0;
        }
LABEL_43:
        uint64_t v25 = 24;
        goto LABEL_48;
      case 5u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v17 = 0;
        *(unsigned char *)(a1 + 64) |= 2u;
        break;
      case 6u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 48;
        goto LABEL_39;
      case 7u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 8;
LABEL_39:
        id v24 = *(void **)(a1 + v13);
        *(void *)(a1 + v13) = v12;

        continue;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        continue;
    }
    while (1)
    {
      unint64_t v22 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v22 == -1 || v22 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v23 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v22);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v22 + 1;
      v17 |= (unint64_t)(v23 & 0x7F) << v20;
      if ((v23 & 0x80) == 0) {
        goto LABEL_45;
      }
      v20 += 7;
      BOOL v9 = v21++ >= 9;
      if (v9)
      {
        LODWORD(v17) = 0;
        goto LABEL_47;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_45:
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      LODWORD(v17) = 0;
    }
LABEL_47:
    uint64_t v25 = 40;
LABEL_48:
    *(_DWORD *)(a1 + v25) = v17;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

uint64_t sub_10003E404(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    unint64_t v12 = v6 >> 3;
    if ((v6 >> 3) == 3)
    {
      char v15 = objc_alloc_init(PDDPStatus);
      objc_storeStrong((id *)(a1 + 16), v15);
      if (!PBReaderPlaceMark() || (sub_1000D3710((uint64_t)v15, a2) & 1) == 0)
      {

        return 0;
      }
      PBReaderRecallMark();
    }
    else if (v12 == 2)
    {
      char v16 = 0;
      unsigned int v17 = 0;
      uint64_t v18 = 0;
      *(unsigned char *)(a1 + 28) |= 1u;
      while (1)
      {
        unint64_t v19 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v19 == -1 || v19 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v20 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v19);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v19 + 1;
        v18 |= (unint64_t)(v20 & 0x7F) << v16;
        if ((v20 & 0x80) == 0) {
          goto LABEL_34;
        }
        v16 += 7;
        BOOL v9 = v17++ >= 9;
        if (v9)
        {
          LODWORD(v18) = 0;
          goto LABEL_36;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_34:
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        LODWORD(v18) = 0;
      }
LABEL_36:
      *(_DWORD *)(a1 + 24) = v18;
    }
    else if (v12 == 1)
    {
      uint64_t v13 = PBReaderReadString();
      long long v14 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = v13;
    }
    else
    {
      uint64_t result = PBReaderSkipValueWithTag();
      if (!result) {
        return result;
      }
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

uint64_t sub_10003FCD0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    unint64_t v12 = v6 >> 3;
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 24;
        goto LABEL_65;
      case 2u:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 80;
        goto LABEL_65;
      case 3u:
        char v15 = objc_alloc_init(PDDPDate);
        uint64_t v16 = 56;
        goto LABEL_26;
      case 4u:
        char v15 = objc_alloc_init(PDDPDate);
        uint64_t v16 = 64;
        goto LABEL_26;
      case 5u:
        char v15 = objc_alloc_init(PDDPDate);
        uint64_t v16 = 48;
LABEL_26:
        objc_storeStrong((id *)(a1 + v16), v15);
        if (!PBReaderPlaceMark() || (PDDPDateReadFrom((uint64_t)v15, a2) & 1) == 0) {
          goto LABEL_89;
        }
        goto LABEL_55;
      case 6u:
        char v15 = objc_alloc_init(PDDPStatus);
        objc_storeStrong((id *)(a1 + 104), v15);
        if (!PBReaderPlaceMark() || (sub_1000D3710((uint64_t)v15, a2) & 1) == 0) {
          goto LABEL_89;
        }
        goto LABEL_55;
      case 7u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 116) |= 8u;
        while (2)
        {
          unint64_t v20 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v20 == -1 || v20 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v21 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v20);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v20 + 1;
            v19 |= (unint64_t)(v21 & 0x7F) << v17;
            if (v21 < 0)
            {
              v17 += 7;
              BOOL v9 = v18++ >= 9;
              if (v9)
              {
                LODWORD(v19) = 0;
                goto LABEL_73;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v19) = 0;
        }
LABEL_73:
        uint64_t v36 = 112;
        goto LABEL_86;
      case 8u:
        char v22 = 0;
        unsigned int v23 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 116) |= 4u;
        while (2)
        {
          unint64_t v24 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v24 == -1 || v24 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v24);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v24 + 1;
            v19 |= (unint64_t)(v25 & 0x7F) << v22;
            if (v25 < 0)
            {
              v22 += 7;
              BOOL v9 = v23++ >= 9;
              if (v9)
              {
                LODWORD(v19) = 0;
                goto LABEL_77;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v19) = 0;
        }
LABEL_77:
        uint64_t v36 = 88;
        goto LABEL_86;
      case 9u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 116) |= 1u;
        while (2)
        {
          unint64_t v28 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v28 == -1 || v28 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v29 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v28);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v28 + 1;
            v19 |= (unint64_t)(v29 & 0x7F) << v26;
            if (v29 < 0)
            {
              v26 += 7;
              BOOL v9 = v27++ >= 9;
              if (v9)
              {
                LODWORD(v19) = 0;
                goto LABEL_81;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v19) = 0;
        }
LABEL_81:
        uint64_t v36 = 32;
        goto LABEL_86;
      case 0xAu:
        char v15 = objc_alloc_init(PDDPAdminRequestRequestor);
        objc_storeStrong((id *)(a1 + 96), v15);
        if PBReaderPlaceMark() && (sub_1000A6418((uint64_t)v15, a2))
        {
LABEL_55:
          PBReaderRecallMark();
LABEL_56:

LABEL_87:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }
LABEL_89:

        return 0;
      case 0xBu:
        char v30 = 0;
        unsigned int v31 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 116) |= 2u;
        while (2)
        {
          unint64_t v32 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v32 == -1 || v32 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v33 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v32);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v32 + 1;
            v19 |= (unint64_t)(v33 & 0x7F) << v30;
            if (v33 < 0)
            {
              v30 += 7;
              BOOL v9 = v31++ >= 9;
              if (v9)
              {
                LODWORD(v19) = 0;
                goto LABEL_85;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v19) = 0;
        }
LABEL_85:
        uint64_t v36 = 72;
LABEL_86:
        *(_DWORD *)(a1 + v36) = v19;
        goto LABEL_87;
      case 0xCu:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 40;
        goto LABEL_65;
      default:
        if (v12 == 100)
        {
          PBReaderReadString();
          char v15 = (PDDPDate *)objc_claimAutoreleasedReturnValue();
          if (v15) {
            [(id)a1 addAdminRequestAccountIds:v15];
          }
          goto LABEL_56;
        }
        if (v12 == 200)
        {
          uint64_t v13 = PBReaderReadString();
          uint64_t v14 = 8;
LABEL_65:
          uint64_t v34 = *(void **)(a1 + v14);
          *(void *)(a1 + v14) = v13;
        }
        else
        {
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
        }
        goto LABEL_87;
    }
  }
}

void sub_1000416C0(id a1)
{
  int v1 = setiopolicy_np(3, 0, 2);
  CLSInitLog();
  uint64_t v2 = CLSLogDefault;
  if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_DEBUG))
  {
    v3[0] = 67109120;
    v3[1] = v1;
    _os_log_debug_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "_schoolworkUbiquitousContainerURL - setiopolicy_np() returned status: %d", (uint8_t *)v3, 8u);
  }
}

void sub_10004188C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  CLSInitLog();
  unint64_t v7 = CLSLogAuthorization;
  if (a2)
  {
    if (os_log_type_enabled(CLSLogAuthorization, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v8) = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Successfully fetched ORG admin user recordID", (uint8_t *)&v8, 2u);
    }
  }
  else if (os_log_type_enabled(CLSLogAuthorization, OS_LOG_TYPE_ERROR))
  {
    int v8 = 138543362;
    id v9 = v5;
    _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "ORG admin user not found; error: %{public}@",
      (uint8_t *)&v8,
      0xCu);
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100041AB4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  CLSInitLog();
  unint64_t v7 = CLSLogAuthorization;
  if (a2)
  {
    if (os_log_type_enabled(CLSLogAuthorization, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v8) = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Successfully fetched current user recordID", (uint8_t *)&v8, 2u);
    }
  }
  else if (os_log_type_enabled(CLSLogAuthorization, OS_LOG_TYPE_ERROR))
  {
    int v8 = 138543362;
    id v9 = v5;
    _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Current user not found; error: %{public}@",
      (uint8_t *)&v8,
      0xCu);
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100041DB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_100041DD8(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(a1[5] + 8);
  int v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v12 = v5;

  uint64_t v9 = *(void *)(a1[6] + 8);
  int v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
  id v11 = v6;

  (*(void (**)(void))(a1[4] + 16))();
}

void sub_10004204C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_100042074(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(a1[5] + 8);
  int v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v5;
  id v12 = v5;

  uint64_t v9 = *(void *)(a1[6] + 8);
  int v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v6;
  id v11 = v6;

  (*(void (**)(void))(a1[4] + 16))();
}

void sub_1000422FC(uint64_t a1)
{
}

void sub_100042308(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = self;
  uint64_t v22 = 0;
  unsigned int v23 = &v22;
  uint64_t v24 = 0x2020000000;
  char v25 = 0;
  uint64_t v18 = 0;
  uint64_t v19 = &v18;
  uint64_t v20 = 0x2020000000;
  char v21 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = &v12;
  uint64_t v14 = 0x3032000000;
  char v15 = sub_10000B644;
  uint64_t v16 = sub_10000B53C;
  id v17 = (id)qword_10023E460;
  uint64_t v6 = 0;
  uint64_t v7 = &v6;
  uint64_t v8 = 0x3032000000;
  uint64_t v9 = sub_10000B644;
  int v10 = sub_10000B53C;
  id v11 = (id)qword_10023E460;
  char v4 = sub_100006464();
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100042534;
  block[3] = &unk_1001F2A20;
  block[7] = &v18;
  block[8] = v3;
  void block[4] = &v6;
  void block[5] = &v22;
  block[6] = &v12;
  dispatch_sync(v4, block);

  if (v2) {
    (*((void (**)(id, void, void, uint64_t, uint64_t))v2 + 2))(v2, *((unsigned __int8 *)v23 + 24), *((unsigned __int8 *)v19 + 24), v13[5], v7[5]);
  }
  _Block_object_dispose(&v6, 8);

  _Block_object_dispose(&v12, 8);
  _Block_object_dispose(&v18, 8);
  _Block_object_dispose(&v22, 8);
}

void sub_1000424F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  uint64_t v19 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v11 - 144), 8);
  _Block_object_dispose((const void *)(v11 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_100042534(id *a1)
{
  sub_1001381C0();
  uint64_t v6 = [a1[8] accountInfo];
  uint64_t v7 = (void *)qword_10023E460;
  qword_10023E460 = (uint64_t)v6;

  objc_storeStrong((id *)(*((void *)a1[4] + 1) + 40), v6);
  uint64_t v8 = *(void *)(*((void *)a1[4] + 1) + 40);
  if (v8 && (id v9 = *(id *)(v8 + 32)) != 0)
  {
    int v10 = v9;
    int v11 = 0;
  }
  else
  {
    uint64_t v12 = *(void *)(*((void *)a1[6] + 1) + 40);
    if (!v12)
    {
      int v10 = 0;
      char v21 = 0;
      int v1 = 0;
      int v11 = 1;
      goto LABEL_22;
    }
    id v13 = *(id *)(v12 + 32);
    int v10 = 0;
    int v11 = 1;
    if (!v13)
    {
      char v21 = 0;
      int v1 = 0;
      goto LABEL_22;
    }
    int v1 = v13;
  }
  uint64_t v14 = *(void *)(*((void *)a1[4] + 1) + 40);
  if (!v14 || (id v15 = *(id *)(v14 + 32)) == 0)
  {
    *(unsigned char *)(*((void *)a1[5] + 1) + 24) = 1;
    if ((v11 & 1) == 0) {
      goto LABEL_43;
    }
LABEL_42:

    goto LABEL_43;
  }
  id v2 = v15;
  uint64_t v16 = *(void *)(*((void *)a1[6] + 1) + 40);
  if (!v16 || (id v17 = *(id *)(v16 + 32)) == 0)
  {
    *(unsigned char *)(*((void *)a1[5] + 1) + 24) = 1;
    goto LABEL_41;
  }
  id v3 = v17;
  uint64_t v18 = *(void **)(*((void *)a1[4] + 1) + 40);
  if (v18) {
    uint64_t v18 = (void *)v18[4];
  }
  uint64_t v4 = v18;
  uint64_t v19 = *(void **)(*((void *)a1[6] + 1) + 40);
  if (v19) {
    uint64_t v19 = (void *)v19[4];
  }
  uint64_t v20 = v19;
  char v21 = 1;
  if (![(id)v4 isEqualToString:v20])
  {
    *(unsigned char *)(*((void *)a1[5] + 1) + 24) = 1;

LABEL_40:
LABEL_41:

    if ((v11 & 1) == 0) {
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  uint64_t v62 = v20;
  id v63 = (void *)v4;
LABEL_22:
  uint64_t v22 = *(void *)(*((void *)a1[4] + 1) + 40);
  if (v22 && (id v23 = *(id *)(v22 + 40)) != 0)
  {
    uint64_t v24 = v23;
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v25 = *(void *)(*((void *)a1[6] + 1) + 40);
    if (!v25 || (id v26 = *(id *)(v25 + 40)) == 0)
    {
      *(unsigned char *)(*((void *)a1[5] + 1) + 24) = 0;
      if (v21) {
        goto LABEL_39;
      }
      goto LABEL_98;
    }
    id v59 = v26;
    uint64_t v24 = 0;
    uint64_t v4 = 1;
  }
  uint64_t v27 = *(void *)(*((void *)a1[4] + 1) + 40);
  if (!v27 || (id v28 = *(id *)(v27 + 40)) == 0)
  {
    *(unsigned char *)(*((void *)a1[5] + 1) + 24) = 1;
    if ((v4 & 1) == 0) {
      goto LABEL_38;
    }
    goto LABEL_37;
  }
  char v29 = v28;
  char v64 = v21;
  uint64_t v30 = *(void *)(*((void *)a1[6] + 1) + 40);
  if (!v30 || (id v31 = *(id *)(v30 + 40)) == 0)
  {
    *(unsigned char *)(*((void *)a1[5] + 1) + 24) = 1;

    if ((v4 & 1) == 0) {
      goto LABEL_38;
    }
LABEL_37:

    goto LABEL_38;
  }
  unint64_t v32 = v31;
  char v60 = v4;
  uint64_t v33 = *(void *)(*((void *)a1[4] + 1) + 40);
  if (v33) {
    uint64_t v34 = *(void **)(v33 + 40);
  }
  else {
    uint64_t v34 = 0;
  }
  __int16 v35 = *(void **)(*((void *)a1[6] + 1) + 40);
  double v61 = v1;
  if (v35) {
    __int16 v35 = (void *)v35[5];
  }
  uint64_t v36 = v35;
  uint64_t v4 = v34;
  *(unsigned char *)(*((void *)a1[5] + 1) + 24) = [(id)v4 isEqualToString:v36] ^ 1;

  int v1 = v61;
  char v21 = v64;
  if (v60) {
    goto LABEL_37;
  }
LABEL_38:

  if (v21)
  {
LABEL_39:

    goto LABEL_40;
  }
LABEL_98:
  if (v11) {
    goto LABEL_42;
  }
LABEL_43:

  id v37 = *(_DWORD **)(*((void *)a1[6] + 1) + 40);
  if (v37) {
    int v38 = v37[3];
  }
  else {
    int v38 = 0;
  }
  id v39 = *(_DWORD **)(*((void *)a1[4] + 1) + 40);
  if (v39) {
    int v40 = v39[3];
  }
  else {
    int v40 = 0;
  }
  if (v38 != v40) {
    goto LABEL_57;
  }
  if (v37)
  {
    int v41 = v37[4];
    if (v39)
    {
LABEL_50:
      int v42 = v39[4];
      goto LABEL_51;
    }
  }
  else
  {
    int v41 = 0;
    if (v39) {
      goto LABEL_50;
    }
  }
  int v42 = 0;
LABEL_51:
  if (v41 != v42)
  {
LABEL_57:
    BOOL v43 = 1;
    goto LABEL_58;
  }
  if (v37) {
    LODWORD(v37) = v37[5];
  }
  if (v39) {
    LODWORD(v39) = v39[5];
  }
  BOOL v43 = v37 != v39;
LABEL_58:
  *(unsigned char *)(*((void *)a1[7] + 1) + 24) = v43;
  if (*(unsigned char *)(*((void *)a1[5] + 1) + 24) || *(unsigned char *)(*((void *)a1[7] + 1) + 24))
  {
    CLSInitLog();
    long long v44 = CLSLogDefault;
    int v1 = &unk_10019B000;
    if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_INFO))
    {
      uint64_t v45 = *(void *)(*((void *)a1[6] + 1) + 40);
      *(_DWORD *)long long buf = 138412290;
      uint64_t v66 = v45;
      _os_log_impl((void *)&_mh_execute_header, v44, OS_LOG_TYPE_INFO, "oldAccountInfo: %@", buf, 0xCu);
    }
    CLSInitLog();
    id v46 = CLSLogDefault;
    if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_INFO))
    {
      uint64_t v47 = *(void *)(*((void *)a1[4] + 1) + 40);
      *(_DWORD *)long long buf = 138412290;
      uint64_t v66 = v47;
      _os_log_impl((void *)&_mh_execute_header, v46, OS_LOG_TYPE_INFO, "newAccountInfo: %@", buf, 0xCu);
    }
  }
  if (qword_10023E460 && (id v48 = *(id *)(qword_10023E460 + 72)) != 0)
  {
    long long v49 = v48;
    int v50 = 0;
  }
  else
  {
    uint64_t v51 = *(void *)(*((void *)a1[6] + 1) + 40);
    if (!v51) {
      return;
    }
    id v52 = *(id *)(v51 + 72);
    if (!v52) {
      return;
    }
    int v1 = v52;
    long long v49 = 0;
    int v50 = 1;
  }
  LODWORD(v53) = qword_10023E460;
  BOOL v54 = qword_10023E460 != 0;
  if (!qword_10023E460)
  {
    id v55 = 0;
LABEL_103:
    id v3 = 0;
    goto LABEL_85;
  }
  id v55 = *(id *)(qword_10023E460 + 72);
  if (!v55)
  {
    BOOL v54 = 0;
    LODWORD(v53) = 0;
    goto LABEL_85;
  }
  uint64_t v53 = *(void *)(*((void *)a1[6] + 1) + 40);
  if (!v53) {
    goto LABEL_103;
  }
  id v3 = *(id *)(v53 + 72);
  if (v3)
  {
    unsigned int v56 = (void *)qword_10023E460;
    if (qword_10023E460) {
      unsigned int v56 = *(void **)(qword_10023E460 + 72);
    }
    uint64_t v4 = v56;
    os_log_t v57 = *(void **)(*((void *)a1[6] + 1) + 40);
    if (v57) {
      os_log_t v57 = (void *)v57[9];
    }
    a1 = v57;
    if ([(id)v4 isEqualToString:a1])
    {

      if (v50) {
      return;
      }
    }
    BOOL v54 = 1;
    LODWORD(v53) = 1;
  }
  else
  {
    LODWORD(v53) = 0;
    BOOL v54 = 1;
  }
LABEL_85:
  if (qword_10023E460)
  {
    uint64_t v58 = *(void *)(qword_10023E460 + 72);
    if (v53) {
      goto LABEL_87;
    }
  }
  else
  {
    uint64_t v58 = 0;
    if (v53)
    {
LABEL_87:

      if (!v54) {
        goto LABEL_88;
      }
      goto LABEL_106;
    }
  }
  if (!v54)
  {
LABEL_88:

    if (!v50) {
      goto LABEL_90;
    }
    goto LABEL_89;
  }
LABEL_106:

  if (v50) {
LABEL_89:
  }

LABEL_90:
  if (v58) {
    CLSAdoptPersona();
  }
}

void sub_100042BF0(id a1, NSError *a2)
{
  id v2 = a2;
  qos_class_t v3 = qos_class_self();
  uint64_t v4 = dispatch_get_global_queue(v3, 0);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100042CA0;
  block[3] = &unk_1001F2A68;
  uint64_t v7 = v2;
  id v5 = v2;
  dispatch_async(v4, block);
}

void sub_100042CA0(uint64_t a1)
{
  atomic_store(0, byte_10023E470);
  uint64_t v2 = *(void *)(a1 + 32);
  CLSInitLog();
  qos_class_t v3 = CLSLogDefault;
  if (v2)
  {
    if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_ERROR))
    {
      uint64_t v11 = *(void *)(a1 + 32);
      *(_DWORD *)long long buf = 138543362;
      uint64_t v19 = v11;
      _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Failed to get iCloud Drive initial sync state. Error: %{public}@", buf, 0xCu);
    }
    uint64_t v4 = +[NSNotificationCenter defaultCenter];
    uint64_t v14 = CLSiCloudDriveInitialSyncStatusKey;
    uint64_t v15 = CLSiCloudDriveInitialSyncErrorKey;
    uint64_t v5 = CLSInitialiCloudDriveSyncCompleteNotificationName;
    uint64_t v6 = *(void *)(a1 + 32);
    uint64_t v16 = &__kCFBooleanFalse;
    uint64_t v17 = v6;
    uint64_t v7 = &v16;
    uint64_t v8 = &v14;
    uint64_t v9 = 2;
  }
  else
  {
    if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "iCloud Drive initial sync complete", buf, 2u);
    }
    uint64_t v4 = +[NSNotificationCenter defaultCenter];
    uint64_t v5 = CLSInitialiCloudDriveSyncCompleteNotificationName;
    uint64_t v12 = CLSiCloudDriveInitialSyncStatusKey;
    id v13 = &__kCFBooleanTrue;
    uint64_t v7 = &v13;
    uint64_t v8 = &v12;
    uint64_t v9 = 1;
  }
  int v10 = +[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v7, v8, v9, v12, v13, v14, v15, v16, v17);
  [v4 postNotificationName:v5 object:0 userInfo:v10];
}

_WORD *sub_100043254(_WORD *a1, void *a2)
{
  id v4 = a2;
  if (a1)
  {
    v7.receiver = a1;
    v7.super_class = (Class)PDAccountInfo;
    id v5 = objc_msgSendSuper2(&v7, "init");
    a1 = v5;
    if (v5)
    {
      objc_storeStrong((id *)v5 + 3, a2);
      a1[5] = 257;
    }
  }

  return a1;
}

void sub_1000432D4(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 72) tokenForAccount:*(void *)(a1 + 40) withAltDSID:*(void *)(a1 + 48) forService:@"com.apple.gs.orion.ingest" fromAccountStore:*(void *)(a1 + 56)];
  sub_1000435F8(*(void *)(a1 + 32), v2);

  qos_class_t v3 = [*(id *)(a1 + 72) tokenForAccount:*(void *)(a1 + 40) withAltDSID:*(void *)(a1 + 48) forService:@"com.apple.gs.ee.search" fromAccountStore:*(void *)(a1 + 56)];
  sub_100043608(*(void *)(a1 + 32), v3);

  id v4 = *(void **)(a1 + 32);
  id v20 = 0;
  id v5 = sub_1000D1688((uint64_t)PDFileManager, v4, &v20);
  id v6 = v20;
  id v7 = v20;
  CLSInitLog();
  uint64_t v8 = CLSLogDefault;
  if (v7)
  {
    if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 138543362;
      id v22 = v7;
      _os_log_error_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "Failed to get the multimedia cache directory URL. Error: %{public}@", buf, 0xCu);
    }
  }
  else if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)long long buf = 138412290;
    id v22 = v5;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Multimedia cache directory URL: %@", buf, 0xCu);
  }
  uint64_t v9 = *(void *)(a1 + 32);
  if (v9)
  {
    objc_storeStrong((id *)(v9 + 128), v5);
    uint64_t v10 = *(void *)(a1 + 32);
    if (v10) {
      objc_storeStrong((id *)(v10 + 136), v6);
    }
  }

  uint64_t v11 = *(void **)(a1 + 72);
  id v19 = 0;
  uint64_t v12 = [v11 _schoolworkUbiquitousContainerURL:&v19];
  id v13 = v19;
  id v14 = v19;
  CLSInitLog();
  uint64_t v15 = CLSLogDefault;
  if (v14)
  {
    if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 138543362;
      id v22 = v14;
      _os_log_error_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, "Failed to get the ubiquity container URL. Error: %{public}@", buf, 0xCu);
    }
  }
  else if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)long long buf = 138412290;
    id v22 = v12;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "Ubiquity Container URL: %@", buf, 0xCu);
  }
  uint64_t v16 = *(void *)(a1 + 32);
  if (v16)
  {
    objc_storeStrong((id *)(v16 + 80), v12);
    uint64_t v17 = *(void *)(a1 + 32);
    if (v17) {
      objc_storeStrong((id *)(v17 + 88), v13);
    }
  }
  if ([*(id *)(a1 + 64) isAuthenticated])
  {
    [*(id *)(a1 + 32) _updateOrgAdminUserRecordID];
    [*(id *)(a1 + 32) _updateUserRecordID];
  }
  if ((atomic_exchange((atomic_uchar *volatile)byte_10023E470, 1u) & 1) == 0)
  {
    CLSInitLog();
    uint64_t v18 = CLSLogDefault;
    if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_INFO, "Checking iCloud Drive initial sync completion state", buf, 2u);
    }
    [*(id *)(a1 + 72) checkForiCloudDriveInitialSync];
  }
}

void sub_1000435F8(uint64_t a1, void *a2)
{
  if (a1) {
    objc_storeStrong((id *)(a1 + 48), a2);
  }
}

void sub_100043608(uint64_t a1, void *a2)
{
  if (a1) {
    objc_storeStrong((id *)(a1 + 56), a2);
  }
}

void sub_100043618(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v5 = a2;
  id v6 = a4;
  self;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_10004375C;
  void v12[3] = &unk_1001F2AE0;
  id v13 = v6;
  id v7 = v6;
  uint64_t v10 = v5;
  uint64_t v11 = objc_retainBlock(v12);
  uint64_t v8 = v11;
  id v9 = v5;
  CLSPerformWithPersona();
}

void sub_10004375C(uint64_t a1, char a2, uint64_t a3, void *a4)
{
  id v7 = a4;
  qos_class_t v8 = qos_class_self();
  id v9 = dispatch_get_global_queue(v8, 0);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  void v11[2] = sub_100043844;
  v11[3] = &unk_1001F2AB8;
  uint64_t v14 = a3;
  id v12 = v7;
  id v13 = *(id *)(a1 + 32);
  char v15 = a2;
  id v10 = v7;
  dispatch_async(v9, v11);
}

uint64_t sub_100043844(void *a1)
{
  if (a1[6])
  {
    CLSInitLog();
    uint64_t v2 = CLSLogAuthorization;
    if (os_log_type_enabled(CLSLogAuthorization, OS_LOG_TYPE_ERROR))
    {
      uint64_t v5 = a1[4];
      int v6 = 138412290;
      uint64_t v7 = v5;
      _os_log_error_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "renewCredentialsForAccount failed with error:%@. Setting roster and handout authentication states to CLSAuthenticationStateInvalid.", (uint8_t *)&v6, 0xCu);
    }
    uint64_t v3 = sub_1000062FC();
    if (v3) {
      *(void *)(v3 + 12) = 0x100000001;
    }
  }
  return (*(uint64_t (**)(void))(a1[5] + 16))();
}

void sub_10004393C(uint64_t a1)
{
  uint64_t v2 = +[ACAccountStore defaultStore];
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(a1 + 32);
  if (v4) {
    uint64_t v5 = *(void *)(v4 + 40);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = objc_msgSend(v2, "aida_accountForAltDSID:", v5);
  uint64_t v7 = (void *)v6;
  if (v3) {
    BOOL v8 = v6 == 0;
  }
  else {
    BOOL v8 = 1;
  }
  if (v8)
  {
    if (v3)
    {
      if (v6) {
        goto LABEL_13;
      }
      CFStringRef v9 = @"PDAccountInfo renewCredentialsForAccount has no account.";
    }
    else
    {
      CFStringRef v9 = @"PDAccountInfo renewCredentialsForAccount has no accountStore.";
    }
    uint64_t v14 = +[NSError cls_createErrorWithCode:100 description:v9];
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();

    goto LABEL_13;
  }
  BOOL v10 = *(unsigned char *)(a1 + 48) == 0;
  v19[0] = &__kCFBooleanTrue;
  v18[0] = kACRenewCredentialsShouldForceKey;
  v18[1] = kACRenewCredentialsShouldAvoidUIKey;
  uint64_t v11 = +[NSNumber numberWithBool:v10];
  v19[1] = v11;
  v18[2] = kACRenewCredentialsServicesKey;
  v17[0] = @"com.apple.gs.orion.ingest";
  v17[1] = @"com.apple.gs.ee.search";
  id v12 = +[NSArray arrayWithObjects:v17 count:2];
  v19[2] = v12;
  id v13 = +[NSDictionary dictionaryWithObjects:v19 forKeys:v18 count:3];

  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_100043B74;
  v15[3] = &unk_1001F2B08;
  id v16 = *(id *)(a1 + 40);
  [v3 renewCredentialsForAccount:v7 options:v13 completion:v15];

LABEL_13:
}

uint64_t sub_100043B74(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100043B90(uint64_t a1, void *a2, uint64_t a3)
{
  id v4 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100043C30;
  v5[3] = &unk_1001F2B50;
  uint64_t v6 = self;
  sub_100043618(v6, v4, a3, v5);
}

void sub_100043C30(uint64_t a1, char a2, uint64_t a3, void *a4)
{
  id v7 = a4;
  CLSInitLog();
  BOOL v8 = CLSLogAuthorization;
  if (a2)
  {
    if (os_log_type_enabled(CLSLogAuthorization, OS_LOG_TYPE_DEFAULT))
    {
      CFStringRef v9 = *(void **)(a1 + 32);
      BOOL v10 = v8;
      uint64_t v11 = [v9 stringFromACAccountCredentialRenewResult:a3];
      int v12 = 138412290;
      id v13 = v11;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "renewCredentialsForAccount result:%@", (uint8_t *)&v12, 0xCu);
    }
    if (!a3)
    {
      sub_100042308((uint64_t)PDAccountInfo, 0);
      +[CLSUtil postNotificationAsync:"com.apple.progressd.accountChanged"];
    }
  }
  else if (os_log_type_enabled(CLSLogAuthorization, OS_LOG_TYPE_ERROR))
  {
    int v12 = 138412290;
    id v13 = v7;
    _os_log_error_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "renewCredentialsForAccount failed with error:%@", (uint8_t *)&v12, 0xCu);
  }
}

void sub_100043D98(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6 = a3;
  self;
  id v7 = sub_1000062FC();
  BOOL v8 = v7;
  if (v7 && v7[3])
  {
    [v7 updateAuthenticationState:a2 forServiceID:v6 userInteractive:a4];
  }
  else
  {
    CLSInitLog();
    CFStringRef v9 = CLSLogDefault;
    if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)BOOL v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "skipping updateAuthenticationState (no current account). refreshing instead.", v10, 2u);
    }
    sub_100042308((uint64_t)PDAccountInfo, 0);
  }
}

void sub_100043E7C(uint64_t a1, void *a2)
{
  id v2 = a2;
  self;
  uint64_t v3 = sub_1000062FC();
  if (v3)
  {
    id v4 = [objc_alloc((Class)AAQuotaInfoRequest) initDetailedRequestWithAccount:v3[3]];
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_10004402C;
    v6[3] = &unk_1001F2B78;
    id v8 = v2;
    id v7 = v3;
    [v4 performRequestWithHandler:v6];
  }
  else
  {
    NSErrorUserInfoKey v9 = NSLocalizedDescriptionKey;
    CFStringRef v10 = @"No valid user logged in.";
    uint64_t v5 = +[NSDictionary dictionaryWithObjects:&v10 forKeys:&v9 count:1];
    id v4 = +[NSError errorWithDomain:CLSErrorCodeDomain code:1 userInfo:v5];

    (*((void (**)(id, void, void, void, id))v2 + 2))(v2, 0, 0, 0, v4);
  }
}

void sub_10004402C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6 = a3;
  id v7 = v6;
  if (a4)
  {
    NSErrorUserInfoKey v15 = NSLocalizedDescriptionKey;
    CFStringRef v16 = @"Error during AAQuotaInfoRequest:performRequestWithHandler:";
    id v8 = +[NSDictionary dictionaryWithObjects:&v16 forKeys:&v15 count:1];
    NSErrorUserInfoKey v9 = +[NSError errorWithDomain:CLSErrorCodeDomain code:303 userInfo:v8];
  }
  else
  {
    uint64_t v11 = [v6 error];
    NSErrorUserInfoKey v9 = v11;
    if (!v11)
    {
      int v12 = [v7 availableStorageInBytes];
      [v12 unsignedIntegerValue];

      id v13 = [v7 usedStorageInBytes];
      [v13 unsignedIntegerValue];

      uint64_t v14 = [v7 totalStorageInBytes];
      [v14 unsignedIntegerValue];

      [*(id *)(a1 + 32) updateAuthenticationState:1 forServiceID:@"iCloudDriveServiceName" userInteractive:1];
      CFStringRef v10 = *(void (**)(void))(*(void *)(a1 + 40) + 16);
      goto LABEL_4;
    }
    if ([v11 code] == (id)401) {
      [*(id *)(a1 + 32) updateAuthenticationState:0 forServiceID:@"iCloudDriveServiceName" userInteractive:1];
    }
  }
  CFStringRef v10 = *(void (**)(void))(*(void *)(a1 + 40) + 16);
LABEL_4:
  v10();
}

uint64_t sub_100044208(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  uint64_t v5 = 0;
  if (a1 && v3)
  {
    if ([v3 isEqualToString:@"orion"])
    {
      uint64_t v6 = 16;
    }
    else if (([v4 isEqualToString:@"apple_school_manager"] & 1) != 0 {
           || ([v4 isEqualToString:@"apple_business_manager"] & 1) != 0)
    }
    {
      uint64_t v6 = 12;
    }
    else
    {
      if (![v4 isEqualToString:@"iCloudDriveServiceName"])
      {
        uint64_t v5 = 0;
        goto LABEL_9;
      }
      uint64_t v6 = 20;
    }
    uint64_t v5 = *(unsigned int *)(a1 + v6);
  }
LABEL_9:

  return v5;
}

BOOL sub_1000442BC(BOOL result)
{
  if (result) {
    return *(void *)(result + 48) && *(void *)(result + 56) != 0;
  }
  return result;
}

void sub_100044604(uint64_t a1)
{
  if (a1)
  {
    v1[0] = 0;
    v1[1] = v1;
    v1[2] = 0x2020000000;
    char v2 = 0;
    CLSPerformWithPersona();
    _Block_object_dispose(v1, 8);
  }
}

void sub_1000446A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000446C0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (!v2) {
    goto LABEL_24;
  }
  id v3 = *(id *)(v2 + 96);
  if (!v3)
  {
    uint64_t v4 = *(void *)(a1 + 32);
    if (v4)
    {
      uint64_t v5 = *(void **)(v4 + 104);
      goto LABEL_6;
    }
LABEL_24:
    uint64_t v5 = 0;
LABEL_6:
    if ([v5 code] == (id)320)
    {
      [*(id *)(a1 + 32) _updateOrgAdminUserRecordID];
      uint64_t v6 = *(void *)(a1 + 32);
      if (v6) {
        uint64_t v6 = *(void *)(v6 + 96);
      }
      *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v6 != 0;
    }
    goto LABEL_10;
  }

LABEL_10:
  uint64_t v7 = *(void *)(a1 + 32);
  if (!v7) {
    goto LABEL_25;
  }
  id v8 = *(id *)(v7 + 112);
  if (v8)
  {

    goto LABEL_19;
  }
  uint64_t v9 = *(void *)(a1 + 32);
  if (v9) {
    CFStringRef v10 = *(void **)(v9 + 120);
  }
  else {
LABEL_25:
  }
    CFStringRef v10 = 0;
  if ([v10 code] == (id)320)
  {
    [*(id *)(a1 + 32) _updateUserRecordID];
    uint64_t v11 = *(void *)(a1 + 32);
    if (v11) {
      uint64_t v11 = *(void *)(v11 + 112);
    }
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v11 != 0;
  }
LABEL_19:
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24))
  {
    +[CLSUtil postNotificationAsync:"com.apple.progressd.accountChanged"];
  }
}

void sub_100044E14(id a1)
{
  int v1 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  attr = dispatch_queue_attr_make_with_qos_class(v1, QOS_CLASS_USER_INITIATED, 0);

  uint64_t v2 = dispatch_get_global_queue(25, 0);
  dispatch_queue_t v3 = dispatch_queue_create_with_target_V2("com.apple.progressd.accountInfo", attr, v2);
  uint64_t v4 = (void *)qword_10023E498;
  qword_10023E498 = (uint64_t)v3;
}

id sub_100044EB4()
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100044F58;
  block[3] = &unk_1001F29D0;
  void block[4] = self;
  if (qword_10023E4B8 != -1) {
    dispatch_once(&qword_10023E4B8, block);
  }
  uint64_t v0 = (void *)qword_10023E4B0;

  return v0;
}

uint64_t sub_100044F58(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = qword_10023E4B0;
  qword_10023E4B0 = (uint64_t)v1;

  return _objc_release_x1(v1, v2);
}

void sub_1000450A8(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 8) setDefaultValue:@"xp_amp_schoolwork_perf" forKey:@"cls-app-metrics-perf-topic-name"];
  [*(id *)(*(void *)(a1 + 32) + 8) setDefaultValue:&off_10020AD88 forKey:@"metrics"];
}

uint64_t sub_100045958(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    int v11 = v6 & 7;
    if (v10 || v11 == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 40;
        goto LABEL_23;
      case 2u:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 32;
        goto LABEL_23;
      case 3u:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 64;
LABEL_23:
        NSErrorUserInfoKey v15 = *(void **)(a1 + v14);
        *(void *)(a1 + v14) = v13;

        goto LABEL_45;
      case 4u:
        if (v11 == 2)
        {
          uint64_t result = PBReaderPlaceMark();
          if (!result) {
            return result;
          }
          while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length)
               && !*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error))
          {
            char v17 = 0;
            unsigned int v18 = 0;
            uint64_t v19 = 0;
            while (1)
            {
              unint64_t v20 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
              if (v20 == -1 || v20 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
                break;
              }
              char v21 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v20);
              *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v20 + 1;
              v19 |= (unint64_t)(v21 & 0x7F) << v17;
              if (v21 < 0)
              {
                v17 += 7;
                BOOL v9 = v18++ >= 9;
                if (!v9) {
                  continue;
                }
              }
              goto LABEL_36;
            }
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_36:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v26 = 0;
          while (1)
          {
            unint64_t v27 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            if (v27 == -1 || v27 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
              break;
            }
            char v28 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v27);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v27 + 1;
            v26 |= (unint64_t)(v28 & 0x7F) << v24;
            if (v28 < 0)
            {
              v24 += 7;
              BOOL v9 = v25++ >= 9;
              if (!v9) {
                continue;
              }
            }
            goto LABEL_56;
          }
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_56:
          PBRepeatedInt32Add();
        }
        goto LABEL_45;
      case 5u:
        id v22 = objc_alloc_init(PDDPDate);
        uint64_t v23 = 48;
        goto LABEL_39;
      case 6u:
        id v22 = objc_alloc_init(PDDPDate);
        uint64_t v23 = 56;
LABEL_39:
        objc_storeStrong((id *)(a1 + v23), v22);
        if (!PBReaderPlaceMark() || (PDDPDateReadFrom((uint64_t)v22, a2) & 1) == 0) {
          goto LABEL_59;
        }
        goto LABEL_44;
      case 7u:
        id v22 = objc_alloc_init(PDDPTypedValue);
        objc_storeStrong((id *)(a1 + 72), v22);
        if PBReaderPlaceMark() && (sub_10014AA8C((uint64_t)v22, a2))
        {
LABEL_44:
          PBReaderRecallMark();

LABEL_45:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }
LABEL_59:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_45;
    }
  }
}

id sub_1000465E4(void *a1, void *a2, void *a3, void *a4, uint64_t a5, uint64_t a6, void *a7)
{
  id v13 = a4;
  id v14 = a7;
  if (a1)
  {
    uint64_t v25 = 0;
    uint64_t v15 = sub_100046728((uint64_t)a1, a3, a2, (uint64_t)&v25);
    uint64_t v16 = v15;
    if (v25)
    {
      id v17 = 0;
    }
    else
    {
      uint64_t v24 = a6;
      if (v15)
      {
        id v18 = *(id *)(v15 + 24);
        id v19 = *(id *)(v16 + 16);
        unint64_t v20 = *(void **)(v16 + 32);
      }
      else
      {
        id v19 = 0;
        id v18 = 0;
        unint64_t v20 = 0;
      }
      id v21 = v20;
      id v22 = sub_100046950((uint64_t)a1, v13, v21);

      id v17 = [a1 selectAll:a2 where:v18 orderBy:v22 limit:a5 offset:v24 bindings:v19 block:v14];
    }
  }
  else
  {
    id v17 = 0;
  }

  return v17;
}

void *sub_100046728(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  id v7 = a2;
  char v8 = v7;
  if (a1)
  {
    if (v7)
    {
      id v18 = 0;
      BOOL v9 = objc_msgSend(v7, "cls_normalizedPredicate:error:", a1, &v18);
      id v10 = v18;

      if (v10)
      {
        CLSInitLog();
        int v11 = CLSLogDatabase;
        if (os_log_type_enabled(CLSLogDatabase, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)long long buf = 138543362;
          id v20 = v10;
          _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "normalizing predicate failed! %{public}@", buf, 0xCu);
        }
        +[NSError cls_assignError:a4 fromError:v10];
        int v12 = 0;
      }
      else
      {
        id v13 = [a3 entityName];
        id v14 = [v13 stringByAppendingString:@"."];
        uint64_t v15 = sub_10008B6E0([PDDatabaseWhereClause alloc], v9, v14);
        if (sub_10008B77C(v15, a4))
        {
          int v12 = v15;
        }
        else
        {
          CLSInitLog();
          uint64_t v16 = CLSLogDatabase;
          if (os_log_type_enabled(CLSLogDatabase, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)long long buf = 138543362;
            id v20 = 0;
            _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_INFO, "parsing predicate failed! %{public}@", buf, 0xCu);
          }
          +[NSError cls_assignError:a4 fromError:0];
          int v12 = 0;
        }
      }
    }
    else
    {
      BOOL v9 = 0;
      int v12 = 0;
    }
  }
  else
  {
    int v12 = 0;
    BOOL v9 = v7;
  }

  return v12;
}

id sub_100046950(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1 && [v5 count])
  {
    id v7 = objc_opt_new();
    long long v23 = 0u;
    long long v24 = 0u;
    long long v25 = 0u;
    long long v26 = 0u;
    id v21 = v5;
    id obj = v5;
    id v8 = [obj countByEnumeratingWithState:&v23 objects:v29 count:16];
    if (v8)
    {
      id v9 = v8;
      uint64_t v10 = *(void *)v24;
      while (2)
      {
        for (i = 0; i != v9; i = (char *)i + 1)
        {
          if (*(void *)v24 != v10) {
            objc_enumerationMutation(obj);
          }
          int v12 = *(void **)(*((void *)&v23 + 1) + 8 * i);
          uint64_t v14 = [v12 key];
          if (!v14)
          {
            CLSInitLog();
            id v18 = CLSLogDatabase;
            if (os_log_type_enabled(CLSLogDatabase, OS_LOG_TYPE_INFO))
            {
              *(_DWORD *)long long buf = 138543362;
              char v28 = v12;
              _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_INFO, "parsing sort descriptors failed! Invalid sort descriptor: %{public}@", buf, 0xCu);
            }
            goto LABEL_20;
          }
          uint64_t v15 = (void *)v14;
          id v16 = objc_alloc_init((Class)NSMutableString);
          [v16 appendString:@" "];
          if (v6) {
            [v16 appendString:v6];
          }
          objc_msgSend(v16, "appendString:", v15, v21);
          if ([v12 ascending]) {
            CFStringRef v17 = @" ASC";
          }
          else {
            CFStringRef v17 = @" DESC";
          }
          [v16 appendString:v17];
          [v7 addObject:v16];
        }
        id v9 = [obj countByEnumeratingWithState:&v23 objects:v29 count:16];
        if (v9) {
          continue;
        }
        break;
      }
    }
LABEL_20:

    id v19 = [v7 componentsJoinedByString:@", "];

    id v5 = v21;
  }
  else
  {
    id v19 = 0;
  }

  return v19;
}

void sub_100046CF0(id a1)
{
  qword_10023E4C0 = (uint64_t)[objc_alloc((Class)UNUserNotificationCenter) initWithBundleIdentifier:@"com.apple.ClassKitProgressNotifications" queue:&_dispatch_main_q];

  _objc_release_x1();
}

void sub_100046D40(uint64_t a1, void *a2)
{
  id v2 = a2;
  self;
  dispatch_queue_t v3 = [v2 objectForKeyedSubscript:@"title"];
  char v4 = [v2 objectForKeyedSubscript:@"message"];
  id v5 = [v2 objectForKeyedSubscript:@"alternateButton"];
  id v6 = [v2 objectForKeyedSubscript:@"defaultButton"];

  v20[0] = kCFUserNotificationAlertHeaderKey;
  v20[1] = kCFUserNotificationAlertMessageKey;
  v21[0] = v3;
  v21[1] = v4;
  v20[2] = kCFUserNotificationAlternateButtonTitleKey;
  v20[3] = kCFUserNotificationDefaultButtonTitleKey;
  v21[2] = v5;
  v21[3] = v6;
  CFDictionaryRef v7 = +[NSDictionary dictionaryWithObjects:v21 forKeys:v20 count:4];
  SInt32 error = 0;
  id v8 = CFUserNotificationCreate(0, 0.0, 3uLL, &error, v7);
  if (v8)
  {
    id v9 = v8;
    CFOptionFlags responseFlags = 0;
    CFUserNotificationReceiveResponse(v8, 0.0, &responseFlags);
    if ((responseFlags & 3) == 1)
    {
      uint64_t v10 = +[NSURL URLWithString:@"prefs:root=CLASSKIT"];
      int v11 = +[LSApplicationWorkspace defaultWorkspace];
      id v15 = 0;
      unsigned __int8 v12 = [v11 openSensitiveURL:v10 withOptions:0 error:&v15];
      id v13 = v15;

      if ((v12 & 1) == 0)
      {
        CLSInitLog();
        uint64_t v14 = CLSLogNotifications;
        if (os_log_type_enabled(CLSLogNotifications, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)long long buf = 138412290;
          id v19 = v13;
          _os_log_error_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "Failed to open ClassKit Settings. Error: %@", buf, 0xCu);
        }
      }
    }
    CFRelease(v9);
  }
}

void sub_100046FA4(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v6 = a2;
  id v7 = a4;
  id v8 = a3;
  id v9 = [self notificationCenter];
  uint64_t v10 = objc_opt_new();
  int v11 = objc_opt_new();
  unsigned __int8 v12 = [v11 UUIDString];

  if (v7)
  {
    id v18 = 0;
    id v13 = +[UNNotificationAttachment attachmentWithIdentifier:&stru_1001F6580 URL:v7 options:0 error:&v18];
    id v14 = v18;
    if (!v13)
    {
      CLSInitLog();
      id v15 = CLSLogNotifications;
      if (os_log_type_enabled(CLSLogNotifications, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)long long buf = 138412290;
        id v21 = v14;
        _os_log_error_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, "Failed generate notification attachment. Error: %@", buf, 0xCu);
      }
    }
  }
  else
  {
    id v13 = 0;
  }
  [v10 setTitle:v6];
  [v10 setBody:v8];

  if (v13)
  {
    id v19 = v13;
    id v16 = +[NSArray arrayWithObjects:&v19 count:1];
    [v10 setAttachments:v16];
  }
  CFStringRef v17 = +[UNNotificationRequest requestWithIdentifier:v12 content:v10 trigger:0];
  [v9 addNotificationRequest:v17 withCompletionHandler:&stru_1001F2C30];
}

void sub_1000471C0(id a1, NSError *a2)
{
  id v2 = a2;
  CLSInitLog();
  dispatch_queue_t v3 = CLSLogNotifications;
  if (v2)
  {
    if (os_log_type_enabled(CLSLogNotifications, OS_LOG_TYPE_ERROR))
    {
      int v4 = 138412290;
      id v5 = v2;
      _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Failed to post notification. Error: %@", (uint8_t *)&v4, 0xCu);
    }
  }
  else if (os_log_type_enabled(CLSLogNotifications, OS_LOG_TYPE_DEBUG))
  {
    LOWORD(v4) = 0;
    _os_log_debug_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "Notification post successful", (uint8_t *)&v4, 2u);
  }
}

id sub_10004778C(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    [a1 lock];
    id v4 = [a1 insertOrUpdateObject:v3];
    if (v4) {
      id v5 = v3;
    }
    else {
      id v5 = 0;
    }
    objc_setAssociatedObject(a1, &off_1001F2C50, v5, (void *)1);
    [a1 unlock];
  }
  else
  {
    id v4 = 0;
  }

  return v4;
}

BOOL sub_100047968(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0;
      while (1)
      {
        unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0;
          int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0;
      }
LABEL_13:
      if (v10 || (v6 & 7) == 4) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      if ((v6 >> 3) == 2) {
        break;
      }
      if ((v6 >> 3) == 1)
      {
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 16;
LABEL_21:
        id v14 = *(void **)(a1 + v13);
        *(void *)(a1 + v13) = v12;

        goto LABEL_23;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_23:
      if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
    }
    uint64_t v12 = PBReaderReadString();
    uint64_t v13 = 8;
    goto LABEL_21;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

BOOL sub_1000482C8(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0;
      while (1)
      {
        unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0;
          int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0;
      }
LABEL_13:
      if (v10 || (v6 & 7) == 4) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      unint64_t v12 = v6 >> 3;
      if ((v6 >> 3) == 3) {
        break;
      }
      if (v12 == 2)
      {
        id v15 = objc_alloc_init(PDDPStatus);
        objc_storeStrong((id *)(a1 + 24), v15);
        if (!PBReaderPlaceMark() || (sub_1000D3710((uint64_t)v15, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        goto LABEL_26;
      }
      if (v12 == 1)
      {
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 16;
        goto LABEL_22;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
    }
    uint64_t v13 = PBReaderReadString();
    uint64_t v14 = 8;
LABEL_22:
    id v15 = *(PDDPStatus **)(a1 + v14);
    *(void *)(a1 + v14) = v13;
LABEL_26:

    goto LABEL_28;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void *sub_100049F38(void *a1, void *a2, uint64_t a3, void *a4)
{
  id v8 = a2;
  id v9 = a4;
  if (a1)
  {
    v22.receiver = a1;
    v22.super_class = (Class)PDRetry;
    id v10 = objc_msgSendSuper2(&v22, "init");
    a1 = v10;
    if (v10)
    {
      objc_storeStrong((id *)v10 + 6, a2);
      a1[3] = 0;
      a1[5] = 0;
      a1[7] = a3;
      id v11 = objc_retainBlock(v9);
      unint64_t v12 = (void *)a1[8];
      a1[8] = v11;

      uint64_t v13 = CLSDispatchQueueName();
      uint64_t v14 = (const char *)[v13 UTF8String];
      id v15 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
      if (qword_10023E4D8 != -1) {
        dispatch_once(&qword_10023E4D8, &stru_1001F2D70);
      }
      id v16 = (id)qword_10023E4D0;
      dispatch_queue_t v17 = dispatch_queue_create_with_target_V2(v14, v15, v16);
      id v18 = (void *)a1[2];
      a1[2] = v17;

      uint64_t v19 = objc_opt_new();
      id v20 = (void *)a1[1];
      a1[1] = v19;
    }
  }

  return a1;
}

void sub_10004A09C(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    objc_initWeak(&location, a1);
    char v4 = a1[2];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10004A16C;
    block[3] = &unk_1001F2C88;
    objc_copyWeak(&v7, &location);
    id v6 = v3;
    dispatch_async(v4, block);

    objc_destroyWeak(&v7);
    objc_destroyWeak(&location);
  }
}

void sub_10004A16C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = sub_10004A220;
    v4[3] = &unk_1001F2C60;
    id v5 = *(id *)(a1 + 32);
    id v3 = objc_retainBlock(v4);
    ((void (*)(void *, id))v3[2])(v3, WeakRetained);
  }
}

uint64_t sub_10004A220(uint64_t a1, void *a2)
{
  id v3 = a2;
  char v4 = *(void **)(a1 + 32);
  id v9 = v3;
  if (v4)
  {
    id v5 = (void *)v3[1];
    id v6 = objc_retainBlock(v4);
    [v5 addObject:v6];

    id v3 = v9;
  }
  uint64_t v7 = v3[3];
  if (v7) {
    *((unsigned char *)v3 + 32) = v7 == 1;
  }
  else {
    [v3 _perform];
  }

  return _objc_release_x1();
}

void sub_10004A3B8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10004A3D4(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    objc_initWeak(&location, WeakRetained);
    uint64_t v7 = WeakRetained[2];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10004A4D8;
    block[3] = &unk_1001F2CD8;
    objc_copyWeak(&v11, &location);
    char v12 = a2;
    id v9 = v5;
    id v10 = *(id *)(a1 + 32);
    dispatch_async(v7, block);

    objc_destroyWeak(&v11);
    objc_destroyWeak(&location);
  }
}

void sub_10004A4D8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = sub_10004A5A8;
    v4[3] = &unk_1001F2CB0;
    char v7 = *(unsigned char *)(a1 + 56);
    id v5 = *(id *)(a1 + 32);
    id v6 = *(id *)(a1 + 40);
    id v3 = objc_retainBlock(v4);
    ((void (*)(void *, id))v3[2])(v3, WeakRetained);
  }
}

id sub_10004A5A8(uint64_t a1, void *a2)
{
  return _[a2 _processBlockDoneStatus:*(unsigned __int8 *)(a1 + 48) error:*(void *)(a1 + 32) completionBlocks:*(void *)(a1 + 40)];
}

void sub_10004AAA4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _perform];
    id WeakRetained = v2;
  }
}

void sub_10004AAE8(uint64_t a1)
{
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 32);
  id v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      id v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        (*(void (**)(void))(*(void *)(*((void *)&v6 + 1) + 8 * (void)v5) + 16))(*(void *)(*((void *)&v6 + 1) + 8 * (void)v5));
        id v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      id v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

void sub_10004AC44(id a1)
{
  id v1 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  attr = dispatch_queue_attr_make_with_qos_class(v1, QOS_CLASS_USER_INITIATED, 0);

  id v2 = dispatch_get_global_queue(25, 0);
  dispatch_queue_t v3 = dispatch_queue_create_with_target_V2("com.apple.progressd.retry", attr, v2);
  uint64_t v4 = (void *)qword_10023E4D0;
  qword_10023E4D0 = (uint64_t)v3;
}

void sub_10004AD40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  id v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)PDSQLiteDatabase;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_10004AD70(void *a1)
{
}

void sub_10004AFBC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004B1FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

id sub_10004B248(sqlite3 *a1, int a2)
{
  if (a2)
  {
    dispatch_queue_t v3 = sqlite3_errmsg(a1);
    if (v3) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = "";
    }
    id v5 = +[NSString stringWithUTF8String:v4];
    NSErrorUserInfoKey v13 = NSLocalizedDescriptionKey;
    uint64_t v14 = v5;
    long long v6 = +[NSDictionary dictionaryWithObjects:&v14 forKeys:&v13 count:1];
    long long v7 = +[NSError errorWithDomain:@"com.apple.SQLite" code:a2 userInfo:v6];

    NSErrorUserInfoKey v11 = NSUnderlyingErrorKey;
    char v12 = v7;
    long long v8 = +[NSDictionary dictionaryWithObjects:&v12 forKeys:&v11 count:1];
    long long v9 = +[NSError errorWithDomain:@"com.apple.progressd.SQLite" code:1 userInfo:v8];
  }
  else
  {
    long long v9 = 0;
  }

  return v9;
}

void sub_10004B3B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004B594(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004B6B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10004B750(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10004B764(void *a1, int a2, uint64_t a3, uint64_t a4)
{
  if (a1)
  {
    uint64_t v5 = 1;
    uint64_t v6 = 2;
    if (a2 != 23) {
      uint64_t v6 = 0;
    }
    if (a2 != 18) {
      uint64_t v5 = v6;
    }
    if (a2 == 9) {
      uint64_t v7 = 3;
    }
    else {
      uint64_t v7 = v5;
    }
    id v9 = a1;
    long long v8 = +[NSString stringWithUTF8String:a4];
    [v9 performUpdateBlock:v8 changeType:v7];
  }
}

void sub_10004B8F4(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_10004BB04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10004BB48(uint64_t a1)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 1;
  return 0;
}

void sub_10004BC64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004BE54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004BF38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004C0E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004C234(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004C2F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10004C318()
{
  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  id v1 = std::bad_array_new_length::bad_array_new_length(exception);
}

uint64_t sub_10004C34C(int a1, sqlite3_stmt *pStmt)
{
  return sqlite3_finalize(pStmt);
}

id sub_10004C864(void *a1, void *a2, uint64_t a3, void *a4)
{
  id v7 = a2;
  id v8 = a4;
  if (a1)
  {
    uint64_t v9 = objc_opt_class();
    id v10 = [v7 parentObjectID];
    NSErrorUserInfoKey v11 = [a1 select:v9 identity:v10];

    if (v11)
    {
      char v12 = [v7 objectID];
      NSErrorUserInfoKey v13 = [a1 _progressEventsWithAssignedItem:v11 eventType:a3 activityID:v12 activityItemID:v8];
    }
    else
    {
      uint64_t v14 = objc_opt_class();
      id v15 = [v7 parentObjectID];
      char v12 = [a1 select:v14 identity:v15];

      if (v12)
      {
        id v16 = [v7 objectID];
        NSErrorUserInfoKey v13 = [a1 _progressEventsForContext:v12 eventType:a3 activityID:v16 activityItemID:v8];
      }
      else
      {
        CLSInitLog();
        dispatch_queue_t v17 = CLSLogUpload;
        if (os_log_type_enabled(CLSLogUpload, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)uint64_t v19 = 0;
          _os_log_error_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_ERROR, "CLSActivity+InsightEvents failed to build events for activity", v19, 2u);
        }
        NSErrorUserInfoKey v13 = &__NSArray0__struct;
      }
    }
  }
  else
  {
    NSErrorUserInfoKey v13 = 0;
  }

  return v13;
}

void sub_10004CE10(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 contextPath];
  uint64_t v5 = [*(id *)(a1 + 32) identifierPath];
  unsigned int v6 = [v4 isEqualToArray:v5];

  if (v6)
  {
    id v8 = *(void **)(a1 + 40);
    uint64_t v9 = [v3 objectID];
    id v10 = sub_100003E58(*(void **)(a1 + 40));
    NSErrorUserInfoKey v11 = [v10 objectID];
    char v12 = sub_10015A0B0(v8, v9, v11, 1);

    if (v12)
    {
      NSErrorUserInfoKey v13 = (char *)[v12 state];
      self;
      if ((unint64_t)(v13 - 3) >= 2)
      {
        uint64_t v14 = sub_10001E7F8(*(void **)(a1 + 40), v3, *(void *)(a1 + 72));
        id v15 = v14;
        if (v14)
        {
          [v14 setActivityID:*(void *)(a1 + 48)];
          [v15 setObjectIDPath:*(void *)(a1 + 56)];
          [*(id *)(a1 + 64) addObject:v15];
        }
      }
    }
    else
    {
      CLSInitLog();
      id v16 = (void *)CLSLogUpload;
      if (os_log_type_enabled(CLSLogUpload, OS_LOG_TYPE_ERROR))
      {
        dispatch_queue_t v17 = v16;
        id v18 = [v3 objectID];
        int v19 = 138412290;
        id v20 = v18;
        _os_log_error_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_ERROR, "CLSActivity+InsightEvents: handoutAttachment - %@ is missing ACTIVITY state.", (uint8_t *)&v19, 0xCu);
      }
    }
  }
}

void sub_10004FD14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10004FD34(uint64_t a1)
{
  CLSInitLog();
  id v2 = [*(id *)(a1 + 32) logSubsystem];
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id v3 = objc_opt_class();
    uint64_t v4 = *(void **)(a1 + 32);
    id v5 = v3;
    unsigned int v6 = [v4 operationID];
    id v7 = [*(id *)(a1 + 40) count];
    *(_DWORD *)long long buf = 138543874;
    int v38 = v3;
    __int16 v39 = 2114;
    int v40 = v6;
    __int16 v41 = 2048;
    id v42 = v7;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%{public}@: %{public}@ processing response with %lu payload items", buf, 0x20u);
  }
  long long v34 = 0u;
  long long v35 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  id v8 = *(id *)(a1 + 40);
  id v9 = [v8 countByEnumeratingWithState:&v32 objects:v36 count:16];
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = *(void *)v33;
LABEL_5:
    uint64_t v12 = 0;
    while (1)
    {
      if (*(void *)v33 != v11) {
        objc_enumerationMutation(v8);
      }
      uint64_t v13 = *(void *)(*((void *)&v32 + 1) + 8 * v12);
      buf[0] = 0;
      id v15 = *(void **)(a1 + 32);
      uint64_t v16 = *(void *)(*(void *)(a1 + 48) + 8);
      id obj = *(id *)(v16 + 40);
      [v15 processPayloadWithinWriteTransaction:v13 error:&obj stop:buf];
      objc_storeStrong((id *)(v16 + 40), obj);
      LODWORD(v13) = buf[0];
      if (v13) {
        break;
      }
      if (v10 == (id)++v12)
      {
        id v10 = [v8 countByEnumeratingWithState:&v32 objects:v36 count:16];
        if (v10) {
          goto LABEL_5;
        }
        break;
      }
    }
  }

  if (*(unsigned char *)(*(void *)(a1 + 32) + 228))
  {
    CLSInitLog();
    dispatch_queue_t v17 = [*(id *)(a1 + 32) logSubsystem];
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      id v18 = objc_opt_class();
      int v19 = *(void **)(a1 + 32);
      id v20 = v18;
      id v21 = [v19 operationID];
      objc_super v22 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
      *(_DWORD *)long long buf = 138543874;
      int v38 = v18;
      __int16 v39 = 2114;
      int v40 = v21;
      __int16 v41 = 2112;
      id v42 = v22;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "%{public}@: %{public}@ response processing terminated by failed status. error:%@", buf, 0x20u);
    }
  }
  long long v23 = +[PDUserDefaults sharedDefaults];
  unsigned int v24 = [v23 enableVerboseLogging];

  if (v24)
  {
    CLSInitLog();
    long long v25 = [*(id *)(a1 + 32) logSubsystem];
    if (os_log_type_enabled(v25, OS_LOG_TYPE_DEBUG))
    {
      unint64_t v27 = objc_opt_class();
      char v28 = *(void **)(a1 + 32);
      id v29 = v27;
      uint64_t v30 = [v28 operationID];
      *(_DWORD *)long long buf = 138543618;
      int v38 = v27;
      __int16 v39 = 2114;
      int v40 = v30;
      _os_log_debug_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEBUG, "%{public}@: %{public}@ response processing complete.", buf, 0x16u);
    }
  }
  return 1;
}

void sub_100050450(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100050468(uint64_t a1, void *a2, uint64_t a3)
{
  id v26 = a2;
  unsigned int v6 = *(void **)(a1 + 32);
  id v7 = [v26 objectID];
  id v8 = sub_1000C8650(v6, v7);

  if ([v8 count])
  {
    id v9 = objc_alloc_init(PDDPQueryRequest);
    uint64_t v10 = *(void *)(*(void *)(a1 + 48) + 8);
    uint64_t v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    uint64_t v12 = objc_alloc_init(PDDPSchoolworkQueryZone);
    uint64_t v13 = [*(id *)(a1 + 40) endpointInfo];
    uint64_t v14 = (void *)v13;
    if (v13) {
      uint64_t v15 = *(unsigned int *)(v13 + 64);
    }
    else {
      uint64_t v15 = 0;
    }
    -[PDDPSchoolworkQueryZone setLimit:](v12, "setLimit:", v15, a3);

    uint64_t v16 = [v26 location];
    [(PDDPSchoolworkQueryZone *)v12 setZoneName:v16];

    [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) setQueryZone:v12];
    [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) setIncludeChildren:1];
    dispatch_queue_t v17 = objc_alloc_init(PDDPSchoolworkSearchQuery);
    [(PDDPSchoolworkSearchQuery *)v17 setType:3];
    id v18 = objc_alloc_init(PDDPSchoolworkSearchQuery);
    [(PDDPSchoolworkSearchQuery *)v18 setType:3];
    int v19 = objc_alloc_init(PDDPSchoolworkSearchCriteria);
    [(PDDPSchoolworkSearchCriteria *)v19 setFieldName:@"object_id"];
    [(PDDPSchoolworkSearchCriteria *)v19 setSearchOperator:7];
    if ([v8 count])
    {
      unint64_t v20 = 0;
      do
      {
        id v21 = [v8 objectAtIndexedSubscript:v20];
        objc_super v22 = sub_100023FC4(v21);
        [v8 setObject:v22 atIndexedSubscript:v20];

        ++v20;
      }
      while (v20 < (unint64_t)[v8 count]);
    }
    long long v23 = sub_1000F3FE4(v8);
    [(PDDPSchoolworkSearchCriteria *)v19 setValue:v23];
    [(PDDPSchoolworkSearchQuery *)v18 setCriteria:v19];
    id v24 = objc_alloc_init((Class)NSMutableArray);
    [v24 addObject:v18];
    [(PDDPSchoolworkSearchQuery *)v17 setContents:v24];
    [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) setFilterQuery:v17];
    *long long v25 = 1;
  }
}

id sub_1000506F8(id a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  if (a1)
  {
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_10005079C;
    v6[3] = &unk_1001F1ED8;
    id v7 = v3;
    id v8 = a1;
    a1 = [a1 performTransaction:v6 forWriting:1];
  }
  return a1;
}

uint64_t sub_10005079C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2)
  {
    BOOL v3 = *(unsigned char *)(v2 + 8) != 0;
    BOOL v4 = *(unsigned char *)(v2 + 11) != 0;
  }
  else
  {
    BOOL v3 = 0;
    BOOL v4 = 0;
  }
  id v5 = +[NSMutableSet set];
  if (v3)
  {
    unsigned int v6 = 1;
    if (v4) {
      goto LABEL_22;
    }
    goto LABEL_16;
  }
  [v5 addObject:objc_opt_class()];
  [v5 addObject:objc_opt_class()];
  CFStringRef v50 = @"currentActivityID";
  id v7 = +[NSNull null];
  uint64_t v51 = v7;
  id v8 = +[NSDictionary dictionaryWithObjects:&v51 forKeys:&v50 count:1];

  if (([*(id *)(a1 + 40) updateAll:objc_opt_class() set:v8 where:0 bindings:0] & 1) == 0)
  {
    CLSInitLog();
    id v9 = (void *)CLSLogDatabase;
    if (os_log_type_enabled(CLSLogDatabase, OS_LOG_TYPE_INFO))
    {
      uint64_t v10 = v9;
      *(_DWORD *)long long buf = 138543362;
      id v45 = (id)objc_opt_class();
      id v11 = v45;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "%{public}@ failed to clear currentActivityID for CLSContexts", buf, 0xCu);
    }
  }
  uint64_t v12 = *(void **)(a1 + 40);
  uint64_t v13 = objc_opt_class();
  uint64_t v14 = +[CLSContext entityName];
  long long v49 = v14;
  uint64_t v15 = +[NSArray arrayWithObjects:&v49 count:1];
  LOBYTE(v12) = [v12 deleteAll:v13 where:@"entity != ?" bindings:v15];

  if ((v12 & 1) == 0)
  {
    CLSInitLog();
    uint64_t v16 = (void *)CLSLogDatabase;
    if (os_log_type_enabled(CLSLogDatabase, OS_LOG_TYPE_INFO))
    {
      dispatch_queue_t v17 = v16;
      id v18 = objc_opt_class();
      *(_DWORD *)long long buf = 138543362;
      id v45 = v18;
      id v19 = v18;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_INFO, "%{public}@ failed to clear PDPendingCKSyncItems for non-CLSContexts", buf, 0xCu);
    }
  }
  unsigned int v6 = [*(id *)(a1 + 40) deleteAll:objc_opt_class() where:0 bindings:0];
  if ((v6 & 1) == 0)
  {
    CLSInitLog();
    unint64_t v20 = (void *)CLSLogDatabase;
    if (os_log_type_enabled(CLSLogDatabase, OS_LOG_TYPE_INFO))
    {
      id v21 = v20;
      objc_super v22 = objc_opt_class();
      *(_DWORD *)long long buf = 138543362;
      id v45 = v22;
      id v23 = v22;
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_INFO, "%{public}@ failed to clear pending insight events", buf, 0xCu);
    }
  }

  if (!v4)
  {
LABEL_16:
    [v5 addObject:objc_opt_class()];
    [v5 addObject:objc_opt_class()];
    if (!v3)
    {
      if (sub_10016018C(*(id *)(a1 + 40), 0, @"PDCK_ClassKitZoneName"))
      {
        unsigned int v6 = 1;
      }
      else
      {
        CLSInitLog();
        id v24 = (void *)CLSLogDatabase;
        if (os_log_type_enabled(CLSLogDatabase, OS_LOG_TYPE_INFO))
        {
          long long v25 = v24;
          id v26 = objc_opt_class();
          *(_DWORD *)long long buf = 138543362;
          id v45 = v26;
          id v27 = v26;
          _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_INFO, "%{public}@ failed to clear progress zone", buf, 0xCu);
        }
        unsigned int v6 = 0;
      }
    }
  }
LABEL_22:
  unsigned int v39 = v6;
  long long v42 = 0u;
  long long v43 = 0u;
  long long v40 = 0u;
  long long v41 = 0u;
  id v28 = v5;
  id v29 = [v28 countByEnumeratingWithState:&v40 objects:v48 count:16];
  if (v29)
  {
    id v30 = v29;
    uint64_t v31 = *(void *)v41;
    do
    {
      for (i = 0; i != v30; i = (char *)i + 1)
      {
        if (*(void *)v41 != v31) {
          objc_enumerationMutation(v28);
        }
        uint64_t v33 = *(void *)(*((void *)&v40 + 1) + 8 * i);
        if (([*(id *)(a1 + 40) deleteAll:v33 where:0 bindings:0] & 1) == 0)
        {
          CLSInitLog();
          long long v34 = (void *)CLSLogDatabase;
          if (os_log_type_enabled(CLSLogDatabase, OS_LOG_TYPE_INFO))
          {
            long long v35 = v34;
            uint64_t v36 = objc_opt_class();
            *(_DWORD *)long long buf = 138543618;
            id v45 = v36;
            __int16 v46 = 2114;
            uint64_t v47 = v33;
            id v37 = v36;
            _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_INFO, "%{public}@ failed to delete local %{public}@ data", buf, 0x16u);
          }
        }
      }
      id v30 = [v28 countByEnumeratingWithState:&v40 objects:v48 count:16];
    }
    while (v30);
  }

  return v39;
}

id sub_100050D14(id result)
{
  if (result)
  {
    id v1 = result;
    CLSInitLog();
    uint64_t v2 = (void *)CLSLogDatabase;
    if (os_log_type_enabled(CLSLogDatabase, OS_LOG_TYPE_INFO))
    {
      BOOL v3 = v2;
      *(_DWORD *)long long buf = 138543362;
      id v7 = (id)objc_opt_class();
      id v4 = v7;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%{public}@ removing existing ASM roster data.", buf, 0xCu);
    }
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    v5[2] = sub_100050E40;
    v5[3] = &unk_1001F2E88;
    void v5[4] = v1;
    return [v1 performTransaction:v5 forWriting:1];
  }
  return result;
}

uint64_t sub_100050E40(uint64_t a1)
{
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  if (qword_10023E4E8 != -1) {
    dispatch_once(&qword_10023E4E8, &stru_1001F2EA8);
  }
  id v2 = (id)qword_10023E4E0;
  id v3 = [v2 countByEnumeratingWithState:&v15 objects:v23 count:16];
  if (v3)
  {
    id v5 = v3;
    uint64_t v6 = *(void *)v16;
    *(void *)&long long v4 = 138543618;
    long long v14 = v4;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v16 != v6) {
          objc_enumerationMutation(v2);
        }
        uint64_t v8 = *(void *)(*((void *)&v15 + 1) + 8 * i);
        if ((objc_msgSend(*(id *)(a1 + 32), "deleteAllWithoutTracking:where:bindings:", v8, 0, 0, v14, (void)v15) & 1) == 0)
        {
          CLSInitLog();
          id v9 = (void *)CLSLogDatabase;
          if (os_log_type_enabled(CLSLogDatabase, OS_LOG_TYPE_INFO))
          {
            uint64_t v10 = v9;
            id v11 = objc_opt_class();
            *(_DWORD *)long long buf = v14;
            unint64_t v20 = v11;
            __int16 v21 = 2114;
            uint64_t v22 = v8;
            id v12 = v11;
            _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "%{public}@ failed to purge local %{public}@ data", buf, 0x16u);
          }
        }
      }
      id v5 = [v2 countByEnumeratingWithState:&v15 objects:v23 count:16];
    }
    while (v5);
  }

  sub_10015FEC4(*(id *)(a1 + 32), 0, @"asmRefreshRequested");
  sub_10015FEC4(*(id *)(a1 + 32), 0, @"initialASMSyncComplete");
  return 1;
}

BOOL sub_100051044(void *a1)
{
  BOOL v1 = (BOOL)a1;
  if (a1)
  {
    id v2 = [a1 select:objc_opt_class() identity:@"initialASMSyncComplete"];
    if (v2) {
      BOOL v1 = v2[16] != 0;
    }
    else {
      BOOL v1 = 0;
    }
  }
  return v1;
}

BOOL sub_1000510B8(void *a1)
{
  BOOL v1 = (BOOL)a1;
  if (a1)
  {
    id v2 = [a1 select:objc_opt_class() identity:@"initialOrionSyncComplete"];
    if (v2) {
      BOOL v1 = v2[16] != 0;
    }
    else {
      BOOL v1 = 0;
    }
  }
  return v1;
}

BOOL sub_10005112C(void *a1)
{
  BOOL v1 = (BOOL)a1;
  if (a1)
  {
    id v2 = [a1 select:objc_opt_class() identity:@"initialiCloudDriveSyncComplete"];
    if (v2) {
      BOOL v1 = v2[16] != 0;
    }
    else {
      BOOL v1 = 0;
    }
  }
  return v1;
}

uint64_t sub_1000511A0(uint64_t a1)
{
  uint64_t v1 = a1;
  if (a1)
  {
    long long v10 = 0u;
    long long v11 = 0u;
    long long v8 = 0u;
    long long v9 = 0u;
    v12[0] = objc_opt_class();
    v12[1] = objc_opt_class();
    v12[2] = objc_opt_class();
    id v2 = +[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v12, 3, 0);
    id v3 = [v2 countByEnumeratingWithState:&v8 objects:v13 count:16];
    if (v3)
    {
      id v4 = v3;
      uint64_t v5 = *(void *)v9;
      while (2)
      {
        uint64_t v6 = 0;
        do
        {
          if (*(void *)v9 != v5) {
            objc_enumerationMutation(v2);
          }
          if ((uint64_t)[(id)v1 count:*(void *)(*((void *)&v8 + 1) + 8 * (void)v6) where:0 bindings:0] > 0)
          {
            uint64_t v1 = 1;
            goto LABEL_12;
          }
          uint64_t v6 = (char *)v6 + 1;
        }
        while (v4 != v6);
        id v4 = [v2 countByEnumeratingWithState:&v8 objects:v13 count:16];
        if (v4) {
          continue;
        }
        break;
      }
    }
    uint64_t v1 = 0;
LABEL_12:
  }
  return v1;
}

void sub_1000512F8(id a1)
{
  v4[0] = objc_opt_class();
  v4[1] = objc_opt_class();
  v4[2] = objc_opt_class();
  v4[3] = objc_opt_class();
  void v4[4] = objc_opt_class();
  v4[5] = objc_opt_class();
  v4[6] = objc_opt_class();
  v4[7] = objc_opt_class();
  uint64_t v1 = +[NSArray arrayWithObjects:v4 count:8];
  uint64_t v2 = +[NSSet setWithArray:v1];
  id v3 = (void *)qword_10023E4E0;
  qword_10023E4E0 = v2;
}

id sub_100051818(id a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (a1)
  {
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_1000518C0;
    v6[3] = &unk_1001F1ED8;
    void v6[4] = a1;
    id v7 = v3;
    a1 = [a1 performTransaction:v6 forWriting:1];
  }
  return a1;
}

id sub_1000518C0(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = +[PDRolePrivilege entityName];
  id v4 = [*(id *)(a1 + 40) identityValue];
  id v37 = v4;
  uint64_t v5 = +[NSArray arrayWithObjects:&v37 count:1];
  LOBYTE(v2) = sub_1000AC4E8(v2, v3, @"roleID = ?", v5);

  if (v2)
  {
    id v6 = objc_alloc_init((Class)NSMutableArray);
    [v6 addObject:*(void *)(a1 + 40)];
    id v7 = [*(id *)(a1 + 40) privileges];
    id v8 = [v7 count];

    if (v8)
    {
      long long v32 = 0u;
      long long v33 = 0u;
      long long v30 = 0u;
      long long v31 = 0u;
      long long v9 = objc_msgSend(*(id *)(a1 + 40), "privileges", 0);
      id v10 = [v9 countByEnumeratingWithState:&v30 objects:v34 count:16];
      if (v10)
      {
        id v11 = v10;
        uint64_t v12 = *(void *)v31;
        do
        {
          for (i = 0; i != v11; i = (char *)i + 1)
          {
            if (*(void *)v31 != v12) {
              objc_enumerationMutation(v9);
            }
            long long v14 = *(void **)(*((void *)&v30 + 1) + 8 * i);
            long long v15 = [PDRolePrivilege alloc];
            long long v16 = [*(id *)(a1 + 40) objectID];
            long long v17 = sub_1001654D4(v15, v16, v14);

            [v6 addObject:v17];
          }
          id v11 = [v9 countByEnumeratingWithState:&v30 objects:v34 count:16];
        }
        while (v11);
      }
    }
    else
    {
      unint64_t v20 = [PDRolePrivilege alloc];
      __int16 v21 = [*(id *)(a1 + 40) objectID];
      long long v9 = sub_1001654D4(v20, v21, @"❌✋🔒");

      [v6 addObject:v9];
    }

    id v19 = [*(id *)(a1 + 32) insertOrUpdateObjects:v6];
    if ((v19 & 1) == 0)
    {
      CLSInitLog();
      uint64_t v22 = (void *)CLSLogDatabase;
      if (os_log_type_enabled(CLSLogDatabase, OS_LOG_TYPE_ERROR))
      {
        id v27 = *(void **)(a1 + 40);
        id v28 = v22;
        id v29 = [v27 identityValue];
        *(_DWORD *)long long buf = 138543362;
        uint64_t v36 = v29;
        _os_log_error_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_ERROR, "Failed to save Role with objectID: %{public}@.", buf, 0xCu);
      }
    }
  }
  else
  {
    CLSInitLog();
    long long v18 = (void *)CLSLogDatabase;
    if (os_log_type_enabled(CLSLogDatabase, OS_LOG_TYPE_ERROR))
    {
      id v24 = *(void **)(a1 + 40);
      long long v25 = v18;
      id v26 = [v24 identityValue];
      *(_DWORD *)long long buf = 138543362;
      uint64_t v36 = v26;
      _os_log_error_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_ERROR, "Failed to delete RolePrivileges for Role with objectID: %{public}@.", buf, 0xCu);
    }
    return 0;
  }
  return v19;
}

id sub_100051C1C(id a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (a1)
  {
    if (v3)
    {
      uint64_t v5 = objc_opt_new();
      v9[0] = _NSConcreteStackBlock;
      v9[1] = 3221225472;
      v9[2] = sub_100051D20;
      v9[3] = &unk_1001F2F00;
      void v9[4] = a1;
      id v10 = v4;
      id v6 = v5;
      id v11 = v6;
      sub_10000749C(a1, v9);
      id v7 = v11;
      a1 = v6;
    }
    else
    {
      a1 = +[NSArray array];
    }
  }

  return a1;
}

void sub_100051D20(uint64_t a1)
{
  uint64_t v2 = objc_opt_new();
  id v3 = *(void **)(a1 + 32);
  uint64_t v23 = *(void *)(a1 + 40);
  id v4 = +[NSArray arrayWithObjects:&v23 count:1];
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  v18[2] = sub_100051F64;
  void v18[3] = &unk_1001F2ED8;
  id v5 = v2;
  id v19 = v5;
  LOBYTE(v3) = sub_100007540(v3, @"select distinct roleID from PDRolePrivilege where privilegeName = ?", 1, v4, v18);

  if ((v3 & 1) == 0)
  {
    CLSInitLog();
    id v6 = CLSLogDatabase;
    if (os_log_type_enabled(CLSLogDatabase, OS_LOG_TYPE_ERROR))
    {
      uint64_t v13 = *(void *)(a1 + 40);
      *(_DWORD *)long long buf = 138543362;
      uint64_t v22 = v13;
      _os_log_error_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "Failed to fetch roleIDs for privilege: %{public}@.", buf, 0xCu);
    }
  }
  long long v16 = 0u;
  long long v17 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id v7 = v5;
  id v8 = [v7 countByEnumeratingWithState:&v14 objects:v20 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v15;
    do
    {
      id v11 = 0;
      do
      {
        if (*(void *)v15 != v10) {
          objc_enumerationMutation(v7);
        }
        uint64_t v12 = objc_msgSend(*(id *)(a1 + 32), "select:identity:", objc_opt_class(), *(void *)(*((void *)&v14 + 1) + 8 * (void)v11), (void)v14);
        [*(id *)(a1 + 48) addObject:v12];

        id v11 = (char *)v11 + 1;
      }
      while (v9 != v11);
      id v9 = [v7 countByEnumeratingWithState:&v14 objects:v20 count:16];
    }
    while (v9);
  }
}

void sub_100051F64(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  sub_100003BF0(a2, @"roleID");
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  [v2 addObject:v3];
}

id sub_100051FC8(id a1, uint64_t a2)
{
  id v2 = a1;
  if (a1)
  {
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_100052098;
    v6[3] = &unk_1001F2F28;
    void v6[4] = a1;
    uint64_t v8 = a2;
    id v3 = (id)objc_opt_new();
    id v7 = v3;
    sub_10000749C(v2, v6);
    id v4 = v7;
    id v2 = v3;
  }

  return v2;
}

void sub_100052098(uint64_t a1)
{
  id v2 = objc_opt_new();
  id v3 = *(void **)(a1 + 32);
  id v4 = +[NSNumber numberWithInteger:*(void *)(a1 + 48)];
  id v26 = v4;
  id v5 = +[NSArray arrayWithObjects:&v26 count:1];
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3221225472;
  v21[2] = sub_100052324;
  v21[3] = &unk_1001F2ED8;
  id v6 = v2;
  id v22 = v6;
  LOBYTE(v3) = sub_100007540(v3, @"select distinct objectID from CLSRole where type = ?", 1, v5, v21);

  if ((v3 & 1) == 0)
  {
    CLSInitLog();
    id v7 = (void *)CLSLogDatabase;
    if (os_log_type_enabled(CLSLogDatabase, OS_LOG_TYPE_ERROR))
    {
      uint64_t v14 = *(void *)(a1 + 48);
      long long v15 = v7;
      long long v16 = +[CLSRole stringForRoleType:v14];
      *(_DWORD *)long long buf = 138543362;
      long long v25 = v16;
      _os_log_error_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, "Failed to fetch roleIDs for type: %{public}@.", buf, 0xCu);
    }
  }
  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v8 = v6;
  id v9 = [v8 countByEnumeratingWithState:&v17 objects:v23 count:16];
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = *(void *)v18;
    do
    {
      uint64_t v12 = 0;
      do
      {
        if (*(void *)v18 != v11) {
          objc_enumerationMutation(v8);
        }
        uint64_t v13 = objc_msgSend(*(id *)(a1 + 32), "select:identity:", objc_opt_class(), *(void *)(*((void *)&v17 + 1) + 8 * (void)v12), (void)v17);
        [*(id *)(a1 + 40) addObject:v13];

        uint64_t v12 = (char *)v12 + 1;
      }
      while (v10 != v12);
      id v10 = [v8 countByEnumeratingWithState:&v17 objects:v23 count:16];
    }
    while (v10);
  }
}

void sub_100052324(uint64_t a1, uint64_t *a2)
{
  id v2 = *(void **)(a1 + 32);
  sub_100003BF0(a2, @"objectID");
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  [v2 addObject:v3];
}

BOOL sub_1000534C4(char *a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    unint64_t v12 = v6 >> 3;
    if ((int)(v6 >> 3) <= 99)
    {
      switch((int)v12)
      {
        case 1:
          uint64_t v13 = PBReaderReadString();
          uint64_t v14 = 64;
          goto LABEL_45;
        case 2:
          uint64_t v13 = PBReaderReadString();
          uint64_t v14 = 96;
          goto LABEL_45;
        case 3:
          uint64_t v13 = PBReaderReadString();
          uint64_t v14 = 56;
          goto LABEL_45;
        case 4:
          uint64_t v13 = PBReaderReadString();
          uint64_t v14 = 72;
          goto LABEL_45;
        case 5:
          long long v15 = objc_alloc_init(PDDPDate);
          uint64_t v17 = 8;
          break;
        case 6:
          long long v15 = objc_alloc_init(PDDPDate);
          uint64_t v17 = 16;
          break;
        case 7:
          uint64_t v13 = PBReaderReadString();
          uint64_t v14 = 24;
          goto LABEL_45;
        default:
          goto LABEL_49;
      }
      objc_storeStrong((id *)&a1[v17], v15);
      if (!PBReaderPlaceMark() || (PDDPDateReadFrom((uint64_t)v15, a2) & 1) == 0)
      {
LABEL_52:

        return 0;
      }
      goto LABEL_43;
    }
    if ((int)v12 <= 200)
    {
      if (v12 == 100)
      {
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 80;
LABEL_45:
        long long v15 = *(PDDPDate **)&a1[v14];
        *(void *)&a1[v14] = v13;
        goto LABEL_46;
      }
      if (v12 == 200)
      {
        long long v15 = objc_alloc_init(PDDPAsset);
        uint64_t v16 = 88;
        goto LABEL_41;
      }
    }
    else
    {
      switch(v12)
      {
        case 0xC9:
          long long v15 = objc_alloc_init(PDDPAsset);
          uint64_t v16 = 32;
LABEL_41:
          objc_storeStrong((id *)&a1[v16], v15);
          if (!PBReaderPlaceMark() || (sub_10013CC9C((uint64_t)v15, a2) & 1) == 0) {
            goto LABEL_52;
          }
          goto LABEL_43;
        case 0xCA:
          long long v15 = objc_alloc_init(PDDPAsset);
          uint64_t v16 = 40;
          goto LABEL_41;
        case 0x12C:
          long long v15 = objc_alloc_init(PDDPMapEntry);
          [a1 addInfoDict:v15];
          if (!PBReaderPlaceMark() || !sub_10010AE4C((uint64_t)v15, a2)) {
            goto LABEL_52;
          }
LABEL_43:
          PBReaderRecallMark();
LABEL_46:

          continue;
      }
    }
LABEL_49:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      return 0;
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_1000547C4(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateComponents);
  id v2 = (void *)qword_10023E4F8;
  qword_10023E4F8 = (uint64_t)v1;

  uint64_t v3 = sub_1000FA3F4((uint64_t)PDUtil, @"CLSHandoutPastDueSummaryNotificationHour");
  uint64_t v4 = sub_1000FA3F4((uint64_t)PDUtil, @"CLSHandoutPastDueSummaryNotificationDay");
  if (v3 == -1) {
    uint64_t v5 = 16;
  }
  else {
    uint64_t v5 = v3;
  }
  [(id)qword_10023E4F8 setHour:v5];
  if (v4 == -1) {
    uint64_t v6 = 2;
  }
  else {
    uint64_t v6 = v4;
  }
  unint64_t v7 = (void *)qword_10023E4F8;

  _[v7 setWeekday:v6];
}

void sub_1000561BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000561D4(uint64_t a1)
{
  CLSInitLog();
  id v2 = [*(id *)(a1 + 32) logSubsystem];
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = objc_opt_class();
    uint64_t v4 = *(void **)(a1 + 32);
    id v5 = v3;
    uint64_t v6 = [v4 operationID];
    id v7 = [*(id *)(a1 + 40) count];
    *(_DWORD *)long long buf = 138543874;
    int v38 = v3;
    __int16 v39 = 2114;
    long long v40 = v6;
    __int16 v41 = 2048;
    id v42 = v7;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "%{public}@: %{public}@ processing response with %lu payload items", buf, 0x20u);
  }
  long long v34 = 0u;
  long long v35 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  id v8 = *(id *)(a1 + 40);
  id v9 = [v8 countByEnumeratingWithState:&v32 objects:v36 count:16];
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = *(void *)v33;
LABEL_5:
    uint64_t v12 = 0;
    while (1)
    {
      if (*(void *)v33 != v11) {
        objc_enumerationMutation(v8);
      }
      uint64_t v13 = *(void *)(*((void *)&v32 + 1) + 8 * v12);
      buf[0] = 0;
      long long v15 = *(void **)(a1 + 32);
      uint64_t v16 = *(void *)(*(void *)(a1 + 48) + 8);
      id obj = *(id *)(v16 + 40);
      [v15 processPayloadWithinWriteTransaction:v13 error:&obj stop:buf];
      objc_storeStrong((id *)(v16 + 40), obj);
      LODWORD(v13) = buf[0];
      if (v13) {
        break;
      }
      if (v10 == (id)++v12)
      {
        id v10 = [v8 countByEnumeratingWithState:&v32 objects:v36 count:16];
        if (v10) {
          goto LABEL_5;
        }
        break;
      }
    }
  }

  if (*(unsigned char *)(*(void *)(a1 + 32) + 226))
  {
    CLSInitLog();
    uint64_t v17 = [*(id *)(a1 + 32) logSubsystem];
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      long long v18 = objc_opt_class();
      long long v19 = *(void **)(a1 + 32);
      id v20 = v18;
      __int16 v21 = [v19 operationID];
      id v22 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
      *(_DWORD *)long long buf = 138543874;
      int v38 = v18;
      __int16 v39 = 2114;
      long long v40 = v21;
      __int16 v41 = 2112;
      id v42 = v22;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "%{public}@: %{public}@ response processing terminated by failed status. error:%@", buf, 0x20u);
    }
  }
  uint64_t v23 = +[PDUserDefaults sharedDefaults];
  unsigned int v24 = [v23 enableVerboseLogging];

  if (v24)
  {
    CLSInitLog();
    long long v25 = [*(id *)(a1 + 32) logSubsystem];
    if (os_log_type_enabled(v25, OS_LOG_TYPE_DEBUG))
    {
      id v27 = objc_opt_class();
      id v28 = *(void **)(a1 + 32);
      id v29 = v27;
      long long v30 = [v28 operationID];
      *(_DWORD *)long long buf = 138543618;
      int v38 = v27;
      __int16 v39 = 2114;
      long long v40 = v30;
      _os_log_debug_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEBUG, "%{public}@: %{public}@ response processing complete.", buf, 0x16u);
    }
  }
  return 1;
}

id sub_100057488(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) database];
  uint64_t v3 = objc_opt_class();
  uint64_t v4 = [*(id *)(a1 + 40) objectID];
  v8[0] = v4;
  v8[1] = &off_10020AE00;
  id v5 = +[NSArray arrayWithObjects:v8 count:2];
  id v6 = [v2 deleteAll:v3 where:@"objectID = ? and state = ?" bindings:v5];

  return v6;
}

id sub_10005783C(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = objc_opt_class();
  uint64_t v12 = *(void *)(a1 + 40);
  uint64_t v4 = +[NSArray arrayWithObjects:&v12 count:1];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  void v8[2] = sub_100057968;
  void v8[3] = &unk_1001F2F70;
  id v5 = *(void **)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  id v9 = v5;
  id v10 = *(id *)(a1 + 32);
  id v6 = [v2 selectAll:v3 where:@"referenceObjectID = ?" bindings:v4 block:v8];

  return v6;
}

void sub_100057968(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 48);
  id v4 = a2;
  [v4 setType:v3];
  [v4 setReferenceObjectID:*(void *)(a1 + 32)];
  [*(id *)(a1 + 40) updateObject:v4];
}

void sub_10005A2F0(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = [a2 objectID];
  [v2 addObject:v3];
}

void sub_10005AD80(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = [a2 objectID];
  [v2 addObject:v3];
}

void sub_10005AF64(uint64_t a1, void *a2)
{
  id v7 = a2;
  id v3 = [v7 contextPath];
  id v4 = [v3 count];

  if (v4)
  {
    id v5 = *(void **)(a1 + 32);
    id v6 = [v7 objectID];
    [v5 _setAuthorizationForAttachmentWithObjectID:v6 shouldAuthorize:0];
  }
}

id sub_10005B5C0(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = objc_opt_class();
  uint64_t v7 = *(void *)(a1 + 40);
  id v4 = +[NSArray arrayWithObjects:&v7 count:1];
  id v5 = [v2 deleteAll:v3 where:@"objectID = ?" bindings:v4];

  return v5;
}

void sub_10005BCC4(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = [a2 objectID];
  [v2 addObject:v3];
}

void sub_10005C2C4(uint64_t a1, void *a2)
{
  id v5 = a2;
  if ([v5 state] == (id)1)
  {
    id v3 = *(void **)(a1 + 32);
  }
  else
  {
    if ([v5 state] != (id)2) {
      goto LABEL_6;
    }
    id v3 = *(void **)(a1 + 40);
  }
  id v4 = [v5 objectID];
  [v3 addObject:v4];

LABEL_6:
}

id sub_10005C350(void *a1)
{
  id v2 = (void *)a1[4];
  uint64_t v3 = objc_opt_class();
  uint64_t v4 = a1[5];
  uint64_t v5 = a1[6];

  return [v2 deleteAll:v3 where:v4 bindings:v5];
}

uint64_t sub_10005D718(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v10 = v5++ >= 9;
      if (v10)
      {
        unint64_t v6 = 0;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    unint64_t v13 = v6 >> 3;
    switch((v6 >> 3))
    {
      case 1u:
        char v14 = 0;
        unsigned int v15 = 0;
        uint64_t v16 = 0;
        *(unsigned char *)(a1 + 188) |= 0x20u;
        while (1)
        {
          uint64_t v17 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v18 = v17 + 1;
          if (v17 == -1 || v18 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v19 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v17);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v18;
          v16 |= (unint64_t)(v19 & 0x7F) << v14;
          if ((v19 & 0x80) == 0) {
            goto LABEL_99;
          }
          v14 += 7;
          BOOL v10 = v15++ >= 9;
          if (v10)
          {
            LODWORD(v16) = 0;
            goto LABEL_101;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_99:
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v16) = 0;
        }
LABEL_101:
        uint64_t v60 = 168;
        goto LABEL_122;
      case 2u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 120;
        goto LABEL_84;
      case 3u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 160;
        goto LABEL_84;
      case 4u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 136;
        goto LABEL_84;
      case 5u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 176;
        goto LABEL_84;
      case 6u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 16;
        goto LABEL_84;
      case 7u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 40;
        goto LABEL_84;
      case 8u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 32;
        goto LABEL_84;
      case 9u:
      case 0xCu:
      case 0xEu:
      case 0xFu:
        goto LABEL_28;
      case 0xAu:
        PBReaderReadString();
        id v20 = (PDDPDate *)objc_claimAutoreleasedReturnValue();
        if (v20) {
          [(id)a1 addContextPath:v20];
        }
        goto LABEL_97;
      case 0xBu:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 128;
        goto LABEL_84;
      case 0xDu:
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v16 = 0;
        *(unsigned char *)(a1 + 188) |= 4u;
        while (2)
        {
          uint64_t v27 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v28 = v27 + 1;
          if (v27 == -1 || v28 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v29 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v27);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v28;
            v16 |= (unint64_t)(v29 & 0x7F) << v25;
            if (v29 < 0)
            {
              v25 += 7;
              BOOL v10 = v26++ >= 9;
              if (v10)
              {
                LODWORD(v16) = 0;
                goto LABEL_105;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v16) = 0;
        }
LABEL_105:
        uint64_t v60 = 112;
        goto LABEL_122;
      case 0x10u:
        char v30 = 0;
        unsigned int v31 = 0;
        uint64_t v32 = 0;
        *(unsigned char *)(a1 + 188) |= 0x80u;
        while (2)
        {
          uint64_t v33 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v34 = v33 + 1;
          if (v33 == -1 || v34 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v35 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v33);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v34;
            v32 |= (unint64_t)(v35 & 0x7F) << v30;
            if (v35 < 0)
            {
              v30 += 7;
              BOOL v10 = v31++ >= 9;
              if (v10)
              {
                uint64_t v32 = 0;
                goto LABEL_109;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v32 = 0;
        }
LABEL_109:
        BOOL v61 = v32 != 0;
        uint64_t v62 = 185;
        goto LABEL_127;
      case 0x11u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 56;
        goto LABEL_84;
      case 0x12u:
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v16 = 0;
        *(unsigned char *)(a1 + 188) |= 0x10u;
        while (2)
        {
          uint64_t v38 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v39 = v38 + 1;
          if (v38 == -1 || v39 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v40 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v38);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v39;
            v16 |= (unint64_t)(v40 & 0x7F) << v36;
            if (v40 < 0)
            {
              v36 += 7;
              BOOL v10 = v37++ >= 9;
              if (v10)
              {
                LODWORD(v16) = 0;
                goto LABEL_113;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v16) = 0;
        }
LABEL_113:
        uint64_t v60 = 148;
        goto LABEL_122;
      case 0x13u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 24;
        goto LABEL_84;
      case 0x14u:
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v16 = 0;
        *(unsigned char *)(a1 + 188) |= 8u;
        while (2)
        {
          uint64_t v43 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v45 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v43);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v44;
            v16 |= (unint64_t)(v45 & 0x7F) << v41;
            if (v45 < 0)
            {
              v41 += 7;
              BOOL v10 = v42++ >= 9;
              if (v10)
              {
                LODWORD(v16) = 0;
                goto LABEL_117;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v16) = 0;
        }
LABEL_117:
        uint64_t v60 = 144;
        goto LABEL_122;
      case 0x15u:
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v16 = 0;
        *(unsigned char *)(a1 + 188) |= 2u;
        while (2)
        {
          uint64_t v48 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v48);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v49;
            v16 |= (unint64_t)(v50 & 0x7F) << v46;
            if (v50 < 0)
            {
              v46 += 7;
              BOOL v10 = v47++ >= 9;
              if (v10)
              {
                LODWORD(v16) = 0;
                goto LABEL_121;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v16) = 0;
        }
LABEL_121:
        uint64_t v60 = 88;
LABEL_122:
        *(_DWORD *)(a1 + v60) = v16;
        goto LABEL_130;
      case 0x16u:
        id v20 = objc_alloc_init(PDDPDate);
        uint64_t v21 = 104;
        goto LABEL_78;
      case 0x17u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 152;
        goto LABEL_84;
      case 0x18u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 64;
        goto LABEL_84;
      case 0x19u:
        uint64_t v23 = PBReaderReadString();
        uint64_t v24 = 80;
LABEL_84:
        uint64_t v51 = *(void **)(a1 + v24);
        *(void *)(a1 + v24) = v23;

        goto LABEL_130;
      case 0x1Au:
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v54 = 0;
        *(unsigned char *)(a1 + 188) |= 0x40u;
        while (2)
        {
          uint64_t v55 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v56 = v55 + 1;
          if (v55 == -1 || v56 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v55);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v56;
            v54 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              BOOL v10 = v53++ >= 9;
              if (v10)
              {
                uint64_t v54 = 0;
                goto LABEL_126;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v54 = 0;
        }
LABEL_126:
        BOOL v61 = v54 != 0;
        uint64_t v62 = 184;
LABEL_127:
        *(unsigned char *)(a1 + v62) = v61;
        goto LABEL_130;
      case 0x1Bu:
        *(unsigned char *)(a1 + 188) |= 1u;
        unint64_t v58 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v58 <= 0xFFFFFFFFFFFFFFF7 && v58 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v59 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v58);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v58 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v59 = 0;
        }
        *(void *)(a1 + 8) = v59;
        goto LABEL_130;
      default:
        if (v13 == 100)
        {
          PBReaderReadString();
          id v20 = (PDDPDate *)objc_claimAutoreleasedReturnValue();
          if (v20) {
            [(id)a1 addClassIds:v20];
          }
          goto LABEL_97;
        }
        if (v13 != 101)
        {
LABEL_28:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          goto LABEL_130;
        }
        id v20 = objc_alloc_init(PDDPDate);
        uint64_t v21 = 96;
LABEL_78:
        objc_storeStrong((id *)(a1 + v21), v20);
        if PBReaderPlaceMark() && (PDDPDateReadFrom((uint64_t)v20, a2))
        {
          PBReaderRecallMark();
LABEL_97:

LABEL_130:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

        return 0;
    }
  }
}

uint64_t sub_10005FCA0()
{
  if (qword_10023E508 != -1) {
    dispatch_once(&qword_10023E508, &stru_1001F32C8);
  }
  uint64_t v0 = qword_10023E500;

  return __set_user_dir_suffix(v0);
}

void sub_10005FCF4(id a1)
{
  id v1 = +[NSBundle mainBundle];
  id v2 = [v1 bundleIdentifier];
  if (!v2)
  {
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      int v4 = *__error();
      v5[0] = 67109634;
      v5[1] = v4;
      __int16 v6 = 2112;
      uint64_t v7 = v1;
      __int16 v8 = 2112;
      uint64_t v9 = 0;
      _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR, "failed to get bundleIdentifier errno: %{darwin.errno}d, bundle: %@, bundleIdentifier: %@", (uint8_t *)v5, 0x1Cu);
    }
    qword_10023E500 = (uint64_t)"com.apple.progressd";
  }
  id v3 = v2;
  qword_10023E500 = (uint64_t)[v3 UTF8String];
}

void sub_1000618C4(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = v3;
  if (v3)
  {
    if (v3[2]) {
      goto LABEL_9;
    }
    unsigned int v5 = objc_alloc_init(PDDPDashboardApp);
    __int16 v6 = (void *)v4[1];
  }
  else
  {
    unsigned int v5 = objc_alloc_init(PDDPDashboardApp);
    __int16 v6 = 0;
  }
  id v7 = v6;
  [(PDDPDashboardApp *)v5 setAppIdentifier:v7];

  [*(id *)(a1 + 32) addDashboardApps:v5];
  CLSInitLog();
  __int16 v8 = [*(id *)(a1 + 40) logSubsystem];
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    uint64_t v9 = objc_opt_class();
    BOOL v10 = *(void **)(a1 + 40);
    id v11 = v9;
    uint64_t v12 = [v10 operationID];
    if (v4) {
      unint64_t v13 = (void *)v4[1];
    }
    else {
      unint64_t v13 = 0;
    }
    id v14 = v13;
    int v15 = 138543874;
    uint64_t v16 = v9;
    __int16 v17 = 2114;
    unint64_t v18 = v12;
    __int16 v19 = 2112;
    id v20 = v14;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "%{public}@ %{public}@ request add app: %@", (uint8_t *)&v15, 0x20u);
  }
LABEL_9:
}

void sub_100062128(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000621E4(uint64_t a1)
{
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  id v2 = [*(id *)(a1 + 32) appIdentifiersInRequest];
  id v3 = [v2 countByEnumeratingWithState:&v17 objects:v27 count:16];
  if (v3)
  {
    id v5 = v3;
    uint64_t v6 = *(void *)v18;
    *(void *)&long long v4 = 138543874;
    long long v16 = v4;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v18 != v6) {
          objc_enumerationMutation(v2);
        }
        __int16 v8 = *(void **)(*((void *)&v17 + 1) + 8 * i);
        uint64_t v9 = sub_10013BF50([PDDashboardAppRegisterState alloc], v8);
        BOOL v10 = v9;
        if (v9) {
          v9[2] = 1;
        }
        objc_msgSend(*(id *)(a1 + 40), "updateObject:", v9, v16);
        CLSInitLog();
        id v11 = [*(id *)(a1 + 32) logSubsystem];
        if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
        {
          uint64_t v12 = objc_opt_class();
          uint64_t v13 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
          *(_DWORD *)long long buf = v16;
          id v22 = v12;
          __int16 v23 = 2114;
          uint64_t v24 = v13;
          __int16 v25 = 2112;
          unsigned int v26 = v8;
          id v14 = v12;
          _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "%{public}@:%{public}@ Register done in DB for app: %@", buf, 0x20u);
        }
      }
      id v5 = [v2 countByEnumeratingWithState:&v17 objects:v27 count:16];
    }
    while (v5);
  }

  return 1;
}

BOOL sub_100062FA4(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = *(PDDPTypedValue **)(a1 + 24);
        *(void *)(a1 + 24) = v12;
        goto LABEL_29;
      case 2u:
        uint64_t v13 = objc_alloc_init(PDDPTypedValue);
        objc_storeStrong((id *)(a1 + 32), v13);
        if (!PBReaderPlaceMark() || (sub_10014AA8C((uint64_t)v13, a2) & 1) == 0) {
          goto LABEL_32;
        }
        goto LABEL_28;
      case 3u:
        uint64_t v13 = objc_alloc_init(PDDPDate);
        uint64_t v14 = 8;
        goto LABEL_26;
      case 4u:
        uint64_t v13 = objc_alloc_init(PDDPDate);
        uint64_t v14 = 16;
LABEL_26:
        objc_storeStrong((id *)(a1 + v14), v13);
        if PBReaderPlaceMark() && (PDDPDateReadFrom((uint64_t)v13, a2))
        {
LABEL_28:
          PBReaderRecallMark();
LABEL_29:

LABEL_30:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }
LABEL_32:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_30;
    }
  }
}

id sub_1000637B8()
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10006385C;
  block[3] = &unk_1001F29D0;
  void block[4] = self;
  if (qword_10023E518 != -1) {
    dispatch_once(&qword_10023E518, block);
  }
  uint64_t v0 = (void *)qword_10023E510;

  return v0;
}

uint64_t sub_10006385C(uint64_t a1)
{
  qword_10023E510 = (uint64_t)objc_alloc_init(*(Class *)(a1 + 32));

  return _objc_release_x1();
}

void sub_100063984(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    objc_initWeak(&location, a1);
    char v4 = [a1 schedulerQueue];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100063A78;
    block[3] = &unk_1001F26E8;
    objc_copyWeak(&v7, &location);
    id v6 = v3;
    dispatch_async(v4, block);

    objc_destroyWeak(&v7);
    objc_destroyWeak(&location);
  }
}

void sub_100063A64(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_100063A78(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = sub_100063B2C;
    v4[3] = &unk_1001F3318;
    id v5 = *(id *)(a1 + 32);
    id v3 = objc_retainBlock(v4);
    ((void (*)(void *, id))v3[2])(v3, WeakRetained);
  }
}

void sub_100063B2C(uint64_t a1, void *a2)
{
  id v3 = a2;
  char v4 = [v3 tasks];
  id v5 = [v4 objectForKeyedSubscript:*(void *)(a1 + 32)];

  id v6 = +[BGSystemTaskScheduler sharedScheduler];
  unsigned __int8 v7 = [v6 deregisterTaskWithIdentifier:*(void *)(a1 + 32)];

  if ((v7 & 1) == 0)
  {
    CLSInitLog();
    char v8 = CLSLogDefault;
    if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_ERROR))
    {
      uint64_t v14 = *(void *)(a1 + 32);
      int v15 = 138412290;
      uint64_t v16 = v14;
      _os_log_error_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "Failed to remove BGSystemTask with identifier %@", (uint8_t *)&v15, 0xCu);
    }
  }
  CLSInitLog();
  uint64_t v9 = CLSLogDefault;
  BOOL v10 = os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_INFO);
  if (v5)
  {
    if (v10)
    {
      uint64_t v11 = *(void *)(a1 + 32);
      int v15 = 138412290;
      uint64_t v16 = v11;
    }
    uint64_t v12 = [v3 tasks];
    [v12 removeObjectForKey:*(void *)(a1 + 32)];
  }
  else if (v10)
  {
    uint64_t v13 = *(void *)(a1 + 32);
    int v15 = 138412290;
    uint64_t v16 = v13;
  }
}

id sub_100063F58(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) runWithTask:a2];
}

id sub_100063F64(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) runWithTask:a2];
}

void sub_100063F70(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    CLSInitLog();
    char v4 = (void *)CLSLogDefault;
    if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_DEBUG))
    {
      id v6 = v4;
      unsigned __int8 v7 = [v3 identifier];
      LODWORD(location[0]) = 138412290;
      *(id *)((char *)location + 4) = v7;
      _os_log_debug_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "Attempting to schedule task '%@'", (uint8_t *)location, 0xCu);
    }
    objc_initWeak(location, a1);
    id v5 = [a1 schedulerQueue];
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    void v8[2] = sub_100064114;
    void v8[3] = &unk_1001F26E8;
    objc_copyWeak(&v10, location);
    id v9 = v3;
    dispatch_async(v5, v8);

    objc_destroyWeak(&v10);
    objc_destroyWeak(location);
  }
}

void sub_1000640F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_100064114(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = sub_1000641C8;
    v4[3] = &unk_1001F3318;
    id v5 = *(id *)(a1 + 32);
    id v3 = objc_retainBlock(v4);
    ((void (*)(void *, id))v3[2])(v3, WeakRetained);
  }
}

void sub_1000641C8(uint64_t a1, void *a2)
{
  [a2 createTaskSchedulerRegistration:*(void *)(a1 + 32)];
  if (objc_opt_respondsToSelector()) {
    unsigned int v3 = [*(id *)(a1 + 32) isRepeating];
  }
  else {
    unsigned int v3 = 0;
  }
  char v4 = +[BGSystemTaskScheduler sharedScheduler];
  id v5 = [*(id *)(a1 + 32) identifier];
  id v6 = [v4 taskRequestForIdentifier:v5];

  CLSInitLog();
  unsigned __int8 v7 = (void *)CLSLogDefault;
  BOOL v8 = os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_DEBUG);
  if (!v6)
  {
    if (v3)
    {
      if (v8)
      {
        char v29 = *(void **)(a1 + 32);
        char v30 = v7;
        unsigned int v31 = [v29 identifier];
        *(_DWORD *)long long buf = 138412290;
        uint64_t v38 = v31;
        _os_log_debug_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEBUG, "Scheduling repeating task: '%@'", buf, 0xCu);
      }
      id v12 = objc_alloc((Class)BGRepeatingSystemTaskRequest);
      uint64_t v13 = [*(id *)(a1 + 32) identifier];
      id v6 = [v12 initWithIdentifier:v13];

      objc_msgSend(v6, "setInterval:", (double)(unint64_t)objc_msgSend(*(id *)(a1 + 32), "delay"));
      if ((objc_opt_respondsToSelector() & 1) != 0 && [*(id *)(a1 + 32) gracePeriod]) {
        objc_msgSend(v6, "setMinDurationBetweenInstances:", (double)(unint64_t)((unsigned char *)objc_msgSend(*(id *)(a1 + 32), "delay")- (unsigned char *)objc_msgSend(*(id *)(a1 + 32), "gracePeriod")));
      }
    }
    else
    {
      if (v8)
      {
        uint64_t v32 = *(void **)(a1 + 32);
        uint64_t v33 = v7;
        unint64_t v34 = [v32 identifier];
        *(_DWORD *)long long buf = 138412290;
        uint64_t v38 = v34;
        _os_log_debug_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEBUG, "Scheduling non-repeating task: '%@'", buf, 0xCu);
      }
      id v14 = objc_alloc((Class)BGNonRepeatingSystemTaskRequest);
      int v15 = [*(id *)(a1 + 32) identifier];
      id v6 = [v14 initWithIdentifier:v15];

      objc_msgSend(v6, "setScheduleAfter:", (double)(unint64_t)objc_msgSend(*(id *)(a1 + 32), "delay"));
      if ((objc_opt_respondsToSelector() & 1) != 0 && [*(id *)(a1 + 32) gracePeriod]) {
        objc_msgSend(v6, "setTrySchedulingBefore:", (double)((unint64_t)objc_msgSend(*(id *)(a1 + 32), "delay")+ (unint64_t)objc_msgSend(*(id *)(a1 + 32), "gracePeriod")));
      }
    }
    if (objc_opt_respondsToSelector())
    {
      id v16 = [*(id *)(a1 + 32) requiredNetworkState];
      if (v16 == (id)2)
      {
        [v6 setRequiresInexpensiveNetworkConnectivity:1];
      }
      else if (v16 == (id)1)
      {
        [v6 setRequiresNetworkConnectivity:1];
      }
    }
    id v17 = [*(id *)(a1 + 32) priority];
    if (v17)
    {
      if (v17 != (id)1) {
        goto LABEL_28;
      }
      uint64_t v18 = 2;
    }
    else
    {
      uint64_t v18 = 1;
    }
    [v6 setPriority:v18];
LABEL_28:
    long long v19 = +[BGSystemTaskScheduler sharedScheduler];
    id v36 = 0;
    unsigned __int8 v20 = [v19 submitTaskRequest:v6 error:&v36];
    id v10 = v36;

    CLSInitLog();
    uint64_t v21 = (void *)CLSLogDefault;
    BOOL v22 = os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_DEBUG);
    if (v20)
    {
      if (!v22) {
        goto LABEL_32;
      }
      __int16 v23 = *(void **)(a1 + 32);
      uint64_t v24 = v21;
      __int16 v25 = [v23 identifier];
      *(_DWORD *)long long buf = 138412290;
      uint64_t v38 = v25;
      unsigned int v26 = "Successfully submitted task '%@'";
      uint64_t v27 = v24;
      uint32_t v28 = 12;
    }
    else
    {
      if (!v22) {
        goto LABEL_32;
      }
      char v35 = *(void **)(a1 + 32);
      uint64_t v24 = v21;
      __int16 v25 = [v35 identifier];
      *(_DWORD *)long long buf = 138412546;
      uint64_t v38 = v25;
      __int16 v39 = 2112;
      char v40 = v10;
      unsigned int v26 = "Failed to submit task '%@' with error: %@";
      uint64_t v27 = v24;
      uint32_t v28 = 22;
    }
    _os_log_debug_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEBUG, v26, buf, v28);

    goto LABEL_32;
  }
  if (v8)
  {
    id v9 = *(void **)(a1 + 32);
    id v10 = v7;
    uint64_t v11 = [v9 identifier];
    *(_DWORD *)long long buf = 138412290;
    uint64_t v38 = v11;
    _os_log_debug_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "Task to schedule already exists: '%@'", buf, 0xCu);

LABEL_32:
  }
}

void sub_1000649F0(uint64_t a1)
{
  CLSInitLog();
  id v2 = (void *)CLSLogDefault;
  if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_DEFAULT))
  {
    unsigned int v3 = *(void **)(a1 + 32);
    char v4 = v2;
    id v5 = [v3 identifier];
    int v6 = 138412290;
    unsigned __int8 v7 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Task expirationHandler called '%@'", (uint8_t *)&v6, 0xCu);
  }
}

void sub_100064D60(id a1)
{
  uint64_t v1 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  attr = dispatch_queue_attr_make_with_qos_class(v1, QOS_CLASS_USER_INITIATED, 0);

  id v2 = dispatch_get_global_queue(25, 0);
  dispatch_queue_t v3 = dispatch_queue_create_with_target_V2("com.apple.progressd.taskScheduler", attr, v2);
  char v4 = (void *)qword_10023E520;
  qword_10023E520 = (uint64_t)v3;
}

void *sub_100064E0C(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    v7.receiver = a1;
    v7.super_class = (Class)PDAllowedHost;
    a1 = objc_msgSendSuper2(&v7, "init");
    if (a1)
    {
      uint64_t v4 = [v3 lowercaseString];
      id v5 = (void *)a1[1];
      a1[1] = v4;
    }
  }

  return a1;
}

BOOL sub_100065140(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  BOOL v5 = 0;
  if (a1 && v3)
  {
    uint64_t v11 = 0;
    id v12 = &v11;
    uint64_t v13 = 0x2020000000;
    char v14 = 0;
    uint64_t v6 = objc_opt_class();
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    void v8[2] = sub_10006524C;
    void v8[3] = &unk_1001F33C8;
    id v9 = v4;
    id v10 = &v11;
    [a1 selectAll:v6 block:v8];
    BOOL v5 = *((unsigned char *)v12 + 24) != 0;

    _Block_object_dispose(&v11, 8);
  }

  return v5;
}

void sub_100065234(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10006524C(uint64_t a1, void *a2, unsigned char *a3)
{
  BOOL v5 = a2;
  id v12 = v5;
  if (v5) {
    uint64_t v6 = v5[1];
  }
  else {
    uint64_t v6 = 0;
  }
  objc_super v7 = (char *)[*(id *)(a1 + 32) hasSuffix:v6];
  BOOL v8 = v12;
  if (v7)
  {
    if (v12) {
      uint64_t v9 = v12[1];
    }
    else {
      uint64_t v9 = 0;
    }
    objc_super v7 = (char *)[*(id *)(a1 + 32) rangeOfString:v9];
    if (v7)
    {
      objc_super v7 = (char *)[*(id *)(a1 + 32) characterAtIndex:v7 - 1];
      BOOL v10 = v7 == 46;
    }
    else
    {
      BOOL v10 = 1;
    }
    BOOL v8 = v12;
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v10;
  }
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)) {
    *a3 = 1;
  }

  return _objc_release_x1(v7, v8);
}

id sub_100065A04(id a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    uint64_t v4 = objc_opt_new();
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_100065AF4;
    v7[3] = &unk_1001F2F00;
    void v7[4] = a1;
    id v8 = v3;
    id v9 = v4;
    id v5 = v4;
    sub_10000749C(a1, v7);
    a1 = [v5 copy];
  }

  return a1;
}

void sub_100065AF4(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  id v3 = +[NSArray arrayWithObjects:&v6 count:1];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100065BEC;
  v4[3] = &unk_1001F2ED8;
  id v5 = *(id *)(a1 + 48);
  sub_100007540(v2, @"select distinct classID from CLSHandoutRecipient as R join CLSHandoutAttachment as A on R.parentObjectID = A.parentObjectID join CLSSurvey as S on S.parentObjectID = A.objectID join CLSQuestionStep as QS on QS.parentObjectID = S.objectID and QS.objectID = ?", 1, v3, v4);
}

void sub_100065BEC(uint64_t a1, uint64_t *a2)
{
  sub_100003BF0(a2, @"classID");
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  [*(id *)(a1 + 32) addObject:v3];
}

id sub_100065C50(id a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = v5;
  if (a1)
  {
    uint64_t v18 = 0;
    long long v19 = &v18;
    uint64_t v20 = 0x3032000000;
    uint64_t v21 = sub_10000B684;
    BOOL v22 = sub_10000B55C;
    id v23 = 0;
    switch(a2)
    {
      case 1:
        uint64_t v7 = objc_opt_class();
        uint64_t v24 = v6;
        id v8 = +[NSArray arrayWithObjects:&v24 count:1];
        uint64_t v9 = [a1 select:v7 where:@"parentObjectID = ?" bindings:v8];
        BOOL v10 = (void *)v19[5];
        void v19[5] = v9;

        break;
      case 2:
      case 4:
        v15[0] = _NSConcreteStackBlock;
        v15[1] = 3221225472;
        v15[2] = sub_100065ED0;
        v15[3] = &unk_1001F25D0;
        id v17 = &v18;
        void v15[4] = a1;
        id v16 = v5;
        sub_10000749C(a1, v15);

        break;
      case 3:
        v12[0] = _NSConcreteStackBlock;
        v12[1] = 3221225472;
        v12[2] = sub_100065F98;
        void v12[3] = &unk_1001F25D0;
        char v14 = &v18;
        void v12[4] = a1;
        id v13 = v5;
        sub_10000749C(a1, v12);

        break;
      default:
        break;
    }
    a1 = (id)v19[5];
    _Block_object_dispose(&v18, 8);
  }

  return a1;
}

void sub_100065EA0(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_100065ED0(void *a1)
{
  id v2 = (void *)a1[4];
  uint64_t v3 = objc_opt_class();
  uint64_t v8 = a1[5];
  uint64_t v4 = +[NSArray arrayWithObjects:&v8 count:1];
  uint64_t v5 = [v2 select:v3 where:@"parentObjectID = ?" bindings:v4];
  uint64_t v6 = *(void *)(a1[6] + 8);
  uint64_t v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;
}

void sub_100065F98(void *a1)
{
  id v2 = (void *)a1[4];
  uint64_t v3 = objc_opt_class();
  uint64_t v8 = a1[5];
  uint64_t v4 = +[NSArray arrayWithObjects:&v8 count:1];
  uint64_t v5 = [v2 select:v3 where:@"parentObjectID = ?" bindings:v4];
  uint64_t v6 = *(void *)(a1[6] + 8);
  uint64_t v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;
}

id sub_100066060(id a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  if (a1)
  {
    uint64_t v9 = 0;
    BOOL v10 = &v9;
    uint64_t v11 = 0x3032000000;
    id v12 = sub_10000B684;
    id v13 = sub_10000B55C;
    id v14 = 0;
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_10006618C;
    v6[3] = &unk_1001F25D0;
    uint64_t v8 = &v9;
    void v6[4] = a1;
    id v7 = v3;
    sub_10000749C(a1, v6);
    a1 = (id)v10[5];

    _Block_object_dispose(&v9, 8);
  }

  return a1;
}

void sub_100066174(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10006618C(void *a1)
{
  id v2 = (void *)a1[4];
  uint64_t v3 = objc_opt_class();
  uint64_t v8 = a1[5];
  uint64_t v4 = +[NSArray arrayWithObjects:&v8 count:1];
  uint64_t v5 = [v2 select:v3 where:@"objectID = ?" bindings:v4];
  uint64_t v6 = *(void *)(a1[6] + 8);
  id v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;
}

void *sub_100066254(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  if (a1)
  {
    uint64_t v9 = 0;
    BOOL v10 = &v9;
    uint64_t v11 = 0x2020000000;
    uint64_t v12 = 0;
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_100066340;
    v6[3] = &unk_1001F33F0;
    void v6[4] = a1;
    id v7 = v3;
    uint64_t v8 = &v9;
    sub_10000749C(a1, v6);
    a1 = (void *)v10[3];

    _Block_object_dispose(&v9, 8);
  }

  return a1;
}

void sub_100066328(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100066340(void *a1)
{
  id v2 = (void *)a1[4];
  uint64_t v5 = a1[5];
  id v3 = +[NSArray arrayWithObjects:&v5 count:1];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10006642C;
  v4[3] = &unk_1001F1F28;
  void v4[4] = a1[6];
  sub_100007540(v2, @"select CS.state from CLSCollaborationState as CS join CLSHandoutAttachment as HA on HA.parentObjectID = CS.parentObjectID join CLSSurvey as S on S.parentObjectID = HA.objectID join CLSQuestionStep as QS on QS.parentObjectID = S.objectID and QS.objectID = ?", 1, v3, v4);
}

void sub_10006642C(uint64_t a1, uint64_t *a2)
{
  sub_100003BF0(a2, @"state");
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = [v3 integerValue];
}

BOOL sub_100066C68(void *a1)
{
  if (!a1) {
    return 0;
  }
  sub_100005B44(a1);
  uint64_t v1 = (unsigned char *)objc_claimAutoreleasedReturnValue();
  if (v1) {
    BOOL v2 = v1[8] != 0;
  }
  else {
    BOOL v2 = 0;
  }

  return v2;
}

BOOL sub_100066CB8(void *a1)
{
  if (!a1) {
    return 0;
  }
  sub_100005B44(a1);
  uint64_t v1 = (unsigned char *)objc_claimAutoreleasedReturnValue();
  if (v1) {
    BOOL v2 = v1[11] != 0;
  }
  else {
    BOOL v2 = 0;
  }

  return v2;
}

id sub_1000670BC(void *a1)
{
  if (a1)
  {
    a1 = sub_100006D08(a1, @"currentUserOrganizationID");
    uint64_t v1 = vars8;
  }
  return a1;
}

id sub_1000670F4(id result, void *a2)
{
  if (result) {
    return sub_10016018C(result, a2, @"currentUserOrganizationID");
  }
  return result;
}

id sub_100067108(id result, void *a2)
{
  if (result) {
    return sub_10016018C(result, a2, @"currentUserOrganizationName");
  }
  return result;
}

id sub_10006711C(id result, BOOL a2)
{
  if (result) {
    return sub_10015FEC4(result, a2, @"currentUserOrganizationProgressTrackingAllowed");
  }
  return result;
}

id sub_100067130(id result, BOOL a2)
{
  if (result) {
    return sub_10015FEC4(result, a2, @"currentUserPersonMaidAnalyticsEnabled");
  }
  return result;
}

uint64_t sub_1000678B0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 32;
        goto LABEL_31;
      case 2u:
        char v15 = 0;
        unsigned int v16 = 0;
        uint64_t v17 = 0;
        *(unsigned char *)(a1 + 52) |= 1u;
        while (2)
        {
          unint64_t v18 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v18 == -1 || v18 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v19 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v18);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v18 + 1;
            v17 |= (unint64_t)(v19 & 0x7F) << v15;
            if (v19 < 0)
            {
              v15 += 7;
              BOOL v9 = v16++ >= 9;
              if (v9)
              {
                LODWORD(v17) = 0;
                goto LABEL_42;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v17) = 0;
        }
LABEL_42:
        *(_DWORD *)(a1 + 48) = v17;
        goto LABEL_43;
      case 3u:
        id v14 = objc_alloc_init(PDDPDate);
        uint64_t v20 = 16;
        goto LABEL_33;
      case 4u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 40;
LABEL_31:
        uint64_t v21 = *(void **)(a1 + v13);
        *(void *)(a1 + v13) = v12;

        goto LABEL_43;
      case 5u:
        id v14 = objc_alloc_init(PDDPDate);
        uint64_t v20 = 24;
LABEL_33:
        objc_storeStrong((id *)(a1 + v20), v14);
        if PBReaderPlaceMark() && (PDDPDateReadFrom((uint64_t)v14, a2))
        {
          PBReaderRecallMark();
LABEL_36:

LABEL_43:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

        return 0;
      default:
        if ((v6 >> 3) == 100)
        {
          PBReaderReadString();
          id v14 = (PDDPDate *)objc_claimAutoreleasedReturnValue();
          if (v14) {
            [(id)a1 addClassIds:v14];
          }
          goto LABEL_36;
        }
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_43;
    }
  }
}

id *sub_1000687D8(id *a1, void *a2, void *a3, void *a4, double a5)
{
  id v10 = a2;
  id v11 = a4;
  if (a1)
  {
    v16.receiver = a1;
    v16.super_class = (Class)PDPool;
    uint64_t v12 = (id *)objc_msgSendSuper2(&v16, "init");
    a1 = v12;
    if (v12)
    {
      objc_storeWeak(v12 + 4, v11);
      objc_storeStrong(a1 + 5, a2);
      a1[6] = a3;
      *((double *)a1 + 7) = a5;
      id v13 = [objc_alloc((Class)NSMutableArray) initWithCapacity:a1[6]];
      id v14 = a1[2];
      a1[2] = v13;
    }
  }

  return a1;
}

id sub_1000688AC(id result)
{
  if (result)
  {
    id v1 = result;
    [result lock];
    CLSInitLog();
    BOOL v2 = (void *)CLSLogDefault;
    if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v8 = *((void *)v1 + 5);
      *(_DWORD *)long long buf = 138412290;
      uint64_t v16 = v8;
      BOOL v9 = v2;
      _os_log_debug_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "removing all items in the pool (%@)", buf, 0xCu);
    }
    long long v12 = 0u;
    long long v13 = 0u;
    long long v10 = 0u;
    long long v11 = 0u;
    id v3 = *((id *)v1 + 2);
    id v4 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
    if (v4)
    {
      id v5 = v4;
      uint64_t v6 = *(void *)v11;
      do
      {
        unint64_t v7 = 0;
        do
        {
          if (*(void *)v11 != v6) {
            objc_enumerationMutation(v3);
          }
          objc_msgSend(*(id *)(*((void *)&v10 + 1) + 8 * (void)v7), "pd_close", (void)v10);
          unint64_t v7 = (char *)v7 + 1;
        }
        while (v5 != v7);
        id v5 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
      }
      while (v5);
    }

    [*((id *)v1 + 2) removeAllObjects];
    return [v1 unlock];
  }
  return result;
}

id sub_100068A1C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) drain];
}

void sub_100068BC0(id a1)
{
  id v3 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  dispatch_queue_t v1 = dispatch_queue_create("com.apple.progressd.pool", v3);
  BOOL v2 = (void *)qword_10023E530;
  qword_10023E530 = (uint64_t)v1;
}

id sub_100069308(uint64_t a1, int a2)
{
  if (*(_DWORD *)(a1 + 12) <= a2) {
    objc_exception_throw(@"bork");
  }
  if (sqlite3_column_type(*(sqlite3_stmt **)a1, *(_DWORD *)(a1 + 8) + a2) == 5) {
    id v4 = 0;
  }
  else {
    id v4 = objc_msgSend(objc_alloc((Class)NSDate), "initWithTimeIntervalSinceReferenceDate:", sqlite3_column_double(*(sqlite3_stmt **)a1, *(_DWORD *)(a1 + 8) + a2));
  }

  return v4;
}

uint64_t sub_1000699C4(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 8;
        goto LABEL_65;
      case 2u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 40;
        goto LABEL_65;
      case 3u:
        char v15 = 0;
        unsigned int v16 = 0;
        uint64_t v17 = 0;
        *(unsigned char *)(a1 + 52) |= 2u;
        while (2)
        {
          unint64_t v18 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v18 == -1 || v18 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v19 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v18);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v18 + 1;
            v17 |= (unint64_t)(v19 & 0x7F) << v15;
            if (v19 < 0)
            {
              v15 += 7;
              BOOL v9 = v16++ >= 9;
              if (v9)
              {
                LODWORD(v17) = 0;
                goto LABEL_76;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v17) = 0;
        }
LABEL_76:
        uint64_t v49 = 20;
        goto LABEL_85;
      case 4u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v17 = 0;
        *(unsigned char *)(a1 + 52) |= 1u;
        while (2)
        {
          unint64_t v22 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v22 == -1 || v22 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v23 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v22);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v22 + 1;
            v17 |= (unint64_t)(v23 & 0x7F) << v20;
            if (v23 < 0)
            {
              v20 += 7;
              BOOL v9 = v21++ >= 9;
              if (v9)
              {
                LODWORD(v17) = 0;
                goto LABEL_80;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v17) = 0;
        }
LABEL_80:
        uint64_t v49 = 16;
        goto LABEL_85;
      case 5u:
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v17 = 0;
        *(unsigned char *)(a1 + 52) |= 4u;
        while (2)
        {
          unint64_t v26 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v26 == -1 || v26 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v27 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v26);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v26 + 1;
            v17 |= (unint64_t)(v27 & 0x7F) << v24;
            if (v27 < 0)
            {
              v24 += 7;
              BOOL v9 = v25++ >= 9;
              if (v9)
              {
                LODWORD(v17) = 0;
                goto LABEL_84;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v17) = 0;
        }
LABEL_84:
        uint64_t v49 = 24;
LABEL_85:
        *(_DWORD *)(a1 + v49) = v17;
        continue;
      case 6u:
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v30 = 0;
        *(unsigned char *)(a1 + 52) |= 0x40u;
        while (2)
        {
          unint64_t v31 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v31 == -1 || v31 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v32 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v31);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v31 + 1;
            v30 |= (unint64_t)(v32 & 0x7F) << v28;
            if (v32 < 0)
            {
              v28 += 7;
              BOOL v9 = v29++ >= 9;
              if (v9)
              {
                uint64_t v30 = 0;
                goto LABEL_89;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v30 = 0;
        }
LABEL_89:
        BOOL v50 = v30 != 0;
        uint64_t v51 = 51;
        goto LABEL_102;
      case 7u:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        *(unsigned char *)(a1 + 52) |= 0x10u;
        while (2)
        {
          unint64_t v36 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v36 == -1 || v36 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v37 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v36);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v36 + 1;
            v35 |= (unint64_t)(v37 & 0x7F) << v33;
            if (v37 < 0)
            {
              v33 += 7;
              BOOL v9 = v34++ >= 9;
              if (v9)
              {
                uint64_t v35 = 0;
                goto LABEL_93;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v35 = 0;
        }
LABEL_93:
        BOOL v50 = v35 != 0;
        uint64_t v51 = 49;
        goto LABEL_102;
      case 8u:
        char v38 = 0;
        unsigned int v39 = 0;
        uint64_t v40 = 0;
        *(unsigned char *)(a1 + 52) |= 0x20u;
        while (2)
        {
          unint64_t v41 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v41 == -1 || v41 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v42 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v41);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v41 + 1;
            v40 |= (unint64_t)(v42 & 0x7F) << v38;
            if (v42 < 0)
            {
              v38 += 7;
              BOOL v9 = v39++ >= 9;
              if (v9)
              {
                uint64_t v40 = 0;
                goto LABEL_97;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v40 = 0;
        }
LABEL_97:
        BOOL v50 = v40 != 0;
        uint64_t v51 = 50;
        goto LABEL_102;
      case 9u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 32;
LABEL_65:
        uint64_t v43 = *(void **)(a1 + v13);
        *(void *)(a1 + v13) = v12;

        continue;
      case 0xAu:
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v46 = 0;
        *(unsigned char *)(a1 + 52) |= 8u;
        break;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        continue;
    }
    while (1)
    {
      unint64_t v47 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v47 == -1 || v47 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v48 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v47);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v47 + 1;
      v46 |= (unint64_t)(v48 & 0x7F) << v44;
      if ((v48 & 0x80) == 0) {
        goto LABEL_99;
      }
      v44 += 7;
      BOOL v9 = v45++ >= 9;
      if (v9)
      {
        uint64_t v46 = 0;
        goto LABEL_101;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_99:
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      uint64_t v46 = 0;
    }
LABEL_101:
    BOOL v50 = v46 != 0;
    uint64_t v51 = 48;
LABEL_102:
    *(unsigned char *)(a1 + v51) = v50;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

id sub_10006B53C(id a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    char v4 = objc_opt_new();
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    void v8[2] = sub_10006B624;
    void v8[3] = &unk_1001F2F00;
    void v8[4] = a1;
    id v9 = v3;
    id v5 = v4;
    id v10 = v5;
    sub_10000749C(a1, v8);
    unint64_t v6 = v10;
    a1 = v5;
  }

  return a1;
}

void sub_10006B624(uint64_t a1)
{
  BOOL v2 = *(void **)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  id v3 = +[NSArray arrayWithObjects:&v11 count:1];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  void v8[2] = sub_10006B7B4;
  void v8[3] = &unk_1001F2ED8;
  id v9 = *(id *)(a1 + 48);
  sub_100007540(v2, @"select distinct personID from CLSClassMember where parentObjectID = ?", 1, v3, v8);

  char v4 = *(void **)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  id v5 = +[NSArray arrayWithObjects:&v10 count:1];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_10006B818;
  v6[3] = &unk_1001F2ED8;
  id v7 = *(id *)(a1 + 48);
  sub_100007540(v4, @"select distinct personID from CLSClassMember where parentObjectID != ?", 1, v5, v6);
}

void sub_10006B7B4(uint64_t a1, uint64_t *a2)
{
  BOOL v2 = *(void **)(a1 + 32);
  sub_100003BF0(a2, @"personID");
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  [v2 addObject:v3];
}

void sub_10006B818(uint64_t a1, uint64_t *a2)
{
  BOOL v2 = *(void **)(a1 + 32);
  sub_100003BF0(a2, @"personID");
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  [v2 removeObject:v3];
}

uint64_t sub_10006E2F4(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v12 = objc_alloc_init(PDDPEERequestZone);
        objc_storeStrong((id *)(a1 + 32), v12);
        if PBReaderPlaceMark() && (sub_10013E898((uint64_t)v12, a2)) {
          goto LABEL_25;
        }
        goto LABEL_40;
      case 2u:
        uint64_t v12 = objc_alloc_init(PDDPSearchQuery);
        objc_storeStrong((id *)(a1 + 16), v12);
        if PBReaderPlaceMark() && (sub_10010441C((uint64_t)v12, a2))
        {
LABEL_25:
          PBReaderRecallMark();

LABEL_38:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }
LABEL_40:

        return 0;
      case 3u:
        uint64_t v14 = PBReaderReadString();
        char v15 = *(void **)(a1 + 24);
        *(void *)(a1 + 24) = v14;

        goto LABEL_38;
      case 4u:
        char v16 = 0;
        unsigned int v17 = 0;
        uint64_t v18 = 0;
        *(unsigned char *)(a1 + 40) |= 1u;
        while (2)
        {
          unint64_t v19 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v19 == -1 || v19 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v20 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v19);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v19 + 1;
            v18 |= (unint64_t)(v20 & 0x7F) << v16;
            if (v20 < 0)
            {
              v16 += 7;
              BOOL v9 = v17++ >= 9;
              if (v9)
              {
                LODWORD(v18) = 0;
                goto LABEL_37;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v18) = 0;
        }
LABEL_37:
        *(_DWORD *)(a1 + 8) = v18;
        goto LABEL_38;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_38;
    }
  }
}

uint64_t sub_10006F714(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        char v12 = 0;
        unsigned int v13 = 0;
        uint64_t v14 = 0;
        *(unsigned char *)(a1 + 44) |= 1u;
        while (1)
        {
          unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v15 == -1 || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
          v14 |= (unint64_t)(v16 & 0x7F) << v12;
          if ((v16 & 0x80) == 0) {
            goto LABEL_42;
          }
          v12 += 7;
          BOOL v9 = v13++ >= 9;
          if (v9)
          {
            LODWORD(v14) = 0;
            goto LABEL_44;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_42:
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_44:
        uint64_t v25 = 8;
        goto LABEL_49;
      case 2u:
        uint64_t v18 = PBReaderReadString();
        unint64_t v19 = *(void **)(a1 + 24);
        *(void *)(a1 + 24) = v18;

        goto LABEL_50;
      case 3u:
        char v20 = objc_alloc_init(PDDPProgressEntity);
        objc_storeStrong((id *)(a1 + 32), v20);
        if (!PBReaderPlaceMark() || (sub_100073574((uint64_t)v20, a2) & 1) == 0) {
          goto LABEL_52;
        }
        goto LABEL_40;
      case 4u:
        char v21 = 0;
        unsigned int v22 = 0;
        uint64_t v14 = 0;
        *(unsigned char *)(a1 + 44) |= 2u;
        while (2)
        {
          unint64_t v23 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v23 == -1 || v23 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v23);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v23 + 1;
            v14 |= (unint64_t)(v24 & 0x7F) << v21;
            if (v24 < 0)
            {
              v21 += 7;
              BOOL v9 = v22++ >= 9;
              if (v9)
              {
                LODWORD(v14) = 0;
                goto LABEL_48;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_48:
        uint64_t v25 = 40;
LABEL_49:
        *(_DWORD *)(a1 + v25) = v14;
        goto LABEL_50;
      case 5u:
        char v20 = objc_alloc_init(PDDPHandoutAuthorizedMetaInfo);
        [(id)a1 addHandoutAuthorizedMetaInfo:v20];
        if PBReaderPlaceMark() && (sub_100169D78((uint64_t)v20, a2))
        {
LABEL_40:
          PBReaderRecallMark();

LABEL_50:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }
LABEL_52:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_50;
    }
  }
}

void sub_100070868(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL sub_100070888(uint64_t a1)
{
  uint64_t v1 = a1;
  [*(id *)(a1 + 32) cleanupAssociatedObjects];
  if ([*(id *)(v1 + 40) hasStatus])
  {
    BOOL v2 = *(void **)(v1 + 48);
    id v3 = [*(id *)(v1 + 40) status];
    char v4 = sub_1000F5844(v3);
    [v2 handleServerAlerts:v4];

    unsigned int v5 = [*(id *)(v1 + 40) status];
    uint64_t v6 = sub_1000F51A0(v5, 0);
    uint64_t v7 = *(void *)(*(void *)(v1 + 56) + 8);
    char v8 = *(void **)(v7 + 40);
    *(void *)(v7 + 40) = v6;

    if (*(void *)(*(void *)(*(void *)(v1 + 56) + 8) + 40))
    {
      objc_msgSend(*(id *)(v1 + 48), "setResponseStatusError:");
      return 0;
    }
  }
  BOOL v9 = *(void **)(v1 + 48);
  if (v9)
  {
    int v10 = [v9 database];
    uint64_t v11 = [v10 select:objc_opt_class() identity:@"asmRefreshRequested"];

    if (v11)
    {
      int v12 = v11[16];

      if (v12) {
        sub_100050D14(*(id *)(v1 + 32));
      }
    }
  }
  uint64_t v150 = v1;
  if (![*(id *)(v1 + 40) hasUserInfo])
  {
    uint64_t v16 = 1;
    goto LABEL_79;
  }
  unsigned int v13 = [*(id *)(v1 + 40) userInfo];
  unsigned int v14 = [v13 hasIsEduUser];

  if (v14)
  {
    unint64_t v15 = [*(id *)(v1 + 40) userInfo];
    uint64_t v16 = (uint64_t)[v15 isEduUser];
  }
  else
  {
    uint64_t v16 = 1;
  }
  CLSInitLog();
  unsigned int v17 = [*(id *)(v1 + 48) logSubsystem];
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG))
  {
    v122 = objc_opt_class();
    v123 = *(void **)(v1 + 48);
    id v124 = v122;
    v125 = [v123 operationID];
    v126 = [*(id *)(v1 + 40) userInfo];
    v127 = [v126 dictionaryRepresentation];
    *(_DWORD *)v190 = 138543874;
    v191 = v122;
    __int16 v192 = 2114;
    v193 = v125;
    __int16 v194 = 2112;
    v195 = v127;
    _os_log_debug_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEBUG, "%{public}@ %{public}@ response userinfo: %@", v190, 0x20u);
  }
  uint64_t v18 = *(void **)(v1 + 48);
  id v19 = [*(id *)(v1 + 40) userInfo];
  char v20 = v19;
  if (v18)
  {
    if ([v19 hasUserInfo]
      && ([v20 userInfo],
          char v21 = objc_claimAutoreleasedReturnValue(),
          unsigned __int8 v22 = [v21 hasPerson],
          v21,
          (v22 & 1) != 0))
    {
      unint64_t v23 = [v20 userInfo];
      char v24 = [v23 person];
      if ([v24 hasPersonId])
      {
        uint64_t v25 = [v20 userInfo];
        unint64_t v26 = [v25 person];
        [v26 personId];
        char v27 = v142 = v20;
        id v28 = [v27 length];

        char v20 = v142;
        if (v28)
        {
          unsigned int v140 = v16;
          v141 = [v18 database];
          unsigned int v29 = objc_opt_new();
          uint64_t v30 = objc_opt_new();
          unint64_t v31 = [v142 privileges];

          if (v31)
          {
            long long v169 = 0u;
            long long v170 = 0u;
            long long v167 = 0u;
            long long v168 = 0u;
            char v32 = [v142 privileges];
            id v33 = [v32 countByEnumeratingWithState:&v167 objects:v190 count:16];
            if (v33)
            {
              id v34 = v33;
              uint64_t v35 = *(void *)v168;
              do
              {
                for (i = 0; i != v34; i = (char *)i + 1)
                {
                  if (*(void *)v168 != v35) {
                    objc_enumerationMutation(v32);
                  }
                  char v37 = [*(id *)(*((void *)&v167 + 1) + 8 * i) locationIds];
                  [v30 addObjectsFromArray:v37];
                }
                id v34 = [v32 countByEnumeratingWithState:&v167 objects:v190 count:16];
              }
              while (v34);
            }
          }
          char v38 = [v142 locations];

          unsigned int v39 = CKRecordID_ptr;
          v145 = v30;
          v146 = v29;
          if (v38)
          {
            id v40 = objc_alloc_init((Class)NSMutableArray);
            long long v163 = 0u;
            long long v164 = 0u;
            long long v165 = 0u;
            long long v166 = 0u;
            unint64_t v41 = [v142 locations];
            id v42 = [v41 countByEnumeratingWithState:&v163 objects:v189 count:16];
            if (v42)
            {
              id v43 = v42;
              uint64_t v44 = *(void *)v164;
              v144 = v41;
              do
              {
                for (j = 0; j != v43; j = (char *)j + 1)
                {
                  if (*(void *)v164 != v44) {
                    objc_enumerationMutation(v41);
                  }
                  uint64_t v46 = sub_10007AA50(*(void **)(*((void *)&v163 + 1) + 8 * (void)j));
                  CLSInitLog();
                  unint64_t v47 = [v18 logSubsystem];
                  if (os_log_type_enabled(v47, OS_LOG_TYPE_DEBUG))
                  {
                    uint64_t v49 = objc_opt_class();
                    id obja = v49;
                    BOOL v50 = [v18 operationID];
                    uint64_t v51 = [v46 dictionaryRepresentation];
                    *(_DWORD *)long long buf = 138543874;
                    v184 = v49;
                    unint64_t v41 = v144;
                    __int16 v185 = 2114;
                    v186 = v50;
                    __int16 v187 = 2112;
                    id v188 = v51;
                    _os_log_debug_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_DEBUG, "%{public}@ %{public}@ response location: %@", buf, 0x20u);

                    unsigned int v29 = v146;
                  }

                  [v40 addObject:v46];
                  char v48 = [v46 objectID];
                  [v29 addObject:v48];
                }
                id v43 = [v41 countByEnumeratingWithState:&v163 objects:v189 count:16];
              }
              while (v43);
            }

            uint64_t v30 = v145;
            if (([v141 insertOrUpdateObjects:v40] & 1) == 0)
            {
              CLSInitLog();
              char v52 = [v18 logSubsystem];
              if (os_log_type_enabled(v52, OS_LOG_TYPE_DEFAULT))
              {
                unsigned int v53 = objc_opt_class();
                id v54 = v53;
                uint64_t v55 = [v18 operationID];
                *(_DWORD *)long long buf = 138543875;
                v184 = v53;
                __int16 v185 = 2114;
                v186 = v55;
                __int16 v187 = 2113;
                id v188 = v40;
                _os_log_impl((void *)&_mh_execute_header, v52, OS_LOG_TYPE_DEFAULT, "%{public}@: %{public}@ Failed to insert %{private}@.", buf, 0x20u);

                unsigned int v29 = v146;
              }
            }
            char v20 = v142;
            unsigned int v39 = CKRecordID_ptr;
          }
          unint64_t v56 = [v20 roles];

          if (v56)
          {
            long long v161 = 0u;
            long long v162 = 0u;
            long long v159 = 0u;
            long long v160 = 0u;
            id obj = [v142 roles];
            id v57 = [obj countByEnumeratingWithState:&v159 objects:buf count:16];
            if (v57)
            {
              id v58 = v57;
              uint64_t v59 = *(void *)v160;
              do
              {
                for (k = 0; k != v58; k = (char *)k + 1)
                {
                  if (*(void *)v160 != v59) {
                    objc_enumerationMutation(obj);
                  }
                  BOOL v61 = *(void **)(*((void *)&v159 + 1) + 8 * (void)k);
                  uint64_t v62 = sub_10007AB58(v61);
                  id v63 = sub_10007ADB4(v61);
                  [v30 unionSet:v63];

                  CLSInitLog();
                  char v64 = [v18 logSubsystem];
                  if (os_log_type_enabled(v64, OS_LOG_TYPE_DEBUG))
                  {
                    id v69 = objc_opt_class();
                    id v143 = v69;
                    id v70 = [v18 operationID];
                    long long v71 = [v62 dictionaryRepresentation];
                    *(_DWORD *)v177 = 138543874;
                    v178 = v69;
                    __int16 v179 = 2114;
                    v180 = v70;
                    __int16 v181 = 2112;
                    v182 = v71;
                    _os_log_debug_impl((void *)&_mh_execute_header, v64, OS_LOG_TYPE_DEBUG, "%{public}@ %{public}@ response role: %@", v177, 0x20u);

                    unsigned int v29 = v146;
                    uint64_t v30 = v145;
                  }
                  if ((sub_100051818(v141, v62) & 1) == 0)
                  {
                    CLSInitLog();
                    os_log_t v65 = [v18 logSubsystem];
                    if (os_log_type_enabled(v65, OS_LOG_TYPE_DEFAULT))
                    {
                      uint64_t v66 = objc_opt_class();
                      id v67 = v66;
                      double v68 = [v18 operationID];
                      *(_DWORD *)v177 = 138543874;
                      v178 = v66;
                      __int16 v179 = 2114;
                      v180 = v68;
                      __int16 v181 = 2114;
                      v182 = v62;
                      _os_log_impl((void *)&_mh_execute_header, v65, OS_LOG_TYPE_DEFAULT, "%{public}@: %{public}@ Failed to insert %{public}@.", v177, 0x20u);

                      uint64_t v30 = v145;
                      unsigned int v29 = v146;
                    }
                  }
                }
                id v58 = [obj countByEnumeratingWithState:&v159 objects:buf count:16];
              }
              while (v58);
            }

            unsigned int v39 = CKRecordID_ptr;
          }
          [v30 minusSet:v29];
          id v72 = objc_alloc_init((Class)v39[110]);
          long long v155 = 0u;
          long long v156 = 0u;
          long long v157 = 0u;
          long long v158 = 0u;
          id v73 = v30;
          id v74 = [v73 countByEnumeratingWithState:&v155 objects:v177 count:16];
          if (v74)
          {
            id v75 = v74;
            uint64_t v76 = *(void *)v156;
            do
            {
              for (m = 0; m != v75; m = (char *)m + 1)
              {
                if (*(void *)v156 != v76) {
                  objc_enumerationMutation(v73);
                }
                uint64_t v78 = *(void *)(*((void *)&v155 + 1) + 8 * (void)m);
                id v79 = [objc_alloc((Class)CLSLocation) _init];
                [v79 setObjectID:v78];
                [v72 addObject:v79];
              }
              id v75 = [v73 countByEnumeratingWithState:&v155 objects:v177 count:16];
            }
            while (v75);
          }

          uint64_t v1 = v150;
          uint64_t v16 = v140;
          if (([v141 insertOrUpdateObjects:v72] & 1) == 0)
          {
            CLSInitLog();
            id v80 = [v18 logSubsystem];
            if (os_log_type_enabled(v80, OS_LOG_TYPE_DEFAULT))
            {
              v81 = objc_opt_class();
              id v82 = v81;
              unsigned __int8 v83 = [v18 operationID];
              *(_DWORD *)v173 = 138543875;
              *(void *)&v173[4] = v81;
              *(_WORD *)&v173[12] = 2114;
              *(void *)&v173[14] = v83;
              *(_WORD *)&v173[22] = 2113;
              v174 = v72;
              _os_log_impl((void *)&_mh_execute_header, v80, OS_LOG_TYPE_DEFAULT, "%{public}@: %{public}@ Failed to insert %{private}@.", v173, 0x20u);
            }
          }
          *(void *)v173 = _NSConcreteStackBlock;
          *(void *)&v173[8] = 3221225472;
          *(void *)&v173[16] = sub_100071948;
          v174 = &unk_1001F1ED8;
          id v175 = v142;
          id v84 = v141;
          BOOL v85 = v84;
          id v176 = v84;
          if (v84 && ([v84 performTransaction:v173 forWriting:1] & 1) != 0)
          {
            BOOL v86 = 0;
          }
          else
          {
            BOOL v86 = +[NSError cls_createErrorWithCode:100 description:@"Save ASM UserInfo failed."];
          }
          id v89 = v86;

          char v20 = v142;
          goto LABEL_77;
        }
      }
      else
      {
      }
      CLSInitLog();
      v121 = [v18 logSubsystem];
      if (os_log_type_enabled(v121, OS_LOG_TYPE_ERROR))
      {
        v137 = objc_opt_class();
        id v138 = v137;
        v139 = [v18 operationID];
        *(_DWORD *)v190 = 138543618;
        v191 = v137;
        __int16 v192 = 2114;
        v193 = v139;
        _os_log_error_impl((void *)&_mh_execute_header, v121, OS_LOG_TYPE_ERROR, "%{public}@: %{public}@ Bootstrap response was missing personID!", v190, 0x16u);
      }
      CFStringRef v88 = @"Bootstrap response was missing personID.";
    }
    else
    {
      CLSInitLog();
      uint64_t v87 = [v18 logSubsystem];
      if (os_log_type_enabled(v87, OS_LOG_TYPE_ERROR))
      {
        v128 = objc_opt_class();
        id v129 = v128;
        v130 = [v18 operationID];
        *(_DWORD *)v190 = 138543618;
        v191 = v128;
        __int16 v192 = 2114;
        v193 = v130;
        _os_log_error_impl((void *)&_mh_execute_header, v87, OS_LOG_TYPE_ERROR, "%{public}@: %{public}@ Bootstrap response was missing UserInfo!", v190, 0x16u);
      }
      CFStringRef v88 = @"Bootstrap response was missing UserInfo.";
    }
    id v89 = +[NSError cls_createErrorWithCode:303 description:v88];
LABEL_77:

    goto LABEL_78;
  }
  id v89 = 0;
LABEL_78:

  uint64_t v90 = *(void *)(*(void *)(v1 + 56) + 8);
  id v91 = *(void **)(v90 + 40);
  *(void *)(v90 + 40) = v89;

  if (*(void *)(*(void *)(*(void *)(v1 + 56) + 8) + 40)) {
    return 0;
  }
LABEL_79:
  if ([*(id *)(v1 + 40) hasServiceConfig])
  {
    CLSInitLog();
    id v92 = [*(id *)(v1 + 48) logSubsystem];
    if (os_log_type_enabled(v92, OS_LOG_TYPE_DEBUG))
    {
      v131 = objc_opt_class();
      v132 = *(void **)(v1 + 48);
      id v133 = v131;
      v134 = [v132 operationID];
      v135 = [*(id *)(v1 + 40) serviceConfig];
      v136 = [v135 dictionaryRepresentation];
      *(_DWORD *)v190 = 138543874;
      v191 = v131;
      __int16 v192 = 2114;
      v193 = v134;
      __int16 v194 = 2112;
      v195 = v136;
      _os_log_debug_impl((void *)&_mh_execute_header, v92, OS_LOG_TYPE_DEBUG, "%{public}@ %{public}@ response serviceConfig: %@", v190, 0x20u);
    }
    long long v93 = *(void **)(v1 + 48);
    long long v94 = [*(id *)(v1 + 40) serviceConfig];
    LOBYTE(v93) = [v93 saveServiceConfig:v94 forEDUMAID:v16];

    if ((v93 & 1) == 0)
    {
      uint64_t v117 = +[NSError cls_createErrorWithCode:100 description:@"save ServiceConfig failed!"];
      uint64_t v118 = *(void *)(*(void *)(v1 + 56) + 8);
      v119 = *(void **)(v118 + 40);
      *(void *)(v118 + 40) = v117;

      return 0;
    }
  }
  long long v153 = 0u;
  long long v154 = 0u;
  long long v151 = 0u;
  long long v152 = 0u;
  long long v95 = [*(id *)(v1 + 40) endpoints];
  id v96 = [v95 countByEnumeratingWithState:&v151 objects:v172 count:16];
  if (v96)
  {
    id v97 = v96;
    uint64_t v98 = *(void *)v152;
    do
    {
      for (n = 0; n != v97; n = (char *)n + 1)
      {
        if (*(void *)v152 != v98) {
          objc_enumerationMutation(v95);
        }
        __int16 v100 = *(void **)(*((void *)&v151 + 1) + 8 * (void)n);
        uint64_t v101 = [v100 serviceId];
        if (v101)
        {
          v102 = (void *)v101;
          v103 = [v100 serviceId];
          unsigned int v104 = [@"apple_business_manager" isEqualToString:v103];

          if (v104)
          {
            [v100 setServiceId:@"apple_school_manager"];
            CLSInitLog();
            v105 = [*(id *)(v150 + 48) logSubsystem];
            if (os_log_type_enabled(v105, OS_LOG_TYPE_DEBUG))
            {
              v106 = objc_opt_class();
              v107 = *(void **)(v150 + 48);
              id objb = v106;
              v108 = [v107 operationID];
              v109 = [v100 identifier];
              *(_DWORD *)v190 = 138543874;
              v191 = v106;
              __int16 v192 = 2114;
              v193 = v108;
              __int16 v194 = 2114;
              v195 = v109;
              _os_log_debug_impl((void *)&_mh_execute_header, v105, OS_LOG_TYPE_DEBUG, "%{public}@: %{public}@ Remapping ABM serviceID for endpoint %{public}@", v190, 0x20u);
            }
          }
        }
      }
      id v97 = [v95 countByEnumeratingWithState:&v151 objects:v172 count:16];
    }
    while (v97);
  }

  v171[0] = @"ee.setup";
  v171[1] = @"ee.adminRequest";
  v171[2] = @"ee.managedOrgDiscovery";
  v110 = +[NSArray arrayWithObjects:v171 count:3];
  v111 = *(void **)(v150 + 48);
  v112 = [*(id *)(v150 + 40) endpoints];
  uint64_t v113 = [v111 replaceEndpoints:v112 excludeEndpointIDs:v110 forServiceID:@"apple_school_manager"];
  uint64_t v114 = *(void *)(*(void *)(v150 + 56) + 8);
  v115 = *(void **)(v114 + 40);
  *(void *)(v114 + 40) = v113;

  BOOL v116 = *(void *)(*(void *)(*(void *)(v150 + 56) + 8) + 40) == 0;
  return v116;
}

uint64_t sub_100071948(uint64_t a1)
{
  BOOL v2 = [*(id *)(a1 + 32) userInfo];
  id v3 = [v2 person];
  char v4 = sub_100079604(v3);

  unsigned int v5 = [*(id *)(a1 + 32) userInfo];
  uint64_t v6 = [v5 person];
  uint64_t v7 = sub_100079A04(v6);

  char v8 = *(void **)(a1 + 40);
  if (!v8) {
    goto LABEL_11;
  }
  if (![v8 _setCurrentUser:v4 withRoleLocations:v7 orRole:0]) {
    goto LABEL_11;
  }
  if ([*(id *)(a1 + 32) hasOrganizationId])
  {
    BOOL v9 = *(void **)(a1 + 40);
    int v10 = [*(id *)(a1 + 32) organizationId];
    LODWORD(v9) = sub_1000670F4(v9, v10);

    if (!v9) {
      goto LABEL_11;
    }
  }
  if ((![*(id *)(a1 + 32) hasOrganizationName]
     || (uint64_t v11 = *(void **)(a1 + 40),
         [*(id *)(a1 + 32) organizationName],
         int v12 = objc_claimAutoreleasedReturnValue(),
         LODWORD(v11) = sub_100067108(v11, v12),
         v12,
         v11))
    && (![*(id *)(a1 + 32) hasOrganizationProgressTrackingAllowed]
     || sub_10006711C(*(id *)(a1 + 40), (BOOL)[*(id *)(a1 + 32) organizationProgressTrackingAllowed])))
  {
    if ([*(id *)(a1 + 32) hasAnalyticsOptedIn]) {
      uint64_t v13 = (uint64_t)sub_100067130(*(id *)(a1 + 40), (BOOL)[*(id *)(a1 + 32) analyticsOptedIn]);
    }
    else {
      uint64_t v13 = 1;
    }
  }
  else
  {
LABEL_11:
    uint64_t v13 = 0;
  }

  return v13;
}

uint64_t sub_100071C2C(uint64_t a1)
{
  BOOL v2 = objc_alloc_init(PDASMConfig);
  id v3 = [*(id *)(a1 + 32) serviceId];
  sub_100075F40((uint64_t)v2, v3);

  char v4 = [*(id *)(a1 + 32) personlinkServiceContext];
  sub_100075F50((uint64_t)v2, v4);

  unsigned int v5 = [*(id *)(a1 + 32) zoneSubscriptions];
  id v6 = [v5 copy];
  sub_1000AD2CC((uint64_t)v2, v6);

  unsigned __int8 v7 = [*(id *)(a1 + 32) isRosterSearchAllowed];
  if (v2)
  {
    v2->_rosterSearchAllowed = v7;
    v2->_useServerForRosterSearch = [*(id *)(a1 + 32) useServerForRosterSearch];
    v2->_eduMAID = *(unsigned char *)(a1 + 56);
    v2->_asmAnalyticsEnabled = [*(id *)(a1 + 32) analyticsOptedIn];
    v2->_minimumSearchKeyLength = (int)[*(id *)(a1 + 32) minimumSearchKeyLength];
  }
  else
  {
    [*(id *)(a1 + 32) useServerForRosterSearch];
    [*(id *)(a1 + 32) analyticsOptedIn];
    [*(id *)(a1 + 32) minimumSearchKeyLength];
  }
  char v8 = [*(id *)(a1 + 32) defaultSyncZoneNames];
  id v9 = [v8 copy];
  sub_10007C770((uint64_t)v2, v9);

  if ([*(id *)(a1 + 32) hasSyncFetchInterval])
  {
    unsigned int v10 = [*(id *)(a1 + 32) syncFetchInterval];
    if (v2)
    {
      if (v10) {
        int v11 = v10;
      }
      else {
        int v11 = 28800;
      }
      v2->_syncFetchInterval = v11;
    }
  }
  if ([*(id *)(a1 + 32) hasSearchCacheTtl])
  {
    signed int v12 = [*(id *)(a1 + 32) searchCacheTtl];
    if (v2) {
      v2->_searchCacheTTL = v12;
    }
  }
  if ([*(id *)(a1 + 32) hasAllowSharingOutsideOrg])
  {
    unsigned __int8 v13 = [*(id *)(a1 + 32) allowSharingOutsideOrg];
    if (v2) {
      v2->_allowSharingOutsideOrg = v13;
    }
  }
  if ([*(id *)(a1 + 32) hasClassroomClassicAdHocModeEnabled])
  {
    unsigned __int8 v14 = [*(id *)(a1 + 32) classroomClassicAdHocModeEnabled];
    if (v2) {
      v2->_classroomClassicAdHocModeEnabled = v14;
    }
  }
  if ([*(id *)(a1 + 32) hasSearchLimitForGroupMemberSearch])
  {
    signed int v15 = [*(id *)(a1 + 32) searchLimitForGroupMemberSearch];
    if (v2) {
      v2->_searchLimitForGroupMemberSearch = v15;
    }
  }
  if (sub_1000AD338(*(void **)(a1 + 40), v2))
  {
    long long v37 = 0u;
    long long v38 = 0u;
    long long v35 = 0u;
    long long v36 = 0u;
    if (v2) {
      defaultSyncZoneNames = v2->_defaultSyncZoneNames;
    }
    else {
      defaultSyncZoneNames = 0;
    }
    unsigned int v17 = defaultSyncZoneNames;
    id v18 = [v17 countByEnumeratingWithState:&v35 objects:v45 count:16];
    if (v18)
    {
      id v19 = v18;
      uint64_t v20 = *(void *)v36;
      while (2)
      {
        for (i = 0; i != v19; i = (char *)i + 1)
        {
          if (*(void *)v36 != v20) {
            objc_enumerationMutation(v17);
          }
          unsigned __int8 v22 = *(void **)(*((void *)&v35 + 1) + 8 * i);
          if ((objc_msgSend(*(id *)(a1 + 40), "entityExistsByClass:identity:", objc_opt_class(), v22, (void)v35) & 1) == 0)
          {
            unint64_t v23 = sub_100099F54([PDASMRecordZone alloc], v22);
            if (([*(id *)(a1 + 40) insertOrUpdateObject:v23] & 1) == 0)
            {
              CLSInitLog();
              unsigned int v29 = [*(id *)(a1 + 48) logSubsystem];
              if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
              {
                uint64_t v30 = objc_opt_class();
                unint64_t v31 = *(void **)(a1 + 48);
                id v32 = v30;
                id v33 = [v31 operationID];
                *(_DWORD *)long long buf = 138543874;
                id v40 = v30;
                __int16 v41 = 2114;
                id v42 = v33;
                __int16 v43 = 2112;
                uint64_t v44 = v22;
                _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, "%{public}@ %{public}@ failed to create default ASMRecordZone for %@", buf, 0x20u);
              }
              goto LABEL_40;
            }
          }
        }
        id v19 = [v17 countByEnumeratingWithState:&v35 objects:v45 count:16];
        uint64_t v24 = 1;
        if (v19) {
          continue;
        }
        break;
      }
    }
    else
    {
      uint64_t v24 = 1;
    }
  }
  else
  {
    CLSInitLog();
    unsigned int v17 = [*(id *)(a1 + 48) logSubsystem];
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v25 = objc_opt_class();
      unint64_t v26 = *(void **)(a1 + 48);
      id v27 = v25;
      id v28 = [v26 operationID];
      *(_DWORD *)long long buf = 138543618;
      id v40 = v25;
      __int16 v41 = 2114;
      id v42 = v28;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "%{public}@ %{public}@ failed to update PDASMConfig", buf, 0x16u);
    }
LABEL_40:
    uint64_t v24 = 0;
  }

  return v24;
}

BOOL sub_1000724CC(char *a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 32;
        goto LABEL_27;
      case 2u:
        PBReaderReadString();
        unsigned __int8 v14 = (PDDPStateChangeGroup *)objc_claimAutoreleasedReturnValue();
        if (v14) {
          [a1 addRecipientPersonIds:v14];
        }
        goto LABEL_28;
      case 3u:
        unsigned __int8 v14 = objc_alloc_init(PDDPStateChangeGroup);
        [a1 addRecipientGroups:v14];
        if PBReaderPlaceMark() && (sub_1000BC51C((uint64_t)v14, a2))
        {
          PBReaderRecallMark();
LABEL_28:

LABEL_29:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

        return 0;
      case 4u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 16;
LABEL_27:
        unsigned __int8 v14 = *(PDDPStateChangeGroup **)&a1[v13];
        *(void *)&a1[v13] = v12;
        goto LABEL_28;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_29;
    }
  }
}

uint64_t sub_100073574(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  char v4 = &selRef_hasText;
  unsigned int v5 = &selRef_hasText;
  unint64_t v6 = &selRef_hasText;
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    unint64_t v9 = 0;
    while (1)
    {
      unint64_t v10 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v10 == -1 || v10 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v11 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v10);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v10 + 1;
      v9 |= (unint64_t)(v11 & 0x7F) << v7;
      if ((v11 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      BOOL v12 = v8++ >= 9;
      if (v12)
      {
        unint64_t v9 = 0;
        int v13 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_12:
    int v13 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v9 = 0;
    }
LABEL_14:
    if (v13 || (v9 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v9 >> 3))
    {
      case 1u:
        char v15 = 0;
        unsigned int v16 = 0;
        uint64_t v17 = 0;
        *(unsigned char *)(a1 + *((int *)v4 + 664)) |= 1u;
        while (1)
        {
          unint64_t v18 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v18 == -1 || v18 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v19 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v18);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v18 + 1;
          v17 |= (unint64_t)(v19 & 0x7F) << v15;
          if ((v19 & 0x80) == 0) {
            goto LABEL_41;
          }
          v15 += 7;
          BOOL v12 = v16++ >= 9;
          if (v12)
          {
            LODWORD(v17) = 0;
            goto LABEL_43;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_41:
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v17) = 0;
        }
LABEL_43:
        *(_DWORD *)(a1 + *((int *)v5 + 665)) = v17;
        goto LABEL_38;
      case 2u:
        uint64_t v21 = PBReaderReadString();
        uint64_t v22 = *((int *)v6 + 666);
        goto LABEL_37;
      case 3u:
        uint64_t v21 = PBReaderReadString();
        uint64_t v22 = 40;
        goto LABEL_37;
      case 4u:
        uint64_t v21 = PBReaderReadString();
        uint64_t v22 = 8;
        goto LABEL_37;
      case 5u:
        uint64_t v21 = PBReaderReadString();
        uint64_t v22 = 32;
        goto LABEL_37;
      case 6u:
        unint64_t v23 = v6;
        uint64_t v24 = v5;
        uint64_t v25 = v4;
        unint64_t v26 = objc_alloc_init(PDDPDate);
        objc_storeStrong((id *)(a1 + 16), v26);
        if PBReaderPlaceMark() && (PDDPDateReadFrom((uint64_t)v26, a2))
        {
          PBReaderRecallMark();

          char v4 = v25;
          unsigned int v5 = v24;
          unint64_t v6 = v23;
LABEL_38:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

        return 0;
      case 7u:
        uint64_t v21 = PBReaderReadString();
        uint64_t v22 = 56;
        goto LABEL_37;
      case 8u:
        uint64_t v21 = PBReaderReadString();
        uint64_t v22 = 48;
LABEL_37:
        id v27 = *(void **)(a1 + v22);
        *(void *)(a1 + v22) = v21;

        goto LABEL_38;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_38;
    }
  }
}

char *sub_100074468(void *a1, uint64_t a2, void *a3, void *a4, void *a5, int a6)
{
  id v12 = a3;
  id v13 = a4;
  id v14 = a5;
  if (a1)
  {
    v22.receiver = a1;
    v22.super_class = (Class)PDClassPublish;
    char v15 = (char *)objc_msgSendSuper2(&v22, "initWithDatabase:", a2);
    unsigned int v16 = v15;
    if (v15)
    {
      objc_storeStrong((id *)(v15 + 242), a3);
      id v17 = [v14 copy];
      unint64_t v18 = *(void **)(v16 + 258);
      *(void *)(v16 + 258) = v17;

      id v19 = [v13 copy];
      uint64_t v20 = *(void **)(v16 + 250);
      *(void *)(v16 + 250) = v19;

      *(_DWORD *)(v16 + 234) = a6;
    }
  }
  else
  {
    unsigned int v16 = 0;
  }

  return v16;
}

void sub_100075F30(uint64_t a1, void *a2)
{
  if (a1) {
    objc_storeStrong((id *)(a1 + 8), a2);
  }
}

void sub_100075F40(uint64_t a1, void *a2)
{
  if (a1) {
    objc_storeStrong((id *)(a1 + 16), a2);
  }
}

void sub_100075F50(uint64_t a1, void *a2)
{
  if (a1) {
    objc_storeStrong((id *)(a1 + 24), a2);
  }
}

void sub_100076BF8(id a1)
{
  uint64_t v1 = sub_1000FA3F4((uint64_t)PDUtil, @"CLSHandoutDueSoonNotificationHour");
  id v2 = objc_alloc_init((Class)NSDateComponents);
  id v3 = (void *)qword_10023E548;
  qword_10023E548 = (uint64_t)v2;

  if (v1 == -1) {
    uint64_t v4 = 16;
  }
  else {
    uint64_t v4 = v1;
  }
  [(id)qword_10023E548 setHour:v4];
  CLSInitLog();
  unsigned int v5 = CLSLogNotifications;
  if (os_log_type_enabled(CLSLogNotifications, OS_LOG_TYPE_INFO))
  {
    int v6 = 134217984;
    uint64_t v7 = v1;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "CLSHandoutDueSoonNotificationHour: %ld", (uint8_t *)&v6, 0xCu);
  }
}

void sub_1000771EC(uint64_t a1, void *a2)
{
  id v3 = a2;
  CLSInitLog();
  uint64_t v4 = (void *)CLSLogNotifications;
  if (os_log_type_enabled(CLSLogNotifications, OS_LOG_TYPE_INFO))
  {
    unsigned int v5 = v4;
    int v6 = [v3 title];
    int v7 = 138412290;
    unsigned int v8 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "Handout title %@ matching due date query", (uint8_t *)&v7, 0xCu);
  }
  if ([*(id *)(a1 + 32) isIncompleteHandout:v3]) {
    [*(id *)(a1 + 40) addObject:v3];
  }
}

char *sub_1000779FC(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v9 = a3;
  id v10 = a4;
  id v11 = a5;
  if (a1)
  {
    v26.receiver = a1;
    v26.super_class = (Class)PDPublishSurveyAnswersOperation;
    id v12 = (char *)objc_msgSendSuper2(&v26, "initWithDatabase:", a2);
    if (v12)
    {
      id v13 = [v9 copy];
      id v14 = *(void **)(v12 + 227);
      *(void *)(v12 + 227) = v13;

      id v15 = [v10 copy];
      unsigned int v16 = *(void **)(v12 + 235);
      *(void *)(v12 + 235) = v15;

      uint64_t v17 = objc_opt_new();
      unint64_t v18 = *(void **)(v12 + 251);
      *(void *)(v12 + 251) = v17;

      uint64_t v19 = objc_opt_new();
      uint64_t v20 = *(void **)(v12 + 267);
      *(void *)(v12 + 267) = v19;

      id v21 = [v11 copy];
      objc_super v22 = *(void **)(v12 + 243);
      *(void *)(v12 + 243) = v21;

      uint64_t v23 = objc_opt_new();
      uint64_t v24 = *(void **)(v12 + 275);
      *(void *)(v12 + 275) = v23;
    }
  }
  else
  {
    id v12 = 0;
  }

  return v12;
}

void sub_10007885C(uint64_t a1, uint64_t a2)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 267);
  if (a2) {
    id v3 = *(void **)(a2 + 24);
  }
  else {
    id v3 = 0;
  }
  id v4 = v3;
  [v2 addObject:v4];
}

void sub_1000788C8(uint64_t a1, uint64_t a2)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 275);
  if (a2) {
    id v3 = *(void **)(a2 + 24);
  }
  else {
    id v3 = 0;
  }
  id v4 = v3;
  [v2 addObject:v4];
}

id sub_100078F84(uint64_t a1)
{
  if (a1)
  {
    id v2 = [(id)a1 responseStatusError];
    if (v2) {
      [(id)a1 responseStatusError];
    }
    else {
    id v3 = [(id)a1 operationError];
    }

    if ([*(id *)(a1 + 259) count])
    {
      id v4 = objc_opt_new();
      unsigned int v5 = [(id)a1 operationError];

      if (v5)
      {
        int v6 = [(id)a1 operationError];
        [v4 setObject:v6 forKeyedSubscript:NSUnderlyingErrorKey];

        int v7 = [(id)a1 operationError];
        id v11 = v7;
        unsigned int v8 = +[NSArray arrayWithObjects:&v11 count:1];
        [v4 setObject:v8 forKeyedSubscript:CLSErrorUnderlyingErrorsKey];
      }
      [v4 setObject:*(void *)(a1 + 259) forKeyedSubscript:CLSErrorObjectKey];
      [v4 setObject:@"Failed SurveyAnswerItem can be found under CLSErrorObjectKey." forKeyedSubscript:NSLocalizedDescriptionKey];
      id v9 = [objc_alloc((Class)NSError) initWithDomain:CLSErrorCodeDomain code:9 userInfo:v4];

      id v3 = v9;
    }
  }
  else
  {
    id v3 = 0;
  }

  return v3;
}

id sub_1000792AC(void *a1)
{
  id v1 = [a1 copy];
  if (([v1 hasPrefix:@"ORG_"] & 1) == 0)
  {
    uint64_t v2 = [@"ORG_" stringByAppendingString:v1];

    id v1 = (id)v2;
  }

  return v1;
}

id sub_100079314(void *a1)
{
  id v1 = [a1 copy];
  if ([v1 hasPrefix:@"ORG_"])
  {
    uint64_t v2 = [v1 substringFromIndex:objc_msgSend(@"ORG_", "length")];

    id v1 = (id)v2;
  }

  return v1;
}

PDDPEERequestZone *sub_100079384(void *a1)
{
  id v1 = a1;
  uint64_t v2 = objc_alloc_init(PDDPEERequestZone);
  if (v1) {
    id v3 = (void *)*((void *)v1 + 1);
  }
  else {
    id v3 = 0;
  }
  id v4 = v3;

  if (v4)
  {
    if (v1) {
      unsigned int v5 = (void *)*((void *)v1 + 1);
    }
    else {
      unsigned int v5 = 0;
    }
    id v6 = v5;
    [(PDDPEERequestZone *)v2 setZoneName:v6];
  }
  if (v1)
  {
    id v7 = *((id *)v1 + 2);

    if (v7)
    {
      id v8 = *((id *)v1 + 2);
      [(PDDPEERequestZone *)v2 setCursor:v8];
    }
  }

  return v2;
}

void *sub_100079454(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [PDASMRecordZone alloc];
  id v3 = [v1 zoneName];
  id v4 = sub_100099F54(v2, v3);

  if ([v1 hasStatus])
  {
    unsigned int v5 = [v1 status];
    signed int v6 = [v5 code];
    if (v4) {
      v4[3] = v6;
    }
  }
  if ([v1 hasCursor])
  {
    id v7 = [v1 cursor];
    sub_100075F40((uint64_t)v4, v7);
  }

  return v4;
}

PDDPEERequestZone *sub_100079528(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  unsigned int v5 = objc_alloc_init(PDDPEERequestZone);
  [(PDDPEERequestZone *)v5 setZoneName:v4];

  if (v3)
  {
    signed int v6 = [v3 cursor];

    if (v6)
    {
      id v7 = [v3 cursor];
      [(PDDPEERequestZone *)v5 setCursor:v7];
    }
  }

  return v5;
}

__CFString *sub_1000795D4(int a1)
{
  int v1 = a1 - 4;
  if (a1 - 4) <= 9 && ((0x33Fu >> v1)) {
    return off_1001F35B0[v1];
  }
  else {
    return 0;
  }
}

id sub_100079604(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    id v2 = [objc_alloc((Class)CLSPerson) _init];
    id v3 = [v1 appleId];
    [v2 setAppleID:v3];

    id v4 = [v1 iCloudUserId];
    [v2 setICloudUserID:v4];

    unsigned int v5 = [v1 orgId];
    [v2 setOrgID:v5];

    signed int v6 = [v1 givenName];
    [v2 setGivenName:v6];

    id v7 = [v1 middleName];
    [v2 setMiddleName:v7];

    id v8 = [v1 familyName];
    [v2 setFamilyName:v8];

    id v9 = [v1 givenName];
    [v2 setGivenName:v9];

    id v10 = [v1 middleName];
    [v2 setMiddleName:v10];

    id v11 = [v1 familyName];
    [v2 setFamilyName:v11];

    id v12 = [v1 phoneticGivenName];
    [v2 setPhoneticGivenName:v12];

    id v13 = [v1 phoneticMiddleName];
    [v2 setPhoneticMiddleName:v13];

    id v14 = [v1 phoneticFamilyName];
    [v2 setPhoneticFamilyName:v14];

    objc_msgSend(v2, "setPasscodeType:", (int)objc_msgSend(v1, "passcodeType"));
    objc_msgSend(v2, "setProgressTrackingAllowed:", objc_msgSend(v1, "isProgressTrackingAllowed"));
    objc_msgSend(v2, "setFederatedAccount:", objc_msgSend(v1, "isFederatedAccount"));
    objc_msgSend(v2, "setAxmAccountStatus:", (int)objc_msgSend(v1, "accountStatus"));
    id v15 = [v1 personId];
    [v2 setObjectID:v15];

    unsigned int v16 = [v1 dateCreated];
    uint64_t v17 = sub_1000F3F70(v16);
    [v2 setDateCreated:v17];

    unint64_t v18 = [v1 dateLastModified];
    uint64_t v19 = sub_1000F3F70(v18);
    [v2 setDateLastModified:v19];

    uint64_t v20 = [v1 emailAddress];
    [v2 setEmailAddress:v20];

    id v21 = [v1 grade];
    [v2 setGrade:v21];

    if ([v1 hasIsRosterSearchAllowed]) {
      uint64_t v22 = (uint64_t)[v1 isRosterSearchAllowed];
    }
    else {
      uint64_t v22 = 1;
    }
    [v2 setIsSearchable:v22];
    if ([v1 hasEntityMeta])
    {
      uint64_t v23 = [v1 entityMeta];
      objc_msgSend(v2, "setSourceType:", (int)objc_msgSend(v23, "source"));

      uint64_t v24 = [v1 entityMeta];
      objc_msgSend(v2, "setIsEditable:", objc_msgSend(v24, "isEditable"));
    }
    else
    {
      [v2 setSourceType:0];
      [v2 setIsEditable:0];
    }
    uint64_t v25 = [v1 personNumber];
    [v2 setPersonNumber:v25];

    uint64_t v26 = [v2 appleID];
    if (!v26
      || (id v27 = (void *)v26,
          [v2 appleID],
          id v28 = objc_claimAutoreleasedReturnValue(),
          id v29 = [v28 length],
          v28,
          v27,
          !v29))
    {
      [v2 setAppleID:CLSAdminRequestNewAccountPlaceholderAppleID];
    }
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id sub_100079A04(void *a1)
{
  id v1 = a1;
  id v2 = objc_alloc_init((Class)NSMutableArray);
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id obj = [v1 roleLocations];
  id v3 = [obj countByEnumeratingWithState:&v15 objects:v19 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v16;
    do
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(void *)v16 != v5) {
          objc_enumerationMutation(obj);
        }
        id v7 = *(void **)(*((void *)&v15 + 1) + 8 * i);
        id v8 = [PDPersonRoleLocation alloc];
        id v9 = [v1 personId];
        id v10 = [v7 roleId];
        id v11 = [v7 locationId];
        id v12 = sub_1000BB794(v8, v9, v10, v11, (int)[v7 roleType]);

        [v2 addObject:v12];
      }
      id v4 = [obj countByEnumeratingWithState:&v15 objects:v19 count:16];
    }
    while (v4);
  }

  return v2;
}

PDDPClass *sub_100079BB4(void *a1)
{
  id v1 = a1;
  id v2 = objc_alloc_init(PDDPClass);
  id v3 = [v1 objectID];
  [(PDDPClass *)v2 setClassId:v3];

  id v4 = [v1 customClassName];
  [(PDDPClass *)v2 setDisplayName:v4];

  uint64_t v5 = [v1 className];
  [(PDDPClass *)v2 setClassName:v5];

  signed int v6 = [v1 locationID];
  [(PDDPClass *)v2 setLocationId:v6];

  id v7 = [v1 iconID];
  [(PDDPClass *)v2 setIconIdentifier:v7];

  id v8 = [v1 dateCreated];
  id v9 = sub_1000F3E0C(v8);
  [(PDDPClass *)v2 setDateCreated:v9];

  id v10 = [v1 dateLastModified];
  id v11 = sub_1000F3E0C(v10);
  [(PDDPClass *)v2 setDateLastModified:v11];

  id v12 = objc_alloc_init(PDDPEntityMeta);
  [(PDDPClass *)v2 setEntityMeta:v12];

  id v13 = [v1 source];
  id v14 = [(PDDPClass *)v2 entityMeta];
  [v14 setSource:v13];

  id v15 = [v1 isEditable];
  long long v16 = [(PDDPClass *)v2 entityMeta];
  [v16 setIsEditable:v15];

  return v2;
}

id sub_100079D7C(void *a1)
{
  id v1 = a1;
  id v2 = [objc_alloc((Class)CLSGroup) _init];
  id v3 = [v1 groupId];
  [v2 setObjectID:v3];

  id v4 = [v1 groupName];
  [v2 setGroupName:v4];

  uint64_t v5 = [v1 locationId];
  [v2 setLocationID:v5];

  signed int v6 = [v1 dateCreated];
  id v7 = sub_1000F3F70(v6);
  [v2 setDateCreated:v7];

  id v8 = [v1 dateLastModified];
  id v9 = sub_1000F3F70(v8);
  [v2 setDateLastModified:v9];

  id v10 = [v1 email];

  [v2 setEmailAddress:v10];

  return v2;
}

PDDPClassMember *sub_100079EB8(void *a1)
{
  id v1 = a1;
  id v2 = objc_alloc_init(PDDPClassMember);
  id v3 = [v1 objectID];
  [(PDDPClassMember *)v2 setClassMemberId:v3];

  id v4 = [v1 parentObjectID];
  [(PDDPClassMember *)v2 setClassId:v4];

  uint64_t v5 = [v1 personID];
  [(PDDPClassMember *)v2 setPersonId:v5];

  unsigned __int8 v6 = [v1 roles];
  id v7 = v2;
  id v8 = v7;
  if (v7)
  {
    if (v6) {
      [(PDDPClassMember *)v7 addRoles:1];
    }
    if ((v6 & 2) != 0) {
      [(PDDPClassMember *)v8 addRoles:2];
    }
  }

  id v9 = [v1 dateCreated];
  id v10 = sub_1000F3E0C(v9);
  [(PDDPClassMember *)v8 setDateCreated:v10];

  id v11 = [v1 dateLastModified];

  id v12 = sub_1000F3E0C(v11);
  [(PDDPClassMember *)v8 setDateLastModified:v12];

  return v8;
}

id sub_10007A010(void *a1)
{
  id v1 = a1;
  id v2 = [objc_alloc((Class)CLSClass) _init];
  id v3 = [v1 className];
  [v2 setClassName:v3];

  id v4 = [v1 displayName];
  [v2 setCustomClassName:v4];

  uint64_t v5 = [v1 classId];
  [v2 setObjectID:v5];

  unsigned __int8 v6 = [v1 locationId];
  [v2 setLocationID:v6];

  id v7 = [v1 iconIdentifier];
  [v2 setIconID:v7];

  id v8 = [v1 dateCreated];
  id v9 = sub_1000F3F70(v8);
  [v2 setDateCreated:v9];

  id v10 = [v1 dateLastModified];
  id v11 = sub_1000F3F70(v10);
  [v2 setDateLastModified:v11];

  if ([v1 hasEntityMeta])
  {
    id v12 = [v1 entityMeta];
    objc_msgSend(v2, "setSource:", (int)objc_msgSend(v12, "source"));

    id v13 = [v1 entityMeta];
    objc_msgSend(v2, "setIsEditable:", objc_msgSend(v13, "isEditable"));

    id v14 = [v1 entityMeta];
    if ([v14 hasIsAdhocOriginated])
    {
      id v15 = [v1 entityMeta];
      unsigned __int8 v16 = [v15 isAdhocOriginated];

      if (v16)
      {
        uint64_t v17 = 1;
        goto LABEL_8;
      }
    }
    else
    {
    }
  }
  else
  {
    [v2 setSource:0];
  }
  uint64_t v17 = 0;
LABEL_8:
  [v2 setOriginatingSource:v17];

  return v2;
}

id sub_10007A228(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  id v5 = objc_alloc((Class)CLSClassMember);
  unsigned __int8 v6 = [v4 classId];
  id v7 = v4;
  if ([v7 rolesCount])
  {
    unint64_t v8 = 0;
    uint64_t v9 = 0;
    do
    {
      unsigned int v10 = [v7 rolesAtIndex:v8];
      uint64_t v11 = v9 | 1;
      if (v10 != 1) {
        uint64_t v11 = v9;
      }
      if (v10 == 2) {
        v9 |= 2uLL;
      }
      else {
        uint64_t v9 = v11;
      }
      ++v8;
    }
    while ((unint64_t)[v7 rolesCount] > v8);
  }
  else
  {
    uint64_t v9 = 0;
  }

  id v12 = [v5 initWithClassID:v6 personID:v3 roles:v9];
  id v13 = [v7 dateCreated];
  id v14 = sub_1000F3F70(v13);
  [v12 setDateCreated:v14];

  id v15 = [v7 dateLastModified];

  unsigned __int8 v16 = sub_1000F3F70(v15);
  [v12 setDateLastModified:v16];

  return v12;
}

id sub_10007A384(void *a1)
{
  id v1 = a1;
  if ([v1 hasPersonId])
  {
    id v2 = [v1 personId];
LABEL_6:
    unsigned __int8 v6 = sub_10007A228(v1, v2);

    goto LABEL_8;
  }
  if ([v1 hasPersonIds])
  {
    id v3 = [v1 personIds];
    unsigned int v4 = [v3 hasStringValue];

    if (v4)
    {
      id v5 = [v1 personIds];
      id v2 = [v5 stringValue];

      goto LABEL_6;
    }
  }
  unsigned __int8 v6 = 0;
LABEL_8:

  return v6;
}

id sub_10007A450(void *a1)
{
  id v1 = a1;
  if ([v1 hasPersonId])
  {
    id v2 = [v1 personId];
    uint64_t v9 = v2;
    id v3 = &v9;
LABEL_3:
    id v4 = +[NSArray arrayWithObjects:v3 count:1];
LABEL_4:
    id v5 = v4;
LABEL_5:

    goto LABEL_15;
  }
  if ([v1 hasPersonIds])
  {
    unsigned __int8 v6 = [v1 personIds];
    id v2 = sub_1000F43B4(v6);

    if (!v2)
    {
      id v5 = &__NSArray0__struct;
      goto LABEL_5;
    }
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      unint64_t v8 = v2;
      id v3 = &v8;
      goto LABEL_3;
    }
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v4 = v2;
      goto LABEL_4;
    }
  }
  id v5 = &__NSArray0__struct;
LABEL_15:

  return v5;
}

id sub_10007A5A4(void *a1)
{
  id v1 = a1;
  id v2 = objc_opt_new();
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v3 = sub_10007A450(v1);
  id v4 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v11;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v11 != v6) {
          objc_enumerationMutation(v3);
        }
        unint64_t v8 = sub_10007A228(v1, *(void **)(*((void *)&v10 + 1) + 8 * i));
        if (v8) {
          objc_msgSend(v2, "addObject:", v8, (void)v10);
        }
      }
      id v5 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v5);
  }

  return v2;
}

id sub_10007A6EC(void *a1)
{
  id v1 = a1;
  id v25 = (id)objc_opt_new();
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  id v2 = v1;
  if ([v2 hasPersonIds])
  {
    id v3 = [v2 personIds];
    id v4 = sub_1000F43B4(v3);

    if (!v4)
    {
      uint64_t v6 = &__NSArray0__struct;
LABEL_9:

      goto LABEL_12;
    }
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      unint64_t v31 = v4;
      id v5 = +[NSArray arrayWithObjects:&v31 count:1];
LABEL_8:
      uint64_t v6 = v5;
      goto LABEL_9;
    }
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v5 = v4;
      goto LABEL_8;
    }
  }
  uint64_t v6 = &__NSArray0__struct;
LABEL_12:

  id v7 = [v6 countByEnumeratingWithState:&v26 objects:v30 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v27;
    do
    {
      for (i = 0; i != v8; i = (char *)i + 1)
      {
        if (*(void *)v27 != v9) {
          objc_enumerationMutation(v6);
        }
        long long v11 = *(void **)(*((void *)&v26 + 1) + 8 * i);
        id v12 = v2;
        id v13 = v11;
        id v14 = [objc_alloc((Class)CLSGroupMember) _init];
        id v15 = [v12 groupId];
        unsigned __int8 v16 = +[CLSClassMember objectIDForClassID:v15 andPersonID:v13];
        [v14 setObjectID:v16];

        uint64_t v17 = [v12 groupId];
        [v14 setParentObjectID:v17];

        [v14 setPersonID:v13];
        long long v18 = [v12 dateCreated];

        if (v18)
        {
          uint64_t v19 = [v12 dateCreated];
          uint64_t v20 = sub_1000F3F70(v19);
          [v14 setDateCreated:v20];
        }
        else
        {
          uint64_t v19 = +[NSDate now];
          [v14 setDateCreated:v19];
        }

        id v21 = [v12 dateLastModified];

        if (v21)
        {
          uint64_t v22 = [v12 dateLastModified];
          uint64_t v23 = sub_1000F3F70(v22);
          [v14 setDateLastModified:v23];
        }
        else
        {
          uint64_t v22 = +[NSDate now];
          [v14 setDateLastModified:v22];
        }

        if (v14) {
          [v25 addObject:v14];
        }
      }
      id v8 = [v6 countByEnumeratingWithState:&v26 objects:v30 count:16];
    }
    while (v8);
  }

  return v25;
}

id sub_10007AA50(void *a1)
{
  id v1 = a1;
  id v2 = [objc_alloc((Class)CLSLocation) _init];
  id v3 = [v1 locationId];
  [v2 setObjectID:v3];

  id v4 = [v1 locationName];
  [v2 setLocationName:v4];

  if ([v1 hasEntityMeta])
  {
    id v5 = [v1 entityMeta];
    objc_msgSend(v2, "setSourceType:", (int)objc_msgSend(v5, "source"));

    uint64_t v6 = [v1 entityMeta];
    objc_msgSend(v2, "setIsEditable:", objc_msgSend(v6, "isEditable"));
  }
  else
  {
    [v2 setSourceType:0];
    [v2 setIsEditable:0];
  }

  return v2;
}

id sub_10007AB58(void *a1)
{
  id v1 = a1;
  id v2 = [objc_alloc((Class)CLSRole) _init];
  id v3 = [v1 roleId];
  [v2 setObjectID:v3];

  objc_msgSend(v2, "setType:", (int)objc_msgSend(v1, "roleType"));
  id v4 = [v1 privileges];
  id v5 = [v4 count];

  if (v5)
  {
    id v6 = objc_alloc_init((Class)NSMutableArray);
    long long v18 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    id v7 = objc_msgSend(v1, "privileges", 0);
    id v8 = [v7 countByEnumeratingWithState:&v18 objects:v22 count:16];
    if (v8)
    {
      id v9 = v8;
      uint64_t v10 = *(void *)v19;
      do
      {
        for (i = 0; i != v9; i = (char *)i + 1)
        {
          if (*(void *)v19 != v10) {
            objc_enumerationMutation(v7);
          }
          id v12 = *(void **)(*((void *)&v18 + 1) + 8 * i);
          if ([v12 hasPrivilegeName])
          {
            id v13 = [v12 privilegeName];
            [v6 addObject:v13];
          }
        }
        id v9 = [v7 countByEnumeratingWithState:&v18 objects:v22 count:16];
      }
      while (v9);
    }

    id v14 = +[NSArray arrayWithArray:v6];
    [v2 setPrivileges:v14];
  }
  if ([v1 hasEntityMeta])
  {
    id v15 = [v1 entityMeta];
    objc_msgSend(v2, "setSourceType:", (int)objc_msgSend(v15, "source"));

    unsigned __int8 v16 = [v1 entityMeta];
    objc_msgSend(v2, "setIsEditable:", objc_msgSend(v16, "isEditable"));
  }
  else
  {
    [v2 setSourceType:0];
    [v2 setIsEditable:0];
  }

  return v2;
}

id sub_10007ADB4(void *a1)
{
  id v1 = a1;
  id v2 = objc_opt_new();
  id v3 = [v1 privileges];
  id v4 = [v3 count];

  if (v4)
  {
    long long v14 = 0u;
    long long v15 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    id v5 = objc_msgSend(v1, "privileges", 0);
    id v6 = [v5 countByEnumeratingWithState:&v12 objects:v16 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = *(void *)v13;
      do
      {
        for (i = 0; i != v7; i = (char *)i + 1)
        {
          if (*(void *)v13 != v8) {
            objc_enumerationMutation(v5);
          }
          uint64_t v10 = [*(id *)(*((void *)&v12 + 1) + 8 * i) locationIds];
          [v2 addObjectsFromArray:v10];
        }
        id v7 = [v5 countByEnumeratingWithState:&v12 objects:v16 count:16];
      }
      while (v7);
    }
  }

  return v2;
}

id sub_10007AF14(void *a1)
{
  id v1 = a1;
  id v2 = objc_opt_new();
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v3 = objc_msgSend(v1, "locations", 0);
  id v4 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v11;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v11 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = sub_10007AA50(*(void **)(*((void *)&v10 + 1) + 8 * i));
        if (v8) {
          [v2 addObject:v8];
        }
      }
      id v5 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v5);
  }

  return v2;
}

id sub_10007B058(void *a1)
{
  id v1 = a1;
  if ([v1 hasOrganizationId]
    && [v1 hasOrganizationName]
    && [v1 hasOrganizationType])
  {
    id v2 = objc_alloc((Class)CLSOrganization);
    id v3 = [v1 organizationId];
    id v4 = sub_1000792AC(v3);
    uint64_t v5 = (int)[v1 organizationType];
    uint64_t v6 = [v1 organizationName];
    id v7 = [v2 initWithOrganizationID:v4 type:v5 name:v6];

    uint64_t v8 = [v1 dateCreated];
    id v9 = sub_1000F3F70(v8);
    [v7 setDateCreated:v9];

    long long v10 = [v1 dateLastModified];
    long long v11 = sub_1000F3F70(v10);
    [v7 setDateLastModified:v11];

    if ([v1 emailDomainsCount])
    {
      long long v12 = [v1 emailDomains];
      long long v13 = +[NSArray arrayWithArray:v12];
      [v7 setEmailDomains:v13];
    }
    if ([v1 locationsCount])
    {
      long long v14 = objc_opt_new();
      long long v23 = 0u;
      long long v24 = 0u;
      long long v25 = 0u;
      long long v26 = 0u;
      long long v15 = objc_msgSend(v1, "locations", 0);
      id v16 = [v15 countByEnumeratingWithState:&v23 objects:v27 count:16];
      if (v16)
      {
        id v17 = v16;
        uint64_t v18 = *(void *)v24;
        do
        {
          for (i = 0; i != v17; i = (char *)i + 1)
          {
            if (*(void *)v24 != v18) {
              objc_enumerationMutation(v15);
            }
            long long v20 = [*(id *)(*((void *)&v23 + 1) + 8 * i) locationId];
            [v14 addObject:v20];
          }
          id v17 = [v15 countByEnumeratingWithState:&v23 objects:v27 count:16];
        }
        while (v17);
      }

      long long v21 = +[NSArray arrayWithArray:v14];
      [v7 setLocationIDs:v21];
    }
  }
  else
  {
    id v7 = 0;
  }

  return v7;
}

PDDPAdminRequestRequestor *sub_10007B314(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    id v2 = objc_alloc_init(PDDPAdminRequestRequestor);
    id v3 = [v1 email];
    [(PDDPAdminRequestRequestor *)v2 setEmail:v3];

    id v4 = [v1 note];
    [(PDDPAdminRequestRequestor *)v2 setNote:v4];

    uint64_t v5 = [v1 verificationCode];
    [(PDDPAdminRequestRequestor *)v2 setVerificationCode:v5];

    -[PDDPAdminRequestRequestor setState:](v2, "setState:", [v1 state]);
    uint64_t v6 = [v1 serverRequestHeaders];

    id v7 = sub_1000F46E0(v6);
    [(PDDPAdminRequestRequestor *)v2 setServerRequestHeaders:v7];
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

id sub_10007B420(void *a1)
{
  id v1 = a1;
  id v2 = v1;
  if (v1 && [v1 hasEmail])
  {
    id v3 = objc_alloc((Class)CLSAdminRequestor);
    id v4 = [v2 email];
    id v5 = [v3 initWithEmail:v4];

    objc_msgSend(v5, "setState:", (int)objc_msgSend(v2, "state"));
    uint64_t v6 = [v2 note];
    [v5 setNote:v6];

    id v7 = [v2 verificationCode];
    [v5 setVerificationCode:v7];

    uint64_t v8 = [v2 serverRequestHeaders];
    id v9 = sub_1000F48C8(v8);
    [v5 setServerRequestHeaders:v9];
  }
  else
  {
    id v5 = 0;
  }

  return v5;
}

PDDPAdminRequestDetails *sub_10007B534(PDDPAdminRequestDetails *a1, void *a2)
{
  id v2 = a1;
  if (a1)
  {
    id v3 = a2;
    id v4 = v2;
    id v2 = objc_alloc_init(PDDPAdminRequestDetails);
    id v5 = [(PDDPAdminRequestDetails *)v4 objectID];
    [(PDDPAdminRequestDetails *)v2 setAdminRequestId:v5];

    [(PDDPAdminRequestDetails *)v2 setType:[(PDDPAdminRequestDetails *)v4 type]];
    [(PDDPAdminRequestDetails *)v2 setRequestStatus:[(PDDPAdminRequestDetails *)v4 status]];
    [(PDDPAdminRequestDetails *)v2 setApprovalStatus:[(PDDPAdminRequestDetails *)v4 approval]];
    uint64_t v6 = [(PDDPAdminRequestDetails *)v4 dateCreated];
    id v7 = sub_1000F3E0C(v6);
    [(PDDPAdminRequestDetails *)v2 setDateCreated:v7];

    uint64_t v8 = [(PDDPAdminRequestDetails *)v4 dateLastModified];
    id v9 = sub_1000F3E0C(v8);
    [(PDDPAdminRequestDetails *)v2 setDateLastModified:v9];

    long long v10 = [(PDDPAdminRequestDetails *)v4 dateCompleted];
    long long v11 = sub_1000F3E0C(v10);
    [(PDDPAdminRequestDetails *)v2 setDateCompleted:v11];

    long long v12 = [(PDDPAdminRequestDetails *)v4 responderNote];
    [(PDDPAdminRequestDetails *)v2 setAdminNote:v12];

    long long v13 = [(PDDPAdminRequestDetails *)v4 bundleIdentifier];
    [(PDDPAdminRequestDetails *)v2 setBundleIdentifier:v13];

    long long v14 = sub_10007B314(v3);

    [(PDDPAdminRequestDetails *)v2 setRequestor:v14];
    long long v15 = [(PDDPAdminRequestDetails *)v4 organizationID];

    id v16 = sub_100079314(v15);
    [(PDDPAdminRequestDetails *)v2 setOrgId:v16];
  }

  return v2;
}

id sub_10007B728(void *a1)
{
  id v1 = a1;
  id v2 = v1;
  if (v1)
  {
    if ([v1 hasRequestor])
    {
      id v3 = [v2 requestor];
      id v4 = sub_10007B420(v3);

      id v5 = [v4 objectID];
    }
    else
    {
      id v5 = 0;
    }
    id v7 = objc_alloc((Class)CLSAdminRequest);
    uint64_t v8 = (int)[v2 type];
    id v9 = [v2 orgId];
    id v6 = [v7 initWithType:v8 requestorID:v5 organizationID:v9];

    long long v10 = [v2 adminRequestId];
    [v6 setObjectID:v10];

    objc_msgSend(v6, "setApproval:", (int)objc_msgSend(v2, "approvalStatus"));
    objc_msgSend(v6, "setStatus:", (int)objc_msgSend(v2, "requestStatus"));
    long long v11 = [v2 adminNote];
    [v6 setResponderNote:v11];

    long long v12 = [v2 bundleIdentifier];
    [v6 setBundleIdentifier:v12];

    long long v13 = [v2 dateCreated];
    long long v14 = sub_1000F3F70(v13);
    [v6 setDateCreated:v14];

    long long v15 = [v2 dateLastModified];
    id v16 = sub_1000F3F70(v15);
    [v6 setDateLastModified:v16];

    id v17 = [v2 dateCompleted];
    uint64_t v18 = sub_1000F3F70(v17);
    [v6 setDateCompleted:v18];
  }
  else
  {
    id v6 = 0;
  }

  return v6;
}

PDDPAdminRequestAccount *sub_10007B92C(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  uint64_t v8 = 0;
  if (!v5 || !v6) {
    goto LABEL_27;
  }
  uint64_t v8 = objc_alloc_init(PDDPAdminRequestAccount);
  id v9 = [v6 objectID];
  [(PDDPAdminRequestAccount *)v8 setAdminRequestAccountId:v9];

  long long v10 = [v5 objectID];
  [(PDDPAdminRequestAccount *)v8 setParentRequestId:v10];

  if (v7)
  {
    long long v11 = [v6 objectID];
    [v7 addAdminRequestAccountIds:v11];
  }
  long long v12 = [v6 dateCreated];
  long long v13 = sub_1000F3E0C(v12);
  [(PDDPAdminRequestAccount *)v8 setDateCreated:v13];

  long long v14 = [v6 dateLastModified];
  long long v15 = sub_1000F3E0C(v14);
  [(PDDPAdminRequestAccount *)v8 setDateLastModified:v15];

  id v16 = [v6 accountPersonInfo];

  if (v16)
  {
    id v17 = [v6 accountPersonInfo];
    uint64_t v18 = v17;
    if (v17)
    {
      id v19 = v17;
      long long v20 = objc_alloc_init(PDDPPerson);
      long long v21 = [v19 objectID];
      [(PDDPPerson *)v20 setPersonId:v21];

      uint64_t v22 = [v19 appleID];
      [(PDDPPerson *)v20 setAppleId:v22];

      long long v23 = [v19 iCloudUserID];
      [(PDDPPerson *)v20 setICloudUserId:v23];

      long long v24 = [v19 orgID];
      [(PDDPPerson *)v20 setOrgId:v24];

      long long v25 = [v19 givenName];
      [(PDDPPerson *)v20 setGivenName:v25];

      long long v26 = [v19 middleName];
      [(PDDPPerson *)v20 setMiddleName:v26];

      long long v27 = [v19 familyName];
      [(PDDPPerson *)v20 setFamilyName:v27];

      long long v28 = [v19 phoneticGivenName];
      [(PDDPPerson *)v20 setPhoneticGivenName:v28];

      long long v29 = [v19 phoneticMiddleName];
      [(PDDPPerson *)v20 setPhoneticMiddleName:v29];

      uint64_t v30 = [v19 phoneticFamilyName];
      [(PDDPPerson *)v20 setPhoneticFamilyName:v30];

      -[PDDPPerson setIsProgressTrackingAllowed:](v20, "setIsProgressTrackingAllowed:", [v19 isProgressTrackingAllowed]);
      -[PDDPPerson setIsFederatedAccount:](v20, "setIsFederatedAccount:", [v19 isFederatedAccount]);
      -[PDDPPerson setPasscodeType:](v20, "setPasscodeType:", [v19 passcodeType]);
      -[PDDPPerson setAccountStatus:](v20, "setAccountStatus:", [v19 axmAccountStatus]);
      unint64_t v31 = [v19 dateCreated];
      id v32 = sub_1000F3E0C(v31);
      [(PDDPPerson *)v20 setDateCreated:v32];

      id v33 = [v19 dateLastModified];
      id v34 = sub_1000F3E0C(v33);
      [(PDDPPerson *)v20 setDateLastModified:v34];

      long long v35 = [v19 emailAddress];
      [(PDDPPerson *)v20 setEmailAddress:v35];

      long long v36 = [v19 grade];
      [(PDDPPerson *)v20 setGrade:v36];

      -[PDDPPerson setIsRosterSearchAllowed:](v20, "setIsRosterSearchAllowed:", [v19 isSearchable]);
      long long v37 = objc_alloc_init(PDDPEntityMeta);
      [(PDDPPerson *)v20 setEntityMeta:v37];

      id v38 = [v19 sourceType];
      unsigned int v39 = [(PDDPPerson *)v20 entityMeta];
      [v39 setSource:v38];

      id v40 = [v19 isEditable];
      __int16 v41 = [(PDDPPerson *)v20 entityMeta];
      [v41 setIsEditable:v40];

      id v42 = [v19 personNumber];

      [(PDDPPerson *)v20 setPersonNumber:v42];
    }
    else
    {
      long long v20 = 0;
    }
    [(PDDPAdminRequestAccount *)v8 setPerson:v20];

    unint64_t v47 = [(PDDPAdminRequestAccount *)v8 person];

    if (!v47) {
      goto LABEL_17;
    }
    char v48 = [v5 organizationID];
    uint64_t v49 = sub_100079314(v48);
    BOOL v50 = [(PDDPAdminRequestAccount *)v8 person];
    [v50 setOrgId:v49];

    unsigned int v45 = [(PDDPAdminRequestAccount *)v8 person];
    if (![v45 hasEntityMeta]) {
      goto LABEL_16;
    }
    uint64_t v51 = [(PDDPAdminRequestAccount *)v8 person];
    char v52 = [v51 entityMeta];
    unsigned int v53 = [v52 source];

    if (v53 == 3)
    {
      unsigned int v45 = [(PDDPAdminRequestAccount *)v8 person];
      uint64_t v46 = [v45 entityMeta];
      [v46 setIsAdhocOriginated:1];
      goto LABEL_15;
    }
  }
  else
  {
    __int16 v43 = [v6 personID];

    if (v43)
    {
      uint64_t v44 = objc_alloc_init(PDDPPerson);
      [(PDDPAdminRequestAccount *)v8 setPerson:v44];

      unsigned int v45 = [v6 personID];
      uint64_t v46 = [(PDDPAdminRequestAccount *)v8 person];
      [v46 setPersonId:v45];
LABEL_15:

LABEL_16:
    }
  }
LABEL_17:
  id v54 = [v6 temporaryPassword];

  if (v54)
  {
    uint64_t v55 = [v6 temporaryPassword];
    [(PDDPAdminRequestAccount *)v8 setTemporaryPassword:v55];
  }
  -[PDDPAdminRequestAccount setRequestedRoleType:](v8, "setRequestedRoleType:", [v6 requestedRoleType]);
  unint64_t v56 = [v6 requestedRoleID];
  [(PDDPAdminRequestAccount *)v8 setRequestedRoleId:v56];

  long long v65 = 0u;
  long long v66 = 0u;
  long long v63 = 0u;
  long long v64 = 0u;
  id v57 = objc_msgSend(v6, "requestedLocationIDs", 0);
  id v58 = [v57 countByEnumeratingWithState:&v63 objects:v67 count:16];
  if (v58)
  {
    id v59 = v58;
    uint64_t v60 = *(void *)v64;
    do
    {
      for (i = 0; i != v59; i = (char *)i + 1)
      {
        if (*(void *)v64 != v60) {
          objc_enumerationMutation(v57);
        }
        [(PDDPAdminRequestAccount *)v8 addRequestedLocationIds:*(void *)(*((void *)&v63 + 1) + 8 * i)];
      }
      id v59 = [v57 countByEnumeratingWithState:&v63 objects:v67 count:16];
    }
    while (v59);
  }

LABEL_27:

  return v8;
}

id sub_10007C02C(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (v3
    && [v3 hasParentRequestId]
    && [v3 hasPerson]
    && ([v3 person],
        id v5 = objc_claimAutoreleasedReturnValue(),
        unsigned int v6 = [v5 hasPersonId],
        v5,
        v6))
  {
    id v7 = objc_alloc((Class)CLSAdminRequestAccount);
    uint64_t v8 = [v3 parentRequestId];
    id v9 = [v3 person];
    long long v10 = [v9 personId];
    id v11 = [v7 initWithAdminRequestID:v8 personID:v10];

    long long v12 = [v3 adminRequestAccountId];
    [v11 setObjectID:v12];

    long long v13 = [v3 dateCreated];
    long long v14 = sub_1000F3F70(v13);
    [v11 setDateCreated:v14];

    long long v15 = [v3 dateLastModified];
    id v16 = sub_1000F3F70(v15);
    [v11 setDateLastModified:v16];

    id v17 = [v3 temporaryPassword];
    [v11 setTemporaryPassword:v17];

    uint64_t v18 = [v3 verificationCode];
    [v11 setVerificationCode:v18];

    if (v4) {
      [v11 setStatus:sub_1000F5094(v4)];
    }
    if ([v3 conflictingPersonIdsCount])
    {
      id v19 = [v3 conflictingPersonIds];
      [v11 setConflictingPersonIDs:v19];
    }
    long long v20 = [v3 requestedRoleId];
    [v11 setRequestedRoleID:v20];

    objc_msgSend(v11, "setRequestedRoleType:", (int)objc_msgSend(v3, "requestedRoleType"));
    if ([v3 requestedLocationIdsCount])
    {
      long long v21 = [v3 requestedLocationIds];
      [v11 setRequestedLocationIDs:v21];
    }
  }
  else
  {
    id v11 = 0;
  }

  return v11;
}

id *sub_10007C61C(id *a1, void *a2, void *a3)
{
  id v6 = a2;
  id v7 = a3;
  if (a1)
  {
    v14.receiver = a1;
    v14.super_class = (Class)PDAppUsage;
    a1 = (id *)objc_msgSendSuper2(&v14, "init");
    if (a1)
    {
      uint64_t v8 = +[NSUUID UUID];
      uint64_t v9 = [v8 UUIDString];
      id v10 = a1[2];
      a1[2] = (id)v9;

      objc_storeStrong(a1 + 3, a2);
      objc_storeStrong(a1 + 4, a3);
      *((_WORD *)a1 + 4) = 0;
      uint64_t v11 = +[NSDate now];
      id v12 = a1[7];
      a1[7] = (id)v11;
    }
  }

  return a1;
}

uint64_t sub_10007C704(uint64_t a1)
{
  uint64_t v1 = a1;
  if (a1)
  {
    id v2 = +[NSDate now];
    [v2 timeIntervalSinceDate:*(void *)(v1 + 48)];
    uint64_t v1 = v3 < 600.0 && !*(unsigned char *)(v1 + 8);
  }
  return v1;
}

void sub_10007C770(uint64_t a1, void *a2)
{
  if (a1) {
    objc_storeStrong((id *)(a1 + 40), a2);
  }
}

id sub_10007C7F4(id a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    uint64_t v8 = 0;
    uint64_t v9 = &v8;
    uint64_t v10 = 0x3032000000;
    uint64_t v11 = sub_10000B6A4;
    id v12 = sub_10000B56C;
    id v13 = 0;
    uint64_t v4 = objc_opt_class();
    id v14 = v3;
    id v5 = +[NSArray arrayWithObjects:&v14 count:1];
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_10007C9A0;
    v7[3] = &unk_1001F3608;
    void v7[4] = &v8;
    [a1 selectAll:v4 where:@"bundleIdentifier = ?" orderBy:@"endDate DESC" limit:1 offset:0 bindings:v5 block:v7];

    a1 = (id)v9[5];
    _Block_object_dispose(&v8, 8);
  }

  return a1;
}

void sub_10007C980(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
}

void sub_10007C9A0(uint64_t a1, void *a2)
{
}

id sub_10007C9B0(void *a1)
{
  if (a1)
  {
    a1 = [a1 select:objc_opt_class() where:@"starting = ?" bindings:&off_10020B1D0];
    uint64_t v1 = vars8;
  }
  return a1;
}

id sub_10007CA10(id a1, void *a2)
{
  id v2 = a1;
  if (a1)
  {
    id v3 = a2;
    uint64_t v4 = objc_opt_class();
    v7[0] = &off_10020AE48;
    v7[1] = v3;
    id v5 = +[NSArray arrayWithObjects:v7 count:2];

    [v2 select:v4 where:@"starting = ? AND bundleIdentifier = ?" bindings:v5];
    id v2 = (id)objc_claimAutoreleasedReturnValue();
  }

  return v2;
}

id sub_10007CAF0(id a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  if (a1)
  {
    uint64_t v9 = 0;
    uint64_t v10 = &v9;
    uint64_t v11 = 0x3032000000;
    id v12 = sub_10000B6A4;
    id v13 = sub_10000B56C;
    id v14 = 0;
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_10007CC20;
    v6[3] = &unk_1001F33F0;
    void v6[4] = a1;
    id v7 = v3;
    uint64_t v8 = &v9;
    sub_10000749C(a1, v6);
    a1 = (id)v10[5];

    _Block_object_dispose(&v9, 8);
  }

  return a1;
}

void sub_10007CC08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10007CC20(void *a1)
{
  id v2 = (void *)a1[4];
  uint64_t v5 = a1[5];
  id v3 = +[NSArray arrayWithObjects:&v5 count:1];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10007CD0C;
  v4[3] = &unk_1001F1F28;
  void v4[4] = a1[6];
  sub_100007540(v2, @"select distinct A.objectID from CLSHandoutAttachment as A join CLSHandoutAssignedItem as AI on AI.parentObjectID = A.objectID join CLSActivity as AT on AT.parentObjectID = AI.objectID join PDAppUsage as AU on AU.activityID = AT.objectID and AU.objectID = ?", 1, v3, v4);
}

uint64_t sub_10007CD0C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_100003BF0(a2, @"objectID");
  uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v5 = *(void *)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  return _objc_release_x1(v3, v5);
}

id sub_10007CD64(id a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  if (a1)
  {
    uint64_t v9 = 0;
    uint64_t v10 = &v9;
    uint64_t v11 = 0x3032000000;
    id v12 = sub_10000B6A4;
    id v13 = sub_10000B56C;
    id v14 = 0;
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_10007CE94;
    v6[3] = &unk_1001F33F0;
    void v6[4] = a1;
    id v7 = v3;
    uint64_t v8 = &v9;
    sub_10000749C(a1, v6);
    a1 = (id)v10[5];

    _Block_object_dispose(&v9, 8);
  }

  return a1;
}

void sub_10007CE7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10007CE94(void *a1)
{
  id v2 = (void *)a1[4];
  uint64_t v5 = a1[5];
  id v3 = +[NSArray arrayWithObjects:&v5 count:1];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10007CF80;
  v4[3] = &unk_1001F1F28;
  void v4[4] = a1[6];
  sub_100007540(v2, @"select AU.objectID from CLSHandoutAttachment as A join CLSHandoutAssignedItem as AI on AI.parentObjectID = A.objectID join CLSActivity as AT on AT.parentObjectID = AI.objectID join PDAppUsage as AU on AU.activityID = AT.objectID and A.objectID = ?", 1, v3, v4);
}

uint64_t sub_10007CF80(uint64_t a1, uint64_t *a2)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) = sub_100003BF0(a2, @"objectID");

  return _objc_release_x1();
}

BOOL sub_10007CFD8(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  BOOL v5 = 0;
  if (a1 && v3)
  {
    id v6 = [a1 select:objc_opt_class() identity:v3];
    [v6 timeExpectation];
    if (v7 <= 0.0)
    {
      BOOL v5 = 0;
    }
    else
    {
      id v18 = 0;
      unsigned int v8 = sub_100156F98(a1, v6, &v18);
      id v9 = v18;
      if (v8)
      {
        uint64_t v10 = objc_opt_class();
        uint64_t v11 = [v6 objectID];
        id v19 = v11;
        id v12 = +[NSArray arrayWithObjects:&v19 count:1];
        id v13 = [a1 select:v10 where:@"parentObjectID = ? and domain = 1" bindings:v12];

        id v14 = [v13 dateLastModified];
        double v15 = sub_10007D18C(a1, v4, v14);
      }
      else
      {
        double v15 = sub_10007D18C(a1, v4, 0);
      }
      [v6 timeExpectation];
      BOOL v5 = v15 < v16;
    }
  }

  return v5;
}

double sub_10007D18C(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    double v7 = objc_opt_new();
    unsigned int v8 = objc_opt_new();
    v27[0] = _NSConcreteStackBlock;
    v27[1] = 3221225472;
    v27[2] = sub_10007D41C;
    v27[3] = &unk_1001F2F00;
    v27[4] = a1;
    id v28 = v5;
    id v9 = v7;
    id v29 = v9;
    sub_10000749C(a1, v27);
    if ([v9 count])
    {
      +[PDDatabase whereSQLForArray:v9 prefix:@" where parentObjectID in "];
      v22[0] = _NSConcreteStackBlock;
      v22[1] = 3221225472;
      _OWORD v22[2] = sub_10007D578;
      v22[3] = &unk_1001F25F8;
      id v23 = (id)objc_claimAutoreleasedReturnValue();
      long long v24 = a1;
      id v25 = v9;
      id v26 = v8;
      id v10 = v23;
      sub_10000749C(a1, v22);
    }
    long long v20 = 0u;
    long long v21 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    id v11 = v8;
    id v12 = [v11 countByEnumeratingWithState:&v18 objects:v30 count:16];
    if (v12)
    {
      id v13 = v12;
      uint64_t v14 = *(void *)v19;
      double v15 = 0.0;
      do
      {
        for (i = 0; i != v13; i = (char *)i + 1)
        {
          if (*(void *)v19 != v14) {
            objc_enumerationMutation(v11);
          }
          double v15 = v15 + sub_10009B314(a1, *(void **)(*((void *)&v18 + 1) + 8 * i), v6);
        }
        id v13 = [v11 countByEnumeratingWithState:&v18 objects:v30 count:16];
      }
      while (v13);
    }
    else
    {
      double v15 = 0.0;
    }
  }
  else
  {
    double v15 = 0.0;
  }

  return v15;
}

void sub_10007D41C(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  id v3 = +[NSArray arrayWithObjects:&v6 count:1];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10007D514;
  v4[3] = &unk_1001F2ED8;
  id v5 = *(id *)(a1 + 48);
  sub_100007540(v2, @"select objectID from CLSHandoutAssignedItem where parentObjectID = ?", 1, v3, v4);
}

void sub_10007D514(uint64_t a1, uint64_t *a2)
{
  id v2 = *(void **)(a1 + 32);
  sub_100003BF0(a2, @"objectID");
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  [v2 addObject:v3];
}

void sub_10007D578(uint64_t a1)
{
  id v2 = +[NSString stringWithFormat:@"select objectID  from CLSActivity %@", *(void *)(a1 + 32)];
  id v3 = *(void **)(a1 + 40);
  uint64_t v4 = *(void **)(a1 + 48);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  _DWORD v5[2] = sub_10007D644;
  v5[3] = &unk_1001F2ED8;
  id v6 = *(id *)(a1 + 56);
  sub_100007540(v3, v2, 1, v4, v5);
}

void sub_10007D644(uint64_t a1, uint64_t *a2)
{
  id v2 = *(void **)(a1 + 32);
  sub_100003BF0(a2, @"objectID");
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  [v2 addObject:v3];
}

id sub_10007D6A8(id result)
{
  if (result)
  {
    v1[0] = _NSConcreteStackBlock;
    v1[1] = 3221225472;
    v1[2] = sub_10007D720;
    void v1[3] = &unk_1001F2E88;
    v1[4] = result;
    return [result performTransaction:v1 forWriting:1];
  }
  return result;
}

uint64_t sub_10007D720(uint64_t a1)
{
  return sub_100007540(*(void **)(a1 + 32), @"update PDAppUsage set starting=0", 1, 0, 0);
}

void sub_100081114(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void **)(a1 + 32);
  id v5 = a3;
  id v6 = [v4 criteriaForFieldName:@"role_locations" andValues:a2 withFormat:@"*#%@"];
  [v5 setType:3];
  [v5 setCriteria:v6];
}

void sub_1000811A4(uint64_t a1, void *a2, void *a3, void *a4)
{
  if (a2)
  {
    id v7 = a4;
    id v8 = a3;
    id v9 = a2;
    uint64_t v14 = objc_alloc_init(PDDPSearchQuery);
    id v10 = objc_alloc_init(PDDPSearchQuery);
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();

    id v11 = *(void **)(a1 + 32);
    id v12 = +[NSString stringWithFormat:@"%@#*", v9];

    id v13 = [v11 criteriaForFieldName:@"role_locations" andValue:v12];

    [(PDDPSearchQuery *)v10 setType:3];
    [(PDDPSearchQuery *)v10 setCriteria:v13];
    [v7 setType:1];
    [v7 addContents:v10];
    [v7 addContents:v14];
  }
}

char *sub_100082084(char *result, void *a2, void *a3)
{
  if (result)
  {
    uint64_t v4 = result;
    id v5 = (id *)(result + 8);
    id v6 = a3;
    objc_storeWeak(v5, a2);
    id v7 = objc_retainBlock(v6);

    id v8 = (void *)v4[2];
    v4[2] = v7;

    return (char *)[v4 supportsStreamedParsing];
  }
  return result;
}

void *sub_100082660(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    v22.receiver = a1;
    v22.super_class = (Class)PDCKUploadAssetsOperation;
    a1 = objc_msgSendSuper2(&v22, "init");
    if (a1)
    {
      uint64_t v4 = +[CKContainer containerIDForContainerIdentifier:@"com.apple.orion"];
      id v5 = objc_alloc_init((Class)CKContainerOptions);
      uint64_t v6 = sub_1000062FC();
      id v7 = (void *)v6;
      if (v6) {
        id v8 = *(void **)(v6 + 24);
      }
      else {
        id v8 = 0;
      }
      id v9 = v8;

      id v10 = [v9 identifier];
      if (v10)
      {
        id v11 = [objc_alloc((Class)CKAccountOverrideInfo) initWithAccountID:v10];
        [v5 setAccountOverrideInfo:v11];
      }
      [v5 setApplicationBundleIdentifierOverrideForNetworkAttribution:@"com.apple.progressd"];
      id v12 = [objc_alloc((Class)CKContainer) initWithContainerID:v4 options:v5];
      id v13 = (void *)a1[2];
      a1[2] = v12;
      id v14 = v12;

      uint64_t v15 = [v14 organizationCloudDatabase];
      double v16 = (void *)a1[1];
      a1[1] = v15;

      id v17 = sub_100006D08(v3, @"PDCK_iCloudUserID");
      id v18 = [objc_alloc((Class)NSString) initWithFormat:@"U%@%@", v17, @"_Asset"];
      id v19 = [objc_alloc((Class)CKRecordZoneID) initWithZoneName:v18 ownerName:CKCurrentUserDefaultName];
      long long v20 = (void *)a1[3];
      a1[3] = v19;
    }
  }

  return a1;
}

void sub_100082850(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    id v7 = [objc_alloc((Class)CKModifyRecordsOperation) initWithRecordsToSave:v5 recordIDsToDelete:v6];
    [v7 setSavePolicy:1];
    CLSInitLog();
    id v8 = (void *)CLSLogSync;
    if (os_log_type_enabled(CLSLogSync, OS_LOG_TYPE_INFO))
    {
      id v9 = v8;
      *(_DWORD *)long long buf = 134218496;
      id v18 = [v5 count];
      __int16 v19 = 2048;
      id v20 = [v6 count];
      __int16 v21 = 2048;
      id v22 = [v7 savePolicy];
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "About to save records: save count: %ld, records to delete count: %ld; save policy: %ld",
        buf,
        0x20u);
    }
    objc_initWeak((id *)buf, a1);
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    v15[2] = sub_100082B3C;
    v15[3] = &unk_1001F3680;
    objc_copyWeak(&v16, (id *)buf);
    [v7 setPerRecordProgressBlock:v15];
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    v13[2] = sub_100082CB0;
    v13[3] = &unk_1001F36A8;
    objc_copyWeak(&v14, (id *)buf);
    [v7 setPerRecordSaveBlock:v13];
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    void v11[2] = sub_100082EC4;
    v11[3] = &unk_1001F36D0;
    objc_copyWeak(&v12, (id *)buf);
    [v7 setModifyRecordsCompletionBlock:v11];
    id v10 = a1[1];
    [v10 addOperation:v7];

    objc_destroyWeak(&v12);
    objc_destroyWeak(&v14);
    objc_destroyWeak(&v16);
    objc_destroyWeak((id *)buf);
  }
}

void sub_100082AF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  objc_destroyWeak(v27);
  objc_destroyWeak(v26);
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100082B3C(uint64_t a1, void *a2, double a3)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  CLSInitLog();
  id v7 = CLSLogSync;
  if (WeakRetained)
  {
    if (os_log_type_enabled(CLSLogSync, OS_LOG_TYPE_INFO))
    {
      id v8 = v7;
      id v9 = [v5 recordID];
      id v10 = [v9 recordName];
      int v11 = 138412546;
      id v12 = v10;
      __int16 v13 = 2048;
      double v14 = a3;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Progress called on recordID: %@, progress: %f", (uint8_t *)&v11, 0x16u);
    }
    (*(void (**)(double))(WeakRetained[4] + 16))(a3);
  }
  else if (os_log_type_enabled(CLSLogSync, OS_LOG_TYPE_ERROR))
  {
    LOWORD(v11) = 0;
    _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "PDCKUploadAssetsOperation.perRecordProgressBlock strongSelf is nil", (uint8_t *)&v11, 2u);
  }
}

void sub_100082CB0(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  CLSInitLog();
  int v11 = CLSLogSync;
  if (!v8)
  {
    if (os_log_type_enabled(CLSLogSync, OS_LOG_TYPE_ERROR))
    {
      int v17 = 138543618;
      id v18 = v7;
      __int16 v19 = 2114;
      id v20 = v9;
      _os_log_error_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "Failed to save CK record; recordID: %{public}@, per-record error: %{public}@",
        (uint8_t *)&v17,
        0x16u);
      if (!WeakRetained) {
        goto LABEL_9;
      }
LABEL_7:
      (*(void (**)(void))(WeakRetained[5] + 16))();
      goto LABEL_11;
    }
LABEL_6:
    if (!WeakRetained) {
      goto LABEL_9;
    }
    goto LABEL_7;
  }
  if (!os_log_type_enabled(CLSLogSync, OS_LOG_TYPE_INFO)) {
    goto LABEL_6;
  }
  id v12 = v11;
  __int16 v13 = [v8 recordID];
  double v14 = [v13 recordName];
  uint64_t v15 = [v9 description];
  int v17 = 138412546;
  id v18 = v14;
  __int16 v19 = 2112;
  id v20 = v15;
  _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "Record completion block called on recordID: %@, error: %@", (uint8_t *)&v17, 0x16u);

  if (WeakRetained) {
    goto LABEL_7;
  }
LABEL_9:
  CLSInitLog();
  id v16 = CLSLogSync;
  if (os_log_type_enabled(CLSLogSync, OS_LOG_TYPE_ERROR))
  {
    LOWORD(v17) = 0;
    _os_log_error_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "PDCKUploadAssetsOperation.perRecordSaveBlock strongSelf is nil", (uint8_t *)&v17, 2u);
  }
LABEL_11:
}

void sub_100082EC4(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  CLSInitLog();
  int v11 = CLSLogSync;
  if (WeakRetained)
  {
    if (os_log_type_enabled(CLSLogSync, OS_LOG_TYPE_INFO))
    {
      id v12 = v11;
      id v13 = [v7 count];
      id v14 = [v8 count];
      uint64_t v15 = [v9 description];
      int v16 = 134218498;
      id v17 = v13;
      __int16 v18 = 2048;
      id v19 = v14;
      __int16 v20 = 2112;
      __int16 v21 = v15;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "All records completion block called on save record count: %ld, deleted record count: %ld, operationError: %@", (uint8_t *)&v16, 0x20u);
    }
    (*(void (**)(void))(WeakRetained[6] + 16))();
  }
  else if (os_log_type_enabled(CLSLogSync, OS_LOG_TYPE_ERROR))
  {
    LOWORD(v16) = 0;
    _os_log_error_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "PDCKUploadAssetsOperation.modifyRecordsCompletionBlock strongSelf is nil", (uint8_t *)&v16, 2u);
  }
}

char *sub_1000830EC(void *a1, void *a2, uint64_t a3)
{
  id v6 = a2;
  if (a1)
  {
    v10.receiver = a1;
    v10.super_class = (Class)PDFetchReportsOperation;
    id v7 = (char *)objc_msgSendSuper2(&v10, "initWithDatabase:", a3);
    id v8 = v7;
    if (v7)
    {
      objc_storeStrong((id *)(v7 + 242), a2);
      v8[234] = 1;
    }
  }
  else
  {
    id v8 = 0;
  }

  return v8;
}

void sub_10008396C(id *a1, void *a2)
{
  id v6 = a2;
  id v3 = [v6 classID];
  uint64_t v4 = [a1[4] objectForKeyedSubscript:v3];
  if (!v4)
  {
    uint64_t v4 = objc_opt_new();
    [v4 setClassId:v3];
    [a1[5] addRequestItems:v4];
    [a1[4] setObject:v4 forKeyedSubscript:v3];
  }
  id v5 = [v6 parentObjectID];
  if (([a1[6] containsObject:v5] & 1) == 0)
  {
    [v4 addHandoutIds:v5];
    [a1[6] addObject:v5];
  }
}

void sub_100083A54(uint64_t a1, void *a2)
{
  id v6 = a2;
  id v3 = [v6 parentObjectID];
  uint64_t v4 = [*(id *)(a1 + 32) objectForKeyedSubscript:v3];
  if (v4)
  {
    id v5 = [v6 personID];
    [v4 addStudentIds:v5];
  }
}

id sub_100083F94(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = objc_opt_new();
  id v5 = [*(id *)(a1 + 32) objectForKeyedSubscript:v3];
  id v6 = v5;
  if (v5)
  {
    if ([v5 conformsToProtocol:&OBJC_PROTOCOL___NSFastEnumeration])
    {
      long long v15 = 0u;
      long long v16 = 0u;
      long long v13 = 0u;
      long long v14 = 0u;
      id v7 = v6;
      id v8 = [v7 countByEnumeratingWithState:&v13 objects:v17 count:16];
      if (v8)
      {
        id v9 = v8;
        uint64_t v10 = *(void *)v14;
        do
        {
          for (i = 0; i != v9; i = (char *)i + 1)
          {
            if (*(void *)v14 != v10) {
              objc_enumerationMutation(v7);
            }
            objc_msgSend(v4, "addObject:", *(void *)(*((void *)&v13 + 1) + 8 * i), (void)v13);
          }
          id v9 = [v7 countByEnumeratingWithState:&v13 objects:v17 count:16];
        }
        while (v9);
      }
    }
    else
    {
      [v4 addObject:v6];
    }
  }

  return v4;
}

void sub_1000840FC(uint64_t a1, void *a2)
{
  id v3 = [a2 parentObjectID];
  [*(id *)(a1 + 32) addObject:v3];
}

void sub_100084154(uint64_t a1, void *a2)
{
  id v3 = [a2 parentObjectID];
  [*(id *)(a1 + 32) addObject:v3];
}

uint64_t sub_1000847BC(id *a1)
{
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v2 = [a1[4] reports];
  id v3 = [v2 countByEnumeratingWithState:&v15 objects:v25 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v16;
    do
    {
      id v6 = 0;
      do
      {
        if (*(void *)v16 != v5) {
          objc_enumerationMutation(v2);
        }
        id v7 = sub_10002589C(*(void **)(*((void *)&v15 + 1) + 8 * (void)v6));
        if (v7)
        {
          [a1[5] insertOrUpdateObject:v7];
        }
        else
        {
          id v8 = [a1[6] stats];
          if (v8) {
            ++v8[16];
          }

          CLSInitLog();
          id v9 = [a1[6] logSubsystem];
          if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v10 = objc_opt_class();
            id v11 = a1[6];
            id v12 = v10;
            long long v13 = [v11 operationID];
            *(_DWORD *)long long buf = 138543874;
            __int16 v20 = v10;
            __int16 v21 = 2114;
            id v22 = v13;
            __int16 v23 = 2112;
            uint64_t v24 = 0;
            _os_log_debug_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "%{public}@:%{public}@ failed to parse payload: %@", buf, 0x20u);
          }
        }

        id v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v15 objects:v25 count:16];
    }
    while (v4);
  }

  return 1;
}

BOOL sub_1000854C4(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0;
      while (1)
      {
        unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0;
          int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0;
      }
LABEL_13:
      if (v10 || (v6 & 7) == 4) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      unint64_t v12 = v6 >> 3;
      if ((v6 >> 3) == 3)
      {
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v15 = 0;
        *(unsigned char *)(a1 + 20) |= 2u;
        while (1)
        {
          unint64_t v22 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v22 == -1 || v22 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v23 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v22);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v22 + 1;
          v15 |= (unint64_t)(v23 & 0x7F) << v20;
          if ((v23 & 0x80) == 0)
          {
            id v19 = &OBJC_IVAR___PDDPStateChangesIOS134MACOS10154HandoutDomainState__flags;
            goto LABEL_47;
          }
          v20 += 7;
          BOOL v18 = v21++ > 8;
          if (v18)
          {
            LODWORD(v15) = 0;
            id v19 = &OBJC_IVAR___PDDPStateChangesIOS134MACOS10154HandoutDomainState__flags;
            goto LABEL_49;
          }
        }
        id v19 = &OBJC_IVAR___PDDPStateChangesIOS134MACOS10154HandoutDomainState__flags;
LABEL_46:
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
        goto LABEL_47;
      }
      if (v12 == 2) {
        break;
      }
      if (v12 == 1)
      {
        char v13 = 0;
        unsigned int v14 = 0;
        uint64_t v15 = 0;
        *(unsigned char *)(a1 + 20) |= 1u;
        while (1)
        {
          unint64_t v16 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v16 == -1 || v16 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            id v19 = &OBJC_IVAR___PDDPStateChangesIOS134MACOS10154HandoutDomainState__domain;
            goto LABEL_46;
          }
          char v17 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v16);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v16 + 1;
          v15 |= (unint64_t)(v17 & 0x7F) << v13;
          if ((v17 & 0x80) == 0) {
            break;
          }
          v13 += 7;
          BOOL v18 = v14++ > 8;
          if (v18)
          {
            LODWORD(v15) = 0;
            id v19 = &OBJC_IVAR___PDDPStateChangesIOS134MACOS10154HandoutDomainState__domain;
            goto LABEL_49;
          }
        }
        id v19 = &OBJC_IVAR___PDDPStateChangesIOS134MACOS10154HandoutDomainState__domain;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_50:
      if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
    }
    char v24 = 0;
    unsigned int v25 = 0;
    uint64_t v15 = 0;
    *(unsigned char *)(a1 + 20) |= 4u;
    while (1)
    {
      unint64_t v26 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v26 == -1 || v26 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
      {
        id v19 = &OBJC_IVAR___PDDPStateChangesIOS134MACOS10154HandoutDomainState__state;
        goto LABEL_46;
      }
      char v27 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v26);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v26 + 1;
      v15 |= (unint64_t)(v27 & 0x7F) << v24;
      if ((v27 & 0x80) == 0) {
        break;
      }
      v24 += 7;
      BOOL v18 = v25++ > 8;
      if (v18)
      {
        LODWORD(v15) = 0;
        id v19 = &OBJC_IVAR___PDDPStateChangesIOS134MACOS10154HandoutDomainState__state;
        goto LABEL_49;
      }
    }
    id v19 = &OBJC_IVAR___PDDPStateChangesIOS134MACOS10154HandoutDomainState__state;
LABEL_47:
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      LODWORD(v15) = 0;
    }
LABEL_49:
    *(_DWORD *)(a1 + *v19) = v15;
    goto LABEL_50;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

uint64_t sub_10008601C(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    unint64_t v12 = v6 >> 3;
    if ((v6 >> 3) == 3)
    {
      char v15 = 0;
      unsigned int v16 = 0;
      uint64_t v17 = 0;
      *(unsigned char *)(a1 + 28) |= 1u;
      while (1)
      {
        unint64_t v18 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v18 == -1 || v18 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v19 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v18);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v18 + 1;
        v17 |= (unint64_t)(v19 & 0x7F) << v15;
        if ((v19 & 0x80) == 0) {
          goto LABEL_33;
        }
        v15 += 7;
        BOOL v9 = v16++ >= 9;
        if (v9)
        {
          LODWORD(v17) = 0;
          goto LABEL_35;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_33:
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        LODWORD(v17) = 0;
      }
LABEL_35:
      *(_DWORD *)(a1 + 24) = v17;
    }
    else
    {
      if (v12 == 2)
      {
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 8;
      }
      else
      {
        if (v12 != 1)
        {
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
        }
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 16;
      }
      char v20 = *(void **)(a1 + v14);
      *(void *)(a1 + v14) = v13;
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_100087F68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100087F80(uint64_t a1)
{
  CLSInitLog();
  id v2 = [*(id *)(a1 + 32) logSubsystem];
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id v3 = objc_opt_class();
    char v4 = *(void **)(a1 + 32);
    id v5 = v3;
    unint64_t v6 = [v4 operationID];
    id v7 = [*(id *)(a1 + 40) count];
    *(_DWORD *)long long buf = 138543874;
    id v32 = v3;
    __int16 v33 = 2114;
    id v34 = v6;
    __int16 v35 = 2048;
    id v36 = v7;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%{public}@: %{public}@ processing response with %lu payload items", buf, 0x20u);
  }
  long long v28 = 0u;
  long long v29 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  char v8 = *(id *)(a1 + 40);
  id v9 = [v8 countByEnumeratingWithState:&v26 objects:v30 count:16];
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = *(void *)v27;
    while (2)
    {
      unint64_t v12 = 0;
      do
      {
        if (*(void *)v27 != v11) {
          objc_enumerationMutation(v8);
        }
        uint64_t v13 = *(void *)(*((void *)&v26 + 1) + 8 * (void)v12);
        buf[0] = 0;
        char v15 = *(void **)(a1 + 32);
        uint64_t v16 = *(void *)(*(void *)(a1 + 48) + 8);
        id obj = *(id *)(v16 + 40);
        [v15 processPayloadWithinWriteTransaction:v13 error:&obj stop:buf];
        objc_storeStrong((id *)(v16 + 40), obj);
        LODWORD(v13) = buf[0];
        if (v13)
        {
          uint64_t v19 = 0;
          goto LABEL_16;
        }
        unint64_t v12 = (char *)v12 + 1;
      }
      while (v10 != v12);
      id v10 = [v8 countByEnumeratingWithState:&v26 objects:v30 count:16];
      if (v10) {
        continue;
      }
      break;
    }
  }

  uint64_t v17 = +[PDUserDefaults sharedDefaults];
  unsigned int v18 = [v17 enableVerboseLogging];

  if (!v18) {
    return 1;
  }
  CLSInitLog();
  char v8 = [*(id *)(a1 + 32) logSubsystem];
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
  {
    unsigned int v21 = objc_opt_class();
    unint64_t v22 = *(void **)(a1 + 32);
    id v23 = v21;
    char v24 = [v22 operationID];
    *(_DWORD *)long long buf = 138543618;
    id v32 = v21;
    __int16 v33 = 2114;
    id v34 = v24;
    _os_log_debug_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "%{public}@: %{public}@ response processing complete.", buf, 0x16u);
  }
  uint64_t v19 = 1;
LABEL_16:

  return v19;
}

uint64_t sub_100089BEC(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = objc_opt_class();
  uint64_t v19 = *(void *)(a1 + 40);
  char v4 = +[NSArray arrayWithObjects:&v19 count:1];
  LODWORD(v2) = [v2 deleteAll:v3 where:@"zoneName = ?" bindings:v4];

  if (!v2) {
    goto LABEL_3;
  }
  id v5 = *(void **)(a1 + 32);
  uint64_t v6 = objc_opt_class();
  uint64_t v18 = *(void *)(a1 + 40);
  uint64_t v7 = 1;
  char v8 = +[NSArray arrayWithObjects:&v18 count:1];
  LOBYTE(v5) = [v5 deleteAll:v6 where:@"zoneName = ?" bindings:v8];

  if ((v5 & 1) == 0)
  {
LABEL_3:
    CLSInitLog();
    id v9 = [*(id *)(a1 + 48) logSubsystem];
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      id v10 = objc_opt_class();
      uint64_t v11 = *(void *)(a1 + 40);
      int v14 = 138543618;
      char v15 = v10;
      __int16 v16 = 2114;
      uint64_t v17 = v11;
      id v12 = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "%{public}@ failed to delete cached zone: %{public}@", (uint8_t *)&v14, 0x16u);
    }
    return 0;
  }
  return v7;
}

void sub_10008B5EC(id a1)
{
  qword_10023E550 = NSStringFromSelector("isExecuting");

  _objc_release_x1();
}

void *sub_10008B6E0(void *a1, void *a2, void *a3)
{
  id v6 = a2;
  id v7 = a3;
  if (a1)
  {
    v12.receiver = a1;
    v12.super_class = (Class)PDDatabaseWhereClause;
    id v8 = objc_msgSendSuper2(&v12, "init");
    a1 = v8;
    if (v8)
    {
      objc_storeStrong((id *)v8 + 1, a2);
      id v9 = [v7 copy];
      id v10 = (void *)a1[4];
      a1[4] = v9;
    }
  }

  return a1;
}

uint64_t sub_10008B77C(void *a1, uint64_t a2)
{
  if (!a1) {
    return 0;
  }
  id v2 = a1;
  if (!a1[1]) {
    return 1;
  }
  id v4 = [objc_alloc((Class)NSMutableString) initWithCapacity:128];
  id v5 = objc_alloc_init((Class)NSMutableArray);
  id v67 = objc_alloc_init((Class)NSMutableSet);
  id v6 = objc_msgSend(objc_alloc((Class)NSMutableArray), "initWithObjects:", v2[1], 0);
  objc_opt_class();
  objc_opt_class();
  if (![v6 count]) {
    goto LABEL_67;
  }
  uint64_t v65 = a2;
  long long v66 = v2;
  id v73 = 0;
  double v68 = v4;
  while (1)
  {
    id v9 = [v6 lastObject];
    [v6 removeLastObject];
    if (objc_opt_isKindOfClass())
    {
      id v10 = v8;
      id v11 = [v9 compoundPredicateType];
      id v12 = v11;
      uint64_t v13 = @" and ";
      if (v11 == (id)2) {
        uint64_t v13 = @" or ";
      }
      if (!v11) {
        uint64_t v13 = @"not ";
      }
      int v14 = v13;
      objc_msgSend(v6, "addObject:", @"(");
      if (v12)
      {
        long long v85 = 0u;
        long long v86 = 0u;
        long long v83 = 0u;
        long long v84 = 0u;
        char v15 = [v9 subpredicates];
        id v16 = [v15 countByEnumeratingWithState:&v83 objects:v88 count:16];
        if (v16)
        {
          id v17 = v16;
          uint64_t v18 = *(void *)v84;
          do
          {
            for (i = 0; i != v17; i = (char *)i + 1)
            {
              if (*(void *)v84 != v18) {
                objc_enumerationMutation(v15);
              }
              [v6 addObject:*(void *)(*((void *)&v83 + 1) + 8 * i)];
              [v6 addObject:v14];
            }
            id v17 = [v15 countByEnumeratingWithState:&v83 objects:v88 count:16];
          }
          while (v17);
        }

        [v6 removeLastObject];
      }
      else
      {
        [v6 addObject:@"not "];
        long long v28 = [v9 subpredicates];
        [v6 addObjectsFromArray:v28];
      }
      [v6 addObject:@""]);

      id v8 = v10;
      goto LABEL_49;
    }
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      [v68 insertString:v9 atIndex:0];
      goto LABEL_49;
    }
    id v72 = v8;
    id v82 = v73;
    char v20 = [v9 leftKeyPath:&v82];
    id v21 = v82;

    if (v21) {
      break;
    }
    id v80 = 0;
    id v81 = 0;
    id v79 = 0;
    unsigned int v22 = [v9 getRightKeyPath:&v81 orRightContstantValue:&v80 error:&v79];
    id v23 = v81;
    id v24 = v80;
    id v73 = v79;
    if (!v22)
    {
      id v69 = v24;
      long long v71 = v23;
      int v29 = 3;
      id v8 = v72;

      goto LABEL_48;
    }
    unsigned int v25 = (void *)v66[4];
    if (v25)
    {
      uint64_t v26 = [v25 stringByAppendingString:v20];

      if (v23)
      {
        uint64_t v27 = [(id)v66[4] stringByAppendingString:v23];

        char v20 = (void *)v26;
        id v23 = (id)v27;
      }
      else
      {
        char v20 = (void *)v26;
      }
    }
    [v67 addObject:v20];
    [v6 addObject:v20];
    id v30 = [v9 predicateOperatorType];
    long long v71 = v23;
    if (v23)
    {
      id v70 = v24;
      unint64_t v31 = v20;
      id v32 = v23;
      __int16 v33 = +[NSNull null];
      unsigned __int8 v34 = [v32 isEqual:v33];

      if (v34) {
        id v35 = 0;
      }
      else {
        id v35 = v32;
      }

      uint64_t v40 = sub_10008BFC0((uint64_t)v30, (uint64_t)v35);

      __int16 v41 = (void *)v40;
      [v6 addObject:v40];
      char v20 = v31;
      if (v30 != (id)10)
      {
        [v67 addObject:v32];
        [v6 addObject:v32];
      }
      int v29 = 0;
    }
    else
    {
      id v36 = v24;
      long long v37 = +[NSNull null];
      unsigned __int8 v38 = [v36 isEqual:v37];

      if (v38) {
        id v39 = 0;
      }
      else {
        id v39 = v36;
      }

      uint64_t v42 = sub_10008BFC0((uint64_t)v30, (uint64_t)v39);

      [v6 addObject:v42];
      if (v30 == (id)10)
      {
        if ([v36 conformsToProtocol:&OBJC_PROTOCOL___NSFastEnumeration])
        {
          long long v64 = (void *)v42;
          objc_opt_class();
          if (objc_opt_isKindOfClass())
          {
            __int16 v43 = [v36 allObjects];
          }
          else
          {
            __int16 v43 = v36;
          }
          id v8 = v72;
          objc_msgSend(v6, "addObject:", @"(");
          long long v76 = 0u;
          long long v77 = 0u;
          long long v74 = 0u;
          long long v75 = 0u;
          id v70 = v43;
          uint64_t v46 = [v43 reverseObjectEnumerator];
          id v47 = [v46 countByEnumeratingWithState:&v74 objects:v87 count:16];
          if (v47)
          {
            id v48 = v47;
            long long v63 = v20;
            uint64_t v49 = *(void *)v75;
            do
            {
              for (j = 0; j != v48; j = (char *)j + 1)
              {
                if (*(void *)v75 != v49) {
                  objc_enumerationMutation(v46);
                }
                uint64_t v51 = *(void **)(*((void *)&v74 + 1) + 8 * (void)j);
                unsigned int v53 = sub_10008C0B8(v51, 10);
                [v5 addObject:v53];

                [v6 addObject:@"?, "];
              }
              id v48 = [v46 countByEnumeratingWithState:&v74 objects:v87 count:16];
            }
            while (v48);

            objc_msgSend(v6, "replaceObjectAtIndex:withObject:", (char *)objc_msgSend(v6, "count") - 1, @"?");
            id v8 = v72;
            char v20 = v63;
          }
          else
          {
          }
          [v6 addObject:@""]);
          int v29 = 0;
          __int16 v41 = v64;
          goto LABEL_47;
        }
        id v78 = v73;
        id v70 = v36;
        +[NSError cls_assignError:&v78, 2, @"Value, %@, which is on the right side of on \"IN\" clause must be a collection that conform to NSFastEnumeration", v36 code format];
        id v45 = v78;

        int v29 = 3;
        id v73 = v45;
        __int16 v41 = (void *)v42;
      }
      else
      {
        [v6 addObject:@"?"];
        id v70 = v36;
        uint64_t v44 = sub_10008C0B8(v36, (uint64_t)v30);
        [v5 addObject:v44];

        __int16 v41 = (void *)v42;
        int v29 = 0;
      }
    }
    id v8 = v72;
LABEL_47:

LABEL_48:
    if (v29) {
      goto LABEL_64;
    }
LABEL_49:

    if (![v6 count]) {
      goto LABEL_65;
    }
  }

  id v73 = v21;
LABEL_64:

LABEL_65:
  uint64_t v7 = v65;
  id v2 = v66;
  uint64_t v55 = v73;
  id v4 = v68;
  if (v73)
  {
    +[NSError cls_assignError:v65 fromError:v73];
    uint64_t v54 = 0;
    goto LABEL_72;
  }
LABEL_67:
  unint64_t v56 = (char *)objc_msgSend(v4, "length", v7);
  if (v56 && (id v57 = v56, objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    objc_msgSend(v4, "substringWithRange:", 1, v57 - 2);
    id v58 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    id v58 = v4;
  }
  id v59 = (void *)v2[3];
  v2[3] = v58;

  uint64_t v55 = [v5 reverseObjectEnumerator];
  uint64_t v60 = [v55 allObjects];
  BOOL v61 = (void *)v2[2];
  v2[2] = v60;

  uint64_t v54 = 1;
LABEL_72:

  return v54;
}

__CFString *sub_10008BFC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = 0;
  switch(a1)
  {
    case 0:
      uint64_t v3 = @" < ";
      break;
    case 1:
      uint64_t v3 = @" <= ";
      break;
    case 2:
      uint64_t v3 = @" > ";
      break;
    case 3:
      uint64_t v3 = @" >= ";
      break;
    case 4:
      id v4 = @" = ";
      CFStringRef v5 = @" is ";
      goto LABEL_9;
    case 5:
      id v4 = @" != ";
      CFStringRef v5 = @" is not ";
LABEL_9:
      if (!a2) {
        id v4 = (__CFString *)v5;
      }
      uint64_t v3 = v4;
      break;
    case 7:
    case 8:
    case 9:
      uint64_t v3 = @" like ";
      break;
    case 10:
      uint64_t v3 = @" in ";
      break;
    default:
      break;
  }

  return v3;
}

__CFString *sub_10008C0B8(void *a1, uint64_t a2)
{
  uint64_t v3 = a1;
  id v4 = v3;
  if (!v3)
  {
    CFStringRef v5 = +[NSNull null];
    goto LABEL_11;
  }
  switch(a2)
  {
    case 9:
      uint64_t v3 = @"%";
      CFStringRef v6 = v4;
LABEL_9:
      CFStringRef v5 = [(__CFString *)v3 stringByAppendingString:v6];
      break;
    case 8:
      CFStringRef v6 = @"%";
      goto LABEL_9;
    case 7:
      CFStringRef v5 = (__CFString *)[objc_alloc((Class)NSString) initWithFormat:@"%%%@%%", v3];
      break;
    default:
      CFStringRef v5 = v3;
      break;
  }
LABEL_11:
  uint64_t v7 = v5;

  return v7;
}

id *sub_10008C488(id *a1, void *a2, void *a3)
{
  id v6 = a2;
  id v7 = a3;
  if (a1)
  {
    v10.receiver = a1;
    v10.super_class = (Class)PDDatabaseBindings;
    id v8 = (id *)objc_msgSendSuper2(&v10, "init");
    a1 = v8;
    if (v8)
    {
      objc_storeStrong(v8 + 2, a2);
      objc_storeStrong(a1 + 3, a3);
    }
  }

  return a1;
}

void sub_10008C524(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = a3;
  if (a1)
  {
    [*(id *)(a1 + 16) addObject:v5];
    id v6 = *(void **)(a1 + 24);
    if (v8)
    {
      [v6 addObject:v8];
    }
    else
    {
      id v7 = +[NSNull null];
      [v6 addObject:v7];
    }
  }
}

void sub_10008C5D0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (a1)
  {
    long long v13 = 0u;
    long long v14 = 0u;
    long long v11 = 0u;
    long long v12 = 0u;
    id v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v5)
    {
      id v6 = v5;
      uint64_t v7 = *(void *)v12;
      do
      {
        id v8 = 0;
        do
        {
          if (*(void *)v12 != v7) {
            objc_enumerationMutation(v4);
          }
          id v9 = [*(id *)(a1 + 16) indexOfObject:*(void *)(*((void *)&v11 + 1) + 8 * (void)v8)];
          if (v9 != (id)0x7FFFFFFFFFFFFFFFLL)
          {
            id v10 = v9;
            [*(id *)(a1 + 16) removeObjectAtIndex:v9];
            [*(id *)(a1 + 24) removeObjectAtIndex:v10];
          }
          id v8 = (char *)v8 + 1;
        }
        while (v6 != v8);
        id v6 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v6);
    }
  }
}

uint64_t sub_10008CB74(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 40;
        goto LABEL_22;
      case 2u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 16;
LABEL_22:
        char v15 = *(void **)(a1 + v13);
        *(void *)(a1 + v13) = v12;

        goto LABEL_43;
      case 3u:
        char v16 = 0;
        unsigned int v17 = 0;
        uint64_t v18 = 0;
        *(unsigned char *)(a1 + 52) |= 1u;
        while (2)
        {
          unint64_t v19 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v19 == -1 || v19 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v20 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v19);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v19 + 1;
            v18 |= (unint64_t)(v20 & 0x7F) << v16;
            if (v20 < 0)
            {
              v16 += 7;
              BOOL v9 = v17++ >= 9;
              if (v9)
              {
                LODWORD(v18) = 0;
                goto LABEL_42;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v18) = 0;
        }
LABEL_42:
        *(_DWORD *)(a1 + 48) = v18;
        goto LABEL_43;
      case 4u:
        id v21 = objc_alloc_init(PDDPBinaryValue);
        objc_storeStrong((id *)(a1 + 8), v21);
        if (!PBReaderPlaceMark() || (sub_100167638((uint64_t)v21, a2) & 1) == 0) {
          goto LABEL_45;
        }
        goto LABEL_38;
      case 5u:
        id v21 = objc_alloc_init(PDDPQuantityValue);
        objc_storeStrong((id *)(a1 + 24), v21);
        if (!PBReaderPlaceMark() || (sub_1000BEFE0((uint64_t)v21, a2) & 1) == 0) {
          goto LABEL_45;
        }
        goto LABEL_38;
      case 6u:
        id v21 = objc_alloc_init(PDDPScoreValue);
        objc_storeStrong((id *)(a1 + 32), v21);
        if (PBReaderPlaceMark() && sub_10008E230((uint64_t)v21, a2))
        {
LABEL_38:
          PBReaderRecallMark();

LABEL_43:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }
LABEL_45:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_43;
    }
  }
}

BOOL sub_10008E230(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0;
      while (1)
      {
        uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        unint64_t v8 = v7 + 1;
        if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
        v6 |= (unint64_t)(v9 & 0x7F) << v4;
        if ((v9 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0;
          int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0;
      }
LABEL_13:
      if (v11 || (v6 & 7) == 4) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      if ((v6 >> 3) == 2) {
        break;
      }
      if ((v6 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 24) |= 2u;
        unint64_t v13 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v13 <= 0xFFFFFFFFFFFFFFF7 && v13 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v14 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v13);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v13 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v14 = 0;
        }
        char v16 = &OBJC_IVAR___PDDPScoreValue__value;
LABEL_31:
        *(void *)(a1 + *v16) = v14;
        goto LABEL_32;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_32:
      if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
    }
    *(unsigned char *)(a1 + 24) |= 1u;
    unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
    if (v15 <= 0xFFFFFFFFFFFFFFF7 && v15 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
    {
      uint64_t v14 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 8;
    }
    else
    {
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
      uint64_t v14 = 0;
    }
    char v16 = &OBJC_IVAR___PDDPScoreValue__maxValue;
    goto LABEL_31;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

uint64_t sub_10008F9DC(uint64_t a1, void *a2)
{
  uint64_t v14 = a2;
  if (!sub_100170CD0(v14) && !objc_opt_class()
    || sub_100170CD0(v14)
    && sub_100170CD0(v14)
    && (id v3 = sub_100170CD0(v14), ([v3 isEqual:objc_opt_class()] & 1) != 0))
  {
    int v4 = 5;
  }
  else
  {
    if (sub_100170CD0(v14) || objc_opt_class())
    {
      if (!sub_100170CD0(v14)) {
        goto LABEL_23;
      }
      if (!sub_100170CD0(v14)) {
        goto LABEL_23;
      }
      unsigned int v5 = sub_100170CD0(v14);
      if (![v5 isEqual:objc_opt_class()]) {
        goto LABEL_23;
      }
    }
    int v4 = 6;
  }
  uint64_t v6 = sub_1000795D4(v4);
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    unint64_t v8 = [*(id *)(a1 + 32) missingIDsByClass];
    char v9 = [v8 objectForKeyedSubscript:v7];

    if (!v9)
    {
      char v9 = objc_opt_new();
      int v10 = [*(id *)(a1 + 32) missingIDsByClass];
      [v10 setObject:v9 forKeyedSubscript:v7];
    }
    if (([*(id *)(a1 + 40) containsObject:v7] & 1) == 0) {
      [*(id *)(a1 + 40) addObject:v7];
    }
    if ((unint64_t)[v9 count] <= 0xC7)
    {
      if (v14) {
        int v11 = v14[3];
      }
      else {
        int v11 = 0;
      }
      uint64_t v12 = v11;
      [v9 addObject:v12];
    }
  }
LABEL_23:

  return _objc_release_x1();
}

void sub_100090798(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_100091788(uint64_t a1)
{
  id v2 = objc_alloc_init((Class)NSDateFormatter);
  id v3 = (void *)qword_10023E560;
  qword_10023E560 = (uint64_t)v2;

  [(id)qword_10023E560 setLocale:*(void *)(a1 + 32)];
  int v4 = (void *)qword_10023E560;

  return _[v4 setLocalizedDateFormatFromTemplate:@"EMMMMdyyyy"];
}

void sub_100091C44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

char *sub_1000928A0(char *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    v14.receiver = a1;
    v14.super_class = (Class)PDURLOperationStats;
    a1 = (char *)objc_msgSendSuper2(&v14, "init");
    if (a1)
    {
      uint64_t v4 = objc_opt_class();
      unsigned int v5 = [v3 operationID];
      uint64_t v6 = +[NSString stringWithFormat:@"%@:%@", v4, v5];
      uint64_t v7 = (void *)*((void *)a1 + 2);
      *((void *)a1 + 2) = v6;

      unint64_t v8 = (void *)*((void *)a1 + 7);
      *((void *)a1 + 7) = 0;
      *((void *)a1 + 8) = 0xBFF0000000000000;

      *((_WORD *)a1 + 4) = 0;
      *((void *)a1 + 11) = 0;
      *((void *)a1 + 12) = -1;
      *((void *)a1 + 9) = 0xBFF0000000000000;
      *((void *)a1 + 10) = 0;
      *(_OWORD *)(a1 + 104) = 0u;
      *(_OWORD *)(a1 + 120) = 0u;
      char v9 = (void *)*((void *)a1 + 3);
      *((void *)a1 + 3) = 0;

      int v10 = (void *)*((void *)a1 + 4);
      *((void *)a1 + 4) = 0;

      int v11 = (void *)*((void *)a1 + 5);
      *((void *)a1 + 5) = 0;

      uint64_t v12 = (void *)*((void *)a1 + 6);
      *((void *)a1 + 6) = 0;
    }
  }

  return a1;
}

void sub_100092A6C(uint64_t a1, uint64_t a2, int a3)
{
  if (a1)
  {
    *(unsigned char *)(a1 + 8) = 1;
    if (a2 >= 0xE)
    {
      unsigned int v5 = +[NSString stringWithFormat:@"(unknown: %i)", a2];
    }
    else
    {
      unsigned int v5 = off_1001F3898[(int)a2];
    }
    uint64_t v12 = v5;
    if (a3)
    {
      uint64_t v6 = *(void *)(a1 + 24);
      if (!v6)
      {
        uint64_t v7 = +[NSMutableDictionary dictionary];
        unint64_t v8 = *(void **)(a1 + 24);
        *(void *)(a1 + 24) = v7;

        unsigned int v5 = v12;
        uint64_t v6 = *(void *)(a1 + 24);
      }
      [(id)a1 _incrementCounterForKey:v5 inDictionary:v6];
    }
    else
    {
      uint64_t v9 = *(void *)(a1 + 32);
      if (!v9)
      {
        uint64_t v10 = +[NSMutableDictionary dictionary];
        int v11 = *(void **)(a1 + 32);
        *(void *)(a1 + 32) = v10;

        unsigned int v5 = v12;
        uint64_t v9 = *(void *)(a1 + 32);
      }
      [(id)a1 _incrementCounterForKey:v5 inDictionary:v9];
      ++*(void *)(a1 + 128);
    }
  }
}

void sub_100092C1C(uint64_t a1, uint64_t a2, int a3)
{
  if (a1)
  {
    *(unsigned char *)(a1 + 9) = 1;
    if a2 < 0x27 && ((0x7FFFFE91DFuLL >> a2))
    {
      unsigned int v5 = off_1001F3908[(int)a2];
    }
    else
    {
      unsigned int v5 = +[NSString stringWithFormat:@"(unknown: %i)", a2];
    }
    uint64_t v12 = v5;
    if (a3)
    {
      uint64_t v6 = *(void *)(a1 + 40);
      if (!v6)
      {
        uint64_t v7 = +[NSMutableDictionary dictionary];
        unint64_t v8 = *(void **)(a1 + 40);
        *(void *)(a1 + 40) = v7;

        unsigned int v5 = v12;
        uint64_t v6 = *(void *)(a1 + 40);
      }
      [(id)a1 _incrementCounterForKey:v5 inDictionary:v6];
    }
    else
    {
      uint64_t v9 = *(void *)(a1 + 48);
      if (!v9)
      {
        uint64_t v10 = +[NSMutableDictionary dictionary];
        int v11 = *(void **)(a1 + 48);
        *(void *)(a1 + 48) = v10;

        unsigned int v5 = v12;
        uint64_t v9 = *(void *)(a1 + 48);
      }
      [(id)a1 _incrementCounterForKey:v5 inDictionary:v9];
      ++*(void *)(a1 + 128);
    }
  }
}

uint64_t sub_100092D3C(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = +[NSDate date];
    uint64_t v3 = *(void *)(v1 + 56);
    *(void *)(v1 + 56) = v2;
    return _objc_release_x1(v2, v3);
  }
  return result;
}

void sub_100092D8C(uint64_t a1)
{
  if (a1 && *(void *)(a1 + 56))
  {
    id v3 = +[NSDate date];
    [v3 timeIntervalSinceDate:*(void *)(a1 + 56)];
    *(void *)(a1 + 72) = v2;
  }
}

void *sub_100092E04(void *a1)
{
  if (a1)
  {
    a1 = +[NSString stringWithFormat:@"id=%@:bytes=%ld:items=%ld", a1[2], a1[10], a1[14]];
    uint64_t v1 = vars8;
  }
  return a1;
}

id sub_100092E64(uint64_t a1)
{
  if (a1)
  {
    uint64_t v2 = +[NSString stringWithFormat:@"id=%@:status=%ld:clsError=%ld:bytes=%ld:items=%ld:failedItems=%ld:rtt=%.2fs:processing=%.2fs", *(void *)(a1 + 16), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 88), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 64), *(void *)(a1 + 72)];
    if (*(unsigned char *)(a1 + 9) || *(unsigned char *)(a1 + 8))
    {
      id v3 = [(id)a1 successPayloadsCountsDictionary];
      uint64_t v4 = [(id)a1 failedPayloadsCountsDictionary];
      if ([v3 count])
      {
        uint64_t v5 = +[NSString stringWithFormat:@"%@:itemCounts=%@", v2, v3];

        uint64_t v2 = (void *)v5;
      }
      if ([v4 count])
      {
        uint64_t v6 = +[NSString stringWithFormat:@"%@:failedItemCounts=%@", v2, v4];

        uint64_t v2 = (void *)v6;
      }
    }
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

double *sub_100092F94(double *a1)
{
  uint64_t v1 = a1;
  if (a1)
  {
    *(double *)unint64_t v13 = a1[2];
    uint64_t v2 = +[NSNumber numberWithInteger:*((void *)a1 + 12), @"identifier", @"httpStatusCode"];
    v13[1] = v2;
    v12[2] = @"clsErrorCode";
    id v3 = +[NSNumber numberWithInteger:*((void *)v1 + 13)];
    v13[2] = v3;
    void v12[3] = @"roundtripTime";
    uint64_t v4 = +[NSNumber numberWithDouble:v1[8]];
    v13[3] = v4;
    void v12[4] = @"responseProcessingTime";
    uint64_t v5 = +[NSNumber numberWithDouble:v1[9]];
    void v13[4] = v5;
    void v12[5] = @"requestSizeBytes";
    uint64_t v6 = +[NSNumber numberWithUnsignedInteger:*((void *)v1 + 10)];
    v13[5] = v6;
    v12[6] = @"responseSizeBytes";
    uint64_t v7 = +[NSNumber numberWithUnsignedInteger:*((void *)v1 + 11)];
    v13[6] = v7;
    v12[7] = @"requestItemCount";
    unint64_t v8 = +[NSNumber numberWithInteger:*((void *)v1 + 14)];
    v13[7] = v8;
    v12[8] = @"responseItemCount";
    uint64_t v9 = +[NSNumber numberWithInteger:*((void *)v1 + 15)];
    uint8_t v13[8] = v9;
    v12[9] = @"failedItemCount";
    uint64_t v10 = +[NSNumber numberWithInteger:*((void *)v1 + 16)];
    v13[9] = v10;
    uint64_t v1 = +[NSDictionary dictionaryWithObjects:v13 forKeys:v12 count:10];
  }

  return v1;
}

uint64_t sub_100094650(_WORD *a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 24;
        goto LABEL_22;
      case 2u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 12;
LABEL_22:
        unint64_t v15 = *(void **)&a1[v13];
        *(void *)&a1[v13] = v12;

        goto LABEL_132;
      case 3u:
        PBReaderReadString();
        char v16 = (PDDPMapEntry *)objc_claimAutoreleasedReturnValue();
        if (v16) {
          [a1 addZoneSubscriptions:v16];
        }
        goto LABEL_51;
      case 4u:
        char v16 = objc_alloc_init(PDDPMapEntry);
        [a1 addServiceBag:v16];
        if (PBReaderPlaceMark() && sub_10010AE4C((uint64_t)v16, a2))
        {
          PBReaderRecallMark();
LABEL_51:

LABEL_132:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

        return 0;
      case 5u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        a1[40] |= 0x80u;
        while (2)
        {
          unint64_t v20 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v20 == -1 || v20 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v21 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v20);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v20 + 1;
            v19 |= (unint64_t)(v21 & 0x7F) << v17;
            if (v21 < 0)
            {
              v17 += 7;
              BOOL v9 = v18++ >= 9;
              if (v9)
              {
                uint64_t v19 = 0;
                goto LABEL_97;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v19 = 0;
        }
LABEL_97:
        BOOL v59 = v19 != 0;
        uint64_t v60 = 75;
        goto LABEL_126;
      case 6u:
        char v22 = 0;
        unsigned int v23 = 0;
        uint64_t v24 = 0;
        a1[40] |= 1u;
        while (2)
        {
          unint64_t v25 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v25 == -1 || v25 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v25);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v25 + 1;
            v24 |= (unint64_t)(v26 & 0x7F) << v22;
            if (v26 < 0)
            {
              v22 += 7;
              BOOL v9 = v23++ >= 9;
              if (v9)
              {
                LODWORD(v24) = 0;
                goto LABEL_101;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v24) = 0;
        }
LABEL_101:
        uint64_t v61 = 8;
        goto LABEL_131;
      case 7u:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v29 = 0;
        a1[40] |= 0x100u;
        while (2)
        {
          unint64_t v30 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v30 == -1 || v30 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v30);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v30 + 1;
            v29 |= (unint64_t)(v31 & 0x7F) << v27;
            if (v31 < 0)
            {
              v27 += 7;
              BOOL v9 = v28++ >= 9;
              if (v9)
              {
                uint64_t v29 = 0;
                goto LABEL_105;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v29 = 0;
        }
LABEL_105:
        BOOL v59 = v29 != 0;
        uint64_t v60 = 76;
        goto LABEL_126;
      case 8u:
        PBReaderReadString();
        char v16 = (PDDPMapEntry *)objc_claimAutoreleasedReturnValue();
        if (v16) {
          [a1 addDefaultSyncZoneNames:v16];
        }
        goto LABEL_51;
      case 9u:
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v24 = 0;
        a1[40] |= 8u;
        while (2)
        {
          unint64_t v34 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v34 == -1 || v34 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v35 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v34);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v34 + 1;
            v24 |= (unint64_t)(v35 & 0x7F) << v32;
            if (v35 < 0)
            {
              v32 += 7;
              BOOL v9 = v33++ >= 9;
              if (v9)
              {
                LODWORD(v24) = 0;
                goto LABEL_109;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v24) = 0;
        }
LABEL_109:
        uint64_t v61 = 28;
        goto LABEL_131;
      case 0xAu:
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v24 = 0;
        a1[40] |= 2u;
        while (2)
        {
          unint64_t v38 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v38 == -1 || v38 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v39 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v38);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v38 + 1;
            v24 |= (unint64_t)(v39 & 0x7F) << v36;
            if (v39 < 0)
            {
              v36 += 7;
              BOOL v9 = v37++ >= 9;
              if (v9)
              {
                LODWORD(v24) = 0;
                goto LABEL_113;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v24) = 0;
        }
LABEL_113:
        uint64_t v61 = 16;
        goto LABEL_131;
      case 0xBu:
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        a1[40] |= 0x20u;
        while (2)
        {
          unint64_t v43 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v43 == -1 || v43 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v44 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v43);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v43 + 1;
            v42 |= (unint64_t)(v44 & 0x7F) << v40;
            if (v44 < 0)
            {
              v40 += 7;
              BOOL v9 = v41++ >= 9;
              if (v9)
              {
                uint64_t v42 = 0;
                goto LABEL_117;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v42 = 0;
        }
LABEL_117:
        BOOL v59 = v42 != 0;
        uint64_t v60 = 73;
        goto LABEL_126;
      case 0xCu:
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v47 = 0;
        a1[40] |= 0x10u;
        while (2)
        {
          unint64_t v48 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v48 == -1 || v48 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v49 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v48);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v48 + 1;
            v47 |= (unint64_t)(v49 & 0x7F) << v45;
            if (v49 < 0)
            {
              v45 += 7;
              BOOL v9 = v46++ >= 9;
              if (v9)
              {
                uint64_t v47 = 0;
                goto LABEL_121;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v47 = 0;
        }
LABEL_121:
        BOOL v59 = v47 != 0;
        uint64_t v60 = 72;
        goto LABEL_126;
      case 0xDu:
        char v50 = 0;
        unsigned int v51 = 0;
        uint64_t v52 = 0;
        a1[40] |= 0x40u;
        while (2)
        {
          unint64_t v53 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v53 == -1 || v53 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v54 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v53);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v53 + 1;
            v52 |= (unint64_t)(v54 & 0x7F) << v50;
            if (v54 < 0)
            {
              v50 += 7;
              BOOL v9 = v51++ >= 9;
              if (v9)
              {
                uint64_t v52 = 0;
                goto LABEL_125;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v52 = 0;
        }
LABEL_125:
        BOOL v59 = v52 != 0;
        uint64_t v60 = 74;
LABEL_126:
        *((unsigned char *)a1 + v60) = v59;
        goto LABEL_132;
      case 0xEu:
        char v55 = 0;
        unsigned int v56 = 0;
        uint64_t v24 = 0;
        a1[40] |= 4u;
        while (2)
        {
          unint64_t v57 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v57 == -1 || v57 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v58 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v57);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v57 + 1;
            v24 |= (unint64_t)(v58 & 0x7F) << v55;
            if (v58 < 0)
            {
              v55 += 7;
              BOOL v9 = v56++ >= 9;
              if (v9)
              {
                LODWORD(v24) = 0;
                goto LABEL_130;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v24) = 0;
        }
LABEL_130:
        uint64_t v61 = 18;
LABEL_131:
        *(_DWORD *)&a1[v61] = v24;
        goto LABEL_132;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_132;
    }
  }
}

id sub_100096BDC(uint64_t a1, void *a2, void *a3)
{
  id v4 = a2;
  id v5 = a3;
  self;
  id v16 = +[NSMapTable weakToWeakObjectsMapTable];
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  unint64_t v6 = [v4 values];
  id v7 = [v6 countByEnumeratingWithState:&v17 objects:v21 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v18;
    do
    {
      for (i = 0; i != v8; i = (char *)i + 1)
      {
        if (*(void *)v18 != v9) {
          objc_enumerationMutation(v6);
        }
        uint64_t v11 = *(void *)(*((void *)&v17 + 1) + 8 * i);
        uint64_t v13 = [v4 objectForKeyedSubscript:v11];
        uint64_t v14 = [v5 objectForKeyedSubscript:v11];
        if (v13 | v14 && (!v13 || ([(id)v13 isEqual:v14] & 1) == 0)) {
          [v16 setObject:v13 forKeyedSubscript:v11];
        }
      }
      id v8 = [v6 countByEnumeratingWithState:&v17 objects:v21 count:16];
    }
    while (v8);
  }

  return v16;
}

uint64_t sub_100097A38(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 80;
        goto LABEL_68;
      case 2u:
        goto LABEL_22;
      case 3u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 16;
        goto LABEL_68;
      case 4u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 112;
        goto LABEL_68;
      case 5u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 72;
        goto LABEL_68;
      case 6u:
        uint64_t v14 = objc_alloc_init(PDDPDate);
        uint64_t v16 = 32;
        goto LABEL_39;
      case 7u:
        uint64_t v14 = objc_alloc_init(PDDPDate);
        uint64_t v16 = 40;
        goto LABEL_39;
      case 8u:
        uint64_t v14 = objc_alloc_init(PDDPDate);
        uint64_t v16 = 48;
        goto LABEL_39;
      case 9u:
        uint64_t v14 = objc_alloc_init(PDDPDate);
        uint64_t v16 = 64;
        goto LABEL_39;
      case 0xAu:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 132) |= 0x10u;
        while (2)
        {
          unint64_t v20 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v20 == -1 || v20 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v21 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v20);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v20 + 1;
            v19 |= (unint64_t)(v21 & 0x7F) << v17;
            if (v21 < 0)
            {
              v17 += 7;
              BOOL v9 = v18++ >= 9;
              if (v9)
              {
                uint64_t v19 = 0;
                goto LABEL_79;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v19 = 0;
        }
LABEL_79:
        *(unsigned char *)(a1 + 128) = v19 != 0;
        goto LABEL_97;
      case 0xBu:
        uint64_t v14 = objc_alloc_init(PDDPDate);
        uint64_t v16 = 56;
LABEL_39:
        objc_storeStrong((id *)(a1 + v16), v14);
        if PBReaderPlaceMark() && (PDDPDateReadFrom((uint64_t)v14, a2)) {
          goto LABEL_41;
        }
        goto LABEL_99;
      case 0xCu:
        char v22 = 0;
        unsigned int v23 = 0;
        uint64_t v24 = 0;
        *(unsigned char *)(a1 + 132) |= 2u;
        while (2)
        {
          unint64_t v25 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v25 == -1 || v25 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v25);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v25 + 1;
            v24 |= (unint64_t)(v26 & 0x7F) << v22;
            if (v26 < 0)
            {
              v22 += 7;
              BOOL v9 = v23++ >= 9;
              if (v9)
              {
                LODWORD(v24) = 0;
                goto LABEL_83;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v24) = 0;
        }
LABEL_83:
        uint64_t v41 = 96;
        goto LABEL_96;
      case 0xDu:
        uint64_t v14 = objc_alloc_init(PDDPStatus);
        objc_storeStrong((id *)(a1 + 104), v14);
        if PBReaderPlaceMark() && (sub_1000D3710((uint64_t)v14, a2))
        {
LABEL_41:
          PBReaderRecallMark();
LABEL_42:

LABEL_97:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }
LABEL_99:

        return 0;
      case 0xEu:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v29 = 0;
        *(unsigned char *)(a1 + 132) |= 1u;
        while (2)
        {
          unint64_t v30 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v30 == -1 || v30 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v30);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v30 + 1;
            v29 |= (unint64_t)(v31 & 0x7F) << v27;
            if (v31 < 0)
            {
              v27 += 7;
              BOOL v9 = v28++ >= 9;
              if (v9)
              {
                uint64_t v29 = 0;
                goto LABEL_87;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v29 = 0;
        }
LABEL_87:
        *(void *)(a1 + 8) = v29;
        goto LABEL_97;
      case 0xFu:
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v24 = 0;
        *(unsigned char *)(a1 + 132) |= 4u;
        while (2)
        {
          unint64_t v34 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v34 == -1 || v34 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v35 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v34);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v34 + 1;
            v24 |= (unint64_t)(v35 & 0x7F) << v32;
            if (v35 < 0)
            {
              v32 += 7;
              BOOL v9 = v33++ >= 9;
              if (v9)
              {
                LODWORD(v24) = 0;
                goto LABEL_91;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v24) = 0;
        }
LABEL_91:
        uint64_t v41 = 120;
        goto LABEL_96;
      case 0x10u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 88;
LABEL_68:
        char v36 = *(void **)(a1 + v13);
        *(void *)(a1 + v13) = v12;

        goto LABEL_97;
      case 0x11u:
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v24 = 0;
        *(unsigned char *)(a1 + 132) |= 8u;
        while (2)
        {
          unint64_t v39 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v39 == -1 || v39 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v40 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v39);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v39 + 1;
            v24 |= (unint64_t)(v40 & 0x7F) << v37;
            if (v40 < 0)
            {
              v37 += 7;
              BOOL v9 = v38++ >= 9;
              if (v9)
              {
                LODWORD(v24) = 0;
                goto LABEL_95;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v24) = 0;
        }
LABEL_95:
        uint64_t v41 = 124;
LABEL_96:
        *(_DWORD *)(a1 + v41) = v24;
        goto LABEL_97;
      default:
        if ((v6 >> 3) == 100)
        {
          PBReaderReadString();
          uint64_t v14 = (PDDPDate *)objc_claimAutoreleasedReturnValue();
          if (v14) {
            [(id)a1 addClassIds:v14];
          }
          goto LABEL_42;
        }
LABEL_22:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_97;
    }
  }
}

char *sub_1000994EC(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  if (a1)
  {
    v15.receiver = a1;
    v15.super_class = (Class)PDFetchSurveyAnswerOperation;
    BOOL v9 = (char *)objc_msgSendSuper2(&v15, "initWithDatabase:", a2);
    if (v9)
    {
      id v10 = [v7 copy];
      uint64_t v11 = *(void **)(v9 + 235);
      *(void *)(v9 + 235) = v10;

      id v12 = [v8 copy];
      uint64_t v13 = *(void **)(v9 + 227);
      *(void *)(v9 + 227) = v12;
    }
  }
  else
  {
    BOOL v9 = 0;
  }

  return v9;
}

void *sub_100099F54(void *a1, void *a2)
{
  id v4 = a2;
  if (a1)
  {
    v7.receiver = a1;
    v7.super_class = (Class)PDASMRecordZone;
    id v5 = objc_msgSendSuper2(&v7, "init");
    a1 = v5;
    if (v5)
    {
      objc_storeStrong((id *)v5 + 1, a2);
      a1[3] = 0;
    }
  }

  return a1;
}

id sub_10009A310(id a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (a1)
  {
    if ([v3 count])
    {
      id v5 = +[PDDatabase whereSQLForArray:v4 prefix:@"zoneName in "];
      v9[0] = @"serverChangeToken";
      unint64_t v6 = objc_opt_new();
      v9[1] = @"status";
      v10[0] = v6;
      v10[1] = &off_10020AE78;
      objc_super v7 = +[NSDictionary dictionaryWithObjects:v10 forKeys:v9 count:2];

      a1 = [a1 updateAll:objc_opt_class() set:v7 where:v5 bindings:v4];
    }
    else
    {
      a1 = 0;
    }
  }

  return a1;
}

BOOL sub_10009A660(id *a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0;
      while (1)
      {
        unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0;
          int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0;
      }
LABEL_13:
      if (v10 || (v6 & 7) == 4) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      if ((v6 >> 3) == 2) {
        break;
      }
      if ((v6 >> 3) == 1)
      {
        id v12 = objc_alloc_init(PDDPPerson);
        objc_storeStrong(a1 + 1, v12);
        if (!PBReaderPlaceMark() || (sub_1000DDFFC((uint64_t)v12, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_26:
      if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
    }
    PBReaderReadString();
    id v12 = (PDDPPerson *)objc_claimAutoreleasedReturnValue();
    if (v12) {
      [a1 addRoles:v12];
    }
LABEL_24:

    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

double sub_10009B314(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    uint64_t v14 = 0;
    objc_super v15 = (double *)&v14;
    uint64_t v16 = 0x2020000000;
    uint64_t v17 = 0;
    uint64_t v7 = objc_opt_class();
    id v18 = v5;
    char v8 = +[NSArray arrayWithObjects:&v18 count:1];
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    void v11[2] = sub_10009B4A0;
    v11[3] = &unk_1001F3AA8;
    id v12 = v6;
    uint64_t v13 = &v14;
    [a1 selectAll:v7 where:@"parentObjectID = ?" bindings:v8 block:v11];

    double v9 = v15[3];
    _Block_object_dispose(&v14, 8);
  }
  else
  {
    double v9 = 0.0;
  }

  return v9;
}

void sub_10009B480(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10009B4A0(uint64_t a1, void *a2)
{
  id v7 = a2;
  if (!*(void *)(a1 + 32)
    || ([v7 startTime],
        id v3 = objc_claimAutoreleasedReturnValue(),
        id v4 = [v3 compare:*(void *)(a1 + 32)],
        v3,
        id v5 = v7,
        v4 == (id)1))
  {
    [v7 length];
    id v5 = v7;
    *(double *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v6
                                                                + *(double *)(*(void *)(*(void *)(a1 + 40) + 8)
                                                                            + 24);
  }
}

id sub_10009B53C(id a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (a1)
  {
    uint64_t v9 = 0;
    int v10 = &v9;
    uint64_t v11 = 0x3032000000;
    id v12 = sub_10000B6C4;
    uint64_t v13 = sub_10000B57C;
    id v14 = 0;
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_10009B66C;
    v6[3] = &unk_1001F33F0;
    void v6[4] = a1;
    id v7 = v3;
    char v8 = &v9;
    sub_10000749C(a1, v6);
    a1 = (id)v10[5];

    _Block_object_dispose(&v9, 8);
  }

  return a1;
}

void sub_10009B654(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10009B66C(void *a1)
{
  uint64_t v2 = (void *)a1[4];
  uint64_t v5 = a1[5];
  id v3 = +[NSArray arrayWithObjects:&v5 count:1];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10009B758;
  v4[3] = &unk_1001F1F28;
  void v4[4] = a1[6];
  sub_100007540(v2, @"select AT.objectID from CLSHandoutAttachment as A join CLSHandoutAssignedItem as AI on AI.parentObjectID = A.objectID join CLSActivity as AT on AT.parentObjectID = AI.objectID and A.objectID = ?", 1, v3, v4);
}

uint64_t sub_10009B758(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_100003BF0(a2, @"objectID");
  uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v5 = *(void *)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  return _objc_release_x1(v3, v5);
}

void sub_10009C7E8(id a1, BPSCompletion *a2)
{
  uint64_t v2 = a2;
  id v3 = [(BPSCompletion *)v2 state];
  CLSInitLog();
  uint64_t v4 = CLSLogDefault;
  if (v3)
  {
    if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_ERROR))
    {
      uint64_t v5 = v4;
      double v6 = [(BPSCompletion *)v2 error];
      id v7 = [v6 description];
      int v8 = 138412290;
      uint64_t v9 = v7;
      _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "Biome subscription completed with error: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  else if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v8) = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Biome subscription completed successfully", (uint8_t *)&v8, 2u);
  }
}

void sub_10009C914(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 eventBody];
  uint64_t v5 = [v4 bundleID];

  if (v5)
  {
    double v6 = [v3 eventBody];
    id v7 = [v6 starting];

    CLSInitLog();
    int v8 = CLSLogDefault;
    if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_DEFAULT))
    {
      CFStringRef v9 = @"closed";
      if (v7) {
        CFStringRef v9 = @"launched";
      }
      int v15 = 138412546;
      uint64_t v16 = v5;
      __int16 v17 = 2112;
      CFStringRef v18 = v9;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%@ %@", (uint8_t *)&v15, 0x16u);
    }
    int v10 = *(void **)(a1 + 32);
    uint64_t v11 = [v3 eventBody];
    id v12 = [v11 bundleID];
    uint64_t v13 = +[NSDate now];
    [v10 updateAppBasedUsageIfNeeded:v12 isStarting:v7 currentTimeStamp:v13];
  }
  else
  {
    CLSInitLog();
    id v14 = CLSLogDefault;
    if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_ERROR))
    {
      LOWORD(v15) = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "Receive Biome event with nil bundleID, skip processing", (uint8_t *)&v15, 2u);
    }
  }
}

id *sub_10009D2A0(id *result, int a2)
{
  if (a2) {
    return (id *)_[result[4] presentAppBasedAssignmentCompletedBanner:result[5]];
  }
  return result;
}

void sub_10009D8BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10009D8E4(uint64_t a1)
{
  CLSInitLog();
  uint64_t v2 = CLSLogHandout;
  if (os_log_type_enabled(CLSLogHandout, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v5 = 138412290;
    uint64_t v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Trigger half way done scheduled task, attachmentID = %@", (uint8_t *)&v5, 0xCu);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained cleanUpScheduledTaskTriggers:1];
  [WeakRetained presentHalfWayCompletedBanner:*(void *)(a1 + 32)];
}

void sub_10009DC1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10009DC44(uint64_t a1)
{
  CLSInitLog();
  uint64_t v2 = CLSLogHandout;
  if (os_log_type_enabled(CLSLogHandout, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 56);
    *(_DWORD *)long long buf = 138412546;
    uint64_t v10 = v3;
    __int16 v11 = 2048;
    uint64_t v12 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Trigger mark done scheduled task, attachmentID = %@, time interval duration = %f", buf, 0x16u);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained cleanUpScheduledTaskTriggers:2];
  [WeakRetained handleTimeExpectationReached:*(void *)(a1 + 32) appUsage:*(void *)(a1 + 40) interval:*(double *)(a1 + 56)];
  uint64_t v6 = *(void **)(a1 + 32);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  void v7[2] = sub_10009DD94;
  v7[3] = &unk_1001F3B38;
  void v7[4] = WeakRetained;
  id v8 = v6;
  [WeakRetained markDone:v8 then:v7];
}

id *sub_10009DD94(id *result, int a2)
{
  if (a2) {
    return (id *)_[result[4] presentAppBasedAssignmentCompletedBanner:result[5]];
  }
  return result;
}

id sub_10009E1C4(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addObject:a2];
}

void sub_10009E1D0(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  CLSInitLog();
  uint64_t v4 = (void *)CLSLogHandout;
  if (os_log_type_enabled(CLSLogHandout, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v10 = v4;
    __int16 v11 = [v3 operationID];
    if (v3) {
      uint64_t v12 = *(void **)(v3 + 251);
    }
    else {
      uint64_t v12 = 0;
    }
    id v13 = v12;
    id v14 = [v13 count];
    if (v3) {
      int v15 = *(void **)(v3 + 259);
    }
    else {
      int v15 = 0;
    }
    id v16 = v15;
    int v20 = 138412802;
    char v21 = v11;
    __int16 v22 = 2048;
    id v23 = v14;
    __int16 v24 = 2048;
    id v25 = [v16 count];
    _os_log_debug_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "publishStateChange op: %@ counts server states: %ld, conflicts: %ld", (uint8_t *)&v20, 0x20u);
  }
  CLSInitLog();
  int v5 = (void *)CLSLogHandout;
  if (os_log_type_enabled(CLSLogHandout, OS_LOG_TYPE_DEBUG))
  {
    __int16 v17 = v5;
    CFStringRef v18 = [v3 operationID];
    uint64_t v19 = sub_100151B6C((uint64_t)v3);
    int v20 = 138412546;
    char v21 = v18;
    __int16 v22 = 2112;
    id v23 = v19;
    _os_log_debug_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEBUG, "publishStateChange op %@ errors: %@", (uint8_t *)&v20, 0x16u);

    if (v3) {
      goto LABEL_4;
    }
  }
  else if (v3)
  {
LABEL_4:
    uint64_t v6 = *(void **)(v3 + 259);
    goto LABEL_5;
  }
  uint64_t v6 = 0;
LABEL_5:
  id v7 = v6;
  if ([v7 count])
  {
  }
  else
  {
    id v8 = sub_100151B6C((uint64_t)v3);

    if (!v8)
    {
      CFStringRef v9 = *(void (**)(void))(*(void *)(a1 + 32) + 16);
      goto LABEL_9;
    }
  }
  CFStringRef v9 = *(void (**)(void))(*(void *)(a1 + 32) + 16);
LABEL_9:
  v9();
}

id *sub_10009EF8C(id *result, int a2)
{
  if (a2) {
    return (id *)_[result[4] presentAppBasedAssignmentCompletedBanner:result[5]];
  }
  return result;
}

id *sub_10009FDD0(id *result, int a2)
{
  if (a2) {
    return (id *)_[result[4] presentAppBasedAssignmentCompletedBanner:result[5]];
  }
  return result;
}

id sub_1000A01DC(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v6 = a2;
  id v7 = a3;
  id v8 = a4;
  self;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    CFStringRef v9 = objc_opt_new();
    id v10 = [objc_alloc((Class)CLSCollaborationState) initForObject:v6 ownerPersonID:v7 domain:1 state:1 flags:0];
    __int16 v11 = v10;
    if (v8) {
      [v10 setClassID:v8];
    }
    [v9 addObject:v11];
    id v12 = [objc_alloc((Class)CLSCollaborationState) initForObject:v6 ownerPersonID:v7 domain:3 state:2 flags:0];
    if (v8) {
      [v11 setClassID:v8];
    }
    [v9 addObject:v12];
  }
  else
  {
    CFStringRef v9 = &__NSArray0__struct;
  }

  return v9;
}

void sub_1000A0318(uint64_t a1, void *a2, void *a3)
{
  id v35 = a2;
  id v8 = a3;
  self;
  long long v57 = 0u;
  long long v58 = 0u;
  long long v59 = 0u;
  long long v60 = 0u;
  id obj = v8;
  id v36 = [obj countByEnumeratingWithState:&v57 objects:v64 count:16];
  if (v36)
  {
    uint64_t v34 = *(void *)v58;
    do
    {
      uint64_t v9 = 0;
      do
      {
        if (*(void *)v58 != v34) {
          objc_enumerationMutation(obj);
        }
        uint64_t v37 = v9;
        id v10 = *(void **)(*((void *)&v57 + 1) + 8 * v9);
        long long v53 = 0u;
        long long v54 = 0u;
        long long v55 = 0u;
        long long v56 = 0u;
        id v45 = v35;
        id v52 = [v45 countByEnumeratingWithState:&v53 objects:v63 count:16];
        if (v52)
        {
          uint64_t v51 = *(void *)v54;
          unint64_t v48 = v10;
          do
          {
            for (i = 0; i != v52; i = (char *)i + 1)
            {
              if (*(void *)v54 != v51) {
                objc_enumerationMutation(v45);
              }
              id v12 = *(void **)(*((void *)&v53 + 1) + 8 * i);
              id v13 = [v12 targetObjectID];
              if (v13
                || ([v10 parentObjectID], (id v6 = objc_claimAutoreleasedReturnValue()) != 0))
              {
                uint64_t v4 = [v12 targetObjectID];
                if (!v4)
                {
                  unsigned int v14 = 0;
                  goto LABEL_40;
                }
                id v8 = [v10 parentObjectID];
                if (!v8) {
                  goto LABEL_19;
                }
                int v5 = [v12 targetObjectID];
                uint64_t v3 = [v10 parentObjectID];
                if (([v5 isEqualToString:v3] & 1) == 0)
                {

LABEL_19:
                  if (!v13) {
                    id v13 = v6;
                  }
LABEL_61:

                  continue;
                }
                char v49 = v6;
                char v46 = 1;
              }
              else
              {
                char v46 = 0;
                char v49 = 0;
              }
              int v15 = [v12 ownerPersonID];
              if (v15
                || ([v10 ownerPersonID], (unint64_t v39 = objc_claimAutoreleasedReturnValue()) != 0))
              {
                uint64_t v16 = [v12 ownerPersonID];
                if (v16)
                {
                  __int16 v17 = (void *)v16;
                  char v40 = v3;
                  CFStringRef v18 = v4;
                  uint64_t v19 = [v48 ownerPersonID];
                  if (v19)
                  {
                    int v20 = (void *)v19;
                    uint64_t v41 = v5;
                    id v43 = v8;
                    char v21 = [v12 ownerPersonID];
                    __int16 v22 = [v48 ownerPersonID];
                    unsigned int v14 = [v21 isEqualToString:v22];

                    if (v15)
                    {
                      int v5 = v41;
                      id v8 = v43;
                      uint64_t v4 = v18;
LABEL_32:
                      uint64_t v3 = v40;
LABEL_33:
                      id v10 = v48;

                      goto LABEL_38;
                    }
                    int v5 = v41;
                    id v8 = v43;
                    uint64_t v4 = v18;
                  }
                  else
                  {

                    unsigned int v14 = 0;
                    if (v15) {
                      goto LABEL_32;
                    }
                  }
                  uint64_t v3 = v40;
                }
                else
                {
                  unsigned int v14 = 0;
                  if (v15) {
                    goto LABEL_33;
                  }
                }
                id v10 = v48;
              }
              else
              {
                unint64_t v39 = 0;
                unsigned int v14 = 1;
              }
LABEL_38:
              id v6 = v49;
              if (v46)
              {
              }
LABEL_40:
              if (!v13)
              {

                if ((v14 & 1) == 0) {
                  continue;
                }
LABEL_44:
                id v13 = objc_msgSend(v12, "stateForDomain:", objc_msgSend(v10, "domain"));
                id v23 = [v10 objectID];
                if (!v23)
                {
                  unsigned int v38 = [v13 objectID];
                  if (!v38)
                  {
                    unsigned int v38 = 0;
                    goto LABEL_58;
                  }
                }
                uint64_t v24 = [v10 objectID];
                if (v24)
                {
                  id v25 = (void *)v24;
                  char v50 = v6;
                  char v26 = v3;
                  char v27 = v4;
                  uint64_t v28 = [v13 objectID];
                  if (v28)
                  {
                    uint64_t v29 = (void *)v28;
                    uint64_t v42 = v5;
                    id v44 = v8;
                    unint64_t v30 = [v48 objectID];
                    char v31 = [v13 objectID];
                    unsigned int v47 = [v30 isEqualToString:v31];

                    if (v23)
                    {

                      int v5 = v42;
                      id v8 = v44;
                      uint64_t v4 = v27;
                      uint64_t v3 = v26;
                      id v10 = v48;
                      id v6 = v50;
                      if (!v47) {
                        goto LABEL_61;
                      }
                    }
                    else
                    {

                      int v5 = v42;
                      id v8 = v44;
                      uint64_t v4 = v27;
                      uint64_t v3 = v26;
                      id v10 = v48;
                      id v6 = v50;
                      if ((v47 & 1) == 0) {
                        goto LABEL_61;
                      }
                    }
LABEL_58:
                    objc_msgSend(v12, "removeStateForDomain:", objc_msgSend(v10, "domain"));
                    CLSInitLog();
                    char v32 = CLSLogHandout;
                    if (os_log_type_enabled(CLSLogHandout, OS_LOG_TYPE_DEBUG))
                    {
                      *(_DWORD *)long long buf = 138412290;
                      uint64_t v62 = v13;
                      _os_log_debug_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEBUG, "Pruning state change:%@", buf, 0xCu);
                    }
LABEL_60:
                    id v10 = v48;
                    goto LABEL_61;
                  }

                  uint64_t v3 = v26;
                  id v6 = v50;
                  if (!v23) {
LABEL_52:
                  }
                }
                else if (!v23)
                {
                  goto LABEL_52;
                }

                goto LABEL_60;
              }

              if (v14) {
                goto LABEL_44;
              }
            }
            id v52 = [v45 countByEnumeratingWithState:&v53 objects:v63 count:16];
          }
          while (v52);
        }

        uint64_t v9 = v37 + 1;
      }
      while ((id)(v37 + 1) != v36);
      id v36 = [obj countByEnumeratingWithState:&v57 objects:v64 count:16];
    }
    while (v36);
  }
}

BOOL sub_1000A1684(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 40;
        goto LABEL_29;
      case 2u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 48;
        goto LABEL_29;
      case 3u:
        unsigned int v14 = objc_alloc_init(PDDPDate);
        uint64_t v15 = 16;
        goto LABEL_25;
      case 4u:
        unsigned int v14 = objc_alloc_init(PDDPDate);
        uint64_t v15 = 24;
        goto LABEL_25;
      case 5u:
        unsigned int v14 = objc_alloc_init(PDDPDate);
        uint64_t v15 = 32;
LABEL_25:
        objc_storeStrong((id *)(a1 + v15), v14);
        if (!PBReaderPlaceMark() || (PDDPDateReadFrom((uint64_t)v14, a2) & 1) == 0) {
          goto LABEL_36;
        }
        goto LABEL_32;
      case 6u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 8;
LABEL_29:
        unsigned int v14 = *(PDDPDate **)(a1 + v13);
        *(void *)(a1 + v13) = v12;
        goto LABEL_33;
      case 7u:
        unsigned int v14 = objc_alloc_init(PDDPStatus);
        objc_storeStrong((id *)(a1 + 56), v14);
        if PBReaderPlaceMark() && (sub_1000D3710((uint64_t)v14, a2))
        {
LABEL_32:
          PBReaderRecallMark();
LABEL_33:

LABEL_34:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }
LABEL_36:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_34;
    }
  }
}

uint64_t sub_1000A26B0(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    unint64_t v12 = v6 >> 3;
    if ((v6 >> 3) == 3)
    {
      CFStringRef v18 = objc_alloc_init(PDDPSchoolworkSearchCriteria);
      objc_storeStrong((id *)(a1 + 16), v18);
      if (!PBReaderPlaceMark() || (sub_1000E0FD8((uint64_t)v18, a2) & 1) == 0)
      {
LABEL_41:

        return 0;
      }
    }
    else
    {
      if (v12 != 2)
      {
        if (v12 == 1)
        {
          char v13 = 0;
          unsigned int v14 = 0;
          uint64_t v15 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            unint64_t v16 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            if (v16 == -1 || v16 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
              break;
            }
            char v17 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v16);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v16 + 1;
            v15 |= (unint64_t)(v17 & 0x7F) << v13;
            if ((v17 & 0x80) == 0) {
              goto LABEL_36;
            }
            v13 += 7;
            BOOL v9 = v14++ >= 9;
            if (v9)
            {
              LODWORD(v15) = 0;
              goto LABEL_38;
            }
          }
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_36:
          if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            LODWORD(v15) = 0;
          }
LABEL_38:
          *(_DWORD *)(a1 + 24) = v15;
        }
        else
        {
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
        }
        continue;
      }
      CFStringRef v18 = objc_alloc_init(PDDPSchoolworkSearchQuery);
      [(id)a1 addContents:v18];
      if (!PBReaderPlaceMark() || (sub_1000A26B0(v18, a2) & 1) == 0) {
        goto LABEL_41;
      }
    }
    PBReaderRecallMark();
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

id sub_1000A30B0(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    uint64_t v4 = objc_opt_class();
    unsigned int v5 = [a1 parentObjectID];
    id v43 = [v3 select:v4 identity:v5];

    unint64_t v6 = objc_opt_new();
    [v6 setGranularity:3];
    uint64_t v42 = [v43 dueDate];
    BOOL v9 = 0;
    if (v42)
    {
      unint64_t v7 = +[NSDate date];
      id v8 = [v42 compare:v7];

      if (v8 == (id)-1) {
        BOOL v9 = 1;
      }
    }
    [v6 setType:v9];
    int v10 = [a1 parentObjectID];
    [v6 setHandoutID:v10];

    __int16 v11 = [a1 objectID];
    [v6 setAttachmentID:v11];

    unint64_t v12 = sub_100002F74(v3);
    [v6 setStudentID:v12];

    objc_msgSend(v6, "setCompleted:", objc_msgSend(a1, "isComplete"));
    uint64_t v54 = 0;
    long long v55 = &v54;
    uint64_t v56 = 0x3032000000;
    long long v57 = sub_10000B6D4;
    long long v58 = sub_10000B584;
    id v59 = +[NSDate date];
    uint64_t v48 = 0;
    char v49 = &v48;
    uint64_t v50 = 0x3032000000;
    uint64_t v51 = sub_10000B6D4;
    id v52 = sub_10000B584;
    id v53 = +[NSDate date];
    v47[0] = _NSConcreteStackBlock;
    v47[1] = 3221225472;
    v47[2] = sub_1000A3830;
    v47[3] = &unk_1001F3BF8;
    v47[4] = &v54;
    v47[5] = &v48;
    uint64_t v41 = objc_retainBlock(v47);
    char v13 = [a1 contextPath];
    if ([v13 count])
    {
      unsigned int v14 = sub_100143514(v3, v13, 0);
      id v15 = [v13 count];
      if (v15 == [v14 count])
      {
        unint64_t v16 = [v14 lastObject];
        char v17 = sub_1000A38D8(v16, v3, v41);
        [v6 setPrimaryActivityReport:v17];
        CFStringRef v18 = sub_1000A3AE8(v16, v3, v41);
        [v6 setAdditionalActivityReports:v18];

LABEL_14:
      }
    }
    else
    {
      uint64_t v19 = [a1 objectID];
      unsigned int v14 = sub_10001DC74(v3, v19);

      if (v14)
      {
        id v20 = [v14 objectID];
        id v21 = v3;
        __int16 v22 = v41;
        uint64_t v61 = 0;
        uint64_t v62 = &v61;
        uint64_t v63 = 0x3032000000;
        long long v64 = sub_10000B6D4;
        uint64_t v65 = sub_10000B584;
        id v66 = 0;
        uint64_t v23 = objc_opt_class();
        id v68 = v20;
        uint64_t v24 = +[NSArray arrayWithObjects:&v68 count:1];
        v60[0] = _NSConcreteStackBlock;
        v60[1] = 3221225472;
        v60[2] = sub_1000A3E18;
        v60[3] = &unk_1001F3C48;
        v60[4] = &v61;
        [v21 selectAll:v23 where:@"parentObjectID = ?" orderBy:@"dateCreated DESC" limit:1 offset:0 bindings:v24 block:v60];

        if (v62[5])
        {
          v22[2](v22);
          unint64_t v16 = sub_100108EC4((void *)v62[5], v21, v22);
        }
        else
        {
          unint64_t v16 = 0;
        }
        _Block_object_dispose(&v61, 8);

        [v6 setPrimaryActivityReport:v16];
        goto LABEL_14;
      }
    }

    id v25 = objc_alloc((Class)NSString);
    char v26 = +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", [v6 type]);
    char v27 = +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", [v6 granularity]);
    uint64_t v28 = [a1 objectID];
    uint64_t v29 = sub_100002F74(v3);
    id v30 = objc_msgSend(v25, "initWithFormat:", @"type:%@; granularity:%@; attachmentID:%@; studentID:%@;",
            v26,
            v27,
            v28,
            v29);

    char v31 = [v30 sha224];
    [v6 setReportID:v31];

    [v6 setStartDate:v55[5]];
    [v6 setEndDate:v49[5]];
    char v32 = objc_opt_new();
    uint64_t v33 = objc_opt_class();
    uint64_t v34 = [v43 objectID];
    id v67 = v34;
    id v35 = +[NSArray arrayWithObjects:&v67 count:1];
    v44[0] = _NSConcreteStackBlock;
    v44[1] = 3221225472;
    v44[2] = sub_1000A3D7C;
    v44[3] = &unk_1001F3C20;
    id v36 = v6;
    id v45 = v36;
    id v37 = v32;
    id v46 = v37;
    [v3 selectAll:v33 where:@"parentObjectID = ?" bindings:v35 block:v44];

    unsigned int v38 = v46;
    id v39 = v37;

    _Block_object_dispose(&v48, 8);
    _Block_object_dispose(&v54, 8);

    goto LABEL_16;
  }
  id v39 = 0;
LABEL_16:

  return v39;
}

void sub_1000A37C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
}

void sub_1000A3830(uint64_t a1, void *a2)
{
  id obj = [a2 dateCreated];
  if ([obj compare:*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40)] == (id)-1) {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), obj);
  }
  if ([obj compare:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)] == (id)1) {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
  }
}

id sub_1000A38D8(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  unint64_t v7 = a3;
  uint64_t v14 = 0;
  id v15 = &v14;
  uint64_t v16 = 0x3032000000;
  char v17 = sub_10000B6D4;
  CFStringRef v18 = sub_10000B584;
  id v19 = 0;
  uint64_t v8 = objc_opt_class();
  BOOL v9 = [v5 objectID];
  id v20 = v9;
  int v10 = +[NSArray arrayWithObjects:&v20 count:1];
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_1000A3E08;
  v13[3] = &unk_1001F3C48;
  void v13[4] = &v14;
  [v6 selectAll:v8 where:@"parentObjectID = ?" orderBy:@"dateCreated DESC" limit:1 offset:0 bindings:v10 block:v13];

  if (v15[5])
  {
    v7[2](v7);
    __int16 v11 = sub_100108EC4((void *)v15[5], v6, v7);
  }
  else
  {
    __int16 v11 = 0;
  }
  _Block_object_dispose(&v14, 8);

  return v11;
}

void sub_1000A3AC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000A3AE8(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  unint64_t v7 = a3;
  uint64_t v8 = objc_opt_new();
  BOOL v9 = objc_opt_new();
  uint64_t v10 = objc_opt_class();
  uint64_t v23 = v5;
  __int16 v11 = [v5 objectID];
  char v32 = v11;
  unint64_t v12 = +[NSArray arrayWithObjects:&v32 count:1];
  v29[0] = _NSConcreteStackBlock;
  v29[1] = 3221225472;
  v29[2] = sub_1000A3E28;
  v29[3] = &unk_1001F2058;
  id v13 = v9;
  id v30 = v13;
  [v6 selectAll:v10 where:@"parentObjectID = ?" bindings:v12 block:v29];

  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  id obj = v13;
  id v14 = [obj countByEnumeratingWithState:&v25 objects:v31 count:16];
  if (v14)
  {
    id v15 = v14;
    uint64_t v16 = *(void *)v26;
    do
    {
      for (i = 0; i != v15; i = (char *)i + 1)
      {
        if (*(void *)v26 != v16) {
          objc_enumerationMutation(obj);
        }
        CFStringRef v18 = *(void **)(*((void *)&v25 + 1) + 8 * i);
        v7[2](v7, v18);
        id v20 = sub_1000A38D8(v18, v6, v7);
        if (v20) {
          [v8 addObject:v20];
        }
        id v21 = sub_1000A3AE8(v18, v6, v7);
        [v8 addObjectsFromArray:v21];
      }
      id v15 = [obj countByEnumeratingWithState:&v25 objects:v31 count:16];
    }
    while (v15);
  }

  return v8;
}

void sub_1000A3D7C(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v6 = [v3 copy];
  id v5 = [v4 classID];

  [v6 setClassID:v5];
  [*(id *)(a1 + 40) addObject:v6];
}

void sub_1000A3E08(uint64_t a1, void *a2)
{
}

void sub_1000A3E18(uint64_t a1, void *a2)
{
}

id sub_1000A3E28(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addObject:a2];
}

uint64_t sub_1000A3E34(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (a1)
  {
    id v6 = v3;
    id v3 = [*(id *)(a1 + 8) containsObject:v3];
    id v4 = v6;
    if (v3)
    {
      [*(id *)(a1 + 8) removeObject:v6];
      id v3 = [(id)a1 _ringIndexMinusOne:*(void *)(a1 + 16)];
      id v4 = v6;
      *(void *)(a1 + 16) = v3;
    }
  }

  return _objc_release_x1(v3, v4);
}

id *sub_1000A3EB0(id *a1, uint64_t a2)
{
  if (a1)
  {
    objc_msgSend(a1[1], "objectAtIndexedSubscript:", objc_msgSend(a1, "_ringIndexForIndex:", a2));
    a1 = (id *)objc_claimAutoreleasedReturnValue();
    uint64_t v2 = vars8;
  }
  return a1;
}

id sub_1000A4010(id *a1)
{
  if (a1)
  {
    id v2 = objc_msgSend(objc_alloc((Class)NSMutableArray), "initWithCapacity:", objc_msgSend(a1[1], "count"));
    long long v9 = 0u;
    long long v10 = 0u;
    long long v11 = 0u;
    long long v12 = 0u;
    id v3 = a1;
    id v4 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
    if (v4)
    {
      id v5 = v4;
      uint64_t v6 = *(void *)v10;
      do
      {
        for (i = 0; i != v5; i = (char *)i + 1)
        {
          if (*(void *)v10 != v6) {
            objc_enumerationMutation(v3);
          }
          objc_msgSend(v2, "addObject:", *(void *)(*((void *)&v9 + 1) + 8 * i), (void)v9);
        }
        id v5 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
      }
      while (v5);
    }
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

uint64_t sub_1000A4F24(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 0u:
        unsigned int v12 = 0;
        do
        {
          unint64_t v13 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v13 == -1 || v13 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            goto LABEL_46;
          }
          unint64_t v14 = v13 + 1;
          int v15 = *(char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v13);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v14;
          if ((v15 & 0x80000000) == 0) {
            break;
          }
        }
        while (v12++ <= 8);
        goto LABEL_46;
      case 1u:
        [(id)a1 clearOneofValuesForZoneInfo];
        *(unsigned char *)(a1 + 48) |= 2u;
        *(_DWORD *)(a1 + 32) = 1;
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 40;
        goto LABEL_31;
      case 2u:
        uint64_t v18 = PBReaderReadData();
        uint64_t v19 = 16;
LABEL_31:
        id v20 = *(void **)(a1 + v19);
        *(void *)(a1 + v19) = v18;

        goto LABEL_46;
      case 3u:
        char v21 = 0;
        unsigned int v22 = 0;
        uint64_t v23 = 0;
        *(unsigned char *)(a1 + 48) |= 1u;
        while (2)
        {
          unint64_t v24 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v24 == -1 || v24 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v24);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v24 + 1;
            v23 |= (unint64_t)(v25 & 0x7F) << v21;
            if (v25 < 0)
            {
              v21 += 7;
              BOOL v9 = v22++ >= 9;
              if (v9)
              {
                LODWORD(v23) = 0;
                goto LABEL_45;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v23) = 0;
        }
LABEL_45:
        *(_DWORD *)(a1 + 8) = v23;
        goto LABEL_46;
      default:
        if ((v6 >> 3) != 100)
        {
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          goto LABEL_46;
        }
        [(id)a1 clearOneofValuesForZoneInfo];
        *(unsigned char *)(a1 + 48) |= 2u;
        *(_DWORD *)(a1 + 32) = 2;
        char v17 = objc_alloc_init(PDDPZoneIdentifier);
        objc_storeStrong((id *)(a1 + 24), v17);
        if PBReaderPlaceMark() && (sub_100136F58((uint64_t)v17, a2))
        {
          PBReaderRecallMark();

LABEL_46:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

        return 0;
    }
  }
}

uint64_t sub_1000A5920(uint64_t a1, void *a2)
{
  id v4 = a2;
  unsigned int v5 = v4;
  if (a1 && (![v4 length] || objc_msgSend(*(id *)(a1 + 40), "isInternal")))
  {
    objc_storeStrong((id *)(a1 + 8), a2);
    uint64_t v6 = 1;
  }
  else
  {
    uint64_t v6 = 0;
  }

  return v6;
}

unsigned __int8 *sub_1000A5990(id *a1)
{
  uint64_t v1 = (unsigned __int8 *)a1;
  if (a1)
  {
    if ([a1[5] isInDevelopmentEnvironment]) {
      CFStringRef v2 = @"development";
    }
    else {
      CFStringRef v2 = @"production";
    }
    v11[0] = @"Bundle Identifier";
    uint64_t v3 = sub_10000C6B4(v1);
    id v4 = (void *)v3;
    CFStringRef v5 = @"None";
    if (v3) {
      CFStringRef v5 = (const __CFString *)v3;
    }
    v12[0] = v5;
    v11[1] = @"mayQueryCrossApp";
    uint64_t v6 = +[NSNumber numberWithBool:v1[24]];
    v12[1] = v6;
    void v11[2] = @"isInternalClient";
    unint64_t v7 = +[NSNumber numberWithBool:v1[25]];
    v12[2] = v7;
    v11[3] = @"isDashboardClient";
    char v8 = +[NSNumber numberWithBool:v1[26]];
    void v12[3] = v8;
    void v11[4] = @"isRegisterDashboardClient";
    BOOL v9 = +[NSNumber numberWithBool:v1[28]];
    v11[5] = @"ClassKit Environment";
    void v12[4] = v9;
    void v12[5] = v2;
    uint64_t v1 = +[NSDictionary dictionaryWithObjects:v12 forKeys:v11 count:6];
  }

  return v1;
}

id sub_1000A5B38()
{
  self;
  id v1 = [objc_alloc((Class)LSApplicationRecord) initWithBundleIdentifier:@"com.apple.schoolwork.ClassKitApp" allowPlaceholder:0 error:0];
  CFStringRef v2 = v1;
  if (v1)
  {
    uint64_t v3 = [v1 bundleIdentifier];
    id v4 = [v2 shortVersionString];
    CFStringRef v5 = +[NSString stringWithFormat:@"<%@/%@>", v3, v4];
  }
  else
  {
    CFStringRef v5 = 0;
  }

  return v5;
}

id sub_1000A5C14()
{
  self;
  id v1 = [objc_alloc((Class)LSApplicationRecord) initWithBundleIdentifier:@"com.apple.schoolwork.ClassKitApp" allowPlaceholder:0 error:0];
  CFStringRef v2 = [v1 applicationState];
  id v3 = [v2 isInstalled];

  return v3;
}

id sub_1000A5D60()
{
  uint64_t v0 = self;

  return _[v0 isSchoolworkAppVersionGreaterThanOrEqualTo:@"2.3"];
}

id sub_1000A5D90()
{
  self;
  id v1 = [objc_alloc((Class)LSApplicationRecord) initWithBundleIdentifier:@"com.apple.classroom" allowPlaceholder:0 error:0];
  CFStringRef v2 = [v1 applicationState];
  id v3 = [v2 isInstalled];

  return v3;
}

uint64_t sub_1000A6418(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        char v12 = 0;
        unsigned int v13 = 0;
        uint64_t v14 = 0;
        *(unsigned char *)(a1 + 48) |= 1u;
        while (1)
        {
          unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v15 == -1 || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
          v14 |= (unint64_t)(v16 & 0x7F) << v12;
          if ((v16 & 0x80) == 0) {
            goto LABEL_36;
          }
          v12 += 7;
          BOOL v9 = v13++ >= 9;
          if (v9)
          {
            LODWORD(v14) = 0;
            goto LABEL_38;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_36:
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_38:
        *(_DWORD *)(a1 + 32) = v14;
        goto LABEL_39;
      case 2u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 8;
        goto LABEL_32;
      case 3u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 40;
        goto LABEL_32;
      case 4u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 16;
LABEL_32:
        id v20 = *(void **)(a1 + v19);
        *(void *)(a1 + v19) = v18;

        goto LABEL_39;
      default:
        if ((v6 >> 3) != 100)
        {
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          goto LABEL_39;
        }
        char v17 = objc_alloc_init(PDDPMapEntry);
        [(id)a1 addServerRequestHeaders:v17];
        if (PBReaderPlaceMark() && sub_10010AE4C((uint64_t)v17, a2))
        {
          PBReaderRecallMark();

LABEL_39:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

        return 0;
    }
  }
}

uint64_t sub_1000A7408(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    unint64_t v12 = v6 >> 3;
    if ((v6 >> 3) == 3)
    {
      char v18 = 0;
      unsigned int v19 = 0;
      uint64_t v20 = 0;
      *(unsigned char *)(a1 + 16) |= 2u;
      while (1)
      {
        unint64_t v21 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v21 == -1 || v21 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v22 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v21);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v21 + 1;
        v20 |= (unint64_t)(v22 & 0x7F) << v18;
        if ((v22 & 0x80) == 0) {
          goto LABEL_48;
        }
        v18 += 7;
        BOOL v9 = v19++ >= 9;
        if (v9)
        {
          uint64_t v20 = 0;
          goto LABEL_50;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_48:
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        uint64_t v20 = 0;
      }
LABEL_50:
      BOOL v29 = v20 != 0;
      uint64_t v30 = 12;
    }
    else
    {
      if (v12 != 2)
      {
        if (v12 == 1)
        {
          char v13 = 0;
          unsigned int v14 = 0;
          uint64_t v15 = 0;
          *(unsigned char *)(a1 + 16) |= 1u;
          while (1)
          {
            unint64_t v16 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            if (v16 == -1 || v16 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
              break;
            }
            char v17 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v16);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v16 + 1;
            v15 |= (unint64_t)(v17 & 0x7F) << v13;
            if ((v17 & 0x80) == 0) {
              goto LABEL_44;
            }
            v13 += 7;
            BOOL v9 = v14++ >= 9;
            if (v9)
            {
              LODWORD(v15) = 0;
              goto LABEL_46;
            }
          }
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_44:
          if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            LODWORD(v15) = 0;
          }
LABEL_46:
          *(_DWORD *)(a1 + 8) = v15;
        }
        else
        {
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
        }
        continue;
      }
      char v23 = 0;
      unsigned int v24 = 0;
      uint64_t v25 = 0;
      *(unsigned char *)(a1 + 16) |= 4u;
      while (1)
      {
        unint64_t v26 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v26 == -1 || v26 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v27 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v26);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v26 + 1;
        v25 |= (unint64_t)(v27 & 0x7F) << v23;
        if ((v27 & 0x80) == 0) {
          goto LABEL_52;
        }
        v23 += 7;
        BOOL v9 = v24++ >= 9;
        if (v9)
        {
          uint64_t v25 = 0;
          goto LABEL_54;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_52:
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        uint64_t v25 = 0;
      }
LABEL_54:
      BOOL v29 = v25 != 0;
      uint64_t v30 = 13;
    }
    *(unsigned char *)(a1 + v30) = v29;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

id sub_1000A8424()
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000A84C8;
  block[3] = &unk_1001F29D0;
  void block[4] = self;
  if (qword_10023E578 != -1) {
    dispatch_once(&qword_10023E578, block);
  }
  uint64_t v0 = (void *)qword_10023E570;

  return v0;
}

uint64_t sub_1000A84C8(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = qword_10023E570;
  qword_10023E570 = (uint64_t)v1;

  return _objc_release_x1(v1, v2);
}

void sub_1000A8554(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  uint64_t v2 = (void *)qword_10023E580;
  qword_10023E580 = (uint64_t)v1;

  id v3 = (void *)qword_10023E580;

  _[v3 setDateFormat:@"yyyy-MM-dd"];
}

id sub_1000A8888(id a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    a1 = [objc_alloc((Class)NSMutableDictionary) initWithCapacity:15];
    char v4 = [v3 valueForKey:@"stats"];
    unsigned int v5 = [v4 valueForKey:@"clsErrorCode"];
    [a1 setValue:v5 forKey:@"clsErrorCode"];

    unint64_t v6 = [v4 valueForKey:@"failedItemCount"];
    [a1 setValue:v6 forKey:@"failedItemCount"];

    unint64_t v7 = [v4 valueForKey:@"httpStatusCode"];
    [a1 setValue:v7 forKey:@"httpStatusCode"];

    char v8 = [v4 valueForKey:@"requestItemCount"];
    [a1 setValue:v8 forKey:@"requestItemCount"];

    BOOL v9 = [v4 valueForKey:@"requestSizeBytes"];
    [a1 setValue:v9 forKey:@"requestSizeBytes"];

    int v10 = [v4 valueForKey:@"responseItemCount"];
    [a1 setValue:v10 forKey:@"responseItemCount"];

    long long v11 = [v4 valueForKey:@"responseSizeBytes"];
    [a1 setValue:v11 forKey:@"responseSizeBytes"];

    unint64_t v12 = [v4 valueForKey:@"identifier"];
    [a1 setValue:v12 forKey:@"identifier"];

    char v13 = [v4 valueForKey:@"roundtripTime"];
    [v13 doubleValue];
    double v15 = v14;

    unint64_t v16 = +[NSNumber numberWithDouble:v15 * 1000.0];
    [a1 setValue:v16 forKey:@"roundtripTime"];

    char v17 = [v4 valueForKey:@"responseProcessingTime"];
    [v17 doubleValue];
    double v19 = v18;

    uint64_t v20 = +[NSNumber numberWithDouble:v19 * 1000.0];
    [a1 setValue:v20 forKey:@"responseProcessingTime"];

    unint64_t v21 = [v3 valueForKey:@"endpointIdentifier"];
    char v22 = [v3 valueForKey:@"operationError"];
    unsigned __int8 v23 = [v22 isEqual:@"none"];

    CFStringRef v24 = @"Success";
    if ((v23 & 1) == 0)
    {
      uint64_t v25 = [v4 valueForKey:@"clsErrorCode"];
      if ([v25 isEqual:@"0"])
      {
        unint64_t v26 = [v4 valueForKey:@"httpStatusCode"];
        unsigned int v27 = [v26 isEqual:@"200"];

        if (!v27) {
          CFStringRef v24 = @"Fail";
        }
      }
      else
      {

        CFStringRef v24 = @"Fail";
      }
    }
    long long v28 = +[NSString stringWithFormat:@"%@%@", v21, v24];
    [a1 setValue:v28 forKey:@"eventType"];

    BOOL v29 = [v3 valueForKey:@"URL"];
    [a1 setValue:v29 forKey:@"endpointURL"];

    [a1 setValue:v21 forKey:@"endpointIdentifier"];
  }

  return a1;
}

id sub_1000A8C98(void *a1, void *a2, void *a3)
{
  if (a1)
  {
    id v5 = a3;
    id v6 = a2;
    id v7 = [objc_alloc((Class)NSMutableDictionary) initWithCapacity:15];
    char v8 = sub_1001602E8(v5, @"initialASMSyncStartDate");
    [v6 timeIntervalSinceDate:v8];
    double v10 = v9;

    long long v11 = +[NSNumber numberWithDouble:v10 * 1000.0];
    [v7 setValue:v11 forKey:@"duration"];

    unint64_t v12 = self;
    id v13 = [a1 countOf:v12 fromDB:v5];

    double v14 = self;
    id v15 = [a1 countOf:v14 fromDB:v5];

    unint64_t v16 = +[NSNumber numberWithInteger:v13];
    [v7 setValue:v16 forKey:@"classesCount"];

    char v17 = +[NSNumber numberWithInteger:v15];
    [v7 setValue:v17 forKey:@"peopleCount"];

    [v7 setValue:@"asmInitialFullSync" forKey:@"eventType"];
    [v7 setValue:@"sync" forKey:@"endpointIdentifier"];
    uint64_t v18 = sub_100004EE8(v5, @"initialASMSyncRoundTripCount");

    double v19 = +[NSNumber numberWithInteger:v18];
    [v7 setValue:v19 forKey:@"cntHttpRequests"];
  }
  else
  {
    id v7 = 0;
  }

  return v7;
}

id sub_1000A8EBC(void *a1, void *a2, void *a3)
{
  if (a1)
  {
    id v5 = a3;
    id v6 = a2;
    id v7 = [objc_alloc((Class)NSMutableDictionary) initWithCapacity:15];
    char v8 = sub_1001602E8(v5, @"initialOrionSyncStartDate");
    [v6 timeIntervalSinceDate:v8];
    double v10 = v9;

    long long v11 = +[NSNumber numberWithDouble:v10 * 1000.0];
    [v7 setValue:v11 forKey:@"duration"];

    unint64_t v12 = self;
    id v13 = [a1 countOf:v12 fromDB:v5];

    double v14 = +[NSNumber numberWithInteger:v13];
    [v7 setValue:v14 forKey:@"handoutsCount"];

    [v7 setValue:@"orionInitialFullSync" forKey:@"eventType"];
    [v7 setValue:@"getChanges" forKey:@"endpointIdentifier"];
    uint64_t v15 = sub_100004EE8(v5, @"initialOrionSyncRoundTripCount");

    unint64_t v16 = +[NSNumber numberWithInteger:v15];
    [v7 setValue:v16 forKey:@"cntHttpRequests"];
  }
  else
  {
    id v7 = 0;
  }

  return v7;
}

void sub_1000A9080(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1 && [a1 shouldRecordEvent])
  {
    uint64_t v8 = sub_100044EB4();
    double v9 = (void *)v8;
    if (v8) {
      double v10 = *(void **)(v8 + 8);
    }
    else {
      double v10 = 0;
    }
    id v11 = v10;

    id v13 = [v11 stringForKey:@"cls-app-metrics-perf-topic-name"];
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_1000A91D0;
    v14[3] = &unk_1001F3CF8;
    v14[4] = a1;
    id v15 = v6;
    id v16 = v5;
    [v13 valueWithCompletion:v14];
  }
}

void sub_1000A91D0(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = a2;
  id v7 = a4;
  if (v7)
  {
    CLSInitLog();
    uint64_t v8 = CLSLogDefault;
    if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_ERROR))
    {
      int v21 = 138412290;
      id v22 = v7;
      _os_log_error_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "Error getting AMSBag value %@", (uint8_t *)&v21, 0xCu);
    }
  }
  else
  {
    id v9 = [objc_alloc((Class)AMSMetricsEvent) initWithTopic:v6];
    double v10 = *(void **)(a1 + 32);
    if (v10)
    {
      id v11 = *(id *)(a1 + 40);
      id v12 = objc_alloc((Class)NSMutableDictionary);
      id v13 = [v10 baseValues];
      id v14 = [v12 initWithDictionary:v13];

      id v15 = [v10 temporaryUserUUID:v11];
      [v14 setValue:v15 forKey:@"rotatingID"];

      id v16 = [v11 select:objc_opt_class() where:0 bindings:0];
      char v17 = sub_100003E58(v11);

      if (v17)
      {
        if (v16)
        {
          if (v16[9]) {
            uint64_t v18 = 1;
          }
          else {
            uint64_t v18 = 2;
          }
        }
        else
        {
          uint64_t v18 = 2;
        }
      }
      else
      {
        uint64_t v18 = 0;
      }
      double v19 = +[NSNumber numberWithInteger:v18];
      [v14 setValue:v19 forKey:@"maidAccountType"];
    }
    else
    {
      id v14 = 0;
    }
    [v9 addPropertiesWithDictionary:v14];

    [v9 addPropertiesWithDictionary:*(void *)(a1 + 48)];
    uint64_t v20 = [*(id *)(a1 + 32) metricsController];
    [v20 enqueueEvent:v9];
  }
}

void sub_1000A9420(void *a1)
{
  if (a1 && [a1 shouldRecordEvent])
  {
    id v3 = [a1 metricsController];
    if ((uint64_t)[v3 eventCount] >= 1)
    {
      char v4 = [v3 flush];
      [v4 resultWithCompletion:&stru_1001F3D38];
    }
  }
}

void sub_1000A94C0(id a1, NSNumber *a2, NSError *a3)
{
  char v4 = a2;
  id v5 = a3;
  id v6 = +[PDUserDefaults sharedDefaults];
  unsigned int v7 = [v6 enableVerboseLogging];

  if (v7)
  {
    CLSInitLog();
    uint64_t v8 = (void *)CLSLogOperations;
    if (os_log_type_enabled(CLSLogOperations, OS_LOG_TYPE_INFO))
    {
      id v9 = v8;
      int v11 = 67109120;
      LODWORD(v12) = [(NSNumber *)v4 intValue];
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "PDAnalytics Count of AMS events flushed: %d", (uint8_t *)&v11, 8u);
    }
    if (v5)
    {
      CLSInitLog();
      double v10 = CLSLogDefault;
      if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_ERROR))
      {
        int v11 = 138412290;
        id v12 = v5;
        _os_log_error_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "ERROR: Error occurred while flushing AMS events %@", (uint8_t *)&v11, 0xCu);
      }
    }
  }
}

BOOL sub_1000A9DCC(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0;
      while (1)
      {
        unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0;
          int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0;
      }
LABEL_13:
      if (v10 || (v6 & 7) == 4) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      if ((v6 >> 3) == 2) {
        break;
      }
      if ((v6 >> 3) == 1)
      {
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 16;
LABEL_21:
        id v14 = *(void **)(a1 + v13);
        *(void *)(a1 + v13) = v12;

        goto LABEL_23;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_23:
      if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
    }
    uint64_t v12 = PBReaderReadString();
    uint64_t v13 = 8;
    goto LABEL_21;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

uint64_t sub_1000AAE60(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v12 = objc_alloc_init(PDDPStateChangeParticipants);
        objc_storeStrong((id *)(a1 + 64), v12);
        if (PBReaderPlaceMark() && sub_1000724CC((char *)v12, a2)) {
          goto LABEL_58;
        }
        goto LABEL_80;
      case 2u:
        uint64_t v12 = objc_alloc_init(PDDPStateChangeMeta);
        objc_storeStrong((id *)(a1 + 40), v12);
        if (!PBReaderPlaceMark() || !sub_1000482C8((uint64_t)v12, a2)) {
          goto LABEL_80;
        }
        goto LABEL_58;
      case 3u:
        char v14 = 0;
        unsigned int v15 = 0;
        uint64_t v16 = 0;
        *(unsigned char *)(a1 + 76) |= 2u;
        while (2)
        {
          unint64_t v17 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v17 == -1 || v17 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v18 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v17);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v17 + 1;
            v16 |= (unint64_t)(v18 & 0x7F) << v14;
            if (v18 < 0)
            {
              v14 += 7;
              BOOL v9 = v15++ >= 9;
              if (v9)
              {
                LODWORD(v16) = 0;
                goto LABEL_64;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v16) = 0;
        }
LABEL_64:
        uint64_t v35 = 24;
        goto LABEL_73;
      case 4u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v16 = 0;
        *(unsigned char *)(a1 + 76) |= 4u;
        while (2)
        {
          unint64_t v21 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v21 == -1 || v21 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v22 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v21);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v21 + 1;
            v16 |= (unint64_t)(v22 & 0x7F) << v19;
            if (v22 < 0)
            {
              v19 += 7;
              BOOL v9 = v20++ >= 9;
              if (v9)
              {
                LODWORD(v16) = 0;
                goto LABEL_68;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v16) = 0;
        }
LABEL_68:
        uint64_t v35 = 28;
        goto LABEL_73;
      case 5u:
        char v23 = 0;
        unsigned int v24 = 0;
        uint64_t v16 = 0;
        *(unsigned char *)(a1 + 76) |= 8u;
        while (2)
        {
          unint64_t v25 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v25 == -1 || v25 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v25);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v25 + 1;
            v16 |= (unint64_t)(v26 & 0x7F) << v23;
            if (v26 < 0)
            {
              v23 += 7;
              BOOL v9 = v24++ >= 9;
              if (v9)
              {
                LODWORD(v16) = 0;
                goto LABEL_72;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v16) = 0;
        }
LABEL_72:
        uint64_t v35 = 72;
LABEL_73:
        *(_DWORD *)(a1 + v35) = v16;
        goto LABEL_78;
      case 6u:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v29 = 0;
        *(unsigned char *)(a1 + 76) |= 1u;
        while (2)
        {
          unint64_t v30 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v30 == -1 || v30 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v30);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v30 + 1;
            v29 |= (unint64_t)(v31 & 0x7F) << v27;
            if (v31 < 0)
            {
              v27 += 7;
              BOOL v9 = v28++ >= 9;
              if (v9)
              {
                uint64_t v29 = 0;
                goto LABEL_77;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v29 = 0;
        }
LABEL_77:
        *(void *)(a1 + 8) = v29;
        goto LABEL_78;
      case 7u:
        uint64_t v32 = PBReaderReadString();
        uint64_t v33 = 48;
        goto LABEL_60;
      case 8u:
        uint64_t v32 = PBReaderReadString();
        uint64_t v33 = 16;
        goto LABEL_60;
      case 9u:
        uint64_t v12 = objc_alloc_init(PDDPMapEntry);
        [(id)a1 addInfo:v12];
        if (PBReaderPlaceMark() && sub_10010AE4C((uint64_t)v12, a2))
        {
LABEL_58:
          PBReaderRecallMark();

LABEL_78:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }
LABEL_80:

        return 0;
      case 0xAu:
        uint64_t v32 = PBReaderReadString();
        uint64_t v33 = 56;
LABEL_60:
        uint64_t v34 = *(void **)(a1 + v33);
        *(void *)(a1 + v33) = v32;

        goto LABEL_78;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_78;
    }
  }
}

void *sub_1000AC17C(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  if (a1)
  {
    if (![v8 count]) {
      __assert_rtn("-[PDDatabase(SQL) insertInto:values:forColumnsNamed:]", "PDDatabase+SQL.m", 27, "values.count > 0");
    }
    id v10 = [v8 count];
    if (v10 != [v9 count]) {
      __assert_rtn("-[PDDatabase(SQL) insertInto:values:forColumnsNamed:]", "PDDatabase+SQL.m", 28, "values.count == columnNames.count");
    }
    id v11 = [objc_alloc((Class)NSMutableString) initWithString:@"insert into "];
    [v11 appendString:v7];
    objc_msgSend(v11, "appendString:", @" (");
    uint64_t v12 = [v9 componentsJoinedByString:@", "];
    [v11 appendString:v12];
    [v11 appendString:@") values ("];
    uint64_t v13 = (uint64_t)[v9 count];
    if (v13 >= 2)
    {
      uint64_t v14 = v13 - 1;
      do
      {
        [v11 appendString:@"?, "];
        --v14;
      }
      while (v14);
    }
    [v11 appendString:@"?"]);
    a1 = (void *)sub_100007540(a1, v11, 1, v8, 0);
  }
  return a1;
}

void *sub_1000AC31C(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  id v11 = a2;
  id v12 = a3;
  id v13 = a4;
  id v14 = a5;
  id v15 = a6;
  if (a1)
  {
    if (![v13 count]) {
      __assert_rtn("-[PDDatabase(SQL) update:set:toValues:where:bindings:]", "PDDatabase+SQL.m", 57, "values.count > 0");
    }
    id v16 = [v13 count];
    if (v16 != [v12 count]) {
      __assert_rtn("-[PDDatabase(SQL) update:set:toValues:where:bindings:]", "PDDatabase+SQL.m", 58, "values.count == columnNames.count");
    }
    id v17 = [objc_alloc((Class)NSMutableString) initWithString:@"update "];
    [v17 appendString:v11];
    [v17 appendString:@" set "];
    char v18 = [v12 componentsJoinedByString:@" = ?, "];
    [v17 appendString:v18];

    [v17 appendString:@" = ? "];
    if ([v14 length])
    {
      [v17 appendString:@" where "];
      [v17 appendString:v14];
    }
    if (v15)
    {
      id v19 = [v13 arrayByAddingObjectsFromArray:v15];
    }
    else
    {
      id v19 = v13;
    }
    unsigned int v20 = v19;
    a1 = (void *)sub_100007540(a1, v17, 1, v19, 0);
  }
  return a1;
}

void *sub_1000AC4E8(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  if (a1)
  {
    id v9 = a2;
    id v10 = [objc_alloc((Class)NSMutableString) initWithString:@"delete from "];
    [v10 appendString:v9];

    if ([v7 length])
    {
      [v10 appendString:@" where "];
      [v10 appendString:v7];
    }
    a1 = (void *)sub_100007540(a1, v10, 1, v8, 0);
  }
  return a1;
}

id sub_1000AC5BC(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    id v7 = [a1 currentDB];
    if (v7 && [v5 length] && objc_msgSend(v6, "length")) {
      id v8 = [v7 tableWithName:v5 containsColumnWithName:v6];
    }
    else {
      id v8 = 0;
    }
  }
  else
  {
    id v8 = 0;
  }

  return v8;
}

void sub_1000AD2CC(uint64_t a1, void *a2)
{
  if (a1) {
    objc_storeStrong((id *)(a1 + 32), a2);
  }
}

id sub_1000AD338(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    [a1 lock];
    id v4 = [a1 insertOrUpdateObject:v3];
    if (v4) {
      id v5 = v3;
    }
    else {
      id v5 = 0;
    }
    objc_setAssociatedObject(a1, &off_1001F3DA8, v5, (void *)1);
    [a1 unlock];
  }
  else
  {
    id v4 = 0;
  }

  return v4;
}

void sub_1000AD724(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000AD740(uint64_t a1)
{
  uint64_t v2 = [*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) appIdentifier];

  if (!v2) {
    [*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) setAppIdentifier:*(void *)(a1 + 32)];
  }
  id result = [*(id *)(a1 + 40) insertOrUpdateObject:*(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 40)];
  if (result)
  {
    long long v23 = 0u;
    long long v24 = 0u;
    long long v21 = 0u;
    long long v22 = 0u;
    id v4 = *(id *)(a1 + 48);
    id v5 = [v4 countByEnumeratingWithState:&v21 objects:v26 count:16];
    if (v5)
    {
      id v6 = v5;
      uint64_t v7 = *(void *)v22;
LABEL_6:
      uint64_t v8 = 0;
      while (1)
      {
        if (*(void *)v22 != v7) {
          objc_enumerationMutation(v4);
        }
        id v9 = *(void **)(*((void *)&v21 + 1) + 8 * v8);
        id v10 = [v9 appIdentifier];

        if (!v10) {
          [v9 setAppIdentifier:*(void *)(a1 + 32)];
        }
        if (![*(id *)(a1 + 40) deleteObject:v9]) {
          break;
        }
        if (v6 == (id)++v8)
        {
          id v6 = [v4 countByEnumeratingWithState:&v21 objects:v26 count:16];
          if (v6) {
            goto LABEL_6;
          }
          goto LABEL_14;
        }
      }
    }
    else
    {
LABEL_14:

      long long v19 = 0u;
      long long v20 = 0u;
      long long v17 = 0u;
      long long v18 = 0u;
      id v4 = *(id *)(a1 + 56);
      id v11 = [v4 countByEnumeratingWithState:&v17 objects:v25 count:16];
      if (!v11)
      {
LABEL_24:

        return (id)(*(void *)(a1 + 64) != 0);
      }
      id v12 = v11;
      uint64_t v13 = *(void *)v18;
LABEL_16:
      uint64_t v14 = 0;
      while (1)
      {
        if (*(void *)v18 != v13) {
          objc_enumerationMutation(v4);
        }
        id v15 = *(void **)(*((void *)&v17 + 1) + 8 * v14);
        id v16 = objc_msgSend(v15, "appIdentifier", (void)v17);

        if (!v16) {
          [v15 setAppIdentifier:*(void *)(a1 + 32)];
        }
        if (![*(id *)(a1 + 40) insertOrUpdateObject:v15]) {
          break;
        }
        if (v12 == (id)++v14)
        {
          id v12 = [v4 countByEnumeratingWithState:&v17 objects:v25 count:16];
          if (v12) {
            goto LABEL_16;
          }
          goto LABEL_24;
        }
      }
    }

    return 0;
  }
  return result;
}

void sub_1000ADFDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
}

void sub_1000AE044(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
  id v3 = [a2 personID];
  [v2 addObject:v3];
}

BOOL sub_1000AE0A4(uint64_t a1)
{
  long long v29 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  id obj = *(id *)(a1 + 32);
  id v2 = [obj countByEnumeratingWithState:&v29 objects:v33 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v30;
    id v5 = CKRecordID_ptr;
    uint64_t v26 = *(void *)v30;
    while (2)
    {
      id v6 = 0;
      id v27 = v3;
      do
      {
        if (*(void *)v30 != v4) {
          objc_enumerationMutation(obj);
        }
        uint64_t v7 = *(void **)(*((void *)&v29 + 1) + 8 * (void)v6);
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40), v7);
          [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) setState:1];
          [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) setPublishingState:2];
          uint64_t v8 = +[NSDate date];
          [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) setDateLastModified:v8];

          id v9 = +[NSDate date];
          [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) setDateOfPublication:v9];
        }
        id v10 = [v7 appIdentifier];

        if (!v10) {
          [v7 setAppIdentifier:*(void *)(a1 + 40)];
        }
        if (![*(id *)(a1 + 48) insertOrUpdateObject:v7]) {
          goto LABEL_22;
        }
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          id v11 = v7;
          if ([v11 type] == (id)1)
          {
            id v12 = [v11 URL];
            id v13 = objc_alloc((Class)CLSAsset);
            uint64_t v14 = [*(id *)(a1 + 56) studentDB];
            id v15 = sub_100003E58(v14);
            [v15 objectID];
            v17 = id v16 = v5;
            id v18 = [v13 initWithFileURL:v12 withOwnerPersonID:v17];

            id v5 = v16;
            uint64_t v4 = v26;

            [v18 setAppIdentifier:*(void *)(a1 + 40)];
            [v18 setUploaded:1];
            long long v19 = [v12 path];
            [v18 setRelativePathWithinContainer:v19];

            long long v20 = [v11 parentObjectID];
            [v18 setParentObjectID:v20];

            [v18 setOriginal:0];
            LODWORD(v20) = [*(id *)(a1 + 48) insertOrUpdateObject:v18];

            if (!v20)
            {

LABEL_22:
              return 0;
            }
          }

          id v3 = v27;
        }
        objc_opt_class();
        if (objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass()))
        {
          long long v21 = *(void **)(a1 + 56);
          uint64_t v22 = *(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 40);
          long long v23 = [*(id *)(*(void *)(*(void *)(a1 + 80) + 8) + 40) allObjects];
          unsigned int v24 = [v21 insertDefaultCollaborationStatesFor:v7 forClassID:v22 toPersonIDs:v23 fromPersonID:*(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 40)];

          if (!v24) {
            goto LABEL_22;
          }
        }
        id v6 = (char *)v6 + 1;
      }
      while (v3 != v6);
      id v3 = [obj countByEnumeratingWithState:&v29 objects:v33 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }

  return *(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) != 0;
}

void sub_1000AEF40(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 200), 8);
  _Block_object_dispose((const void *)(v1 - 168), 8);
  _Unwind_Resume(a1);
}

id sub_1000AEF8C(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  id result = [*(id *)(a1 + 32) insertOrUpdateObject:a2];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result ^ 1;
  *a3 = *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  return result;
}

void sub_1000AEFDC(uint64_t a1, void *a2, unsigned char *a3)
{
  id v11 = a2;
  *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = objc_msgSend(*(id *)(a1 + 32), "insertOrUpdateObject:") ^ 1;
  *a3 = *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24);
  if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24))
  {
    [v11 updateAuthorizationInDatabase:*(void *)(a1 + 32)];
    id v5 = *(void **)(a1 + 40);
    id v6 = [v11 objectID];
    [v5 addObject:v6];

    uint64_t v7 = *(void **)(a1 + 48);
    uint64_t v8 = [v11 objectID];
    [v7 addObject:v8];

    if ([v11 type] == 5)
    {
      id v9 = *(void **)(a1 + 56);
      id v10 = [v11 objectID];
      [v9 addObject:v10];
    }
  }
}

id sub_1000AF0F0(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  id result = [*(id *)(a1 + 32) insertOrUpdateObject:a2];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result ^ 1;
  *a3 = *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  return result;
}

void sub_1000AF140(void *a1, void *a2, unsigned char *a3)
{
  id v5 = (void *)a1[4];
  id v6 = a2;
  *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = [v5 insertOrUpdateObject:v6] ^ 1;
  uint64_t v7 = (void *)a1[5];
  uint64_t v8 = [v6 objectID];

  [v7 addObject:v8];
  *a3 = *(unsigned char *)(*(void *)(a1[6] + 8) + 24);
}

void sub_1000AF1D4(void *a1, void *a2, unsigned char *a3)
{
  id v5 = (void *)a1[4];
  id v6 = a2;
  *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = [v5 insertOrUpdateObject:v6] ^ 1;
  *a3 = *(unsigned char *)(*(void *)(a1[6] + 8) + 24);
  uint64_t v7 = (void *)a1[5];
  id v8 = [v6 objectID];

  [v7 addObject:v8];
}

void sub_1000AF278(uint64_t a1, void *a2, unsigned char *a3)
{
  id v9 = a2;
  *(unsigned char *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) = [*(id *)(a1 + 32) insertOrUpdateObject:v9] ^ 1;
  id v5 = *(void **)(a1 + 40);
  id v6 = [v9 objectID];
  [v5 addObject:v6];

  *a3 = *(unsigned char *)(*(void *)(*(void *)(a1 + 72) + 8) + 24);
  if ([v9 questionType] == (id)2 || objc_msgSend(v9, "questionType") == (id)4)
  {
    uint64_t v7 = *(void **)(a1 + 48);
LABEL_4:
    id v8 = [v9 objectID];
    [v7 addObject:v8];

    goto LABEL_5;
  }
  if ([v9 questionType] == (id)3)
  {
    uint64_t v7 = *(void **)(a1 + 56);
    goto LABEL_4;
  }
  if ([v9 questionType] == (id)1)
  {
    uint64_t v7 = *(void **)(a1 + 64);
    goto LABEL_4;
  }
LABEL_5:
}

void sub_1000AF38C(void *a1, void *a2, unsigned char *a3)
{
  id v5 = (void *)a1[4];
  id v6 = a2;
  *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = [v5 insertOrUpdateObject:v6] ^ 1;
  *a3 = *(unsigned char *)(*(void *)(a1[6] + 8) + 24);
  uint64_t v7 = (void *)a1[5];
  id v8 = [v6 objectID];

  [v7 addObject:v8];
}

id sub_1000AF430(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  id result = [*(id *)(a1 + 32) insertOrUpdateObject:a2];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result ^ 1;
  *a3 = *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  return result;
}

id sub_1000AF480(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  id result = [*(id *)(a1 + 32) insertOrUpdateObject:a2];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result ^ 1;
  *a3 = *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  return result;
}

void sub_1000AF4D0(void *a1, void *a2, unsigned char *a3)
{
  id v5 = (void *)a1[4];
  id v6 = a2;
  *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = [v5 insertOrUpdateObject:v6] ^ 1;
  uint64_t v7 = (void *)a1[5];
  id v8 = [v6 objectID];

  [v7 addObject:v8];
  *a3 = *(unsigned char *)(*(void *)(a1[6] + 8) + 24);
}

void sub_1000AF564(uint64_t a1, void *a2, unsigned char *a3)
{
  uint64_t v5 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  id v6 = a2;
  [v6 setOwnerPersonID:v5];
  LOBYTE(v5) = [*(id *)(a1 + 32) insertOrUpdateObject:v6];

  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = v5 ^ 1;
  *a3 = *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
}

void sub_1000AF81C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000AF83C(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  id result = [*(id *)(a1 + 32) insertOrUpdateObject:a2];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result ^ 1;
  *a3 = *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  return result;
}

id sub_1000AF88C(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  id result = [*(id *)(a1 + 32) insertOrUpdateObject:a2];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result ^ 1;
  *a3 = *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  return result;
}

uint64_t sub_1000AFCA4(uint64_t a1, void *a2)
{
  sub_1000A30B0(a2, *(void **)(a1 + 32));
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  id v4 = v3;
  if (v3)
  {
    id v6 = v3;
    [*(id *)(a1 + 32) insertOrUpdateObjects:v3];
    id v3 = [*(id *)(a1 + 40) insertOrUpdateObjects:v6];
    id v4 = v6;
  }

  return _objc_release_x1(v3, v4);
}

void sub_1000B0D40(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  if (v4)
  {
    CLSInitLog();
    uint64_t v5 = CLSLogFetch;
    if (os_log_type_enabled(CLSLogFetch, OS_LOG_TYPE_INFO))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      int v7 = 138412546;
      uint64_t v8 = v6;
      __int16 v9 = 2114;
      id v10 = v4;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "failed to fetch attachment at url: %@, error: %{public}@", (uint8_t *)&v7, 0x16u);
    }
  }
}

void sub_1000B15DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

void sub_1000B1620(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  uint64_t v10 = *(void *)(a1[4] + 8);
  id v11 = *(void **)(v10 + 40);
  *(void *)(v10 + 40) = v7;
  id v17 = v7;

  uint64_t v12 = *(void *)(a1[5] + 8);
  id v13 = *(void **)(v12 + 40);
  *(void *)(v12 + 40) = v8;
  id v14 = v8;

  uint64_t v15 = *(void *)(a1[6] + 8);
  id v16 = *(void **)(v15 + 40);
  *(void *)(v15 + 40) = v9;
}

id *sub_1000B1E3C(id *result, uint64_t a2)
{
  if (a2) {
    return (id *)[result[4] addObject:a2];
  }
  return result;
}

id sub_1000B2628(uint64_t a1)
{
  if (!sub_100051818(*(id *)(a1 + 32), *(void **)(a1 + 40))
    || !sub_100051818(*(id *)(a1 + 32), *(void **)(a1 + 48)))
  {
    return 0;
  }
  uint64_t v17 = *(void *)(a1 + 56);
  id v2 = +[NSArray arrayWithObjects:&v17 count:1];
  if (![*(id *)(a1 + 32) insertOrUpdateObjects:v2]) {
    goto LABEL_10;
  }
  id v3 = *(void **)(a1 + 32);
  id v4 = *(void **)(a1 + 64);
  uint64_t v16 = *(void *)(a1 + 72);
  uint64_t v5 = +[NSArray arrayWithObjects:&v16 count:1];
  LODWORD(v3) = sub_10010C28C(v3, v4, v5);

  if (!v3) {
    goto LABEL_10;
  }
  uint64_t v6 = *(void **)(a1 + 32);
  id v7 = *(void **)(a1 + 80);
  uint64_t v15 = *(void *)(a1 + 88);
  id v8 = +[NSArray arrayWithObjects:&v15 count:1];
  LODWORD(v6) = sub_10010C28C(v6, v7, v8);

  if (!v6) {
    goto LABEL_10;
  }
  id v9 = *(void **)(a1 + 32);
  if (v9
    && [v9 _setCurrentUser:*(void *)(a1 + 96) withRoleLocations:*(void *)(a1 + 104) orRole:0])
  {
    long long v13 = *(_OWORD *)(a1 + 112);
    uint64_t v14 = *(void *)(a1 + 128);
    uint64_t v10 = +[NSArray arrayWithObjects:&v13 count:3];
    id v11 = [*(id *)(a1 + 32) insertOrUpdateObjects:v10];
  }
  else
  {
LABEL_10:
    id v11 = 0;
  }

  return v11;
}

uint64_t sub_1000B29D8(uint64_t a1, void *a2)
{
  return sub_1001566F0(*(void *)(a1 + 32), a2, *(unsigned __int8 *)(a1 + 40));
}

BOOL sub_1000B36C8(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 32;
        goto LABEL_29;
      case 2u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 40;
        goto LABEL_29;
      case 3u:
        uint64_t v14 = objc_alloc_init(PDDPDate);
        uint64_t v15 = 8;
        goto LABEL_24;
      case 4u:
        uint64_t v14 = objc_alloc_init(PDDPDate);
        uint64_t v15 = 16;
LABEL_24:
        objc_storeStrong((id *)(a1 + v15), v14);
        if PBReaderPlaceMark() && (PDDPDateReadFrom((uint64_t)v14, a2))
        {
          PBReaderRecallMark();
LABEL_30:

LABEL_31:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

        return 0;
      case 5u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 48;
        goto LABEL_29;
      case 6u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 24;
LABEL_29:
        uint64_t v14 = *(PDDPDate **)(a1 + v13);
        *(void *)(a1 + v13) = v12;
        goto LABEL_30;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_31;
    }
  }
}

id sub_1000B4D44(void *a1, void *a2)
{
  id v3 = a2;
  char v4 = v3;
  if (a1 && [v3 scheduledEntityType] == (id)1)
  {
    unsigned int v5 = [v4 parentObjectID];
    unint64_t v6 = sub_10016B0FC(a1, v5);

    if ([v6 count])
    {
      unint64_t v7 = [v6 objectAtIndexedSubscript:0];
    }
    else
    {
      unint64_t v7 = 0;
    }
  }
  else
  {
    unint64_t v7 = 0;
  }

  return v7;
}

id sub_1000B4DFC(id a1, void *a2)
{
  id v2 = a1;
  if (a1)
  {
    id v3 = a2;
    char v4 = objc_opt_new();
    uint64_t v5 = objc_opt_class();
    id v11 = v3;
    unint64_t v6 = +[NSArray arrayWithObjects:&v11 count:1];
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    void v9[2] = sub_1000B4F50;
    v9[3] = &unk_1001F4010;
    id v10 = v4;
    id v7 = v4;
    [v2 selectAll:v5 where:@"scheduleID = ?" bindings:v6 block:v9];

    id v2 = [v7 copy];
  }

  return v2;
}

id sub_1000B4F50(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addObject:a2];
}

void sub_1000B4F5C(void *a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (a1)
  {
    CFStringRef v10 = @"scheduleUpdateStatus";
    id v7 = +[NSNumber numberWithInteger:a3];
    id v11 = v7;
    char v8 = +[NSDictionary dictionaryWithObjects:&v11 forKeys:&v10 count:1];

    id v9 = +[PDDatabase whereSQLForArray:v5 prefix:@"objectID in "];
    [a1 updateAll:objc_opt_class() set:v8 where:v9 bindings:v5];
  }
}

uint64_t sub_1000B5620(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    unint64_t v12 = v6 >> 3;
    if ((v6 >> 3) == 100)
    {
      uint64_t v15 = PBReaderReadString();
      if (v15) {
        [(id)a1 addClassIds:v15];
      }
    }
    else if (v12 == 2)
    {
      char v16 = 0;
      unsigned int v17 = 0;
      uint64_t v18 = 0;
      *(unsigned char *)(a1 + 28) |= 1u;
      while (1)
      {
        unint64_t v19 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v19 == -1 || v19 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v20 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v19);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v19 + 1;
        v18 |= (unint64_t)(v20 & 0x7F) << v16;
        if ((v20 & 0x80) == 0) {
          goto LABEL_34;
        }
        v16 += 7;
        BOOL v9 = v17++ >= 9;
        if (v9)
        {
          uint64_t v18 = 0;
          goto LABEL_36;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_34:
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        uint64_t v18 = 0;
      }
LABEL_36:
      *(unsigned char *)(a1 + 24) = v18 != 0;
    }
    else if (v12 == 1)
    {
      uint64_t v13 = PBReaderReadString();
      uint64_t v14 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v13;
    }
    else
    {
      uint64_t result = PBReaderSkipValueWithTag();
      if (!result) {
        return result;
      }
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

uint64_t sub_1000B67A8(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 64;
        goto LABEL_38;
      case 2u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 56;
        goto LABEL_38;
      case 3u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 48;
        goto LABEL_38;
      case 4u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 32;
        goto LABEL_38;
      case 6u:
        uint64_t v15 = objc_alloc_init(PDDPAggregatedValue);
        uint64_t v16 = 104;
        goto LABEL_26;
      case 7u:
        uint64_t v15 = objc_alloc_init(PDDPAggregatedValue);
        uint64_t v16 = 96;
LABEL_26:
        objc_storeStrong((id *)(a1 + v16), v15);
        if (!PBReaderPlaceMark() || (sub_1001335B4((uint64_t)v15, a2) & 1) == 0) {
          goto LABEL_53;
        }
        goto LABEL_33;
      case 8u:
        uint64_t v15 = objc_alloc_init(PDDPActivityReportItem);
        objc_storeStrong((id *)(a1 + 88), v15);
        goto LABEL_31;
      case 9u:
        uint64_t v15 = objc_alloc_init(PDDPActivityReportItem);
        [(id)a1 addAdditionalItems:v15];
LABEL_31:
        if PBReaderPlaceMark() && (sub_10008CB74((uint64_t)v15, a2))
        {
LABEL_33:
          PBReaderRecallMark();

LABEL_39:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }
LABEL_53:

        return 0;
      case 0xAu:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 72;
        goto LABEL_38;
      case 0xBu:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 24;
        goto LABEL_38;
      case 0xCu:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 40;
        goto LABEL_38;
      case 0xDu:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 80;
LABEL_38:
        unsigned int v17 = *(void **)(a1 + v13);
        *(void *)(a1 + v13) = v12;

        goto LABEL_39;
      case 0xEu:
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        *(unsigned char *)(a1 + 112) |= 1u;
        while (2)
        {
          unint64_t v21 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v21 == -1 || v21 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v22 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v21);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v21 + 1;
            v20 |= (unint64_t)(v22 & 0x7F) << v18;
            if (v22 < 0)
            {
              v18 += 7;
              BOOL v9 = v19++ >= 9;
              if (v9)
              {
                LODWORD(v20) = 0;
                goto LABEL_51;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v20) = 0;
        }
LABEL_51:
        *(_DWORD *)(a1 + 16) = v20;
        goto LABEL_39;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_39;
    }
  }
}

id sub_1000B8A94(id a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    char v4 = objc_opt_new();
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    void v7[2] = sub_1000B8B7C;
    v7[3] = &unk_1001F2F00;
    void v7[4] = a1;
    id v8 = v3;
    id v9 = v4;
    id v5 = v4;
    sub_10000749C(a1, v7);
    a1 = [v5 copy];
  }

  return a1;
}

void sub_1000B8B7C(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  id v3 = +[NSArray arrayWithObjects:&v6 count:1];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1000B8C74;
  v4[3] = &unk_1001F2ED8;
  id v5 = *(id *)(a1 + 48);
  sub_100007540(v2, @"select distinct classID from CLSHandoutRecipient as R join CLSHandoutAttachment as A on R.parentObjectID = A.parentObjectID join CLSSurvey as S on S.parentObjectID = A.objectID join CLSQuestionStep as QS on QS.parentObjectID = S.objectID join CLSMultipleChoiceAnswerFormat as MCF on MCF.parentObjectID = QS.objectID join CLSMultipleChoiceAnswerItem as MC on MC.parentObjectID = MCF.objectID and MC.objectID = ?", 1, v3, v4);
}

void sub_1000B8C74(uint64_t a1, uint64_t *a2)
{
  sub_100003BF0(a2, @"classID");
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  [*(id *)(a1 + 32) addObject:v3];
}

void *sub_1000B8CD8(void *a1, void *a2)
{
  id v3 = a2;
  char v4 = v3;
  if (a1)
  {
    uint64_t v9 = 0;
    int v10 = &v9;
    uint64_t v11 = 0x2020000000;
    uint64_t v12 = 0;
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_1000B8DC4;
    v6[3] = &unk_1001F33F0;
    void v6[4] = a1;
    id v7 = v3;
    id v8 = &v9;
    sub_10000749C(a1, v6);
    a1 = (void *)v10[3];

    _Block_object_dispose(&v9, 8);
  }

  return a1;
}

void sub_1000B8DAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000B8DC4(void *a1)
{
  id v2 = (void *)a1[4];
  uint64_t v5 = a1[5];
  id v3 = +[NSArray arrayWithObjects:&v5 count:1];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1000B8EB0;
  v4[3] = &unk_1001F1F28;
  void v4[4] = a1[6];
  sub_100007540(v2, @"select CS.state from CLSCollaborationState as CS join CLSHandoutAttachment as HA on HA.parentObjectID = CS.parentObjectID join CLSSurvey as S on S.parentObjectID = HA.objectID join CLSQuestionStep as QS on QS.parentObjectID = S.objectID join CLSMultipleChoiceAnswerFormat as MCF on MCF.parentObjectID = QS.objectID join CLSMultipleChoiceAnswerItem as MC on MC.parentObjectID = MCF.objectID and MC.objectID = ?", 1, v3, v4);
}

void sub_1000B8EB0(uint64_t a1, uint64_t *a2)
{
  sub_100003BF0(a2, @"state");
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = [v3 integerValue];
}

BOOL sub_1000B9D1C(id *a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 2;
        goto LABEL_22;
      case 2u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 4;
LABEL_22:
        uint64_t v14 = (PDDPHandoutAttachmentDetails *)a1[v13];
        a1[v13] = (id)v12;
        goto LABEL_31;
      case 3u:
        uint64_t v14 = objc_alloc_init(PDDPHandoutAttachmentDetails);
        [a1 addAttachmentDetails:v14];
        if (!PBReaderPlaceMark() || (sub_1000F8D00((uint64_t)v14, a2) & 1) == 0) {
          goto LABEL_34;
        }
        goto LABEL_28;
      case 4u:
        uint64_t v14 = objc_alloc_init(PDDPDate);
        objc_storeStrong(a1 + 3, v14);
        if PBReaderPlaceMark() && (PDDPDateReadFrom((uint64_t)v14, a2))
        {
LABEL_28:
          PBReaderRecallMark();
LABEL_31:

LABEL_32:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }
LABEL_34:

        return 0;
      case 5u:
        PBReaderReadString();
        uint64_t v14 = (PDDPHandoutAttachmentDetails *)objc_claimAutoreleasedReturnValue();
        if (v14) {
          [a1 addRecipientIds:v14];
        }
        goto LABEL_31;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_32;
    }
  }
}

id sub_1000BB1D8(id a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    char v4 = objc_opt_new();
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    void v7[2] = sub_1000BB318;
    v7[3] = &unk_1001F2F00;
    void v7[4] = a1;
    id v8 = v3;
    id v9 = v4;
    id v5 = v4;
    sub_10000749C(a1, v7);
    a1 = [v5 copy];
  }

  return a1;
}

void sub_1000BB2C0(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = [a2 objectID];
  [v2 addObject:v3];
}

void sub_1000BB318(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  id v3 = +[NSArray arrayWithObjects:&v6 count:1];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1000BB410;
  v4[3] = &unk_1001F2ED8;
  id v5 = *(id *)(a1 + 48);
  sub_100007540(v2, @"select distinct classID from CLSHandoutRecipient as R join CLSHandoutAttachment as A on R.parentObjectID = A.parentObjectID join CLSSurvey as S on S.parentObjectID = A.objectID and S.objectID = ?", 1, v3, v4);
}

void sub_1000BB410(uint64_t a1, uint64_t *a2)
{
  sub_100003BF0(a2, @"classID");
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  [*(id *)(a1 + 32) addObject:v3];
}

id sub_1000BB474(id a1, void *a2)
{
  id v3 = a2;
  char v4 = v3;
  if (a1)
  {
    uint64_t v9 = 0;
    int v10 = &v9;
    uint64_t v11 = 0x3032000000;
    uint64_t v12 = sub_10000B6F4;
    uint64_t v13 = sub_10000B594;
    id v14 = 0;
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_1000BB5A0;
    v6[3] = &unk_1001F25D0;
    id v8 = &v9;
    void v6[4] = a1;
    id v7 = v3;
    sub_10000749C(a1, v6);
    a1 = (id)v10[5];

    _Block_object_dispose(&v9, 8);
  }

  return a1;
}

void sub_1000BB588(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000BB5A0(void *a1)
{
  id v2 = (void *)a1[4];
  uint64_t v3 = objc_opt_class();
  uint64_t v8 = a1[5];
  char v4 = +[NSArray arrayWithObjects:&v8 count:1];
  uint64_t v5 = [v2 select:v3 where:@"objectID = ?" bindings:v4];
  uint64_t v6 = *(void *)(a1[6] + 8);
  id v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;
}

void sub_1000BB668(void *a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (a1)
  {
    CFStringRef v10 = @"surveyUpdateStatus";
    id v7 = +[NSNumber numberWithInteger:a3];
    uint64_t v11 = v7;
    uint64_t v8 = +[NSDictionary dictionaryWithObjects:&v11 forKeys:&v10 count:1];

    uint64_t v9 = +[PDDatabase whereSQLForArray:v5 prefix:@"objectID in "];
    [a1 updateAll:objc_opt_class() set:v8 where:v9 bindings:v5];
  }
}

void *sub_1000BB794(void *a1, void *a2, void *a3, void *a4, uint64_t a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  if (a1)
  {
    v19.receiver = a1;
    v19.super_class = (Class)PDPersonRoleLocation;
    a1 = objc_msgSendSuper2(&v19, "init");
    if (a1)
    {
      id v12 = [v9 copy];
      uint64_t v13 = (void *)a1[1];
      a1[1] = v12;

      id v14 = [v10 copy];
      uint64_t v15 = (void *)a1[2];
      a1[2] = v14;

      id v16 = [v11 copy];
      unsigned int v17 = (void *)a1[3];
      a1[3] = v16;

      a1[4] = a5;
    }
  }

  return a1;
}

uint64_t sub_1000BC51C(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    if ((v6 >> 3) == 2)
    {
      char v14 = 0;
      unsigned int v15 = 0;
      uint64_t v16 = 0;
      *(unsigned char *)(a1 + 20) |= 1u;
      while (1)
      {
        unint64_t v17 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v17 == -1 || v17 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v18 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v17);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v17 + 1;
        v16 |= (unint64_t)(v18 & 0x7F) << v14;
        if ((v18 & 0x80) == 0) {
          goto LABEL_30;
        }
        v14 += 7;
        BOOL v9 = v15++ >= 9;
        if (v9)
        {
          LODWORD(v16) = 0;
          goto LABEL_32;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_30:
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        LODWORD(v16) = 0;
      }
LABEL_32:
      *(_DWORD *)(a1 + 16) = v16;
    }
    else if ((v6 >> 3) == 1)
    {
      uint64_t v12 = PBReaderReadString();
      uint64_t v13 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = v12;
    }
    else
    {
      uint64_t result = PBReaderSkipValueWithTag();
      if (!result) {
        return result;
      }
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

uint64_t sub_1000BD5A4(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 8;
        goto LABEL_43;
      case 2u:
        char v15 = 0;
        unsigned int v16 = 0;
        uint64_t v17 = 0;
        *(unsigned char *)(a1 + 80) |= 2u;
        while (2)
        {
          unint64_t v18 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v18 == -1 || v18 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v19 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v18);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v18 + 1;
            v17 |= (unint64_t)(v19 & 0x7F) << v15;
            if (v19 < 0)
            {
              v15 += 7;
              BOOL v9 = v16++ >= 9;
              if (v9)
              {
                LODWORD(v17) = 0;
                goto LABEL_52;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v17) = 0;
        }
LABEL_52:
        uint64_t v27 = 52;
        goto LABEL_57;
      case 3u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v17 = 0;
        *(unsigned char *)(a1 + 80) |= 1u;
        while (2)
        {
          unint64_t v22 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v22 == -1 || v22 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v23 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v22);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v22 + 1;
            v17 |= (unint64_t)(v23 & 0x7F) << v20;
            if (v23 < 0)
            {
              v20 += 7;
              BOOL v9 = v21++ >= 9;
              if (v9)
              {
                LODWORD(v17) = 0;
                goto LABEL_56;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v17) = 0;
        }
LABEL_56:
        uint64_t v27 = 48;
LABEL_57:
        *(_DWORD *)(a1 + v27) = v17;
        goto LABEL_58;
      case 4u:
        unsigned int v24 = objc_alloc_init(PDDPDate);
        uint64_t v25 = 16;
        goto LABEL_38;
      case 5u:
        unsigned int v24 = objc_alloc_init(PDDPDate);
        uint64_t v25 = 32;
        goto LABEL_38;
      case 6u:
        unsigned int v24 = objc_alloc_init(PDDPDate);
        uint64_t v25 = 24;
LABEL_38:
        objc_storeStrong((id *)(a1 + v25), v24);
        if (!PBReaderPlaceMark() || (PDDPDateReadFrom((uint64_t)v24, a2) & 1) == 0) {
          goto LABEL_60;
        }
        goto LABEL_48;
      case 7u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 72;
        goto LABEL_43;
      case 8u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 56;
LABEL_43:
        uint64_t v26 = *(void **)(a1 + v13);
        *(void *)(a1 + v13) = v12;

        goto LABEL_58;
      case 9u:
        unsigned int v24 = objc_alloc_init(PDDPButtonInfo);
        objc_storeStrong((id *)(a1 + 40), v24);
        goto LABEL_46;
      case 0xAu:
        unsigned int v24 = objc_alloc_init(PDDPButtonInfo);
        [(id)a1 addOtherButtonInfos:v24];
LABEL_46:
        if (PBReaderPlaceMark() && sub_100162B40((uint64_t)v24, a2))
        {
LABEL_48:
          PBReaderRecallMark();

LABEL_58:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }
LABEL_60:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_58;
    }
  }
}

uint64_t sub_1000BEFE0(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        unint64_t v6 = 0;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      break;
    }
    if ((v6 >> 3) == 1)
    {
      *(unsigned char *)(a1 + 16) |= 1u;
      unint64_t v13 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v13 <= 0xFFFFFFFFFFFFFFF7 && v13 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
      {
        uint64_t v14 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v13);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v13 + 8;
      }
      else
      {
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
        uint64_t v14 = 0;
      }
      *(void *)(a1 + 8) = v14;
    }
    else
    {
      uint64_t result = PBReaderSkipValueWithTag();
      if (!result) {
        return result;
      }
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_1000BF440(id a1)
{
  v3[0] = CLSUserDefaultRestoreCurrentDefaults;
  v3[1] = CLSUserDefaultEnableVerboseLogging;
  v4[0] = &__kCFBooleanTrue;
  v4[1] = &__kCFBooleanTrue;
  _DWORD v3[2] = CLSUserDefaultEnableResponseStreaming;
  v4[2] = &__kCFBooleanTrue;
  uint64_t v1 = +[NSDictionary dictionaryWithObjects:v4 forKeys:v3 count:3];
  id v2 = (void *)qword_10023E5A0;
  qword_10023E5A0 = v1;
}

BOOL sub_1000BF9A0(id a1, NSString *a2, NSNumber *a3, BOOL *a4)
{
  return [(NSNumber *)a3 BOOLValue];
}

void sub_1000C00BC(id a1)
{
  byte_10023E591 = os_variant_has_internal_diagnostics();
}

BOOL sub_1000C0778(void *a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0;
      while (1)
      {
        unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0;
          int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0;
      }
LABEL_13:
      if (v10 || (v6 & 7) == 4) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      if ((v6 >> 3) == 2) {
        break;
      }
      if ((v6 >> 3) == 1)
      {
        uint64_t v12 = PBReaderReadString();
        unint64_t v13 = (void *)a1[2];
        a1[2] = v12;
LABEL_22:

        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_24:
      if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
    }
    unint64_t v13 = PBReaderReadString();
    if (v13) {
      [a1 addLocationIds:v13];
    }
    goto LABEL_22;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

unint64_t sub_1000C0F24(unint64_t result)
{
  if (result)
  {
    uint64_t v1 = (const char *)[ (id) result objCType];
    return !strcmp(v1, "d") || strcmp(v1, "f") == 0;
  }
  return result;
}

uint64_t PDDPDateReadFrom(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v10 = v5++ >= 9;
      if (v10)
      {
        unint64_t v6 = 0;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      break;
    }
    if ((v6 >> 3) == 2)
    {
      char v15 = 0;
      unsigned int v16 = 0;
      uint64_t v17 = 0;
      *(unsigned char *)(a1 + 20) |= 2u;
      while (1)
      {
        uint64_t v18 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        unint64_t v19 = v18 + 1;
        if (v18 == -1 || v19 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v20 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v18);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v19;
        v17 |= (unint64_t)(v20 & 0x7F) << v15;
        if ((v20 & 0x80) == 0) {
          goto LABEL_32;
        }
        v15 += 7;
        BOOL v10 = v16++ >= 9;
        if (v10)
        {
          LODWORD(v17) = 0;
          goto LABEL_34;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_32:
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        LODWORD(v17) = 0;
      }
LABEL_34:
      *(_DWORD *)(a1 + 16) = v17;
    }
    else if ((v6 >> 3) == 1)
    {
      *(unsigned char *)(a1 + 20) |= 1u;
      unint64_t v13 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v13 <= 0xFFFFFFFFFFFFFFF7 && v13 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
      {
        uint64_t v14 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v13);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v13 + 8;
      }
      else
      {
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
        uint64_t v14 = 0;
      }
      *(void *)(a1 + 8) = v14;
    }
    else
    {
      uint64_t result = PBReaderSkipValueWithTag();
      if (!result) {
        return result;
      }
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

uint64_t sub_1000C218C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        char v12 = 0;
        unsigned int v13 = 0;
        uint64_t v14 = 0;
        *(unsigned char *)(a1 + 52) |= 1u;
        while (1)
        {
          unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v15 == -1 || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
          v14 |= (unint64_t)(v16 & 0x7F) << v12;
          if ((v16 & 0x80) == 0) {
            goto LABEL_39;
          }
          v12 += 7;
          BOOL v9 = v13++ >= 9;
          if (v9)
          {
            LODWORD(v14) = 0;
            goto LABEL_41;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_39:
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_41:
        *(_DWORD *)(a1 + 48) = v14;
        goto LABEL_42;
      case 2u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 40;
        goto LABEL_29;
      case 3u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 8;
LABEL_29:
        char v20 = *(void **)(a1 + v19);
        *(void *)(a1 + v19) = v18;

        goto LABEL_42;
      case 4u:
        PBReaderReadString();
        unsigned int v21 = (PDDPDate *)objc_claimAutoreleasedReturnValue();
        if (v21) {
          [(id)a1 addItemIds:v21];
        }
        goto LABEL_37;
      case 5u:
        unsigned int v21 = objc_alloc_init(PDDPDate);
        uint64_t v22 = 16;
        goto LABEL_34;
      case 6u:
        unsigned int v21 = objc_alloc_init(PDDPDate);
        uint64_t v22 = 24;
LABEL_34:
        objc_storeStrong((id *)(a1 + v22), v21);
        if PBReaderPlaceMark() && (PDDPDateReadFrom((uint64_t)v21, a2))
        {
          PBReaderRecallMark();
LABEL_37:

LABEL_42:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_42;
    }
  }
}

uint64_t sub_1000C351C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 40;
        goto LABEL_22;
      case 2u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 48;
LABEL_22:
        unint64_t v15 = *(void **)(a1 + v13);
        *(void *)(a1 + v13) = v12;

        goto LABEL_45;
      case 3u:
        char v16 = objc_alloc_init(PDDPDate);
        uint64_t v17 = 8;
        goto LABEL_25;
      case 4u:
        char v16 = objc_alloc_init(PDDPDate);
        uint64_t v17 = 16;
LABEL_25:
        objc_storeStrong((id *)(a1 + v17), v16);
        if (!PBReaderPlaceMark() || (PDDPDateReadFrom((uint64_t)v16, a2) & 1) == 0) {
          goto LABEL_47;
        }
        goto LABEL_37;
      case 5u:
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        *(unsigned char *)(a1 + 60) |= 1u;
        while (2)
        {
          unint64_t v21 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v21 == -1 || v21 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v22 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v21);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v21 + 1;
            v20 |= (unint64_t)(v22 & 0x7F) << v18;
            if (v22 < 0)
            {
              v18 += 7;
              BOOL v9 = v19++ >= 9;
              if (v9)
              {
                LODWORD(v20) = 0;
                goto LABEL_44;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v20) = 0;
        }
LABEL_44:
        *(_DWORD *)(a1 + 56) = v20;
        goto LABEL_45;
      case 6u:
        char v16 = objc_alloc_init(PDDPLocation);
        [(id)a1 addLocations:v16];
        if (PBReaderPlaceMark() && sub_10014CCB0((uint64_t)v16, a2))
        {
LABEL_37:
          PBReaderRecallMark();
LABEL_38:

LABEL_45:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }
LABEL_47:

        return 0;
      case 7u:
        PBReaderReadString();
        char v16 = (PDDPDate *)objc_claimAutoreleasedReturnValue();
        if (v16) {
          [(id)a1 addEmailDomains:v16];
        }
        goto LABEL_38;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_45;
    }
  }
}

uint64_t sub_1000C4CD4(uint64_t a1)
{
  if ([*(id *)(a1 + 32) maySyncWithProgressZone])
  {
    id v2 = [objc_alloc((Class)NSString) initWithFormat:@"U%@%@", *(void *)(a1 + 40), @"_ClassKit"];
    unsigned int v3 = sub_10016018C(*(id *)(a1 + 48), v2, @"PDCK_ClassKitZoneName");

    if (!v3) {
      return 0;
    }
  }
  if ([*(id *)(a1 + 32) maySyncWithTeacherZone])
  {
    id v4 = [objc_alloc((Class)NSString) initWithFormat:@"U%@%@", *(void *)(a1 + 40), @"_Teacher"];
    unsigned int v5 = sub_10016018C(*(id *)(a1 + 48), v4, @"PDCK_TeacherZoneName");

    if (!v5) {
      return 0;
    }
  }
  if ([*(id *)(a1 + 32) maySyncWithAssetZone])
  {
    id v6 = [objc_alloc((Class)NSString) initWithFormat:@"U%@%@", *(void *)(a1 + 40), @"_Asset"];
    unsigned int v7 = sub_10016018C(*(id *)(a1 + 48), v6, @"PDCK_ClassKitSharedAssetZone");

    if (!v7) {
      return 0;
    }
  }
  if ([*(id *)(a1 + 32) maySyncWithSurveyAnswerZone]
    && (id v8 = [objc_alloc((Class)NSString) initWithFormat:@"U%@%@", *(void *)(a1 + 40), @"_Student"], v9 = sub_10016018C(*(id *)(a1 + 48), v8, @"PDCK_StudentZoneName"), v8, !v9))
  {
    return 0;
  }
  else
  {
    return 1;
  }
}

void sub_1000C5024(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000C504C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) progressZone];
  unsigned int v3 = v2;
  if (v2)
  {
    id v4 = *(void **)(a1 + 40);
    unsigned int v5 = [v2 zoneID];
    [v4 setObject:v3 forKeyedSubscript:v5];
  }
  id v6 = [*(id *)(a1 + 32) teacherZone];

  if (v6)
  {
    unsigned int v7 = *(void **)(a1 + 40);
    id v8 = [v6 zoneID];
    [v7 setObject:v6 forKeyedSubscript:v8];
  }
  unsigned int v9 = [*(id *)(a1 + 32) surveyAnswerZone];

  if (v9)
  {
    int v10 = *(void **)(a1 + 40);
    int v11 = [v9 zoneID];
    [v10 setObject:v9 forKeyedSubscript:v11];
  }
  id v14 = [*(id *)(a1 + 32) assetZone];

  if (v14)
  {
    uint64_t v12 = *(void **)(a1 + 40);
    uint64_t v13 = [v14 zoneID];
    [v12 setObject:v14 forKeyedSubscript:v13];
  }
}

void sub_1000C5190(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  unsigned int v7 = (id *)(a1 + 48);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  unsigned int v9 = WeakRetained;
  if (WeakRetained && ([WeakRetained isAborted] & 1) == 0)
  {
    if (v6 && [v6 code] != (id)2)
    {
      CLSInitLog();
      char v16 = (void *)CLSLogSync;
      if (os_log_type_enabled(CLSLogSync, OS_LOG_TYPE_INFO))
      {
        uint64_t v17 = v16;
        *(_DWORD *)long long buf = 138543618;
        id v33 = (id)objc_opt_class();
        __int16 v34 = 2114;
        id v35 = v6;
        id v18 = v33;
        _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_INFO, "%{public}@: fetchRecordZonesCompletionBlock error: %{public}@", buf, 0x16u);
      }
      if ([v9 isServerBusyError:v6])
      {
        [v9 retryDelayForServerBusyError:v6];
        dispatch_time_t v20 = dispatch_time(0, (uint64_t)((v19 + 1.0) * 1000000000.0));
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_1000C54E0;
        block[3] = &unk_1001F2D28;
        objc_copyWeak(&v30, v7);
        dispatch_after(v20, (dispatch_queue_t)&_dispatch_main_q, block);
        objc_destroyWeak(&v30);
      }
      else
      {
        CLSInitLog();
        unint64_t v21 = (void *)CLSLogSync;
        if (os_log_type_enabled(CLSLogSync, OS_LOG_TYPE_INFO))
        {
          char v22 = v21;
          char v23 = objc_opt_class();
          *(_DWORD *)long long buf = 138412546;
          id v33 = v23;
          __int16 v34 = 2112;
          id v35 = v6;
          id v24 = v23;
          _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_INFO, "%@ fetchZonesOp.fetchRecordZonesCompletionBlock error: %@", buf, 0x16u);
        }
        [v9 abortWithError:v6];
      }
    }
    else
    {
      long long v27 = 0u;
      long long v28 = 0u;
      long long v25 = 0u;
      long long v26 = 0u;
      id v10 = v5;
      id v11 = [v10 countByEnumeratingWithState:&v25 objects:v31 count:16];
      if (v11)
      {
        id v12 = v11;
        uint64_t v13 = *(void *)v26;
        do
        {
          id v14 = 0;
          do
          {
            if (*(void *)v26 != v13) {
              objc_enumerationMutation(v10);
            }
            objc_msgSend(*(id *)(a1 + 40), "removeObjectForKey:", *(void *)(*((void *)&v25 + 1) + 8 * (void)v14), (void)v25);
            id v14 = (char *)v14 + 1;
          }
          while (v12 != v14);
          id v12 = [v10 countByEnumeratingWithState:&v25 objects:v31 count:16];
        }
        while (v12);
      }

      if ([*(id *)(a1 + 40) count])
      {
        unint64_t v15 = [*(id *)(a1 + 40) allValues];
        [v9 createMissingZones:v15];
      }
      else
      {
        [v9 subscribeToZonesIfNeeded];
      }
    }
  }
}

void sub_1000C54E0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained execute];
    id WeakRetained = v2;
  }
}

void sub_1000C5614(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000C563C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    if (v5 && [v5 code] != (id)14)
    {
      CLSInitLog();
      unsigned int v7 = (void *)CLSLogSync;
      if (os_log_type_enabled(CLSLogSync, OS_LOG_TYPE_INFO))
      {
        id v8 = v7;
        *(_DWORD *)id v10 = 138543618;
        *(void *)&v10[4] = objc_opt_class();
        *(_WORD *)&v10[12] = 2114;
        *(void *)&v10[14] = v5;
        id v9 = *(id *)&v10[4];
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "%{public}@: modifyRecordZonesCompletionBlock error: %{public}@", v10, 0x16u);
      }
      objc_msgSend(WeakRetained, "abortWithError:", v5, *(_OWORD *)v10, *(void *)&v10[16]);
    }
    else
    {
      [WeakRetained subscribeToZonesIfNeeded];
    }
  }
}

void sub_1000C5AE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000C5B14(uint64_t a1, void *a2, void *a3)
{
  id v27 = a2;
  id v28 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v6 = WeakRetained;
  if (WeakRetained && ([WeakRetained isAborted] & 1) == 0)
  {
    from = (id *)(a1 + 40);
    if (v28)
    {
      if ([v28 code] != (id)2)
      {
        CLSInitLog();
        unsigned int v7 = (void *)CLSLogSync;
        if (os_log_type_enabled(CLSLogSync, OS_LOG_TYPE_INFO))
        {
          id v8 = v7;
          *(_DWORD *)long long buf = 138543618;
          id v43 = (id)objc_opt_class();
          __int16 v44 = 2114;
          id v45 = v28;
          id v9 = v43;
          _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "%{public}@: fetchSubscriptionCompletionBlock error: %{public}@", buf, 0x16u);
        }
      }
    }
    id v29 = objc_alloc_init((Class)CKNotificationInfo);
    [v29 setShouldSendContentAvailable:1];
    id v10 = objc_alloc_init((Class)NSMutableArray);
    long long v38 = 0u;
    long long v39 = 0u;
    long long v36 = 0u;
    long long v37 = 0u;
    id v11 = v27;
    id v12 = [v11 countByEnumeratingWithState:&v36 objects:v41 count:16];
    if (v12)
    {
      uint64_t v13 = *(void *)v37;
      do
      {
        for (i = 0; i != v12; i = (char *)i + 1)
        {
          if (*(void *)v37 != v13) {
            objc_enumerationMutation(v11);
          }
          uint64_t v15 = *(void *)(*((void *)&v36 + 1) + 8 * i);
          char v16 = [v11 objectForKeyedSubscript:v15];

          if (v16) {
            [v6 setSubscribed:1 toSubscriptionWithID:v15];
          }
        }
        id v12 = [v11 countByEnumeratingWithState:&v36 objects:v41 count:16];
      }
      while (v12);
    }

    long long v34 = 0u;
    long long v35 = 0u;
    long long v32 = 0u;
    long long v33 = 0u;
    id v17 = *(id *)(a1 + 32);
    id v18 = [v17 countByEnumeratingWithState:&v32 objects:v40 count:16];
    if (v18)
    {
      uint64_t v19 = *(void *)v33;
      do
      {
        for (j = 0; j != v18; j = (char *)j + 1)
        {
          if (*(void *)v33 != v19) {
            objc_enumerationMutation(v17);
          }
          uint64_t v21 = *(void *)(*((void *)&v32 + 1) + 8 * (void)j);
          if (([v6 isSubscribedTo:v21] & 1) == 0)
          {
            char v22 = [*(id *)(a1 + 32) objectForKeyedSubscript:v21];
            id v23 = [objc_alloc((Class)CKRecordZoneSubscription) initWithZoneID:v22 subscriptionID:v21];
            [v23 setNotificationInfo:v29];
            [v10 addObject:v23];
          }
        }
        id v18 = [v17 countByEnumeratingWithState:&v32 objects:v40 count:16];
      }
      while (v18);
    }

    if ([v10 count])
    {
      CLSInitLog();
      id v24 = CLSLogSync;
      if (os_log_type_enabled(CLSLogSync, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)long long buf = 138412290;
        id v43 = v10;
        _os_log_debug_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEBUG, "will subscribe with subscriptions: %@", buf, 0xCu);
      }
      id v25 = [objc_alloc((Class)CKModifySubscriptionsOperation) initWithSubscriptionsToSave:v10 subscriptionIDsToDelete:&__NSArray0__struct];
      v30[0] = _NSConcreteStackBlock;
      v30[1] = 3221225472;
      v30[2] = sub_1000C5F74;
      v30[3] = &unk_1001F36D0;
      objc_copyWeak(&v31, from);
      [v25 setModifySubscriptionsCompletionBlock:v30];
      [v6 performCKDatabaseOperation:v25];
      objc_destroyWeak(&v31);
    }
    else
    {
      [v6 markAsBootstrapped];
    }
  }
}

void sub_1000C5F54(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1000C5F74(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v11 = WeakRetained;
  if (WeakRetained && ([WeakRetained isAborted] & 1) == 0)
  {
    long long v46 = 0u;
    long long v47 = 0u;
    long long v44 = 0u;
    long long v45 = 0u;
    id v12 = v7;
    id v13 = [v12 countByEnumeratingWithState:&v44 objects:v54 count:16];
    if (v13)
    {
      id v14 = v13;
      uint64_t v15 = *(void *)v45;
      do
      {
        for (i = 0; i != v14; i = (char *)i + 1)
        {
          if (*(void *)v45 != v15) {
            objc_enumerationMutation(v12);
          }
          id v17 = [*(id *)(*((void *)&v44 + 1) + 8 * i) subscriptionID];
          [v11 setSubscribed:1 toSubscriptionWithID:v17];
        }
        id v14 = [v12 countByEnumeratingWithState:&v44 objects:v54 count:16];
      }
      while (v14);
    }

    long long v42 = 0u;
    long long v43 = 0u;
    long long v40 = 0u;
    long long v41 = 0u;
    id v18 = v8;
    id v19 = [v18 countByEnumeratingWithState:&v40 objects:v53 count:16];
    if (v19)
    {
      id v20 = v19;
      uint64_t v21 = *(void *)v41;
      do
      {
        for (j = 0; j != v20; j = (char *)j + 1)
        {
          if (*(void *)v41 != v21) {
            objc_enumerationMutation(v18);
          }
          [v11 setSubscribed:0 toSubscriptionWithID:*(void *)(*((void *)&v40 + 1) + 8 * (void)j)];
        }
        id v20 = [v18 countByEnumeratingWithState:&v40 objects:v53 count:16];
      }
      while (v20);
    }

    if (v9 && [v9 code] != (id)2)
    {
      CLSInitLog();
      long long v32 = (void *)CLSLogSync;
      if (os_log_type_enabled(CLSLogSync, OS_LOG_TYPE_INFO))
      {
        long long v33 = v32;
        long long v34 = objc_opt_class();
        *(_DWORD *)long long buf = 138543618;
        uint64_t v50 = v34;
        __int16 v51 = 2114;
        id v52 = v9;
        id v35 = v34;
        _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_INFO, "%{public}@: modifySubscriptionsCompletionBlock error: %{public}@", buf, 0x16u);
      }
      [v11 abortWithError:v9];
    }
    else
    {
      id v23 = [v9 userInfo];
      id v24 = [v23 objectForKeyedSubscript:CKPartialErrorsByItemIDKey];

      long long v38 = 0u;
      long long v39 = 0u;
      long long v36 = 0u;
      long long v37 = 0u;
      id v25 = v24;
      id v26 = [v25 countByEnumeratingWithState:&v36 objects:v48 count:16];
      if (v26)
      {
        id v27 = v26;
        uint64_t v28 = *(void *)v37;
        do
        {
          for (k = 0; k != v27; k = (char *)k + 1)
          {
            if (*(void *)v37 != v28) {
              objc_enumerationMutation(v25);
            }
            uint64_t v30 = *(void *)(*((void *)&v36 + 1) + 8 * (void)k);
            id v31 = objc_msgSend(v25, "objectForKeyedSubscript:", v30, (void)v36);
            if ([v31 code] == (id)15) {
              [v11 setSubscribed:1 toSubscriptionWithID:v30];
            }
          }
          id v27 = [v25 countByEnumeratingWithState:&v36 objects:v48 count:16];
        }
        while (v27);
      }

      [v11 markAsBootstrapped];
    }
  }
}

id *sub_1000C630C(id *a1, void *a2)
{
  id v4 = a2;
  if (a1)
  {
    v7.receiver = a1;
    v7.super_class = (Class)PDGroupReferencesToExpand;
    id v5 = (id *)objc_msgSendSuper2(&v7, "init");
    a1 = v5;
    if (v5) {
      objc_storeStrong(v5 + 1, a2);
    }
  }

  return a1;
}

void *sub_1000C72E4(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    v7.receiver = a1;
    v7.super_class = (Class)PDBlockedApp;
    a1 = objc_msgSendSuper2(&v7, "init");
    if (a1)
    {
      id v4 = [v3 copy];
      id v5 = (void *)a1[1];
      a1[1] = v4;
    }
  }

  return a1;
}

id sub_1000C8650(id a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = objc_opt_new();
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    void v8[2] = sub_1000C8738;
    void v8[3] = &unk_1001F2F00;
    void v8[4] = a1;
    id v9 = v3;
    id v5 = v4;
    id v10 = v5;
    sub_10000749C(a1, v8);
    id v6 = v10;
    a1 = v5;
  }

  return a1;
}

void sub_1000C8738(uint64_t a1)
{
  id v3 = *(void **)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  v7[0] = &off_10020AEF0;
  v7[1] = v2;
  id v4 = +[NSArray arrayWithObjects:v7 count:2];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  _DWORD v5[2] = sub_1000C8838;
  v5[3] = &unk_1001F2ED8;
  id v6 = *(id *)(a1 + 48);
  sub_100007540(v3, @"select referenceObjectID FROM (select I.referenceObjectID FROM CLSCollectionItem AS I LEFT JOIN CLSArchivedHandout AS H on I.referenceObjectID=H.objectID WHERE I.type = ? AND I.parentObjectID=? AND H.objectID IS NULL)", 1, v4, v5);
}

void sub_1000C8838(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  sub_100003BF0(a2, @"referenceObjectID");
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  [v2 addObject:v3];
}

BOOL sub_1000C889C(void *a1)
{
  if (!a1) {
    return 0;
  }
  uint64_t v4 = 0;
  id v5 = &v4;
  uint64_t v6 = 0x2020000000;
  char v7 = 0;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  _DWORD v3[2] = sub_1000C896C;
  void v3[3] = &unk_1001F2BA0;
  v3[4] = a1;
  void v3[5] = &v4;
  sub_10000749C(a1, v3);
  BOOL v1 = *((unsigned char *)v5 + 24) != 0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1000C8954(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000C896C(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  _DWORD v3[2] = sub_1000C89F4;
  void v3[3] = &unk_1001F1F28;
  BOOL v1 = *(void **)(a1 + 32);
  v3[4] = *(void *)(a1 + 40);
  return sub_100007540(v1, @"select I.referenceObjectID, H.objectID FROM CLSCollectionItem AS I LEFT JOIN CLSArchivedHandout AS H on I.referenceObjectID=H.objectID WHERE I.type = ? AND H.objectID IS NULL LIMIT 1", 1, &off_10020B1E8, v3);
}

uint64_t sub_1000C89F4(uint64_t result, uint64_t a2, unsigned char *a3)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
  *a3 = 1;
  return result;
}

uint64_t sub_1000C8D20(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = objc_opt_class();
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  void v10[2] = sub_1000C8E1C;
  v10[3] = &unk_1001F41C8;
  id v6 = *(id *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 56);
  id v8 = *(void **)(a1 + 64);
  id v11 = v6;
  uint64_t v12 = v7;
  id v13 = v8;
  id v14 = *(id *)(a1 + 72);
  [v2 selectAll:v3, v4, @"rowid asc, position asc, state desc, syncOrder asc", 0, 0, v5, v10 where orderBy limit offset bindings block];

  return 1;
}

id sub_1000C8E1C(uint64_t a1, void *a2, unsigned char *a3)
{
  uint64_t v5 = *(void **)(a1 + 32);
  id v6 = a2;
  uint64_t v7 = objc_opt_class();
  id v8 = [v6 entityIdentity];
  id v9 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", objc_msgSend(v6, "state", v8));
  v14[1] = v9;
  id v10 = [v6 identityValue];
  v14[2] = v10;
  id v11 = +[NSArray arrayWithObjects:v14 count:3];
  [v5 deleteAll:v7 where:@"entityIdentity = ? and state <= ? and identityValue != ?" bindings:v11];

  [*(id *)(a1 + 40) populateRecordsToSave:*(void *)(a1 + 48) idsToDelete:*(void *)(a1 + 56) withSyncItem:v6];
  uint64_t v12 = (char *)[*(id *)(a1 + 56) count];
  id result = [*(id *)(a1 + 48) count];
  if (&v12[(void)result] >= (char *)0xC9) {
    *a3 = 1;
  }
  return result;
}

uint64_t sub_1000C9190(uint64_t a1)
{
  [*(id *)(a1 + 32) updateSyncMetadataForRecord:*(void *)(a1 + 40)];
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = [*(id *)(a1 + 40) recordID];
  [v2 deleteProcessedSyncAssociatedWithRecordID:v3];

  return 1;
}

uint64_t sub_1000C929C(uint64_t a1)
{
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v11;
    do
    {
      id v6 = 0;
      do
      {
        if (*(void *)v11 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void *)(*((void *)&v10 + 1) + 8 * (void)v6);
        objc_msgSend(*(id *)(a1 + 40), "deleteSyncMetadataAssociatedWithRecordID:", v7, (void)v10);
        [*(id *)(a1 + 40) deleteProcessedSyncAssociatedWithRecordID:v7];
        id v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v4);
  }

  return 1;
}

void sub_1000C9804(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000C983C(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  if (v8)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    long long v12 = WeakRetained;
    if (WeakRetained && ([WeakRetained isAborted] & 1) == 0) {
      [v12 recordUpdated:v8];
    }
  }
  else
  {
    CLSInitLog();
    long long v13 = CLSLogSync;
    if (os_log_type_enabled(CLSLogSync, OS_LOG_TYPE_ERROR))
    {
      int v14 = 138543618;
      id v15 = v7;
      __int16 v16 = 2114;
      id v17 = v9;
      _os_log_error_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "Failed to save CK record; recordID: %{public}@, per-record error: %{public}@",
        (uint8_t *)&v14,
        0x16u);
    }
  }
}

void sub_1000C9974(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  long long v11 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  long long v13 = WeakRetained;
  if (WeakRetained && ([WeakRetained isAborted] & 1) == 0)
  {
    [v13 deleteSyncStateForRecordIDs:v8];
    if (v9)
    {
      if ([v9 code] == (id)2)
      {
        int v14 = [v9 userInfo];
        id v15 = [v14 objectForKeyedSubscript:CKPartialErrorsByItemIDKey];

        [v13 resolvePartialErrors:v15];
      }
      else if ([v13 isServerBusyError:v9])
      {
        [v13 retryDelayForServerBusyError:v9];
        dispatch_time_t v17 = dispatch_time(0, (uint64_t)((v16 + 1.0) * 1000000000.0));
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_1000C9BBC;
        block[3] = &unk_1001F2D28;
        objc_copyWeak(&v20, v11);
        dispatch_after(v17, (dispatch_queue_t)&_dispatch_main_q, block);
        objc_destroyWeak(&v20);
      }
      else
      {
        CLSInitLog();
        id v18 = CLSLogSync;
        if (os_log_type_enabled(CLSLogSync, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)long long buf = 138543362;
          id v22 = v9;
          _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_INFO, "modifyRecordsCompletionBlock error: %{public}@", buf, 0xCu);
        }
        [v13 abort];
      }
    }
    else
    {
      [v13 execute];
    }
  }
}

void sub_1000C9BBC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained execute];
    id WeakRetained = v2;
  }
}

uint64_t sub_1000CA420(uint64_t a1)
{
  if (([*(id *)(a1 + 32) deleteObject:*(void *)(a1 + 40)] & 1) == 0)
  {
    CLSInitLog();
    id v2 = CLSLogSync;
    if (os_log_type_enabled(CLSLogSync, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v9 = *(void *)(a1 + 40);
      *(_DWORD *)long long buf = 138412290;
      uint64_t v13 = v9;
      _os_log_debug_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "failed to delete sync item: %@", buf, 0xCu);
    }
  }
  id v3 = *(void **)(a1 + 32);
  uint64_t v4 = objc_opt_class();
  uint64_t v5 = [*(id *)(a1 + 40) entityIdentity];
  long long v11 = v5;
  id v6 = +[NSArray arrayWithObjects:&v11 count:1];
  LOBYTE(v3) = [v3 deleteAll:v4 where:@"entityIdentity = ?" bindings:v6];

  if ((v3 & 1) == 0)
  {
    CLSInitLog();
    id v7 = CLSLogSync;
    if (os_log_type_enabled(CLSLogSync, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v10 = *(void *)(a1 + 40);
      *(_DWORD *)long long buf = 138412290;
      uint64_t v13 = v10;
      _os_log_debug_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "failed to delete sync metadata for sync item: %@", buf, 0xCu);
    }
  }
  return 1;
}

id sub_1000CA5C8()
{
  self;
  uint64_t v0 = (void *)qword_10023E908;

  return v0;
}

void sub_1000CA908(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

_DWORD *sub_1000CA924(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(a2 + 16) - 1) < 2) {
    return 0;
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v4 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v5 = [WeakRetained statusReport];
    id v2 = sub_1000FA490((uint64_t)v5);
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

void sub_1000CB220(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    id v2 = [WeakRetained listener];
    [v2 resume];

    id WeakRetained = v3;
  }
}

void sub_1000CB4A0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v5 - 72));
  _Unwind_Resume(a1);
}

void sub_1000CB4EC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained handleSignal:3];
}

void sub_1000CB530(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained handleSignal:6];
}

void sub_1000CB574(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained handleSignal:15];
}

void sub_1000CB5B8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained handleSignal:29];
}

uint64_t sub_1000CB788(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_1000CB798(int a1)
{
  BOOL v1 = +[NSString stringWithFormat:@"%s", sys_signame[a1]];
  id v2 = [v1 uppercaseString];
  id v3 = [@"SIG" stringByAppendingString:v2];

  return v3;
}

void sub_1000CBBD4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    WeakRetained[5] = 1;
    id v2 = WeakRetained;
    [WeakRetained memoryPressureStatusChanged];
    id WeakRetained = v2;
  }
}

void sub_1000CBC20(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    WeakRetained[5] = 2;
    id v2 = WeakRetained;
    [WeakRetained memoryPressureStatusChanged];
    id WeakRetained = v2;
  }
}

void sub_1000CBC6C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    WeakRetained[5] = 4;
    id v2 = WeakRetained;
    [WeakRetained memoryPressureStatusChanged];
    id WeakRetained = v2;
  }
}

void sub_1000CBD2C(char a1, double *a2, uint64_t a3)
{
  double Current = CFAbsoluteTimeGetCurrent();
  if (Current >= *a2 + 0.02)
  {
    CLSInitLog();
    id v7 = CLSLogMemory;
    if (a1)
    {
      if (os_log_type_enabled(CLSLogMemory, OS_LOG_TYPE_FAULT))
      {
        int v8 = 136315138;
        uint64_t v9 = a3;
        _os_log_fault_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_FAULT, "%s", (uint8_t *)&v8, 0xCu);
      }
    }
    else if (os_log_type_enabled(CLSLogMemory, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = 136315138;
      uint64_t v9 = a3;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%s", (uint8_t *)&v8, 0xCu);
    }
    *a2 = Current;
  }
}

id sub_1000CC108(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) listener];
  [v2 invalidate];

  uint64_t v3 = *(unsigned __int8 *)(a1 + 48);
  uint64_t v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);

  return [v4 exitClean:v3 reason:v5];
}

void sub_1000CC158(uint64_t a1)
{
  id v2 = +[PDUserDefaults sharedDefaults];
  unsigned int v3 = [v2 enableVerboseLogging];

  if (v3)
  {
    CLSInitLog();
    uint64_t v4 = CLSLogDefault;
    if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_INFO))
    {
      int v5 = *(_DWORD *)(a1 + 48);
      v7[0] = 67109120;
      v7[1] = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Connection invalidated, process (pid: %d) went away.", (uint8_t *)v7, 8u);
    }
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained invalidateServer:*(void *)(a1 + 32)];
}

void sub_1000CC248(uint64_t a1)
{
  id v2 = +[PDUserDefaults sharedDefaults];
  unsigned int v3 = [v2 enableVerboseLogging];

  if (v3)
  {
    CLSInitLog();
    uint64_t v4 = CLSLogDefault;
    if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_INFO))
    {
      int v5 = *(_DWORD *)(a1 + 48);
      v7[0] = 67109120;
      v7[1] = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Unexpected interruption on connection, process (pid: %d).", (uint8_t *)v7, 8u);
    }
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained invalidateServer:*(void *)(a1 + 32)];
}

void sub_1000CC40C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = sub_1000CC4C0;
    void v4[3] = &unk_1001F4290;
    id v5 = *(id *)(a1 + 32);
    unsigned int v3 = objc_retainBlock(v4);
    ((void (*)(void *, id))v3[2])(v3, WeakRetained);
  }
}

id sub_1000CC4C0(uint64_t a1, uint64_t a2)
{
  if (a2) {
    id v2 = *(void **)(a2 + 32);
  }
  else {
    id v2 = 0;
  }
  return [v2 removeObject:*(void *)(a1 + 32)];
}

void sub_1000CC930(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40)
{
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a33, 8);
  _Block_object_dispose(&a40, 8);
  _Block_object_dispose((const void *)(v40 - 232), 8);
  _Unwind_Resume(a1);
}

void sub_1000CC980(void *a1, char a2, char a3, void *a4, void *a5)
{
  id v9 = a4;
  id v10 = a5;
  *(unsigned char *)(*(void *)(a1[4] + 8) + 24) = a2;
  *(unsigned char *)(*(void *)(a1[5] + 8) + 24) = a3;
  uint64_t v11 = *(void *)(a1[6] + 8);
  long long v12 = *(void **)(v11 + 40);
  *(void *)(v11 + 40) = v9;
  id v15 = v9;

  uint64_t v13 = *(void *)(a1[7] + 8);
  int v14 = *(void **)(v13 + 40);
  *(void *)(v13 + 40) = v10;
}

void sub_1000CCA30(uint64_t a1)
{
  if (a1)
  {
    BOOL v1 = *(NSObject **)(a1 + 120);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000CCAAC;
    block[3] = &unk_1001F2A68;
    void block[4] = a1;
    dispatch_barrier_async(v1, block);
  }
}

void sub_1000CCAAC(uint64_t a1)
{
  id v2 = objc_opt_new();
  [*(id *)(a1 + 32) lock];
  long long v33 = 0u;
  long long v34 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  unsigned int v3 = *(void **)(a1 + 32);
  uint64_t v25 = a1;
  if (v3) {
    unsigned int v3 = (void *)v3[4];
  }
  uint64_t v4 = v3;
  id v5 = [v4 countByEnumeratingWithState:&v31 objects:v38 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v32;
    do
    {
      for (i = 0; i != v6; i = (char *)i + 1)
      {
        if (*(void *)v32 != v7) {
          objc_enumerationMutation(v4);
        }
        id v9 = *(void **)(*((void *)&v31 + 1) + 8 * i);
        long long v27 = 0u;
        long long v28 = 0u;
        long long v29 = 0u;
        long long v30 = 0u;
        id v10 = objc_msgSend(v9, "observers", v25, context, 0);
        uint64_t v11 = [v10 objectEnumerator];

        id v12 = [v11 countByEnumeratingWithState:&v27 objects:v37 count:16];
        if (v12)
        {
          id v13 = v12;
          uint64_t v14 = *(void *)v28;
          do
          {
            for (j = 0; j != v13; j = (char *)j + 1)
            {
              if (*(void *)v28 != v14) {
                objc_enumerationMutation(v11);
              }
              double v16 = *(unsigned char **)(*((void *)&v27 + 1) + 8 * (void)j);
              if (!v16 || !v16[48])
              {
                dispatch_time_t v17 = [v16 observedTableName];
                [v2 addObject:v17];
              }
            }
            id v13 = [v11 countByEnumeratingWithState:&v27 objects:v37 count:16];
          }
          while (v13);
        }
      }
      id v6 = [v4 countByEnumeratingWithState:&v31 objects:v38 count:16];
    }
    while (v6);
  }

  [*(id *)(v25 + 32) unlock];
  id v18 = +[PDUserDefaults sharedDefaults];
  unsigned int v19 = [v18 enableVerboseLogging];

  if (v19)
  {
    CLSInitLog();
    id v20 = (void *)CLSLogDefault;
    if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_INFO))
    {
      uint64_t v21 = v20;
      id v22 = [v2 allObjects];
      *(_DWORD *)long long buf = 138412290;
      long long v36 = v22;
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_INFO, "Resetting tracked tables for all data observers to: %@.", buf, 0xCu);
    }
  }
  id v23 = objc_msgSend(*(id *)(v25 + 32), "database", v25);
  id v24 = [v2 allObjects];
  sub_1000FB29C(v23, v24, 1);
}

BOOL sub_1000CCDD4(void *a1)
{
  if (!a1 || [a1 mode]) {
    return 0;
  }
  id v2 = sub_1000062FC();
  BOOL v1 = !sub_10000C6EC((BOOL)v2);

  return v1;
}

void sub_1000CCEE0(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 56) cancelSubscription];
  id v2 = +[NSDate now];
  [*(id *)(*(void *)(a1 + 32) + 56) setDatabase:*(void *)(a1 + 40)];
  [*(id *)(*(void *)(a1 + 32) + 56) startSubscription];
  [*(id *)(*(void *)(a1 + 32) + 56) checkScheduledTask:v2 completionType:1];
  [*(id *)(*(void *)(a1 + 32) + 56) checkScheduledTask:v2 completionType:2];
}

void sub_1000CDC4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000CDC70(uint64_t a1, void *a2)
{
  unsigned int v3 = *(void **)(a1 + 32);
  uint64_t v4 = a2;
  uint64_t v5 = objc_opt_class();
  if (v4) {
    id v6 = (void *)v4[2];
  }
  else {
    id v6 = 0;
  }
  id v7 = v6;
  int v8 = [v3 select:v5 identity:v7];

  id v9 = *(void **)(a1 + 32);
  uint64_t v10 = objc_opt_class();
  if (v4) {
    uint64_t v11 = (void *)v4[3];
  }
  else {
    uint64_t v11 = 0;
  }
  id v12 = v11;

  id v13 = [v9 select:v10 identity:v12];

  v17[0] = @"role";
  uint64_t v14 = [v8 dictionaryRepresentation];
  v17[1] = @"location";
  v18[0] = v14;
  id v15 = [v13 dictionaryRepresentation];
  v18[1] = v15;
  double v16 = +[NSDictionary dictionaryWithObjects:v18 forKeys:v17 count:2];

  [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) addObject:v16];
}

void sub_1000CE850(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51)
{
}

void sub_1000CE874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v9 = a5;
  if (v9)
  {
    CLSInitLog();
    uint64_t v10 = CLSLogDefault;
    if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 138412290;
      id v20 = v9;
      _os_log_error_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "Failed to get iCloud quota info. Error: %@", buf, 0xCu);
    }
  }
  else
  {
    uint64_t v11 = +[NSNumber numberWithUnsignedInteger:a2, @"total"];
    v18[0] = v11;
    v17[1] = @"used";
    id v12 = +[NSNumber numberWithUnsignedInteger:a3];
    v18[1] = v12;
    void v17[2] = @"available";
    id v13 = +[NSNumber numberWithUnsignedInteger:a4];
    void v18[2] = v13;
    uint64_t v14 = +[NSDictionary dictionaryWithObjects:v18 forKeys:v17 count:3];
    uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8);
    double v16 = *(void **)(v15 + 40);
    *(void *)(v15 + 40) = v14;
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1000CEA08(uint64_t a1, uint64_t a2)
{
  if (a2) {
    unsigned int v3 = *(void **)(a2 + 8);
  }
  else {
    unsigned int v3 = 0;
  }
  id v4 = v3;
  [*(id *)(a1 + 32) addObject:v4];
}

void sub_1000CEA68(uint64_t a1, void *a2, unsigned char *a3)
{
  id v5 = [a2 statusReport];
  objc_msgSend(*(id *)(a1 + 32), "addObject:");
  if ([*(id *)(a1 + 32) count] == (id)500) {
    *a3 = 1;
  }
}

void sub_1000CEADC(uint64_t a1, void *a2)
{
  id v3 = [a2 dictionaryRepresentation];
  [*(id *)(a1 + 32) addObject:v3];
}

id sub_1000CED38(uint64_t a1)
{
  CLSInitLog();
  id v2 = CLSLogDefault;
  if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)id v4 = 0;
    _os_log_debug_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "daemon exiting", v4, 2u);
  }
  return [*(id *)(a1 + 32) terminateClean:1 reason:@"in response to remote request"];
}

uint64_t sub_1000CF17C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 40;
        goto LABEL_25;
      case 2u:
        uint64_t v15 = objc_alloc_init(PDDPStatus);
        objc_storeStrong((id *)(a1 + 24), v15);
        if (!PBReaderPlaceMark() || (sub_1000D3710((uint64_t)v15, a2) & 1) == 0) {
          goto LABEL_42;
        }
        goto LABEL_35;
      case 3u:
        uint64_t v12 = PBReaderReadData();
        uint64_t v13 = 8;
LABEL_25:
        double v16 = *(void **)(a1 + v13);
        *(void *)(a1 + v13) = v12;

        goto LABEL_40;
      case 4u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 48) |= 1u;
        while (2)
        {
          unint64_t v20 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v20 == -1 || v20 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v21 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v20);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v20 + 1;
            v19 |= (unint64_t)(v21 & 0x7F) << v17;
            if (v21 < 0)
            {
              v17 += 7;
              BOOL v9 = v18++ >= 9;
              if (v9)
              {
                LODWORD(v19) = 0;
                goto LABEL_39;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v19) = 0;
        }
LABEL_39:
        *(_DWORD *)(a1 + 32) = v19;
        goto LABEL_40;
      case 5u:
        uint64_t v15 = objc_alloc_init(PDDPAdminRequestRequestor);
        objc_storeStrong((id *)(a1 + 16), v15);
        if PBReaderPlaceMark() && (sub_1000A6418((uint64_t)v15, a2))
        {
LABEL_35:
          PBReaderRecallMark();

LABEL_40:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }
LABEL_42:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_40;
    }
  }
}

id sub_1000CFF3C(id result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    v3.receiver = result;
    v3.super_class = (Class)PDASMPublishAccountOperation;
    return objc_msgSendSuper2(&v3, "initWithDatabase:adminRequests:requestor:", a2, a3, 0);
  }
  return result;
}

void sub_1000D03C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL sub_1000D03E0(uint64_t a1)
{
  [*(id *)(a1 + 32) cleanupAssociatedObjects];
  if (![*(id *)(a1 + 40) hasStatus]) {
    goto LABEL_9;
  }
  id v2 = *(void **)(a1 + 48);
  objc_super v3 = [*(id *)(a1 + 40) status];
  char v4 = sub_1000F5844(v3);
  [v2 handleServerAlerts:v4];

  unsigned int v5 = [*(id *)(a1 + 40) status];
  uint64_t v6 = sub_1000F51A0(v5, 0);
  uint64_t v7 = *(void *)(*(void *)(a1 + 56) + 8);
  char v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;

  BOOL result = 0;
  if (!*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40))
  {
LABEL_9:
    if ([*(id *)(a1 + 40) hasClientConfig]
      && (int v10 = *(void **)(a1 + 48),
          [*(id *)(a1 + 40) clientConfig],
          uint64_t v11 = objc_claimAutoreleasedReturnValue(),
          LOBYTE(v10) = [v10 saveClientConfig:v11],
          v11,
          (v10 & 1) == 0))
    {
      uint64_t v18 = +[NSError cls_createErrorWithCode:100 description:@"save ClientConfig failed!"];
      uint64_t v19 = *(void *)(*(void *)(a1 + 56) + 8);
      unint64_t v20 = *(void **)(v19 + 40);
      *(void *)(v19 + 40) = v18;

      return 0;
    }
    else
    {
      uint64_t v12 = *(void **)(a1 + 48);
      uint64_t v13 = [*(id *)(a1 + 40) endpoints];
      CFStringRef v21 = @"bootstrap";
      uint64_t v14 = +[NSArray arrayWithObjects:&v21 count:1];
      uint64_t v15 = [v12 replaceEndpoints:v13 excludeEndpointIDs:v14 forServiceID:@"orion"];
      uint64_t v16 = *(void *)(*(void *)(a1 + 56) + 8);
      char v17 = *(void **)(v16 + 40);
      *(void *)(v16 + 40) = v15;

      return *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) == 0;
    }
  }
  return result;
}

id sub_1000D0ACC(uint64_t a1)
{
  id v2 = objc_alloc_init(PDConfig);
  if (*(unsigned char *)(a1 + 56))
  {
    unsigned __int8 v3 = [*(id *)(a1 + 32) sendToOnramp];
    if (v2)
    {
      v2->_maySendToIngest = v3;
      v2->_mayRecordUserActivity = [*(id *)(a1 + 32) recordActivity];
      v2->_maySyncWithCloudKit = [*(id *)(a1 + 32) sendToCloudKit];
      v2->_contextTrackingAllowed = [*(id *)(a1 + 32) isContextTrackingAllowed];
    }
    else
    {
      [*(id *)(a1 + 32) recordActivity];
      [*(id *)(a1 + 32) sendToCloudKit];
      [*(id *)(a1 + 32) isContextTrackingAllowed];
    }
  }
  if ((sub_10004778C(*(void **)(a1 + 40), v2) & 1) == 0)
  {
    CLSInitLog();
    char v4 = [*(id *)(a1 + 48) logSubsystem];
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      unsigned int v5 = objc_opt_class();
      uint64_t v6 = *(void **)(a1 + 48);
      id v7 = v5;
      char v8 = [v6 operationID];
      int v16 = 138543618;
      char v17 = v5;
      __int16 v18 = 2114;
      uint64_t v19 = v8;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%{public}@ %{public}@ failed to update PDConfig", (uint8_t *)&v16, 0x16u);
    }
  }
  id v9 = sub_1000506F8(*(id *)(a1 + 40), v2);
  if ((v9 & 1) == 0)
  {
    CLSInitLog();
    int v10 = [*(id *)(a1 + 48) logSubsystem];
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v11 = objc_opt_class();
      uint64_t v12 = *(void **)(a1 + 48);
      id v13 = v11;
      uint64_t v14 = [v12 operationID];
      int v16 = 138543618;
      char v17 = v11;
      __int16 v18 = 2114;
      uint64_t v19 = v14;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "%{public}@ %{public}@ failed to purge local progress data", (uint8_t *)&v16, 0x16u);
    }
  }

  return v9;
}

id sub_1000D0CEC()
{
  self;
  if (qword_10023E610 != -1) {
    dispatch_once(&qword_10023E610, &stru_1001F43D8);
  }
  uint64_t v0 = (void *)qword_10023E618;

  return v0;
}

void sub_1000D0D44(id a1)
{
  BOOL v1 = objc_alloc_init(PDFileManager);
  uint64_t v2 = qword_10023E618;
  qword_10023E618 = (uint64_t)v1;

  _objc_release_x1(v1, v2);
}

void sub_1000D0EBC(id a1)
{
  NSSearchPathForDirectoriesInDomains(NSLibraryDirectory, 1uLL, 1);
  id v7 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v1 = [v7 firstObject];
  if (!v1)
  {
    CLSInitLog();
    unsigned int v5 = CLSLogDatabase;
    if (os_log_type_enabled(CLSLogDatabase, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)long long buf = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "Failed to get library path", buf, 2u);
    }
    id v6 = +[NSException exceptionWithName:NSDestinationInvalidException reason:@"Failed to get library path" userInfo:0];
    objc_exception_throw(v6);
  }
  uint64_t v2 = (void *)v1;
  uint64_t v3 = +[NSURL fileURLWithPath:v1 isDirectory:1 relativeToURL:0];
  char v4 = (void *)qword_10023E620;
  qword_10023E620 = v3;
}

id sub_1000D0FC4(uint64_t a1)
{
  uint64_t v2 = (os_unfair_lock_s *)(a1 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 24));
  if (!*(void *)(a1 + 16))
  {
    char v4 = [(id)a1 topLevelDirectoryURL];
    unsigned int v5 = [v4 URLByAppendingPathComponent:@"ClassKit" isDirectory:1];

    id v18 = 0;
    id v6 = objc_msgSend(v5, "cls_createDirectoryIfNeeded:", &v18);
    id v7 = v18;
    if (!v6)
    {
      CLSInitLog();
      uint64_t v12 = (void *)CLSLogDatabase;
      if (os_log_type_enabled(CLSLogDatabase, OS_LOG_TYPE_ERROR))
      {
        id v13 = v12;
        uint64_t v14 = [v5 path];
        *(_DWORD *)long long buf = 138412546;
        unint64_t v20 = v14;
        __int16 v21 = 2112;
        id v22 = v7;
        _os_log_error_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "Failed to create directory at '%@'. Error: %@", buf, 0x16u);
      }
      uint64_t v15 = [v5 path];
      int v16 = +[NSString stringWithFormat:@"Failed to create directory at '%@'. Error: %@", v15, v7];
      id v17 = +[NSException exceptionWithName:NSDestinationInvalidException reason:v16 userInfo:0];

      objc_exception_throw(v17);
    }
    char v8 = *(void **)(a1 + 16);
    *(void *)(a1 + 16) = v6;
    id v9 = v6;
  }
  os_unfair_lock_unlock(v2);
  int v10 = *(void **)(a1 + 16);

  return v10;
}

id sub_1000D11D4(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = sub_1000D0FC4(a1);
    uint64_t v2 = [v1 URLByAppendingPathComponent:@"config" isDirectory:0];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id sub_1000D1238(uint64_t a1)
{
  uint64_t v1 = sub_1000D0FC4(a1);
  uint64_t v2 = [v1 URLByAppendingPathComponent:@"db" isDirectory:1];

  uint64_t v3 = objc_msgSend(v2, "cls_createDirectoryIfNeeded:", 0);

  return v3;
}

id sub_1000D12A8(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = sub_1000D1238(a1);
    uint64_t v2 = [v1 URLByAppendingPathComponent:@"ClassKit.db" isDirectory:0];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id sub_1000D130C(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = sub_1000D1238(a1);
    uint64_t v2 = [v1 URLByAppendingPathComponent:@"teacher.db" isDirectory:0];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id sub_1000D1370(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = sub_1000D1238(a1);
    uint64_t v2 = [v1 URLByAppendingPathComponent:@"student.db" isDirectory:0];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id sub_1000D13D4(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = sub_1000D0FC4(a1);
    uint64_t v2 = [v1 URLByAppendingPathComponent:@"responses" isDirectory:1];

    uint64_t v3 = objc_msgSend(v2, "cls_createDirectoryIfNeeded:", 0);
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id sub_1000D1450(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = sub_1000D0FC4(a1);
    uint64_t v2 = [v1 URLByAppendingPathComponent:@"UserDefaults.plist" isDirectory:0];
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

id sub_1000D14B4(uint64_t a1, uint64_t *a2)
{
  self;
  if (!a2)
  {
    uint64_t v12 = 0;
    a2 = &v12;
  }
  uint64_t v3 = +[NSFileManager defaultManager];
  id v11 = 0;
  char v4 = [v3 URLForDirectory:13 inDomain:1 appropriateForURL:0 create:1 error:&v11];
  id v5 = v11;

  if (!v4)
  {
    uint64_t v9 = +[NSError cls_createErrorWithCode:342 underlyingError:v5 description:@"Failed to get cache directory for assets."];

    char v8 = 0;
    id v5 = (id)v9;
    if (!v9) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  id v6 = [v4 URLByAppendingPathComponent:@"com.apple.progressd" isDirectory:1];

  uint64_t v7 = [v6 URLByAppendingPathComponent:@"CKContentStoreCache" isDirectory:1];

  char v8 = (void *)v7;
  if (v5)
  {
LABEL_7:
    objc_msgSend(v5, "cls_log:", CLSLogAsset);
    *a2 = (uint64_t)v5;
  }
LABEL_8:

  return v8;
}

id sub_1000D1688(uint64_t a1, void *a2, void *a3)
{
  char v4 = a2;
  uint64_t v5 = self;
  uint64_t v24 = 0;
  uint64_t v25 = &v24;
  uint64_t v26 = 0x3032000000;
  long long v27 = sub_10000B724;
  long long v28 = sub_10000B5AC;
  id v29 = 0;
  if (v4) {
    id v6 = (void *)v4[8];
  }
  else {
    id v6 = 0;
  }
  id v7 = v6;

  if (v7)
  {
    uint64_t v18 = 0;
    uint64_t v19 = &v18;
    uint64_t v20 = 0x3032000000;
    __int16 v21 = sub_10000B724;
    id v22 = sub_10000B5AC;
    id v23 = 0;
    if (v4) {
      char v8 = (void *)v4[9];
    }
    else {
      char v8 = 0;
    }
    id v9 = v8;
    id v17 = v4;
    CLSPerformWithPersona();

    int v10 = (void *)v25[5];
    if (v10)
    {
      objc_msgSend(v10, "cls_log:", CLSLogAsset, _NSConcreteStackBlock, 3221225472, sub_1000D1904, &unk_1001F4420, v17, &v18, &v24, v5, v18, v19, v20, v21, v22, v23, v24);
      id v11 = (id) v25[5];
      if (a3) {
        *a3 = v11;
      }
    }
    id v12 = (id)v19[5];

    _Block_object_dispose(&v18, 8);
  }
  else
  {
    uint64_t v13 = +[NSError cls_createErrorWithCode:342 description:@"PDAccountInfo.accountIdentifier is nil!"];
    uint64_t v14 = (void *)v25[5];
    v25[5] = v13;

    objc_msgSend((id)v25[5], "cls_log:", CLSLogAsset);
    id v15 = (id) v25[5];
    id v12 = 0;
    if (a3) {
      *a3 = v15;
    }
  }
  _Block_object_dispose(&v24, 8);

  return v12;
}

void sub_1000D18D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000D1904(void *a1)
{
  uint64_t v2 = a1[7];
  uint64_t v3 = *(void *)(a1[6] + 8);
  id obj = *(id *)(v3 + 40);
  uint64_t v4 = sub_1000D14B4(v2, (uint64_t *)&obj);
  objc_storeStrong((id *)(v3 + 40), obj);
  uint64_t v5 = *(void *)(a1[5] + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;

  id v7 = *(void **)(*(void *)(a1[5] + 8) + 40);
  if (v7)
  {
    char v8 = (void *)a1[4];
    if (v8) {
      char v8 = (void *)v8[8];
    }
    id v9 = v8;
    int v10 = [v7 URLByAppendingPathComponent:v9 isDirectory:1];

    uint64_t v11 = *(void *)(a1[6] + 8);
    id v20 = *(id *)(v11 + 40);
    uint64_t v12 = objc_msgSend(v10, "cls_createDirectoryIfNeeded:", &v20);
    objc_storeStrong((id *)(v11 + 40), v20);
    uint64_t v13 = *(void *)(a1[5] + 8);
    uint64_t v14 = *(void **)(v13 + 40);
    *(void *)(v13 + 40) = v12;

    if (!*(void *)(*(void *)(a1[5] + 8) + 40))
    {
      id v15 = [v10 path];
      int v16 = +[NSString stringWithFormat:@"Failed to create cache directory for assets at: '%@'", v15];

      uint64_t v17 = +[NSError cls_createErrorWithCode:342 underlyingError:*(void *)(*(void *)(a1[6] + 8) + 40) description:v16];
      uint64_t v18 = *(void *)(a1[6] + 8);
      uint64_t v19 = *(void **)(v18 + 40);
      *(void *)(v18 + 40) = v17;
    }
  }
}

void sub_1000D1A84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  if (a2 == 1)
  {
    id v13 = objc_begin_catch(exception_object);
    uint64_t v10 = +[NSError cls_createErrorWithCode:342 format:@"Failed to get cache directory for assets. Exception: %@"];
    uint64_t v11 = *(void *)(*(void *)(v9 + 48) + 8);
    uint64_t v12 = *(void **)(v11 + 40);
    *(void *)(v11 + 40) = v10;

    objc_end_catch();
    JUMPOUT(0x1000D1A70);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000D1AFC(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = self;
  if (!v2 || !*((unsigned char *)v2 + 8))
  {
    id v31 = 0;
    uint64_t v4 = sub_1000D14B4(v3, (uint64_t *)&v31);
    id v5 = v31;
    if (v4)
    {
      id v6 = +[NSFileManager defaultManager];
      v35[0] = NSURLIsDirectoryKey;
      v35[1] = NSURLIsRegularFileKey;
      id v7 = +[NSArray arrayWithObjects:v35 count:2];
      char v8 = [v6 enumeratorAtURL:v4 includingPropertiesForKeys:v7 options:5 errorHandler:0];

      uint64_t v24 = v4;
      if (v2) {
        uint64_t v9 = (void *)v2[8];
      }
      else {
        uint64_t v9 = 0;
      }
      uint64_t v25 = v2;
      id v10 = v9;
      long long v27 = 0u;
      long long v28 = 0u;
      long long v29 = 0u;
      long long v30 = 0u;
      id v11 = v8;
      id v12 = [v11 countByEnumeratingWithState:&v27 objects:v34 count:16];
      if (v12)
      {
        id v13 = v12;
        uint64_t v14 = *(void *)v28;
        do
        {
          for (i = 0; i != v13; i = (char *)i + 1)
          {
            if (*(void *)v28 != v14) {
              objc_enumerationMutation(v11);
            }
            int v16 = *(void **)(*((void *)&v27 + 1) + 8 * i);
            uint64_t v17 = objc_msgSend(v16, "lastPathComponent", v24);
            unsigned __int8 v18 = [v17 isEqualToString:v10];

            if ((v18 & 1) == 0)
            {
              id v26 = v5;
              unsigned __int8 v19 = [v6 removeItemAtURL:v16 error:&v26];
              id v20 = v26;

              if ((v19 & 1) == 0)
              {
                CLSInitLog();
                __int16 v21 = (void *)CLSLogAsset;
                if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_ERROR))
                {
                  id v22 = v21;
                  id v23 = [v16 path];
                  *(_DWORD *)long long buf = 138412290;
                  long long v33 = v23;
                  _os_log_error_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_ERROR, "Failed to remove cache at: '%@'", buf, 0xCu);
                }
              }
              id v5 = v20;
            }
          }
          id v13 = [v11 countByEnumeratingWithState:&v27 objects:v34 count:16];
        }
        while (v13);
      }

      uint64_t v4 = v24;
      uint64_t v2 = v25;
    }
  }
}

id sub_1000D1DB8(uint64_t a1, uint64_t a2)
{
  if (!a1) {
    return 0;
  }
  uint64_t v4 = sub_1000D1238(a1);
  id v5 = +[NSFileManager defaultManager];
  id v6 = [v5 removeItemAtURL:v4 error:a2];

  if (v6)
  {
    sub_1000D1238(a1);
  }
  return v6;
}

uint64_t sub_1000D3710(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        char v12 = 0;
        unsigned int v13 = 0;
        uint64_t v14 = 0;
        *(unsigned char *)(a1 + 48) |= 1u;
        while (1)
        {
          unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v15 == -1 || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
          v14 |= (unint64_t)(v16 & 0x7F) << v12;
          if ((v16 & 0x80) == 0) {
            goto LABEL_35;
          }
          v12 += 7;
          BOOL v9 = v13++ >= 9;
          if (v9)
          {
            LODWORD(v14) = 0;
            goto LABEL_37;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_35:
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_37:
        *(_DWORD *)(a1 + 8) = v14;
        goto LABEL_38;
      case 2u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 24;
        goto LABEL_30;
      case 3u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 32;
        goto LABEL_30;
      case 4u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 16;
LABEL_30:
        id v20 = *(void **)(a1 + v19);
        *(void *)(a1 + v19) = v18;

        goto LABEL_38;
      case 5u:
        __int16 v21 = objc_alloc_init(PDDPServerAlert);
        [(id)a1 addServerAlerts:v21];
        if PBReaderPlaceMark() && (sub_1000BD5A4((uint64_t)v21, a2))
        {
          PBReaderRecallMark();

LABEL_38:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_38;
    }
  }
}

void *sub_1000D42B8(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v8 = a2;
  if (a1)
  {
    v17.receiver = a1;
    v17.super_class = (Class)PDDataObserver;
    id v9 = objc_msgSendSuper2(&v17, "init");
    a1 = v9;
    if (v9)
    {
      *((void *)v9 + 7) = a4;
      objc_storeStrong((id *)v9 + 8, a2);
      a1[1] = a3;
      int v10 = CLSDispatchQueueName();
      id v11 = (const char *)[v10 UTF8String];
      char v12 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
      if (qword_10023E638 != -1) {
        dispatch_once(&qword_10023E638, &stru_1001F44E0);
      }
      unsigned int v13 = (id)qword_10023E630;
      dispatch_queue_t v14 = dispatch_queue_create_with_target_V2(v11, v12, v13);
      unint64_t v15 = (void *)a1[5];
      a1[5] = v14;
    }
  }

  return a1;
}

uint64_t sub_1000D43E0(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  id v8 = a2;
  id v9 = a3;
  if (a1)
  {
    if ([*(id *)(a1 + 8) conformsToProtocol:&OBJC_PROTOCOL___PDDatabaseEntity])
    {
      int v10 = [v9 predicate];
      id v11 = *(void **)(a1 + 8);
      id v29 = 0;
      sub_100046728((uint64_t)v8, v10, v11, (uint64_t)&v29);
      char v12 = (id *)objc_claimAutoreleasedReturnValue();
      id v13 = v29;

      if (v13)
      {
        +[NSError cls_assignError:a5 fromError:v13];
        unsigned __int8 v14 = 0;
      }
      else
      {
        unint64_t v15 = [(id)a1 observedTableName];
        id v31 = v15;
        char v16 = +[NSArray arrayWithObjects:&v31 count:1];
        sub_1000FB29C(v8, v16, 0);

        if (v12)
        {
          objc_super v17 = *(objc_class **)(a1 + 8);
          if (*(void *)(a1 + 56))
          {
            uint64_t v20 = sub_1000E4D2C((uint64_t)PDDatabase, v17, v12);
            __int16 v21 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v20;

            id v22 = [v9 predicate];
            id v23 = +[NSCompoundPredicate notPredicateWithSubpredicate:v22];
            uint64_t v24 = *(void **)(a1 + 8);
            id v28 = 0;
            uint64_t v19 = sub_100046728((uint64_t)v8, v23, v24, (uint64_t)&v28);
            id v13 = v28;

            uint64_t v25 = sub_1000E4D2C((uint64_t)PDDatabase, *(objc_class **)(a1 + 8), v19);
            id v26 = *(void **)(a1 + 24);
            *(void *)(a1 + 24) = v25;
          }
          else
          {
            uint64_t v18 = sub_1000E4C00((uint64_t)PDDatabase, v17, v12);
            id v13 = 0;
            uint64_t v19 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v18;
          }

          objc_storeStrong((id *)(a1 + 32), v12[2]);
        }
        else
        {
          id v13 = 0;
        }
        *(unsigned char *)(a1 + 49) = 1;
        unsigned __int8 v14 = [(id)a1 isPrepared];
      }
      unsigned __int8 v30 = v14;
    }
    else
    {
      id v13 = +[NSError cls_createErrorWithCode:2 format:@"Observed entities must be PDDatabaseEntity."];
      +[NSError cls_assignError:a5 fromError:v13];
      unsigned __int8 v30 = 0;
    }

    a1 = v30;
  }

  return a1;
}

uint64_t sub_1000D4670(uint64_t a1, void *a2)
{
  uint64_t v2 = a1;
  if (a1)
  {
    uint64_t v3 = [a2 objectForKeyedSubscript:@"PDDataWrittenTablesChanged"];
    char v4 = v3;
    if (v3 && [v3 count])
    {
      unsigned int v5 = [(id)v2 observedTableName];
      uint64_t v2 = (uint64_t)[v4 containsObject:v5];
    }
    else
    {
      uint64_t v2 = 1;
    }
  }
  return v2;
}

void sub_1000D4A0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void *sub_1000D4A4C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  if (v2) {
    uint64_t v3 = sub_1000E4E58(v2, *(objc_class **)(*(void *)(a1 + 40) + 8), 0, 0, *(void *)(*(void *)(a1 + 40) + 96));
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 40);
  unsigned int v5 = *(void **)(v4 + 16);
  if (v5)
  {
    uint64_t result = sub_1000E4E58(*(void **)(a1 + 32), *(objc_class **)(v4 + 8), v5, *(void **)(v4 + 32), *(void *)(v4 + 96));
    uint64_t v4 = *(void *)(a1 + 40);
  }
  else
  {
    uint64_t result = 0;
  }
  *(void *)(v4 + 72) = v3;
  *(void *)(*(void *)(a1 + 40) + 80) = result;
  *(void *)(*(void *)(a1 + 40) + 96) = *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
  if (*(unsigned char *)(a1 + 64)) {
    BOOL v7 = 0;
  }
  else {
    BOOL v7 = v3 == 0;
  }
  char v9 = !v7 || result != 0;
  *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = v9;
  return result;
}

void sub_1000D5180(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61)
{
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose(&a37, 8);
  _Block_object_dispose(&a43, 8);
  _Block_object_dispose(&a49, 8);
  _Block_object_dispose(&a55, 8);
  _Block_object_dispose(&a61, 8);
  _Block_object_dispose((const void *)(v61 - 256), 8);
  _Block_object_dispose((const void *)(v61 - 224), 8);
  _Block_object_dispose((const void *)(v61 - 192), 8);
  _Unwind_Resume(a1);
}

id sub_1000D5250(uint64_t a1)
{
  uint64_t v3 = *(void **)(a1 + 32);
  uint64_t v2 = *(void **)(a1 + 40);
  uint64_t v4 = (objc_class *)v3[1];
  unsigned int v5 = (void *)v3[2];
  if (!v5)
  {
    uint64_t v20 = v3[12];
    v44[0] = _NSConcreteStackBlock;
    v44[1] = 3221225472;
    v44[2] = sub_1000D553C;
    v44[3] = &unk_1001F4498;
    long long v24 = *(_OWORD *)(a1 + 64);
    long long v45 = *(_OWORD *)(a1 + 48);
    long long v46 = v24;
    uint64_t v48 = *(void *)(a1 + 128);
    void v44[4] = v3;
    long long v47 = *(_OWORD *)(a1 + 80);
    if (!v2) {
      goto LABEL_9;
    }
    id v23 = v44;
    goto LABEL_8;
  }
  unint64_t v6 = (void *)v3[4];
  uint64_t v7 = v3[12];
  v37[0] = _NSConcreteStackBlock;
  v37[1] = 3221225472;
  v37[2] = sub_1000D5674;
  v37[3] = &unk_1001F4470;
  long long v38 = *(_OWORD *)(a1 + 48);
  int8x16_t v40 = vextq_s8(*(int8x16_t *)(a1 + 72), *(int8x16_t *)(a1 + 72), 8uLL);
  uint64_t v9 = *(void *)(a1 + 88);
  uint64_t v8 = *(void *)(a1 + 96);
  uint64_t v41 = *(void *)(a1 + 64);
  uint64_t v42 = v9;
  uint64_t v43 = *(void *)(a1 + 128);
  uint64_t v39 = v8;
  v37[4] = v3;
  sub_1000E51D8(v2, v4, v5, v6, v7, v37);
  if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 104) + 8) + 24))
  {
    id v11 = *(void **)(a1 + 32);
    int v10 = *(void **)(a1 + 40);
    uint64_t v12 = (objc_class *)v11[1];
    id v13 = (void *)v11[3];
    uint64_t v14 = (void *)v11[4];
    uint64_t v15 = v11[12];
    v32[0] = _NSConcreteStackBlock;
    v32[1] = 3221225472;
    v32[2] = sub_1000D57EC;
    v32[3] = &unk_1001F4498;
    long long v16 = *(_OWORD *)(a1 + 64);
    int8x16_t v33 = vextq_s8(*(int8x16_t *)(a1 + 48), *(int8x16_t *)(a1 + 48), 8uLL);
    long long v34 = v16;
    uint64_t v17 = *(void *)(a1 + 88);
    uint64_t v18 = *(void *)(a1 + 128);
    uint64_t v35 = *(void *)(a1 + 80);
    uint64_t v36 = v18;
    v32[4] = v11;
    v32[5] = v17;
    sub_1000E51D8(v10, v12, v13, v14, v15, v32);
  }
  uint64_t v19 = *(void *)(a1 + 32);
  uint64_t v2 = *(void **)(a1 + 40);
  uint64_t v4 = *(objc_class **)(v19 + 8);
  uint64_t v20 = *(void *)(v19 + 96);
  v27[0] = _NSConcreteStackBlock;
  v27[1] = 3221225472;
  v27[2] = sub_1000D5930;
  v27[3] = &unk_1001F4498;
  uint64_t v22 = *(void *)(a1 + 64);
  uint64_t v21 = *(void *)(a1 + 72);
  v27[4] = v19;
  void v27[5] = v21;
  int8x16_t v28 = vextq_s8(*(int8x16_t *)(a1 + 48), *(int8x16_t *)(a1 + 48), 8uLL);
  uint64_t v29 = v22;
  long long v30 = *(_OWORD *)(a1 + 80);
  uint64_t v31 = *(void *)(a1 + 128);
  if (v2)
  {
    id v23 = v27;
LABEL_8:
    sub_1000E51D8(v2, v4, 0, 0, v20, v23);
  }
LABEL_9:
  id result = [*(id *)(a1 + 32) _sendClientEntitiesChangedAdded:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) updated:*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) deleted:*(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) updatedMatchingPredicate:*(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 40) updatedNotMatchingPredicate:*(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 40)];
  *(void *)(*(void *)(a1 + 32) + 72) = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24);
  *(void *)(*(void *)(a1 + 32) + 80) = *(void *)(*(void *)(*(void *)(a1 + 96) + 8) + 24);
  *(void *)(*(void *)(a1 + 32) + 96) = *(void *)(*(void *)(*(void *)(a1 + 112) + 8) + 24);
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 104) + 8) + 24)) {
    BOOL v26 = 1;
  }
  else {
    BOOL v26 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) != 0;
  }
  *(unsigned char *)(*(void *)(*(void *)(a1 + 120) + 8) + 24) = v26;
  return result;
}

void sub_1000D553C(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  int v10 = v3;
  if (v3)
  {
    int v4 = *((_DWORD *)v3 + 14);
    switch(v4)
    {
      case 3:
        uint64_t v5 = *(void *)(a1 + 64);
        break;
      case 2:
        uint64_t v5 = *(void *)(a1 + 56);
        break;
      case 1:
        uint64_t v5 = *(void *)(a1 + 40);
        break;
      default:
        goto LABEL_9;
    }
    unint64_t v6 = *(void **)(*(void *)(v5 + 8) + 40);
    id v7 = v3[4];
    [v6 addObject:v7];

    ++*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
  }
LABEL_9:
  uint64_t v8 = (char *)[*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) count];
  uint64_t v9 = &v8[(void)[*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) count]];
  if ((char *)[*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) count] + (unint64_t)v9 >= (char *)*(void *)(a1 + 88)) {
    [*(id *)(a1 + 32) _sendClientEntitiesChangedAdded:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) updated:*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) deleted:*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) updatedMatchingPredicate:*(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) updatedNotMatchingPredicate:*(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 40)];
  }
}

void sub_1000D5674(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  uint64_t v12 = v3;
  if (v3)
  {
    int v4 = *((_DWORD *)v3 + 14);
    switch(v4)
    {
      case 3:
        uint64_t v5 = *(void *)(a1 + 72);
        break;
      case 2:
        uint64_t v5 = *(void *)(a1 + 64);
        break;
      case 1:
        uint64_t v5 = *(void *)(a1 + 40);
        break;
      default:
        goto LABEL_9;
    }
    unint64_t v6 = *(void **)(*(void *)(v5 + 8) + 40);
    id v7 = v3[4];
    [v6 addObject:v7];

    ++*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
    ++*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24);
  }
LABEL_9:
  uint64_t v8 = (char *)[*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) count];
  uint64_t v9 = &v8[(void)[*(id *)(*(void *)(*(void *)(a1 + 80) + 8) + 40) count]];
  id v10 = [*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) count];
  id v11 = &v9[(unint64_t)[*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) count]
          + (void)v10];
  if ((char *)[*(id *)(*(void *)(*(void *)(a1 + 88) + 8) + 40) count] + (unint64_t)v11 >= (char *)*(void *)(a1 + 96)) {
    [*(id *)(a1 + 32) _sendClientEntitiesChangedAdded:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) updated:*(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 40) deleted:*(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) updatedMatchingPredicate:*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) updatedNotMatchingPredicate:*(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 40)];
  }
}

void sub_1000D57EC(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  id v10 = v3;
  if (v3 && *((_DWORD *)v3 + 14) == 2)
  {
    int v4 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
    id v5 = v3[4];
    [v4 addObject:v5];

    ++*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
  }
  unint64_t v6 = (char *)[*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) count];
  id v7 = &v6[(void)[*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) count]];
  id v8 = [*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) count];
  uint64_t v9 = &v7[(unint64_t)[*(id *)(*(void *)(*(void *)(a1 + 80) + 8) + 40) count] + (void)v8];
  if ((char *)[*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) count] + (unint64_t)v9 >= (char *)*(void *)(a1 + 88)) {
    [*(id *)(a1 + 32) _sendClientEntitiesChangedAdded:*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) updated:*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) deleted:*(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) updatedMatchingPredicate:*(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 40) updatedNotMatchingPredicate:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)];
  }
}

void sub_1000D5930(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  int v4 = v3;
  if (v3 && (int v5 = *((_DWORD *)v3 + 14)) != 0)
  {
    if (v5 == 3)
    {
      unint64_t v6 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
      id v7 = v3[4];
      [v6 addObject:v7];

      ++*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
    }
  }
  else
  {
    CLSInitLog();
    id v8 = (void *)CLSLogNotifications;
    if (os_log_type_enabled(CLSLogNotifications, OS_LOG_TYPE_INFO))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      id v10 = v8;
      if (v4)
      {
        id v11 = v4[4];
        id v12 = v4[6];
        id v13 = v11;
      }
      else
      {
        id v11 = 0;
        id v13 = 0;
        id v12 = 0;
      }
      id v14 = v12;
      int v19 = 134218498;
      uint64_t v20 = v9;
      __int16 v21 = 2112;
      id v22 = v11;
      __int16 v23 = 2112;
      id v24 = v14;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "<PDDataObserver: %p> encountered unknown db action for entity:%@ (%@)", (uint8_t *)&v19, 0x20u);
    }
  }
  uint64_t v15 = (char *)[*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) count];
  long long v16 = &v15[(void)[*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) count]];
  id v17 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) count];
  uint64_t v18 = &v16[(unint64_t)[*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) count]
           + (void)v17];
  if ((char *)[*(id *)(*(void *)(*(void *)(a1 + 80) + 8) + 40) count] + (unint64_t)v18 >= (char *)*(void *)(a1 + 88)) {
    [*(id *)(a1 + 32) _sendClientEntitiesChangedAdded:*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) updated:*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) deleted:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) updatedMatchingPredicate:*(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) updatedNotMatchingPredicate:*(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 40)];
  }
}

void sub_1000D5B58(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1 && [a1 isPrepared])
  {
    objc_initWeak(&location, a1);
    id v8 = a1[5];
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    void v9[2] = sub_1000D5C6C;
    v9[3] = &unk_1001F2620;
    objc_copyWeak(&v12, &location);
    id v10 = v6;
    id v11 = v5;
    dispatch_sync(v8, v9);

    objc_destroyWeak(&v12);
    objc_destroyWeak(&location);
  }
}

void sub_1000D5C6C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v3 = WeakRetained;
  if (WeakRetained)
  {
    int v4 = NSStringFromClass(*((Class *)WeakRetained + 1));
    id v5 = +[PDUserDefaults sharedDefaults];
    unsigned int v6 = [v5 enableVerboseLogging];

    if (v6)
    {
      CLSInitLog();
      id v7 = CLSLogNotifications;
      if (os_log_type_enabled(CLSLogNotifications, OS_LOG_TYPE_INFO))
      {
        uint64_t v8 = *(void *)(a1 + 32);
        int v10 = 134218498;
        id v11 = v3;
        __int16 v12 = 2112;
        id v13 = v4;
        __int16 v14 = 2112;
        uint64_t v15 = v8;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "<PDDataObserver: %p> entity:%@ checking for changes. changeInfo:%@", (uint8_t *)&v10, 0x20u);
      }
    }
    uint64_t v9 = *(void *)(a1 + 40);
    if (v3[56]) {
      [v3 _entitiesChangedSinceLastTrigger:v9];
    }
    else {
      [v3 _entityCountsChangedSinceLastTrigger:v9];
    }
  }
}

unsigned __int8 *sub_1000D5DA8(Class *a1)
{
  uint64_t v1 = (unsigned __int8 *)a1;
  if (a1)
  {
    v15[0] = @"entity";
    uint64_t v2 = NSStringFromClass(a1[1]);
    uint64_t v3 = (void *)v2;
    CFStringRef v4 = (const __CFString *)*((void *)v1 + 2);
    if (!v4) {
      CFStringRef v4 = @"(null)";
    }
    v16[0] = v2;
    v16[1] = v4;
    v15[1] = @"whereSQL";
    v15[2] = @"bindings";
    CFStringRef v5 = (const __CFString *)*((void *)v1 + 4);
    if (!v5) {
      CFStringRef v5 = @"(null)";
    }
    v16[2] = v5;
    v15[3] = @"invalidated";
    unsigned int v6 = +[NSNumber numberWithBool:v1[48]];
    v16[3] = v6;
    void v15[4] = @"prepared";
    id v7 = +[NSNumber numberWithBool:](NSNumber, "numberWithBool:", [v1 isPrepared]);
    void v16[4] = v7;
    void v15[5] = @"changedEntitiesCount";
    uint64_t v8 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [v1 changedEntitiesCount]);
    v16[5] = v8;
    v15[6] = @"changedMatchingEntitiesCount";
    uint64_t v9 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [v1 changedMatchingEntitiesCount]);
    v16[6] = v9;
    v15[7] = @"last trigger date";
    int v10 = [v1 lastTriggerDate];
    uint64_t v11 = [v10 description];
    __int16 v12 = (void *)v11;
    CFStringRef v13 = @"Never";
    if (v11) {
      CFStringRef v13 = (const __CFString *)v11;
    }
    void v16[7] = v13;
    uint64_t v1 = +[NSDictionary dictionaryWithObjects:v16 forKeys:v15 count:8];
  }

  return v1;
}

void sub_1000D62F0(id a1)
{
  uint64_t v1 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  attr = dispatch_queue_attr_make_with_qos_class(v1, QOS_CLASS_USER_INITIATED, 0);

  uint64_t v2 = dispatch_get_global_queue(25, 0);
  dispatch_queue_t v3 = dispatch_queue_create_with_target_V2("com.apple.progressd.dataObservers", attr, v2);
  CFStringRef v4 = (void *)qword_10023E630;
  qword_10023E630 = (uint64_t)v3;
}

void sub_1000D6640(id *a1, void *a2, unsigned char *a3)
{
  id v5 = a2;
  id v6 = a1[4];
  uint64_t v7 = [v6 stats];
  uint64_t v8 = (void *)v7;
  if (v7) {
    uint64_t v9 = *(void *)(v7 + 80);
  }
  else {
    uint64_t v9 = 0;
  }
  uint64_t v10 = [a1[4] stats];
  uint64_t v11 = (void *)v10;
  if (v10) {
    uint64_t v12 = *(void *)(v10 + 112);
  }
  else {
    uint64_t v12 = 0;
  }
  unsigned int v13 = [v6 hasReachedRequestPayloadLimitBytes:v9 count:v12];

  if (v13)
  {
    *a3 = 1;
  }
  else
  {
    __int16 v14 = sub_100027324(v5);
    [a1[5] addEvents:v14];
    uint64_t v15 = [a1[5] data];
    [a1[5] clearEvents];
    long long v16 = [a1[4] stats];
    id v17 = [v15 length];
    if (v16) {
      v16[10] += v17;
    }

    id v18 = a1[4];
    uint64_t v19 = [v18 stats];
    uint64_t v20 = (void *)v19;
    if (v19) {
      uint64_t v21 = *(void *)(v19 + 80);
    }
    else {
      uint64_t v21 = 0;
    }
    uint64_t v22 = [a1[4] stats];
    __int16 v23 = (void *)v22;
    if (v22) {
      uint64_t v24 = *(void *)(v22 + 112);
    }
    else {
      uint64_t v24 = 0;
    }
    unsigned int v25 = [v18 hasReachedRequestPayloadLimitBytes:v21 count:v24];

    if (v25)
    {
      *a3 = 1;
      BOOL v26 = [a1[4] stats];
      id v27 = [v15 length];
      if (v26) {
        v26[10] -= v27;
      }
    }
    else
    {
      [a1[6] writeData:v15];
      int8x16_t v28 = [a1[4] stats];
      if (v28) {
        ++v28[14];
      }

      CLSInitLog();
      uint64_t v29 = [a1[4] logSubsystem];
      if (os_log_type_enabled(v29, OS_LOG_TYPE_DEBUG))
      {
        long long v30 = objc_opt_class();
        id v31 = a1[4];
        id v32 = v30;
        int8x16_t v33 = [v31 operationID];
        long long v34 = [v14 dictionaryRepresentation];
        int v35 = 138543874;
        uint64_t v36 = v30;
        __int16 v37 = 2114;
        long long v38 = v33;
        __int16 v39 = 2112;
        int8x16_t v40 = v34;
        _os_log_debug_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEBUG, "%{public}@ %{public}@ wrote event: %@", (uint8_t *)&v35, 0x20u);
      }
    }
  }
}

uint64_t sub_1000D7568(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v12 = PBReaderReadString();
        unsigned int v13 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = v12;

        continue;
      case 2u:
        uint64_t v15 = PBReaderReadString();
        if (v15) {
          [(id)a1 addHandoutIds:v15];
        }
        goto LABEL_32;
      case 3u:
        char v16 = 0;
        unsigned int v17 = 0;
        uint64_t v18 = 0;
        *(unsigned char *)(a1 + 40) |= 1u;
        break;
      case 4u:
        uint64_t v15 = PBReaderReadString();
        if (v15) {
          [(id)a1 addStudentIds:v15];
        }
LABEL_32:

        continue;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        continue;
    }
    while (1)
    {
      unint64_t v19 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v19 == -1 || v19 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v20 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v19);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v19 + 1;
      v18 |= (unint64_t)(v20 & 0x7F) << v16;
      if ((v20 & 0x80) == 0) {
        goto LABEL_34;
      }
      v16 += 7;
      BOOL v9 = v17++ >= 9;
      if (v9)
      {
        LODWORD(v18) = 0;
        goto LABEL_36;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_34:
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      LODWORD(v18) = 0;
    }
LABEL_36:
    *(_DWORD *)(a1 + 16) = v18;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_1000D8DE8(uint64_t a1, void *a2, unsigned char *a3)
{
  unsigned int v5 = a2;
  unint64_t v6 = *(void **)(a1 + 32);
  uint64_t v7 = [v6 stats];
  char v8 = (void *)v7;
  if (v7) {
    uint64_t v9 = *(void *)(v7 + 80);
  }
  else {
    uint64_t v9 = 0;
  }
  uint64_t v10 = [*(id *)(a1 + 32) stats];
  uint64_t v11 = (void *)v10;
  if (v10) {
    uint64_t v12 = *(void *)(v10 + 112);
  }
  else {
    uint64_t v12 = 0;
  }
  unsigned int v13 = [v6 hasReachedRequestPayloadLimitBytes:v9 count:v12];

  if (!v13)
  {
    __int16 v14 = objc_alloc_init(PDDPIngestItem);
    uint64_t v15 = v14;
    if (v5)
    {
      id v16 = v5[3];
      [(PDDPIngestItem *)v15 setObjectId:v16];

      id v17 = v5[2];
    }
    else
    {
      [(PDDPIngestItem *)v14 setObjectId:0];
      id v17 = 0;
    }
    -[PDDPIngestItem setSyncType:](v15, "setSyncType:", [v17 syncType]);
    if (v5)
    {
      if (*((unsigned char *)v5 + 8))
      {
        [(PDDPIngestItem *)v15 setAction:2];
LABEL_20:
        [*(id *)(a1 + 56) addItems:v15];
        uint64_t v22 = [*(id *)(a1 + 56) data];
        [*(id *)(a1 + 56) clearItems];
        id v31 = [*(id *)(a1 + 32) stats];
        id v32 = [v22 length];
        if (v31) {
          v31[10] += v32;
        }

        int8x16_t v33 = *(void **)(a1 + 32);
        uint64_t v34 = [v33 stats];
        int v35 = (void *)v34;
        if (v34) {
          uint64_t v36 = *(void *)(v34 + 80);
        }
        else {
          uint64_t v36 = 0;
        }
        uint64_t v37 = [*(id *)(a1 + 32) stats];
        long long v38 = (void *)v37;
        if (v37) {
          uint64_t v39 = *(void *)(v37 + 112);
        }
        else {
          uint64_t v39 = 0;
        }
        unsigned int v40 = [v33 hasReachedRequestPayloadLimitBytes:v36 count:v39];

        if (v40)
        {
          *a3 = 1;
          uint64_t v41 = [*(id *)(a1 + 32) stats];
          id v42 = [v22 length];
          if (v41) {
            v41[10] -= v42;
          }
        }
        else
        {
          [*(id *)(a1 + 64) writeData:v22];
          uint64_t v43 = [*(id *)(a1 + 32) stats];
          if (v43) {
            ++v43[14];
          }

          CLSInitLog();
          long long v44 = [*(id *)(a1 + 32) logSubsystem];
          if (os_log_type_enabled(v44, OS_LOG_TYPE_DEBUG))
          {
            __int16 v51 = objc_opt_class();
            id v52 = *(void **)(a1 + 32);
            id v53 = v51;
            uint64_t v54 = [v52 operationID];
            long long v55 = [(PDDPIngestItem *)v15 dictionaryRepresentation];
            int v58 = 138543874;
            id v59 = v51;
            __int16 v60 = 2114;
            uint64_t v61 = v54;
            __int16 v62 = 2112;
            uint64_t v63 = v55;
            _os_log_debug_impl((void *)&_mh_execute_header, v44, OS_LOG_TYPE_DEBUG, "%{public}@ %{public}@ wrote ingest item: %@", (uint8_t *)&v58, 0x20u);
          }
        }
        goto LABEL_39;
      }
      [(PDDPIngestItem *)v15 setAction:1];
      id v19 = v5[2];
      id v18 = v5[3];
    }
    else
    {
      [(PDDPIngestItem *)v15 setAction:1];
      id v19 = 0;
      id v18 = 0;
    }
    char v20 = *(void **)(a1 + 40);
    id v21 = v18;
    uint64_t v22 = [v20 select:v19 identity:v21];

    __int16 v23 = sub_10001F01C(v22, *(void **)(a1 + 40));
    [(PDDPIngestItem *)v15 setProgressEntity:v23];

    uint64_t v24 = [(PDDPIngestItem *)v15 progressEntity];
    LODWORD(v21) = [v24 hasDateCreated];

    if (v21)
    {
      uint64_t v25 = *(unsigned int *)(a1 + 72);
      BOOL v26 = [(PDDPIngestItem *)v15 progressEntity];
      id v27 = [v26 dateCreated];
      [v27 setTimezoneOffset:v25];
    }
    if (sub_10001EB7C(v22, *(void **)(a1 + 40)))
    {
      uint64_t v28 = sub_10001ED20(v22, *(void **)(a1 + 40));
      if (!v28)
      {
        CLSInitLog();
        long long v45 = [*(id *)(a1 + 32) logSubsystem];
        if (os_log_type_enabled(v45, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v56 = objc_opt_class();
          long long v57 = *(void **)(a1 + 32);
          id v48 = v56;
          char v49 = [v57 operationID];
          int v58 = 138543874;
          id v59 = v56;
          __int16 v60 = 2114;
          uint64_t v61 = v49;
          __int16 v62 = 2112;
          uint64_t v63 = v15;
          uint64_t v50 = "%{public}@ %{public}@ skipped ingest item: %@ was not able to populate PDDPHandoutAuthorizedMetaInfo";
          goto LABEL_42;
        }
LABEL_38:

        [*(id *)(a1 + 48) addObject:v5];
LABEL_39:

        goto LABEL_40;
      }
      uint64_t v29 = (void *)v28;
      [(PDDPIngestItem *)v15 addHandoutAuthorizedMetaInfo:v28];
    }
    long long v30 = [(PDDPIngestItem *)v15 progressEntity];

    if (v30)
    {

      goto LABEL_20;
    }
    CLSInitLog();
    long long v45 = [*(id *)(a1 + 32) logSubsystem];
    if (os_log_type_enabled(v45, OS_LOG_TYPE_DEBUG))
    {
      long long v46 = objc_opt_class();
      long long v47 = *(void **)(a1 + 32);
      id v48 = v46;
      char v49 = [v47 operationID];
      int v58 = 138543874;
      id v59 = v46;
      __int16 v60 = 2114;
      uint64_t v61 = v49;
      __int16 v62 = 2112;
      uint64_t v63 = v15;
      uint64_t v50 = "%{public}@ %{public}@ skipped ingest item: %@";
LABEL_42:
      _os_log_debug_impl((void *)&_mh_execute_header, v45, OS_LOG_TYPE_DEBUG, v50, (uint8_t *)&v58, 0x20u);

      goto LABEL_38;
    }
    goto LABEL_38;
  }
  *a3 = 1;
LABEL_40:
}

uint64_t sub_1000D9370(uint64_t a1)
{
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v10;
    while (2)
    {
      unint64_t v6 = 0;
      do
      {
        if (*(void *)v10 != v5) {
          objc_enumerationMutation(v2);
        }
        if (!objc_msgSend(*(id *)(a1 + 40), "deleteObject:", *(void *)(*((void *)&v9 + 1) + 8 * (void)v6), (void)v9))
        {
          uint64_t v7 = 0;
          goto LABEL_11;
        }
        unint64_t v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
      if (v4) {
        continue;
      }
      break;
    }
  }
  uint64_t v7 = 1;
LABEL_11:

  return v7;
}

id sub_1000DA200(void *a1)
{
  id v1 = a1;
  if (a1)
  {
    id v2 = +[NSURL URLWithString:a1[7]];
    id v3 = +[NSURLComponents componentsWithURL:v2 resolvingAgainstBaseURL:1];

    if (v3)
    {
      id v1 = [v3 URL];
    }
    else
    {
      id v1 = 0;
    }
  }

  return v1;
}

void sub_1000DA380(_Unwind_Exception *a1, int a2)
{
  if (a2)
  {
    objc_end_catch();
    JUMPOUT(0x1000DA390);
  }
  _Unwind_Resume(a1);
}

void sub_1000DA3A0(_Unwind_Exception *a1)
{
}

void sub_1000DA3AC(uint64_t a1, int a2)
{
  if (a2) {
    objc_terminate();
  }
  JUMPOUT(0x1000DA3B8);
}

BOOL sub_1000DA3C0(BOOL result)
{
  if (result)
  {
    double v1 = *(double *)(result + 16);
    if (v1 == 0.0) {
      return 0;
    }
    uint64_t v2 = *(void *)(result + 80);
    if (!v2)
    {
      return 0;
    }
    else
    {
      double v3 = v1 + (double)v2;
      id v4 = +[NSDate date];
      [v4 timeIntervalSinceReferenceDate];
      double v6 = v5;

      return v6 > v3;
    }
  }
  return result;
}

uint64_t sub_1000DA438(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  double v2 = *(double *)(a1 + 24);
  if (v2 == 0.0) {
    return 0;
  }
  uint64_t v3 = *(void *)(a1 + 32);
  double v4 = v3 ? exp2((double)v3) : 0.0;
  double v5 = v2 + v4;
  double v6 = +[NSDate date];
  [v6 timeIntervalSinceReferenceDate];
  double v8 = v7;

  if (v5 <= v8) {
    return 0;
  }
  CLSInitLog();
  long long v9 = CLSLogOperations;
  uint64_t v10 = 1;
  if (os_log_type_enabled(CLSLogOperations, OS_LOG_TYPE_INFO))
  {
    uint64_t v11 = *(void *)(a1 + 48);
    uint64_t v12 = *(void *)(a1 + 32);
    int v15 = 138412802;
    if (v12) {
      CFStringRef v13 = @"to cooldown";
    }
    else {
      CFStringRef v13 = @"because server is busy";
    }
    uint64_t v16 = v11;
    __int16 v17 = 2048;
    double v18 = v5 - v8;
    __int16 v19 = 2112;
    CFStringRef v20 = v13;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "endpoint %@ needs %f seconds %@.", (uint8_t *)&v15, 0x20u);
  }
  return v10;
}

id sub_1000DAF60(void *a1, void *a2)
{
  id v2 = a1;
  if (a1)
  {
    v11[0] = @"lastSuccessTime";
    id v3 = a2;
    double v4 = +[NSDate date];
    [v4 timeIntervalSinceReferenceDate];
    double v5 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
    v12[0] = v5;
    v12[1] = &off_10020AF08;
    v11[1] = @"lastFailureTime";
    void v11[2] = @"failureCounter";
    v12[2] = &off_10020AF08;
    double v6 = +[NSDictionary dictionaryWithObjects:v12 forKeys:v11 count:3];

    uint64_t v7 = objc_opt_class();
    id v10 = v3;
    double v8 = +[NSArray arrayWithObjects:&v10 count:1];

    id v2 = [v2 updateAll:v7 set:v6 where:@"identifier = ?" bindings:v8];
  }
  return v2;
}

id sub_1000DB0BC(id a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    uint64_t v4 = [a1 select:objc_opt_class() identity:v3];
    double v5 = (void *)v4;
    if (v4)
    {
      uint64_t v6 = *(void *)(v4 + 32);
      if (v6 >= 8) {
        uint64_t v6 = 8;
      }
      uint64_t v7 = v6 + 1;
    }
    else
    {
      uint64_t v7 = 0;
    }
    v16[0] = @"lastFailureTime";
    double v8 = +[NSDate date];
    [v8 timeIntervalSinceReferenceDate];
    long long v9 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
    v16[1] = @"failureCounter";
    v17[0] = v9;
    id v10 = +[NSNumber numberWithInteger:v7];
    v17[1] = v10;
    uint64_t v11 = +[NSDictionary dictionaryWithObjects:v17 forKeys:v16 count:2];

    uint64_t v12 = objc_opt_class();
    id v15 = v3;
    CFStringRef v13 = +[NSArray arrayWithObjects:&v15 count:1];
    a1 = [a1 updateAll:v12 set:v11 where:@"identifier = ?" bindings:v13];
  }
  return a1;
}

id sub_1000DB264(void *a1, void *a2)
{
  id v2 = a1;
  if (a1)
  {
    id v3 = a2;
    uint64_t v4 = objc_opt_class();
    id v7 = v3;
    double v5 = +[NSArray arrayWithObjects:&v7 count:1];

    id v2 = [v2 updateAll:v4 set:&off_10020B290 where:@"identifier = ?" bindings:v5];
  }
  return v2;
}

id sub_1000DB330(void *a1, void *a2, uint64_t a3)
{
  id v3 = a1;
  if (a1)
  {
    uint64_t v4 = 3600;
    if (a3 < 3600) {
      uint64_t v4 = a3;
    }
    double v5 = (double)v4;
    id v6 = a2;
    id v7 = +[NSDate dateWithTimeIntervalSinceNow:v5];
    v14[0] = @"lastFailureTime";
    [v7 timeIntervalSinceReferenceDate];
    double v8 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
    v14[1] = @"failureCounter";
    v15[0] = v8;
    v15[1] = &off_10020AF08;
    long long v9 = +[NSDictionary dictionaryWithObjects:v15 forKeys:v14 count:2];

    uint64_t v10 = objc_opt_class();
    id v13 = v6;
    uint64_t v11 = +[NSArray arrayWithObjects:&v13 count:1];

    id v3 = [v3 updateAll:v10 set:v9 where:@"identifier = ?" bindings:v11];
  }
  return v3;
}

id sub_1000DB49C(id a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  if (a1)
  {
    if (v3)
    {
      id v8 = v3;
      double v5 = +[NSArray arrayWithObjects:&v8 count:1];
      CFStringRef v6 = @"serviceID = ?";
    }
    else
    {
      double v5 = 0;
      CFStringRef v6 = 0;
    }
    a1 = [a1 updateAll:objc_opt_class() set:&off_10020B2B8 where:v6 bindings:v5];
  }
  return a1;
}

id *sub_1000DBAB8(id *a1, void *a2, void *a3)
{
  id v6 = a2;
  id v7 = a3;
  if (a1)
  {
    v18.receiver = a1;
    v18.super_class = (Class)PDServerScheduledEvent;
    a1 = (id *)objc_msgSendSuper2(&v18, "init");
    if (a1)
    {
      id v8 = v7;
      id v9 = v6;
      self;
      [v8 timeIntervalSinceReferenceDate];
      uint64_t v11 = v10;

      uint64_t v12 = +[NSString stringWithFormat:@"%@:%f", v9, v11];

      uint64_t v13 = [v12 sha224];

      id v14 = a1[1];
      a1[1] = (id)v13;

      objc_storeStrong(a1 + 2, a2);
      uint64_t v15 = +[NSDate date];
      id v16 = a1[3];
      a1[3] = (id)v15;

      objc_storeStrong(a1 + 4, a1[3]);
      objc_storeStrong(a1 + 5, a3);
    }
  }

  return a1;
}

uint64_t sub_1000DDFFC(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 112;
        goto LABEL_82;
      case 2u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 16;
        goto LABEL_82;
      case 3u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 80;
        goto LABEL_82;
      case 4u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 96;
        goto LABEL_82;
      case 5u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 64;
        goto LABEL_82;
      case 6u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 88;
        goto LABEL_82;
      case 7u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 56;
        goto LABEL_82;
      case 8u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 144;
        goto LABEL_82;
      case 9u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 152;
        goto LABEL_82;
      case 0xAu:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 136;
        goto LABEL_82;
      case 0xBu:
        char v15 = 0;
        unsigned int v16 = 0;
        uint64_t v17 = 0;
        *(unsigned char *)(a1 + 172) |= 2u;
        while (2)
        {
          unint64_t v18 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v18 == -1 || v18 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v19 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v18);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v18 + 1;
            v17 |= (unint64_t)(v19 & 0x7F) << v15;
            if (v19 < 0)
            {
              v15 += 7;
              BOOL v9 = v16++ >= 9;
              if (v9)
              {
                LODWORD(v17) = 0;
                goto LABEL_88;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v17) = 0;
        }
LABEL_88:
        uint64_t v42 = 104;
        goto LABEL_106;
      case 0xCu:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        *(unsigned char *)(a1 + 172) |= 8u;
        while (2)
        {
          unint64_t v23 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v23 == -1 || v23 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v23);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v23 + 1;
            v22 |= (unint64_t)(v24 & 0x7F) << v20;
            if (v24 < 0)
            {
              v20 += 7;
              BOOL v9 = v21++ >= 9;
              if (v9)
              {
                uint64_t v22 = 0;
                goto LABEL_92;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v22 = 0;
        }
LABEL_92:
        BOOL v43 = v22 != 0;
        uint64_t v44 = 169;
        goto LABEL_101;
      case 0xDu:
        char v25 = 0;
        unsigned int v26 = 0;
        uint64_t v27 = 0;
        *(unsigned char *)(a1 + 172) |= 4u;
        while (2)
        {
          unint64_t v28 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v28 == -1 || v28 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v29 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v28);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v28 + 1;
            v27 |= (unint64_t)(v29 & 0x7F) << v25;
            if (v29 < 0)
            {
              v25 += 7;
              BOOL v9 = v26++ >= 9;
              if (v9)
              {
                uint64_t v27 = 0;
                goto LABEL_96;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v27 = 0;
        }
LABEL_96:
        BOOL v43 = v27 != 0;
        uint64_t v44 = 168;
        goto LABEL_101;
      case 0xEu:
        long long v30 = objc_alloc_init(PDDPDate);
        uint64_t v31 = 24;
        goto LABEL_53;
      case 0xFu:
        long long v30 = objc_alloc_init(PDDPDate);
        uint64_t v31 = 32;
LABEL_53:
        objc_storeStrong((id *)(a1 + v31), v30);
        if (!PBReaderPlaceMark() || (PDDPDateReadFrom((uint64_t)v30, a2) & 1) == 0) {
          goto LABEL_108;
        }
        goto LABEL_73;
      case 0x10u:
        long long v30 = objc_alloc_init(PDDPPersonLinkId);
        [(id)a1 addPersonLinks:v30];
        if (!PBReaderPlaceMark() || !sub_100047968((uint64_t)v30, a2)) {
          goto LABEL_108;
        }
        goto LABEL_73;
      case 0x11u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 40;
        goto LABEL_82;
      case 0x12u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 72;
        goto LABEL_82;
      case 0x13u:
        long long v30 = objc_alloc_init(PDDPRoleLocation);
        [(id)a1 addRoleLocations:v30];
        if (!PBReaderPlaceMark() || (sub_10008601C((uint64_t)v30, a2) & 1) == 0) {
          goto LABEL_108;
        }
        goto LABEL_73;
      case 0x14u:
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v34 = 0;
        *(unsigned char *)(a1 + 172) |= 0x10u;
        while (2)
        {
          unint64_t v35 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v35 == -1 || v35 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v36 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v35);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v35 + 1;
            v34 |= (unint64_t)(v36 & 0x7F) << v32;
            if (v36 < 0)
            {
              v32 += 7;
              BOOL v9 = v33++ >= 9;
              if (v9)
              {
                uint64_t v34 = 0;
                goto LABEL_100;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v34 = 0;
        }
LABEL_100:
        BOOL v43 = v34 != 0;
        uint64_t v44 = 170;
LABEL_101:
        *(unsigned char *)(a1 + v44) = v43;
        goto LABEL_83;
      case 0x15u:
        long long v30 = objc_alloc_init(PDDPEntityMeta);
        objc_storeStrong((id *)(a1 + 48), v30);
        if PBReaderPlaceMark() && (sub_1000A7408((uint64_t)v30, a2))
        {
LABEL_73:
          PBReaderRecallMark();

LABEL_83:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }
LABEL_108:

        return 0;
      case 0x16u:
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v17 = 0;
        *(unsigned char *)(a1 + 172) |= 1u;
        while (2)
        {
          unint64_t v39 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v39 == -1 || v39 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v40 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v39);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v39 + 1;
            v17 |= (unint64_t)(v40 & 0x7F) << v37;
            if (v40 < 0)
            {
              v37 += 7;
              BOOL v9 = v38++ >= 9;
              if (v9)
              {
                LODWORD(v17) = 0;
                goto LABEL_105;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v17) = 0;
        }
LABEL_105:
        uint64_t v42 = 8;
LABEL_106:
        *(_DWORD *)(a1 + v42) = v17;
        goto LABEL_83;
      case 0x17u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 128;
LABEL_82:
        uint64_t v41 = *(void **)(a1 + v13);
        *(void *)(a1 + v13) = v12;

        goto LABEL_83;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_83;
    }
  }
}

uint64_t sub_1000E0FD8(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    unint64_t v12 = v6 >> 3;
    if ((v6 >> 3) == 3)
    {
      char v15 = objc_alloc_init(PDDPTypedValue);
      objc_storeStrong((id *)(a1 + 24), v15);
      if (!PBReaderPlaceMark() || (sub_10014AA8C((uint64_t)v15, a2) & 1) == 0)
      {

        return 0;
      }
      PBReaderRecallMark();
    }
    else if (v12 == 2)
    {
      char v16 = 0;
      unsigned int v17 = 0;
      uint64_t v18 = 0;
      *(unsigned char *)(a1 + 32) |= 1u;
      while (1)
      {
        unint64_t v19 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v19 == -1 || v19 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v20 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v19);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v19 + 1;
        v18 |= (unint64_t)(v20 & 0x7F) << v16;
        if ((v20 & 0x80) == 0) {
          goto LABEL_34;
        }
        v16 += 7;
        BOOL v9 = v17++ >= 9;
        if (v9)
        {
          LODWORD(v18) = 0;
          goto LABEL_36;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_34:
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        LODWORD(v18) = 0;
      }
LABEL_36:
      *(_DWORD *)(a1 + 16) = v18;
    }
    else if (v12 == 1)
    {
      uint64_t v13 = PBReaderReadString();
      id v14 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = v13;
    }
    else
    {
      uint64_t result = PBReaderSkipValueWithTag();
      if (!result) {
        return result;
      }
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void *sub_1000E174C(void *a1, void *a2, double a3)
{
  id v5 = a2;
  if (a1)
  {
    [a1 timeIntervalSinceDate:v5];
    double v7 = v6;
    id v8 = [a1 compare:v5];
    if (v8 == (id)-1 && v7 > -a3)
    {
      a1 = 0;
    }
    else if (v7 < a3 && v8 == (id)1)
    {
      a1 = 0;
    }
    else
    {
      a1 = v8;
    }
  }

  return a1;
}

void sub_1000E1D34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location)
{
  objc_destroyWeak(v12);
  objc_destroyWeak(v11);
  objc_destroyWeak(v10);
  objc_destroyWeak(v9);
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v13 - 168));
  _Unwind_Resume(a1);
}

void sub_1000E1D88()
{
}

void sub_1000E1D90()
{
}

void sub_1000E1D98(uint64_t a1)
{
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  id obj = *(id *)(a1 + 32);
  id v2 = [obj countByEnumeratingWithState:&v17 objects:v21 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v18;
    do
    {
      id v5 = 0;
      do
      {
        if (*(void *)v18 != v4) {
          objc_enumerationMutation(obj);
        }
        double v6 = *(void **)(*((void *)&v17 + 1) + 8 * (void)v5);
        id v8 = objc_alloc_init((Class)CKFetchRecordZoneChangesConfiguration);
        BOOL v9 = *(void **)(a1 + 40);
        uint64_t v10 = objc_opt_class();
        uint64_t v11 = [v6 zoneName];
        unint64_t v12 = [v9 select:v10 identity:v11];

        if (v12) {
          uint64_t v13 = (void *)v12[1];
        }
        else {
          uint64_t v13 = 0;
        }
        id v14 = v13;
        [v8 setPreviousServerChangeToken:v14];

        [v8 setResultsLimit:600];
        [*(id *)(a1 + 48) setObject:v8 forKey:v6];

        id v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      id v15 = [obj countByEnumeratingWithState:&v17 objects:v21 count:16];
      id v3 = v15;
    }
    while (v15);
  }
}

void sub_1000E1F48(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  if (v8)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    if (WeakRetained)
    {
      unint64_t v12 = WeakRetained;
      if (([WeakRetained isAborted] & 1) == 0) {
        [v12 serverChangedRecord:v8];
      }
    }
  }
  else
  {
    CLSInitLog();
    uint64_t v13 = CLSLogSync;
    if (os_log_type_enabled(CLSLogSync, OS_LOG_TYPE_ERROR))
    {
      int v14 = 138543618;
      id v15 = v7;
      __int16 v16 = 2114;
      id v17 = v9;
      _os_log_error_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "Failed to get changed CK record; recordID: %{public}@, error: %{public}@",
        (uint8_t *)&v14,
        0x16u);
    }
  }
}

void sub_1000E207C(uint64_t a1, void *a2, void *a3)
{
  id v9 = a2;
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v8 = WeakRetained;
  if (WeakRetained && ([WeakRetained isAborted] & 1) == 0) {
    [v8 serverDeletedRecordWithID:v9 type:v5];
  }
}

void sub_1000E2118(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v15 = a2;
  id v7 = a3;
  id v8 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v11 = WeakRetained;
  if (WeakRetained && ([WeakRetained isAborted] & 1) == 0)
  {
    unint64_t v12 = objc_alloc_init(PDCKRecordZone);
    uint64_t v13 = [v15 zoneName];
    sub_100075F50((uint64_t)v12, v13);

    sub_100075F30((uint64_t)v12, v7);
    sub_100075F40((uint64_t)v12, v8);
    int v14 = [v11 database];
    [v14 insertOrUpdateObject:v12];
  }
}

void sub_1000E2224(uint64_t a1, void *a2, void *a3, void *a4, int a5, void *a6)
{
  id v21 = a2;
  id v11 = a3;
  id v12 = a4;
  id v13 = a6;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  __int16 v16 = WeakRetained;
  if (WeakRetained && ([WeakRetained isAborted] & 1) == 0)
  {
    unsigned int v17 = [v16 isExpiredSyncTokenError:v13];
    long long v18 = objc_alloc_init(PDCKRecordZone);
    long long v19 = [v21 zoneName];
    sub_100075F50((uint64_t)v18, v19);

    if (v17)
    {
      sub_100075F30((uint64_t)v18, 0);
    }
    else
    {
      sub_100075F30((uint64_t)v18, v11);
      sub_100075F40((uint64_t)v18, v12);
    }
    long long v20 = [v16 database];
    [v20 insertOrUpdateObject:v18];

    if ((v17 | a5) == 1) {
      [*(id *)(a1 + 32) addObject:v21];
    }
  }
}

uint64_t sub_1000E238C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    id v7 = WeakRetained;
    id WeakRetained = [WeakRetained isAborted];
    id v3 = v7;
    if ((WeakRetained & 1) == 0)
    {
      id v4 = [*(id *)(a1 + 32) count];
      id v5 = *(void **)(a1 + 40);
      if (v4) {
        id WeakRetained = [v5 fetchChangesInZonesWithZoneIDs:*(void *)(a1 + 32)];
      }
      else {
        id WeakRetained = [v5 markAsFinished];
      }
      id v3 = v7;
    }
  }

  return _objc_release_x1(WeakRetained, v3);
}

void sub_1000E2608(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000E262C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 64);
  id v3 = *(void **)(a1 + 32);
  id v4 = [*(id *)(a1 + 40) recordID];
  id v5 = [v4 recordName];
  double v6 = [v3 select:v2 identity:v5];

  if (!v6 || [v6 syncBackend:*(void *)(a1 + 32)])
  {
LABEL_5:
    id v8 = [*(id *)(a1 + 48) objectForCKRecord:*(void *)(a1 + 40)];
    if (!v8)
    {
      uint64_t v7 = 1;
LABEL_27:

      goto LABEL_28;
    }
    id v9 = *(void **)(a1 + 32);
    uint64_t v10 = objc_opt_class();
    id v11 = [v8 objectID];
    char v40 = v11;
    id v12 = +[NSArray arrayWithObjects:&v40 count:1];
    id v13 = [v9 select:v10 where:@"entityIdentity = ?" bindings:v12];

    if ([v13 state] == (id)3)
    {
      CLSInitLog();
      int v14 = (void *)CLSLogSync;
      if (os_log_type_enabled(CLSLogSync, OS_LOG_TYPE_DEBUG))
      {
        id v15 = *(void **)(a1 + 40);
        __int16 v16 = v14;
        unsigned int v17 = [v15 recordID];
        *(_DWORD *)long long buf = 138412546;
        char v37 = v15;
        __int16 v38 = 2114;
        unint64_t v39 = v17;
        _os_log_debug_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEBUG, "Skipping insert of record to DB b/c it is in the PDPendingCKSyncItem table marked for deletion; record: %@, re"
          "cordID: %{public}@",
          buf,
          0x16u);
      }
      goto LABEL_12;
    }
    if (*(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24))
    {
      id v18 = v8;
      long long v19 = [v6 dateLastModified];
      long long v20 = [v18 dateLastModified];

      id v21 = sub_1000E174C(v19, v20, 5.0);
      if (v21 != (void *)-1)
      {
LABEL_12:
        uint64_t v7 = 1;
LABEL_26:

        goto LABEL_27;
      }
    }
    uint64_t v22 = [v8 parentObjectID];
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0
      || !v22
      || [*(id *)(a1 + 32) syncableDatabaseEntityExistsByObjectID:v22])
    {
      if (([*(id *)(a1 + 48) processObject:v8 andUpdateSyncMetadataForRecord:*(void *)(a1 + 40)] & 1) == 0)
      {
        uint64_t v7 = 0;
LABEL_25:

        goto LABEL_26;
      }
      unint64_t v23 = [*(id *)(a1 + 40) recordID];
      char v24 = [v23 recordName];

      if (!v24)
      {
        uint64_t v7 = 1;
        goto LABEL_25;
      }
      char v25 = *(void **)(a1 + 48);
      unint64_t v35 = v24;
      unsigned int v26 = +[NSArray arrayWithObjects:&v35 count:1];
      id v27 = [v25 processPendingSyncUpdatesWithParentRecordIDs:v26];
    }
    else
    {
      char v24 = objc_alloc_init(PDPendingSyncUpdate);
      unint64_t v28 = [*(id *)(a1 + 40) recordID];
      char v29 = [v28 recordName];
      uint64_t v31 = v29;
      if (v24)
      {
        objc_setProperty_nonatomic_copy(v24, v30, v29, 16);

        objc_setProperty_nonatomic_copy(v24, v32, v22, 8);
        objc_setProperty_nonatomic_copy(v24, v33, *(id *)(a1 + 40), 24);
      }
      else
      {
      }
      unsigned int v26 = [*(id *)(a1 + 48) database];
      id v27 = [v26 insertOrUpdateObject:v24];
    }
    uint64_t v7 = (uint64_t)v27;

    goto LABEL_25;
  }
  objc_opt_class();
  uint64_t v7 = 1;
  if (objc_opt_isKindOfClass())
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 1;
    goto LABEL_5;
  }
LABEL_28:

  return v7;
}

void sub_1000E3050(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000E3068(void *a1, void *a2, unsigned char *a3)
{
  id v5 = a2;
  double v6 = (void *)a1[4];
  id v12 = v5;
  if (v5) {
    uint64_t v7 = (void *)v5[3];
  }
  else {
    uint64_t v7 = 0;
  }
  id v8 = v7;
  *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = [v6 processPendingRecord:v8];

  if (*(unsigned char *)(*(void *)(a1[6] + 8) + 24))
  {
    id v9 = (void *)a1[5];
    if (v12) {
      uint64_t v10 = (void *)v12[2];
    }
    else {
      uint64_t v10 = 0;
    }
    id v11 = v10;
    [v9 addObject:v11];
  }
  else
  {
    *a3 = 1;
  }
}

uint64_t sub_1000E32EC(uint64_t a1)
{
  [*(id *)(a1 + 32) deleteSyncMetadataAssociatedWithRecordID:*(void *)(a1 + 40)];
  id v3 = +[PDCKOperation recordTypeToEntityMap];
  id v4 = [v3 objectForKeyedSubscript:*(void *)(a1 + 48)];

  id v5 = [*(id *)(a1 + 56) select:v4 identity:*(void *)(a1 + 64)];
  double v6 = v5;
  if (v5 && ![v5 syncBackend:*(void *)(a1 + 56)])
  {
    uint64_t v12 = 1;
  }
  else
  {
    uint64_t v20 = *(void *)(a1 + 64);
    uint64_t v7 = +[NSArray arrayWithObjects:&v20 count:1];
    id v8 = [v4 identityColumnName];
    id v9 = [v8 stringByAppendingString:@" = ?"];
    CLSInitLog();
    uint64_t v10 = CLSLogSync;
    if (os_log_type_enabled(CLSLogSync, OS_LOG_TYPE_INFO))
    {
      uint64_t v11 = *(void *)(a1 + 64);
      int v14 = 138412802;
      id v15 = v4;
      __int16 v16 = 2112;
      unsigned int v17 = v8;
      __int16 v18 = 2112;
      uint64_t v19 = v11;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "Deleting: %@ where %@ = %@", (uint8_t *)&v14, 0x20u);
    }
    uint64_t v12 = (uint64_t)[*(id *)(a1 + 56) deleteAll:v4 where:v9 bindings:v7];
  }
  return v12;
}

uint64_t sub_1000E3960(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        char v12 = 0;
        unsigned int v13 = 0;
        uint64_t v14 = 0;
        *(unsigned char *)(a1 + 68) |= 1u;
        while (1)
        {
          unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v15 == -1 || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
          v14 |= (unint64_t)(v16 & 0x7F) << v12;
          if ((v16 & 0x80) == 0) {
            goto LABEL_39;
          }
          v12 += 7;
          BOOL v9 = v13++ >= 9;
          if (v9)
          {
            LODWORD(v14) = 0;
            goto LABEL_41;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_39:
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_41:
        *(_DWORD *)(a1 + 64) = v14;
        goto LABEL_42;
      case 2u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 56;
        goto LABEL_33;
      case 3u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 40;
        goto LABEL_33;
      case 4u:
        uint64_t v20 = objc_alloc_init(PDDPDate);
        uint64_t v21 = 24;
        goto LABEL_35;
      case 5u:
        uint64_t v20 = objc_alloc_init(PDDPDate);
        uint64_t v21 = 32;
        goto LABEL_35;
      case 6u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 8;
        goto LABEL_33;
      case 7u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 48;
LABEL_33:
        uint64_t v22 = *(void **)(a1 + v19);
        *(void *)(a1 + v19) = v18;

        goto LABEL_42;
      case 8u:
        uint64_t v20 = objc_alloc_init(PDDPDate);
        uint64_t v21 = 16;
LABEL_35:
        objc_storeStrong((id *)(a1 + v21), v20);
        if PBReaderPlaceMark() && (PDDPDateReadFrom((uint64_t)v20, a2))
        {
          PBReaderRecallMark();

LABEL_42:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_42;
    }
  }
}

id *sub_1000E45FC(id *a1, void *a2, objc_class *a3, id a4, int a5)
{
  id v10 = a2;
  if (a1)
  {
    v20.receiver = a1;
    v20.super_class = (Class)PDObserverTrackedItem;
    uint64_t v11 = (id *)objc_msgSendSuper2(&v20, "init");
    a1 = v11;
    if (v11)
    {
      objc_storeStrong(v11 + 4, a2);
      uint64_t v12 = NSStringFromClass(a3);
      id v13 = a1[3];
      a1[3] = (id)v12;

      if (*((_DWORD *)a1 + 14) != a5 || a1[5] != a4)
      {
        a1[5] = a4;
        *((_DWORD *)a1 + 14) = a5;
        uint64_t v14 = +[NSDate date];
        id v15 = a1[6];
        a1[6] = (id)v14;
      }
      self;
      char v16 = +[NSUUID UUID];
      uint64_t v17 = [v16 UUIDString];

      id v18 = a1[2];
      a1[2] = (id)v17;
    }
  }

  return a1;
}

id sub_1000E4C00(uint64_t a1, objc_class *a2, void *a3)
{
  char v4 = a3;
  self;
  unsigned int v5 = NSStringFromClass(a2);
  unint64_t v6 = [(objc_class *)a2 entityName];
  if (v4) {
    unint64_t v7 = (void *)v4[3];
  }
  else {
    unint64_t v7 = 0;
  }
  id v8 = v7;

  BOOL v9 = +[NSString stringWithFormat:@"%@.", v6];
  id v10 = [v8 stringByReplacingOccurrencesOfString:v9 withString:@"E."];

  uint64_t v11 = [(objc_class *)a2 identityColumnName];
  +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"select count(*) as count from PDObserverTrackedItem as T left join %@ as E on T.entityID = E.%@ and T.entityClassName = '%@' where T.observerChangeID > ? and (%@);",
    v6,
    v11,
    v5,
  uint64_t v12 = v10);

  return v12;
}

id sub_1000E4D2C(uint64_t a1, objc_class *a2, void *a3)
{
  char v4 = a3;
  self;
  unsigned int v5 = NSStringFromClass(a2);
  unint64_t v6 = [(objc_class *)a2 entityName];
  if (v4) {
    unint64_t v7 = (void *)v4[3];
  }
  else {
    unint64_t v7 = 0;
  }
  id v8 = v7;

  BOOL v9 = +[NSString stringWithFormat:@"%@.", v6];
  id v10 = [v8 stringByReplacingOccurrencesOfString:v9 withString:@"E."];

  uint64_t v11 = [(objc_class *)a2 identityColumnName];
  +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"select * from PDObserverTrackedItem as T left join %@ as E on T.entityID = E.%@ and T.entityClassName = '%@' where T.observerChangeID > ? and (%@);",
    v6,
    v11,
    v5,
  uint64_t v12 = v10);

  return v12;
}

void *sub_1000E4E58(void *a1, objc_class *a2, void *a3, void *a4, uint64_t a5)
{
  id v9 = a3;
  id v10 = a4;
  if (a1)
  {
    uint64_t v24 = 0;
    char v25 = &v24;
    uint64_t v26 = 0x2020000000;
    uint64_t v27 = 0;
    uint64_t v11 = NSStringFromClass(a2);
    if (v9)
    {
      if ([v10 count])
      {
        uint64_t v12 = +[NSNumber numberWithInteger:a5];
        id v13 = +[NSMutableArray arrayWithObject:v12];
        [v13 addObjectsFromArray:v10];
        uint64_t v14 = +[NSArray arrayWithArray:v13];
      }
      else
      {
        uint64_t v12 = +[NSNumber numberWithInteger:a5];
        char v29 = v12;
        uint64_t v14 = +[NSArray arrayWithObjects:&v29 count:1];
      }

      v20[0] = _NSConcreteStackBlock;
      v20[1] = 3221225472;
      v20[2] = sub_1000E50F4;
      v20[3] = &unk_1001F4730;
      void v20[4] = a1;
      id v21 = v9;
      id v15 = v14;
      id v22 = v15;
      unint64_t v23 = &v24;
      sub_10000749C(a1, v20);
    }
    else
    {
      id v15 = +[NSNumber numberWithInteger:a5];
      uint64_t v16 = objc_opt_class();
      v28[0] = v11;
      v28[1] = v15;
      uint64_t v17 = +[NSArray arrayWithObjects:v28 count:2];
      id v18 = [a1 count:v16 where:@"entityClassName = ? and observerChangeID > ?" bindings:v17];
      v25[3] = (uint64_t)v18;
    }
    a1 = (void *)v25[3];

    _Block_object_dispose(&v24, 8);
  }

  return a1;
}

void sub_1000E50C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000E50F4(void *a1)
{
  uint64_t v2 = (void *)a1[4];
  double v1 = (void *)a1[5];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  _DWORD v5[2] = sub_1000E5170;
  v5[3] = &unk_1001F1F28;
  id v3 = (void *)a1[6];
  void v5[4] = a1[7];
  return sub_100007540(v2, v1, 1, v3, v5);
}

void sub_1000E5170(uint64_t a1, uint64_t *a2)
{
  sub_100003BF0(a2, @"count");
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = [v3 integerValue];
}

void sub_1000E51D8(void *a1, objc_class *a2, void *a3, void *a4, uint64_t a5, void *a6)
{
  id v11 = a3;
  id v12 = a4;
  id v13 = a6;
  if (a1)
  {
    uint64_t v14 = NSStringFromClass(a2);
    if (v11)
    {
      id v15 = v11;
      id v16 = [v12 count];
      uint64_t v17 = +[NSNumber numberWithInteger:a5];
      id v18 = (void *)v17;
      if (v16)
      {
        uint64_t v19 = +[NSMutableArray arrayWithObject:v17];
        [v19 addObjectsFromArray:v12];
        objc_super v20 = +[NSArray arrayWithArray:v19];
      }
      else
      {
        uint64_t v29 = v17;
        objc_super v20 = +[NSArray arrayWithObjects:&v29 count:1];
      }

      v24[0] = _NSConcreteStackBlock;
      v24[1] = 3221225472;
      v24[2] = sub_1000E5430;
      v24[3] = &unk_1001F23A8;
      v24[4] = a1;
      unint64_t v23 = (__CFString *)v15;
      char v25 = v23;
      id v22 = v20;
      id v26 = v22;
      id v27 = v13;
      sub_10000749C(a1, v24);
    }
    else
    {
      id v21 = +[NSNumber numberWithInteger:a5];
      v28[0] = v14;
      v28[1] = v21;
      id v22 = +[NSArray arrayWithObjects:v28 count:2];
      unint64_t v23 = @"entityClassName = ? and observerChangeID > ?";
      [a1 selectAll:objc_opt_class() where:@"entityClassName = ? and observerChangeID > ?" bindings:v22 block:v13];
    }
  }
}

void sub_1000E5430(uint64_t a1)
{
  double v1 = *(void **)(a1 + 32);
  uint64_t v2 = *(void **)(a1 + 40);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1000E54D0;
  void v4[3] = &unk_1001F4758;
  id v3 = *(void **)(a1 + 48);
  id v5 = *(id *)(a1 + 56);
  sub_100007540(v1, v2, 1, v3, v4);
}

void sub_1000E54D0(uint64_t a1, void *a2)
{
  if (a2)
  {
    id v3 = a2;
    char v4 = [[PDObserverTrackedItem alloc] initWithDatabaseRow:v3];
  }
  else
  {
    char v4 = 0;
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_1000E5564(id a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  if (a1)
  {
    unint64_t v6 = objc_opt_new();
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    void v9[2] = sub_1000E5650;
    v9[3] = &unk_1001F4780;
    uint64_t v13 = a2;
    id v10 = v5;
    id v7 = v6;
    id v11 = v7;
    id v12 = a1;
    sub_10000749C(a1, v9);
    a1 = v7;
  }

  return a1;
}

void sub_1000E5650(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 56) entityName];
  id v3 = [*(id *)(a1 + 56) identityColumnName];
  if ([*(id *)(a1 + 32) count])
  {
    char v4 = +[NSString stringWithFormat:@"select entityID from PDObserverTrackedItem where entityClassName = '%@' and entityID in ", v2];
    id v5 = +[PDDatabase whereSQLForArray:*(void *)(a1 + 32) prefix:v4];

    unint64_t v6 = *(void **)(a1 + 40);
    id v7 = *(id *)(a1 + 32);
    [v6 addObjectsFromArray:v7];
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    v13[2] = sub_1000E582C;
    v13[3] = &unk_1001F2ED8;
    id v8 = *(void **)(a1 + 48);
    id v14 = *(id *)(a1 + 40);
    sub_100007540(v8, v5, 1, v7, v13);
  }
  else
  {
    id v5 = +[NSString stringWithFormat:@"select E.%@ from %@ as E  where E.%@ not in   (select entityID from PDObserverTrackedItem as T    where T.entityClassName = '%@')", v3, v2, v3, v2];
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    void v10[2] = sub_1000E5890;
    v10[3] = &unk_1001F1D98;
    id v9 = *(void **)(a1 + 48);
    id v11 = *(id *)(a1 + 40);
    id v12 = v3;
    sub_100007540(v9, v5, 1, 0, v10);

    id v7 = v11;
  }
}

void sub_1000E582C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  sub_100003BF0(a2, @"entityID");
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  [v2 removeObject:v3];
}

void sub_1000E5890(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  sub_100003BF0(a2, *(void **)(a1 + 40));
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  [v2 addObject:v3];
}

void sub_1000E58EC(void *a1, void *a2, int a3)
{
  id v5 = a2;
  if (a1)
  {
    if (objc_opt_respondsToSelector())
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0)
      {
        unint64_t v6 = (objc_class *)objc_opt_class();
        id v7 = NSStringFromClass(v6);
        id v8 = [v5 identityValue];
        id v9 = [PDObserverTrackedItem alloc];
        id v10 = (objc_class *)objc_opt_class();
        id v11 = sub_1000E45FC((id *)&v9->super.isa, v8, v10, [v5 changeHash], a3);
        if (([a1 insertObject:v11] & 1) == 0)
        {
          CLSInitLog();
          id v12 = CLSLogNotifications;
          if (os_log_type_enabled(CLSLogNotifications, OS_LOG_TYPE_INFO))
          {
            int v13 = 138412290;
            id v14 = v7;
            _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "PDObserverTrackedItem trackChangeForObject: failed to update for entity:%@", (uint8_t *)&v13, 0xCu);
          }
        }
      }
    }
  }
}

void *sub_1000E5A6C(void *a1)
{
  double v1 = a1;
  if (a1)
  {
    uint64_t v5 = 0;
    unint64_t v6 = &v5;
    uint64_t v7 = 0x3032000000;
    id v8 = sub_10000B744;
    id v9 = sub_10000B5BC;
    id v10 = 0;
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = sub_1000E5B98;
    void v4[3] = &unk_1001F47A8;
    void v4[4] = &v5;
    [a1 selectAll:objc_opt_class() where:0 orderBy:@"observerChangeID desc" limit:1 offset:0 bindings:0 block:v4];
    uint64_t v2 = v6[5];
    if (v2) {
      double v1 = *(void **)(v2 + 8);
    }
    else {
      double v1 = 0;
    }
    _Block_object_dispose(&v5, 8);
  }
  return v1;
}

void sub_1000E5B80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000E5B98(uint64_t a1, void *a2, unsigned char *a3)
{
  *a3 = 1;
}

void sub_1000E5BD0(void *a1)
{
  if (a1)
  {
    uint64_t v2 = +[NSDate dateWithTimeIntervalSinceNow:-1800.0];
    uint64_t v3 = objc_opt_class();
    uint64_t v5 = v2;
    char v4 = +[NSArray arrayWithObjects:&v5 count:1];
    [a1 deleteAll:v3 where:@"dateLastChanged < ?" bindings:v4];
  }
}

void sub_1000E5CF0(id a1)
{
  double v1 = +[CLSActivity recordType];
  v9[0] = v1;
  uint64_t v2 = +[CLSBinaryItem recordType];
  v9[1] = v2;
  uint64_t v3 = +[CLSQuantityItem recordType];
  void v9[2] = v3;
  char v4 = +[CLSScoreItem recordType];
  v9[3] = v4;
  uint64_t v5 = +[CLSRange recordType];
  void v9[4] = v5;
  unint64_t v6 = +[CLSTimeInterval recordType];
  void v9[5] = v6;
  uint64_t v7 = +[NSArray arrayWithObjects:v9 count:6];
  id v8 = (void *)qword_10023E650;
  qword_10023E650 = v7;
}

void sub_1000E5E74(id a1)
{
  uint64_t v2 = sub_1000E5F08();
  uint64_t v3 = [v2 keyEnumerator];
  char v4 = [v3 allObjects];

  uint64_t v5 = [v4 sortedArrayUsingComparator:&stru_1001F4828];
  unint64_t v6 = (void *)qword_10023E658;
  qword_10023E658 = v5;
}

id sub_1000E5F08()
{
  if (qword_10023E680 != -1) {
    dispatch_once(&qword_10023E680, &stru_1001F4A48);
  }
  uint64_t v0 = (void *)qword_10023E678;

  return v0;
}

int64_t sub_1000E5F5C(id a1, Class a2, Class a3)
{
  if (objc_opt_respondsToSelector()) {
    id v5 = [(objc_class *)a2 migrationOrder];
  }
  else {
    id v5 = 0;
  }
  if (objc_opt_respondsToSelector()) {
    id v6 = [(objc_class *)a3 migrationOrder];
  }
  else {
    id v6 = 0;
  }
  if ((uint64_t)v5 < (uint64_t)v6) {
    return -1;
  }
  else {
    return v5 != v6;
  }
}

id sub_1000E6094()
{
  if (qword_10023E690 != -1) {
    dispatch_once(&qword_10023E690, &stru_1001F4A68);
  }
  uint64_t v0 = (void *)qword_10023E688;

  return v0;
}

id sub_1000E687C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _insertObject:*(void *)(a1 + 40)];
}

uint64_t sub_1000E6A08(uint64_t a1)
{
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v12;
    while (2)
    {
      id v6 = 0;
      do
      {
        if (*(void *)v12 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void *)(*((void *)&v11 + 1) + 8 * (void)v6);
        LODWORD(v7) = objc_msgSend(*(id *)(a1 + 40), "_insertObject:", v7, (void)v11);
        if (!v7)
        {
          uint64_t v9 = 0;
          goto LABEL_11;
        }
        id v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v11 objects:v15 count:16];
      if (v4) {
        continue;
      }
      break;
    }
  }
  uint64_t v9 = 1;
LABEL_11:

  return v9;
}

id sub_1000E6F6C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateObject:*(void *)(a1 + 40)];
}

uint64_t sub_1000E70DC(uint64_t a1)
{
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v12;
    while (2)
    {
      id v6 = 0;
      do
      {
        if (*(void *)v12 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void *)(*((void *)&v11 + 1) + 8 * (void)v6);
        LODWORD(v7) = objc_msgSend(*(id *)(a1 + 40), "_updateObject:", v7, (void)v11);
        if (!v7)
        {
          uint64_t v9 = 0;
          goto LABEL_11;
        }
        id v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v11 objects:v15 count:16];
      if (v4) {
        continue;
      }
      break;
    }
  }
  uint64_t v9 = 1;
LABEL_11:

  return v9;
}

uint64_t sub_1000E77A8(id *a1)
{
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  id obj = a1[4];
  id v2 = [obj countByEnumeratingWithState:&v18 objects:v22 count:16];
  if (!v2)
  {
    uint64_t v15 = 1;
    goto LABEL_18;
  }
  id v3 = v2;
  uint64_t v4 = *(void *)v19;
  while (2)
  {
    for (i = 0; i != v3; i = (char *)i + 1)
    {
      if (*(void *)v19 != v4) {
        objc_enumerationMutation(obj);
      }
      id v6 = *(void **)(*((void *)&v18 + 1) + 8 * i);
      id v8 = objc_opt_class();
      uint64_t v9 = [v8 identityColumnName];
      id v10 = a1[5];
      if (!v9)
      {
        uint64_t v15 = (uint64_t)[a1[5] _insertObject:v6];
        goto LABEL_17;
      }
      long long v11 = [v6 identityValue];
      unsigned int v12 = [v10 entityExistsByClass:v8 identity:v11];

      id v13 = a1[5];
      if (!v12)
      {
        unsigned int v14 = [v13 _insertObject:v6];
        [a1[6] addObject:v6];
        if (v14) {
          goto LABEL_11;
        }
LABEL_16:
        uint64_t v15 = 0;
LABEL_17:

        goto LABEL_18;
      }
      if (([v13 _updateObject:v6] & 1) == 0) {
        goto LABEL_16;
      }
LABEL_11:
    }
    id v3 = [obj countByEnumeratingWithState:&v18 objects:v22 count:16];
    uint64_t v15 = 1;
    if (v3) {
      continue;
    }
    break;
  }
LABEL_18:

  return v15;
}

id sub_1000E7C2C(uint64_t a1)
{
  if (objc_opt_respondsToSelector()) {
    [*(id *)(a1 + 32) willBeDeletedFromDatabase:*(void *)(a1 + 40)];
  }
  if ((objc_opt_respondsToSelector() & 1) != 0 && [*(id *)(a1 + 32) isDeleteTracked])
  {
    id v2 = [*(id *)(a1 + 40) trackDeletedObject:*(void *)(a1 + 32)];
    [*(id *)(a1 + 40) insertOrUpdateObject:v2];
  }
  id v3 = objc_alloc_init((Class)NSMutableString);
  [v3 appendString:*(void *)(a1 + 48)];
  [v3 appendString:@" = ?"];
  uint64_t v4 = [(id)objc_opt_class() entityName];
  uint64_t v5 = *(void **)(a1 + 40);
  id v6 = [*(id *)(a1 + 32) identityValue];
  id v10 = v6;
  uint64_t v7 = +[NSArray arrayWithObjects:&v10 count:1];
  LODWORD(v5) = sub_1000AC4E8(v5, v4, v3, v7);

  if (v5)
  {
    if (sub_1000FB340(*(id *)(a1 + 40), v4)) {
      sub_1000E58EC(*(void **)(a1 + 40), *(void **)(a1 + 32), 3);
    }
    id v8 = [*(id *)(a1 + 40) markObject:*(void *)(a1 + 32) as:3];
  }
  else
  {
    id v8 = 0;
  }

  return v8;
}

void sub_1000E7EE4(uint64_t a1, void *a2)
{
}

void sub_1000E7F98(uint64_t a1, void *a2)
{
  id v3 = *(objc_class **)(a1 + 40);
  id v4 = a2;
  id v5 = [[v3 alloc] initWithDatabaseRow:v4];

  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

unint64_t sub_1000E8128(void **a1)
{
  if (a1[4])
  {
    id v3 = objc_opt_new();
    id v4 = objc_opt_new();
    id v5 = a1[8];
    uint64_t v7 = a1[4];
    id v6 = a1[5];
    id v8 = a1[6];
    v61[0] = _NSConcreteStackBlock;
    v61[1] = 3221225472;
    v61[2] = sub_1000E864C;
    v61[3] = &unk_1001F48C8;
    id v46 = v3;
    id v62 = v46;
    id v47 = v4;
    id v63 = v47;
    [v6 selectAll:v5 where:v7 bindings:v8 block:v61];
  }
  else
  {
    id v46 = 0;
    id v47 = 0;
  }
  id v9 = [a1[7] count];
  id v10 = [objc_alloc((Class)NSMutableArray) initWithCapacity:v9];
  id v11 = [objc_alloc((Class)NSMutableArray) initWithCapacity:v9];
  long long v57 = 0u;
  long long v58 = 0u;
  long long v59 = 0u;
  long long v60 = 0u;
  id v12 = a1[7];
  id v13 = [v12 countByEnumeratingWithState:&v57 objects:v66 count:16];
  if (v13)
  {
    id v14 = v13;
    uint64_t v15 = *(void *)v58;
    do
    {
      for (i = 0; i != v14; i = (char *)i + 1)
      {
        if (*(void *)v58 != v15) {
          objc_enumerationMutation(v12);
        }
        uint64_t v17 = *(void *)(*((void *)&v57 + 1) + 8 * i);
        [v10 addObject:v17];
        long long v19 = [a1[7] objectForKeyedSubscript:v17];
        [v11 addObject:v19];
      }
      id v14 = [v12 countByEnumeratingWithState:&v57 objects:v66 count:16];
    }
    while (v14);
  }

  long long v20 = [a1[8] entityName];
  unint64_t v21 = (unint64_t)sub_1000AC31C(a1[5], v20, v10, v11, a1[4], a1[6]);
  id v22 = v46;
  if (v21)
  {
    if (sub_1000FB340(a1[5], v20))
    {
      uint64_t v44 = v20;
      long long v45 = v2;
      if (a1[4])
      {
        long long v53 = 0u;
        long long v54 = 0u;
        long long v55 = 0u;
        long long v56 = 0u;
        id v24 = v47;
        id v25 = [v24 countByEnumeratingWithState:&v53 objects:v65 count:16];
        if (v25)
        {
          id v26 = v25;
          uint64_t v27 = *(void *)v54;
          do
          {
            for (j = 0; j != v26; j = (char *)j + 1)
            {
              if (*(void *)v54 != v27) {
                objc_enumerationMutation(v24);
              }
              sub_1000E58EC(a1[5], *(void **)(*((void *)&v53 + 1) + 8 * (void)j), 2);
            }
            id v26 = [v24 countByEnumeratingWithState:&v53 objects:v65 count:16];
          }
          while (v26);
        }

        id v2 = v45;
      }
      else
      {
        BOOL v43 = +[NSDate date];
        id v29 = [v43 hash];
        sub_1000E5564(a1[5], (uint64_t)a1[8], 0);
        long long v49 = 0u;
        long long v50 = 0u;
        long long v51 = 0u;
        long long v52 = 0u;
        id obj = (id)objc_claimAutoreleasedReturnValue();
        id v30 = [obj countByEnumeratingWithState:&v49 objects:v64 count:16];
        if (v30)
        {
          id v31 = v30;
          uint64_t v32 = *(void *)v50;
          do
          {
            for (k = 0; k != v31; k = (char *)k + 1)
            {
              if (*(void *)v50 != v32) {
                objc_enumerationMutation(obj);
              }
              uint64_t v34 = *(void **)(*((void *)&v49 + 1) + 8 * (void)k);
              char v36 = sub_1000E45FC((id *)[PDObserverTrackedItem alloc], v34, (objc_class *)a1[8], v29, 2);
              [a1[5] insertObject:v36];
            }
            id v31 = [obj countByEnumeratingWithState:&v49 objects:v64 count:16];
          }
          while (v31);
        }

        id v2 = v45;
        id v22 = v46;
        unint64_t v21 = v21;
      }
      long long v20 = v44;
    }
    if ([v22 count])
    {
      char v37 = v20;
      __int16 v38 = [a1[8] identityColumnName];
      unint64_t v39 = +[NSString stringWithFormat:@"%@ in ", v38];
      char v40 = +[PDDatabase whereSQLForArray:v22 prefix:v39];

      long long v20 = v37;
      id v41 = v22;
    }
    else
    {
      char v40 = 0;
      id v41 = 0;
    }
    [a1[5] markAll:a1[8] where:v40 bindings:v41 as:2];
    [a1[5] generateInsightEventsForClass:a1[8] where:v40 bindings:v41];
  }
  return v21;
}

void sub_1000E864C(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v5 = a2;
  id v4 = [v5 identityValue];
  [v3 addObject:v4];

  [*(id *)(a1 + 40) addObject:v5];
}

void *sub_1000E87B0(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 56);
  id v4 = objc_opt_new();
  id v5 = objc_opt_new();
  id v6 = objc_opt_new();
  uint64_t v7 = *(void **)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(a1 + 56);
  v38[0] = _NSConcreteStackBlock;
  v38[1] = 3221225472;
  void v38[2] = sub_1000E8AA8;
  v38[3] = &unk_1001F4918;
  id v11 = v4;
  id v39 = v11;
  id v12 = v5;
  uint64_t v43 = v3;
  uint64_t v13 = *(void *)(a1 + 32);
  id v40 = v12;
  uint64_t v41 = v13;
  id v14 = v6;
  id v42 = v14;
  [v7 selectAll:v9 where:v8 bindings:v10 block:v38];
  if (!*(unsigned char *)(a1 + 64)) {
    goto LABEL_10;
  }
  long long v36 = 0u;
  long long v37 = 0u;
  long long v34 = 0u;
  long long v35 = 0u;
  id v15 = v14;
  id v16 = [v15 countByEnumeratingWithState:&v34 objects:v45 count:16];
  if (v16)
  {
    id v17 = v16;
    uint64_t v18 = *(void *)v35;
    do
    {
      for (i = 0; i != v17; i = (char *)i + 1)
      {
        if (*(void *)v35 != v18) {
          objc_enumerationMutation(v15);
        }
        [*(id *)(a1 + 32) insertObject:*(void *)(*((void *)&v34 + 1) + 8 * i)];
      }
      id v17 = [v15 countByEnumeratingWithState:&v34 objects:v45 count:16];
    }
    while (v17);
  }

  if (![*(id *)(a1 + 32) markAll:*(void *)(a1 + 56) where:*(void *)(a1 + 40) bindings:*(void *)(a1 + 48) as:3])
  {
    unint64_t v21 = 0;
  }
  else
  {
LABEL_10:
    long long v20 = [*(id *)(a1 + 56) entityName];
    unint64_t v21 = sub_1000AC4E8(*(void **)(a1 + 32), v20, *(void **)(a1 + 40), *(void **)(a1 + 48));
    if (sub_1000FB340(*(id *)(a1 + 32), v20))
    {
      id v29 = v2;
      long long v30 = 0u;
      long long v31 = 0u;
      long long v32 = 0u;
      long long v33 = 0u;
      id v22 = v12;
      id v23 = [v22 countByEnumeratingWithState:&v30 objects:v44 count:16];
      if (v23)
      {
        id v24 = v23;
        uint64_t v25 = *(void *)v31;
        do
        {
          for (j = 0; j != v24; j = (char *)j + 1)
          {
            if (*(void *)v31 != v25) {
              objc_enumerationMutation(v22);
            }
            sub_1000E58EC(*(void **)(a1 + 32), *(void **)(*((void *)&v30 + 1) + 8 * (void)j), 3);
          }
          id v24 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v30, v44, 16, context);
        }
        while (v24);
      }

      id v2 = v29;
    }
  }
  return v21;
}

void sub_1000E8AA8(uint64_t a1, void *a2)
{
  id v7 = a2;
  uint64_t v3 = *(void **)(a1 + 32);
  id v4 = [v7 identityValue];
  [v3 addObject:v4];

  [*(id *)(a1 + 40) addObject:v7];
  if ([*(id *)(a1 + 64) instancesRespondToSelector:"willBeDeletedFromDatabase:"]) {
    [v7 willBeDeletedFromDatabase:*(void *)(a1 + 48)];
  }
  if ((objc_opt_respondsToSelector() & 1) != 0 && [v7 isDeleteTracked])
  {
    id v5 = *(void **)(a1 + 56);
    id v6 = [*(id *)(a1 + 48) trackDeletedObject:v7];
    [v5 addObject:v6];
  }
}

void sub_1000E8CE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000E8D00(uint64_t a1, void *a2)
{
}

void sub_1000E8E94(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 80) entityName];
  uint64_t v3 = [*(id *)(a1 + 32) componentsJoinedByString:@","];
  id v4 = *(void **)(a1 + 40);
  id v5 = *(void **)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 88);
  uint64_t v7 = *(void *)(a1 + 96);
  uint64_t v8 = *(void **)(a1 + 56);
  uint64_t v9 = *(void **)(a1 + 64);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  void v10[2] = sub_1000E8FAC;
  v10[3] = &unk_1001F49B8;
  id v11 = *(id *)(a1 + 32);
  id v12 = *(id *)(a1 + 72);
  sub_10000A2B8(v4, v3, v2, v5, 0, v8, v6, v7, v9, v10);
}

void sub_1000E8FAC(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  id v4 = objc_msgSend(objc_alloc((Class)NSMutableArray), "initWithCapacity:", objc_msgSend(*(id *)(a1 + 32), "count"));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v5 = *(id *)(a1 + 32);
  id v6 = [v5 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v12;
    do
    {
      uint64_t v9 = 0;
      do
      {
        if (*(void *)v12 != v8) {
          objc_enumerationMutation(v5);
        }
        uint64_t v10 = sub_100003BF0(v3, *(void **)(*((void *)&v11 + 1) + 8 * (void)v9));
        if (!v10)
        {
          uint64_t v10 = +[NSNull null];
        }
        objc_msgSend(v4, "addObject:", v10, (void)v11);

        uint64_t v9 = (char *)v9 + 1;
      }
      while (v7 != v9);
      id v7 = [v5 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v7);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_1000E9234(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000E924C(uint64_t a1)
{
  id result = sub_1000AC5BC(*(void **)(a1 + 32), *(void **)(a1 + 40), *(void **)(a1 + 48));
  *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = (_BYTE)result;
  return result;
}

void sub_1000E95B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000E95C8(id a1)
{
  double v1 = +[PDCKOperation syncableEntities];
  id v2 = objc_alloc_init((Class)NSMutableArray);
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  id obj = v1;
  uint64_t v3 = (char *)[obj countByEnumeratingWithState:&v17 objects:v21 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v18;
    do
    {
      id v6 = 0;
      do
      {
        if (*(void *)v18 != v5) {
          objc_enumerationMutation(obj);
        }
        id v7 = objc_alloc_init((Class)NSMutableString);
        [v7 appendString:@"select "];
        uint64_t v8 = [(id)objc_opt_class() identityColumnName];
        [v7 appendString:v8];

        [v7 appendString:@" from "];
        uint64_t v9 = [(id)objc_opt_class() entityName];
        [v7 appendString:v9];

        [v7 appendString:@" where "];
        uint64_t v10 = [(id)objc_opt_class() identityColumnName];
        [v7 appendString:v10];

        [v7 appendString:@" = ? "];
        [v2 addObject:v7];
        ++dword_10023E640;

        ++v6;
      }
      while (v4 != v6);
      id v4 = (char *)[obj countByEnumeratingWithState:&v17 objects:v21 count:16];
    }
    while (v4);
  }

  id v11 = objc_alloc_init((Class)NSMutableString);
  objc_msgSend(v11, "appendString:", @"select * from(");
  long long v12 = [v2 componentsJoinedByString:@" UNION "];
  [v11 appendString:v12];

  [v11 appendString:@" limit 1"]);
  id v13 = [v11 copy];
  long long v14 = (void *)qword_10023E668;
  qword_10023E668 = (uint64_t)v13;
}

uint64_t sub_1000E984C(void *a1)
{
  id v2 = (void *)a1[4];
  double v1 = (void *)a1[5];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1000E98D0;
  void v4[3] = &unk_1001F1F28;
  void v4[4] = a1[6];
  return sub_100007540(v2, (void *)qword_10023E668, 1, v1, v4);
}

uint64_t sub_1000E98D0(uint64_t result, uint64_t a2, unsigned char *a3)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
  *a3 = 1;
  return result;
}

id sub_1000E9984(uint64_t a1)
{
  return [*(id *)(a1 + 32) insertOrUpdateObjects:*(void *)(a1 + 40)];
}

void sub_1000E9990(id a1)
{
  uint64_t v1 = +[NSMapTable weakToWeakObjectsMapTable];
  uint64_t v2 = qword_10023E678;
  qword_10023E678 = v1;

  _objc_release_x1(v1, v2);
}

void sub_1000E99D0(id a1)
{
  uint64_t v1 = +[NSMapTable weakToWeakObjectsMapTable];
  uint64_t v2 = qword_10023E688;
  qword_10023E688 = v1;

  _objc_release_x1(v1, v2);
}

void sub_1000EA6EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000EA720(uint64_t a1, void *a2, unsigned char *a3)
{
  id v5 = a2;
  id v7 = +[PDDatabase nameOfEntity:](PDDatabase, "nameOfEntity:", [v5 entity]);
  if ([v5 state] == (id)3)
  {
    [v5 entity];
    if ([v5 entity])
    {
      if (objc_msgSend(objc_msgSend(v5, "entity"), "isEqualToString:", @"CLSAsset")) {
        goto LABEL_38;
      }
    }
  }
  if (!v7) {
    goto LABEL_32;
  }
  if (![v7 isEqualToString:@"CLSAsset"])
  {
    if (([v7 isEqualToString:@"CLSBinaryItem"] & 1) != 0
      || ([v7 isEqualToString:@"CLSBlob"] & 1) != 0
      || ([v7 isEqualToString:@"CLSCollection"] & 1) != 0
      || ([v7 isEqualToString:@"CLSContext"] & 1) != 0
      || ([v7 isEqualToString:@"CLSContextNavigationNode"] & 1) != 0
      || ([v7 isEqualToString:@"CLSHandoutAssignedItem"] & 1) != 0
      || ([v7 isEqualToString:@"CLSProgressReportingCapability"] & 1) != 0
      || ([v7 isEqualToString:@"CLSActivity"] & 1) != 0
      || ([v7 isEqualToString:@"CLSTimeInterval"] & 1) != 0
      || ([v7 isEqualToString:@"CLSQuantityItem"] & 1) != 0
      || ([v7 isEqualToString:@"CLSRange"] & 1) != 0
      || ([v7 isEqualToString:@"CLSScoreItem"] & 1) != 0
      || ([v7 isEqualToString:@"CLSTimeInterval"] & 1) != 0)
    {
      uint64_t v12 = 1;
      goto LABEL_33;
    }
    if (([v7 isEqualToString:@"CLSFavorite"] & 1) == 0
      && ([v7 isEqualToString:@"CLSHandout"] & 1) == 0
      && ([v7 isEqualToString:@"CLSHandoutAttachment"] & 1) == 0
      && ([v7 isEqualToString:@"CLSHandoutRecipient"] & 1) == 0
      && ([v7 isEqualToString:@"CLSMultipleChoiceAnswerFormat"] & 1) == 0
      && ([v7 isEqualToString:@"CLSMultipleChoiceAnswerItem"] & 1) == 0
      && ([v7 isEqualToString:@"CLSOpenResponseAnswerFormat"] & 1) == 0
      && ([v7 isEqualToString:@"CLSQuestionStep"] & 1) == 0
      && ([v7 isEqualToString:@"CLSSchedule"] & 1) == 0
      && ([v7 isEqualToString:@"CLSSliderAnswerFormat"] & 1) == 0
      && ([v7 isEqualToString:@"CLSSurvey"] & 1) == 0)
    {
      if ([v7 isEqualToString:@"CLSSurveyAnswerItem"]) {
        uint64_t v12 = 2;
      }
      else {
        uint64_t v12 = 0;
      }
      goto LABEL_33;
    }
LABEL_32:
    uint64_t v12 = 0;
    goto LABEL_33;
  }
  uint64_t v8 = *(void **)(a1 + 32);
  uint64_t v9 = objc_opt_class();
  uint64_t v10 = [v5 entityIdentity];
  id v11 = [v8 select:v9 identity:v10];

  uint64_t v12 = (uint64_t)[v11 syncableItemType];
LABEL_33:
  id v13 = +[NSNumber numberWithInteger:v12];
  v26[0] = v13;
  long long v14 = [v5 identityValue];
  v26[1] = v14;
  id v15 = +[NSArray arrayWithObjects:v26 count:2];

  uint64_t v16 = *(void *)(*(void *)(a1 + 40) + 8);
  long long v17 = *(void **)(v16 + 40);
  *(void *)(v16 + 40) = @"update PDPendingCKSyncItemCopy set syncableItemType=? where identityValue=?";

  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = sub_100007540(*(void **)(a1 + 32), *(void **)(*(void *)(*(void *)(a1 + 40) + 8)+ 40), 0, v15, 0);
  if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24))
  {
    CLSInitLog();
    long long v18 = (void *)CLSLogDatabase;
    if (os_log_type_enabled(CLSLogDatabase, OS_LOG_TYPE_ERROR))
    {
      long long v19 = v18;
      long long v20 = +[NSNumber numberWithInteger:v12];
      unint64_t v21 = [v5 identityValue];
      int v22 = 138412546;
      id v23 = v20;
      __int16 v24 = 2112;
      uint64_t v25 = v21;
      _os_log_error_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_ERROR, "Could not update PDPendingCKSyncItem set syncableItemType=%@ where identityValue=%@", (uint8_t *)&v22, 0x16u);
    }
    *a3 = 1;
  }

LABEL_38:
}

void sub_1000EADB8(uint64_t a1)
{
  id v2 = +[NSNotificationCenter defaultCenter];
  [v2 postNotificationName:@"PDSyncableDataWrittenNotification" object:*(void *)(a1 + 32)];
}

id sub_1000EB234(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) _markObject:a2 as:*(void *)(a1 + 40)];
}

id sub_1000EB3C4(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) _saveInsightEventsFor:a2];
}

void sub_1000EB5D0(id a1, BOOL a2, NSError *a3)
{
  uint64_t v3 = a3;
  if (v3)
  {
    CLSInitLog();
    id v4 = CLSLogDatabase;
    if (os_log_type_enabled(CLSLogDatabase, OS_LOG_TYPE_ERROR))
    {
      int v5 = 138412290;
      id v6 = v3;
      _os_log_error_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "Failed to delete CloudKit asset from backing store. Error: %@", (uint8_t *)&v5, 0xCu);
    }
  }
}

void sub_1000EB688(uint64_t a1, void *a2)
{
  id v3 = [a2 firstObject];
  objc_msgSend(*(id *)(a1 + 32), "setPosition:", objc_msgSend(v3, "integerValue"));
}

void sub_1000EB834(id a1)
{
  uint64_t v1 = sub_1000FA3F4((uint64_t)PDUtil, @"CLSHandoutReviewDueNotificationHour");
  id v2 = objc_alloc_init((Class)NSDateComponents);
  id v3 = (void *)qword_10023E6A0;
  qword_10023E6A0 = (uint64_t)v2;

  id v4 = (void *)qword_10023E6A0;
  if (v1 == -1) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = v1;
  }

  [v4 setHour:v5];
}

id sub_1000EBDB4(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addObject:a2];
}

void sub_1000F0064(id a1)
{
  dword_10023E6AC = 0;
}

void sub_1000F0070(id a1)
{
  if (+[CLSUtil isAppleInternalInstall])
  {
    id v1 = +[NSUserDefaults standardUserDefaults];
    byte_10023E6A8 = [v1 BOOLForKey:@"CLSSendDevFlag"];
  }
}

void sub_1000F00E4(id a1)
{
  if (+[CLSUtil isAppleInternalInstall])
  {
    id v1 = +[NSUserDefaults standardUserDefaults];
    byte_10023E6A9 = [v1 BOOLForKey:@"UseSchoolworkCanaryHeader"];
  }
}

uint64_t sub_1000F0240(uint64_t a1, void *a2)
{
  id v2 = a2;
  self;
  id v3 = [v2 zoneName];

  uint64_t v4 = [v3 hasPrefix:@"Class-Roster-"] ^ 1;
  return v4;
}

void sub_1000F0534(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc((Class)CKRecordZoneID);
  if (v3) {
    uint64_t v5 = (void *)v3[3];
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = v5;

  id v7 = [v4 initWithZoneName:v6 ownerName:CKCurrentUserDefaultName];
  [*(id *)(a1 + 32) addObject:v7];
}

id sub_1000F05DC(void *a1)
{
  id v1 = a1;
  if (a1)
  {
    CFStringRef v9 = @"serverChangeToken";
    id v2 = +[NSNull null];
    uint64_t v10 = v2;
    id v3 = +[NSDictionary dictionaryWithObjects:&v10 forKeys:&v9 count:1];

    id v4 = [v1 database];
    uint64_t v5 = objc_opt_class();
    id v6 = +[PDClassZoneGetChanges syncZonesMatchingSQL];
    id v7 = +[PDClassZoneGetChanges syncZonesBindings];
    id v1 = [v4 updateAll:v5 set:v3 where:v6 bindings:v7];
  }
  return v1;
}

void sub_1000F0864(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000F087C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v6 = v3;
  if (v3) {
    id v4 = (void *)*((void *)v3 + 1);
  }
  else {
    id v4 = 0;
  }
  id v5 = v4;

  if (!v5)
  {
    [*(id *)(a1 + 32) addObject:v6];
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
  }
}

id sub_1000F1520(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addObject:a2];
}

id sub_1000F2340(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = objc_opt_class();
  id v4 = [*(id *)(a1 + 40) zoneName];
  long long v37 = v4;
  id v5 = +[NSArray arrayWithObjects:&v37 count:1];
  LOBYTE(v2) = [v2 deleteAll:v3 where:@"zoneName = ?" bindings:v5];

  if ((v2 & 1) == 0)
  {
    CLSInitLog();
    id v6 = [*(id *)(a1 + 48) logSubsystem];
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      id v7 = objc_opt_class();
      uint64_t v8 = *(void **)(a1 + 48);
      id v9 = v7;
      uint64_t v10 = [v8 operationID];
      id v11 = *(void **)(a1 + 56);
      *(_DWORD *)long long buf = 138543874;
      long long v32 = v7;
      __int16 v33 = 2114;
      long long v34 = v10;
      __int16 v35 = 2114;
      long long v36 = v11;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "%{public}@: %{public}@ failed to delete cached zone for classid: %{public}@", buf, 0x20u);
    }
  }
  CLSInitLog();
  uint64_t v12 = [*(id *)(a1 + 48) logSubsystem];
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
  {
    long long v19 = objc_opt_class();
    long long v20 = *(void **)(a1 + 48);
    id v21 = v19;
    int v22 = [v20 operationID];
    id v23 = [*(id *)(a1 + 40) zoneName];
    *(_DWORD *)long long buf = 138543874;
    long long v32 = v19;
    __int16 v33 = 2114;
    long long v34 = v22;
    __int16 v35 = 2112;
    long long v36 = v23;
    _os_log_debug_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "%{public}@: %{public}@ forgot zone: %@", buf, 0x20u);
  }
  id v13 = *(void **)(a1 + 32);
  uint64_t v14 = objc_opt_class();
  uint64_t v30 = *(void *)(a1 + 56);
  id v15 = +[NSArray arrayWithObjects:&v30 count:1];
  v29[0] = _NSConcreteStackBlock;
  v29[1] = 3221225472;
  v29[2] = sub_1000F26D4;
  v29[3] = &unk_1001F4C88;
  void v29[4] = *(void *)(a1 + 48);
  id v16 = [v13 selectAll:v14 where:@"classID = ?" bindings:v15 block:v29];

  if (v16)
  {
    CLSInitLog();
    long long v17 = [*(id *)(a1 + 48) logSubsystem];
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG))
    {
      __int16 v24 = objc_opt_class();
      uint64_t v25 = *(void **)(a1 + 48);
      id v26 = v24;
      uint64_t v27 = [v25 operationID];
      unint64_t v28 = [*(id *)(a1 + 40) zoneName];
      *(_DWORD *)long long buf = 138543874;
      long long v32 = v24;
      __int16 v33 = 2114;
      long long v34 = v27;
      __int16 v35 = 2112;
      long long v36 = v28;
      _os_log_debug_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEBUG, "%{public}@: %{public}@ deleted handouts for zone: %@", buf, 0x20u);
    }
  }
  return v16;
}

void sub_1000F26D4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  id v5 = [v3 parentObjectID];
  LOBYTE(v4) = [v4 deleteHandoutWithObjectID:v5 shouldDeleteDrafts:0];

  if ((v4 & 1) == 0)
  {
    CLSInitLog();
    id v6 = [*(id *)(a1 + 32) logSubsystem];
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      id v7 = objc_opt_class();
      uint64_t v8 = *(void **)(a1 + 32);
      id v9 = v7;
      uint64_t v10 = [v8 operationID];
      id v11 = [v3 parentObjectID];
      int v15 = 138543874;
      id v16 = v7;
      __int16 v17 = 2114;
      long long v18 = v10;
      __int16 v19 = 2114;
      long long v20 = v11;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "%{public}@: %{public}@ failed to delete handout %{public}@", (uint8_t *)&v15, 0x20u);
    }
  }
  uint64_t v12 = *(void **)(a1 + 32);
  id v13 = [v3 parentObjectID];
  uint64_t v14 = [v3 parentObjectID];
  [v12 updateCollectionItemsReferenceObjectID:v13 toType:0 andObjectID:v14];
}

uint64_t sub_1000F2FF4(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 32;
        goto LABEL_43;
      case 2u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 40;
        goto LABEL_43;
      case 3u:
        int v15 = objc_alloc_init(PDDPDate);
        uint64_t v16 = 16;
        goto LABEL_39;
      case 4u:
        int v15 = objc_alloc_init(PDDPDate);
        uint64_t v16 = 24;
        goto LABEL_39;
      case 5u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 68) |= 2u;
        while (2)
        {
          unint64_t v20 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v20 == -1 || v20 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v21 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v20);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v20 + 1;
            v19 |= (unint64_t)(v21 & 0x7F) << v17;
            if (v21 < 0)
            {
              v17 += 7;
              BOOL v9 = v18++ >= 9;
              if (v9)
              {
                LODWORD(v19) = 0;
                goto LABEL_47;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v19) = 0;
        }
LABEL_47:
        uint64_t v27 = 64;
        goto LABEL_52;
      case 6u:
        char v22 = 0;
        unsigned int v23 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 68) |= 1u;
        while (2)
        {
          unint64_t v24 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v24 == -1 || v24 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v24);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v24 + 1;
            v19 |= (unint64_t)(v25 & 0x7F) << v22;
            if (v25 < 0)
            {
              v22 += 7;
              BOOL v9 = v23++ >= 9;
              if (v9)
              {
                LODWORD(v19) = 0;
                goto LABEL_51;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v19) = 0;
        }
LABEL_51:
        uint64_t v27 = 48;
LABEL_52:
        *(_DWORD *)(a1 + v27) = v19;
        goto LABEL_53;
      case 7u:
        int v15 = objc_alloc_init(PDDPDate);
        uint64_t v16 = 56;
LABEL_39:
        objc_storeStrong((id *)(a1 + v16), v15);
        if PBReaderPlaceMark() && (PDDPDateReadFrom((uint64_t)v15, a2))
        {
          PBReaderRecallMark();

LABEL_53:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

        return 0;
      case 8u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 8;
LABEL_43:
        id v26 = *(void **)(a1 + v13);
        *(void *)(a1 + v13) = v12;

        goto LABEL_53;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_53;
    }
  }
}

PDDPDate *sub_1000F3E0C(void *a1)
{
  id v1 = a1;
  if (!v1)
  {
    id v2 = 0;
    goto LABEL_10;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v2 = (PDDPDate *)v1;
    goto LABEL_10;
  }
  id v2 = objc_alloc_init(PDDPDate);
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    [v1 timeIntervalSinceReferenceDate];
LABEL_9:
    -[PDDPDate setTime:](v2, "setTime:");
    goto LABEL_10;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    [v1 doubleValue];
    goto LABEL_9;
  }
  CLSInitLog();
  char v4 = CLSLogUpload;
  if (os_log_type_enabled(CLSLogUpload, OS_LOG_TYPE_INFO))
  {
    int v5 = 138543362;
    id v6 = v1;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "PDDPDate cannot convert %{public}@", (uint8_t *)&v5, 0xCu);
  }
LABEL_10:

  return v2;
}

id sub_1000F3F70(void *a1)
{
  id v1 = a1;
  id v2 = v1;
  if (v1 && [v1 hasTime])
  {
    [v2 time];
    id v3 = +[NSDate dateWithTimeIntervalSinceReferenceDate:](NSDate, "dateWithTimeIntervalSinceReferenceDate:");
  }
  else
  {
    id v3 = 0;
  }

  return v3;
}

PDDPTypedValue *sub_1000F3FE4(void *a1)
{
  id v1 = a1;
  if (!v1)
  {
    id v2 = 0;
    goto LABEL_27;
  }
  id v2 = objc_alloc_init(PDDPTypedValue);
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    [(PDDPTypedValue *)v2 setType:1];
    [(PDDPTypedValue *)v2 setStringValue:v1];
    goto LABEL_27;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    [(PDDPTypedValue *)v2 setType:3];
    sub_1000F3E0C(v1);
    id v3 = (id)objc_claimAutoreleasedReturnValue();
    [(PDDPTypedValue *)v2 setDateValue:v3];
LABEL_7:

    goto LABEL_27;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    [(PDDPTypedValue *)v2 setType:3];
    [(PDDPTypedValue *)v2 setDateValue:v1];
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0)
      {
        uint64_t v14 = +[NSString stringWithFormat:@"Unknown object: %@", objc_opt_class()];
        CLSInitLog();
        int v15 = CLSLogUpload;
        if (os_log_type_enabled(CLSLogUpload, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)long long buf = 138543362;
          uint64_t v22 = v14;
          _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "Failed to create PDDPTypedValue reason: %{public}@", buf, 0xCu);
        }
        id v16 = +[NSException exceptionWithName:NSInvalidArgumentException reason:v14 userInfo:0];
        objc_exception_throw(v16);
      }
      [(PDDPTypedValue *)v2 setType:2];
      long long v19 = 0u;
      long long v20 = 0u;
      long long v17 = 0u;
      long long v18 = 0u;
      id v3 = v1;
      id v4 = [v3 countByEnumeratingWithState:&v17 objects:v23 count:16];
      if (v4)
      {
        id v5 = v4;
        uint64_t v6 = *(void *)v18;
        do
        {
          for (i = 0; i != v5; i = (char *)i + 1)
          {
            if (*(void *)v18 != v6) {
              objc_enumerationMutation(v3);
            }
            uint64_t v8 = *(void *)(*((void *)&v17 + 1) + 8 * i);
            objc_opt_class();
            if (objc_opt_isKindOfClass())
            {
              [(PDDPTypedValue *)v2 addStringListValue:v8];
            }
            else
            {
              CLSInitLog();
              BOOL v9 = (void *)CLSLogUpload;
              if (os_log_type_enabled(CLSLogUpload, OS_LOG_TYPE_DEBUG))
              {
                int v10 = v9;
                id v11 = objc_opt_class();
                *(_DWORD *)long long buf = 138543362;
                uint64_t v22 = (uint64_t)v11;
                id v12 = v11;
                _os_log_debug_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "Unexpected element type (%{public}@ in string list.", buf, 0xCu);
              }
            }
          }
          id v5 = [v3 countByEnumeratingWithState:&v17 objects:v23 count:16];
        }
        while (v5);
      }
      goto LABEL_7;
    }
    if (sub_1000C0F24((unint64_t)v1))
    {
      [(PDDPTypedValue *)v2 setType:7];
      [v1 doubleValue];
      -[PDDPTypedValue setDoubleValue:](v2, "setDoubleValue:");
    }
    else
    {
      [(PDDPTypedValue *)v2 setType:5];
      -[PDDPTypedValue setInt64Value:](v2, "setInt64Value:", [v1 longLongValue]);
    }
  }
LABEL_27:

  return v2;
}

id sub_1000F43B4(void *a1)
{
  id v1 = a1;
  id v2 = v1;
  if (!v1 || ![v1 hasType])
  {
    id v4 = 0;
    goto LABEL_17;
  }
  if (![v2 hasStringValue])
  {
    if ([v2 hasDateValue]
      && ([v2 dateValue],
          id v5 = objc_claimAutoreleasedReturnValue(),
          unsigned int v6 = [v5 hasTime],
          v5,
          v6))
    {
      unint64_t v7 = [v2 dateValue];
      [v7 time];
      id v4 = +[NSDate dateWithTimeIntervalSinceReferenceDate:](NSDate, "dateWithTimeIntervalSinceReferenceDate:");
    }
    else
    {
      if ([v2 hasInt64Value])
      {
        uint64_t v3 = +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", [v2 int64Value]);
        goto LABEL_16;
      }
      if ([v2 hasDoubleValue])
      {
        [v2 doubleValue];
        uint64_t v3 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
        goto LABEL_16;
      }
      if ([v2 hasBoolValue])
      {
        uint64_t v3 = +[NSNumber numberWithBool:](NSNumber, "numberWithBool:", [v2 BOOLValue]);
        goto LABEL_16;
      }
      if ([v2 type] != 2)
      {
        uint64_t v14 = +[NSString stringWithFormat:@"Unknown object: %@", objc_opt_class()];
        CLSInitLog();
        int v15 = CLSLogUpload;
        if (os_log_type_enabled(CLSLogUpload, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)long long buf = 138543362;
          uint64_t v22 = v14;
          _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "Failed to convert from PDDPTypedValue reason: %{public}@", buf, 0xCu);
        }
        id v16 = +[NSException exceptionWithName:NSInvalidArgumentException reason:v14 userInfo:0];
        objc_exception_throw(v16);
      }
      BOOL v9 = [v2 stringListValues];
      id v4 = +[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", [v9 count]);

      long long v19 = 0u;
      long long v20 = 0u;
      long long v17 = 0u;
      long long v18 = 0u;
      unint64_t v7 = [v2 stringListValues];
      id v10 = [v7 countByEnumeratingWithState:&v17 objects:v23 count:16];
      if (v10)
      {
        id v11 = v10;
        uint64_t v12 = *(void *)v18;
        do
        {
          for (i = 0; i != v11; i = (char *)i + 1)
          {
            if (*(void *)v18 != v12) {
              objc_enumerationMutation(v7);
            }
            [v4 addObject:*(void *)(*((void *)&v17 + 1) + 8 * i)];
          }
          id v11 = [v7 countByEnumeratingWithState:&v17 objects:v23 count:16];
        }
        while (v11);
      }
    }

    goto LABEL_17;
  }
  uint64_t v3 = [v2 stringValue];
LABEL_16:
  id v4 = (void *)v3;
LABEL_17:

  return v4;
}

id sub_1000F46E0(void *a1)
{
  id v1 = a1;
  id v2 = v1;
  if (v1)
  {
    uint64_t v3 = [v1 allKeys];
    +[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", [v3 count]);
    id v17 = (id)objc_claimAutoreleasedReturnValue();
    long long v18 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    id v4 = v3;
    id v5 = [v4 countByEnumeratingWithState:&v18 objects:v22 count:16];
    if (v5)
    {
      id v6 = v5;
      uint64_t v7 = *(void *)v19;
      do
      {
        for (i = 0; i != v6; i = (char *)i + 1)
        {
          if (*(void *)v19 != v7) {
            objc_enumerationMutation(v4);
          }
          BOOL v9 = *(void **)(*((void *)&v18 + 1) + 8 * i);
          id v10 = [v2 objectForKeyedSubscript:v9];
          if (v9) {
            BOOL v11 = v10 == 0;
          }
          else {
            BOOL v11 = 1;
          }
          if (v11)
          {

            uint64_t v14 = 0;
          }
          else
          {
            id v12 = v10;
            id v13 = v9;
            uint64_t v14 = objc_alloc_init(PDDPMapEntry);
            [(PDDPMapEntry *)v14 setKey:v13];

            int v15 = sub_1000F3FE4(v12);

            [(PDDPMapEntry *)v14 setValue:v15];
            if (v14) {
              [v17 addObject:v14];
            }
          }
        }
        id v6 = [v4 countByEnumeratingWithState:&v18 objects:v22 count:16];
      }
      while (v6);
    }
  }
  else
  {
    id v17 = 0;
  }

  return v17;
}

id sub_1000F48C8(void *a1)
{
  id v1 = a1;
  id v2 = v1;
  if (v1)
  {
    uint64_t v3 = +[NSMutableDictionary dictionaryWithCapacity:](NSMutableDictionary, "dictionaryWithCapacity:", [v1 count]);
    long long v14 = 0u;
    long long v15 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    id v4 = v2;
    id v5 = [v4 countByEnumeratingWithState:&v14 objects:v18 count:16];
    if (v5)
    {
      id v6 = v5;
      uint64_t v7 = *(void *)v15;
      do
      {
        for (i = 0; i != v6; i = (char *)i + 1)
        {
          if (*(void *)v15 != v7) {
            objc_enumerationMutation(v4);
          }
          BOOL v9 = *(void **)(*((void *)&v14 + 1) + 8 * i);
          if (objc_msgSend(v9, "hasKey", (void)v14) && objc_msgSend(v9, "hasValue"))
          {
            id v10 = [v9 value];
            BOOL v11 = sub_1000F43B4(v10);

            if (v11)
            {
              id v12 = [v9 key];
              [v3 setObject:v11 forKeyedSubscript:v12];
            }
          }
        }
        id v6 = [v4 countByEnumeratingWithState:&v14 objects:v18 count:16];
      }
      while (v6);
    }
  }
  else
  {
    uint64_t v3 = 0;
  }

  return v3;
}

id sub_1000F4A70(void *a1)
{
  id v1 = a1;
  if (([v1 isEqualToString:@"UNKNOWN_TYPE"] & 1) != 0
    || ([v1 isEqualToString:@"STATUS"] & 1) != 0)
  {
    goto LABEL_3;
  }
  if (([v1 isEqualToString:@"HANDOUT"] & 1) == 0
    && ([v1 isEqualToString:@"ATTACHMENT"] & 1) == 0
    && ([v1 isEqualToString:@"RECIPIENT"] & 1) == 0
    && ([v1 isEqualToString:@"CLASS"] & 1) == 0
    && ([v1 isEqualToString:@"PERSON"] & 1) == 0
    && ([v1 isEqualToString:@"CLASS_MEMBER"] & 1) == 0)
  {
    if ([v1 isEqualToString:@"CLASS_ZONE"]) {
      goto LABEL_3;
    }
    if ([v1 isEqualToString:@"ASSET"]) {
      goto LABEL_15;
    }
    if (([v1 isEqualToString:@"AUTHORIZATION_STATUS"] & 1) != 0
      || ([v1 isEqualToString:@"COMPLETION_STATUS"] & 1) != 0)
    {
LABEL_3:

      id v2 = 0;
      goto LABEL_16;
    }
    if (([v1 isEqualToString:@"STATE_CHANGE"] & 1) == 0)
    {
      if (([v1 isEqualToString:@"COLLECTION"] & 1) == 0
        && ([v1 isEqualToString:@"COLLECTION_ITEM"] & 1) == 0
        && ([v1 isEqualToString:@"ARCHIVED_HANDOUT"] & 1) == 0
        && ([v1 isEqualToString:@"ARCHIVED_HANDOUT_ATTACHMENT"] & 1) == 0
        && ([v1 isEqualToString:@"ARCHIVED_ASSET_REFERENCE"] & 1) == 0
        && ([v1 isEqualToString:@"SURVEY"] & 1) == 0
        && ([v1 isEqualToString:@"SURVEY_STEP"] & 1) == 0
        && ([v1 isEqualToString:@"SURVEY_STEP_ANSWER"] & 1) == 0
        && ([v1 isEqualToString:@"ARCHIVED_SURVEY"] & 1) == 0
        && ([v1 isEqualToString:@"ARCHIVED_SURVEY_STEP"] & 1) == 0
        && ([v1 isEqualToString:@"SCHEDULE"] & 1) == 0
        && ([v1 isEqualToString:@"SCHEDULED_EVENT"] & 1) == 0
        && ([v1 isEqualToString:@"ASSESSMENT"] & 1) == 0
        && ([v1 isEqualToString:@"TAKER_WORK"] & 1) == 0
        && ([v1 isEqualToString:@"ARCHIVED_ASSESSMENT"] & 1) == 0
        && ([v1 isEqualToString:@"RETURNED_HANDOUT"] & 1) == 0
        && ([v1 isEqualToString:@"RETURNED_ATTACHMENT"] & 1) == 0
        && ([v1 isEqualToString:@"RETURNED_ASSESSMENT"] & 1) == 0)
      {
        [v1 isEqualToString:@"RETURNED_TAKER_WORK"];
      }
      goto LABEL_3;
    }
  }
LABEL_15:

  id v2 = objc_opt_class();
LABEL_16:

  return v2;
}

CFStringRef sub_1000F4DC0(void *a1)
{
  id v1 = a1;
  id v2 = v1;
  CFStringRef v3 = @"UNKNOWN_TYPE";
  if (v1)
  {
    if ([v1 isEqualToString:@"CLSHandout"])
    {
      CFStringRef v3 = @"HANDOUT";
    }
    else if ([v2 isEqualToString:@"CLSHandoutAttachment"])
    {
      CFStringRef v3 = @"ATTACHMENT";
    }
    else if ([v2 isEqualToString:@"CLSHandoutRecipient"])
    {
      CFStringRef v3 = @"RECIPIENT";
    }
    else if ([v2 isEqualToString:@"CLSClass"])
    {
      CFStringRef v3 = @"CLASS";
    }
    else if ([v2 isEqualToString:@"CLSPerson"])
    {
      CFStringRef v3 = @"PERSON";
    }
    else if ([v2 isEqualToString:@"CLSClassMember"])
    {
      CFStringRef v3 = @"CLASS_MEMBER";
    }
    else if ([v2 isEqualToString:@"CLSAsset"])
    {
      CFStringRef v3 = @"ASSET";
    }
    else if ([v2 isEqualToString:@"CLSCollaborationState"])
    {
      CFStringRef v3 = @"STATE_CHANGE";
    }
  }

  return v3;
}

uint64_t sub_1000F4EF8(int a1)
{
  if (a1 > 299)
  {
    switch(a1)
    {
      case 802:
        uint64_t result = 310;
        break;
      case 803:
        uint64_t result = 382;
        break;
      case 804:
        uint64_t result = 328;
        break;
      case 805:
        uint64_t result = 331;
        break;
      case 806:
        uint64_t result = 340;
        break;
      default:
        if (a1 != 500) {
          return 100;
        }
LABEL_13:
        uint64_t result = 302;
        break;
    }
  }
  else if (a1 <= 99)
  {
    uint64_t result = 0;
    if (a1 != 1)
    {
      if (a1 == 3)
      {
        return 9;
      }
      else if (a1 != 4)
      {
        return 100;
      }
    }
  }
  else
  {
    switch(a1)
    {
      case 'd':
        uint64_t result = 309;
        break;
      case 'f':
        uint64_t result = 4;
        break;
      case 'j':
      case 'l':
        goto LABEL_13;
      case 'k':
        uint64_t result = 301;
        break;
      case 'm':
        uint64_t result = 321;
        break;
      case 'p':
        uint64_t result = 318;
        break;
      case 'q':
        uint64_t result = 319;
        break;
      case 'r':
        uint64_t result = 339;
        break;
      case 's':
        uint64_t result = 334;
        break;
      case 't':
        uint64_t result = 335;
        break;
      case 'u':
        uint64_t result = 336;
        break;
      case 'v':
        uint64_t result = 337;
        break;
      case 'w':
        uint64_t result = 338;
        break;
      default:
        return 100;
    }
  }
  return result;
}

uint64_t sub_1000F5094(void *a1)
{
  id v1 = a1;
  uint64_t v2 = sub_1000F4EF8((int)[v1 code]);
  CFStringRef v3 = [v1 message];
  id v4 = [v3 length];

  if (v4 && v2 == 318)
  {
    uint64_t v5 = [v1 message];
    if (v5
      && (id v6 = (void *)v5,
          [v1 message],
          uint64_t v7 = objc_claimAutoreleasedReturnValue(),
          unsigned __int8 v8 = [@"MAID_REQUEST_ALREADY_EXISTS" isEqualToString:v7],
          v7,
          v6,
          (v8 & 1) != 0))
    {
      uint64_t v2 = 332;
    }
    else
    {
      uint64_t v9 = [v1 message];
      if (v9)
      {
        id v10 = (void *)v9;
        BOOL v11 = [v1 message];
        unsigned int v12 = [@"ACCOUNT_ALREADY_EXISTS" isEqualToString:v11];

        if (v12) {
          uint64_t v2 = 333;
        }
        else {
          uint64_t v2 = 318;
        }
      }
      else
      {
        uint64_t v2 = 318;
      }
    }
  }

  return v2;
}

id sub_1000F51A0(void *a1, char a2)
{
  id v3 = a1;
  id v4 = [v3 code];
  BOOL v5 = v4 == 1 || v4 == 5;
  if (v5 || (id v7 = v4, v4 == 3) && (a2 & 1) != 0)
  {
    id v6 = 0;
    goto LABEL_68;
  }
  uint64_t v8 = sub_1000F4EF8((int)v4);
  if (v8 == 100)
  {
    if ([v3 hasKey])
    {
      uint64_t v9 = [v3 key];
      uint64_t v10 = [v3 key];
      if (v10)
      {
        BOOL v11 = (void *)v10;
        unsigned int v12 = [v3 key];
        unsigned __int8 v13 = [v12 isEqualToString:@"ClassNotFoundError"];

        if (v13)
        {
          uint64_t v8 = 312;
          goto LABEL_21;
        }
      }
      else
      {
      }
      long long v14 = [v3 key];
      uint64_t v15 = [v3 key];
      if (v15)
      {
        long long v16 = (void *)v15;
        long long v17 = [v3 key];
        unsigned int v18 = [v17 isEqualToString:@"HandoutPublishError"];

        if (v18) {
          uint64_t v8 = 313;
        }
        else {
          uint64_t v8 = 100;
        }
        goto LABEL_21;
      }
    }
    uint64_t v8 = 100;
  }
LABEL_21:
  if ([v3 hasInternalMessage])
  {
    long long v19 = [v3 internalMessage];
    long long v20 = +[NSString stringWithFormat:@" (%@)", v19];
  }
  else
  {
    long long v20 = &stru_1001F6580;
  }
  if ((int)v7 > 299)
  {
    switch((int)v7)
    {
      case 800:
        long long v21 = @"E_NOT_APPLICABLE_TYPE";
        break;
      case 801:
        long long v21 = @"E_ENTITY_NOT_FOUND";
        break;
      case 802:
        long long v21 = @"E_ENTITY_PRIVILEGE_CHANGE";
        break;
      case 803:
        long long v21 = @"E_MUST_ACCEPT_TERMS";
        break;
      case 804:
        long long v21 = @"E_ENTITY_EXPIRED";
        break;
      case 805:
        long long v21 = @"E_NOT_ALLOWED_FEDERATED_ORGANIZATION";
        break;
      case 806:
        long long v21 = @"E_DISALLOWED_EMAIL_DOMAIN";
        break;
      default:
        if (v7 == 300)
        {
          long long v21 = @"E_DEVICE_UNSUPPORTED";
        }
        else if (v7 == 500)
        {
          long long v21 = @"E_INVALID_FIELD_VALUE";
        }
        else
        {
LABEL_66:
          long long v21 = +[NSString stringWithFormat:@"(unknown: %i)", v7];
        }
        break;
    }
  }
  else
  {
    switch((int)v7)
    {
      case 'd':
        long long v21 = @"E_BOOTSTRAP_REQUIRED";
        break;
      case 'e':
        long long v21 = @"E_AUTHENTICATION_FAILED";
        break;
      case 'f':
        long long v21 = @"E_NOT_AUTHORIZED";
        break;
      case 'g':
        long long v21 = @"E_MESCAL_SIGNATURE_REQUIRED";
        break;
      case 'h':
        long long v21 = @"E_MESCAL_BAD_SIGNATURE";
        break;
      case 'i':
        long long v21 = @"E_MESCAL_PARSE_ERROR";
        break;
      case 'j':
        long long v21 = @"E_BAD_REQUEST";
        break;
      case 'k':
        long long v21 = @"E_BAD_PROTOCOL_VERSION";
        break;
      case 'l':
        long long v21 = @"E_REQUEST_TOO_LARGE";
        break;
      case 'm':
        long long v21 = @"E_REQUEST_TOO_MANY_ITEMS";
        break;
      case 'n':
        long long v21 = @"E_SERVER_BUSY";
        break;
      case 'o':
        long long v21 = @"E_ACCESS_DENIED";
        break;
      case 'p':
        long long v21 = @"E_CONFLICT";
        break;
      case 'q':
        long long v21 = @"E_INVALID_STATE";
        break;
      case 'r':
        long long v21 = @"E_LOCK_TAKEN";
        break;
      case 's':
        long long v21 = @"E_DOWNSTREAM_SERVICE_FAILED";
        break;
      case 't':
        long long v21 = @"E_DOWNSTREAM_SERVICE_THROTTLED";
        break;
      case 'u':
        long long v21 = @"E_DRIVE_USER_QUOTA_EXCEEDED";
        break;
      case 'v':
        long long v21 = @"E_DRIVE_GROUP_QUOTA_EXCEEDED";
        break;
      case 'w':
        long long v21 = @"E_DRIVE_ORG_QUOTA_EXCEEDED";
        break;
      case 'x':
        long long v21 = @"E_RECORD_LIMIT_EXCEEDED";
        break;
      case 'y':
        long long v21 = @"E_DISALLOWED_COUNTRY_CODE";
        break;
      default:
        long long v21 = @"UNKNOWN_CODE";
        switch((int)v7)
        {
          case 0:
            goto LABEL_67;
          case 1:
            long long v21 = @"S_OK";
            break;
          case 2:
            long long v21 = @"E_ERROR";
            break;
          case 3:
            long long v21 = @"S_MIXED_RESPONSE";
            break;
          case 4:
            long long v21 = @"S_OK_HAS_MORE_DATA";
            break;
          case 5:
            long long v21 = @"S_PROCESSING";
            break;
          default:
            goto LABEL_66;
        }
        break;
    }
  }
LABEL_67:
  uint64_t v22 = [v3 key];
  unsigned int v23 = [v3 message];
  unint64_t v24 = +[NSString stringWithFormat:@"Server error: %@ (%ld) key: %@ message: %@%@", v21, (int)v7, v22, v23, v20];
  id v6 = +[NSError cls_createErrorWithCode:v8 description:v24];

LABEL_68:

  return v6;
}

id sub_1000F56EC(void *a1)
{
  id v1 = a1;
  if ([v1 hasTitle] && objc_msgSend(v1, "hasUrl"))
  {
    v8[0] = CLSServerAlertButtonTitleKey;
    uint64_t v2 = [v1 title];
    v9[0] = v2;
    v8[1] = CLSServerAlertButtonURLKey;
    id v3 = [v1 url];
    v9[1] = v3;
    id v4 = +[NSDictionary dictionaryWithObjects:v9 forKeys:v8 count:2];

LABEL_6:
    goto LABEL_8;
  }
  if ([v1 hasTitle])
  {
    uint64_t v6 = CLSServerAlertButtonTitleKey;
    uint64_t v2 = [v1 title];
    id v7 = v2;
    id v4 = +[NSDictionary dictionaryWithObjects:&v7 forKeys:&v6 count:1];
    goto LABEL_6;
  }
  id v4 = 0;
LABEL_8:

  return v4;
}

id sub_1000F5844(void *a1)
{
  id v1 = a1;
  uint64_t v2 = v1;
  if (v1)
  {
    id v3 = [v1 serverAlerts];
    id v4 = [v3 count];

    if (v4)
    {
      BOOL v5 = objc_opt_new();
      long long v50 = 0u;
      long long v51 = 0u;
      long long v52 = 0u;
      long long v53 = 0u;
      uint64_t v43 = v2;
      uint64_t v6 = [v2 serverAlerts];
      id v7 = [v6 countByEnumeratingWithState:&v50 objects:v57 count:16];
      if (v7)
      {
        id v8 = v7;
        uint64_t v9 = *(void *)v51;
        uint64_t v44 = v5;
        do
        {
          uint64_t v10 = 0;
          do
          {
            if (*(void *)v51 != v9) {
              objc_enumerationMutation(v6);
            }
            BOOL v11 = *(void **)(*((void *)&v50 + 1) + 8 * (void)v10);
            if ([v11 hasAlertId]
              && [v11 hasTitle]
              && [v11 hasMessage]
              && [v11 hasDateCreated]
              && [v11 hasDateCreated]
              && [v11 hasDateLastModified]
              && [v11 hasDateExpires]
              && ([v11 hasDefaultButtonInfo] & 1) != 0)
            {
              id v12 = [objc_alloc((Class)CLSServerAlert) _init];
              unsigned __int8 v13 = [v11 alertId];
              [v12 setObjectID:v13];

              long long v14 = [v11 dateCreated];
              uint64_t v15 = sub_1000F3F70(v14);
              [v12 setDateCreated:v15];

              long long v16 = [v11 dateLastModified];
              long long v17 = sub_1000F3F70(v16);
              [v12 setDateLastModified:v17];

              unsigned int v18 = [v11 dateExpires];
              if ([v18 hasTime])
              {
                long long v19 = [v11 dateExpires];
                [v19 time];
                double v21 = v20;

                if (v21 != 0.0) {
                  goto LABEL_25;
                }
              }
              else
              {
              }
              char v25 = [v11 dateExpires];
              [v25 setTime:1.0];

LABEL_25:
              id v26 = [v11 dateExpires];
              uint64_t v27 = sub_1000F3F70(v26);
              [v12 setDateExpires:v27];

              objc_msgSend(v12, "setAlertType:", (int)objc_msgSend(v11, "displayType"));
              objc_msgSend(v12, "setDisplayRoles:", (int)objc_msgSend(v11, "displayRoles"));
              unint64_t v28 = [v11 title];
              [v12 setTitle:v28];

              id v29 = [v11 message];
              [v12 setMessage:v29];

              uint64_t v30 = [v11 defaultButtonInfo];
              long long v31 = sub_1000F56EC(v30);
              [v12 setDefaultButtonInfo:v31];

              long long v32 = [v11 otherButtonInfos];
              id v33 = [v32 count];

              if (v33)
              {
                long long v45 = v12;
                long long v34 = objc_opt_new();
                long long v46 = 0u;
                long long v47 = 0u;
                long long v48 = 0u;
                long long v49 = 0u;
                __int16 v35 = [v11 otherButtonInfos];
                id v36 = [v35 countByEnumeratingWithState:&v46 objects:v54 count:16];
                if (v36)
                {
                  id v37 = v36;
                  uint64_t v38 = *(void *)v47;
                  do
                  {
                    for (i = 0; i != v37; i = (char *)i + 1)
                    {
                      if (*(void *)v47 != v38) {
                        objc_enumerationMutation(v35);
                      }
                      id v40 = sub_1000F56EC(*(void **)(*((void *)&v46 + 1) + 8 * i));
                      if (v40) {
                        [v34 addObject:v40];
                      }
                    }
                    id v37 = [v35 countByEnumeratingWithState:&v46 objects:v54 count:16];
                  }
                  while (v37);
                }

                id v12 = v45;
                [v45 setOtherButtonInfos:v34];

                BOOL v5 = v44;
              }
              [v5 addObject:v12];

              goto LABEL_21;
            }
            CLSInitLog();
            uint64_t v22 = (void *)CLSLogOperations;
            if (os_log_type_enabled(CLSLogOperations, OS_LOG_TYPE_DEFAULT))
            {
              unsigned int v23 = v22;
              unint64_t v24 = [v11 dictionaryRepresentation];
              *(_DWORD *)long long buf = 138412290;
              long long v56 = v24;
              _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "Ignoring Server Alert (missing required fields:) %@", buf, 0xCu);
            }
LABEL_21:
            uint64_t v10 = (char *)v10 + 1;
          }
          while (v10 != v8);
          id v41 = [v6 countByEnumeratingWithState:&v50 objects:v57 count:16];
          id v8 = v41;
        }
        while (v41);
      }

      if ([v5 count]) {
        id v4 = v5;
      }
      else {
        id v4 = 0;
      }

      uint64_t v2 = v43;
    }
  }
  else
  {
    id v4 = 0;
  }

  return v4;
}

BOOL sub_1000F6DF0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 8;
        goto LABEL_33;
      case 2u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 16;
        goto LABEL_33;
      case 3u:
        long long v14 = objc_alloc_init(PDDPDate);
        uint64_t v15 = 24;
        goto LABEL_22;
      case 4u:
        long long v14 = objc_alloc_init(PDDPDate);
        uint64_t v15 = 32;
LABEL_22:
        objc_storeStrong((id *)(a1 + v15), v14);
        if (!PBReaderPlaceMark() || (PDDPDateReadFrom((uint64_t)v14, a2) & 1) == 0) {
          goto LABEL_37;
        }
        goto LABEL_31;
      case 5u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 40;
        goto LABEL_33;
      case 6u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 64;
        goto LABEL_33;
      case 8u:
        long long v14 = objc_alloc_init(PDDPEntityMeta);
        objc_storeStrong((id *)(a1 + 48), v14);
        if PBReaderPlaceMark() && (sub_1000A7408((uint64_t)v14, a2))
        {
LABEL_31:
          PBReaderRecallMark();
LABEL_34:

LABEL_35:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }
LABEL_37:

        return 0;
      case 0xAu:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 56;
LABEL_33:
        long long v14 = *(PDDPDate **)(a1 + v13);
        *(void *)(a1 + v13) = v12;
        goto LABEL_34;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_35;
    }
  }
}

uint64_t sub_1000F8D00(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 16;
        goto LABEL_36;
      case 2u:
        char v15 = 0;
        unsigned int v16 = 0;
        uint64_t v17 = 0;
        *(unsigned char *)(a1 + 32) |= 1u;
        while (2)
        {
          unint64_t v18 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v18 == -1 || v18 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v19 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v18);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v18 + 1;
            v17 |= (unint64_t)(v19 & 0x7F) << v15;
            if (v19 < 0)
            {
              v15 += 7;
              BOOL v9 = v16++ >= 9;
              if (v9)
              {
                LODWORD(v17) = 0;
                goto LABEL_40;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v17) = 0;
        }
LABEL_40:
        uint64_t v25 = 24;
        goto LABEL_45;
      case 3u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v17 = 0;
        *(unsigned char *)(a1 + 32) |= 2u;
        break;
      case 4u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 8;
LABEL_36:
        unint64_t v24 = *(void **)(a1 + v13);
        *(void *)(a1 + v13) = v12;

        continue;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        continue;
    }
    while (1)
    {
      unint64_t v22 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v22 == -1 || v22 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v23 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v22);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v22 + 1;
      v17 |= (unint64_t)(v23 & 0x7F) << v20;
      if ((v23 & 0x80) == 0) {
        goto LABEL_42;
      }
      v20 += 7;
      BOOL v9 = v21++ >= 9;
      if (v9)
      {
        LODWORD(v17) = 0;
        goto LABEL_44;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_42:
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      LODWORD(v17) = 0;
    }
LABEL_44:
    uint64_t v25 = 28;
LABEL_45:
    *(_DWORD *)(a1 + v25) = v17;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

id sub_1000FA248(void *a1, void *a2)
{
  uint64_t v3 = CLSProgressdBundleIdentifier;
  char v4 = a2;
  id v5 = a1;
  unint64_t v6 = (objc_class *)objc_opt_class();
  uint64_t v7 = NSStringFromClass(v6);
  char v8 = (void *)v7;
  CFStringRef v9 = @".";
  CFStringRef v10 = &stru_1001F6580;
  if (v4) {
    CFStringRef v10 = v4;
  }
  else {
    CFStringRef v9 = &stru_1001F6580;
  }
  BOOL v11 = +[NSString stringWithFormat:@"%@.%@%@%@.%p", v3, v7, v9, v10, v5];

  id v12 = v11;
  id v13 = [v12 UTF8String];

  return v13;
}

uint64_t sub_1000FA31C()
{
  self;
  uint64_t result = objc_opt_class();
  if (result)
  {
    id v1 = +[UMUserManager sharedManager];
    id v2 = [v1 isSharedIPad];

    return (uint64_t)v2;
  }
  return result;
}

void sub_1000FA36C(id a1)
{
  id v3 = +[NSBundle mainBundle];
  uint64_t v1 = [v3 bundleIdentifier];
  id v2 = (void *)qword_10023E6D0;
  qword_10023E6D0 = v1;

  if (![(id)qword_10023E6D0 length]) {
    objc_storeStrong((id *)&qword_10023E6D0, CLSProgressdBundleIdentifier);
  }
}

uint64_t sub_1000FA3F4(uint64_t a1, void *a2)
{
  id v2 = a2;
  self;
  if (+[CLSUtil isAppleInternalInstall])
  {
    id v3 = +[NSUserDefaults standardUserDefaults];
    char v4 = [v3 stringForKey:v2];

    if (v4) {
      uint64_t v5 = (uint64_t)[v4 integerValue];
    }
    else {
      uint64_t v5 = -1;
    }
  }
  else
  {
    uint64_t v5 = -1;
  }

  return v5;
}

_DWORD *sub_1000FA490(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  uint64_t v1 = +[NSPropertyListSerialization dataWithPropertyList:a1 format:200 options:0 error:0];
  id v2 = [v1 length];
  id v3 = malloc_type_calloc(1uLL, (size_t)v2 + 200, 0x6D39AC6uLL);
  _DWORD *v3 = 1;
  v3[1] = v2;
  id v4 = v1;
  memcpy(v3 + 50, [v4 bytes], (size_t)v2);

  return v3;
}

void sub_1000FA538(id a1)
{
  uint64_t v1 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  attr = dispatch_queue_attr_make_with_qos_class(v1, QOS_CLASS_USER_INITIATED, 0);

  id v2 = dispatch_get_global_queue(25, 0);
  dispatch_queue_t v3 = dispatch_queue_create_with_target_V2("com.apple.progressd.lock", attr, v2);
  id v4 = (void *)qword_10023E6E0;
  qword_10023E6E0 = (uint64_t)v3;
}

void sub_1000FA5D8(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = qword_10023E6F0;
  qword_10023E6F0 = v1;

  _objc_release_x1(v1, v2);
}

id sub_1000FA6B4(id a1, void *a2)
{
  id v4 = a2;
  uint64_t v5 = v4;
  if (a1 && v4)
  {
    v18.receiver = a1;
    v18.super_class = (Class)PDDatabase;
    id v6 = objc_msgSendSuper2(&v18, "init");
    id v7 = v6;
    if (v6)
    {
      char v8 = (const char *)sub_1000FA248(v6, @"db");
      CFStringRef v9 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
      dispatch_queue_t v10 = dispatch_queue_create(v8, v9);
      BOOL v11 = (void *)*((void *)v7 + 1);
      *((void *)v7 + 1) = v10;

      dispatch_queue_set_specific(*((dispatch_queue_t *)v7 + 1), off_10023CAF0, v7, 0);
      objc_storeStrong((id *)v7 + 7, a2);
      uint64_t v12 = objc_msgSend(@"db", "stringByAppendingFormat:", @"%p", v7);
      id v13 = (void *)*((void *)v7 + 3);
      *((void *)v7 + 3) = v12;

      *((unsigned char *)v7 + 16) = 0;
      *((void *)v7 + 6) = 0;
      long long v14 = sub_1000687D8((id *)[PDPool alloc], @"db", (void *)2, v7, 5.0);
      char v15 = (void *)*((void *)v7 + 4);
      *((void *)v7 + 4) = v14;
    }
    a1 = v7;
    id v16 = a1;
  }
  else
  {
    id v16 = 0;
  }

  return v16;
}

id sub_1000FA848(uint64_t a1)
{
  if (a1)
  {
    CFStringRef v5 = @"PDDatabaseStatsPathKey";
    id v1 = *(id *)(a1 + 56);
    uint64_t v2 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", [v1 fileSystemRepresentation]);
    id v6 = v2;
    dispatch_queue_t v3 = +[NSDictionary dictionaryWithObjects:&v6 forKeys:&v5 count:1];
  }
  else
  {
    dispatch_queue_t v3 = 0;
  }

  return v3;
}

void sub_1000FA92C(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    [v1 lock];
    *((unsigned char *)v1 + 16) = 1;
    sub_1000688AC(v1[4]);
    [v1 unlock];
  }
}

id sub_1000FA9CC(void *a1)
{
  if (!a1) {
    return 0;
  }
  id v1 = a1;
  CLSInitLog();
  uint64_t v2 = CLSLogDatabase;
  if (os_log_type_enabled(CLSLogDatabase, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v11) = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Attempting to truncate database", (uint8_t *)&v11, 2u);
  }
  [v1 currentDB];
  if (objc_claimAutoreleasedReturnValue()) {
    __assert_rtn("-[PDDatabase truncate]", "PDDatabase.m", 184, "strongSelf.currentDB == nil");
  }
  [v1 lock];
  sub_1000688AC(v1[4]);
  dispatch_queue_t v3 = sub_100009E10((uint64_t)v1[4]);
  id v4 = v3;
  if (v3)
  {
    [v3 truncate];
    uint64_t v5 = (int)[v4 totalChangesCount];
    sub_100009F5C((uint64_t)v1[4], v4);
    id v6 = sub_1000FABCC(v1);
  }
  else
  {
    id v6 = 0;
    uint64_t v5 = 0;
  }
  sub_1000688AC(v1[4]);
  [v1 cleanupAssociatedObjects];
  [v1 unlock];
  id v7 = +[NSDate date];
  [v1 _notifyOfDataChange:&__NSArray0__struct changeTime:v7 changedRowCount:v5];

  CLSInitLog();
  char v8 = CLSLogDatabase;
  if (os_log_type_enabled(CLSLogDatabase, OS_LOG_TYPE_DEFAULT))
  {
    CFStringRef v9 = @"unsuccessful";
    if (v6) {
      CFStringRef v9 = @"successful";
    }
    int v11 = 138412290;
    CFStringRef v12 = v9;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Database truncate %@", (uint8_t *)&v11, 0xCu);
  }

  return v6;
}

id sub_1000FABCC(void *a1)
{
  if (!a1) {
    return 0;
  }
  id v1 = a1;
  [v1 lock];
  uint64_t v2 = sub_100009E10(v1[4]);
  id v16 = 0;
  unsigned __int8 v3 = [v2 disableForeignKeys:&v16];
  id v4 = v16;
  if (v3)
  {
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    void v14[2] = sub_1000FB01C;
    void v14[3] = &unk_1001F4E58;
    v14[4] = v1;
    id v5 = v2;
    id v15 = v5;
    id v6 = [v5 performTransactionWithType:2 error:0 usingBlock:v14];
    sub_100009F5C(v1[4], v5);
    if ((v6 & 1) == 0)
    {
      CLSInitLog();
      id v7 = CLSLogDatabase;
      if (os_log_type_enabled(CLSLogDatabase, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)long long buf = 0;
        _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "migration failed", buf, 2u);
      }
    }
    id v13 = v4;
    unsigned __int8 v8 = [v5 enableForeignKeys:&v13];
    id v9 = v13;

    if ((v8 & 1) == 0)
    {
      CLSInitLog();
      dispatch_queue_t v10 = CLSLogDatabase;
      if (os_log_type_enabled(CLSLogDatabase, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)long long buf = 138543362;
        id v18 = v9;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "Failed to turn on foreign_keys support; %{public}@",
          buf,
          0xCu);
      }
    }
    [v1 unlock];
  }
  else
  {
    CLSInitLog();
    int v11 = CLSLogDatabase;
    if (os_log_type_enabled(CLSLogDatabase, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 138543362;
      id v18 = v4;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "Failed to turn off foreign_keys support; %{public}@",
        buf,
        0xCu);
    }
    [v1 unlock];
    id v6 = 0;
    id v9 = v4;
  }

  return v6;
}

id sub_1000FB01C(uint64_t a1)
{
  [*(id *)(a1 + 32) setCurrentDB:*(void *)(a1 + 40)];
  if ([*(id *)(a1 + 32) migrate]) {
    id v2 = [*(id *)(a1 + 32) performFrameworkMigrationIfNeeded];
  }
  else {
    id v2 = 0;
  }
  [*(id *)(a1 + 32) setCurrentDB:0];
  return v2;
}

uint64_t sub_1000FB1E0(void *a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v7 = v3;
    if ([*(id *)(a1[4] + 40) containsObject:v3])
    {
      ++*(void *)(*(void *)(a1[5] + 8) + 24);
      if (([*(id *)(*(void *)(a1[6] + 8) + 40) containsObject:v7] & 1) == 0)
      {
        id v4 = *(void **)(*(void *)(a1[6] + 8) + 40);
        id v5 = [v7 copy];
        [v4 addObject:v5];
      }
    }
  }

  return _objc_release_x1();
}

void sub_1000FB29C(void *a1, void *a2, int a3)
{
  id v10 = a2;
  if (a1)
  {
    id v5 = a1;
    [v5 lock];
    id v6 = (void *)v5[5];
    if (v6) {
      BOOL v7 = a3 == 0;
    }
    else {
      BOOL v7 = 0;
    }
    if (v7) {
      [v6 setByAddingObjectsFromArray:v10];
    }
    else {
    uint64_t v8 = +[NSSet setWithArray:v10];
    }
    id v9 = (void *)v5[5];
    void v5[5] = v8;

    [v5 unlock];
  }
}

id sub_1000FB340(id result, void *a2)
{
  if (result)
  {
    id v3 = (id *)result;
    id v4 = a2;
    [v3 lock];
    id v5 = [v3[5] containsObject:v4];

    [v3 unlock];
    return v5;
  }
  return result;
}

void sub_1000FB570(uint64_t a1)
{
  id v3 = +[NSNotificationCenter defaultCenter];
  [v3 postNotificationName:@"PDDataWrittenNotification" object:*(void *)(a1 + 32) userInfo:*(void *)(a1 + 40)];
}

void sub_1000FC00C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

uint64_t sub_1000FC034(uint64_t a1, sqlite3_stmt *a2)
{
  return sub_100009AA4(a2, 1, *(void **)(a1 + 32));
}

uint64_t sub_1000FC044(uint64_t a1, uint64_t a2)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = sqlite3_column_int64(*(sqlite3_stmt **)a2, *(_DWORD *)(a2 + 8));
  return 0;
}

uint64_t sub_1000FC080(uint64_t a1, sqlite3_stmt *a2)
{
  id v4 = +[NSNumber numberWithUnsignedInteger:*(void *)(a1 + 40)];
  sub_100009AA4(a2, 1, v4);

  id v5 = *(void **)(a1 + 32);

  return sub_100009AA4(a2, 2, v5);
}

id sub_1000FCDF0(id a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = objc_opt_new();
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    _DWORD v7[2] = sub_1000FCED8;
    v7[3] = &unk_1001F2F00;
    void v7[4] = a1;
    id v8 = v3;
    id v9 = v4;
    id v5 = v4;
    sub_10000749C(a1, v7);
    a1 = [v5 copy];
  }

  return a1;
}

void sub_1000FCED8(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  id v3 = +[NSArray arrayWithObjects:&v6 count:1];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1000FCFD0;
  void v4[3] = &unk_1001F2ED8;
  id v5 = *(id *)(a1 + 48);
  sub_100007540(v2, @"select distinct classID from CLSHandoutRecipient as R join CLSHandoutAttachment as A on R.parentObjectID = A.parentObjectID join CLSSurvey as S on S.parentObjectID = A.objectID join CLSSurveyAnswerItem as SAI on SAI.surveyID = S.objectID and SAI.objectID = ?", 1, v3, v4);
}

void sub_1000FCFD0(uint64_t a1, uint64_t *a2)
{
  sub_100003BF0(a2, @"classID");
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  [*(id *)(a1 + 32) addObject:v3];
}

void *sub_1000FD034(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (a1)
  {
    uint64_t v9 = 0;
    id v10 = &v9;
    uint64_t v11 = 0x2020000000;
    uint64_t v12 = 0;
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_1000FD120;
    v6[3] = &unk_1001F33F0;
    void v6[4] = a1;
    id v7 = v3;
    id v8 = &v9;
    sub_10000749C(a1, v6);
    a1 = (void *)v10[3];

    _Block_object_dispose(&v9, 8);
  }

  return a1;
}

void sub_1000FD108(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000FD120(void *a1)
{
  id v2 = (void *)a1[4];
  uint64_t v5 = a1[5];
  id v3 = +[NSArray arrayWithObjects:&v5 count:1];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1000FD20C;
  void v4[3] = &unk_1001F1F28;
  void v4[4] = a1[6];
  sub_100007540(v2, @"select CS.state from CLSCollaborationState as CS join CLSHandoutAttachment as HA on HA.parentObjectID = CS.parentObjectID join CLSSurvey as S on S.parentObjectID = HA.objectID join CLSSurveyAnswerItem as SA on SA.surveyID = S.objectID and SA.objectID = ?", 1, v3, v4);
}

void sub_1000FD20C(uint64_t a1, uint64_t *a2)
{
  sub_100003BF0(a2, @"state");
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = [v3 integerValue];
}

uint64_t sub_1000FDB8C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (1)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v10 = v5++ >= 9;
      if (v10)
      {
        unint64_t v6 = 0;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    unint64_t v13 = v6 >> 3;
    if ((int)(v6 >> 3) <= 101)
    {
      switch((int)v13)
      {
        case 1:
          uint64_t v14 = PBReaderReadString();
          uint64_t v15 = 104;
          goto LABEL_57;
        case 2:
          uint64_t v14 = PBReaderReadString();
          uint64_t v15 = 112;
          goto LABEL_57;
        case 3:
          id v16 = objc_alloc_init(PDDPDate);
          uint64_t v20 = 64;
          goto LABEL_37;
        case 4:
          id v16 = objc_alloc_init(PDDPDate);
          uint64_t v20 = 72;
LABEL_37:
          objc_storeStrong((id *)(a1 + v20), v16);
          if (!PBReaderPlaceMark() || (PDDPDateReadFrom((uint64_t)v16, a2) & 1) == 0) {
            goto LABEL_80;
          }
          goto LABEL_48;
        case 5:
          uint64_t v14 = PBReaderReadString();
          uint64_t v15 = 96;
          goto LABEL_57;
        case 6:
          uint64_t v14 = PBReaderReadString();
          uint64_t v15 = 80;
          goto LABEL_57;
        default:
          if (v13 == 100)
          {
            char v28 = 0;
            unsigned int v29 = 0;
            uint64_t v30 = 0;
            *(unsigned char *)(a1 + 132) |= 4u;
            while (1)
            {
              uint64_t v31 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
              unint64_t v32 = v31 + 1;
              if (v31 == -1 || v32 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
                break;
              }
              char v33 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v31);
              *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v32;
              v30 |= (unint64_t)(v33 & 0x7F) << v28;
              if ((v33 & 0x80) == 0) {
                goto LABEL_74;
              }
              v28 += 7;
              BOOL v10 = v29++ >= 9;
              if (v10)
              {
                uint64_t v30 = 0;
                goto LABEL_76;
              }
            }
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_74:
            if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
              uint64_t v30 = 0;
            }
LABEL_76:
            *(unsigned char *)(a1 + 128) = v30 != 0;
          }
          else
          {
            if (v13 != 101) {
              goto LABEL_67;
            }
            *(unsigned char *)(a1 + 132) |= 1u;
            unint64_t v18 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            if (v18 <= 0xFFFFFFFFFFFFFFF7 && v18 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
            {
              uint64_t v19 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v18);
              *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v18 + 8;
            }
            else
            {
              *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
              uint64_t v19 = 0;
            }
            *(void *)(a1 + 8) = v19;
          }
          break;
      }
      goto LABEL_58;
    }
    if ((int)v13 > 299) {
      break;
    }
    switch(v13)
    {
      case 0x66:
        char v21 = 0;
        unsigned int v22 = 0;
        uint64_t v23 = 0;
        *(unsigned char *)(a1 + 132) |= 2u;
        while (1)
        {
          uint64_t v24 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v26 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v24);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v25;
          v23 |= (unint64_t)(v26 & 0x7F) << v21;
          if ((v26 & 0x80) == 0) {
            goto LABEL_70;
          }
          v21 += 7;
          BOOL v10 = v22++ >= 9;
          if (v10)
          {
            LODWORD(v23) = 0;
            goto LABEL_72;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_70:
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v23) = 0;
        }
LABEL_72:
        *(_DWORD *)(a1 + 24) = v23;
        goto LABEL_58;
      case 0xC8:
        uint64_t v14 = PBReaderReadString();
        uint64_t v15 = 56;
        goto LABEL_57;
      case 0xC9:
        uint64_t v14 = PBReaderReadString();
        uint64_t v15 = 48;
LABEL_57:
        uint64_t v27 = *(void **)(a1 + v15);
        *(void *)(a1 + v15) = v14;

        goto LABEL_58;
    }
LABEL_67:
    uint64_t result = PBReaderSkipValueWithTag();
    if (!result) {
      return result;
    }
LABEL_58:
    if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
  }
  switch((int)v13)
  {
    case 300:
      id v16 = objc_alloc_init(PDDPAsset);
      uint64_t v17 = 32;
      goto LABEL_45;
    case 301:
      id v16 = objc_alloc_init(PDDPAsset);
      uint64_t v17 = 40;
      goto LABEL_45;
    case 302:
      id v16 = objc_alloc_init(PDDPAsset);
      uint64_t v17 = 120;
      goto LABEL_45;
    case 303:
      id v16 = objc_alloc_init(PDDPAsset);
      uint64_t v17 = 16;
LABEL_45:
      objc_storeStrong((id *)(a1 + v17), v16);
      goto LABEL_46;
    default:
      if (v13 != 401) {
        goto LABEL_67;
      }
      id v16 = objc_alloc_init(PDDPAsset);
      [(id)a1 addInstructionAssets:v16];
LABEL_46:
      if PBReaderPlaceMark() && (sub_10013CC9C((uint64_t)v16, a2))
      {
LABEL_48:
        PBReaderRecallMark();

        goto LABEL_58;
      }
LABEL_80:

      return 0;
  }
}

id *sub_1000FF428(id *a1, void *a2, void *a3)
{
  id v6 = a2;
  id v7 = a3;
  if (a1)
  {
    v14.receiver = a1;
    v14.super_class = (Class)PDSchoolworkCollaborationStateChangeManager;
    unint64_t v8 = (id *)objc_msgSendSuper2(&v14, "init");
    a1 = v8;
    if (v8)
    {
      objc_storeStrong(v8 + 1, a2);
      objc_storeStrong(a1 + 2, a3);
      uint64_t v9 = objc_opt_new();
      id v10 = a1[3];
      a1[3] = (id)v9;

      uint64_t v11 = objc_opt_new();
      id v12 = a1[4];
      a1[4] = (id)v11;
    }
  }

  return a1;
}

void sub_1000FF590(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    id v7 = [a1 _buildStateChangeForAttachment:v5 ownerPersonID:v6];
    CLSInitLog();
    unint64_t v8 = (void *)CLSLogHandout;
    BOOL v9 = os_log_type_enabled(CLSLogHandout, OS_LOG_TYPE_DEBUG);
    if (v7)
    {
      if (v9)
      {
        unint64_t v13 = (void *)a1[1];
        id v14 = v13;
        uint64_t v15 = v8;
        id v16 = [v5 objectID];
        int v19 = 138412802;
        uint64_t v20 = v13;
        __int16 v21 = 2112;
        unsigned int v22 = v16;
        __int16 v23 = 2112;
        uint64_t v24 = v7;
        _os_log_debug_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "SaveCollabState (Client %@): attachment: %@ new states: %@", (uint8_t *)&v19, 0x20u);
      }
      id v10 = [a1 pendingStatesChanges];
      [v10 addObject:v7];

      uint64_t v11 = [a1 _buildEventForAttachment:v5 recipientPersonID:v6];
      if (!v11) {
        goto LABEL_8;
      }
      id v12 = [a1 pendingAttachmentEvents];
      [v12 addObject:v11];
    }
    else
    {
      if (!v9) {
        goto LABEL_10;
      }
      uint64_t v17 = (void *)a1[1];
      id v12 = v17;
      uint64_t v11 = v8;
      unint64_t v18 = [v5 objectID];
      int v19 = 138412546;
      uint64_t v20 = v17;
      __int16 v21 = 2112;
      unsigned int v22 = v18;
      _os_log_debug_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "SaveCollabState (Client %@): No collab state change required. Skipping attachment: %@", (uint8_t *)&v19, 0x16u);
    }
LABEL_8:

LABEL_10:
  }
}

id sub_1000FF7A4(void *a1)
{
  if (a1)
  {
    a1 = [a1 pendingStatesChanges];
    uint64_t v1 = vars8;
  }
  return a1;
}

void sub_1000FF7D4(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    id v7 = [a1 pendingStatesChanges];
    sub_1000A0318((uint64_t)PDSchoolworkCollaborationStateAdaptor, v7, v5);

    if (v5)
    {
      long long v19 = 0u;
      long long v20 = 0u;
      long long v17 = 0u;
      long long v18 = 0u;
      id v8 = v5;
      id v9 = [v8 countByEnumeratingWithState:&v17 objects:v21 count:16];
      if (v9)
      {
        id v10 = v9;
        uint64_t v11 = *(void *)v18;
        do
        {
          id v12 = 0;
          do
          {
            if (*(void *)v18 != v11) {
              objc_enumerationMutation(v8);
            }
            unint64_t v13 = *(void **)(*((void *)&v17 + 1) + 8 * (void)v12);
            uint64_t v15 = objc_msgSend(v13, "parentObjectID", (void)v17);
            id v16 = [v13 ownerPersonID];
            [a1 _saveEventsForHandoutAttachmentID:v15 recipientPersonID:v16];

            id v12 = (char *)v12 + 1;
          }
          while (v10 != v12);
          id v10 = [v8 countByEnumeratingWithState:&v17 objects:v21 count:16];
        }
        while (v10);
      }
    }
  }
}

id *sub_10010067C(id *a1, void *a2, int a3)
{
  id v6 = a2;
  if (a1)
  {
    v16.receiver = a1;
    v16.super_class = (Class)PDURLResponse;
    id v7 = (id *)objc_msgSendSuper2(&v16, "init");
    a1 = v7;
    if (v7)
    {
      objc_storeStrong(v7 + 8, a2);
      *((unsigned char *)a1 + 48) = 0;
      a1[9] = 0;
      if (a3)
      {
        id v8 = [a1 createResponseFileURL];
        uint64_t v9 = [a1 createFileHandleForURL:v8];
        id v10 = (void *)v9;
        if (v8 && v9)
        {
          objc_storeStrong(a1 + 3, v8);
          objc_storeStrong(a1 + 4, v10);
        }
      }
      else
      {
        id v11 = a1[3];
        a1[3] = 0;

        id v8 = a1[4];
        a1[4] = 0;
      }

      id v12 = a1[7];
      a1[7] = 0;

      id v13 = a1[10];
      a1[10] = 0;

      id v14 = a1[1];
      a1[1] = 0;
    }
  }

  return a1;
}

id *sub_10010078C(id *a1, void *a2, void *a3)
{
  id v6 = a2;
  id v7 = a3;
  if (a1)
  {
    v19.receiver = a1;
    v19.super_class = (Class)PDURLResponse;
    id v8 = (id *)objc_msgSendSuper2(&v19, "init");
    a1 = v8;
    if (v8)
    {
      objc_storeStrong(v8 + 8, a2);
      *((unsigned char *)a1 + 48) = 0;
      a1[9] = 0;
      objc_storeStrong(a1 + 5, a3);
      uint64_t v9 = [a1 createResponseFileURL];
      uint64_t v10 = [a1 createFileHandleForURL:v9];
      id v11 = (void *)v10;
      if (v9 && v10)
      {
        objc_storeStrong(a1 + 3, v9);
        id v12 = v11;
        id v13 = a1[4];
        a1[4] = v12;
      }
      else
      {
        id v14 = a1[3];
        a1[3] = 0;

        id v13 = a1[4];
        a1[4] = 0;
      }

      id v15 = a1[7];
      a1[7] = 0;

      id v16 = a1[10];
      a1[10] = 0;

      id v17 = a1[1];
      a1[1] = 0;
    }
  }

  return a1;
}

void *sub_100100970(void *result)
{
  if (result)
  {
    uint64_t v1 = result;
    id v2 = (void *)result[8];
    result[8] = 0;

    id v3 = (void *)v1[7];
    v1[7] = 0;

    char v4 = (void *)v1[10];
    v1[10] = 0;

    id v5 = (void *)v1[1];
    v1[1] = 0;

    return _[v1 cleanupFileResources];
  }
  return result;
}

uint64_t sub_1001009DC(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = v5;
  if (!a1) {
    goto LABEL_26;
  }
  a1[9] += [v5 length];
  id v7 = (void *)a1[4];
  if (!v7)
  {
    id v14 = (void *)a1[1];
    if (!v14)
    {
      uint64_t v15 = objc_opt_new();
      id v16 = (void *)a1[1];
      a1[1] = v15;

      id v14 = (void *)a1[1];
    }
    [v14 appendData:v6];
    goto LABEL_13;
  }
  id v30 = 0;
  [v7 writeData:v6 error:&v30];
  id v8 = v30;
  if (!v8)
  {
LABEL_13:
    id v13 = (void *)a1[5];
    if (!v13) {
      goto LABEL_22;
    }
    int v11 = 1;
LABEL_15:
    id v29 = 0;
    [v13 writeData:v6 error:&v29];
    id v17 = v29;
    if (v17)
    {
      long long v18 = v17;
      if (a3) {
        *a3 = v17;
      }
      CLSInitLog();
      objc_super v19 = CLSLogOperations;
      if (os_log_type_enabled(CLSLogOperations, OS_LOG_TYPE_ERROR))
      {
        uint64_t v25 = a1[8];
        *(_DWORD *)long long buf = 138543618;
        uint64_t v32 = v25;
        __int16 v33 = 2114;
        id v34 = v18;
        _os_log_error_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_ERROR, "%{public}@ PDURLResponse appendData returnFileHandle: writeData error:%{public}@", buf, 0x16u);
      }

      goto LABEL_26;
    }
    if (v11)
    {
LABEL_22:
      long long v20 = +[PDUserDefaults sharedDefaults];
      unsigned int v21 = [v20 enableVerboseLogging];

      if (v21)
      {
        CLSInitLog();
        unsigned int v22 = (void *)CLSLogOperations;
        if (os_log_type_enabled(CLSLogOperations, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v26 = a1[8];
          uint64_t v27 = v22;
          id v28 = [v6 length];
          *(_DWORD *)long long buf = 138543618;
          uint64_t v32 = v26;
          __int16 v33 = 2048;
          id v34 = v28;
          _os_log_debug_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEBUG, "%{public}@ PDURLResponse appended %ld bytes", buf, 0x16u);
        }
      }
      uint64_t v12 = 1;
      goto LABEL_27;
    }
LABEL_26:
    uint64_t v12 = 0;
    goto LABEL_27;
  }
  uint64_t v9 = v8;
  if (a3) {
    *a3 = v8;
  }
  CLSInitLog();
  uint64_t v10 = CLSLogOperations;
  if (os_log_type_enabled(CLSLogOperations, OS_LOG_TYPE_ERROR))
  {
    uint64_t v24 = a1[8];
    *(_DWORD *)long long buf = 138543618;
    uint64_t v32 = v24;
    __int16 v33 = 2114;
    id v34 = v9;
    _os_log_error_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "%{public}@ PDURLResponse appendData: writeData error:%{public}@", buf, 0x16u);
  }

  int v11 = 0;
  uint64_t v12 = 0;
  id v13 = (void *)a1[5];
  if (v13) {
    goto LABEL_15;
  }
LABEL_27:

  return v12;
}

uint64_t sub_100100CB0(uint64_t result, void *a2)
{
  if (!result) {
    return result;
  }
  uint64_t v3 = result;
  unsigned __int8 v4 = 1;
  *(unsigned char *)(result + 48) = 1;
  id v6 = *(void **)(v3 + 32);
  if (v6)
  {
    id v12 = 0;
    unsigned __int8 v4 = [v6 closeAndReturnError:&v12];
    id v7 = v12;
    if (v7)
    {
      CLSInitLog();
      id v8 = CLSLogOperations;
      if (os_log_type_enabled(CLSLogOperations, OS_LOG_TYPE_ERROR))
      {
        uint64_t v11 = *(void *)(v3 + 64);
        *(_DWORD *)long long buf = 138543618;
        uint64_t v15 = v11;
        __int16 v16 = 2114;
        id v17 = v7;
        _os_log_error_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "%{public}@ PDURLResponse didCompleteWithError: error:%{public}@", buf, 0x16u);
        if (a2) {
          goto LABEL_6;
        }
      }
      else if (a2)
      {
LABEL_6:
        id v9 = v7;
LABEL_10:

        goto LABEL_11;
      }
    }
    else
    {
      uint64_t v10 = *(void **)(v3 + 32);
      *(void *)(v3 + 32) = 0;
    }
    id v9 = 0;
    goto LABEL_10;
  }
  id v9 = 0;
LABEL_11:
  if (a2) {
    *a2 = v9;
  }
  unsigned __int8 v13 = v4;

  return v13;
}

uint64_t sub_100100E10(void *a1, void *a2)
{
  uint64_t v3 = a2;
  unsigned __int8 v4 = v3;
  if (!a1) {
    goto LABEL_9;
  }
  id v5 = (void *)a1[7];
  uint64_t v10 = v4;
  if (v5)
  {
    uint64_t v6 = (uint64_t)[v5 statusCode];
    unsigned __int8 v4 = v10;
    if (!v10) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  uint64_t v6 = -1;
  if (v4)
  {
LABEL_4:
    v4[12] = v6;
    v4[11] = a1[9];
  }
LABEL_5:
  uint64_t v3 = (void *)a1[10];
  if (v3)
  {
    id v7 = [v3 taskInterval];
    [v7 duration];
    if (v10) {
      v10[8] = v8;
    }

    unsigned __int8 v4 = v10;
  }
LABEL_9:

  return _objc_release_x1(v3, v4);
}

char *sub_100100EB0(char *a1)
{
  if (a1)
  {
    uint64_t v1 = a1;
    if (!a1[48])
    {
      a1 = 0;
      goto LABEL_16;
    }
    if (*((void *)a1 + 3))
    {
      uint64_t v3 = (void **)(a1 + 16);
      id v2 = (void *)*((void *)a1 + 2);
      if (v2)
      {
LABEL_15:
        a1 = v2;
        goto LABEL_16;
      }
      id v17 = 0;
      uint64_t v4 = +[NSData dataWithContentsOfURL:options:error:](NSData, "dataWithContentsOfURL:options:error:");
      id v5 = v17;
      uint64_t v6 = *v3;
      void *v3 = (void *)v4;

      if (v5)
      {
        CLSInitLog();
        id v7 = CLSLogOperations;
        if (os_log_type_enabled(CLSLogOperations, OS_LOG_TYPE_ERROR))
        {
          uint64_t v8 = *((void *)v1 + 8);
          *(_DWORD *)long long buf = 138543618;
          uint64_t v19 = v8;
          __int16 v20 = 2114;
          id v21 = v5;
          _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%{public}@ responseData fileMappingError:%{public}@", buf, 0x16u);
        }
      }
      else
      {
        id v9 = +[PDUserDefaults sharedDefaults];
        unsigned int v10 = [v9 enableVerboseLogging];

        if (v10)
        {
          CLSInitLog();
          uint64_t v11 = (void *)CLSLogOperations;
          if (os_log_type_enabled(CLSLogOperations, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v13 = *((void *)v1 + 8);
            id v14 = (void *)*((void *)v1 + 3);
            uint64_t v15 = v11;
            __int16 v16 = [v14 path];
            *(_DWORD *)long long buf = 138543618;
            uint64_t v19 = v13;
            __int16 v20 = 2114;
            id v21 = v16;
            _os_log_debug_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "%{public}@ responseData filePath:%{public}@", buf, 0x16u);
          }
        }
      }
    }
    else
    {
      uint64_t v3 = (void **)(a1 + 8);
    }
    id v2 = *v3;
    goto LABEL_15;
  }
LABEL_16:

  return a1;
}

void *sub_1001010B4(void *a1)
{
  if (a1)
  {
    a1 = (void *)a1[7];
    if (a1)
    {
      a1 = [a1 allHeaderFields];
    }
    uint64_t v1 = vars8;
  }
  return a1;
}

id sub_1001010EC(void *a1, void *a2)
{
  unint64_t v3 = a2;
  if (a1)
  {
    uint64_t v4 = sub_1001010B4(a1);
    id v5 = v4;
    if (v4)
    {
      long long v14 = 0u;
      long long v15 = 0u;
      long long v12 = 0u;
      long long v13 = 0u;
      uint64_t v6 = objc_msgSend(v4, "allKeys", 0);
      id v7 = [v6 countByEnumeratingWithState:&v12 objects:v16 count:16];
      if (v7)
      {
        uint64_t v8 = *(void *)v13;
        while (2)
        {
          for (i = 0; i != v7; i = (char *)i + 1)
          {
            if (*(void *)v13 != v8) {
              objc_enumerationMutation(v6);
            }
            uint64_t v10 = *(void *)(*((void *)&v12 + 1) + 8 * i);
            if (!(v3 | v10))
            {
              uint64_t v10 = 0;
LABEL_17:
              id v7 = [v5 objectForKeyedSubscript:v10];
              goto LABEL_18;
            }
            if (v3
              && v10
              && ![(id)v3 caseInsensitiveCompare:*(void *)(*((void *)&v12 + 1) + 8 * i)])
            {
              goto LABEL_17;
            }
          }
          id v7 = [v6 countByEnumeratingWithState:&v12 objects:v16 count:16];
          if (v7) {
            continue;
          }
          break;
        }
      }
LABEL_18:
    }
    else
    {
      id v7 = 0;
    }
  }
  else
  {
    id v7 = 0;
  }

  return v7;
}

void sub_100101F38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100102238(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10010225C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  CLSInitLog();
  if (WeakRetained)
  {
    unint64_t v3 = CLSLogNotifications;
    if (os_log_type_enabled(CLSLogNotifications, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Received account changed notification", v5, 2u);
    }
    [*(id *)(a1 + 32) resetTriggers];
  }
  else
  {
    uint64_t v4 = CLSLogDefault;
    if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "PDUserNotificationManager instance was released during registerForAccountChangedDarwinNotification", buf, 2u);
    }
  }
}

void sub_100102694(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  if (v2)
  {
    CLSInitLog();
    unint64_t v3 = (void *)CLSLogNotifications;
    if (os_log_type_enabled(CLSLogNotifications, OS_LOG_TYPE_ERROR))
    {
      uint64_t v4 = v3;
      id v5 = [(NSError *)v2 description];
      int v6 = 138412290;
      id v7 = v5;
      _os_log_error_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "Error with user notification. Error: %@", (uint8_t *)&v6, 0xCu);
    }
  }
}

uint64_t sub_100102FA4(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v12 = PBReaderReadString();
        long long v13 = *(void **)(a1 + 24);
        *(void *)(a1 + 24) = v12;

        goto LABEL_38;
      case 2u:
        char v15 = 0;
        unsigned int v16 = 0;
        uint64_t v17 = 0;
        *(unsigned char *)(a1 + 36) |= 1u;
        while (2)
        {
          unint64_t v18 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v18 == -1 || v18 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v19 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v18);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v18 + 1;
            v17 |= (unint64_t)(v19 & 0x7F) << v15;
            if (v19 < 0)
            {
              v15 += 7;
              BOOL v9 = v16++ >= 9;
              if (v9)
              {
                LODWORD(v17) = 0;
                goto LABEL_37;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v17) = 0;
        }
LABEL_37:
        *(_DWORD *)(a1 + 32) = v17;
        goto LABEL_38;
      case 3u:
        __int16 v20 = objc_alloc_init(PDDPPrivilege);
        [(id)a1 addPrivileges:v20];
        if (!PBReaderPlaceMark() || !sub_1000C0778(v20, a2)) {
          goto LABEL_40;
        }
        goto LABEL_33;
      case 4u:
        __int16 v20 = objc_alloc_init(PDDPEntityMeta);
        objc_storeStrong((id *)(a1 + 8), v20);
        if PBReaderPlaceMark() && (sub_1000A7408((uint64_t)v20, a2))
        {
LABEL_33:
          PBReaderRecallMark();

LABEL_38:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }
LABEL_40:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_38;
    }
  }
}

uint64_t sub_10010441C(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    unint64_t v12 = v6 >> 3;
    if ((v6 >> 3) == 3)
    {
      unint64_t v18 = objc_alloc_init(PDDPSearchCriteria);
      objc_storeStrong((id *)(a1 + 16), v18);
      if (!PBReaderPlaceMark() || (sub_10010DC54((uint64_t)v18, a2) & 1) == 0)
      {
LABEL_41:

        return 0;
      }
    }
    else
    {
      if (v12 != 2)
      {
        if (v12 == 1)
        {
          char v13 = 0;
          unsigned int v14 = 0;
          uint64_t v15 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            unint64_t v16 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            if (v16 == -1 || v16 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
              break;
            }
            char v17 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v16);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v16 + 1;
            v15 |= (unint64_t)(v17 & 0x7F) << v13;
            if ((v17 & 0x80) == 0) {
              goto LABEL_36;
            }
            v13 += 7;
            BOOL v9 = v14++ >= 9;
            if (v9)
            {
              LODWORD(v15) = 0;
              goto LABEL_38;
            }
          }
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_36:
          if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            LODWORD(v15) = 0;
          }
LABEL_38:
          *(_DWORD *)(a1 + 24) = v15;
        }
        else
        {
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
        }
        continue;
      }
      unint64_t v18 = objc_alloc_init(PDDPSearchQuery);
      [(id)a1 addContents:v18];
      if (!PBReaderPlaceMark() || (sub_10010441C(v18, a2) & 1) == 0) {
        goto LABEL_41;
      }
    }
    PBReaderRecallMark();
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

uint64_t sub_100104FF8(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        unint64_t v6 = 0;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      break;
    }
    if ((v6 >> 3) == 2)
    {
      *(unsigned char *)(a1 + 24) |= 1u;
      unint64_t v14 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v14 <= 0xFFFFFFFFFFFFFFF7 && v14 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
      {
        uint64_t v15 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v14);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v14 + 8;
      }
      else
      {
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
        uint64_t v15 = 0;
      }
      *(void *)(a1 + 8) = v15;
    }
    else if ((v6 >> 3) == 1)
    {
      char v13 = objc_alloc_init(PDDPDate);
      objc_storeStrong((id *)(a1 + 16), v13);
      if (!PBReaderPlaceMark() || (PDDPDateReadFrom((uint64_t)v13, a2) & 1) == 0)
      {

        return 0;
      }
      PBReaderRecallMark();
    }
    else
    {
      uint64_t result = PBReaderSkipValueWithTag();
      if (!result) {
        return result;
      }
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

uint64_t start()
{
  sub_10005FCA0();
  uint64_t v1 = [[PDDaemon alloc] initWithMachServiceName:@"com.apple.progressd"];
  [(PDDaemon *)v1 start];
  uint64_t v2 = +[NSRunLoop mainRunLoop];
  [v2 run];

  return 0;
}

uint64_t sub_1001069C4(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        unint64_t v12 = objc_alloc_init(PDDPUserInfo);
        objc_storeStrong((id *)(a1 + 48), v12);
        if (PBReaderPlaceMark() && sub_10009A660((id *)v12, a2)) {
          goto LABEL_31;
        }
        goto LABEL_82;
      case 2u:
        unint64_t v12 = objc_alloc_init(PDDPPrivilege);
        [(id)a1 addPrivileges:v12];
        if (!PBReaderPlaceMark() || !sub_1000C0778(v12, a2)) {
          goto LABEL_82;
        }
        goto LABEL_31;
      case 3u:
        unint64_t v12 = objc_alloc_init(PDDPRole);
        [(id)a1 addRoles:v12];
        if (!PBReaderPlaceMark() || (sub_100102FA4((uint64_t)v12, a2) & 1) == 0) {
          goto LABEL_82;
        }
        goto LABEL_31;
      case 4u:
        unint64_t v12 = objc_alloc_init(PDDPLocation);
        [(id)a1 addLocations:v12];
        if (PBReaderPlaceMark() && sub_10014CCB0((uint64_t)v12, a2))
        {
LABEL_31:
          PBReaderRecallMark();

LABEL_80:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }
LABEL_82:

        return 0;
      case 5u:
        char v14 = 0;
        unsigned int v15 = 0;
        uint64_t v16 = 0;
        *(unsigned char *)(a1 + 60) |= 2u;
        while (2)
        {
          unint64_t v17 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v17 == -1 || v17 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v18 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v17);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v17 + 1;
            v16 |= (unint64_t)(v18 & 0x7F) << v14;
            if (v18 < 0)
            {
              v14 += 7;
              BOOL v9 = v15++ >= 9;
              if (v9)
              {
                uint64_t v16 = 0;
                goto LABEL_66;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v16 = 0;
        }
LABEL_66:
        BOOL v37 = v16 != 0;
        uint64_t v38 = 57;
        goto LABEL_79;
      case 6u:
        uint64_t v19 = PBReaderReadString();
        uint64_t v20 = 16;
        goto LABEL_41;
      case 7u:
        uint64_t v19 = PBReaderReadString();
        uint64_t v20 = 24;
LABEL_41:
        id v21 = *(void **)(a1 + v20);
        *(void *)(a1 + v20) = v19;

        goto LABEL_80;
      case 8u:
        char v22 = 0;
        unsigned int v23 = 0;
        uint64_t v24 = 0;
        *(unsigned char *)(a1 + 60) |= 8u;
        while (2)
        {
          unint64_t v25 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v25 == -1 || v25 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v25);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v25 + 1;
            v24 |= (unint64_t)(v26 & 0x7F) << v22;
            if (v26 < 0)
            {
              v22 += 7;
              BOOL v9 = v23++ >= 9;
              if (v9)
              {
                uint64_t v24 = 0;
                goto LABEL_70;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v24 = 0;
        }
LABEL_70:
        BOOL v37 = v24 != 0;
        uint64_t v38 = 59;
        goto LABEL_79;
      case 9u:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v29 = 0;
        *(unsigned char *)(a1 + 60) |= 4u;
        while (2)
        {
          unint64_t v30 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v30 == -1 || v30 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v30);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v30 + 1;
            v29 |= (unint64_t)(v31 & 0x7F) << v27;
            if (v31 < 0)
            {
              v27 += 7;
              BOOL v9 = v28++ >= 9;
              if (v9)
              {
                uint64_t v29 = 0;
                goto LABEL_74;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v29 = 0;
        }
LABEL_74:
        BOOL v37 = v29 != 0;
        uint64_t v38 = 58;
        goto LABEL_79;
      case 0xAu:
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v34 = 0;
        *(unsigned char *)(a1 + 60) |= 1u;
        while (2)
        {
          unint64_t v35 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v35 == -1 || v35 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v36 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v35);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v35 + 1;
            v34 |= (unint64_t)(v36 & 0x7F) << v32;
            if (v36 < 0)
            {
              v32 += 7;
              BOOL v9 = v33++ >= 9;
              if (v9)
              {
                uint64_t v34 = 0;
                goto LABEL_78;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v34 = 0;
        }
LABEL_78:
        BOOL v37 = v34 != 0;
        uint64_t v38 = 56;
LABEL_79:
        *(unsigned char *)(a1 + v38) = v37;
        goto LABEL_80;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_80;
    }
  }
}

uint64_t sub_100108588(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    switch((v6 >> 3))
    {
      case 1u:
        char v12 = 0;
        unsigned int v13 = 0;
        uint64_t v14 = 0;
        *(unsigned char *)(a1 + 36) |= 2u;
        while (1)
        {
          unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v15 == -1 || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
          v14 |= (unint64_t)(v16 & 0x7F) << v12;
          if ((v16 & 0x80) == 0) {
            goto LABEL_43;
          }
          v12 += 7;
          BOOL v9 = v13++ >= 9;
          if (v9)
          {
            LODWORD(v14) = 0;
            goto LABEL_45;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_43:
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_45:
        uint64_t v29 = 16;
        goto LABEL_50;
      case 2u:
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v14 = 0;
        *(unsigned char *)(a1 + 36) |= 4u;
        while (2)
        {
          unint64_t v20 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v20 == -1 || v20 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v21 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v20);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v20 + 1;
            v14 |= (unint64_t)(v21 & 0x7F) << v18;
            if (v21 < 0)
            {
              v18 += 7;
              BOOL v9 = v19++ >= 9;
              if (v9)
              {
                LODWORD(v14) = 0;
                goto LABEL_49;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_49:
        uint64_t v29 = 32;
LABEL_50:
        *(_DWORD *)(a1 + v29) = v14;
        continue;
      case 3u:
        char v22 = 0;
        unsigned int v23 = 0;
        uint64_t v24 = 0;
        *(unsigned char *)(a1 + 36) |= 1u;
        break;
      case 4u:
        uint64_t v27 = PBReaderReadString();
        unsigned int v28 = *(void **)(a1 + 24);
        *(void *)(a1 + 24) = v27;

        continue;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        continue;
    }
    while (1)
    {
      unint64_t v25 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v25 == -1 || v25 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v25);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v25 + 1;
      v24 |= (unint64_t)(v26 & 0x7F) << v22;
      if ((v26 & 0x80) == 0) {
        goto LABEL_52;
      }
      v22 += 7;
      BOOL v9 = v23++ >= 9;
      if (v9)
      {
        uint64_t v24 = 0;
        goto LABEL_54;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_52:
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      uint64_t v24 = 0;
    }
LABEL_54:
    *(void *)(a1 + 8) = v24;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

id sub_100108EC4(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    unint64_t v7 = objc_opt_new();
    char v8 = objc_opt_new();
    uint64_t v9 = objc_opt_class();
    id v79 = a1;
    int v10 = [a1 parentObjectID];
    v105 = v10;
    int v11 = +[NSArray arrayWithObjects:&v105 count:1];
    v98[0] = _NSConcreteStackBlock;
    v98[1] = 3221225472;
    v98[2] = sub_1001097AC;
    v98[3] = &unk_1001F5030;
    id v12 = v8;
    id v99 = v12;
    [v5 selectAll:v9 where:@"parentObjectID = ?" bindings:v11 block:v98];

    unsigned int v13 = objc_opt_new();
    if ([v12 count])
    {
      uint64_t v14 = +[PDDatabase whereSQLForArray:v12 prefix:@"parentObjectID in "];
      uint64_t v15 = objc_opt_class();
      v95[0] = _NSConcreteStackBlock;
      v95[1] = 3221225472;
      v95[2] = sub_100109804;
      v95[3] = &unk_1001F5058;
      id v97 = v6;
      id v96 = v13;
      [v5 selectAll:v15 where:v14 bindings:v12 block:v95];
    }
    id v72 = v13;
    id v73 = v12;
    [v7 setTime:v13];
    char v16 = objc_opt_new();
    uint64_t v17 = objc_opt_class();
    char v18 = [v79 objectID];
    unsigned int v104 = v18;
    unsigned int v19 = +[NSArray arrayWithObjects:&v104 count:1];
    v92[0] = _NSConcreteStackBlock;
    v92[1] = 3221225472;
    v92[2] = sub_1001098A8;
    v92[3] = &unk_1001F5080;
    id v76 = v6;
    id v94 = v76;
    id v20 = v16;
    id v93 = v20;
    [v5 selectAll:v17 where:@"parentObjectID = ?" bindings:v19 block:v92];

    char v21 = objc_opt_new();
    long long v88 = 0u;
    long long v89 = 0u;
    long long v90 = 0u;
    long long v91 = 0u;
    char v22 = +[CLSRange compressOverlappingRanges:v20];
    id v23 = [v22 countByEnumeratingWithState:&v88 objects:v103 count:16];
    if (v23)
    {
      id v24 = v23;
      uint64_t v25 = *(void *)v89;
      do
      {
        for (i = 0; i != v24; i = (char *)i + 1)
        {
          if (*(void *)v89 != v25) {
            objc_enumerationMutation(v22);
          }
          [*(id *)(*((void *)&v88 + 1) + 8 * i) delta];
          double v28 = v27;
          [v21 value];
          [v21 setValue:v28 + v29];
        }
        id v24 = [v22 countByEnumeratingWithState:&v88 objects:v103 count:16];
      }
      while (v24);
    }

    objc_msgSend(v21, "setTotalSampleCount:", objc_msgSend(v20, "count"));
    [v7 setProgress:v21];
    uint64_t v30 = objc_opt_class();
    char v31 = v79;
    char v32 = [v79 parentObjectID];
    unsigned int v33 = [v5 select:v30 identity:v32];

    id v78 = v5;
    id v74 = v6;
    long long v75 = v7;
    if (v33)
    {
      objc_msgSend(v7, "setContextType:", objc_msgSend(v33, "type", v33, v21, v20));
      uint64_t v34 = [v33 topic];
      [v7 setContextTopic:v34];

      unint64_t v35 = [v33 title];
      [v7 setContextTitle:v35];

      char v36 = [v33 appIdentifier];
      [v7 setContextAppBundleIdentifier:v36];

      BOOL v37 = [v33 objectID];
      [v7 setContextID:v37];

      uint64_t v38 = [v33 stableObjectID];
      [v7 setContextStableObjectID:v38];

      id v39 = [v33 stableObjectID];
      [v7 setHandoutAuthorizedObjectID:v39];

      [v7 setHandoutAttachmentType:1];
    }
    else
    {
      uint64_t v40 = objc_opt_class();
      id v41 = objc_msgSend(v79, "parentObjectID", 0, v21, v20);
      id v42 = [v5 select:v40 identity:v41];

      uint64_t v43 = [v42 objectID];
      [v7 setHandoutAuthorizedObjectID:v43];

      objc_msgSend(v7, "setHandoutAttachmentType:", objc_msgSend(v42, "type"));
    }
    uint64_t v44 = +[NSMapTable mapTableWithKeyOptions:0 valueOptions:0];
    v102[0] = objc_opt_class();
    v102[1] = objc_opt_class();
    uint64_t v45 = 0;
    v102[2] = objc_opt_class();
    do
    {
      uint64_t v46 = v102[v45];
      long long v47 = [v31 objectID];
      uint64_t v101 = v47;
      long long v48 = +[NSArray arrayWithObjects:&v101 count:1];
      v85[0] = _NSConcreteStackBlock;
      v85[1] = 3221225472;
      v85[2] = sub_100109918;
      v85[3] = &unk_1001F50A8;
      id v87 = v76;
      id v49 = v44;
      id v86 = v49;
      [v5 selectAll:v46 where:@"parentObjectID = ?" bindings:v48 block:v85];

      char v31 = v79;
      ++v45;
    }
    while (v45 != 3);
    uint64_t v50 = [v79 primaryActivityItemIdentifier];
    if (v50)
    {
      long long v51 = [v49 objectForKey:v50];
      long long v52 = [v51 generateReportFromDataInDatabase:v5];
      [v75 setPrimaryReportItem:v52];

      [v49 removeObjectForKey:v51];
    }
    long long v77 = objc_opt_new();
    long long v81 = 0u;
    long long v82 = 0u;
    long long v83 = 0u;
    long long v84 = 0u;
    id v53 = v49;
    id v54 = [v53 countByEnumeratingWithState:&v81 objects:v100 count:16];
    id v80 = (void *)v50;
    if (v54)
    {
      id v55 = v54;
      uint64_t v56 = *(void *)v82;
      do
      {
        for (j = 0; j != v55; j = (char *)j + 1)
        {
          if (*(void *)v82 != v56) {
            objc_enumerationMutation(v53);
          }
          uint64_t v58 = *(void *)(*((void *)&v81 + 1) + 8 * (void)j);
          long long v60 = [v53 objectForKey:v58];
          uint64_t v61 = [v60 identifier];
          if (v50 | v61)
          {
            id v62 = (void *)v61;
            id v63 = [v60 identifier];
            long long v64 = v63;
            if (!v50 || !v63)
            {

LABEL_29:
              id v67 = [v60 generateReportFromDataInDatabase:v78];
              [v77 addObject:v67];

              uint64_t v50 = (uint64_t)v80;
              goto LABEL_30;
            }
            uint64_t v65 = [v60 identifier];
            unsigned __int8 v66 = [v65 isEqualToString:v80];

            uint64_t v50 = (uint64_t)v80;
            if ((v66 & 1) == 0) {
              goto LABEL_29;
            }
          }
LABEL_30:
        }
        id v55 = [v53 countByEnumeratingWithState:&v81 objects:v100 count:16];
      }
      while (v55);
    }

    a1 = v75;
    if ([v77 count]) {
      [v75 setAdditionalReportItems:v77];
    }

    id v5 = v78;
    id v6 = v74;
  }

  return a1;
}

void sub_1001097AC(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = [a2 objectID];
  [v2 addObject:v3];
}

id sub_100109804(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 40);
  char v4 = *(void (**)(uint64_t, id))(v3 + 16);
  id v5 = a2;
  v4(v3, v5);
  id v6 = *(void **)(a1 + 32);
  [v5 length];
  double v8 = v7;

  [v6 value];
  [v6 setValue:v8 + v9];
  int v10 = *(void **)(a1 + 32);
  int v11 = (char *)[v10 totalSampleCount] + 1;

  return [v10 setTotalSampleCount:v11];
}

void sub_1001098A8(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 40);
  char v4 = *(void (**)(uint64_t, id))(v3 + 16);
  id v5 = a2;
  v4(v3, v5);
  [*(id *)(a1 + 32) addObject:v5];
}

void sub_100109918(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 40);
  char v4 = *(void (**)(uint64_t, id))(v3 + 16);
  id v5 = a2;
  v4(v3, v5);
  id v6 = *(void **)(a1 + 32);
  id v7 = [v5 identifier];
  [v6 setObject:v5 forKey:v7];
}

void sub_10010A940(id a1)
{
  uint64_t v1 = NSStringFromSelector("isFinished");
  uint64_t v2 = qword_10023E700;
  qword_10023E700 = v1;

  _objc_release_x1(v1, v2);
}

BOOL sub_10010AE4C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0;
      while (1)
      {
        unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0;
          int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0;
      }
LABEL_13:
      if (v10 || (v6 & 7) == 4) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      if ((v6 >> 3) == 2) {
        break;
      }
      if ((v6 >> 3) == 1)
      {
        uint64_t v12 = PBReaderReadString();
        unsigned int v13 = *(PDDPTypedValue **)(a1 + 8);
        *(void *)(a1 + 8) = v12;
LABEL_23:

        goto LABEL_25;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_25:
      if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
    }
    unsigned int v13 = objc_alloc_init(PDDPTypedValue);
    objc_storeStrong((id *)(a1 + 16), v13);
    if (!PBReaderPlaceMark() || (sub_10014AA8C((uint64_t)v13, a2) & 1) == 0)
    {

      return 0;
    }
    PBReaderRecallMark();
    goto LABEL_23;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

id sub_10010C28C(id a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    void v8[2] = sub_10010C358;
    void v8[3] = &unk_1001F3060;
    id v9 = v5;
    id v10 = a1;
    id v11 = v6;
    a1 = [a1 performTransaction:v8 forWriting:1];
  }
  return a1;
}

uint64_t sub_10010C358(uint64_t a1)
{
  id v2 = objc_alloc_init((Class)NSMutableArray);
  [v2 addObject:*(void *)(a1 + 32)];
  uint64_t v3 = *(void **)(a1 + 40);
  char v4 = +[PDPersonRoleLocation entityName];
  id v5 = [*(id *)(a1 + 32) identityValue];
  double v28 = v5;
  id v6 = +[NSArray arrayWithObjects:&v28 count:1];
  LOBYTE(v3) = sub_1000AC4E8(v3, v4, @"personID = ?", v6);

  if ((v3 & 1) == 0)
  {
    CLSInitLog();
    uint64_t v12 = (void *)CLSLogDatabase;
    if (!os_log_type_enabled(CLSLogDatabase, OS_LOG_TYPE_ERROR)) {
      goto LABEL_12;
    }
    unsigned int v13 = *(void **)(a1 + 32);
    uint64_t v14 = v12;
    uint64_t v15 = [v13 identityValue];
    *(_DWORD *)long long buf = 138543362;
    double v27 = v15;
    char v16 = "Failed to delete PDPersonRoleLocations for Person with objectID: %{public}@.";
LABEL_16:
    _os_log_error_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, v16, buf, 0xCu);

    goto LABEL_12;
  }
  if (*(void *)(a1 + 48)) {
    objc_msgSend(v2, "addObjectsFromArray:");
  }
  if (([*(id *)(a1 + 40) insertOrUpdateObjects:v2] & 1) == 0)
  {
    CLSInitLog();
    uint64_t v17 = (void *)CLSLogDatabase;
    if (!os_log_type_enabled(CLSLogDatabase, OS_LOG_TYPE_ERROR)) {
      goto LABEL_12;
    }
    id v23 = *(void **)(a1 + 32);
    uint64_t v14 = v17;
    uint64_t v15 = [v23 identityValue];
    *(_DWORD *)long long buf = 138543362;
    double v27 = v15;
    char v16 = "Failed to save Person and PersonRoleLocations for Person with objectID: %{public}@.";
    goto LABEL_16;
  }
  unint64_t v7 = *(void **)(a1 + 40);
  uint64_t v8 = objc_opt_class();
  id v9 = [*(id *)(a1 + 32) objectID];
  uint64_t v25 = v9;
  id v10 = +[NSArray arrayWithObjects:&v25 count:1];
  LODWORD(v7) = [v7 deleteAll:v8 where:@"entityID = ?" bindings:v10];

  if (!v7)
  {
LABEL_12:
    uint64_t v11 = 0;
    goto LABEL_13;
  }
  if ([*(id *)(a1 + 32) isProgressTrackingAllowed]
    && (sub_10000C0EC(*(void **)(a1 + 40)) & 1) != 0)
  {
    uint64_t v11 = 1;
  }
  else
  {
    unsigned int v19 = *(void **)(a1 + 40);
    uint64_t v20 = objc_opt_class();
    char v21 = [*(id *)(a1 + 32) objectID];
    id v24 = v21;
    char v22 = +[NSArray arrayWithObjects:&v24 count:1];
    uint64_t v11 = (uint64_t)[v19 deleteAll:v20 where:@"studentID = ?" bindings:v22];
  }
LABEL_13:

  return v11;
}

uint64_t sub_10010CA84(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 24;
        goto LABEL_23;
      case 2u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 16;
        goto LABEL_23;
      case 3u:
        uint64_t v12 = PBReaderReadData();
        uint64_t v13 = 8;
LABEL_23:
        uint64_t v15 = *(void **)(a1 + v13);
        *(void *)(a1 + v13) = v12;

        continue;
      case 4u:
        char v16 = 0;
        unsigned int v17 = 0;
        uint64_t v18 = 0;
        *(unsigned char *)(a1 + 36) |= 2u;
        while (2)
        {
          unint64_t v19 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v19 == -1 || v19 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v20 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v19);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v19 + 1;
            v18 |= (unint64_t)(v20 & 0x7F) << v16;
            if (v20 < 0)
            {
              v16 += 7;
              BOOL v9 = v17++ >= 9;
              if (v9)
              {
                uint64_t v18 = 0;
                goto LABEL_41;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v18 = 0;
        }
LABEL_41:
        BOOL v26 = v18 != 0;
        uint64_t v27 = 33;
        goto LABEL_46;
      case 5u:
        char v21 = 0;
        unsigned int v22 = 0;
        uint64_t v23 = 0;
        *(unsigned char *)(a1 + 36) |= 1u;
        break;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        continue;
    }
    while (1)
    {
      unint64_t v24 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v24 == -1 || v24 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v24);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v24 + 1;
      v23 |= (unint64_t)(v25 & 0x7F) << v21;
      if ((v25 & 0x80) == 0) {
        goto LABEL_43;
      }
      v21 += 7;
      BOOL v9 = v22++ >= 9;
      if (v9)
      {
        uint64_t v23 = 0;
        goto LABEL_45;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_43:
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      uint64_t v23 = 0;
    }
LABEL_45:
    BOOL v26 = v23 != 0;
    uint64_t v27 = 32;
LABEL_46:
    *(unsigned char *)(a1 + v27) = v26;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

uint64_t sub_10010DC54(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v12;

        goto LABEL_47;
      case 2u:
        char v15 = 0;
        unsigned int v16 = 0;
        uint64_t v17 = 0;
        *(unsigned char *)(a1 + 40) |= 2u;
        while (2)
        {
          unint64_t v18 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v18 == -1 || v18 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v19 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v18);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v18 + 1;
            v17 |= (unint64_t)(v19 & 0x7F) << v15;
            if (v19 < 0)
            {
              v15 += 7;
              BOOL v9 = v16++ >= 9;
              if (v9)
              {
                LODWORD(v17) = 0;
                goto LABEL_41;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v17) = 0;
        }
LABEL_41:
        uint64_t v25 = 24;
        goto LABEL_46;
      case 3u:
        char v20 = objc_alloc_init(PDDPTypedValue);
        objc_storeStrong((id *)(a1 + 32), v20);
        if PBReaderPlaceMark() && (sub_10014AA8C((uint64_t)v20, a2))
        {
          PBReaderRecallMark();

LABEL_47:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

        return 0;
      case 4u:
        char v21 = 0;
        unsigned int v22 = 0;
        uint64_t v17 = 0;
        *(unsigned char *)(a1 + 40) |= 1u;
        while (2)
        {
          unint64_t v23 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v23 == -1 || v23 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v23);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v23 + 1;
            v17 |= (unint64_t)(v24 & 0x7F) << v21;
            if (v24 < 0)
            {
              v21 += 7;
              BOOL v9 = v22++ >= 9;
              if (v9)
              {
                LODWORD(v17) = 0;
                goto LABEL_45;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v17) = 0;
        }
LABEL_45:
        uint64_t v25 = 8;
LABEL_46:
        *(_DWORD *)(a1 + v25) = v17;
        goto LABEL_47;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_47;
    }
  }
}

id sub_10010E948(id a1, void *a2)
{
  id v2 = a1;
  if (a1)
  {
    id v3 = a2;
    char v4 = objc_opt_new();
    uint64_t v5 = objc_opt_class();
    id v11 = v3;
    unint64_t v6 = +[NSArray arrayWithObjects:&v11 count:1];
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    void v9[2] = sub_10010EA9C;
    v9[3] = &unk_1001F4010;
    id v10 = v4;
    id v7 = v4;
    [v2 selectAll:v5 where:@"parentObjectID = ?" bindings:v6 block:v9];

    id v2 = [v7 copy];
  }

  return v2;
}

id sub_10010EA9C(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addObject:a2];
}

id sub_10010EAA8(id a1, void *a2)
{
  id v2 = a1;
  if (a1)
  {
    id v3 = a2;
    id v2 = [v2 select:objc_opt_class() identity:v3];
  }

  return v2;
}

id sub_10010EB1C()
{
  self;

  return +[PDURLRequestOperation reset];
}

id sub_10010EB4C(id result)
{
  if (result)
  {
    uint64_t v1 = (uint64_t)result;
    [result setInvalidated:1];
    [(id)v1 stopListeningToPushNotifications];
    sub_10010EBA8(v1);
    [*(id *)(v1 + 8) cancelAllOperations];
    id v2 = *(void **)(v1 + 16);
    return [v2 cancelAllOperations];
  }
  return result;
}

void sub_10010EBA8(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = sub_1000637B8();
    sub_100063984(v1, @"com.apple.progressd.fetch");

    sub_1000637B8();
    id v2 = (id)objc_claimAutoreleasedReturnValue();
    sub_100063984(v2, @"com.apple.progressd.pruneIDs");
  }
}

id *sub_10010ECC8(id *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    v17.receiver = a1;
    v17.super_class = (Class)PDOperationsManager;
    char v4 = (id *)objc_msgSendSuper2(&v17, "init");
    a1 = v4;
    if (v4)
    {
      objc_storeWeak(v4 + 11, v3);
      id v5 = a1[3];
      a1[3] = 0;

      id v6 = objc_alloc_init((Class)NSOperationQueue);
      id v7 = a1[1];
      a1[1] = v6;

      [a1[1] setQualityOfService:25];
      [a1[1] setMaxConcurrentOperationCount:1];
      char v8 = sub_10010EF08();
      [a1[1] setUnderlyingQueue:v8];

      BOOL v9 = +[NSString stringWithUTF8String:sub_1000FA248(a1, @"sync")];
      [a1[1] setName:v9];

      [a1[1] addObserver:a1 forKeyPath:@"operationCount" options:0 context:&off_10023CCD8];
      id v10 = objc_alloc_init((Class)NSOperationQueue);
      id v11 = a1[2];
      a1[2] = v10;

      [a1[2] setQualityOfService:33];
      [a1[2] setMaxConcurrentOperationCount:1];
      if (qword_10023E728 != -1) {
        dispatch_once(&qword_10023E728, &stru_1001F5430);
      }
      [a1[2] setUnderlyingQueue:qword_10023E720];
      uint64_t v12 = +[NSString stringWithUTF8String:sub_1000FA248(a1, @"interactive")];
      [a1[2] setName:v12];

      [a1[2] addObserver:a1 forKeyPath:@"operationCount" options:0 context:&off_10023CCE0];
      uint64_t v13 = +[NSNotificationCenter defaultCenter];
      [v13 addObserver:a1 selector:"databaseDataChanged:" name:@"PDSyncableDataWrittenNotification" object:v3];
      uint64_t v14 = sub_100002DB4([PDRing alloc], 20);
      id v15 = a1[12];
      a1[12] = v14;
    }
  }

  return a1;
}

id sub_10010EF08()
{
  if (qword_10023E718 != -1) {
    dispatch_once(&qword_10023E718, &stru_1001F5410);
  }
  uint64_t v0 = (void *)qword_10023E710;

  return v0;
}

void sub_10010F090(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    if (sub_100003494((BOOL)a1))
    {
      [a1 registerCloudContainer];
      [a1 registerForLockStateChangedDarwinNotification];
      [a1 registerPushTopics];
    }
    [a1 registerPeriodicTasksOnQueue:v3];
    if (sub_100003494((BOOL)a1)) {
      sub_100003784(a1, 0);
    }
  }
}

void sub_10010F404(uint64_t a1, void *a2)
{
  id v4 = a2;
  id v3 = [v4 operationError];
  if ([v4 isAborted] && !v3)
  {
    id v3 = +[NSError cls_createErrorWithCode:101, @"operation %@ aborted", v4 format];
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10010F4A4(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    if (sub_100003494((BOOL)a1))
    {
      id v4 = a1;
      objc_sync_enter(v4);
      if (!v4[6])
      {
        objc_initWeak(&location, v4);
        id v5 = [PDRetry alloc];
        v11[0] = _NSConcreteStackBlock;
        v11[1] = 3221225472;
        void v11[2] = sub_10010F664;
        void v11[3] = &unk_1001F5180;
        objc_copyWeak(&v12, &location);
        id v6 = sub_100049F38(v5, @"bootstrap", 1, v11);
        id v7 = (void *)v4[6];
        v4[6] = v6;

        objc_destroyWeak(&v12);
        objc_destroyWeak(&location);
      }
      objc_sync_exit(v4);

      char v8 = (void *)v4[6];
      v9[0] = _NSConcreteStackBlock;
      v9[1] = 3221225472;
      void v9[2] = sub_10010FD40;
      v9[3] = &unk_1001F51A8;
      id v10 = v3;
      sub_10004A09C(v8, v9);
    }
    else if (v3)
    {
      (*((void (**)(id, void))v3 + 2))(v3, 0);
    }
  }
}

void sub_10010F638(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak((id *)(v3 - 56));
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10010F664(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = WeakRetained;
  if (WeakRetained && ![WeakRetained isInvalidated])
  {
    id v6 = objc_loadWeakRetained(v5 + 11);
    id v7 = [(PDURLRequestOperation *)[PDASMBootstrapOperation alloc] initWithDatabase:v6];
    [(PDASMBootstrapOperation *)v7 setQualityOfService:25];
    v39[0] = 0;
    v39[1] = v39;
    v39[2] = 0x2020000000;
    char v40 = 0;
    v37[0] = 0;
    v37[1] = v37;
    v37[2] = 0x2020000000;
    char v38 = 0;
    v35[0] = 0;
    v35[1] = v35;
    void v35[2] = 0x3032000000;
    v35[3] = sub_10000B794;
    v35[4] = sub_10000B5E4;
    id v36 = 0;
    v33[0] = 0;
    v33[1] = v33;
    v33[2] = 0x2020000000;
    char v34 = 0;
    v31[0] = 0;
    v31[1] = v31;
    v31[2] = 0x2020000000;
    char v32 = 0;
    v29[0] = 0;
    v29[1] = v29;
    v29[2] = 0x3032000000;
    v29[3] = sub_10000B794;
    void v29[4] = sub_10000B5E4;
    id v30 = 0;
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 3221225472;
    v21[2] = sub_10010F9B0;
    v21[3] = &unk_1001F5158;
    unint64_t v23 = v39;
    char v24 = v37;
    uint64_t v25 = v35;
    BOOL v26 = v31;
    uint64_t v27 = v33;
    double v28 = v29;
    id v8 = v3;
    id v22 = v8;
    [(PDOperation *)v7 addOnFinishBlock:v21];
    BOOL v9 = [(PDURLRequestOperation *)[PDOrionBootstrapOperation alloc] initWithDatabase:v6];
    [(PDOrionBootstrapOperation *)v9 setQualityOfService:25];
    id v10 = _NSConcreteStackBlock;
    uint64_t v11 = 3221225472;
    id v12 = sub_10010FB78;
    uint64_t v13 = &unk_1001F5158;
    id v15 = v31;
    unsigned int v16 = v33;
    objc_super v17 = v29;
    unint64_t v18 = v39;
    char v19 = v37;
    char v20 = v35;
    id v14 = v8;
    [(PDOperation *)v9 addOnFinishBlock:&v10];
    objc_msgSend(v5, "addOperation:", v7, v10, v11, v12, v13);
    [v5 addOperation:v9];

    _Block_object_dispose(v29, 8);
    _Block_object_dispose(v31, 8);
    _Block_object_dispose(v33, 8);
    _Block_object_dispose(v35, 8);

    _Block_object_dispose(v37, 8);
    _Block_object_dispose(v39, 8);
  }
  else
  {
    (*((void (**)(id, uint64_t, void))v3 + 2))(v3, 1, 0);
  }
}

void sub_10010F958(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose(&a37, 8);
  _Block_object_dispose((const void *)(v37 - 224), 8);
  _Block_object_dispose((const void *)(v37 - 192), 8);
  _Block_object_dispose((const void *)(v37 - 144), 8);
  _Block_object_dispose((const void *)(v37 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_10010F9B0(void *a1, void *a2)
{
  *(unsigned char *)(*(void *)(a1[5] + 8) + 24) = 1;
  id v3 = a2;
  *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = [v3 isAborted] ^ 1;
  uint64_t v4 = [v3 operationError];

  uint64_t v5 = *(void *)(a1[7] + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;

  if (*(unsigned char *)(*(void *)(a1[5] + 8) + 24) && *(unsigned char *)(*(void *)(a1[8] + 8) + 24))
  {
    CLSInitLog();
    id v7 = CLSLogSetup;
    if (os_log_type_enabled(CLSLogSetup, OS_LOG_TYPE_DEBUG))
    {
      int v10 = *(unsigned __int8 *)(*(void *)(a1[6] + 8) + 24);
      int v11 = *(unsigned __int8 *)(*(void *)(a1[9] + 8) + 24);
      uint64_t v12 = *(void *)(*(void *)(a1[7] + 8) + 40);
      uint64_t v13 = *(void *)(*(void *)(a1[10] + 8) + 40);
      v14[0] = 67109890;
      v14[1] = v10;
      __int16 v15 = 1024;
      int v16 = v11;
      __int16 v17 = 2114;
      uint64_t v18 = v12;
      __int16 v19 = 2114;
      uint64_t v20 = v13;
      _os_log_debug_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "DualBootstrap complete (ASM): asmDone: %d, orionDone: %d asmErr: %{public}@, orionErr: %{public}@ ", (uint8_t *)v14, 0x22u);
    }
    if (*(unsigned char *)(*(void *)(a1[6] + 8) + 24)) {
      BOOL v8 = *(unsigned char *)(*(void *)(a1[9] + 8) + 24) != 0;
    }
    else {
      BOOL v8 = 0;
    }
    uint64_t v9 = *(void *)(*(void *)(a1[7] + 8) + 40);
    if (!v9) {
      uint64_t v9 = *(void *)(*(void *)(a1[10] + 8) + 40);
    }
    (*(void (**)(void, BOOL, uint64_t))(a1[4] + 16))(a1[4], v8, v9);
  }
}

void sub_10010FB78(void *a1, void *a2)
{
  *(unsigned char *)(*(void *)(a1[5] + 8) + 24) = 1;
  id v3 = a2;
  *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = [v3 isAborted] ^ 1;
  uint64_t v4 = [v3 operationError];

  uint64_t v5 = *(void *)(a1[7] + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;

  if (*(unsigned char *)(*(void *)(a1[8] + 8) + 24) && *(unsigned char *)(*(void *)(a1[5] + 8) + 24))
  {
    CLSInitLog();
    id v7 = CLSLogSetup;
    if (os_log_type_enabled(CLSLogSetup, OS_LOG_TYPE_DEBUG))
    {
      int v10 = *(unsigned __int8 *)(*(void *)(a1[9] + 8) + 24);
      int v11 = *(unsigned __int8 *)(*(void *)(a1[6] + 8) + 24);
      uint64_t v12 = *(void *)(*(void *)(a1[10] + 8) + 40);
      uint64_t v13 = *(void *)(*(void *)(a1[7] + 8) + 40);
      v14[0] = 67109890;
      v14[1] = v10;
      __int16 v15 = 1024;
      int v16 = v11;
      __int16 v17 = 2114;
      uint64_t v18 = v12;
      __int16 v19 = 2114;
      uint64_t v20 = v13;
      _os_log_debug_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "DualBootstrap complete (Orion): asmDone: %d, orionDone: %d asmErr: %{public}@, orionErr: %{public}@ ", (uint8_t *)v14, 0x22u);
    }
    if (*(unsigned char *)(*(void *)(a1[9] + 8) + 24)) {
      BOOL v8 = *(unsigned char *)(*(void *)(a1[6] + 8) + 24) != 0;
    }
    else {
      BOOL v8 = 0;
    }
    uint64_t v9 = *(void *)(*(void *)(a1[10] + 8) + 40);
    if (!v9) {
      uint64_t v9 = *(void *)(*(void *)(a1[7] + 8) + 40);
    }
    (*(void (**)(void, BOOL, uint64_t))(a1[4] + 16))(a1[4], v8, v9);
  }
}

uint64_t sub_10010FD40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, a3);
  }
  return result;
}

void sub_10010FE54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_10010FE70(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    uint64_t v4 = *(void *)(a1 + 32);
    if (!v4) {
      goto LABEL_8;
    }
    id v7 = v3;
    uint64_t v4 = (*(uint64_t (**)(void))(v4 + 16))();
  }
  else
  {
    id v7 = 0;
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    if (WeakRetained) {
      (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
    }
  }
  id v3 = v7;
LABEL_8:

  return _objc_release_x1(v4, v3);
}

void sub_10010FF00(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    if (sub_100003494((BOOL)a1))
    {
      uint64_t v4 = a1;
      objc_sync_enter(v4);
      if (!v4[7])
      {
        objc_initWeak(&location, v4);
        uint64_t v5 = [PDRetry alloc];
        v11[0] = _NSConcreteStackBlock;
        v11[1] = 3221225472;
        void v11[2] = sub_1001100C4;
        void v11[3] = &unk_1001F5220;
        objc_copyWeak(&v12, &location);
        void v11[4] = v4;
        id v6 = sub_100049F38(v5, @"pushLocalChanges", 6, v11);
        id v7 = (void *)v4[7];
        v4[7] = v6;

        objc_destroyWeak(&v12);
        objc_destroyWeak(&location);
      }
      objc_sync_exit(v4);

      BOOL v8 = (void *)v4[7];
      v9[0] = _NSConcreteStackBlock;
      v9[1] = 3221225472;
      void v9[2] = sub_100110444;
      v9[3] = &unk_1001F51A8;
      id v10 = v3;
      sub_10004A09C(v8, v9);
    }
    else if (v3)
    {
      (*((void (**)(id, void))v3 + 2))(v3, 0);
    }
  }
}

void sub_100110098(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak((id *)(v3 - 56));
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001100C4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v5 = WeakRetained;
  if (WeakRetained && ![WeakRetained isInvalidated])
  {
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    void v8[2] = sub_1001101FC;
    void v8[3] = &unk_1001F2698;
    id v9 = v3;
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_100110214;
    v6[3] = &unk_1001F51F8;
    void v6[4] = *(void *)(a1 + 32);
    id v7 = v9;
    [v5 afterBootstrapWithErrorCompletion:v8 doBlock:v6];
  }
  else
  {
    (*((void (**)(id, uint64_t, void))v3 + 2))(v3, 1, 0);
  }
}

uint64_t sub_1001101FC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100110214(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 issueCKBootstrapWithDependency:0];
  id v5 = [v3 issuePushToCKWithDependency:v4];
  unsigned int v6 = [v3 isEDUMAID];
  id v7 = v5;
  if (v6)
  {
    BOOL v8 = [v3 issueIngestWithDependency:v5];
    id v9 = [v3 issuePushClassChangesWithDependency:v8];

    uint64_t v10 = *(void *)(a1 + 32);
    if (v10) {
      id WeakRetained = objc_loadWeakRetained((id *)(v10 + 88));
    }
    else {
      id WeakRetained = 0;
    }
    unsigned int v12 = +[PDEndpointRequestOperation isEndpointAvailable:@"uploadEvents" inDatabase:WeakRetained];

    id v7 = v9;
    if (v12)
    {
      id v7 = [v3 issueUploadEventsWithDependency:v9];
    }
  }
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  _DWORD v14[2] = sub_1001103C4;
  void v14[3] = &unk_1001F5130;
  id v15 = *(id *)(a1 + 40);
  [v7 addOnFinishBlock:v14];
  if (v6) {
    id v13 = [v3 issueRegisterWithDependency:0];
  }
}

void sub_1001103C4(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = a2;
  uint64_t v4 = [v3 isAborted] ^ 1;
  id v5 = [v3 operationError];

  (*(void (**)(uint64_t, uint64_t, id))(v2 + 16))(v2, v4, v5);
}

uint64_t sub_100110444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, a3);
  }
  return result;
}

void sub_100110460(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = WeakRetained;
  if (WeakRetained && ![WeakRetained isInvalidated])
  {
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    void v8[2] = sub_100110588;
    void v8[3] = &unk_1001F2698;
    id v9 = v3;
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_1001105A0;
    v6[3] = &unk_1001F5248;
    id v7 = v9;
    [v5 afterBootstrapWithErrorCompletion:v8 doBlock:v6];
  }
  else
  {
    (*((void (**)(id, uint64_t, void))v3 + 2))(v3, 1, 0);
  }
}

uint64_t sub_100110588(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1001105A0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 issueCKBootstrapWithDependency:0];
  id v5 = [v3 issuePushToCKWithDependency:v4];
  unsigned int v6 = [v3 isEDUMAID];
  id v7 = v5;
  if (v6)
  {
    BOOL v8 = [v3 issueIngestWithDependency:v5];
    id v9 = [v3 issueUploadEventsWithDependency:v8];
    id v7 = [v3 issuePushClassChangesWithDependency:v9];
  }
  id v10 = [v3 issueASMSyncWithDependency:v7];

  int v11 = v10;
  if (v6)
  {
    int v11 = [v3 issueFetchHandoutChangesWithDependency:v10];
  }
  id v12 = [v3 issueASMFetchMissingWithDependency:v11];

  if (v3) {
    id WeakRetained = objc_loadWeakRetained(v3 + 11);
  }
  else {
    id WeakRetained = 0;
  }
  BOOL v14 = sub_100006970(WeakRetained, @"initialASMSyncComplete");

  id v15 = v12;
  if (!v14)
  {
    id v15 = [v3 issueASMSyncWithDependency:v12];
  }
  int v16 = [v3 issueFetchFromCKWithDependency:v15];
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  void v17[2] = sub_1001107AC;
  void v17[3] = &unk_1001F5130;
  id v18 = *(id *)(a1 + 32);
  [v16 addOnFinishBlock:v17];
}

void sub_1001107AC(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = a2;
  uint64_t v4 = [v3 isAborted] ^ 1;
  id v5 = [v3 operationError];

  (*(void (**)(uint64_t, uint64_t, id))(v2 + 16))(v2, v4, v5);
}

void sub_10011082C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = *(void *)(a1 + 32);
  if (v5) {
    (*(void (**)(uint64_t, id))(v5 + 16))(v5, v4);
  }
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  id v7 = WeakRetained;
  if (WeakRetained)
  {
    id v8 = objc_loadWeakRetained(WeakRetained + 11);
    sub_100126ABC(v8);
  }
  else
  {
    CLSInitLog();
    id v9 = CLSLogDefault;
    if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_DEFAULT))
    {
      v10[0] = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "PDOperationsManager instance was released during fetchRemoteChanges", (uint8_t *)v10, 2u);
    }
  }
}

void sub_1001108F4(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    id v7 = a1;
    objc_sync_enter(v7);
    id v8 = [PDFetchReportsOperation alloc];
    id WeakRetained = objc_loadWeakRetained(v7 + 11);
    id v10 = sub_1000830EC(v8, v5, (uint64_t)WeakRetained);

    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    void v11[2] = sub_100110A1C;
    void v11[3] = &unk_1001F5130;
    id v12 = v6;
    [v10 addOnFinishBlock:v11];
    sub_100110A9C(v7, v10);

    objc_sync_exit(v7);
  }
}

void sub_100110A08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100110A1C(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = a2;
  uint64_t v4 = [v3 isAborted] ^ 1;
  id v5 = [v3 operationError];

  (*(void (**)(uint64_t, uint64_t, id))(v2 + 16))(v2, v4, v5);
}

void sub_100110A9C(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  if (a1)
  {
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    _DWORD v7[2] = sub_100111348;
    v7[3] = &unk_1001F26C0;
    id v8 = v3;
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    _DWORD v5[2] = sub_100111354;
    v5[3] = &unk_1001F5298;
    id v6 = v8;
    [a1 afterBootstrapWithErrorCompletion:v7 doBlock:v5];
  }
}

void sub_100111240(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  if (a1)
  {
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    _DWORD v7[2] = sub_100111330;
    v7[3] = &unk_1001F26C0;
    id v8 = v3;
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    _DWORD v5[2] = sub_10011133C;
    v5[3] = &unk_1001F5298;
    id v6 = v8;
    [a1 afterBootstrapWithErrorCompletion:v7 doBlock:v5];
  }
}

id sub_100111330(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) abortWithError:a2];
}

id sub_10011133C(uint64_t a1, void *a2)
{
  return [a2 addOperation:*(void *)(a1 + 32)];
}

id sub_100111348(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) abortWithError:a2];
}

id sub_100111354(uint64_t a1, void *a2)
{
  return _[a2 addInteractiveOperation:*(void *)(a1 + 32)];
}

void sub_10011163C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100111658(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = sub_10010EF08();
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100111720;
  v6[3] = &unk_1001F26E8;
  objc_copyWeak(&v8, (id *)(a1 + 32));
  id v7 = v3;
  id v5 = v3;
  dispatch_async(v4, v6);

  objc_destroyWeak(&v8);
}

uint64_t sub_100111720(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    id v8 = WeakRetained;
    id WeakRetained = [WeakRetained isInvalidated];
    id v3 = v8;
    if ((WeakRetained & 1) == 0)
    {
      uint64_t v4 = [*(id *)(a1 + 32) operationError];
      if (v4 || ([*(id *)(a1 + 32) isAborted] & 1) != 0)
      {

LABEL_6:
        id v5 = [*(id *)(a1 + 32) statusReport];
        id v6 = [v8 ring];
        sub_10000C028((uint64_t)v6, v5);

        id v3 = v8;
        goto LABEL_7;
      }
      id WeakRetained = [*(id *)(a1 + 32) isCancelled];
      id v3 = v8;
      if (WeakRetained) {
        goto LABEL_6;
      }
    }
  }
LABEL_7:

  return _objc_release_x1(WeakRetained, v3);
}

void sub_100111F74(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_sync_exit(v1);
  objc_destroyWeak((id *)(v3 - 56));
  _Unwind_Resume(a1);
}

void sub_100111FA0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v6 = WeakRetained;
  if (WeakRetained && ![WeakRetained isInvalidated])
  {
    CLSInitLog();
    id v7 = CLSLogSync;
    if (os_log_type_enabled(CLSLogSync, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)long long buf = 0;
      _os_log_debug_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "trying to fetch iCloudUserID", buf, 2u);
    }
    id v8 = +[NSDate date];
    id v9 = [v6 cloudContainer];
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    void v11[2] = sub_10011213C;
    void v11[3] = &unk_1001F52E8;
    id v10 = v8;
    id v12 = v10;
    objc_copyWeak(&v14, v4);
    id v13 = v3;
    [v9 fetchUserRecordIDWithCompletionHandler:v11];

    objc_destroyWeak(&v14);
  }
  else
  {
    (*((void (**)(id, uint64_t, void))v3 + 2))(v3, 1, 0);
  }
}

void sub_100112128(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10011213C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  CLSInitLog();
  id v7 = (void *)CLSLogSync;
  if (os_log_type_enabled(CLSLogSync, OS_LOG_TYPE_DEBUG))
  {
    id v13 = v7;
    id v14 = +[NSDate date];
    [v14 timeIntervalSinceDate:*(void *)(a1 + 32)];
    int v16 = 134217984;
    uint64_t v17 = v15;
    _os_log_debug_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "iCloudUserID fetch took: %.2f", (uint8_t *)&v16, 0xCu);
  }
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  id v9 = WeakRetained;
  if (WeakRetained)
  {
    if (v5)
    {
      id v10 = objc_loadWeakRetained(WeakRetained + 11);
      int v11 = [v5 recordName];
      sub_10016018C(v10, v11, @"PDCK_iCloudUserID");
    }
    id v12 = *(void (**)(void))(*(void *)(a1 + 40) + 16);
  }
  else
  {
    id v12 = *(void (**)(void))(*(void *)(a1 + 40) + 16);
  }
  v12();
}

void sub_1001122C8(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  if ((a2 & 1) == 0)
  {
    CLSInitLog();
    id v6 = CLSLogSync;
    if (os_log_type_enabled(CLSLogSync, OS_LOG_TYPE_DEBUG))
    {
      int v10 = 138412290;
      id v11 = v5;
      _os_log_debug_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "loading iCloudUserID failed: %@", (uint8_t *)&v10, 0xCu);
    }
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v8 = WeakRetained;
  if (WeakRetained)
  {
    id v9 = WeakRetained;
    objc_sync_enter(v9);
    v9[80] = 0;
    objc_sync_exit(v9);

    if (a2) {
      sub_10010FF00(v9, 0);
    }
  }
}

void sub_1001126B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  objc_destroyWeak(v21);
  objc_destroyWeak((id *)(v22 - 96));
  _Block_object_dispose(&a21, 8);
  _Unwind_Resume(a1);
}

void sub_1001126F4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = WeakRetained;
  if (WeakRetained && ![WeakRetained isInvalidated])
  {
    id v6 = sub_1000062FC();
    CLSInitLog();
    id v7 = CLSLogDefault;
    if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)long long buf = 0;
      _os_log_debug_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "[PDOperationsManager apsEnvironmentString]", buf, 2u);
      if (v6) {
        goto LABEL_6;
      }
    }
    else if (v6)
    {
LABEL_6:
      id v8 = (void *)v6[9];
LABEL_7:
      id v9 = v8;
      id v10 = v3;
      CLSPerformWithPersona();

      goto LABEL_8;
    }
    id v8 = 0;
    goto LABEL_7;
  }
  (*((void (**)(id, uint64_t, void))v3 + 2))(v3, 1, 0);
LABEL_8:
}

void sub_100112860(uint64_t a1)
{
  CLSInitLog();
  uint64_t v2 = CLSLogDefault;
  if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_debug_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "[PDOperationsManager apsEnvironmentString]", buf, 2u);
  }
  id v3 = +[PDUserDefaults sharedDefaults];
  unsigned int v4 = [v3 enableVerboseLogging];

  if (v4) {
    CLSLogDebugCurrentPersona();
  }
  id v5 = [*(id *)(a1 + 32) cloudContainer];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  void v8[2] = sub_100112990;
  void v8[3] = &unk_1001F5358;
  long long v7 = *(_OWORD *)(a1 + 40);
  id v6 = (id)v7;
  long long v9 = v7;
  [v5 serverPreferredPushEnvironmentWithCompletionHandler:v8];
}

void sub_100112990(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v7 = a3;
  id v8 = v7;
  if (v6)
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
    long long v9 = *(void (**)(void))(*(void *)(a1 + 32) + 16);
  }
  else
  {
    if (v7)
    {
      CLSInitLog();
      id v10 = CLSLogPush;
      if (os_log_type_enabled(CLSLogPush, OS_LOG_TYPE_ERROR))
      {
        int v11 = 138543362;
        id v12 = v8;
        _os_log_error_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "Error getting server APS preferred push environment: %{public}@", (uint8_t *)&v11, 0xCu);
      }
    }
    long long v9 = *(void (**)(void))(*(void *)(a1 + 32) + 16);
  }
  v9();
}

uint64_t sub_100112AB0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_1001132C4(void *a1)
{
  if (!a1 || (sub_1000A5C14() & 1) == 0 && !sub_1000A5D90() || !sub_100003CF8()) {
    return 0;
  }

  return [a1 isEDUMAID];
}

id sub_1001133E8()
{
  if (qword_10023E738 != -1) {
    dispatch_once(&qword_10023E738, &stru_1001F5450);
  }
  uint64_t v0 = (void *)qword_10023E730;

  return v0;
}

void sub_10011343C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = [WeakRetained apsConnection];
    unsigned int v4 = sub_10000C710();
    id v5 = [@"com.apple.icloud-container." stringByAppendingString:v4];
    unsigned int v6 = sub_1001132C4(v2);
    if (v6)
    {
      uint64_t v17 = v5;
      id v7 = +[NSArray arrayWithObjects:&v17 count:1];
      [v3 _setEnabledTopics:v7];

      [v3 _setOpportunisticTopics:0];
    }
    else
    {
      [v3 _setEnabledTopics:0];
      int v16 = v5;
      long long v9 = +[NSArray arrayWithObjects:&v16 count:1];
      [v3 _setOpportunisticTopics:v9];
    }
    CLSInitLog();
    id v10 = CLSLogPush;
    if (os_log_type_enabled(CLSLogPush, OS_LOG_TYPE_DEBUG))
    {
      CFStringRef v11 = @"opportunistic";
      if (v6) {
        CFStringRef v11 = @"enabled";
      }
      int v12 = 138412546;
      id v13 = v5;
      __int16 v14 = 2112;
      CFStringRef v15 = v11;
    }
  }
  else
  {
    CLSInitLog();
    id v8 = CLSLogDefault;
    if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v12) = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "PDOperationsManager instance was released during registerPushTopics", (uint8_t *)&v12, 2u);
    }
  }
}

void sub_10011374C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100113770(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained registerPushTopics];
  }
  else
  {
    CLSInitLog();
    id v3 = CLSLogDefault;
    if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)unsigned int v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "PDOperationsManager instance was released during registerForLockStateChangedDarwinNotification", v4, 2u);
    }
  }
}

void sub_1001138E8(uint64_t a1)
{
  CLSInitLog();
  uint64_t v2 = CLSLogPush;
  if (os_log_type_enabled(CLSLogPush, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)id v5 = 0;
    _os_log_debug_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "APS Push stopped listening.", v5, 2u);
  }
  id v3 = [*(id *)(a1 + 32) apsConnection];
  [v3 _setEnabledTopics:0];

  unsigned int v4 = [*(id *)(a1 + 32) apsConnection];
  [v4 _setOpportunisticTopics:0];
}

id *sub_100113994(id *a1)
{
  uint64_t v1 = a1;
  if (a1)
  {
    uint64_t v2 = objc_opt_new();
    id v3 = +[NSNumber numberWithBool:sub_100004830((BOOL)v1)];
    [v2 setObject:v3 forKeyedSubscript:@"bootstrapped"];

    unsigned int v4 = +[NSNumber numberWithBool:sub_100003494((BOOL)v1)];
    [v2 setObject:v4 forKeyedSubscript:@"hasValidUser"];

    id v5 = sub_10010EF08();
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100113D8C;
    block[3] = &unk_1001F2710;
    void block[4] = v1;
    id v6 = v2;
    id v35 = v6;
    dispatch_sync(v5, block);

    [v1[1] setSuspended:1];
    [v1[2] setSuspended:1];
    id v7 = objc_opt_new();
    long long v30 = 0u;
    long long v31 = 0u;
    long long v32 = 0u;
    long long v33 = 0u;
    id v8 = [v1[1] operations];
    id v9 = [v8 countByEnumeratingWithState:&v30 objects:v37 count:16];
    if (v9)
    {
      id v10 = v9;
      uint64_t v11 = *(void *)v31;
      do
      {
        for (i = 0; i != v10; i = (char *)i + 1)
        {
          if (*(void *)v31 != v11) {
            objc_enumerationMutation(v8);
          }
          id v13 = *(void **)(*((void *)&v30 + 1) + 8 * i);
          objc_opt_class();
          if (objc_opt_isKindOfClass())
          {
            __int16 v14 = [v13 statusReport];
            [v7 addObject:v14];
          }
        }
        id v10 = [v8 countByEnumeratingWithState:&v30 objects:v37 count:16];
      }
      while (v10);
    }

    CFStringRef v15 = objc_opt_new();
    long long v26 = 0u;
    long long v27 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    int v16 = [v1[2] operations];
    id v17 = [v16 countByEnumeratingWithState:&v26 objects:v36 count:16];
    if (v17)
    {
      id v18 = v17;
      uint64_t v19 = *(void *)v27;
      do
      {
        for (j = 0; j != v18; j = (char *)j + 1)
        {
          if (*(void *)v27 != v19) {
            objc_enumerationMutation(v16);
          }
          char v21 = *(void **)(*((void *)&v26 + 1) + 8 * (void)j);
          objc_opt_class();
          if (objc_opt_isKindOfClass())
          {
            uint64_t v22 = [v21 statusReport];
            [v15 addObject:v22];
          }
        }
        id v18 = [v16 countByEnumeratingWithState:&v26 objects:v36 count:16];
      }
      while (v18);
    }

    id v23 = objc_msgSend(objc_alloc((Class)NSString), "initWithFormat:", @"%ld pending operations", objc_msgSend(v7, "count"));
    [v6 setObject:v7 forKeyedSubscript:v23];
    id v24 = objc_msgSend(objc_alloc((Class)NSString), "initWithFormat:", @"%ld pending ui operations", objc_msgSend(v15, "count"));

    [v6 setObject:v15 forKeyedSubscript:v24];
    [v1[1] setSuspended:0];
    [v1[2] setSuspended:0];
    uint64_t v1 = (id *)v6;
  }

  return v1;
}

void sub_100113D8C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)(a1 + 32) + 96);
  if (v2) {
    id v3 = [*(id *)(v2 + 8) count];
  }
  else {
    id v3 = 0;
  }
  id v5 = objc_msgSend(objc_alloc((Class)NSString), "initWithFormat:", @"Last %ld executed operations with errors", v3);
  unsigned int v4 = sub_1000A4010(*(id **)(*(void *)(a1 + 32) + 96));
  [*(id *)(a1 + 40) setObject:v4 forKeyedSubscript:v5];
}

id *sub_100113E30(id *a1)
{
  uint64_t v1 = a1;
  if (a1)
  {
    id WeakRetained = objc_loadWeakRetained(a1 + 11);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_100113F08;
    v6[3] = &unk_1001F2710;
    void v6[4] = v1;
    id v3 = objc_alloc_init((Class)NSMutableDictionary);
    id v7 = v3;
    sub_10000749C(WeakRetained, v6);
    unsigned int v4 = v7;
    uint64_t v1 = (id *)v3;
  }

  return v1;
}

void sub_100113F08(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1) {
    id WeakRetained = objc_loadWeakRetained((id *)(v1 + 88));
  }
  else {
    id WeakRetained = 0;
  }
  id v3 = [PDCKBootstrap alloc];
  unsigned int v4 = [*(id *)(a1 + 32) cloudContainer];
  id v5 = [(PDCKOperation *)v3 initWithDatabase:WeakRetained container:v4];

  id v54 = v5;
  id v6 = +[NSNumber numberWithInt:!sub_1000040AC(v5)];
  [*(id *)(a1 + 40) setObject:v6 forKeyedSubscript:@"bootstrapped"];

  id v7 = +[NSNumber numberWithBool:sub_100006970(WeakRetained, @"initialASMSyncComplete")];
  [*(id *)(a1 + 40) setObject:v7 forKeyedSubscript:@"initialASMSyncComplete"];

  id v8 = +[NSNumber numberWithBool:sub_100006970(WeakRetained, @"initialOrionSyncComplete")];
  [*(id *)(a1 + 40) setObject:v8 forKeyedSubscript:@"initialOrionSyncComplete"];

  id v9 = +[NSNumber numberWithBool:sub_100006970(WeakRetained, @"initialiCloudDriveSyncComplete")];
  [*(id *)(a1 + 40) setObject:v9 forKeyedSubscript:@"initialiCloudDriveSyncComplete"];

  id v10 = +[NSNumber numberWithBool:sub_100006970(WeakRetained, @"initialASMSyncRequired")];
  [*(id *)(a1 + 40) setObject:v10 forKeyedSubscript:@"initialASMSyncRequired"];

  uint64_t v11 = +[NSNumber numberWithInteger:sub_100004EE8(WeakRetained, @"initialASMSyncRoundTripCount")];
  [*(id *)(a1 + 40) setObject:v11 forKeyedSubscript:@"initialASMSyncRoundTripCount"];

  int v12 = +[NSNumber numberWithInteger:sub_100004EE8(WeakRetained, @"initialOrionSyncRoundTripCount")];
  [*(id *)(a1 + 40) setObject:v12 forKeyedSubscript:@"initialOrionSyncRoundTripCount"];

  id v13 = +[NSNumber numberWithBool:sub_100006970(WeakRetained, @"asmRefreshRequested")];
  [*(id *)(a1 + 40) setObject:v13 forKeyedSubscript:@"asmRefreshRequested"];

  uint64_t v14 = CLSSyncInitialRosterSyncDateKey;
  CFStringRef v15 = sub_1001602E8(WeakRetained, CLSSyncInitialRosterSyncDateKey);
  [*(id *)(a1 + 40) setObject:v15 forKeyedSubscript:v14];

  uint64_t v16 = CLSSyncInitialHandoutSyncDateKey;
  id v17 = sub_1001602E8(WeakRetained, CLSSyncInitialHandoutSyncDateKey);
  [*(id *)(a1 + 40) setObject:v17 forKeyedSubscript:v16];

  uint64_t v18 = CLSSyncLatestRosterSyncDateKey;
  uint64_t v19 = sub_1001602E8(WeakRetained, CLSSyncLatestRosterSyncDateKey);
  [*(id *)(a1 + 40) setObject:v19 forKeyedSubscript:v18];

  uint64_t v20 = CLSSyncLatestHandoutSyncDateKey;
  char v21 = sub_1001602E8(WeakRetained, CLSSyncLatestHandoutSyncDateKey);
  [*(id *)(a1 + 40) setObject:v21 forKeyedSubscript:v20];

  uint64_t v22 = WeakRetained;
  id v23 = objc_alloc_init((Class)NSMutableArray);
  long long v66 = 0u;
  long long v67 = 0u;
  long long v68 = 0u;
  long long v69 = 0u;
  v79[0] = objc_opt_class();
  v79[1] = objc_opt_class();
  id obj = +[NSArray arrayWithObjects:v79 count:2];
  id v24 = [obj countByEnumeratingWithState:&v66 objects:v80 count:16];
  if (v24)
  {
    id v25 = v24;
    uint64_t v26 = *(void *)v67;
    do
    {
      for (i = 0; i != v25; i = (char *)i + 1)
      {
        if (*(void *)v67 != v26) {
          objc_enumerationMutation(obj);
        }
        long long v28 = objc_msgSend(*(id *)(*((void *)&v66 + 1) + 8 * i), "entityName", v54);
        long long v29 = [@"select distinct entity from " stringByAppendingString:v28];
        v64[0] = _NSConcreteStackBlock;
        v64[1] = 3221225472;
        v64[2] = sub_100114758;
        v64[3] = &unk_1001F2ED8;
        id v65 = v23;
        sub_100007540(WeakRetained, v29, 0, 0, v64);
      }
      id v25 = [obj countByEnumeratingWithState:&v66 objects:v80 count:16];
    }
    while (v25);
  }

  long long v62 = 0u;
  long long v63 = 0u;
  long long v60 = 0u;
  long long v61 = 0u;
  id v55 = v23;
  id obja = [v55 countByEnumeratingWithState:&v60 objects:v78 count:16];
  if (obja)
  {
    uint64_t v56 = *(void *)v61;
    do
    {
      for (j = 0; j != obja; j = (char *)j + 1)
      {
        if (*(void *)v61 != v56) {
          objc_enumerationMutation(v55);
        }
        uint64_t v31 = *(void *)(*((void *)&v60 + 1) + 8 * (void)j);
        uint64_t v32 = objc_opt_class();
        v77[0] = v31;
        v77[1] = &off_10020AF50;
        long long v33 = +[NSArray arrayWithObjects:v77 count:2];
        char v34 = (char *)[v22 count:v32 where:@"entity = ? and state = ?" bindings:v33];

        uint64_t v35 = objc_opt_class();
        v76[0] = v31;
        v76[1] = &off_10020AF50;
        id v36 = +[NSArray arrayWithObjects:v76 count:2];
        uint64_t v37 = &v34[(void)[WeakRetained count:v35 where:@"entity = ? and state = ?" bindings:v36]];

        uint64_t v38 = objc_opt_class();
        v75[0] = v31;
        v75[1] = &off_10020AF68;
        id v39 = +[NSArray arrayWithObjects:v75 count:2];
        char v40 = (char *)[WeakRetained count:v38 where:@"entity = ? and state = ?" bindings:v39];

        uint64_t v41 = objc_opt_class();
        v74[0] = v31;
        v74[1] = &off_10020AF68;
        id v42 = +[NSArray arrayWithObjects:v74 count:2];
        uint64_t v43 = &v40[(void)[WeakRetained count:v41 where:@"entity = ? and state = ?" bindings:v42]];

        uint64_t v44 = objc_opt_class();
        v73[0] = v31;
        v73[1] = &off_10020AF80;
        uint64_t v45 = +[NSArray arrayWithObjects:v73 count:2];
        uint64_t v46 = (char *)[WeakRetained count:v44 where:@"entity = ? and state = ?" bindings:v45];

        uint64_t v22 = WeakRetained;
        uint64_t v47 = objc_opt_class();
        v72[0] = v31;
        v72[1] = &off_10020AF80;
        long long v48 = +[NSArray arrayWithObjects:v72 count:2];
        id v49 = &v46[(void)[WeakRetained count:v47 where:@"entity = ? and state = ?" bindings:v48]];

        v70[0] = @"insert";
        uint64_t v50 = +[NSNumber numberWithInteger:v37];
        v71[0] = v50;
        v70[1] = @"updated";
        long long v51 = +[NSNumber numberWithInteger:v43];
        v71[1] = v51;
        v70[2] = @"deleted";
        long long v52 = +[NSNumber numberWithInteger:v49];
        v71[2] = v52;
        id v53 = +[NSDictionary dictionaryWithObjects:v71 forKeys:v70 count:3];
        [*(id *)(a1 + 40) setObject:v53 forKeyedSubscript:v31];
      }
      id obja = [v55 countByEnumeratingWithState:&v60 objects:v78 count:16];
    }
    while (obja);
  }
}

void sub_100114758(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  sub_100003BF0(a2, @"entity");
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  [v2 addObject:v3];
}

void sub_100114950(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10011496C(uint64_t a1)
{
  if (a1 && *(void *)(a1 + 24))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 88));
    id v3 = sub_100003A74(WeakRetained);

    if (v3)
    {
      unsigned int v4 = sub_100003A74(WeakRetained);
      if (v4 && (uint64_t v5 = v4[7], v4, v5))
      {
        objc_initWeak(&location, (id)a1);
        uint64_t v14 = _NSConcreteStackBlock;
        uint64_t v15 = 3221225472;
        uint64_t v16 = sub_100114B28;
        id v17 = &unk_1001F2D28;
        objc_copyWeak(&v18, &location);
        id v6 = objc_retainBlock(&v14);
        id v7 = [PDTaskSchedulerBlockTask alloc];
        id v8 = [(PDTaskSchedulerBlockTask *)v7 initWithIdentifier:@"com.apple.progressd.fetch", *(void *)(a1 + 24), v6, v14, v15, v16, v17 queue block];
        uint64_t v9 = sub_100003A74(WeakRetained);
        id v10 = (void *)v9;
        if (v9) {
          uint64_t v11 = *(void *)(v9 + 56);
        }
        else {
          uint64_t v11 = 0;
        }
        [(PDTaskSchedulerBlockTask *)v8 clampToPredefinedTimePeriod:v11];

        int v12 = sub_1000637B8();
        sub_100063F70(v12, v8);

        objc_destroyWeak(&v18);
        objc_destroyWeak(&location);
      }
      else
      {
        id v13 = sub_1000637B8();
        sub_100063984(v13, @"com.apple.progressd.fetch");
      }
    }
  }
}

void sub_100114B0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100114B28(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = WeakRetained;
  if (WeakRetained) {
    id v2 = objc_loadWeakRetained(WeakRetained + 11);
  }
  else {
    id v2 = 0;
  }
  sub_1000E5BD0(v2);

  sub_100003784(v3, &stru_1001F53F0);
}

void sub_100114BA0(id a1, NSError *a2)
{
  id v2 = a2;
  if (v2)
  {
    CLSInitLog();
    id v3 = CLSLogOperations;
    if (os_log_type_enabled(CLSLogOperations, OS_LOG_TYPE_INFO))
    {
      int v4 = 138543362;
      uint64_t v5 = v2;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "scheduled fetch failed: %{public}@", (uint8_t *)&v4, 0xCu);
    }
  }
}

void sub_100114C54(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained) {
    id v3 = objc_loadWeakRetained(WeakRetained + 11);
  }
  else {
    id v3 = 0;
  }

  sub_100169690(v3);
}

void sub_100114D84(id a1)
{
  uint64_t v1 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  attr = dispatch_queue_attr_make_with_qos_class(v1, QOS_CLASS_USER_INITIATED, 0);

  id v2 = dispatch_get_global_queue(25, 0);
  dispatch_queue_t v3 = dispatch_queue_create_with_target_V2("com.apple.progressd.operations", attr, v2);
  int v4 = (void *)qword_10023E710;
  qword_10023E710 = (uint64_t)v3;
}

void sub_100114E24(id a1)
{
  uint64_t v1 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  attr = dispatch_queue_attr_make_with_qos_class(v1, QOS_CLASS_USER_INTERACTIVE, 0);

  id v2 = dispatch_get_global_queue(33, 0);
  dispatch_queue_t v3 = dispatch_queue_create_with_target_V2("com.apple.progressd.operations.ui", attr, v2);
  int v4 = (void *)qword_10023E720;
  qword_10023E720 = (uint64_t)v3;
}

void sub_100114EC4(id a1)
{
  uint64_t v1 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  attr = dispatch_queue_attr_make_with_qos_class(v1, QOS_CLASS_USER_INITIATED, 0);

  id v2 = dispatch_get_global_queue(25, 0);
  dispatch_queue_t v3 = dispatch_queue_create_with_target_V2("com.apple.progressd.operations.aps", attr, v2);
  int v4 = (void *)qword_10023E730;
  qword_10023E730 = (uint64_t)v3;
}

void sub_100115964(void *a1, void *a2, void *a3, void *a4, uint64_t a5, void *a6, void *a7, void *a8, unsigned __int8 a9, void *a10, void *a11, void *a12)
{
  id v18 = a2;
  id v19 = a3;
  id v45 = a4;
  id v20 = a6;
  id v21 = a7;
  id v22 = a8;
  id v23 = a10;
  id v24 = a11;
  id v25 = a12;
  uint64_t v26 = v25;
  if (a1)
  {
    id v38 = v25;
    id v39 = v24;
    id v40 = v23;
    long long v27 = objc_opt_new();
    id v43 = v18;
    [v27 setZoneName:v18];
    id v42 = v19;
    [v27 setZoneOwnerName:v19];
    uint64_t v37 = v27;
    id v41 = v20;
    [v27 setOrgID:v20];
    id v28 = objc_msgSend(objc_alloc((Class)NSMutableArray), "initWithCapacity:", objc_msgSend(v21, "count"));
    long long v46 = 0u;
    long long v47 = 0u;
    long long v48 = 0u;
    long long v49 = 0u;
    id v29 = v21;
    id v30 = [v29 countByEnumeratingWithState:&v46 objects:v50 count:16];
    if (v30)
    {
      id v31 = v30;
      uint64_t v32 = *(void *)v47;
      do
      {
        for (i = 0; i != v31; i = (char *)i + 1)
        {
          if (*(void *)v47 != v32) {
            objc_enumerationMutation(v29);
          }
          uint64_t v34 = *(void *)(*((void *)&v46 + 1) + 8 * i);
          uint64_t v35 = objc_opt_new();
          [v35 setRecordName:v34];
          [v35 setParentObjectID:v45];
          [v35 setParentEntityType:a5];
          [v35 setAssetFieldNames:v22];
          [v28 addObject:v35];
        }
        id v31 = [v29 countByEnumeratingWithState:&v46 objects:v50 count:16];
      }
      while (v31);
    }

    [v37 setRequestItems:v28];
    id v36 = [a1 objcClient];
    id v23 = v40;
    uint64_t v26 = v38;
    [v36 fetchRecordsforDownloadingWithIsDraft:a9 request:v37 progressBlock:v40 recordResultBlock:v39 completionBlock:v38];

    id v24 = v39;
    id v19 = v42;
    id v18 = v43;
    id v20 = v41;
  }
}

void sub_100115C1C(void *a1, void *a2, void *a3, void *a4, uint64_t a5, void *a6, void *a7, void *a8, unsigned __int8 a9, void *a10, void *a11, void *a12)
{
  id v18 = a2;
  id v19 = a3;
  id v45 = a4;
  id v20 = a6;
  id v21 = a7;
  id v22 = a8;
  id v23 = a10;
  id v24 = a11;
  id v25 = a12;
  uint64_t v26 = v25;
  if (a1)
  {
    id v38 = v25;
    id v39 = v24;
    id v40 = v23;
    long long v27 = objc_opt_new();
    id v43 = v18;
    [v27 setZoneName:v18];
    id v42 = v19;
    [v27 setZoneOwnerName:v19];
    uint64_t v37 = v27;
    id v41 = v20;
    [v27 setOrgID:v20];
    id v28 = objc_msgSend(objc_alloc((Class)NSMutableArray), "initWithCapacity:", objc_msgSend(v21, "count"));
    long long v46 = 0u;
    long long v47 = 0u;
    long long v48 = 0u;
    long long v49 = 0u;
    id v29 = v21;
    id v30 = [v29 countByEnumeratingWithState:&v46 objects:v50 count:16];
    if (v30)
    {
      id v31 = v30;
      uint64_t v32 = *(void *)v47;
      do
      {
        for (i = 0; i != v31; i = (char *)i + 1)
        {
          if (*(void *)v47 != v32) {
            objc_enumerationMutation(v29);
          }
          uint64_t v34 = *(void *)(*((void *)&v46 + 1) + 8 * i);
          uint64_t v35 = objc_opt_new();
          [v35 setRecordName:v34];
          [v35 setParentObjectID:v45];
          [v35 setParentEntityType:a5];
          [v35 setAssetFieldNames:v22];
          [v28 addObject:v35];
        }
        id v31 = [v29 countByEnumeratingWithState:&v46 objects:v50 count:16];
      }
      while (v31);
    }

    [v37 setRequestItems:v28];
    id v36 = [a1 objcClient];
    id v23 = v40;
    uint64_t v26 = v38;
    [v36 fetchRecordsforStreamingWithIsDraft:a9 request:v37 progressBlock:v40 recordResultBlock:v39 completionBlock:v38];

    id v24 = v39;
    id v19 = v42;
    id v18 = v43;
    id v20 = v41;
  }
}

uint64_t sub_100116BC0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0;
      while (1)
      {
        uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        unint64_t v8 = v7 + 1;
        if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
        v6 |= (unint64_t)(v9 & 0x7F) << v4;
        if ((v9 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        BOOL v10 = v5++ >= 9;
        if (v10)
        {
          unint64_t v6 = 0;
          int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0;
      }
LABEL_13:
      if (v11 || (v6 & 7) == 4) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      unint64_t v13 = v6 >> 3;
      if ((int)(v6 >> 3) <= 99)
      {
        switch((int)v13)
        {
          case 1:
            char v14 = 0;
            unsigned int v15 = 0;
            uint64_t v16 = 0;
            *(unsigned char *)(a1 + 212) |= 0x10u;
            while (2)
            {
              uint64_t v17 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
              unint64_t v18 = v17 + 1;
              if (v17 == -1 || v18 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
              {
                *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
              }
              else
              {
                char v19 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v17);
                *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v18;
                v16 |= (unint64_t)(v19 & 0x7F) << v14;
                if (v19 < 0)
                {
                  v14 += 7;
                  BOOL v10 = v15++ >= 9;
                  if (v10)
                  {
                    LODWORD(v16) = 0;
                    goto LABEL_93;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
              LODWORD(v16) = 0;
            }
LABEL_93:
            uint64_t v50 = 192;
            goto LABEL_110;
          case 2:
            uint64_t v22 = PBReaderReadString();
            uint64_t v23 = 144;
            goto LABEL_75;
          case 3:
            uint64_t v22 = PBReaderReadString();
            uint64_t v23 = 176;
            goto LABEL_75;
          case 4:
            uint64_t v22 = PBReaderReadString();
            uint64_t v23 = 72;
            goto LABEL_75;
          case 5:
            uint64_t v22 = PBReaderReadString();
            uint64_t v23 = 32;
            goto LABEL_75;
          case 6:
            uint64_t v22 = PBReaderReadString();
            uint64_t v23 = 64;
            goto LABEL_75;
          case 7:
            uint64_t v22 = PBReaderReadString();
            uint64_t v23 = 128;
            goto LABEL_75;
          case 8:
            uint64_t v22 = PBReaderReadString();
            uint64_t v23 = 136;
            goto LABEL_75;
          case 9:
            uint64_t v22 = PBReaderReadString();
            uint64_t v23 = 112;
            goto LABEL_75;
          case 10:
            uint64_t v22 = PBReaderReadString();
            uint64_t v23 = 24;
            goto LABEL_75;
          case 11:
            uint64_t v22 = PBReaderReadString();
            uint64_t v23 = 160;
            goto LABEL_75;
          case 12:
            uint64_t v22 = PBReaderReadString();
            uint64_t v23 = 56;
            goto LABEL_75;
          case 13:
            uint64_t v22 = PBReaderReadString();
            uint64_t v23 = 40;
            goto LABEL_75;
          case 14:
            uint64_t v22 = PBReaderReadString();
            uint64_t v23 = 48;
            goto LABEL_75;
          case 15:
            char v24 = 0;
            unsigned int v25 = 0;
            uint64_t v26 = 0;
            *(unsigned char *)(a1 + 212) |= 0x20u;
            while (2)
            {
              uint64_t v27 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
              unint64_t v28 = v27 + 1;
              if (v27 == -1 || v28 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
              {
                *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
              }
              else
              {
                char v29 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v27);
                *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v28;
                v26 |= (unint64_t)(v29 & 0x7F) << v24;
                if (v29 < 0)
                {
                  v24 += 7;
                  BOOL v10 = v25++ >= 9;
                  if (v10)
                  {
                    uint64_t v26 = 0;
                    goto LABEL_97;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
              uint64_t v26 = 0;
            }
LABEL_97:
            *(unsigned char *)(a1 + 208) = v26 != 0;
            goto LABEL_76;
          case 16:
            uint64_t v22 = PBReaderReadString();
            uint64_t v23 = 184;
            goto LABEL_75;
          case 17:
            char v30 = 0;
            unsigned int v31 = 0;
            uint64_t v32 = 0;
            *(unsigned char *)(a1 + 212) |= 2u;
            while (2)
            {
              uint64_t v33 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
              unint64_t v34 = v33 + 1;
              if (v33 == -1 || v34 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
              {
                *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
              }
              else
              {
                char v35 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v33);
                *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v34;
                v32 |= (unint64_t)(v35 & 0x7F) << v30;
                if (v35 < 0)
                {
                  v30 += 7;
                  BOOL v10 = v31++ >= 9;
                  if (v10)
                  {
                    uint64_t v32 = 0;
                    goto LABEL_101;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
              uint64_t v32 = 0;
            }
LABEL_101:
            *(void *)(a1 + 16) = v32;
            goto LABEL_76;
          case 18:
            uint64_t v22 = PBReaderReadString();
            uint64_t v23 = 120;
            goto LABEL_75;
          case 19:
            char v36 = 0;
            unsigned int v37 = 0;
            uint64_t v16 = 0;
            *(unsigned char *)(a1 + 212) |= 4u;
            while (2)
            {
              uint64_t v38 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
              unint64_t v39 = v38 + 1;
              if (v38 == -1 || v39 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
              {
                *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
              }
              else
              {
                char v40 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v38);
                *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v39;
                v16 |= (unint64_t)(v40 & 0x7F) << v36;
                if (v40 < 0)
                {
                  v36 += 7;
                  BOOL v10 = v37++ >= 9;
                  if (v10)
                  {
                    LODWORD(v16) = 0;
                    goto LABEL_105;
                  }
                  continue;
                }
              }
              break;
            }
            if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
              LODWORD(v16) = 0;
            }
LABEL_105:
            uint64_t v50 = 104;
            goto LABEL_110;
          case 20:
            char v41 = 0;
            unsigned int v42 = 0;
            uint64_t v16 = 0;
            *(unsigned char *)(a1 + 212) |= 8u;
            break;
          case 21:
            uint64_t v22 = PBReaderReadString();
            uint64_t v23 = 200;
            goto LABEL_75;
          case 22:
            uint64_t v22 = PBReaderReadString();
            uint64_t v23 = 152;
LABEL_75:
            long long v46 = *(void **)(a1 + v23);
            *(void *)(a1 + v23) = v22;

            goto LABEL_76;
          case 23:
            *(unsigned char *)(a1 + 212) |= 1u;
            unint64_t v47 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            if (v47 <= 0xFFFFFFFFFFFFFFF7 && v47 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
            {
              uint64_t v48 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v47);
              *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v47 + 8;
            }
            else
            {
              *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
              uint64_t v48 = 0;
            }
            *(void *)(a1 + 8) = v48;
            goto LABEL_76;
          default:
            goto LABEL_88;
        }
        while (1)
        {
          uint64_t v43 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v45 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v43);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v44;
          v16 |= (unint64_t)(v45 & 0x7F) << v41;
          if ((v45 & 0x80) == 0) {
            goto LABEL_107;
          }
          v41 += 7;
          BOOL v10 = v42++ >= 9;
          if (v10)
          {
            LODWORD(v16) = 0;
            goto LABEL_109;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_107:
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v16) = 0;
        }
LABEL_109:
        uint64_t v50 = 168;
LABEL_110:
        *(_DWORD *)(a1 + v50) = v16;
        goto LABEL_76;
      }
      if (v13 == 100) {
        break;
      }
      if (v13 == 200)
      {
        id v20 = objc_alloc_init(PDDPDate);
        uint64_t v21 = 88;
        goto LABEL_84;
      }
      if (v13 == 201)
      {
        id v20 = objc_alloc_init(PDDPDate);
        uint64_t v21 = 96;
LABEL_84:
        objc_storeStrong((id *)(a1 + v21), v20);
        if (!PBReaderPlaceMark() || (PDDPDateReadFrom((uint64_t)v20, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
LABEL_87:

        goto LABEL_76;
      }
LABEL_88:
      uint64_t result = PBReaderSkipValueWithTag();
      if (!result) {
        return result;
      }
LABEL_76:
      if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
    }
    PBReaderReadString();
    id v20 = (PDDPDate *)objc_claimAutoreleasedReturnValue();
    if (v20) {
      [(id)a1 addClassIds:v20];
    }
    goto LABEL_87;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

char *sub_100118F68(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  if (a1)
  {
    v12.receiver = a1;
    v12.super_class = (Class)PDHandoutPublish;
    unint64_t v6 = (char *)objc_msgSendSuper2(&v12, "initWithDatabase:", a2);
    if (v6)
    {
      id v7 = [v5 copy];
      unint64_t v8 = *(void **)(v6 + 235);
      *(void *)(v6 + 235) = v7;

      uint64_t v9 = objc_opt_new();
      BOOL v10 = *(void **)(v6 + 227);
      *(void *)(v6 + 227) = v9;
    }
  }
  else
  {
    unint64_t v6 = 0;
  }

  return v6;
}

id sub_10011AB94()
{
  if (qword_10023E780 != -1) {
    dispatch_once(&qword_10023E780, &stru_1001F59F8);
  }
  uint64_t v0 = (void *)qword_10023E788;

  return v0;
}

void sub_10011ABE8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    long long v11 = 0u;
    long long v12 = 0u;
    long long v9 = 0u;
    long long v10 = 0u;
    id v3 = *(id *)(a1 + 32);
    id v4 = [v3 countByEnumeratingWithState:&v9 objects:v14 count:16];
    if (v4)
    {
      id v5 = v4;
      uint64_t v6 = *(void *)v10;
      do
      {
        for (i = 0; i != v5; i = (char *)i + 1)
        {
          if (*(void *)v10 != v6) {
            objc_enumerationMutation(v3);
          }
          objc_msgSend(*(id *)(*((void *)&v9 + 1) + 8 * i), "clientRemote_uploadProgressFraction:error:", *(void *)(a1 + 40), *(double *)(a1 + 56), (void)v9);
        }
        id v5 = [v3 countByEnumeratingWithState:&v9 objects:v14 count:16];
      }
      while (v5);
    }
  }
  else
  {
    CLSInitLog();
    unint64_t v8 = CLSLogAsset;
    if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)long long buf = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "queued_notifyUploadProgressFraction PDFileSyncAgent was released", buf, 2u);
    }
  }
}

void sub_10011AFA4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 112));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    id v4 = [WeakRetained uploadObservers];
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v5 = [v4 countByEnumeratingWithState:&v11 objects:v16 count:16];
    if (v5)
    {
      id v6 = v5;
      uint64_t v7 = *(void *)v12;
      do
      {
        for (i = 0; i != v6; i = (char *)i + 1)
        {
          if (*(void *)v12 != v7) {
            objc_enumerationMutation(v4);
          }
          LOWORD(v10) = *(_WORD *)(a1 + 129);
          objc_msgSend(*(id *)(*((void *)&v11 + 1) + 8 * i), "clientRemote_uploadCompleted:url:thumbnailURL:relativePathWithinContainer:ubiquitousContainerName:brItemID:brOwnerName:brZoneName:brShareName:fractionUploaded:isTemporary:isStaged:error:", *(unsigned __int8 *)(a1 + 128), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(double *)(a1 + 120), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), v10, *(void *)(a1 + 96));
        }
        id v6 = [v4 countByEnumeratingWithState:&v11 objects:v16 count:16];
      }
      while (v6);
    }
    [*(id *)(a1 + 104) removeUploadObservers:v4];
  }
  else
  {
    CLSInitLog();
    long long v9 = CLSLogAsset;
    if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)long long buf = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "queued_notifyUploadCompleted PDFileSyncAgent was released", buf, 2u);
    }
  }
}

void sub_10011B254(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    long long v11 = 0u;
    long long v12 = 0u;
    long long v9 = 0u;
    long long v10 = 0u;
    id v3 = *(id *)(a1 + 32);
    id v4 = [v3 countByEnumeratingWithState:&v9 objects:v14 count:16];
    if (v4)
    {
      id v5 = v4;
      uint64_t v6 = *(void *)v10;
      do
      {
        for (i = 0; i != v5; i = (char *)i + 1)
        {
          if (*(void *)v10 != v6) {
            objc_enumerationMutation(v3);
          }
          objc_msgSend(*(id *)(*((void *)&v9 + 1) + 8 * i), "clientRemote_downloadProgressFraction:error:", *(void *)(a1 + 40), *(double *)(a1 + 56), (void)v9);
        }
        id v5 = [v3 countByEnumeratingWithState:&v9 objects:v14 count:16];
      }
      while (v5);
    }
  }
  else
  {
    CLSInitLog();
    unint64_t v8 = CLSLogAsset;
    if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)long long buf = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "queued_notifyDownloadProgressFraction PDFileSyncAgent was released", buf, 2u);
    }
  }
}

void sub_10011B4A4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    id v4 = [WeakRetained downloadObservers];
    long long v10 = 0u;
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    id v5 = [v4 countByEnumeratingWithState:&v10 objects:v15 count:16];
    if (v5)
    {
      id v6 = v5;
      uint64_t v7 = *(void *)v11;
      do
      {
        for (i = 0; i != v6; i = (char *)i + 1)
        {
          if (*(void *)v11 != v7) {
            objc_enumerationMutation(v4);
          }
          objc_msgSend(*(id *)(*((void *)&v10 + 1) + 8 * i), "clientRemote_downloadCompleted:error:", *(unsigned __int8 *)(a1 + 56), *(void *)(a1 + 32));
        }
        id v6 = [v4 countByEnumeratingWithState:&v10 objects:v15 count:16];
      }
      while (v6);
    }
    [*(id *)(a1 + 40) removeDownloadObservers:v4];
  }
  else
  {
    CLSInitLog();
    long long v9 = CLSLogAsset;
    if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)long long buf = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "queued_notifyDownloadCompleted PDFileSyncAgent was released", buf, 2u);
    }
  }
}

void sub_10011B7E0(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    id v4 = WeakRetained[2];
    id v5 = [v4 type];
    if (v5 == (id)3)
    {
      id v6 = [*(id *)(a1 + 32) copyAssetToCloudKitContentStoreCache:v4 createThumbnailIfNeeded:*(unsigned __int8 *)(a1 + 48)];
    }
    else if (v5 == (id)1)
    {
      id v6 = [*(id *)(a1 + 32) copyToiCloudDrive];
    }
    else
    {
      +[NSError cls_createErrorWithCode:format:](NSError, "cls_createErrorWithCode:format:", 315, @"Failed to upload asset. Unhandled asset type: %ld.", [v4 type]);
      id v6 = (id)objc_claimAutoreleasedReturnValue();
    }
    unint64_t v8 = v6;
    if (v6)
    {
      objc_msgSend(v6, "cls_log:", CLSLogAsset);
      objc_storeStrong(v3 + 7, v8);
      [v3 notifyUploadCompleted];
    }
    else
    {
      [*(id *)(a1 + 32) startStateMachine];
    }
  }
  else
  {
    CLSInitLog();
    uint64_t v7 = CLSLogAsset;
    if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)long long buf = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "PDFileSyncAgent object was released when executing 'uploadAfterValidatingURLWithAuditToken:createThumbnailIfNeeded:'", buf, 2u);
    }
  }
}

void sub_10011BDD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  objc_destroyWeak(v26);
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10011BE1C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) URL];
  uint64_t v3 = *(void *)(a1 + 40);
  id v4 = [*(id *)(a1 + 32) brItemID];
  id v5 = [*(id *)(a1 + 32) brOwnerName];
  id v6 = [*(id *)(a1 + 32) brZoneName];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  _DWORD v7[2] = sub_10011BF2C;
  v7[3] = &unk_1001F51A8;
  id v8 = *(id *)(a1 + 48);
  +[NSURL cls_deleteFileAtExpectedURL:v2 containerURL:v3 itemID:v4 ownerName:v5 zoneName:v6 completion:v7];
}

void sub_10011BF2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    id v4 = +[NSError cls_createErrorWithCode:341, @"deleteBackingStoreWithCompletion: cls_deleteFileAtExpectedURL, error: %@", a3 format];
    objc_msgSend(v4, "cls_log:", CLSLogAsset);
  }
  else
  {
    id v4 = 0;
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10011BFC4(uint64_t a1, void *a2, void *a3, void *a4)
{
  if (a4)
  {
    id v7 = a4;
    id v8 = a3;
    id v9 = [a2 count];
    id v10 = [v8 count];

    id v11 = +[NSError cls_createErrorWithCode:341, @"deleteBackingStoreWithCompletion: operationCompletionBlock - #savedRecords: %lu, #deletedRecordIDs:%lu, error: %@", v9, v10, v7 format];

    objc_msgSend(v11, "cls_log:", CLSLogAsset);
  }
  else
  {
    id v11 = 0;
  }
  (*(void (**)(void, BOOL))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), v11 == 0);
}

void sub_10011C0B4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = [v5 recordID];
    id v8 = +[NSError cls_createErrorWithCode:341, @"deleteBackingStoreWithCompletion: recordCompletionBlock - savedRecord recordID: %@, error: %@", v7, v6 format];

    objc_msgSend(v8, "cls_log:", CLSLogAsset);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (!WeakRetained)
  {
    CLSInitLog();
    id v10 = CLSLogAsset;
    if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)long long buf = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "PDFileSyncAgent object was released during deleteBackingStoreWithCompletion: recordCompletionBlock", buf, 2u);
    }
  }
}

void sub_10011C1B8(uint64_t a1, double a2)
{
  CLSInitLog();
  id v4 = CLSLogAsset;
  if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_DEFAULT))
  {
    int v7 = 134217984;
    double v8 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "deleteBackingStoreWithCompletion: recordProgressBlock - progress: %f", (uint8_t *)&v7, 0xCu);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (!WeakRetained)
  {
    CLSInitLog();
    id v6 = CLSLogAsset;
    if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_ERROR))
    {
      LOWORD(v7) = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "PDFileSyncAgent object was released during deleteBackingStoreWithCompletion: recordProgressBlock", (uint8_t *)&v7, 2u);
    }
  }
}

void sub_10011CE00(uint64_t a1, char a2, void *a3)
{
  id v8 = a3;
  id v6 = *(id **)(a1 + 32);
  if (a2)
  {
    uint64_t v7 = 6;
  }
  else
  {
    objc_storeStrong(v6 + 9, a3);
    id v6 = *(id **)(a1 + 32);
    uint64_t v7 = 7;
  }
  [v6 uploadStateChanged:v7];
}

void sub_10011D774(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10011D798(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) URL];
  uint64_t v3 = +[NSFileManager defaultManager];
  id v4 = objc_opt_new();
  v26[0] = 0;
  v26[1] = v26;
  void v26[2] = 0x2020000000;
  char v27 = 0;
  uint64_t v22 = 0;
  uint64_t v23 = &v22;
  uint64_t v24 = 0x2020000000;
  char v25 = 0;
  id v20 = v26;
  id v21 = 0;
  long long v12 = _NSConcreteStackBlock;
  uint64_t v13 = 3221225472;
  long long v14 = sub_10011D978;
  unsigned int v15 = &unk_1001F55C0;
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  unint64_t v18 = &v22;
  uint64_t v19 = v5;
  id v7 = v3;
  id v16 = v7;
  id v17 = *(id *)(a1 + 32);
  [v4 coordinateReadingItemAtURL:v2 options:0 writingItemAtURL:v6 options:8 error:&v21 byAccessor:&v12];
  id v8 = v21;
  if (!*((unsigned char *)v23 + 24))
  {
    uint64_t v9 = +[NSError cls_createErrorWithCode:315, v8, @"moveDownloadedAssetFileToContentStoreCacheForAsset - failed to access file using FileCoordinator.", v12, v13, v14, v15, v16 underlyingError description];
    uint64_t v10 = *(void *)(*(void *)(a1 + 48) + 8);
    id v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), "cls_debug:", CLSLogAsset);
  }

  _Block_object_dispose(&v22, 8);
  _Block_object_dispose(v26, 8);
}

void sub_10011D954(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_10011D978(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
  id v21 = 0;
  unsigned __int8 v7 = +[PDFileSyncAgent removeItemAtURL:v6 error:&v21];
  id v8 = v21;
  if (v7)
  {
    uint64_t v9 = *(void **)(a1 + 32);
    id v20 = v8;
    unsigned __int8 v10 = [v9 moveItemAtURL:v5 toURL:v6 error:&v20];
    id v11 = v20;

    *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = v10;
    if (*(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24))
    {
      [*(id *)(a1 + 40) setURL:v6];
    }
    else
    {
      uint64_t v17 = +[NSError cls_createErrorWithCode:315 underlyingError:v11 description:@"moveDownloadedAssetFileToContentStoreCacheForAsset - failed to move file to CKContentStoreCache folder."];
      uint64_t v18 = *(void *)(*(void *)(a1 + 56) + 8);
      uint64_t v19 = *(void **)(v18 + 40);
      *(void *)(v18 + 40) = v17;

      objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), "cls_debug:", CLSLogAsset);
    }
    id v8 = v11;
  }
  else
  {
    uint64_t v13 = v12 = [v6 path];

    uint64_t v14 = +[NSError cls_createErrorWithCode:315 underlyingError:v8 description:v13];
    uint64_t v15 = *(void *)(*(void *)(a1 + 56) + 8);
    id v16 = *(void **)(v15 + 40);
    *(void *)(v15 + 40) = v14;

    objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), "cls_log:", CLSLogAsset);
  }
}

void sub_10011DD2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10011DD50(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) thumbnailURL];
  uint64_t v3 = +[NSFileManager defaultManager];
  id v4 = objc_opt_new();
  v26[0] = 0;
  v26[1] = v26;
  void v26[2] = 0x2020000000;
  char v27 = 0;
  uint64_t v22 = 0;
  uint64_t v23 = &v22;
  uint64_t v24 = 0x2020000000;
  char v25 = 0;
  id v20 = v26;
  id v21 = 0;
  long long v12 = _NSConcreteStackBlock;
  uint64_t v13 = 3221225472;
  uint64_t v14 = sub_10011DF30;
  uint64_t v15 = &unk_1001F55C0;
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v18 = &v22;
  uint64_t v19 = v5;
  id v7 = v3;
  id v16 = v7;
  id v17 = *(id *)(a1 + 32);
  [v4 coordinateReadingItemAtURL:v2 options:0 writingItemAtURL:v6 options:8 error:&v21 byAccessor:&v12];
  id v8 = v21;
  if (!*((unsigned char *)v23 + 24))
  {
    uint64_t v9 = +[NSError cls_createErrorWithCode:315, v8, @"moveDownloadedAssetFileToContentStoreCacheForAsset - failed to access thumbnail file using FileCoordinator.", v12, v13, v14, v15, v16 underlyingError description];
    uint64_t v10 = *(void *)(*(void *)(a1 + 48) + 8);
    id v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), "cls_debug:", CLSLogAsset);
  }

  _Block_object_dispose(&v22, 8);
  _Block_object_dispose(v26, 8);
}

void sub_10011DF0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_10011DF30(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
  id v21 = 0;
  unsigned __int8 v7 = +[PDFileSyncAgent removeItemAtURL:v6 error:&v21];
  id v8 = v21;
  if (v7)
  {
    uint64_t v9 = *(void **)(a1 + 32);
    id v20 = v8;
    unsigned __int8 v10 = [v9 moveItemAtURL:v5 toURL:v6 error:&v20];
    id v11 = v20;

    *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = v10;
    if (*(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24))
    {
      [*(id *)(a1 + 40) setThumbnailURL:v6];
    }
    else
    {
      uint64_t v17 = +[NSError cls_createErrorWithCode:315 underlyingError:v11 description:@"moveDownloadedAssetFileToContentStoreCacheForAsset - failed to move thumbnail file to CKContentStoreCache folder."];
      uint64_t v18 = *(void *)(*(void *)(a1 + 56) + 8);
      uint64_t v19 = *(void **)(v18 + 40);
      *(void *)(v18 + 40) = v17;

      objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), "cls_debug:", CLSLogAsset);
    }
    id v8 = v11;
  }
  else
  {
    uint64_t v13 = v12 = [v6 path];

    uint64_t v14 = +[NSError cls_createErrorWithCode:315 underlyingError:v8 description:v13];
    uint64_t v15 = *(void *)(*(void *)(a1 + 56) + 8);
    id v16 = *(void **)(v15 + 40);
    *(void *)(v15 + 40) = v14;

    objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), "cls_log:", CLSLogAsset);
  }
}

void sub_10011E4B4(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 152), 8);
  _Unwind_Resume(a1);
}

void sub_10011E524(uint64_t a1)
{
  id v2 = +[NSFileManager defaultManager];
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24))
  {
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = *(void *)(a1 + 32);
    id v60 = 0;
    unsigned __int8 v5 = +[PDFileSyncAgent removeItemAtURL:v4 error:&v60];
    id v6 = v60;
    id v7 = v6;
    if ((v5 & 1) == 0)
    {
      uint64_t v32 = [*(id *)(a1 + 32) path];
      goto LABEL_27;
    }
    uint64_t v3 = v6;
  }
  if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 80) + 8) + 24))
  {
    uint64_t v8 = *(void *)(a1 + 40);
    id v59 = v3;
    unsigned __int8 v9 = +[PDFileSyncAgent removeItemAtURL:v8 error:&v59];
    id v7 = v59;

    if (v9) {
      goto LABEL_8;
    }
    uint64_t v32 = [*(id *)(a1 + 40) path];
LABEL_27:
    id v21 = (id)objc_claimAutoreleasedReturnValue();

    uint64_t v33 = +[NSError cls_createErrorWithCode:315 underlyingError:v7 description:v21];
    uint64_t v34 = *(void *)(*(void *)(a1 + 72) + 8);
    char v35 = *(void **)(v34 + 40);
    *(void *)(v34 + 40) = v33;

    objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), "cls_log:", CLSLogAsset);
    goto LABEL_28;
  }
  id v7 = v3;
LABEL_8:
  unsigned __int8 v10 = objc_opt_new();
  id v11 = 0;
  uint64_t v55 = 0;
  uint64_t v56 = &v55;
  uint64_t v57 = 0x2020000000;
  char v58 = 0;
  if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24))
  {
    unsigned int v12 = [*(id *)(a1 + 48) startAccessingSecurityScopedResource];
    uint64_t v13 = *(void *)(a1 + 48);
    uint64_t v14 = *(void *)(a1 + 32);
    id v54 = 0;
    v44[0] = _NSConcreteStackBlock;
    v44[1] = 3221225472;
    v44[2] = sub_10011EA24;
    v44[3] = &unk_1001F55E8;
    uint64_t v15 = *(void *)(a1 + 64);
    long long v49 = &v55;
    uint64_t v50 = v15;
    id v45 = v2;
    id v46 = *(id *)(a1 + 56);
    id v16 = *(id *)(a1 + 32);
    char v53 = *(unsigned char *)(a1 + 96);
    uint64_t v17 = *(void *)(a1 + 88);
    id v47 = v16;
    uint64_t v51 = v17;
    id v48 = *(id *)(a1 + 40);
    int8x16_t v52 = vextq_s8(*(int8x16_t *)(a1 + 72), *(int8x16_t *)(a1 + 72), 8uLL);
    [v10 coordinateReadingItemAtURL:v13 options:0 writingItemAtURL:v14 options:8 error:&v54 byAccessor:v44];
    id v11 = v54;
    if (v12) {
      [*(id *)(a1 + 48) stopAccessingSecurityScopedResource];
    }
    if (!*((unsigned char *)v56 + 24))
    {
      uint64_t v18 = +[NSError cls_createErrorWithCode:315 underlyingError:v11 description:@"Failed to access file using FileCoordinator."];
      uint64_t v19 = *(void *)(*(void *)(a1 + 72) + 8);
      id v20 = *(void **)(v19 + 40);
      *(void *)(v19 + 40) = v18;

      objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), "cls_log:", CLSLogAsset);
    }
  }
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 80) + 8) + 24)
    || (uint64_t v22 = *(void **)(*(void *)(*(void *)(a1 + 88) + 8) + 40)) == 0
    || !*(void *)(a1 + 40)
    || *(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 40))
  {
    id v21 = v11;
  }
  else
  {
    unsigned int v23 = [v22 startAccessingSecurityScopedResource];
    uint64_t v24 = *(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 40);
    uint64_t v25 = *(void *)(a1 + 40);
    id v43 = v11;
    v36[0] = _NSConcreteStackBlock;
    v36[1] = 3221225472;
    v36[2] = sub_10011EDC0;
    v36[3] = &unk_1001F5610;
    uint64_t v26 = *(void *)(a1 + 80);
    char v40 = &v55;
    uint64_t v41 = v26;
    id v37 = v2;
    id v38 = *(id *)(a1 + 56);
    id v27 = *(id *)(a1 + 40);
    uint64_t v28 = *(void *)(a1 + 72);
    id v39 = v27;
    uint64_t v42 = v28;
    [v10 coordinateReadingItemAtURL:v24 options:0 writingItemAtURL:v25 options:8 error:&v43 byAccessor:v36];
    id v21 = v43;

    if (v23) {
      [*(id *)(*(void *)(*(void *)(a1 + 88) + 8) + 40) stopAccessingSecurityScopedResource];
    }
    if (!*((unsigned char *)v56 + 24))
    {
      uint64_t v29 = +[NSError cls_createErrorWithCode:315 underlyingError:v21 description:@"Failed to access thumbnail file using FileCoordinator."];
      uint64_t v30 = *(void *)(*(void *)(a1 + 72) + 8);
      unsigned int v31 = *(void **)(v30 + 40);
      *(void *)(v30 + 40) = v29;

      objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), "cls_debug:", CLSLogAsset);
    }
  }
  _Block_object_dispose(&v55, 8);

LABEL_28:
}

void sub_10011EA08(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_10011EA24(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = 1;
  id v7 = *(void **)(a1 + 32);
  id v33 = 0;
  unsigned __int8 v8 = [v7 copyItemAtURL:v5 toURL:v6 error:&v33];
  id v9 = v33;
  *(unsigned char *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) = v8;
  if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 72) + 8) + 24))
  {
    uint64_t v11 = +[NSError cls_createErrorWithCode:315 underlyingError:v9 description:@"Failed to copy file to CKContentStoreCache folder."];
    uint64_t v12 = *(void *)(*(void *)(a1 + 96) + 8);
    uint64_t v13 = *(void **)(v12 + 40);
    *(void *)(v12 + 40) = v11;

    objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 96) + 8) + 40), "cls_log:", CLSLogAsset);
    goto LABEL_19;
  }
  [*(id *)(a1 + 40) setURL:*(void *)(a1 + 48)];
  if (*(unsigned char *)(a1 + 104))
  {
    unsigned __int8 v10 = [*(id *)(a1 + 40) fileUTType];
    if ([v10 conformsToType:UTTypeAudio])
    {

      goto LABEL_19;
    }
    uint64_t v14 = *(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 40);

    if (v14) {
      goto LABEL_19;
    }
    CLSInitLog();
    id v16 = (void *)CLSLogAsset;
    if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v17 = *(void **)(a1 + 48);
      uint64_t v18 = v16;
      uint64_t v19 = [v17 path];
      *(_DWORD *)long long buf = 138412290;
      id v35 = v19;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "Thumbnail was not set on the asset. Creating a default thumbnail from the original asset file: %@", buf, 0xCu);
    }
    id v32 = 0;
    id v20 = +[CLSImageUtils JPEGDataForThumbnailForFileAtURL:maxSize:scaleFactor:error:](CLSImageUtils, "JPEGDataForThumbnailForFileAtURL:maxSize:scaleFactor:error:", v5, &v32, 200.0, 200.0, 1.0);
    id v21 = v32;
    if (v21 && (CLSInitLog(), uint64_t v22 = CLSLogAsset, os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_ERROR)))
    {
      *(_DWORD *)long long buf = 138412290;
      id v35 = v21;
      _os_log_error_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_ERROR, "Failed to generate thumbnail from asset file URL: %@", buf, 0xCu);
      if (v20)
      {
LABEL_12:
        uint64_t v23 = *(void *)(a1 + 56);
        id v31 = v21;
        unsigned int v24 = [v20 writeToURL:v23 options:0x10000000 error:&v31];
        id v25 = v31;

        if (v24)
        {
          uint64_t v26 = *(void **)(a1 + 56);
          objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 80) + 8) + 40), v26);
          [*(id *)(a1 + 40) setThumbnailURL:v26];
          *(unsigned char *)(*(void *)(*(void *)(a1 + 88) + 8) + 24) = 1;
        }
        else
        {
          CLSInitLog();
          id v27 = (void *)CLSLogAsset;
          if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_ERROR))
          {
            uint64_t v28 = *(void **)(a1 + 56);
            uint64_t v29 = v27;
            uint64_t v30 = [v28 path];
            *(_DWORD *)long long buf = 138412546;
            id v35 = v30;
            __int16 v36 = 2112;
            id v37 = v25;
            _os_log_error_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_ERROR, "Failed to write generated thumbnail for asset to: %@, error: %@", buf, 0x16u);
          }
        }
        goto LABEL_18;
      }
    }
    else if (v20)
    {
      goto LABEL_12;
    }
    id v25 = v21;
LABEL_18:
  }
LABEL_19:
}

void sub_10011EDC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 1;
  uint64_t v4 = *(void **)(a1 + 32);
  id v10 = 0;
  unsigned __int8 v5 = [v4 copyItemAtURL:a2 toURL:a3 error:&v10];
  id v6 = v10;
  *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = v5;
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24))
  {
    [*(id *)(a1 + 40) setThumbnailURL:*(void *)(a1 + 48)];
  }
  else
  {
    uint64_t v7 = +[NSError cls_createErrorWithCode:315 underlyingError:v6 description:@"Failed to copy thumbnail file to CKContentStoreCache folder."];
    uint64_t v8 = *(void *)(*(void *)(a1 + 72) + 8);
    id v9 = *(void **)(v8 + 40);
    *(void *)(v8 + 40) = v7;

    objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), "cls_debug:", CLSLogAsset);
  }
}

void sub_10011F2A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  _Block_object_dispose(&a20, 8);
  objc_destroyWeak((id *)(v22 - 120));
  _Unwind_Resume(a1);
}

void sub_10011F308(id a1, NSArray *a2, NSArray *a3, NSError *a4)
{
  id v6 = a2;
  uint64_t v7 = a3;
  uint64_t v8 = a4;
  CLSInitLog();
  id v9 = (void *)CLSLogAsset;
  if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_DEFAULT))
  {
    id v10 = v9;
    int v11 = 134218498;
    NSUInteger v12 = [(NSArray *)v6 count];
    __int16 v13 = 2048;
    NSUInteger v14 = [(NSArray *)v7 count];
    __int16 v15 = 2112;
    id v16 = v8;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "uploadToCloudKitContentStore: operationCompletionBlock - #savedRecords: %lu, #deletedRecordIDs:%lu, error: %@", (uint8_t *)&v11, 0x20u);
  }
}

void sub_10011F420(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  CLSInitLog();
  uint64_t v7 = (void *)CLSLogAsset;
  if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = v7;
    id v9 = [v5 recordID];
    int v25 = 138412546;
    uint64_t v26 = (uint64_t)v9;
    __int16 v27 = 2112;
    id v28 = v6;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "uploadToCloudKitContentStore: recordCompletionBlock - savedRecord recordID: %@, error: %@", (uint8_t *)&v25, 0x16u);
  }
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  int v11 = WeakRetained;
  if (WeakRetained)
  {
    id v12 = WeakRetained[2];
    objc_storeStrong(v11 + 7, a3);
    if (!v6)
    {
      if (v5)
      {
        __int16 v13 = [v5 recordID];
        NSUInteger v14 = [v13 recordName];
        [v12 setBrItemID:v14];

        __int16 v15 = [v5 recordID];
        id v16 = [v15 zoneID];
        uint64_t v17 = [v16 zoneName];
        [v12 setBrZoneName:v17];

        [v12 setBrOwnerName:*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40)];
      }
      [v12 setFractionUploaded:1.0];
      [v12 setUploaded:1];
      uint64_t v18 = [v12 URL];
      uint64_t v19 = [v18 path];

      CLSInitLog();
      id v20 = (void *)CLSLogAsset;
      if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_DEFAULT))
      {
        id v21 = v20;
        [v12 fractionUploaded];
        int v25 = 141558530;
        uint64_t v26 = 1752392040;
        __int16 v27 = 2112;
        id v28 = v19;
        __int16 v29 = 2048;
        uint64_t v30 = v22;
        _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "Completed upload of asset at '%{mask.hash}@' [reported upload progress as: %f]", (uint8_t *)&v25, 0x20u);
      }
      CLSInitLog();
      uint64_t v23 = CLSLogAsset;
      if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_DEFAULT))
      {
        int v25 = 141558274;
        uint64_t v26 = 1752392040;
        __int16 v27 = 2112;
        id v28 = v19;
        _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "No need to create a CKShare for asset at '%{mask.hash}@'", (uint8_t *)&v25, 0x16u);
      }
    }
    [v11 uploadStateChanged:3];
  }
  else
  {
    CLSInitLog();
    unsigned int v24 = CLSLogAsset;
    if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v25) = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "PDFileSyncAgent object was released during uploadToCloudKitContentStore: recordCompletionBlock", (uint8_t *)&v25, 2u);
    }
  }
}

void sub_10011F750(uint64_t a1, double a2)
{
  CLSInitLog();
  uint64_t v4 = CLSLogAsset;
  if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_DEFAULT))
  {
    int v11 = 134217984;
    uint64_t v12 = *(void *)&a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "uploadToCloudKitContentStore: recordProgressBlock - progress: %f", (uint8_t *)&v11, 0xCu);
  }
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v6 = WeakRetained;
  if (WeakRetained)
  {
    id v7 = WeakRetained[2];
    [v7 setFractionUploaded:a2];
    id v8 = [v6[2] fileSizeInBytes];
    CLSInitLog();
    id v9 = CLSLogAsset;
    if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_DEFAULT))
    {
      int v11 = 134218240;
      uint64_t v12 = (uint64_t)((double)(uint64_t)v8 * a2);
      __int16 v13 = 2048;
      id v14 = v8;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Uploaded: %ld of %ld bytes", (uint8_t *)&v11, 0x16u);
    }
    [v6 uploadStateChanged:2];
  }
  else
  {
    CLSInitLog();
    id v10 = CLSLogAsset;
    if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v11) = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "PDFileSyncAgent object was released during uploadToCloudKitContentStore: recordProgressBlock", (uint8_t *)&v11, 2u);
    }
  }
}

void sub_10011FC48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10011FC78(uint64_t a1)
{
  if ((objc_msgSend(*(id *)(a1 + 32), "cls_isParentOfURL:", *(void *)(a1 + 40)) & 1) == 0)
  {
    id v2 = *(void **)(a1 + 32);
    uint64_t v3 = +[NSUUID UUID];
    uint64_t v4 = [v3 UUIDString];
    id v5 = [v2 URLByAppendingPathComponent:v4 isDirectory:1];

    id v42 = 0;
    id v6 = objc_msgSend(v5, "cls_createDirectoryIfNeeded:", &v42);
    id v7 = v42;

    if (v6)
    {
      id v8 = [*(id *)(a1 + 40) lastPathComponent];
      id v9 = [v6 URLByAppendingPathComponent:v8 isDirectory:0];

      id v10 = +[NSFileManager defaultManager];
      v40[0] = 0;
      v40[1] = v40;
      v40[2] = 0x2020000000;
      char v41 = 0;
      uint64_t v36 = 0;
      id v37 = &v36;
      uint64_t v38 = 0x2020000000;
      char v39 = 0;
      int v11 = objc_opt_new();
      unsigned int v12 = [*(id *)(a1 + 40) startAccessingSecurityScopedResource];
      uint64_t v13 = *(void *)(a1 + 40);
      id v35 = 0;
      int v25 = _NSConcreteStackBlock;
      uint64_t v26 = 3221225472;
      __int16 v27 = sub_10011FF88;
      id v28 = &unk_1001F5610;
      id v32 = &v36;
      id v33 = v40;
      id v14 = v10;
      uint64_t v15 = *(void *)(a1 + 48);
      id v29 = v14;
      uint64_t v30 = v15;
      id v16 = v9;
      uint64_t v17 = *(void *)(a1 + 56);
      id v31 = v16;
      uint64_t v34 = v17;
      [v11 coordinateReadingItemAtURL:v13 options:0 writingItemAtURL:v16 options:8 error:&v35 byAccessor:&v25];
      id v18 = v35;
      if (v12) {
        objc_msgSend(*(id *)(a1 + 40), "stopAccessingSecurityScopedResource", v25, v26, v27, v28, v29, v30);
      }
      if (!*((unsigned char *)v37 + 24))
      {
        uint64_t v19 = +[NSError cls_createErrorWithCode:315 underlyingError:v18 description:@"Failed to access file using FileCoordinator."];
        uint64_t v20 = *(void *)(*(void *)(a1 + 56) + 8);
        id v21 = *(void **)(v20 + 40);
        *(void *)(v20 + 40) = v19;

        objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), "cls_debug:", CLSLogAsset);
      }

      _Block_object_dispose(&v36, 8);
      _Block_object_dispose(v40, 8);
    }
    else
    {
      uint64_t v22 = +[NSError cls_createErrorWithCode:315 underlyingError:v7 description:@"Failed to create a folder for draft copy of the file."];
      uint64_t v23 = *(void *)(*(void *)(a1 + 56) + 8);
      unsigned int v24 = *(void **)(v23 + 40);
      *(void *)(v23 + 40) = v22;

      objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), "cls_log:", CLSLogAsset);
    }
  }
}

void sub_10011FF60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v12 - 104), 8);
  _Unwind_Resume(a1);
}

void sub_10011FF88(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 1;
  id v7 = *(void **)(a1 + 32);
  id v13 = 0;
  unsigned __int8 v8 = [v7 copyItemAtURL:v5 toURL:v6 error:&v13];
  id v9 = v13;
  *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = v8;
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24))
  {
    +[QLThumbnailAddition associateThumbnailsForDocumentAtURL:v5 withDocumentAtURL:v6 error:0];
    [*(id *)(*(void *)(a1 + 40) + 16) setURL:*(void *)(a1 + 48)];
    [*(id *)(a1 + 40) insertStagedAssetInDBToBeginUploading];
  }
  else
  {
    uint64_t v10 = +[NSError cls_createErrorWithCode:315 underlyingError:v9 description:@"Failed to copy file to draft folder."];
    uint64_t v11 = *(void *)(*(void *)(a1 + 72) + 8);
    uint64_t v12 = *(void **)(v11 + 40);
    *(void *)(v11 + 40) = v10;

    objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), "cls_debug:", CLSLogAsset);
  }
}

void sub_100120164(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = WeakRetained[2];
    uint64_t v4 = [v3 URL];
    id v5 = [v4 path];
    if (*((unsigned char *)v2 + 32))
    {
      CLSInitLog();
      id v6 = CLSLogAsset;
      if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 141558274;
        uint64_t v25 = 1752392040;
        __int16 v26 = 2112;
        __int16 v27 = v5;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Already started observing upload progress for '%{mask.hash}@'", buf, 0x16u);
      }
    }
    else
    {
      *((unsigned char *)v2 + 32) = 1;
      CLSInitLog();
      unsigned __int8 v8 = CLSLogAsset;
      if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 141558274;
        uint64_t v25 = 1752392040;
        __int16 v26 = 2112;
        __int16 v27 = v5;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Using NSFilePresenter for observing upload progress for '%{mask.hash}@'", buf, 0x16u);
      }
      [v2 addToFilePresenter];
      v21[0] = _NSConcreteStackBlock;
      v21[1] = 3221225472;
      v21[2] = sub_100120474;
      v21[3] = &unk_1001F2710;
      id v9 = v3;
      id v22 = v9;
      uint64_t v23 = v2;
      uint64_t v10 = objc_retainBlock(v21);
      v16[0] = _NSConcreteStackBlock;
      v16[1] = 3221225472;
      void v16[2] = sub_100120630;
      v16[3] = &unk_1001F56F0;
      void v16[4] = v2;
      id v11 = v4;
      id v17 = v11;
      id v18 = v9;
      id v19 = v5;
      id v20 = v10;
      uint64_t v12 = v10;
      id v13 = objc_retainBlock(v16);
      uint64_t v14 = +[NSProgress addSubscriberForFileURL:v11 withPublishingHandler:v13];
      id v15 = v2[5];
      v2[5] = (id)v14;
    }
  }
  else
  {
    CLSInitLog();
    id v7 = CLSLogAsset;
    if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)long long buf = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "PDFileSyncAgent object was released during queued_startObservingiCloudDriveUploadProgress", buf, 2u);
    }
  }
}

id sub_100120474(uint64_t a1)
{
  CLSInitLog();
  id v2 = CLSLogAsset;
  if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v13) = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "NSProgress unpublished", (uint8_t *)&v13, 2u);
  }
  id v3 = *(void **)(a1 + 32);
  if (v3)
  {
    id v4 = [v3 fileSizeInBytes];
    unsigned __int8 v5 = [*(id *)(a1 + 32) isUploaded];
    CLSInitLog();
    id v6 = (void *)CLSLogAsset;
    if ((v5 & 1) == 0)
    {
      if (!os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_ERROR)) {
        return objc_msgSend(*(id *)(a1 + 40), "queued_stopObservingiCloudDriveUploadProgress");
      }
      id v11 = *(void **)(a1 + 32);
      unsigned __int8 v8 = v6;
      [v11 fractionUploaded];
      int v13 = 134218240;
      uint64_t v14 = (uint64_t)(v12 * (double)(uint64_t)v4);
      __int16 v15 = 2048;
      id v16 = v4;
      _os_log_error_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "Upload did not complete, uploaded: %ld of %ld bytes", (uint8_t *)&v13, 0x16u);
      goto LABEL_7;
    }
    if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_DEFAULT))
    {
      id v7 = *(void **)(a1 + 32);
      unsigned __int8 v8 = v6;
      [v7 fractionUploaded];
      int v13 = 134218240;
      uint64_t v14 = (uint64_t)(v9 * (double)(uint64_t)v4);
      __int16 v15 = 2048;
      id v16 = v4;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Upload completed, uploaded: %ld of %ld bytes", (uint8_t *)&v13, 0x16u);
LABEL_7:
    }
  }
  return objc_msgSend(*(id *)(a1 + 40), "queued_stopObservingiCloudDriveUploadProgress");
}

id sub_100120630(uint64_t a1, void *a2)
{
  id v4 = a2;
  CLSInitLog();
  unsigned __int8 v5 = CLSLogAsset;
  if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 138412290;
    uint64_t v20 = (uint64_t)v4;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "NSProgress publishing, received progress: %@", buf, 0xCu);
  }
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 48), a2);
  [*(id *)(*(void *)(a1 + 32) + 48) addObserver:*(void *)(a1 + 32) forKeyPath:@"fractionCompleted" options:5 context:*(void *)(a1 + 40)];
  [v4 fractionCompleted];
  double v7 = v6 * 0.9;
  [*(id *)(a1 + 48) setFractionUploaded:v6 * 0.9];
  id v8 = [*(id *)(a1 + 48) fileSizeInBytes];
  CLSInitLog();
  double v9 = CLSLogAsset;
  if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 134218240;
    uint64_t v20 = (uint64_t)(v7 * (double)(uint64_t)v8);
    __int16 v21 = 2048;
    uint64_t v22 = (uint64_t)v8;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Uploaded: %ld of %ld bytes", buf, 0x16u);
  }
  uint64_t v10 = [v4 userInfo];
  id v11 = [v10 objectForKey:NSProgressFileOperationKindKey];
  double v12 = v11;
  if (v11)
  {
    if (([v11 isEqualToString:NSProgressFileOperationKindUploading] & 1) == 0)
    {
      CLSInitLog();
      int v13 = CLSLogAsset;
      if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_ERROR))
      {
        uint64_t v17 = *(void *)(a1 + 56);
        *(_DWORD *)long long buf = 138412802;
        uint64_t v20 = (uint64_t)v12;
        __int16 v21 = 2160;
        uint64_t v22 = 1752392040;
        __int16 v23 = 2112;
        uint64_t v24 = v17;
        _os_log_error_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "Got an unexepected file operation kind: %@. Cannot observe upload progress for %{mask.hash}@", buf, 0x20u);
      }
    }
  }
  uint64_t v14 = sub_10011AB94();
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001208FC;
  block[3] = &unk_1001F2A68;
  void block[4] = *(void *)(a1 + 32);
  dispatch_async(v14, block);

  id v15 = objc_retainBlock(*(id *)(a1 + 64));

  return v15;
}

void sub_1001208FC(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  id v2 = [v1 observedPresentedItemUbiquityAttributes];
  [v1 presentedItemDidChangeUbiquityAttributes:v2];
}

void sub_100120A04(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = WeakRetained[6];
    if (v3)
    {
      id v4 = [WeakRetained[2] URL];
      [v3 removeObserver:v2 forKeyPath:@"fractionCompleted" context:v4];

      id v5 = v2[6];
      v2[6] = 0;
    }
    if (v2[5])
    {
      +[NSProgress removeSubscriber:](NSProgress, "removeSubscriber:");
      id v6 = v2[5];
      v2[5] = 0;
    }
    *((unsigned char *)v2 + 32) = 0;
  }
  else
  {
    CLSInitLog();
    double v7 = CLSLogAsset;
    if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_ERROR))
    {
      v8[0] = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "PDFileSyncAgent object was released during queued_stopObservingiCloudDriveUploadProgress", (uint8_t *)v8, 2u);
    }
  }
}

void sub_100120C00(uint64_t a1)
{
  id v2 = (id *)(a1 + 48);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    uint64_t v4 = sub_1000062FC();
    sub_100044604(v4);
    if (v4)
    {
      id v5 = *(id *)(v4 + 96);
      id v6 = *(id *)(v4 + 112);
      id v7 = v6;
      if (v5)
      {
        if (v6)
        {
          id v8 = *(id *)(*(void *)(a1 + 32) + 16);
          double v9 = [v8 URL];
          uint64_t v22 = [v9 path];
          CLSInitLog();
          uint64_t v10 = (void *)CLSLogAsset;
          if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_DEFAULT))
          {
            id v11 = v10;
            [v8 fractionUploaded];
            *(_DWORD *)long long buf = 141558530;
            uint64_t v28 = 1752392040;
            __int16 v29 = 2112;
            uint64_t v30 = v22;
            __int16 v31 = 2048;
            uint64_t v32 = v12;
            _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "Completed upload of asset at '%{mask.hash}@' [reported upload progress as: %f]", buf, 0x20u);
          }
          CLSInitLog();
          int v13 = CLSLogAsset;
          if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)long long buf = 141558274;
            uint64_t v28 = 1752392040;
            __int16 v29 = 2112;
            uint64_t v30 = v22;
            _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "About to create a CKShare (if needed) for asset at '%{mask.hash}@'", buf, 0x16u);
          }
          id v14 = *(id *)(v4 + 72);
          id v23 = v9;
          id v5 = v5;
          id v7 = v7;
          objc_copyWeak(&v26, v2);
          id v25 = *(id *)(a1 + 40);
          id v24 = v8;
          CLSPerformWithPersona();

          objc_destroyWeak(&v26);
        }
        else
        {
          uint64_t v20 = *(void *)(a1 + 40);
          id v21 = *(id *)(v4 + 120);
          (*(void (**)(uint64_t, void, id))(v20 + 16))(v20, 0, v21);

          id v7 = 0;
        }
        goto LABEL_16;
      }
      uint64_t v17 = *(void **)(v4 + 104);
    }
    else
    {
      id v7 = 0;
      uint64_t v17 = 0;
    }
    uint64_t v18 = *(void *)(a1 + 40);
    id v19 = v17;
    (*(void (**)(uint64_t, void, id))(v18 + 16))(v18, 0, v19);

    id v5 = 0;
LABEL_16:

    goto LABEL_17;
  }
  CLSInitLog();
  id v15 = CLSLogAsset;
  if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)long long buf = 0;
    _os_log_error_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, "PDFileSyncAgent object was released when executing createiCloudDriveCKShare", buf, 2u);
  }
  uint64_t v16 = *(void *)(a1 + 40);
  uint64_t v4 = +[NSError cls_createErrorWithCode:316 description:@"PDFileSyncAgent object was released when executing createiCloudDriveCKShare"];
  (*(void (**)(uint64_t, void, uint64_t))(v16 + 16))(v16, 0, v4);
LABEL_17:
}

void sub_100120FD8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100120FF4(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  _DWORD v5[2] = sub_1001210E0;
  v5[3] = &unk_1001F5718;
  objc_copyWeak(&v8, (id *)(a1 + 72));
  id v7 = *(id *)(a1 + 64);
  id v6 = *(id *)(a1 + 56);
  objc_msgSend(v2, "cls_createShareIfNeededWithOrgAdminUserRecordID:userRecordID:completion:", v3, v4, v5);

  objc_destroyWeak(&v8);
}

void sub_1001210CC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1001210E0(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  if ((a2 & 0xFFFFFFFFFFFFFFFELL) == 2)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    if (WeakRetained)
    {
      [*(id *)(a1 + 32) setBrOwnerName:v7];
      uint64_t v10 = [v8 recordName];
      [*(id *)(a1 + 32) setBrShareName:v10];

      id v11 = [v8 recordName];
      uint64_t v12 = [v11 pathComponents];
      int v13 = [v12 lastObject];
      [*(id *)(a1 + 32) setBrItemID:v13];

      id v14 = [v8 zoneID];
      id v15 = [v14 zoneName];
      [*(id *)(a1 + 32) setBrZoneName:v15];

      (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
    }
    else
    {
      CLSInitLog();
      uint64_t v16 = CLSLogAsset;
      if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)id v19 = 0;
        _os_log_error_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "PDFileSyncAgent object was released when setting up CKShare", v19, 2u);
      }
      uint64_t v17 = *(void *)(a1 + 40);
      uint64_t v18 = +[NSError cls_createErrorWithCode:316 description:@"PDFileSyncAgent object was released when setting up CKShare"];
      (*(void (**)(uint64_t, void, void *))(v17 + 16))(v17, 0, v18);
    }
  }
  else
  {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

void sub_100121374(id a1)
{
  uint64_t v1 = +[NSSet setWithObjects:](NSSet, "setWithObjects:", NSURLUbiquitousItemIsUploadedKey, NSURLUbiquitousItemUploadingErrorKey, 0);
  uint64_t v2 = qword_10023E740;
  qword_10023E740 = v1;

  _objc_release_x1(v1, v2);
}

void sub_100122B4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,id location)
{
  _Block_object_dispose((const void *)(v35 - 208), 8);
  _Unwind_Resume(a1);
}

void sub_100122BBC(uint64_t a1, void *a2, double a3)
{
  id v5 = a2;
  CLSInitLog();
  id v6 = CLSLogAsset;
  if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_INFO))
  {
    int v10 = 138412546;
    id v11 = v5;
    __int16 v12 = 2048;
    double v13 = a3;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "downloadCloudKitPrimaryFileWithCompletion progressBlock recordID: '%@', progress: %f%%", (uint8_t *)&v10, 0x16u);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v8 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend(WeakRetained, "queued_notifyDownloadProgressFraction:error:", 0, a3);
  }
  else
  {
    CLSInitLog();
    double v9 = CLSLogAsset;
    if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_ERROR))
    {
      LOWORD(v10) = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "downloadCloudKitPrimaryFileWithCompletion PDFileSyncAgent was released", (uint8_t *)&v10, 2u);
    }
  }
}

void sub_100122CFC(id a1, CKRecordID *a2, NSError *a3)
{
  uint64_t v4 = a2;
  id v5 = a3;
  CLSInitLog();
  id v6 = CLSLogAsset;
  if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_INFO))
  {
    int v7 = 138412546;
    id v8 = v4;
    __int16 v9 = 2112;
    int v10 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "downloadCloudKitPrimaryFileWithCompletion recordResultBlock recordID: '%@', error: %@", (uint8_t *)&v7, 0x16u);
  }
}

void sub_100122DD0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  CLSInitLog();
  int v7 = CLSLogAsset;
  if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)long long buf = 138412546;
    id v20 = v5;
    __int16 v21 = 2112;
    id v22 = v6;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "downloadCloudKitPrimaryFileWithCompletion completionBlock recordID: '%@', error: %@", buf, 0x16u);
  }
  id v8 = [v5 firstObject];
  id v9 = v6;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v11 = WeakRetained;
  if (WeakRetained)
  {
    if (v8)
    {
      uint64_t v12 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
      id v18 = v9;
      unsigned int v13 = [WeakRetained cacheAssetURLFromCKRecord:v8 usingAsset:v12 error:&v18];
      id v14 = v18;

      if (v13)
      {
        id v15 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) URL];
      }
      else
      {
        id v15 = 0;
      }
    }
    else
    {
      id v15 = 0;
      id v14 = v9;
    }
    objc_msgSend(v11, "queued_notifyDownloadCompleted:error:", v15 != 0, v14);
  }
  else
  {
    CLSInitLog();
    uint64_t v16 = CLSLogAsset;
    if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)long long buf = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "downloadCloudKitPrimaryFileWithCompletion PDFileSyncAgent was released", buf, 2u);
    }
    id v15 = 0;
    id v14 = v9;
  }
  CLSInitLog();
  uint64_t v17 = CLSLogAsset;
  if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)long long buf = 138412546;
    id v20 = v15;
    __int16 v21 = 2114;
    id v22 = v14;
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_INFO, "downloadCloudKitPrimaryFileWithCompletion returning URL: '%@', error: '%{public}@", buf, 0x16u);
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100123794(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,id location,uint64_t a30,char a31)
{
}

void sub_1001237FC(id a1, CKRecordID *a2, double a3)
{
  uint64_t v4 = a2;
  CLSInitLog();
  id v5 = CLSLogAsset;
  if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_INFO))
  {
    int v6 = 138412546;
    int v7 = v4;
    __int16 v8 = 2048;
    double v9 = a3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "downloadCloudKitThumbnailWithCompletion progressBlock recordID: '%@', progress: %f%%", (uint8_t *)&v6, 0x16u);
  }
}

void sub_1001238C4(id a1, CKRecordID *a2, NSError *a3)
{
  uint64_t v4 = a2;
  id v5 = a3;
  CLSInitLog();
  int v6 = CLSLogAsset;
  if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_INFO))
  {
    int v7 = 138412546;
    __int16 v8 = v4;
    __int16 v9 = 2112;
    int v10 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "downloadCloudKitThumbnailWithCompletion recordResultBlock recordID: '%@', error: %@", (uint8_t *)&v7, 0x16u);
  }
}

void sub_100123998(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  CLSInitLog();
  int v7 = CLSLogAsset;
  if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)long long buf = 138412546;
    id v20 = v5;
    __int16 v21 = 2112;
    id v22 = v6;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "downloadCloudKitThumbnailWithCompletion completionBlock recordID: '%@', error: %@", buf, 0x16u);
  }
  __int16 v8 = [v5 firstObject];
  id v9 = v6;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v11 = WeakRetained;
  if (WeakRetained)
  {
    if (v8)
    {
      uint64_t v12 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
      id v18 = v9;
      unsigned int v13 = [WeakRetained cacheThumbnailAssetURLFromCKRecord:v8 usingAsset:v12 error:&v18];
      id v14 = v18;

      if (v13)
      {
        id v15 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) thumbnailURL];
      }
      else
      {
        id v15 = 0;
      }
    }
    else
    {
      id v15 = 0;
      id v14 = v9;
    }
    objc_msgSend(v11, "queued_notifyDownloadCompleted:error:", v15 != 0, v14);
  }
  else
  {
    CLSInitLog();
    uint64_t v16 = CLSLogAsset;
    if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)long long buf = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "downloadCloudKitThumbnailWithCompletion PDFileSyncAgent was released", buf, 2u);
    }
    id v15 = 0;
    id v14 = v9;
  }
  CLSInitLog();
  uint64_t v17 = CLSLogAsset;
  if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)long long buf = 138412546;
    id v20 = v15;
    __int16 v21 = 2114;
    id v22 = v14;
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_INFO, "downloadCloudKitThumbnailWithCompletion returning URL: '%@', error: '%{public}@", buf, 0x16u);
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100124110(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

void sub_100124164(uint64_t a1, void *a2, double a3)
{
  id v5 = a2;
  CLSInitLog();
  id v6 = CLSLogAsset;
  if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_INFO))
  {
    int v10 = 138412546;
    id v11 = v5;
    __int16 v12 = 2048;
    double v13 = a3;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "streamAsset progressBlock recordID: '%@', progress: %f", (uint8_t *)&v10, 0x16u);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  __int16 v8 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend(WeakRetained, "queued_notifyDownloadProgressFraction:error:", 0, a3);
  }
  else
  {
    CLSInitLog();
    id v9 = CLSLogAsset;
    if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_ERROR))
    {
      LOWORD(v10) = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "downloadCloudKitAssetForAsset PDFileSyncAgent was released", (uint8_t *)&v10, 2u);
    }
  }
}

void sub_1001242A4(id a1, CKRecordID *a2, NSError *a3)
{
  uint64_t v4 = a2;
  id v5 = a3;
  CLSInitLog();
  id v6 = CLSLogAsset;
  if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_INFO))
  {
    int v7 = 138412546;
    __int16 v8 = v4;
    __int16 v9 = 2112;
    int v10 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "streamAsset recordResultBlock recordID: '%@', error: %@", (uint8_t *)&v7, 0x16u);
  }
}

void sub_100124378(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  CLSInitLog();
  int v7 = CLSLogAsset;
  if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)long long buf = 138412546;
    id v21 = v5;
    __int16 v22 = 2112;
    id v23 = v6;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "streamAsset completionBlock recordID: '%@', error: %@", buf, 0x16u);
  }
  __int16 v8 = [v5 firstObject];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    if (v8)
    {
      uint64_t v10 = [v8 objectForKeyedSubscript:@"asset"];
      if (v10)
      {
        id v11 = [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) originalFilename];
        __int16 v12 = [(id)v10 downloadURLWithFileName:v11];

        double v13 = [(id)v10 downloadURLExpiration];
        [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) setUrlExpirationDate:v13];
        [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) setURL:v12];

        if (v12)
        {
          uint64_t v10 = 1;
          [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) setDownloaded:1];
        }
        else
        {
          uint64_t v10 = 0;
        }
        goto LABEL_13;
      }
    }
    else
    {
      uint64_t v10 = 0;
    }
    __int16 v12 = 0;
    double v13 = 0;
LABEL_13:
    if ([*(id *)(a1 + 32) updateAssetIfExists:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40)])
    {
      [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) setModified:0];
    }
    else
    {
      CLSInitLog();
      id v15 = (void *)CLSLogAsset;
      if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_ERROR))
      {
        id v18 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
        uint64_t v17 = v15;
        id v19 = [v18 objectID];
        *(_DWORD *)long long buf = 138412290;
        id v21 = v19;
        _os_log_error_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_ERROR, "streamAsset completionBlock not able to update CLSAsset with streaming URL and expiration date for asset '%@'", buf, 0xCu);
      }
    }
    objc_msgSend(WeakRetained, "queued_notifyDownloadCompleted:error:", v10, v6);
    goto LABEL_18;
  }
  CLSInitLog();
  id v14 = CLSLogAsset;
  if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)long long buf = 0;
    _os_log_error_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "downloadCloudKitAssetForAsset PDFileSyncAgent was released", buf, 2u);
  }
  double v13 = 0;
  __int16 v12 = 0;
LABEL_18:
  CLSInitLog();
  uint64_t v16 = CLSLogAsset;
  if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)long long buf = 138412802;
    id v21 = v12;
    __int16 v22 = 2112;
    id v23 = v13;
    __int16 v24 = 2114;
    id v25 = v6;
    _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_INFO, "fetchCloudKitStreamingURLWithCompletion returning URL: '%@', expirationDate: %@, error: '%{public}@", buf, 0x20u);
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

id sub_100124888(uint64_t a1, uint64_t a2)
{
  self;

  return +[PDFileSyncAgent ubiquitousContainerURL:a2];
}

id sub_1001248C8(uint64_t a1, void *a2)
{
  self;
  uint64_t v3 = sub_1000062FC();
  id v7 = 0;
  uint64_t v4 = sub_1000D1688((uint64_t)PDFileManager, v3, &v7);
  id v5 = v7;
  if (a2) {
    *a2 = v5;
  }

  return v4;
}

void sub_1001249B4(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = qword_10023E750;
  qword_10023E750 = v1;

  _objc_release_x1(v1, v2);
}

void sub_100124A44(id a1)
{
  uint64_t v1 = +[NSMapTable strongToStrongObjectsMapTable];
  uint64_t v2 = qword_10023E760;
  qword_10023E760 = v1;

  _objc_release_x1(v1, v2);
}

void sub_100124AD8(id a1)
{
  uint64_t v1 = +[NSMapTable strongToStrongObjectsMapTable];
  uint64_t v2 = qword_10023E770;
  qword_10023E770 = v1;

  _objc_release_x1(v1, v2);
}

void sub_100124E1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1001250F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100125128(uint64_t a1, void *a2, uint64_t a3, _OWORD *a4, void *a5, void *a6, void *a7)
{
  id v12 = a5;
  double v13 = a7;
  id v14 = a6;
  id v15 = a2;
  uint64_t v16 = [self agentForAsset:v15 database:v14 forUpload:1];

  [v16 addUploadObserver:v12];
  long long v17 = a4[1];
  v19[0] = *a4;
  v19[1] = v17;
  id v18 = [v16 uploadAfterValidatingURLWithAuditToken:v19 createThumbnailIfNeeded:a3];
  if (v18) {
    [v16 removeUploadObserver:v12];
  }
  v13[2](v13, v18);
}

void sub_100125224(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v6 = a2;
  id v7 = a3;
  id v8 = a4;
  __int16 v9 = self;
  uint64_t v10 = [[PDFileSyncAgent alloc] initWithAsset:v6 database:v7];
  id v11 = [v9 agentCache];
  objc_initWeak(&location, v10);
  [v11 addObject:v10];
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  _DWORD v14[2] = sub_10012539C;
  void v14[3] = &unk_1001F5948;
  id v12 = v8;
  id v16 = v12;
  objc_copyWeak(&v17, &location);
  id v13 = v11;
  id v15 = v13;
  [(PDFileSyncAgent *)v10 deleteBackingStoreWithCompletion:v14];

  objc_destroyWeak(&v17);
  objc_destroyWeak(&location);
}

void sub_100125378(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_10012539C(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained) {
    [*(id *)(a1 + 32) removeObject:WeakRetained];
  }

  return _objc_release_x1();
}

void sub_100125408(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v8 = a3;
  id v9 = a5;
  id v10 = a4;
  id v11 = a2;
  id v12 = [self agentForAsset:v11 database:v10 forUpload:0];

  if (v8) {
    [v12 addDownloadObserver:v8];
  }
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  _DWORD v14[2] = sub_100125514;
  void v14[3] = &unk_1001F2670;
  id v15 = v9;
  id v13 = v9;
  [v12 downloadCloudKitPrimaryFileWithCompletion:v14];
}

void sub_100125514(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v6 = 0;
    uint64_t v3 = +[FPSandboxingURLWrapper wrapperWithURL:a2 readonly:0 error:&v6];
    id v4 = v6;
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    id v5 = *(void (**)(void))(*(void *)(a1 + 32) + 16);
    v5();
  }
}

void sub_1001255C8(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v8 = a3;
  id v9 = a5;
  id v10 = a4;
  id v11 = a2;
  id v12 = [self agentForAsset:v11 database:v10 forUpload:0];

  if (v8) {
    [v12 addDownloadObserver:v8];
  }
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  _DWORD v14[2] = sub_1001256D4;
  void v14[3] = &unk_1001F2670;
  id v15 = v9;
  id v13 = v9;
  [v12 downloadCloudKitThumbnailWithCompletion:v14];
}

void sub_1001256D4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v6 = 0;
    uint64_t v3 = +[FPSandboxingURLWrapper wrapperWithURL:a2 readonly:0 error:&v6];
    id v4 = v6;
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    id v5 = *(void (**)(void))(*(void *)(a1 + 32) + 16);
    v5();
  }
}

void sub_100125788(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v12 = a3;
  id v8 = a5;
  id v9 = a4;
  id v10 = a2;
  id v11 = [self agentForAsset:v10 database:v9 forUpload:0];

  if (v12) {
    [v11 addDownloadObserver:v12];
  }
  [v11 fetchCloudKitStreamingURLWithCompletion:v8];
}

void sub_100125850(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v4 = a3;
  uint64_t v5 = self;
  sub_1001258E4(v5, v6, v4);
  if ((uint64_t)[v6 fileSizeInBytes] <= 9999999) {
    sub_100125A14(v5, v6, v4);
  }
}

void sub_1001258E4(uint64_t a1, void *a2, void *a3)
{
  id v4 = a2;
  id v5 = a3;
  uint64_t v6 = self;
  id v7 = [v4 fileUTType];
  unsigned __int8 v8 = [v7 conformsToType:UTTypeAudio];

  if ((v8 & 1) == 0)
  {
    id v9 = sub_100125B44();
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    void v11[2] = sub_100125B98;
    void v11[3] = &unk_1001F2F28;
    uint64_t v14 = v6;
    id v12 = v4;
    id v13 = v5;
    id v10 = +[NSBlockOperation blockOperationWithBlock:v11];
    [v9 addOperation:v10];
  }
}

void sub_100125A14(uint64_t a1, void *a2, void *a3)
{
  id v4 = a2;
  id v5 = a3;
  uint64_t v6 = self;
  id v7 = [v4 fileUTType];
  unsigned __int8 v8 = [v7 conformsToType:UTTypeAudiovisualContent];

  if ((v8 & 1) == 0)
  {
    id v9 = sub_100125B44();
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    void v11[2] = sub_100125E60;
    void v11[3] = &unk_1001F2F28;
    uint64_t v14 = v6;
    id v12 = v4;
    id v13 = v5;
    id v10 = +[NSBlockOperation blockOperationWithBlock:v11];
    [v9 addOperation:v10];
  }
}

id sub_100125B44()
{
  if (qword_10023E7C8 != -1) {
    dispatch_once(&qword_10023E7C8, &stru_1001F5A78);
  }
  uint64_t v0 = (void *)qword_10023E7C0;

  return v0;
}

void sub_100125B98(uint64_t a1)
{
  uint64_t v2 = sub_1000062FC();
  uint64_t v3 = (void *)v2;
  if (v2) {
    id v4 = *(void **)(v2 + 72);
  }
  else {
    id v4 = 0;
  }
  id v5 = v4;
  id v6 = *(id *)(a1 + 32);
  id v7 = *(id *)(a1 + 40);
  CLSPerformWithPersona();
}

void sub_100125C7C(uint64_t a1)
{
  dispatch_block_t v2 = dispatch_block_create((dispatch_block_flags_t)0, &stru_1001F5968);
  uint64_t v3 = *(void **)(a1 + 32);
  uint64_t v6 = a1 + 40;
  id v4 = *(void **)(a1 + 40);
  uint64_t v5 = *(void *)(v6 + 8);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  void v8[2] = sub_100125D5C;
  void v8[3] = &unk_1001F5990;
  id v9 = v3;
  id v10 = v2;
  id v7 = v2;
  sub_1001255C8(v5, v9, 0, v4, v8);
  dispatch_block_wait(v7, 0xFFFFFFFFFFFFFFFFLL);
}

void sub_100125D5C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (v4)
  {
    CLSInitLog();
    uint64_t v5 = (void *)CLSLogAsset;
    if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_ERROR))
    {
      uint64_t v6 = *(void **)(a1 + 32);
      id v7 = v5;
      unsigned __int8 v8 = [v6 objectID];
      int v9 = 138412546;
      id v10 = v8;
      __int16 v11 = 2112;
      id v12 = v4;
      _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Failed to prefetch thumbnail for asset '%@', error: '%@'", (uint8_t *)&v9, 0x16u);
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_100125E60(uint64_t a1)
{
  uint64_t v2 = sub_1000062FC();
  uint64_t v3 = (void *)v2;
  if (v2) {
    id v4 = *(void **)(v2 + 72);
  }
  else {
    id v4 = 0;
  }
  id v5 = v4;
  id v6 = *(id *)(a1 + 32);
  id v7 = *(id *)(a1 + 40);
  CLSPerformWithPersona();
}

void sub_100125F44(uint64_t a1)
{
  dispatch_block_t v2 = dispatch_block_create((dispatch_block_flags_t)0, &stru_1001F59B0);
  uint64_t v3 = *(void **)(a1 + 32);
  uint64_t v6 = a1 + 40;
  id v4 = *(void **)(a1 + 40);
  uint64_t v5 = *(void *)(v6 + 8);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  void v8[2] = sub_100126024;
  void v8[3] = &unk_1001F5990;
  id v9 = v3;
  id v10 = v2;
  id v7 = v2;
  sub_100125408(v5, v9, 0, v4, v8);
  dispatch_block_wait(v7, 0xFFFFFFFFFFFFFFFFLL);
}

void sub_100126024(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (v4)
  {
    CLSInitLog();
    uint64_t v5 = (void *)CLSLogAsset;
    if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_ERROR))
    {
      uint64_t v6 = *(void **)(a1 + 32);
      id v7 = v5;
      unsigned __int8 v8 = [v6 objectID];
      int v9 = 138412546;
      id v10 = v8;
      __int16 v11 = 2112;
      id v12 = v4;
      _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Failed to prefetch primary file for asset '%@', error: '%@'", (uint8_t *)&v9, 0x16u);
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_100126128(uint64_t a1, void *a2)
{
  id v2 = a2;
  self;
  uint64_t v3 = sub_1000062FC();
  id v11 = 0;
  id v4 = sub_1000D1688((uint64_t)PDFileManager, v3, &v11);
  id v5 = v11;
  if (v4)
  {
    uint64_t v6 = [v2 filenameForCKContentStoreCache];
    id v7 = [v4 URLByAppendingPathComponent:v6 isDirectory:0];
    +[PDFileSyncAgent removeItemAtURL:v7 error:0];
    unsigned __int8 v8 = [v2 thumbnailFilenameForCKContentStoreCache];
    int v9 = [v4 URLByAppendingPathComponent:v8 isDirectory:0];
    +[PDFileSyncAgent removeItemAtURL:v9 error:0];
  }
  else
  {
    CLSInitLog();
    id v10 = CLSLogAsset;
    if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 138412290;
      id v13 = v5;
      _os_log_error_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "deleteAllPrefetchedFilesForAsset - failed to get contentStoreCacheDirectoryURL error: %@", buf, 0xCu);
    }
  }
}

id sub_1001262E0()
{
  uint64_t v0 = self;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  void v11[2] = sub_100126464;
  void v11[3] = &unk_1001F59D8;
  id v1 = (id)objc_opt_new();
  id v12 = v1;
  id v2 = objc_retainBlock(v11);
  uint64_t v3 = [v0 agentCache];
  id v4 = [v3 objectEnumerator];
  ((void (*)(void *, void *, const __CFString *))v2[2])(v2, v4, @"GeneralAgentCache");

  id v5 = [v0 countedUploadAgentByAssetID];
  uint64_t v6 = [v5 objectEnumerator];
  ((void (*)(void *, void *, const __CFString *))v2[2])(v2, v6, @"UploadAgentCache");

  id v7 = [v0 countedDownloadAgentByAssetID];
  unsigned __int8 v8 = [v7 objectEnumerator];
  ((void (*)(void *, void *, const __CFString *))v2[2])(v2, v8, @"DownloadAgentCache");

  id v9 = v1;
  return v9;
}

void sub_100126464(uint64_t a1, void *a2, void *a3)
{
  id v4 = a2;
  id v23 = a3;
  id v5 = objc_opt_new();
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id obj = v4;
  id v6 = [obj countByEnumeratingWithState:&v25 objects:v31 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v26;
    do
    {
      for (i = 0; i != v7; i = (char *)i + 1)
      {
        if (*(void *)v26 != v8) {
          objc_enumerationMutation(obj);
        }
        id v10 = *(void **)(*((void *)&v25 + 1) + 8 * i);
        objc_opt_class();
        char isKindOfClass = objc_opt_isKindOfClass();
        id v12 = v10;
        id v13 = v12;
        if (isKindOfClass)
        {
          uint64_t v14 = 1;
        }
        else
        {
          uint64_t v15 = [v12 agent];
          signed int v16 = [v13 counter];

          uint64_t v14 = v16;
          id v13 = (void *)v15;
        }
        id v17 = +[NSString stringWithFormat:@"<%p> [%ld]", v13, v14];
        id v18 = [v13 asset];
        id v19 = v18;
        if (v18)
        {
          id v20 = [v18 objectID];
        }
        else
        {
          id v20 = @"<missing assetID>";
        }
        __int16 v29 = v17;
        uint64_t v30 = v20;
        id v21 = +[NSDictionary dictionaryWithObjects:&v30 forKeys:&v29 count:1];
        [v5 addObject:v21];
      }
      id v7 = [obj countByEnumeratingWithState:&v25 objects:v31 count:16];
    }
    while (v7);
  }

  if ([v5 count]) {
    [*(id *)(a1 + 32) setObject:v5 forKey:v23];
  }
}

void sub_1001266A4(id a1)
{
  id v1 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  qos_class_t v2 = qos_class_self();
  attr = dispatch_queue_attr_make_with_qos_class(v1, v2, 0);

  dispatch_queue_t v3 = dispatch_queue_create("com.apple.progressd.fileUploadProgress", attr);
  id v4 = (void *)qword_10023E788;
  qword_10023E788 = (uint64_t)v3;
}

void sub_100126730(id a1)
{
  id v1 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  qos_class_t v2 = qos_class_self();
  attr = dispatch_queue_attr_make_with_qos_class(v1, v2, 0);

  dispatch_queue_t v3 = dispatch_queue_create("com.apple.progressd.fileCopy", attr);
  id v4 = (void *)qword_10023E798;
  qword_10023E798 = (uint64_t)v3;
}

void sub_1001267BC(id a1)
{
  id v1 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  qos_class_t v2 = qos_class_self();
  attr = dispatch_queue_attr_make_with_qos_class(v1, v2, 0);

  dispatch_queue_t v3 = dispatch_queue_create("com.apple.progressd.fileSharing", attr);
  id v4 = (void *)qword_10023E7A8;
  qword_10023E7A8 = (uint64_t)v3;
}

void sub_100126848(id a1)
{
  uint64_t v1 = objc_opt_new();
  qos_class_t v2 = (void *)qword_10023E7B0;
  qword_10023E7B0 = v1;

  [(id)qword_10023E7B0 setName:@"PDFilePresenterOperationQueue"];
  uint64_t v3 = CLSCurrentNSQualityOfService();
  id v4 = (void *)qword_10023E7B0;

  [v4 setQualityOfService:v3];
}

void sub_1001268AC(id a1)
{
  uint64_t v1 = objc_opt_new();
  qos_class_t v2 = (void *)qword_10023E7C0;
  qword_10023E7C0 = v1;

  [(id)qword_10023E7C0 setName:@"PDFilePrefetchOperationQueue"];
  [(id)qword_10023E7C0 setQualityOfService:CLSCurrentNSQualityOfService()];
  uint64_t v3 = (void *)qword_10023E7C0;

  [v3 setMaxConcurrentOperationCount:1];
}

id *sub_10012691C(id *a1, void *a2, void *a3, void *a4)
{
  id v8 = a3;
  id v9 = a4;
  if (a1)
  {
    v12.receiver = a1;
    v12.super_class = (Class)PDUserNotificationData;
    id v10 = (id *)objc_msgSendSuper2(&v12, "init");
    a1 = v10;
    if (v10)
    {
      v10[5] = a2;
      objc_storeStrong(v10 + 1, a3);
      objc_storeStrong(a1 + 2, a4);
    }
  }

  return a1;
}

void sub_100126ABC(void *a1)
{
  if (a1)
  {
    objc_super v12 = +[NSDate date];
    id v21 = v12;
    qos_class_t v2 = +[NSArray arrayWithObjects:&v21 count:1];
    v20[0] = objc_opt_class();
    v20[1] = objc_opt_class();
    v20[2] = objc_opt_class();
    v20[3] = objc_opt_class();
    void v20[4] = objc_opt_class();
    void v20[5] = objc_opt_class();
    +[NSArray arrayWithObjects:v20 count:6];
    long long v13 = 0u;
    long long v14 = 0u;
    long long v15 = 0u;
    long long v16 = 0u;
    id v3 = (id)objc_claimAutoreleasedReturnValue();
    id v4 = [v3 countByEnumeratingWithState:&v13 objects:v19 count:16];
    if (v4)
    {
      id v5 = v4;
      uint64_t v6 = *(void *)v14;
      do
      {
        for (i = 0; i != v5; i = (char *)i + 1)
        {
          if (*(void *)v14 != v6) {
            objc_enumerationMutation(v3);
          }
          id v8 = *(objc_class **)(*((void *)&v13 + 1) + 8 * i);
          if (([a1 deleteAllWithoutTracking:v8 where:@"dateExpires != 0 and dateExpires < ?" bindings:v2] & 1) == 0)
          {
            CLSInitLog();
            id v9 = (void *)CLSLogOperations;
            if (os_log_type_enabled(CLSLogOperations, OS_LOG_TYPE_INFO))
            {
              id v10 = v9;
              id v11 = NSStringFromClass(v8);
              *(_DWORD *)long long buf = 138412290;
              id v18 = v11;
              _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "Failed to purge cached %@", buf, 0xCu);
            }
          }
        }
        id v5 = [v3 countByEnumeratingWithState:&v13 objects:v19 count:16];
      }
      while (v5);
    }
  }
}

BOOL sub_100126E84(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0;
      while (1)
      {
        unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0;
          int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0;
      }
LABEL_13:
      if (v10 || (v6 & 7) == 4) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      if ((v6 >> 3) == 2) {
        break;
      }
      if ((v6 >> 3) == 1)
      {
        objc_super v12 = objc_alloc_init(PDDPStatus);
        objc_storeStrong((id *)(a1 + 16), v12);
        if (!PBReaderPlaceMark() || (sub_1000D3710((uint64_t)v12, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();
        goto LABEL_23;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_25:
      if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
    }
    uint64_t v13 = PBReaderReadString();
    objc_super v12 = *(PDDPStatus **)(a1 + 8);
    *(void *)(a1 + 8) = v13;
LABEL_23:

    goto LABEL_25;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

uint64_t sub_1001292AC(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        char v12 = 0;
        unsigned int v13 = 0;
        uint64_t v14 = 0;
        *(unsigned char *)(a1 + 212) |= 4u;
        while (1)
        {
          unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v15 == -1 || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
          v14 |= (unint64_t)(v16 & 0x7F) << v12;
          if ((v16 & 0x80) == 0) {
            goto LABEL_117;
          }
          v12 += 7;
          BOOL v9 = v13++ >= 9;
          if (v9)
          {
            LODWORD(v14) = 0;
            goto LABEL_119;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_117:
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_119:
        uint64_t v32 = 112;
        goto LABEL_128;
      case 2u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v14 = 0;
        *(unsigned char *)(a1 + 212) |= 8u;
        while (2)
        {
          unint64_t v19 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v19 == -1 || v19 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v20 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v19);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v19 + 1;
            v14 |= (unint64_t)(v20 & 0x7F) << v17;
            if (v20 < 0)
            {
              v17 += 7;
              BOOL v9 = v18++ >= 9;
              if (v9)
              {
                LODWORD(v14) = 0;
                goto LABEL_123;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_123:
        uint64_t v32 = 208;
        goto LABEL_128;
      case 3u:
        id v21 = objc_alloc_init(PDDPStatus);
        objc_storeStrong((id *)(a1 + 168), v21);
        if (!PBReaderPlaceMark() || (sub_1000D3710((uint64_t)v21, a2) & 1) == 0) {
          goto LABEL_134;
        }
        goto LABEL_113;
      case 4u:
        id v21 = objc_alloc_init(PDDPHandout);
        objc_storeStrong((id *)(a1 + 104), v21);
        if (!PBReaderPlaceMark() || (sub_100097A38((uint64_t)v21, a2) & 1) == 0) {
          goto LABEL_134;
        }
        goto LABEL_113;
      case 5u:
        id v21 = objc_alloc_init(PDDPHandoutAttachment);
        objc_storeStrong((id *)(a1 + 40), v21);
        if (!PBReaderPlaceMark() || (sub_10005D718((uint64_t)v21, a2) & 1) == 0) {
          goto LABEL_134;
        }
        goto LABEL_113;
      case 6u:
        id v21 = objc_alloc_init(PDDPHandoutRecipient);
        objc_storeStrong((id *)(a1 + 136), v21);
        if (!PBReaderPlaceMark() || !sub_100133FB4((uint64_t)v21, a2)) {
          goto LABEL_134;
        }
        goto LABEL_113;
      case 8u:
        id v21 = objc_alloc_init(PDDPClass);
        objc_storeStrong((id *)(a1 + 56), v21);
        if (!PBReaderPlaceMark() || !sub_1000F6DF0((uint64_t)v21, a2)) {
          goto LABEL_134;
        }
        goto LABEL_113;
      case 9u:
        id v21 = objc_alloc_init(PDDPPerson);
        objc_storeStrong((id *)(a1 + 120), v21);
        if (!PBReaderPlaceMark() || (sub_1000DDFFC((uint64_t)v21, a2) & 1) == 0) {
          goto LABEL_134;
        }
        goto LABEL_113;
      case 0xAu:
        id v21 = objc_alloc_init(PDDPClassMember);
        objc_storeStrong((id *)(a1 + 64), v21);
        if (!PBReaderPlaceMark() || (sub_100045958((uint64_t)v21, a2) & 1) == 0) {
          goto LABEL_134;
        }
        goto LABEL_113;
      case 0xEu:
        id v21 = objc_alloc_init(PDDPClassZone);
        objc_storeStrong((id *)(a1 + 72), v21);
        if (!PBReaderPlaceMark() || (sub_10010CA84((uint64_t)v21, a2) & 1) == 0) {
          goto LABEL_134;
        }
        goto LABEL_113;
      case 0x11u:
        id v21 = objc_alloc_init(PDDPAssetReference);
        objc_storeStrong((id *)(a1 + 32), v21);
        if (!PBReaderPlaceMark() || (sub_100116BC0((uint64_t)v21, a2) & 1) == 0) {
          goto LABEL_134;
        }
        goto LABEL_113;
      case 0x13u:
        id v21 = objc_alloc_init(PDDPAuthorizationStatus);
        objc_storeStrong((id *)(a1 + 48), v21);
        if (!PBReaderPlaceMark() || (sub_1000B5620((uint64_t)v21, a2) & 1) == 0) {
          goto LABEL_134;
        }
        goto LABEL_113;
      case 0x14u:
        id v21 = objc_alloc_init(PDDPCompletionStatus);
        objc_storeStrong((id *)(a1 + 96), v21);
        if (!PBReaderPlaceMark() || (sub_1000678B0((uint64_t)v21, a2) & 1) == 0) {
          goto LABEL_134;
        }
        goto LABEL_113;
      case 0x15u:
        char v23 = 0;
        unsigned int v24 = 0;
        uint64_t v14 = 0;
        *(unsigned char *)(a1 + 212) |= 2u;
        while (2)
        {
          unint64_t v25 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v25 == -1 || v25 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v25);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v25 + 1;
            v14 |= (unint64_t)(v26 & 0x7F) << v23;
            if (v26 < 0)
            {
              v23 += 7;
              BOOL v9 = v24++ >= 9;
              if (v9)
              {
                LODWORD(v14) = 0;
                goto LABEL_127;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_127:
        uint64_t v32 = 16;
LABEL_128:
        *(_DWORD *)(a1 + v32) = v14;
        goto LABEL_114;
      case 0x16u:
        id v21 = objc_alloc_init(PDDPStateChange);
        objc_storeStrong((id *)(a1 + 160), v21);
        if (!PBReaderPlaceMark() || !sub_100163D6C((char *)v21, a2)) {
          goto LABEL_134;
        }
        goto LABEL_113;
      case 0x17u:
        id v21 = objc_alloc_init(PDDPSchoolworkQueryZone);
        objc_storeStrong((id *)(a1 + 128), v21);
        if (!PBReaderPlaceMark() || (sub_1000A4F24((uint64_t)v21, a2) & 1) == 0) {
          goto LABEL_134;
        }
        goto LABEL_113;
      case 0x18u:
        id v21 = objc_alloc_init(PDDPCollection);
        objc_storeStrong((id *)(a1 + 80), v21);
        if (!PBReaderPlaceMark() || (sub_1000E3960((uint64_t)v21, a2) & 1) == 0) {
          goto LABEL_134;
        }
        goto LABEL_113;
      case 0x19u:
        id v21 = objc_alloc_init(PDDPCollectionItem);
        objc_storeStrong((id *)(a1 + 88), v21);
        if (!PBReaderPlaceMark() || (sub_1000C218C((uint64_t)v21, a2) & 1) == 0) {
          goto LABEL_134;
        }
        goto LABEL_113;
      case 0x1Au:
        id v21 = objc_alloc_init(PDDPSurvey);
        objc_storeStrong((id *)(a1 + 176), v21);
        if (!PBReaderPlaceMark() || (sub_10016142C((uint64_t)v21, a2) & 1) == 0) {
          goto LABEL_134;
        }
        goto LABEL_113;
      case 0x1Bu:
        id v21 = objc_alloc_init(PDDPSurveyStep);
        objc_storeStrong((id *)(a1 + 184), v21);
        if (!PBReaderPlaceMark() || (sub_10016D764((uint64_t)v21, a2) & 1) == 0) {
          goto LABEL_134;
        }
        goto LABEL_113;
      case 0x1Cu:
        id v21 = objc_alloc_init(PDDPSurveyStepAnswer);
        objc_storeStrong((id *)(a1 + 192), v21);
        if (!PBReaderPlaceMark() || (sub_100138C84((uint64_t)v21, a2) & 1) == 0) {
          goto LABEL_134;
        }
        goto LABEL_113;
      case 0x1Du:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v29 = 0;
        *(unsigned char *)(a1 + 212) |= 1u;
        while (2)
        {
          unint64_t v30 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v30 == -1 || v30 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v30);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v30 + 1;
            v29 |= (unint64_t)(v31 & 0x7F) << v27;
            if (v31 < 0)
            {
              v27 += 7;
              BOOL v9 = v28++ >= 9;
              if (v9)
              {
                uint64_t v29 = 0;
                goto LABEL_132;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v29 = 0;
        }
LABEL_132:
        *(void *)(a1 + 8) = v29;
        goto LABEL_114;
      case 0x1Eu:
        id v21 = objc_alloc_init(PDDPSchedule);
        objc_storeStrong((id *)(a1 + 144), v21);
        if (!PBReaderPlaceMark() || (sub_1000F2FF4((uint64_t)v21, a2) & 1) == 0) {
          goto LABEL_134;
        }
        goto LABEL_113;
      case 0x1Fu:
        id v21 = objc_alloc_init(PDDPScheduledEvent);
        objc_storeStrong((id *)(a1 + 152), v21);
        if (!PBReaderPlaceMark() || !sub_1000A1684((uint64_t)v21, a2)) {
          goto LABEL_134;
        }
        goto LABEL_113;
      case 0x20u:
        id v21 = objc_alloc_init(PDDPAssessment);
        objc_storeStrong((id *)(a1 + 24), v21);
        if (!PBReaderPlaceMark() || (sub_1000FDB8C((uint64_t)v21, a2) & 1) == 0) {
          goto LABEL_134;
        }
        goto LABEL_113;
      case 0x21u:
        id v21 = objc_alloc_init(PDDPTakerWork);
        objc_storeStrong((id *)(a1 + 200), v21);
        if (PBReaderPlaceMark() && sub_1000534C4((char *)v21, a2))
        {
LABEL_113:
          PBReaderRecallMark();

LABEL_114:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }
LABEL_134:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_114;
    }
  }
}

void sub_10012BBDC(uint64_t a1, void *a2)
{
  id v3 = a2;
  char v4 = *(void **)(a1 + 32);
  id v11 = v3;
  if (v3)
  {
    id v5 = *((id *)v3 + 1);
    [v4 addObject:v5];

    unint64_t v6 = (void *)v11[2];
  }
  else
  {
    [v4 addObject:0];
    unint64_t v6 = 0;
  }
  id v7 = v6;

  if (!v7)
  {
    char v8 = *(void **)(a1 + 40);
    if (v11) {
      BOOL v9 = (void *)v11[1];
    }
    else {
      BOOL v9 = 0;
    }
    id v10 = v9;
    [v8 addObject:v10];
  }
}

void sub_10012D768(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10012D790(uint64_t a1)
{
  qos_class_t v2 = *(void **)(a1 + 32);
  id v3 = [*(id *)(a1 + 40) response];
  char v4 = sub_100100EB0(v3);
  id v5 = [*(id *)(a1 + 40) expectedResponseClass];
  uint64_t v6 = *(void *)(*(void *)(a1 + 48) + 8);
  id obj = *(id *)(v6 + 40);
  id v7 = [v2 parseData:v4 expectedClass:v5 error:&obj];
  objc_storeStrong((id *)(v6 + 40), obj);

  char v8 = +[PDUserDefaults sharedDefaults];
  LODWORD(v3) = [v8 enableVerboseLogging];

  if (v3)
  {
    CLSInitLog();
    BOOL v9 = [*(id *)(a1 + 40) logSubsystem];
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
    {
      id v11 = objc_opt_class();
      char v12 = *(void **)(a1 + 40);
      id v13 = v11;
      uint64_t v14 = [v12 operationID];
      *(_DWORD *)long long buf = 138543618;
      char v17 = v11;
      __int16 v18 = 2114;
      unint64_t v19 = v14;
      _os_log_debug_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "%{public}@: %{public}@ streamed response processing complete.", buf, 0x16u);
    }
  }
  return 1;
}

void sub_10012E4D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10012E4FC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (id *)(a1 + 32);
  id v7 = a2;
  id WeakRetained = objc_loadWeakRetained(v6);
  [WeakRetained processPayloadWithinWriteTransaction:v7 error:a3 stop:a4];

  char v8 = [WeakRetained stats];
  if (v8) {
    ++v8[15];
  }
}

BOOL sub_1001314F8(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0;
      while (1)
      {
        unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0;
          int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0;
      }
LABEL_13:
      if (v10 || (v6 & 7) == 4) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      unint64_t v12 = v6 >> 3;
      if ((v6 >> 3) == 3)
      {
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v15 = 0;
        *(unsigned char *)(a1 + 20) |= 2u;
        while (1)
        {
          unint64_t v22 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v22 == -1 || v22 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v23 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v22);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v22 + 1;
          v15 |= (unint64_t)(v23 & 0x7F) << v20;
          if ((v23 & 0x80) == 0)
          {
            unint64_t v19 = &OBJC_IVAR___PDDPStateChangesIOS134MACOS10154ActivityDomainState__flags;
            goto LABEL_47;
          }
          v20 += 7;
          BOOL v18 = v21++ > 8;
          if (v18)
          {
            LODWORD(v15) = 0;
            unint64_t v19 = &OBJC_IVAR___PDDPStateChangesIOS134MACOS10154ActivityDomainState__flags;
            goto LABEL_49;
          }
        }
        unint64_t v19 = &OBJC_IVAR___PDDPStateChangesIOS134MACOS10154ActivityDomainState__flags;
LABEL_46:
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
        goto LABEL_47;
      }
      if (v12 == 2) {
        break;
      }
      if (v12 == 1)
      {
        char v13 = 0;
        unsigned int v14 = 0;
        uint64_t v15 = 0;
        *(unsigned char *)(a1 + 20) |= 1u;
        while (1)
        {
          unint64_t v16 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v16 == -1 || v16 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            unint64_t v19 = &OBJC_IVAR___PDDPStateChangesIOS134MACOS10154ActivityDomainState__domain;
            goto LABEL_46;
          }
          char v17 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v16);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v16 + 1;
          v15 |= (unint64_t)(v17 & 0x7F) << v13;
          if ((v17 & 0x80) == 0) {
            break;
          }
          v13 += 7;
          BOOL v18 = v14++ > 8;
          if (v18)
          {
            LODWORD(v15) = 0;
            unint64_t v19 = &OBJC_IVAR___PDDPStateChangesIOS134MACOS10154ActivityDomainState__domain;
            goto LABEL_49;
          }
        }
        unint64_t v19 = &OBJC_IVAR___PDDPStateChangesIOS134MACOS10154ActivityDomainState__domain;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_50:
      if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
    }
    char v24 = 0;
    unsigned int v25 = 0;
    uint64_t v15 = 0;
    *(unsigned char *)(a1 + 20) |= 4u;
    while (1)
    {
      unint64_t v26 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v26 == -1 || v26 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
      {
        unint64_t v19 = &OBJC_IVAR___PDDPStateChangesIOS134MACOS10154ActivityDomainState__state;
        goto LABEL_46;
      }
      char v27 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v26);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v26 + 1;
      v15 |= (unint64_t)(v27 & 0x7F) << v24;
      if ((v27 & 0x80) == 0) {
        break;
      }
      v24 += 7;
      BOOL v18 = v25++ > 8;
      if (v18)
      {
        LODWORD(v15) = 0;
        unint64_t v19 = &OBJC_IVAR___PDDPStateChangesIOS134MACOS10154ActivityDomainState__state;
        goto LABEL_49;
      }
    }
    unint64_t v19 = &OBJC_IVAR___PDDPStateChangesIOS134MACOS10154ActivityDomainState__state;
LABEL_47:
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      LODWORD(v15) = 0;
    }
LABEL_49:
    *(_DWORD *)(a1 + *v19) = v15;
    goto LABEL_50;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

uint64_t sub_100131F48(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 32;
        goto LABEL_27;
      case 2u:
        uint64_t v15 = objc_alloc_init(PDDPDate);
        uint64_t v16 = 8;
        goto LABEL_23;
      case 3u:
        uint64_t v15 = objc_alloc_init(PDDPDate);
        uint64_t v16 = 16;
LABEL_23:
        objc_storeStrong((id *)(a1 + v16), v15);
        if PBReaderPlaceMark() && (PDDPDateReadFrom((uint64_t)v15, a2))
        {
          PBReaderRecallMark();

LABEL_39:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

        return 0;
      case 4u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 40;
LABEL_27:
        char v17 = *(void **)(a1 + v13);
        *(void *)(a1 + v13) = v12;

        goto LABEL_39;
      case 5u:
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v20 = 0;
        *(unsigned char *)(a1 + 48) |= 1u;
        while (2)
        {
          unint64_t v21 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v21 == -1 || v21 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v22 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v21);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v21 + 1;
            v20 |= (unint64_t)(v22 & 0x7F) << v18;
            if (v22 < 0)
            {
              v18 += 7;
              BOOL v9 = v19++ >= 9;
              if (v9)
              {
                LODWORD(v20) = 0;
                goto LABEL_38;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v20) = 0;
        }
LABEL_38:
        *(_DWORD *)(a1 + 24) = v20;
        goto LABEL_39;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_39;
    }
  }
}

BOOL sub_100132B2C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0;
      while (1)
      {
        uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        unint64_t v8 = v7 + 1;
        if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
        v6 |= (unint64_t)(v9 & 0x7F) << v4;
        if ((v9 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0;
          int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0;
      }
LABEL_13:
      if (v11 || (v6 & 7) == 4) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      if ((v6 >> 3) == 2) {
        break;
      }
      if ((v6 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 24) |= 2u;
        unint64_t v13 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v13 <= 0xFFFFFFFFFFFFFFF7 && v13 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v14 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v13);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v13 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v14 = 0;
        }
        uint64_t v16 = &OBJC_IVAR___PDDPRange__start;
LABEL_31:
        *(void *)(a1 + *v16) = v14;
        goto LABEL_32;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_32:
      if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
    }
    *(unsigned char *)(a1 + 24) |= 1u;
    unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
    if (v15 <= 0xFFFFFFFFFFFFFFF7 && v15 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
    {
      uint64_t v14 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 8;
    }
    else
    {
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
      uint64_t v14 = 0;
    }
    uint64_t v16 = &OBJC_IVAR___PDDPRange__end;
    goto LABEL_31;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

uint64_t sub_1001335B4(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v10 = v5++ >= 9;
      if (v10)
      {
        unint64_t v6 = 0;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    unint64_t v13 = v6 >> 3;
    if ((v6 >> 3) == 3)
    {
      char v20 = 0;
      unsigned int v21 = 0;
      uint64_t v16 = 0;
      *(unsigned char *)(a1 + 24) |= 2u;
      while (1)
      {
        uint64_t v22 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        unint64_t v23 = v22 + 1;
        if (v22 == -1 || v23 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v24 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v22);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v23;
        v16 |= (unint64_t)(v24 & 0x7F) << v20;
        if ((v24 & 0x80) == 0) {
          goto LABEL_44;
        }
        v20 += 7;
        BOOL v10 = v21++ >= 9;
        if (v10)
        {
          LODWORD(v16) = 0;
          goto LABEL_46;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_44:
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        LODWORD(v16) = 0;
      }
LABEL_46:
      uint64_t v28 = 16;
    }
    else
    {
      if (v13 == 2)
      {
        *(unsigned char *)(a1 + 24) |= 1u;
        unint64_t v25 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v25 <= 0xFFFFFFFFFFFFFFF7 && v25 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v26 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v25);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v25 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v26 = 0;
        }
        *(void *)(a1 + 8) = v26;
        continue;
      }
      if (v13 != 1)
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        continue;
      }
      char v14 = 0;
      unsigned int v15 = 0;
      uint64_t v16 = 0;
      *(unsigned char *)(a1 + 24) |= 4u;
      while (1)
      {
        uint64_t v17 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        unint64_t v18 = v17 + 1;
        if (v17 == -1 || v18 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v19 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v17);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v18;
        v16 |= (unint64_t)(v19 & 0x7F) << v14;
        if ((v19 & 0x80) == 0) {
          goto LABEL_40;
        }
        v14 += 7;
        BOOL v10 = v15++ >= 9;
        if (v10)
        {
          LODWORD(v16) = 0;
          goto LABEL_42;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_40:
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        LODWORD(v16) = 0;
      }
LABEL_42:
      uint64_t v28 = 20;
    }
    *(_DWORD *)(a1 + v28) = v16;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

BOOL sub_100133FB4(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0;
      while (1)
      {
        unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0;
          int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0;
      }
LABEL_13:
      if (v10 || (v6 & 7) == 4) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      switch((v6 >> 3))
      {
        case 1u:
          uint64_t v12 = PBReaderReadString();
          uint64_t v13 = 24;
          goto LABEL_23;
        case 2u:
          uint64_t v12 = PBReaderReadString();
          uint64_t v13 = 32;
          goto LABEL_23;
        case 3u:
          uint64_t v12 = PBReaderReadString();
          uint64_t v13 = 16;
          goto LABEL_23;
        case 4u:
          uint64_t v12 = PBReaderReadString();
          uint64_t v13 = 40;
          goto LABEL_23;
        case 5u:
          uint64_t v12 = PBReaderReadString();
          uint64_t v13 = 8;
LABEL_23:
          char v14 = *(void **)(a1 + v13);
          *(void *)(a1 + v13) = v12;

          goto LABEL_24;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            return 0;
          }
LABEL_24:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          break;
      }
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

uint64_t sub_10013558C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (1)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    unint64_t v12 = v6 >> 3;
    if ((int)(v6 >> 3) <= 99) {
      break;
    }
    if ((int)v12 > 199)
    {
      switch(v12)
      {
        case 0xC8:
          uint64_t v14 = PBReaderReadString();
          uint64_t v15 = 80;
          goto LABEL_51;
        case 0xC9:
          uint64_t v14 = PBReaderReadString();
          uint64_t v15 = 88;
          goto LABEL_51;
        case 0xCA:
          PBReaderReadString();
          uint64_t v13 = (PDDPDate *)objc_claimAutoreleasedReturnValue();
          if (v13) {
            [(id)a1 addConflictingPersonIds:v13];
          }
          goto LABEL_48;
      }
    }
    else
    {
      switch(v12)
      {
        case 'd':
          char v16 = 0;
          unsigned int v17 = 0;
          uint64_t v18 = 0;
          *(unsigned char *)(a1 + 96) |= 1u;
          while (1)
          {
            unint64_t v19 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            if (v19 == -1 || v19 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
              break;
            }
            char v20 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v19);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v19 + 1;
            v18 |= (unint64_t)(v20 & 0x7F) << v16;
            if ((v20 & 0x80) == 0) {
              goto LABEL_57;
            }
            v16 += 7;
            BOOL v9 = v17++ >= 9;
            if (v9)
            {
              LODWORD(v18) = 0;
              goto LABEL_59;
            }
          }
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_57:
          if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            LODWORD(v18) = 0;
          }
LABEL_59:
          *(_DWORD *)(a1 + 72) = v18;
          goto LABEL_52;
        case 'e':
          uint64_t v14 = PBReaderReadString();
          uint64_t v15 = 64;
LABEL_51:
          uint64_t v22 = *(void **)(a1 + v15);
          *(void *)(a1 + v15) = v14;

          goto LABEL_52;
        case 'f':
          PBReaderReadString();
          uint64_t v13 = (PDDPDate *)objc_claimAutoreleasedReturnValue();
          if (v13) {
            [(id)a1 addRequestedLocationIds:v13];
          }
          goto LABEL_48;
      }
    }
LABEL_54:
    uint64_t result = PBReaderSkipValueWithTag();
    if (!result) {
      return result;
    }
LABEL_52:
    if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
  }
  switch((int)v12)
  {
    case 1:
      uint64_t v14 = PBReaderReadString();
      uint64_t v15 = 8;
      goto LABEL_51;
    case 2:
      uint64_t v14 = PBReaderReadString();
      uint64_t v15 = 40;
      goto LABEL_51;
    case 3:
      uint64_t v13 = objc_alloc_init(PDDPDate);
      uint64_t v21 = 24;
      goto LABEL_42;
    case 4:
      uint64_t v13 = objc_alloc_init(PDDPDate);
      uint64_t v21 = 32;
LABEL_42:
      objc_storeStrong((id *)(a1 + v21), v13);
      if (!PBReaderPlaceMark() || (PDDPDateReadFrom((uint64_t)v13, a2) & 1) == 0) {
        goto LABEL_61;
      }
      goto LABEL_47;
    case 5:
      uint64_t v13 = objc_alloc_init(PDDPPerson);
      objc_storeStrong((id *)(a1 + 48), v13);
      if PBReaderPlaceMark() && (sub_1000DDFFC((uint64_t)v13, a2))
      {
LABEL_47:
        PBReaderRecallMark();
LABEL_48:

        goto LABEL_52;
      }
LABEL_61:

      return 0;
    default:
      goto LABEL_54;
  }
}

uint64_t sub_100136F58(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    if ((v6 >> 3) == 2)
    {
      uint64_t v17 = PBReaderReadString();
      uint64_t v18 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = v17;
    }
    else if ((v6 >> 3) == 1)
    {
      char v12 = 0;
      unsigned int v13 = 0;
      uint64_t v14 = 0;
      *(unsigned char *)(a1 + 20) |= 1u;
      while (1)
      {
        unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v15 == -1 || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v16 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
        v14 |= (unint64_t)(v16 & 0x7F) << v12;
        if ((v16 & 0x80) == 0) {
          goto LABEL_30;
        }
        v12 += 7;
        BOOL v9 = v13++ >= 9;
        if (v9)
        {
          LODWORD(v14) = 0;
          goto LABEL_32;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_30:
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        LODWORD(v14) = 0;
      }
LABEL_32:
      *(_DWORD *)(a1 + 16) = v14;
    }
    else
    {
      uint64_t result = PBReaderSkipValueWithTag();
      if (!result) {
        return result;
      }
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_1001381C0()
{
  self;
  if (!sub_100003CF8())
  {
    uint64_t v18 = 0;
    unint64_t v19 = &v18;
    uint64_t v20 = 0x2020000000;
    int v21 = -1;
    dispatch_block_t v0 = dispatch_block_create(DISPATCH_BLOCK_ENFORCE_QOS_CLASS|DISPATCH_BLOCK_ASSIGN_CURRENT, &stru_1001F5D48);
    uint64_t v1 = dispatch_queue_attr_make_with_qos_class(0, QOS_CLASS_UNSPECIFIED, 0);
    dispatch_queue_t v2 = dispatch_queue_create("com.apple.progressd.wait-unlock", v1);

    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    void v15[2] = sub_1001384B8;
    v15[3] = &unk_1001F5D70;
    id v3 = v2;
    char v16 = v3;
    id v4 = v0;
    id v17 = v4;
    unsigned int v5 = objc_retainBlock(v15);
    unint64_t v6 = (const char *)kMobileKeyBagLockStatusNotifyToken;
    unint64_t v7 = (int *)(v19 + 3);
    handler[0] = _NSConcreteStackBlock;
    handler[1] = 3221225472;
    handler[2] = sub_100138528;
    handler[3] = &unk_1001F5D98;
    char v8 = v5;
    id v14 = v8;
    uint32_t v9 = notify_register_dispatch(v6, v7, v3, handler);
    if (v9 || !notify_is_valid_token(*((_DWORD *)v19 + 6)))
    {
      CLSInitLog();
      int v10 = CLSLogDefault;
      if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_INFO))
      {
        int v11 = *((_DWORD *)v19 + 6);
        *(_DWORD *)long long buf = 67109376;
        uint32_t v23 = v9;
        __int16 v24 = 1024;
        int v25 = v11;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "can't register notifications, status: %d, token: %d", buf, 0xEu);
      }
      *((_DWORD *)v19 + 6) = -1;
    }
    else
    {
      dispatch_async(v3, v8);
      dispatch_block_wait(v4, 0xFFFFFFFFFFFFFFFFLL);
      v12[0] = _NSConcreteStackBlock;
      v12[1] = 3221225472;
      v12[2] = sub_10013857C;
      void v12[3] = &unk_1001F29F8;
      void v12[4] = &v18;
      dispatch_sync(v3, v12);
    }

    _Block_object_dispose(&v18, 8);
  }
}

void sub_100138494(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1001384B8(uint64_t a1)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 32));
  if (sub_100003CF8())
  {
    dispatch_queue_t v2 = *(void (**)(void))(*(void *)(a1 + 40) + 16);
    v2();
  }
  else
  {
    syslog(5, "Device is locked - waiting.\n");
  }
}

uint64_t sub_100138528(uint64_t a1, int val)
{
  uint64_t result = notify_is_valid_token(val);
  if (result)
  {
    id v4 = *(uint64_t (**)(void))(*(void *)(a1 + 32) + 16);
    return v4();
  }
  return result;
}

uint64_t sub_10013857C(uint64_t a1)
{
  uint64_t result = notify_is_valid_token(*(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24));
  if (result)
  {
    uint64_t result = notify_cancel(*(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24));
    *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = -1;
  }
  return result;
}

uint64_t sub_100138C84(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v10 = v5++ >= 9;
      if (v10)
      {
        unint64_t v6 = 0;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 64;
        goto LABEL_46;
      case 2u:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 72;
        goto LABEL_46;
      case 3u:
        unint64_t v15 = objc_alloc_init(PDDPDate);
        uint64_t v16 = 40;
        goto LABEL_25;
      case 4u:
        unint64_t v15 = objc_alloc_init(PDDPDate);
        uint64_t v16 = 48;
LABEL_25:
        objc_storeStrong((id *)(a1 + v16), v15);
        if PBReaderPlaceMark() && (PDDPDateReadFrom((uint64_t)v15, a2))
        {
          PBReaderRecallMark();
LABEL_28:

LABEL_63:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

        return 0;
      case 5u:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 32;
        goto LABEL_46;
      case 6u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 96) |= 2u;
        while (2)
        {
          uint64_t v20 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v21 = v20 + 1;
          if (v20 == -1 || v21 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v22 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v20);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v21;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if (v22 < 0)
            {
              v17 += 7;
              BOOL v10 = v18++ >= 9;
              if (v10)
              {
                LODWORD(v19) = 0;
                goto LABEL_55;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v19) = 0;
        }
LABEL_55:
        uint64_t v32 = 16;
        goto LABEL_60;
      case 7u:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 80;
        goto LABEL_46;
      case 8u:
        char v23 = 0;
        unsigned int v24 = 0;
        uint64_t v19 = 0;
        *(unsigned char *)(a1 + 96) |= 4u;
        while (2)
        {
          uint64_t v25 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v26 = v25 + 1;
          if (v25 == -1 || v26 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v27 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v25);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v26;
            v19 |= (unint64_t)(v27 & 0x7F) << v23;
            if (v27 < 0)
            {
              v23 += 7;
              BOOL v10 = v24++ >= 9;
              if (v10)
              {
                LODWORD(v19) = 0;
                goto LABEL_59;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v19) = 0;
        }
LABEL_59:
        uint64_t v32 = 56;
LABEL_60:
        *(_DWORD *)(a1 + v32) = v19;
        goto LABEL_63;
      case 9u:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 88;
LABEL_46:
        uint64_t v28 = *(void **)(a1 + v14);
        *(void *)(a1 + v14) = v13;

        goto LABEL_63;
      case 0xAu:
        *(unsigned char *)(a1 + 96) |= 1u;
        unint64_t v29 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v29 <= 0xFFFFFFFFFFFFFFF7 && v29 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v30 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v29);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v29 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v30 = 0;
        }
        *(void *)(a1 + 8) = v30;
        goto LABEL_63;
      default:
        if ((v6 >> 3) == 100)
        {
          PBReaderReadString();
          unint64_t v15 = (PDDPDate *)objc_claimAutoreleasedReturnValue();
          if (v15) {
            [(id)a1 addClassIds:v15];
          }
          goto LABEL_28;
        }
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_63;
    }
  }
}

void sub_10013A498(id a1)
{
  dispatch_queue_t v2 = +[PDDatabase registeredEntities];
  id v3 = objc_msgSend(objc_alloc((Class)NSMutableArray), "initWithCapacity:", objc_msgSend(v2, "count"));
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id v4 = v2;
  id v5 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v13;
    do
    {
      for (i = 0; i != v6; i = (char *)i + 1)
      {
        if (*(void *)v13 != v7) {
          objc_enumerationMutation(v4);
        }
        char v9 = *(void **)(*((void *)&v12 + 1) + 8 * i);
        if (objc_msgSend(v9, "conformsToProtocol:", &OBJC_PROTOCOL___PDSyncableItem, (void)v12)) {
          [v3 addObject:v9];
        }
      }
      id v6 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }
    while (v6);
  }

  uint64_t v10 = [v3 sortedArrayUsingComparator:&stru_1001F5DF8];
  int v11 = (void *)qword_10023E7D0;
  qword_10023E7D0 = v10;
}

int64_t sub_10013A624(id a1, Class a2, Class a3)
{
  if (objc_opt_respondsToSelector()) {
    id v5 = [(objc_class *)a2 syncOrder];
  }
  else {
    id v5 = 0;
  }
  if (objc_opt_respondsToSelector()) {
    id v6 = [(objc_class *)a3 syncOrder];
  }
  else {
    id v6 = 0;
  }
  if ((uint64_t)v5 < (uint64_t)v6) {
    return -1;
  }
  else {
    return v5 != v6;
  }
}

void sub_10013A748(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) syncableEntities];
  id v4 = objc_msgSend(objc_alloc((Class)NSMutableDictionary), "initWithCapacity:", objc_msgSend(v3, "count"));
  id v5 = (void *)qword_10023E7E0;
  qword_10023E7E0 = (uint64_t)v4;

  long long v16 = 0u;
  long long v17 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id v6 = v3;
  id v7 = [v6 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v15;
    do
    {
      for (i = 0; i != v8; i = (char *)i + 1)
      {
        if (*(void *)v15 != v9) {
          objc_enumerationMutation(v6);
        }
        int v11 = *(void **)(*((void *)&v14 + 1) + 8 * i);
        long long v12 = (void *)qword_10023E7E0;
        long long v13 = objc_msgSend(v11, "recordType", (void)v14);
        [v12 setObject:v11 forKeyedSubscript:v13];
      }
      id v8 = [v6 countByEnumeratingWithState:&v14 objects:v18 count:16];
    }
    while (v8);
  }
}

void sub_10013A9F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10013AA80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10013AE38(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) select:objc_opt_class() where:0 bindings:0];
  id v5 = (id)v2;
  if (v2)
  {
    int v3 = *(unsigned __int8 *)(v2 + 9);
    id v4 = *(void **)(a1 + 40);
    if (v3)
    {
      [v4 progressZone];

      [*(id *)(a1 + 40) teacherZone];
      [*(id *)(a1 + 40) assetZone];

      [*(id *)(a1 + 40) surveyAnswerZone];
      goto LABEL_6;
    }
  }
  else
  {
    id v4 = *(void **)(a1 + 40);
  }
  [v4 markAsFinished];
LABEL_6:
}

id sub_10013B3B4(id *a1)
{
  uint64_t v2 = [a1[4] syncMetadataForRecord:a1[5]];
  id v3 = a1[5];
  id v4 = [objc_alloc((Class)NSKeyedArchiver) initRequiringSecureCoding:1];
  [v3 encodeSystemFieldsWithCoder:v4];

  [v4 finishEncoding];
  id v5 = [v4 encodedData];

  sub_100075F50((uint64_t)v2, v5);
  id v6 = [a1[6] insertOrUpdateObject:v2];

  return v6;
}

id CKRecordFromMetadata(void *a1)
{
  id v1 = a1;
  uint64_t v5 = 0;
  id v2 = [objc_alloc((Class)NSKeyedUnarchiver) initForReadingFromData:v1 error:&v5];

  id v3 = 0;
  if (!v5) {
    id v3 = [objc_alloc((Class)CKRecord) initWithCoder:v2];
  }

  return v3;
}

void sub_10013B8A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10013B8C4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained checkTriggerNow];
}

void *sub_10013BF50(void *a1, void *a2)
{
  id v4 = a2;
  if (a1)
  {
    v7.receiver = a1;
    v7.super_class = (Class)PDDashboardAppRegisterState;
    id v5 = objc_msgSendSuper2(&v7, "init");
    a1 = v5;
    if (v5)
    {
      objc_storeStrong((id *)v5 + 1, a2);
      a1[2] = 0;
    }
  }

  return a1;
}

BOOL sub_10013C284(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  BOOL v5 = 0;
  if (a1 && v3)
  {
    if ([v3 length])
    {
      id v6 = [a1 select:objc_opt_class() identity:v4];
      CLSInitLog();
      objc_super v7 = CLSLogDefault;
      BOOL v8 = os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_DEBUG);
      if (v6)
      {
        if (v8)
        {
          uint64_t v10 = v6[2];
          int v11 = 138412546;
          long long v12 = v4;
          __int16 v13 = 2048;
          uint64_t v14 = v10;
          _os_log_debug_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "Register record for dashboard app: %@ state: %ld", (uint8_t *)&v11, 0x16u);
        }
        BOOL v5 = v6[2] == 0;
      }
      else
      {
        if (v8)
        {
          int v11 = 138412290;
          long long v12 = v4;
          _os_log_debug_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "No register record for dashboard app: %@.", (uint8_t *)&v11, 0xCu);
        }
        id v6 = sub_10013BF50([PDDashboardAppRegisterState alloc], v4);
        [a1 insertObject:v6];
        BOOL v5 = 1;
      }
    }
    else
    {
      BOOL v5 = 0;
    }
  }

  return v5;
}

uint64_t sub_10013CC9C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 80;
        goto LABEL_37;
      case 2u:
        uint64_t v14 = objc_alloc_init(PDDPDate);
        uint64_t v15 = 56;
        goto LABEL_39;
      case 3u:
        uint64_t v14 = objc_alloc_init(PDDPDate);
        uint64_t v15 = 64;
        goto LABEL_39;
      case 4u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 72;
        goto LABEL_37;
      case 5u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 88;
        goto LABEL_37;
      case 6u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 32;
        goto LABEL_37;
      case 7u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 48;
        goto LABEL_37;
      case 8u:
        char v16 = 0;
        unsigned int v17 = 0;
        uint64_t v18 = 0;
        *(unsigned char *)(a1 + 96) |= 1u;
        while (2)
        {
          unint64_t v19 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v19 == -1 || v19 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v20 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v19);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v19 + 1;
            v18 |= (unint64_t)(v20 & 0x7F) << v16;
            if (v20 < 0)
            {
              v16 += 7;
              BOOL v9 = v17++ >= 9;
              if (v9)
              {
                uint64_t v18 = 0;
                goto LABEL_47;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v18 = 0;
        }
LABEL_47:
        *(void *)(a1 + 8) = v18;
        goto LABEL_48;
      case 9u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 16;
LABEL_37:
        unint64_t v21 = *(void **)(a1 + v13);
        *(void *)(a1 + v13) = v12;

        goto LABEL_48;
      case 0xAu:
        uint64_t v14 = objc_alloc_init(PDDPDate);
        uint64_t v15 = 24;
LABEL_39:
        objc_storeStrong((id *)(a1 + v15), v14);
        if PBReaderPlaceMark() && (PDDPDateReadFrom((uint64_t)v14, a2)) {
          goto LABEL_41;
        }
        goto LABEL_50;
      default:
        if ((v6 >> 3) != 100)
        {
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          goto LABEL_48;
        }
        uint64_t v14 = objc_alloc_init(PDDPMapEntry);
        [(id)a1 addContentMetadata:v14];
        if (PBReaderPlaceMark() && sub_10010AE4C((uint64_t)v14, a2))
        {
LABEL_41:
          PBReaderRecallMark();

LABEL_48:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }
LABEL_50:

        return 0;
    }
  }
}

uint64_t sub_10013E898(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 32;
        goto LABEL_29;
      case 2u:
        char v15 = 0;
        unsigned int v16 = 0;
        uint64_t v17 = 0;
        *(unsigned char *)(a1 + 40) |= 1u;
        while (2)
        {
          unint64_t v18 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v18 == -1 || v18 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v19 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v18);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v18 + 1;
            v17 |= (unint64_t)(v19 & 0x7F) << v15;
            if (v19 < 0)
            {
              v15 += 7;
              BOOL v9 = v16++ >= 9;
              if (v9)
              {
                LODWORD(v17) = 0;
                goto LABEL_36;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v17) = 0;
        }
LABEL_36:
        *(_DWORD *)(a1 + 16) = v17;
        goto LABEL_37;
      case 3u:
        uint64_t v12 = PBReaderReadData();
        uint64_t v13 = 8;
LABEL_29:
        char v20 = *(void **)(a1 + v13);
        *(void *)(a1 + v13) = v12;

        goto LABEL_37;
      case 4u:
        unint64_t v21 = objc_alloc_init(PDDPAdminRequestRequestor);
        objc_storeStrong((id *)(a1 + 24), v21);
        if PBReaderPlaceMark() && (sub_1000A6418((uint64_t)v21, a2))
        {
          PBReaderRecallMark();

LABEL_37:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_37;
    }
  }
}

void sub_100141598(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned int v5 = [v3 objectID];
  unint64_t v6 = [v3 parentObjectID];
  unint64_t v7 = [v3 identifierPath];
  if (![v7 count])
  {
    CLSInitLog();
    char v8 = CLSLogDatabase;
    if (os_log_type_enabled(CLSLogDatabase, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t v14 = 138412290;
      *(void *)&void v14[4] = v5;
      BOOL v9 = "Migrating CLSContext(1): Rejecting CLSContext with objectID: %@, path is nil or empty";
      goto LABEL_11;
    }
LABEL_12:
    objc_msgSend(*(id *)(a1 + 32), "addObject:", v5, *(_OWORD *)v14);
    goto LABEL_21;
  }
  if (v6 && [*(id *)(a1 + 32) containsObject:v6])
  {
    CLSInitLog();
    char v8 = CLSLogDatabase;
    if (os_log_type_enabled(CLSLogDatabase, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t v14 = 138412290;
      *(void *)&void v14[4] = v5;
      BOOL v9 = "Migrating CLSContext(1): Rejecting CLSContext with objectID: %@, parent has been rejected";
LABEL_11:
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, v9, v14, 0xCu);
      goto LABEL_12;
    }
    goto LABEL_12;
  }
  int v10 = +[CLSContext objectIDForIdentifierPath:v7];
  if ([v5 isEqualToString:v10])
  {
    int v11 = +[CLSContext stableObjectIDForIdentifierPath:v7];
    if ([v11 length])
    {
      [*(id *)(a1 + 40) setObject:v11 forKey:v5];
    }
    else
    {
      CLSInitLog();
      uint64_t v13 = CLSLogDatabase;
      if (os_log_type_enabled(CLSLogDatabase, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)uint64_t v14 = 138412290;
        *(void *)&void v14[4] = v5;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "Migrating CLSContext(1): Rejecting CLSContext with objectID: %@, stableObjectID cannot be nil", v14, 0xCu);
      }
      [*(id *)(a1 + 32) addObject:v5];
    }
  }
  else
  {
    CLSInitLog();
    uint64_t v12 = CLSLogDatabase;
    if (os_log_type_enabled(CLSLogDatabase, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t v14 = 138412290;
      *(void *)&void v14[4] = v5;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "Migrating CLSContext(1): Rejecting CLSContext with objectID: %@, has Peace-incompatible objectID", v14, 0xCu);
    }
    [*(id *)(a1 + 32) addObject:v5];
  }

LABEL_21:
}

void sub_100141C38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38)
{
  _Block_object_dispose(&a30, 8);
  _Block_object_dispose(&a34, 8);
  _Block_object_dispose(&a38, 8);
  _Block_object_dispose((const void *)(v38 - 200), 8);
  _Block_object_dispose((const void *)(v38 - 152), 8);
  _Unwind_Resume(a1);
}

void sub_100141C88(uint64_t a1)
{
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  id obj = *(id *)(a1 + 32);
  id v2 = [obj countByEnumeratingWithState:&v22 objects:v28 count:16];
  if (v2)
  {
    uint64_t v3 = *(void *)v23;
    while (2)
    {
      for (i = 0; i != v2; i = (char *)i + 1)
      {
        if (*(void *)v23 != v3) {
          objc_enumerationMutation(obj);
        }
        uint64_t v5 = *(void *)(*((void *)&v22 + 1) + 8 * i);
        unint64_t v7 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
        if (v7)
        {
          objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), v7);
          uint64_t v8 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
          v26[0] = v5;
          v26[1] = v8;
          BOOL v9 = +[NSArray arrayWithObjects:v26 count:2];
          int v10 = @"select statusID, deniedCount, authorizedCount from AuthStatus where identifier = ? and parentStatusID = ? limit 1";
        }
        else
        {
          uint64_t v27 = v5;
          BOOL v9 = +[NSArray arrayWithObjects:&v27 count:1];
          int v10 = @"select statusID, deniedCount, authorizedCount from AuthStatus where identifier = ? and parentStatusID is null limit 1";
        }
        uint64_t v16 = 0;
        uint64_t v17 = &v16;
        uint64_t v18 = 0x3032000000;
        char v19 = sub_10000B7C4;
        char v20 = sub_10000B5FC;
        id v21 = 0;
        int v11 = *(void **)(a1 + 40);
        v14[0] = _NSConcreteStackBlock;
        v14[1] = 3221225472;
        _DWORD v14[2] = sub_100141F58;
        void v14[3] = &unk_1001F1E38;
        void v14[4] = &v16;
        long long v15 = *(_OWORD *)(a1 + 64);
        if ((sub_100007540(v11, v10, 1, v9, v14) & 1) == 0 || (uint64_t v12 = (void *)v17[5]) == 0)
        {
          _Block_object_dispose(&v16, 8);

          goto LABEL_15;
        }
        objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), v12);
        ++*(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 24);
        _Block_object_dispose(&v16, 8);
      }
      id v2 = [obj countByEnumeratingWithState:&v22 objects:v28 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:
}

void sub_100141F38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100141F58(void *a1, void *a2, unsigned char *a3)
{
  uint64_t v5 = a2;
  uint64_t v6 = sub_100003BF0(v5, @"statusID");
  uint64_t v7 = *(void *)(a1[4] + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;

  BOOL v9 = sub_100003BF0(v5, @"deniedCount");
  *(void *)(*(void *)(a1[5] + 8) + 24) = [v9 integerValue];

  int v10 = sub_100003BF0(v5, @"authorizedCount");

  *(void *)(*(void *)(a1[6] + 8) + 24) = [v10 integerValue];
  *a3 = 1;
}

uint64_t sub_100142018(uint64_t a1)
{
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  id v3 = *(id *)(a1 + 32);
  id v4 = [v3 countByEnumeratingWithState:&v20 objects:v25 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v21;
    while (2)
    {
      uint64_t v7 = 0;
      do
      {
        if (*(void *)v21 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = *(void *)(*((void *)&v20 + 1) + 8 * (void)v7);
        objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), *(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40));
        int v10 = +[NSUUID UUID];
        uint64_t v11 = [v10 UUIDString];

        v24[0] = v8;
        uint64_t v12 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
        uint64_t v13 = v12;
        if (!v12)
        {
          id v1 = +[NSNull null];
          uint64_t v13 = v1;
        }
        v24[1] = v13;
        v24[2] = v11;
        uint64_t v14 = +[NSArray arrayWithObjects:v24 count:3];
        if (!v12) {

        }
        int v15 = sub_100007540(*(void **)(a1 + 40), @"insert into AuthStatus (identifier, parentStatusID, statusID) values(?,?,?)", 1, v14, 0);
        uint64_t v16 = *(void *)(*(void *)(a1 + 56) + 8);
        uint64_t v17 = *(void **)(v16 + 40);
        *(void *)(v16 + 40) = v11;

        if (!v15)
        {
          uint64_t v18 = 0;
          goto LABEL_15;
        }
        uint64_t v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      id v5 = [v3 countByEnumeratingWithState:&v20 objects:v25 count:16];
      if (v5) {
        continue;
      }
      break;
    }
  }
  uint64_t v18 = 1;
LABEL_15:

  return v18;
}

id sub_100142204(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  if (!a1)
  {
LABEL_5:
    id v11 = 0;
    goto LABEL_10;
  }
  if ((unint64_t)(a2 - 3) <= 0xFFFFFFFFFFFFFFFDLL)
  {
    CLSInitLog();
    uint64_t v6 = (void *)CLSLogDefault;
    if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_INFO))
    {
      uint64_t v7 = v6;
      uint64_t v8 = NSStringFromAuthorizationStatus();
      BOOL v9 = NSStringFromAuthorizationStatus();
      int v10 = NSStringFromAuthorizationStatus();
      *(_DWORD *)long long buf = 138412802;
      *(void *)&uint8_t buf[4] = v8;
      __int16 v26 = 2112;
      uint64_t v27 = v9;
      __int16 v28 = 2112;
      unint64_t v29 = v10;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Attempted to set authorization status: '%@'; only are: ['%@', '%@'] are allowed;",
        buf,
        0x20u);
    }
    goto LABEL_5;
  }
  uint64_t v24 = 0;
  *(void *)long long buf = 0;
  id v23 = 0;
  unsigned int v12 = [a1 _statusID:&v23 deniedCount:&v24 authCount:buf forContextPath:v5];
  id v13 = v23;
  uint64_t v14 = v13;
  if (v12)
  {
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472;
    void v17[2] = sub_1001423FC;
    void v17[3] = &unk_1001F5E98;
    uint64_t v20 = a2;
    uint64_t v21 = v24;
    id v15 = v13;
    uint64_t v22 = *(void *)buf;
    id v18 = v15;
    char v19 = a1;
    id v11 = [a1 performTransaction:v17 forWriting:1];
  }
  else
  {
    id v11 = 0;
  }

LABEL_10:
  return v11;
}

uint64_t sub_1001423FC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  if (v2 == 1)
  {
    id v3 = +[NSNumber numberWithInteger:*(void *)(a1 + 64) + 1];
    BOOL v9 = v3;
    id v4 = @"update AuthStatus set authorizedCount = ? where statusID = ?";
    id v5 = &v9;
  }
  else
  {
    if (v2 != 2) {
      return 0;
    }
    id v3 = +[NSNumber numberWithInteger:*(void *)(a1 + 56) + 1];
    int v10 = v3;
    id v4 = @"update AuthStatus set deniedCount = ? where statusID = ?";
    id v5 = &v10;
  }
  v5[1] = *(void **)(a1 + 32);
  uint64_t v6 = +[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:");

  uint64_t v7 = sub_100007540(*(void **)(a1 + 40), v4, 1, v6, 0);
  return v7;
}

id sub_100142518(id a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  if (!a1) {
    goto LABEL_23;
  }
  if ((unint64_t)(a2 - 3) > 0xFFFFFFFFFFFFFFFDLL)
  {
    uint64_t v38 = 0;
    uint64_t v39 = 0;
    id v37 = 0;
    unsigned int v11 = [a1 _statusID:&v37 deniedCount:&v38 authCount:&v39 forContextPath:v5];
    id v12 = v37;
    id v13 = v12;
    if (v11)
    {
      if (a2 == 1)
      {
        if (v39)
        {
          uint64_t v15 = --v39;
          uint64_t v14 = v38;
          goto LABEL_13;
        }
        CLSInitLog();
        uint64_t v22 = (void *)CLSLogDefault;
        if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_INFO))
        {
          id v23 = v22;
          uint64_t v24 = NSStringFromAuthorizationStatus();
          long long v25 = [v5 componentsJoinedByString:@"', '"];
          __int16 v26 = NSStringFromAuthorizationStatus();
          *(_DWORD *)long long buf = 138412802;
          char v41 = v24;
          __int16 v42 = 2112;
          id v43 = v25;
          __int16 v44 = 2112;
          id v45 = v26;
          _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_INFO, "tried remove '%@' for context path: ['%@']; which is not %@';",
            buf,
            0x20u);
        }
        v33[0] = _NSConcreteStackBlock;
        v33[1] = 3221225472;
        v33[2] = sub_1001429A0;
        void v33[3] = &unk_1001F1ED8;
        v33[4] = a1;
        id v34 = v13;
        [a1 performTransaction:v33 forWriting:1];
        uint64_t v21 = v34;
        goto LABEL_20;
      }
      if (a2 == 2)
      {
        if (v38)
        {
          uint64_t v14 = 0;
          uint64_t v38 = 0;
          uint64_t v15 = v39;
LABEL_13:
          v28[0] = _NSConcreteStackBlock;
          v28[1] = 3221225472;
          void v28[2] = sub_1001429AC;
          v28[3] = &unk_1001F1F00;
          uint64_t v31 = v14;
          uint64_t v32 = v15;
          id v29 = v12;
          id v30 = a1;
          a1 = [a1 performTransaction:v28 forWriting:1];

LABEL_22:
          goto LABEL_23;
        }
        CLSInitLog();
        uint64_t v16 = (void *)CLSLogDefault;
        if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_INFO))
        {
          uint64_t v17 = v16;
          id v18 = NSStringFromAuthorizationStatus();
          char v19 = [v5 componentsJoinedByString:@"', '"];
          uint64_t v20 = NSStringFromAuthorizationStatus();
          *(_DWORD *)long long buf = 138412802;
          char v41 = v18;
          __int16 v42 = 2112;
          id v43 = v19;
          __int16 v44 = 2112;
          id v45 = v20;
          _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_INFO, "tried remove '%@' for context path: ['%@']; which is not %@';",
            buf,
            0x20u);
        }
        v35[0] = _NSConcreteStackBlock;
        v35[1] = 3221225472;
        void v35[2] = sub_100142994;
        v35[3] = &unk_1001F1ED8;
        v35[4] = a1;
        id v36 = v13;
        [a1 performTransaction:v35 forWriting:1];
        uint64_t v21 = v36;
LABEL_20:
      }
    }
    a1 = 0;
    goto LABEL_22;
  }
  CLSInitLog();
  uint64_t v6 = (void *)CLSLogDefault;
  if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_INFO))
  {
    uint64_t v7 = v6;
    uint64_t v8 = NSStringFromAuthorizationStatus();
    BOOL v9 = NSStringFromAuthorizationStatus();
    int v10 = NSStringFromAuthorizationStatus();
    *(_DWORD *)long long buf = 138412802;
    char v41 = v8;
    __int16 v42 = 2112;
    id v43 = v9;
    __int16 v44 = 2112;
    id v45 = v10;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Attempted to set authorization status: '%@'; only are: ['%@', '%@'] are allowed;",
      buf,
      0x20u);
  }
  a1 = 0;
LABEL_23:

  return a1;
}

id sub_100142994(uint64_t a1)
{
  return [*(id *)(a1 + 32) _pruneAuthTreeAtNodeWithContextStatusID:*(void *)(a1 + 40)];
}

id sub_1001429A0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _pruneAuthTreeAtNodeWithContextStatusID:*(void *)(a1 + 40)];
}

id sub_1001429AC(uint64_t a1)
{
  uint64_t v2 = +[NSNumber numberWithInteger:*(void *)(a1 + 48)];
  id v3 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", *(void *)(a1 + 56), v2);
  uint64_t v4 = *(void *)(a1 + 32);
  v8[1] = v3;
  void v8[2] = v4;
  id v5 = +[NSArray arrayWithObjects:v8 count:3];

  if (sub_100007540(*(void **)(a1 + 40), @"update AuthStatus set deniedCount = ?, authorizedCount = ? where statusID = ?", 1, v5, 0))id v6 = [*(id *)(a1 + 40) _pruneAuthTreeAtNodeWithContextStatusID:*(void *)(a1 + 32)]; {
  else
  }
    id v6 = 0;

  return v6;
}

void sub_100142D30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va1, a6);
  va_start(va, a6);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  uint64_t v19 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v6 - 160), 8);
  _Block_object_dispose((const void *)(v6 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_100142D80(void *a1, void *a2, unsigned char *a3)
{
  id v5 = a2;
  uint64_t v6 = sub_100003BF0(v5, @"authorizedCount");
  *(void *)(*(void *)(a1[4] + 8) + 24) = [v6 integerValue];

  uint64_t v7 = sub_100003BF0(v5, @"deniedCount");
  *(void *)(*(void *)(a1[5] + 8) + 24) = [v7 integerValue];

  uint64_t v8 = sub_100003BF0(v5, @"parentStatusID");

  uint64_t v9 = *(void *)(a1[6] + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v8;

  *a3 = 1;
}

void sub_100142E40(uint64_t a1, uint64_t *a2)
{
  sub_100003BF0(a2, @"count");
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = [v3 integerValue] == 0;
}

uint64_t sub_100142EB0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  if (a1)
  {
    id v5 = [v3 count];
    if (v5)
    {
      id v6 = v5;
      uint64_t v21 = 0;
      uint64_t v22 = &v21;
      uint64_t v23 = 0x2020000000;
      uint64_t v24 = 2;
      *(void *)long long buf = 0;
      uint64_t v16 = buf;
      uint64_t v17 = 0x3032000000;
      uint64_t v18 = sub_10000B7C4;
      uint64_t v19 = sub_10000B5FC;
      id v20 = 0;
      v9[0] = _NSConcreteStackBlock;
      v9[1] = 3221225472;
      void v9[2] = sub_100143080;
      v9[3] = &unk_1001F5EC0;
      id v10 = v4;
      uint64_t v11 = a1;
      uint64_t v12 = buf;
      uint64_t v13 = &v21;
      id v14 = v6;
      if (sub_10000749C((id)a1, v9))
      {
        a1 = v22[3];
      }
      else
      {
        a1 = 2;
        v22[3] = 2;
      }

      _Block_object_dispose(buf, 8);
      _Block_object_dispose(&v21, 8);
    }
    else
    {
      CLSInitLog();
      uint64_t v7 = CLSLogDefault;
      if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        a1 = 2;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "tried to query authorization status for empty context path", buf, 2u);
      }
      else
      {
        a1 = 2;
      }
    }
  }

  return a1;
}

void sub_10014305C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_100143080(uint64_t a1)
{
  long long v30 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  id obj = *(id *)(a1 + 32);
  id v2 = [obj countByEnumeratingWithState:&v30 objects:v36 count:16];
  if (v2)
  {
    unint64_t v20 = 0;
    int v19 = 0;
    uint64_t v22 = *(void *)v31;
LABEL_3:
    uint64_t v3 = 0;
    while (1)
    {
      if (*(void *)v31 != v22) {
        objc_enumerationMutation(obj);
      }
      uint64_t v4 = *(void *)(*((void *)&v30 + 1) + 8 * v3);
      id v6 = [objc_alloc((Class)NSMutableString) initWithString:@"select statusID, deniedCount, authorizedCount from AuthStatus where identifier = ? and parentStatusID"];
      uint64_t v7 = v6;
      if (*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40))
      {
        [v6 appendString:@" = ? limit 1"];
        uint64_t v8 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
        v34[0] = v4;
        v34[1] = v8;
        +[NSArray arrayWithObjects:v34 count:2];
      }
      else
      {
        [v6 appendString:@" is null limit 1"];
        uint64_t v35 = v4;
        +[NSArray arrayWithObjects:&v35 count:1];
      uint64_t v9 = };
      uint64_t v24 = 0;
      long long v25 = &v24;
      uint64_t v26 = 0x3032000000;
      uint64_t v27 = sub_10000B7C4;
      __int16 v28 = sub_10000B5FC;
      id v29 = 0;
      id v10 = *(void **)(a1 + 40);
      v23[0] = _NSConcreteStackBlock;
      v23[1] = 3221225472;
      v23[2] = sub_100143424;
      v23[3] = &unk_1001F1DE8;
      void v23[4] = *(void *)(a1 + 56);
      v23[5] = &v24;
      if ((sub_100007540(v10, v7, 1, v9, v23) & 1) == 0
        || (uint64_t v11 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24), v11 == 2))
      {
        int v15 = 0;
        int v14 = 1;
      }
      else
      {
        if (v11 == 1)
        {
          int v12 = v19;
          if ((v19 & 1) == 0) {
            int v12 = 1;
          }
          int v19 = v12;
        }
        uint64_t v13 = (void *)v25[5];
        if (v13)
        {
          objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), v13);
          int v14 = 0;
          ++v20;
          int v15 = 1;
        }
        else
        {
          int v15 = 0;
          int v14 = 2;
        }
      }
      _Block_object_dispose(&v24, 8);

      if (!v15) {
        break;
      }
      if (v2 == (id)++v3)
      {
        id v16 = [obj countByEnumeratingWithState:&v30 objects:v36 count:16];
        id v2 = v16;
        if (!v16)
        {

          if ((v19 & 1) == 0) {
            goto LABEL_28;
          }
          goto LABEL_27;
        }
        goto LABEL_3;
      }
    }

    if ((v14 | 2) != 2) {
      return;
    }
    if (v19) {
LABEL_27:
    }
      *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 1;
LABEL_28:
    unint64_t v17 = v20;
  }
  else
  {

    unint64_t v17 = 0;
  }
  if (v17 < *(void *)(a1 + 64))
  {
    uint64_t v18 = *(void *)(*(void *)(a1 + 56) + 8);
    if (!*(void *)(v18 + 24)) {
      *(void *)(v18 + 24) = 2;
    }
  }
}

void sub_100143404(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100143424(uint64_t a1, void *a2)
{
  int v12 = a2;
  uint64_t v3 = sub_100003BF0(v12, @"deniedCount");
  uint64_t v4 = (uint64_t)[v3 integerValue];

  if (v4 >= 1)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
    uint64_t v6 = 2;
LABEL_5:
    *(void *)(v5 + 24) = v6;
    goto LABEL_6;
  }
  uint64_t v7 = sub_100003BF0(v12, @"authorizedCount");
  uint64_t v8 = (uint64_t)[v7 integerValue];

  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  if (v8 >= 1)
  {
    uint64_t v6 = 1;
    goto LABEL_5;
  }
  *(void *)(v5 + 24) = 0;
LABEL_6:
  uint64_t v9 = sub_100003BF0(v12, @"statusID");
  uint64_t v10 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v11 = *(void **)(v10 + 40);
  *(void *)(v10 + 40) = v9;
}

id sub_100143514(id a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    id v7 = objc_msgSend(objc_alloc((Class)NSMutableArray), "initWithCapacity:", objc_msgSend(v5, "count"));
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    void v10[2] = sub_10014363C;
    v10[3] = &unk_1001F25F8;
    id v11 = v6;
    id v12 = v5;
    id v13 = a1;
    id v8 = v7;
    id v14 = v8;
    if (sub_10000749C(a1, v10)) {
      a1 = v8;
    }
    else {
      a1 = 0;
    }
  }

  return a1;
}

void sub_10014363C(id *a1)
{
  id v2 = a1[4];
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v3 = a1[5];
  id v4 = [v3 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v15;
    while (2)
    {
      id v7 = 0;
      id v8 = v2;
      do
      {
        if (*(void *)v15 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v9 = *(void *)(*((void *)&v14 + 1) + 8 * (void)v7);
        id v11 = [objc_alloc((Class)NSMutableString) initWithString:@"identifier = ? and parentObjectID"];
        id v12 = objc_msgSend(objc_alloc((Class)NSMutableArray), "initWithObjects:", v9, 0);
        if (v8)
        {
          [v11 appendString:@" = ?"];
          id v13 = [v8 objectID];
          [v12 addObject:v13];
        }
        else
        {
          [v11 appendString:@" is null"];
        }
        id v2 = [a1[6] select:objc_opt_class() where:v11 bindings:v12];

        if (!v2)
        {

          goto LABEL_14;
        }
        [a1[7] addObject:v2];

        id v7 = (char *)v7 + 1;
        id v8 = v2;
      }
      while (v5 != v7);
      id v5 = [v3 countByEnumeratingWithState:&v14 objects:v18 count:16];
      if (v5) {
        continue;
      }
      break;
    }
  }
LABEL_14:
}

id sub_100143838(id a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (a1)
  {
    uint64_t v16 = 0;
    long long v17 = &v16;
    uint64_t v18 = 0x3032000000;
    int v19 = sub_10000B7C4;
    unint64_t v20 = sub_10000B5FC;
    id v21 = 0;
    uint64_t v12 = 0;
    id v13 = &v12;
    uint64_t v14 = 0x2020000000;
    char v15 = 0;
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_100143A50;
    v6[3] = &unk_1001F1FE0;
    id v7 = v3;
    id v8 = a1;
    uint64_t v9 = &stru_1001F5EE0;
    uint64_t v10 = &v12;
    id v11 = &v16;
    sub_10000749C(a1, v6);
    if (*((unsigned char *)v13 + 24)) {
      a1 = (id)v17[5];
    }
    else {
      a1 = 0;
    }

    _Block_object_dispose(&v12, 8);
    _Block_object_dispose(&v16, 8);
  }

  return a1;
}

void sub_10014399C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 80), 8);
  _Unwind_Resume(a1);
}

int64_t sub_1001439C0(id a1, PDDatabaseRow *a2)
{
  id v2 = a2;
  id v3 = sub_100003BF0((uint64_t *)v2, @"deniedCount");
  id v4 = [v3 integerValue];

  if ((uint64_t)v4 <= 0)
  {
    uint64_t v6 = sub_100003BF0((uint64_t *)v2, @"authorizedCount");
    id v7 = [v6 integerValue];

    int64_t v5 = (uint64_t)v7 > 0;
  }
  else
  {
    int64_t v5 = 2;
  }

  return v5;
}

void sub_100143A50(uint64_t a1)
{
  uint64_t v26 = *(void *)(a1 + 32);
  id v2 = +[NSArray arrayWithObjects:&v26 count:1];
  id v3 = objc_opt_new();
  id v4 = *(void **)(a1 + 40);
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  v20[2] = sub_100143CE0;
  v20[3] = &unk_1001F1F90;
  id v5 = v3;
  id v21 = v5;
  id v6 = *(id *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 64);
  id v23 = v6;
  uint64_t v24 = v7;
  id v22 = *(id *)(a1 + 32);
  *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = sub_100007540(v4, @"select statusID, deniedCount, authorizedCount from AuthStatus where identifier = ? and parentStatusID is null limit 1", 1, v2, v20);
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24))
  {
    while ([v5 count])
    {
      uint64_t v9 = [v5 lastObject];
      [v5 removeLastObject];
      long long v25 = v9;
      uint64_t v10 = +[NSArray arrayWithObjects:&v25 count:1];

      v15[0] = _NSConcreteStackBlock;
      v15[1] = 3221225472;
      void v15[2] = sub_100143D98;
      v15[3] = &unk_1001F1FB8;
      uint64_t v11 = *(void **)(a1 + 40);
      id v18 = *(id *)(a1 + 48);
      id v12 = v5;
      uint64_t v19 = *(void *)(a1 + 64);
      id v16 = v12;
      id v17 = v9;
      id v13 = v9;
      *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = sub_100007540(v11, @"select identifier, statusID, deniedCount, authorizedCount from AuthStatus where parentStatusID = ?", 1, v10, v15);
      int v14 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 56) + 8) + 24);

      id v2 = v10;
      if (!v14) {
        goto LABEL_6;
      }
    }
  }
  uint64_t v10 = v2;
LABEL_6:
}

void sub_100143CE0(uint64_t a1, void *a2)
{
  id v3 = a2;
  sub_100003BF0(v3, @"statusID");
  id v8 = (id)objc_claimAutoreleasedReturnValue();
  [*(id *)(a1 + 32) addObject:v8];
  uint64_t v4 = (*(uint64_t (**)(void))(*(void *)(a1 + 48) + 16))();

  id v5 = [objc_alloc((Class)CLSAuthTree) initWithStatus:v4 statusID:v8 identifier:*(void *)(a1 + 40)];
  uint64_t v6 = *(void *)(*(void *)(a1 + 56) + 8);
  uint64_t v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;
}

void sub_100143D98(uint64_t a1, void *a2)
{
  uint64_t v6 = a2;
  uint64_t v3 = (*(uint64_t (**)(void))(*(void *)(a1 + 48) + 16))();
  uint64_t v4 = sub_100003BF0(v6, @"statusID");
  if (v3 != 2) {
    [*(id *)(a1 + 32) addObject:v4];
  }
  id v5 = sub_100003BF0(v6, @"identifier");
  [*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) setAuthStatus:v3 forIdentifier:v5 statusID:v4 parentStatusID:*(void *)(a1 + 40)];
}

uint64_t sub_100146358(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 0u:
        unsigned int v12 = 0;
        do
        {
          unint64_t v13 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v13 == -1 || v13 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            goto LABEL_73;
          }
          unint64_t v14 = v13 + 1;
          int v15 = *(char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v13);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v14;
          if ((v15 & 0x80000000) == 0) {
            break;
          }
        }
        while (v12++ <= 8);
        goto LABEL_73;
      case 1u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 56;
        goto LABEL_48;
      case 2u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 80;
        goto LABEL_48;
      case 3u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 40;
        goto LABEL_48;
      case 4u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        *(unsigned char *)(a1 + 128) |= 2u;
        while (2)
        {
          unint64_t v22 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v22 == -1 || v22 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v23 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v22);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v22 + 1;
            v21 |= (unint64_t)(v23 & 0x7F) << v19;
            if (v23 < 0)
            {
              v19 += 7;
              BOOL v9 = v20++ >= 9;
              if (v9)
              {
                LODWORD(v21) = 0;
                goto LABEL_67;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v21) = 0;
        }
LABEL_67:
        uint64_t v31 = 64;
        goto LABEL_72;
      case 5u:
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v21 = 0;
        *(unsigned char *)(a1 + 128) |= 1u;
        while (2)
        {
          unint64_t v26 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v26 == -1 || v26 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v27 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v26);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v26 + 1;
            v21 |= (unint64_t)(v27 & 0x7F) << v24;
            if (v27 < 0)
            {
              v24 += 7;
              BOOL v9 = v25++ >= 9;
              if (v9)
              {
                LODWORD(v21) = 0;
                goto LABEL_71;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v21) = 0;
        }
LABEL_71:
        uint64_t v31 = 48;
LABEL_72:
        *(_DWORD *)(a1 + v31) = v21;
        goto LABEL_73;
      case 6u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 96;
        goto LABEL_48;
      case 7u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 88;
        goto LABEL_48;
      case 8u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 32;
        goto LABEL_48;
      case 9u:
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = 72;
        goto LABEL_48;
      case 0xAu:
        [(id)a1 clearOneofValuesForProgressInfo];
        *(unsigned char *)(a1 + 128) |= 4u;
        *(_DWORD *)(a1 + 104) = 1;
        id v29 = objc_alloc_init(PDDPActivityReportItem);
        objc_storeStrong((id *)(a1 + 24), v29);
        if (!PBReaderPlaceMark() || (sub_10008CB74((uint64_t)v29, a2) & 1) == 0) {
          goto LABEL_75;
        }
        goto LABEL_60;
      case 0xBu:
        [(id)a1 clearOneofValuesForProgressInfo];
        *(unsigned char *)(a1 + 128) |= 4u;
        *(_DWORD *)(a1 + 104) = 2;
        id v29 = objc_alloc_init(PDDPRange);
        objc_storeStrong((id *)(a1 + 112), v29);
        if (!PBReaderPlaceMark() || !sub_100132B2C((uint64_t)v29, a2)) {
          goto LABEL_75;
        }
        goto LABEL_60;
      case 0xCu:
        [(id)a1 clearOneofValuesForProgressInfo];
        *(unsigned char *)(a1 + 128) |= 4u;
        *(_DWORD *)(a1 + 104) = 3;
        id v29 = objc_alloc_init(PDDPTimeIntervalInfo);
        objc_storeStrong((id *)(a1 + 120), v29);
        if (!PBReaderPlaceMark() || (sub_100104FF8((uint64_t)v29, a2) & 1) == 0) {
          goto LABEL_75;
        }
        goto LABEL_60;
      case 0xDu:
        [(id)a1 clearOneofValuesForProgressInfo];
        *(unsigned char *)(a1 + 128) |= 4u;
        *(_DWORD *)(a1 + 104) = 4;
        id v29 = objc_alloc_init(PDDPActivityInfo);
        objc_storeStrong((id *)(a1 + 16), v29);
        if (PBReaderPlaceMark() && sub_1000A9DCC((uint64_t)v29, a2))
        {
LABEL_60:
          PBReaderRecallMark();

LABEL_73:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }
LABEL_75:

        return 0;
      default:
        if ((v6 >> 3) == 100)
        {
          uint64_t v17 = PBReaderReadString();
          uint64_t v18 = 8;
LABEL_48:
          __int16 v28 = *(void **)(a1 + v18);
          *(void *)(a1 + v18) = v17;
        }
        else
        {
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
        }
        goto LABEL_73;
    }
  }
}

uint64_t sub_100148A80(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 0u:
        unsigned int v12 = 0;
        do
        {
          unint64_t v13 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v13 == -1 || v13 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
            goto LABEL_69;
          }
          unint64_t v14 = v13 + 1;
          int v15 = *(char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v13);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v14;
          if ((v15 & 0x80000000) == 0) {
            break;
          }
        }
        while (v12++ <= 8);
        goto LABEL_69;
      case 1u:
        uint64_t v18 = PBReaderReadString();
        char v19 = *(void **)(a1 + 64);
        *(void *)(a1 + 64) = v18;

        goto LABEL_69;
      case 2u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        *(unsigned char *)(a1 + 80) |= 4u;
        while (2)
        {
          unint64_t v23 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v23 == -1 || v23 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v23);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v23 + 1;
            v22 |= (unint64_t)(v24 & 0x7F) << v20;
            if (v24 < 0)
            {
              v20 += 7;
              BOOL v9 = v21++ >= 9;
              if (v9)
              {
                LODWORD(v22) = 0;
                goto LABEL_63;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v22) = 0;
        }
LABEL_63:
        uint64_t v31 = 40;
        goto LABEL_68;
      case 3u:
        unsigned int v25 = objc_alloc_init(PDDPDate);
        uint64_t v26 = 16;
        goto LABEL_37;
      case 4u:
        unsigned int v25 = objc_alloc_init(PDDPDate);
        uint64_t v26 = 24;
LABEL_37:
        objc_storeStrong((id *)(a1 + v26), v25);
        if (!PBReaderPlaceMark() || (PDDPDateReadFrom((uint64_t)v25, a2) & 1) == 0) {
          goto LABEL_71;
        }
        goto LABEL_58;
      case 5u:
        unsigned int v25 = objc_alloc_init(PDDPMapEntry);
        [(id)a1 addExtraInfo:v25];
        if (!PBReaderPlaceMark() || !sub_10010AE4C((uint64_t)v25, a2)) {
          goto LABEL_71;
        }
        goto LABEL_58;
      case 6u:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v22 = 0;
        *(unsigned char *)(a1 + 80) |= 2u;
        while (2)
        {
          unint64_t v29 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v29 == -1 || v29 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v30 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v29);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v29 + 1;
            v22 |= (unint64_t)(v30 & 0x7F) << v27;
            if (v30 < 0)
            {
              v27 += 7;
              BOOL v9 = v28++ >= 9;
              if (v9)
              {
                LODWORD(v22) = 0;
                goto LABEL_67;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v22) = 0;
        }
LABEL_67:
        uint64_t v31 = 36;
LABEL_68:
        *(_DWORD *)(a1 + v31) = v22;
        goto LABEL_69;
      case 7u:
        [(id)a1 clearOneofValuesForEventDetails];
        *(unsigned char *)(a1 + 80) |= 1u;
        *(_DWORD *)(a1 + 32) = 1;
        unsigned int v25 = objc_alloc_init(PDDPHandoutEventDetails);
        objc_storeStrong((id *)(a1 + 56), v25);
        if (!PBReaderPlaceMark() || !sub_1000B9D1C((id *)v25, a2)) {
          goto LABEL_71;
        }
        goto LABEL_58;
      case 8u:
        [(id)a1 clearOneofValuesForEventDetails];
        *(unsigned char *)(a1 + 80) |= 1u;
        *(_DWORD *)(a1 + 32) = 2;
        unsigned int v25 = objc_alloc_init(PDDPAttachmentEventDetails);
        objc_storeStrong((id *)(a1 + 8), v25);
        if (!PBReaderPlaceMark() || (sub_10003D4EC((uint64_t)v25, a2) & 1) == 0) {
          goto LABEL_71;
        }
        goto LABEL_58;
      case 9u:
        [(id)a1 clearOneofValuesForEventDetails];
        *(unsigned char *)(a1 + 80) |= 1u;
        *(_DWORD *)(a1 + 32) = 3;
        unsigned int v25 = objc_alloc_init(PDDPProgressEventDetails);
        objc_storeStrong((id *)(a1 + 72), v25);
        if PBReaderPlaceMark() && (sub_100146358((uint64_t)v25, a2))
        {
LABEL_58:
          PBReaderRecallMark();

LABEL_69:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }
LABEL_71:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_69;
    }
  }
}

void sub_10014A0C0(uint64_t a1, uint64_t a2)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 306);
  if (a2) {
    uint64_t v3 = *(void **)(a2 + 8);
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = v3;
  [v2 addObject:v4];
}

uint64_t sub_10014AA8C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v10 = v5++ >= 9;
      if (v10)
      {
        unint64_t v6 = 0;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    unint64_t v13 = v6 >> 3;
    switch((v6 >> 3))
    {
      case 'd':
        uint64_t v14 = PBReaderReadString();
        int v15 = *(void **)(a1 + 48);
        *(void *)(a1 + 48) = v14;

        goto LABEL_79;
      case 'e':
        PBReaderReadString();
        unint64_t v23 = (PDDPDate *)objc_claimAutoreleasedReturnValue();
        if (v23) {
          [(id)a1 addStringListValue:v23];
        }
        goto LABEL_35;
      case 'f':
        unint64_t v23 = objc_alloc_init(PDDPDate);
        objc_storeStrong((id *)(a1 + 24), v23);
        if PBReaderPlaceMark() && (PDDPDateReadFrom((uint64_t)v23, a2))
        {
          PBReaderRecallMark();
LABEL_35:

LABEL_79:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

        return 0;
      case 'g':
      case 'i':
      case 'k':
        goto LABEL_28;
      case 'h':
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v26 = 0;
        *(unsigned char *)(a1 + 64) |= 2u;
        while (2)
        {
          uint64_t v27 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v28 = v27 + 1;
          if (v27 == -1 || v28 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v29 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v27);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v28;
            v26 |= (unint64_t)(v29 & 0x7F) << v24;
            if (v29 < 0)
            {
              v24 += 7;
              BOOL v10 = v25++ >= 9;
              if (v10)
              {
                uint64_t v26 = 0;
                goto LABEL_63;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v26 = 0;
        }
LABEL_63:
        *(void *)(a1 + 16) = v26;
        goto LABEL_79;
      case 'j':
        *(unsigned char *)(a1 + 64) |= 1u;
        unint64_t v30 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v30 <= 0xFFFFFFFFFFFFFFF7 && v30 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v31 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v30);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v30 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v31 = 0;
        }
        *(void *)(a1 + 8) = v31;
        goto LABEL_79;
      case 'l':
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v34 = 0;
        *(unsigned char *)(a1 + 64) |= 0x10u;
        while (2)
        {
          uint64_t v35 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v36 = v35 + 1;
          if (v35 == -1 || v36 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v37 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v35);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v36;
            v34 |= (unint64_t)(v37 & 0x7F) << v32;
            if (v37 < 0)
            {
              v32 += 7;
              BOOL v10 = v33++ >= 9;
              if (v10)
              {
                uint64_t v34 = 0;
                goto LABEL_67;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v34 = 0;
        }
LABEL_67:
        *(unsigned char *)(a1 + 60) = v34 != 0;
        goto LABEL_79;
      default:
        if (v13 == 2)
        {
          char v38 = 0;
          unsigned int v39 = 0;
          uint64_t v18 = 0;
          *(unsigned char *)(a1 + 64) |= 4u;
          while (1)
          {
            uint64_t v40 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            unint64_t v41 = v40 + 1;
            if (v40 == -1 || v41 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
              break;
            }
            char v42 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v40);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v41;
            v18 |= (unint64_t)(v42 & 0x7F) << v38;
            if ((v42 & 0x80) == 0) {
              goto LABEL_73;
            }
            v38 += 7;
            BOOL v10 = v39++ >= 9;
            if (v10)
            {
              LODWORD(v18) = 0;
              goto LABEL_75;
            }
          }
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_73:
          if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            LODWORD(v18) = 0;
          }
LABEL_75:
          uint64_t v43 = 32;
        }
        else
        {
          if (v13 != 1)
          {
LABEL_28:
            uint64_t result = PBReaderSkipValueWithTag();
            if (!result) {
              return result;
            }
            goto LABEL_79;
          }
          char v16 = 0;
          unsigned int v17 = 0;
          uint64_t v18 = 0;
          *(unsigned char *)(a1 + 64) |= 8u;
          while (1)
          {
            uint64_t v19 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
              break;
            }
            char v21 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v19);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v20;
            v18 |= (unint64_t)(v21 & 0x7F) << v16;
            if ((v21 & 0x80) == 0) {
              goto LABEL_69;
            }
            v16 += 7;
            BOOL v10 = v17++ >= 9;
            if (v10)
            {
              LODWORD(v18) = 0;
              goto LABEL_71;
            }
          }
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_69:
          if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            LODWORD(v18) = 0;
          }
LABEL_71:
          uint64_t v43 = 56;
        }
        *(_DWORD *)(a1 + v43) = v18;
        goto LABEL_79;
    }
  }
}

BOOL sub_10014CCB0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 32;
        goto LABEL_20;
      case 2u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 40;
LABEL_20:
        uint64_t v14 = *(PDDPDate **)(a1 + v13);
        *(void *)(a1 + v13) = v12;
        goto LABEL_31;
      case 3u:
        uint64_t v14 = objc_alloc_init(PDDPDate);
        uint64_t v15 = 8;
        goto LABEL_23;
      case 4u:
        uint64_t v14 = objc_alloc_init(PDDPDate);
        uint64_t v15 = 16;
LABEL_23:
        objc_storeStrong((id *)(a1 + v15), v14);
        if (!PBReaderPlaceMark() || (PDDPDateReadFrom((uint64_t)v14, a2) & 1) == 0) {
          goto LABEL_34;
        }
        goto LABEL_30;
      case 6u:
        uint64_t v14 = objc_alloc_init(PDDPEntityMeta);
        objc_storeStrong((id *)(a1 + 24), v14);
        if PBReaderPlaceMark() && (sub_1000A7408((uint64_t)v14, a2))
        {
LABEL_30:
          PBReaderRecallMark();
LABEL_31:

LABEL_32:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }
LABEL_34:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_32;
    }
  }
}

void sub_10014DB44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

void sub_10014DB7C(uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7)
{
  id v13 = a2;
  id v14 = a3;
  id v15 = a4;
  id v16 = a5;
  id v17 = a6;
  id v18 = a7;
  uint64_t v19 = [v13 syncItem];
  unint64_t v20 = [v13 syncableItem];
  id v21 = [v19 entity];
  int8x16_t v52 = v14;
  [v14 addObject:v13];
  if (([*(id *)(a1 + 32) _shouldSkipGeneratingPayload:v20] & 1) == 0)
  {
    id v54 = v15;
    id v51 = v13;
    [v21 payloadsForObject:v20 withSyncItem:v19 database:v18];
    long long v60 = 0u;
    long long v61 = 0u;
    long long v62 = 0u;
    long long v63 = 0u;
    id obj = (id)objc_claimAutoreleasedReturnValue();
    id v22 = v18;
    id v58 = [obj countByEnumeratingWithState:&v60 objects:v70 count:16];
    if (v58)
    {
      uint64_t v24 = *(void *)v61;
      *(void *)&long long v23 = 138543874;
      long long v49 = v23;
      uint64_t v56 = v20;
      uint64_t v57 = v19;
      id v53 = v16;
      do
      {
        unsigned int v25 = 0;
        do
        {
          if (*(void *)v61 != v24) {
            objc_enumerationMutation(obj);
          }
          uint64_t v26 = *(void **)(*((void *)&v60 + 1) + 8 * (void)v25);
          if ([v26 type] == 25)
          {
            uint64_t v27 = [v26 survey];
            unint64_t v28 = [v27 objectId];
            char v29 = [v54 objectForKey:v28];

            if (v29)
            {
              id v16 = v53;
              unint64_t v20 = v56;
              uint64_t v19 = v57;
              goto LABEL_28;
            }
            unint64_t v30 = [v26 survey];
            uint64_t v31 = [v30 objectId];
            [v54 setObject:&off_10020AF98 forKeyedSubscript:v31];

            id v16 = v53;
          }
          objc_msgSend(v16, "addPayload:", v26, v49);
          [v16 writeTo:v17];
          [v16 clearPayloads];
          char v32 = [v17 data];
          id v33 = [v32 length];
          uint64_t v34 = [*(id *)(a1 + 32) stats];
          if (v34) {
            v34[10] = v33;
          }

          uint64_t v35 = [*(id *)(a1 + 32) stats];
          if (v35) {
            ++v35[14];
          }

          CLSInitLog();
          unint64_t v36 = [*(id *)(a1 + 32) logSubsystem];
          if (os_log_type_enabled(v36, OS_LOG_TYPE_DEBUG))
          {
            id v45 = objc_opt_class();
            uint64_t v46 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
            id v50 = v45;
            id v47 = [v26 dictionaryRepresentation];
            *(_DWORD *)long long buf = v49;
            id v65 = v45;
            __int16 v66 = 2114;
            uint64_t v67 = v46;
            __int16 v68 = 2112;
            long long v69 = v47;
            _os_log_debug_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEBUG, "%{public}@: %{public}@ added payload item %@ ", buf, 0x20u);
          }
          char v37 = *(void **)(a1 + 32);
          uint64_t v38 = [v37 stats];
          unsigned int v39 = (void *)v38;
          if (v38) {
            uint64_t v40 = *(void *)(v38 + 80);
          }
          else {
            uint64_t v40 = 0;
          }
          uint64_t v41 = [*(id *)(a1 + 32) stats];
          char v42 = (void *)v41;
          if (v41) {
            uint64_t v43 = *(void *)(v41 + 112);
          }
          else {
            uint64_t v43 = 0;
          }
          unsigned __int8 v44 = [v37 hasReachedRequestPayloadLimitBytes:v40 count:v43];

          unint64_t v20 = v56;
          uint64_t v19 = v57;
          if (v44) {
            goto LABEL_28;
          }
          unsigned int v25 = (char *)v25 + 1;
        }
        while (v58 != v25);
        id v48 = [obj countByEnumeratingWithState:&v60 objects:v70 count:16];
        id v58 = v48;
      }
      while (v48);
    }
LABEL_28:

    id v18 = v22;
    id v13 = v51;
    id v15 = v54;
  }
}

void sub_10014E7D8(uint64_t a1, void *a2)
{
  id v13 = a2;
  [v13 entity];
  char v4 = [(id)objc_opt_class() entityName];
  if (!v4)
  {
    id v2 = [(id)objc_opt_class() entityName];
    if (!v2) {
      goto LABEL_12;
    }
  }
  [v13 entity];
  uint64_t v5 = [(id)objc_opt_class() entityName];
  if (!v5)
  {
LABEL_9:
    if (!v4) {

    }
    goto LABEL_13;
  }
  unint64_t v6 = (void *)v5;
  uint64_t v7 = [(id)objc_opt_class() entityName];
  if (!v7)
  {

    goto LABEL_9;
  }
  char v8 = (void *)v7;
  [v13 entity];
  char v9 = [(id)objc_opt_class() entityName];
  int v10 = [(id)objc_opt_class() entityName];
  unsigned int v11 = [v9 isEqualToString:v10];

  if (!v4)
  {

    if ((v11 & 1) == 0) {
      goto LABEL_14;
    }
    goto LABEL_12;
  }

  if (v11)
  {
LABEL_12:
    uint64_t v12 = *(void **)(a1 + 32);
    char v4 = [v13 entityIdentity];
    [v12 addObject:v4];
LABEL_13:
  }
LABEL_14:
}

void sub_10014EB70(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(a1 + 32);
  id v4 = a2;
  uint64_t v5 = objc_opt_class();
  unint64_t v6 = [v4 entityIdentity];
  long long v23 = v6;
  uint64_t v7 = +[NSArray arrayWithObjects:&v23 count:1];
  [v3 deleteAll:v5 where:@"objectID = ?" bindings:v7];

  char v8 = *(void **)(a1 + 32);
  uint64_t v9 = objc_opt_class();
  int v10 = [v4 entityIdentity];
  id v22 = v10;
  unsigned int v11 = +[NSArray arrayWithObjects:&v22 count:1];
  [v8 deleteAll:v9 where:@"objectID = ?" bindings:v11];

  uint64_t v12 = *(void **)(a1 + 32);
  uint64_t v13 = objc_opt_class();
  id v14 = [v4 entityIdentity];
  id v21 = v14;
  id v15 = +[NSArray arrayWithObjects:&v21 count:1];
  [v12 deleteAll:v13 where:@"objectID = ?" bindings:v15];

  id v16 = *(void **)(a1 + 32);
  uint64_t v17 = objc_opt_class();
  id v18 = [v4 entityIdentity];

  unint64_t v20 = v18;
  uint64_t v19 = +[NSArray arrayWithObjects:&v20 count:1];
  [v16 deleteAll:v17 where:@"objectID = ?" bindings:v19];
}

void sub_10014F3A4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 entity];
  if (objc_opt_respondsToSelector())
  {
    uint64_t v5 = *(void **)(a1 + 40);
    unint64_t v6 = [v3 entityIdentity];
    uint64_t v7 = [v5 select:v4 identity:v6];

    if (v7 || [v3 state] == (id)3)
    {
      char v8 = objc_opt_new();
      [v8 setSyncItem:v3];
      [v8 setSyncableItem:v7];
      uint64_t v9 = self;
      unsigned int v10 = [v4 isSubclassOfClass:v9];

      if (!v10)
      {
        [*(id *)(*(void *)(a1 + 32) + 251) addObject:v8];
        CLSInitLog();
        id v18 = (void *)CLSLogDefault;
        if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v19 = v18;
          unint64_t v20 = [v4 entityName];
          id v21 = [v3 entityIdentity];
          int v29 = 138412546;
          unint64_t v30 = v20;
          __int16 v31 = 2112;
          char v32 = v21;
          _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "PDPushLocalClassChanges: insert %@ (%@) into _toBePushedSyncableOtherItems", (uint8_t *)&v29, 0x16u);
        }
        goto LABEL_15;
      }
      if ([v3 state] == (id)1)
      {
        [*(id *)(*(void *)(a1 + 32) + 243) addObject:v8];
        CLSInitLog();
        unsigned int v11 = (void *)CLSLogDefault;
        if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v12 = v11;
          uint64_t v13 = [v3 entityIdentity];
          int v29 = 138412290;
          unint64_t v30 = v13;
          id v14 = "PDPushLocalClassChanges: insert CLSAsset (%@) into _toBePushedSyncableNewCLSAssetItems";
LABEL_14:
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, v14, (uint8_t *)&v29, 0xCu);
        }
      }
      else
      {
        [*(id *)(a1 + 56) addObject:v8];
        CLSInitLog();
        id v22 = (void *)CLSLogDefault;
        if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v12 = v22;
          uint64_t v13 = [v3 entityIdentity];
          int v29 = 138412290;
          unint64_t v30 = v13;
          id v14 = "PDPushLocalClassChanges: insert CLSAsset (%@) into toBePushedSyncableOtherCLSAssetItems";
          goto LABEL_14;
        }
      }
LABEL_15:

      goto LABEL_16;
    }
    long long v23 = *(void **)(a1 + 48);
    uint64_t v24 = [v3 identityValue];
    [v23 addObject:v24];

    CLSInitLog();
    unsigned int v25 = (void *)CLSLogDefault;
    if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v26 = v25;
      uint64_t v27 = [v4 entityName];
      unint64_t v28 = [v3 entityIdentity];
      int v29 = 138412546;
      unint64_t v30 = v27;
      __int16 v31 = 2112;
      char v32 = v28;
      _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, "PDPushLocalClassChanges: Found orphaned sync item %@ (%@)", (uint8_t *)&v29, 0x16u);
    }
    uint64_t v7 = 0;
  }
  else
  {
    CLSInitLog();
    uint64_t v7 = [*(id *)(a1 + 32) logSubsystem];
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      id v15 = objc_opt_class();
      id v16 = v15;
      uint64_t v17 = [v3 entityIdentity];
      int v29 = 138543618;
      unint64_t v30 = v15;
      __int16 v31 = 2114;
      char v32 = v17;
      _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "entityClass: %{public}@: %{public}@ does not respond to sync selector", (uint8_t *)&v29, 0x16u);
    }
  }
LABEL_16:
}

char *sub_10014FEB4(void *a1, uint64_t a2, void *a3)
{
  id v6 = a3;
  if (a1)
  {
    v14.receiver = a1;
    v14.super_class = (Class)PDCollaborationStateChangePublish;
    uint64_t v7 = (char *)objc_msgSendSuper2(&v14, "initWithDatabase:", a2);
    char v8 = v7;
    if (v7)
    {
      objc_storeStrong((id *)(v7 + 235), a3);
      uint64_t v9 = objc_opt_new();
      unsigned int v10 = *(void **)(v8 + 251);
      *(void *)(v8 + 251) = v9;

      unsigned int v11 = *(void **)(v8 + 243);
      *(void *)(v8 + 243) = 0;

      uint64_t v12 = *(void **)(v8 + 259);
      *(void *)(v8 + 259) = 0;

      *(void *)(v8 + 227) = [*(id *)(v8 + 235) count];
    }
  }
  else
  {
    char v8 = 0;
  }

  return v8;
}

void sub_100150AC8(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  [v3 addObject:v4];
  uint64_t v5 = *(void **)(a1 + 40);
  id v6 = [v4 objectID];

  [v5 addObject:v6];
}

id sub_100151B6C(uint64_t a1)
{
  if (a1)
  {
    id v2 = [(id)a1 operationError];
    if ([*(id *)(a1 + 243) count])
    {
      id v3 = objc_opt_new();
      id v4 = [(id)a1 operationError];

      if (v4)
      {
        uint64_t v5 = [(id)a1 operationError];
        [v3 setObject:v5 forKeyedSubscript:NSUnderlyingErrorKey];

        id v6 = [(id)a1 operationError];
        unsigned int v10 = v6;
        uint64_t v7 = +[NSArray arrayWithObjects:&v10 count:1];
        [v3 setObject:v7 forKeyedSubscript:CLSErrorUnderlyingErrorsKey];
      }
      [v3 setObject:*(void *)(a1 + 243) forKeyedSubscript:CLSErrorObjectKey];
      [v3 setObject:@"Failed CollaborationStates can be found under CLSErrorObjectKey." forKeyedSubscript:NSLocalizedDescriptionKey];
      id v8 = [objc_alloc((Class)NSError) initWithDomain:CLSErrorCodeDomain code:9 userInfo:v3];

      id v2 = v8;
    }
  }
  else
  {
    id v2 = 0;
  }

  return v2;
}

void sub_100152FE8(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_100153014(uint64_t a1, void *a2, unsigned char *a3)
{
  id v5 = a2;
  uint64_t v7 = [v5 objectID];
  id v8 = *(void **)(a1 + 32);
  uint64_t v9 = objc_opt_class();
  unsigned int v10 = +[CLSAsset entityName];
  v24[0] = v10;
  v24[1] = v7;
  unsigned int v11 = +[NSArray arrayWithObjects:v24 count:2];
  id v12 = [v8 count:v9 where:@"entity = ? AND entityIdentity = ?" bindings:v11];

  if (v12) {
    uint64_t v13 = 1;
  }
  else {
    uint64_t v13 = 2;
  }
  objc_super v14 = +[NSNumber numberWithInteger:v13];
  v23[0] = v14;
  v23[1] = v7;
  id v15 = +[NSArray arrayWithObjects:v23 count:2];
  uint64_t v16 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v17 = *(void **)(v16 + 40);
  *(void *)(v16 + 40) = @"update CLSAsset set schoolworkSyncStatus=? where objectID=?";

  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = sub_100007540(*(void **)(a1 + 32), *(void **)(*(void *)(*(void *)(a1 + 40) + 8)+ 40), 0, v15, 0);
  if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24))
  {
    CLSInitLog();
    id v18 = CLSLogDatabase;
    if (os_log_type_enabled(CLSLogDatabase, OS_LOG_TYPE_ERROR))
    {
      int v19 = 138412546;
      unint64_t v20 = v14;
      __int16 v21 = 2112;
      id v22 = v7;
      _os_log_error_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_ERROR, "Failed to migrate CLSAsset(2): Could not update CLSAsset set schoolworkSyncStatus=%@ where objectID=%@", (uint8_t *)&v19, 0x16u);
    }
    *a3 = 1;
  }
}

id sub_1001534A4(id a1, void *a2)
{
  id v2 = a1;
  if (a1)
  {
    id v3 = a2;
    id v4 = [v2 select:objc_opt_class() identity:v3];

    if (v4
      && ([v4 parentObjectID], id v5 = objc_claimAutoreleasedReturnValue(), v5, v5))
    {
      switch((unint64_t)[v4 parentEntityType])
      {
        case 1uLL:
          id v6 = [v4 parentObjectID];
          uint64_t v7 = sub_10016B0FC(v2, v6);
          break;
        case 2uLL:
          id v6 = [v4 parentObjectID];
          uint64_t v7 = sub_1001564D8(v2, v6);
          break;
        case 3uLL:
          id v6 = [v4 parentObjectID];
          uint64_t v7 = sub_100065A04(v2, v6);
          break;
        case 4uLL:
          id v6 = [v4 parentObjectID];
          uint64_t v7 = sub_1000FCDF0(v2, v6);
          break;
        case 5uLL:
          id v6 = [v4 parentObjectID];
          uint64_t v7 = sub_1000B8A94(v2, v6);
          break;
        case 6uLL:
          id v6 = [v4 parentObjectID];
          uint64_t v7 = sub_10015A2A0(v2, v6);
          break;
        default:
          goto LABEL_6;
      }
      id v2 = (id)v7;
    }
    else
    {
LABEL_6:
      id v2 = (id)objc_opt_new();
    }
  }

  return v2;
}

BOOL sub_100153674(BOOL a1, void *a2)
{
  BOOL v2 = a1;
  if (a1)
  {
    id v3 = a2;
    id v4 = [(id)v2 select:objc_opt_class() identity:v3];

    BOOL v2 = [v4 schoolworkSyncStatus] != (id)2;
  }
  return v2;
}

void sub_1001536EC(id a1, NSArray *a2, NSArray *a3, NSError *a4)
{
  id v6 = a2;
  uint64_t v7 = a3;
  id v8 = a4;
  CLSInitLog();
  uint64_t v9 = (void *)CLSLogAsset;
  if (os_log_type_enabled(CLSLogAsset, OS_LOG_TYPE_DEFAULT))
  {
    unsigned int v10 = v9;
    int v11 = 134218498;
    NSUInteger v12 = [(NSArray *)v6 count];
    __int16 v13 = 2048;
    NSUInteger v14 = [(NSArray *)v7 count];
    __int16 v15 = 2112;
    uint64_t v16 = v8;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "deleteFromCloudKitContentStore: operationCompletionBlock - #savedRecords: %lu, #deletedRecordIDs:%lu, error: %@", (uint8_t *)&v11, 0x20u);
  }
}

void sub_100153804(void *a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (a1)
  {
    CFStringRef v10 = @"schoolworkSyncStatus";
    uint64_t v7 = +[NSNumber numberWithInteger:a3];
    int v11 = v7;
    id v8 = +[NSDictionary dictionaryWithObjects:&v11 forKeys:&v10 count:1];

    uint64_t v9 = +[PDDatabase whereSQLForArray:v5 prefix:@"objectID in "];
    [a1 updateAll:objc_opt_class() set:v8 where:v9 bindings:v5];
  }
}

id sub_100153924(id a1)
{
  id v1 = a1;
  if (a1)
  {
    id v4 = _NSConcreteStackBlock;
    uint64_t v5 = 3221225472;
    id v6 = sub_1001539E4;
    uint64_t v7 = &unk_1001F2710;
    id v8 = a1;
    id v9 = (id)objc_opt_new();
    id v2 = v9;
    sub_10000749C(v1, &v4);
    id v1 = objc_msgSend(v2, "copy", v4, v5, v6, v7, v8);
  }

  return v1;
}

void sub_1001539E4(uint64_t a1)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_100153A7C;
  v2[3] = &unk_1001F2ED8;
  id v1 = *(void **)(a1 + 32);
  id v3 = *(id *)(a1 + 40);
  sub_100007540(v1, @"SELECT * FROM (\n SELECT * FROM CLSAsset WHERE parentObjectID is NULL\n UNION\n SELECT * from CLSAsset WHERE parentEntityType=1 AND NOT EXISTS (SELECT objectID FROM CLSHandout WHERE CLSAsset.parentObjectID = CLSHandout.objectID)\n UNION\n SELECT * from CLSAsset WHERE parentEntityType=2 AND NOT EXISTS (SELECT objectID FROM CLSHandoutAttachment WHERE CLSAsset.parentObjectID = CLSHandoutAttachment.objectID)\n UNION\n SELECT * from CLSAsset WHERE parentEntityType=3 AND NOT EXISTS (SELECT objectID FROM CLSQuestionStep WHERE CLSAsset.parentObjectID = CLSQuestionStep.objectID)\n UNION\n SELECT * from CLSAsset WHERE parentEntityType=4 AND NOT EXISTS (SELECT objectID FROM CLSSurveyAnswerItem WHERE CLSAsset.parentObjectID = CLSSurveyAnswerItem.objectID)\n UNION\n SELECT * from CLSAsset WHERE parentEntityType=5 AND NOT EXISTS (SELECT objectID FROM CLSMultipleChoiceAnswerItem WHERE CLSAsset.parentObjectID = CLSMultipleChoiceAnswerItem.objectID)\n UNION\n SELECT * from CLSAsset WHERE parentEntityType=6 AND NOT EXISTS (SELECT objectID FROM CLSCollaborationState WHERE CLSAsset.parentObjectID = CLSCollaborationState.objectID)\n)", 0, 0, v2);
}

void sub_100153A7C(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v4 = [objc_alloc((Class)CLSAsset) initWithDatabaseRow:v5];
  if (v4) {
    [*(id *)(a1 + 32) addObject:v4];
  }
}

BOOL sub_100153B04(BOOL a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (a1)
  {
    if ([v3 parentEntityType] == (id)1)
    {
      id v5 = [v4 parentObjectID];
      id v6 = sub_10016BA2C((void *)a1, v5);
    }
    else if ([v4 parentEntityType] == (id)2)
    {
      id v5 = [v4 parentObjectID];
      id v6 = sub_100157244((void *)a1, v5);
    }
    else if ([v4 parentEntityType] == (id)3)
    {
      id v5 = [v4 parentObjectID];
      id v6 = sub_100066254((void *)a1, v5);
    }
    else if ([v4 parentEntityType] == (id)4)
    {
      id v5 = [v4 parentObjectID];
      id v6 = sub_1000FD034((void *)a1, v5);
    }
    else if ([v4 parentEntityType] == (id)5)
    {
      id v5 = [v4 parentObjectID];
      id v6 = sub_1000B8CD8((void *)a1, v5);
    }
    else
    {
      if ([v4 parentEntityType] != (id)6)
      {
        uint64_t v7 = 0;
        goto LABEL_15;
      }
      id v5 = [v4 parentObjectID];
      id v6 = sub_10015A4E4((void *)a1, v5);
    }
    uint64_t v7 = v6;

LABEL_15:
    self;
    a1 = v7 == (void *)2;
  }

  return a1;
}

id sub_1001548AC(id result, int64_t a2)
{
  if (result)
  {
    id v3 = result;
    [result lock];
    if (sub_100004EE8(v3, @"classKitCatalogEnvironment") != a2)
    {
      sub_10015FF5C(v3, a2, @"classKitCatalogEnvironment");
      +[CLSUtil postNotification:CLSClassKitCatalogEnvironmentChangedDarwinNotificationName];
    }
    return [v3 unlock];
  }
  return result;
}

uint64_t sub_100154ECC(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    unint64_t v12 = v6 >> 3;
    if ((v6 >> 3) == 3)
    {
      char v18 = 0;
      unsigned int v19 = 0;
      uint64_t v20 = 0;
      *(unsigned char *)(a1 + 24) |= 1u;
      while (1)
      {
        unint64_t v21 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v21 == -1 || v21 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v22 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v21);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v21 + 1;
        v20 |= (unint64_t)(v22 & 0x7F) << v18;
        if ((v22 & 0x80) == 0) {
          goto LABEL_48;
        }
        v18 += 7;
        BOOL v9 = v19++ >= 9;
        if (v9)
        {
          uint64_t v20 = 0;
          goto LABEL_50;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_48:
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        uint64_t v20 = 0;
      }
LABEL_50:
      *(void *)(a1 + 8) = v20;
    }
    else
    {
      if (v12 == 2)
      {
        char v23 = 0;
        unsigned int v24 = 0;
        uint64_t v15 = 0;
        *(unsigned char *)(a1 + 24) |= 4u;
        while (1)
        {
          unint64_t v25 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v25 == -1 || v25 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v26 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v25);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v25 + 1;
          v15 |= (unint64_t)(v26 & 0x7F) << v23;
          if ((v26 & 0x80) == 0) {
            goto LABEL_52;
          }
          v23 += 7;
          BOOL v9 = v24++ >= 9;
          if (v9)
          {
            LODWORD(v15) = 0;
            goto LABEL_54;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_52:
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v15) = 0;
        }
LABEL_54:
        uint64_t v28 = 20;
      }
      else
      {
        if (v12 != 1)
        {
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
        }
        char v13 = 0;
        unsigned int v14 = 0;
        uint64_t v15 = 0;
        *(unsigned char *)(a1 + 24) |= 2u;
        while (1)
        {
          unint64_t v16 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v16 == -1 || v16 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v17 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v16);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v16 + 1;
          v15 |= (unint64_t)(v17 & 0x7F) << v13;
          if ((v17 & 0x80) == 0) {
            goto LABEL_44;
          }
          v13 += 7;
          BOOL v9 = v14++ >= 9;
          if (v9)
          {
            LODWORD(v15) = 0;
            goto LABEL_46;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_44:
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v15) = 0;
        }
LABEL_46:
        uint64_t v28 = 16;
      }
      *(_DWORD *)(a1 + v28) = v15;
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

id sub_1001564D8(id a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    char v4 = objc_opt_new();
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    _DWORD v7[2] = sub_100156A6C;
    v7[3] = &unk_1001F2F00;
    void v7[4] = a1;
    id v8 = v3;
    id v9 = v4;
    id v5 = v4;
    sub_10000749C(a1, v7);
    a1 = [v5 copy];
  }

  return a1;
}

uint64_t sub_1001565D8(void *a1, void *a2, int a3)
{
  id v5 = a2;
  if (a1)
  {
    unint64_t v6 = [a1 select:objc_opt_class() identity:v5];
    if (v6)
    {
      uint64_t v7 = sub_1001566F0((uint64_t)a1, v6, a3);
    }
    else
    {
      CLSInitLog();
      id v8 = CLSLogDatabase;
      if (os_log_type_enabled(CLSLogDatabase, OS_LOG_TYPE_INFO))
      {
        int v10 = 138543362;
        id v11 = v5;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Can't update authorization - could not find attachment with objectID: %{public}@.", (uint8_t *)&v10, 0xCu);
      }
      uint64_t v7 = 0;
    }
  }
  else
  {
    uint64_t v7 = 0;
  }

  return v7;
}

uint64_t sub_1001566F0(uint64_t a1, void *a2, int a3)
{
  id v5 = a2;
  unint64_t v6 = v5;
  if (a1)
  {
    uint64_t v7 = [v5 objectID];
    if ([v6 type] == 1)
    {
      id v8 = [v6 contextPath];
      id v9 = [v8 count];

      if (!v9)
      {
        a1 = 0;
LABEL_26:

        goto LABEL_27;
      }
    }
    int v10 = [@"isAuthorized" stringByAppendingString:v7];
    BOOL v11 = sub_100006970((void *)a1, v10);
    BOOL v12 = v11;
    if (v11 || !a3)
    {
      CFStringRef v15 = @"Left as is";
      if (v11 && (a3 & 1) == 0)
      {
        if ([v6 type] == 1)
        {
          unint64_t v16 = [v6 contextPath];
          unsigned __int8 v17 = sub_100142518((id)a1, 1, v16);
        }
        else
        {
          unint64_t v16 = [v6 objectID];
          unsigned __int8 v17 = sub_10001CA14((void *)a1, 2, v16);
        }
        unsigned __int8 v20 = v17;

        if ((v20 & 1) == 0) {
          goto LABEL_22;
        }
        BOOL v12 = 0;
        CFStringRef v15 = @"Removed";
      }
    }
    else if ([v6 type] == 1)
    {
      char v13 = [v6 contextPath];
      BOOL v12 = 1;
      unsigned __int8 v14 = sub_100142204((void *)a1, 1, v13);

      if ((v14 & 1) == 0) {
        goto LABEL_22;
      }
      CFStringRef v15 = @"Added";
    }
    else
    {
      char v18 = [v6 objectID];
      unsigned int v19 = sub_10001CA14((void *)a1, 1, v18);

      if (!v19) {
        goto LABEL_22;
      }
      CFStringRef v15 = @"Added";
      BOOL v12 = 1;
    }
    if (sub_10015FEC4((id)a1, v12, v10))
    {
      CLSInitLog();
      unint64_t v21 = (void *)CLSLogDatabase;
      a1 = 1;
      if (os_log_type_enabled(CLSLogDatabase, OS_LOG_TYPE_INFO))
      {
        char v22 = v21;
        [v6 type];
        char v23 = NSStringFromHandoutAttachmentType();
        unsigned int v24 = [v6 contextPath];
        int v30 = 138413058;
        CFStringRef v31 = v15;
        __int16 v32 = 2112;
        id v33 = v23;
        __int16 v34 = 2112;
        uint64_t v35 = v24;
        __int16 v36 = 2114;
        char v37 = v7;
        _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_INFO, "%@ authorization for handout attachment type '%@' with context at path %@ from attachment %{public}@.", (uint8_t *)&v30, 0x2Au);
      }
LABEL_25:

      goto LABEL_26;
    }
LABEL_22:
    CLSInitLog();
    unint64_t v25 = (void *)CLSLogDatabase;
    if (os_log_type_enabled(CLSLogDatabase, OS_LOG_TYPE_INFO))
    {
      char v26 = v25;
      [v6 type];
      NSStringFromHandoutAttachmentType();
      uint64_t v27 = (__CFString *)objc_claimAutoreleasedReturnValue();
      uint64_t v28 = [v6 contextPath];
      int v30 = 138412802;
      CFStringRef v31 = v27;
      __int16 v32 = 2112;
      id v33 = v28;
      __int16 v34 = 2114;
      uint64_t v35 = v7;
      _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_INFO, "Failed to change authorization for handout attachment type '%@' with context at path %@ from attachment %{public}@.", (uint8_t *)&v30, 0x20u);
    }
    a1 = 0;
    goto LABEL_25;
  }
LABEL_27:

  return a1;
}

void sub_100156A6C(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  id v3 = +[NSArray arrayWithObjects:&v6 count:1];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100156B64;
  void v4[3] = &unk_1001F2ED8;
  id v5 = *(id *)(a1 + 48);
  sub_100007540(v2, @"select distinct classID from CLSHandoutRecipient as R join CLSHandoutAttachment as A on R.parentObjectID = A.parentObjectID and A.objectID = ?", 1, v3, v4);
}

void sub_100156B64(uint64_t a1, uint64_t *a2)
{
  sub_100003BF0(a2, @"classID");
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  [*(id *)(a1 + 32) addObject:v3];
}

id sub_100156BC8(void *a1, void *a2)
{
  id v3 = a2;
  CFStringRef v15 = v3;
  if (a1)
  {
    char v4 = v3;
    id v5 = objc_opt_new();
    long long v20 = 0u;
    long long v21 = 0u;
    long long v22 = 0u;
    long long v23 = 0u;
    id obj = v4;
    id v6 = [obj countByEnumeratingWithState:&v20 objects:v25 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = *(void *)v21;
      do
      {
        for (i = 0; i != v7; i = (char *)i + 1)
        {
          if (*(void *)v21 != v8) {
            objc_enumerationMutation(obj);
          }
          int v10 = *(void **)(*((void *)&v20 + 1) + 8 * i);
          BOOL v11 = [v10 objectID];
          unsigned int v24 = v11;
          BOOL v12 = +[NSArray arrayWithObjects:&v24 count:1];

          uint64_t v13 = objc_opt_class();
          v17[0] = _NSConcreteStackBlock;
          v17[1] = 3221225472;
          void v17[2] = sub_100156DD4;
          void v17[3] = &unk_1001F61F8;
          void v17[4] = a1;
          id v18 = v5;
          unsigned int v19 = v10;
          [a1 selectAll:v13 where:@"parentObjectID = ?" bindings:v12 block:v17];
        }
        id v7 = [obj countByEnumeratingWithState:&v20 objects:v25 count:16];
      }
      while (v7);
    }
  }
  else
  {
    id v5 = 0;
  }

  return v5;
}

id sub_100156DD4(uint64_t a1, void *a2, unsigned char *a3)
{
  id result = sub_100156E14(*(void **)(a1 + 32), a2);
  if ((result & 1) == 0)
  {
    id result = [*(id *)(a1 + 40) addObject:*(void *)(a1 + 48)];
    *a3 = 1;
  }
  return result;
}

id sub_100156E14(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    uint64_t v4 = objc_opt_class();
    id v5 = [v3 objectID];
    v15[0] = v5;
    v15[1] = &off_10020AFB0;
    id v6 = +[NSArray arrayWithObjects:v15 count:2];
    id v7 = [a1 select:v4 where:@"parentObjectID = ? AND domain = ?" bindings:v6];

    if (v7)
    {
      id v8 = [v7 isCompletedActivity];
    }
    else
    {
      CLSInitLog();
      id v9 = (void *)CLSLogDefault;
      id v8 = 0;
      if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_DEFAULT))
      {
        int v10 = v9;
        BOOL v11 = [v3 objectID];
        int v13 = 138543362;
        unsigned __int8 v14 = v11;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "PDHandoutPastDueSummaryNotificationTrigger: collaboration state for handout attachemnt with id: %{public}@ not available.", (uint8_t *)&v13, 0xCu);

        id v8 = 0;
      }
    }
  }
  else
  {
    id v8 = 0;
  }

  return v8;
}

id sub_100156F98(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = v5;
  id v7 = 0;
  if (a1)
  {
    if (v5)
    {
      id v7 = [v5 objectID];

      if (v7)
      {
        uint64_t v8 = objc_opt_class();
        id v9 = [v6 objectID];
        id v18 = v9;
        int v10 = +[NSArray arrayWithObjects:&v18 count:1];
        BOOL v11 = [a1 select:v8 where:@"parentObjectID = ? and domain = 1" bindings:v10];

        if (v11)
        {
          id v7 = [v11 isAskedToTryAgain];
LABEL_11:

          goto LABEL_12;
        }
        CLSInitLog();
        BOOL v12 = (void *)CLSLogDefault;
        if (os_log_type_enabled(CLSLogDefault, OS_LOG_TYPE_ERROR))
        {
          int v13 = v12;
          unsigned __int8 v14 = [v6 objectID];
          int v16 = 138543362;
          unsigned __int8 v17 = v14;
          _os_log_error_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "Collaboration state for handout attachemnt with id: %{public}@ not available.", (uint8_t *)&v16, 0xCu);

          if (a3) {
            goto LABEL_8;
          }
        }
        else if (a3)
        {
LABEL_8:
          +[NSError cls_createErrorWithCode:100 description:@"No collab states found"];
          id v7 = 0;
          *a3 = (id)objc_claimAutoreleasedReturnValue();
          goto LABEL_11;
        }
        id v7 = 0;
        goto LABEL_11;
      }
    }
  }
LABEL_12:

  return v7;
}

id sub_100157160(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  if (a1)
  {
    if ([v3 type] == 1
      && ([v4 contextPath], id v5 = objc_claimAutoreleasedReturnValue(), v5, v5))
    {
      id v6 = [v4 contextPath];
      id v7 = +[CLSContext objectIDForIdentifierPath:v6];

      if (v7)
      {
        a1 = [a1 select:objc_opt_class() identity:v7];
      }
      else
      {
        a1 = 0;
      }
    }
    else
    {
      a1 = 0;
    }
  }

  return a1;
}

void *sub_100157244(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  if (a1)
  {
    uint64_t v9 = 0;
    int v10 = &v9;
    uint64_t v11 = 0x2020000000;
    uint64_t v12 = 0;
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_100157330;
    v6[3] = &unk_1001F33F0;
    void v6[4] = a1;
    id v7 = v3;
    uint64_t v8 = &v9;
    sub_10000749C(a1, v6);
    a1 = (void *)v10[3];

    _Block_object_dispose(&v9, 8);
  }

  return a1;
}

void sub_100157318(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100157330(void *a1)
{
  id v2 = (void *)a1[4];
  uint64_t v5 = a1[5];
  id v3 = +[NSArray arrayWithObjects:&v5 count:1];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10015741C;
  void v4[3] = &unk_1001F1F28;
  void v4[4] = a1[6];
  sub_100007540(v2, @"select CS.state from CLSCollaborationState as CS join CLSHandoutAttachment as HA on HA.parentObjectID = CS.parentObjectID and HA.objectID = ?", 1, v3, v4);
}

void sub_10015741C(uint64_t a1, uint64_t *a2)
{
  sub_100003BF0(a2, @"state");
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = [v3 integerValue];
}

id sub_100159B08(id a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    id v7 = objc_opt_new();
    int v10 = _NSConcreteStackBlock;
    uint64_t v11 = 3221225472;
    uint64_t v12 = sub_100159C10;
    int v13 = &unk_1001F25F8;
    id v14 = a1;
    id v15 = v5;
    id v16 = v6;
    id v17 = v7;
    id v8 = v7;
    sub_10000749C(a1, &v10);
    a1 = objc_msgSend(v8, "copy", v10, v11, v12, v13, v14);
  }

  return a1;
}

void sub_100159C10(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = objc_opt_class();
  uint64_t v4 = *(void *)(a1 + 48);
  v8[0] = *(void *)(a1 + 40);
  v8[1] = v4;
  id v5 = +[NSArray arrayWithObjects:v8 count:2];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100159D1C;
  v6[3] = &unk_1001F3BB0;
  id v7 = *(id *)(a1 + 56);
  [v2 selectAll:v3 where:@"parentObjectID = ? and ownerPersonID = ?" bindings:v5 block:v6];
}

id sub_100159D1C(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addObject:a2];
}

id sub_100159D28(id a1, void *a2, void *a3, uint64_t a4)
{
  id v7 = a2;
  id v8 = a3;
  if (a1)
  {
    uint64_t v9 = objc_opt_new();
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_100159E40;
    void v12[3] = &unk_1001F6220;
    void v12[4] = a1;
    id v13 = v8;
    uint64_t v16 = a4;
    id v14 = v7;
    id v15 = v9;
    id v10 = v9;
    sub_10000749C(a1, v12);
    a1 = [v10 copy];
  }

  return a1;
}

void sub_100159E40(uint64_t a1)
{
  id v2 = objc_opt_new();
  uint64_t v3 = *(void **)(a1 + 32);
  v15[0] = *(void *)(a1 + 40);
  uint64_t v4 = +[NSNumber numberWithUnsignedInteger:*(void *)(a1 + 64)];
  v15[1] = v4;
  id v5 = +[NSArray arrayWithObjects:v15 count:2];
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_10015A040;
  v13[3] = &unk_1001F2ED8;
  id v14 = v2;
  id v6 = v2;
  sub_100007540(v3, @"select distinct personID from CLSClassMember where parentObjectID = ? and (roles & ? > 0)", 1, v5, v13);

  id v7 = +[PDDatabase whereSQLForArray:v6 prefix:@"parentObjectID = ? and ownerPersonID in "];
  id v8 = objc_opt_new();
  [v8 addObject:*(void *)(a1 + 48)];
  [v8 addObjectsFromArray:v6];
  uint64_t v9 = *(void **)(a1 + 32);
  uint64_t v10 = objc_opt_class();
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  void v11[2] = sub_10015A0A4;
  void v11[3] = &unk_1001F3BB0;
  id v12 = *(id *)(a1 + 56);
  [v9 selectAll:v10 where:v7 bindings:v8 block:v11];
}

void sub_10015A040(uint64_t a1, uint64_t *a2)
{
  id v2 = *(void **)(a1 + 32);
  sub_100003BF0(a2, @"personID");
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  [v2 addObject:v3];
}

id sub_10015A0A4(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addObject:a2];
}

id sub_10015A0B0(id a1, void *a2, void *a3, uint64_t a4)
{
  id v7 = a2;
  id v8 = a3;
  if (a1)
  {
    uint64_t v16 = 0;
    id v17 = &v16;
    uint64_t v18 = 0x3032000000;
    unsigned int v19 = sub_10000B7F4;
    long long v20 = sub_10000B614;
    id v21 = 0;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    void v10[2] = sub_10015A20C;
    v10[3] = &unk_1001F6248;
    id v11 = v7;
    id v14 = &v16;
    uint64_t v15 = a4;
    id v12 = v8;
    id v13 = a1;
    sub_10000749C(a1, v10);
    a1 = (id)v17[5];

    _Block_object_dispose(&v16, 8);
  }

  return a1;
}

void sub_10015A1F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10015A20C(uint64_t a1)
{
  id v5 = +[CLSCollaborationState identifierForTargetObjectID:*(void *)(a1 + 32) ownerPersonID:*(void *)(a1 + 40) domain:*(void *)(a1 + 64)];
  uint64_t v2 = [*(id *)(a1 + 48) select:objc_opt_class() identity:v5];
  uint64_t v3 = *(void *)(*(void *)(a1 + 56) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

id sub_10015A2A0(id a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    uint64_t v4 = objc_opt_new();
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    _DWORD v7[2] = sub_10015A388;
    v7[3] = &unk_1001F2F00;
    void v7[4] = a1;
    id v8 = v3;
    id v9 = v4;
    id v5 = v4;
    sub_10000749C(a1, v7);
    a1 = [v5 copy];
  }

  return a1;
}

void sub_10015A388(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  id v3 = +[NSArray arrayWithObjects:&v6 count:1];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10015A480;
  void v4[3] = &unk_1001F2ED8;
  id v5 = *(id *)(a1 + 48);
  sub_100007540(v2, @"select distinct classID from CLSCollaborationState where objectID = ?", 1, v3, v4);
}

void sub_10015A480(uint64_t a1, uint64_t *a2)
{
  sub_100003BF0(a2, @"classID");
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  [*(id *)(a1 + 32) addObject:v3];
}

void *sub_10015A4E4(void *result, void *a2)
{
  if (result)
  {
    uint64_t v2 = result;
    id v3 = a2;
    uint64_t v4 = [v2 select:objc_opt_class() identity:v3];

    id v5 = [v4 parentObjectID];
    uint64_t v6 = sub_100157244(v2, v5);

    return v6;
  }
  return result;
}

uint64_t sub_10015BA14(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        char v12 = 0;
        unsigned int v13 = 0;
        uint64_t v14 = 0;
        *(unsigned char *)(a1 + 148) |= 2u;
        while (1)
        {
          unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v15 == -1 || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
          v14 |= (unint64_t)(v16 & 0x7F) << v12;
          if ((v16 & 0x80) == 0) {
            goto LABEL_86;
          }
          v12 += 7;
          BOOL v9 = v13++ >= 9;
          if (v9)
          {
            LODWORD(v14) = 0;
            goto LABEL_88;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_86:
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_88:
        uint64_t v30 = 80;
        goto LABEL_97;
      case 2u:
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v14 = 0;
        *(unsigned char *)(a1 + 148) |= 1u;
        while (2)
        {
          unint64_t v20 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v20 == -1 || v20 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v21 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v20);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v20 + 1;
            v14 |= (unint64_t)(v21 & 0x7F) << v18;
            if (v21 < 0)
            {
              v18 += 7;
              BOOL v9 = v19++ >= 9;
              if (v9)
              {
                LODWORD(v14) = 0;
                goto LABEL_92;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_92:
        uint64_t v30 = 8;
        goto LABEL_97;
      case 3u:
        char v22 = 0;
        unsigned int v23 = 0;
        uint64_t v14 = 0;
        *(unsigned char *)(a1 + 148) |= 4u;
        while (2)
        {
          unint64_t v24 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v24 == -1 || v24 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v24);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v24 + 1;
            v14 |= (unint64_t)(v25 & 0x7F) << v22;
            if (v25 < 0)
            {
              v22 += 7;
              BOOL v9 = v23++ >= 9;
              if (v9)
              {
                LODWORD(v14) = 0;
                goto LABEL_96;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_96:
        uint64_t v30 = 144;
LABEL_97:
        *(_DWORD *)(a1 + v30) = v14;
        goto LABEL_83;
      case 4u:
        char v26 = objc_alloc_init(PDDPStatus);
        objc_storeStrong((id *)(a1 + 120), v26);
        if (!PBReaderPlaceMark() || (sub_1000D3710((uint64_t)v26, a2) & 1) == 0) {
          goto LABEL_99;
        }
        goto LABEL_82;
      case 5u:
        char v26 = objc_alloc_init(PDDPEERequestZone);
        objc_storeStrong((id *)(a1 + 96), v26);
        if (!PBReaderPlaceMark() || (sub_10013E898((uint64_t)v26, a2) & 1) == 0) {
          goto LABEL_99;
        }
        goto LABEL_82;
      case 6u:
        char v26 = objc_alloc_init(PDDPEEResponseZone);
        objc_storeStrong((id *)(a1 + 104), v26);
        if (!PBReaderPlaceMark() || (sub_1000CF17C((uint64_t)v26, a2) & 1) == 0) {
          goto LABEL_99;
        }
        goto LABEL_82;
      case 7u:
        char v26 = objc_alloc_init(PDDPLocation);
        objc_storeStrong((id *)(a1 + 64), v26);
        if (!PBReaderPlaceMark() || !sub_10014CCB0((uint64_t)v26, a2)) {
          goto LABEL_99;
        }
        goto LABEL_82;
      case 8u:
        char v26 = objc_alloc_init(PDDPPerson);
        objc_storeStrong((id *)(a1 + 88), v26);
        if (!PBReaderPlaceMark() || (sub_1000DDFFC((uint64_t)v26, a2) & 1) == 0) {
          goto LABEL_99;
        }
        goto LABEL_82;
      case 9u:
        char v26 = objc_alloc_init(PDDPClass);
        objc_storeStrong((id *)(a1 + 32), v26);
        if (!PBReaderPlaceMark() || !sub_1000F6DF0((uint64_t)v26, a2)) {
          goto LABEL_99;
        }
        goto LABEL_82;
      case 0xAu:
        char v26 = objc_alloc_init(PDDPClassMember);
        objc_storeStrong((id *)(a1 + 40), v26);
        if (!PBReaderPlaceMark() || (sub_100045958((uint64_t)v26, a2) & 1) == 0) {
          goto LABEL_99;
        }
        goto LABEL_82;
      case 0xBu:
        char v26 = objc_alloc_init(PDDPRole);
        objc_storeStrong((id *)(a1 + 112), v26);
        if (!PBReaderPlaceMark() || (sub_100102FA4((uint64_t)v26, a2) & 1) == 0) {
          goto LABEL_99;
        }
        goto LABEL_82;
      case 0xCu:
        uint64_t v27 = PBReaderReadString();
        uint64_t v28 = 128;
        goto LABEL_67;
      case 0xDu:
        uint64_t v27 = PBReaderReadString();
        uint64_t v28 = 136;
LABEL_67:
        int v29 = *(void **)(a1 + v28);
        *(void *)(a1 + v28) = v27;

        goto LABEL_83;
      case 0xEu:
        char v26 = objc_alloc_init(PDDPOrganization);
        objc_storeStrong((id *)(a1 + 72), v26);
        if (!PBReaderPlaceMark() || (sub_1000C351C((uint64_t)v26, a2) & 1) == 0) {
          goto LABEL_99;
        }
        goto LABEL_82;
      case 0xFu:
        char v26 = objc_alloc_init(PDDPAdminRequestDetails);
        objc_storeStrong((id *)(a1 + 16), v26);
        if (!PBReaderPlaceMark() || (sub_10003FCD0((uint64_t)v26, a2) & 1) == 0) {
          goto LABEL_99;
        }
        goto LABEL_82;
      case 0x10u:
        char v26 = objc_alloc_init(PDDPAdminRequestAccount);
        objc_storeStrong((id *)(a1 + 24), v26);
        if (!PBReaderPlaceMark() || (sub_10013558C((uint64_t)v26, a2) & 1) == 0) {
          goto LABEL_99;
        }
        goto LABEL_82;
      case 0x11u:
        char v26 = objc_alloc_init(PDDPGroup);
        objc_storeStrong((id *)(a1 + 48), v26);
        if (!PBReaderPlaceMark() || !sub_1000B36C8((uint64_t)v26, a2)) {
          goto LABEL_99;
        }
        goto LABEL_82;
      case 0x12u:
        char v26 = objc_alloc_init(PDDPGroupMember);
        objc_storeStrong((id *)(a1 + 56), v26);
        if (PBReaderPlaceMark() && sub_100062FA4((uint64_t)v26, a2))
        {
LABEL_82:
          PBReaderRecallMark();

LABEL_83:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }
LABEL_99:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_83;
    }
  }
}

uint64_t sub_10015DE70(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        char v12 = 0;
        unsigned int v13 = 0;
        uint64_t v14 = 0;
        *(unsigned char *)(a1 + 96) |= 2u;
        while (1)
        {
          unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v15 == -1 || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
          v14 |= (unint64_t)(v16 & 0x7F) << v12;
          if ((v16 & 0x80) == 0) {
            goto LABEL_58;
          }
          v12 += 7;
          BOOL v9 = v13++ >= 9;
          if (v9)
          {
            LODWORD(v14) = 0;
            goto LABEL_60;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_58:
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_60:
        uint64_t v32 = 88;
        goto LABEL_65;
      case 2u:
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v14 = 0;
        *(unsigned char *)(a1 + 96) |= 1u;
        while (2)
        {
          unint64_t v20 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v20 == -1 || v20 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v21 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v20);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v20 + 1;
            v14 |= (unint64_t)(v21 & 0x7F) << v18;
            if (v21 < 0)
            {
              v18 += 7;
              BOOL v9 = v19++ >= 9;
              if (v9)
              {
                LODWORD(v14) = 0;
                goto LABEL_64;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_64:
        uint64_t v32 = 40;
LABEL_65:
        *(_DWORD *)(a1 + v32) = v14;
        goto LABEL_70;
      case 3u:
        uint64_t v22 = PBReaderReadString();
        uint64_t v23 = 48;
        goto LABEL_56;
      case 4u:
        uint64_t v22 = PBReaderReadString();
        uint64_t v23 = 80;
        goto LABEL_56;
      case 5u:
        uint64_t v22 = PBReaderReadString();
        uint64_t v23 = 24;
        goto LABEL_56;
      case 6u:
        unint64_t v24 = objc_alloc_init(PDDPDate);
        uint64_t v25 = 72;
        goto LABEL_39;
      case 7u:
        unint64_t v24 = objc_alloc_init(PDDPDate);
        uint64_t v25 = 32;
LABEL_39:
        objc_storeStrong((id *)(a1 + v25), v24);
        if (!PBReaderPlaceMark() || (PDDPDateReadFrom((uint64_t)v24, a2) & 1) == 0) {
          goto LABEL_72;
        }
        goto LABEL_54;
      case 8u:
        uint64_t v22 = PBReaderReadString();
        uint64_t v23 = 16;
        goto LABEL_56;
      case 9u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v28 = 0;
        *(unsigned char *)(a1 + 96) |= 4u;
        while (2)
        {
          unint64_t v29 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v29 == -1 || v29 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v30 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v29);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v29 + 1;
            v28 |= (unint64_t)(v30 & 0x7F) << v26;
            if (v30 < 0)
            {
              v26 += 7;
              BOOL v9 = v27++ >= 9;
              if (v9)
              {
                uint64_t v28 = 0;
                goto LABEL_69;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v28 = 0;
        }
LABEL_69:
        *(unsigned char *)(a1 + 92) = v28 != 0;
        goto LABEL_70;
      case 0xAu:
        unint64_t v24 = objc_alloc_init(PDDPActivityReport);
        objc_storeStrong((id *)(a1 + 56), v24);
        goto LABEL_52;
      case 0xBu:
        unint64_t v24 = objc_alloc_init(PDDPActivityReport);
        [(id)a1 addAdditionalReports:v24];
LABEL_52:
        if PBReaderPlaceMark() && (sub_1000B67A8((uint64_t)v24, a2))
        {
LABEL_54:
          PBReaderRecallMark();

LABEL_70:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }
LABEL_72:

        return 0;
      case 0xCu:
        uint64_t v22 = PBReaderReadString();
        uint64_t v23 = 64;
LABEL_56:
        CFStringRef v31 = *(void **)(a1 + v23);
        *(void *)(a1 + v23) = v22;

        goto LABEL_70;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_70;
    }
  }
}

id sub_10015FEC4(id result, BOOL a2, void *a3)
{
  if (result)
  {
    id v5 = result;
    id v6 = a3;
    unint64_t v7 = objc_alloc_init(PDBoolProperty);
    sub_100075F30((uint64_t)v7, v6);

    if (v7) {
      v7->_value = a2;
    }
    id v8 = [v5 insertOrUpdateObject:v7];

    return v8;
  }
  return result;
}

id sub_10015FF5C(id result, int64_t a2, void *a3)
{
  if (result)
  {
    id v5 = result;
    id v6 = a3;
    unint64_t v7 = objc_alloc_init(PDIntegerProperty);
    sub_100075F30((uint64_t)v7, v6);

    if (v7) {
      v7->_value = a2;
    }
    id v8 = [v5 insertOrUpdateObject:v7];

    return v8;
  }
  return result;
}

id sub_10015FFF4(id result, void *a2, double a3)
{
  if (result)
  {
    id v5 = result;
    id v6 = a2;
    unint64_t v7 = objc_alloc_init(PDDoubleProperty);
    sub_100075F30((uint64_t)v7, v6);

    if (v7) {
      v7->_value = a3;
    }
    id v8 = [v5 insertOrUpdateObject:v7];

    return v8;
  }
  return result;
}

double sub_10016008C(void *a1, void *a2)
{
  if (!a1) {
    return 0.0;
  }
  id v3 = a1;
  id v4 = a2;
  uint64_t v5 = objc_opt_class();
  id v10 = v4;
  id v6 = +[NSArray arrayWithObjects:&v10 count:1];

  [v3 select:v5 where:@"name = ?" bindings:v6];
  unint64_t v7 = (double *)objc_claimAutoreleasedReturnValue();

  if (v7) {
    double v8 = v7[2];
  }
  else {
    double v8 = 0.0;
  }

  return v8;
}

id sub_10016018C(id result, void *a2, void *a3)
{
  if (result)
  {
    id v5 = result;
    id v6 = a3;
    id v7 = a2;
    double v8 = objc_alloc_init(PDStringProperty);
    sub_100075F30((uint64_t)v8, v6);

    if (v8) {
      objc_storeStrong((id *)&v8->_value, a2);
    }

    id v9 = [v5 insertOrUpdateObject:v8];
    return v9;
  }
  return result;
}

id sub_100160238(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  if (a1)
  {
    id v6 = a1;
    id v7 = a3;
    double v8 = objc_alloc_init(PDDateProperty);
    sub_100075F30((uint64_t)v8, v7);

    if (v8) {
      objc_setProperty_nonatomic_copy(v8, v9, v5, 16);
    }
    id v10 = [v6 insertOrUpdateObject:v8];
  }
  else
  {
    id v10 = 0;
  }

  return v10;
}

id sub_1001602E8(void *a1, void *a2)
{
  if (a1)
  {
    id v3 = a1;
    id v4 = a2;
    uint64_t v5 = objc_opt_class();
    id v11 = v4;
    id v6 = +[NSArray arrayWithObjects:&v11 count:1];
    id v7 = [v3 select:v5 where:@"name = ?" bindings:v6];

    if (v7) {
      double v8 = (void *)v7[2];
    }
    else {
      double v8 = 0;
    }
    id v9 = v8;
  }
  else
  {
    id v9 = 0;
  }

  return v9;
}

id sub_1001603F8(id result, void *a2, void *a3)
{
  if (result)
  {
    id v5 = result;
    id v6 = a3;
    id v7 = a2;
    double v8 = objc_alloc_init(PDGenericProperty);
    sub_100075F30((uint64_t)v8, v6);

    id v9 = v7;
    if (v8)
    {
      objc_storeStrong((id *)&v8->_value, a2);
      data = v8->_data;
      v8->_data = 0;
    }
    id v11 = [v5 insertOrUpdateObject:v8];

    return v11;
  }
  return result;
}

uint64_t sub_10016142C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        char v12 = 0;
        unsigned int v13 = 0;
        uint64_t v14 = 0;
        *(unsigned char *)(a1 + 92) |= 1u;
        while (1)
        {
          unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v15 == -1 || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
          v14 |= (unint64_t)(v16 & 0x7F) << v12;
          if ((v16 & 0x80) == 0) {
            goto LABEL_47;
          }
          v12 += 7;
          BOOL v9 = v13++ >= 9;
          if (v9)
          {
            LODWORD(v14) = 0;
            goto LABEL_49;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_47:
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_49:
        *(_DWORD *)(a1 + 88) = v14;
        goto LABEL_42;
      case 2u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 48;
        goto LABEL_41;
      case 3u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 56;
        goto LABEL_41;
      case 4u:
        id v17 = objc_alloc_init(PDDPDate);
        uint64_t v20 = 24;
        goto LABEL_36;
      case 5u:
        id v17 = objc_alloc_init(PDDPDate);
        uint64_t v20 = 32;
        goto LABEL_36;
      case 6u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 80;
        goto LABEL_41;
      case 7u:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 16;
        goto LABEL_41;
      case 8u:
        id v17 = objc_alloc_init(PDDPDate);
        uint64_t v20 = 64;
        goto LABEL_36;
      case 9u:
        id v17 = objc_alloc_init(PDDPDate);
        uint64_t v20 = 72;
LABEL_36:
        objc_storeStrong((id *)(a1 + v20), v17);
        if PBReaderPlaceMark() && (PDDPDateReadFrom((uint64_t)v17, a2))
        {
          PBReaderRecallMark();
LABEL_39:

LABEL_42:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

        return 0;
      case 0xAu:
        uint64_t v18 = PBReaderReadString();
        uint64_t v19 = 40;
LABEL_41:
        char v21 = *(void **)(a1 + v19);
        *(void *)(a1 + v19) = v18;

        goto LABEL_42;
      default:
        if ((v6 >> 3) == 100)
        {
          PBReaderReadString();
          id v17 = (PDDPDate *)objc_claimAutoreleasedReturnValue();
          if (v17) {
            [(id)a1 addClassIds:v17];
          }
          goto LABEL_39;
        }
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_42;
    }
  }
}

uint64_t sub_1001626D8(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    if ((v6 >> 3) == 1)
    {
      uint64_t v12 = PBReaderReadString();
      unsigned int v13 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = v12;
    }
    else
    {
      uint64_t result = PBReaderSkipValueWithTag();
      if (!result) {
        return result;
      }
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

BOOL sub_100162B40(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0;
      while (1)
      {
        unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0;
          int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0;
      }
LABEL_13:
      if (v10 || (v6 & 7) == 4) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      if ((v6 >> 3) == 2) {
        break;
      }
      if ((v6 >> 3) == 1)
      {
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 8;
LABEL_21:
        uint64_t v14 = *(void **)(a1 + v13);
        *(void *)(a1 + v13) = v12;

        goto LABEL_23;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_23:
      if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
    }
    uint64_t v12 = PBReaderReadString();
    uint64_t v13 = 16;
    goto LABEL_21;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

id sub_1001630C8(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    int v4 = PDSQLiteColumnWithName((uint64_t)[a1 SQLiteRow], v3);
    if (v4 == -1)
    {
      a1 = 0;
    }
    else
    {
      a1 = sub_100069308((uint64_t)[a1 SQLiteRow], v4);
    }
  }

  return a1;
}

BOOL sub_100163D6C(char *a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 24;
        goto LABEL_25;
      case 2u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 56;
        goto LABEL_25;
      case 3u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 48;
        goto LABEL_25;
      case 4u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 40;
        goto LABEL_25;
      case 5u:
        uint64_t v12 = PBReaderReadString();
        uint64_t v13 = 64;
LABEL_25:
        uint64_t v14 = *(PDDPDate **)&a1[v13];
        *(void *)&a1[v13] = v12;
        goto LABEL_34;
      case 6u:
        uint64_t v14 = objc_alloc_init(PDDPDate);
        uint64_t v15 = 8;
        goto LABEL_28;
      case 7u:
        uint64_t v14 = objc_alloc_init(PDDPDate);
        uint64_t v15 = 16;
LABEL_28:
        objc_storeStrong((id *)&a1[v15], v14);
        if (!PBReaderPlaceMark() || (PDDPDateReadFrom((uint64_t)v14, a2) & 1) == 0) {
          goto LABEL_37;
        }
        goto LABEL_33;
      case 8u:
        uint64_t v14 = objc_alloc_init(PDDPStateChangePayload);
        [a1 addStateChangePayloads:v14];
        if PBReaderPlaceMark() && (sub_1000AAE60((uint64_t)v14, a2))
        {
LABEL_33:
          PBReaderRecallMark();
LABEL_34:

LABEL_35:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }
LABEL_37:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_35;
    }
  }
}

void *sub_1001654D4(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    v12.receiver = a1;
    v12.super_class = (Class)PDRolePrivilege;
    a1 = objc_msgSendSuper2(&v12, "init");
    if (a1)
    {
      id v7 = [v5 copy];
      char v8 = (void *)a1[1];
      a1[1] = v7;

      id v9 = [v6 copy];
      int v10 = (void *)a1[2];
      a1[2] = v9;
    }
  }

  return a1;
}

uint64_t sub_100167638(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    if ((v6 >> 3) == 2)
    {
      char v17 = 0;
      unsigned int v18 = 0;
      uint64_t v19 = 0;
      *(unsigned char *)(a1 + 16) |= 1u;
      while (1)
      {
        unint64_t v20 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v20 == -1 || v20 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v21 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v20);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v20 + 1;
        v19 |= (unint64_t)(v21 & 0x7F) << v17;
        if ((v21 & 0x80) == 0) {
          goto LABEL_40;
        }
        v17 += 7;
        BOOL v9 = v18++ >= 9;
        if (v9)
        {
          LODWORD(v19) = 0;
          goto LABEL_42;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_40:
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        LODWORD(v19) = 0;
      }
LABEL_42:
      *(_DWORD *)(a1 + 8) = v19;
    }
    else if ((v6 >> 3) == 1)
    {
      char v12 = 0;
      unsigned int v13 = 0;
      uint64_t v14 = 0;
      *(unsigned char *)(a1 + 16) |= 2u;
      while (1)
      {
        unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v15 == -1 || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v16 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
        v14 |= (unint64_t)(v16 & 0x7F) << v12;
        if ((v16 & 0x80) == 0) {
          goto LABEL_36;
        }
        v12 += 7;
        BOOL v9 = v13++ >= 9;
        if (v9)
        {
          uint64_t v14 = 0;
          goto LABEL_38;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_36:
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        uint64_t v14 = 0;
      }
LABEL_38:
      *(unsigned char *)(a1 + 12) = v14 != 0;
    }
    else
    {
      uint64_t result = PBReaderSkipValueWithTag();
      if (!result) {
        return result;
      }
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

uint64_t sub_100167D5C(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = qword_10023E7F8;
  qword_10023E7F8 = (uint64_t)v1;

  return _objc_release_x1(v1, v2);
}

uint64_t sub_100168520(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    unint64_t v12 = v6 >> 3;
    if ((v6 >> 3) == 3)
    {
      char v18 = 0;
      unsigned int v19 = 0;
      uint64_t v20 = 0;
      *(unsigned char *)(a1 + 24) |= 1u;
      while (1)
      {
        unint64_t v21 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v21 == -1 || v21 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v22 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v21);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v21 + 1;
        v20 |= (unint64_t)(v22 & 0x7F) << v18;
        if ((v22 & 0x80) == 0) {
          goto LABEL_48;
        }
        v18 += 7;
        BOOL v9 = v19++ >= 9;
        if (v9)
        {
          uint64_t v20 = 0;
          goto LABEL_50;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_48:
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        uint64_t v20 = 0;
      }
LABEL_50:
      *(void *)(a1 + 8) = v20;
    }
    else
    {
      if (v12 == 2)
      {
        char v23 = 0;
        unsigned int v24 = 0;
        uint64_t v15 = 0;
        *(unsigned char *)(a1 + 24) |= 4u;
        while (1)
        {
          unint64_t v25 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v25 == -1 || v25 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v26 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v25);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v25 + 1;
          v15 |= (unint64_t)(v26 & 0x7F) << v23;
          if ((v26 & 0x80) == 0) {
            goto LABEL_52;
          }
          v23 += 7;
          BOOL v9 = v24++ >= 9;
          if (v9)
          {
            LODWORD(v15) = 0;
            goto LABEL_54;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_52:
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v15) = 0;
        }
LABEL_54:
        uint64_t v28 = 20;
      }
      else
      {
        if (v12 != 1)
        {
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
        }
        char v13 = 0;
        unsigned int v14 = 0;
        uint64_t v15 = 0;
        *(unsigned char *)(a1 + 24) |= 2u;
        while (1)
        {
          unint64_t v16 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v16 == -1 || v16 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v17 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v16);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v16 + 1;
          v15 |= (unint64_t)(v17 & 0x7F) << v13;
          if ((v17 & 0x80) == 0) {
            goto LABEL_44;
          }
          v13 += 7;
          BOOL v9 = v14++ >= 9;
          if (v9)
          {
            LODWORD(v15) = 0;
            goto LABEL_46;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_44:
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v15) = 0;
        }
LABEL_46:
        uint64_t v28 = 16;
      }
      *(_DWORD *)(a1 + v28) = v15;
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

id *sub_100169320(id *a1, void *a2, objc_class *a3, void *a4)
{
  id v8 = a2;
  id v9 = a4;
  if (a1)
  {
    v16.receiver = a1;
    v16.super_class = (Class)PDDeletedEntityID;
    int v10 = (id *)objc_msgSendSuper2(&v16, "init");
    a1 = v10;
    if (v10)
    {
      objc_storeStrong(v10 + 3, a2);
      uint64_t v11 = +[NSDate date];
      id v12 = a1[2];
      a1[2] = (id)v11;

      uint64_t v13 = NSStringFromClass(a3);
      id v14 = a1[1];
      a1[1] = (id)v13;

      objc_storeStrong(a1 + 4, a4);
    }
  }

  return a1;
}

void sub_100169690(void *a1)
{
  if (a1)
  {
    uint64_t v2 = +[NSDate dateWithTimeIntervalSinceNow:-604800.0];
    uint64_t v3 = objc_opt_class();
    unsigned int v5 = v2;
    char v4 = +[NSArray arrayWithObjects:&v5 count:1];
    [a1 deleteAll:v3 where:@"deletedAtDate < ?" bindings:v4];
  }
}

id sub_10016975C(void *a1, void *a2)
{
  id v3 = a2;
  char v4 = v3;
  id v5 = 0;
  if (a1 && v3)
  {
    uint64_t v9 = 0;
    int v10 = &v9;
    uint64_t v11 = 0x3032000000;
    id v12 = sub_10000B804;
    uint64_t v13 = sub_10000B61C;
    id v14 = 0;
    id v15 = v3;
    unint64_t v6 = +[NSArray arrayWithObjects:&v15 count:1];
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    void v8[2] = sub_1001698EC;
    void v8[3] = &unk_1001F1F28;
    void v8[4] = &v9;
    sub_100007540(a1, @"select S.objectID from CLSSurvey as S join CLSSurveyAnswerItem as AI on AI.surveyID = S.objectID and AI.objectID = ?", 1, v6, v8);

    id v5 = (id)v10[5];
    _Block_object_dispose(&v9, 8);
  }

  return v5;
}

void sub_1001698CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1001698EC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_100003BF0(a2, @"objectID");
  uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v5 = *(void *)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  return _objc_release_x1(v3, v5);
}

uint64_t sub_100169D78(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (2)
    {
      if (!*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error))
      {
        char v4 = 0;
        unsigned int v5 = 0;
        unint64_t v6 = 0;
        while (1)
        {
          unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
          v6 |= (unint64_t)(v8 & 0x7F) << v4;
          if ((v8 & 0x80) == 0) {
            goto LABEL_11;
          }
          v4 += 7;
          BOOL v9 = v5++ >= 9;
          if (v9)
          {
            unint64_t v6 = 0;
            int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
            goto LABEL_13;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          unint64_t v6 = 0;
        }
LABEL_13:
        if (v10) {
          BOOL v11 = 1;
        }
        else {
          BOOL v11 = (v6 & 7) == 4;
        }
        if (!v11)
        {
          switch((v6 >> 3))
          {
            case 1u:
              char v12 = 0;
              unsigned int v13 = 0;
              uint64_t v14 = 0;
              *(unsigned char *)(a1 + 48) |= 1u;
              break;
            case 2u:
              uint64_t v18 = PBReaderReadString();
              uint64_t v19 = 8;
              goto LABEL_31;
            case 3u:
              uint64_t v18 = PBReaderReadString();
              uint64_t v19 = 32;
              goto LABEL_31;
            case 4u:
              uint64_t v18 = PBReaderReadString();
              uint64_t v19 = 24;
              goto LABEL_31;
            case 5u:
              uint64_t v18 = PBReaderReadString();
              uint64_t v19 = 40;
LABEL_31:
              uint64_t v20 = *(void **)(a1 + v19);
              *(void *)(a1 + v19) = v18;

              goto LABEL_36;
            default:
              uint64_t result = PBReaderSkipValueWithTag();
              if (!result) {
                return result;
              }
LABEL_36:
              if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
                return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
              }
              continue;
          }
          while (1)
          {
            unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            if (v15 == -1 || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
              break;
            }
            char v16 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
            v14 |= (unint64_t)(v16 & 0x7F) << v12;
            if ((v16 & 0x80) == 0) {
              goto LABEL_33;
            }
            v12 += 7;
            BOOL v9 = v13++ >= 9;
            if (v9)
            {
              LODWORD(v14) = 0;
              goto LABEL_35;
            }
          }
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_33:
          if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            LODWORD(v14) = 0;
          }
LABEL_35:
          *(_DWORD *)(a1 + 16) = v14;
          goto LABEL_36;
        }
      }
      break;
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

id sub_10016B0FC(id a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    char v4 = objc_opt_new();
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    _DWORD v7[2] = sub_10016B280;
    v7[3] = &unk_1001F2F00;
    void v7[4] = a1;
    id v8 = v3;
    id v9 = v4;
    id v5 = v4;
    sub_10000749C(a1, v7);
    a1 = [v5 copy];
  }

  return a1;
}

BOOL sub_10016B204(void *a1)
{
  if (!a1) {
    return 0;
  }
  id v1 = [a1 dueDate];
  if (v1)
  {
    uint64_t v2 = +[NSDate date];
    BOOL v3 = [v1 compare:v2] == (id)-1;
  }
  else
  {
    BOOL v3 = 0;
  }

  return v3;
}

void sub_10016B280(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  BOOL v3 = +[NSArray arrayWithObjects:&v6 count:1];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10016B378;
  void v4[3] = &unk_1001F2ED8;
  id v5 = *(id *)(a1 + 48);
  sub_100007540(v2, @"select distinct classID from CLSHandoutRecipient where parentObjectID = ?", 1, v3, v4);
}

void sub_10016B378(uint64_t a1, uint64_t *a2)
{
  sub_100003BF0(a2, @"classID");
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  [*(id *)(a1 + 32) addObject:v3];
}

id sub_10016B3DC(id a1, void *a2)
{
  id v2 = a1;
  if (a1)
  {
    char v12 = a2;
    id v3 = a2;
    char v4 = +[NSArray arrayWithObjects:&v12 count:1];
    id v5 = objc_opt_new();
    uint64_t v6 = objc_opt_class();
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    void v10[2] = sub_10016B530;
    v10[3] = &unk_1001F3590;
    void v10[4] = v2;
    id v7 = v5;
    id v11 = v7;
    [v2 selectAll:v6 where:@"dueDate NOT NULL AND dueDate < ?" bindings:v4 block:v10];
    id v8 = v11;
    id v2 = v7;
  }

  return v2;
}

void sub_10016B530(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (objc_msgSend(*(id *)(a1 + 32), "isIncompleteHandout:")) {
    [*(id *)(a1 + 40) addObject:v3];
  }
}

BOOL sub_10016B700(BOOL result, void *a2)
{
  if (result)
  {
    id v2 = (void *)result;
    id v3 = a2;
    uint64_t v4 = objc_opt_class();
    v7[0] = v3;
    v7[1] = &off_10020AFE0;
    id v5 = +[NSArray arrayWithObjects:v7 count:2];

    id v6 = [v2 count:v4 where:@"parentObjectID = ? AND type=?" bindings:v5];
    return v6 != 0;
  }
  return result;
}

id sub_10016B7D0(id a1, void *a2, void *a3)
{
  id v5 = a2;
  if (a1)
  {
    id v6 = a3;
    id v7 = objc_opt_new();
    uint64_t v8 = objc_opt_class();
    id v16 = v6;
    id v9 = +[NSArray arrayWithObjects:&v16 count:1];
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    v13[2] = sub_10016B944;
    v13[3] = &unk_1001F61F8;
    void v13[4] = a1;
    id v14 = v5;
    id v10 = v7;
    id v15 = v10;
    [a1 selectAll:v8 where:@"parentObjectID = ?" bindings:v9 block:v13];

    id v11 = v15;
    a1 = v10;
  }

  return a1;
}

void sub_10016B944(uint64_t a1, void *a2)
{
  id v10 = a2;
  uint64_t v4 = *(void **)(a1 + 32);
  id v5 = [v10 objectID];
  id v6 = sub_10015A0B0(v4, v5, *(void **)(a1 + 40), 1);

  if (v6)
  {
    id v7 = [v6 state];
    self;
    if (v7 == (id)2)
    {
      uint64_t v8 = *(void **)(a1 + 48);
      id v9 = [v10 objectID];
      [v8 addObject:v9];
    }
  }
}

void *sub_10016BA2C(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  if (a1)
  {
    uint64_t v9 = 0;
    id v10 = &v9;
    uint64_t v11 = 0x2020000000;
    uint64_t v12 = 0;
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_10016BB18;
    v6[3] = &unk_1001F33F0;
    void v6[4] = a1;
    id v7 = v3;
    uint64_t v8 = &v9;
    sub_10000749C(a1, v6);
    a1 = (void *)v10[3];

    _Block_object_dispose(&v9, 8);
  }

  return a1;
}

void sub_10016BB00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10016BB18(void *a1)
{
  id v2 = (void *)a1[4];
  uint64_t v5 = a1[5];
  id v3 = +[NSArray arrayWithObjects:&v5 count:1];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10016BC04;
  void v4[3] = &unk_1001F1F28;
  void v4[4] = a1[6];
  sub_100007540(v2, @"select CS.state from CLSCollaborationState as CS join CLSHandout as H on H.objectID = CS.parentObjectID and H.objectID = ?", 1, v3, v4);
}

void sub_10016BC04(uint64_t a1, uint64_t *a2)
{
  sub_100003BF0(a2, @"state");
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = [v3 integerValue];
}

uint64_t sub_10016D764(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v10 = v5++ >= 9;
      if (v10)
      {
        unint64_t v6 = 0;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 72;
        goto LABEL_93;
      case 2u:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 112;
        goto LABEL_93;
      case 3u:
        id v15 = objc_alloc_init(PDDPDate);
        uint64_t v16 = 48;
        goto LABEL_25;
      case 4u:
        id v15 = objc_alloc_init(PDDPDate);
        uint64_t v16 = 56;
LABEL_25:
        objc_storeStrong((id *)(a1 + v16), v15);
        if (!PBReaderPlaceMark() || (PDDPDateReadFrom((uint64_t)v15, a2) & 1) == 0) {
          goto LABEL_166;
        }
        goto LABEL_67;
      case 5u:
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        *(_WORD *)(a1 + 168) |= 0x400u;
        while (2)
        {
          uint64_t v20 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v21 = v20 + 1;
          if (v20 == -1 || v21 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v22 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v20);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v21;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if (v22 < 0)
            {
              v17 += 7;
              BOOL v10 = v18++ >= 9;
              if (v10)
              {
                LODWORD(v19) = 0;
                goto LABEL_120;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v19) = 0;
        }
LABEL_120:
        uint64_t v74 = 160;
        goto LABEL_157;
      case 6u:
        char v23 = 0;
        unsigned int v24 = 0;
        uint64_t v19 = 0;
        *(_WORD *)(a1 + 168) |= 0x200u;
        while (2)
        {
          uint64_t v25 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v26 = v25 + 1;
          if (v25 == -1 || v26 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v27 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v25);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v26;
            v19 |= (unint64_t)(v27 & 0x7F) << v23;
            if (v27 < 0)
            {
              v23 += 7;
              BOOL v10 = v24++ >= 9;
              if (v10)
              {
                LODWORD(v19) = 0;
                goto LABEL_124;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v19) = 0;
        }
LABEL_124:
        uint64_t v74 = 156;
        goto LABEL_157;
      case 7u:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 120;
        goto LABEL_93;
      case 8u:
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v19 = 0;
        *(_WORD *)(a1 + 168) |= 8u;
        while (2)
        {
          uint64_t v30 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v32 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v30);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v31;
            v19 |= (unint64_t)(v32 & 0x7F) << v28;
            if (v32 < 0)
            {
              v28 += 7;
              BOOL v10 = v29++ >= 9;
              if (v10)
              {
                LODWORD(v19) = 0;
                goto LABEL_128;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v19) = 0;
        }
LABEL_128:
        uint64_t v74 = 64;
        goto LABEL_157;
      case 9u:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 24;
        goto LABEL_93;
      case 0xAu:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v19 = 0;
        *(_WORD *)(a1 + 168) |= 4u;
        while (2)
        {
          uint64_t v35 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v36 = v35 + 1;
          if (v35 == -1 || v36 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v37 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v35);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v36;
            v19 |= (unint64_t)(v37 & 0x7F) << v33;
            if (v37 < 0)
            {
              v33 += 7;
              BOOL v10 = v34++ >= 9;
              if (v10)
              {
                LODWORD(v19) = 0;
                goto LABEL_132;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v19) = 0;
        }
LABEL_132:
        uint64_t v74 = 32;
        goto LABEL_157;
      case 0xBu:
        char v38 = 0;
        unsigned int v39 = 0;
        uint64_t v19 = 0;
        *(_WORD *)(a1 + 168) |= 0x10u;
        while (2)
        {
          uint64_t v40 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v41 = v40 + 1;
          if (v40 == -1 || v41 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v42 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v40);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v41;
            v19 |= (unint64_t)(v42 & 0x7F) << v38;
            if (v42 < 0)
            {
              v38 += 7;
              BOOL v10 = v39++ >= 9;
              if (v10)
              {
                LODWORD(v19) = 0;
                goto LABEL_136;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v19) = 0;
        }
LABEL_136:
        uint64_t v74 = 68;
        goto LABEL_157;
      case 0xCu:
        id v15 = objc_alloc_init(PDDPMultipleChoiceOptionItem);
        [(id)a1 addOptionItems:v15];
        if PBReaderPlaceMark() && (sub_100131F48((uint64_t)v15, a2))
        {
LABEL_67:
          PBReaderRecallMark();
LABEL_68:

LABEL_158:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }
LABEL_166:

        return 0;
      case 0xDu:
        char v43 = 0;
        unsigned int v44 = 0;
        uint64_t v19 = 0;
        *(_WORD *)(a1 + 168) |= 0x100u;
        while (2)
        {
          uint64_t v45 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v47 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v45);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v46;
            v19 |= (unint64_t)(v47 & 0x7F) << v43;
            if (v47 < 0)
            {
              v43 += 7;
              BOOL v10 = v44++ >= 9;
              if (v10)
              {
                LODWORD(v19) = 0;
                goto LABEL_140;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v19) = 0;
        }
LABEL_140:
        uint64_t v74 = 152;
        goto LABEL_157;
      case 0xEu:
        *(_WORD *)(a1 + 168) |= 2u;
        unint64_t v48 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v48 <= 0xFFFFFFFFFFFFFFF7 && v48 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v49 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v48);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v48 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v49 = 0;
        }
        uint64_t v75 = 16;
        goto LABEL_164;
      case 0xFu:
        *(_WORD *)(a1 + 168) |= 1u;
        unint64_t v50 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v50 <= 0xFFFFFFFFFFFFFFF7 && v50 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v49 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v50);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v50 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v49 = 0;
        }
        uint64_t v75 = 8;
LABEL_164:
        *(void *)(a1 + v75) = v49;
        goto LABEL_158;
      case 0x10u:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 144;
        goto LABEL_93;
      case 0x11u:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 128;
        goto LABEL_93;
      case 0x12u:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 136;
        goto LABEL_93;
      case 0x13u:
        char v51 = 0;
        unsigned int v52 = 0;
        uint64_t v19 = 0;
        *(_WORD *)(a1 + 168) |= 0x80u;
        while (2)
        {
          uint64_t v53 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v54 = v53 + 1;
          if (v53 == -1 || v54 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v55 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v53);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v54;
            v19 |= (unint64_t)(v55 & 0x7F) << v51;
            if (v55 < 0)
            {
              v51 += 7;
              BOOL v10 = v52++ >= 9;
              if (v10)
              {
                LODWORD(v19) = 0;
                goto LABEL_144;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v19) = 0;
        }
LABEL_144:
        uint64_t v74 = 96;
        goto LABEL_157;
      case 0x14u:
        uint64_t v13 = PBReaderReadString();
        uint64_t v14 = 88;
LABEL_93:
        uint64_t v56 = *(void **)(a1 + v14);
        *(void *)(a1 + v14) = v13;

        goto LABEL_158;
      case 0x15u:
        char v57 = 0;
        unsigned int v58 = 0;
        uint64_t v59 = 0;
        *(_WORD *)(a1 + 168) |= 0x800u;
        while (2)
        {
          uint64_t v60 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v61 = v60 + 1;
          if (v60 == -1 || v61 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v62 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v60);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v61;
            v59 |= (unint64_t)(v62 & 0x7F) << v57;
            if (v62 < 0)
            {
              v57 += 7;
              BOOL v10 = v58++ >= 9;
              if (v10)
              {
                uint64_t v59 = 0;
                goto LABEL_148;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v59 = 0;
        }
LABEL_148:
        *(unsigned char *)(a1 + 164) = v59 != 0;
        goto LABEL_158;
      case 0x16u:
        char v63 = 0;
        unsigned int v64 = 0;
        uint64_t v19 = 0;
        *(_WORD *)(a1 + 168) |= 0x40u;
        while (2)
        {
          uint64_t v65 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v66 = v65 + 1;
          if (v65 == -1 || v66 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v67 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v65);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v66;
            v19 |= (unint64_t)(v67 & 0x7F) << v63;
            if (v67 < 0)
            {
              v63 += 7;
              BOOL v10 = v64++ >= 9;
              if (v10)
              {
                LODWORD(v19) = 0;
                goto LABEL_152;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v19) = 0;
        }
LABEL_152:
        uint64_t v74 = 84;
        goto LABEL_157;
      case 0x17u:
        char v68 = 0;
        unsigned int v69 = 0;
        uint64_t v19 = 0;
        *(_WORD *)(a1 + 168) |= 0x20u;
        while (2)
        {
          uint64_t v70 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v71 = v70 + 1;
          if (v70 == -1 || v71 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v72 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v70);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v71;
            v19 |= (unint64_t)(v72 & 0x7F) << v68;
            if (v72 < 0)
            {
              v68 += 7;
              BOOL v10 = v69++ >= 9;
              if (v10)
              {
                LODWORD(v19) = 0;
                goto LABEL_156;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v19) = 0;
        }
LABEL_156:
        uint64_t v74 = 80;
LABEL_157:
        *(_DWORD *)(a1 + v74) = v19;
        goto LABEL_158;
      default:
        if ((v6 >> 3) == 100)
        {
          PBReaderReadString();
          id v15 = (PDDPDate *)objc_claimAutoreleasedReturnValue();
          if (v15) {
            [(id)a1 addClassIds:v15];
          }
          goto LABEL_68;
        }
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_158;
    }
  }
}

id *sub_100170BF0(id *a1, void *a2, objc_class *a3, void *a4, objc_class *a5)
{
  id v10 = a2;
  id v11 = a4;
  if (a1)
  {
    v18.receiver = a1;
    v18.super_class = (Class)PDMissingEntityReference;
    uint64_t v12 = (id *)objc_msgSendSuper2(&v18, "init");
    a1 = v12;
    if (v12)
    {
      objc_storeStrong(v12 + 3, a2);
      uint64_t v13 = NSStringFromClass(a3);
      id v14 = a1[1];
      a1[1] = (id)v13;

      if (v11)
      {
        objc_storeStrong(a1 + 4, a4);
        uint64_t v15 = NSStringFromClass(a5);
        id v16 = a1[2];
        a1[2] = (id)v15;
      }
    }
  }

  return a1;
}

NSString **sub_100170CD0(NSString **a1)
{
  if (a1)
  {
    NSClassFromString(a1[1]);
    a1 = (NSString **)objc_claimAutoreleasedReturnValue();
    uint64_t v1 = vars8;
  }
  return a1;
}

uint64_t _convertErrorToNSError(_:)()
{
  return _convertErrorToNSError(_:)();
}

void __swiftcall URL._bridgeToObjectiveC()(NSURL *__return_ptr retstr)
{
}

uint64_t URL.init(string:)()
{
  return URL.init(string:)();
}

uint64_t type metadata accessor for URL()
{
  return type metadata accessor for URL();
}

uint64_t dispatch thunk of CKCodeOperation.codeOperationResultBlock.setter()
{
  return dispatch thunk of CKCodeOperation.codeOperationResultBlock.setter();
}

uint64_t CKCodeOperation.init(functionName:request:)()
{
  return CKCodeOperation.init(functionName:request:)();
}

uint64_t dispatch thunk of CKCodeOperation.perRecordResultBlock.setter()
{
  return dispatch thunk of CKCodeOperation.perRecordResultBlock.setter();
}

uint64_t dispatch thunk of CKCodeOperation.perRecordProgressBlock.setter()
{
  return dispatch thunk of CKCodeOperation.perRecordProgressBlock.setter();
}

uint64_t Ckcode_RecordTransport.init()()
{
  return Ckcode_RecordTransport.init()();
}

uint64_t type metadata accessor for Ckcode_RecordTransport()
{
  return type metadata accessor for Ckcode_RecordTransport();
}

uint64_t UnknownStorage.traverse<A>(visitor:)()
{
  return UnknownStorage.traverse<A>(visitor:)();
}

uint64_t UnknownStorage.init()()
{
  return UnknownStorage.init()();
}

uint64_t type metadata accessor for UnknownStorage()
{
  return type metadata accessor for UnknownStorage();
}

uint64_t _MessageImplementationBase._protobuf_generated_isEqualTo(other:)()
{
  return _MessageImplementationBase._protobuf_generated_isEqualTo(other:)();
}

uint64_t dispatch thunk of Decoder.nextFieldNumber()()
{
  return dispatch thunk of Decoder.nextFieldNumber()();
}

uint64_t dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)()
{
  return dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedStringField(value:)()
{
  return dispatch thunk of Decoder.decodeRepeatedStringField(value:)();
}

uint64_t dispatch thunk of Decoder.decodeSingularStringField(value:)()
{
  return dispatch thunk of Decoder.decodeSingularStringField(value:)();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)()
{
  return dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)();
}

uint64_t dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)()
{
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
}

uint64_t Message.isInitialized.getter()
{
  return Message.isInitialized.getter();
}

uint64_t Message.hash(into:)()
{
  return Message.hash(into:)();
}

uint64_t static Message.with(_:)()
{
  return static Message.with(_:)();
}

uint64_t dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)()
{
  return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
}

uint64_t dispatch thunk of Visitor.visitRepeatedStringField(value:fieldNumber:)()
{
  return dispatch thunk of Visitor.visitRepeatedStringField(value:fieldNumber:)();
}

uint64_t dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)()
{
  return dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)();
}

uint64_t dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)()
{
  return dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)();
}

uint64_t dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)()
{
  return dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
}

uint64_t type metadata accessor for _NameMap.NameDescription()
{
  return type metadata accessor for _NameMap.NameDescription();
}

uint64_t _NameMap.init(dictionaryLiteral:)()
{
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t type metadata accessor for _NameMap()
{
  return type metadata accessor for _NameMap();
}

uint64_t dispatch thunk of Hashable.hash(into:)()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t dispatch thunk of static Equatable.== infix(_:_:)()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

NSString __swiftcall String._bridgeToObjectiveC()()
{
  return (NSString)String._bridgeToObjectiveC()();
}

uint64_t static String._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

Swift::Void __swiftcall String.append(_:)(Swift::String a1)
{
}

uint64_t specialized Array._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray __swiftcall Array._bridgeToObjectiveC()()
{
  return (NSArray)Array._bridgeToObjectiveC()();
}

uint64_t static Array._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t specialized Array._endMutation()()
{
  return specialized Array._endMutation()();
}

uint64_t specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t CKCodeService.add<A, B>(_:)()
{
  return CKCodeService.add<A, B>(_:)();
}

uint64_t CKRecord.init(_:)()
{
  return CKRecord.init(_:)();
}

uint64_t type metadata accessor for Optional()
{
  return type metadata accessor for Optional();
}

uint64_t specialized _ArrayBuffer._getElementSlowPath(_:)()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t _CocoaArrayWrapper.endIndex.getter()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t _stringCompareWithSmolCheck(_:_:expecting:)()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t Hasher.init(_seed:)()
{
  return Hasher.init(_seed:)();
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt a1)
{
}

Swift::Int __swiftcall Hasher._finalize()()
{
  return Hasher._finalize()();
}

uint64_t BRRegisterInitialSyncHandlerForContainer()
{
  return _BRRegisterInitialSyncHandlerForContainer();
}

uint64_t BiomeLibrary()
{
  return _BiomeLibrary();
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  return _CFAbsoluteTimeGetCurrent();
}

CFMutableDictionaryRef CFDictionaryCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks)
{
  return _CFDictionaryCreateMutable(allocator, capacity, keyCallBacks, valueCallBacks);
}

const void *__cdecl CFDictionaryGetValue(CFDictionaryRef theDict, const void *key)
{
  return _CFDictionaryGetValue(theDict, key);
}

void CFDictionarySetValue(CFMutableDictionaryRef theDict, const void *key, const void *value)
{
}

void CFRelease(CFTypeRef cf)
{
}

CFUserNotificationRef CFUserNotificationCreate(CFAllocatorRef allocator, CFTimeInterval timeout, CFOptionFlags flags, SInt32 *error, CFDictionaryRef dictionary)
{
  return _CFUserNotificationCreate(allocator, timeout, flags, error, dictionary);
}

SInt32 CFUserNotificationReceiveResponse(CFUserNotificationRef userNotification, CFTimeInterval timeout, CFOptionFlags *responseFlags)
{
  return _CFUserNotificationReceiveResponse(userNotification, timeout, responseFlags);
}

uint64_t CLSAdoptPersona()
{
  return _CLSAdoptPersona();
}

uint64_t CLSAnswerActionFromString()
{
  return _CLSAnswerActionFromString();
}

uint64_t CLSAnswerStateFromString()
{
  return _CLSAnswerStateFromString();
}

uint64_t CLSAnswerTypeFromString()
{
  return _CLSAnswerTypeFromString();
}

uint64_t CLSArchivedHandoutClasses()
{
  return _CLSArchivedHandoutClasses();
}

uint64_t CLSAssetDownloadProgressNotifiableInterface()
{
  return _CLSAssetDownloadProgressNotifiableInterface();
}

uint64_t CLSAssetUploadProgressNotifiableInterface()
{
  return _CLSAssetUploadProgressNotifiableInterface();
}

uint64_t CLSBinaryValueTypeFromString()
{
  return _CLSBinaryValueTypeFromString();
}

uint64_t CLSClientInterface()
{
  return _CLSClientInterface();
}

uint64_t CLSClientRemoteObjectInterface()
{
  return _CLSClientRemoteObjectInterface();
}

uint64_t CLSCollaborationStateClasses()
{
  return _CLSCollaborationStateClasses();
}

uint64_t CLSCollectionItemTypeFromString()
{
  return _CLSCollectionItemTypeFromString();
}

uint64_t CLSCollectionTypeFromString()
{
  return _CLSCollectionTypeFromString();
}

uint64_t CLSContextClasses()
{
  return _CLSContextClasses();
}

uint64_t CLSContextTypeFromDefaultName()
{
  return _CLSContextTypeFromDefaultName();
}

uint64_t CLSCurrentNSQualityOfService()
{
  return _CLSCurrentNSQualityOfService();
}

uint64_t CLSCurrentPersonaUniqueIdentifier()
{
  return _CLSCurrentPersonaUniqueIdentifier();
}

uint64_t CLSDashboardClasses()
{
  return _CLSDashboardClasses();
}

uint64_t CLSDispatchQueueName()
{
  return _CLSDispatchQueueName();
}

uint64_t CLSEndpointServerInterface()
{
  return _CLSEndpointServerInterface();
}

uint64_t CLSFavoriteTypeFromString()
{
  return _CLSFavoriteTypeFromString();
}

uint64_t CLSHandoutAttachmentTypeFromString()
{
  return _CLSHandoutAttachmentTypeFromString();
}

uint64_t CLSHandoutClasses()
{
  return _CLSHandoutClasses();
}

uint64_t CLSInitLog()
{
  return _CLSInitLog();
}

uint64_t CLSLogDebugCurrentPersona()
{
  return _CLSLogDebugCurrentPersona();
}

uint64_t CLSMultipleChoiceTypeFromString()
{
  return _CLSMultipleChoiceTypeFromString();
}

uint64_t CLSObjectsClasses()
{
  return _CLSObjectsClasses();
}

uint64_t CLSOnboardingClasses()
{
  return _CLSOnboardingClasses();
}

uint64_t CLSOpenResponseTypeFromString()
{
  return _CLSOpenResponseTypeFromString();
}

uint64_t CLSPerformWithPersona()
{
  return _CLSPerformWithPersona();
}

uint64_t CLSPermissionTypeFromString()
{
  return _CLSPermissionTypeFromString();
}

uint64_t CLSPersonalPersonaUniqueIdentifier()
{
  return _CLSPersonalPersonaUniqueIdentifier();
}

uint64_t CLSProgressClasses()
{
  return _CLSProgressClasses();
}

uint64_t CLSQueriableWithoutValidUserClasses()
{
  return _CLSQueriableWithoutValidUserClasses();
}

uint64_t CLSQueryInterface()
{
  return _CLSQueryInterface();
}

uint64_t CLSReportClasses()
{
  return _CLSReportClasses();
}

uint64_t CLSRosterClasses()
{
  return _CLSRosterClasses();
}

uint64_t CLSSaveResponseInterface()
{
  return _CLSSaveResponseInterface();
}

uint64_t CLSSearchClasses()
{
  return _CLSSearchClasses();
}

uint64_t CLSShareTypeFromString()
{
  return _CLSShareTypeFromString();
}

uint64_t CLSSliderAnswerFormatTypeFromString()
{
  return _CLSSliderAnswerFormatTypeFromString();
}

uint64_t CLSSurveyClasses()
{
  return _CLSSurveyClasses();
}

uint64_t CLSSurveyStepTypeFromString()
{
  return _CLSSurveyStepTypeFromString();
}

uint64_t CLSSurveyTypeFromString()
{
  return _CLSSurveyTypeFromString();
}

uint64_t CLSUbiquitousContainerID()
{
  return _CLSUbiquitousContainerID();
}

uint64_t DefaultNameFromContextType()
{
  return _DefaultNameFromContextType();
}

uint64_t DiagnosticLogSubmissionEnabled()
{
  return _DiagnosticLogSubmissionEnabled();
}

uint64_t MKBDeviceUnlockedSinceBoot()
{
  return _MKBDeviceUnlockedSinceBoot();
}

Class NSClassFromString(NSString *aClassName)
{
  return _NSClassFromString(aClassName);
}

uint64_t NSRequestConcreteImplementation()
{
  return _NSRequestConcreteImplementation();
}

NSArray *__cdecl NSSearchPathForDirectoriesInDomains(NSSearchPathDirectory directory, NSSearchPathDomainMask domainMask, BOOL expandTilde)
{
  return _NSSearchPathForDirectoriesInDomains(directory, domainMask, expandTilde);
}

SEL NSSelectorFromString(NSString *aSelectorName)
{
  return _NSSelectorFromString(aSelectorName);
}

uint64_t NSStringFromAuthorizationStatus()
{
  return _NSStringFromAuthorizationStatus();
}

uint64_t NSStringFromBinaryValueType()
{
  return _NSStringFromBinaryValueType();
}

uint64_t NSStringFromCLSAnswerAction()
{
  return _NSStringFromCLSAnswerAction();
}

uint64_t NSStringFromCLSAnswerState()
{
  return _NSStringFromCLSAnswerState();
}

uint64_t NSStringFromCLSAnswerType()
{
  return _NSStringFromCLSAnswerType();
}

uint64_t NSStringFromCLSAuthenticationState()
{
  return _NSStringFromCLSAuthenticationState();
}

uint64_t NSStringFromCLSMultipleChoiceType()
{
  return _NSStringFromCLSMultipleChoiceType();
}

uint64_t NSStringFromCLSSliderAnswerFormatType()
{
  return _NSStringFromCLSSliderAnswerFormatType();
}

uint64_t NSStringFromCLSSurveyStepType()
{
  return _NSStringFromCLSSurveyStepType();
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return _NSStringFromClass(aClass);
}

uint64_t NSStringFromCollectionItemType()
{
  return _NSStringFromCollectionItemType();
}

uint64_t NSStringFromCollectionType()
{
  return _NSStringFromCollectionType();
}

uint64_t NSStringFromDevMode()
{
  return _NSStringFromDevMode();
}

uint64_t NSStringFromFavoriteType()
{
  return _NSStringFromFavoriteType();
}

uint64_t NSStringFromHandoutAttachmentType()
{
  return _NSStringFromHandoutAttachmentType();
}

uint64_t NSStringFromOpenResponseType()
{
  return _NSStringFromOpenResponseType();
}

uint64_t NSStringFromPermissionType()
{
  return _NSStringFromPermissionType();
}

uint64_t NSStringFromSearchOptions()
{
  return _NSStringFromSearchOptions();
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return _NSStringFromSelector(aSelector);
}

uint64_t NSStringFromShareType()
{
  return _NSStringFromShareType();
}

uint64_t NSStringFromSurveyQuestionType()
{
  return _NSStringFromSurveyQuestionType();
}

uint64_t NSStringFromSurveyType()
{
  return _NSStringFromSurveyType();
}

uint64_t PBDataWriterWriteBOOLField()
{
  return _PBDataWriterWriteBOOLField();
}

uint64_t PBDataWriterWriteDataField()
{
  return _PBDataWriterWriteDataField();
}

uint64_t PBDataWriterWriteDoubleField()
{
  return _PBDataWriterWriteDoubleField();
}

uint64_t PBDataWriterWriteInt32Field()
{
  return _PBDataWriterWriteInt32Field();
}

uint64_t PBDataWriterWriteInt64Field()
{
  return _PBDataWriterWriteInt64Field();
}

uint64_t PBDataWriterWriteStringField()
{
  return _PBDataWriterWriteStringField();
}

uint64_t PBDataWriterWriteSubmessage()
{
  return _PBDataWriterWriteSubmessage();
}

uint64_t PBDataWriterWriteUint32Field()
{
  return _PBDataWriterWriteUint32Field();
}

uint64_t PBDataWriterWriteUint64Field()
{
  return _PBDataWriterWriteUint64Field();
}

uint64_t PBReaderPlaceMark()
{
  return _PBReaderPlaceMark();
}

uint64_t PBReaderReadData()
{
  return _PBReaderReadData();
}

uint64_t PBReaderReadString()
{
  return _PBReaderReadString();
}

uint64_t PBReaderRecallMark()
{
  return _PBReaderRecallMark();
}

uint64_t PBReaderSkipValueWithTag()
{
  return _PBReaderSkipValueWithTag();
}

uint64_t PBRepeatedInt32Add()
{
  return _PBRepeatedInt32Add();
}

uint64_t PBRepeatedInt32Clear()
{
  return _PBRepeatedInt32Clear();
}

uint64_t PBRepeatedInt32Copy()
{
  return _PBRepeatedInt32Copy();
}

uint64_t PBRepeatedInt32Hash()
{
  return _PBRepeatedInt32Hash();
}

uint64_t PBRepeatedInt32IsEqual()
{
  return _PBRepeatedInt32IsEqual();
}

uint64_t SurveyQuestionTypeFromString()
{
  return _SurveyQuestionTypeFromString();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

std::bad_array_new_length *__cdecl std::bad_array_new_length::bad_array_new_length(std::bad_array_new_length *this)
{
  return std::bad_array_new_length::bad_array_new_length(this);
}

size_t std::__next_prime(size_t __n)
{
  return std::__next_prime(__n);
}

void std::terminate(void)
{
}

void operator delete(void *__p)
{
  while (1)
    ;
}

void *__cdecl operator new(size_t __sz)
{
  while (1)
    ;
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
}

void *__cxa_allocate_exception(size_t thrown_size)
{
  return ___cxa_allocate_exception(thrown_size);
}

void *__cxa_begin_catch(void *a1)
{
  return ___cxa_begin_catch(a1);
}

void __cxa_throw(void *a1, struct type_info *lptinfo, void (*a3)(void *))
{
}

int *__error(void)
{
  return ___error();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

void dispatch_activate(dispatch_object_t object)
{
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_barrier_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_block_t dispatch_block_create(dispatch_block_flags_t flags, dispatch_block_t block)
{
  return _dispatch_block_create(flags, block);
}

intptr_t dispatch_block_wait(dispatch_block_t block, dispatch_time_t timeout)
{
  return _dispatch_block_wait(block, timeout);
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return _dispatch_get_global_queue(identifier, flags);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return _dispatch_queue_attr_make_with_autorelease_frequency(attr, frequency);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return _dispatch_queue_attr_make_with_qos_class(attr, qos_class, relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return _dispatch_queue_create(label, attr);
}

dispatch_queue_t dispatch_queue_create_with_target_V2(const char *label, dispatch_queue_attr_t attr, dispatch_queue_t target)
{
  return _dispatch_queue_create_with_target_V2(label, attr, target);
}

void dispatch_queue_set_specific(dispatch_queue_t queue, const void *key, void *context, dispatch_function_t destructor)
{
}

void dispatch_resume(dispatch_object_t object)
{
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return _dispatch_source_create(type, handle, mask, queue);
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return _dispatch_time(when, delta);
}

void exit(int a1)
{
}

long double exp2(long double __x)
{
  return _exp2(__x);
}

float exp2f(float a1)
{
  return _exp2f(a1);
}

long double fmod(long double __x, long double __y)
{
  return _fmod(__x, __y);
}

void free(void *a1)
{
}

uint64_t ic()
{
  return _ic();
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id)
{
  return _malloc_type_calloc(count, size, type_id);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return _memcmp(__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

uint32_t notify_cancel(int token)
{
  return _notify_cancel(token);
}

BOOL notify_is_valid_token(int val)
{
  return _notify_is_valid_token(val);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return _notify_register_dispatch(name, out_token, queue, handler);
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

id objc_autorelease(id a1)
{
  return _objc_autorelease(a1);
}

{
}

{
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

id objc_begin_catch(void *exc_buf)
{
  return _objc_begin_catch(exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_end_catch(void)
{
}

void objc_enumerationMutation(id obj)
{
}

void objc_exception_rethrow(void)
{
}

void objc_exception_throw(id exception)
{
}

id objc_getAssociatedObject(id object, const void *key)
{
  return _objc_getAssociatedObject(object, key);
}

id objc_initWeak(id *location, id val)
{
  return _objc_initWeak(location, val);
}

id objc_loadWeakRetained(id *location)
{
  return _objc_loadWeakRetained(location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return _objc_msgSendSuper2(a1, a2);
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_isKindOfClass()
{
  return _objc_opt_isKindOfClass();
}

uint64_t objc_opt_new()
{
  return _objc_opt_new();
}

uint64_t objc_opt_respondsToSelector()
{
  return _objc_opt_respondsToSelector();
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

void objc_removeAssociatedObjects(id object)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

id objc_retainBlock(id a1)
{
  return _objc_retainBlock(a1);
}

void objc_setAssociatedObject(id object, const void *key, id value, void *policy)
{
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return _objc_storeWeak(location, obj);
}

int objc_sync_enter(id obj)
{
  return _objc_sync_enter(obj);
}

int objc_sync_exit(id obj)
{
  return _objc_sync_exit(obj);
}

void objc_terminate(void)
{
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return _objc_unsafeClaimAutoreleasedReturnValue(a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

uint64_t os_state_add_handler()
{
  return _os_state_add_handler();
}

uint64_t os_state_remove_handler()
{
  return _os_state_remove_handler();
}

uint64_t os_transaction_create()
{
  return _os_transaction_create();
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t os_variant_has_internal_diagnostics()
{
  return _os_variant_has_internal_diagnostics();
}

qos_class_t qos_class_self(void)
{
  return _qos_class_self();
}

uint64_t rootless_mkdir_datavault()
{
  return _rootless_mkdir_datavault();
}

uint64_t sandbox_check_by_audit_token()
{
  return _sandbox_check_by_audit_token();
}

int setiopolicy_np(int a1, int a2, int a3)
{
  return _setiopolicy_np(a1, a2, a3);
}

void (__cdecl *__cdecl signal(int a1, void (__cdecl *a2)(int)))(int)
{
  return _signal(a1, a2);
}

int sqlite3_bind_blob(sqlite3_stmt *a1, int a2, const void *a3, int n, void (__cdecl *a5)(void *))
{
  return _sqlite3_bind_blob(a1, a2, a3, n, a5);
}

int sqlite3_bind_double(sqlite3_stmt *a1, int a2, double a3)
{
  return _sqlite3_bind_double(a1, a2, a3);
}

int sqlite3_bind_int64(sqlite3_stmt *a1, int a2, sqlite3_int64 a3)
{
  return _sqlite3_bind_int64(a1, a2, a3);
}

int sqlite3_bind_null(sqlite3_stmt *a1, int a2)
{
  return _sqlite3_bind_null(a1, a2);
}

int sqlite3_bind_text(sqlite3_stmt *a1, int a2, const char *a3, int a4, void (__cdecl *a5)(void *))
{
  return _sqlite3_bind_text(a1, a2, a3, a4, a5);
}

int sqlite3_busy_timeout(sqlite3 *a1, int ms)
{
  return _sqlite3_busy_timeout(a1, ms);
}

int sqlite3_clear_bindings(sqlite3_stmt *a1)
{
  return _sqlite3_clear_bindings(a1);
}

int sqlite3_close(sqlite3 *a1)
{
  return _sqlite3_close(a1);
}

const void *__cdecl sqlite3_column_blob(sqlite3_stmt *a1, int iCol)
{
  return _sqlite3_column_blob(a1, iCol);
}

int sqlite3_column_bytes(sqlite3_stmt *a1, int iCol)
{
  return _sqlite3_column_bytes(a1, iCol);
}

int sqlite3_column_count(sqlite3_stmt *pStmt)
{
  return _sqlite3_column_count(pStmt);
}

double sqlite3_column_double(sqlite3_stmt *a1, int iCol)
{
  return _sqlite3_column_double(a1, iCol);
}

sqlite3_int64 sqlite3_column_int64(sqlite3_stmt *a1, int iCol)
{
  return _sqlite3_column_int64(a1, iCol);
}

const char *__cdecl sqlite3_column_name(sqlite3_stmt *a1, int N)
{
  return _sqlite3_column_name(a1, N);
}

const unsigned __int8 *__cdecl sqlite3_column_text(sqlite3_stmt *a1, int iCol)
{
  return _sqlite3_column_text(a1, iCol);
}

int sqlite3_column_type(sqlite3_stmt *a1, int iCol)
{
  return _sqlite3_column_type(a1, iCol);
}

sqlite3 *__cdecl sqlite3_db_handle(sqlite3_stmt *a1)
{
  return _sqlite3_db_handle(a1);
}

int sqlite3_db_release_memory(sqlite3 *a1)
{
  return _sqlite3_db_release_memory(a1);
}

const char *__cdecl sqlite3_errmsg(sqlite3 *a1)
{
  return _sqlite3_errmsg(a1);
}

int sqlite3_exec(sqlite3 *a1, const char *sql, int (__cdecl *callback)(void *, int, char **, char **), void *a4, char **errmsg)
{
  return _sqlite3_exec(a1, sql, callback, a4, errmsg);
}

int sqlite3_extended_errcode(sqlite3 *db)
{
  return _sqlite3_extended_errcode(db);
}

int sqlite3_file_control(sqlite3 *a1, const char *zDbName, int op, void *a4)
{
  return _sqlite3_file_control(a1, zDbName, op, a4);
}

int sqlite3_finalize(sqlite3_stmt *pStmt)
{
  return _sqlite3_finalize(pStmt);
}

void sqlite3_free(void *a1)
{
}

sqlite3_int64 sqlite3_last_insert_rowid(sqlite3 *a1)
{
  return _sqlite3_last_insert_rowid(a1);
}

int sqlite3_open_v2(const char *filename, sqlite3 **ppDb, int flags, const char *zVfs)
{
  return _sqlite3_open_v2(filename, ppDb, flags, zVfs);
}

int sqlite3_prepare_v2(sqlite3 *db, const char *zSql, int nByte, sqlite3_stmt **ppStmt, const char **pzTail)
{
  return _sqlite3_prepare_v2(db, zSql, nByte, ppStmt, pzTail);
}

int sqlite3_reset(sqlite3_stmt *pStmt)
{
  return _sqlite3_reset(pStmt);
}

const char *__cdecl sqlite3_sql(sqlite3_stmt *pStmt)
{
  return _sqlite3_sql(pStmt);
}

int sqlite3_step(sqlite3_stmt *a1)
{
  return _sqlite3_step(a1);
}

int sqlite3_table_column_metadata(sqlite3 *db, const char *zDbName, const char *zTableName, const char *zColumnName, const char **pzDataType, const char **pzCollSeq, int *pNotNull, int *pPrimaryKey, int *pAutoinc)
{
  return _sqlite3_table_column_metadata(db, zDbName, zTableName, zColumnName, pzDataType, pzCollSeq, pNotNull, pPrimaryKey, pAutoinc);
}

int sqlite3_total_changes(sqlite3 *a1)
{
  return _sqlite3_total_changes(a1);
}

void *__cdecl sqlite3_update_hook(sqlite3 *a1, void (__cdecl *a2)(void *, int, const char *, const char *, sqlite3_int64), void *a3)
{
  return _sqlite3_update_hook(a1, a2, a3);
}

int strcmp(const char *__s1, const char *__s2)
{
  return _strcmp(__s1, __s2);
}

char *__cdecl strerror(int __errnum)
{
  return _strerror(__errnum);
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initClassMetadata2()
{
  return _swift_initClassMetadata2();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

void syslog(int a1, const char *a2, ...)
{
}

int usleep(useconds_t a1)
{
  return _usleep(a1);
}

uint64_t xpc_copy_entitlement_for_self()
{
  return _xpc_copy_entitlement_for_self();
}

const char *__cdecl xpc_string_get_string_ptr(xpc_object_t xstring)
{
  return _xpc_string_get_string_ptr(xstring);
}

uint64_t xpc_transaction_exit_clean()
{
  return _xpc_transaction_exit_clean();
}

id objc_msgSend_App(void *a1, const char *a2, ...)
{
  return _[a1 App];
}

id objc_msgSend_DSLPublisher(void *a1, const char *a2, ...)
{
  return _[a1 DSLPublisher];
}

id objc_msgSend_InFocus(void *a1, const char *a2, ...)
{
  return _[a1 InFocus];
}

id objc_msgSend_JPEGDataForThumbnailForFileAtURL_maxSize_scaleFactor_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "JPEGDataForThumbnailForFileAtURL:maxSize:scaleFactor:error:");
}

id objc_msgSend_JSONObjectWithData_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "JSONObjectWithData:options:error:");
}

id objc_msgSend_SQLiteRow(void *a1, const char *a2, ...)
{
  return _[a1 SQLiteRow];
}

id objc_msgSend_URL(void *a1, const char *a2, ...)
{
  return _[a1 URL];
}

id objc_msgSend_URLByAppendingPathComponent_isDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLByAppendingPathComponent:isDirectory:");
}

id objc_msgSend_URLByAppendingPathExtension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLByAppendingPathExtension:");
}

id objc_msgSend_URLByDeletingLastPathComponent(void *a1, const char *a2, ...)
{
  return _[a1 URLByDeletingLastPathComponent];
}

id objc_msgSend_URLForDirectory_inDomain_appropriateForURL_create_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLForDirectory:inDomain:appropriateForURL:create:error:");
}

id objc_msgSend_URLForResource_withExtension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLForResource:withExtension:");
}

id objc_msgSend_URLForUbiquityContainerIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLForUbiquityContainerIdentifier:");
}

id objc_msgSend_URLQueryAllowedCharacterSet(void *a1, const char *a2, ...)
{
  return _[a1 URLQueryAllowedCharacterSet];
}

id objc_msgSend_URLWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLWithString:");
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return _[a1 UTF8String];
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return _[a1 UUID];
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return _[a1 UUIDString];
}

id objc_msgSend__addDependentObject_to_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addDependentObject:to:");
}

id objc_msgSend__applyCollaborationStateChanges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applyCollaborationStateChanges:");
}

id objc_msgSend__applyStateChangesToParentHandoutEntity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applyStateChangesToParentHandoutEntity:");
}

id objc_msgSend__assertNoActiveStatements(void *a1, const char *a2, ...)
{
  return _[a1 _assertNoActiveStatements];
}

id objc_msgSend__assetCreateOrUpdatePayloadAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_assetCreateOrUpdatePayloadAction:");
}

id objc_msgSend__authorizationStatusActivityWithID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_authorizationStatusActivityWithID:");
}

id objc_msgSend__authorizationStatusForContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_authorizationStatusForContext:");
}

id objc_msgSend__authorizationStatusForContextWithObjectID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_authorizationStatusForContextWithObjectID:");
}

id objc_msgSend__authorizationStatusForHandoutAssignedItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_authorizationStatusForHandoutAssignedItem:");
}

id objc_msgSend__authorizationStatusForObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_authorizationStatusForObject:");
}

id objc_msgSend__buildDependencyHashMap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_buildDependencyHashMap:");
}

id objc_msgSend__buildEventForAttachment_recipientPersonID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_buildEventForAttachment:recipientPersonID:");
}

id objc_msgSend__buildStateChangeForAttachment_ownerPersonID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_buildStateChangeForAttachment:ownerPersonID:");
}

id objc_msgSend__cleanupSavedResponseDirectory(void *a1, const char *a2, ...)
{
  return _[a1 _cleanupSavedResponseDirectory];
}

id objc_msgSend__clientScopedPredicate_forEntityClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clientScopedPredicate:forEntityClass:");
}

id objc_msgSend__cloudDocsContainer(void *a1, const char *a2, ...)
{
  return _[a1 _cloudDocsContainer];
}

id objc_msgSend__cls_searchableTokens(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cls_searchableTokens");
}

id objc_msgSend__cls_stableHash(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cls_stableHash");
}

id objc_msgSend__convertActionToPayloadAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_convertActionToPayloadAction:");
}

id objc_msgSend__createHandoutAssignedItemFrom_withError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createHandoutAssignedItemFrom:withError:");
}

id objc_msgSend__createMainAppContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createMainAppContext:");
}

id objc_msgSend__createRequestTask(void *a1, const char *a2, ...)
{
  return _[a1 _createRequestTask];
}

id objc_msgSend__databaseFileURLs(void *a1, const char *a2, ...)
{
  return _[a1 _databaseFileURLs];
}

id objc_msgSend__databaseInstance(void *a1, const char *a2, ...)
{
  return _[a1 _databaseInstance];
}

id objc_msgSend__delete(void *a1, const char *a2, ...)
{
  return _[a1 _delete];
}

id objc_msgSend__deleteAnswersWithSurveyIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteAnswersWithSurveyIDs:");
}

id objc_msgSend__deleteDeletedEntityWithIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteDeletedEntityWithIDs:");
}

id objc_msgSend__deleteDraftAnswer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteDraftAnswer:");
}

id objc_msgSend__deleteEntity_identity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteEntity:identity:");
}

id objc_msgSend__deleteStateChanges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteStateChanges:");
}

id objc_msgSend__deleteSurvey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteSurvey:");
}

id objc_msgSend__deleteSurveyStep_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteSurveyStep:");
}

id objc_msgSend__deleteSyncItemsWithIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteSyncItemsWithIDs:");
}

id objc_msgSend__deleteWithPayload_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteWithPayload:error:");
}

id objc_msgSend__entitiesChangedSinceLastTrigger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_entitiesChangedSinceLastTrigger:");
}

id objc_msgSend__entityCountsChangedSinceLastTrigger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_entityCountsChangedSinceLastTrigger:");
}

id objc_msgSend__executeSQL_cache_error_bindingHandler_enumerationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_executeSQL:cache:error:bindingHandler:enumerationHandler:");
}

id objc_msgSend__executeSQL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_executeSQL:error:");
}

id objc_msgSend__executeSQL_error_retryIfBusy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_executeSQL:error:retryIfBusy:");
}

id objc_msgSend__fetchExistingStateForAttachment_withOwnerPersonID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchExistingStateForAttachment:withOwnerPersonID:");
}

id objc_msgSend__fetchOrgAdminUserRecordIDWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchOrgAdminUserRecordIDWithCompletion:");
}

id objc_msgSend__fetchUserRecordIDWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchUserRecordIDWithCompletion:");
}

id objc_msgSend__findDependencyObjects_from_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_findDependencyObjects:from:");
}

id objc_msgSend__forceNoCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_forceNoCache:");
}

id objc_msgSend__incrementCounterForKey_inDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_incrementCounterForKey:inDictionary:");
}

id objc_msgSend__init(void *a1, const char *a2, ...)
{
  return _[a1 _init];
}

id objc_msgSend__initCommonPropsWithDatabaseRow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initCommonPropsWithDatabaseRow:");
}

id objc_msgSend__initCommonPropsWithRecord_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initCommonPropsWithRecord:");
}

id objc_msgSend__initWithTargetClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithTargetClass:");
}

id objc_msgSend__initializeSubsystemsIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _initializeSubsystemsIfNeeded];
}

id objc_msgSend__insertObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_insertObject:");
}

id objc_msgSend__insertOrUpdateArchivedHandout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_insertOrUpdateArchivedHandout:");
}

id objc_msgSend__insertOrUpdateArchivedSurveyStep_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_insertOrUpdateArchivedSurveyStep:");
}

id objc_msgSend__insertOrUpdateCollectionItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_insertOrUpdateCollectionItem:");
}

id objc_msgSend__insertOrUpdateEntity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_insertOrUpdateEntity:");
}

id objc_msgSend__insertOrUpdateSurveyAnswer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_insertOrUpdateSurveyAnswer:");
}

id objc_msgSend__insertOrUpdateSurveyStep_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_insertOrUpdateSurveyStep:");
}

id objc_msgSend__integerValueForPragma_databaseName_value_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_integerValueForPragma:databaseName:value:error:");
}

id objc_msgSend__invalidateAndDeleteManagers(void *a1, const char *a2, ...)
{
  return _[a1 _invalidateAndDeleteManagers];
}

id objc_msgSend__invalidateObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_invalidateObserver:");
}

id objc_msgSend__logAttachmentUpdate_forID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logAttachmentUpdate:forID:");
}

id objc_msgSend__logHandoutTypeUpdate_forID_isInNotifiedHandoutIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logHandoutTypeUpdate:forID:isInNotifiedHandoutIDs:");
}

id objc_msgSend__markObject_as_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_markObject:as:");
}

id objc_msgSend__needsFullSync(void *a1, const char *a2, ...)
{
  return _[a1 _needsFullSync];
}

id objc_msgSend__notifyOfDataChange_changeTime_changedRowCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyOfDataChange:changeTime:changedRowCount:");
}

id objc_msgSend__orgAdminUserRecordID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_orgAdminUserRecordID:");
}

id objc_msgSend__perform(void *a1, const char *a2, ...)
{
  return _[a1 _perform];
}

id objc_msgSend__performQuery_querySpecification_issueServerRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performQuery:querySpecification:issueServerRequest:completion:");
}

id objc_msgSend__populateDependencySet_ofOperation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_populateDependencySet:ofOperation:");
}

id objc_msgSend__populateKeypathValueMap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_populateKeypathValueMap:");
}

id objc_msgSend__populateReportItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_populateReportItem:");
}

id objc_msgSend__postDidInsertNotificationWithEntity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_postDidInsertNotificationWithEntity:");
}

id objc_msgSend__postWillChangeNotificationWithEntity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_postWillChangeNotificationWithEntity:");
}

id objc_msgSend__prepareStatementForSQL_cache_error_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_prepareStatementForSQL:cache:error:usingBlock:");
}

id objc_msgSend__progressEventsForContext_eventType_activityID_activityItemID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_progressEventsForContext:eventType:activityID:activityItemID:");
}

id objc_msgSend__progressEventsWithAssignedItem_eventType_activityID_activityItemID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_progressEventsWithAssignedItem:eventType:activityID:activityItemID:");
}

id objc_msgSend__pruneAuthTreeAtNodeWithAssignedItemStatusID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pruneAuthTreeAtNodeWithAssignedItemStatusID:");
}

id objc_msgSend__pruneAuthTreeAtNodeWithContextStatusID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pruneAuthTreeAtNodeWithContextStatusID:");
}

id objc_msgSend__registerBagKeys(void *a1, const char *a2, ...)
{
  return _[a1 _registerBagKeys];
}

id objc_msgSend__reinitializeManagers(void *a1, const char *a2, ...)
{
  return _[a1 _reinitializeManagers];
}

id objc_msgSend__resetStatement_finalize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resetStatement:finalize:");
}

id objc_msgSend__ringIndexForIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ringIndexForIndex:");
}

id objc_msgSend__ringIndexMinusOne_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ringIndexMinusOne:");
}

id objc_msgSend__ringIndexPlusOne_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ringIndexPlusOne:");
}

id objc_msgSend__saveEventsForHandoutAttachmentID_recipientPersonID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_saveEventsForHandoutAttachmentID:recipientPersonID:");
}

id objc_msgSend__saveInsightEventsFor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_saveInsightEventsFor:");
}

id objc_msgSend__scheduleDrain(void *a1, const char *a2, ...)
{
  return _[a1 _scheduleDrain];
}

id objc_msgSend__scheduleWithNotificationData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scheduleWithNotificationData:");
}

id objc_msgSend__schoolworkUbiquitousContainerURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_schoolworkUbiquitousContainerURL:");
}

id objc_msgSend__sendClientEntitiesChangedAdded_updated_deleted_updatedMatchingPredicate_updatedNotMatchingPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendClientEntitiesChangedAdded:updated:deleted:updatedMatchingPredicate:updatedNotMatchingPredicate:");
}

id objc_msgSend__setAuthorizationForAttachmentWithObjectID_shouldAuthorize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setAuthorizationForAttachmentWithObjectID:shouldAuthorize:");
}

id objc_msgSend__setCurrentUser_withRoleLocations_orRole_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setCurrentUser:withRoleLocations:orRole:");
}

id objc_msgSend__setEnabledTopics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setEnabledTopics:");
}

id objc_msgSend__setOpportunisticTopics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setOpportunisticTopics:");
}

id objc_msgSend__setPragma_integerValue_withDatabaseName_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setPragma:integerValue:withDatabaseName:error:");
}

id objc_msgSend__setQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setQueue:");
}

id objc_msgSend__setSettingsVisibilityFlagMacOS(void *a1, const char *a2, ...)
{
  return _[a1 _setSettingsVisibilityFlagMacOS];
}

id objc_msgSend__shouldRetry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldRetry:");
}

id objc_msgSend__shouldSkipGeneratingPayload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldSkipGeneratingPayload:");
}

id objc_msgSend__simulateHTTPResponseWithURL_statusCode_headers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_simulateHTTPResponseWithURL:statusCode:headers:");
}

id objc_msgSend__statementForSQL_cache_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_statementForSQL:cache:error:");
}

id objc_msgSend__statusID_deniedCount_authCount_forContextPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_statusID:deniedCount:authCount:forContextPath:");
}

id objc_msgSend__statusID_deniedCount_authCount_forHandoutAssignedItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_statusID:deniedCount:authCount:forHandoutAssignedItem:");
}

id objc_msgSend__stepStatement_hasRow_resultCode_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stepStatement:hasRow:resultCode:error:");
}

id objc_msgSend__updateAssetStatusUsingPendingCLSSyncItemsWithIDs_status_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateAssetStatusUsingPendingCLSSyncItemsWithIDs:status:");
}

id objc_msgSend__updateBiomeClientWithDatabase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateBiomeClientWithDatabase:");
}

id objc_msgSend__updateFileProtectionAttribs(void *a1, const char *a2, ...)
{
  return _[a1 _updateFileProtectionAttribs];
}

id objc_msgSend__updateObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateObject:");
}

id objc_msgSend__updateOrgAdminUserRecordID(void *a1, const char *a2, ...)
{
  return _[a1 _updateOrgAdminUserRecordID];
}

id objc_msgSend__updateUserRecordID(void *a1, const char *a2, ...)
{
  return _[a1 _updateUserRecordID];
}

id objc_msgSend__userRecordID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_userRecordID:");
}

id objc_msgSend__verifyDatabaseOpenAndReturnError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_verifyDatabaseOpenAndReturnError:");
}

id objc_msgSend__zoneWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_zoneWithName:");
}

id objc_msgSend_aa_altDSID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aa_altDSID");
}

id objc_msgSend_aa_isManagedAppleID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aa_isManagedAppleID");
}

id objc_msgSend_aa_isPrimaryEmailVerified(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aa_isPrimaryEmailVerified");
}

id objc_msgSend_aa_personID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aa_personID");
}

id objc_msgSend_abort(void *a1, const char *a2, ...)
{
  return _[a1 abort];
}

id objc_msgSend_abortWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "abortWithError:");
}

id objc_msgSend_absoluteString(void *a1, const char *a2, ...)
{
  return _[a1 absoluteString];
}

id objc_msgSend_absoluteURL(void *a1, const char *a2, ...)
{
  return _[a1 absoluteURL];
}

id objc_msgSend_acceptContentType(void *a1, const char *a2, ...)
{
  return _[a1 acceptContentType];
}

id objc_msgSend_acceptsPayloadType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acceptsPayloadType:");
}

id objc_msgSend_accountInfo(void *a1, const char *a2, ...)
{
  return _[a1 accountInfo];
}

id objc_msgSend_accountPersonInfo(void *a1, const char *a2, ...)
{
  return _[a1 accountPersonInfo];
}

id objc_msgSend_accountPersonaUniqueIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 accountPersonaUniqueIdentifier];
}

id objc_msgSend_accountStatus(void *a1, const char *a2, ...)
{
  return _[a1 accountStatus];
}

id objc_msgSend_action(void *a1, const char *a2, ...)
{
  return _[a1 action];
}

id objc_msgSend_actionForPayload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionForPayload:");
}

id objc_msgSend_activityDomainFlagsAllowChanges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityDomainFlagsAllowChanges:");
}

id objc_msgSend_activityID(void *a1, const char *a2, ...)
{
  return _[a1 activityID];
}

id objc_msgSend_activityItemInfo(void *a1, const char *a2, ...)
{
  return _[a1 activityItemInfo];
}

id objc_msgSend_addAdditionalItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAdditionalItems:");
}

id objc_msgSend_addAdditionalReports_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAdditionalReports:");
}

id objc_msgSend_addAdminRequestAccountIds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAdminRequestAccountIds:");
}

id objc_msgSend_addAnswerItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAnswerItem:");
}

id objc_msgSend_addAttachmentDetails_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAttachmentDetails:");
}

id objc_msgSend_addBundleIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addBundleIDs:");
}

id objc_msgSend_addClassIds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addClassIds:");
}

id objc_msgSend_addConflictingPersonIds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addConflictingPersonIds:");
}

id objc_msgSend_addContentMetadata_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addContentMetadata:");
}

id objc_msgSend_addContents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addContents:");
}

id objc_msgSend_addContextPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addContextPath:");
}

id objc_msgSend_addDashboardApps_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addDashboardApps:");
}

id objc_msgSend_addDefaultSyncZoneNames_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addDefaultSyncZoneNames:");
}

id objc_msgSend_addDependency_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addDependency:");
}

id objc_msgSend_addDownloadObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addDownloadObserver:");
}

id objc_msgSend_addEmailDomains_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addEmailDomains:");
}

id objc_msgSend_addEndpoints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addEndpoints:");
}

id objc_msgSend_addEventItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addEventItems:");
}

id objc_msgSend_addEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addEvents:");
}

id objc_msgSend_addExcludeAppIds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addExcludeAppIds:");
}

id objc_msgSend_addExtraInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addExtraInfo:");
}

id objc_msgSend_addFilePresenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addFilePresenter:");
}

id objc_msgSend_addFilterQueryForZoneNamed_toSearchRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addFilterQueryForZoneNamed:toSearchRequest:");
}

id objc_msgSend_addHandoutAuthorizedMetaInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addHandoutAuthorizedMetaInfo:");
}

id objc_msgSend_addHandoutIds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addHandoutIds:");
}

id objc_msgSend_addHostAllowList_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addHostAllowList:");
}

id objc_msgSend_addInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addInfo:");
}

id objc_msgSend_addInfoDict_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addInfoDict:");
}

id objc_msgSend_addInstructionAssets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addInstructionAssets:");
}

id objc_msgSend_addItemIds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addItemIds:");
}

id objc_msgSend_addItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addItems:");
}

id objc_msgSend_addLocationIds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addLocationIds:");
}

id objc_msgSend_addLocations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addLocations:");
}

id objc_msgSend_addNotificationRequest_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addNotificationRequest:withCompletionHandler:");
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObject:");
}

id objc_msgSend_addObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObjectsFromArray:");
}

id objc_msgSend_addObserver_forKeyPath_options_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:forKeyPath:options:context:");
}

id objc_msgSend_addObserver_notificationName_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:notificationName:block:");
}

id objc_msgSend_addObserver_selector_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:selector:name:object:");
}

id objc_msgSend_addOnFinishBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOnFinishBlock:");
}

id objc_msgSend_addOperation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOperation:");
}

id objc_msgSend_addOptionItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOptionItems:");
}

id objc_msgSend_addOtherButtonInfos_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOtherButtonInfos:");
}

id objc_msgSend_addPayload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addPayload:");
}

id objc_msgSend_addPersonLinks_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addPersonLinks:");
}

id objc_msgSend_addPrivileges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addPrivileges:");
}

id objc_msgSend_addPropertiesWithDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addPropertiesWithDictionary:");
}

id objc_msgSend_addQueryPayload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addQueryPayload:");
}

id objc_msgSend_addRecipientGroups_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addRecipientGroups:");
}

id objc_msgSend_addRecipientIds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addRecipientIds:");
}

id objc_msgSend_addRecipientPersonIds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addRecipientPersonIds:");
}

id objc_msgSend_addReportErrorBlockToOperation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addReportErrorBlockToOperation:");
}

id objc_msgSend_addReports_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addReports:");
}

id objc_msgSend_addRequestItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addRequestItems:");
}

id objc_msgSend_addRequestZones_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addRequestZones:");
}

id objc_msgSend_addRequestedLocationIds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addRequestedLocationIds:");
}

id objc_msgSend_addRoleLocations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addRoleLocations:");
}

id objc_msgSend_addRoles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addRoles:");
}

id objc_msgSend_addSearchRequestZones_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSearchRequestZones:");
}

id objc_msgSend_addServerAlerts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addServerAlerts:");
}

id objc_msgSend_addServerRequestHeaders_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addServerRequestHeaders:");
}

id objc_msgSend_addServiceBag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addServiceBag:");
}

id objc_msgSend_addStateChangePayloads_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addStateChangePayloads:");
}

id objc_msgSend_addStates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addStates:");
}

id objc_msgSend_addStringListValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addStringListValue:");
}

id objc_msgSend_addStudentIds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addStudentIds:");
}

id objc_msgSend_addSubscriberForFileURL_withPublishingHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSubscriberForFileURL:withPublishingHandler:");
}

id objc_msgSend_addToCache_expires_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addToCache:expires:");
}

id objc_msgSend_addToFilePresenter(void *a1, const char *a2, ...)
{
  return _[a1 addToFilePresenter];
}

id objc_msgSend_addUploadObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addUploadObserver:");
}

id objc_msgSend_addZoneSubscriptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addZoneSubscriptions:");
}

id objc_msgSend_addZones_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addZones:");
}

id objc_msgSend_additionalActivityReports(void *a1, const char *a2, ...)
{
  return _[a1 additionalActivityReports];
}

id objc_msgSend_additionalItems(void *a1, const char *a2, ...)
{
  return _[a1 additionalItems];
}

id objc_msgSend_additionalItemsAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "additionalItemsAtIndex:");
}

id objc_msgSend_additionalItemsCount(void *a1, const char *a2, ...)
{
  return _[a1 additionalItemsCount];
}

id objc_msgSend_additionalReports(void *a1, const char *a2, ...)
{
  return _[a1 additionalReports];
}

id objc_msgSend_additionalReportsAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "additionalReportsAtIndex:");
}

id objc_msgSend_additionalReportsCount(void *a1, const char *a2, ...)
{
  return _[a1 additionalReportsCount];
}

id objc_msgSend_adminNote(void *a1, const char *a2, ...)
{
  return _[a1 adminNote];
}

id objc_msgSend_adminRequest(void *a1, const char *a2, ...)
{
  return _[a1 adminRequest];
}

id objc_msgSend_adminRequestAccount(void *a1, const char *a2, ...)
{
  return _[a1 adminRequestAccount];
}

id objc_msgSend_adminRequestAccountId(void *a1, const char *a2, ...)
{
  return _[a1 adminRequestAccountId];
}

id objc_msgSend_adminRequestAccountIdsAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adminRequestAccountIdsAtIndex:");
}

id objc_msgSend_adminRequestAccountIdsCount(void *a1, const char *a2, ...)
{
  return _[a1 adminRequestAccountIdsCount];
}

id objc_msgSend_adminRequestId(void *a1, const char *a2, ...)
{
  return _[a1 adminRequestId];
}

id objc_msgSend_adminRequestor(void *a1, const char *a2, ...)
{
  return _[a1 adminRequestor];
}

id objc_msgSend_afterBootstrapWithErrorCompletion_doBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "afterBootstrapWithErrorCompletion:doBlock:");
}

id objc_msgSend_agent(void *a1, const char *a2, ...)
{
  return _[a1 agent];
}

id objc_msgSend_agentCache(void *a1, const char *a2, ...)
{
  return _[a1 agentCache];
}

id objc_msgSend_agentForAsset_database_forUpload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "agentForAsset:database:forUpload:");
}

id objc_msgSend_aida_accountForAltDSID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aida_accountForAltDSID:");
}

id objc_msgSend_ak_addClientInfoHeader(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ak_addClientInfoHeader");
}

id objc_msgSend_alertId(void *a1, const char *a2, ...)
{
  return _[a1 alertId];
}

id objc_msgSend_alertType(void *a1, const char *a2, ...)
{
  return _[a1 alertType];
}

id objc_msgSend_allHTTPHeaderFields(void *a1, const char *a2, ...)
{
  return _[a1 allHTTPHeaderFields];
}

id objc_msgSend_allHeaderFields(void *a1, const char *a2, ...)
{
  return _[a1 allHeaderFields];
}

id objc_msgSend_allKeys(void *a1, const char *a2, ...)
{
  return _[a1 allKeys];
}

id objc_msgSend_allObjects(void *a1, const char *a2, ...)
{
  return _[a1 allObjects];
}

id objc_msgSend_allValues(void *a1, const char *a2, ...)
{
  return _[a1 allValues];
}

id objc_msgSend_allocWithZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allocWithZone:");
}

id objc_msgSend_allowMixedResponseStatusCode(void *a1, const char *a2, ...)
{
  return _[a1 allowMixedResponseStatusCode];
}

id objc_msgSend_allowSharingOutsideOrg(void *a1, const char *a2, ...)
{
  return _[a1 allowSharingOutsideOrg];
}

id objc_msgSend_allowsMultimedia(void *a1, const char *a2, ...)
{
  return _[a1 allowsMultimedia];
}

id objc_msgSend_analyticsOptedIn(void *a1, const char *a2, ...)
{
  return _[a1 analyticsOptedIn];
}

id objc_msgSend_answerChoiceItems(void *a1, const char *a2, ...)
{
  return _[a1 answerChoiceItems];
}

id objc_msgSend_answerFormat(void *a1, const char *a2, ...)
{
  return _[a1 answerFormat];
}

id objc_msgSend_answerFormatObjectId(void *a1, const char *a2, ...)
{
  return _[a1 answerFormatObjectId];
}

id objc_msgSend_answerFormatType(void *a1, const char *a2, ...)
{
  return _[a1 answerFormatType];
}

id objc_msgSend_answerType(void *a1, const char *a2, ...)
{
  return _[a1 answerType];
}

id objc_msgSend_anyObject(void *a1, const char *a2, ...)
{
  return _[a1 anyObject];
}

id objc_msgSend_appBundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 appBundleIdentifier];
}

id objc_msgSend_appIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 appIdentifier];
}

id objc_msgSend_appIdentifierForConnection_withEntitlements_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appIdentifierForConnection:withEntitlements:");
}

id objc_msgSend_appIdentifiersInRequest(void *a1, const char *a2, ...)
{
  return _[a1 appIdentifiersInRequest];
}

id objc_msgSend_appName(void *a1, const char *a2, ...)
{
  return _[a1 appName];
}

id objc_msgSend_appStoreIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 appStoreIdentifier];
}

id objc_msgSend_appendData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendData:");
}

id objc_msgSend_appendFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendFormat:");
}

id objc_msgSend_appendString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendString:");
}

id objc_msgSend_appleID(void *a1, const char *a2, ...)
{
  return _[a1 appleID];
}

id objc_msgSend_appleIDSession(void *a1, const char *a2, ...)
{
  return _[a1 appleIDSession];
}

id objc_msgSend_appleId(void *a1, const char *a2, ...)
{
  return _[a1 appleId];
}

id objc_msgSend_applicationBundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 applicationBundleIdentifier];
}

id objc_msgSend_applicationName(void *a1, const char *a2, ...)
{
  return _[a1 applicationName];
}

id objc_msgSend_applicationState(void *a1, const char *a2, ...)
{
  return _[a1 applicationState];
}

id objc_msgSend_approval(void *a1, const char *a2, ...)
{
  return _[a1 approval];
}

id objc_msgSend_approvalStatus(void *a1, const char *a2, ...)
{
  return _[a1 approvalStatus];
}

id objc_msgSend_apsConnection(void *a1, const char *a2, ...)
{
  return _[a1 apsConnection];
}

id objc_msgSend_apsEnvironmentString(void *a1, const char *a2, ...)
{
  return _[a1 apsEnvironmentString];
}

id objc_msgSend_archivedAnswerChoiceItems(void *a1, const char *a2, ...)
{
  return _[a1 archivedAnswerChoiceItems];
}

id objc_msgSend_archivedAnswerFormat(void *a1, const char *a2, ...)
{
  return _[a1 archivedAnswerFormat];
}

id objc_msgSend_archivedDataWithRootObject_requiringSecureCoding_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "archivedDataWithRootObject:requiringSecureCoding:error:");
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return _[a1 array];
}

id objc_msgSend_arrayByAddingObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayByAddingObjectsFromArray:");
}

id objc_msgSend_arrayWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithArray:");
}

id objc_msgSend_arrayWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithCapacity:");
}

id objc_msgSend_arrayWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObject:");
}

id objc_msgSend_arrayWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:");
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:count:");
}

id objc_msgSend_ascending(void *a1, const char *a2, ...)
{
  return _[a1 ascending];
}

id objc_msgSend_asset(void *a1, const char *a2, ...)
{
  return _[a1 asset];
}

id objc_msgSend_assetURL(void *a1, const char *a2, ...)
{
  return _[a1 assetURL];
}

id objc_msgSend_assetUrl(void *a1, const char *a2, ...)
{
  return _[a1 assetUrl];
}

id objc_msgSend_assetZone(void *a1, const char *a2, ...)
{
  return _[a1 assetZone];
}

id objc_msgSend_assetsPayloadsForStateChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetsPayloadsForStateChange:");
}

id objc_msgSend_assetsToAddOrUpdate(void *a1, const char *a2, ...)
{
  return _[a1 assetsToAddOrUpdate];
}

id objc_msgSend_associateThumbnailsForDocumentAtURL_withDocumentAtURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "associateThumbnailsForDocumentAtURL:withDocumentAtURL:error:");
}

id objc_msgSend_attachment(void *a1, const char *a2, ...)
{
  return _[a1 attachment];
}

id objc_msgSend_attachmentDetails(void *a1, const char *a2, ...)
{
  return _[a1 attachmentDetails];
}

id objc_msgSend_attachmentDetailsAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attachmentDetailsAtIndex:");
}

id objc_msgSend_attachmentDetailsCount(void *a1, const char *a2, ...)
{
  return _[a1 attachmentDetailsCount];
}

id objc_msgSend_attachmentID(void *a1, const char *a2, ...)
{
  return _[a1 attachmentID];
}

id objc_msgSend_attachmentId(void *a1, const char *a2, ...)
{
  return _[a1 attachmentId];
}

id objc_msgSend_attachmentType(void *a1, const char *a2, ...)
{
  return _[a1 attachmentType];
}

id objc_msgSend_attachmentUpdatedTrigger(void *a1, const char *a2, ...)
{
  return _[a1 attachmentUpdatedTrigger];
}

id objc_msgSend_attachmentWithIdentifier_URL_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attachmentWithIdentifier:URL:options:error:");
}

id objc_msgSend_attachmentWithStates_canBeSetToActivityState_ignoreIsLocked_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attachmentWithStates:canBeSetToActivityState:ignoreIsLocked:");
}

id objc_msgSend_attributesOfItemAtPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributesOfItemAtPath:error:");
}

id objc_msgSend_auditToken(void *a1, const char *a2, ...)
{
  return _[a1 auditToken];
}

id objc_msgSend_authStatus(void *a1, const char *a2, ...)
{
  return _[a1 authStatus];
}

id objc_msgSend_authenticationMethod(void *a1, const char *a2, ...)
{
  return _[a1 authenticationMethod];
}

id objc_msgSend_authorID(void *a1, const char *a2, ...)
{
  return _[a1 authorID];
}

id objc_msgSend_availableStorageInBytes(void *a1, const char *a2, ...)
{
  return _[a1 availableStorageInBytes];
}

id objc_msgSend_axmAccountStatus(void *a1, const char *a2, ...)
{
  return _[a1 axmAccountStatus];
}

id objc_msgSend_bagForProfile_profileVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bagForProfile:profileVersion:");
}

id objc_msgSend_base64EncodedStringWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "base64EncodedStringWithOptions:");
}

id objc_msgSend_baseCriteriaPassesWithHandout_database_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "baseCriteriaPassesWithHandout:database:");
}

id objc_msgSend_baseValues(void *a1, const char *a2, ...)
{
  return _[a1 baseValues];
}

id objc_msgSend_binaryValue(void *a1, const char *a2, ...)
{
  return _[a1 binaryValue];
}

id objc_msgSend_bindTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bindTo:");
}

id objc_msgSend_biomeSubscriptionStatus(void *a1, const char *a2, ...)
{
  return _[a1 biomeSubscriptionStatus];
}

id objc_msgSend_blockOperationWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "blockOperationWithBlock:");
}

id objc_msgSend_BOOLForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BOOLForKey:");
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return _[a1 BOOLValue];
}

id objc_msgSend_brItemID(void *a1, const char *a2, ...)
{
  return _[a1 brItemID];
}

id objc_msgSend_brOwnerName(void *a1, const char *a2, ...)
{
  return _[a1 brOwnerName];
}

id objc_msgSend_brShareName(void *a1, const char *a2, ...)
{
  return _[a1 brShareName];
}

id objc_msgSend_brZoneName(void *a1, const char *a2, ...)
{
  return _[a1 brZoneName];
}

id objc_msgSend_br_documentRecordIDWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "br_documentRecordIDWithError:");
}

id objc_msgSend_br_itemID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "br_itemID");
}

id objc_msgSend_bundleForClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleForClass:");
}

id objc_msgSend_bundleID(void *a1, const char *a2, ...)
{
  return _[a1 bundleID];
}

id objc_msgSend_bundleIDs(void *a1, const char *a2, ...)
{
  return _[a1 bundleIDs];
}

id objc_msgSend_bundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 bundleIdentifier];
}

id objc_msgSend_bundleRecordWithBundleIdentifier_allowPlaceholder_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleRecordWithBundleIdentifier:allowPlaceholder:error:");
}

id objc_msgSend_bytes(void *a1, const char *a2, ...)
{
  return _[a1 bytes];
}

id objc_msgSend_cacheAssetURLFromCKRecord_usingAsset_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cacheAssetURLFromCKRecord:usingAsset:error:");
}

id objc_msgSend_cacheThumbnailAssetURLFromCKRecord_usingAsset_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cacheThumbnailAssetURLFromCKRecord:usingAsset:error:");
}

id objc_msgSend_calculateDelta_usage_completionType_isTryAgain_tryAgainDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "calculateDelta:usage:completionType:isTryAgain:tryAgainDate:");
}

id objc_msgSend_calculateDeltaOnAppClose_endDate_attachment_tryAgainDate_database_markDone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "calculateDeltaOnAppClose:endDate:attachment:tryAgainDate:database:markDone:");
}

id objc_msgSend_calendar(void *a1, const char *a2, ...)
{
  return _[a1 calendar];
}

id objc_msgSend_callFinishBlockIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 callFinishBlockIfNeeded];
}

id objc_msgSend_canCopyToDatabase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canCopyToDatabase:");
}

id objc_msgSend_canEnableNoUserMode(void *a1, const char *a2, ...)
{
  return _[a1 canEnableNoUserMode];
}

id objc_msgSend_canParseStreams(void *a1, const char *a2, ...)
{
  return _[a1 canParseStreams];
}

id objc_msgSend_canSkipExecution(void *a1, const char *a2, ...)
{
  return _[a1 canSkipExecution];
}

id objc_msgSend_cancel(void *a1, const char *a2, ...)
{
  return _[a1 cancel];
}

id objc_msgSend_cancelAllOperations(void *a1, const char *a2, ...)
{
  return _[a1 cancelAllOperations];
}

id objc_msgSend_cancelSubscription(void *a1, const char *a2, ...)
{
  return _[a1 cancelSubscription];
}

id objc_msgSend_caseInsensitiveCompare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "caseInsensitiveCompare:");
}

id objc_msgSend_changeHash(void *a1, const char *a2, ...)
{
  return _[a1 changeHash];
}

id objc_msgSend_changeToken(void *a1, const char *a2, ...)
{
  return _[a1 changeToken];
}

id objc_msgSend_changedDomains(void *a1, const char *a2, ...)
{
  return _[a1 changedDomains];
}

id objc_msgSend_changedEntitiesCount(void *a1, const char *a2, ...)
{
  return _[a1 changedEntitiesCount];
}

id objc_msgSend_changedMatchingEntitiesCount(void *a1, const char *a2, ...)
{
  return _[a1 changedMatchingEntitiesCount];
}

id objc_msgSend_characterAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "characterAtIndex:");
}

id objc_msgSend_checkForMissingEntityWithObjectID_forClass_fromEntityWithID_withClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkForMissingEntityWithObjectID:forClass:fromEntityWithID:withClass:");
}

id objc_msgSend_checkForTriggerAtDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkForTriggerAtDate:");
}

id objc_msgSend_checkForiCloudDriveInitialSync(void *a1, const char *a2, ...)
{
  return _[a1 checkForiCloudDriveInitialSync];
}

id objc_msgSend_checkScheduledTask_completionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkScheduledTask:completionType:");
}

id objc_msgSend_checkTriggerNow(void *a1, const char *a2, ...)
{
  return _[a1 checkTriggerNow];
}

id objc_msgSend_childEntitiesExistForClass_parentIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "childEntitiesExistForClass:parentIdentity:");
}

id objc_msgSend_childObjectID(void *a1, const char *a2, ...)
{
  return _[a1 childObjectID];
}

id objc_msgSend_ckOwnerName(void *a1, const char *a2, ...)
{
  return _[a1 ckOwnerName];
}

id objc_msgSend_ckShareRecordName(void *a1, const char *a2, ...)
{
  return _[a1 ckShareRecordName];
}

id objc_msgSend_ckUuid(void *a1, const char *a2, ...)
{
  return _[a1 ckUuid];
}

id objc_msgSend_ckZoneName(void *a1, const char *a2, ...)
{
  return _[a1 ckZoneName];
}

id objc_msgSend_clampToPredefinedTimePeriod_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clampToPredefinedTimePeriod:");
}

id objc_msgSend_classID(void *a1, const char *a2, ...)
{
  return _[a1 classID];
}

id objc_msgSend_classIDFromHandout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "classIDFromHandout:");
}

id objc_msgSend_classId(void *a1, const char *a2, ...)
{
  return _[a1 classId];
}

id objc_msgSend_classIdsAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "classIdsAtIndex:");
}

id objc_msgSend_classIdsCount(void *a1, const char *a2, ...)
{
  return _[a1 classIdsCount];
}

id objc_msgSend_classInfo(void *a1, const char *a2, ...)
{
  return _[a1 classInfo];
}

id objc_msgSend_classKitEnvironment(void *a1, const char *a2, ...)
{
  return _[a1 classKitEnvironment];
}

id objc_msgSend_classLocationIDs(void *a1, const char *a2, ...)
{
  return _[a1 classLocationIDs];
}

id objc_msgSend_classMember(void *a1, const char *a2, ...)
{
  return _[a1 classMember];
}

id objc_msgSend_classMemberId(void *a1, const char *a2, ...)
{
  return _[a1 classMemberId];
}

id objc_msgSend_className(void *a1, const char *a2, ...)
{
  return _[a1 className];
}

id objc_msgSend_classSortDescriptors(void *a1, const char *a2, ...)
{
  return _[a1 classSortDescriptors];
}

id objc_msgSend_classWithClassID_database_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "classWithClassID:database:");
}

id objc_msgSend_classZone(void *a1, const char *a2, ...)
{
  return _[a1 classZone];
}

id objc_msgSend_classroomClassicAdHocModeEnabled(void *a1, const char *a2, ...)
{
  return _[a1 classroomClassicAdHocModeEnabled];
}

id objc_msgSend_cleanUpScheduledTaskTriggers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cleanUpScheduledTaskTriggers:");
}

id objc_msgSend_cleanupAssociatedObjects(void *a1, const char *a2, ...)
{
  return _[a1 cleanupAssociatedObjects];
}

id objc_msgSend_cleanupStaleZoneInfo(void *a1, const char *a2, ...)
{
  return _[a1 cleanupStaleZoneInfo];
}

id objc_msgSend_clearAdditionalItems(void *a1, const char *a2, ...)
{
  return _[a1 clearAdditionalItems];
}

id objc_msgSend_clearAdditionalReports(void *a1, const char *a2, ...)
{
  return _[a1 clearAdditionalReports];
}

id objc_msgSend_clearAdminRequestAccountIds(void *a1, const char *a2, ...)
{
  return _[a1 clearAdminRequestAccountIds];
}

id objc_msgSend_clearAttachmentDetails(void *a1, const char *a2, ...)
{
  return _[a1 clearAttachmentDetails];
}

id objc_msgSend_clearClassIds(void *a1, const char *a2, ...)
{
  return _[a1 clearClassIds];
}

id objc_msgSend_clearConflictingPersonIds(void *a1, const char *a2, ...)
{
  return _[a1 clearConflictingPersonIds];
}

id objc_msgSend_clearContentMetadatas(void *a1, const char *a2, ...)
{
  return _[a1 clearContentMetadatas];
}

id objc_msgSend_clearContents(void *a1, const char *a2, ...)
{
  return _[a1 clearContents];
}

id objc_msgSend_clearContextPaths(void *a1, const char *a2, ...)
{
  return _[a1 clearContextPaths];
}

id objc_msgSend_clearDashboardApps(void *a1, const char *a2, ...)
{
  return _[a1 clearDashboardApps];
}

id objc_msgSend_clearDefaultSyncZoneNames(void *a1, const char *a2, ...)
{
  return _[a1 clearDefaultSyncZoneNames];
}

id objc_msgSend_clearEmailDomains(void *a1, const char *a2, ...)
{
  return _[a1 clearEmailDomains];
}

id objc_msgSend_clearEndpoints(void *a1, const char *a2, ...)
{
  return _[a1 clearEndpoints];
}

id objc_msgSend_clearEventItems(void *a1, const char *a2, ...)
{
  return _[a1 clearEventItems];
}

id objc_msgSend_clearEvents(void *a1, const char *a2, ...)
{
  return _[a1 clearEvents];
}

id objc_msgSend_clearExcludeAppIds(void *a1, const char *a2, ...)
{
  return _[a1 clearExcludeAppIds];
}

id objc_msgSend_clearExtraInfos(void *a1, const char *a2, ...)
{
  return _[a1 clearExtraInfos];
}

id objc_msgSend_clearHandoutAuthorizedMetaInfos(void *a1, const char *a2, ...)
{
  return _[a1 clearHandoutAuthorizedMetaInfos];
}

id objc_msgSend_clearHandoutIds(void *a1, const char *a2, ...)
{
  return _[a1 clearHandoutIds];
}

id objc_msgSend_clearHostAllowLists(void *a1, const char *a2, ...)
{
  return _[a1 clearHostAllowLists];
}

id objc_msgSend_clearInfoDicts(void *a1, const char *a2, ...)
{
  return _[a1 clearInfoDicts];
}

id objc_msgSend_clearInfos(void *a1, const char *a2, ...)
{
  return _[a1 clearInfos];
}

id objc_msgSend_clearInstructionAssets(void *a1, const char *a2, ...)
{
  return _[a1 clearInstructionAssets];
}

id objc_msgSend_clearItemIds(void *a1, const char *a2, ...)
{
  return _[a1 clearItemIds];
}

id objc_msgSend_clearItems(void *a1, const char *a2, ...)
{
  return _[a1 clearItems];
}

id objc_msgSend_clearLocationIds(void *a1, const char *a2, ...)
{
  return _[a1 clearLocationIds];
}

id objc_msgSend_clearLocations(void *a1, const char *a2, ...)
{
  return _[a1 clearLocations];
}

id objc_msgSend_clearOneofValuesForEventDetails(void *a1, const char *a2, ...)
{
  return _[a1 clearOneofValuesForEventDetails];
}

id objc_msgSend_clearOneofValuesForProgressInfo(void *a1, const char *a2, ...)
{
  return _[a1 clearOneofValuesForProgressInfo];
}

id objc_msgSend_clearOneofValuesForZoneInfo(void *a1, const char *a2, ...)
{
  return _[a1 clearOneofValuesForZoneInfo];
}

id objc_msgSend_clearOptionItems(void *a1, const char *a2, ...)
{
  return _[a1 clearOptionItems];
}

id objc_msgSend_clearOtherButtonInfos(void *a1, const char *a2, ...)
{
  return _[a1 clearOtherButtonInfos];
}

id objc_msgSend_clearPayloads(void *a1, const char *a2, ...)
{
  return _[a1 clearPayloads];
}

id objc_msgSend_clearPersonLinks(void *a1, const char *a2, ...)
{
  return _[a1 clearPersonLinks];
}

id objc_msgSend_clearPrivileges(void *a1, const char *a2, ...)
{
  return _[a1 clearPrivileges];
}

id objc_msgSend_clearQueryPayloads(void *a1, const char *a2, ...)
{
  return _[a1 clearQueryPayloads];
}

id objc_msgSend_clearRecipientGroups(void *a1, const char *a2, ...)
{
  return _[a1 clearRecipientGroups];
}

id objc_msgSend_clearRecipientIds(void *a1, const char *a2, ...)
{
  return _[a1 clearRecipientIds];
}

id objc_msgSend_clearRecipientPersonIds(void *a1, const char *a2, ...)
{
  return _[a1 clearRecipientPersonIds];
}

id objc_msgSend_clearReports(void *a1, const char *a2, ...)
{
  return _[a1 clearReports];
}

id objc_msgSend_clearRequestItems(void *a1, const char *a2, ...)
{
  return _[a1 clearRequestItems];
}

id objc_msgSend_clearRequestZones(void *a1, const char *a2, ...)
{
  return _[a1 clearRequestZones];
}

id objc_msgSend_clearRequestedLocationIds(void *a1, const char *a2, ...)
{
  return _[a1 clearRequestedLocationIds];
}

id objc_msgSend_clearRoleLocations(void *a1, const char *a2, ...)
{
  return _[a1 clearRoleLocations];
}

id objc_msgSend_clearRoles(void *a1, const char *a2, ...)
{
  return _[a1 clearRoles];
}

id objc_msgSend_clearSearchRequestZones(void *a1, const char *a2, ...)
{
  return _[a1 clearSearchRequestZones];
}

id objc_msgSend_clearServerAlerts(void *a1, const char *a2, ...)
{
  return _[a1 clearServerAlerts];
}

id objc_msgSend_clearServerRequestHeaders(void *a1, const char *a2, ...)
{
  return _[a1 clearServerRequestHeaders];
}

id objc_msgSend_clearServiceBags(void *a1, const char *a2, ...)
{
  return _[a1 clearServiceBags];
}

id objc_msgSend_clearStateChangePayloads(void *a1, const char *a2, ...)
{
  return _[a1 clearStateChangePayloads];
}

id objc_msgSend_clearStatementCache(void *a1, const char *a2, ...)
{
  return _[a1 clearStatementCache];
}

id objc_msgSend_clearStringListValues(void *a1, const char *a2, ...)
{
  return _[a1 clearStringListValues];
}

id objc_msgSend_clearStudentIds(void *a1, const char *a2, ...)
{
  return _[a1 clearStudentIds];
}

id objc_msgSend_clearTriggers(void *a1, const char *a2, ...)
{
  return _[a1 clearTriggers];
}

id objc_msgSend_clearZoneSubscriptions(void *a1, const char *a2, ...)
{
  return _[a1 clearZoneSubscriptions];
}

id objc_msgSend_clearZones(void *a1, const char *a2, ...)
{
  return _[a1 clearZones];
}

id objc_msgSend_client(void *a1, const char *a2, ...)
{
  return _[a1 client];
}

id objc_msgSend_clientConfig(void *a1, const char *a2, ...)
{
  return _[a1 clientConfig];
}

id objc_msgSend_clientRemote_deliverObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientRemote_deliverObject:");
}

id objc_msgSend_clientRemote_downloadCompleted_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientRemote_downloadCompleted:error:");
}

id objc_msgSend_clientRemote_downloadProgressFraction_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientRemote_downloadProgressFraction:error:");
}

id objc_msgSend_clientRemote_entitiesChangedAdded_updated_deleted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientRemote_entitiesChangedAdded:updated:deleted:");
}

id objc_msgSend_clientRemote_entitiesChangedUpdatedMatchingPredicate_updatedNotMatchingPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientRemote_entitiesChangedUpdatedMatchingPredicate:updatedNotMatchingPredicate:");
}

id objc_msgSend_clientRemote_finishWithEntitiesChangedSince_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientRemote_finishWithEntitiesChangedSince:");
}

id objc_msgSend_clientRemote_finishWithOffset_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientRemote_finishWithOffset:error:");
}

id objc_msgSend_clientRemote_invalidate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientRemote_invalidate");
}

id objc_msgSend_clientRemote_itemChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientRemote_itemChanged:");
}

id objc_msgSend_clientRemote_saveDone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientRemote_saveDone:");
}

id objc_msgSend_clientRemote_uploadCompleted_url_thumbnailURL_relativePathWithinContainer_ubiquitousContainerName_brItemID_brOwnerName_brZoneName_brShareName_fractionUploaded_isTemporary_isStaged_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientRemote_uploadCompleted:url:thumbnailURL:relativePathWithinContainer:ubiquitousContainerName:brItemID:brOwnerName:brZoneName:brShareName:fractionUploaded:isTemporary:isStaged:error:");
}

id objc_msgSend_clientRemote_uploadProgressFraction_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientRemote_uploadProgressFraction:error:");
}

id objc_msgSend_close(void *a1, const char *a2, ...)
{
  return _[a1 close];
}

id objc_msgSend_closeAndReturnError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "closeAndReturnError:");
}

id objc_msgSend_closeSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "closeSession:");
}

id objc_msgSend_cloudContainer(void *a1, const char *a2, ...)
{
  return _[a1 cloudContainer];
}

id objc_msgSend_cloudDatabase(void *a1, const char *a2, ...)
{
  return _[a1 cloudDatabase];
}

id objc_msgSend_clsErrorCode(void *a1, const char *a2, ...)
{
  return _[a1 clsErrorCode];
}

id objc_msgSend_clsErrorCodeForAuthenticationFailure(void *a1, const char *a2, ...)
{
  return _[a1 clsErrorCodeForAuthenticationFailure];
}

id objc_msgSend_cls_assignError_code_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cls_assignError:code:description:");
}

id objc_msgSend_cls_assignError_code_format_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cls_assignError:code:format:");
}

id objc_msgSend_cls_assignError_fromError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cls_assignError:fromError:");
}

id objc_msgSend_cls_createDirectoryIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cls_createDirectoryIfNeeded:");
}

id objc_msgSend_cls_createErrorWithCode_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cls_createErrorWithCode:description:");
}

id objc_msgSend_cls_createErrorWithCode_errorObject_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cls_createErrorWithCode:errorObject:description:");
}

id objc_msgSend_cls_createErrorWithCode_format_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cls_createErrorWithCode:format:");
}

id objc_msgSend_cls_createErrorWithCode_successfulObjects_underlyingErrors_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cls_createErrorWithCode:successfulObjects:underlyingErrors:description:");
}

id objc_msgSend_cls_createErrorWithCode_underlyingError_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cls_createErrorWithCode:underlyingError:description:");
}

id objc_msgSend_cls_createShareIfNeededWithOrgAdminUserRecordID_userRecordID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cls_createShareIfNeededWithOrgAdminUserRecordID:userRecordID:completion:");
}

id objc_msgSend_cls_debug_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cls_debug:");
}

id objc_msgSend_cls_deleteFileAtExpectedURL_containerURL_itemID_ownerName_zoneName_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cls_deleteFileAtExpectedURL:containerURL:itemID:ownerName:zoneName:completion:");
}

id objc_msgSend_cls_fileExists(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cls_fileExists");
}

id objc_msgSend_cls_getEligibleAccount_isDataSeparated_personaUniqueIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cls_getEligibleAccount:isDataSeparated:personaUniqueIdentifier:");
}

id objc_msgSend_cls_info_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cls_info:");
}

id objc_msgSend_cls_isConstraintViolation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cls_isConstraintViolation");
}

id objc_msgSend_cls_isParentOfURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cls_isParentOfURL:");
}

id objc_msgSend_cls_isRetryable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cls_isRetryable:");
}

id objc_msgSend_cls_log_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cls_log:");
}

id objc_msgSend_cls_normalizedPredicate_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cls_normalizedPredicate:error:");
}

id objc_msgSend_cls_notice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cls_notice:");
}

id objc_msgSend_cls_pathRelativeToURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cls_pathRelativeToURL:");
}

id objc_msgSend_cls_removeCachedResourceValueForKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cls_removeCachedResourceValueForKeys:");
}

id objc_msgSend_cls_secureUnarchiveObjectOfClass_withData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cls_secureUnarchiveObjectOfClass:withData:");
}

id objc_msgSend_cls_secureUnarchiveObjectOfClasses_withData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cls_secureUnarchiveObjectOfClasses:withData:");
}

id objc_msgSend_cls_signingIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cls_signingIdentifier");
}

id objc_msgSend_cls_underlyingErrorWithDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cls_underlyingErrorWithDomain:");
}

id objc_msgSend_cls_urlSuitableForOpeningForExpectedURL_containerURL_itemID_ownerName_zoneName_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cls_urlSuitableForOpeningForExpectedURL:containerURL:itemID:ownerName:zoneName:completion:");
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return _[a1 code];
}

id objc_msgSend_collection(void *a1, const char *a2, ...)
{
  return _[a1 collection];
}

id objc_msgSend_collectionId(void *a1, const char *a2, ...)
{
  return _[a1 collectionId];
}

id objc_msgSend_collectionItem(void *a1, const char *a2, ...)
{
  return _[a1 collectionItem];
}

id objc_msgSend_collectionItemLocation(void *a1, const char *a2, ...)
{
  return _[a1 collectionItemLocation];
}

id objc_msgSend_colorName(void *a1, const char *a2, ...)
{
  return _[a1 colorName];
}

id objc_msgSend_compare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compare:");
}

id objc_msgSend_compare_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compare:options:");
}

id objc_msgSend_compareDate_toDate_toUnitGranularity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compareDate:toDate:toUnitGranularity:");
}

id objc_msgSend_compareOptions(void *a1, const char *a2, ...)
{
  return _[a1 compareOptions];
}

id objc_msgSend_completionStatus(void *a1, const char *a2, ...)
{
  return _[a1 completionStatus];
}

id objc_msgSend_components_fromDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "components:fromDate:");
}

id objc_msgSend_componentsJoinedByString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsJoinedByString:");
}

id objc_msgSend_componentsSeparatedByString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsSeparatedByString:");
}

id objc_msgSend_componentsWithURL_resolvingAgainstBaseURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsWithURL:resolvingAgainstBaseURL:");
}

id objc_msgSend_composeNotificationData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "composeNotificationData:");
}

id objc_msgSend_compoundPredicateType(void *a1, const char *a2, ...)
{
  return _[a1 compoundPredicateType];
}

id objc_msgSend_compressOverlappingRanges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compressOverlappingRanges:");
}

id objc_msgSend_configuration(void *a1, const char *a2, ...)
{
  return _[a1 configuration];
}

id objc_msgSend_configurationDictionary(void *a1, const char *a2, ...)
{
  return _[a1 configurationDictionary];
}

id objc_msgSend_conflictingPersonIDs(void *a1, const char *a2, ...)
{
  return _[a1 conflictingPersonIDs];
}

id objc_msgSend_conflictingPersonIds(void *a1, const char *a2, ...)
{
  return _[a1 conflictingPersonIds];
}

id objc_msgSend_conflictingPersonIdsAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conflictingPersonIdsAtIndex:");
}

id objc_msgSend_conflictingPersonIdsCount(void *a1, const char *a2, ...)
{
  return _[a1 conflictingPersonIdsCount];
}

id objc_msgSend_conformsToProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conformsToProtocol:");
}

id objc_msgSend_conformsToType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conformsToType:");
}

id objc_msgSend_consolidateChangesByTargetAndOwner(void *a1, const char *a2, ...)
{
  return _[a1 consolidateChangesByTargetAndOwner];
}

id objc_msgSend_constantValue(void *a1, const char *a2, ...)
{
  return _[a1 constantValue];
}

id objc_msgSend_containerIDForContainerIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containerIDForContainerIdentifier:");
}

id objc_msgSend_containingBundleRecord(void *a1, const char *a2, ...)
{
  return _[a1 containingBundleRecord];
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsObject:");
}

id objc_msgSend_containsString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsString:");
}

id objc_msgSend_containsiCloudReport_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsiCloudReport:");
}

id objc_msgSend_contentMetadataAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentMetadataAtIndex:");
}

id objc_msgSend_contentMetadatasCount(void *a1, const char *a2, ...)
{
  return _[a1 contentMetadatasCount];
}

id objc_msgSend_contentStoreIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 contentStoreIdentifier];
}

id objc_msgSend_contentsAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentsAtIndex:");
}

id objc_msgSend_contentsCount(void *a1, const char *a2, ...)
{
  return _[a1 contentsCount];
}

id objc_msgSend_contextCustomTypeName(void *a1, const char *a2, ...)
{
  return _[a1 contextCustomTypeName];
}

id objc_msgSend_contextIdentifierPath(void *a1, const char *a2, ...)
{
  return _[a1 contextIdentifierPath];
}

id objc_msgSend_contextObjectIdPath(void *a1, const char *a2, ...)
{
  return _[a1 contextObjectIdPath];
}

id objc_msgSend_contextPath(void *a1, const char *a2, ...)
{
  return _[a1 contextPath];
}

id objc_msgSend_contextPathAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contextPathAtIndex:");
}

id objc_msgSend_contextPaths(void *a1, const char *a2, ...)
{
  return _[a1 contextPaths];
}

id objc_msgSend_contextPathsCount(void *a1, const char *a2, ...)
{
  return _[a1 contextPathsCount];
}

id objc_msgSend_contextSourceIsCatalog(void *a1, const char *a2, ...)
{
  return _[a1 contextSourceIsCatalog];
}

id objc_msgSend_contextStableObjectIdPath(void *a1, const char *a2, ...)
{
  return _[a1 contextStableObjectIdPath];
}

id objc_msgSend_contextSummary(void *a1, const char *a2, ...)
{
  return _[a1 contextSummary];
}

id objc_msgSend_contextType(void *a1, const char *a2, ...)
{
  return _[a1 contextType];
}

id objc_msgSend_continuousSliderAnswerValue(void *a1, const char *a2, ...)
{
  return _[a1 continuousSliderAnswerValue];
}

id objc_msgSend_continuousSliderValue(void *a1, const char *a2, ...)
{
  return _[a1 continuousSliderValue];
}

id objc_msgSend_coordinateReadingItemAtURL_options_writingItemAtURL_options_error_byAccessor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coordinateReadingItemAtURL:options:writingItemAtURL:options:error:byAccessor:");
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _[a1 copy];
}

id objc_msgSend_copyAssetToCloudKitContentStoreCache_createThumbnailIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyAssetToCloudKitContentStoreCache:createThumbnailIfNeeded:");
}

id objc_msgSend_copyClass_fromDB_toDB_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyClass:fromDB:toDB:");
}

id objc_msgSend_copyHandout_fromDB_toDB_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyHandout:fromDB:toDB:");
}

id objc_msgSend_copyItemAtURL_toURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyItemAtURL:toURL:error:");
}

id objc_msgSend_copyToiCloudDrive(void *a1, const char *a2, ...)
{
  return _[a1 copyToiCloudDrive];
}

id objc_msgSend_copyWithZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyWithZone:");
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _[a1 count];
}

id objc_msgSend_count_where_bindings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "count:where:bindings:");
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_countOf_fromDB_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countOf:fromDB:");
}

id objc_msgSend_countedDownloadAgentByAssetID(void *a1, const char *a2, ...)
{
  return _[a1 countedDownloadAgentByAssetID];
}

id objc_msgSend_countedUploadAgentByAssetID(void *a1, const char *a2, ...)
{
  return _[a1 countedUploadAgentByAssetID];
}

id objc_msgSend_counter(void *a1, const char *a2, ...)
{
  return _[a1 counter];
}

id objc_msgSend_createActionPDDPEEPayloadFromCLSObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createActionPDDPEEPayloadFromCLSObject:");
}

id objc_msgSend_createCollectionQueryRequest(void *a1, const char *a2, ...)
{
  return _[a1 createCollectionQueryRequest];
}

id objc_msgSend_createFileAtPath_contents_attributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createFileAtPath:contents:attributes:");
}

id objc_msgSend_createFileHandleForURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createFileHandleForURL:");
}

id objc_msgSend_createHandoutQueryRequest(void *a1, const char *a2, ...)
{
  return _[a1 createHandoutQueryRequest];
}

id objc_msgSend_createMissingZones_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createMissingZones:");
}

id objc_msgSend_createNSURLRequest(void *a1, const char *a2, ...)
{
  return _[a1 createNSURLRequest];
}

id objc_msgSend_createPayloadForDeletingCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createPayloadForDeletingCollection:");
}

id objc_msgSend_createPayloadForDeletingCollectionItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createPayloadForDeletingCollectionItem:");
}

id objc_msgSend_createQueryIfNoneExists_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createQueryIfNoneExists:");
}

id objc_msgSend_createRecordZonesIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 createRecordZonesIfNeeded];
}

id objc_msgSend_createResponseFileURL(void *a1, const char *a2, ...)
{
  return _[a1 createResponseFileURL];
}

id objc_msgSend_createScheduleTasks_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createScheduleTasks:");
}

id objc_msgSend_createSearchRequestZoneForZoneName_usingQuery_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createSearchRequestZoneForZoneName:usingQuery:");
}

id objc_msgSend_createSessionIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 createSessionIfNeeded];
}

id objc_msgSend_createTaskSchedulerRegistration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createTaskSchedulerRegistration:");
}

id objc_msgSend_createdBy(void *a1, const char *a2, ...)
{
  return _[a1 createdBy];
}

id objc_msgSend_createiCloudDriveCKShare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createiCloudDriveCKShare:");
}

id objc_msgSend_credentialForAccount_serviceID_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "credentialForAccount:serviceID:error:");
}

id objc_msgSend_criteriaForFieldName_andValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "criteriaForFieldName:andValue:");
}

id objc_msgSend_criteriaForFieldName_andValues_withFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "criteriaForFieldName:andValues:withFormat:");
}

id objc_msgSend_currentActivityID(void *a1, const char *a2, ...)
{
  return _[a1 currentActivityID];
}

id objc_msgSend_currentCalendar(void *a1, const char *a2, ...)
{
  return _[a1 currentCalendar];
}

id objc_msgSend_currentDB(void *a1, const char *a2, ...)
{
  return _[a1 currentDB];
}

id objc_msgSend_currentLocale(void *a1, const char *a2, ...)
{
  return _[a1 currentLocale];
}

id objc_msgSend_currentThread(void *a1, const char *a2, ...)
{
  return _[a1 currentThread];
}

id objc_msgSend_cursor(void *a1, const char *a2, ...)
{
  return _[a1 cursor];
}

id objc_msgSend_customClassName(void *a1, const char *a2, ...)
{
  return _[a1 customClassName];
}

id objc_msgSend_customRequestHeaders(void *a1, const char *a2, ...)
{
  return _[a1 customRequestHeaders];
}

id objc_msgSend_customTypeName(void *a1, const char *a2, ...)
{
  return _[a1 customTypeName];
}

id objc_msgSend_daemon(void *a1, const char *a2, ...)
{
  return _[a1 daemon];
}

id objc_msgSend_dashboardApps(void *a1, const char *a2, ...)
{
  return _[a1 dashboardApps];
}

id objc_msgSend_dashboardAppsAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dashboardAppsAtIndex:");
}

id objc_msgSend_dashboardAppsCount(void *a1, const char *a2, ...)
{
  return _[a1 dashboardAppsCount];
}

id objc_msgSend_data(void *a1, const char *a2, ...)
{
  return _[a1 data];
}

id objc_msgSend_dataFromError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataFromError:");
}

id objc_msgSend_dataFromPath_makeBackwardCompatible_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataFromPath:makeBackwardCompatible:error:");
}

id objc_msgSend_dataTaskWithRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataTaskWithRequest:");
}

id objc_msgSend_dataWithContentsOfURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithContentsOfURL:");
}

id objc_msgSend_dataWithContentsOfURL_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithContentsOfURL:options:error:");
}

id objc_msgSend_dataWithPropertyList_format_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithPropertyList:format:options:error:");
}

id objc_msgSend_database(void *a1, const char *a2, ...)
{
  return _[a1 database];
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return _[a1 date];
}

id objc_msgSend_dateClassCreated(void *a1, const char *a2, ...)
{
  return _[a1 dateClassCreated];
}

id objc_msgSend_dateCompleted(void *a1, const char *a2, ...)
{
  return _[a1 dateCompleted];
}

id objc_msgSend_dateCreated(void *a1, const char *a2, ...)
{
  return _[a1 dateCreated];
}

id objc_msgSend_dateDue(void *a1, const char *a2, ...)
{
  return _[a1 dateDue];
}

id objc_msgSend_dateExpires(void *a1, const char *a2, ...)
{
  return _[a1 dateExpires];
}

id objc_msgSend_dateFormatter(void *a1, const char *a2, ...)
{
  return _[a1 dateFormatter];
}

id objc_msgSend_dateFormatter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateFormatter:");
}

id objc_msgSend_dateFromString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateFromString:");
}

id objc_msgSend_dateLastCompleted(void *a1, const char *a2, ...)
{
  return _[a1 dateLastCompleted];
}

id objc_msgSend_dateLastModified(void *a1, const char *a2, ...)
{
  return _[a1 dateLastModified];
}

id objc_msgSend_dateLastReviewed(void *a1, const char *a2, ...)
{
  return _[a1 dateLastReviewed];
}

id objc_msgSend_dateOfPublication(void *a1, const char *a2, ...)
{
  return _[a1 dateOfPublication];
}

id objc_msgSend_dateValue(void *a1, const char *a2, ...)
{
  return _[a1 dateValue];
}

id objc_msgSend_dateWithTimeInterval_sinceDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithTimeInterval:sinceDate:");
}

id objc_msgSend_dateWithTimeIntervalSinceNow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithTimeIntervalSinceNow:");
}

id objc_msgSend_dateWithTimeIntervalSinceReferenceDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithTimeIntervalSinceReferenceDate:");
}

id objc_msgSend_decodeObjectOfClasses_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeObjectOfClasses:forKey:");
}

id objc_msgSend_decrementCounter(void *a1, const char *a2, ...)
{
  return _[a1 decrementCounter];
}

id objc_msgSend_defaultButtonInfo(void *a1, const char *a2, ...)
{
  return _[a1 defaultButtonInfo];
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return _[a1 defaultCenter];
}

id objc_msgSend_defaultEndpointInfo(void *a1, const char *a2, ...)
{
  return _[a1 defaultEndpointInfo];
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return _[a1 defaultManager];
}

id objc_msgSend_defaultRecurringTriggerDateComponents(void *a1, const char *a2, ...)
{
  return _[a1 defaultRecurringTriggerDateComponents];
}

id objc_msgSend_defaultSessionConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 defaultSessionConfiguration];
}

id objc_msgSend_defaultStore(void *a1, const char *a2, ...)
{
  return _[a1 defaultStore];
}

id objc_msgSend_defaultSyncZoneNames(void *a1, const char *a2, ...)
{
  return _[a1 defaultSyncZoneNames];
}

id objc_msgSend_defaultSyncZoneNamesAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultSyncZoneNamesAtIndex:");
}

id objc_msgSend_defaultSyncZoneNamesCount(void *a1, const char *a2, ...)
{
  return _[a1 defaultSyncZoneNamesCount];
}

id objc_msgSend_defaultWorkspace(void *a1, const char *a2, ...)
{
  return _[a1 defaultWorkspace];
}

id objc_msgSend_delay(void *a1, const char *a2, ...)
{
  return _[a1 delay];
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _[a1 delegate];
}

id objc_msgSend_deleteActionPDDPEEPayloadFromCLSObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteActionPDDPEEPayloadFromCLSObject:");
}

id objc_msgSend_deleteAll_where_bindings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteAll:where:bindings:");
}

id objc_msgSend_deleteAllWithoutTracking_where_bindings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteAllWithoutTracking:where:bindings:");
}

id objc_msgSend_deleteBackingStoreWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteBackingStoreWithCompletion:");
}

id objc_msgSend_deleteClassMemberWithClassID_personIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteClassMemberWithClassID:personIDs:");
}

id objc_msgSend_deleteClassWithObjectID_deletePersons_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteClassWithObjectID:deletePersons:");
}

id objc_msgSend_deleteCollectionItemsWithReferenceObjectID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteCollectionItemsWithReferenceObjectID:");
}

id objc_msgSend_deleteHandoutWithObjectID_shouldDeleteDrafts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteHandoutWithObjectID:shouldDeleteDrafts:");
}

id objc_msgSend_deleteObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteObject:");
}

id objc_msgSend_deletePersonWithObjectID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deletePersonWithObjectID:");
}

id objc_msgSend_deleteProcessedSyncAssociatedWithRecordID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteProcessedSyncAssociatedWithRecordID:");
}

id objc_msgSend_deleteSyncMetadataAssociatedWithRecordID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteSyncMetadataAssociatedWithRecordID:");
}

id objc_msgSend_deleteSyncStateForRecordIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteSyncStateForRecordIDs:");
}

id objc_msgSend_delta(void *a1, const char *a2, ...)
{
  return _[a1 delta];
}

id objc_msgSend_dependencies(void *a1, const char *a2, ...)
{
  return _[a1 dependencies];
}

id objc_msgSend_deregisterTaskWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deregisterTaskWithIdentifier:");
}

id objc_msgSend_description(void *a1, const char *a2, ...)
{
  return _[a1 description];
}

id objc_msgSend_details(void *a1, const char *a2, ...)
{
  return _[a1 details];
}

id objc_msgSend_devMode(void *a1, const char *a2, ...)
{
  return _[a1 devMode];
}

id objc_msgSend_devModeURL(void *a1, const char *a2, ...)
{
  return _[a1 devModeURL];
}

id objc_msgSend_devMode_DistributeState_sentByTeacher_toTeacherStates_toStudentStates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "devMode_DistributeState:sentByTeacher:toTeacherStates:toStudentStates:");
}

id objc_msgSend_devMode_MutateStateChanges_forDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "devMode_MutateStateChanges:forDomain:");
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return _[a1 dictionary];
}

id objc_msgSend_dictionaryRepresentation(void *a1, const char *a2, ...)
{
  return _[a1 dictionaryRepresentation];
}

id objc_msgSend_dictionaryStrippingNSNullValues_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryStrippingNSNullValues:");
}

id objc_msgSend_dictionaryWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithCapacity:");
}

id objc_msgSend_dictionaryWithDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithDictionary:");
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjects:forKeys:count:");
}

id objc_msgSend_didChangeValueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didChangeValueForKey:");
}

id objc_msgSend_didCompleteProcessingResponse(void *a1, const char *a2, ...)
{
  return _[a1 didCompleteProcessingResponse];
}

id objc_msgSend_didExecute(void *a1, const char *a2, ...)
{
  return _[a1 didExecute];
}

id objc_msgSend_disableForeignKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disableForeignKeys:");
}

id objc_msgSend_disableSearchIfAccountIsUnapproved_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disableSearchIfAccountIsUnapproved:");
}

id objc_msgSend_displayName(void *a1, const char *a2, ...)
{
  return _[a1 displayName];
}

id objc_msgSend_displayOrder(void *a1, const char *a2, ...)
{
  return _[a1 displayOrder];
}

id objc_msgSend_displayRoles(void *a1, const char *a2, ...)
{
  return _[a1 displayRoles];
}

id objc_msgSend_displayType(void *a1, const char *a2, ...)
{
  return _[a1 displayType];
}

id objc_msgSend_displayedCount(void *a1, const char *a2, ...)
{
  return _[a1 displayedCount];
}

id objc_msgSend_distantFuture(void *a1, const char *a2, ...)
{
  return _[a1 distantFuture];
}

id objc_msgSend_documentsURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "documentsURL:");
}

id objc_msgSend_domain(void *a1, const char *a2, ...)
{
  return _[a1 domain];
}

id objc_msgSend_domainVersion(void *a1, const char *a2, ...)
{
  return _[a1 domainVersion];
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return _[a1 doubleValue];
}

id objc_msgSend_downloadCloudKitPrimaryFileWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "downloadCloudKitPrimaryFileWithCompletion:");
}

id objc_msgSend_downloadCloudKitThumbnailWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "downloadCloudKitThumbnailWithCompletion:");
}

id objc_msgSend_downloadObservers(void *a1, const char *a2, ...)
{
  return _[a1 downloadObservers];
}

id objc_msgSend_downloadURLExpiration(void *a1, const char *a2, ...)
{
  return _[a1 downloadURLExpiration];
}

id objc_msgSend_downloadURLWithFileName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "downloadURLWithFileName:");
}

id objc_msgSend_draftsURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "draftsURL:");
}

id objc_msgSend_dueDate(void *a1, const char *a2, ...)
{
  return _[a1 dueDate];
}

id objc_msgSend_dueTomorrowUserNotificationDataFromHandouts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dueTomorrowUserNotificationDataFromHandouts:");
}

id objc_msgSend_dueYesterdayUserNotificationDataFromHandouts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dueYesterdayUserNotificationDataFromHandouts:");
}

id objc_msgSend_duration(void *a1, const char *a2, ...)
{
  return _[a1 duration];
}

id objc_msgSend_durationInSeconds(void *a1, const char *a2, ...)
{
  return _[a1 durationInSeconds];
}

id objc_msgSend_durationSeconds(void *a1, const char *a2, ...)
{
  return _[a1 durationSeconds];
}

id objc_msgSend_effectiveAuthorizationStatus(void *a1, const char *a2, ...)
{
  return _[a1 effectiveAuthorizationStatus];
}

id objc_msgSend_email(void *a1, const char *a2, ...)
{
  return _[a1 email];
}

id objc_msgSend_emailAddress(void *a1, const char *a2, ...)
{
  return _[a1 emailAddress];
}

id objc_msgSend_emailDomains(void *a1, const char *a2, ...)
{
  return _[a1 emailDomains];
}

id objc_msgSend_emailDomainsAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emailDomainsAtIndex:");
}

id objc_msgSend_emailDomainsCount(void *a1, const char *a2, ...)
{
  return _[a1 emailDomainsCount];
}

id objc_msgSend_enableForeignKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enableForeignKeys:");
}

id objc_msgSend_enableIncrementalAutovacuumWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enableIncrementalAutovacuumWithError:");
}

id objc_msgSend_enableResponseStreaming(void *a1, const char *a2, ...)
{
  return _[a1 enableResponseStreaming];
}

id objc_msgSend_enableVerboseLogging(void *a1, const char *a2, ...)
{
  return _[a1 enableVerboseLogging];
}

id objc_msgSend_encodeSystemFieldsWithCoder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeSystemFieldsWithCoder:");
}

id objc_msgSend_encodedData(void *a1, const char *a2, ...)
{
  return _[a1 encodedData];
}

id objc_msgSend_end(void *a1, const char *a2, ...)
{
  return _[a1 end];
}

id objc_msgSend_endDate(void *a1, const char *a2, ...)
{
  return _[a1 endDate];
}

id objc_msgSend_endpointIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 endpointIdentifier];
}

id objc_msgSend_endpointInfo(void *a1, const char *a2, ...)
{
  return _[a1 endpointInfo];
}

id objc_msgSend_endpointServer_willQueryForObjectWithPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endpointServer:willQueryForObjectWithPredicate:");
}

id objc_msgSend_endpoints(void *a1, const char *a2, ...)
{
  return _[a1 endpoints];
}

id objc_msgSend_endpointsAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endpointsAtIndex:");
}

id objc_msgSend_endpointsCount(void *a1, const char *a2, ...)
{
  return _[a1 endpointsCount];
}

id objc_msgSend_enqueueEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enqueueEvent:");
}

id objc_msgSend_entitled_publishCollaborationStateChanges_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "entitled_publishCollaborationStateChanges:completion:");
}

id objc_msgSend_entitlementsWithConnection_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "entitlementsWithConnection:error:");
}

id objc_msgSend_entity(void *a1, const char *a2, ...)
{
  return _[a1 entity];
}

id objc_msgSend_entityClass_containsColumnNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "entityClass:containsColumnNamed:");
}

id objc_msgSend_entityDidInsertNotificationName(void *a1, const char *a2, ...)
{
  return _[a1 entityDidInsertNotificationName];
}

id objc_msgSend_entityExistsByClass_identity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "entityExistsByClass:identity:");
}

id objc_msgSend_entityIdentity(void *a1, const char *a2, ...)
{
  return _[a1 entityIdentity];
}

id objc_msgSend_entityMeta(void *a1, const char *a2, ...)
{
  return _[a1 entityMeta];
}

id objc_msgSend_entityName(void *a1, const char *a2, ...)
{
  return _[a1 entityName];
}

id objc_msgSend_entityNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "entityNamed:");
}

id objc_msgSend_entityType(void *a1, const char *a2, ...)
{
  return _[a1 entityType];
}

id objc_msgSend_entityWillChangeNotificationName(void *a1, const char *a2, ...)
{
  return _[a1 entityWillChangeNotificationName];
}

id objc_msgSend_enumeratorAtURL_includingPropertiesForKeys_options_errorHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:");
}

id objc_msgSend_error(void *a1, const char *a2, ...)
{
  return _[a1 error];
}

id objc_msgSend_errorCodeForRequest(void *a1, const char *a2, ...)
{
  return _[a1 errorCodeForRequest];
}

id objc_msgSend_errorFromData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorFromData:");
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithDomain:code:userInfo:");
}

id objc_msgSend_erroredIDs(void *a1, const char *a2, ...)
{
  return _[a1 erroredIDs];
}

id objc_msgSend_etag(void *a1, const char *a2, ...)
{
  return _[a1 etag];
}

id objc_msgSend_eventBody(void *a1, const char *a2, ...)
{
  return _[a1 eventBody];
}

id objc_msgSend_eventCount(void *a1, const char *a2, ...)
{
  return _[a1 eventCount];
}

id objc_msgSend_eventDate(void *a1, const char *a2, ...)
{
  return _[a1 eventDate];
}

id objc_msgSend_eventItems(void *a1, const char *a2, ...)
{
  return _[a1 eventItems];
}

id objc_msgSend_eventItemsAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "eventItemsAtIndex:");
}

id objc_msgSend_eventItemsCount(void *a1, const char *a2, ...)
{
  return _[a1 eventItemsCount];
}

id objc_msgSend_eventsAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "eventsAtIndex:");
}

id objc_msgSend_eventsCount(void *a1, const char *a2, ...)
{
  return _[a1 eventsCount];
}

id objc_msgSend_exceptionWithName_reason_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exceptionWithName:reason:userInfo:");
}

id objc_msgSend_excludeAppIds(void *a1, const char *a2, ...)
{
  return _[a1 excludeAppIds];
}

id objc_msgSend_excludeAppIdsAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "excludeAppIdsAtIndex:");
}

id objc_msgSend_excludeAppIdsCount(void *a1, const char *a2, ...)
{
  return _[a1 excludeAppIdsCount];
}

id objc_msgSend_execute(void *a1, const char *a2, ...)
{
  return _[a1 execute];
}

id objc_msgSend_executeSQL_error_bindingHandler_enumerationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "executeSQL:error:bindingHandler:enumerationHandler:");
}

id objc_msgSend_executeUncachedSQL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "executeUncachedSQL:error:");
}

id objc_msgSend_executeUncachedSQL_error_bindingHandler_enumerationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "executeUncachedSQL:error:bindingHandler:enumerationHandler:");
}

id objc_msgSend_executionId(void *a1, const char *a2, ...)
{
  return _[a1 executionId];
}

id objc_msgSend_executionQueue(void *a1, const char *a2, ...)
{
  return _[a1 executionQueue];
}

id objc_msgSend_exitClean_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exitClean:reason:");
}

id objc_msgSend_expectedResponseClass(void *a1, const char *a2, ...)
{
  return _[a1 expectedResponseClass];
}

id objc_msgSend_expressionType(void *a1, const char *a2, ...)
{
  return _[a1 expressionType];
}

id objc_msgSend_extraInfoAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "extraInfoAtIndex:");
}

id objc_msgSend_extraInfosCount(void *a1, const char *a2, ...)
{
  return _[a1 extraInfosCount];
}

id objc_msgSend_failedPayloadsCountsDictionary(void *a1, const char *a2, ...)
{
  return _[a1 failedPayloadsCountsDictionary];
}

id objc_msgSend_failures(void *a1, const char *a2, ...)
{
  return _[a1 failures];
}

id objc_msgSend_familyName(void *a1, const char *a2, ...)
{
  return _[a1 familyName];
}

id objc_msgSend_fetchActiveHandoutsPastDueFromDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchActiveHandoutsPastDueFromDate:");
}

id objc_msgSend_fetchChangesInZonesWithZoneIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchChangesInZonesWithZoneIDs:");
}

id objc_msgSend_fetchCloudKitStreamingURLWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchCloudKitStreamingURLWithCompletion:");
}

id objc_msgSend_fetchHandoutsDueNextDayFromDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchHandoutsDueNextDayFromDate:");
}

id objc_msgSend_fetchHandoutsDueYesterdayFromDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchHandoutsDueYesterdayFromDate:");
}

id objc_msgSend_fetchInfoForAppWithBundleIdentifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchInfoForAppWithBundleIdentifier:completion:");
}

id objc_msgSend_fetchOrgAdminUserRecordIDWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchOrgAdminUserRecordIDWithCompletionHandler:");
}

id objc_msgSend_fetchRecordsforDownloadingWithIsDraft_request_progressBlock_recordResultBlock_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchRecordsforDownloadingWithIsDraft:request:progressBlock:recordResultBlock:completionBlock:");
}

id objc_msgSend_fetchRecordsforStreamingWithIsDraft_request_progressBlock_recordResultBlock_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchRecordsforStreamingWithIsDraft:request:progressBlock:recordResultBlock:completionBlock:");
}

id objc_msgSend_fetchUserRecordIDWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchUserRecordIDWithCompletionHandler:");
}

id objc_msgSend_fileExistsAtPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileExistsAtPath:");
}

id objc_msgSend_fileHandleForWritingToURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileHandleForWritingToURL:error:");
}

id objc_msgSend_fileSizeBytes(void *a1, const char *a2, ...)
{
  return _[a1 fileSizeBytes];
}

id objc_msgSend_fileSizeInBytes(void *a1, const char *a2, ...)
{
  return _[a1 fileSizeInBytes];
}

id objc_msgSend_fileSystemRepresentation(void *a1, const char *a2, ...)
{
  return _[a1 fileSystemRepresentation];
}

id objc_msgSend_fileURL(void *a1, const char *a2, ...)
{
  return _[a1 fileURL];
}

id objc_msgSend_fileURLWithPath_isDirectory_relativeToURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileURLWithPath:isDirectory:relativeToURL:");
}

id objc_msgSend_fileUTType(void *a1, const char *a2, ...)
{
  return _[a1 fileUTType];
}

id objc_msgSend_fileUttype(void *a1, const char *a2, ...)
{
  return _[a1 fileUttype];
}

id objc_msgSend_filenameExtension(void *a1, const char *a2, ...)
{
  return _[a1 filenameExtension];
}

id objc_msgSend_filenameForCKContentStoreCache(void *a1, const char *a2, ...)
{
  return _[a1 filenameForCKContentStoreCache];
}

id objc_msgSend_finishEncoding(void *a1, const char *a2, ...)
{
  return _[a1 finishEncoding];
}

id objc_msgSend_finishTasksAndInvalidate(void *a1, const char *a2, ...)
{
  return _[a1 finishTasksAndInvalidate];
}

id objc_msgSend_finishWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishWithError:");
}

id objc_msgSend_finishedResponseProcessing(void *a1, const char *a2, ...)
{
  return _[a1 finishedResponseProcessing];
}

id objc_msgSend_fireTriggerWithNotificationData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fireTriggerWithNotificationData:");
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _[a1 firstObject];
}

id objc_msgSend_flags(void *a1, const char *a2, ...)
{
  return _[a1 flags];
}

id objc_msgSend_flush(void *a1, const char *a2, ...)
{
  return _[a1 flush];
}

id objc_msgSend_flushCachedData(void *a1, const char *a2, ...)
{
  return _[a1 flushCachedData];
}

id objc_msgSend_forgetAboutDeletedEntity_withObjectID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "forgetAboutDeletedEntity:withObjectID:");
}

id objc_msgSend_fractionCompleted(void *a1, const char *a2, ...)
{
  return _[a1 fractionCompleted];
}

id objc_msgSend_fractionDownloaded(void *a1, const char *a2, ...)
{
  return _[a1 fractionDownloaded];
}

id objc_msgSend_fractionUploaded(void *a1, const char *a2, ...)
{
  return _[a1 fractionUploaded];
}

id objc_msgSend_generateFetchQueryForObjectIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateFetchQueryForObjectIDs:");
}

id objc_msgSend_generateFetchQueryForZoneName_forObjectIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateFetchQueryForZoneName:forObjectIDs:");
}

id objc_msgSend_generateFilterQueryForZoneName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateFilterQueryForZoneName:");
}

id objc_msgSend_generateInsightEventsForClass_where_bindings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateInsightEventsForClass:where:bindings:");
}

id objc_msgSend_generateInsightEventsForObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateInsightEventsForObject:");
}

id objc_msgSend_generateInsightEventsWithDatabase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateInsightEventsWithDatabase:");
}

id objc_msgSend_generateReportFromDataInDatabase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateReportFromDataInDatabase:");
}

id objc_msgSend_generateReports(void *a1, const char *a2, ...)
{
  return _[a1 generateReports];
}

id objc_msgSend_generateRotatingUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateRotatingUUID:");
}

id objc_msgSend_generateTimeIntervalForActivity_startDate_interval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateTimeIntervalForActivity:startDate:interval:");
}

id objc_msgSend_getLastErrorWithResultCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getLastErrorWithResultCode:");
}

id objc_msgSend_getRetryAfterSeconds(void *a1, const char *a2, ...)
{
  return _[a1 getRetryAfterSeconds];
}

id objc_msgSend_getRightKeyPath_orRightContstantValue_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getRightKeyPath:orRightContstantValue:error:");
}

id objc_msgSend_getStudentNameFromID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getStudentNameFromID:");
}

id objc_msgSend_getUpdateFromNewHandout_andExistingHandout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getUpdateFromNewHandout:andExistingHandout:");
}

id objc_msgSend_givenName(void *a1, const char *a2, ...)
{
  return _[a1 givenName];
}

id objc_msgSend_gracePeriod(void *a1, const char *a2, ...)
{
  return _[a1 gracePeriod];
}

id objc_msgSend_grade(void *a1, const char *a2, ...)
{
  return _[a1 grade];
}

id objc_msgSend_granularity(void *a1, const char *a2, ...)
{
  return _[a1 granularity];
}

id objc_msgSend_groupId(void *a1, const char *a2, ...)
{
  return _[a1 groupId];
}

id objc_msgSend_groupInfo(void *a1, const char *a2, ...)
{
  return _[a1 groupInfo];
}

id objc_msgSend_groupLocationIDs(void *a1, const char *a2, ...)
{
  return _[a1 groupLocationIDs];
}

id objc_msgSend_groupMember(void *a1, const char *a2, ...)
{
  return _[a1 groupMember];
}

id objc_msgSend_groupName(void *a1, const char *a2, ...)
{
  return _[a1 groupName];
}

id objc_msgSend_groupSortDescriptors(void *a1, const char *a2, ...)
{
  return _[a1 groupSortDescriptors];
}

id objc_msgSend_handleAccountChange(void *a1, const char *a2, ...)
{
  return _[a1 handleAccountChange];
}

id objc_msgSend_handleAttachmentUpdate_forAttachment_inDB_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleAttachmentUpdate:forAttachment:inDB:");
}

id objc_msgSend_handleCollaborationStateChangesForMarkActivityAsComplete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleCollaborationStateChangesForMarkActivityAsComplete:");
}

id objc_msgSend_handleCooldown(void *a1, const char *a2, ...)
{
  return _[a1 handleCooldown];
}

id objc_msgSend_handleExpiration(void *a1, const char *a2, ...)
{
  return _[a1 handleExpiration];
}

id objc_msgSend_handleHTTPStatusCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleHTTPStatusCode:");
}

id objc_msgSend_handleRequestError(void *a1, const char *a2, ...)
{
  return _[a1 handleRequestError];
}

id objc_msgSend_handleResponseBody_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleResponseBody:");
}

id objc_msgSend_handleResponseStatusErrors(void *a1, const char *a2, ...)
{
  return _[a1 handleResponseStatusErrors];
}

id objc_msgSend_handleServerAlerts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleServerAlerts:");
}

id objc_msgSend_handleSignal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleSignal:");
}

id objc_msgSend_handleTimeExpectationReached_appUsage_interval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleTimeExpectationReached:appUsage:interval:");
}

id objc_msgSend_handleTransportServerErrors(void *a1, const char *a2, ...)
{
  return _[a1 handleTransportServerErrors];
}

id objc_msgSend_handleZoneRemoved_forClassWithObjectID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleZoneRemoved:forClassWithObjectID:");
}

id objc_msgSend_handout(void *a1, const char *a2, ...)
{
  return _[a1 handout];
}

id objc_msgSend_handoutAssignedTrigger(void *a1, const char *a2, ...)
{
  return _[a1 handoutAssignedTrigger];
}

id objc_msgSend_handoutAttachmentType(void *a1, const char *a2, ...)
{
  return _[a1 handoutAttachmentType];
}

id objc_msgSend_handoutAuthorizedMetaInfoAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handoutAuthorizedMetaInfoAtIndex:");
}

id objc_msgSend_handoutAuthorizedMetaInfosCount(void *a1, const char *a2, ...)
{
  return _[a1 handoutAuthorizedMetaInfosCount];
}

id objc_msgSend_handoutAuthorizedObjectID(void *a1, const char *a2, ...)
{
  return _[a1 handoutAuthorizedObjectID];
}

id objc_msgSend_handoutAuthorizedObjectId(void *a1, const char *a2, ...)
{
  return _[a1 handoutAuthorizedObjectId];
}

id objc_msgSend_handoutCompletedTrigger(void *a1, const char *a2, ...)
{
  return _[a1 handoutCompletedTrigger];
}

id objc_msgSend_handoutDueSoonTrigger(void *a1, const char *a2, ...)
{
  return _[a1 handoutDueSoonTrigger];
}

id objc_msgSend_handoutID(void *a1, const char *a2, ...)
{
  return _[a1 handoutID];
}

id objc_msgSend_handoutId(void *a1, const char *a2, ...)
{
  return _[a1 handoutId];
}

id objc_msgSend_handoutIdsAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handoutIdsAtIndex:");
}

id objc_msgSend_handoutIdsCount(void *a1, const char *a2, ...)
{
  return _[a1 handoutIdsCount];
}

id objc_msgSend_handoutPastDueTrigger(void *a1, const char *a2, ...)
{
  return _[a1 handoutPastDueTrigger];
}

id objc_msgSend_hasAdminRequestAccount(void *a1, const char *a2, ...)
{
  return _[a1 hasAdminRequestAccount];
}

id objc_msgSend_hasAlertId(void *a1, const char *a2, ...)
{
  return _[a1 hasAlertId];
}

id objc_msgSend_hasAllowSharingOutsideOrg(void *a1, const char *a2, ...)
{
  return _[a1 hasAllowSharingOutsideOrg];
}

id objc_msgSend_hasAnalyticsOptedIn(void *a1, const char *a2, ...)
{
  return _[a1 hasAnalyticsOptedIn];
}

id objc_msgSend_hasAppBundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 hasAppBundleIdentifier];
}

id objc_msgSend_hasAppName(void *a1, const char *a2, ...)
{
  return _[a1 hasAppName];
}

id objc_msgSend_hasAppStoreIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 hasAppStoreIdentifier];
}

id objc_msgSend_hasAssetUrl(void *a1, const char *a2, ...)
{
  return _[a1 hasAssetUrl];
}

id objc_msgSend_hasBigResponses(void *a1, const char *a2, ...)
{
  return _[a1 hasBigResponses];
}

id objc_msgSend_hasBinaryValue(void *a1, const char *a2, ...)
{
  return _[a1 hasBinaryValue];
}

id objc_msgSend_hasBoolValue(void *a1, const char *a2, ...)
{
  return _[a1 hasBoolValue];
}

id objc_msgSend_hasChangeToken(void *a1, const char *a2, ...)
{
  return _[a1 hasChangeToken];
}

id objc_msgSend_hasChanges(void *a1, const char *a2, ...)
{
  return _[a1 hasChanges];
}

id objc_msgSend_hasClassInfo(void *a1, const char *a2, ...)
{
  return _[a1 hasClassInfo];
}

id objc_msgSend_hasClassMember(void *a1, const char *a2, ...)
{
  return _[a1 hasClassMember];
}

id objc_msgSend_hasClassZone(void *a1, const char *a2, ...)
{
  return _[a1 hasClassZone];
}

id objc_msgSend_hasClassroomClassicAdHocModeEnabled(void *a1, const char *a2, ...)
{
  return _[a1 hasClassroomClassicAdHocModeEnabled];
}

id objc_msgSend_hasClientConfig(void *a1, const char *a2, ...)
{
  return _[a1 hasClientConfig];
}

id objc_msgSend_hasContextType(void *a1, const char *a2, ...)
{
  return _[a1 hasContextType];
}

id objc_msgSend_hasCursor(void *a1, const char *a2, ...)
{
  return _[a1 hasCursor];
}

id objc_msgSend_hasDateCreated(void *a1, const char *a2, ...)
{
  return _[a1 hasDateCreated];
}

id objc_msgSend_hasDateExpires(void *a1, const char *a2, ...)
{
  return _[a1 hasDateExpires];
}

id objc_msgSend_hasDateLastModified(void *a1, const char *a2, ...)
{
  return _[a1 hasDateLastModified];
}

id objc_msgSend_hasDateValue(void *a1, const char *a2, ...)
{
  return _[a1 hasDateValue];
}

id objc_msgSend_hasDefaultButtonInfo(void *a1, const char *a2, ...)
{
  return _[a1 hasDefaultButtonInfo];
}

id objc_msgSend_hasDisplayOrder(void *a1, const char *a2, ...)
{
  return _[a1 hasDisplayOrder];
}

id objc_msgSend_hasDoubleValue(void *a1, const char *a2, ...)
{
  return _[a1 hasDoubleValue];
}

id objc_msgSend_hasDurationSeconds(void *a1, const char *a2, ...)
{
  return _[a1 hasDurationSeconds];
}

id objc_msgSend_hasEmail(void *a1, const char *a2, ...)
{
  return _[a1 hasEmail];
}

id objc_msgSend_hasEntityMeta(void *a1, const char *a2, ...)
{
  return _[a1 hasEntityMeta];
}

id objc_msgSend_hasFileSizeBytes(void *a1, const char *a2, ...)
{
  return _[a1 hasFileSizeBytes];
}

id objc_msgSend_hasFileUttype(void *a1, const char *a2, ...)
{
  return _[a1 hasFileUttype];
}

id objc_msgSend_hasFlags(void *a1, const char *a2, ...)
{
  return _[a1 hasFlags];
}

id objc_msgSend_hasGranularity(void *a1, const char *a2, ...)
{
  return _[a1 hasGranularity];
}

id objc_msgSend_hasGroupInfo(void *a1, const char *a2, ...)
{
  return _[a1 hasGroupInfo];
}

id objc_msgSend_hasInt64Value(void *a1, const char *a2, ...)
{
  return _[a1 hasInt64Value];
}

id objc_msgSend_hasInternalMessage(void *a1, const char *a2, ...)
{
  return _[a1 hasInternalMessage];
}

id objc_msgSend_hasIsAdhocOriginated(void *a1, const char *a2, ...)
{
  return _[a1 hasIsAdhocOriginated];
}

id objc_msgSend_hasIsEduUser(void *a1, const char *a2, ...)
{
  return _[a1 hasIsEduUser];
}

id objc_msgSend_hasIsInternal(void *a1, const char *a2, ...)
{
  return _[a1 hasIsInternal];
}

id objc_msgSend_hasIsRosterSearchAllowed(void *a1, const char *a2, ...)
{
  return _[a1 hasIsRosterSearchAllowed];
}

id objc_msgSend_hasKey(void *a1, const char *a2, ...)
{
  return _[a1 hasKey];
}

id objc_msgSend_hasLocationConstraints(void *a1, const char *a2, ...)
{
  return _[a1 hasLocationConstraints];
}

id objc_msgSend_hasMessage(void *a1, const char *a2, ...)
{
  return _[a1 hasMessage];
}

id objc_msgSend_hasMeta(void *a1, const char *a2, ...)
{
  return _[a1 hasMeta];
}

id objc_msgSend_hasNextBatchPointer(void *a1, const char *a2, ...)
{
  return _[a1 hasNextBatchPointer];
}

id objc_msgSend_hasNotBeenRereferencedByServer(void *a1, const char *a2, ...)
{
  return _[a1 hasNotBeenRereferencedByServer];
}

id objc_msgSend_hasOrganizationId(void *a1, const char *a2, ...)
{
  return _[a1 hasOrganizationId];
}

id objc_msgSend_hasOrganizationName(void *a1, const char *a2, ...)
{
  return _[a1 hasOrganizationName];
}

id objc_msgSend_hasOrganizationProgressTrackingAllowed(void *a1, const char *a2, ...)
{
  return _[a1 hasOrganizationProgressTrackingAllowed];
}

id objc_msgSend_hasOrganizationType(void *a1, const char *a2, ...)
{
  return _[a1 hasOrganizationType];
}

id objc_msgSend_hasOriginalFilename(void *a1, const char *a2, ...)
{
  return _[a1 hasOriginalFilename];
}

id objc_msgSend_hasParentRequestId(void *a1, const char *a2, ...)
{
  return _[a1 hasParentRequestId];
}

id objc_msgSend_hasParticipants(void *a1, const char *a2, ...)
{
  return _[a1 hasParticipants];
}

id objc_msgSend_hasPermissionType(void *a1, const char *a2, ...)
{
  return _[a1 hasPermissionType];
}

id objc_msgSend_hasPerson(void *a1, const char *a2, ...)
{
  return _[a1 hasPerson];
}

id objc_msgSend_hasPersonConstraints(void *a1, const char *a2, ...)
{
  return _[a1 hasPersonConstraints];
}

id objc_msgSend_hasPersonId(void *a1, const char *a2, ...)
{
  return _[a1 hasPersonId];
}

id objc_msgSend_hasPersonIds(void *a1, const char *a2, ...)
{
  return _[a1 hasPersonIds];
}

id objc_msgSend_hasPrefix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasPrefix:");
}

id objc_msgSend_hasPrivilegeName(void *a1, const char *a2, ...)
{
  return _[a1 hasPrivilegeName];
}

id objc_msgSend_hasQuantityValue(void *a1, const char *a2, ...)
{
  return _[a1 hasQuantityValue];
}

id objc_msgSend_hasReachedRequestPayloadLimitBytes_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasReachedRequestPayloadLimitBytes:count:");
}

id objc_msgSend_hasRecipientPersonId(void *a1, const char *a2, ...)
{
  return _[a1 hasRecipientPersonId];
}

id objc_msgSend_hasReport(void *a1, const char *a2, ...)
{
  return _[a1 hasReport];
}

id objc_msgSend_hasRequestor(void *a1, const char *a2, ...)
{
  return _[a1 hasRequestor];
}

id objc_msgSend_hasRoleId(void *a1, const char *a2, ...)
{
  return _[a1 hasRoleId];
}

id objc_msgSend_hasRoleType(void *a1, const char *a2, ...)
{
  return _[a1 hasRoleType];
}

id objc_msgSend_hasScoreValue(void *a1, const char *a2, ...)
{
  return _[a1 hasScoreValue];
}

id objc_msgSend_hasSearchCacheTtl(void *a1, const char *a2, ...)
{
  return _[a1 hasSearchCacheTtl];
}

id objc_msgSend_hasSearchLimitForGroupMemberSearch(void *a1, const char *a2, ...)
{
  return _[a1 hasSearchLimitForGroupMemberSearch];
}

id objc_msgSend_hasServerMetadata(void *a1, const char *a2, ...)
{
  return _[a1 hasServerMetadata];
}

id objc_msgSend_hasServiceConfig(void *a1, const char *a2, ...)
{
  return _[a1 hasServiceConfig];
}

id objc_msgSend_hasShareType(void *a1, const char *a2, ...)
{
  return _[a1 hasShareType];
}

id objc_msgSend_hasStatus(void *a1, const char *a2, ...)
{
  return _[a1 hasStatus];
}

id objc_msgSend_hasStringValue(void *a1, const char *a2, ...)
{
  return _[a1 hasStringValue];
}

id objc_msgSend_hasSuffix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasSuffix:");
}

id objc_msgSend_hasSurveyStepType(void *a1, const char *a2, ...)
{
  return _[a1 hasSurveyStepType];
}

id objc_msgSend_hasSyncFetchInterval(void *a1, const char *a2, ...)
{
  return _[a1 hasSyncFetchInterval];
}

id objc_msgSend_hasTargetClassId(void *a1, const char *a2, ...)
{
  return _[a1 hasTargetClassId];
}

id objc_msgSend_hasTargetEntityName(void *a1, const char *a2, ...)
{
  return _[a1 hasTargetEntityName];
}

id objc_msgSend_hasTargetObjectId(void *a1, const char *a2, ...)
{
  return _[a1 hasTargetObjectId];
}

id objc_msgSend_hasTargetOwnerPersonId(void *a1, const char *a2, ...)
{
  return _[a1 hasTargetOwnerPersonId];
}

id objc_msgSend_hasTime(void *a1, const char *a2, ...)
{
  return _[a1 hasTime];
}

id objc_msgSend_hasTitle(void *a1, const char *a2, ...)
{
  return _[a1 hasTitle];
}

id objc_msgSend_hasType(void *a1, const char *a2, ...)
{
  return _[a1 hasType];
}

id objc_msgSend_hasUrl(void *a1, const char *a2, ...)
{
  return _[a1 hasUrl];
}

id objc_msgSend_hasUserInfo(void *a1, const char *a2, ...)
{
  return _[a1 hasUserInfo];
}

id objc_msgSend_hasValue(void *a1, const char *a2, ...)
{
  return _[a1 hasValue];
}

id objc_msgSend_hasVersion(void *a1, const char *a2, ...)
{
  return _[a1 hasVersion];
}

id objc_msgSend_hasWebUrl(void *a1, const char *a2, ...)
{
  return _[a1 hasWebUrl];
}

id objc_msgSend_hash(void *a1, const char *a2, ...)
{
  return _[a1 hash];
}

id objc_msgSend_hashForQuery_withSearchText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hashForQuery:withSearchText:");
}

id objc_msgSend_hashTableWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hashTableWithOptions:");
}

id objc_msgSend_haveIncompleteSyncData(void *a1, const char *a2, ...)
{
  return _[a1 haveIncompleteSyncData];
}

id objc_msgSend_host(void *a1, const char *a2, ...)
{
  return _[a1 host];
}

id objc_msgSend_hostAllowListAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostAllowListAtIndex:");
}

id objc_msgSend_hostAllowLists(void *a1, const char *a2, ...)
{
  return _[a1 hostAllowLists];
}

id objc_msgSend_hostAllowListsCount(void *a1, const char *a2, ...)
{
  return _[a1 hostAllowListsCount];
}

id objc_msgSend_hour(void *a1, const char *a2, ...)
{
  return _[a1 hour];
}

id objc_msgSend_httpMethod(void *a1, const char *a2, ...)
{
  return _[a1 httpMethod];
}

id objc_msgSend_httpRequestCompleted(void *a1, const char *a2, ...)
{
  return _[a1 httpRequestCompleted];
}

id objc_msgSend_httpRequestHadServerError(void *a1, const char *a2, ...)
{
  return _[a1 httpRequestHadServerError];
}

id objc_msgSend_httpRequestHadTimeoutError(void *a1, const char *a2, ...)
{
  return _[a1 httpRequestHadTimeoutError];
}

id objc_msgSend_httpRequestSucceeded(void *a1, const char *a2, ...)
{
  return _[a1 httpRequestSucceeded];
}

id objc_msgSend_iCloudUserID(void *a1, const char *a2, ...)
{
  return _[a1 iCloudUserID];
}

id objc_msgSend_iCloudUserId(void *a1, const char *a2, ...)
{
  return _[a1 iCloudUserId];
}

id objc_msgSend_icloudDriveContainerName(void *a1, const char *a2, ...)
{
  return _[a1 icloudDriveContainerName];
}

id objc_msgSend_icloudDriveRelativeFilePath(void *a1, const char *a2, ...)
{
  return _[a1 icloudDriveRelativeFilePath];
}

id objc_msgSend_iconID(void *a1, const char *a2, ...)
{
  return _[a1 iconID];
}

id objc_msgSend_iconIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 iconIdentifier];
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return _[a1 identifier];
}

id objc_msgSend_identifierForTargetObjectID_ownerPersonID_domain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "identifierForTargetObjectID:ownerPersonID:domain:");
}

id objc_msgSend_identifierPath(void *a1, const char *a2, ...)
{
  return _[a1 identifierPath];
}

id objc_msgSend_identityColumnName(void *a1, const char *a2, ...)
{
  return _[a1 identityColumnName];
}

id objc_msgSend_identityValue(void *a1, const char *a2, ...)
{
  return _[a1 identityValue];
}

id objc_msgSend_immutableColumnNames(void *a1, const char *a2, ...)
{
  return _[a1 immutableColumnNames];
}

id objc_msgSend_immutableData(void *a1, const char *a2, ...)
{
  return _[a1 immutableData];
}

id objc_msgSend_includeEmptyGroupsInResults(void *a1, const char *a2, ...)
{
  return _[a1 includeEmptyGroupsInResults];
}

id objc_msgSend_includeUnsearchablePersons(void *a1, const char *a2, ...)
{
  return _[a1 includeUnsearchablePersons];
}

id objc_msgSend_incrementCounter(void *a1, const char *a2, ...)
{
  return _[a1 incrementCounter];
}

id objc_msgSend_incrementalVacuumDatabaseIfNeeded_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "incrementalVacuumDatabaseIfNeeded:error:");
}

id objc_msgSend_indexOfObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfObject:");
}

id objc_msgSend_indexSetWithIndexesInRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexSetWithIndexesInRange:");
}

id objc_msgSend_info(void *a1, const char *a2, ...)
{
  return _[a1 info];
}

id objc_msgSend_infoAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "infoAtIndex:");
}

id objc_msgSend_infoDictAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "infoDictAtIndex:");
}

id objc_msgSend_infoDictionary(void *a1, const char *a2, ...)
{
  return _[a1 infoDictionary];
}

id objc_msgSend_infoDictsCount(void *a1, const char *a2, ...)
{
  return _[a1 infoDictsCount];
}

id objc_msgSend_infos(void *a1, const char *a2, ...)
{
  return _[a1 infos];
}

id objc_msgSend_infosCount(void *a1, const char *a2, ...)
{
  return _[a1 infosCount];
}

id objc_msgSend_init(void *a1, const char *a2, ...)
{
  return _[a1 init];
}

id objc_msgSend_initDetailedRequestWithAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initDetailedRequestWithAccount:");
}

id objc_msgSend_initForCollectionItemsWithDatabase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initForCollectionItemsWithDatabase:");
}

id objc_msgSend_initForCollectionsWithDatabase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initForCollectionsWithDatabase:");
}

id objc_msgSend_initForObject_ownerPersonID_domain_state_flags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initForObject:ownerPersonID:domain:state:flags:");
}

id objc_msgSend_initForObject_scheduleDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initForObject:scheduleDate:");
}

id objc_msgSend_initForObjectWithID_targetClass_ownerPersonID_domain_state_flags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initForObjectWithID:targetClass:ownerPersonID:domain:state:flags:");
}

id objc_msgSend_initForReadingFromData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initForReadingFromData:error:");
}

id objc_msgSend_initRequiringSecureCoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initRequiringSecureCoding:");
}

id objc_msgSend_initWithAccountID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAccountID:");
}

id objc_msgSend_initWithAdminRequestID_personID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAdminRequestID:personID:");
}

id objc_msgSend_initWithAgent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAgent:");
}

id objc_msgSend_initWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithArray:");
}

id objc_msgSend_initWithAsset_database_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAsset:database:");
}

id objc_msgSend_initWithAttachmentID_classID_handoutID_eventType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAttachmentID:classID:handoutID:eventType:");
}

id objc_msgSend_initWithBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIdentifier:");
}

id objc_msgSend_initWithBundleIdentifier_allowPlaceholder_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIdentifier:allowPlaceholder:error:");
}

id objc_msgSend_initWithBundleIdentifier_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIdentifier:queue:");
}

id objc_msgSend_initWithBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBytes:length:");
}

id objc_msgSend_initWithCKRecord_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCKRecord:");
}

id objc_msgSend_initWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCapacity:");
}

id objc_msgSend_initWithClassID_personID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithClassID:personID:");
}

id objc_msgSend_initWithClassID_personID_roles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithClassID:personID:roles:");
}

id objc_msgSend_initWithClient_daemon_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithClient:daemon:");
}

id objc_msgSend_initWithCoder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCoder:");
}

id objc_msgSend_initWithContainerID_bag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContainerID:bag:");
}

id objc_msgSend_initWithContainerID_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContainerID:options:");
}

id objc_msgSend_initWithContentsOfURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContentsOfURL:error:");
}

id objc_msgSend_initWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithData:");
}

id objc_msgSend_initWithData_encoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithData:encoding:");
}

id objc_msgSend_initWithDatabase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDatabase:");
}

id objc_msgSend_initWithDatabase_adminRequests_requestor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDatabase:adminRequests:requestor:");
}

id objc_msgSend_initWithDatabase_andObjectsToDelete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDatabase:andObjectsToDelete:");
}

id objc_msgSend_initWithDatabase_container_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDatabase:container:");
}

id objc_msgSend_initWithDatabase_data_fileHandle_requestType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDatabase:data:fileHandle:requestType:");
}

id objc_msgSend_initWithDatabase_objectsMatching_enumerationBlock_finishBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDatabase:objectsMatching:enumerationBlock:finishBlock:");
}

id objc_msgSend_initWithDatabaseRow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDatabaseRow:");
}

id objc_msgSend_initWithDatabaseURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDatabaseURL:");
}

id objc_msgSend_initWithDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDictionary:");
}

id objc_msgSend_initWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDomain:code:userInfo:");
}

id objc_msgSend_initWithDouble_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDouble:");
}

id objc_msgSend_initWithEmail_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEmail:");
}

id objc_msgSend_initWithEntitlements_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEntitlements:");
}

id objc_msgSend_initWithEnvironmentName_namedDelegatePort_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEnvironmentName:namedDelegatePort:queue:");
}

id objc_msgSend_initWithFileURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFileURL:");
}

id objc_msgSend_initWithFileURL_withOwnerPersonID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFileURL:withOwnerPersonID:");
}

id objc_msgSend_initWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFormat:");
}

id objc_msgSend_initWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:");
}

id objc_msgSend_initWithIdentifier_queue_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:queue:block:");
}

id objc_msgSend_initWithIdentifier_targetQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:targetQueue:");
}

id objc_msgSend_initWithIdentifier_title_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:title:");
}

id objc_msgSend_initWithIdentifier_title_score_maxScore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:title:score:maxScore:");
}

id objc_msgSend_initWithIdentifier_title_type_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:title:type:");
}

id objc_msgSend_initWithInternalType_identifier_title_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithInternalType:identifier:title:");
}

id objc_msgSend_initWithLongLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLongLong:");
}

id objc_msgSend_initWithMachServiceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMachServiceName:");
}

id objc_msgSend_initWithObject_ownerPersonID_targetClassID_recipientPersonID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithObject:ownerPersonID:targetClassID:recipientPersonID:");
}

id objc_msgSend_initWithObject_state_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithObject:state:");
}

id objc_msgSend_initWithObjectID_name_location_type_icon_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithObjectID:name:location:type:icon:");
}

id objc_msgSend_initWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithObjects:");
}

id objc_msgSend_initWithOrganizationID_type_name_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOrganizationID:type:name:");
}

id objc_msgSend_initWithOverridingStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOverridingStatus:");
}

id objc_msgSend_initWithRecordID_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRecordID:action:");
}

id objc_msgSend_initWithRecordName_zoneID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRecordName:zoneID:");
}

id objc_msgSend_initWithRecordType_recordID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRecordType:recordID:");
}

id objc_msgSend_initWithRecordZoneIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRecordZoneIDs:");
}

id objc_msgSend_initWithRecordZoneIDs_configurationsByRecordZoneID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRecordZoneIDs:configurationsByRecordZoneID:");
}

id objc_msgSend_initWithRecordZonesToSave_recordZoneIDsToDelete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRecordZonesToSave:recordZoneIDsToDelete:");
}

id objc_msgSend_initWithRecordsToSave_recordIDsToDelete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRecordsToSave:recordIDsToDelete:");
}

id objc_msgSend_initWithStart_end_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStart:end:");
}

id objc_msgSend_initWithStatus_statusID_identifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStatus:statusID:identifier:");
}

id objc_msgSend_initWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithString:");
}

id objc_msgSend_initWithSubscriptionIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSubscriptionIDs:");
}

id objc_msgSend_initWithSubscriptionsToSave_subscriptionIDsToDelete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSubscriptionsToSave:subscriptionIDsToDelete:");
}

id objc_msgSend_initWithSurveyID_questionID_responderID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSurveyID:questionID:responderID:");
}

id objc_msgSend_initWithText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithText:");
}

id objc_msgSend_initWithTimeIntervalSinceReferenceDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTimeIntervalSinceReferenceDate:");
}

id objc_msgSend_initWithTopic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTopic:");
}

id objc_msgSend_initWithType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:");
}

id objc_msgSend_initWithType_authorID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:authorID:");
}

id objc_msgSend_initWithType_requestorID_organizationID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:requestorID:organizationID:");
}

id objc_msgSend_initWithType_starterText_minimumLength_maximumLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:starterText:minimumLength:maximumLength:");
}

id objc_msgSend_initWithType_subpredicates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:subpredicates:");
}

id objc_msgSend_initWithType_title_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:title:");
}

id objc_msgSend_initWithType_title_handoutAttachmentID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:title:handoutAttachmentID:");
}

id objc_msgSend_initWithURL_cachePolicy_timeoutInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURL:cachePolicy:timeoutInterval:");
}

id objc_msgSend_initWithURL_statusCode_HTTPVersion_headerFields_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURL:statusCode:HTTPVersion:headerFields:");
}

id objc_msgSend_initWithUTF8String_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUTF8String:");
}

id objc_msgSend_initWithZoneID_subscriptionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithZoneID:subscriptionID:");
}

id objc_msgSend_initWithZoneName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithZoneName:");
}

id objc_msgSend_initWithZoneName_andQueryHash_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithZoneName:andQueryHash:");
}

id objc_msgSend_initWithZoneName_ownerName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithZoneName:ownerName:");
}

id objc_msgSend_insertDefaultCollaborationStatesFor_forClassID_toPersonIDs_fromPersonID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertDefaultCollaborationStatesFor:forClassID:toPersonIDs:fromPersonID:");
}

id objc_msgSend_insertEntity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertEntity:");
}

id objc_msgSend_insertObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertObject:");
}

id objc_msgSend_insertObject_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertObject:atIndex:");
}

id objc_msgSend_insertOrUpdateAssetInDBWithCoalescing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertOrUpdateAssetInDBWithCoalescing:");
}

id objc_msgSend_insertOrUpdateObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertOrUpdateObject:");
}

id objc_msgSend_insertOrUpdateObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertOrUpdateObjects:");
}

id objc_msgSend_insertStagedAssetInDBToBeginUploading(void *a1, const char *a2, ...)
{
  return _[a1 insertStagedAssetInDBToBeginUploading];
}

id objc_msgSend_insertString_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertString:atIndex:");
}

id objc_msgSend_instancesRespondToSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "instancesRespondToSelector:");
}

id objc_msgSend_instructionAssetsAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "instructionAssetsAtIndex:");
}

id objc_msgSend_instructionAssetsCount(void *a1, const char *a2, ...)
{
  return _[a1 instructionAssetsCount];
}

id objc_msgSend_instructions(void *a1, const char *a2, ...)
{
  return _[a1 instructions];
}

id objc_msgSend_int64Value(void *a1, const char *a2, ...)
{
  return _[a1 int64Value];
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return _[a1 intValue];
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return _[a1 integerValue];
}

id objc_msgSend_internalMessage(void *a1, const char *a2, ...)
{
  return _[a1 internalMessage];
}

id objc_msgSend_intersectSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intersectSet:");
}

id objc_msgSend_invalidate(void *a1, const char *a2, ...)
{
  return _[a1 invalidate];
}

id objc_msgSend_invalidateAndCancel(void *a1, const char *a2, ...)
{
  return _[a1 invalidateAndCancel];
}

id objc_msgSend_invalidateServer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateServer:");
}

id objc_msgSend_isAborted(void *a1, const char *a2, ...)
{
  return _[a1 isAborted];
}

id objc_msgSend_isAccessDenied(void *a1, const char *a2, ...)
{
  return _[a1 isAccessDenied];
}

id objc_msgSend_isAdhocOriginated(void *a1, const char *a2, ...)
{
  return _[a1 isAdhocOriginated];
}

id objc_msgSend_isAppleInternalInstall(void *a1, const char *a2, ...)
{
  return _[a1 isAppleInternalInstall];
}

id objc_msgSend_isAskedToTryAgain(void *a1, const char *a2, ...)
{
  return _[a1 isAskedToTryAgain];
}

id objc_msgSend_isAssignable(void *a1, const char *a2, ...)
{
  return _[a1 isAssignable];
}

id objc_msgSend_isAuthenticated(void *a1, const char *a2, ...)
{
  return _[a1 isAuthenticated];
}

id objc_msgSend_isAuthorizable(void *a1, const char *a2, ...)
{
  return _[a1 isAuthorizable];
}

id objc_msgSend_isBootstrapped(void *a1, const char *a2, ...)
{
  return _[a1 isBootstrapped];
}

id objc_msgSend_isCached_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCached:");
}

id objc_msgSend_isCancelled(void *a1, const char *a2, ...)
{
  return _[a1 isCancelled];
}

id objc_msgSend_isClassMemberSearch(void *a1, const char *a2, ...)
{
  return _[a1 isClassMemberSearch];
}

id objc_msgSend_isClassSearch(void *a1, const char *a2, ...)
{
  return _[a1 isClassSearch];
}

id objc_msgSend_isComplete(void *a1, const char *a2, ...)
{
  return _[a1 isComplete];
}

id objc_msgSend_isCompleted(void *a1, const char *a2, ...)
{
  return _[a1 isCompleted];
}

id objc_msgSend_isCompletedActivity(void *a1, const char *a2, ...)
{
  return _[a1 isCompletedActivity];
}

id objc_msgSend_isCompletedHandout(void *a1, const char *a2, ...)
{
  return _[a1 isCompletedHandout];
}

id objc_msgSend_isContextTrackingAllowed(void *a1, const char *a2, ...)
{
  return _[a1 isContextTrackingAllowed];
}

id objc_msgSend_isDashboardAPIEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isDashboardAPIEnabled];
}

id objc_msgSend_isDatabaseWithNameAttached_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDatabaseWithNameAttached:");
}

id objc_msgSend_isDateInToday_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDateInToday:");
}

id objc_msgSend_isDeleteTracked(void *a1, const char *a2, ...)
{
  return _[a1 isDeleteTracked];
}

id objc_msgSend_isDeleted(void *a1, const char *a2, ...)
{
  return _[a1 isDeleted];
}

id objc_msgSend_isDownloaded(void *a1, const char *a2, ...)
{
  return _[a1 isDownloaded];
}

id objc_msgSend_isEDUMAID(void *a1, const char *a2, ...)
{
  return _[a1 isEDUMAID];
}

id objc_msgSend_isEditable(void *a1, const char *a2, ...)
{
  return _[a1 isEditable];
}

id objc_msgSend_isEduUser(void *a1, const char *a2, ...)
{
  return _[a1 isEduUser];
}

id objc_msgSend_isEnabledForDataclass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEnabledForDataclass:");
}

id objc_msgSend_isEndpointAvailable_inDatabase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEndpointAvailable:inDatabase:");
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqual:");
}

id objc_msgSend_isEqualToArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToArray:");
}

id objc_msgSend_isEqualToDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToDate:");
}

id objc_msgSend_isEqualToNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToNumber:");
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_isExecuting(void *a1, const char *a2, ...)
{
  return _[a1 isExecuting];
}

id objc_msgSend_isExpiredSyncTokenError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isExpiredSyncTokenError:");
}

id objc_msgSend_isFederatedAccount(void *a1, const char *a2, ...)
{
  return _[a1 isFederatedAccount];
}

id objc_msgSend_isFileURL(void *a1, const char *a2, ...)
{
  return _[a1 isFileURL];
}

id objc_msgSend_isFinished(void *a1, const char *a2, ...)
{
  return _[a1 isFinished];
}

id objc_msgSend_isGroupMemberSearch(void *a1, const char *a2, ...)
{
  return _[a1 isGroupMemberSearch];
}

id objc_msgSend_isGroupSearch(void *a1, const char *a2, ...)
{
  return _[a1 isGroupSearch];
}

id objc_msgSend_isImmutabilityEnforced(void *a1, const char *a2, ...)
{
  return _[a1 isImmutabilityEnforced];
}

id objc_msgSend_isInDevelopmentEnvironment(void *a1, const char *a2, ...)
{
  return _[a1 isInDevelopmentEnvironment];
}

id objc_msgSend_isInSyncBlock(void *a1, const char *a2, ...)
{
  return _[a1 isInSyncBlock];
}

id objc_msgSend_isIncompleteActivity(void *a1, const char *a2, ...)
{
  return _[a1 isIncompleteActivity];
}

id objc_msgSend_isIncompleteHandout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isIncompleteHandout:");
}

id objc_msgSend_isInstalled(void *a1, const char *a2, ...)
{
  return _[a1 isInstalled];
}

id objc_msgSend_isInternal(void *a1, const char *a2, ...)
{
  return _[a1 isInternal];
}

id objc_msgSend_isInternalWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isInternalWithError:");
}

id objc_msgSend_isInvalidated(void *a1, const char *a2, ...)
{
  return _[a1 isInvalidated];
}

id objc_msgSend_isLocationSearch(void *a1, const char *a2, ...)
{
  return _[a1 isLocationSearch];
}

id objc_msgSend_isLocked(void *a1, const char *a2, ...)
{
  return _[a1 isLocked];
}

id objc_msgSend_isMemberOfClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMemberOfClass:");
}

id objc_msgSend_isOrganizationSearch(void *a1, const char *a2, ...)
{
  return _[a1 isOrganizationSearch];
}

id objc_msgSend_isOriginal(void *a1, const char *a2, ...)
{
  return _[a1 isOriginal];
}

id objc_msgSend_isPersonSearch(void *a1, const char *a2, ...)
{
  return _[a1 isPersonSearch];
}

id objc_msgSend_isPrepared(void *a1, const char *a2, ...)
{
  return _[a1 isPrepared];
}

id objc_msgSend_isProgressTrackingAllowed(void *a1, const char *a2, ...)
{
  return _[a1 isProgressTrackingAllowed];
}

id objc_msgSend_isReady(void *a1, const char *a2, ...)
{
  return _[a1 isReady];
}

id objc_msgSend_isRegisterDashboardEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isRegisterDashboardEnabled];
}

id objc_msgSend_isRepeating(void *a1, const char *a2, ...)
{
  return _[a1 isRepeating];
}

id objc_msgSend_isReturnedActivity(void *a1, const char *a2, ...)
{
  return _[a1 isReturnedActivity];
}

id objc_msgSend_isReviewed(void *a1, const char *a2, ...)
{
  return _[a1 isReviewed];
}

id objc_msgSend_isRosterSearchAllowed(void *a1, const char *a2, ...)
{
  return _[a1 isRosterSearchAllowed];
}

id objc_msgSend_isSearchAPIEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isSearchAPIEnabled];
}

id objc_msgSend_isSearchable(void *a1, const char *a2, ...)
{
  return _[a1 isSearchable];
}

id objc_msgSend_isServerBusyError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isServerBusyError:");
}

id objc_msgSend_isSharedIPad(void *a1, const char *a2, ...)
{
  return _[a1 isSharedIPad];
}

id objc_msgSend_isStaged(void *a1, const char *a2, ...)
{
  return _[a1 isStaged];
}

id objc_msgSend_isStudent(void *a1, const char *a2, ...)
{
  return _[a1 isStudent];
}

id objc_msgSend_isSubclassOfClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSubclassOfClass:");
}

id objc_msgSend_isSubscribedTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSubscribedTo:");
}

id objc_msgSend_isSyncableDataWritten(void *a1, const char *a2, ...)
{
  return _[a1 isSyncableDataWritten];
}

id objc_msgSend_isTemporary(void *a1, const char *a2, ...)
{
  return _[a1 isTemporary];
}

id objc_msgSend_isUbiquitousURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isUbiquitousURL:");
}

id objc_msgSend_isUploaded(void *a1, const char *a2, ...)
{
  return _[a1 isUploaded];
}

id objc_msgSend_isUploaded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isUploaded:");
}

id objc_msgSend_isValid_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isValid:error:");
}

id objc_msgSend_isValidASMSearchSpecification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isValidASMSearchSpecification:");
}

id objc_msgSend_isVersion_greaterThanOrEqualToVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isVersion:greaterThanOrEqualToVersion:");
}

id objc_msgSend_issueASMFetchMissingWithDependency_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "issueASMFetchMissingWithDependency:");
}

id objc_msgSend_issueASMSyncWithDependency_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "issueASMSyncWithDependency:");
}

id objc_msgSend_issueCKBootstrapWithDependency_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "issueCKBootstrapWithDependency:");
}

id objc_msgSend_issueFetchFromCKWithDependency_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "issueFetchFromCKWithDependency:");
}

id objc_msgSend_issueFetchHandoutChangesWithDependency_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "issueFetchHandoutChangesWithDependency:");
}

id objc_msgSend_issueIngestWithDependency_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "issueIngestWithDependency:");
}

id objc_msgSend_issuePushClassChangesWithDependency_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "issuePushClassChangesWithDependency:");
}

id objc_msgSend_issuePushToCKWithDependency_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "issuePushToCKWithDependency:");
}

id objc_msgSend_issueRegisterWithDependency_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "issueRegisterWithDependency:");
}

id objc_msgSend_issueUploadEventsWithDependency_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "issueUploadEventsWithDependency:");
}

id objc_msgSend_itemIds(void *a1, const char *a2, ...)
{
  return _[a1 itemIds];
}

id objc_msgSend_itemIdsAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "itemIdsAtIndex:");
}

id objc_msgSend_itemIdsCount(void *a1, const char *a2, ...)
{
  return _[a1 itemIdsCount];
}

id objc_msgSend_itemText(void *a1, const char *a2, ...)
{
  return _[a1 itemText];
}

id objc_msgSend_items(void *a1, const char *a2, ...)
{
  return _[a1 items];
}

id objc_msgSend_itemsAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "itemsAtIndex:");
}

id objc_msgSend_itemsCount(void *a1, const char *a2, ...)
{
  return _[a1 itemsCount];
}

id objc_msgSend_key(void *a1, const char *a2, ...)
{
  return _[a1 key];
}

id objc_msgSend_keyEnumerator(void *a1, const char *a2, ...)
{
  return _[a1 keyEnumerator];
}

id objc_msgSend_keyPath(void *a1, const char *a2, ...)
{
  return _[a1 keyPath];
}

id objc_msgSend_keysOfEntriesPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keysOfEntriesPassingTest:");
}

id objc_msgSend_kind(void *a1, const char *a2, ...)
{
  return _[a1 kind];
}

id objc_msgSend_lastChangeID(void *a1, const char *a2, ...)
{
  return _[a1 lastChangeID];
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return _[a1 lastObject];
}

id objc_msgSend_lastPathComponent(void *a1, const char *a2, ...)
{
  return _[a1 lastPathComponent];
}

id objc_msgSend_lastReviewedDate(void *a1, const char *a2, ...)
{
  return _[a1 lastReviewedDate];
}

id objc_msgSend_lastTriggerDate(void *a1, const char *a2, ...)
{
  return _[a1 lastTriggerDate];
}

id objc_msgSend_leadingValueLabel(void *a1, const char *a2, ...)
{
  return _[a1 leadingValueLabel];
}

id objc_msgSend_leftExpression(void *a1, const char *a2, ...)
{
  return _[a1 leftExpression];
}

id objc_msgSend_leftKeyPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leftKeyPath:");
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _[a1 length];
}

id objc_msgSend_limit(void *a1, const char *a2, ...)
{
  return _[a1 limit];
}

id objc_msgSend_listener(void *a1, const char *a2, ...)
{
  return _[a1 listener];
}

id objc_msgSend_loadConfig(void *a1, const char *a2, ...)
{
  return _[a1 loadConfig];
}

id objc_msgSend_loadICloudUserIDIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 loadICloudUserIDIfNeeded];
}

id objc_msgSend_localTimeZone(void *a1, const char *a2, ...)
{
  return _[a1 localTimeZone];
}

id objc_msgSend_localizedDescription(void *a1, const char *a2, ...)
{
  return _[a1 localizedDescription];
}

id objc_msgSend_localizedStringForKey_value_table_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringForKey:value:table:");
}

id objc_msgSend_localizedTimeInterval_calendar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedTimeInterval:calendar:");
}

id objc_msgSend_location(void *a1, const char *a2, ...)
{
  return _[a1 location];
}

id objc_msgSend_locationID(void *a1, const char *a2, ...)
{
  return _[a1 locationID];
}

id objc_msgSend_locationIDs(void *a1, const char *a2, ...)
{
  return _[a1 locationIDs];
}

id objc_msgSend_locationIDsMatchingConstraintsForSearchSpecification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationIDsMatchingConstraintsForSearchSpecification:");
}

id objc_msgSend_locationIDsWithPrivilege_onPersonIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationIDsWithPrivilege:onPersonIDs:");
}

id objc_msgSend_locationIDsWithRoleType_onPersonIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationIDsWithRoleType:onPersonIDs:");
}

id objc_msgSend_locationIDsWithoutPrivilege_onPersonIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationIDsWithoutPrivilege:onPersonIDs:");
}

id objc_msgSend_locationId(void *a1, const char *a2, ...)
{
  return _[a1 locationId];
}

id objc_msgSend_locationIds(void *a1, const char *a2, ...)
{
  return _[a1 locationIds];
}

id objc_msgSend_locationIdsAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationIdsAtIndex:");
}

id objc_msgSend_locationIdsCount(void *a1, const char *a2, ...)
{
  return _[a1 locationIdsCount];
}

id objc_msgSend_locationName(void *a1, const char *a2, ...)
{
  return _[a1 locationName];
}

id objc_msgSend_locationPersonIDs(void *a1, const char *a2, ...)
{
  return _[a1 locationPersonIDs];
}

id objc_msgSend_locationSearchPredicateForSearchSpec_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationSearchPredicateForSearchSpec:");
}

id objc_msgSend_locationSortDescriptors(void *a1, const char *a2, ...)
{
  return _[a1 locationSortDescriptors];
}

id objc_msgSend_locations(void *a1, const char *a2, ...)
{
  return _[a1 locations];
}

id objc_msgSend_locationsAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationsAtIndex:");
}

id objc_msgSend_locationsCount(void *a1, const char *a2, ...)
{
  return _[a1 locationsCount];
}

id objc_msgSend_lock(void *a1, const char *a2, ...)
{
  return _[a1 lock];
}

id objc_msgSend_logHTTPHeaders_withMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logHTTPHeaders:withMessage:");
}

id objc_msgSend_logPayloadBeforeProcessing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logPayloadBeforeProcessing:");
}

id objc_msgSend_logSubsystem(void *a1, const char *a2, ...)
{
  return _[a1 logSubsystem];
}

id objc_msgSend_longLongValue(void *a1, const char *a2, ...)
{
  return _[a1 longLongValue];
}

id objc_msgSend_lowercaseString(void *a1, const char *a2, ...)
{
  return _[a1 lowercaseString];
}

id objc_msgSend_magicValue(void *a1, const char *a2, ...)
{
  return _[a1 magicValue];
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return _[a1 mainBundle];
}

id objc_msgSend_mainRunLoop(void *a1, const char *a2, ...)
{
  return _[a1 mainRunLoop];
}

id objc_msgSend_makeObjectsPerformSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeObjectsPerformSelector:");
}

id objc_msgSend_manager(void *a1, const char *a2, ...)
{
  return _[a1 manager];
}

id objc_msgSend_mapTableWithKeyOptions_valueOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mapTableWithKeyOptions:valueOptions:");
}

id objc_msgSend_markAll_where_bindings_as_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "markAll:where:bindings:as:");
}

id objc_msgSend_markAsBootstrapped(void *a1, const char *a2, ...)
{
  return _[a1 markAsBootstrapped];
}

id objc_msgSend_markAsExecuting(void *a1, const char *a2, ...)
{
  return _[a1 markAsExecuting];
}

id objc_msgSend_markAsFinished(void *a1, const char *a2, ...)
{
  return _[a1 markAsFinished];
}

id objc_msgSend_markDone_then_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "markDone:then:");
}

id objc_msgSend_markObject_as_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "markObject:as:");
}

id objc_msgSend_maxExecutionCount(void *a1, const char *a2, ...)
{
  return _[a1 maxExecutionCount];
}

id objc_msgSend_maxScore(void *a1, const char *a2, ...)
{
  return _[a1 maxScore];
}

id objc_msgSend_maxValue(void *a1, const char *a2, ...)
{
  return _[a1 maxValue];
}

id objc_msgSend_maximum(void *a1, const char *a2, ...)
{
  return _[a1 maximum];
}

id objc_msgSend_maximumTextLength(void *a1, const char *a2, ...)
{
  return _[a1 maximumTextLength];
}

id objc_msgSend_mayOpenFromManagedToUnmanaged(void *a1, const char *a2, ...)
{
  return _[a1 mayOpenFromManagedToUnmanaged];
}

id objc_msgSend_mayOpenFromUnmanagedToManaged(void *a1, const char *a2, ...)
{
  return _[a1 mayOpenFromUnmanagedToManaged];
}

id objc_msgSend_maySyncWithAssetZone(void *a1, const char *a2, ...)
{
  return _[a1 maySyncWithAssetZone];
}

id objc_msgSend_maySyncWithProgressZone(void *a1, const char *a2, ...)
{
  return _[a1 maySyncWithProgressZone];
}

id objc_msgSend_maySyncWithSurveyAnswerZone(void *a1, const char *a2, ...)
{
  return _[a1 maySyncWithSurveyAnswerZone];
}

id objc_msgSend_maySyncWithTeacherZone(void *a1, const char *a2, ...)
{
  return _[a1 maySyncWithTeacherZone];
}

id objc_msgSend_mayUseCellularData(void *a1, const char *a2, ...)
{
  return _[a1 mayUseCellularData];
}

id objc_msgSend_memoryPressureStatusChanged(void *a1, const char *a2, ...)
{
  return _[a1 memoryPressureStatusChanged];
}

id objc_msgSend_mergeChangesFrom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mergeChangesFrom:");
}

id objc_msgSend_mergeExistingLocalStateIntoRequestStateChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mergeExistingLocalStateIntoRequestStateChange:");
}

id objc_msgSend_mergeFrom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mergeFrom:");
}

id objc_msgSend_message(void *a1, const char *a2, ...)
{
  return _[a1 message];
}

id objc_msgSend_meta(void *a1, const char *a2, ...)
{
  return _[a1 meta];
}

id objc_msgSend_metricsController(void *a1, const char *a2, ...)
{
  return _[a1 metricsController];
}

id objc_msgSend_midValueLabel(void *a1, const char *a2, ...)
{
  return _[a1 midValueLabel];
}

id objc_msgSend_middleName(void *a1, const char *a2, ...)
{
  return _[a1 middleName];
}

id objc_msgSend_migrate(void *a1, const char *a2, ...)
{
  return _[a1 migrate];
}

id objc_msgSend_migrateEntity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "migrateEntity:");
}

id objc_msgSend_migrateFromVersion_finalVersion_inDatabase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "migrateFromVersion:finalVersion:inDatabase:");
}

id objc_msgSend_migrationOrder(void *a1, const char *a2, ...)
{
  return _[a1 migrationOrder];
}

id objc_msgSend_miniStatusReport(void *a1, const char *a2, ...)
{
  return _[a1 miniStatusReport];
}

id objc_msgSend_minimum(void *a1, const char *a2, ...)
{
  return _[a1 minimum];
}

id objc_msgSend_minimumSearchKeyLength(void *a1, const char *a2, ...)
{
  return _[a1 minimumSearchKeyLength];
}

id objc_msgSend_minimumTextLength(void *a1, const char *a2, ...)
{
  return _[a1 minimumTextLength];
}

id objc_msgSend_minusSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "minusSet:");
}

id objc_msgSend_missingIDsByClass(void *a1, const char *a2, ...)
{
  return _[a1 missingIDsByClass];
}

id objc_msgSend_mode(void *a1, const char *a2, ...)
{
  return _[a1 mode];
}

id objc_msgSend_moreDataAvailable(void *a1, const char *a2, ...)
{
  return _[a1 moreDataAvailable];
}

id objc_msgSend_moveDownloadedAssetFileToContentStoreCacheForAsset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "moveDownloadedAssetFileToContentStoreCacheForAsset:");
}

id objc_msgSend_moveDownloadedAssetThumbnailFileToContentStoreCacheForAsset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "moveDownloadedAssetThumbnailFileToContentStoreCacheForAsset:");
}

id objc_msgSend_moveItemAtURL_toURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "moveItemAtURL:toURL:error:");
}

id objc_msgSend_multimediaCacheDirectoryURL(void *a1, const char *a2, ...)
{
  return _[a1 multimediaCacheDirectoryURL];
}

id objc_msgSend_multipleChoiceSelectedIndexValue(void *a1, const char *a2, ...)
{
  return _[a1 multipleChoiceSelectedIndexValue];
}

id objc_msgSend_multipleChoiceType(void *a1, const char *a2, ...)
{
  return _[a1 multipleChoiceType];
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return _[a1 mutableCopy];
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _[a1 name];
}

id objc_msgSend_nameOfEntity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nameOfEntity:");
}

id objc_msgSend_needsRepair(void *a1, const char *a2, ...)
{
  return _[a1 needsRepair];
}

id objc_msgSend_needsToMakeNetworkRequest(void *a1, const char *a2, ...)
{
  return _[a1 needsToMakeNetworkRequest];
}

id objc_msgSend_nextBatchPointer(void *a1, const char *a2, ...)
{
  return _[a1 nextBatchPointer];
}

id objc_msgSend_nextDateAfterDate_matchingComponents_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nextDateAfterDate:matchingComponents:options:");
}

id objc_msgSend_nextDateAfterDate_matchingHour_minute_second_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nextDateAfterDate:matchingHour:minute:second:options:");
}

id objc_msgSend_nextTriggerDateFromReferenceDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nextTriggerDateFromReferenceDate:");
}

id objc_msgSend_notPredicateWithSubpredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notPredicateWithSubpredicate:");
}

id objc_msgSend_note(void *a1, const char *a2, ...)
{
  return _[a1 note];
}

id objc_msgSend_notificationCenter(void *a1, const char *a2, ...)
{
  return _[a1 notificationCenter];
}

id objc_msgSend_notificationDataWithDatabase_recipient_attachmentID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationDataWithDatabase:recipient:attachmentID:");
}

id objc_msgSend_notificationDataWithDatabase_recipient_handoutID_handoutTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationDataWithDatabase:recipient:handoutID:handoutTitle:");
}

id objc_msgSend_notificationFromRemoteNotificationDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationFromRemoteNotificationDictionary:");
}

id objc_msgSend_notifiedHandoutIDs(void *a1, const char *a2, ...)
{
  return _[a1 notifiedHandoutIDs];
}

id objc_msgSend_notifiedHandoutIds(void *a1, const char *a2, ...)
{
  return _[a1 notifiedHandoutIds];
}

id objc_msgSend_notifyUploadCompleted(void *a1, const char *a2, ...)
{
  return _[a1 notifyUploadCompleted];
}

id objc_msgSend_notifyUploadProgress(void *a1, const char *a2, ...)
{
  return _[a1 notifyUploadProgress];
}

id objc_msgSend_now(void *a1, const char *a2, ...)
{
  return _[a1 now];
}

id objc_msgSend_null(void *a1, const char *a2, ...)
{
  return _[a1 null];
}

id objc_msgSend_numberWithBool_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithBool:");
}

id objc_msgSend_numberWithDouble_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithDouble:");
}

id objc_msgSend_numberWithInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInt:");
}

id objc_msgSend_numberWithInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInteger:");
}

id objc_msgSend_numberWithLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithLong:");
}

id objc_msgSend_numberWithLongLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithLongLong:");
}

id objc_msgSend_numberWithUnsignedInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedInt:");
}

id objc_msgSend_numberWithUnsignedInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedInteger:");
}

id objc_msgSend_numberWithUnsignedLongLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedLongLong:");
}

id objc_msgSend_objCType(void *a1, const char *a2, ...)
{
  return _[a1 objCType];
}

id objc_msgSend_objcClient(void *a1, const char *a2, ...)
{
  return _[a1 objcClient];
}

id objc_msgSend_object(void *a1, const char *a2, ...)
{
  return _[a1 object];
}

id objc_msgSend_objectAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndex:");
}

id objc_msgSend_objectAtIndexedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndexedSubscript:");
}

id objc_msgSend_objectEnumerator(void *a1, const char *a2, ...)
{
  return _[a1 objectEnumerator];
}

id objc_msgSend_objectForCKRecord_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForCKRecord:");
}

id objc_msgSend_objectForInfoDictionaryKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForInfoDictionaryKey:");
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKey:");
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKeyedSubscript:");
}

id objc_msgSend_objectID(void *a1, const char *a2, ...)
{
  return _[a1 objectID];
}

id objc_msgSend_objectIDForClassID_andPersonID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectIDForClassID:andPersonID:");
}

id objc_msgSend_objectIDForIdentifierPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectIDForIdentifierPath:");
}

id objc_msgSend_objectIDPath(void *a1, const char *a2, ...)
{
  return _[a1 objectIDPath];
}

id objc_msgSend_objectIDPathFromIdentifierPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectIDPathFromIdentifierPath:");
}

id objc_msgSend_objectIDsForSQL_resultColumnName_bindings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectIDsForSQL:resultColumnName:bindings:");
}

id objc_msgSend_objectId(void *a1, const char *a2, ...)
{
  return _[a1 objectId];
}

id objc_msgSend_objectsAtIndexes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectsAtIndexes:");
}

id objc_msgSend_observedPresentedItemUbiquityAttributes(void *a1, const char *a2, ...)
{
  return _[a1 observedPresentedItemUbiquityAttributes];
}

id objc_msgSend_observedTableName(void *a1, const char *a2, ...)
{
  return _[a1 observedTableName];
}

id objc_msgSend_observerOptions(void *a1, const char *a2, ...)
{
  return _[a1 observerOptions];
}

id objc_msgSend_observers(void *a1, const char *a2, ...)
{
  return _[a1 observers];
}

id objc_msgSend_offset(void *a1, const char *a2, ...)
{
  return _[a1 offset];
}

id objc_msgSend_onRowUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onRowUpdate:");
}

id objc_msgSend_openResponseAllowMedia(void *a1, const char *a2, ...)
{
  return _[a1 openResponseAllowMedia];
}

id objc_msgSend_openResponseMaximumTextLength(void *a1, const char *a2, ...)
{
  return _[a1 openResponseMaximumTextLength];
}

id objc_msgSend_openResponseMinimumTextLength(void *a1, const char *a2, ...)
{
  return _[a1 openResponseMinimumTextLength];
}

id objc_msgSend_openResponseTeacherProvidedText(void *a1, const char *a2, ...)
{
  return _[a1 openResponseTeacherProvidedText];
}

id objc_msgSend_openResponseType(void *a1, const char *a2, ...)
{
  return _[a1 openResponseType];
}

id objc_msgSend_openSensitiveURL_withOptions_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openSensitiveURL:withOptions:error:");
}

id objc_msgSend_openWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openWithError:");
}

id objc_msgSend_operationCount(void *a1, const char *a2, ...)
{
  return _[a1 operationCount];
}

id objc_msgSend_operationError(void *a1, const char *a2, ...)
{
  return _[a1 operationError];
}

id objc_msgSend_operationID(void *a1, const char *a2, ...)
{
  return _[a1 operationID];
}

id objc_msgSend_operations(void *a1, const char *a2, ...)
{
  return _[a1 operations];
}

id objc_msgSend_operationsManager(void *a1, const char *a2, ...)
{
  return _[a1 operationsManager];
}

id objc_msgSend_optInToDnUiOS(void *a1, const char *a2, ...)
{
  return _[a1 optInToDnUiOS];
}

id objc_msgSend_optionItems(void *a1, const char *a2, ...)
{
  return _[a1 optionItems];
}

id objc_msgSend_optionItemsAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "optionItemsAtIndex:");
}

id objc_msgSend_optionItemsCount(void *a1, const char *a2, ...)
{
  return _[a1 optionItemsCount];
}

id objc_msgSend_options(void *a1, const char *a2, ...)
{
  return _[a1 options];
}

id objc_msgSend_orgID(void *a1, const char *a2, ...)
{
  return _[a1 orgID];
}

id objc_msgSend_orgId(void *a1, const char *a2, ...)
{
  return _[a1 orgId];
}

id objc_msgSend_organization(void *a1, const char *a2, ...)
{
  return _[a1 organization];
}

id objc_msgSend_organizationCloudDatabase(void *a1, const char *a2, ...)
{
  return _[a1 organizationCloudDatabase];
}

id objc_msgSend_organizationID(void *a1, const char *a2, ...)
{
  return _[a1 organizationID];
}

id objc_msgSend_organizationId(void *a1, const char *a2, ...)
{
  return _[a1 organizationId];
}

id objc_msgSend_organizationName(void *a1, const char *a2, ...)
{
  return _[a1 organizationName];
}

id objc_msgSend_organizationProgressTrackingAllowed(void *a1, const char *a2, ...)
{
  return _[a1 organizationProgressTrackingAllowed];
}

id objc_msgSend_organizationSearchPredicateForSearchSpec_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "organizationSearchPredicateForSearchSpec:");
}

id objc_msgSend_organizationSortDescriptors(void *a1, const char *a2, ...)
{
  return _[a1 organizationSortDescriptors];
}

id objc_msgSend_organizationType(void *a1, const char *a2, ...)
{
  return _[a1 organizationType];
}

id objc_msgSend_originalFilename(void *a1, const char *a2, ...)
{
  return _[a1 originalFilename];
}

id objc_msgSend_originatingSource(void *a1, const char *a2, ...)
{
  return _[a1 originatingSource];
}

id objc_msgSend_otherButtonInfos(void *a1, const char *a2, ...)
{
  return _[a1 otherButtonInfos];
}

id objc_msgSend_otherButtonInfosAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "otherButtonInfosAtIndex:");
}

id objc_msgSend_otherButtonInfosCount(void *a1, const char *a2, ...)
{
  return _[a1 otherButtonInfosCount];
}

id objc_msgSend_overrideConfig_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "overrideConfig:");
}

id objc_msgSend_ownerId(void *a1, const char *a2, ...)
{
  return _[a1 ownerId];
}

id objc_msgSend_ownerPersonID(void *a1, const char *a2, ...)
{
  return _[a1 ownerPersonID];
}

id objc_msgSend_parent(void *a1, const char *a2, ...)
{
  return _[a1 parent];
}

id objc_msgSend_parentEntityClass(void *a1, const char *a2, ...)
{
  return _[a1 parentEntityClass];
}

id objc_msgSend_parentEntityName(void *a1, const char *a2, ...)
{
  return _[a1 parentEntityName];
}

id objc_msgSend_parentEntityType(void *a1, const char *a2, ...)
{
  return _[a1 parentEntityType];
}

id objc_msgSend_parentObjectID(void *a1, const char *a2, ...)
{
  return _[a1 parentObjectID];
}

id objc_msgSend_parentObjectId(void *a1, const char *a2, ...)
{
  return _[a1 parentObjectId];
}

id objc_msgSend_parentReferenceName(void *a1, const char *a2, ...)
{
  return _[a1 parentReferenceName];
}

id objc_msgSend_parentRequestId(void *a1, const char *a2, ...)
{
  return _[a1 parentRequestId];
}

id objc_msgSend_parseData_expectedClass_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parseData:expectedClass:error:");
}

id objc_msgSend_parseResponseData(void *a1, const char *a2, ...)
{
  return _[a1 parseResponseData];
}

id objc_msgSend_parseStreamedResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parseStreamedResponse:");
}

id objc_msgSend_parser(void *a1, const char *a2, ...)
{
  return _[a1 parser];
}

id objc_msgSend_participants(void *a1, const char *a2, ...)
{
  return _[a1 participants];
}

id objc_msgSend_passcodeType(void *a1, const char *a2, ...)
{
  return _[a1 passcodeType];
}

id objc_msgSend_pastDueUserNotificationDataFromHandouts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pastDueUserNotificationDataFromHandouts:");
}

id objc_msgSend_path(void *a1, const char *a2, ...)
{
  return _[a1 path];
}

id objc_msgSend_pathComponents(void *a1, const char *a2, ...)
{
  return _[a1 pathComponents];
}

id objc_msgSend_pathExtension(void *a1, const char *a2, ...)
{
  return _[a1 pathExtension];
}

id objc_msgSend_pathFromData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pathFromData:");
}

id objc_msgSend_payloadAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "payloadAtIndex:");
}

id objc_msgSend_payloadForCLSObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "payloadForCLSObject:");
}

id objc_msgSend_payloadForObject_action_database_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "payloadForObject:action:database:");
}

id objc_msgSend_payloadLimitBytes(void *a1, const char *a2, ...)
{
  return _[a1 payloadLimitBytes];
}

id objc_msgSend_payloadLimitItems(void *a1, const char *a2, ...)
{
  return _[a1 payloadLimitItems];
}

id objc_msgSend_payloads(void *a1, const char *a2, ...)
{
  return _[a1 payloads];
}

id objc_msgSend_payloadsCount(void *a1, const char *a2, ...)
{
  return _[a1 payloadsCount];
}

id objc_msgSend_payloadsForDeletedSurvey_classIDs_database_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "payloadsForDeletedSurvey:classIDs:database:");
}

id objc_msgSend_payloadsForObject_withSyncItem_database_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "payloadsForObject:withSyncItem:database:");
}

id objc_msgSend_payloadsWithClassIDs_dependencies_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "payloadsWithClassIDs:dependencies:");
}

id objc_msgSend_pd_andCompoundWith_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pd_andCompoundWith:");
}

id objc_msgSend_pd_close(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pd_close");
}

id objc_msgSend_pd_containsKeyPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pd_containsKeyPath:");
}

id objc_msgSend_pd_filterSubpredicatesForKeyPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pd_filterSubpredicatesForKeyPath:");
}

id objc_msgSend_pd_keypathValueMap(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pd_keypathValueMap");
}

id objc_msgSend_pd_scopeToKeyPath_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pd_scopeToKeyPath:value:");
}

id objc_msgSend_pendingAttachmentEvents(void *a1, const char *a2, ...)
{
  return _[a1 pendingAttachmentEvents];
}

id objc_msgSend_pendingRecipientHandoutData(void *a1, const char *a2, ...)
{
  return _[a1 pendingRecipientHandoutData];
}

id objc_msgSend_pendingStatesChanges(void *a1, const char *a2, ...)
{
  return _[a1 pendingStatesChanges];
}

id objc_msgSend_performCKDatabaseOperation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performCKDatabaseOperation:");
}

id objc_msgSend_performFrameworkMigrationIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 performFrameworkMigrationIfNeeded];
}

id objc_msgSend_performRequestWithHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performRequestWithHandler:");
}

id objc_msgSend_performTransaction_forWriting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performTransaction:forWriting:");
}

id objc_msgSend_performTransactionWithType_error_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performTransactionWithType:error:usingBlock:");
}

id objc_msgSend_performUpdateBlock_changeType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performUpdateBlock:changeType:");
}

id objc_msgSend_permissionType(void *a1, const char *a2, ...)
{
  return _[a1 permissionType];
}

id objc_msgSend_person(void *a1, const char *a2, ...)
{
  return _[a1 person];
}

id objc_msgSend_personID(void *a1, const char *a2, ...)
{
  return _[a1 personID];
}

id objc_msgSend_personIDsAnyRoleAtLocationIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "personIDsAnyRoleAtLocationIDs:");
}

id objc_msgSend_personIDsForClassMembersMatchingConstraintsForSearchSpecification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "personIDsForClassMembersMatchingConstraintsForSearchSpecification:");
}

id objc_msgSend_personIDsForGroupMembersMatchingConstraintsForSearchSpecification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "personIDsForGroupMembersMatchingConstraintsForSearchSpecification:");
}

id objc_msgSend_personIDsMatchingConstraintsForSearchSpecification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "personIDsMatchingConstraintsForSearchSpecification:");
}

id objc_msgSend_personIDsWithRoleID_atLocationIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "personIDsWithRoleID:atLocationIDs:");
}

id objc_msgSend_personIDsWithRoleType_atLocationIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "personIDsWithRoleType:atLocationIDs:");
}

id objc_msgSend_personId(void *a1, const char *a2, ...)
{
  return _[a1 personId];
}

id objc_msgSend_personIds(void *a1, const char *a2, ...)
{
  return _[a1 personIds];
}

id objc_msgSend_personLinksAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "personLinksAtIndex:");
}

id objc_msgSend_personLinksCount(void *a1, const char *a2, ...)
{
  return _[a1 personLinksCount];
}

id objc_msgSend_personLocationIDs(void *a1, const char *a2, ...)
{
  return _[a1 personLocationIDs];
}

id objc_msgSend_personNumber(void *a1, const char *a2, ...)
{
  return _[a1 personNumber];
}

id objc_msgSend_personSortDescriptors(void *a1, const char *a2, ...)
{
  return _[a1 personSortDescriptors];
}

id objc_msgSend_personlinkServiceContext(void *a1, const char *a2, ...)
{
  return _[a1 personlinkServiceContext];
}

id objc_msgSend_phoneticFamilyName(void *a1, const char *a2, ...)
{
  return _[a1 phoneticFamilyName];
}

id objc_msgSend_phoneticGivenName(void *a1, const char *a2, ...)
{
  return _[a1 phoneticGivenName];
}

id objc_msgSend_phoneticMiddleName(void *a1, const char *a2, ...)
{
  return _[a1 phoneticMiddleName];
}

id objc_msgSend_poolItemForPool_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "poolItemForPool:");
}

id objc_msgSend_populate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "populate:");
}

id objc_msgSend_populateClassIDsBuffer_handoutIDsBuffer_studentIDsBUffer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "populateClassIDsBuffer:handoutIDsBuffer:studentIDsBUffer:");
}

id objc_msgSend_populateDevDB_forStudent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "populateDevDB:forStudent:");
}

id objc_msgSend_populateRecordsToSave_idsToDelete_withSyncItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "populateRecordsToSave:idsToDelete:withSyncItem:");
}

id objc_msgSend_populateSearchField_bindings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "populateSearchField:bindings:");
}

id objc_msgSend_postFilterWillAcceptClassMember_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postFilterWillAcceptClassMember:");
}

id objc_msgSend_postFilterWillAcceptGroupMember_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postFilterWillAcceptGroupMember:");
}

id objc_msgSend_postFilterWillAcceptPerson_withRoleLocations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postFilterWillAcceptPerson:withRoleLocations:");
}

id objc_msgSend_postNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotification:");
}

id objc_msgSend_postNotificationAsync_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotificationAsync:");
}

id objc_msgSend_postNotificationName_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotificationName:object:");
}

id objc_msgSend_postNotificationName_object_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotificationName:object:userInfo:");
}

id objc_msgSend_predicate(void *a1, const char *a2, ...)
{
  return _[a1 predicate];
}

id objc_msgSend_predicateForClasses(void *a1, const char *a2, ...)
{
  return _[a1 predicateForClasses];
}

id objc_msgSend_predicateForGroups(void *a1, const char *a2, ...)
{
  return _[a1 predicateForGroups];
}

id objc_msgSend_predicateForObjectsWithObjectIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForObjectsWithObjectIDs:");
}

id objc_msgSend_predicateForPersons(void *a1, const char *a2, ...)
{
  return _[a1 predicateForPersons];
}

id objc_msgSend_predicateForPersonsWithObjectIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForPersonsWithObjectIDs:");
}

id objc_msgSend_predicateForPersonsWithPersonIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForPersonsWithPersonIDs:");
}

id objc_msgSend_predicateOperatorType(void *a1, const char *a2, ...)
{
  return _[a1 predicateOperatorType];
}

id objc_msgSend_predicateWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateWithFormat:");
}

id objc_msgSend_predicateWithLocationIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateWithLocationIDs:");
}

id objc_msgSend_prepare(void *a1, const char *a2, ...)
{
  return _[a1 prepare];
}

id objc_msgSend_prepareForNextRequest(void *a1, const char *a2, ...)
{
  return _[a1 prepareForNextRequest];
}

id objc_msgSend_prepareForNextRequestWithResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareForNextRequestWithResponse:");
}

id objc_msgSend_presentHalfWayCompletedBanner_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentHalfWayCompletedBanner:");
}

id objc_msgSend_presentProgressBannerWithAttachmentID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentProgressBannerWithAttachmentID:");
}

id objc_msgSend_presentedItemDidChangeUbiquityAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentedItemDidChangeUbiquityAttributes:");
}

id objc_msgSend_primaryActivityItemIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 primaryActivityItemIdentifier];
}

id objc_msgSend_primaryActivityReport(void *a1, const char *a2, ...)
{
  return _[a1 primaryActivityReport];
}

id objc_msgSend_primaryItem(void *a1, const char *a2, ...)
{
  return _[a1 primaryItem];
}

id objc_msgSend_priority(void *a1, const char *a2, ...)
{
  return _[a1 priority];
}

id objc_msgSend_privilegeName(void *a1, const char *a2, ...)
{
  return _[a1 privilegeName];
}

id objc_msgSend_privileges(void *a1, const char *a2, ...)
{
  return _[a1 privileges];
}

id objc_msgSend_privilegesAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "privilegesAtIndex:");
}

id objc_msgSend_privilegesCount(void *a1, const char *a2, ...)
{
  return _[a1 privilegesCount];
}

id objc_msgSend_prlConstraintSQLOnColumn_andValues_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prlConstraintSQLOnColumn:andValues:");
}

id objc_msgSend_prlSelectColumn_havingPrivilege_whereConstraintColumn_hasValues_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prlSelectColumn:havingPrivilege:whereConstraintColumn:hasValues:");
}

id objc_msgSend_processAdminRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processAdminRequest:");
}

id objc_msgSend_processAdminRequestAccountPayload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processAdminRequestAccountPayload:");
}

id objc_msgSend_processAttachment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processAttachment:");
}

id objc_msgSend_processAttachmentPayload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processAttachmentPayload:");
}

id objc_msgSend_processAuthorizationStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processAuthorizationStatus:");
}

id objc_msgSend_processClassLocationIDsSearchQuery_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processClassLocationIDsSearchQuery:");
}

id objc_msgSend_processClassMember_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processClassMember:");
}

id objc_msgSend_processClassMemberSearchQuery_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processClassMemberSearchQuery:");
}

id objc_msgSend_processClassPayload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processClassPayload:");
}

id objc_msgSend_processClassZonePayload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processClassZonePayload:");
}

id objc_msgSend_processCompletionStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processCompletionStatus:");
}

id objc_msgSend_processGroupLocationIDsSearchQuery_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processGroupLocationIDsSearchQuery:");
}

id objc_msgSend_processGroupMember_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processGroupMember:");
}

id objc_msgSend_processGroupMemberSearchQuery_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processGroupMemberSearchQuery:");
}

id objc_msgSend_processGroupPayload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processGroupPayload:");
}

id objc_msgSend_processIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 processIdentifier];
}

id objc_msgSend_processLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processLocation:");
}

id objc_msgSend_processObject_andUpdateSyncMetadataForRecord_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processObject:andUpdateSyncMetadataForRecord:");
}

id objc_msgSend_processOrganization_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processOrganization:");
}

id objc_msgSend_processOrganizationSearchQuery_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processOrganizationSearchQuery:");
}

id objc_msgSend_processPayloadFromResponse_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processPayloadFromResponse:error:");
}

id objc_msgSend_processPayloadStatus_allowMixedResponse_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processPayloadStatus:allowMixedResponse:error:");
}

id objc_msgSend_processPayloadWithinWriteTransaction_error_stop_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processPayloadWithinWriteTransaction:error:stop:");
}

id objc_msgSend_processPayloads_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processPayloads:error:");
}

id objc_msgSend_processPayloadsFromResponse_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processPayloadsFromResponse:error:");
}

id objc_msgSend_processPendingRecord_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processPendingRecord:");
}

id objc_msgSend_processPendingSyncUpdatesWithParentRecordIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processPendingSyncUpdatesWithParentRecordIDs:");
}

id objc_msgSend_processPerson_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processPerson:");
}

id objc_msgSend_processPersonSearchQuery_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processPersonSearchQuery:");
}

id objc_msgSend_processResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processResponse:");
}

id objc_msgSend_processResponseObject_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processResponseObject:error:");
}

id objc_msgSend_processResponseZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processResponseZone:");
}

id objc_msgSend_processSavedObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processSavedObjects:");
}

id objc_msgSend_processStateChange_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processStateChange:error:");
}

id objc_msgSend_processStatusPayload_allowMixedResponse_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processStatusPayload:allowMixedResponse:error:");
}

id objc_msgSend_processUpdatedTimeExpectation_newExpectation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processUpdatedTimeExpectation:newExpectation:");
}

id objc_msgSend_profile(void *a1, const char *a2, ...)
{
  return _[a1 profile];
}

id objc_msgSend_progress(void *a1, const char *a2, ...)
{
  return _[a1 progress];
}

id objc_msgSend_progressEntity(void *a1, const char *a2, ...)
{
  return _[a1 progressEntity];
}

id objc_msgSend_progressZone(void *a1, const char *a2, ...)
{
  return _[a1 progressZone];
}

id objc_msgSend_prohibitedLocationPrivilege(void *a1, const char *a2, ...)
{
  return _[a1 prohibitedLocationPrivilege];
}

id objc_msgSend_prohibitedPrivilege(void *a1, const char *a2, ...)
{
  return _[a1 prohibitedPrivilege];
}

id objc_msgSend_prohibitedPrivilegeLocationIDs(void *a1, const char *a2, ...)
{
  return _[a1 prohibitedPrivilegeLocationIDs];
}

id objc_msgSend_propertyListWithData_options_format_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "propertyListWithData:options:format:error:");
}

id objc_msgSend_proposedCredential(void *a1, const char *a2, ...)
{
  return _[a1 proposedCredential];
}

id objc_msgSend_protectionSpace(void *a1, const char *a2, ...)
{
  return _[a1 protectionSpace];
}

id objc_msgSend_publishError(void *a1, const char *a2, ...)
{
  return _[a1 publishError];
}

id objc_msgSend_publishingState(void *a1, const char *a2, ...)
{
  return _[a1 publishingState];
}

id objc_msgSend_quantity(void *a1, const char *a2, ...)
{
  return _[a1 quantity];
}

id objc_msgSend_quantityValue(void *a1, const char *a2, ...)
{
  return _[a1 quantityValue];
}

id objc_msgSend_queryHash(void *a1, const char *a2, ...)
{
  return _[a1 queryHash];
}

id objc_msgSend_queryPayloadAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryPayloadAtIndex:");
}

id objc_msgSend_queryPayloads(void *a1, const char *a2, ...)
{
  return _[a1 queryPayloads];
}

id objc_msgSend_queryPayloadsCount(void *a1, const char *a2, ...)
{
  return _[a1 queryPayloadsCount];
}

id objc_msgSend_questionID(void *a1, const char *a2, ...)
{
  return _[a1 questionID];
}

id objc_msgSend_questionText(void *a1, const char *a2, ...)
{
  return _[a1 questionText];
}

id objc_msgSend_questionType(void *a1, const char *a2, ...)
{
  return _[a1 questionType];
}

id objc_msgSend_queued_notifyDownloadCompleted_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queued_notifyDownloadCompleted:error:");
}

id objc_msgSend_queued_notifyDownloadProgressFraction_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queued_notifyDownloadProgressFraction:error:");
}

id objc_msgSend_queued_notifyUploadCompleted_url_thumbnailURL_relativePathWithinContainer_ubiquitousContainerName_brItemID_brOwnerName_brZoneName_brShareName_fractionUploaded_isTemporary_isStaged_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queued_notifyUploadCompleted:url:thumbnailURL:relativePathWithinContainer:ubiquitousContainerName:brItemID:brOwnerName:brZoneName:brShareName:fractionUploaded:isTemporary:isStaged:error:");
}

id objc_msgSend_queued_notifyUploadProgressFraction_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queued_notifyUploadProgressFraction:error:");
}

id objc_msgSend_queued_startObservingiCloudDriveUploadProgress(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queued_startObservingiCloudDriveUploadProgress");
}

id objc_msgSend_queued_stopObservingiCloudDriveUploadProgress(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queued_stopObservingiCloudDriveUploadProgress");
}

id objc_msgSend_raise(void *a1, const char *a2, ...)
{
  return _[a1 raise];
}

id objc_msgSend_raise_format_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "raise:format:");
}

id objc_msgSend_rangeInfo(void *a1, const char *a2, ...)
{
  return _[a1 rangeInfo];
}

id objc_msgSend_rangeOfString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfString:");
}

id objc_msgSend_readFrom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readFrom:");
}

id objc_msgSend_readStreamablePayload_reader_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readStreamablePayload:reader:error:");
}

id objc_msgSend_reason(void *a1, const char *a2, ...)
{
  return _[a1 reason];
}

id objc_msgSend_recipient(void *a1, const char *a2, ...)
{
  return _[a1 recipient];
}

id objc_msgSend_recipientGroupsAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recipientGroupsAtIndex:");
}

id objc_msgSend_recipientGroupsCount(void *a1, const char *a2, ...)
{
  return _[a1 recipientGroupsCount];
}

id objc_msgSend_recipientIDs(void *a1, const char *a2, ...)
{
  return _[a1 recipientIDs];
}

id objc_msgSend_recipientIdsAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recipientIdsAtIndex:");
}

id objc_msgSend_recipientIdsCount(void *a1, const char *a2, ...)
{
  return _[a1 recipientIdsCount];
}

id objc_msgSend_recipientPersonID(void *a1, const char *a2, ...)
{
  return _[a1 recipientPersonID];
}

id objc_msgSend_recipientPersonId(void *a1, const char *a2, ...)
{
  return _[a1 recipientPersonId];
}

id objc_msgSend_recipientPersonIdsAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recipientPersonIdsAtIndex:");
}

id objc_msgSend_recipientPersonIdsCount(void *a1, const char *a2, ...)
{
  return _[a1 recipientPersonIdsCount];
}

id objc_msgSend_recordActivity(void *a1, const char *a2, ...)
{
  return _[a1 recordActivity];
}

id objc_msgSend_recordForSyncItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recordForSyncItem:");
}

id objc_msgSend_recordID(void *a1, const char *a2, ...)
{
  return _[a1 recordID];
}

id objc_msgSend_recordIDForSyncItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recordIDForSyncItem:");
}

id objc_msgSend_recordName(void *a1, const char *a2, ...)
{
  return _[a1 recordName];
}

id objc_msgSend_recordType(void *a1, const char *a2, ...)
{
  return _[a1 recordType];
}

id objc_msgSend_recordTypeToEntityMap(void *a1, const char *a2, ...)
{
  return _[a1 recordTypeToEntityMap];
}

id objc_msgSend_recordUpdated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recordUpdated:");
}

id objc_msgSend_recordZoneID(void *a1, const char *a2, ...)
{
  return _[a1 recordZoneID];
}

id objc_msgSend_recreateDatabase(void *a1, const char *a2, ...)
{
  return _[a1 recreateDatabase];
}

id objc_msgSend_recreateDatabaseAndReinitialize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recreateDatabaseAndReinitialize:");
}

id objc_msgSend_recreateDevelopmentDatabases(void *a1, const char *a2, ...)
{
  return _[a1 recreateDevelopmentDatabases];
}

id objc_msgSend_recurringTriggerDateComponents(void *a1, const char *a2, ...)
{
  return _[a1 recurringTriggerDateComponents];
}

id objc_msgSend_referenceObjectID(void *a1, const char *a2, ...)
{
  return _[a1 referenceObjectID];
}

id objc_msgSend_registerCloudContainer(void *a1, const char *a2, ...)
{
  return _[a1 registerCloudContainer];
}

id objc_msgSend_registerDashboardAppIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerDashboardAppIfNeeded:");
}

id objc_msgSend_registerEntities(void *a1, const char *a2, ...)
{
  return _[a1 registerEntities];
}

id objc_msgSend_registerEntity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerEntity:");
}

id objc_msgSend_registerForAccountChangedDarwinNotification(void *a1, const char *a2, ...)
{
  return _[a1 registerForAccountChangedDarwinNotification];
}

id objc_msgSend_registerForLockStateChangedDarwinNotification(void *a1, const char *a2, ...)
{
  return _[a1 registerForLockStateChangedDarwinNotification];
}

id objc_msgSend_registerForNotifications(void *a1, const char *a2, ...)
{
  return _[a1 registerForNotifications];
}

id objc_msgSend_registerForTaskWithIdentifier_usingQueue_launchHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerForTaskWithIdentifier:usingQueue:launchHandler:");
}

id objc_msgSend_registerPeriodicTasksOnQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerPeriodicTasksOnQueue:");
}

id objc_msgSend_registerPushTopics(void *a1, const char *a2, ...)
{
  return _[a1 registerPushTopics];
}

id objc_msgSend_registeredEntities(void *a1, const char *a2, ...)
{
  return _[a1 registeredEntities];
}

id objc_msgSend_relativePathWithinContainer(void *a1, const char *a2, ...)
{
  return _[a1 relativePathWithinContainer];
}

id objc_msgSend_releaseResponse(void *a1, const char *a2, ...)
{
  return _[a1 releaseResponse];
}

id objc_msgSend_removeAgentForAsset_forUpload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAgentForAsset:forUpload:");
}

id objc_msgSend_removeAllObjects(void *a1, const char *a2, ...)
{
  return _[a1 removeAllObjects];
}

id objc_msgSend_removeDownloadObservers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeDownloadObservers:");
}

id objc_msgSend_removeFilePresenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeFilePresenter:");
}

id objc_msgSend_removeFromFilePresenter(void *a1, const char *a2, ...)
{
  return _[a1 removeFromFilePresenter];
}

id objc_msgSend_removeItemAtURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeItemAtURL:error:");
}

id objc_msgSend_removeLastObject(void *a1, const char *a2, ...)
{
  return _[a1 removeLastObject];
}

id objc_msgSend_removeObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObject:");
}

id objc_msgSend_removeObjectAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectAtIndex:");
}

id objc_msgSend_removeObjectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectForKey:");
}

id objc_msgSend_removeObjectsInArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectsInArray:");
}

id objc_msgSend_removeObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:");
}

id objc_msgSend_removeObserver_forKeyPath_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:forKeyPath:context:");
}

id objc_msgSend_removeObserver_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:name:object:");
}

id objc_msgSend_removeObserver_notificationName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:notificationName:");
}

id objc_msgSend_removeStateForDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeStateForDomain:");
}

id objc_msgSend_removeSubscriber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeSubscriber:");
}

id objc_msgSend_removeUploadObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeUploadObserver:");
}

id objc_msgSend_removeUploadObservers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeUploadObservers:");
}

id objc_msgSend_renewCredentialsForAccount_options_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "renewCredentialsForAccount:options:completion:");
}

id objc_msgSend_replaceEndpoints_excludeEndpointIDs_forServiceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replaceEndpoints:excludeEndpointIDs:forServiceID:");
}

id objc_msgSend_replaceObjectAtIndex_withObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replaceObjectAtIndex:withObject:");
}

id objc_msgSend_report(void *a1, const char *a2, ...)
{
  return _[a1 report];
}

id objc_msgSend_reportID(void *a1, const char *a2, ...)
{
  return _[a1 reportID];
}

id objc_msgSend_reportItemId(void *a1, const char *a2, ...)
{
  return _[a1 reportItemId];
}

id objc_msgSend_reports(void *a1, const char *a2, ...)
{
  return _[a1 reports];
}

id objc_msgSend_reportsAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportsAtIndex:");
}

id objc_msgSend_reportsCount(void *a1, const char *a2, ...)
{
  return _[a1 reportsCount];
}

id objc_msgSend_requestCompletedWith_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestCompletedWith:error:");
}

id objc_msgSend_requestContentType(void *a1, const char *a2, ...)
{
  return _[a1 requestContentType];
}

id objc_msgSend_requestData(void *a1, const char *a2, ...)
{
  return _[a1 requestData];
}

id objc_msgSend_requestItems(void *a1, const char *a2, ...)
{
  return _[a1 requestItems];
}

id objc_msgSend_requestItemsAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestItemsAtIndex:");
}

id objc_msgSend_requestItemsCount(void *a1, const char *a2, ...)
{
  return _[a1 requestItemsCount];
}

id objc_msgSend_requestStatus(void *a1, const char *a2, ...)
{
  return _[a1 requestStatus];
}

id objc_msgSend_requestWithIdentifier_content_trigger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestWithIdentifier:content:trigger:");
}

id objc_msgSend_requestZone(void *a1, const char *a2, ...)
{
  return _[a1 requestZone];
}

id objc_msgSend_requestZonesAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestZonesAtIndex:");
}

id objc_msgSend_requestZonesCount(void *a1, const char *a2, ...)
{
  return _[a1 requestZonesCount];
}

id objc_msgSend_requestedLocationIDs(void *a1, const char *a2, ...)
{
  return _[a1 requestedLocationIDs];
}

id objc_msgSend_requestedLocationIds(void *a1, const char *a2, ...)
{
  return _[a1 requestedLocationIds];
}

id objc_msgSend_requestedLocationIdsAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestedLocationIdsAtIndex:");
}

id objc_msgSend_requestedLocationIdsCount(void *a1, const char *a2, ...)
{
  return _[a1 requestedLocationIdsCount];
}

id objc_msgSend_requestedRoleID(void *a1, const char *a2, ...)
{
  return _[a1 requestedRoleID];
}

id objc_msgSend_requestedRoleId(void *a1, const char *a2, ...)
{
  return _[a1 requestedRoleId];
}

id objc_msgSend_requestedRoleType(void *a1, const char *a2, ...)
{
  return _[a1 requestedRoleType];
}

id objc_msgSend_requestor(void *a1, const char *a2, ...)
{
  return _[a1 requestor];
}

id objc_msgSend_requestorID(void *a1, const char *a2, ...)
{
  return _[a1 requestorID];
}

id objc_msgSend_requireClassMemberRole_forClassIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requireClassMemberRole:forClassIDs:");
}

id objc_msgSend_requiredClassMemberClassIDs(void *a1, const char *a2, ...)
{
  return _[a1 requiredClassMemberClassIDs];
}

id objc_msgSend_requiredClassMemberRole(void *a1, const char *a2, ...)
{
  return _[a1 requiredClassMemberRole];
}

id objc_msgSend_requiredGroupMemberGroupIDs(void *a1, const char *a2, ...)
{
  return _[a1 requiredGroupMemberGroupIDs];
}

id objc_msgSend_requiredLocationPersonIDs(void *a1, const char *a2, ...)
{
  return _[a1 requiredLocationPersonIDs];
}

id objc_msgSend_requiredLocationPrivilege(void *a1, const char *a2, ...)
{
  return _[a1 requiredLocationPrivilege];
}

id objc_msgSend_requiredLocationRoleType(void *a1, const char *a2, ...)
{
  return _[a1 requiredLocationRoleType];
}

id objc_msgSend_requiredNetworkState(void *a1, const char *a2, ...)
{
  return _[a1 requiredNetworkState];
}

id objc_msgSend_requiredOrganizationEmailDomain(void *a1, const char *a2, ...)
{
  return _[a1 requiredOrganizationEmailDomain];
}

id objc_msgSend_requiredPrivilege(void *a1, const char *a2, ...)
{
  return _[a1 requiredPrivilege];
}

id objc_msgSend_requiredPrivilegeLocationIDs(void *a1, const char *a2, ...)
{
  return _[a1 requiredPrivilegeLocationIDs];
}

id objc_msgSend_requiredRoleID(void *a1, const char *a2, ...)
{
  return _[a1 requiredRoleID];
}

id objc_msgSend_requiredRoleType(void *a1, const char *a2, ...)
{
  return _[a1 requiredRoleType];
}

id objc_msgSend_requiresAuth(void *a1, const char *a2, ...)
{
  return _[a1 requiresAuth];
}

id objc_msgSend_requiresPersonaMatch(void *a1, const char *a2, ...)
{
  return _[a1 requiresPersonaMatch];
}

id objc_msgSend_requiresValidUser(void *a1, const char *a2, ...)
{
  return _[a1 requiresValidUser];
}

id objc_msgSend_rescheduleActivityDoneTimer_attachment_tryAgainDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rescheduleActivityDoneTimer:attachment:tryAgainDate:");
}

id objc_msgSend_rescheduleHalfWayTimer_attachment_tryAgainDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rescheduleHalfWayTimer:attachment:tryAgainDate:");
}

id objc_msgSend_rescheduleOperation(void *a1, const char *a2, ...)
{
  return _[a1 rescheduleOperation];
}

id objc_msgSend_rescheduleTask_current_targetDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rescheduleTask:current:targetDate:");
}

id objc_msgSend_resetTrigger(void *a1, const char *a2, ...)
{
  return _[a1 resetTrigger];
}

id objc_msgSend_resetTriggers(void *a1, const char *a2, ...)
{
  return _[a1 resetTriggers];
}

id objc_msgSend_resetUserDefaultsIfAllowed(void *a1, const char *a2, ...)
{
  return _[a1 resetUserDefaultsIfAllowed];
}

id objc_msgSend_resolveConflictForLocalRecord_serverRecord_commonAncestorRecord_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resolveConflictForLocalRecord:serverRecord:commonAncestorRecord:");
}

id objc_msgSend_resolveMissingEntityWithObjectID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resolveMissingEntityWithObjectID:");
}

id objc_msgSend_resolvePartialErrors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resolvePartialErrors:");
}

id objc_msgSend_resourceValuesForKeys_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resourceValuesForKeys:error:");
}

id objc_msgSend_responderNote(void *a1, const char *a2, ...)
{
  return _[a1 responderNote];
}

id objc_msgSend_responderPersonID(void *a1, const char *a2, ...)
{
  return _[a1 responderPersonID];
}

id objc_msgSend_response(void *a1, const char *a2, ...)
{
  return _[a1 response];
}

id objc_msgSend_responseStatusError(void *a1, const char *a2, ...)
{
  return _[a1 responseStatusError];
}

id objc_msgSend_responseTTLSeconds(void *a1, const char *a2, ...)
{
  return _[a1 responseTTLSeconds];
}

id objc_msgSend_responseZone(void *a1, const char *a2, ...)
{
  return _[a1 responseZone];
}

id objc_msgSend_restoreCurrentDefaults(void *a1, const char *a2, ...)
{
  return _[a1 restoreCurrentDefaults];
}

id objc_msgSend_resultWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resultWithCompletion:");
}

id objc_msgSend_resultsWillExpire(void *a1, const char *a2, ...)
{
  return _[a1 resultsWillExpire];
}

id objc_msgSend_resume(void *a1, const char *a2, ...)
{
  return _[a1 resume];
}

id objc_msgSend_retryDelayForServerBusyError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "retryDelayForServerBusyError:");
}

id objc_msgSend_reverseObjectEnumerator(void *a1, const char *a2, ...)
{
  return _[a1 reverseObjectEnumerator];
}

id objc_msgSend_reviewDueHandoutsTrigger(void *a1, const char *a2, ...)
{
  return _[a1 reviewDueHandoutsTrigger];
}

id objc_msgSend_revisedSubmissionTrigger(void *a1, const char *a2, ...)
{
  return _[a1 revisedSubmissionTrigger];
}

id objc_msgSend_revisionNeededTrigger(void *a1, const char *a2, ...)
{
  return _[a1 revisionNeededTrigger];
}

id objc_msgSend_rightExpression(void *a1, const char *a2, ...)
{
  return _[a1 rightExpression];
}

id objc_msgSend_ring(void *a1, const char *a2, ...)
{
  return _[a1 ring];
}

id objc_msgSend_role(void *a1, const char *a2, ...)
{
  return _[a1 role];
}

id objc_msgSend_roleId(void *a1, const char *a2, ...)
{
  return _[a1 roleId];
}

id objc_msgSend_roleLocations(void *a1, const char *a2, ...)
{
  return _[a1 roleLocations];
}

id objc_msgSend_roleLocationsAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "roleLocationsAtIndex:");
}

id objc_msgSend_roleLocationsCount(void *a1, const char *a2, ...)
{
  return _[a1 roleLocationsCount];
}

id objc_msgSend_roleType(void *a1, const char *a2, ...)
{
  return _[a1 roleType];
}

id objc_msgSend_roles(void *a1, const char *a2, ...)
{
  return _[a1 roles];
}

id objc_msgSend_rolesAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rolesAtIndex:");
}

id objc_msgSend_rolesCount(void *a1, const char *a2, ...)
{
  return _[a1 rolesCount];
}

id objc_msgSend_run(void *a1, const char *a2, ...)
{
  return _[a1 run];
}

id objc_msgSend_sandboxExtensionTokenForProcess_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sandboxExtensionTokenForProcess:");
}

id objc_msgSend_sanitizeSpecForABMMAID(void *a1, const char *a2, ...)
{
  return _[a1 sanitizeSpecForABMMAID];
}

id objc_msgSend_sanitizeSpecForEDUMAID(void *a1, const char *a2, ...)
{
  return _[a1 sanitizeSpecForEDUMAID];
}

id objc_msgSend_saveAndSyncObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveAndSyncObjects:");
}

id objc_msgSend_saveClientConfig_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveClientConfig:");
}

id objc_msgSend_saveEndpointConfig_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveEndpointConfig:");
}

id objc_msgSend_saveObjects_saveResponse_isRemoteClient_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveObjects:saveResponse:isRemoteClient:completion:");
}

id objc_msgSend_savePolicy(void *a1, const char *a2, ...)
{
  return _[a1 savePolicy];
}

id objc_msgSend_saveServiceConfig_forEDUMAID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveServiceConfig:forEDUMAID:");
}

id objc_msgSend_saveUpdatedConfig(void *a1, const char *a2, ...)
{
  return _[a1 saveUpdatedConfig];
}

id objc_msgSend_scanUnsignedLongLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scanUnsignedLongLong:");
}

id objc_msgSend_scannerWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scannerWithString:");
}

id objc_msgSend_schedule(void *a1, const char *a2, ...)
{
  return _[a1 schedule];
}

id objc_msgSend_scheduleAction(void *a1, const char *a2, ...)
{
  return _[a1 scheduleAction];
}

id objc_msgSend_scheduleActivityDone_appUsage_timeInterval_saveTrigger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduleActivityDone:appUsage:timeInterval:saveTrigger:");
}

id objc_msgSend_scheduleCheckTimerForNextTriggerTime(void *a1, const char *a2, ...)
{
  return _[a1 scheduleCheckTimerForNextTriggerTime];
}

id objc_msgSend_scheduleCheckTimerForTimeInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduleCheckTimerForTimeInterval:");
}

id objc_msgSend_scheduleDate(void *a1, const char *a2, ...)
{
  return _[a1 scheduleDate];
}

id objc_msgSend_scheduleHalfWayDoneNotification_attachmentID_saveTrigger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduleHalfWayDoneNotification:attachmentID:saveTrigger:");
}

id objc_msgSend_scheduleHalfWayNotificationIfNeeded_appUsage_isTryAgain_tryAgainDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduleHalfWayNotificationIfNeeded:appUsage:isTryAgain:tryAgainDate:");
}

id objc_msgSend_scheduleMarkDoneIfNeeded_appUsage_isTryAgain_tryAgainDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduleMarkDoneIfNeeded:appUsage:isTryAgain:tryAgainDate:");
}

id objc_msgSend_scheduleRecordsToSave_recordIDsToDelete_savePolicy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduleRecordsToSave:recordIDsToDelete:savePolicy:");
}

id objc_msgSend_scheduleUpdateStatus(void *a1, const char *a2, ...)
{
  return _[a1 scheduleUpdateStatus];
}

id objc_msgSend_scheduledEntityType(void *a1, const char *a2, ...)
{
  return _[a1 scheduledEntityType];
}

id objc_msgSend_scheduledEvent(void *a1, const char *a2, ...)
{
  return _[a1 scheduledEvent];
}

id objc_msgSend_schedulerQueue(void *a1, const char *a2, ...)
{
  return _[a1 schedulerQueue];
}

id objc_msgSend_schoolworkSyncStatus(void *a1, const char *a2, ...)
{
  return _[a1 schoolworkSyncStatus];
}

id objc_msgSend_schoolworkUbiquitousContainerURL(void *a1, const char *a2, ...)
{
  return _[a1 schoolworkUbiquitousContainerURL];
}

id objc_msgSend_score(void *a1, const char *a2, ...)
{
  return _[a1 score];
}

id objc_msgSend_scoreValue(void *a1, const char *a2, ...)
{
  return _[a1 scoreValue];
}

id objc_msgSend_searchCacheTtl(void *a1, const char *a2, ...)
{
  return _[a1 searchCacheTtl];
}

id objc_msgSend_searchColumnName(void *a1, const char *a2, ...)
{
  return _[a1 searchColumnName];
}

id objc_msgSend_searchFor_predicate_sortDescriptors_limit_offset_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchFor:predicate:sortDescriptors:limit:offset:block:");
}

id objc_msgSend_searchLimitForGroupMemberSearch(void *a1, const char *a2, ...)
{
  return _[a1 searchLimitForGroupMemberSearch];
}

id objc_msgSend_searchRequestZonesAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchRequestZonesAtIndex:");
}

id objc_msgSend_searchRequestZonesCount(void *a1, const char *a2, ...)
{
  return _[a1 searchRequestZonesCount];
}

id objc_msgSend_searchSpec(void *a1, const char *a2, ...)
{
  return _[a1 searchSpec];
}

id objc_msgSend_searchString(void *a1, const char *a2, ...)
{
  return _[a1 searchString];
}

id objc_msgSend_searchText(void *a1, const char *a2, ...)
{
  return _[a1 searchText];
}

id objc_msgSend_searchableColumnNames(void *a1, const char *a2, ...)
{
  return _[a1 searchableColumnNames];
}

id objc_msgSend_secondsFromGMT(void *a1, const char *a2, ...)
{
  return _[a1 secondsFromGMT];
}

id objc_msgSend_seekToEndReturningOffset_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "seekToEndReturningOffset:error:");
}

id objc_msgSend_select_identity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "select:identity:");
}

id objc_msgSend_select_where_bindings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "select:where:bindings:");
}

id objc_msgSend_selectAll_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectAll:block:");
}

id objc_msgSend_selectAll_where_bindings_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectAll:where:bindings:block:");
}

id objc_msgSend_selectAll_where_orderBy_bindings_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectAll:where:orderBy:bindings:block:");
}

id objc_msgSend_selectAll_where_orderBy_limit_offset_bindings_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectAll:where:orderBy:limit:offset:bindings:block:");
}

id objc_msgSend_selectColumns_of_where_orderBy_limit_offset_bindings_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectColumns:of:where:orderBy:limit:offset:bindings:block:");
}

id objc_msgSend_selectedIndex(void *a1, const char *a2, ...)
{
  return _[a1 selectedIndex];
}

id objc_msgSend_sendToCloudKit(void *a1, const char *a2, ...)
{
  return _[a1 sendToCloudKit];
}

id objc_msgSend_sendToOnramp(void *a1, const char *a2, ...)
{
  return _[a1 sendToOnramp];
}

id objc_msgSend_senderPersonID(void *a1, const char *a2, ...)
{
  return _[a1 senderPersonID];
}

id objc_msgSend_senderPersonId(void *a1, const char *a2, ...)
{
  return _[a1 senderPersonId];
}

id objc_msgSend_serverAlerts(void *a1, const char *a2, ...)
{
  return _[a1 serverAlerts];
}

id objc_msgSend_serverAlertsAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serverAlertsAtIndex:");
}

id objc_msgSend_serverAlertsCount(void *a1, const char *a2, ...)
{
  return _[a1 serverAlertsCount];
}

id objc_msgSend_serverChangedRecord_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serverChangedRecord:");
}

id objc_msgSend_serverDeletedRecordWithID_type_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serverDeletedRecordWithID:type:");
}

id objc_msgSend_serverETag(void *a1, const char *a2, ...)
{
  return _[a1 serverETag];
}

id objc_msgSend_serverExecutionID(void *a1, const char *a2, ...)
{
  return _[a1 serverExecutionID];
}

id objc_msgSend_serverPreferredPushEnvironmentWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serverPreferredPushEnvironmentWithCompletionHandler:");
}

id objc_msgSend_serverRequestHeaders(void *a1, const char *a2, ...)
{
  return _[a1 serverRequestHeaders];
}

id objc_msgSend_serverRequestHeadersAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serverRequestHeadersAtIndex:");
}

id objc_msgSend_serverRequestHeadersCount(void *a1, const char *a2, ...)
{
  return _[a1 serverRequestHeadersCount];
}

id objc_msgSend_serverStatus(void *a1, const char *a2, ...)
{
  return _[a1 serverStatus];
}

id objc_msgSend_serviceBagAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceBagAtIndex:");
}

id objc_msgSend_serviceBagsCount(void *a1, const char *a2, ...)
{
  return _[a1 serviceBagsCount];
}

id objc_msgSend_serviceConfig(void *a1, const char *a2, ...)
{
  return _[a1 serviceConfig];
}

id objc_msgSend_serviceId(void *a1, const char *a2, ...)
{
  return _[a1 serviceId];
}

id objc_msgSend_sessionDescription(void *a1, const char *a2, ...)
{
  return _[a1 sessionDescription];
}

id objc_msgSend_sessionFailedWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionFailedWithError:");
}

id objc_msgSend_sessionTaskForRequest_withData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionTaskForRequest:withData:");
}

id objc_msgSend_sessionWithConfiguration_delegate_delegateQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionWithConfiguration:delegate:delegateQueue:");
}

id objc_msgSend_set(void *a1, const char *a2, ...)
{
  return _[a1 set];
}

id objc_msgSend_setAccountIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccountIdentifier:");
}

id objc_msgSend_setAccountOverrideInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccountOverrideInfo:");
}

id objc_msgSend_setAccountPersonInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccountPersonInfo:");
}

id objc_msgSend_setAccountPersonaUniqueIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccountPersonaUniqueIdentifier:");
}

id objc_msgSend_setAccountStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccountStatus:");
}

id objc_msgSend_setAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAction:");
}

id objc_msgSend_setActionFlags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActionFlags:");
}

id objc_msgSend_setActivityID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivityID:");
}

id objc_msgSend_setActivityId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivityId:");
}

id objc_msgSend_setActivityInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivityInfo:");
}

id objc_msgSend_setActivityItemInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivityItemInfo:");
}

id objc_msgSend_setActivityState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivityState:");
}

id objc_msgSend_setActivityState_forAttachment_forHandout_senderPersonID_withStates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivityState:forAttachment:forHandout:senderPersonID:withStates:");
}

id objc_msgSend_setAdditionalActivityReports_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdditionalActivityReports:");
}

id objc_msgSend_setAdditionalReportItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdditionalReportItems:");
}

id objc_msgSend_setAdminNote_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdminNote:");
}

id objc_msgSend_setAdminRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdminRequest:");
}

id objc_msgSend_setAdminRequestAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdminRequestAccount:");
}

id objc_msgSend_setAdminRequestAccountId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdminRequestAccountId:");
}

id objc_msgSend_setAdminRequestAccounts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdminRequestAccounts:");
}

id objc_msgSend_setAdminRequestId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdminRequestId:");
}

id objc_msgSend_setAggregateDataAsset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAggregateDataAsset:");
}

id objc_msgSend_setAggregateType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAggregateType:");
}

id objc_msgSend_setAlertId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlertId:");
}

id objc_msgSend_setAlertType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlertType:");
}

id objc_msgSend_setAllowSharingOutsideOrg_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowSharingOutsideOrg:");
}

id objc_msgSend_setAllowedUnits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowedUnits:");
}

id objc_msgSend_setAllowsCellularAccess_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsCellularAccess:");
}

id objc_msgSend_setAllowsMultimedia_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsMultimedia:");
}

id objc_msgSend_setAnswerFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnswerFormat:");
}

id objc_msgSend_setAnswerFormatObjectId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnswerFormatObjectId:");
}

id objc_msgSend_setAnswerFormatType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnswerFormatType:");
}

id objc_msgSend_setAnswerType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnswerType:");
}

id objc_msgSend_setAppBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppBundleIdentifier:");
}

id objc_msgSend_setAppIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppIdentifier:");
}

id objc_msgSend_setAppIdentifiersInRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppIdentifiersInRequest:");
}

id objc_msgSend_setAppName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppName:");
}

id objc_msgSend_setAppStoreIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppStoreIdentifier:");
}

id objc_msgSend_setAppleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppleID:");
}

id objc_msgSend_setAppleId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppleId:");
}

id objc_msgSend_setAppleInternalHeadersForRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppleInternalHeadersForRequest:");
}

id objc_msgSend_setApplicationBundleIdentifierOverrideForNetworkAttribution_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setApplicationBundleIdentifierOverrideForNetworkAttribution:");
}

id objc_msgSend_setApplicationName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setApplicationName:");
}

id objc_msgSend_setApproval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setApproval:");
}

id objc_msgSend_setApprovalStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setApprovalStatus:");
}

id objc_msgSend_setArchivedAnswerFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setArchivedAnswerFormat:");
}

id objc_msgSend_setAssessment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssessment:");
}

id objc_msgSend_setAsset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAsset:");
}

id objc_msgSend_setAssetFieldNames_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssetFieldNames:");
}

id objc_msgSend_setAssetURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssetURL:");
}

id objc_msgSend_setAssetUrl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssetUrl:");
}

id objc_msgSend_setAssignable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssignable:");
}

id objc_msgSend_setAttachment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttachment:");
}

id objc_msgSend_setAttachmentDetails_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttachmentDetails:");
}

id objc_msgSend_setAttachmentEventDetails_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttachmentEventDetails:");
}

id objc_msgSend_setAttachmentID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttachmentID:");
}

id objc_msgSend_setAttachmentId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttachmentId:");
}

id objc_msgSend_setAttachmentType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttachmentType:");
}

id objc_msgSend_setAttachmentUpdatedTrigger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttachmentUpdatedTrigger:");
}

id objc_msgSend_setAttachments_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttachments:");
}

id objc_msgSend_setAttributes_ofItemAtPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttributes:ofItemAtPath:error:");
}

id objc_msgSend_setAuthHeadersForRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAuthHeadersForRequest:");
}

id objc_msgSend_setAuthStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAuthStatus:");
}

id objc_msgSend_setAuthStatus_forIdentifier_statusID_parentStatusID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAuthStatus:forIdentifier:statusID:parentStatusID:");
}

id objc_msgSend_setAuthorID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAuthorID:");
}

id objc_msgSend_setAxmAccountStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAxmAccountStatus:");
}

id objc_msgSend_setBaseAsset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBaseAsset:");
}

id objc_msgSend_setBaseMarkupAsset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBaseMarkupAsset:");
}

id objc_msgSend_setBatchPointer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBatchPointer:");
}

id objc_msgSend_setBinaryValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBinaryValue:");
}

id objc_msgSend_setBody_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBody:");
}

id objc_msgSend_setBootstrapped_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBootstrapped:");
}

id objc_msgSend_setBrItemID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBrItemID:");
}

id objc_msgSend_setBrOwnerName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBrOwnerName:");
}

id objc_msgSend_setBrShareName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBrShareName:");
}

id objc_msgSend_setBrZoneName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBrZoneName:");
}

id objc_msgSend_setBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBundleIdentifier:");
}

id objc_msgSend_setByAddingObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setByAddingObjectsFromArray:");
}

id objc_msgSend_setByAddingObjectsFromSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setByAddingObjectsFromSet:");
}

id objc_msgSend_setCalendar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCalendar:");
}

id objc_msgSend_setCatalogEnvironment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCatalogEnvironment:");
}

id objc_msgSend_setChangeToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setChangeToken:");
}

id objc_msgSend_setChildObjectID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setChildObjectID:");
}

id objc_msgSend_setCkOwnerName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCkOwnerName:");
}

id objc_msgSend_setCkShareOwnerName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCkShareOwnerName:");
}

id objc_msgSend_setCkShareRecordName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCkShareRecordName:");
}

id objc_msgSend_setCkShareZoneName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCkShareZoneName:");
}

id objc_msgSend_setCkUuid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCkUuid:");
}

id objc_msgSend_setCkZoneName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCkZoneName:");
}

id objc_msgSend_setClassID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClassID:");
}

id objc_msgSend_setClassId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClassId:");
}

id objc_msgSend_setClassIds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClassIds:");
}

id objc_msgSend_setClassInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClassInfo:");
}

id objc_msgSend_setClassMember_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClassMember:");
}

id objc_msgSend_setClassMemberId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClassMemberId:");
}

id objc_msgSend_setClassName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClassName:");
}

id objc_msgSend_setClassZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClassZone:");
}

id objc_msgSend_setClassroomClassicAdHocModeEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClassroomClassicAdHocModeEnabled:");
}

id objc_msgSend_setClientConfig_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientConfig:");
}

id objc_msgSend_setClientPersonaUniqueIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientPersonaUniqueIdentifier:");
}

id objc_msgSend_setClsErrorCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClsErrorCode:");
}

id objc_msgSend_setCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCode:");
}

id objc_msgSend_setCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCollection:");
}

id objc_msgSend_setCollectionId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCollectionId:");
}

id objc_msgSend_setCollectionItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCollectionItem:");
}

id objc_msgSend_setCollectionItemLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCollectionItemLocation:");
}

id objc_msgSend_setColorName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setColorName:");
}

id objc_msgSend_setCompareOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompareOptions:");
}

id objc_msgSend_setCompleted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompleted:");
}

id objc_msgSend_setCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletion:");
}

id objc_msgSend_setCompletionAndLockedStatusForStateChange_andStateChangePayload_forAttachment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletionAndLockedStatusForStateChange:andStateChangePayload:forAttachment:");
}

id objc_msgSend_setCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletionBlock:");
}

id objc_msgSend_setCompletionStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletionStatus:");
}

id objc_msgSend_setCompletionStatus_forAttachment_locked_dateCompleted_dateModified_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletionStatus:forAttachment:locked:dateCompleted:dateModified:");
}

id objc_msgSend_setConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfiguration:");
}

id objc_msgSend_setConflictingPersonIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConflictingPersonIDs:");
}

id objc_msgSend_setContentDownloadUrl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentDownloadUrl:");
}

id objc_msgSend_setContentDownloadUrlExpiration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentDownloadUrlExpiration:");
}

id objc_msgSend_setContentFileName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentFileName:");
}

id objc_msgSend_setContentStoreIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentStoreIdentifier:");
}

id objc_msgSend_setContentUtType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentUtType:");
}

id objc_msgSend_setContents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContents:");
}

id objc_msgSend_setContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContext:");
}

id objc_msgSend_setContextAppBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContextAppBundleIdentifier:");
}

id objc_msgSend_setContextCustomTypeName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContextCustomTypeName:");
}

id objc_msgSend_setContextID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContextID:");
}

id objc_msgSend_setContextIdentifierPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContextIdentifierPath:");
}

id objc_msgSend_setContextObjectIdPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContextObjectIdPath:");
}

id objc_msgSend_setContextPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContextPath:");
}

id objc_msgSend_setContextPaths_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContextPaths:");
}

id objc_msgSend_setContextSourceIsCatalog_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContextSourceIsCatalog:");
}

id objc_msgSend_setContextStableObjectID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContextStableObjectID:");
}

id objc_msgSend_setContextStableObjectIdPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContextStableObjectIdPath:");
}

id objc_msgSend_setContextSummary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContextSummary:");
}

id objc_msgSend_setContextTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContextTitle:");
}

id objc_msgSend_setContextTopic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContextTopic:");
}

id objc_msgSend_setContextType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContextType:");
}

id objc_msgSend_setContextUniversalLink_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContextUniversalLink:");
}

id objc_msgSend_setContinuousSliderAnswerValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContinuousSliderAnswerValue:");
}

id objc_msgSend_setContinuousSliderValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContinuousSliderValue:");
}

id objc_msgSend_setCreatedBy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCreatedBy:");
}

id objc_msgSend_setCreatedByFamilyName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCreatedByFamilyName:");
}

id objc_msgSend_setCreatedByGivenName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCreatedByGivenName:");
}

id objc_msgSend_setCriteria_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCriteria:");
}

id objc_msgSend_setCurrentActivityID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentActivityID:");
}

id objc_msgSend_setCurrentDB_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentDB:");
}

id objc_msgSend_setCursor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCursor:");
}

id objc_msgSend_setCustomClassName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCustomClassName:");
}

id objc_msgSend_setCustomTypeName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCustomTypeName:");
}

id objc_msgSend_setData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setData:");
}

id objc_msgSend_setDatabase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDatabase:");
}

id objc_msgSend_setDateClassCreated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateClassCreated:");
}

id objc_msgSend_setDateCompleted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateCompleted:");
}

id objc_msgSend_setDateCreated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateCreated:");
}

id objc_msgSend_setDateDue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateDue:");
}

id objc_msgSend_setDateExpires_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateExpires:");
}

id objc_msgSend_setDateLastCompleted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateLastCompleted:");
}

id objc_msgSend_setDateLastModified_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateLastModified:");
}

id objc_msgSend_setDateLastReviewed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateLastReviewed:");
}

id objc_msgSend_setDateOfPublication_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateOfPublication:");
}

id objc_msgSend_setDateValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateValue:");
}

id objc_msgSend_setDefaultButtonInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDefaultButtonInfo:");
}

id objc_msgSend_setDefaultValue_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDefaultValue:forKey:");
}

id objc_msgSend_setDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelay:");
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelegate:");
}

id objc_msgSend_setDetails_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDetails:");
}

id objc_msgSend_setDevMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDevMode:");
}

id objc_msgSend_setDevModeURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDevModeURL:");
}

id objc_msgSend_setDidExecute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDidExecute:");
}

id objc_msgSend_setDiscretionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscretionary:");
}

id objc_msgSend_setDisplayName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayName:");
}

id objc_msgSend_setDisplayOrder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayOrder:");
}

id objc_msgSend_setDisplayRoles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayRoles:");
}

id objc_msgSend_setDisplayedCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayedCount:");
}

id objc_msgSend_setDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDomain:");
}

id objc_msgSend_setDomainVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDomainVersion:");
}

id objc_msgSend_setDoubleValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDoubleValue:");
}

id objc_msgSend_setDownloaded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDownloaded:");
}

id objc_msgSend_setDueDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDueDate:");
}

id objc_msgSend_setDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDuration:");
}

id objc_msgSend_setDurationInSeconds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDurationInSeconds:");
}

id objc_msgSend_setDurationSeconds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDurationSeconds:");
}

id objc_msgSend_setEmail_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEmail:");
}

id objc_msgSend_setEmailAddress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEmailAddress:");
}

id objc_msgSend_setEmailDomains_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEmailDomains:");
}

id objc_msgSend_setEnd_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnd:");
}

id objc_msgSend_setEndDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEndDate:");
}

id objc_msgSend_setEnforceImmutability_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnforceImmutability:");
}

id objc_msgSend_setEntityMeta_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEntityMeta:");
}

id objc_msgSend_setEtag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEtag:");
}

id objc_msgSend_setEventDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEventDate:");
}

id objc_msgSend_setEventDetailsType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEventDetailsType:");
}

id objc_msgSend_setEventRecipientId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEventRecipientId:");
}

id objc_msgSend_setEventType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEventType:");
}

id objc_msgSend_setExecuting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExecuting:");
}

id objc_msgSend_setExecutionId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExecutionId:");
}

id objc_msgSend_setExpiration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExpiration:");
}

id objc_msgSend_setExpirationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExpirationHandler:");
}

id objc_msgSend_setExportedInterface_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExportedInterface:");
}

id objc_msgSend_setExportedObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExportedObject:");
}

id objc_msgSend_setExtraInfos_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExtraInfos:");
}

id objc_msgSend_setFamilyName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFamilyName:");
}

id objc_msgSend_setFederatedAccount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFederatedAccount:");
}

id objc_msgSend_setFetchAllChanges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFetchAllChanges:");
}

id objc_msgSend_setFetchRecordZonesCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFetchRecordZonesCompletionBlock:");
}

id objc_msgSend_setFetchSubscriptionCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFetchSubscriptionCompletionBlock:");
}

id objc_msgSend_setFieldName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFieldName:");
}